navit-gps/navit,https://github.com/navit-gps/navit,90,2016-03-06T09:41:17Z,2016-04-06T17:20:11Z,2016-04-06T17:20:15Z,MERGED,True,133,58,1,https://github.com/jandegr,Layoutswitcher,3,[],https://github.com/navit-gps/navit/pull/90,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/90,"A wider usage version of the layout switch command in #83
sample usage as a command in navit.xml
command=""switch_layout_day_night(&quot;manual_day&quot;)""

see the code for more usage cases","A wider usage version of the layout switch command in #83
sample usage as a command in navit.xml
command=""switch_layout_day_night(&quot;manual_day&quot;)""

see the code for more usage cases",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,90,2016-03-06T09:41:17Z,2016-04-06T17:20:11Z,2016-04-06T17:20:15Z,MERGED,True,133,58,1,https://github.com/jandegr,Layoutswitcher,3,[],https://github.com/navit-gps/navit/pull/90,https://github.com/pohlinkzei,2,https://github.com/navit-gps/navit/pull/90#issuecomment-194847767,"A wider usage version of the layout switch command in #83
sample usage as a command in navit.xml
command=""switch_layout_day_night(&quot;manual_day&quot;)""

see the code for more usage cases","Would you mind making the auto_switch parameter int? I'd need a third state for this. :)
That would make it useful for the GPIO-Switcher:
auto_switch == 0 -> off, no switching at all
auto_switch == 1 -> normal, switch on sunrise and sunset.
auto_switch == 2 -> gpio, switch to night_layout if GPIO is HIGH
auto_switch == 3 -> manual gpio*
*) That is my master use-case: The GPIO swticher plugin cares about the switching unless the user presses the toggle_layout osd button. If so, the layout will change once and on the next gpio change (the layout has now the according gpio (e.g. gpio=1 and night layout)) the gpio switcher takes control back.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,90,2016-03-06T09:41:17Z,2016-04-06T17:20:11Z,2016-04-06T17:20:15Z,MERGED,True,133,58,1,https://github.com/jandegr,Layoutswitcher,3,[],https://github.com/navit-gps/navit/pull/90,https://github.com/jandegr,3,https://github.com/navit-gps/navit/pull/90#issuecomment-197884554,"A wider usage version of the layout switch command in #83
sample usage as a command in navit.xml
command=""switch_layout_day_night(&quot;manual_day&quot;)""

see the code for more usage cases","Hi, I used the same signature as the other commands, that seemed safest to me.
So you'll have to call it with an attr. anyway and then switching to an int attr. would be nothing more than introducing a few more of Navit's famous magic numbers. As for your GPIO logic itself, I think that belongs in your GPIO plugin instead of in navit.c.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,90,2016-03-06T09:41:17Z,2016-04-06T17:20:11Z,2016-04-06T17:20:15Z,MERGED,True,133,58,1,https://github.com/jandegr,Layoutswitcher,3,[],https://github.com/navit-gps/navit/pull/90,https://github.com/pohlinkzei,4,https://github.com/navit-gps/navit/pull/90#issuecomment-197887891,"A wider usage version of the layout switch command in #83
sample usage as a command in navit.xml
command=""switch_layout_day_night(&quot;manual_day&quot;)""

see the code for more usage cases","Sure. The simple solution woild be to define ""switch on sunset/sunrise"" as 0 and manual to 1. Other states can be safely controlled by plugins without affecting navit.c
See this, this and of course this for explanation. Finally three states for the modes are enough.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,90,2016-03-06T09:41:17Z,2016-04-06T17:20:11Z,2016-04-06T17:20:15Z,MERGED,True,133,58,1,https://github.com/jandegr,Layoutswitcher,3,[],https://github.com/navit-gps/navit/pull/90,https://github.com/pohlinkzei,5,https://github.com/navit-gps/navit/pull/90#issuecomment-206472743,"A wider usage version of the layout switch command in #83
sample usage as a command in navit.xml
command=""switch_layout_day_night(&quot;manual_day&quot;)""

see the code for more usage cases",I've been testting the layoutswitcher the last days as is. And it works like charm!,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,91,2016-03-21T18:41:04Z,2016-03-21T18:51:16Z,2020-08-18T11:38:19Z,MERGED,True,4,4,1,https://github.com/pgrandin,Automatic translation import,1,['i18n'],https://github.com/navit-gps/navit/pull/91,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/91,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,92,2016-03-21T19:06:23Z,2016-03-22T17:50:48Z,2020-08-18T11:38:20Z,MERGED,True,8,8,1,https://github.com/pgrandin,Automatic translation import,1,['i18n'],https://github.com/navit-gps/navit/pull/92,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/92,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,93,2016-04-01T21:36:49Z,2016-04-01T21:39:28Z,2020-08-18T11:38:20Z,MERGED,True,39,35,1,https://github.com/pgrandin,Automatic translation import,1,['i18n'],https://github.com/navit-gps/navit/pull/93,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/93,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,94,2016-04-04T21:36:17Z,2016-04-04T21:37:34Z,2020-08-18T11:38:20Z,MERGED,True,16,15,1,https://github.com/pgrandin,Automatic translation import,1,['i18n'],https://github.com/navit-gps/navit/pull/94,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/94,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,95,2016-04-27T19:40:18Z,2016-06-14T20:52:50Z,2016-06-15T04:24:42Z,MERGED,True,15,1,1,https://github.com/pohlinkzei,Pause the autozoom feature when zoom_in() or zoom_out() is called,2,[],https://github.com/navit-gps/navit/pull/95,https://github.com/pohlinkzei,1,https://github.com/navit-gps/navit/pull/95,"This PR adds the feature to zoom out, look around and get back to autozoom after 10 gps updates. This will work with zoom in, too.","This PR adds the feature to zoom out, look around and get back to autozoom after 10 gps updates. This will work with zoom in, too.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,95,2016-04-27T19:40:18Z,2016-06-14T20:52:50Z,2016-06-15T04:24:42Z,MERGED,True,15,1,1,https://github.com/pohlinkzei,Pause the autozoom feature when zoom_in() or zoom_out() is called,2,[],https://github.com/navit-gps/navit/pull/95,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/95#issuecomment-226012623,"This PR adds the feature to zoom out, look around and get back to autozoom after 10 gps updates. This will work with zoom in, too.",Looks good to me. Thank you @pohlinkzei !,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,96,2016-04-30T19:55:41Z,2016-05-01T18:19:54Z,2020-08-18T11:38:20Z,MERGED,True,2747,0,1,https://github.com/pgrandin,Automatic translation import,1,['i18n'],https://github.com/navit-gps/navit/pull/96,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/96,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,97,2016-05-10T21:02:20Z,2016-05-10T22:12:20Z,2020-08-18T11:38:21Z,MERGED,True,9,8,1,https://github.com/pgrandin,Automatic translation import,1,['i18n'],https://github.com/navit-gps/navit/pull/97,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/97,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,98,2016-05-10T21:03:16Z,2016-05-10T22:12:52Z,2020-08-18T11:38:21Z,MERGED,True,10,10,1,https://github.com/pgrandin,Automatic translation import,1,['i18n'],https://github.com/navit-gps/navit/pull/98,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/98,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,99,2016-05-20T20:38:22Z,2016-05-28T23:18:03Z,2020-08-18T11:38:21Z,MERGED,True,117,111,1,https://github.com/pgrandin,Automatic translation import,1,['i18n'],https://github.com/navit-gps/navit/pull/99,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/99,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,100,2016-06-06T03:00:47Z,2016-06-21T23:30:32Z,2020-08-18T12:08:44Z,CLOSED,False,42,33,1,https://github.com/httpdss,Updated spanish translations for Navit,1,['i18n'],https://github.com/navit-gps/navit/pull/100,https://github.com/httpdss,1,https://github.com/navit-gps/navit/pull/100,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,100,2016-06-06T03:00:47Z,2016-06-21T23:30:32Z,2020-08-18T12:08:44Z,CLOSED,False,42,33,1,https://github.com/httpdss,Updated spanish translations for Navit,1,['i18n'],https://github.com/navit-gps/navit/pull/100,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/100#issuecomment-227596430,,"Thank you for your contribution @httpdss !
We do not merge translation directly from PR though, since we use launchpad ( https://translations.launchpad.net/navit ) to manage our translations. I imported your .po file in launchpad and it should be automatically merged in the next hours. It will then be automatically reimported in the trunk.
While this might seems tedious, most of the process is automated, and it makes it easier to leverage community-based translations.
I will close this PR but feel free to reopen and ask if you have any question! Thanks again for your help!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,100,2016-06-06T03:00:47Z,2016-06-21T23:30:32Z,2020-08-18T12:08:44Z,CLOSED,False,42,33,1,https://github.com/httpdss,Updated spanish translations for Navit,1,['i18n'],https://github.com/navit-gps/navit/pull/100,https://github.com/pgrandin,3,https://github.com/navit-gps/navit/pull/100#issuecomment-227602709,,"Your changes have been merged in 046d5b8
Thanks again!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,100,2016-06-06T03:00:47Z,2016-06-21T23:30:32Z,2020-08-18T12:08:44Z,CLOSED,False,42,33,1,https://github.com/httpdss,Updated spanish translations for Navit,1,['i18n'],https://github.com/navit-gps/navit/pull/100,https://github.com/httpdss,4,https://github.com/navit-gps/navit/pull/100#issuecomment-233153983,,"@pgrandin excellent! Didnt know about that translation got handled via launchpad. Good to know it has been merged, thx!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,101,2016-06-13T20:34:44Z,2018-02-06T11:20:51Z,2018-04-13T07:26:59Z,CLOSED,False,43,0,2,https://github.com/pohlinkzei,Add an Uninstall target to remove navit from the (linux) system,7,[],https://github.com/navit-gps/navit/pull/101,https://github.com/pohlinkzei,1,https://github.com/navit-gps/navit/pull/101,"Hi,
i was annoyed from the need to remove the navit dir after sudo make install, so I googled an uninstall target for cmake and added it to our cmake.
I have no possibility to test this on other systems than linux, so I reduced it to that.
To test: just pull, make, sudo make install and then sudo make uninstall and be happy to have a clean install directory for the test or development of another branch.","Hi,
i was annoyed from the need to remove the navit dir after sudo make install, so I googled an uninstall target for cmake and added it to our cmake.
I have no possibility to test this on other systems than linux, so I reduced it to that.
To test: just pull, make, sudo make install and then sudo make uninstall and be happy to have a clean install directory for the test or development of another branch.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,101,2016-06-13T20:34:44Z,2018-02-06T11:20:51Z,2018-04-13T07:26:59Z,CLOSED,False,43,0,2,https://github.com/pohlinkzei,Add an Uninstall target to remove navit from the (linux) system,7,[],https://github.com/navit-gps/navit/pull/101,https://github.com/pohlinkzei,2,https://github.com/navit-gps/navit/pull/101#issuecomment-297968146,"Hi,
i was annoyed from the need to remove the navit dir after sudo make install, so I googled an uninstall target for cmake and added it to our cmake.
I have no possibility to test this on other systems than linux, so I reduced it to that.
To test: just pull, make, sudo make install and then sudo make uninstall and be happy to have a clean install directory for the test or development of another branch.","This is an approach to get the requested changes. But it does not work! If noone else can fix this issue, I will drop the PR. It is not important enough for me.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,102,2016-06-21T22:54:22Z,2016-06-21T22:56:09Z,2020-08-18T11:38:21Z,MERGED,True,8,8,1,https://github.com/pgrandin,Automatic translation import,1,['i18n'],https://github.com/navit-gps/navit/pull/102,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/102,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,103,2016-06-21T22:58:00Z,2016-06-21T22:59:30Z,2020-08-18T11:38:21Z,MERGED,True,17,13,1,https://github.com/pgrandin,Automatic translation import,1,['i18n'],https://github.com/navit-gps/navit/pull/103,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/103,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,104,2016-06-21T22:58:59Z,2016-06-21T23:06:41Z,2020-08-18T11:38:22Z,MERGED,True,7,7,1,https://github.com/pgrandin,Automatic translation import,1,['i18n'],https://github.com/navit-gps/navit/pull/104,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/104,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,105,2016-06-21T23:27:09Z,2016-06-21T23:29:48Z,2020-08-18T11:38:22Z,MERGED,True,45,35,1,https://github.com/pgrandin,Automatic translation import,1,['i18n'],https://github.com/navit-gps/navit/pull/105,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/105,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,106,2016-07-13T20:47:21Z,2016-07-13T20:52:56Z,2020-08-18T11:38:22Z,MERGED,True,8,8,1,https://github.com/pgrandin,Automatic translation import,1,['i18n'],https://github.com/navit-gps/navit/pull/106,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/106,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,107,2016-07-13T21:08:26Z,2016-07-13T21:15:41Z,2020-08-18T11:38:23Z,MERGED,True,52,48,1,https://github.com/pgrandin,Automatic translation import,1,['i18n'],https://github.com/navit-gps/navit/pull/107,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/107,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,108,2016-07-14T23:28:48Z,2016-07-15T17:46:51Z,2020-08-18T11:38:23Z,MERGED,True,23,4,1,https://github.com/pgrandin,Automatic translation import,1,['i18n'],https://github.com/navit-gps/navit/pull/108,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/108,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,109,2016-08-29T18:52:27Z,2016-08-29T20:26:43Z,2020-08-18T12:08:45Z,MERGED,True,7,7,1,https://github.com/pgrandin,Automatic translation import,1,['i18n'],https://github.com/navit-gps/navit/pull/109,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/109,German from 2016-08-26,German from 2016-08-26,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,110,2016-09-01T17:30:24Z,2016-09-01T18:07:25Z,2016-09-02T20:36:39Z,MERGED,True,1,0,1,https://github.com/jandegr,fix old iOS jailbreak build,1,[],https://github.com/navit-gps/navit/pull/110,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/110,"I suppose f18e9df broke the build on the Navit server of the old iOS jailbreak packages.
Attempt to fix it.","I suppose f18e9df broke the build on the Navit server of the old iOS jailbreak packages.
Attempt to fix it.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,111,2016-09-01T18:13:18Z,2016-09-01T19:45:24Z,2016-12-31T17:07:46Z,MERGED,True,57,30,1,https://github.com/jandegr,Gui internal heightprofile,4,[],https://github.com/navit-gps/navit/pull/111,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/111,"some fixes for the heightprofile in gui internal.
the name of the map with heightlines must be
*.heightlines.bin","some fixes for the heightprofile in gui internal.
the name of the map with heightlines must be
*.heightlines.bin",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,111,2016-09-01T18:13:18Z,2016-09-01T19:45:24Z,2016-12-31T17:07:46Z,MERGED,True,57,30,1,https://github.com/jandegr,Gui internal heightprofile,4,[],https://github.com/navit-gps/navit/pull/111,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/111#issuecomment-244190337,"some fixes for the heightprofile in gui internal.
the name of the map with heightlines must be
*.heightlines.bin","Nice work fixing that @jandegr
Attaching an example :",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,111,2016-09-01T18:13:18Z,2016-09-01T19:45:24Z,2016-12-31T17:07:46Z,MERGED,True,57,30,1,https://github.com/jandegr,Gui internal heightprofile,4,[],https://github.com/navit-gps/navit/pull/111,https://github.com/jandegr,3,https://github.com/navit-gps/navit/pull/111#issuecomment-269873757,"some fixes for the heightprofile in gui internal.
the name of the map with heightlines must be
*.heightlines.bin",For completeness a view with heightlines on the map.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,112,2016-09-02T20:06:58Z,2016-09-16T16:58:10Z,2016-09-16T22:57:26Z,MERGED,True,2523,15,34,https://github.com/pgrandin,Importing audio_framework code from my own repo,93,[],https://github.com/navit-gps/navit/pull/112,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/112,"This PR imports the audio_framework code from my own repo.
The purpose is to add media playback and volume control capabilities, in a modular way.
This PR comports 3 parts :

some code to manage a new type of plugin (""audio"") in navit
a generic, very basic, playlist/track menu in gui_internal
two new ""audio"" plugins : one to manage volume via alsa, and one to add playback capabilities via libspotify

Currently this code only works under Linux, as it requires alsa. Features are simply disabled if alsa (or libspotify) are not available.
To test the output-alsa plugin, you wil need:

alsa
an entry in your navit.xml such as
<audio type=""output-alsa"" audio_device_mixer=""Headphone"" audio_device=""hw:1"" /> (in the future we can add audio_device_mixer and audio_device detection and selection from the UI
a way to trigger a volume change, for example
<osd x=""-128"" y=""-64"" w=""64""  h=""64"" type=""button"" src=""..."" command='volume_down()'/>

To test the player-spotify plugin, you will need :

alsa
libspotify
a spotify premium account (other types of account won't work)
a libspotify API key ( https://devaccount.spotify.com/my-account/keys/ )
an entry in your navit.xml such as :
<audio type=""player-spotify"" audio_playback_pcm=""sysdefault:CARD=PCH"" spotify_login=""mylogin"" spotify_password=""mypassword"" spotify_playlist=""Default playlist"" />

Comments and patches are welcome. I am not satisfied with this code in CMakeLists.txt for example:
list(APPEND NAVIT_LIBS ""-lasound -lspotify -lpthread"") # FIXME : this is a bad way to do it as maptool also gets linked
I have been using this feature for about a year now, it's really convenient for carputer users.","This PR imports the audio_framework code from my own repo.
The purpose is to add media playback and volume control capabilities, in a modular way.
This PR comports 3 parts :

some code to manage a new type of plugin (""audio"") in navit
a generic, very basic, playlist/track menu in gui_internal
two new ""audio"" plugins : one to manage volume via alsa, and one to add playback capabilities via libspotify

Currently this code only works under Linux, as it requires alsa. Features are simply disabled if alsa (or libspotify) are not available.
To test the output-alsa plugin, you wil need:

alsa
an entry in your navit.xml such as
<audio type=""output-alsa"" audio_device_mixer=""Headphone"" audio_device=""hw:1"" /> (in the future we can add audio_device_mixer and audio_device detection and selection from the UI
a way to trigger a volume change, for example
<osd x=""-128"" y=""-64"" w=""64""  h=""64"" type=""button"" src=""..."" command='volume_down()'/>

To test the player-spotify plugin, you will need :

alsa
libspotify
a spotify premium account (other types of account won't work)
a libspotify API key ( https://devaccount.spotify.com/my-account/keys/ )
an entry in your navit.xml such as :
<audio type=""player-spotify"" audio_playback_pcm=""sysdefault:CARD=PCH"" spotify_login=""mylogin"" spotify_password=""mypassword"" spotify_playlist=""Default playlist"" />

Comments and patches are welcome. I am not satisfied with this code in CMakeLists.txt for example:
list(APPEND NAVIT_LIBS ""-lasound -lspotify -lpthread"") # FIXME : this is a bad way to do it as maptool also gets linked
I have been using this feature for about a year now, it's really convenient for carputer users.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,112,2016-09-02T20:06:58Z,2016-09-16T16:58:10Z,2016-09-16T22:57:26Z,MERGED,True,2523,15,34,https://github.com/pgrandin,Importing audio_framework code from my own repo,93,[],https://github.com/navit-gps/navit/pull/112,https://github.com/sleske,2,https://github.com/navit-gps/navit/pull/112#issuecomment-244574998,"This PR imports the audio_framework code from my own repo.
The purpose is to add media playback and volume control capabilities, in a modular way.
This PR comports 3 parts :

some code to manage a new type of plugin (""audio"") in navit
a generic, very basic, playlist/track menu in gui_internal
two new ""audio"" plugins : one to manage volume via alsa, and one to add playback capabilities via libspotify

Currently this code only works under Linux, as it requires alsa. Features are simply disabled if alsa (or libspotify) are not available.
To test the output-alsa plugin, you wil need:

alsa
an entry in your navit.xml such as
<audio type=""output-alsa"" audio_device_mixer=""Headphone"" audio_device=""hw:1"" /> (in the future we can add audio_device_mixer and audio_device detection and selection from the UI
a way to trigger a volume change, for example
<osd x=""-128"" y=""-64"" w=""64""  h=""64"" type=""button"" src=""..."" command='volume_down()'/>

To test the player-spotify plugin, you will need :

alsa
libspotify
a spotify premium account (other types of account won't work)
a libspotify API key ( https://devaccount.spotify.com/my-account/keys/ )
an entry in your navit.xml such as :
<audio type=""player-spotify"" audio_playback_pcm=""sysdefault:CARD=PCH"" spotify_login=""mylogin"" spotify_password=""mypassword"" spotify_playlist=""Default playlist"" />

Comments and patches are welcome. I am not satisfied with this code in CMakeLists.txt for example:
list(APPEND NAVIT_LIBS ""-lasound -lspotify -lpthread"") # FIXME : this is a bad way to do it as maptool also gets linked
I have been using this feature for about a year now, it's really convenient for carputer users.","Hm, I'm really torn on this. On the one hand, the code looks decent, and works. On the other hand, IMHO the one thing Navit suffers from most is a lack of clear focus - we have loads of old code, unmaintained plugins, ports that barely work. So in that respect the last thing we need is more code that is only tangentially related to map display and navigation. I think I'll abstain from voting :-).",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,112,2016-09-02T20:06:58Z,2016-09-16T16:58:10Z,2016-09-16T22:57:26Z,MERGED,True,2523,15,34,https://github.com/pgrandin,Importing audio_framework code from my own repo,93,[],https://github.com/navit-gps/navit/pull/112,https://github.com/jandegr,3,https://github.com/navit-gps/navit/pull/112#issuecomment-244596624,"This PR imports the audio_framework code from my own repo.
The purpose is to add media playback and volume control capabilities, in a modular way.
This PR comports 3 parts :

some code to manage a new type of plugin (""audio"") in navit
a generic, very basic, playlist/track menu in gui_internal
two new ""audio"" plugins : one to manage volume via alsa, and one to add playback capabilities via libspotify

Currently this code only works under Linux, as it requires alsa. Features are simply disabled if alsa (or libspotify) are not available.
To test the output-alsa plugin, you wil need:

alsa
an entry in your navit.xml such as
<audio type=""output-alsa"" audio_device_mixer=""Headphone"" audio_device=""hw:1"" /> (in the future we can add audio_device_mixer and audio_device detection and selection from the UI
a way to trigger a volume change, for example
<osd x=""-128"" y=""-64"" w=""64""  h=""64"" type=""button"" src=""..."" command='volume_down()'/>

To test the player-spotify plugin, you will need :

alsa
libspotify
a spotify premium account (other types of account won't work)
a libspotify API key ( https://devaccount.spotify.com/my-account/keys/ )
an entry in your navit.xml such as :
<audio type=""player-spotify"" audio_playback_pcm=""sysdefault:CARD=PCH"" spotify_login=""mylogin"" spotify_password=""mypassword"" spotify_playlist=""Default playlist"" />

Comments and patches are welcome. I am not satisfied with this code in CMakeLists.txt for example:
list(APPEND NAVIT_LIBS ""-lasound -lspotify -lpthread"") # FIXME : this is a bad way to do it as maptool also gets linked
I have been using this feature for about a year now, it's really convenient for carputer users.","I only have one request, make it disabled by default, even if the libs are found.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,112,2016-09-02T20:06:58Z,2016-09-16T16:58:10Z,2016-09-16T22:57:26Z,MERGED,True,2523,15,34,https://github.com/pgrandin,Importing audio_framework code from my own repo,93,[],https://github.com/navit-gps/navit/pull/112,https://github.com/pgrandin,4,https://github.com/navit-gps/navit/pull/112#issuecomment-244613211,"This PR imports the audio_framework code from my own repo.
The purpose is to add media playback and volume control capabilities, in a modular way.
This PR comports 3 parts :

some code to manage a new type of plugin (""audio"") in navit
a generic, very basic, playlist/track menu in gui_internal
two new ""audio"" plugins : one to manage volume via alsa, and one to add playback capabilities via libspotify

Currently this code only works under Linux, as it requires alsa. Features are simply disabled if alsa (or libspotify) are not available.
To test the output-alsa plugin, you wil need:

alsa
an entry in your navit.xml such as
<audio type=""output-alsa"" audio_device_mixer=""Headphone"" audio_device=""hw:1"" /> (in the future we can add audio_device_mixer and audio_device detection and selection from the UI
a way to trigger a volume change, for example
<osd x=""-128"" y=""-64"" w=""64""  h=""64"" type=""button"" src=""..."" command='volume_down()'/>

To test the player-spotify plugin, you will need :

alsa
libspotify
a spotify premium account (other types of account won't work)
a libspotify API key ( https://devaccount.spotify.com/my-account/keys/ )
an entry in your navit.xml such as :
<audio type=""player-spotify"" audio_playback_pcm=""sysdefault:CARD=PCH"" spotify_login=""mylogin"" spotify_password=""mypassword"" spotify_playlist=""Default playlist"" />

Comments and patches are welcome. I am not satisfied with this code in CMakeLists.txt for example:
list(APPEND NAVIT_LIBS ""-lasound -lspotify -lpthread"") # FIXME : this is a bad way to do it as maptool also gets linked
I have been using this feature for about a year now, it's really convenient for carputer users.","On the one hand, the code looks decent, and works.

That's a good start :)

On the other hand, IMHO the one thing Navit suffers from most is a lack of clear focus - we have loads of old code, unmaintained plugins, ports that barely work. So in that respect the last thing we need is more code that is only tangentially related to map display and navigation. I think I'll abstain from voting :-).

I think that there is two things to consider here. We need to get better at preventing code obsolescence. One way to do it is to add build tests and have a better CI/CD to detect breakage earlier. The second thing is needs from our userbase. I think that the userbase interested in Navit is probably a bit different today from what it was a few years ago. In the past, Navit was the only free and opensource navigation software. Today, a lot of people are just using an app on their smartphone (usually only free). On the opposite, I think that cheap and accessible platforms like the raspberry pi brought a new wave of carputer enthusiasts. There is a few pre-bundled solutions integrating Navit, but in my opinion all lack a seemless integration of the applications they are composed of. Switching from an app to another will cause a flicker on your screen, your applications can't really talk with each other, etc. A good example is the one that uses Kodi for the media part.
I do understand your concern. If we diversify, there is a risk that we don't make our core functionalities better. But in my opinion, if we are able to reach a new and broader userbase, it can be good and it could also bring in new contributors, willing to help us improve ( @pohlinkzei is a good example : https://github.com/pohlinkzei )
I take your concerns seriously @sleske and I'd really like you to be onboard before merging this. Let me know how we can address your concerns.

I only have one request, make it disabled by default, even if the libs are found.

Good idea. I will do that and update the PR.
Edit : done in pgrandin@daee89c",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,112,2016-09-02T20:06:58Z,2016-09-16T16:58:10Z,2016-09-16T22:57:26Z,MERGED,True,2523,15,34,https://github.com/pgrandin,Importing audio_framework code from my own repo,93,[],https://github.com/navit-gps/navit/pull/112,https://github.com/sleske,5,https://github.com/navit-gps/navit/pull/112#issuecomment-244629846,"This PR imports the audio_framework code from my own repo.
The purpose is to add media playback and volume control capabilities, in a modular way.
This PR comports 3 parts :

some code to manage a new type of plugin (""audio"") in navit
a generic, very basic, playlist/track menu in gui_internal
two new ""audio"" plugins : one to manage volume via alsa, and one to add playback capabilities via libspotify

Currently this code only works under Linux, as it requires alsa. Features are simply disabled if alsa (or libspotify) are not available.
To test the output-alsa plugin, you wil need:

alsa
an entry in your navit.xml such as
<audio type=""output-alsa"" audio_device_mixer=""Headphone"" audio_device=""hw:1"" /> (in the future we can add audio_device_mixer and audio_device detection and selection from the UI
a way to trigger a volume change, for example
<osd x=""-128"" y=""-64"" w=""64""  h=""64"" type=""button"" src=""..."" command='volume_down()'/>

To test the player-spotify plugin, you will need :

alsa
libspotify
a spotify premium account (other types of account won't work)
a libspotify API key ( https://devaccount.spotify.com/my-account/keys/ )
an entry in your navit.xml such as :
<audio type=""player-spotify"" audio_playback_pcm=""sysdefault:CARD=PCH"" spotify_login=""mylogin"" spotify_password=""mypassword"" spotify_playlist=""Default playlist"" />

Comments and patches are welcome. I am not satisfied with this code in CMakeLists.txt for example:
list(APPEND NAVIT_LIBS ""-lasound -lspotify -lpthread"") # FIXME : this is a bad way to do it as maptool also gets linked
I have been using this feature for about a year now, it's really convenient for carputer users.","@pgrandin : I may be over-cautious. If one of our goals is to become a better solution for onboard entertainment, then the code is quite on-topic. That's not how I use Navit, but I'm not everyone.
I think my worries will be reduced if we make the code neatly decoupled from the rest of Navit, to the extent practical. As far as I can tell, this is the case (I didn't read everything).
Then we can just try integrating it - and worst case we just rip it out again later. If we can manage that, count me in :-).",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,112,2016-09-02T20:06:58Z,2016-09-16T16:58:10Z,2016-09-16T22:57:26Z,MERGED,True,2523,15,34,https://github.com/pgrandin,Importing audio_framework code from my own repo,93,[],https://github.com/navit-gps/navit/pull/112,https://github.com/sleske,6,https://github.com/navit-gps/navit/pull/112#issuecomment-244630009,"This PR imports the audio_framework code from my own repo.
The purpose is to add media playback and volume control capabilities, in a modular way.
This PR comports 3 parts :

some code to manage a new type of plugin (""audio"") in navit
a generic, very basic, playlist/track menu in gui_internal
two new ""audio"" plugins : one to manage volume via alsa, and one to add playback capabilities via libspotify

Currently this code only works under Linux, as it requires alsa. Features are simply disabled if alsa (or libspotify) are not available.
To test the output-alsa plugin, you wil need:

alsa
an entry in your navit.xml such as
<audio type=""output-alsa"" audio_device_mixer=""Headphone"" audio_device=""hw:1"" /> (in the future we can add audio_device_mixer and audio_device detection and selection from the UI
a way to trigger a volume change, for example
<osd x=""-128"" y=""-64"" w=""64""  h=""64"" type=""button"" src=""..."" command='volume_down()'/>

To test the player-spotify plugin, you will need :

alsa
libspotify
a spotify premium account (other types of account won't work)
a libspotify API key ( https://devaccount.spotify.com/my-account/keys/ )
an entry in your navit.xml such as :
<audio type=""player-spotify"" audio_playback_pcm=""sysdefault:CARD=PCH"" spotify_login=""mylogin"" spotify_password=""mypassword"" spotify_playlist=""Default playlist"" />

Comments and patches are welcome. I am not satisfied with this code in CMakeLists.txt for example:
list(APPEND NAVIT_LIBS ""-lasound -lspotify -lpthread"") # FIXME : this is a bad way to do it as maptool also gets linked
I have been using this feature for about a year now, it's really convenient for carputer users.","I'm mainly worried about repeating something like the ""pedestrian"" plugin - there is quite a lot of code in core Navit that is only used by that plugin (and was added just for it), yet the plugin is unmaintained, and doesn't even have clear docs in the Wiki, so even if you wanted to use it, you won't find out how to. I think we really should scrap all that code - I just didn't feel like finding out if someone does in fact use it, and then ripping out all the dependencies. Ok, enough ranting...",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,112,2016-09-02T20:06:58Z,2016-09-16T16:58:10Z,2016-09-16T22:57:26Z,MERGED,True,2523,15,34,https://github.com/pgrandin,Importing audio_framework code from my own repo,93,[],https://github.com/navit-gps/navit/pull/112,https://github.com/asanoaozora,7,https://github.com/navit-gps/navit/pull/112#issuecomment-244684042,"This PR imports the audio_framework code from my own repo.
The purpose is to add media playback and volume control capabilities, in a modular way.
This PR comports 3 parts :

some code to manage a new type of plugin (""audio"") in navit
a generic, very basic, playlist/track menu in gui_internal
two new ""audio"" plugins : one to manage volume via alsa, and one to add playback capabilities via libspotify

Currently this code only works under Linux, as it requires alsa. Features are simply disabled if alsa (or libspotify) are not available.
To test the output-alsa plugin, you wil need:

alsa
an entry in your navit.xml such as
<audio type=""output-alsa"" audio_device_mixer=""Headphone"" audio_device=""hw:1"" /> (in the future we can add audio_device_mixer and audio_device detection and selection from the UI
a way to trigger a volume change, for example
<osd x=""-128"" y=""-64"" w=""64""  h=""64"" type=""button"" src=""..."" command='volume_down()'/>

To test the player-spotify plugin, you will need :

alsa
libspotify
a spotify premium account (other types of account won't work)
a libspotify API key ( https://devaccount.spotify.com/my-account/keys/ )
an entry in your navit.xml such as :
<audio type=""player-spotify"" audio_playback_pcm=""sysdefault:CARD=PCH"" spotify_login=""mylogin"" spotify_password=""mypassword"" spotify_playlist=""Default playlist"" />

Comments and patches are welcome. I am not satisfied with this code in CMakeLists.txt for example:
list(APPEND NAVIT_LIBS ""-lasound -lspotify -lpthread"") # FIXME : this is a bad way to do it as maptool also gets linked
I have been using this feature for about a year now, it's really convenient for carputer users.","Hello Navit team,
first of all I'd like to thank you for keep on maintaining and improving Navit.
In the GitHub there are tons of code, and I won't be surprised if you never heard about GENIVI, the navigation APIs and the use of Navit as a navicore for proof of concepts and demonstrator. So, I take the liberty of introducing a little bit what I'm doing with your code.
Six years ago, we (GENIVI) had to choose an open source solution for POC, and, because of its flexible mechanism of plugins we decided to work with Martin Schaller. He developed several plugins (funded by GENIVI), and after his 'reconversion' as a farmer somewhere in Germany,
I've continued to maintain the code, to adapt it to new versions of APIs...
About 3 years ago, I proposed to develop a demonstrator, based on navit and plugins, and, even if it's not really a 'navigation product', it runs (on desktop under Linux and on board, with a  Yocto build).
So, this quick introduction is just to say that, each time I make presentation of the code, I always mention and promote Navit as a flexible navigation core.
I'm aligned with the latest version of Navit (I'm not using the HMI, I'm implemented another one), except one patch.
I've no contact with Navit team since Martin left, and, because my knowledge of Navit architecture and code is limited, some improvement I have in mind can't be achieved.
All the code pushed by GENIVI is MPLV2, documentation and APIs are CC by 4.0
In my opinion, Navit is a navigation solution, and not really an IVI solution, so audio player plugin doesn't make really sense for me.
I'd make more sense to add dead reckoning, HMI with cross road zoom, or to add a plugin to connect to POI providers, to extend the embedded database.
And of course, improving documentation would be helpful ;-)
I don't know how you're using Navit (I guess it's more the Android version), but, maybe having a look at what is done in GENIVI could be interesting for you.
On my side, I have a watch on what you're doing.
Regards.
Philippe",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,112,2016-09-02T20:06:58Z,2016-09-16T16:58:10Z,2016-09-16T22:57:26Z,MERGED,True,2523,15,34,https://github.com/pgrandin,Importing audio_framework code from my own repo,93,[],https://github.com/navit-gps/navit/pull/112,https://github.com/sleske,8,https://github.com/navit-gps/navit/pull/112#issuecomment-245062592,"This PR imports the audio_framework code from my own repo.
The purpose is to add media playback and volume control capabilities, in a modular way.
This PR comports 3 parts :

some code to manage a new type of plugin (""audio"") in navit
a generic, very basic, playlist/track menu in gui_internal
two new ""audio"" plugins : one to manage volume via alsa, and one to add playback capabilities via libspotify

Currently this code only works under Linux, as it requires alsa. Features are simply disabled if alsa (or libspotify) are not available.
To test the output-alsa plugin, you wil need:

alsa
an entry in your navit.xml such as
<audio type=""output-alsa"" audio_device_mixer=""Headphone"" audio_device=""hw:1"" /> (in the future we can add audio_device_mixer and audio_device detection and selection from the UI
a way to trigger a volume change, for example
<osd x=""-128"" y=""-64"" w=""64""  h=""64"" type=""button"" src=""..."" command='volume_down()'/>

To test the player-spotify plugin, you will need :

alsa
libspotify
a spotify premium account (other types of account won't work)
a libspotify API key ( https://devaccount.spotify.com/my-account/keys/ )
an entry in your navit.xml such as :
<audio type=""player-spotify"" audio_playback_pcm=""sysdefault:CARD=PCH"" spotify_login=""mylogin"" spotify_password=""mypassword"" spotify_playlist=""Default playlist"" />

Comments and patches are welcome. I am not satisfied with this code in CMakeLists.txt for example:
list(APPEND NAVIT_LIBS ""-lasound -lspotify -lpthread"") # FIXME : this is a bad way to do it as maptool also gets linked
I have been using this feature for about a year now, it's really convenient for carputer users.","@asanoaozora : Welcome, and thank you for the interesting feedback. I had never heard of Genivi. Is this the repository? https://github.com/GENIVI/navigation",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,112,2016-09-02T20:06:58Z,2016-09-16T16:58:10Z,2016-09-16T22:57:26Z,MERGED,True,2523,15,34,https://github.com/pgrandin,Importing audio_framework code from my own repo,93,[],https://github.com/navit-gps/navit/pull/112,https://github.com/pgrandin,9,https://github.com/navit-gps/navit/pull/112#issuecomment-245437511,"This PR imports the audio_framework code from my own repo.
The purpose is to add media playback and volume control capabilities, in a modular way.
This PR comports 3 parts :

some code to manage a new type of plugin (""audio"") in navit
a generic, very basic, playlist/track menu in gui_internal
two new ""audio"" plugins : one to manage volume via alsa, and one to add playback capabilities via libspotify

Currently this code only works under Linux, as it requires alsa. Features are simply disabled if alsa (or libspotify) are not available.
To test the output-alsa plugin, you wil need:

alsa
an entry in your navit.xml such as
<audio type=""output-alsa"" audio_device_mixer=""Headphone"" audio_device=""hw:1"" /> (in the future we can add audio_device_mixer and audio_device detection and selection from the UI
a way to trigger a volume change, for example
<osd x=""-128"" y=""-64"" w=""64""  h=""64"" type=""button"" src=""..."" command='volume_down()'/>

To test the player-spotify plugin, you will need :

alsa
libspotify
a spotify premium account (other types of account won't work)
a libspotify API key ( https://devaccount.spotify.com/my-account/keys/ )
an entry in your navit.xml such as :
<audio type=""player-spotify"" audio_playback_pcm=""sysdefault:CARD=PCH"" spotify_login=""mylogin"" spotify_password=""mypassword"" spotify_playlist=""Default playlist"" />

Comments and patches are welcome. I am not satisfied with this code in CMakeLists.txt for example:
list(APPEND NAVIT_LIBS ""-lasound -lspotify -lpthread"") # FIXME : this is a bad way to do it as maptool also gets linked
I have been using this feature for about a year now, it's really convenient for carputer users.","@sleske thanks for the update. This PR only adds a very basic code in navit's core, which is inspired from the way we manage vehicles. Regarding the pedestrian plugin, you are right and we should probably create a branch and use something like gcov/lcov to do some cleanup.
@asanoaozora welcome and thanks for contributing. I actually know about Genivi since some time, so it's nice to have a direct contact with someone from the project. Martin leaving was definitely a big loss for the project, but we have to continue without him. If you have needs concerning Navit features, please let us know, and we'll definitely do our best to help you. The easiest way is probably to discuss it first on IRC. I'm always happy when Navit is used in another application or setup.
Now back to this PR : I read your answer yesterday, and I thought ""damn, he might be right and maybe this PR should rather be against Genivi"". So I took some time to freshen up my knowledge of Genivi and see if 1) I could push my spotify plugin as part of Genivi and 2) how things have changed since the last time I looked at Genevi a few months ago (I do check in periodically).
I was happy to find that there is a fresh release with a build for raspberry pi. Perfect, that's my target! I downloaded it, flashed it, and booted the board. Unfortunately, gdp-11-rc1-rpi is really a demo platform. The navigation isn't even Navit in this build, just a demo, and the media player is ""xeyes"". No big deal I though, let's have a look at the code. I scoured your wiki, looked at various repositories, and honestly your codebase is quite complicated. I understand that given the number of actors involved in this project some decoupling is needed. The architecture described in your wiki makes sense. But if we look at this from the point of view of a hobbyist, this is really, really complex. Where do I start if I just want Navit and a media player for example? Building this project seems like a daunting task...
Please do no take this reply as a negative rant, because it is really not my point. I just don't really know where to start if I wanted to add features. I do hope that we can collaborate to make this better, and I'll start to hang out in the #automotive channel. Feel free also to ping me in #navit (my nickname is KaZeR) to move this discussion forward.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,112,2016-09-02T20:06:58Z,2016-09-16T16:58:10Z,2016-09-16T22:57:26Z,MERGED,True,2523,15,34,https://github.com/pgrandin,Importing audio_framework code from my own repo,93,[],https://github.com/navit-gps/navit/pull/112,https://github.com/asanoaozora,10,https://github.com/navit-gps/navit/pull/112#issuecomment-245585666,"This PR imports the audio_framework code from my own repo.
The purpose is to add media playback and volume control capabilities, in a modular way.
This PR comports 3 parts :

some code to manage a new type of plugin (""audio"") in navit
a generic, very basic, playlist/track menu in gui_internal
two new ""audio"" plugins : one to manage volume via alsa, and one to add playback capabilities via libspotify

Currently this code only works under Linux, as it requires alsa. Features are simply disabled if alsa (or libspotify) are not available.
To test the output-alsa plugin, you wil need:

alsa
an entry in your navit.xml such as
<audio type=""output-alsa"" audio_device_mixer=""Headphone"" audio_device=""hw:1"" /> (in the future we can add audio_device_mixer and audio_device detection and selection from the UI
a way to trigger a volume change, for example
<osd x=""-128"" y=""-64"" w=""64""  h=""64"" type=""button"" src=""..."" command='volume_down()'/>

To test the player-spotify plugin, you will need :

alsa
libspotify
a spotify premium account (other types of account won't work)
a libspotify API key ( https://devaccount.spotify.com/my-account/keys/ )
an entry in your navit.xml such as :
<audio type=""player-spotify"" audio_playback_pcm=""sysdefault:CARD=PCH"" spotify_login=""mylogin"" spotify_password=""mypassword"" spotify_playlist=""Default playlist"" />

Comments and patches are welcome. I am not satisfied with this code in CMakeLists.txt for example:
list(APPEND NAVIT_LIBS ""-lasound -lspotify -lpthread"") # FIXME : this is a bad way to do it as maptool also gets linked
I have been using this feature for about a year now, it's really convenient for carputer users.","For sure, I forgot to give you some more details about the code....
For architectural reasons, in GENIVI, Navigation is shared between three repositories:

positioning (interfaces for sensors, GNSS and also enhanced position (dead recknoning)). This repository also contains a log replayer, to simulate inputs by using a log file with tags
navigation  core (interfaces with location input, route calculation, guidance, map viewer, POI search)
navigation application (a simple navigation application, HMI in Qt QML)
There's also some stuff into this wiki
I'll come back to you guys, by end of October. Until this date, I'm going to have a look at your Android version (I'm not familiar with Android, so I need some time to train me a little bit).
Cheers !",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,112,2016-09-02T20:06:58Z,2016-09-16T16:58:10Z,2016-09-16T22:57:26Z,MERGED,True,2523,15,34,https://github.com/pgrandin,Importing audio_framework code from my own repo,93,[],https://github.com/navit-gps/navit/pull/112,https://github.com/pohlinkzei,11,https://github.com/navit-gps/navit/pull/112#issuecomment-247420670,"This PR imports the audio_framework code from my own repo.
The purpose is to add media playback and volume control capabilities, in a modular way.
This PR comports 3 parts :

some code to manage a new type of plugin (""audio"") in navit
a generic, very basic, playlist/track menu in gui_internal
two new ""audio"" plugins : one to manage volume via alsa, and one to add playback capabilities via libspotify

Currently this code only works under Linux, as it requires alsa. Features are simply disabled if alsa (or libspotify) are not available.
To test the output-alsa plugin, you wil need:

alsa
an entry in your navit.xml such as
<audio type=""output-alsa"" audio_device_mixer=""Headphone"" audio_device=""hw:1"" /> (in the future we can add audio_device_mixer and audio_device detection and selection from the UI
a way to trigger a volume change, for example
<osd x=""-128"" y=""-64"" w=""64""  h=""64"" type=""button"" src=""..."" command='volume_down()'/>

To test the player-spotify plugin, you will need :

alsa
libspotify
a spotify premium account (other types of account won't work)
a libspotify API key ( https://devaccount.spotify.com/my-account/keys/ )
an entry in your navit.xml such as :
<audio type=""player-spotify"" audio_playback_pcm=""sysdefault:CARD=PCH"" spotify_login=""mylogin"" spotify_password=""mypassword"" spotify_playlist=""Default playlist"" />

Comments and patches are welcome. I am not satisfied with this code in CMakeLists.txt for example:
list(APPEND NAVIT_LIBS ""-lasound -lspotify -lpthread"") # FIXME : this is a bad way to do it as maptool also gets linked
I have been using this feature for about a year now, it's really convenient for carputer users.","I think navit's modularity is its key feature. If we only maintain the core, the modules will stay behind. For Android, Windows and iOS builds this framework is completely useless, but for the masses of ARM-based, linux driving micromashines like the RaspberryPi, Beaglebone and many others this feature is great. And I want this stuff available and maintained.
I'd recommend to switch from the lot of functions and commands that are inside navit.c to using attrs for all the communication between the parts.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,112,2016-09-02T20:06:58Z,2016-09-16T16:58:10Z,2016-09-16T22:57:26Z,MERGED,True,2523,15,34,https://github.com/pgrandin,Importing audio_framework code from my own repo,93,[],https://github.com/navit-gps/navit/pull/112,https://github.com/pgrandin,12,https://github.com/navit-gps/navit/pull/112#issuecomment-247652398,"This PR imports the audio_framework code from my own repo.
The purpose is to add media playback and volume control capabilities, in a modular way.
This PR comports 3 parts :

some code to manage a new type of plugin (""audio"") in navit
a generic, very basic, playlist/track menu in gui_internal
two new ""audio"" plugins : one to manage volume via alsa, and one to add playback capabilities via libspotify

Currently this code only works under Linux, as it requires alsa. Features are simply disabled if alsa (or libspotify) are not available.
To test the output-alsa plugin, you wil need:

alsa
an entry in your navit.xml such as
<audio type=""output-alsa"" audio_device_mixer=""Headphone"" audio_device=""hw:1"" /> (in the future we can add audio_device_mixer and audio_device detection and selection from the UI
a way to trigger a volume change, for example
<osd x=""-128"" y=""-64"" w=""64""  h=""64"" type=""button"" src=""..."" command='volume_down()'/>

To test the player-spotify plugin, you will need :

alsa
libspotify
a spotify premium account (other types of account won't work)
a libspotify API key ( https://devaccount.spotify.com/my-account/keys/ )
an entry in your navit.xml such as :
<audio type=""player-spotify"" audio_playback_pcm=""sysdefault:CARD=PCH"" spotify_login=""mylogin"" spotify_password=""mypassword"" spotify_playlist=""Default playlist"" />

Comments and patches are welcome. I am not satisfied with this code in CMakeLists.txt for example:
list(APPEND NAVIT_LIBS ""-lasound -lspotify -lpthread"") # FIXME : this is a bad way to do it as maptool also gets linked
I have been using this feature for about a year now, it's really convenient for carputer users.","Thanks everyone who participated in the thread, this was definitely useful.
I am merging the PR (to its own branch) and we will work with @pohlinkzei on improving it.
The code will live in its own branch for some time, and we should keep the discussion open about how to improve plugins maintainability.
@asanoaozora : i would really like to work with you on improving the collaboration between the two projects.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,112,2016-09-02T20:06:58Z,2016-09-16T16:58:10Z,2016-09-16T22:57:26Z,MERGED,True,2523,15,34,https://github.com/pgrandin,Importing audio_framework code from my own repo,93,[],https://github.com/navit-gps/navit/pull/112,https://github.com/mvglasow,13,https://github.com/navit-gps/navit/pull/112#issuecomment-247723160,"This PR imports the audio_framework code from my own repo.
The purpose is to add media playback and volume control capabilities, in a modular way.
This PR comports 3 parts :

some code to manage a new type of plugin (""audio"") in navit
a generic, very basic, playlist/track menu in gui_internal
two new ""audio"" plugins : one to manage volume via alsa, and one to add playback capabilities via libspotify

Currently this code only works under Linux, as it requires alsa. Features are simply disabled if alsa (or libspotify) are not available.
To test the output-alsa plugin, you wil need:

alsa
an entry in your navit.xml such as
<audio type=""output-alsa"" audio_device_mixer=""Headphone"" audio_device=""hw:1"" /> (in the future we can add audio_device_mixer and audio_device detection and selection from the UI
a way to trigger a volume change, for example
<osd x=""-128"" y=""-64"" w=""64""  h=""64"" type=""button"" src=""..."" command='volume_down()'/>

To test the player-spotify plugin, you will need :

alsa
libspotify
a spotify premium account (other types of account won't work)
a libspotify API key ( https://devaccount.spotify.com/my-account/keys/ )
an entry in your navit.xml such as :
<audio type=""player-spotify"" audio_playback_pcm=""sysdefault:CARD=PCH"" spotify_login=""mylogin"" spotify_password=""mypassword"" spotify_playlist=""Default playlist"" />

Comments and patches are welcome. I am not satisfied with this code in CMakeLists.txt for example:
list(APPEND NAVIT_LIBS ""-lasound -lspotify -lpthread"") # FIXME : this is a bad way to do it as maptool also gets linked
I have been using this feature for about a year now, it's really convenient for carputer users.","@pgrandin @asanoaozora Interesting to hear there is some degree of interoperation between GENIVI and Navit. I'd had a look at GENIVI in the past but didn't dig deeply into it.
Inertial navigation is also an interesting point. I'd started working on something in that direction (Android-based) a while back but don't yet have anything usable – the topic is quite complex and errors accumulate quickly. Plus, currently the demands of my day job are kicking in big time, leaving me with little time to work on this topic.
The main design question for me at the moment is where inertial navigation code should go.
Should it be kept separate from Navit?

Avoids adding more platform-specific code to Navit (needed to interface with GPS and sensors)
Other apps can benefit from it as well, even on devices without Navit

Or should it be integrated into Navit?

High-level processing (on top of an abstraction layer) is probably reusable across platforms
Allows for tighter integration, such as using map/route data to improve inertial navigation accuracy

Or something in between (however that may be implemented) which would give us the best of both worlds?
Last but not least: what would be a good place to continue this discussion? Probably not this merge request...",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,112,2016-09-02T20:06:58Z,2016-09-16T16:58:10Z,2016-09-16T22:57:26Z,MERGED,True,2523,15,34,https://github.com/pgrandin,Importing audio_framework code from my own repo,93,[],https://github.com/navit-gps/navit/pull/112,https://github.com/pgrandin,14,https://github.com/navit-gps/navit/pull/112#issuecomment-247727675,"This PR imports the audio_framework code from my own repo.
The purpose is to add media playback and volume control capabilities, in a modular way.
This PR comports 3 parts :

some code to manage a new type of plugin (""audio"") in navit
a generic, very basic, playlist/track menu in gui_internal
two new ""audio"" plugins : one to manage volume via alsa, and one to add playback capabilities via libspotify

Currently this code only works under Linux, as it requires alsa. Features are simply disabled if alsa (or libspotify) are not available.
To test the output-alsa plugin, you wil need:

alsa
an entry in your navit.xml such as
<audio type=""output-alsa"" audio_device_mixer=""Headphone"" audio_device=""hw:1"" /> (in the future we can add audio_device_mixer and audio_device detection and selection from the UI
a way to trigger a volume change, for example
<osd x=""-128"" y=""-64"" w=""64""  h=""64"" type=""button"" src=""..."" command='volume_down()'/>

To test the player-spotify plugin, you will need :

alsa
libspotify
a spotify premium account (other types of account won't work)
a libspotify API key ( https://devaccount.spotify.com/my-account/keys/ )
an entry in your navit.xml such as :
<audio type=""player-spotify"" audio_playback_pcm=""sysdefault:CARD=PCH"" spotify_login=""mylogin"" spotify_password=""mypassword"" spotify_playlist=""Default playlist"" />

Comments and patches are welcome. I am not satisfied with this code in CMakeLists.txt for example:
list(APPEND NAVIT_LIBS ""-lasound -lspotify -lpthread"") # FIXME : this is a bad way to do it as maptool also gets linked
I have been using this feature for about a year now, it's really convenient for carputer users.","Last but not least: what would be a good place to continue this discussion? Probably not this merge request...

When we moved from sourceforge's svn to github, we decided to keep trac for this kind of purpose.
We can discuss it, see if it still makes sense, and hear what people are thinking about it. Maybe discuss it in the forums, or trac itself to avoid using this PR :)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,113,2016-09-04T17:13:00Z,2016-09-04T17:46:44Z,2016-09-04T17:46:52Z,MERGED,True,45,0,2,https://github.com/jandegr,Gui internal layercontrol,2,[],https://github.com/navit-gps/navit/pull/113,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/113,"As the title says, add a menu entry settings->display->layers to change layer visibility and an icon for it.","As the title says, add a menu entry settings->display->layers to change layer visibility and an icon for it.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,114,2016-09-05T14:17:34Z,2016-09-05T14:18:26Z,2016-09-05T14:18:26Z,MERGED,True,46,0,3,https://github.com/jandegr,update from trunk,6,[],https://github.com/navit-gps/navit/pull/114,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/114,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,115,2016-09-08T13:28:13Z,2016-09-13T18:32:51Z,2016-09-13T18:34:22Z,MERGED,True,61,35,4,https://github.com/jandegr,Gui internal heightprofile,8,[],https://github.com/navit-gps/navit/pull/115,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/115,"The last of the basic fixes for heightprofile / heightlines.

fixes an occasional crash
add a new icon
rework xml for heightlines in the map view

Toggle the layer heightlines in gui_internal->settings->display->layers to toggle visibility
of the heightlines in the map view.
If I ever work on this again, the first job would be to move most of this code out of gui_internal and make it usable for other gui's as well and leave only the part that renders it in gui_internal, but now it was just fixing the existing code a bit.","The last of the basic fixes for heightprofile / heightlines.

fixes an occasional crash
add a new icon
rework xml for heightlines in the map view

Toggle the layer heightlines in gui_internal->settings->display->layers to toggle visibility
of the heightlines in the map view.
If I ever work on this again, the first job would be to move most of this code out of gui_internal and make it usable for other gui's as well and leave only the part that renders it in gui_internal, but now it was just fixing the existing code a bit.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,115,2016-09-08T13:28:13Z,2016-09-13T18:32:51Z,2016-09-13T18:34:22Z,MERGED,True,61,35,4,https://github.com/jandegr,Gui internal heightprofile,8,[],https://github.com/navit-gps/navit/pull/115,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/115#issuecomment-246778343,"The last of the basic fixes for heightprofile / heightlines.

fixes an occasional crash
add a new icon
rework xml for heightlines in the map view

Toggle the layer heightlines in gui_internal->settings->display->layers to toggle visibility
of the heightlines in the map view.
If I ever work on this again, the first job would be to move most of this code out of gui_internal and make it usable for other gui's as well and leave only the part that renders it in gui_internal, but now it was just fixing the existing code a bit.","Nice work, Jan!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,116,2016-09-13T17:58:23Z,2016-09-13T18:29:22Z,2020-08-18T11:59:22Z,MERGED,True,6,3,1,https://github.com/pgrandin,Automatic Chinese (Traditional) translation import,1,['i18n'],https://github.com/navit-gps/navit/pull/116,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/116,Update:i18n:Updated Chinese (Traditional) translation from launchpad,Update:i18n:Updated Chinese (Traditional) translation from launchpad,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,117,2016-09-14T18:06:49Z,2016-09-15T17:35:57Z,2016-09-15T17:35:59Z,MERGED,True,0,2,1,https://github.com/jandegr,autotools,1,[],https://github.com/navit-gps/navit/pull/117,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/117,try to fix a few builds on the old server still using autotools now breaking on removed NavitAndroidOverlay.java,try to fix a few builds on the old server still using autotools now breaking on removed NavitAndroidOverlay.java,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,117,2016-09-14T18:06:49Z,2016-09-15T17:35:57Z,2016-09-15T17:35:59Z,MERGED,True,0,2,1,https://github.com/jandegr,autotools,1,[],https://github.com/navit-gps/navit/pull/117,https://github.com/jandegr,2,https://github.com/navit-gps/navit/pull/117#issuecomment-247110624,try to fix a few builds on the old server still using autotools now breaking on removed NavitAndroidOverlay.java,"if this works then the next problem would be to fix
In file included from /work/compile/navit/src/navit/start_real.c:29:
/work/compile/navit/src/navit/config_.h:16: warning: parameter has incomplete type
/work/compile/navit/src/navit/start_real.c:54: error: syntax error before ""GIT_VERSION""
as can be seen in many of the build logs after aug. 30 2015",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,118,2016-09-21T15:45:53Z,2016-09-21T18:14:22Z,2016-09-28T17:17:28Z,MERGED,True,1,0,1,https://github.com/jandegr,Update Makefile.am,1,[],https://github.com/navit-gps/navit/pull/118,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/118,"This will not properly set the version for release builds, but it should be another step forward in getting the autotools builds on the Navit server going again.","This will not properly set the version for release builds, but it should be another step forward in getting the autotools builds on the Navit server going again.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,118,2016-09-21T15:45:53Z,2016-09-21T18:14:22Z,2016-09-28T17:17:28Z,MERGED,True,1,0,1,https://github.com/jandegr,Update Makefile.am,1,[],https://github.com/navit-gps/navit/pull/118,https://github.com/sleske,2,https://github.com/navit-gps/navit/pull/118#issuecomment-250137633,"This will not properly set the version for release builds, but it should be another step forward in getting the autotools builds on the Navit server going again.","@jandegr : Which build still needs autotools? The idea used to be to get rid of autotools in favor of CMake. See http://trac.navit-project.org/ticket/1341 . If there are still builds/platforms where CMake does not work, it would be good to note that in trac ticket 1341, so we can fix it.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,118,2016-09-21T15:45:53Z,2016-09-21T18:14:22Z,2016-09-28T17:17:28Z,MERGED,True,1,0,1,https://github.com/jandegr,Update Makefile.am,1,[],https://github.com/navit-gps/navit/pull/118,https://github.com/pgrandin,3,https://github.com/navit-gps/navit/pull/118#issuecomment-250234482,"This will not properly set the version for release builds, but it should be another step forward in getting the autotools builds on the Navit server going again.","If I remember correctly, this is used for the Tomtom build.
@jandegr is working on it.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,119,2016-10-19T15:30:39Z,2016-10-26T17:51:32Z,2016-10-28T20:48:38Z,MERGED,True,790,0,6,https://github.com/jandegr,Tomtom2,6,[],https://github.com/navit-gps/navit/pull/119,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/119,"Builds a package for Tomtom similar to those @xenos1984  used to post
http://wiki.navit-project.org/index.php/TomTom and as a continuation of
http://trac.navit-project.org/ticket/1144

uses Cmake for Navit instead of autotools
has translations and espeak + espeakdsp from Gernot
does not (yet) provide a config for 320x240 screens
once finished HAVE_API_TOMTOM was not needed anymore but it is preserved for future changes
tested on a Tomtom go 710","Builds a package for Tomtom similar to those @xenos1984  used to post
http://wiki.navit-project.org/index.php/TomTom and as a continuation of
http://trac.navit-project.org/ticket/1144

uses Cmake for Navit instead of autotools
has translations and espeak + espeakdsp from Gernot
does not (yet) provide a config for 320x240 screens
once finished HAVE_API_TOMTOM was not needed anymore but it is preserved for future changes
tested on a Tomtom go 710",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,119,2016-10-19T15:30:39Z,2016-10-26T17:51:32Z,2016-10-28T20:48:38Z,MERGED,True,790,0,6,https://github.com/jandegr,Tomtom2,6,[],https://github.com/navit-gps/navit/pull/119,https://github.com/jandegr,2,https://github.com/navit-gps/navit/pull/119#issuecomment-255526971,"Builds a package for Tomtom similar to those @xenos1984  used to post
http://wiki.navit-project.org/index.php/TomTom and as a continuation of
http://trac.navit-project.org/ticket/1144

uses Cmake for Navit instead of autotools
has translations and espeak + espeakdsp from Gernot
does not (yet) provide a config for 320x240 screens
once finished HAVE_API_TOMTOM was not needed anymore but it is preserved for future changes
tested on a Tomtom go 710",I did some cleanup and switched to build_tomtom_minimal.sh that does only the minimum to build for tomtom and does nothing of the funny stuff. The original script is renamed into build_tomtom_plugin.sh for in case somebody wants to build a new navitom package as mentioned in the wiki,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,119,2016-10-19T15:30:39Z,2016-10-26T17:51:32Z,2016-10-28T20:48:38Z,MERGED,True,790,0,6,https://github.com/jandegr,Tomtom2,6,[],https://github.com/navit-gps/navit/pull/119,https://github.com/jandegr,3,https://github.com/navit-gps/navit/pull/119#issuecomment-255601690,"Builds a package for Tomtom similar to those @xenos1984  used to post
http://wiki.navit-project.org/index.php/TomTom and as a continuation of
http://trac.navit-project.org/ticket/1144

uses Cmake for Navit instead of autotools
has translations and espeak + espeakdsp from Gernot
does not (yet) provide a config for 320x240 screens
once finished HAVE_API_TOMTOM was not needed anymore but it is preserved for future changes
tested on a Tomtom go 710","a link to the plugin build (circleci 1146)
https://1146-30791823-gh.circle-artifacts.com/0/tmp/circle-artifacts.QLIgxrQ/navitom.zip",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,119,2016-10-19T15:30:39Z,2016-10-26T17:51:32Z,2016-10-28T20:48:38Z,MERGED,True,790,0,6,https://github.com/jandegr,Tomtom2,6,[],https://github.com/navit-gps/navit/pull/119,https://github.com/gefin,4,https://github.com/navit-gps/navit/pull/119#issuecomment-256968029,"Builds a package for Tomtom similar to those @xenos1984  used to post
http://wiki.navit-project.org/index.php/TomTom and as a continuation of
http://trac.navit-project.org/ticket/1144

uses Cmake for Navit instead of autotools
has translations and espeak + espeakdsp from Gernot
does not (yet) provide a config for 320x240 screens
once finished HAVE_API_TOMTOM was not needed anymore but it is preserved for future changes
tested on a Tomtom go 710","This version (now merged) route real faster. Also it work now well with 64M RAM. Navit work on the TT730  well in the opentom environment, but in tomtom mode it don't bind the navit button into the menu.
maybe the newer firmware makes problems .",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,119,2016-10-19T15:30:39Z,2016-10-26T17:51:32Z,2016-10-28T20:48:38Z,MERGED,True,790,0,6,https://github.com/jandegr,Tomtom2,6,[],https://github.com/navit-gps/navit/pull/119,https://github.com/jandegr,5,https://github.com/navit-gps/navit/pull/119#issuecomment-257024588,"Builds a package for Tomtom similar to those @xenos1984  used to post
http://wiki.navit-project.org/index.php/TomTom and as a continuation of
http://trac.navit-project.org/ticket/1144

uses Cmake for Navit instead of autotools
has translations and espeak + espeakdsp from Gernot
does not (yet) provide a config for 320x240 screens
once finished HAVE_API_TOMTOM was not needed anymore but it is preserved for future changes
tested on a Tomtom go 710","The plugin works on older tomtom navcores, I don't konw the exact numbers but from what I know it does not work on navcores having lanes assist or junction view, but found it working on older versions, at some point tomtom disabled plugins. Most important is it works properly in opentom.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,120,2016-10-21T22:32:48Z,2016-10-21T22:39:18Z,2020-08-18T11:59:23Z,MERGED,True,16,6,1,https://github.com/pgrandin,Automatic translation import,1,['i18n'],https://github.com/navit-gps/navit/pull/120,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/120,Update:i18n:Updated Portuguese translation from launchpad,Update:i18n:Updated Portuguese translation from launchpad,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,121,2016-10-21T22:33:12Z,2016-10-21T22:39:43Z,2020-08-18T11:59:23Z,MERGED,True,27,17,1,https://github.com/pgrandin,Automatic translation import,1,['i18n'],https://github.com/navit-gps/navit/pull/121,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/121,Update:i18n:Updated Norwegian translation from launchpad,Update:i18n:Updated Norwegian translation from launchpad,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,122,2016-11-30T22:35:45Z,2016-11-30T22:36:03Z,2016-12-02T17:18:39Z,MERGED,True,75,53,11,https://github.com/pgrandin,Upgrade our CircleCI image to Trusty,32,[],https://github.com/navit-gps/navit/pull/122,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/122,"We were currently running our tests on Precise.
Moved most of the dependencies installation in each build script
Also, enabled parallelization of builds which reduce the total build time by ~5 minutes (we can do better by distributing the jobs differently)","We were currently running our tests on Precise.
Moved most of the dependencies installation in each build script
Also, enabled parallelization of builds which reduce the total build time by ~5 minutes (we can do better by distributing the jobs differently)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,122,2016-11-30T22:35:45Z,2016-11-30T22:36:03Z,2016-12-02T17:18:39Z,MERGED,True,75,53,11,https://github.com/pgrandin,Upgrade our CircleCI image to Trusty,32,[],https://github.com/navit-gps/navit/pull/122,https://github.com/jandegr,2,https://github.com/navit-gps/navit/pull/122#issuecomment-264427036,"We were currently running our tests on Precise.
Moved most of the dependencies installation in each build script
Also, enabled parallelization of builds which reduce the total build time by ~5 minutes (we can do better by distributing the jobs differently)","it now fetches the android ndk for each of the android builds, I think this leads to a problem when both android builds are done in the same container.
Starting build script #6 : ci/build_android.sh replace /home/ubuntu/android-ndk-r13/toolchains/x86-4.9/prebuilt/linux-x86_64/COPYING? [y]es, [n]o, [A]ll, [N]one, [r]ename:  command bash ci/build.sh took more than 10 minutes since last output
https://circleci.com/gh/navit-gps/navit/1367",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,122,2016-11-30T22:35:45Z,2016-11-30T22:36:03Z,2016-12-02T17:18:39Z,MERGED,True,75,53,11,https://github.com/pgrandin,Upgrade our CircleCI image to Trusty,32,[],https://github.com/navit-gps/navit/pull/122,https://github.com/pgrandin,3,https://github.com/navit-gps/navit/pull/122#issuecomment-264507546,"We were currently running our tests on Precise.
Moved most of the dependencies installation in each build script
Also, enabled parallelization of builds which reduce the total build time by ~5 minutes (we can do better by distributing the jobs differently)","Good catch @jandegr
I restored the branch for further work, the fix should be simple.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,122,2016-11-30T22:35:45Z,2016-11-30T22:36:03Z,2016-12-02T17:18:39Z,MERGED,True,75,53,11,https://github.com/pgrandin,Upgrade our CircleCI image to Trusty,32,[],https://github.com/navit-gps/navit/pull/122,https://github.com/pgrandin,4,https://github.com/navit-gps/navit/pull/122#issuecomment-264509011,"We were currently running our tests on Precise.
Moved most of the dependencies installation in each build script
Also, enabled parallelization of builds which reduce the total build time by ~5 minutes (we can do better by distributing the jobs differently)",Should be fixed in 53a5f48,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,123,2016-11-30T23:51:26Z,2016-12-01T00:04:01Z,2020-08-18T11:59:23Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Afrikaans translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/123,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/123,Update:i18n:Updated Afrikaans translation from launchpad,Update:i18n:Updated Afrikaans translation from launchpad,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,124,2016-12-01T01:30:58Z,2016-12-01T01:42:37Z,2020-08-18T11:59:23Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated,1,['i18n'],https://github.com/navit-gps/navit/pull/124,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/124,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,125,2016-12-01T01:46:45Z,2016-12-01T02:02:40Z,2020-08-18T11:59:24Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated,1,['i18n'],https://github.com/navit-gps/navit/pull/125,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/125,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,126,2016-12-01T02:01:00Z,2016-12-01T02:03:26Z,2020-08-18T11:59:24Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated,1,['i18n'],https://github.com/navit-gps/navit/pull/126,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/126,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,127,2016-12-01T02:14:59Z,2016-12-01T02:17:51Z,2020-08-18T11:58:44Z,MERGED,True,9,0,1,https://github.com/pgrandin,Update:i18n:Updated,1,['i18n'],https://github.com/navit-gps/navit/pull/127,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/127,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,128,2016-12-01T02:28:46Z,2016-12-01T02:55:30Z,2020-08-18T11:58:44Z,MERGED,True,14,4,1,https://github.com/pgrandin,Update:i18n:Updated,1,['i18n'],https://github.com/navit-gps/navit/pull/128,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/128,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,129,2016-12-01T02:57:20Z,2016-12-01T05:25:44Z,2020-08-18T11:58:44Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Catalan translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/129,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/129,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,130,2016-12-01T03:11:14Z,2016-12-01T05:25:58Z,2020-08-18T11:58:45Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated German (Switzerland) translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/130,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/130,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,131,2016-12-01T03:25:14Z,2016-12-01T05:26:14Z,2020-08-18T11:58:45Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated English (Australia) translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/131,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/131,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,132,2016-12-01T03:41:21Z,2016-12-01T05:26:26Z,2020-08-18T11:58:45Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Greek translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/132,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/132,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,133,2016-12-01T03:55:07Z,2016-12-01T05:26:40Z,2020-08-18T11:58:46Z,MERGED,True,9,0,1,https://github.com/pgrandin,Update:i18n:Updated Welsh translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/133,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/133,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,134,2016-12-01T04:11:21Z,2016-12-01T05:26:53Z,2020-08-18T11:58:46Z,MERGED,True,9,0,1,https://github.com/pgrandin,Update:i18n:Updated Spanish translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/134,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/134,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,135,2016-12-01T04:27:16Z,2016-12-01T05:27:04Z,2020-08-18T11:58:46Z,MERGED,True,9,0,1,https://github.com/pgrandin,Update:i18n:Updated German translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/135,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/135,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,136,2016-12-01T04:40:53Z,2016-12-01T05:27:15Z,2020-08-18T11:58:47Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated English (Canada) translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/136,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/136,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,137,2016-12-01T04:55:35Z,2016-12-01T05:27:27Z,2020-08-18T11:58:48Z,MERGED,True,9,0,1,https://github.com/pgrandin,Update:i18n:Updated English (United Kingdom) translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/137,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/137,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,138,2016-12-01T05:12:43Z,2016-12-01T05:27:40Z,2020-08-18T11:58:48Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Estonian translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/138,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/138,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,139,2016-12-01T05:31:03Z,2016-12-01T16:30:31Z,2020-08-18T11:58:48Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Esperanto translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/139,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/139,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,140,2016-12-01T05:49:19Z,2016-12-01T16:24:38Z,2020-08-18T11:58:49Z,MERGED,True,13,2,1,https://github.com/pgrandin,Update:i18n:Updated French (fr) translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/140,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/140,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,141,2016-12-01T06:03:38Z,2016-12-01T16:24:53Z,2020-08-18T11:58:49Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Basque translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/141,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/141,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,142,2016-12-01T06:17:06Z,2016-12-01T16:25:06Z,2020-08-18T11:58:50Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Persian translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/142,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/142,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,143,2016-12-01T06:30:46Z,2016-12-01T16:25:16Z,2020-08-18T11:58:50Z,MERGED,True,15,6,1,https://github.com/pgrandin,Update:i18n:Updated Finnish translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/143,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/143,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,144,2016-12-01T06:47:16Z,2016-12-01T16:25:30Z,2020-08-18T11:58:50Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Faroese translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/144,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/144,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,145,2016-12-01T07:01:24Z,2016-12-01T16:30:21Z,2020-08-18T11:58:50Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Galician translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/145,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/145,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,146,2016-12-01T07:15:28Z,2016-12-01T16:30:11Z,2020-08-18T11:58:51Z,MERGED,True,14,6,1,https://github.com/pgrandin,Update:i18n:Updated Hebrew translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/146,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/146,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,147,2016-12-01T07:29:05Z,2016-12-01T16:29:53Z,2020-08-18T11:58:51Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Filipino translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/147,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/147,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,148,2016-12-01T07:46:14Z,2016-12-01T16:29:40Z,2020-08-18T11:58:51Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Japanese translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/148,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/148,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,149,2016-12-01T08:00:06Z,2016-12-01T16:29:28Z,2020-08-18T11:58:51Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated French/Switzerland translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/149,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/149,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,150,2016-12-01T08:28:53Z,2016-12-01T16:29:17Z,2020-08-18T11:58:52Z,MERGED,True,13,4,1,https://github.com/pgrandin,Update:i18n:Updated Hungarian translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/150,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/150,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,151,2016-12-01T08:43:11Z,2016-12-01T16:29:08Z,2020-08-18T11:58:17Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Hindi translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/151,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/151,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,152,2016-12-01T08:57:44Z,2016-12-01T16:28:56Z,2020-08-18T11:58:17Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Croatian translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/152,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/152,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,153,2016-12-01T09:16:08Z,2016-12-01T16:28:45Z,2020-08-18T11:58:17Z,MERGED,True,15,6,1,https://github.com/pgrandin,Update:i18n:Updated Kazakh translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/153,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/153,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,154,2016-12-01T09:31:52Z,2016-12-01T16:28:34Z,2020-08-18T11:58:18Z,MERGED,True,10,1,1,https://github.com/pgrandin,Update:i18n:Updated Italian translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/154,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/154,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,155,2016-12-01T09:47:34Z,2016-12-01T16:28:05Z,2020-08-18T11:58:18Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Indonesian translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/155,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/155,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,156,2016-12-01T10:01:35Z,2016-12-01T16:27:49Z,2020-08-18T11:58:18Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Kurdish translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/156,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/156,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,157,2016-12-01T10:18:56Z,2016-12-01T16:27:37Z,2020-08-18T11:58:18Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Javanese translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/157,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/157,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,158,2016-12-01T10:34:18Z,2016-12-01T16:27:26Z,2020-08-18T11:58:19Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Korean translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/158,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/158,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,159,2016-12-01T10:48:16Z,2016-12-01T16:27:16Z,2020-08-18T11:58:19Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Kannada translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/159,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/159,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,160,2016-12-01T11:02:11Z,2016-12-01T16:27:04Z,2020-08-18T11:58:19Z,MERGED,True,14,6,1,https://github.com/pgrandin,Update:i18n:Updated Luxembourgish translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/160,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/160,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,161,2016-12-01T11:29:55Z,2016-12-01T16:26:53Z,2020-08-18T11:58:20Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Macedonian (mk) translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/161,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/161,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,162,2016-12-01T11:45:02Z,2016-12-01T16:26:41Z,2020-08-18T11:58:20Z,MERGED,True,9,0,1,https://github.com/pgrandin,Update:i18n:Updated Lithuanian translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/162,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/162,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,163,2016-12-01T11:58:56Z,2016-12-01T16:26:22Z,2020-08-18T11:58:20Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Mongolian translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/163,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/163,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,164,2016-12-01T12:16:26Z,2016-12-01T16:26:08Z,2020-08-18T11:58:20Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Malayalam translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/164,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/164,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,165,2016-12-01T18:10:50Z,2016-12-01T18:26:53Z,2020-08-18T11:58:21Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Latvian translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/165,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/165,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,166,2016-12-02T04:25:35Z,2016-12-02T06:47:54Z,2020-08-18T11:58:21Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Frisian translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/166,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/166,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,167,2016-12-02T19:18:55Z,2016-12-02T19:41:32Z,2020-08-18T11:58:21Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Kurdish (Sorani) translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/167,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/167,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,168,2016-12-02T19:22:55Z,2016-12-02T19:41:44Z,2020-08-18T11:58:22Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Bosnian translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/168,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/168,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,169,2016-12-02T22:04:39Z,2016-12-02T22:10:05Z,2016-12-02T22:10:05Z,CLOSED,False,6643,162,81,https://github.com/pohlinkzei,Audio merge,193,[],https://github.com/navit-gps/navit/pull/169,https://github.com/pohlinkzei,1,https://github.com/navit-gps/navit/pull/169,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,170,2016-12-02T22:06:36Z,2016-12-02T22:43:15Z,2020-08-18T11:58:22Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Marathi translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/170,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/170,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,171,2016-12-02T22:24:21Z,2016-12-02T22:43:38Z,2020-08-18T11:58:22Z,MERGED,True,144,143,1,https://github.com/pgrandin,Update:i18n:Updated Norwegian translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/171,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/171,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,172,2016-12-02T22:38:22Z,2016-12-02T22:43:52Z,2020-08-18T11:58:23Z,MERGED,True,9,0,1,https://github.com/pgrandin,Update:i18n:Updated Dutch translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/172,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/172,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,173,2016-12-02T22:56:00Z,2016-12-03T08:14:22Z,2020-08-18T11:58:23Z,MERGED,True,9,0,1,https://github.com/pgrandin,"Update:i18n:Updated German, Low translation from launchpad",1,['i18n'],https://github.com/navit-gps/navit/pull/173,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/173,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,174,2016-12-03T08:56:49Z,2016-12-03T20:13:03Z,2020-08-18T11:58:23Z,MERGED,True,9,0,1,https://github.com/pgrandin,"Update:i18n:Updated German, Low translation from launchpad",1,['i18n'],https://github.com/navit-gps/navit/pull/174,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/174,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,175,2016-12-03T09:14:22Z,2016-12-03T20:13:15Z,2020-08-18T11:58:23Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Norwegian Nynorsk translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/175,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/175,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,176,2016-12-03T09:27:52Z,2016-12-03T20:13:22Z,2020-08-18T11:57:00Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Romanian translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/176,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/176,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,177,2016-12-03T09:59:53Z,2016-12-03T20:13:27Z,2020-08-18T11:57:00Z,MERGED,True,9,0,1,https://github.com/pgrandin,Update:i18n:Updated Russian (ru) translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/177,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/177,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,178,2016-12-03T10:34:33Z,2016-12-04T19:15:57Z,2020-08-18T11:57:00Z,MERGED,True,9,0,1,https://github.com/pgrandin,Update:i18n:Updated Polish translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/178,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/178,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,179,2016-12-03T10:48:11Z,2016-12-04T23:11:40Z,2020-08-18T11:57:00Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Serbian translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/179,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/179,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,180,2016-12-03T11:04:55Z,2016-12-04T23:11:46Z,2020-08-18T11:57:01Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Telugu translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/180,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/180,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,181,2016-12-03T11:22:54Z,2016-12-04T23:11:50Z,2020-08-18T11:57:01Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Piemontese translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/181,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/181,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,182,2016-12-03T11:36:25Z,2016-12-03T20:13:32Z,2020-08-18T11:57:02Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Swahili translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/182,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/182,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,183,2016-12-03T11:58:47Z,2016-12-05T22:41:01Z,2020-08-18T11:57:02Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Turkish (tr)  translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/183,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/183,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,183,2016-12-03T11:58:47Z,2016-12-05T22:41:01Z,2020-08-18T11:57:02Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Turkish (tr)  translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/183,https://github.com/sleske,2,https://github.com/navit-gps/navit/pull/183#issuecomment-264636325,,"Hi,
it's good that translations from launchpad are imported regularly now.
However, is there maybe a way that causes less commits and merges? Right now, the recent commit history is rather messy and hard to read, because of all those commits and merges. Out of the last 200 commits, over 100 are I18N commits - one commit and one merge commit for each I18N file.
Could you not do a bulk import for all languages in one commit? And can we maybe do it without pull requests (this also makes the list of PRs on Github quite long)? Can't we just commit changes to trunk directly (or rebase the merges before pushing, or something like that)?
Greetings
Sebastian",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,183,2016-12-03T11:58:47Z,2016-12-05T22:41:01Z,2020-08-18T11:57:02Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Turkish (tr)  translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/183,https://github.com/xenos1984,3,https://github.com/navit-gps/navit/pull/183#issuecomment-264638028,,I fully agree. It would improve the readability of the history a lot to have just one single commit for all translation updates at once instead of this huge list.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,183,2016-12-03T11:58:47Z,2016-12-05T22:41:01Z,2020-08-18T11:57:02Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Turkish (tr)  translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/183,https://github.com/pgrandin,4,https://github.com/navit-gps/navit/pull/183#issuecomment-264662614,,"The fact that we ended up with so many PR and merge is a bug, indeed.
Usually we import translation updates one by one, when someone notice that a given translation has been updated on launchpad. This is a manual process that relies on a helper script.
My intent was to move forward with automation, by downloading all translations from launchpad maybe once a day, and import the updates automatically.
I should have tested the import script on a clone of the repo, and I apologize for the noise. Next time I will work on something as potentially disruptive for the history and readability I will do that.
Some of the noise has been caused by a trivial change in the translation where a block of text has been moved somewhere else. Technically the translation did not change, but the content of the file changed from git's perspective.
We need to test each translation separately, because sometime an update will break the compilation. This is why using branches is convenient.
The next step for this import process was also to have auto merge when tests in a branch succeed, as we do for the trunk -> master merge (so we still get two commits for each update, but no more PR). I was planning on doing that this week-end.
Would a rebase avoid the need for these two commits?",True,{'THUMBS_UP': ['https://github.com/sleske']}
navit-gps/navit,https://github.com/navit-gps/navit,183,2016-12-03T11:58:47Z,2016-12-05T22:41:01Z,2020-08-18T11:57:02Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Turkish (tr)  translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/183,https://github.com/sleske,5,https://github.com/navit-gps/navit/pull/183#issuecomment-265000828,,"HI,
and thanks for the prompt reply.

I should have tested the import script on a clone of the repo, and I apologize for the noise. Next time I will work on something as potentially disruptive for the history and readability I will do that.

It's not a big deal, the main thing is we find a solution that works in the longer run.

We need to test each translation separately, because sometime an update will break the compilation. This is why using branches is convenient.

Yes, if updates break the compilation, we will need a branch. However - is it unavoidable that updates break things? As long as the format of the .po file is ok, nothing should break. So maybe we can avoid these breakages by making them import script stricter?

The next step for this import process was also to have auto merge when tests in a branch succeed, as we do for the trunk -> master merge (so we still get two commits for each update, but no more PR). I was planning on doing that this week-end.
Would a rebase avoid the need for these two commits?

Yes, a rebase would mean we only need a single commit. The only thing ""lost"" would be the information where the ""import branch"" was branched off master - but that is an arbitrary point, as the branches are created automatically. So I think here a rebase would make more sense.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,183,2016-12-03T11:58:47Z,2016-12-05T22:41:01Z,2020-08-18T11:57:02Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Turkish (tr)  translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/183,https://github.com/pgrandin,6,https://github.com/navit-gps/navit/pull/183#issuecomment-265001478,,"It's not a big deal, the main thing is we find a solution that works in the longer run.

Definitely.

However - is it unavoidable that updates break things? As long as the format of the .po file is ok, nothing should break. So maybe we can avoid these breakages by making them import script stricter?

Since we import the files from launchpad, it is a bit hard to control how they are edited. If a translator adds an extra %s in a string, for example, compilation can break.

Yes, a rebase would mean we only need a single commit. The only thing ""lost"" would be the information where the ""import branch"" was branched off master - but that is an arbitrary point, as the branches are created automatically. So I think here a rebase would make more sense.

Sounds good. Let's test it on this PR!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,183,2016-12-03T11:58:47Z,2016-12-05T22:41:01Z,2020-08-18T11:57:02Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Turkish (tr)  translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/183,https://github.com/pgrandin,7,https://github.com/navit-gps/navit/pull/183#issuecomment-265084105,,"Here is a good example of a translation breaking the build, hence the need of testing each translation in a branch:
https://circleci.com/gh/navit-gps/navit/1463
[ 99%] Generating bg.mo /home/ubuntu/navit/bin/po/bg.po:12: nplurals = 2... /home/ubuntu/navit/bin/po/bg.po:96: ...but some messages have only one plural form /usr/bin/msgfmt: found 1 fatal error /home/ubuntu/navit/bin/po/bg.po: 430 translated messages, 315 untranslated messages. make[2]: *** [po/bg.mo] Error 1 make[1]: *** [po/CMakeFiles/locales.dir/all] Error 2 make: *** [all] Error 2",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,184,2016-12-03T12:29:49Z,2016-12-03T20:13:37Z,2020-08-18T11:57:03Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Sardinian translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/184,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/184,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,185,2016-12-03T12:47:20Z,2016-12-03T20:13:42Z,2020-08-18T11:57:03Z,MERGED,True,14,6,1,https://github.com/pgrandin,Update:i18n:Updated Vietnamese translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/185,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/185,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,186,2016-12-03T13:43:47Z,2016-12-03T20:13:47Z,2020-08-18T11:57:03Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Albanian translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/186,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/186,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,187,2016-12-03T14:01:34Z,2016-12-03T20:13:52Z,2020-08-18T11:57:03Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Thai translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/187,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/187,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,188,2016-12-03T19:46:34Z,2016-12-03T20:13:59Z,2020-08-18T11:57:04Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Slovenian translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/188,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/188,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,189,2016-12-03T20:04:26Z,2016-12-03T20:14:04Z,2020-08-18T11:57:04Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Tamil translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/189,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/189,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,190,2016-12-03T20:22:11Z,2016-12-04T01:59:30Z,2020-08-18T11:57:04Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Urdu translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/190,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/190,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,191,2016-12-03T20:36:01Z,2016-12-04T01:59:23Z,2020-08-18T11:57:04Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Simplified Chinese translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/191,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/191,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,192,2016-12-03T20:53:34Z,2016-12-04T01:59:18Z,2020-08-18T11:57:05Z,MERGED,True,15,5,1,https://github.com/pgrandin,Update:i18n:Updated Chinese (Hong Kong) translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/192,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/192,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,193,2016-12-03T21:30:01Z,2016-12-04T01:59:13Z,2020-08-18T11:56:09Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Ukrainian translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/193,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/193,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,194,2016-12-03T21:45:21Z,2016-12-04T01:59:08Z,2020-08-18T11:56:09Z,MERGED,True,14,5,1,https://github.com/pgrandin,Update:i18n:Updated Slovak translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/194,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/194,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,195,2016-12-31T01:19:12Z,2016-12-31T01:19:53Z,2016-12-31T01:19:59Z,MERGED,True,44,69,5,https://github.com/pgrandin,Android ci optimization,7,[],https://github.com/navit-gps/navit/pull/195,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/195,"Reduces the differences between android-arm and android-x86 builds.
Ideally we might have only one script with just different parameters soon.
Also bumped libpng for the tomtom build as it was breaking the build. In a future PR we'll have to find a better way to handle the tomtom builds dependencies","Reduces the differences between android-arm and android-x86 builds.
Ideally we might have only one script with just different parameters soon.
Also bumped libpng for the tomtom build as it was breaking the build. In a future PR we'll have to find a better way to handle the tomtom builds dependencies",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,196,2017-01-01T21:50:44Z,2017-01-01T21:50:56Z,2017-01-01T21:50:59Z,MERGED,True,29,23,5,https://github.com/pgrandin,Fix:CI:Improved linux tests,4,[],https://github.com/navit-gps/navit/pull/196,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/196,Ensures that the tests are run on the same container as the linux build.,Ensures that the tests are run on the same container as the linux build.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,197,2017-01-02T23:43:31Z,2017-02-23T15:12:58Z,2017-02-23T15:13:02Z,MERGED,True,100,3,3,https://github.com/pgrandin,Add:CI:Add basic UI tests,15,[],https://github.com/navit-gps/navit/pull/197,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/197,This PR adds some basic UI testing and generates a .gif with the results:,This PR adds some basic UI testing and generates a .gif with the results:,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,197,2017-01-02T23:43:31Z,2017-02-23T15:12:58Z,2017-02-23T15:13:02Z,MERGED,True,100,3,3,https://github.com/pgrandin,Add:CI:Add basic UI tests,15,[],https://github.com/navit-gps/navit/pull/197,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/197#issuecomment-270991160,This PR adds some basic UI testing and generates a .gif with the results:,"@jandegr this is correct for now.
There is several possible ways to work around this :

monitor dbus for events : e.g. at the end of a specific test, we should have a route computed
use OpenCV to detect if we are in the correct sub-menu, or if we get a specific item on screen. I have some proof of concept code to do that",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,198,2017-01-04T12:26:45Z,2017-04-26T05:36:38Z,2017-04-26T05:36:38Z,CLOSED,False,4024,3652,131,https://github.com/pohlinkzei,Reduce verbosity and reenable Rotary Encoder to zoom in and out.,71,[],https://github.com/navit-gps/navit/pull/198,https://github.com/pohlinkzei,1,https://github.com/navit-gps/navit/pull/198,"Hi,
I used to use a rotary encoder to control navit. The rotary triggers a virtual keypress on page up and page down. This keys should be used for zoom in and zoom out in map view, since all attempts to solve this with configuration in navit.xml failed.
Addionally some false-error messages will be removed by this PR.","Hi,
I used to use a rotary encoder to control navit. The rotary triggers a virtual keypress on page up and page down. This keys should be used for zoom in and zoom out in map view, since all attempts to solve this with configuration in navit.xml failed.
Addionally some false-error messages will be removed by this PR.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,198,2017-01-04T12:26:45Z,2017-04-26T05:36:38Z,2017-04-26T05:36:38Z,CLOSED,False,4024,3652,131,https://github.com/pohlinkzei,Reduce verbosity and reenable Rotary Encoder to zoom in and out.,71,[],https://github.com/navit-gps/navit/pull/198,https://github.com/pohlinkzei,2,https://github.com/navit-gps/navit/pull/198#issuecomment-283176146,"Hi,
I used to use a rotary encoder to control navit. The rotary triggers a virtual keypress on page up and page down. This keys should be used for zoom in and zoom out in map view, since all attempts to solve this with configuration in navit.xml failed.
Addionally some false-error messages will be removed by this PR.","I found a way to access the ZoomIn and ZoomOut from the OSD overlay, so the the keys aren't hardcoded anymore. But we should think about why we need 8bit broad key values. We should use utf8 instead.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,198,2017-01-04T12:26:45Z,2017-04-26T05:36:38Z,2017-04-26T05:36:38Z,CLOSED,False,4024,3652,131,https://github.com/pohlinkzei,Reduce verbosity and reenable Rotary Encoder to zoom in and out.,71,[],https://github.com/navit-gps/navit/pull/198,https://github.com/pgrandin,3,https://github.com/navit-gps/navit/pull/198#issuecomment-297234867,"Hi,
I used to use a rotary encoder to control navit. The rotary triggers a virtual keypress on page up and page down. This keys should be used for zoom in and zoom out in map view, since all attempts to solve this with configuration in navit.xml failed.
Addionally some false-error messages will be removed by this PR.","I think that we're going to need to rebase this on current trunk, or submit a new PR, this one is getting difficult to review.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,198,2017-01-04T12:26:45Z,2017-04-26T05:36:38Z,2017-04-26T05:36:38Z,CLOSED,False,4024,3652,131,https://github.com/pohlinkzei,Reduce verbosity and reenable Rotary Encoder to zoom in and out.,71,[],https://github.com/navit-gps/navit/pull/198,https://github.com/pohlinkzei,4,https://github.com/navit-gps/navit/pull/198#issuecomment-297242940,"Hi,
I used to use a rotary encoder to control navit. The rotary triggers a virtual keypress on page up and page down. This keys should be used for zoom in and zoom out in map view, since all attempts to solve this with configuration in navit.xml failed.
Addionally some false-error messages will be removed by this PR.","Oh, I made a bit of a mess. I must admit that I forgot this PR was open and continued developing.
So closing is the best option.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,199,2017-01-13T10:06:30Z,2017-01-13T18:23:08Z,2017-01-13T18:23:24Z,MERGED,True,1,1,1,https://github.com/zintor,Updated: F-Droid download link,1,[],https://github.com/navit-gps/navit/pull/199,https://github.com/zintor,1,https://github.com/navit-gps/navit/pull/199,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,199,2017-01-13T10:06:30Z,2017-01-13T18:23:08Z,2017-01-13T18:23:24Z,MERGED,True,1,1,1,https://github.com/zintor,Updated: F-Droid download link,1,[],https://github.com/navit-gps/navit/pull/199,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/199#issuecomment-272509620,,Thanks for catching it @zintor !,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,200,2017-01-21T07:53:11Z,2017-01-21T20:14:47Z,2017-01-21T20:14:51Z,MERGED,True,6,10,1,https://github.com/gefin,fix buffer usage,2,[],https://github.com/navit-gps/navit/pull/200,https://github.com/gefin,1,https://github.com/navit-gps/navit/pull/200,"let espeakdsp don't send more bytes then received.
This solve the noise problem speaking empty strings","let espeakdsp don't send more bytes then received.
This solve the noise problem speaking empty strings",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,200,2017-01-21T07:53:11Z,2017-01-21T20:14:47Z,2017-01-21T20:14:51Z,MERGED,True,6,10,1,https://github.com/gefin,fix buffer usage,2,[],https://github.com/navit-gps/navit/pull/200,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/200#issuecomment-274285432,"let espeakdsp don't send more bytes then received.
This solve the noise problem speaking empty strings",Thanks!,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,201,2017-01-24T00:43:49Z,2017-01-30T18:49:44Z,2017-01-30T18:49:47Z,MERGED,True,314,4,5,https://github.com/pgrandin,Reducing code duplication in the tomtom builds,12,[],https://github.com/navit-gps/navit/pull/201,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/201,Minor work around the tomtom builds in CI,Minor work around the tomtom builds in CI,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,202,2017-01-25T18:40:52Z,2017-01-25T18:42:09Z,2017-01-25T18:42:09Z,MERGED,True,12,8,6,https://github.com/pgrandin,Android patches from Jandegr,12,[],https://github.com/navit-gps/navit/pull/202,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/202,"NDK downgrade
Build script updates
switching ACRA to email reports","NDK downgrade
Build script updates
switching ACRA to email reports",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,203,2017-01-25T19:46:33Z,2017-01-25T19:50:41Z,2017-01-25T19:51:15Z,MERGED,True,26,12,8,https://github.com/jandegr,Jandegr patch 1,16,[],https://github.com/navit-gps/navit/pull/203,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/203,"disable the notification because it causes a crash. If anybody is interested in restoring it....
#pr202 downgrades ndk because cmake reports getline found with ndk 13, but most devices are missing it","disable the notification because it causes a crash. If anybody is interested in restoring it....
#pr202 downgrades ndk because cmake reports getline found with ndk 13, but most devices are missing it",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,204,2017-01-26T13:38:38Z,2017-02-20T01:20:37Z,2017-02-20T01:20:40Z,MERGED,True,0,37,1,https://github.com/jandegr,autotools lefotover,1,[],https://github.com/navit-gps/navit/pull/204,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/204,"unless I am mistaken, this is an autotools leftover","unless I am mistaken, this is an autotools leftover",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,204,2017-01-26T13:38:38Z,2017-02-20T01:20:37Z,2017-02-20T01:20:40Z,MERGED,True,0,37,1,https://github.com/jandegr,autotools lefotover,1,[],https://github.com/navit-gps/navit/pull/204,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/204#issuecomment-280966579,"unless I am mistaken, this is an autotools leftover","Good catch, thank you!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,205,2017-01-31T00:44:30Z,2017-01-31T01:23:57Z,2017-01-31T08:10:51Z,MERGED,True,0,3,1,https://github.com/mvglasow,"Fix:port/android:Fix ""invalid DT_NEEDED"" warnings on API 23+, fixes #1348",1,[],https://github.com/navit-gps/navit/pull/205,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/205,I'll merge this as soon as CI finishes.,I'll merge this as soon as CI finishes.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,205,2017-01-31T00:44:30Z,2017-01-31T01:23:57Z,2017-01-31T08:10:51Z,MERGED,True,0,3,1,https://github.com/mvglasow,"Fix:port/android:Fix ""invalid DT_NEEDED"" warnings on API 23+, fixes #1348",1,[],https://github.com/navit-gps/navit/pull/205,https://github.com/mvglasow,2,https://github.com/navit-gps/navit/pull/205#issuecomment-276245785,I'll merge this as soon as CI finishes.,"CI fails due to apparently unrelated issues—I reverted this change on a separate branch, and I get the same error without my changes.
The latest error I’ve been getting, both with and without my fix, is:
ci/build_tomtom_minimal.sh: line 96: tomtom.cache: Permission denied

I have successfully built an APK, and the only change is in an Android-specific section, so it shouldn’t affect other builds. If it does break something, feel free to revert (a heads-up would be appreciated).",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,205,2017-01-31T00:44:30Z,2017-01-31T01:23:57Z,2017-01-31T08:10:51Z,MERGED,True,0,3,1,https://github.com/mvglasow,"Fix:port/android:Fix ""invalid DT_NEEDED"" warnings on API 23+, fixes #1348",1,[],https://github.com/navit-gps/navit/pull/205,https://github.com/mvglasow,3,https://github.com/navit-gps/navit/pull/205#issuecomment-276300091,I'll merge this as soon as CI finishes.,"CI finished successfully after merging—the issue seems to be with my own setup. I accidentally merged into master instead of trunk—fixed this by merging master into trunk, so everything should be OK now.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,206,2017-02-17T19:51:06Z,2017-02-20T01:19:39Z,2017-02-20T01:19:44Z,MERGED,True,49,51,1,https://github.com/jandegr,sunrise near poles simplification,2,[],https://github.com/navit-gps/navit/pull/206,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/206,"Remove redundant sunrise/set test.
If the first test shows we are near a pole, it will never get to the second test.
If we are not near a pole, a second test will result in the same.","Remove redundant sunrise/set test.
If the first test shows we are near a pole, it will never get to the second test.
If we are not near a pole, a second test will result in the same.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,206,2017-02-17T19:51:06Z,2017-02-20T01:19:39Z,2017-02-20T01:19:44Z,MERGED,True,49,51,1,https://github.com/jandegr,sunrise near poles simplification,2,[],https://github.com/navit-gps/navit/pull/206,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/206#issuecomment-280966495,"Remove redundant sunrise/set test.
If the first test shows we are near a pole, it will never get to the second test.
If we are not near a pole, a second test will result in the same.",Thanks @jandegr !,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,207,2017-02-20T22:36:59Z,2017-02-23T18:40:27Z,2017-02-23T18:40:50Z,MERGED,True,1746,22,15,https://github.com/metalstrolch,Add Qt5 graphics and vehicle,25,[],https://github.com/navit-gps/navit/pull/207,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/207,"This pull request is about adding basic qt5 support to navit.
It brings a qt5 graphics plug in.
It brings a qt5 vehicle plug in.","This pull request is about adding basic qt5 support to navit.
It brings a qt5 graphics plug in.
It brings a qt5 vehicle plug in.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,207,2017-02-20T22:36:59Z,2017-02-23T18:40:27Z,2017-02-23T18:40:50Z,MERGED,True,1746,22,15,https://github.com/metalstrolch,Add Qt5 graphics and vehicle,25,[],https://github.com/navit-gps/navit/pull/207,https://github.com/pohlinkzei,2,https://github.com/navit-gps/navit/pull/207#issuecomment-281280970,"This pull request is about adding basic qt5 support to navit.
It brings a qt5 graphics plug in.
It brings a qt5 vehicle plug in.","Hi, can you provide some information how to get it working? It doesn't run out of the box on Ubuntu, so I could need some input to find out why.
Thanks.
Edit: Got it. Sorry. Nice Work! But wouln't it be more useful if such a plugin with non standard configuration provides a modified config? This plugins are not tested by circleci if they are not enabled in navit.xml.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,207,2017-02-20T22:36:59Z,2017-02-23T18:40:27Z,2017-02-23T18:40:50Z,MERGED,True,1746,22,15,https://github.com/metalstrolch,Add Qt5 graphics and vehicle,25,[],https://github.com/navit-gps/navit/pull/207,https://github.com/metalstrolch,3,https://github.com/navit-gps/navit/pull/207#issuecomment-281348994,"This pull request is about adding basic qt5 support to navit.
It brings a qt5 graphics plug in.
It brings a qt5 vehicle plug in.","Hmm, never thought that the configuration of this is non standard. It's just graphics=""qt5"" usually.
What kinds of tests does CircleCI do to navit when the plugin is enabled? And where to provide the navit.xml? Within the navit/graphics/qt5 directory?
Unfortunately I'm not an CircleCI expert.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,207,2017-02-20T22:36:59Z,2017-02-23T18:40:27Z,2017-02-23T18:40:50Z,MERGED,True,1746,22,15,https://github.com/metalstrolch,Add Qt5 graphics and vehicle,25,[],https://github.com/navit-gps/navit/pull/207,https://github.com/metalstrolch,4,https://github.com/navit-gps/navit/pull/207#issuecomment-281349461,"This pull request is about adding basic qt5 support to navit.
It brings a qt5 graphics plug in.
It brings a qt5 vehicle plug in.","You can have vehicle=""qt5"" as well, if you have set up QWhereabouts correctly. It's the only way to get GPS fix on Jolla phones as there is no gpsd.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,207,2017-02-20T22:36:59Z,2017-02-23T18:40:27Z,2017-02-23T18:40:50Z,MERGED,True,1746,22,15,https://github.com/metalstrolch,Add Qt5 graphics and vehicle,25,[],https://github.com/navit-gps/navit/pull/207,https://github.com/pohlinkzei,5,https://github.com/navit-gps/navit/pull/207#issuecomment-281351400,"This pull request is about adding basic qt5 support to navit.
It brings a qt5 graphics plug in.
It brings a qt5 vehicle plug in.","CI tests the navit compilation and starts navit, does some nasty, magic stuff i forgot and closes navit afterwards.
It is easy as can be: I'd add the to be tested configuration into navit-sipped.xml, because this config will be used as standard. It does make the merge a bit more complicated, but tests the configuration.
If the graphics fail on startup of navit, ci wont get it if the plugin is inactive and has compiled fine. If the qt5 graphics do a segfault on startup, CI only gets it if the graphics were activated. Maybe we should add tests for multiple configs at one compilation. Or so.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,207,2017-02-20T22:36:59Z,2017-02-23T18:40:27Z,2017-02-23T18:40:50Z,MERGED,True,1746,22,15,https://github.com/metalstrolch,Add Qt5 graphics and vehicle,25,[],https://github.com/navit-gps/navit/pull/207,https://github.com/metalstrolch,6,https://github.com/navit-gps/navit/pull/207#issuecomment-281352082,"This pull request is about adding basic qt5 support to navit.
It brings a qt5 graphics plug in.
It brings a qt5 vehicle plug in.","Do we really want to ""globally"" change the default configuration of this? Because the up to now standard gtk graphics will get disabled? Wouldn't a change in default configuration confuse users? And does the nasty, magic stuff work with QT5 out of the box?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,207,2017-02-20T22:36:59Z,2017-02-23T18:40:27Z,2017-02-23T18:40:50Z,MERGED,True,1746,22,15,https://github.com/metalstrolch,Add Qt5 graphics and vehicle,25,[],https://github.com/navit-gps/navit/pull/207,https://github.com/pohlinkzei,7,https://github.com/navit-gps/navit/pull/207#issuecomment-281352804,"This pull request is about adding basic qt5 support to navit.
It brings a qt5 graphics plug in.
It brings a qt5 vehicle plug in.",Not if there is another way to test the plugin. For a qt5 related branch it makes sense to change the global config for CI. But we can handle the global config during merge. It is right: someone has to take care of it.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,207,2017-02-20T22:36:59Z,2017-02-23T18:40:27Z,2017-02-23T18:40:50Z,MERGED,True,1746,22,15,https://github.com/metalstrolch,Add Qt5 graphics and vehicle,25,[],https://github.com/navit-gps/navit/pull/207,https://github.com/metalstrolch,8,https://github.com/navit-gps/navit/pull/207#issuecomment-281354864,"This pull request is about adding basic qt5 support to navit.
It brings a qt5 graphics plug in.
It brings a qt5 vehicle plug in.","OK. I tried to keep the work as clean as possible, just changing things i have to.
But I can provide a changed default config and have a look what CircleCI results.
Then you cannot just merge this anymore, but so what.
And what about that topic after a merge? No more CircleCI for Qt5 at all?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,207,2017-02-20T22:36:59Z,2017-02-23T18:40:27Z,2017-02-23T18:40:50Z,MERGED,True,1746,22,15,https://github.com/metalstrolch,Add Qt5 graphics and vehicle,25,[],https://github.com/navit-gps/navit/pull/207,https://github.com/pohlinkzei,9,https://github.com/navit-gps/navit/pull/207#issuecomment-281356468,"This pull request is about adding basic qt5 support to navit.
It brings a qt5 graphics plug in.
It brings a qt5 vehicle plug in.","We have to add tests for all maintained GUI/Graphics. And that might be the point to drop changes of the navit-shipped.xml config. But as I am neither a CI expert, we should discuss this on iRC, too. ;)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,207,2017-02-20T22:36:59Z,2017-02-23T18:40:27Z,2017-02-23T18:40:50Z,MERGED,True,1746,22,15,https://github.com/metalstrolch,Add Qt5 graphics and vehicle,25,[],https://github.com/navit-gps/navit/pull/207,https://github.com/pgrandin,10,https://github.com/navit-gps/navit/pull/207#issuecomment-281374147,"This pull request is about adding basic qt5 support to navit.
It brings a qt5 graphics plug in.
It brings a qt5 vehicle plug in.","Nice!
I am really happy to see work happening on QT5, this opens the door for a much better UI using QML2.
I think that there is a few stuffs that we can improve in this PR:

we should drop navit/graphics/qt5/Makefile.am as we intend to support cmake only
in the ci/run_linux_tests.sh script, we should maybe split the tests in two : run once against gtk + internal, then using xslt (or even sed, as we do in ""ci/run_linux_tests.sh"", but a xslt would allow for a group of settings to be applied at once) we can switch to the qt5 graphics_driver and run another set of tests. This will avoid the need to modify navit_shipped.xml and we can revert that change too.

Otherwise nice job @metalstrolch !
I can take care of these changes a bit later if nobody can do it before.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,207,2017-02-20T22:36:59Z,2017-02-23T18:40:27Z,2017-02-23T18:40:50Z,MERGED,True,1746,22,15,https://github.com/metalstrolch,Add Qt5 graphics and vehicle,25,[],https://github.com/navit-gps/navit/pull/207,https://github.com/metalstrolch,11,https://github.com/navit-gps/navit/pull/207#issuecomment-281386225,"This pull request is about adding basic qt5 support to navit.
It brings a qt5 graphics plug in.
It brings a qt5 vehicle plug in.","@pgrandin
Would be nice of you to take care about the CircleCI stuff, as I did not fully understand the CircleCI setup used here. - thanks -",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,207,2017-02-20T22:36:59Z,2017-02-23T18:40:27Z,2017-02-23T18:40:50Z,MERGED,True,1746,22,15,https://github.com/metalstrolch,Add Qt5 graphics and vehicle,25,[],https://github.com/navit-gps/navit/pull/207,https://github.com/pgrandin,12,https://github.com/navit-gps/navit/pull/207#issuecomment-282055685,"This pull request is about adding basic qt5 support to navit.
It brings a qt5 graphics plug in.
It brings a qt5 vehicle plug in.","@metalstrolch nice work on bacca40
Exactly what I had in mind :)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,208,2017-02-22T08:29:37Z,2017-02-23T14:30:05Z,2018-11-05T09:13:41Z,MERGED,True,1470,0,3,https://github.com/cedricp,Add RaspberryPI hardware accelerated graphics support,4,[],https://github.com/navit-gps/navit/pull/208,https://github.com/cedricp,1,https://github.com/navit-gps/navit/pull/208,This is work in progress but functional. Still improving it.,This is work in progress but functional. Still improving it.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,208,2017-02-22T08:29:37Z,2017-02-23T14:30:05Z,2018-11-05T09:13:41Z,MERGED,True,1470,0,3,https://github.com/cedricp,Add RaspberryPI hardware accelerated graphics support,4,[],https://github.com/navit-gps/navit/pull/208,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/208#issuecomment-281635286,This is work in progress but functional. Still improving it.,"Thanks @cedricp !
I would like to request a few changes:

EGL could be used on other platforms than rasperry pi, so maybe we should name that driver egl instead of rpi? (this is of course open to discussion)
we have always been bad at documenting the code, but we need to get better at it :) Could you please add a few doxygen comments ? https://github.com/navit-gps/navit/blob/trunk/navit/plugin/j1850/j1850.c is a decent example
why do we need this?

SET(CMAKE_SHARED_LIBRARY_SONAME_C_FLAG ""-Wl,-soname,/data/data/org.navitproject.navit/lib/"")

Otherwise this is really nice to get hardware accelerated graphics support for the rpi, I am sure that many users will enjoy it (myself included ;) )
Thanks!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,208,2017-02-22T08:29:37Z,2017-02-23T14:30:05Z,2018-11-05T09:13:41Z,MERGED,True,1470,0,3,https://github.com/cedricp,Add RaspberryPI hardware accelerated graphics support,4,[],https://github.com/navit-gps/navit/pull/208,https://github.com/ernesto75,3,https://github.com/navit-gps/navit/pull/208#issuecomment-281637565,This is work in progress but functional. Still improving it.,"Il 22/feb/2017 11:51 AM, ""Pierre GRANDIN"" <notifications@github.com> ha
scritto:

Thanks @cedricp <https://github.com/cedricp> !

I would like to request a few changes:

   - EGL could be used on other platforms than rasperry pi, so maybe we
   should name that driver egl instead of rpi? (this is of course open to
   discussion)

If I remember correctly, there is also navit for maemo on Nokia N900 an ARM
based device using gles2",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,208,2017-02-22T08:29:37Z,2017-02-23T14:30:05Z,2018-11-05T09:13:41Z,MERGED,True,1470,0,3,https://github.com/cedricp,Add RaspberryPI hardware accelerated graphics support,4,[],https://github.com/navit-gps/navit/pull/208,https://github.com/cedricp,4,https://github.com/navit-gps/navit/pull/208#issuecomment-281667408,This is work in progress but functional. Still improving it.,"Ok to rename it to 'egl'. I've just added polygon filling feature (much more pretty !).
I'm starting documenting the code. I'm facing a strange issue with the compass and next_turn OSD, it crashes the application, gdb doesn't tell me anything (no trace back) apart a stack corruption... Any ideas ? Others OSDs are working fine, though.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,208,2017-02-22T08:29:37Z,2017-02-23T14:30:05Z,2018-11-05T09:13:41Z,MERGED,True,1470,0,3,https://github.com/cedricp,Add RaspberryPI hardware accelerated graphics support,4,[],https://github.com/navit-gps/navit/pull/208,https://github.com/jandegr,5,https://github.com/navit-gps/navit/pull/208#issuecomment-281682102,This is work in progress but functional. Still improving it.,"AFAIK this reverts 7782ba3, please NO",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,208,2017-02-22T08:29:37Z,2017-02-23T14:30:05Z,2018-11-05T09:13:41Z,MERGED,True,1470,0,3,https://github.com/cedricp,Add RaspberryPI hardware accelerated graphics support,4,[],https://github.com/navit-gps/navit/pull/208,https://github.com/pgrandin,6,https://github.com/navit-gps/navit/pull/208#issuecomment-281744478,This is work in progress but functional. Still improving it.,"Thanks @jandegr
So it looks like this is because @cedricp 's code is based on a trunk from over 23 days ago.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,208,2017-02-22T08:29:37Z,2017-02-23T14:30:05Z,2018-11-05T09:13:41Z,MERGED,True,1470,0,3,https://github.com/cedricp,Add RaspberryPI hardware accelerated graphics support,4,[],https://github.com/navit-gps/navit/pull/208,https://github.com/cedricp,7,https://github.com/navit-gps/navit/pull/208#issuecomment-281993834,This is work in progress but functional. Still improving it.,"Did a lot of fixes...

Polygon filling
Renamed rpi to egl
Overlays are working, but still have an crash issue when in release mode, ok in debug (????)
enabled drag_bitmap to improve reactivity

Hope you'll like it :)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,208,2017-02-22T08:29:37Z,2017-02-23T14:30:05Z,2018-11-05T09:13:41Z,MERGED,True,1470,0,3,https://github.com/cedricp,Add RaspberryPI hardware accelerated graphics support,4,[],https://github.com/navit-gps/navit/pull/208,https://github.com/cedricp,8,https://github.com/navit-gps/navit/pull/208#issuecomment-281997271,This is work in progress but functional. Still improving it.,"Overlay crash fixed, no more severe bug :) also added alpha blending",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,208,2017-02-22T08:29:37Z,2017-02-23T14:30:05Z,2018-11-05T09:13:41Z,MERGED,True,1470,0,3,https://github.com/cedricp,Add RaspberryPI hardware accelerated graphics support,4,[],https://github.com/navit-gps/navit/pull/208,https://github.com/pgrandin,9,https://github.com/navit-gps/navit/pull/208#issuecomment-282006011,This is work in progress but functional. Still improving it.,"Nice work, thanks @cedricp !
I'll look into adding some build tests for this driver.",True,{'HOORAY': ['https://github.com/cedricp']}
navit-gps/navit,https://github.com/navit-gps/navit,208,2017-02-22T08:29:37Z,2017-02-23T14:30:05Z,2018-11-05T09:13:41Z,MERGED,True,1470,0,3,https://github.com/cedricp,Add RaspberryPI hardware accelerated graphics support,4,[],https://github.com/navit-gps/navit/pull/208,https://github.com/cedricp,10,https://github.com/navit-gps/navit/pull/208#issuecomment-282009264,This is work in progress but functional. Still improving it.,"Thank you, for a Raspberry build, you may need to tweak cflags :
cmake (...) -DCMAKE_C_FLAGS=""-I[/path/to/videocore_devel]/include/interface/vcos/pthreads -I[/path/to/videocore_devel]/include/interface/vmcs_host/linux
and be sure SDL2 is built with egl/gles2 support",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,208,2017-02-22T08:29:37Z,2017-02-23T14:30:05Z,2018-11-05T09:13:41Z,MERGED,True,1470,0,3,https://github.com/cedricp,Add RaspberryPI hardware accelerated graphics support,4,[],https://github.com/navit-gps/navit/pull/208,https://github.com/pgrandin,11,https://github.com/navit-gps/navit/pull/208#issuecomment-299360132,This is work in progress but functional. Still improving it.,"@cedricp I just gave a quick shot at testing this on my pi running Raspbian, and I have a few questions.
Could you please clarify the dependencies? You mention sdl2 but iirc until now we were using sdl1.2
A few notes here or in the wiki about how to setup the dependencies includeing the vocs/vmcs part would be really helpful.
Also, did you try this using the framebuffer or only with X?
Thanks!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,208,2017-02-22T08:29:37Z,2017-02-23T14:30:05Z,2018-11-05T09:13:41Z,MERGED,True,1470,0,3,https://github.com/cedricp,Add RaspberryPI hardware accelerated graphics support,4,[],https://github.com/navit-gps/navit/pull/208,https://github.com/cedricp,12,https://github.com/navit-gps/navit/pull/208#issuecomment-299410844,This is work in progress but functional. Still improving it.,"Hi,
I needed to use SDL2 as it is the only one that supports EGL context. The application runs without a XServer and uses videocore dispmanx as rendering context.
There are a lot of doc that explain how to compile SDL2 on RPi, but basically, here is how I do :
(I use a cross compiler on my side)
EXTRA_CFLAGS=""-I$LIB_PREFIX/include/interface/vcos/pthreads -I$LIB_PREFIX/include/interface/vmcs_host/linux""
EXTRA_CXXFLAGS=""-I$LIB_PREFIX/include/interface/vcos/pthreads -I$LIB_PREFIX/include/interface/vmcs_host/linux""
configure 
--disable-pulseaudio 
--disable-esd 
--disable-video-mir 
--disable-video-wayland 
--disable-video-x11 
--disable-video-opengl 
--enable-static --enable-shared 
CFLAGS=""$EXTRA_CFLAGS"" CXXFLAGS=""$EXTRA_CXXFLAGS""
The video driver should compile fine once correctly compiled.
Hope it helps",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,208,2017-02-22T08:29:37Z,2017-02-23T14:30:05Z,2018-11-05T09:13:41Z,MERGED,True,1470,0,3,https://github.com/cedricp,Add RaspberryPI hardware accelerated graphics support,4,[],https://github.com/navit-gps/navit/pull/208,https://github.com/cedricp,13,https://github.com/navit-gps/navit/pull/208#issuecomment-434621726,This is work in progress but functional. Still improving it.,"Hi, I recently fixed some issues on this graphic driver here : https://github.com/cedricp/navit/tree/rpi/navit/graphics/egl

No more glitches when dragging map
Tested on a Rpi3, the rendering is really fast and responsive
Added multisampling method (not as good as I expected, but working)
I'll post a video ASAP",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,208,2017-02-22T08:29:37Z,2017-02-23T14:30:05Z,2018-11-05T09:13:41Z,MERGED,True,1470,0,3,https://github.com/cedricp,Add RaspberryPI hardware accelerated graphics support,4,[],https://github.com/navit-gps/navit/pull/208,https://github.com/jkoan,14,https://github.com/navit-gps/navit/pull/208#issuecomment-434698997,This is work in progress but functional. Still improving it.,If you are finished please make a new Pull Request ;),True,{}
navit-gps/navit,https://github.com/navit-gps/navit,208,2017-02-22T08:29:37Z,2017-02-23T14:30:05Z,2018-11-05T09:13:41Z,MERGED,True,1470,0,3,https://github.com/cedricp,Add RaspberryPI hardware accelerated graphics support,4,[],https://github.com/navit-gps/navit/pull/208,https://github.com/cedricp,15,https://github.com/navit-gps/navit/pull/208#issuecomment-434704601,This is work in progress but functional. Still improving it.,"OK, I'm currently adding an overlay plugin to show vehicle information from CAN bus and as soon as all is up and running, I'll make a new PR.
BTW, is it possible to give real vehicle speed to NavIt (from vehicle bus) to improve navigation (if GPS signal is lost, for example) ?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,208,2017-02-22T08:29:37Z,2017-02-23T14:30:05Z,2018-11-05T09:13:41Z,MERGED,True,1470,0,3,https://github.com/cedricp,Add RaspberryPI hardware accelerated graphics support,4,[],https://github.com/navit-gps/navit/pull/208,https://github.com/cedricp,16,https://github.com/navit-gps/navit/pull/208#issuecomment-435804466,This is work in progress but functional. Still improving it.,"I also made a buildroot config (with a lot of packages fix) to create a NavIt ISO image for Raspberry Pi 3 with just needed libs and services (GPSD/freetype/SDL2/fontconfig, etc.)
https://gitlab.com/DrQuark/buildroot_rpi3
Contact me if you're interested.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,209,2017-02-24T14:16:48Z,2017-02-28T14:49:25Z,2017-02-28T14:49:43Z,MERGED,True,7,4,3,https://github.com/jandegr,android fixes,14,[],https://github.com/navit-gps/navit/pull/209,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/209,"bump sdk to 25 - nougat
fix signature, better would be to use apksigner instead of jarsigner but I could not figure out the structure of the keystore on CI
fix x86 build name","bump sdk to 25 - nougat
fix signature, better would be to use apksigner instead of jarsigner but I could not figure out the structure of the keystore on CI
fix x86 build name",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,210,2017-02-28T19:18:28Z,2017-03-02T10:17:07Z,2017-03-03T00:00:30Z,MERGED,True,74,14,6,https://github.com/pohlinkzei,Hide impossible keys at the internal keyboard instead of highlighting the possible ones (leftover from PR5),6,[],https://github.com/navit-gps/navit/pull/210,https://github.com/pohlinkzei,1,https://github.com/navit-gps/navit/pull/210,"Hi,
If we use the internal gui for searching a country/town/street, at a point are the possible next keys highlighted to give a hint to the user which keys are possible and which are not. This PR goes the other way around and disables the impossible next keys.
The main reason for this is if you access the gui through a keyboard (or buttons or rotary encoder) the selected and highlighted key are highlighted the same way, so one can hardly divide highlighted from selected.
The town search was tested with the sample map and munich, so I expect it is working with (any) umlauts.
The feature can be activated in navit.xml: Add the attr 'hide_next_possible_keys=""1""' to <gui type=""internal"" [...] />","Hi,
If we use the internal gui for searching a country/town/street, at a point are the possible next keys highlighted to give a hint to the user which keys are possible and which are not. This PR goes the other way around and disables the impossible next keys.
The main reason for this is if you access the gui through a keyboard (or buttons or rotary encoder) the selected and highlighted key are highlighted the same way, so one can hardly divide highlighted from selected.
The town search was tested with the sample map and munich, so I expect it is working with (any) umlauts.
The feature can be activated in navit.xml: Add the attr 'hide_next_possible_keys=""1""' to <gui type=""internal"" [...] />",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,210,2017-02-28T19:18:28Z,2017-03-02T10:17:07Z,2017-03-03T00:00:30Z,MERGED,True,74,14,6,https://github.com/pohlinkzei,Hide impossible keys at the internal keyboard instead of highlighting the possible ones (leftover from PR5),6,[],https://github.com/navit-gps/navit/pull/210,https://github.com/sleske,2,https://github.com/navit-gps/navit/pull/210#issuecomment-283685415,"Hi,
If we use the internal gui for searching a country/town/street, at a point are the possible next keys highlighted to give a hint to the user which keys are possible and which are not. This PR goes the other way around and disables the impossible next keys.
The main reason for this is if you access the gui through a keyboard (or buttons or rotary encoder) the selected and highlighted key are highlighted the same way, so one can hardly divide highlighted from selected.
The town search was tested with the sample map and munich, so I expect it is working with (any) umlauts.
The feature can be activated in navit.xml: Add the attr 'hide_next_possible_keys=""1""' to <gui type=""internal"" [...] />",Thanks for the fix. I have closed the corresponding trac ticket - http://trac.navit-project.org/ticket/1339 .,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,210,2017-02-28T19:18:28Z,2017-03-02T10:17:07Z,2017-03-03T00:00:30Z,MERGED,True,74,14,6,https://github.com/pohlinkzei,Hide impossible keys at the internal keyboard instead of highlighting the possible ones (leftover from PR5),6,[],https://github.com/navit-gps/navit/pull/210,https://github.com/sleske,3,https://github.com/navit-gps/navit/pull/210#issuecomment-283815487,"Hi,
If we use the internal gui for searching a country/town/street, at a point are the possible next keys highlighted to give a hint to the user which keys are possible and which are not. This PR goes the other way around and disables the impossible next keys.
The main reason for this is if you access the gui through a keyboard (or buttons or rotary encoder) the selected and highlighted key are highlighted the same way, so one can hardly divide highlighted from selected.
The town search was tested with the sample map and munich, so I expect it is working with (any) umlauts.
The feature can be activated in navit.xml: Add the attr 'hide_next_possible_keys=""1""' to <gui type=""internal"" [...] />","I did some cleanup work:
I renamed the new option to ""hide_impossible_next_keys"", because it hides impossible keys, not possible keys.
So the right syntax to use in navit.xml is:
gui type=""internal"" hide_impossible_next_keys=""1"" ...
I also documented this in the WIki, on http://wiki.navit-project.org/index.php/Configuration/Full_list_of_options#gui and http://wiki.navit-project.org/index.php/Internal_GUI#Using_the_Internal_GUI .
That way people will actually know about this :-).",True,{'THUMBS_UP': ['https://github.com/pgrandin']}
navit-gps/navit,https://github.com/navit-gps/navit,210,2017-02-28T19:18:28Z,2017-03-02T10:17:07Z,2017-03-03T00:00:30Z,MERGED,True,74,14,6,https://github.com/pohlinkzei,Hide impossible keys at the internal keyboard instead of highlighting the possible ones (leftover from PR5),6,[],https://github.com/navit-gps/navit/pull/210,https://github.com/sleske,4,https://github.com/navit-gps/navit/pull/210#issuecomment-283822324,"Hi,
If we use the internal gui for searching a country/town/street, at a point are the possible next keys highlighted to give a hint to the user which keys are possible and which are not. This PR goes the other way around and disables the impossible next keys.
The main reason for this is if you access the gui through a keyboard (or buttons or rotary encoder) the selected and highlighted key are highlighted the same way, so one can hardly divide highlighted from selected.
The town search was tested with the sample map and munich, so I expect it is working with (any) umlauts.
The feature can be activated in navit.xml: Add the attr 'hide_next_possible_keys=""1""' to <gui type=""internal"" [...] />","Finally, I noted a few remaining problems with hiding the keys:
If you enter some characters, then delete the last one, the number of possible keys typically increases. However, the once again possible keys only appear slowly as the search progresses (especially on slow devices, search can take a while). On deleting a character, we should probably immediately show all keys, then hide them later when search is finished. Probably not a major problem, as deleting characters is not so typical.
In some cases, the hiding feature fails to find the possible keys, and falls back to showing all:

If the search input uses incorrect casing (search for ""MU"" with the sample map)
If the search input uses special characters such as umlauts (search for ""Mü"")
If the search input is for the second or later word in a multi-word name (search for ""Farch"", finds  ""Wolfratshausen (Farchet)"").

The problem of failing to find possible keys is old, however, it also occurs when highlighting keys instead of hiding them, so is not caused by this PR.
Maybe we can get to this later...",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,211,2017-03-02T07:11:09Z,2017-03-09T20:50:36Z,2017-03-09T20:50:39Z,MERGED,True,36,14,1,https://github.com/jandegr,Postcodesearch_essentials,2,[],https://github.com/navit-gps/navit/pull/211,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/211,a tweak in binfile.c so a gui can be made to search for attr_town_postal in a similar way as a search is done for attr_town_or_district_name.,a tweak in binfile.c so a gui can be made to search for attr_town_postal in a similar way as a search is done for attr_town_or_district_name.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,211,2017-03-02T07:11:09Z,2017-03-09T20:50:36Z,2017-03-09T20:50:39Z,MERGED,True,36,14,1,https://github.com/jandegr,Postcodesearch_essentials,2,[],https://github.com/navit-gps/navit/pull/211,https://github.com/jandegr,2,https://github.com/navit-gps/navit/pull/211#issuecomment-283626584,a tweak in binfile.c so a gui can be made to search for attr_town_postal in a similar way as a search is done for attr_town_or_district_name.,just some usage sample,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,212,2017-03-25T18:29:16Z,2017-08-25T17:27:30Z,2017-11-02T23:59:17Z,CLOSED,False,13,13,3,https://github.com/jandegr,No libcrypto test trac 1350,3,[],https://github.com/navit-gps/navit/pull/212,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/212,"see the issue in http://trac.navit-project.org/ticket/1350
I found no usage of libcrypto in the code and my best guess is this has at some point
been used for some non-disclosed or removed code.
If somebody could please test it on linux and then remove the lines I commented-out, I can't test it on linux right now.","see the issue in http://trac.navit-project.org/ticket/1350
I found no usage of libcrypto in the code and my best guess is this has at some point
been used for some non-disclosed or removed code.
If somebody could please test it on linux and then remove the lines I commented-out, I can't test it on linux right now.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,212,2017-03-25T18:29:16Z,2017-08-25T17:27:30Z,2017-11-02T23:59:17Z,CLOSED,False,13,13,3,https://github.com/jandegr,No libcrypto test trac 1350,3,[],https://github.com/navit-gps/navit/pull/212,https://github.com/gefin,2,https://github.com/navit-gps/navit/pull/212#issuecomment-289232030,"see the issue in http://trac.navit-project.org/ticket/1350
I found no usage of libcrypto in the code and my best guess is this has at some point
been used for some non-disclosed or removed code.
If somebody could please test it on linux and then remove the lines I commented-out, I can't test it on linux right now.","I was able to build  working navit from no_libcrypto_test_trac_1350 without errors.
OS : debian 7
cmake summary:
-- SVG2PNG-Converter: /usr/bin/convert
-- Use plugins: MODULE
Summary:
--->>> autoload
Disabled  osso ( Default )
--->>> binding
Disabled  dbus ( dbus-glib-1 not found )
Disabled  python ( python libraries not found )
Disabled  win32 ( Default )
--->>> font
Enabled   freetype ( freetype found )
--->>> graphics
Disabled  android ( FreeType library not found )
Disabled  cocoa ( Default )
Disabled  egl ( Required library not found )
Disabled  gd ( FreeType library not found )
Enabled   gtk_drawing_area ( GTK libs found )
Enabled   null ( Default )
Disabled  opengl ( FreeType library not found )
Disabled  qt5 ( Qt5 libraries not found )
Disabled  qt_qpainter ( Qt libraries not found )
Disabled  sdl ( Required library not found )
--->>> gui
Enabled   gtk ( GTK libs found )
Enabled   internal ( Default )
Disabled  qml ( Qt Declarative not found )
--->>> map
Enabled   binfile ( Default )
Enabled   csv ( Default )
Enabled   filter ( Default )
Disabled  garmin ( Garmin library not found )
Enabled   mg ( Default )
Enabled   shapefile ( Default )
Enabled   textfile ( Default )
--->>> osd
Enabled   core ( Default )
--->>> plugin
Disabled  j1850 ( Default )
Disabled  pedestrian ( Default )
--->>> speech
Disabled  android ( Default )
Enabled   cmdline ( system() call is available )
Disabled  dbus ( dbus-glib-1 not found )
Disabled  espeak ( Default )
Disabled  iphone ( Default )
Disabled  speech_dispatcher ( speech_dispatcher lib not found )
--->>> support
Disabled  espeak ( Default )
Disabled  ezxml ( native Glib found )
Disabled  gettext_intl ( native libintl found )
Disabled  glib ( native Glib found )
Disabled  libpng ( native libpng found )
Enabled   shapefile ( Default )
Disabled  wordexp ( native wordexp found )
Disabled  zlib ( native zlib found )
--->>> vehicle
Disabled  android ( Default )
Enabled   demo ( Default )
Enabled   file ( Default )
Disabled  gpsd ( gpsd lib not found )
Disabled  gpsd_dbus ( dbus-glib-1 not found )
Disabled  gypsy ( gypsy lib not found )
Disabled  iphone ( Default )
Disabled  maemo ( Default )
Disabled  null ( Default )
Disabled  qt5 ( Qt5 libraries not found )
Disabled  wince ( Default )
--->>> Features
Disabled  BUILD_MAPTOOL ( maptool works only on 64 bit architectures )
Disabled  DBUS_USE_SYSTEM_BUS ( default )
Enabled   SAMPLE_MAP ( downloading binary map because maptool compilation is disabled )
Enabled   SVG2PNG ( default )
Enabled   USE_NATIVE_LANGUAGE_SUPPORT ( Gettext found )
Enabled   USE_PLUGINS ( default )
Enabled   USE_ROUTING ( default )
Enabled   USE_SVG ( default )
Disabled  XSL_PROCESSING ( Saxon missing )",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,212,2017-03-25T18:29:16Z,2017-08-25T17:27:30Z,2017-11-02T23:59:17Z,CLOSED,False,13,13,3,https://github.com/jandegr,No libcrypto test trac 1350,3,[],https://github.com/navit-gps/navit/pull/212,https://github.com/mdankov,3,https://github.com/navit-gps/navit/pull/212#issuecomment-289541868,"see the issue in http://trac.navit-project.org/ticket/1350
I found no usage of libcrypto in the code and my best guess is this has at some point
been used for some non-disclosed or removed code.
If somebody could please test it on linux and then remove the lines I commented-out, I can't test it on linux right now.","Hi!
We actually have a few uses for libcrypto. I think all of them could be found by analyzing HAVE_LIBCRYPTO macro usage in the code.
As far as I know, the one most important to us is ability to compute md5 sum of map file by maptool option -5 (--md5): it's used on our map server. Though I think we could easily switch there to an external command (with a little timing penalty).
Another option is ability of maptool to produce and ability of navit binfile plugin to use encrypted map files. I think it was used by cp15 at some point to protect some non-osm data. As for the maptool, it seems to be currently impossible to fill in the passwd member of struct zip_info in maptool/zip.c, so no encrypted file could be produced by maptool. On the other hand, binfile plugin of navit accepts map_pass attribute and it could be possible to use encrypted binfiles.
I'm unsure if encrypted binfiles are used these days by anybody.
If we are going to skip openssl dependency, we should drop all its references in the C code, not only at CMakeLists.txt.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,212,2017-03-25T18:29:16Z,2017-08-25T17:27:30Z,2017-11-02T23:59:17Z,CLOSED,False,13,13,3,https://github.com/jandegr,No libcrypto test trac 1350,3,[],https://github.com/navit-gps/navit/pull/212,https://github.com/jandegr,4,https://github.com/navit-gps/navit/pull/212#issuecomment-289551283,"see the issue in http://trac.navit-project.org/ticket/1350
I found no usage of libcrypto in the code and my best guess is this has at some point
been used for some non-disclosed or removed code.
If somebody could please test it on linux and then remove the lines I commented-out, I can't test it on linux right now.","Interesting comment from mdankov, thx.
I did a search in binfile.c for libcrypto before I submitted this PR and did not find it, the actual usage related to map reading is in file.c but I had not searched there.
https://github.com/navit-gps/navit/blob/trunk/navit/file.c#L49
And here is one in maptool, I initially neglected to search in maptool completely
https://github.com/navit-gps/navit/blob/trunk/navit/maptool/maptool.h#L26
It looks like libcrypto usage could be turned off by default and let it a compile option for specialist usage, or remove it all together ?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,212,2017-03-25T18:29:16Z,2017-08-25T17:27:30Z,2017-11-02T23:59:17Z,CLOSED,False,13,13,3,https://github.com/jandegr,No libcrypto test trac 1350,3,[],https://github.com/navit-gps/navit/pull/212,https://github.com/mdankov,5,https://github.com/navit-gps/navit/pull/212#issuecomment-293352850,"see the issue in http://trac.navit-project.org/ticket/1350
I found no usage of libcrypto in the code and my best guess is this has at some point
been used for some non-disclosed or removed code.
If somebody could please test it on linux and then remove the lines I commented-out, I can't test it on linux right now.","I had a chat with cp15. He asks us to keep support for encrypted binfiles. His suggestion is:

For a quick solution I would add an option --enable-license-violation to cmake so who wants to use it knows it has a problem.


Maybe in the long term we should include something public domain like https://github.com/ctz/cifra/tree/master/src except for the random stuff in maptool it seems it includes everything we use.

I already have disabled usage of maptool internal md5 calculation, so our map build process should not depend on maptool being linked to openssl. Being tested now.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,212,2017-03-25T18:29:16Z,2017-08-25T17:27:30Z,2017-11-02T23:59:17Z,CLOSED,False,13,13,3,https://github.com/jandegr,No libcrypto test trac 1350,3,[],https://github.com/navit-gps/navit/pull/212,https://github.com/jandegr,6,https://github.com/navit-gps/navit/pull/212#issuecomment-293369680,"see the issue in http://trac.navit-project.org/ticket/1350
I found no usage of libcrypto in the code and my best guess is this has at some point
been used for some non-disclosed or removed code.
If somebody could please test it on linux and then remove the lines I commented-out, I can't test it on linux right now.","hi,

For a quick solution I would add an option --enable-license-violation to cmake so who wants to use it
knows it has a problem.

that seems a good solution, I don't see anybody using that option soon but it would remain possible.",True,{'THUMBS_UP': ['https://github.com/metalstrolch']}
navit-gps/navit,https://github.com/navit-gps/navit,212,2017-03-25T18:29:16Z,2017-08-25T17:27:30Z,2017-11-02T23:59:17Z,CLOSED,False,13,13,3,https://github.com/jandegr,No libcrypto test trac 1350,3,[],https://github.com/navit-gps/navit/pull/212,https://github.com/jkoan,7,https://github.com/navit-gps/navit/pull/212#issuecomment-311378057,"see the issue in http://trac.navit-project.org/ticket/1350
I found no usage of libcrypto in the code and my best guess is this has at some point
been used for some non-disclosed or removed code.
If somebody could please test it on linux and then remove the lines I commented-out, I can't test it on linux right now.","Probably we can also use this public license code for the md5 thing:
https://github.com/george-hopkins/opentom/blob/master/src/tools/ttimage_tools/md5.c",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,212,2017-03-25T18:29:16Z,2017-08-25T17:27:30Z,2017-11-02T23:59:17Z,CLOSED,False,13,13,3,https://github.com/jandegr,No libcrypto test trac 1350,3,[],https://github.com/navit-gps/navit/pull/212,https://github.com/sleske,8,https://github.com/navit-gps/navit/pull/212#issuecomment-311633937,"see the issue in http://trac.navit-project.org/ticket/1350
I found no usage of libcrypto in the code and my best guess is this has at some point
been used for some non-disclosed or removed code.
If somebody could please test it on linux and then remove the lines I commented-out, I can't test it on linux right now.","I had a chat with cp15. He asks us to keep support for encrypted binfiles. His suggestion is:
For a quick solution I would add an option --enable-license-violation to cmake so who wants to use it knows it has a problem.

While I deeply respect cp15's work on Navit, I disagree here.
In my experience it's a bad idea to keep code around that is not actively used and cannot be tested.
I think we should rip out support for encrypted binfiles. If the support is needed later, we can always re-introduce it (that's why we use version control). Navit already has a lot of code that is unused and/or buggy, and that should be reduced.

Maybe in the long term we should include something public domain like https://github.com/ctz/cifra/tree/master/src except for the random stuff in maptool it seems it includes everything we use.

Yes, if we need crypto stuff, we will certainly find some implementation. The library Nettle also looks good, and its license is compatible ( GPL2 and LGPL3).

I already have disabled usage of maptool internal md5 calculation, so our map build process should not depend on maptool being linked to openssl. Being tested now.

If maptool does not need MD5 anymore, I'd take that part out, too (see above :-) ). Then we can drop OpenSSL right away, because AFAIK OpenSSL is not used elsewhere in Navit.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,212,2017-03-25T18:29:16Z,2017-08-25T17:27:30Z,2017-11-02T23:59:17Z,CLOSED,False,13,13,3,https://github.com/jandegr,No libcrypto test trac 1350,3,[],https://github.com/navit-gps/navit/pull/212,https://github.com/jandegr,9,https://github.com/navit-gps/navit/pull/212#issuecomment-312306670,"see the issue in http://trac.navit-project.org/ticket/1350
I found no usage of libcrypto in the code and my best guess is this has at some point
been used for some non-disclosed or removed code.
If somebody could please test it on linux and then remove the lines I commented-out, I can't test it on linux right now.","I agree for 100% with @sleske but the way the branches were archived on the old svn repo made it easier to search in legacy or old code, or I don't fully know how to use github yet :)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,212,2017-03-25T18:29:16Z,2017-08-25T17:27:30Z,2017-11-02T23:59:17Z,CLOSED,False,13,13,3,https://github.com/jandegr,No libcrypto test trac 1350,3,[],https://github.com/navit-gps/navit/pull/212,https://github.com/sleske,10,https://github.com/navit-gps/navit/pull/212#issuecomment-312433257,"see the issue in http://trac.navit-project.org/ticket/1350
I found no usage of libcrypto in the code and my best guess is this has at some point
been used for some non-disclosed or removed code.
If somebody could please test it on linux and then remove the lines I commented-out, I can't test it on linux right now.","the way the branches were archived on the old svn repo made it easier to search in legacy or old code, or I don't fully know how to use github yet :)

That has nothing to do with GitHub really - just standard Git. If we remove the code, we will of course use a good commit message (""Remove OpenSSL dependency; this also removes MD5 checksumming and support for encrypted binfiles...""). You can easily full text search commit messages (and commit content), so you'll find the right commit in no time :-).",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,212,2017-03-25T18:29:16Z,2017-08-25T17:27:30Z,2017-11-02T23:59:17Z,CLOSED,False,13,13,3,https://github.com/jandegr,No libcrypto test trac 1350,3,[],https://github.com/navit-gps/navit/pull/212,https://github.com/sleske,11,https://github.com/navit-gps/navit/pull/212#issuecomment-312433357,"see the issue in http://trac.navit-project.org/ticket/1350
I found no usage of libcrypto in the code and my best guess is this has at some point
been used for some non-disclosed or removed code.
If somebody could please test it on linux and then remove the lines I commented-out, I can't test it on linux right now.","Ok, if there are no other objections, I'll close this PR, and open a new one to remove OpenSSL as explained above.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,212,2017-03-25T18:29:16Z,2017-08-25T17:27:30Z,2017-11-02T23:59:17Z,CLOSED,False,13,13,3,https://github.com/jandegr,No libcrypto test trac 1350,3,[],https://github.com/navit-gps/navit/pull/212,https://github.com/pgrandin,12,https://github.com/navit-gps/navit/pull/212#issuecomment-324985847,"see the issue in http://trac.navit-project.org/ticket/1350
I found no usage of libcrypto in the code and my best guess is this has at some point
been used for some non-disclosed or removed code.
If somebody could please test it on linux and then remove the lines I commented-out, I can't test it on linux right now.","@sleske works for me, thanks for taking care of this!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,212,2017-03-25T18:29:16Z,2017-08-25T17:27:30Z,2017-11-02T23:59:17Z,CLOSED,False,13,13,3,https://github.com/jandegr,No libcrypto test trac 1350,3,[],https://github.com/navit-gps/navit/pull/212,https://github.com/sleske,13,https://github.com/navit-gps/navit/pull/212#issuecomment-341584038,"see the issue in http://trac.navit-project.org/ticket/1350
I found no usage of libcrypto in the code and my best guess is this has at some point
been used for some non-disclosed or removed code.
If somebody could please test it on linux and then remove the lines I commented-out, I can't test it on linux right now.",OpenSSL dependency removed with commit 0b6027f.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,213,2017-04-03T11:27:35Z,2017-04-05T18:06:28Z,2017-04-05T18:07:04Z,MERGED,True,648,107,16,https://github.com/metalstrolch,Qt5 Graphics: Add QML support,22,[],https://github.com/navit-gps/navit/pull/213,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/213,"This pull request is about adding QML (QtQuick) Support to graphics_qt5 plug in.
A QML based graphics back plug in allows:
a) to easily add a QML based GUI
b) to integrate navit to Jolla Sailfish OS once, since QWidgets library is banned in Sailfish's Harbour shop.
This adds two build flags:
USE_QWIDGET:BOOL --> Enable QWidgets support (autodetected)
USE_QML:BOOL --> Enable QML support (autodetected)
Both can be set at the same time.
This adds one attr to graphics section in navit.xml:
qt5_widget -> set to ""qml"" for QML display, set to ""qwidget"" for qwidget display. Must only be set if both methods are present at the same time.","This pull request is about adding QML (QtQuick) Support to graphics_qt5 plug in.
A QML based graphics back plug in allows:
a) to easily add a QML based GUI
b) to integrate navit to Jolla Sailfish OS once, since QWidgets library is banned in Sailfish's Harbour shop.
This adds two build flags:
USE_QWIDGET:BOOL --> Enable QWidgets support (autodetected)
USE_QML:BOOL --> Enable QML support (autodetected)
Both can be set at the same time.
This adds one attr to graphics section in navit.xml:
qt5_widget -> set to ""qml"" for QML display, set to ""qwidget"" for qwidget display. Must only be set if both methods are present at the same time.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,213,2017-04-03T11:27:35Z,2017-04-05T18:06:28Z,2017-04-05T18:07:04Z,MERGED,True,648,107,16,https://github.com/metalstrolch,Qt5 Graphics: Add QML support,22,[],https://github.com/navit-gps/navit/pull/213,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/213#issuecomment-291116985,"This pull request is about adding QML (QtQuick) Support to graphics_qt5 plug in.
A QML based graphics back plug in allows:
a) to easily add a QML based GUI
b) to integrate navit to Jolla Sailfish OS once, since QWidgets library is banned in Sailfish's Harbour shop.
This adds two build flags:
USE_QWIDGET:BOOL --> Enable QWidgets support (autodetected)
USE_QML:BOOL --> Enable QML support (autodetected)
Both can be set at the same time.
This adds one attr to graphics section in navit.xml:
qt5_widget -> set to ""qml"" for QML display, set to ""qwidget"" for qwidget display. Must only be set if both methods are present at the same time.","What's the official documentation for attrs, as we should document graphics_qt5's attrs once this is merged?
Do we have a Navit coding style? Or is it OK to just process the Qt5 plugins with clang-format.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,213,2017-04-03T11:27:35Z,2017-04-05T18:06:28Z,2017-04-05T18:07:04Z,MERGED,True,648,107,16,https://github.com/metalstrolch,Qt5 Graphics: Add QML support,22,[],https://github.com/navit-gps/navit/pull/213,https://github.com/pgrandin,3,https://github.com/navit-gps/navit/pull/213#issuecomment-291583136,"This pull request is about adding QML (QtQuick) Support to graphics_qt5 plug in.
A QML based graphics back plug in allows:
a) to easily add a QML based GUI
b) to integrate navit to Jolla Sailfish OS once, since QWidgets library is banned in Sailfish's Harbour shop.
This adds two build flags:
USE_QWIDGET:BOOL --> Enable QWidgets support (autodetected)
USE_QML:BOOL --> Enable QML support (autodetected)
Both can be set at the same time.
This adds one attr to graphics section in navit.xml:
qt5_widget -> set to ""qml"" for QML display, set to ""qwidget"" for qwidget display. Must only be set if both methods are present at the same time.","Thanks @metalstrolch nice work!
I am really happy to see tangible progress towards QT5 and a new QML UI!
Your PR looks good to me, but maybe we would want to address this before merging :
https://1713-30791823-gh.circle-artifacts.com/1/tmp/circle-artifacts.UuE0TvX/logs_qt5_qml/stderr.txt
error:navit:convert_to_attrs:failed to create attribute 'v' with value '792'
QQmlApplicationEngine failed to load component 
qrc:///graphics_qt5.qml:-1 File not found

It would be nice also to add at least a few automated screenshots to ensure that the rendering works as expected. I can help with that.
Regarding your questions about attributes, I think that this is the kind of thing that we should document in both doxygen and the wiki. Unfortunately the wiki is down right now...",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,213,2017-04-03T11:27:35Z,2017-04-05T18:06:28Z,2017-04-05T18:07:04Z,MERGED,True,648,107,16,https://github.com/metalstrolch,Qt5 Graphics: Add QML support,22,[],https://github.com/navit-gps/navit/pull/213,https://github.com/metalstrolch,4,https://github.com/navit-gps/navit/pull/213#issuecomment-291871222,"This pull request is about adding QML (QtQuick) Support to graphics_qt5 plug in.
A QML based graphics back plug in allows:
a) to easily add a QML based GUI
b) to integrate navit to Jolla Sailfish OS once, since QWidgets library is banned in Sailfish's Harbour shop.
This adds two build flags:
USE_QWIDGET:BOOL --> Enable QWidgets support (autodetected)
USE_QML:BOOL --> Enable QML support (autodetected)
Both can be set at the same time.
This adds one attr to graphics section in navit.xml:
qt5_widget -> set to ""qml"" for QML display, set to ""qwidget"" for qwidget display. Must only be set if both methods are present at the same time.",This is fixed now. It builds (and runs) in CI. The Gifs look silly for both the QT5 GUIs test runs because qt5 seems to miss keyboard support. Since this was not introduced with this change I'll fix this in another PR.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,213,2017-04-03T11:27:35Z,2017-04-05T18:06:28Z,2017-04-05T18:07:04Z,MERGED,True,648,107,16,https://github.com/metalstrolch,Qt5 Graphics: Add QML support,22,[],https://github.com/navit-gps/navit/pull/213,https://github.com/metalstrolch,5,https://github.com/navit-gps/navit/pull/213#issuecomment-291871378,"This pull request is about adding QML (QtQuick) Support to graphics_qt5 plug in.
A QML based graphics back plug in allows:
a) to easily add a QML based GUI
b) to integrate navit to Jolla Sailfish OS once, since QWidgets library is banned in Sailfish's Harbour shop.
This adds two build flags:
USE_QWIDGET:BOOL --> Enable QWidgets support (autodetected)
USE_QML:BOOL --> Enable QML support (autodetected)
Both can be set at the same time.
This adds one attr to graphics section in navit.xml:
qt5_widget -> set to ""qml"" for QML display, set to ""qwidget"" for qwidget display. Must only be set if both methods are present at the same time.",Picked the wrong button... Of course still open.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,213,2017-04-03T11:27:35Z,2017-04-05T18:06:28Z,2017-04-05T18:07:04Z,MERGED,True,648,107,16,https://github.com/metalstrolch,Qt5 Graphics: Add QML support,22,[],https://github.com/navit-gps/navit/pull/213,https://github.com/pgrandin,6,https://github.com/navit-gps/navit/pull/213#issuecomment-291946681,"This pull request is about adding QML (QtQuick) Support to graphics_qt5 plug in.
A QML based graphics back plug in allows:
a) to easily add a QML based GUI
b) to integrate navit to Jolla Sailfish OS once, since QWidgets library is banned in Sailfish's Harbour shop.
This adds two build flags:
USE_QWIDGET:BOOL --> Enable QWidgets support (autodetected)
USE_QML:BOOL --> Enable QML support (autodetected)
Both can be set at the same time.
This adds one attr to graphics section in navit.xml:
qt5_widget -> set to ""qml"" for QML display, set to ""qwidget"" for qwidget display. Must only be set if both methods are present at the same time.","Thanks @metalstrolch really nice work here.
Looks good to me!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,214,2017-04-05T22:15:08Z,2017-04-10T17:20:09Z,2017-04-13T10:37:28Z,MERGED,True,136,1,5,https://github.com/metalstrolch,graphics Qt5 keyboard,3,[],https://github.com/navit-gps/navit/pull/214,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/214,This pull request adds keyboard input for graphics_qt5 plugin,This pull request adds keyboard input for graphics_qt5 plugin,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,214,2017-04-05T22:15:08Z,2017-04-10T17:20:09Z,2017-04-13T10:37:28Z,MERGED,True,136,1,5,https://github.com/metalstrolch,graphics Qt5 keyboard,3,[],https://github.com/navit-gps/navit/pull/214,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/214#issuecomment-292013703,This pull request adds keyboard input for graphics_qt5 plugin,"CI runs now and produces gifs for all tested graphics.
Btw: the key sequence in xdotools.sh seems to be outdated, as it produces strange output inside the gif for all graphics.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,214,2017-04-05T22:15:08Z,2017-04-10T17:20:09Z,2017-04-13T10:37:28Z,MERGED,True,136,1,5,https://github.com/metalstrolch,graphics Qt5 keyboard,3,[],https://github.com/navit-gps/navit/pull/214,https://github.com/metalstrolch,3,https://github.com/navit-gps/navit/pull/214#issuecomment-293018496,This pull request adds keyboard input for graphics_qt5 plugin,Closed (and merged) due to be a blocker for future work and has no effects outside graphics_qt5,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,215,2017-04-10T18:35:06Z,2017-04-24T09:19:49Z,2017-04-25T08:38:45Z,MERGED,True,41,23,8,https://github.com/metalstrolch,Allow unusual building,4,[],https://github.com/navit-gps/navit/pull/215,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/215,"This pull request updates navits cmake system to allow more unusual build and
install path configurations as well as renaming the navit binary. This
sis required for restricted environments like Sailfish OS harbour that
do not follow usual path conventions.
You can now:
redefine the binary name (NAVIT_BINARY)
control the translation file names (PACKAGE)
select the library directory (LIB_DIR)
select the share directory (SHARE_DIR)
select the locales directory (LOCALE_DIR)
select the images directory (IMAGE_DIR)
select the man directory (MAN_DIR)
the .desktop file is updated and the man file is renamed according to this and the install prefix is still honoured.","This pull request updates navits cmake system to allow more unusual build and
install path configurations as well as renaming the navit binary. This
sis required for restricted environments like Sailfish OS harbour that
do not follow usual path conventions.
You can now:
redefine the binary name (NAVIT_BINARY)
control the translation file names (PACKAGE)
select the library directory (LIB_DIR)
select the share directory (SHARE_DIR)
select the locales directory (LOCALE_DIR)
select the images directory (IMAGE_DIR)
select the man directory (MAN_DIR)
the .desktop file is updated and the man file is renamed according to this and the install prefix is still honoured.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,215,2017-04-10T18:35:06Z,2017-04-24T09:19:49Z,2017-04-25T08:38:45Z,MERGED,True,41,23,8,https://github.com/metalstrolch,Allow unusual building,4,[],https://github.com/navit-gps/navit/pull/215,https://github.com/zintor,2,https://github.com/navit-gps/navit/pull/215#issuecomment-293057579,"This pull request updates navits cmake system to allow more unusual build and
install path configurations as well as renaming the navit binary. This
sis required for restricted environments like Sailfish OS harbour that
do not follow usual path conventions.
You can now:
redefine the binary name (NAVIT_BINARY)
control the translation file names (PACKAGE)
select the library directory (LIB_DIR)
select the share directory (SHARE_DIR)
select the locales directory (LOCALE_DIR)
select the images directory (IMAGE_DIR)
select the man directory (MAN_DIR)
the .desktop file is updated and the man file is renamed according to this and the install prefix is still honoured.","Thx for the pull request.
A question about the IMAGE_DIR as I am interested of making the SailfishOS build:
What about using more image paths e.g. ""86x86"", ""108x108"", ""256x256"",... Should these realized as an extra platform build or for all?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,215,2017-04-10T18:35:06Z,2017-04-24T09:19:49Z,2017-04-25T08:38:45Z,MERGED,True,41,23,8,https://github.com/metalstrolch,Allow unusual building,4,[],https://github.com/navit-gps/navit/pull/215,https://github.com/metalstrolch,3,https://github.com/navit-gps/navit/pull/215#issuecomment-293083816,"This pull request updates navits cmake system to allow more unusual build and
install path configurations as well as renaming the navit binary. This
sis required for restricted environments like Sailfish OS harbour that
do not follow usual path conventions.
You can now:
redefine the binary name (NAVIT_BINARY)
control the translation file names (PACKAGE)
select the library directory (LIB_DIR)
select the share directory (SHARE_DIR)
select the locales directory (LOCALE_DIR)
select the images directory (IMAGE_DIR)
select the man directory (MAN_DIR)
the .desktop file is updated and the man file is renamed according to this and the install prefix is still honoured.","I'm not an expert on habits for the navit project, but I would just add those icons to main line. Since this shouldn't hurt any other build. I plan to mainline the few things in sailfish_build branch too soon.
See desktop_icons branch for icons. I just added them.
Not much effort is left to build for sailfish OS:
combine the branches trunk, allow_unusual_builds, desktop_icons and sailfish_build, and you can build a (almost) harbour compatible rpm package for sailfish os device and emulator. (Check my ""metalstrolch"" fork for the ""metalstrolch"" branch, which contains exactly this combination) I'm doing packages that can be installed with pkcon on the device since december 2015
Currently I'm preparing a qt5_qml GUI skeleton. I'll do the linkage between the graphics part and the GUI. But I'll not do the real gui, as I'm not an QML expert and running out of time. Feel free to kick in there.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,215,2017-04-10T18:35:06Z,2017-04-24T09:19:49Z,2017-04-25T08:38:45Z,MERGED,True,41,23,8,https://github.com/metalstrolch,Allow unusual building,4,[],https://github.com/navit-gps/navit/pull/215,https://github.com/metalstrolch,4,https://github.com/navit-gps/navit/pull/215#issuecomment-293084553,"This pull request updates navits cmake system to allow more unusual build and
install path configurations as well as renaming the navit binary. This
sis required for restricted environments like Sailfish OS harbour that
do not follow usual path conventions.
You can now:
redefine the binary name (NAVIT_BINARY)
control the translation file names (PACKAGE)
select the library directory (LIB_DIR)
select the share directory (SHARE_DIR)
select the locales directory (LOCALE_DIR)
select the images directory (IMAGE_DIR)
select the man directory (MAN_DIR)
the .desktop file is updated and the man file is renamed according to this and the install prefix is still honoured.","@pgrandin could you check if this patch has any impact on android and windows builds? They build in ci, but i cannot check if everything is still fine.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,215,2017-04-10T18:35:06Z,2017-04-24T09:19:49Z,2017-04-25T08:38:45Z,MERGED,True,41,23,8,https://github.com/metalstrolch,Allow unusual building,4,[],https://github.com/navit-gps/navit/pull/215,https://github.com/zintor,5,https://github.com/navit-gps/navit/pull/215#issuecomment-293695269,"This pull request updates navits cmake system to allow more unusual build and
install path configurations as well as renaming the navit binary. This
sis required for restricted environments like Sailfish OS harbour that
do not follow usual path conventions.
You can now:
redefine the binary name (NAVIT_BINARY)
control the translation file names (PACKAGE)
select the library directory (LIB_DIR)
select the share directory (SHARE_DIR)
select the locales directory (LOCALE_DIR)
select the images directory (IMAGE_DIR)
select the man directory (MAN_DIR)
the .desktop file is updated and the man file is renamed according to this and the install prefix is still honoured.","I already use your ""metalstrolch"" fork for building the rpm package. I wrote a howto at the navit wiki on my user page.
The qt5_qml GUI skeleton will be great, as I would like to see a nice SFOS gui. :) I am willing to create the SFOS GUI for navit. After setting up my new hardware environment I will try my best to kick in.
Some harbour-navit icons are already done.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,215,2017-04-10T18:35:06Z,2017-04-24T09:19:49Z,2017-04-25T08:38:45Z,MERGED,True,41,23,8,https://github.com/metalstrolch,Allow unusual building,4,[],https://github.com/navit-gps/navit/pull/215,https://github.com/metalstrolch,6,https://github.com/navit-gps/navit/pull/215#issuecomment-296590694,"This pull request updates navits cmake system to allow more unusual build and
install path configurations as well as renaming the navit binary. This
sis required for restricted environments like Sailfish OS harbour that
do not follow usual path conventions.
You can now:
redefine the binary name (NAVIT_BINARY)
control the translation file names (PACKAGE)
select the library directory (LIB_DIR)
select the share directory (SHARE_DIR)
select the locales directory (LOCALE_DIR)
select the images directory (IMAGE_DIR)
select the man directory (MAN_DIR)
the .desktop file is updated and the man file is renamed according to this and the install prefix is still honoured.","Merging this, as further work on QT5 depends on this. Hopefully this breaks nothing. Seems nobody has time to care about it.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,216,2017-04-15T22:23:59Z,2017-11-08T15:00:37Z,2020-08-18T12:08:45Z,CLOSED,False,522,459,14,https://github.com/thortex,translated messages in ja.po.,8,['i18n'],https://github.com/navit-gps/navit/pull/216,https://github.com/thortex,1,https://github.com/navit-gps/navit/pull/216,"I translated messages in po/ja.po.in for Japanese users.
Could you merge this changed file?","I translated messages in po/ja.po.in for Japanese users.
Could you merge this changed file?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,216,2017-04-15T22:23:59Z,2017-11-08T15:00:37Z,2020-08-18T12:08:45Z,CLOSED,False,522,459,14,https://github.com/thortex,translated messages in ja.po.,8,['i18n'],https://github.com/navit-gps/navit/pull/216,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/216#issuecomment-294985216,"I translated messages in po/ja.po.in for Japanese users.
Could you merge this changed file?","Looks OK for me, although I have no clue about Japanese.
OK to merge.",True,{'THUMBS_UP': ['https://github.com/thortex']}
navit-gps/navit,https://github.com/navit-gps/navit,216,2017-04-15T22:23:59Z,2017-11-08T15:00:37Z,2020-08-18T12:08:45Z,CLOSED,False,522,459,14,https://github.com/thortex,translated messages in ja.po.,8,['i18n'],https://github.com/navit-gps/navit/pull/216,https://github.com/pgrandin,3,https://github.com/navit-gps/navit/pull/216#issuecomment-295352311,"I translated messages in po/ja.po.in for Japanese users.
Could you merge this changed file?","Thanks @thortex !
Our usual workflow for translation is to use launchpad : https://translations.launchpad.net/navit
Our translation template (navit.pot) is automatically updated from our CI, and we have tools to merge changes from launchpad back in git.
We can't merge your PR directly has it might overwrite or conflict with changes in Launchpad, but I will upload your .po file to launchpad and merge it.
Thanks for your contribution!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,216,2017-04-15T22:23:59Z,2017-11-08T15:00:37Z,2020-08-18T12:08:45Z,CLOSED,False,522,459,14,https://github.com/thortex,translated messages in ja.po.,8,['i18n'],https://github.com/navit-gps/navit/pull/216,https://github.com/thortex,4,https://github.com/navit-gps/navit/pull/216#issuecomment-295446128,"I translated messages in po/ja.po.in for Japanese users.
Could you merge this changed file?","I appreciate to your explanations, pgrandin.
I did not know the workflow (launchpad, CI, and merge tools), so I directly did send PR.
Thank you for your merge to launchpad in advance.
I'll use launchpad next time.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,216,2017-04-15T22:23:59Z,2017-11-08T15:00:37Z,2020-08-18T12:08:45Z,CLOSED,False,522,459,14,https://github.com/thortex,translated messages in ja.po.,8,['i18n'],https://github.com/navit-gps/navit/pull/216,https://github.com/pgrandin,5,https://github.com/navit-gps/navit/pull/216#issuecomment-296718788,"I translated messages in po/ja.po.in for Japanese users.
Could you merge this changed file?","Thanks @thortex
I'll make sure that the relevant wiki page is up to date too.
I tried to merge your the Japanese translation update but the tests are failing:
[ 97%] Generating ja.mo
/home/ubuntu/android-arm/po/ja.po:92: number of format specifications in 'msgid_plural' and 'msgstr[0]' does not match
/home/ubuntu/android-arm/po/ja.po:97: number of format specifications in 'msgid_plural' and 'msgstr[0]' does not match
/home/ubuntu/android-arm/po/ja.po:118: number of format specifications in 'msgid_plural' and 'msgstr[0]' does not match
/home/ubuntu/android-arm/po/ja.po:123: number of format specifications in 'msgid_plural' and 'msgstr[0]' does not match
/usr/bin/msgfmt: found 4 fatal errors

https://circleci.com/gh/navit-gps/navit/1742
We've had the same issue before with other languages, I will have to check what is going on. I think that we are missing an msgstr for the plural form.
Here is an example:
#, c-format
msgid ""one kilometer""
msgid_plural ""%d kilometers""
msgstr[0] ""1 km""",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,216,2017-04-15T22:23:59Z,2017-11-08T15:00:37Z,2020-08-18T12:08:45Z,CLOSED,False,522,459,14,https://github.com/thortex,translated messages in ja.po.,8,['i18n'],https://github.com/navit-gps/navit/pull/216,https://github.com/thortex,6,https://github.com/navit-gps/navit/pull/216#issuecomment-297181322,"I translated messages in po/ja.po.in for Japanese users.
Could you merge this changed file?","Thank you for your building/testing.
Sorry, I did not specify ""--check"" option to msgfmt command for format checking.
Generally, Japanese has no plural forms, but number of plurals should be specified to 2, and plural condition should be specified to ""n > 1"" in msgfmt header parameters for CI/merge automation tools as the following link :
thortex@020753d#diff-cb0342827b59cfacd6050789fa0dc0a4R18
And plurals are described at line number 93, 99, 121, and 127 in the ja.po.in:
https://github.com/thortex/navit/blob/020753d95930017682d500654e3ae9c4a5667853/thortex/ja.po.in#L93",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,216,2017-04-15T22:23:59Z,2017-11-08T15:00:37Z,2020-08-18T12:08:45Z,CLOSED,False,522,459,14,https://github.com/thortex,translated messages in ja.po.,8,['i18n'],https://github.com/navit-gps/navit/pull/216,https://github.com/thortex,7,https://github.com/navit-gps/navit/pull/216#issuecomment-298129429,"I translated messages in po/ja.po.in for Japanese users.
Could you merge this changed file?","I merged GitHub changes to launchpad ja.po file, and uploaded the file into Import queue: https://translations.launchpad.net/navit/trunk/+imports",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,216,2017-04-15T22:23:59Z,2017-11-08T15:00:37Z,2020-08-18T12:08:45Z,CLOSED,False,522,459,14,https://github.com/thortex,translated messages in ja.po.,8,['i18n'],https://github.com/navit-gps/navit/pull/216,https://github.com/jkoan,8,https://github.com/navit-gps/navit/pull/216#issuecomment-342843471,"I translated messages in po/ja.po.in for Japanese users.
Could you merge this changed file?",I close this PR now. Thanks for your support.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,217,2017-04-19T14:39:27Z,2017-04-19T17:08:07Z,2017-04-19T17:08:07Z,MERGED,True,30,14,3,https://github.com/mcapdeville,keep vehicle profile when deactivating vehicle,1,[],https://github.com/navit-gps/navit/pull/217,https://github.com/mcapdeville,1,https://github.com/navit-gps/navit/pull/217,"When deactivating vehicle, profile is choosen from ""car"" vehicle_profile or by
default the first vehicle_profile in list. So, by example,
car_avoid_tolls never work when manually selecting current position (and
deactivate vehicle).
Now, if there is a selected vehicle profile, we keep it as
vehicle_profile (not changing it).
Aditionnaly, in internal gui, selecting a vehicle profile when wehicle
is deactivated, in gui_internal_cmd_set_active_profile(), call navit_set_vehicleprofile_name() with new
vehicle_profile (by name) before setting vehicle_attr to NULL (like in
gui_internal_cmd_set_position()).
Now, we can switch profile when vehicle is deactivatied and route is
update correctly.
TO DO : Same in other gui
TO TEST : with more than one vehicle enable","When deactivating vehicle, profile is choosen from ""car"" vehicle_profile or by
default the first vehicle_profile in list. So, by example,
car_avoid_tolls never work when manually selecting current position (and
deactivate vehicle).
Now, if there is a selected vehicle profile, we keep it as
vehicle_profile (not changing it).
Aditionnaly, in internal gui, selecting a vehicle profile when wehicle
is deactivated, in gui_internal_cmd_set_active_profile(), call navit_set_vehicleprofile_name() with new
vehicle_profile (by name) before setting vehicle_attr to NULL (like in
gui_internal_cmd_set_position()).
Now, we can switch profile when vehicle is deactivatied and route is
update correctly.
TO DO : Same in other gui
TO TEST : with more than one vehicle enable",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,217,2017-04-19T14:39:27Z,2017-04-19T17:08:07Z,2017-04-19T17:08:07Z,MERGED,True,30,14,3,https://github.com/mcapdeville,keep vehicle profile when deactivating vehicle,1,[],https://github.com/navit-gps/navit/pull/217,https://github.com/pohlinkzei,2,https://github.com/navit-gps/navit/pull/217#issuecomment-295296270,"When deactivating vehicle, profile is choosen from ""car"" vehicle_profile or by
default the first vehicle_profile in list. So, by example,
car_avoid_tolls never work when manually selecting current position (and
deactivate vehicle).
Now, if there is a selected vehicle profile, we keep it as
vehicle_profile (not changing it).
Aditionnaly, in internal gui, selecting a vehicle profile when wehicle
is deactivated, in gui_internal_cmd_set_active_profile(), call navit_set_vehicleprofile_name() with new
vehicle_profile (by name) before setting vehicle_attr to NULL (like in
gui_internal_cmd_set_position()).
Now, we can switch profile when vehicle is deactivatied and route is
update correctly.
TO DO : Same in other gui
TO TEST : with more than one vehicle enable","Hi, you might want to set the debug messages back to debug level.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,217,2017-04-19T14:39:27Z,2017-04-19T17:08:07Z,2017-04-19T17:08:07Z,MERGED,True,30,14,3,https://github.com/mcapdeville,keep vehicle profile when deactivating vehicle,1,[],https://github.com/navit-gps/navit/pull/217,https://github.com/pgrandin,3,https://github.com/navit-gps/navit/pull/217#issuecomment-295348342,"When deactivating vehicle, profile is choosen from ""car"" vehicle_profile or by
default the first vehicle_profile in list. So, by example,
car_avoid_tolls never work when manually selecting current position (and
deactivate vehicle).
Now, if there is a selected vehicle profile, we keep it as
vehicle_profile (not changing it).
Aditionnaly, in internal gui, selecting a vehicle profile when wehicle
is deactivated, in gui_internal_cmd_set_active_profile(), call navit_set_vehicleprofile_name() with new
vehicle_profile (by name) before setting vehicle_attr to NULL (like in
gui_internal_cmd_set_position()).
Now, we can switch profile when vehicle is deactivatied and route is
update correctly.
TO DO : Same in other gui
TO TEST : with more than one vehicle enable","Nice, thanks @mcapdeville !",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,218,2017-04-19T16:58:24Z,2017-05-03T14:12:05Z,2017-05-03T14:12:05Z,MERGED,True,6,1,1,https://github.com/mcapdeville,:qnavigation_analyze_roundabout : central_angle may lead to division by 0,1,[],https://github.com/navit-gps/navit/pull/218,https://github.com/mcapdeville,1,https://github.com/navit-gps/navit/pull/218,"On the path from orange (france) to valence (france) by highway,
the third roundabout after highway exit lead to central_angle=0, leading
to divide by 0 (near line 2488).
from osm_id : 160627295 to osm_id : 4277896
(delta1 + delta2) seams to be 360, so I just set roundabout_length to len in that
case.","On the path from orange (france) to valence (france) by highway,
the third roundabout after highway exit lead to central_angle=0, leading
to divide by 0 (near line 2488).
from osm_id : 160627295 to osm_id : 4277896
(delta1 + delta2) seams to be 360, so I just set roundabout_length to len in that
case.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,218,2017-04-19T16:58:24Z,2017-05-03T14:12:05Z,2017-05-03T14:12:05Z,MERGED,True,6,1,1,https://github.com/mcapdeville,:qnavigation_analyze_roundabout : central_angle may lead to division by 0,1,[],https://github.com/navit-gps/navit/pull/218,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/218#issuecomment-295350804,"On the path from orange (france) to valence (france) by highway,
the third roundabout after highway exit lead to central_angle=0, leading
to divide by 0 (near line 2488).
from osm_id : 160627295 to osm_id : 4277896
(delta1 + delta2) seams to be 360, so I just set roundabout_length to len in that
case.","This one is a bit more tricky.
Before merging we need to check the results of this change against our routing test cases : https://github.com/navit-gps/routing-qa/tree/roundabout-exit
We have a stub of reporting here : http://navit-gps.github.io/routing-qa/ automatically built from the CI that we should to improve to make it more usable.
I'll look into altering our CI code so that it can run tests from another repo : currently we only tested different branches of our own repo, and here we'd need to check against your fork.
Thanks for the PR!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,218,2017-04-19T16:58:24Z,2017-05-03T14:12:05Z,2017-05-03T14:12:05Z,MERGED,True,6,1,1,https://github.com/mcapdeville,:qnavigation_analyze_roundabout : central_angle may lead to division by 0,1,[],https://github.com/navit-gps/navit/pull/218,https://github.com/metalstrolch,3,https://github.com/navit-gps/navit/pull/218#issuecomment-296831550,"On the path from orange (france) to valence (france) by highway,
the third roundabout after highway exit lead to central_angle=0, leading
to divide by 0 (near line 2488).
from osm_id : 160627295 to osm_id : 4277896
(delta1 + delta2) seams to be 360, so I just set roundabout_length to len in that
case.","I agree that this should be checked against a automatic qa system. But sice this seems to reqire care before it can be run i propose stepping back to good old code review.
In my opinion, this change cannot degrade any behaviour, because everything it does is preventing div by zero crash. I would opt for adding a err log in case div by zero would have happened and then merge it.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,218,2017-04-19T16:58:24Z,2017-05-03T14:12:05Z,2017-05-03T14:12:05Z,MERGED,True,6,1,1,https://github.com/mcapdeville,:qnavigation_analyze_roundabout : central_angle may lead to division by 0,1,[],https://github.com/navit-gps/navit/pull/218,https://github.com/pgrandin,4,https://github.com/navit-gps/navit/pull/218#issuecomment-297234029,"On the path from orange (france) to valence (france) by highway,
the third roundabout after highway exit lead to central_angle=0, leading
to divide by 0 (near line 2488).
from osm_id : 160627295 to osm_id : 4277896
(delta1 + delta2) seams to be 360, so I just set roundabout_length to len in that
case.",Good call @metalstrolch this works for me.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,218,2017-04-19T16:58:24Z,2017-05-03T14:12:05Z,2017-05-03T14:12:05Z,MERGED,True,6,1,1,https://github.com/mcapdeville,:qnavigation_analyze_roundabout : central_angle may lead to division by 0,1,[],https://github.com/navit-gps/navit/pull/218,https://github.com/mcapdeville,5,https://github.com/navit-gps/navit/pull/218#issuecomment-298855550,"On the path from orange (france) to valence (france) by highway,
the third roundabout after highway exit lead to central_angle=0, leading
to divide by 0 (near line 2488).
from osm_id : 160627295 to osm_id : 4277896
(delta1 + delta2) seams to be 360, so I just set roundabout_length to len in that
case.","I have added error log.
In commit text,I have also added coordinate for test.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,218,2017-04-19T16:58:24Z,2017-05-03T14:12:05Z,2017-05-03T14:12:05Z,MERGED,True,6,1,1,https://github.com/mcapdeville,:qnavigation_analyze_roundabout : central_angle may lead to division by 0,1,[],https://github.com/navit-gps/navit/pull/218,https://github.com/jandegr,6,https://github.com/navit-gps/navit/pull/218#issuecomment-298869835,"On the path from orange (france) to valence (france) by highway,
the third roundabout after highway exit lead to central_angle=0, leading
to divide by 0 (near line 2488).
from osm_id : 160627295 to osm_id : 4277896
(delta1 + delta2) seams to be 360, so I just set roundabout_length to len in that
case.","Is this a correct path to test this case ?
https://297-40190699-gh.circle-artifacts.com/0/tmp/circle-artifacts.0s5S6vA/Valence_roundabout.yamlmetric.png",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,218,2017-04-19T16:58:24Z,2017-05-03T14:12:05Z,2017-05-03T14:12:05Z,MERGED,True,6,1,1,https://github.com/mcapdeville,:qnavigation_analyze_roundabout : central_angle may lead to division by 0,1,[],https://github.com/navit-gps/navit/pull/218,https://github.com/mcapdeville,7,https://github.com/navit-gps/navit/pull/218#issuecomment-298870781,"On the path from orange (france) to valence (france) by highway,
the third roundabout after highway exit lead to central_angle=0, leading
to divide by 0 (near line 2488).
from osm_id : 160627295 to osm_id : 4277896
(delta1 + delta2) seams to be 360, so I just set roundabout_length to len in that
case.","Yes, this is correct. But the problem is only on the second roundabout after highway exit. Coordinate are in the last commit.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,218,2017-04-19T16:58:24Z,2017-05-03T14:12:05Z,2017-05-03T14:12:05Z,MERGED,True,6,1,1,https://github.com/mcapdeville,:qnavigation_analyze_roundabout : central_angle may lead to division by 0,1,[],https://github.com/navit-gps/navit/pull/218,https://github.com/jandegr,8,https://github.com/navit-gps/navit/pull/218#issuecomment-298882402,"On the path from orange (france) to valence (france) by highway,
the third roundabout after highway exit lead to central_angle=0, leading
to divide by 0 (near line 2488).
from osm_id : 160627295 to osm_id : 4277896
(delta1 + delta2) seams to be 360, so I just set roundabout_length to len in that
case.","Strange, I fail to duplicate the failure.
Did anybody else succeed in duplicating it ?
Last OSM edits are 4 to 6 years ago, so even if we're using a different map version that would not explain the difference.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,218,2017-04-19T16:58:24Z,2017-05-03T14:12:05Z,2017-05-03T14:12:05Z,MERGED,True,6,1,1,https://github.com/mcapdeville,:qnavigation_analyze_roundabout : central_angle may lead to division by 0,1,[],https://github.com/navit-gps/navit/pull/218,https://github.com/metalstrolch,9,https://github.com/navit-gps/navit/pull/218#issuecomment-298883712,"On the path from orange (france) to valence (france) by highway,
the third roundabout after highway exit lead to central_angle=0, leading
to divide by 0 (near line 2488).
from osm_id : 160627295 to osm_id : 4277896
(delta1 + delta2) seams to be 360, so I just set roundabout_length to len in that
case.","Was not able to replicate this yet. What brings me to two conclusions:
1st, I'd add this patch because possible div by zero crashes are bad.
2nd, fix routing qa so we could add this route as a test.
unfortunately I don't have a clue how to do 2nd.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,218,2017-04-19T16:58:24Z,2017-05-03T14:12:05Z,2017-05-03T14:12:05Z,MERGED,True,6,1,1,https://github.com/mcapdeville,:qnavigation_analyze_roundabout : central_angle may lead to division by 0,1,[],https://github.com/navit-gps/navit/pull/218,https://github.com/mcapdeville,10,https://github.com/navit-gps/navit/pull/218#issuecomment-298886038,"On the path from orange (france) to valence (france) by highway,
the third roundabout after highway exit lead to central_angle=0, leading
to divide by 0 (near line 2488).
from osm_id : 160627295 to osm_id : 4277896
(delta1 + delta2) seams to be 360, so I just set roundabout_length to len in that
case.","Effectively, Using only one map : rhonealpes_3.6,44.1,7.9,46.6.bin don't show the problem.
But having this list of map show it :
aquitaine_-2.3,42.4,1.5,45.8.bin
auvergne_2.0,44.6,4.5,46.9.bin
bourgogne_2.8,46.1,5.6,48.5.bin
centre_0.0,46.3,3.2,49.0.bin
cotedazur_4.2,42.9,8.0,45.2.bin
franchecomte_5.2,46.2,7.8,48.1.bin
languedoc_1.5,42.2,4.9,45.0.bin
midipyrenee_-0.4,42.2,3.5,45.1.bin
paysdelaloire_-2.9,46.2,1.0,48.6.bin
poitoucharentes_-1.7,45.0,1.3,47.2.bin
rhonealpes_3.6,44.1,7.9,46.6.bin
swiss_5.8,45.7,10.6,47.8.bin
Perhaps because of overlapping maps ?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,218,2017-04-19T16:58:24Z,2017-05-03T14:12:05Z,2017-05-03T14:12:05Z,MERGED,True,6,1,1,https://github.com/mcapdeville,:qnavigation_analyze_roundabout : central_angle may lead to division by 0,1,[],https://github.com/navit-gps/navit/pull/218,https://github.com/mcapdeville,11,https://github.com/navit-gps/navit/pull/218#issuecomment-298887903,"On the path from orange (france) to valence (france) by highway,
the third roundabout after highway exit lead to central_angle=0, leading
to divide by 0 (near line 2488).
from osm_id : 160627295 to osm_id : 4277896
(delta1 + delta2) seams to be 360, so I just set roundabout_length to len in that
case.","Having only 2 map with this roundabout lead to the probleme :
rhonealpes_3.6,44.1,7.9,46.6.bin and cotedazur_4.2,42.9,8.0,45.2.bin
or cotedazur_4.2,42.9,8.0,45.2.bin and languedoc_1.5,42.2,4.9,45.0.bin
or languedoc_1.5,42.2,4.9,45.0.bin and rhonealpes_3.6,44.1,7.9,46.6.bin
but not when only one of these are present.
So I think there is another problem elsewhere.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,218,2017-04-19T16:58:24Z,2017-05-03T14:12:05Z,2017-05-03T14:12:05Z,MERGED,True,6,1,1,https://github.com/mcapdeville,:qnavigation_analyze_roundabout : central_angle may lead to division by 0,1,[],https://github.com/navit-gps/navit/pull/218,https://github.com/jandegr,12,https://github.com/navit-gps/navit/pull/218#issuecomment-298888286,"On the path from orange (france) to valence (france) by highway,
the third roundabout after highway exit lead to central_angle=0, leading
to divide by 0 (near line 2488).
from osm_id : 160627295 to osm_id : 4277896
(delta1 + delta2) seams to be 360, so I just set roundabout_length to len in that
case.","That is a usefull answer, pointing to a duplicate check failure.
Adding a division by zero check is ok, but without your latest info the real issue would never ever have been searched for.
Using overlapping maps has several sideeffects and in case the maps did not come from the same 'mother-planet.bin' it would even be worse.
All of France is only slightly over 3GB, you should be able to install this on any modern device",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,218,2017-04-19T16:58:24Z,2017-05-03T14:12:05Z,2017-05-03T14:12:05Z,MERGED,True,6,1,1,https://github.com/mcapdeville,:qnavigation_analyze_roundabout : central_angle may lead to division by 0,1,[],https://github.com/navit-gps/navit/pull/218,https://github.com/mcapdeville,13,https://github.com/navit-gps/navit/pull/218#issuecomment-298901596,"On the path from orange (france) to valence (france) by highway,
the third roundabout after highway exit lead to central_angle=0, leading
to divide by 0 (near line 2488).
from osm_id : 160627295 to osm_id : 4277896
(delta1 + delta2) seams to be 360, so I just set roundabout_length to len in that
case.","All my maps are downloaded the same day, so I make this test :
I use one file rhonealpes_3.6,44.1,7.9,46.6.bin and hard link it to rhonealpes_bis_3.6,44.1,7.9,46.6.bin.
This produce the divide by zero error in roundabout_length computation.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,219,2017-04-20T18:35:53Z,2017-09-20T18:25:44Z,2017-09-21T14:38:38Z,CLOSED,False,73,0,1,https://github.com/piamancini,Add backers and sponsors from Open Collective,1,[],https://github.com/navit-gps/navit/pull/219,https://github.com/piamancini,1,https://github.com/navit-gps/navit/pull/219,"Now your open collective backers and sponsors can to appear directly on your README.
see how it'll look here
More info
Also add badges on top","Now your open collective backers and sponsors can to appear directly on your README.
see how it'll look here
More info
Also add badges on top",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,219,2017-04-20T18:35:53Z,2017-09-20T18:25:44Z,2017-09-21T14:38:38Z,CLOSED,False,73,0,1,https://github.com/piamancini,Add backers and sponsors from Open Collective,1,[],https://github.com/navit-gps/navit/pull/219,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/219#issuecomment-296672437,"Now your open collective backers and sponsors can to appear directly on your README.
see how it'll look here
More info
Also add badges on top",Spam?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,219,2017-04-20T18:35:53Z,2017-09-20T18:25:44Z,2017-09-21T14:38:38Z,CLOSED,False,73,0,1,https://github.com/piamancini,Add backers and sponsors from Open Collective,1,[],https://github.com/navit-gps/navit/pull/219,https://github.com/pgrandin,3,https://github.com/navit-gps/navit/pull/219#issuecomment-297233919,"Now your open collective backers and sponsors can to appear directly on your README.
see how it'll look here
More info
Also add badges on top","Actually not it's legit :)
We were approved to join http://opencollective.com/ (we are at https://opencollective.com/navit )
I think that we don't have a use for sponsors yet. We'll have to discuss the details with the community.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,219,2017-04-20T18:35:53Z,2017-09-20T18:25:44Z,2017-09-21T14:38:38Z,CLOSED,False,73,0,1,https://github.com/piamancini,Add backers and sponsors from Open Collective,1,[],https://github.com/navit-gps/navit/pull/219,https://github.com/sleske,4,https://github.com/navit-gps/navit/pull/219#issuecomment-330939287,"Now your open collective backers and sponsors can to appear directly on your README.
see how it'll look here
More info
Also add badges on top","Sorry, but this PR is definitely not something I'd merge. It bloats our README.md with links to 30 (!) sponsors and backers each - which do not (yet) exist. First we'll have to figure out how we can/want to use OpenCollective, then we need backers, then we can decide if and how to put them in our README.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,219,2017-04-20T18:35:53Z,2017-09-20T18:25:44Z,2017-09-21T14:38:38Z,CLOSED,False,73,0,1,https://github.com/piamancini,Add backers and sponsors from Open Collective,1,[],https://github.com/navit-gps/navit/pull/219,https://github.com/piamancini,5,https://github.com/navit-gps/navit/pull/219#issuecomment-330940104,"Now your open collective backers and sponsors can to appear directly on your README.
see how it'll look here
More info
Also add badges on top","Hi @sleske @pgrandin
That's valid, you can then decide how to display backers. Quick question, you've applied to open collective and so have a live collective and can already receive contributions. Do you want us to close it until you figure it out? Best",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,219,2017-04-20T18:35:53Z,2017-09-20T18:25:44Z,2017-09-21T14:38:38Z,CLOSED,False,73,0,1,https://github.com/piamancini,Add backers and sponsors from Open Collective,1,[],https://github.com/navit-gps/navit/pull/219,https://github.com/pgrandin,6,https://github.com/navit-gps/navit/pull/219#issuecomment-331026459,"Now your open collective backers and sponsors can to appear directly on your README.
see how it'll look here
More info
Also add badges on top","Hi Pia,
I'd like to keep our collective open. We haven't really worked on advertising it yet but we should do it soon.
Thanks!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,219,2017-04-20T18:35:53Z,2017-09-20T18:25:44Z,2017-09-21T14:38:38Z,CLOSED,False,73,0,1,https://github.com/piamancini,Add backers and sponsors from Open Collective,1,[],https://github.com/navit-gps/navit/pull/219,https://github.com/sleske,7,https://github.com/navit-gps/navit/pull/219#issuecomment-331131752,"Now your open collective backers and sponsors can to appear directly on your README.
see how it'll look here
More info
Also add badges on top","@piamancini , @pgrandin : Just to clarify - I did not want to judge our involvement with Open Collective in any way. I just closed this PR because as a PR it is not suitable for merging.
We can and should further discuss our cooperation with Open Collective - it's just that I don't feel this is helped by permanently keeping a PR open. So let's see how we can work together.",True,{'THUMBS_UP': ['https://github.com/piamancini']}
navit-gps/navit,https://github.com/navit-gps/navit,219,2017-04-20T18:35:53Z,2017-09-20T18:25:44Z,2017-09-21T14:38:38Z,CLOSED,False,73,0,1,https://github.com/piamancini,Add backers and sponsors from Open Collective,1,[],https://github.com/navit-gps/navit/pull/219,https://github.com/piamancini,8,https://github.com/navit-gps/navit/pull/219#issuecomment-331176988,"Now your open collective backers and sponsors can to appear directly on your README.
see how it'll look here
More info
Also add badges on top","sounds good! We'll keep your collective open. Just note please that the default tiers state that sponsors and backers will show up in readme. We should probably remove that if you don't plan on doing it. Whenever you are ready, there's no rush to do this.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,220,2017-04-24T09:37:59Z,2017-05-03T08:24:15Z,2017-05-03T08:24:30Z,MERGED,True,3,0,6,https://github.com/metalstrolch,Desktop icons in more sizes,1,[],https://github.com/navit-gps/navit/pull/220,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/220,"I recreated the navit desktop icon(s) from the navit.svg present in order to get them for multiple resolutions as required by Sailfish OS.
As this won't hurt others, we can add this to mainline.
P.S. I don't know why the icons up to now were scaled slightly different. Please comment if this is an issue.","I recreated the navit desktop icon(s) from the navit.svg present in order to get them for multiple resolutions as required by Sailfish OS.
As this won't hurt others, we can add this to mainline.
P.S. I don't know why the icons up to now were scaled slightly different. Please comment if this is an issue.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,220,2017-04-24T09:37:59Z,2017-05-03T08:24:15Z,2017-05-03T08:24:30Z,MERGED,True,3,0,6,https://github.com/metalstrolch,Desktop icons in more sizes,1,[],https://github.com/navit-gps/navit/pull/220,https://github.com/zintor,2,https://github.com/navit-gps/navit/pull/220#issuecomment-296804744,"I recreated the navit desktop icon(s) from the navit.svg present in order to get them for multiple resolutions as required by Sailfish OS.
As this won't hurt others, we can add this to mainline.
P.S. I don't know why the icons up to now were scaled slightly different. Please comment if this is an issue.","I agree with metalstrolch, that the icons are needed for Sailfish OS and it shouldn't hurt other.
But this brings me to other OS icon sizes, which are possible:
Windows: 16x16, 24x24, 32x32, 48x48, 256x256
Mac OS X: 16x16, 32x32, 64x64, 128x128, 256x256, 512x512, 1024x1024
Linux: 16x16, 24x24, 48x48, and 96x96
iOS 6: 29x29, 50x50, 57x57, 58x58, 72x72, 100x100, 114x114, 144x144, 1024x1024
iOS 8: 29x29, 40x40, 58x58, 60x60, 76x76, 80x80, 120x120, 152x152, 180x180, 1024x1024
Android L: 24x24, 48x48, 192x192, 512x512
Windows Phone: 62x62, 99x99, 173x173, 200x200
Should/Must we care about these?
Another question: Should some OSs-stylished icons be added?
For example SailfishOS desktop icons looks different than Windows or Android. And so on.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,220,2017-04-24T09:37:59Z,2017-05-03T08:24:15Z,2017-05-03T08:24:30Z,MERGED,True,3,0,6,https://github.com/metalstrolch,Desktop icons in more sizes,1,[],https://github.com/navit-gps/navit/pull/220,https://github.com/metalstrolch,3,https://github.com/navit-gps/navit/pull/220#issuecomment-296829106,"I recreated the navit desktop icon(s) from the navit.svg present in order to get them for multiple resolutions as required by Sailfish OS.
As this won't hurt others, we can add this to mainline.
P.S. I don't know why the icons up to now were scaled slightly different. Please comment if this is an issue.","Until now nobody seemed to care. Imho, I would prefer generating those icons from the svg as required, but that is only possible if some svg tool is present. Adding ""all"" sizes will at least blow up the repo.
At least I would not add distribution special icons there. That should go under contrib.
We could agree putting those added here under contrib as well. But as said presumely nobody cared. So I propose not to care either and keep all the eventualities up until someone wants to create packages requiring them.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,220,2017-04-24T09:37:59Z,2017-05-03T08:24:15Z,2017-05-03T08:24:30Z,MERGED,True,3,0,6,https://github.com/metalstrolch,Desktop icons in more sizes,1,[],https://github.com/navit-gps/navit/pull/220,https://github.com/pgrandin,4,https://github.com/navit-gps/navit/pull/220#issuecomment-297234384,"I recreated the navit desktop icon(s) from the navit.svg present in order to get them for multiple resolutions as required by Sailfish OS.
As this won't hurt others, we can add this to mainline.
P.S. I don't know why the icons up to now were scaled slightly different. Please comment if this is an issue.",Could we generate the icons when building the package instead?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,220,2017-04-24T09:37:59Z,2017-05-03T08:24:15Z,2017-05-03T08:24:30Z,MERGED,True,3,0,6,https://github.com/metalstrolch,Desktop icons in more sizes,1,[],https://github.com/navit-gps/navit/pull/220,https://github.com/metalstrolch,5,https://github.com/navit-gps/navit/pull/220#issuecomment-297263666,"I recreated the navit desktop icon(s) from the navit.svg present in order to get them for multiple resolutions as required by Sailfish OS.
As this won't hurt others, we can add this to mainline.
P.S. I don't know why the icons up to now were scaled slightly different. Please comment if this is an issue.","Yes we could. The same way we do the map icons. But this will make those icons dependant of any svg processing tool on compile time. With Sailfish, this could be problematic",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,220,2017-04-24T09:37:59Z,2017-05-03T08:24:15Z,2017-05-03T08:24:30Z,MERGED,True,3,0,6,https://github.com/metalstrolch,Desktop icons in more sizes,1,[],https://github.com/navit-gps/navit/pull/220,https://github.com/sleske,6,https://github.com/navit-gps/navit/pull/220#issuecomment-297383188,"I recreated the navit desktop icon(s) from the navit.svg present in order to get them for multiple resolutions as required by Sailfish OS.
As this won't hurt others, we can add this to mainline.
P.S. I don't know why the icons up to now were scaled slightly different. Please comment if this is an issue.","@metalstrolch

Yes we could. The same way we do the map icons. But this will make those icons dependant of any svg processing tool on compile time. With Sailfish, this could be problematic.

Why would that be problematic? The build already depends on an SVG processing tool (otherwise you will have next to no icons). Why can't we just re-use this functionality for generating the desktop icons?
I would like to avoid redundantly including PNG files in the repository - not only because of repo size, but also because this is hard to maintain if the icon is changed/corrected later.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,220,2017-04-24T09:37:59Z,2017-05-03T08:24:15Z,2017-05-03T08:24:30Z,MERGED,True,3,0,6,https://github.com/metalstrolch,Desktop icons in more sizes,1,[],https://github.com/navit-gps/navit/pull/220,https://github.com/metalstrolch,7,https://github.com/navit-gps/navit/pull/220#issuecomment-297396605,"I recreated the navit desktop icon(s) from the navit.svg present in order to get them for multiple resolutions as required by Sailfish OS.
As this won't hurt others, we can add this to mainline.
P.S. I don't know why the icons up to now were scaled slightly different. Please comment if this is an issue.","No, the sailfish build uses svg directly. No need for svg tool and png icons. Dont know if this is available in MER build vm.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,220,2017-04-24T09:37:59Z,2017-05-03T08:24:15Z,2017-05-03T08:24:30Z,MERGED,True,3,0,6,https://github.com/metalstrolch,Desktop icons in more sizes,1,[],https://github.com/navit-gps/navit/pull/220,https://github.com/metalstrolch,8,https://github.com/navit-gps/navit/pull/220#issuecomment-298850339,"I recreated the navit desktop icon(s) from the navit.svg present in order to get them for multiple resolutions as required by Sailfish OS.
As this won't hurt others, we can add this to mainline.
P.S. I don't know why the icons up to now were scaled slightly different. Please comment if this is an issue.",As there was no more conversation (and this should really not hurt anybody) I merge this to get clean state for sailfish build.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,221,2017-04-25T08:48:00Z,2017-04-26T04:27:10Z,2017-04-26T14:22:53Z,MERGED,True,7055,0,5,https://github.com/metalstrolch,Add rules to build sailfish package,16,[],https://github.com/navit-gps/navit/pull/221,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/221,"This patch adds build scripts for building a (almost) Sailfish OS Harbour compatible package for Sailfish OS. With this, Sailfish OS package can be built from vanilla upstream Navit.
This patch includes:

Build script for building under Sailfish OS MER VM for Phones and Emulator.
RPM spec file to cope for the special requirements for Harbour
Sample configuration with simple OSD and size configuration for Jolla Phone screens.
Example shell trampoline to call espeak for voice output if espeak is installed.","This patch adds build scripts for building a (almost) Sailfish OS Harbour compatible package for Sailfish OS. With this, Sailfish OS package can be built from vanilla upstream Navit.
This patch includes:

Build script for building under Sailfish OS MER VM for Phones and Emulator.
RPM spec file to cope for the special requirements for Harbour
Sample configuration with simple OSD and size configuration for Jolla Phone screens.
Example shell trampoline to call espeak for voice output if espeak is installed.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,221,2017-04-25T08:48:00Z,2017-04-26T04:27:10Z,2017-04-26T14:22:53Z,MERGED,True,7055,0,5,https://github.com/metalstrolch,Add rules to build sailfish package,16,[],https://github.com/navit-gps/navit/pull/221,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/221#issuecomment-296963807,"This patch adds build scripts for building a (almost) Sailfish OS Harbour compatible package for Sailfish OS. With this, Sailfish OS package can be built from vanilla upstream Navit.
This patch includes:

Build script for building under Sailfish OS MER VM for Phones and Emulator.
RPM spec file to cope for the special requirements for Harbour
Sample configuration with simple OSD and size configuration for Jolla Phone screens.
Example shell trampoline to call espeak for voice output if espeak is installed.","@zintor If you want to start thinking about a QML 2.0 GUI, have a look at the qt5_qml_gui branch.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,221,2017-04-25T08:48:00Z,2017-04-26T04:27:10Z,2017-04-26T14:22:53Z,MERGED,True,7055,0,5,https://github.com/metalstrolch,Add rules to build sailfish package,16,[],https://github.com/navit-gps/navit/pull/221,https://github.com/pgrandin,3,https://github.com/navit-gps/navit/pull/221#issuecomment-297234536,"This patch adds build scripts for building a (almost) Sailfish OS Harbour compatible package for Sailfish OS. With this, Sailfish OS package can be built from vanilla upstream Navit.
This patch includes:

Build script for building under Sailfish OS MER VM for Phones and Emulator.
RPM spec file to cope for the special requirements for Harbour
Sample configuration with simple OSD and size configuration for Jolla Phone screens.
Example shell trampoline to call espeak for voice output if espeak is installed.","Nice, thanks @metalstrolch !",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,222,2017-04-26T10:49:37Z,2017-04-26T10:52:33Z,2017-04-26T10:52:33Z,CLOSED,False,6797,0,1,https://github.com/jfitie,Fix POI toggle bug with Car-dark layout,1,[],https://github.com/navit-gps/navit/pull/222,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/222,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,223,2017-04-26T10:55:36Z,2017-05-03T04:19:45Z,2017-05-03T04:19:54Z,MERGED,True,1,1,1,https://github.com/jfitie,[Android] Fix POI toggle bug with Car-dark layout,1,[],https://github.com/navit-gps/navit/pull/223,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/223,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,223,2017-04-26T10:55:36Z,2017-05-03T04:19:45Z,2017-05-03T04:19:54Z,MERGED,True,1,1,1,https://github.com/jfitie,[Android] Fix POI toggle bug with Car-dark layout,1,[],https://github.com/navit-gps/navit/pull/223,https://github.com/jfitie,2,https://github.com/navit-gps/navit/pull/223#issuecomment-297937910,,"Here's the code performing the toggle: 
  
    
      navit/navit/android/src/org/navitproject/navit/Navit.java
    
    
         Line 682
      in
      18faa2b
    
  
  
    

        
          
           b.putString(""cmd"", ""toggle_layer(\""POI Symbols\"");""); 
        
    
  


Here's the XML in the Car layout thats working correctly: 
  
    
      navit/navit/navit_shipped.xml
    
    
         Line 1667
      in
      18faa2b
    
  
  
    

        
          
           <layer name=""POI Symbols"">",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,223,2017-04-26T10:55:36Z,2017-05-03T04:19:45Z,2017-05-03T04:19:54Z,MERGED,True,1,1,1,https://github.com/jfitie,[Android] Fix POI toggle bug with Car-dark layout,1,[],https://github.com/navit-gps/navit/pull/223,https://github.com/pgrandin,3,https://github.com/navit-gps/navit/pull/223#issuecomment-298820204,,"Merged, thanks @jfitie",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,224,2017-04-27T16:55:33Z,2017-06-20T17:19:44Z,2017-06-20T17:19:45Z,MERGED,True,1,1,1,https://github.com/jfitie,[Android] Change default layout from Car-Android to Car,1,['enhancement'],https://github.com/navit-gps/navit/pull/224,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/224,"http://trac.navit-project.org/ticket/1068
Since the Car-layout looks so much better than the Car-Android one, and speedwise most Android devices have no problem handling the Car-layout, I propose to set the default layout back to Car.","http://trac.navit-project.org/ticket/1068
Since the Car-layout looks so much better than the Car-Android one, and speedwise most Android devices have no problem handling the Car-layout, I propose to set the default layout back to Car.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,225,2017-04-27T17:02:25Z,2017-06-20T17:17:59Z,2017-06-20T17:17:59Z,MERGED,True,1,0,1,https://github.com/jfitie,[Android] Enable autozoom by default,1,['enhancement'],https://github.com/navit-gps/navit/pull/225,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/225,Enable autozoom by default so that car navigation automatically zooms in on the vehicle based on current speed. Very useful when navigating.,Enable autozoom by default so that car navigation automatically zooms in on the vehicle based on current speed. Very useful when navigating.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,225,2017-04-27T17:02:25Z,2017-06-20T17:17:59Z,2017-06-20T17:17:59Z,MERGED,True,1,0,1,https://github.com/jfitie,[Android] Enable autozoom by default,1,['enhancement'],https://github.com/navit-gps/navit/pull/225,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/225#issuecomment-298820137,Enable autozoom by default so that car navigation automatically zooms in on the vehicle based on current speed. Very useful when navigating.,It works for me. @jandegr any opinion on this?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,225,2017-04-27T17:02:25Z,2017-06-20T17:17:59Z,2017-06-20T17:17:59Z,MERGED,True,1,0,1,https://github.com/jfitie,[Android] Enable autozoom by default,1,['enhancement'],https://github.com/navit-gps/navit/pull/225,https://github.com/jfitie,3,https://github.com/navit-gps/navit/pull/225#issuecomment-298828759,Enable autozoom by default so that car navigation automatically zooms in on the vehicle based on current speed. Very useful when navigating.,Thanks for considering. Enabling this option by default gives the end user a much better out-of-box experience.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,225,2017-04-27T17:02:25Z,2017-06-20T17:17:59Z,2017-06-20T17:17:59Z,MERGED,True,1,0,1,https://github.com/jfitie,[Android] Enable autozoom by default,1,['enhancement'],https://github.com/navit-gps/navit/pull/225,https://github.com/jandegr,4,https://github.com/navit-gps/navit/pull/225#issuecomment-298853045,Enable autozoom by default so that car navigation automatically zooms in on the vehicle based on current speed. Very useful when navigating.,"Without some way to change it this discussion is just a matter of taste.
With smth. like below it can be made a user setting, leaving what the default
value should be open for further discussion.


case R.id.toggle_autozoom:
msg = Message.obtain(N_NavitGraphics.callback_handler, NavitGraphics.msg_type.CLB_CALL_CMD.ordinal());
b = new Bundle();
b.putString(""cmd"", ""autozoom_active=autozoom_active==0?1:0"");
msg.setData(b);
msg.sendToTarget();
break;",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,225,2017-04-27T17:02:25Z,2017-06-20T17:17:59Z,2017-06-20T17:17:59Z,MERGED,True,1,0,1,https://github.com/jfitie,[Android] Enable autozoom by default,1,['enhancement'],https://github.com/navit-gps/navit/pull/225,https://github.com/jfitie,5,https://github.com/navit-gps/navit/pull/225#issuecomment-298857433,Enable autozoom by default so that car navigation automatically zooms in on the vehicle based on current speed. Very useful when navigating.,https://github.com/navit-gps/navit/pull/231/files,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,226,2017-04-27T17:17:54Z,2017-05-03T00:37:26Z,2017-05-03T00:37:26Z,MERGED,True,7,1,1,https://github.com/jfitie,[Android] 'Toggle POIs' button also toggle POI labels,1,[],https://github.com/navit-gps/navit/pull/226,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/226,"http://trac.navit-project.org/ticket/1071
The menu-button Toggle POIs in the Android port toggles the POI Symbols layer. It makes sense to have it also toggle the related POI Labels layer. Attached a patch to make this happen.","http://trac.navit-project.org/ticket/1071
The menu-button Toggle POIs in the Android port toggles the POI Symbols layer. It makes sense to have it also toggle the related POI Labels layer. Attached a patch to make this happen.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,226,2017-04-27T17:17:54Z,2017-05-03T00:37:26Z,2017-05-03T00:37:26Z,MERGED,True,7,1,1,https://github.com/jfitie,[Android] 'Toggle POIs' button also toggle POI labels,1,[],https://github.com/navit-gps/navit/pull/226,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/226#issuecomment-298798772,"http://trac.navit-project.org/ticket/1071
The menu-button Toggle POIs in the Android port toggles the POI Symbols layer. It makes sense to have it also toggle the related POI Labels layer. Attached a patch to make this happen.",Thanks @jfitie for not giving up on this patch!,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,227,2017-04-28T06:31:04Z,2017-07-20T06:38:49Z,2017-07-20T06:38:49Z,CLOSED,False,84,26,1,https://github.com/jfitie,Change default cursor in Car and Car-dark layouts,1,[],https://github.com/navit-gps/navit/pull/227,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/227,Use Car-Android cursor as default cursor in Car and Car-dark layouts. Changed the green color to blue for the Car-dark layout.,Use Car-Android cursor as default cursor in Car and Car-dark layouts. Changed the green color to blue for the Car-dark layout.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,228,2017-04-28T18:11:54Z,2017-04-29T17:57:43Z,2017-04-29T17:57:48Z,MERGED,True,69,1,5,https://github.com/pgrandin,Add network info menu in gui/internal for Linux,4,[],https://github.com/navit-gps/navit/pull/228,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/228,"This PR adds a simple information menu showing the available network interfaces and their respective IP addresses.
This is especially useful when using Linux-based touchscreen devices.","This PR adds a simple information menu showing the available network interfaces and their respective IP addresses.
This is especially useful when using Linux-based touchscreen devices.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,228,2017-04-28T18:11:54Z,2017-04-29T17:57:43Z,2017-04-29T17:57:48Z,MERGED,True,69,1,5,https://github.com/pgrandin,Add network info menu in gui/internal for Linux,4,[],https://github.com/navit-gps/navit/pull/228,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/228#issuecomment-298184178,"This PR adds a simple information menu showing the available network interfaces and their respective IP addresses.
This is especially useful when using Linux-based touchscreen devices.","Thanks guys!
@metalstrolch : thanks for testing this on Sailfish! Translations should be handled via 
  
    
      navit/navit/gui/internal/gui_internal_command.c
    
    
         Line 801
      in
      239c1a9
    
  
  
    

        
          
           menu=gui_internal_menu(this, _(""Network info"")); 
        
    
  


This item will be added to the template navit.pot and pushed to launchpad automatically when the code will be merged into trunk. Currently our translation workflow does not deal with branches (this would allow working on translations before merging in trunk) but we could maybe improve that.
@pohlinkzei thanks for your help!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,229,2017-04-30T20:40:36Z,2017-05-01T17:33:56Z,2017-05-01T21:59:25Z,MERGED,True,2,0,1,https://github.com/pohlinkzei,Fix trac1347.,1,[],https://github.com/navit-gps/navit/pull/229,https://github.com/pohlinkzei,1,https://github.com/navit-gps/navit/pull/229,"Add 'Follow' and 'Active' to vehicle_demo to remove the corresponding error messages (Unsupported Attribute)
trac1347
The Demo_Vehicle complains about its unsupported attributes follow and active. These Attributes arent really unsupported but processes inside navit.c for all vehicles. Since these Attributes are processes globally we might want to ignore them inside vehicle_demo.c.
So this will be acheived by this PR.","Add 'Follow' and 'Active' to vehicle_demo to remove the corresponding error messages (Unsupported Attribute)
trac1347
The Demo_Vehicle complains about its unsupported attributes follow and active. These Attributes arent really unsupported but processes inside navit.c for all vehicles. Since these Attributes are processes globally we might want to ignore them inside vehicle_demo.c.
So this will be acheived by this PR.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,229,2017-04-30T20:40:36Z,2017-05-01T17:33:56Z,2017-05-01T21:59:25Z,MERGED,True,2,0,1,https://github.com/pohlinkzei,Fix trac1347.,1,[],https://github.com/navit-gps/navit/pull/229,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/229#issuecomment-298382142,"Add 'Follow' and 'Active' to vehicle_demo to remove the corresponding error messages (Unsupported Attribute)
trac1347
The Demo_Vehicle complains about its unsupported attributes follow and active. These Attributes arent really unsupported but processes inside navit.c for all vehicles. Since these Attributes are processes globally we might want to ignore them inside vehicle_demo.c.
So this will be acheived by this PR.",Thanks @pohlinkzei !,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,230,2017-05-02T20:49:00Z,2017-05-03T16:07:06Z,2017-05-03T18:01:56Z,MERGED,True,101,2,1,https://github.com/pohlinkzei,Fix trac981: Add Align-Attr to osd type Odometer,2,[],https://github.com/navit-gps/navit/pull/230,https://github.com/pohlinkzei,1,https://github.com/navit-gps/navit/pull/230,Fixes trac981,Fixes trac981,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,231,2017-05-03T08:59:41Z,2017-05-05T08:27:58Z,2017-05-05T08:27:58Z,CLOSED,False,2,0,1,https://github.com/jfitie,Add auto zoom toggle,1,[],https://github.com/navit-gps/navit/pull/231,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/231,#225,#225,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,231,2017-05-03T08:59:41Z,2017-05-05T08:27:58Z,2017-05-05T08:27:58Z,CLOSED,False,2,0,1,https://github.com/jfitie,Add auto zoom toggle,1,[],https://github.com/navit-gps/navit/pull/231,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/231#issuecomment-298953741,#225,"I like the simplicity of this solution, but we probably need a different icon",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,231,2017-05-03T08:59:41Z,2017-05-05T08:27:58Z,2017-05-05T08:27:58Z,CLOSED,False,2,0,1,https://github.com/jfitie,Add auto zoom toggle,1,[],https://github.com/navit-gps/navit/pull/231,https://github.com/jfitie,3,https://github.com/navit-gps/navit/pull/231#issuecomment-298984341,#225,@pgrandin; suggestion: gui_zoom.zip,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,231,2017-05-03T08:59:41Z,2017-05-05T08:27:58Z,2017-05-05T08:27:58Z,CLOSED,False,2,0,1,https://github.com/jfitie,Add auto zoom toggle,1,[],https://github.com/navit-gps/navit/pull/231,https://github.com/pgrandin,4,https://github.com/navit-gps/navit/pull/231#issuecomment-299352860,#225,Perfect! can you please add them to the PR?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,231,2017-05-03T08:59:41Z,2017-05-05T08:27:58Z,2017-05-05T08:27:58Z,CLOSED,False,2,0,1,https://github.com/jfitie,Add auto zoom toggle,1,[],https://github.com/navit-gps/navit/pull/231,https://github.com/jfitie,5,https://github.com/navit-gps/navit/pull/231#issuecomment-299385323,#225,"Already removed the branch, hope this works. #237",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,231,2017-05-03T08:59:41Z,2017-05-05T08:27:58Z,2017-05-05T08:27:58Z,CLOSED,False,2,0,1,https://github.com/jfitie,Add auto zoom toggle,1,[],https://github.com/navit-gps/navit/pull/231,https://github.com/metalstrolch,6,https://github.com/navit-gps/navit/pull/231#issuecomment-299409991,#225,"Closing this, as already merged with #237",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,232,2017-05-03T11:36:03Z,2017-05-03T15:21:23Z,2017-05-03T17:53:46Z,MERGED,True,4,0,1,https://github.com/metalstrolch,Fix: Don't crash if LANG environment not set,1,[],https://github.com/navit-gps/navit/pull/232,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/232,"Since getenv may return NULL if a variable is not set, current keyboard
code crashes if LANG environment is not set.","Since getenv may return NULL if a variable is not set, current keyboard
code crashes if LANG environment is not set.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,232,2017-05-03T11:36:03Z,2017-05-03T15:21:23Z,2017-05-03T17:53:46Z,MERGED,True,4,0,1,https://github.com/metalstrolch,Fix: Don't crash if LANG environment not set,1,[],https://github.com/navit-gps/navit/pull/232,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/232#issuecomment-298944224,"Since getenv may return NULL if a variable is not set, current keyboard
code crashes if LANG environment is not set.","A simple fix to an old problem!
Thanks @metalstrolch !",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,233,2017-05-03T14:03:10Z,2017-05-05T18:03:51Z,2017-05-07T15:46:37Z,MERGED,True,502,12,13,https://github.com/metalstrolch,Add: Add speech module using espeak on QMultimedia.,14,[],https://github.com/navit-gps/navit/pull/233,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/233,"This pull request adds a new speech module using espeak on QMultimedia back end. It builds either against autodetected system installed libespeak, or with the internal (heavily modified) espeak if no external libespeak was found.
This allows to have speech output on Qt5 systems without further external requirement. Espeak unfortunately is seldom provided by the distributions.
Note: This implemention is not multithreaded. It may therefore come to chopping on weak systems as drawing the screen locks the Qt evet loop.
But it works quite well at least on Jolla smart phone.","This pull request adds a new speech module using espeak on QMultimedia back end. It builds either against autodetected system installed libespeak, or with the internal (heavily modified) espeak if no external libespeak was found.
This allows to have speech output on Qt5 systems without further external requirement. Espeak unfortunately is seldom provided by the distributions.
Note: This implemention is not multithreaded. It may therefore come to chopping on weak systems as drawing the screen locks the Qt evet loop.
But it works quite well at least on Jolla smart phone.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,233,2017-05-03T14:03:10Z,2017-05-05T18:03:51Z,2017-05-07T15:46:37Z,MERGED,True,502,12,13,https://github.com/metalstrolch,Add: Add speech module using espeak on QMultimedia.,14,[],https://github.com/navit-gps/navit/pull/233,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/233#issuecomment-299402346,"This pull request adds a new speech module using espeak on QMultimedia back end. It builds either against autodetected system installed libespeak, or with the internal (heavily modified) espeak if no external libespeak was found.
This allows to have speech output on Qt5 systems without further external requirement. Espeak unfortunately is seldom provided by the distributions.
Note: This implemention is not multithreaded. It may therefore come to chopping on weak systems as drawing the screen locks the Qt evet loop.
But it works quite well at least on Jolla smart phone.",What about this? Any reason not to merge?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,233,2017-05-03T14:03:10Z,2017-05-05T18:03:51Z,2017-05-07T15:46:37Z,MERGED,True,502,12,13,https://github.com/metalstrolch,Add: Add speech module using espeak on QMultimedia.,14,[],https://github.com/navit-gps/navit/pull/233,https://github.com/pgrandin,3,https://github.com/navit-gps/navit/pull/233#issuecomment-299534715,"This pull request adds a new speech module using espeak on QMultimedia back end. It builds either against autodetected system installed libespeak, or with the internal (heavily modified) espeak if no external libespeak was found.
This allows to have speech output on Qt5 systems without further external requirement. Espeak unfortunately is seldom provided by the distributions.
Note: This implemention is not multithreaded. It may therefore come to chopping on weak systems as drawing the screen locks the Qt evet loop.
But it works quite well at least on Jolla smart phone.","Sorry - missed your last comment. Looks good now, thanks!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,234,2017-05-03T20:30:04Z,2017-05-06T02:39:32Z,2017-05-08T09:49:08Z,MERGED,True,61,63,1,https://github.com/pohlinkzei,Trac-1246: Draw background color even if text label is empty.,1,[],https://github.com/navit-gps/navit/pull/234,https://github.com/pohlinkzei,1,https://github.com/navit-gps/navit/pull/234,This PR shall fix trac-1246,This PR shall fix trac-1246,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,235,2017-05-03T21:05:56Z,2018-01-17T07:42:21Z,2018-01-17T07:42:21Z,CLOSED,False,3,2,1,https://github.com/pohlinkzei,Make Image and Scale osd types obey osd_configuration setting,1,[],https://github.com/navit-gps/navit/pull/235,https://github.com/pohlinkzei,1,https://github.com/navit-gps/navit/pull/235,This PR shall fix trac-1202,This PR shall fix trac-1202,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,235,2017-05-03T21:05:56Z,2018-01-17T07:42:21Z,2018-01-17T07:42:21Z,CLOSED,False,3,2,1,https://github.com/pohlinkzei,Make Image and Scale osd types obey osd_configuration setting,1,[],https://github.com/navit-gps/navit/pull/235,https://github.com/pohlinkzei,2,https://github.com/navit-gps/navit/pull/235#issuecomment-299655646,This PR shall fix trac-1202,I've found an issue I have to investigate before merging. So please wait. ;),True,{}
navit-gps/navit,https://github.com/navit-gps/navit,235,2017-05-03T21:05:56Z,2018-01-17T07:42:21Z,2018-01-17T07:42:21Z,CLOSED,False,3,2,1,https://github.com/pohlinkzei,Make Image and Scale osd types obey osd_configuration setting,1,[],https://github.com/navit-gps/navit/pull/235,https://github.com/pgrandin,3,https://github.com/navit-gps/navit/pull/235#issuecomment-299680043,This PR shall fix trac-1202,":)
I tried to test this yesterday but my osd_configuration was not behaving as I expected...",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,235,2017-05-03T21:05:56Z,2018-01-17T07:42:21Z,2018-01-17T07:42:21Z,CLOSED,False,3,2,1,https://github.com/pohlinkzei,Make Image and Scale osd types obey osd_configuration setting,1,[],https://github.com/navit-gps/navit/pull/235,https://github.com/pohlinkzei,4,https://github.com/navit-gps/navit/pull/235#issuecomment-299684388,This PR shall fix trac-1202,"If you add use_overlay=""1"" to the osd, it works as expected. But I think this is not what we want.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,235,2017-05-03T21:05:56Z,2018-01-17T07:42:21Z,2018-01-17T07:42:21Z,CLOSED,False,3,2,1,https://github.com/pohlinkzei,Make Image and Scale osd types obey osd_configuration setting,1,[],https://github.com/navit-gps/navit/pull/235,https://github.com/pgrandin,5,https://github.com/navit-gps/navit/pull/235#issuecomment-341911377,This PR shall fix trac-1202,@pohlinkzei : any update? Thanks!,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,235,2017-05-03T21:05:56Z,2018-01-17T07:42:21Z,2018-01-17T07:42:21Z,CLOSED,False,3,2,1,https://github.com/pohlinkzei,Make Image and Scale osd types obey osd_configuration setting,1,[],https://github.com/navit-gps/navit/pull/235,https://github.com/jkoan,6,https://github.com/navit-gps/navit/pull/235#issuecomment-358206814,This PR shall fix trac-1202,@pohlinkzei and @pgrandin since this is not working and no work is done to do so what's about close this PR?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,235,2017-05-03T21:05:56Z,2018-01-17T07:42:21Z,2018-01-17T07:42:21Z,CLOSED,False,3,2,1,https://github.com/pohlinkzei,Make Image and Scale osd types obey osd_configuration setting,1,[],https://github.com/navit-gps/navit/pull/235,https://github.com/sleske,7,https://github.com/navit-gps/navit/pull/235#issuecomment-358222814,This PR shall fix trac-1202,@jkoan : Good idea. Done. We can always reopen later.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,236,2017-05-04T09:22:28Z,2017-05-05T03:04:01Z,2017-05-05T08:47:15Z,MERGED,True,355,22,13,https://github.com/metalstrolch,Add Qt5 qml gui skeleton,5,[],https://github.com/navit-gps/navit/pull/236,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/236,"This pull request aims to merge the work on a qt5 gui to main line.
This includes:

The parts required to co work with the already functional qt5 qml graphics including the required changes to qt5 qml graphics. This gives a nice QML type for the navit render area.
Some example skeleton code how to add more qml ressources.
Basic gui plugin structure. Works as it replaces the QML code brought from graphics by its own.

Why to merge:

The outstanding changes to qt5 graphics hinder further development.
To give others the chance to kick in doing real GUI development, as I'm neither a QML nor a GUI expert. Everybody will see the stuff in trunk.
Even if never completed, the qt5_qml_gui code won't hurt, as it is just another plug in.","This pull request aims to merge the work on a qt5 gui to main line.
This includes:

The parts required to co work with the already functional qt5 qml graphics including the required changes to qt5 qml graphics. This gives a nice QML type for the navit render area.
Some example skeleton code how to add more qml ressources.
Basic gui plugin structure. Works as it replaces the QML code brought from graphics by its own.

Why to merge:

The outstanding changes to qt5 graphics hinder further development.
To give others the chance to kick in doing real GUI development, as I'm neither a QML nor a GUI expert. Everybody will see the stuff in trunk.
Even if never completed, the qt5_qml_gui code won't hurt, as it is just another plug in.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,236,2017-05-04T09:22:28Z,2017-05-05T03:04:01Z,2017-05-05T08:47:15Z,MERGED,True,355,22,13,https://github.com/metalstrolch,Add Qt5 qml gui skeleton,5,[],https://github.com/navit-gps/navit/pull/236,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/236#issuecomment-299359639,"This pull request aims to merge the work on a qt5 gui to main line.
This includes:

The parts required to co work with the already functional qt5 qml graphics including the required changes to qt5 qml graphics. This gives a nice QML type for the navit render area.
Some example skeleton code how to add more qml ressources.
Basic gui plugin structure. Works as it replaces the QML code brought from graphics by its own.

Why to merge:

The outstanding changes to qt5 graphics hinder further development.
To give others the chance to kick in doing real GUI development, as I'm neither a QML nor a GUI expert. Everybody will see the stuff in trunk.
Even if never completed, the qt5_qml_gui code won't hurt, as it is just another plug in.","I'm really happy to this thing happening! Thanks @metalstrolch !
Since it's currently under heavy development we can probably expect things to change, but at some point please make sure to document your function prototypes, especially here : https://github.com/navit-gps/navit/pull/236/files#diff-9cd740b60e5eff9e56ea478e3d2265be
Thanks!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,237,2017-05-05T05:43:54Z,2017-05-05T08:27:20Z,2017-05-07T07:51:40Z,MERGED,True,1117,1,3,https://github.com/jfitie,Auto manual zoom icons,3,[],https://github.com/navit-gps/navit/pull/237,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/237,#231 (comment),#231 (comment),True,{}
navit-gps/navit,https://github.com/navit-gps/navit,237,2017-05-05T05:43:54Z,2017-05-05T08:27:20Z,2017-05-07T07:51:40Z,MERGED,True,1117,1,3,https://github.com/jfitie,Auto manual zoom icons,3,[],https://github.com/navit-gps/navit/pull/237,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/237#issuecomment-299409101,#231 (comment),"Would suggest keeping the source branch in the future, as this eases up checking",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,237,2017-05-05T05:43:54Z,2017-05-05T08:27:20Z,2017-05-07T07:51:40Z,MERGED,True,1117,1,3,https://github.com/jfitie,Auto manual zoom icons,3,[],https://github.com/navit-gps/navit/pull/237,https://github.com/pgrandin,3,https://github.com/navit-gps/navit/pull/237#issuecomment-299680621,#231 (comment),"On an somewhat unrelated topic, @jfitie your patches appear to be against ""unkown repository"" which doesn't make CI testing easy. Do you prepare your patches against a fork?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,237,2017-05-05T05:43:54Z,2017-05-05T08:27:20Z,2017-05-07T07:51:40Z,MERGED,True,1117,1,3,https://github.com/jfitie,Auto manual zoom icons,3,[],https://github.com/navit-gps/navit/pull/237,https://github.com/jfitie,4,https://github.com/navit-gps/navit/pull/237#issuecomment-299688826,#231 (comment),@pgrandin I was too fast in removing my branch/fork :-),True,{}
navit-gps/navit,https://github.com/navit-gps/navit,238,2017-05-05T08:42:57Z,2017-05-05T08:43:20Z,2017-05-05T08:43:26Z,MERGED,True,14,0,1,https://github.com/metalstrolch,Fix: Add autozoom switch to sailfosh config,1,[],https://github.com/navit-gps/navit/pull/238,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/238,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,239,2017-05-05T08:50:32Z,2017-05-06T19:55:32Z,2017-05-06T19:55:45Z,MERGED,True,1565,1553,10,https://github.com/metalstrolch,Refactor: graphics_qt5 and vehicle_qt5 cleanup,2,[],https://github.com/navit-gps/navit/pull/239,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/239,"Apply coding style (using clang-format) to graphics qt5 and vehicle qt5
Fix includes
Fix file header copyright notes","Apply coding style (using clang-format) to graphics qt5 and vehicle qt5
Fix includes
Fix file header copyright notes",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,239,2017-05-05T08:50:32Z,2017-05-06T19:55:32Z,2017-05-06T19:55:45Z,MERGED,True,1565,1553,10,https://github.com/metalstrolch,Refactor: graphics_qt5 and vehicle_qt5 cleanup,2,[],https://github.com/navit-gps/navit/pull/239,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/239#issuecomment-299503127,"Apply coding style (using clang-format) to graphics qt5 and vehicle qt5
Fix includes
Fix file header copyright notes","Looks good to me, I love consistent code thanks.
Please don't forget about the function prototypes comments, we use them to generate documentation using Doxygen.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,240,2017-05-06T17:43:13Z,2017-05-07T03:29:04Z,2017-12-12T16:15:54Z,MERGED,True,32,30,1,https://github.com/jfitie,Fix Car layout issues with wood and water,1,[],https://github.com/navit-gps/navit/pull/240,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/240,Fixed some issues in Car layout where wood (poly_wood) was not showing up correctly inside towns (poly_town) and water (poly_water) was missing in parks (poly_park). Also fixed some discrepancy issues in the Car-dark layout.,Fixed some issues in Car layout where wood (poly_wood) was not showing up correctly inside towns (poly_town) and water (poly_water) was missing in parks (poly_park). Also fixed some discrepancy issues in the Car-dark layout.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,240,2017-05-06T17:43:13Z,2017-05-07T03:29:04Z,2017-12-12T16:15:54Z,MERGED,True,32,30,1,https://github.com/jfitie,Fix Car layout issues with wood and water,1,[],https://github.com/navit-gps/navit/pull/240,https://github.com/jfitie,2,https://github.com/navit-gps/navit/pull/240#issuecomment-299655523,Fixed some issues in Car layout where wood (poly_wood) was not showing up correctly inside towns (poly_town) and water (poly_water) was missing in parks (poly_park). Also fixed some discrepancy issues in the Car-dark layout.,"2 example images. Sorry about the DPI differences between before and after.
First example; note the difference in water rendered in the parks near the middle. Also the canals in the bottom left are much better.


Second example; wood is correctly rendered within the village (bottom). In the top right part, the forest is not cut off by the town anymore.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,240,2017-05-06T17:43:13Z,2017-05-07T03:29:04Z,2017-12-12T16:15:54Z,MERGED,True,32,30,1,https://github.com/jfitie,Fix Car layout issues with wood and water,1,[],https://github.com/navit-gps/navit/pull/240,https://github.com/pgrandin,3,https://github.com/navit-gps/navit/pull/240#issuecomment-299680002,Fixed some issues in Car layout where wood (poly_wood) was not showing up correctly inside towns (poly_town) and water (poly_water) was missing in parks (poly_park). Also fixed some discrepancy issues in the Car-dark layout.,Bonus points for the screenshots. Thanks a lot!,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,240,2017-05-06T17:43:13Z,2017-05-07T03:29:04Z,2017-12-12T16:15:54Z,MERGED,True,32,30,1,https://github.com/jfitie,Fix Car layout issues with wood and water,1,[],https://github.com/navit-gps/navit/pull/240,https://github.com/jandegr,4,https://github.com/navit-gps/navit/pull/240#issuecomment-299685640,Fixed some issues in Car layout where wood (poly_wood) was not showing up correctly inside towns (poly_town) and water (poly_water) was missing in parks (poly_park). Also fixed some discrepancy issues in the Car-dark layout.,"Hi,
There is indeed some work to do to tune the layouts, but in this case moving water_tiled is not helping for the samples you show and will probably worsen flooded maps.
In such areas we now see parks and such on top of a watersurface, with the move of water_tiled I think they will get drowned completely. Will try to come up with some samples, stay tuned.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,240,2017-05-06T17:43:13Z,2017-05-07T03:29:04Z,2017-12-12T16:15:54Z,MERGED,True,32,30,1,https://github.com/jfitie,Fix Car layout issues with wood and water,1,[],https://github.com/navit-gps/navit/pull/240,https://github.com/jandegr,5,https://github.com/navit-gps/navit/pull/240#issuecomment-299688542,Fixed some issues in Car layout where wood (poly_wood) was not showing up correctly inside towns (poly_town) and water (poly_water) was missing in parks (poly_park). Also fixed some discrepancy issues in the Car-dark layout.,"A flooded sample before https://167-32961764-gh.circle-artifacts.com/0/tmp/circle-artifacts.1cS0lMk/Boulevard_Peripherique_2.yamlmetric.png
The same but with today's trunk https://216-32961764-gh.circle-artifacts.com/0/tmp/circle-artifacts.k7RETdG/Boulevard_Peripherique_2.yamlmetric.png
Long live QA",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,240,2017-05-06T17:43:13Z,2017-05-07T03:29:04Z,2017-12-12T16:15:54Z,MERGED,True,32,30,1,https://github.com/jfitie,Fix Car layout issues with wood and water,1,[],https://github.com/navit-gps/navit/pull/240,https://github.com/jfitie,6,https://github.com/navit-gps/navit/pull/240#issuecomment-299688764,Fixed some issues in Car layout where wood (poly_wood) was not showing up correctly inside towns (poly_town) and water (poly_water) was missing in parks (poly_park). Also fixed some discrepancy issues in the Car-dark layout.,@jandegr Should I move poly_water_tiled back and keep the other changes?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,240,2017-05-06T17:43:13Z,2017-05-07T03:29:04Z,2017-12-12T16:15:54Z,MERGED,True,32,30,1,https://github.com/jfitie,Fix Car layout issues with wood and water,1,[],https://github.com/navit-gps/navit/pull/240,https://github.com/jandegr,7,https://github.com/navit-gps/navit/pull/240#issuecomment-299688984,Fixed some issues in Car layout where wood (poly_wood) was not showing up correctly inside towns (poly_town) and water (poly_water) was missing in parks (poly_park). Also fixed some discrepancy issues in the Car-dark layout.,"Yes I think so, but why not leave the PR open a little longer before merging and fix some other stuff in the layouts as well at the same time ?
In case you would be interested (and willing) to get the layout in a better shape we can add some missing stuff in the maps as well, as a sample see the commits for sand, grass, wetland and so I tested.
https://github.com/jandegr/navit/commits/ext_graph_prep/navit/maptool/osm.c",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,240,2017-05-06T17:43:13Z,2017-05-07T03:29:04Z,2017-12-12T16:15:54Z,MERGED,True,32,30,1,https://github.com/jfitie,Fix Car layout issues with wood and water,1,[],https://github.com/navit-gps/navit/pull/240,https://github.com/jandegr,8,https://github.com/navit-gps/navit/pull/240#issuecomment-299689298,Fixed some issues in Car layout where wood (poly_wood) was not showing up correctly inside towns (poly_town) and water (poly_water) was missing in parks (poly_park). Also fixed some discrepancy issues in the Car-dark layout.,"IIRC there are items converted by maptool that don't have an entry in the layout eiter.
https://github.com/navit-gps/navit/blob/trunk/navit/maptool/osm.c#L663
The missing fountain in the Leeuwarden sample :)
http://overpass-turbo.eu/s/oSd",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,240,2017-05-06T17:43:13Z,2017-05-07T03:29:04Z,2017-12-12T16:15:54Z,MERGED,True,32,30,1,https://github.com/jfitie,Fix Car layout issues with wood and water,1,[],https://github.com/navit-gps/navit/pull/240,https://github.com/jfitie,9,https://github.com/navit-gps/navit/pull/240#issuecomment-299723775,Fixed some issues in Car layout where wood (poly_wood) was not showing up correctly inside towns (poly_town) and water (poly_water) was missing in parks (poly_park). Also fixed some discrepancy issues in the Car-dark layout.,"@jandegr Just did a quick delta between what's converted by maptool and what's shown in the Car layout.
? elevation
? poi_baseball
? poi_basketball
? poi_bicycle_parking
? poi_bicycle_rental
? poi_climbing
? poi_guesthouse
? poi_hairdresser
? poi_hostel
? poi_kindergarten
? poi_motel
? poi_motor_sport
? poi_nightclub
? poi_playground
? poi_prison
? poi_recycling
? poi_school_college
? poi_school_university
? poi_shop_baker
? poi_shop_beverages
? poi_shop_butcher
? poi_shop_drugstore
? poi_shop_florist
? poi_shop_fruit
? poi_shop_kiosk
? poi_shop_optician
? poi_shop_parfum
? poi_shop_photo
? poi_shop_shoes
? poi_soccer
? poi_tennis
? poi_tree
? poi_vending_machine
n barrier_bollard
n barrier_cycle
n barrier_lift_gate
n poi_toll_booth
n power_substation
n power_tower
n traffic_sign_city_limit
n traffic_sign_stop
w border_civil
w border_national_park
w border_political
w bus_guideway
w city_wall
w ditch
w fence
w hedge
w house_number_interpolation_all
w house_number_interpolation_alphabetic
w house_number_interpolation_even
w house_number_interpolation_odd
w poly_airfield
w poly_allotments
w poly_archaeological_site
w poly_artwork
w poly_attraction
w poly_barracks
w poly_basin
w poly_battlefield
w poly_beach
w poly_brownfield
w poly_camp_site
w poly_caravan_site
w poly_college
w poly_commercial
w poly_common
w poly_construction
w poly_danger_area
w poly_fell
w poly_fishing
w poly_garden
w poly_glacier
w poly_golf_course
w poly_greenfield
w poly_heath
w poly_landfill
w poly_marina
w poly_marsh
w poly_mud
w poly_nature_reserve
w poly_naval_base
w poly_picnic_site
w poly_place1
w poly_place2
w poly_place3
w poly_place4
w poly_place5
w poly_place6
w poly_playground
w poly_plaza
w poly_quarry
w poly_railway
w poly_range
w poly_recreation_ground
w poly_reservoir
w poly_retail
w poly_ruins
w poly_scree
w poly_sports_stadium
w poly_sports_track
w poly_theme_park
w poly_village_green
w poly_water_park
w poly_zoo
w powerline
w rail_abandoned
w rail_disused
w rail_light
w rail_mono
w rail_narrow_gauge
w rail_preserved
w rail_subway
w retaining_wall
w street_construction
w wall",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,241,2017-05-07T09:09:33Z,2017-05-08T16:35:29Z,2017-05-08T17:53:04Z,MERGED,True,3,3,1,https://github.com/jfitie,Revert: move poly_water_tiled in Car layout,1,[],https://github.com/navit-gps/navit/pull/241,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/241,Should fix flooding issue as mentioned by @jandegr in #240 (comment).,Should fix flooding issue as mentioned by @jandegr in #240 (comment).,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,241,2017-05-07T09:09:33Z,2017-05-08T16:35:29Z,2017-05-08T17:53:04Z,MERGED,True,3,3,1,https://github.com/jfitie,Revert: move poly_water_tiled in Car layout,1,[],https://github.com/navit-gps/navit/pull/241,https://github.com/jfitie,2,https://github.com/navit-gps/navit/pull/241#issuecomment-299927518,Should fix flooding issue as mentioned by @jandegr in #240 (comment).,@jandegr Can you check Boulevard_Peripherique_2.yamlmetric.png with this build?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,241,2017-05-07T09:09:33Z,2017-05-08T16:35:29Z,2017-05-08T17:53:04Z,MERGED,True,3,3,1,https://github.com/jfitie,Revert: move poly_water_tiled in Car layout,1,[],https://github.com/navit-gps/navit/pull/241,https://github.com/jandegr,3,https://github.com/navit-gps/navit/pull/241#issuecomment-299940223,Should fix flooding issue as mentioned by @jandegr in #240 (comment).,"ziezo
https://222-32961764-gh.circle-artifacts.com/0/tmp/circle-artifacts.uDYzr5H/Boulevard_Peripherique_2.yamlmetric.png",True,{'THUMBS_UP': ['https://github.com/jfitie']}
navit-gps/navit,https://github.com/navit-gps/navit,242,2017-05-08T12:04:09Z,2017-07-13T07:08:02Z,2017-07-13T07:08:02Z,CLOSED,False,71,35,2,https://github.com/jfitie,[POI] Improve tower.xpm icon,4,[],https://github.com/navit-gps/navit/pull/242,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/242,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,242,2017-05-08T12:04:09Z,2017-07-13T07:08:02Z,2017-07-13T07:08:02Z,CLOSED,False,71,35,2,https://github.com/jfitie,[POI] Improve tower.xpm icon,4,[],https://github.com/navit-gps/navit/pull/242,https://github.com/jandegr,2,https://github.com/navit-gps/navit/pull/242#issuecomment-300261994,,"pls read a bit in http://irclogs.navit.ie/%23navit-2017-05-09.log for xpm versus png
If I understood correctly svg is preferred, so when changing / replacing an old xpm, pls drop the xpm in favor of an svg. -- or join IRC to discuss it --",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,243,2017-05-08T12:05:05Z,2017-07-13T14:29:12Z,2017-07-13T14:29:12Z,CLOSED,False,5,10,1,https://github.com/jfitie,[POI] Improve exit.svg icon,1,[],https://github.com/navit-gps/navit/pull/243,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/243,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,243,2017-05-08T12:05:05Z,2017-07-13T14:29:12Z,2017-07-13T14:29:12Z,CLOSED,False,5,10,1,https://github.com/jfitie,[POI] Improve exit.svg icon,1,[],https://github.com/navit-gps/navit/pull/243,https://github.com/sleske,2,https://github.com/navit-gps/navit/pull/243#issuecomment-300434957,,"Hi, similary to #245 , this change unfortunately means the icon will no longer work well on a dark background. Could you fix this?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,244,2017-05-08T12:05:53Z,2017-07-13T14:01:30Z,2017-07-13T14:01:30Z,CLOSED,False,5,10,1,https://github.com/jfitie,[POI] Improve firebrigade.svg icon,1,[],https://github.com/navit-gps/navit/pull/244,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/244,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,245,2017-05-08T12:06:29Z,2017-07-13T17:34:05Z,2017-07-13T17:34:05Z,CLOSED,False,4,11,1,https://github.com/jfitie,[POI] Improve fuel.svg icon,1,[],https://github.com/navit-gps/navit/pull/245,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/245,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,245,2017-05-08T12:06:29Z,2017-07-13T17:34:05Z,2017-07-13T17:34:05Z,CLOSED,False,4,11,1,https://github.com/jfitie,[POI] Improve fuel.svg icon,1,[],https://github.com/navit-gps/navit/pull/245,https://github.com/sleske,2,https://github.com/navit-gps/navit/pull/245#issuecomment-300434841,,"Thanks for improving the icons! As it happens, I'm working on the icons at the moment, too (will push soon).
While your change is a good idea, it unfortunately means the icon will no longer work well on a dark background (which the Internal GUI uses by default). Could you fix this? Either by changing the colors, or by adding a light outline.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,246,2017-05-08T12:10:27Z,2017-07-13T14:01:27Z,2017-07-13T14:01:27Z,CLOSED,False,5,10,1,https://github.com/jfitie,[POI] Improve atm.svg icon,1,[],https://github.com/navit-gps/navit/pull/246,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/246,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,247,2017-05-08T18:20:39Z,2017-05-09T05:34:15Z,2017-05-09T11:46:16Z,MERGED,True,20,0,2,https://github.com/jfitie,"Add grass, grassland, wetland and sand",1,[],https://github.com/navit-gps/navit/pull/247,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/247,As suggested by @jandegr in #240 (comment),As suggested by @jandegr in #240 (comment),True,{}
navit-gps/navit,https://github.com/navit-gps/navit,247,2017-05-08T18:20:39Z,2017-05-09T05:34:15Z,2017-05-09T11:46:16Z,MERGED,True,20,0,2,https://github.com/jfitie,"Add grass, grassland, wetland and sand",1,[],https://github.com/navit-gps/navit/pull/247,https://github.com/jfitie,2,https://github.com/navit-gps/navit/pull/247#issuecomment-300125376,As suggested by @jandegr in #240 (comment),@jandegr Are these changes pushed to maps.navit-project.org automatically?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,247,2017-05-08T18:20:39Z,2017-05-09T05:34:15Z,2017-05-09T11:46:16Z,MERGED,True,20,0,2,https://github.com/jfitie,"Add grass, grassland, wetland and sand",1,[],https://github.com/navit-gps/navit/pull/247,https://github.com/jandegr,3,https://github.com/navit-gps/navit/pull/247#issuecomment-300139193,As suggested by @jandegr in #240 (comment),"yes, but it takes a while untill a new map with the changes is available",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,248,2017-05-08T18:38:17Z,2017-05-08T19:58:20Z,2017-05-10T09:52:05Z,MERGED,True,2,2,1,https://github.com/jfitie,Add poly_basin,2,[],https://github.com/navit-gps/navit/pull/248,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/248,#240 (comment),#240 (comment),True,{}
navit-gps/navit,https://github.com/navit-gps/navit,248,2017-05-08T18:38:17Z,2017-05-08T19:58:20Z,2017-05-10T09:52:05Z,MERGED,True,2,2,1,https://github.com/jfitie,Add poly_basin,2,[],https://github.com/navit-gps/navit/pull/248,https://github.com/jandegr,2,https://github.com/navit-gps/navit/pull/248#issuecomment-299963016,#240 (comment),"Hi,
If you can confirm it displays properly I will merge it, can't run QA on an external fork as is.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,248,2017-05-08T18:38:17Z,2017-05-08T19:58:20Z,2017-05-10T09:52:05Z,MERGED,True,2,2,1,https://github.com/jfitie,Add poly_basin,2,[],https://github.com/navit-gps/navit/pull/248,https://github.com/jfitie,3,https://github.com/navit-gps/navit/pull/248#issuecomment-299966841,#240 (comment),Before and after:,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,248,2017-05-08T18:38:17Z,2017-05-08T19:58:20Z,2017-05-10T09:52:05Z,MERGED,True,2,2,1,https://github.com/jfitie,Add poly_basin,2,[],https://github.com/navit-gps/navit/pull/248,https://github.com/jandegr,4,https://github.com/navit-gps/navit/pull/248#issuecomment-299967792,#240 (comment),"nice, thx, but branch has merge conflicts .......
@Kazer ?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,248,2017-05-08T18:38:17Z,2017-05-08T19:58:20Z,2017-05-10T09:52:05Z,MERGED,True,2,2,1,https://github.com/jfitie,Add poly_basin,2,[],https://github.com/navit-gps/navit/pull/248,https://github.com/jfitie,5,https://github.com/navit-gps/navit/pull/248#issuecomment-299970051,#240 (comment),Hope this solved the conflict ...,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,248,2017-05-08T18:38:17Z,2017-05-08T19:58:20Z,2017-05-10T09:52:05Z,MERGED,True,2,2,1,https://github.com/jfitie,Add poly_basin,2,[],https://github.com/navit-gps/navit/pull/248,https://github.com/sleske,6,https://github.com/navit-gps/navit/pull/248#issuecomment-300433550,#240 (comment),Could you simply rebase your commit? Would make for a nicer commit history :-).,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,249,2017-05-09T10:39:57Z,2017-07-13T14:29:14Z,2017-07-13T14:29:14Z,CLOSED,False,4,9,1,https://github.com/jfitie,[POI] Improve hotel.svg icon,1,[],https://github.com/navit-gps/navit/pull/249,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/249,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,250,2017-05-09T10:40:45Z,2017-07-13T14:01:32Z,2017-07-13T14:01:32Z,CLOSED,False,4,9,1,https://github.com/jfitie,[POI] Improve restaurant.svg icon,1,[],https://github.com/navit-gps/navit/pull/250,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/250,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,251,2017-05-09T11:23:28Z,2017-05-09T11:48:26Z,2017-05-09T13:42:35Z,MERGED,True,2,2,1,https://github.com/jfitie,Add feature poly_reservoir,1,[],https://github.com/navit-gps/navit/pull/251,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/251,https://www.openstreetmap.org/#map=19/52.95293/6.30800,https://www.openstreetmap.org/#map=19/52.95293/6.30800,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,251,2017-05-09T11:23:28Z,2017-05-09T11:48:26Z,2017-05-09T13:42:35Z,MERGED,True,2,2,1,https://github.com/jfitie,Add feature poly_reservoir,1,[],https://github.com/navit-gps/navit/pull/251,https://github.com/jfitie,2,https://github.com/navit-gps/navit/pull/251#issuecomment-300168128,https://www.openstreetmap.org/#map=19/52.95293/6.30800,@jandegr Excellent!,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,252,2017-05-10T08:55:38Z,2017-05-11T23:23:32Z,2017-05-11T23:25:18Z,CLOSED,False,86,0,1,https://github.com/jfitie,Add many (43) polys to Car and Car-dark layouts,5,[],https://github.com/navit-gps/navit/pull/252,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/252,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,252,2017-05-10T08:55:38Z,2017-05-11T23:23:32Z,2017-05-11T23:25:18Z,CLOSED,False,86,0,1,https://github.com/jfitie,Add many (43) polys to Car and Car-dark layouts,5,[],https://github.com/navit-gps/navit/pull/252,https://github.com/jfitie,2,https://github.com/navit-gps/navit/pull/252#issuecomment-300457209,,"Before:

After:",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,252,2017-05-10T08:55:38Z,2017-05-11T23:23:32Z,2017-05-11T23:25:18Z,CLOSED,False,86,0,1,https://github.com/jfitie,Add many (43) polys to Car and Car-dark layouts,5,[],https://github.com/navit-gps/navit/pull/252,https://github.com/jfitie,3,https://github.com/navit-gps/navit/pull/252#issuecomment-300457287,,"Before:

After:",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,252,2017-05-10T08:55:38Z,2017-05-11T23:23:32Z,2017-05-11T23:25:18Z,CLOSED,False,86,0,1,https://github.com/jfitie,Add many (43) polys to Car and Car-dark layouts,5,[],https://github.com/navit-gps/navit/pull/252,https://github.com/jfitie,4,https://github.com/navit-gps/navit/pull/252#issuecomment-300469088,,High in the sky 😄,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,252,2017-05-10T08:55:38Z,2017-05-11T23:23:32Z,2017-05-11T23:25:18Z,CLOSED,False,86,0,1,https://github.com/jfitie,Add many (43) polys to Car and Car-dark layouts,5,[],https://github.com/navit-gps/navit/pull/252,https://github.com/sleske,5,https://github.com/navit-gps/navit/pull/252#issuecomment-300469343,,"Looks nice, thanks! Could you rebase your pull request, to remove the spurious merge and revert from the history? Or should I do it when merging it?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,252,2017-05-10T08:55:38Z,2017-05-11T23:23:32Z,2017-05-11T23:25:18Z,CLOSED,False,86,0,1,https://github.com/jfitie,Add many (43) polys to Car and Car-dark layouts,5,[],https://github.com/navit-gps/navit/pull/252,https://github.com/jfitie,6,https://github.com/navit-gps/navit/pull/252#issuecomment-300475302,,"@sleske Please do, as I have no idea what you're talking about 😆
Just changed the order for the new features to 10- for better performance at low zoom levels.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,252,2017-05-10T08:55:38Z,2017-05-11T23:23:32Z,2017-05-11T23:25:18Z,CLOSED,False,86,0,1,https://github.com/jfitie,Add many (43) polys to Car and Car-dark layouts,5,[],https://github.com/navit-gps/navit/pull/252,https://github.com/sleske,7,https://github.com/navit-gps/navit/pull/252#issuecomment-300598530,,"Ok, I'll try to get to it in the next days.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,252,2017-05-10T08:55:38Z,2017-05-11T23:23:32Z,2017-05-11T23:25:18Z,CLOSED,False,86,0,1,https://github.com/jfitie,Add many (43) polys to Car and Car-dark layouts,5,[],https://github.com/navit-gps/navit/pull/252,https://github.com/sleske,8,https://github.com/navit-gps/navit/pull/252#issuecomment-300942858,,"Ok, I'll try to get to it in the next days.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,252,2017-05-10T08:55:38Z,2017-05-11T23:23:32Z,2017-05-11T23:25:18Z,CLOSED,False,86,0,1,https://github.com/jfitie,Add many (43) polys to Car and Car-dark layouts,5,[],https://github.com/navit-gps/navit/pull/252,https://github.com/sleske,9,https://github.com/navit-gps/navit/pull/252#issuecomment-300943140,,Merged (after cleanup) as commit  e91a4ca . Thanks!,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,253,2017-05-11T12:18:08Z,2017-05-13T17:28:41Z,2017-05-13T17:28:53Z,MERGED,True,159,42,4,https://github.com/metalstrolch,Fix: Qt5 fonts,5,[],https://github.com/navit-gps/navit/pull/253,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/253,Fix native Qt5 font support to get rid of mandatory freetype dependency.,Fix native Qt5 font support to get rid of mandatory freetype dependency.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,253,2017-05-11T12:18:08Z,2017-05-13T17:28:41Z,2017-05-13T17:28:53Z,MERGED,True,159,42,4,https://github.com/metalstrolch,Fix: Qt5 fonts,5,[],https://github.com/navit-gps/navit/pull/253,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/253#issuecomment-300772215,Fix native Qt5 font support to get rid of mandatory freetype dependency.,"Does anybody know:
Which unit is the font size passed to font_new?
How exactly expects navit the bbox outline to be?
What part of the font (baseline / bbox) does the coordinate in draw_text point to?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,253,2017-05-11T12:18:08Z,2017-05-13T17:28:41Z,2017-05-13T17:28:53Z,MERGED,True,159,42,4,https://github.com/metalstrolch,Fix: Qt5 fonts,5,[],https://github.com/navit-gps/navit/pull/253,https://github.com/pgrandin,3,https://github.com/navit-gps/navit/pull/253#issuecomment-301262399,Fix native Qt5 font support to get rid of mandatory freetype dependency.,"Looks good to me. Thanks @metalstrolch
I don't know the answers to your questions unfortunately. If you find out, please add some documentation to the code!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,254,2017-05-13T17:19:38Z,2017-05-15T16:55:21Z,2017-05-15T16:55:27Z,MERGED,True,1539,13,39,https://github.com/pgrandin,QT5/qml2 UI proof of concept,6,[],https://github.com/navit-gps/navit/pull/254,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/254,"Based on @metalstrolch 's excellent work on qt5, I built a quick qml2 UI proof of concept.
This is still far from being a usable UI, but it should help us get started.
I'll put some notes in the wiki about this.
Comments and contributions are welcome!","Based on @metalstrolch 's excellent work on qt5, I built a quick qml2 UI proof of concept.
This is still far from being a usable UI, but it should help us get started.
I'll put some notes in the wiki about this.
Comments and contributions are welcome!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,254,2017-05-13T17:19:38Z,2017-05-15T16:55:21Z,2017-05-15T16:55:27Z,MERGED,True,1539,13,39,https://github.com/pgrandin,QT5/qml2 UI proof of concept,6,[],https://github.com/navit-gps/navit/pull/254,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/254#issuecomment-301308450,"Based on @metalstrolch 's excellent work on qt5, I built a quick qml2 UI proof of concept.
This is still far from being a usable UI, but it should help us get started.
I'll put some notes in the wiki about this.
Comments and contributions are welcome!",Btw. What kind of editor did you use for this? It applied a completely different coding style which made reviewing quite hard.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,254,2017-05-13T17:19:38Z,2017-05-15T16:55:21Z,2017-05-15T16:55:27Z,MERGED,True,1539,13,39,https://github.com/pgrandin,QT5/qml2 UI proof of concept,6,[],https://github.com/navit-gps/navit/pull/254,https://github.com/pgrandin,3,https://github.com/navit-gps/navit/pull/254#issuecomment-301325191,"Based on @metalstrolch 's excellent work on qt5, I built a quick qml2 UI proof of concept.
This is still far from being a usable UI, but it should help us get started.
I'll put some notes in the wiki about this.
Comments and contributions are welcome!","Thanks for your review @metalstrolch
This won't work well in portrait for now indeed. I think that we probably need to design something close but specific for that, otherwise we probably won't use all the display correctly, or some things might look odd.
I've removed the dependency on QtQuicks.Control in e46950f . It was from a specific test, and I think it'd be better to keep this as cross-platform as possible (especially for the first skin we'll build).
I'm using vim mostly (and qtcreator to design some of the qmls). I believe that my config should match our current coding style standard which states 8 spaces for tabs. Your clang header does not :)
I personally prefer 4 spaces instead of 8 too, but that's out of the topic of this PR, we can discuss that elsewhere.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,254,2017-05-13T17:19:38Z,2017-05-15T16:55:21Z,2017-05-15T16:55:27Z,MERGED,True,1539,13,39,https://github.com/pgrandin,QT5/qml2 UI proof of concept,6,[],https://github.com/navit-gps/navit/pull/254,https://github.com/metalstrolch,4,https://github.com/navit-gps/navit/pull/254#issuecomment-301506444,"Based on @metalstrolch 's excellent work on qt5, I built a quick qml2 UI proof of concept.
This is still far from being a usable UI, but it should help us get started.
I'll put some notes in the wiki about this.
Comments and contributions are welcome!","Finally with the latest change i was able to test on Sailfish, and with my latest changes in #255 I could even see the new QML GUI rotate. It looks not as bad as I had imagined.
One thing makes me think, Why is the map view garbled on start up. It gets OK once you drag the map. I think there is a problem in resize event propagation (You can see this on your initial GIF as well). Maybe a bug in my QML backend?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,254,2017-05-13T17:19:38Z,2017-05-15T16:55:21Z,2017-05-15T16:55:27Z,MERGED,True,1539,13,39,https://github.com/pgrandin,QT5/qml2 UI proof of concept,6,[],https://github.com/navit-gps/navit/pull/254,https://github.com/pgrandin,5,https://github.com/navit-gps/navit/pull/254#issuecomment-301535587,"Based on @metalstrolch 's excellent work on qt5, I built a quick qml2 UI proof of concept.
This is still far from being a usable UI, but it should help us get started.
I'll put some notes in the wiki about this.
Comments and contributions are welcome!","Oh it isn't as bad as expected in portrait, indeed.
I think that we should try toggling the number of rows in portrait from 2 to 1, it should use the space better.
Regarding the map, I believe that I have seen a similar behavior using another gui. This is probably a refresh or draw event that's missing.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,254,2017-05-13T17:19:38Z,2017-05-15T16:55:21Z,2017-05-15T16:55:27Z,MERGED,True,1539,13,39,https://github.com/pgrandin,QT5/qml2 UI proof of concept,6,[],https://github.com/navit-gps/navit/pull/254,https://github.com/pgrandin,6,https://github.com/navit-gps/navit/pull/254#issuecomment-301535853,"Based on @metalstrolch 's excellent work on qt5, I built a quick qml2 UI proof of concept.
This is still far from being a usable UI, but it should help us get started.
I'll put some notes in the wiki about this.
Comments and contributions are welcome!","Merging the changes, but keeping the branch for for further work.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,255,2017-05-15T14:29:11Z,2017-05-15T16:50:17Z,2017-05-16T10:10:55Z,MERGED,True,28,9,1,https://github.com/metalstrolch,graphics_qt5 QML: Add screen rotation support,1,[],https://github.com/navit-gps/navit/pull/255,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/255,"Now the QML qt5 graphics happily rotates according to screen
orientation. At least on Sailfish. Should do on other QML hardware as
well.","Now the QML qt5 graphics happily rotates according to screen
orientation. At least on Sailfish. Should do on other QML hardware as
well.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,255,2017-05-15T14:29:11Z,2017-05-15T16:50:17Z,2017-05-16T10:10:55Z,MERGED,True,28,9,1,https://github.com/metalstrolch,graphics_qt5 QML: Add screen rotation support,1,[],https://github.com/navit-gps/navit/pull/255,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/255#issuecomment-301507917,"Now the QML qt5 graphics happily rotates according to screen
orientation. At least on Sailfish. Should do on other QML hardware as
well.",Works nice with the qt5_qml_gui proof of concept.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,255,2017-05-15T14:29:11Z,2017-05-15T16:50:17Z,2017-05-16T10:10:55Z,MERGED,True,28,9,1,https://github.com/metalstrolch,graphics_qt5 QML: Add screen rotation support,1,[],https://github.com/navit-gps/navit/pull/255,https://github.com/pgrandin,3,https://github.com/navit-gps/navit/pull/255#issuecomment-301534416,"Now the QML qt5 graphics happily rotates according to screen
orientation. At least on Sailfish. Should do on other QML hardware as
well.",👍,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,255,2017-05-15T14:29:11Z,2017-05-15T16:50:17Z,2017-05-16T10:10:55Z,MERGED,True,28,9,1,https://github.com/metalstrolch,graphics_qt5 QML: Add screen rotation support,1,[],https://github.com/navit-gps/navit/pull/255,https://github.com/pgrandin,4,https://github.com/navit-gps/navit/pull/255#issuecomment-301664327,"Now the QML qt5 graphics happily rotates according to screen
orientation. At least on Sailfish. Should do on other QML hardware as
well.","Actually... It breaks things on my current setup :
QQmlApplicationEngine failed to load component
qrc:///loader.qml:8 Cannot assign to non-existent property ""orientationUpdateMask""",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,255,2017-05-15T14:29:11Z,2017-05-15T16:50:17Z,2017-05-16T10:10:55Z,MERGED,True,28,9,1,https://github.com/metalstrolch,graphics_qt5 QML: Add screen rotation support,1,[],https://github.com/navit-gps/navit/pull/255,https://github.com/metalstrolch,5,https://github.com/navit-gps/navit/pull/255#issuecomment-301737244,"Now the QML qt5 graphics happily rotates according to screen
orientation. At least on Sailfish. Should do on other QML hardware as
well.",Please try changes at #256 . Seems youre using a older QT version than me.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,256,2017-05-16T10:09:33Z,2017-06-05T03:26:49Z,2017-06-05T03:26:52Z,MERGED,True,7,2,1,https://github.com/metalstrolch,Fix: Make rotating compatible to Qt 5.2,1,[],https://github.com/navit-gps/navit/pull/256,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/256,"Welcome to Qt5 compatibility hell. Seems like the
Screen.orientationUpdateMask property is only valid from Qt5.4 and
beyond. To make this compatible down to Qt5.2, i introduce a QML
JavaScript workaround/hack.","Welcome to Qt5 compatibility hell. Seems like the
Screen.orientationUpdateMask property is only valid from Qt5.4 and
beyond. To make this compatible down to Qt5.2, i introduce a QML
JavaScript workaround/hack.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,257,2017-05-22T07:04:42Z,2017-05-22T16:16:50Z,2017-05-22T16:16:50Z,MERGED,True,2,2,1,https://github.com/jfitie,Fix wetland color,2,[],https://github.com/navit-gps/navit/pull/257,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/257,"Example 1
Before:

After:

Example 2
Before:

After:

Example 3
Before:

After:","Example 1
Before:

After:

Example 2
Before:

After:

Example 3
Before:

After:",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,258,2017-05-24T19:38:04Z,2017-05-25T05:30:20Z,2017-05-25T08:03:27Z,MERGED,True,22,1,2,https://github.com/jfitie,Add some more common landuse polygons,1,[],https://github.com/navit-gps/navit/pull/258,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/258,from https://wiki.openstreetmap.org/wiki/Map_Features#Landuse,from https://wiki.openstreetmap.org/wiki/Map_Features#Landuse,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,258,2017-05-24T19:38:04Z,2017-05-25T05:30:20Z,2017-05-25T08:03:27Z,MERGED,True,22,1,2,https://github.com/jfitie,Add some more common landuse polygons,1,[],https://github.com/navit-gps/navit/pull/258,https://github.com/jandegr,2,https://github.com/navit-gps/navit/pull/258#issuecomment-303927895,from https://wiki.openstreetmap.org/wiki/Map_Features#Landuse,"hmm, I thik I was a bit too fast to merge.
Probably this needs a few additions as well https://github.com/navit-gps/navit/blob/trunk/navit/item_def.h
CircleCi does not seem to catch that.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,258,2017-05-24T19:38:04Z,2017-05-25T05:30:20Z,2017-05-25T08:03:27Z,MERGED,True,22,1,2,https://github.com/jfitie,Add some more common landuse polygons,1,[],https://github.com/navit-gps/navit/pull/258,https://github.com/jfitie,3,https://github.com/navit-gps/navit/pull/258#issuecomment-303949494,from https://wiki.openstreetmap.org/wiki/Map_Features#Landuse,@jandegr please check #260,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,259,2017-05-25T05:42:09Z,2017-05-25T06:09:30Z,2018-02-11T17:54:03Z,MERGED,True,1,22,2,https://github.com/jandegr,"Revert ""Add some more common landuse polygons""",1,[],https://github.com/navit-gps/navit/pull/259,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/259,Reverts #258,Reverts #258,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,260,2017-05-25T08:02:03Z,2017-05-25T16:22:25Z,2017-05-25T16:22:25Z,CLOSED,False,7,0,1,https://github.com/jfitie,Header for more common landuse polygons #258,1,[],https://github.com/navit-gps/navit/pull/260,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/260,for #258,for #258,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,260,2017-05-25T08:02:03Z,2017-05-25T16:22:25Z,2017-05-25T16:22:25Z,CLOSED,False,7,0,1,https://github.com/jfitie,Header for more common landuse polygons #258,1,[],https://github.com/navit-gps/navit/pull/260,https://github.com/jandegr,2,https://github.com/navit-gps/navit/pull/260#issuecomment-303963461,for #258,"Hi,
They must be appended at the end, not inserted where it seems logical to place them, unfortunatly.
Otherwise older maps don't work anymore.
I reverted #258 after I merged it, so a new PR will have to be complete including #258 I suppose.
For changes like this it is always usefull to build a testmap.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,261,2017-05-25T16:22:13Z,2017-05-25T17:34:05Z,2017-05-25T17:34:05Z,CLOSED,False,407,85,3,https://github.com/jfitie,Add some more common landuse polygons,2,[],https://github.com/navit-gps/navit/pull/261,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/261,from https://wiki.openstreetmap.org/wiki/Map_Features#Landuse,from https://wiki.openstreetmap.org/wiki/Map_Features#Landuse,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,262,2017-05-25T17:37:14Z,2017-06-20T17:16:52Z,2017-06-20T17:22:27Z,MERGED,True,407,85,3,https://github.com/jfitie,Add some more common landuse polygons,1,['enhancement'],https://github.com/navit-gps/navit/pull/262,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/262,from https://wiki.openstreetmap.org/wiki/Map_Features#Landuse,from https://wiki.openstreetmap.org/wiki/Map_Features#Landuse,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,262,2017-05-25T17:37:14Z,2017-06-20T17:16:52Z,2017-06-20T17:22:27Z,MERGED,True,407,85,3,https://github.com/jfitie,Add some more common landuse polygons,1,['enhancement'],https://github.com/navit-gps/navit/pull/262,https://github.com/jandegr,2,https://github.com/navit-gps/navit/pull/262#issuecomment-304331431,from https://wiki.openstreetmap.org/wiki/Map_Features#Landuse,"Hi
A map is underway, but there is some seldom stuff in these changes :)
https://taginfo.openstreetmap.org/tags/landuse=depot
https://taginfo.openstreetmap.org/tags/landuse=port
these have more occurences
https://taginfo.openstreetmap.org/tags/landuse=garages
https://taginfo.openstreetmap.org/tags/landuse=orchard
https://taginfo.openstreetmap.org/tags/landuse=greenhouse_horticulture
https://taginfo.openstreetmap.org/tags/landuse=plant_nursery
https://taginfo.openstreetmap.org/tags/landuse=salt_pond
The map built with your changes has arrived :)
https://231-32961764-gh.circle-artifacts.com/0/tmp/circle-artifacts.gotp7Fk/europe-netherlands.bin
And a little more QA abuse, I suppose right above the P-icon is a landuse=plant_nursery sample.
https://232-32961764-gh.circle-artifacts.com/0/tmp/circle-artifacts.edQ89wx/plant_nursery.yamlmetric.png
http://www.openstreetmap.org/way/105271383#map=18/52.48199/4.82495
The Nieuwlandse Polderweg goes straight into a greenhouse_horticulture area
https://233-32961764-gh.circle-artifacts.com/0/tmp/circle-artifacts.UHLYJ6Z/greenhouse_horticulture.yamlmetric.png
http://www.openstreetmap.org/#map=15/51.9885/4.1428",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,262,2017-05-25T17:37:14Z,2017-06-20T17:16:52Z,2017-06-20T17:22:27Z,MERGED,True,407,85,3,https://github.com/jfitie,Add some more common landuse polygons,1,['enhancement'],https://github.com/navit-gps/navit/pull/262,https://github.com/jfitie,3,https://github.com/navit-gps/navit/pull/262#issuecomment-304467200,from https://wiki.openstreetmap.org/wiki/Map_Features#Landuse,"Excellent work, Jan!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,262,2017-05-25T17:37:14Z,2017-06-20T17:16:52Z,2017-06-20T17:22:27Z,MERGED,True,407,85,3,https://github.com/jfitie,Add some more common landuse polygons,1,['enhancement'],https://github.com/navit-gps/navit/pull/262,https://github.com/jfitie,4,https://github.com/navit-gps/navit/pull/262#issuecomment-306487939,from https://wiki.openstreetmap.org/wiki/Map_Features#Landuse,Here's a depot: https://www.openstreetmap.org/way/496730769,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,263,2017-05-26T07:37:58Z,2017-06-05T02:56:31Z,2017-06-05T02:56:31Z,MERGED,True,2091,199,47,https://github.com/pgrandin,Qt5 qml gui - POC update,19,[],https://github.com/navit-gps/navit/pull/263,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/263,"Some updates on the QML2 UI.
Not yet fully functional.","Some updates on the QML2 UI.
Not yet fully functional.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,263,2017-05-26T07:37:58Z,2017-06-05T02:56:31Z,2017-06-05T02:56:31Z,MERGED,True,2091,199,47,https://github.com/pgrandin,Qt5 qml gui - POC update,19,[],https://github.com/navit-gps/navit/pull/263,https://github.com/jandegr,2,https://github.com/navit-gps/navit/pull/263#issuecomment-304436894,"Some updates on the QML2 UI.
Not yet fully functional.","Hi,
I think it is good practice for GUI's to call navit_block when they cover up the mapview, no need to burn fuel uselessly and all the rest of navit still goes on, that just defers updates of the mapview.
The Lidl poi preview looks very good and the blocking can be lifted just for the time to obtain the poi view.
For the rest verice nice work all of this QML gui.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,263,2017-05-26T07:37:58Z,2017-06-05T02:56:31Z,2017-06-05T02:56:31Z,MERGED,True,2091,199,47,https://github.com/pgrandin,Qt5 qml gui - POC update,19,[],https://github.com/navit-gps/navit/pull/263,https://github.com/pgrandin,3,https://github.com/navit-gps/navit/pull/263#issuecomment-305832084,"Some updates on the QML2 UI.
Not yet fully functional.","Thanks for the review @jandegr
7c2c2b9 should address blocking draw operations.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,264,2017-05-30T13:25:29Z,2017-05-31T17:34:28Z,2017-07-17T17:33:21Z,MERGED,True,615,0,2,https://github.com/jfitie,Add Zoom to route button to Route section in menu,5,['enhancement'],https://github.com/navit-gps/navit/pull/264,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/264,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,264,2017-05-30T13:25:29Z,2017-05-31T17:34:28Z,2017-07-17T17:33:21Z,MERGED,True,615,0,2,https://github.com/jfitie,Add Zoom to route button to Route section in menu,5,['enhancement'],https://github.com/navit-gps/navit/pull/264,https://github.com/jfitie,2,https://github.com/navit-gps/navit/pull/264#issuecomment-305258517,,"Without this PR:

With this PR, no route set:

With this PR, route set:

Note: icon not as in PR.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,265,2017-06-05T19:41:20Z,2017-06-06T11:30:32Z,2017-06-06T11:41:08Z,MERGED,True,38,18,4,https://github.com/metalstrolch,Correctly implement draw_drag on graphics_qt5,1,[],https://github.com/navit-gps/navit/pull/265,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/265,This pull request enables the draw_drag api for grapics_qt5. This allows to set drag_bitmap=1 in navit.xml,This pull request enables the draw_drag api for grapics_qt5. This allows to set drag_bitmap=1 in navit.xml,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,265,2017-06-05T19:41:20Z,2017-06-06T11:30:32Z,2017-06-06T11:41:08Z,MERGED,True,38,18,4,https://github.com/metalstrolch,Correctly implement draw_drag on graphics_qt5,1,[],https://github.com/navit-gps/navit/pull/265,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/265#issuecomment-306458666,This pull request enables the draw_drag api for grapics_qt5. This allows to set drag_bitmap=1 in navit.xml,Need this to continue for sailfish. As this shouldn't hurt anybody i just merge it.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,266,2017-06-07T22:46:33Z,2017-06-13T07:57:20Z,2017-06-21T19:23:51Z,MERGED,True,35,12,2,https://github.com/metalstrolch,fix: graphics_qt5 fix layer drawing and dragging,1,[],https://github.com/navit-gps/navit/pull/266,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/266,Now cursor is drawn right with qml and qwidgets,Now cursor is drawn right with qml and qwidgets,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,266,2017-06-07T22:46:33Z,2017-06-13T07:57:20Z,2017-06-21T19:23:51Z,MERGED,True,35,12,2,https://github.com/metalstrolch,fix: graphics_qt5 fix layer drawing and dragging,1,[],https://github.com/navit-gps/navit/pull/266,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/266#issuecomment-308037770,Now cursor is drawn right with qml and qwidgets,"Seems to be summer time. No comments on this, so I merge it since it is required for a new sailfish release and just touches qt5 graphics.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,267,2017-06-07T22:46:56Z,2017-06-20T17:21:48Z,2017-06-20T17:21:52Z,MERGED,True,1,1,1,https://github.com/metalstrolch,fix: android cursor size,1,[],https://github.com/navit-gps/navit/pull/267,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/267,"Fix the base size of the android curser so the cursor drawing does not
draw out of the given space. Some graphics backends (like qt5) that have
real overlays don't like drawing out of the given overlay area.","Fix the base size of the android curser so the cursor drawing does not
draw out of the given space. Some graphics backends (like qt5) that have
real overlays don't like drawing out of the given overlay area.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,268,2017-06-19T19:25:20Z,2017-08-24T17:03:15Z,2017-08-24T17:03:15Z,CLOSED,False,972,208,607,https://github.com/jkoan,Rework on Cmake/Cpack System,19,[],https://github.com/navit-gps/navit/pull/268,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/268,"As discussed in IRC here are my work from the last days.
Of course it needs future work, but it is working and generating deb and rpm Packages. Also NSIS Packages will follow
Sorry for the commit spam :D","As discussed in IRC here are my work from the last days.
Of course it needs future work, but it is working and generating deb and rpm Packages. Also NSIS Packages will follow
Sorry for the commit spam :D",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,268,2017-06-19T19:25:20Z,2017-08-24T17:03:15Z,2017-08-24T17:03:15Z,CLOSED,False,972,208,607,https://github.com/jkoan,Rework on Cmake/Cpack System,19,[],https://github.com/navit-gps/navit/pull/268,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/268#issuecomment-309719879,"As discussed in IRC here are my work from the last days.
Of course it needs future work, but it is working and generating deb and rpm Packages. Also NSIS Packages will follow
Sorry for the commit spam :D",Builds on sailfish. Nice.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,268,2017-06-19T19:25:20Z,2017-08-24T17:03:15Z,2017-08-24T17:03:15Z,CLOSED,False,972,208,607,https://github.com/jkoan,Rework on Cmake/Cpack System,19,[],https://github.com/navit-gps/navit/pull/268,https://github.com/sleske,3,https://github.com/navit-gps/navit/pull/268#issuecomment-311599685,"As discussed in IRC here are my work from the last days.
Of course it needs future work, but it is working and generating deb and rpm Packages. Also NSIS Packages will follow
Sorry for the commit spam :D","Hi, this looks interesting. However, the work seems to be in a very early state - I could not get the DEB creation to work, this PR deletes the Navit README, there is incomplete code for NSIS,  the DEB settings use ""predepends"" instead of ""depends"", etc.
Also, I'm not quite sure whether it's a good idea to set up our own infrastructure for creating Deb and RPM packages. Navit is already packaged by Debian, so building DEB generation into the Navit sources will duplicate that work (and possibly produce Debs that are incompatible with Debian).
I think we should clarify our goals before going further. Then we can see what can be included in Navit.
At any rate, this needs a cleanup (rebase) before it can be merged. I'll be glad to help with that, once it's clear where we want to go.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,268,2017-06-19T19:25:20Z,2017-08-24T17:03:15Z,2017-08-24T17:03:15Z,CLOSED,False,972,208,607,https://github.com/jkoan,Rework on Cmake/Cpack System,19,[],https://github.com/navit-gps/navit/pull/268,https://github.com/mvglasow,4,https://github.com/navit-gps/navit/pull/268#issuecomment-311675183,"As discussed in IRC here are my work from the last days.
Of course it needs future work, but it is working and generating deb and rpm Packages. Also NSIS Packages will follow
Sorry for the commit spam :D","If I may give my 2 cents on that… I’ve come across a bunch of projects which require a lot of fiddling to install as they’re not in the Debian repos, or the Debian repos have a hopelessly outdated version, often because Debian maintains debs without official support from the project. As a result, I end up littering my system configuration with PPAs from different projects, or even more invasive under-the-hood fiddling (sudo make install and the like), which I try to avoid where I can.
In a perfect world (from a user point of view), the OS distribution of my choice would always have the latest stable version of every package, limited only by the update policy of the distro (which might choose not to do major version upgrades on an already released version). What is preventing this from happening is usually lack of cooperation between projects and distros.
Therefore, if we managed to package Navit in a way that the major distros would just need to take the package, either in binary form or building it with the official Navit recipe, and ship it with their release, that would be a plus. My experience (with F-Droid) is that repo maintainers are usually happy about projects approaching them.
Since Debian is already packaging Navit, it’s worth looking at what they’re doing and reusing as much of their work as possible. If the Debian maintainer is not already a Navit contributor, maybe he/she’d be happy to become one.
We’d want to keep the number of distros low to avoid things getting out of hand. Sticking with a deb (built for and tested with Debian) and a rpm (built for and tested with RedHat/CentOS) should give us the broadest coverage.
As for ensuring compatibility—we already have a CI environment, how much work would it be to add basic packaging tests? (At a minimum, building the package, making sure it installs and that Navit starts without crashing afterwards; further tests with the installed product are optional.)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,268,2017-06-19T19:25:20Z,2017-08-24T17:03:15Z,2017-08-24T17:03:15Z,CLOSED,False,972,208,607,https://github.com/jkoan,Rework on Cmake/Cpack System,19,[],https://github.com/navit-gps/navit/pull/268,https://github.com/jkoan,5,https://github.com/navit-gps/navit/pull/268#issuecomment-312060882,"As discussed in IRC here are my work from the last days.
Of course it needs future work, but it is working and generating deb and rpm Packages. Also NSIS Packages will follow
Sorry for the commit spam :D","Ifrst of all i want to say thanke you for your reviews of that work. As I said in my initial Post this is verry much WIP so i will try to fix problems and make this PR better. ;)

Hi, this looks interesting. However, the work seems to be in a very early state

Yes this is right, probably I should add [WIP] to the title ;)

I could not get the DEB creation to work

It would be nice if you could provide future details to this? For me its working with:
mkdir build && cd build && cmake  [OPTIONS] .. && make && make package

this PR deletes the Navit README, there is incomplete code for NSIS, the DEB settings use ""predepends"" instead of ""depends"", etc.

README ) Yeah it is right that it deletes A  README, but this is the old one. I mad a diff of README.md and README and README.md is the new file.
NSIS ) I dont see why this is not ""complete"" for NSIS it is the same code than before, also the code is working. But i have only tested with wine.
DEB ) Yes, useing predepends was not intended (will fix soon)


Since Debian is already packaging Navit, it’s worth looking at what they’re doing and reusing as much of their work as possible.

Yes, I agree we should look at https://packages.debian.org/stretch/navit (on the right there are the source packages which have for example also paches)

As for ensuring compatibility—we already have a CI environment, how much work would it be to add basic packaging tests? (At a minimum, building the package, making sure it installs and that Navit starts without crashing afterwards; further tests with the installed product are optional.)

To ensure that the package is building is not difficult, because as said before in this post it is only a ""make package"" at the end. Testing if the package itself is working is a little bit more difficult because the CI only has Ubuntu, so we can test deb of course. Probably a workaround would be unpacking the RPM in a path and run it from there, but this is not very nice.
Jkoan",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,268,2017-06-19T19:25:20Z,2017-08-24T17:03:15Z,2017-08-24T17:03:15Z,CLOSED,False,972,208,607,https://github.com/jkoan,Rework on Cmake/Cpack System,19,[],https://github.com/navit-gps/navit/pull/268,https://github.com/jkoan,6,https://github.com/navit-gps/navit/pull/268#issuecomment-324696166,"As discussed in IRC here are my work from the last days.
Of course it needs future work, but it is working and generating deb and rpm Packages. Also NSIS Packages will follow
Sorry for the commit spam :D",I will clean up and open new PR soon.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,269,2017-06-20T17:39:11Z,2017-06-21T19:34:50Z,2017-06-21T19:34:50Z,MERGED,True,8,2,1,https://github.com/jfitie,Fix:xml:Fix XML formatting,1,[],https://github.com/navit-gps/navit/pull/269,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/269,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,269,2017-06-20T17:39:11Z,2017-06-21T19:34:50Z,2017-06-21T19:34:50Z,MERGED,True,8,2,1,https://github.com/jfitie,Fix:xml:Fix XML formatting,1,[],https://github.com/navit-gps/navit/pull/269,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/269#issuecomment-310182506,,Looks OK,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,270,2017-06-21T17:32:46Z,2017-06-22T06:56:27Z,2017-06-22T06:56:27Z,MERGED,True,1,0,1,https://github.com/jfitie,[Android] Delete MapInfoFile (.tmp.info) after successful download,1,['enhancement'],https://github.com/navit-gps/navit/pull/270,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/270,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,271,2017-06-21T19:42:45Z,2017-06-21T20:08:19Z,2018-04-20T11:33:02Z,MERGED,True,369,6946,9,https://github.com/metalstrolch,Sailfish config,7,[],https://github.com/navit-gps/navit/pull/271,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/271,Create configuration for sailfish os by using xslt files to do changes to navit_shipped.xml,Create configuration for sailfish os by using xslt files to do changes to navit_shipped.xml,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,271,2017-06-21T19:42:45Z,2017-06-21T20:08:19Z,2018-04-20T11:33:02Z,MERGED,True,369,6946,9,https://github.com/metalstrolch,Sailfish config,7,[],https://github.com/navit-gps/navit/pull/271,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/271#issuecomment-310190381,Create configuration for sailfish os by using xslt files to do changes to navit_shipped.xml,Merging this as this only affects Sailfish builds,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,272,2017-06-22T17:18:59Z,2017-06-24T09:45:46Z,2017-06-24T09:45:46Z,MERGED,True,203,202,1,https://github.com/jfitie,Update size estimations in Android map downloader,1,[],https://github.com/navit-gps/navit/pull/272,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/272,,,True,{'THUMBS_UP': ['https://github.com/jkoan']}
navit-gps/navit,https://github.com/navit-gps/navit,273,2017-06-24T10:23:32Z,2017-06-27T06:46:31Z,2017-06-27T06:46:31Z,MERGED,True,11,11,6,https://github.com/jkoan,Use all available Cores for Ci,1,[],https://github.com/navit-gps/navit/pull/273,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/273,"Ci has 32 Cores, not 4 Which is reportet from nproc.
So build should be faster ;)","Ci has 32 Cores, not 4 Which is reportet from nproc.
So build should be faster ;)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,273,2017-06-24T10:23:32Z,2017-06-27T06:46:31Z,2017-06-27T06:46:31Z,MERGED,True,11,11,6,https://github.com/jkoan,Use all available Cores for Ci,1,[],https://github.com/navit-gps/navit/pull/273,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/273#issuecomment-311263974,"Ci has 32 Cores, not 4 Which is reportet from nproc.
So build should be faster ;)",Did you see a difference in build time in your fork?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,273,2017-06-24T10:23:32Z,2017-06-27T06:46:31Z,2017-06-27T06:46:31Z,MERGED,True,11,11,6,https://github.com/jkoan,Use all available Cores for Ci,1,[],https://github.com/navit-gps/navit/pull/273,https://github.com/jkoan,3,https://github.com/navit-gps/navit/pull/273#issuecomment-311264889,"Ci has 32 Cores, not 4 Which is reportet from nproc.
So build should be faster ;)","Yes, see on ci: 13:36min with this pull request and ~15min without. That's not so much, but it is a little bit.
If I remember right the most time is taken to convert all those svgs, probably we could optimize this also ;) But this is not the pull right now.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,273,2017-06-24T10:23:32Z,2017-06-27T06:46:31Z,2017-06-27T06:46:31Z,MERGED,True,11,11,6,https://github.com/jkoan,Use all available Cores for Ci,1,[],https://github.com/navit-gps/navit/pull/273,https://github.com/pgrandin,4,https://github.com/navit-gps/navit/pull/273#issuecomment-311268286,"Ci has 32 Cores, not 4 Which is reportet from nproc.
So build should be faster ;)",Sweet thanks!,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,274,2017-06-24T10:25:23Z,2017-06-25T01:49:46Z,2017-06-25T01:49:46Z,MERGED,True,12,62,3,https://github.com/jkoan,Use datecode insted of Tags as Android id,3,[],https://github.com/navit-gps/navit/pull/274,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/274,As discussed in IRC here are the new version for the the Android ID so we can delete the old R0000 tags.,As discussed in IRC here are the new version for the the Android ID so we can delete the old R0000 tags.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,274,2017-06-24T10:25:23Z,2017-06-25T01:49:46Z,2017-06-25T01:49:46Z,MERGED,True,12,62,3,https://github.com/jkoan,Use datecode insted of Tags as Android id,3,[],https://github.com/navit-gps/navit/pull/274,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/274#issuecomment-310876522,As discussed in IRC here are the new version for the the Android ID so we can delete the old R0000 tags.,Reference ticket : http://trac.navit-project.org/ticket/1351,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,275,2017-07-07T17:24:54Z,2017-07-08T10:47:39Z,2017-07-08T10:47:39Z,CLOSED,False,5,1,1,https://github.com/santeri3700,[WIP] Framerate boost and EXPERIMENTAL map moving,1,[],https://github.com/navit-gps/navit/pull/275,https://github.com/santeri3700,1,https://github.com/navit-gps/navit/pull/275,"DO NOT MERGE WITHOUT FIXING OR REMOVING THE EXPERIMENTAL PART!
I discovered a way to increase frame rate by removing a delay on line 598 of navit.c.
There is also another VERY experimental change which makes
map moving better (or at least some part of it)
The map will be loaded while it's being moved BUT
there is a problem with the movement.
It is basically done incorrectly and needs to be fixed by a real developer.
See lines: 585-588
KaZeR suggested me to send this even if not completely working.
Tested on Ubuntu 17.04 x86_64 with SDL.
EDIT:
Here is a short video: https://youtu.be/9O2qjOHx3SA","DO NOT MERGE WITHOUT FIXING OR REMOVING THE EXPERIMENTAL PART!
I discovered a way to increase frame rate by removing a delay on line 598 of navit.c.
There is also another VERY experimental change which makes
map moving better (or at least some part of it)
The map will be loaded while it's being moved BUT
there is a problem with the movement.
It is basically done incorrectly and needs to be fixed by a real developer.
See lines: 585-588
KaZeR suggested me to send this even if not completely working.
Tested on Ubuntu 17.04 x86_64 with SDL.
EDIT:
Here is a short video: https://youtu.be/9O2qjOHx3SA",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,275,2017-07-07T17:24:54Z,2017-07-08T10:47:39Z,2017-07-08T10:47:39Z,CLOSED,False,5,1,1,https://github.com/santeri3700,[WIP] Framerate boost and EXPERIMENTAL map moving,1,[],https://github.com/navit-gps/navit/pull/275,https://github.com/sleske,2,https://github.com/navit-gps/navit/pull/275#issuecomment-313848633,"DO NOT MERGE WITHOUT FIXING OR REMOVING THE EXPERIMENTAL PART!
I discovered a way to increase frame rate by removing a delay on line 598 of navit.c.
There is also another VERY experimental change which makes
map moving better (or at least some part of it)
The map will be loaded while it's being moved BUT
there is a problem with the movement.
It is basically done incorrectly and needs to be fixed by a real developer.
See lines: 585-588
KaZeR suggested me to send this even if not completely working.
Tested on Ubuntu 17.04 x86_64 with SDL.
EDIT:
Here is a short video: https://youtu.be/9O2qjOHx3SA","Hi, and welcome to Navit!
About the changes:
Your first change (added lines) makes Navit redraw the map on each drag event, instead of only after a timout has elapsed (see lines below, which you also changed). This just needlessly burns CPU, and without bitmap dragging (drag_bitmap=""1"" in navit.xml) will also cause Navit to hang/become unresponsive during dragging, because it cannot keep up with redrawing (test with a big map!).
Your second change (removing the 10/100ms timeout) will also make Navit redraw the map on each drag event (again!), instead of every 10ms (if bitmap dragging is on) or every 100 ms (if it is not). This has the same effect as the first change.
I'll close this pull request - this change is a good experiment, but not something we can include in Navit.
This kind of change is a good way to get started understanding the code base. Try experimenting some more, or have a look at some of our open bugs on http://trac.navit-project.org/. We can always use more developers!
s",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,276,2017-07-08T08:58:24Z,2017-07-10T17:13:51Z,2017-07-10T17:14:01Z,MERGED,True,2,2,2,https://github.com/jkoan,Fix download link for libpng,3,[],https://github.com/navit-gps/navit/pull/276,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/276,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,276,2017-07-08T08:58:24Z,2017-07-10T17:13:51Z,2017-07-10T17:14:01Z,MERGED,True,2,2,2,https://github.com/jkoan,Fix download link for libpng,3,[],https://github.com/navit-gps/navit/pull/276,https://github.com/jandegr,2,https://github.com/navit-gps/navit/pull/276#issuecomment-313847987,,"I don't really care how it is done but in the past it took just a small edit to bump libpng every now and then.
This fix is a freeze in Navit style and how it became to depend on some badly outdated external code, sometimes even by merging into the repo years ago.
Unfortunatly for libpng I did not find a way to get 'latest' somewhere so these bumps could go automatic.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,276,2017-07-08T08:58:24Z,2017-07-10T17:13:51Z,2017-07-10T17:14:01Z,MERGED,True,2,2,2,https://github.com/jkoan,Fix download link for libpng,3,[],https://github.com/navit-gps/navit/pull/276,https://github.com/jkoan,3,https://github.com/navit-gps/navit/pull/276#issuecomment-313849700,,"yes @jandegr  i also see that is not the best solution to have the fixed version in the build script, probably we can later switch to better sources, but for now it seems that this fixes our problem that we are not able to build tomtom things on ci anywhere.
Edit:
Probably
apt-get source libpng-dev

helps us enough?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,276,2017-07-08T08:58:24Z,2017-07-10T17:13:51Z,2017-07-10T17:14:01Z,MERGED,True,2,2,2,https://github.com/jkoan,Fix download link for libpng,3,[],https://github.com/navit-gps/navit/pull/276,https://github.com/pgrandin,4,https://github.com/navit-gps/navit/pull/276#issuecomment-314158194,,"Well we could host a copy of the dependencies we need : i actually did it for the toolchain https://github.com/navit-gps/dependencies/tree/master/tomtom
@jkoan : would you mind to update the PR so that it uses the mentioned repo ?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,277,2017-07-09T18:17:27Z,2017-08-24T17:02:46Z,2017-08-24T17:02:46Z,CLOSED,False,972,208,607,https://github.com/jkoan,Rename xpm to icons,19,[],https://github.com/navit-gps/navit/pull/277,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/277,"To fix Trac Ticket #681 here are the Pull request to move everything to icons.
Please test and leave if everything goes well.","To fix Trac Ticket #681 here are the Pull request to move everything to icons.
Please test and leave if everything goes well.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,277,2017-07-09T18:17:27Z,2017-08-24T17:02:46Z,2017-08-24T17:02:46Z,CLOSED,False,972,208,607,https://github.com/jkoan,Rename xpm to icons,19,[],https://github.com/navit-gps/navit/pull/277,https://github.com/sleske,2,https://github.com/navit-gps/navit/pull/277#issuecomment-323746376,"To fix Trac Ticket #681 here are the Pull request to move everything to icons.
Please test and leave if everything goes well.","The fix itself (commit 0af83d1) looks fine, thank you.
It looks like this pull request was somehow messed up - it contains loads of other commits unrelated to the change. I looks like the best option is to cherry-pick the fix onto trunk and close this PR.
If there are no objections, I'll do that in the next days.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,277,2017-07-09T18:17:27Z,2017-08-24T17:02:46Z,2017-08-24T17:02:46Z,CLOSED,False,972,208,607,https://github.com/jkoan,Rename xpm to icons,19,[],https://github.com/navit-gps/navit/pull/277,https://github.com/jkoan,3,https://github.com/navit-gps/navit/pull/277#issuecomment-324696036,"To fix Trac Ticket #681 here are the Pull request to move everything to icons.
Please test and leave if everything goes well.",I will clean up and open new PR soon.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,278,2017-07-12T06:48:41Z,2017-07-12T14:09:17Z,2017-07-12T14:09:17Z,CLOSED,False,1,0,1,https://github.com/jfitie,[DNM] Add:xml:Set default pitch to 10 for Android build,1,[],https://github.com/navit-gps/navit/pull/278,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/278,The default pitch of 20 is too high for Android devices which usually have 16:9 or 16:10 screens. This results in some distortion and unused screen space. 10 seems to be a better default value.,The default pitch of 20 is too high for Android devices which usually have 16:9 or 16:10 screens. This results in some distortion and unused screen space. 10 seems to be a better default value.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,279,2017-07-13T06:13:37Z,2017-07-26T16:33:25Z,2017-07-26T16:49:34Z,CLOSED,False,8,0,2,https://github.com/jfitie,Set default pitch to 5 for Android build,4,['enhancement'],https://github.com/navit-gps/navit/pull/279,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/279,"The default pitch of 20 is too high for Android devices which usually have 16:9 or 16:10 screens. This results in some distortion and unused screen space. 5 seems to be a better default value with less unused screen space and a nice 3D look (and it is still a 'nice' number). I've tested this on 7 devices.
Example:
Pitch 20:

Pitch 5:","The default pitch of 20 is too high for Android devices which usually have 16:9 or 16:10 screens. This results in some distortion and unused screen space. 5 seems to be a better default value with less unused screen space and a nice 3D look (and it is still a 'nice' number). I've tested this on 7 devices.
Example:
Pitch 20:

Pitch 5:",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,279,2017-07-13T06:13:37Z,2017-07-26T16:33:25Z,2017-07-26T16:49:34Z,CLOSED,False,8,0,2,https://github.com/jfitie,Set default pitch to 5 for Android build,4,['enhancement'],https://github.com/navit-gps/navit/pull/279,https://github.com/jfitie,2,https://github.com/navit-gps/navit/pull/279#issuecomment-318114031,"The default pitch of 20 is too high for Android devices which usually have 16:9 or 16:10 screens. This results in some distortion and unused screen space. 5 seems to be a better default value with less unused screen space and a nice 3D look (and it is still a 'nice' number). I've tested this on 7 devices.
Example:
Pitch 20:

Pitch 5:",Continued in #303,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,280,2017-07-13T07:10:32Z,2017-07-13T07:38:42Z,2017-07-13T07:38:42Z,MERGED,True,85,35,2,https://github.com/jfitie,[POI] Improve tower icon,2,['enhancement'],https://github.com/navit-gps/navit/pull/280,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/280,Let's fix the ugliest of them all :-),Let's fix the ugliest of them all :-),True,{}
navit-gps/navit,https://github.com/navit-gps/navit,281,2017-07-13T14:04:55Z,2017-07-13T14:05:41Z,2017-07-13T14:05:44Z,MERGED,True,204,160,3,https://github.com/jfitie,"[POI] Improve ATM, Fire brigade and Restaurant icons",1,['enhancement'],https://github.com/navit-gps/navit/pull/281,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/281,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,282,2017-07-13T14:27:59Z,2017-07-13T14:28:58Z,2017-07-13T14:29:00Z,MERGED,True,309,111,2,https://github.com/jfitie,[POI] Improve Exit and Hotel icons,1,['enhancement'],https://github.com/navit-gps/navit/pull/282,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/282,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,283,2017-07-13T17:33:33Z,2017-07-13T17:33:43Z,2017-07-14T07:22:43Z,MERGED,True,51,61,1,https://github.com/jfitie,[POI] Improve Fuel icon,1,['enhancement'],https://github.com/navit-gps/navit/pull/283,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/283,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,284,2017-07-13T19:16:04Z,2017-07-17T16:57:48Z,2017-07-17T16:57:56Z,MERGED,True,3,1,1,https://github.com/jandegr,label for heightlines,1,[],https://github.com/navit-gps/navit/pull/284,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/284,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,284,2017-07-13T19:16:04Z,2017-07-17T16:57:48Z,2017-07-17T16:57:56Z,MERGED,True,3,1,1,https://github.com/jandegr,label for heightlines,1,[],https://github.com/navit-gps/navit/pull/284,https://github.com/zintor,2,https://github.com/navit-gps/navit/pull/284#issuecomment-315178409,,"I could approve, that labels are shown on heightlines",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,285,2017-07-14T07:22:25Z,2017-07-14T07:23:28Z,2017-07-14T07:23:31Z,MERGED,True,1068,906,9,https://github.com/jfitie,"[POI] Improve Bank, Bench, Police, School, Tower, Trafic signals, Vie…",1,['enhancement'],https://github.com/navit-gps/navit/pull/285,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/285,"…wpoint, Shop apparel and Worship icons","…wpoint, Shop apparel and Worship icons",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,286,2017-07-14T12:00:04Z,2017-07-14T12:01:11Z,2017-07-14T12:01:14Z,MERGED,True,1282,718,12,https://github.com/jfitie,"[POI] Improve Bar, Beer, Bus stop, Fountain, Level crossing, Library, Memorial, Post, Repair service, Shopping and Stadium icons",2,['enhancement'],https://github.com/navit-gps/navit/pull/286,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/286,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,287,2017-07-14T13:32:25Z,2017-07-14T13:32:55Z,2017-07-14T13:32:58Z,MERGED,True,1096,657,9,https://github.com/jfitie,"[POI] Improve Drinking water, Fastfood, Theater, Information, Museum, Shop grocery, Taxi, Toilets and Townhall icons",1,['enhancement'],https://github.com/navit-gps/navit/pull/287,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/287,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,288,2017-07-15T07:38:46Z,2017-07-15T07:38:59Z,2017-07-15T07:39:01Z,MERGED,True,621,511,7,https://github.com/jfitie,"[POI] Improve Car dealer, Castle, Fountain, Hospital, Parking, Peak and Pharmacy icons",1,['enhancement'],https://github.com/navit-gps/navit/pull/288,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/288,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,289,2017-07-15T18:11:59Z,2017-07-15T18:12:45Z,2017-07-15T18:12:47Z,MERGED,True,564,286,7,https://github.com/jfitie,"[POI] Improve Attraction, Bicycle shop, Boat ramp, Bus, Cemetery and Cinema icons",2,[],https://github.com/navit-gps/navit/pull/289,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/289,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,290,2017-07-15T18:41:34Z,2017-07-15T18:41:47Z,2017-07-15T18:41:49Z,MERGED,True,2006,1335,7,https://github.com/jfitie,"[POI] Improve Parking, Shop computer, Shop department, Zoo, TEC common, Unknown and Sport icons",1,['enhancement'],https://github.com/navit-gps/navit/pull/290,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/290,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,291,2017-07-16T09:27:56Z,2017-07-16T09:28:01Z,2017-07-16T09:28:03Z,MERGED,True,588,509,5,https://github.com/jfitie,"[POI] Improve Emergency, Golf, Pharmacy, Picnic and Wifi icons",1,['enhancement'],https://github.com/navit-gps/navit/pull/291,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/291,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,292,2017-07-16T09:29:35Z,2017-07-16T09:33:08Z,2017-07-16T09:33:11Z,MERGED,True,0,654,8,https://github.com/jfitie,Cleanup old xpm icons,8,['enhancement'],https://github.com/navit-gps/navit/pull/292,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/292,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,293,2017-07-17T06:25:10Z,2017-07-17T06:25:24Z,2017-07-17T06:25:26Z,MERGED,True,334,254,6,https://github.com/jfitie,"[POI] Improve Attraction, Cemetery, Heliport, Hotel, Parking and Pharmacy icons",1,['enhancement'],https://github.com/navit-gps/navit/pull/293,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/293,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,294,2017-07-18T02:25:02Z,2017-08-23T15:54:22Z,2018-04-20T11:33:05Z,MERGED,True,8,8,3,https://github.com/pgrandin,Fixes displaying the heightline route info,2,[],https://github.com/navit-gps/navit/pull/294,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/294,@zintor can you please confirm that it fixes your issue?,@zintor can you please confirm that it fixes your issue?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,294,2017-07-18T02:25:02Z,2017-08-23T15:54:22Z,2018-04-20T11:33:05Z,MERGED,True,8,8,3,https://github.com/pgrandin,Fixes displaying the heightline route info,2,[],https://github.com/navit-gps/navit/pull/294,https://github.com/zintor,2,https://github.com/navit-gps/navit/pull/294#issuecomment-316190332,@zintor can you please confirm that it fixes your issue?,"I can confirm, that I am able to see the heightlines.
Debugging informations are also shown.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,295,2017-07-18T07:34:35Z,2017-08-23T15:54:00Z,2017-08-23T15:54:04Z,MERGED,True,2573,936,4,https://github.com/pgrandin,Updated shapefile driver,1,[],https://github.com/navit-gps/navit/pull/295,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/295,Comes with a brand new documentation about how to use Shapefiles with Navit : https://wiki.navit-project.org/index.php/Shapefiles,Comes with a brand new documentation about how to use Shapefiles with Navit : https://wiki.navit-project.org/index.php/Shapefiles,True,{'THUMBS_UP': ['https://github.com/jkoan']}
navit-gps/navit,https://github.com/navit-gps/navit,296,2017-07-20T06:39:03Z,2017-07-20T07:15:34Z,2017-07-20T07:15:48Z,MERGED,True,84,26,1,https://github.com/jfitie,Change default cursor in Car and Car-dark layouts,1,['enhancement'],https://github.com/navit-gps/navit/pull/296,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/296,Use Car-Android cursor as default cursor in Car and Car-dark layouts. Changed the green color to blue for the Car-dark layout.,Use Car-Android cursor as default cursor in Car and Car-dark layouts. Changed the green color to blue for the Car-dark layout.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,297,2017-07-20T07:11:02Z,2017-07-20T07:11:33Z,2017-07-20T07:11:35Z,MERGED,True,216,165,4,https://github.com/jfitie,"[POI] Improve Drinking water, Shopping, Sport and Tower icons",1,[],https://github.com/navit-gps/navit/pull/297,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/297,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,298,2017-07-20T07:15:21Z,2017-07-20T07:15:43Z,2017-07-20T07:15:46Z,MERGED,True,93,103,1,https://github.com/jfitie,[POI] Improve Bicycle shop icon,1,[],https://github.com/navit-gps/navit/pull/298,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/298,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,299,2017-07-20T16:49:03Z,2017-07-20T16:50:04Z,2017-07-28T15:26:06Z,MERGED,True,98,32,2,https://github.com/jfitie,[POI] Improve Public office icon,2,[],https://github.com/navit-gps/navit/pull/299,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/299,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,299,2017-07-20T16:49:03Z,2017-07-20T16:50:04Z,2017-07-28T15:26:06Z,MERGED,True,98,32,2,https://github.com/jfitie,[POI] Improve Public office icon,2,[],https://github.com/navit-gps/navit/pull/299,https://github.com/sleske,2,https://github.com/navit-gps/navit/pull/299#issuecomment-318198741,,"Hi, thanks for cleaning up our old icons.
Unfortunately, several of the SVG icons you created/modified for POIs have a width/height of 100.
However, the (somewhat complex) scaling code in the Navit build requires POI icons to have a width/height of 22. Note that all the SVG files for POIs have these dimensions.
We should probably change the size of the new SVGs by changing ""width"", ""height"" and ""viewBox"". I'll try to do this in the next days.",True,{'THUMBS_UP': ['https://github.com/jfitie']}
navit-gps/navit,https://github.com/navit-gps/navit,299,2017-07-20T16:49:03Z,2017-07-20T16:50:04Z,2017-07-28T15:26:06Z,MERGED,True,98,32,2,https://github.com/jfitie,[POI] Improve Public office icon,2,[],https://github.com/navit-gps/navit/pull/299,https://github.com/jfitie,3,https://github.com/navit-gps/navit/pull/299#issuecomment-318431924,,"@sleske Sorry about that, they seemed to work fine on the Android build I use on multiple devices. I've changed this for my (and also some other) icons in PR #304",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,299,2017-07-20T16:49:03Z,2017-07-20T16:50:04Z,2017-07-28T15:26:06Z,MERGED,True,98,32,2,https://github.com/jfitie,[POI] Improve Public office icon,2,[],https://github.com/navit-gps/navit/pull/299,https://github.com/sleske,4,https://github.com/navit-gps/navit/pull/299#issuecomment-318683551,,"@jfitie Thanks for the quick correction. Yes, Android is not affected, because icons are scaled differently for Android (don't ask why).
There were two more icons with size 100x100 (tower and traffic_signal), I fixed those too. Now all have the right size.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,300,2017-07-21T17:52:34Z,2017-07-21T17:53:00Z,2017-07-21T17:53:03Z,MERGED,True,333,572,7,https://github.com/jfitie,"[POI] Improve Bicycle shop, Cemetery, Bus stop, Museum, School, Fountain and Tower icons",1,['enhancement'],https://github.com/navit-gps/navit/pull/300,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/300,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,301,2017-07-21T19:04:46Z,2017-07-21T19:04:50Z,2017-07-21T19:04:52Z,MERGED,True,67,120,1,https://github.com/jfitie,[POI] Improve Bus stop icon,1,[],https://github.com/navit-gps/navit/pull/301,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/301,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,302,2017-07-22T16:59:58Z,2017-07-22T17:01:27Z,2017-07-22T17:01:29Z,MERGED,True,150,14,2,https://github.com/jfitie,Improve cursor in Car and Car-dark layouts,1,['enhancement'],https://github.com/navit-gps/navit/pull/302,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/302,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,303,2017-07-26T16:35:35Z,2017-07-27T20:03:34Z,2017-07-27T22:28:59Z,MERGED,True,635,642,62,https://github.com/jfitie,Pitch correction,60,['enhancement'],https://github.com/navit-gps/navit/pull/303,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/303,"The default 3D pitch of 20 is too high for recent (Android) devices which usually have high resolution screens. This results in a lot of distortion and unused screen space.
Example:
Pitch 20:

Pitch needs to be corrected for window resolution. After studying the transformation code, I found the following solution.
In pseudocode: p=ROUND(20*SQRT(320*240)/SQRT(x*y))
The values 20 (default 3D pitch), 320 and 240 come from this screenshot, which is the first one for the internal GUI on the official site:","The default 3D pitch of 20 is too high for recent (Android) devices which usually have high resolution screens. This results in a lot of distortion and unused screen space.
Example:
Pitch 20:

Pitch needs to be corrected for window resolution. After studying the transformation code, I found the following solution.
In pseudocode: p=ROUND(20*SQRT(320*240)/SQRT(x*y))
The values 20 (default 3D pitch), 320 and 240 come from this screenshot, which is the first one for the internal GUI on the official site:",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,303,2017-07-26T16:35:35Z,2017-07-27T20:03:34Z,2017-07-27T22:28:59Z,MERGED,True,635,642,62,https://github.com/jfitie,Pitch correction,60,['enhancement'],https://github.com/navit-gps/navit/pull/303,https://github.com/jfitie,2,https://github.com/navit-gps/navit/pull/303#issuecomment-318112067,"The default 3D pitch of 20 is too high for recent (Android) devices which usually have high resolution screens. This results in a lot of distortion and unused screen space.
Example:
Pitch 20:

Pitch needs to be corrected for window resolution. After studying the transformation code, I found the following solution.
In pseudocode: p=ROUND(20*SQRT(320*240)/SQRT(x*y))
The values 20 (default 3D pitch), 320 and 240 come from this screenshot, which is the first one for the internal GUI on the official site:","Here are some examples of Navit in random resolutions and aspect ratios where the pitch has been corrected using the pseudocode shown above.
In Bash (excerpt):
p=`python -c 'import math;print int(round(20*math.sqrt(320*240)/math.sqrt('$x'*'$y'),0))'` # pitch // ROUND(20*SQRT(320*240)/SQRT(x*y))
sed -i -e 's@navit center=""11.5666 48.1333""@navit center=""3752 N 12216 W"" pitch=""'$p'""@' navit.xml # set location and pitch
sed -i -e 's@graphics type=""win32""@graphics type=""win32"" w=""'$rx'"" h=""'$ry'""@' navit.xml # set resolution

Resolution 240 x 1280; calculated pitch: 10

Resolution 240 x 1920; calculated pitch: 8

Resolution 320 x 400; calculated pitch: 15

Resolution 320 x 480; calculated pitch: 14

Resolution 320 x 1080; calculated pitch: 9

Resolution 320 x 1600; calculated pitch: 8

Resolution 320 x 2160; calculated pitch: 7

Resolution 400 x 854; calculated pitch: 9

Resolution 400 x 1920; calculated pitch: 6

Resolution 720 x 800; calculated pitch: 7

Resolution 720 x 1280; calculated pitch: 6

Resolution 720 x 1920; calculated pitch: 5

Resolution 800 x 400; calculated pitch: 10

Resolution 800 x 1080; calculated pitch: 6

Resolution 800 x 1440; calculated pitch: 5

Resolution 800 x 1600; calculated pitch: 5

Resolution 854 x 240; calculated pitch: 12

Resolution 854 x 1600; calculated pitch: 5

Resolution 1080 x 320; calculated pitch: 9

Resolution 1280 x 720; calculated pitch: 6

Resolution 1280 x 1440; calculated pitch: 4

Resolution 1440 x 320; calculated pitch: 8

Resolution 1440 x 800; calculated pitch: 5

Resolution 2160 x 320; calculated pitch: 7

Resolution 2160 x 1280; calculated pitch: 3

Resolution 2560 x 240; calculated pitch: 7

Resolution 2560 x 400; calculated pitch: 5

Resolution 2560 x 1440; calculated pitch: 3",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,303,2017-07-26T16:35:35Z,2017-07-27T20:03:34Z,2017-07-27T22:28:59Z,MERGED,True,635,642,62,https://github.com/jfitie,Pitch correction,60,['enhancement'],https://github.com/navit-gps/navit/pull/303,https://github.com/jfitie,3,https://github.com/navit-gps/navit/pull/303#issuecomment-318131046,"The default 3D pitch of 20 is too high for recent (Android) devices which usually have high resolution screens. This results in a lot of distortion and unused screen space.
Example:
Pitch 20:

Pitch needs to be corrected for window resolution. After studying the transformation code, I found the following solution.
In pseudocode: p=ROUND(20*SQRT(320*240)/SQRT(x*y))
The values 20 (default 3D pitch), 320 and 240 come from this screenshot, which is the first one for the internal GUI on the official site:","Almost, but not quite @ afe1e1e
I was expecting results similar to the first series of screen shots. Same angle for all resolutions. Instead, the angle is the same for all cases, but the angle is different from the first series of screenshots. Manually setting pitch=20 in navit.xml gives the same results as the first series. Investigating.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,303,2017-07-26T16:35:35Z,2017-07-27T20:03:34Z,2017-07-27T22:28:59Z,MERGED,True,635,642,62,https://github.com/jfitie,Pitch correction,60,['enhancement'],https://github.com/navit-gps/navit/pull/303,https://github.com/jfitie,4,https://github.com/navit-gps/navit/pull/303#issuecomment-318153224,"The default 3D pitch of 20 is too high for recent (Android) devices which usually have high resolution screens. This results in a lot of distortion and unused screen space.
Example:
Pitch 20:

Pitch needs to be corrected for window resolution. After studying the transformation code, I found the following solution.
In pseudocode: p=ROUND(20*SQRT(320*240)/SQRT(x*y))
The values 20 (default 3D pitch), 320 and 240 come from this screenshot, which is the first one for the internal GUI on the official site:","According to the new log (526534c), the calculation is performed before the window resolution is set.
debug:gui_internal:gui_internal_new:w=0 h=0 pitch=-2147483648",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,303,2017-07-26T16:35:35Z,2017-07-27T20:03:34Z,2017-07-27T22:28:59Z,MERGED,True,635,642,62,https://github.com/jfitie,Pitch correction,60,['enhancement'],https://github.com/navit-gps/navit/pull/303,https://github.com/pohlinkzei,5,https://github.com/navit-gps/navit/pull/303#issuecomment-318306440,"The default 3D pitch of 20 is too high for recent (Android) devices which usually have high resolution screens. This results in a lot of distortion and unused screen space.
Example:
Pitch 20:

Pitch needs to be corrected for window resolution. After studying the transformation code, I found the following solution.
In pseudocode: p=ROUND(20*SQRT(320*240)/SQRT(x*y))
The values 20 (default 3D pitch), 320 and 240 come from this screenshot, which is the first one for the internal GUI on the official site:","I havent understood how this is intended to work, but your calculation does not calculate what I assume it should.
pitch*sqrt(DEFRESX*DEFRESY)/sqrt(t->w*t->h) is always pitch because t->w*t->h = DEFRESX*DEFRESY.
Your Debug:
debug:navit:transform_setup_matrix:yaw=0 pitch=20 center=0x11ba31,0x5b5e2d w=240 h=320",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,303,2017-07-26T16:35:35Z,2017-07-27T20:03:34Z,2017-07-27T22:28:59Z,MERGED,True,635,642,62,https://github.com/jfitie,Pitch correction,60,['enhancement'],https://github.com/navit-gps/navit/pull/303,https://github.com/jfitie,6,https://github.com/navit-gps/navit/pull/303#issuecomment-318407981,"The default 3D pitch of 20 is too high for recent (Android) devices which usually have high resolution screens. This results in a lot of distortion and unused screen space.
Example:
Pitch 20:

Pitch needs to be corrected for window resolution. After studying the transformation code, I found the following solution.
In pseudocode: p=ROUND(20*SQRT(320*240)/SQRT(x*y))
The values 20 (default 3D pitch), 320 and 240 come from this screenshot, which is the first one for the internal GUI on the official site:",Commit 535f5e1 results for different resolutions aspect/ratios:,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,303,2017-07-26T16:35:35Z,2017-07-27T20:03:34Z,2017-07-27T22:28:59Z,MERGED,True,635,642,62,https://github.com/jfitie,Pitch correction,60,['enhancement'],https://github.com/navit-gps/navit/pull/303,https://github.com/jfitie,7,https://github.com/navit-gps/navit/pull/303#issuecomment-318409421,"The default 3D pitch of 20 is too high for recent (Android) devices which usually have high resolution screens. This results in a lot of distortion and unused screen space.
Example:
Pitch 20:

Pitch needs to be corrected for window resolution. After studying the transformation code, I found the following solution.
In pseudocode: p=ROUND(20*SQRT(320*240)/SQRT(x*y))
The values 20 (default 3D pitch), 320 and 240 come from this screenshot, which is the first one for the internal GUI on the official site:","@pohlinkzei Correct, but I didn't know how to pass the current window width and height yet, so they were hardcoded still at the time of your reply. That's what [WIP] in the pr title stands for 😄",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,303,2017-07-26T16:35:35Z,2017-07-27T20:03:34Z,2017-07-27T22:28:59Z,MERGED,True,635,642,62,https://github.com/jfitie,Pitch correction,60,['enhancement'],https://github.com/navit-gps/navit/pull/303,https://github.com/jfitie,8,https://github.com/navit-gps/navit/pull/303#issuecomment-318417312,"The default 3D pitch of 20 is too high for recent (Android) devices which usually have high resolution screens. This results in a lot of distortion and unused screen space.
Example:
Pitch 20:

Pitch needs to be corrected for window resolution. After studying the transformation code, I found the following solution.
In pseudocode: p=ROUND(20*SQRT(320*240)/SQRT(x*y))
The values 20 (default 3D pitch), 320 and 240 come from this screenshot, which is the first one for the internal GUI on the official site:",Results of the Android build with the latest code; as expected with a visual pitch similar to the screenshots above and nothing like the distorted first image at the top:,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,303,2017-07-26T16:35:35Z,2017-07-27T20:03:34Z,2017-07-27T22:28:59Z,MERGED,True,635,642,62,https://github.com/jfitie,Pitch correction,60,['enhancement'],https://github.com/navit-gps/navit/pull/303,https://github.com/jfitie,9,https://github.com/navit-gps/navit/pull/303#issuecomment-318463365,"The default 3D pitch of 20 is too high for recent (Android) devices which usually have high resolution screens. This results in a lot of distortion and unused screen space.
Example:
Pitch 20:

Pitch needs to be corrected for window resolution. After studying the transformation code, I found the following solution.
In pseudocode: p=ROUND(20*SQRT(320*240)/SQRT(x*y))
The values 20 (default 3D pitch), 320 and 240 come from this screenshot, which is the first one for the internal GUI on the official site:","@pohlinkzei

True, but since the calculation is not done frequently, it makes sense to keep it like this instead of replacing it with just some number.
Resize: was talking about this with @pgrandin, but we couldn't get the UI to resize and this could not be tested. However, according to the debug log, the pitch is set outside of the initialization (debug:navit:navit_set_attr_do:enter, this_=0x2475e8, attr=0xaae740 (pitch), init=0). As for changes in orientation: this doesn't matter as the correction is based on the total number of pixels, not the aspect ration. See the 2 (Android) images just above your comment.
Not sure what you mean, but the pitch can be set to a single level, like the default of 20. It will just be corrected based on the window size so that a pitch of 20 will look the same on any device/resolution.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,303,2017-07-26T16:35:35Z,2017-07-27T20:03:34Z,2017-07-27T22:28:59Z,MERGED,True,635,642,62,https://github.com/jfitie,Pitch correction,60,['enhancement'],https://github.com/navit-gps/navit/pull/303,https://github.com/jfitie,10,https://github.com/navit-gps/navit/pull/303#issuecomment-318470820,"The default 3D pitch of 20 is too high for recent (Android) devices which usually have high resolution screens. This results in a lot of distortion and unused screen space.
Example:
Pitch 20:

Pitch needs to be corrected for window resolution. After studying the transformation code, I found the following solution.
In pseudocode: p=ROUND(20*SQRT(320*240)/SQRT(x*y))
The values 20 (default 3D pitch), 320 and 240 come from this screenshot, which is the first one for the internal GUI on the official site:",Rebase,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,303,2017-07-26T16:35:35Z,2017-07-27T20:03:34Z,2017-07-27T22:28:59Z,MERGED,True,635,642,62,https://github.com/jfitie,Pitch correction,60,['enhancement'],https://github.com/navit-gps/navit/pull/303,https://github.com/pgrandin,11,https://github.com/navit-gps/navit/pull/303#issuecomment-318504434,"The default 3D pitch of 20 is too high for recent (Android) devices which usually have high resolution screens. This results in a lot of distortion and unused screen space.
Example:
Pitch 20:

Pitch needs to be corrected for window resolution. After studying the transformation code, I found the following solution.
In pseudocode: p=ROUND(20*SQRT(320*240)/SQRT(x*y))
The values 20 (default 3D pitch), 320 and 240 come from this screenshot, which is the first one for the internal GUI on the official site:",Kudos on the thorough testing!,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,304,2017-07-27T17:32:23Z,2017-07-27T17:34:30Z,2017-07-27T17:34:33Z,MERGED,True,634,641,61,https://github.com/jfitie,[POI] Resize SVG icons to 22x22,1,['enhancement'],https://github.com/navit-gps/navit/pull/304,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/304,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,305,2017-07-31T13:53:25Z,2017-08-23T15:52:14Z,2017-08-23T15:52:29Z,MERGED,True,320,159,1,https://github.com/mdankov,Maptool multicountry towns,3,[],https://github.com/navit-gps/navit/pull/305,https://github.com/mdankov,1,https://github.com/navit-gps/navit/pull/305,"This branch allows map to include towns to more than one country. There are a few regions in the world mapped in such a manner, and stock maptool leaves only one of the countries active, randomly ignoring the rest.
We have a planet built with this branch, it's available for download at http://maps6.exp.navit-project.org/","This branch allows map to include towns to more than one country. There are a few regions in the world mapped in such a manner, and stock maptool leaves only one of the countries active, randomly ignoring the rest.
We have a planet built with this branch, it's available for download at http://maps6.exp.navit-project.org/",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,305,2017-07-31T13:53:25Z,2017-08-23T15:52:14Z,2017-08-23T15:52:29Z,MERGED,True,320,159,1,https://github.com/mdankov,Maptool multicountry towns,3,[],https://github.com/navit-gps/navit/pull/305,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/305#issuecomment-324379661,"This branch allows map to include towns to more than one country. There are a few regions in the world mapped in such a manner, and stock maptool leaves only one of the countries active, randomly ignoring the rest.
We have a planet built with this branch, it's available for download at http://maps6.exp.navit-project.org/","Nice feature, thanks!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,306,2017-07-31T18:16:57Z,2017-08-01T19:26:39Z,2017-08-01T19:26:50Z,MERGED,True,10,4,2,https://github.com/jfitie,Auto pitch and orientation + Apply pitch correction in reverse when reading attribute,5,['enhancement'],https://github.com/navit-gps/navit/pull/306,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/306,"Suggestion for improving the out-of-box experience for builds using osd_minimum.xslt (Android and iPhone).
Depending on the autozoom_active setting (which is enabled by default on Android; https://github.com/navit-gps/navit/blob/trunk/navit/xslt/android.xslt#L52) the following paramers are set automatically:

pitch (pitch=autozoom_active==0?pitch:(follow>1?0:20))
orientation (orientation=autozoom_active==0?orientation:(follow>1?0:-1))

And a new OSD element is added:

Zoom auto or Zoom manual (depending on active setting/autozoom_active)

Initial startup: auto mode; driving/navigating:

Because autozoom is active by default, this sets the pitch to a value of 20 for a 3D look. orientation is set to -1 so the map rotates in the direction of travel.
Edit: Zoom in and out buttons are now also shown in this mode since ba2b454.
Dragging the map: auto mode; browsing:

By moving the map, orientation is automatically set to 0 to force a North-up view. pitch is set to 0 so the map is shown top-down. OSD Zoom buttons are shown, as the user might want to manually zoom in and out from this view.
Select manual zoom (M icon):

Enabling manual zoom mode always shows the OSD zoom buttons and allows pitch to be toggled using the standard (2D/3D) buttons in the menu. orientation is unchanged.
Select automatic zoom (A icon) and follow cursor:

Enabling automatic zoom and centering on the cursor again, pitch is set to 20 and orientation is set to -1.
Edit: Zoom in and out buttons are now also shown in this mode since ba2b454.
Zoom-to-route:

North-oriented and top view.","Suggestion for improving the out-of-box experience for builds using osd_minimum.xslt (Android and iPhone).
Depending on the autozoom_active setting (which is enabled by default on Android; https://github.com/navit-gps/navit/blob/trunk/navit/xslt/android.xslt#L52) the following paramers are set automatically:

pitch (pitch=autozoom_active==0?pitch:(follow>1?0:20))
orientation (orientation=autozoom_active==0?orientation:(follow>1?0:-1))

And a new OSD element is added:

Zoom auto or Zoom manual (depending on active setting/autozoom_active)

Initial startup: auto mode; driving/navigating:

Because autozoom is active by default, this sets the pitch to a value of 20 for a 3D look. orientation is set to -1 so the map rotates in the direction of travel.
Edit: Zoom in and out buttons are now also shown in this mode since ba2b454.
Dragging the map: auto mode; browsing:

By moving the map, orientation is automatically set to 0 to force a North-up view. pitch is set to 0 so the map is shown top-down. OSD Zoom buttons are shown, as the user might want to manually zoom in and out from this view.
Select manual zoom (M icon):

Enabling manual zoom mode always shows the OSD zoom buttons and allows pitch to be toggled using the standard (2D/3D) buttons in the menu. orientation is unchanged.
Select automatic zoom (A icon) and follow cursor:

Enabling automatic zoom and centering on the cursor again, pitch is set to 20 and orientation is set to -1.
Edit: Zoom in and out buttons are now also shown in this mode since ba2b454.
Zoom-to-route:

North-oriented and top view.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,306,2017-07-31T18:16:57Z,2017-08-01T19:26:39Z,2017-08-01T19:26:50Z,MERGED,True,10,4,2,https://github.com/jfitie,Auto pitch and orientation + Apply pitch correction in reverse when reading attribute,5,['enhancement'],https://github.com/navit-gps/navit/pull/306,https://github.com/jfitie,2,https://github.com/navit-gps/navit/pull/306#issuecomment-319444921,"Suggestion for improving the out-of-box experience for builds using osd_minimum.xslt (Android and iPhone).
Depending on the autozoom_active setting (which is enabled by default on Android; https://github.com/navit-gps/navit/blob/trunk/navit/xslt/android.xslt#L52) the following paramers are set automatically:

pitch (pitch=autozoom_active==0?pitch:(follow>1?0:20))
orientation (orientation=autozoom_active==0?orientation:(follow>1?0:-1))

And a new OSD element is added:

Zoom auto or Zoom manual (depending on active setting/autozoom_active)

Initial startup: auto mode; driving/navigating:

Because autozoom is active by default, this sets the pitch to a value of 20 for a 3D look. orientation is set to -1 so the map rotates in the direction of travel.
Edit: Zoom in and out buttons are now also shown in this mode since ba2b454.
Dragging the map: auto mode; browsing:

By moving the map, orientation is automatically set to 0 to force a North-up view. pitch is set to 0 so the map is shown top-down. OSD Zoom buttons are shown, as the user might want to manually zoom in and out from this view.
Select manual zoom (M icon):

Enabling manual zoom mode always shows the OSD zoom buttons and allows pitch to be toggled using the standard (2D/3D) buttons in the menu. orientation is unchanged.
Select automatic zoom (A icon) and follow cursor:

Enabling automatic zoom and centering on the cursor again, pitch is set to 20 and orientation is set to -1.
Edit: Zoom in and out buttons are now also shown in this mode since ba2b454.
Zoom-to-route:

North-oriented and top view.","Latest commit was tested and works as expected, including the fix for reading the pitch attribute.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,306,2017-07-31T18:16:57Z,2017-08-01T19:26:39Z,2017-08-01T19:26:50Z,MERGED,True,10,4,2,https://github.com/jfitie,Auto pitch and orientation + Apply pitch correction in reverse when reading attribute,5,['enhancement'],https://github.com/navit-gps/navit/pull/306,https://github.com/pgrandin,3,https://github.com/navit-gps/navit/pull/306#issuecomment-319471556,"Suggestion for improving the out-of-box experience for builds using osd_minimum.xslt (Android and iPhone).
Depending on the autozoom_active setting (which is enabled by default on Android; https://github.com/navit-gps/navit/blob/trunk/navit/xslt/android.xslt#L52) the following paramers are set automatically:

pitch (pitch=autozoom_active==0?pitch:(follow>1?0:20))
orientation (orientation=autozoom_active==0?orientation:(follow>1?0:-1))

And a new OSD element is added:

Zoom auto or Zoom manual (depending on active setting/autozoom_active)

Initial startup: auto mode; driving/navigating:

Because autozoom is active by default, this sets the pitch to a value of 20 for a 3D look. orientation is set to -1 so the map rotates in the direction of travel.
Edit: Zoom in and out buttons are now also shown in this mode since ba2b454.
Dragging the map: auto mode; browsing:

By moving the map, orientation is automatically set to 0 to force a North-up view. pitch is set to 0 so the map is shown top-down. OSD Zoom buttons are shown, as the user might want to manually zoom in and out from this view.
Select manual zoom (M icon):

Enabling manual zoom mode always shows the OSD zoom buttons and allows pitch to be toggled using the standard (2D/3D) buttons in the menu. orientation is unchanged.
Select automatic zoom (A icon) and follow cursor:

Enabling automatic zoom and centering on the cursor again, pitch is set to 20 and orientation is set to -1.
Edit: Zoom in and out buttons are now also shown in this mode since ba2b454.
Zoom-to-route:

North-oriented and top view.","Nice work @jfitie
These screenshots look good, I'm going to use them for the Play Store :)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,307,2017-08-24T17:38:30Z,2017-08-25T17:07:47Z,2017-08-25T17:07:47Z,MERGED,True,38,38,540,https://github.com/jkoan,Moved xpm to icons,1,[],https://github.com/navit-gps/navit/pull/307,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/307,"New PR to Fix Trac Ticket #681 : http://trac.navit-project.org/ticket/681
Please test and leave if everything goes well.
To merge this PR we need to replace the following xpm icons with svg ones:

 bus_halt.xpm
 dumping_station.xpm
 flag_bk_tr.xpm
 flag_bk_wh.xpm
 flag_bl_wh.xpm
 flag_wh_bk.xpm
 gc_event.xpm
 gc_multi.xpm
 gc_mystery.xpm
 gc_question.xpm
 gc_reference.xpm
 gc_stages.xpm
 gc_tradi.xpm
 gc_webcam.xpm
 gui_sound_32.xpm
 gui_sound_off_32.xpm
 highway_exit.xpm
 nav_left_1_32.xpm
 nav_left_1.xpm
 nav_left_2_32.xpm
 nav_left_2.xpm
 nav_right_1_32.xpm
 nav_right_1.xpm
 nav_right_2_32.xpm
 nav_right_2.xpm
 nav_straight_32.xpm
 nav_straight.xpm
 restroom.xpm
 trailerpark.xpm","New PR to Fix Trac Ticket #681 : http://trac.navit-project.org/ticket/681
Please test and leave if everything goes well.
To merge this PR we need to replace the following xpm icons with svg ones:

 bus_halt.xpm
 dumping_station.xpm
 flag_bk_tr.xpm
 flag_bk_wh.xpm
 flag_bl_wh.xpm
 flag_wh_bk.xpm
 gc_event.xpm
 gc_multi.xpm
 gc_mystery.xpm
 gc_question.xpm
 gc_reference.xpm
 gc_stages.xpm
 gc_tradi.xpm
 gc_webcam.xpm
 gui_sound_32.xpm
 gui_sound_off_32.xpm
 highway_exit.xpm
 nav_left_1_32.xpm
 nav_left_1.xpm
 nav_left_2_32.xpm
 nav_left_2.xpm
 nav_right_1_32.xpm
 nav_right_1.xpm
 nav_right_2_32.xpm
 nav_right_2.xpm
 nav_straight_32.xpm
 nav_straight.xpm
 restroom.xpm
 trailerpark.xpm",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,307,2017-08-24T17:38:30Z,2017-08-25T17:07:47Z,2017-08-25T17:07:47Z,MERGED,True,38,38,540,https://github.com/jkoan,Moved xpm to icons,1,[],https://github.com/navit-gps/navit/pull/307,https://github.com/sleske,2,https://github.com/navit-gps/navit/pull/307#issuecomment-324763962,"New PR to Fix Trac Ticket #681 : http://trac.navit-project.org/ticket/681
Please test and leave if everything goes well.
To merge this PR we need to replace the following xpm icons with svg ones:

 bus_halt.xpm
 dumping_station.xpm
 flag_bk_tr.xpm
 flag_bk_wh.xpm
 flag_bl_wh.xpm
 flag_wh_bk.xpm
 gc_event.xpm
 gc_multi.xpm
 gc_mystery.xpm
 gc_question.xpm
 gc_reference.xpm
 gc_stages.xpm
 gc_tradi.xpm
 gc_webcam.xpm
 gui_sound_32.xpm
 gui_sound_off_32.xpm
 highway_exit.xpm
 nav_left_1_32.xpm
 nav_left_1.xpm
 nav_left_2_32.xpm
 nav_left_2.xpm
 nav_right_1_32.xpm
 nav_right_1.xpm
 nav_right_2_32.xpm
 nav_right_2.xpm
 nav_straight_32.xpm
 nav_straight.xpm
 restroom.xpm
 trailerpark.xpm","@jkoan :

To merge this PR we need to replace the following xpm icons with svg ones: [...]

Could you clarify that? While it makes sense to replace the remaining XPMs with SVGs, I don't see why that is a prerequisite to merging this PR. As far as I can see, XPMs will continue to work as before. Or am I missing something?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,307,2017-08-24T17:38:30Z,2017-08-25T17:07:47Z,2017-08-25T17:07:47Z,MERGED,True,38,38,540,https://github.com/jkoan,Moved xpm to icons,1,[],https://github.com/navit-gps/navit/pull/307,https://github.com/sleske,3,https://github.com/navit-gps/navit/pull/307#issuecomment-324766922,"New PR to Fix Trac Ticket #681 : http://trac.navit-project.org/ticket/681
Please test and leave if everything goes well.
To merge this PR we need to replace the following xpm icons with svg ones:

 bus_halt.xpm
 dumping_station.xpm
 flag_bk_tr.xpm
 flag_bk_wh.xpm
 flag_bl_wh.xpm
 flag_wh_bk.xpm
 gc_event.xpm
 gc_multi.xpm
 gc_mystery.xpm
 gc_question.xpm
 gc_reference.xpm
 gc_stages.xpm
 gc_tradi.xpm
 gc_webcam.xpm
 gui_sound_32.xpm
 gui_sound_off_32.xpm
 highway_exit.xpm
 nav_left_1_32.xpm
 nav_left_1.xpm
 nav_left_2_32.xpm
 nav_left_2.xpm
 nav_right_1_32.xpm
 nav_right_1.xpm
 nav_right_2_32.xpm
 nav_right_2.xpm
 nav_straight_32.xpm
 nav_straight.xpm
 restroom.xpm
 trailerpark.xpm","@pgrandin : I see you discussed this PR on IRC. Do you have any objections to merging it?
I agree the XPMs should be replaced by SVGs, but that can happen after the rename just as well as before, so I'd prefer to merge this PR right now - if we delay it, there may be new merge conflicts.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,307,2017-08-24T17:38:30Z,2017-08-25T17:07:47Z,2017-08-25T17:07:47Z,MERGED,True,38,38,540,https://github.com/jkoan,Moved xpm to icons,1,[],https://github.com/navit-gps/navit/pull/307,https://github.com/pgrandin,4,https://github.com/navit-gps/navit/pull/307#issuecomment-324980659,"New PR to Fix Trac Ticket #681 : http://trac.navit-project.org/ticket/681
Please test and leave if everything goes well.
To merge this PR we need to replace the following xpm icons with svg ones:

 bus_halt.xpm
 dumping_station.xpm
 flag_bk_tr.xpm
 flag_bk_wh.xpm
 flag_bl_wh.xpm
 flag_wh_bk.xpm
 gc_event.xpm
 gc_multi.xpm
 gc_mystery.xpm
 gc_question.xpm
 gc_reference.xpm
 gc_stages.xpm
 gc_tradi.xpm
 gc_webcam.xpm
 gui_sound_32.xpm
 gui_sound_off_32.xpm
 highway_exit.xpm
 nav_left_1_32.xpm
 nav_left_1.xpm
 nav_left_2_32.xpm
 nav_left_2.xpm
 nav_right_1_32.xpm
 nav_right_1.xpm
 nav_right_2_32.xpm
 nav_right_2.xpm
 nav_straight_32.xpm
 nav_straight.xpm
 restroom.xpm
 trailerpark.xpm",@sleske works for me. Merging.,True,{'THUMBS_UP': ['https://github.com/sleske']}
navit-gps/navit,https://github.com/navit-gps/navit,308,2017-08-25T14:24:35Z,2017-09-01T16:23:34Z,2017-09-26T18:22:06Z,MERGED,True,2,200,8,https://github.com/jkoan,Repo cleanup,7,[],https://github.com/navit-gps/navit/pull/308,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/308,Cleaned up unused Files and fixed baudrate in example config,Cleaned up unused Files and fixed baudrate in example config,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,308,2017-08-25T14:24:35Z,2017-09-01T16:23:34Z,2017-09-26T18:22:06Z,MERGED,True,2,200,8,https://github.com/jkoan,Repo cleanup,7,[],https://github.com/navit-gps/navit/pull/308,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/308#issuecomment-326461906,Cleaned up unused Files and fixed baudrate in example config,"A readme file is a common good practice, I'm not sure that we should get rid of it.
Also, your PR does some cleanup and fixes a documentation issue, which is a slightly different scope.
Removing the files is also what makes the CI fail :
CMake Error at /usr/share/cmake-2.8/Modules/CPack.cmake:395 (message):
  CPack package description file: ""/home/ubuntu/navit/README"" could not be
  found.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,308,2017-08-25T14:24:35Z,2017-09-01T16:23:34Z,2017-09-26T18:22:06Z,MERGED,True,2,200,8,https://github.com/jkoan,Repo cleanup,7,[],https://github.com/navit-gps/navit/pull/308,https://github.com/jkoan,3,https://github.com/navit-gps/navit/pull/308#issuecomment-326497954,Cleaned up unused Files and fixed baudrate in example config,"Hi Kazer,
you are right, one Readme file is a must have, but we have the README and the README.MD. Where the md file is as readable as the old one, also the md file has more informations. So my suggestion would be that I fix the build (it's only adding "".md"" in one line) and than we can delete the old Readme because everything what is inside the old file is in the new Readme.md file.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,309,2017-08-25T14:31:24Z,2018-09-23T17:19:08Z,2019-06-14T05:59:49Z,CLOSED,False,158,95,61,https://github.com/jkoan,WIP: Cmake rework,8,['build system'],https://github.com/navit-gps/navit/pull/309,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/309,"Another time the Rework of cmake/cpack to be able to build components.
This is usefull to have separate deb/rpm files as example for seperate gui components (if you have qml you dont need to have gtk installed)
But to handle this we need to set the dependencies in the main CMakeList.txt (arround line 820)

 Finish dependencies for Debian
 Set dependencies for rpm
 More work into NSIS (nicer layout for example
 ...","Another time the Rework of cmake/cpack to be able to build components.
This is usefull to have separate deb/rpm files as example for seperate gui components (if you have qml you dont need to have gtk installed)
But to handle this we need to set the dependencies in the main CMakeList.txt (arround line 820)

 Finish dependencies for Debian
 Set dependencies for rpm
 More work into NSIS (nicer layout for example
 ...",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,309,2017-08-25T14:31:24Z,2018-09-23T17:19:08Z,2019-06-14T05:59:49Z,CLOSED,False,158,95,61,https://github.com/jkoan,WIP: Cmake rework,8,['build system'],https://github.com/navit-gps/navit/pull/309,https://github.com/sleske,2,https://github.com/navit-gps/navit/pull/309#issuecomment-332779665,"Another time the Rework of cmake/cpack to be able to build components.
This is usefull to have separate deb/rpm files as example for seperate gui components (if you have qml you dont need to have gtk installed)
But to handle this we need to set the dependencies in the main CMakeList.txt (arround line 820)

 Finish dependencies for Debian
 Set dependencies for rpm
 More work into NSIS (nicer layout for example
 ...",Note: This is a new revision of the work in PR #268.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,309,2017-08-25T14:31:24Z,2018-09-23T17:19:08Z,2019-06-14T05:59:49Z,CLOSED,False,158,95,61,https://github.com/jkoan,WIP: Cmake rework,8,['build system'],https://github.com/navit-gps/navit/pull/309,https://github.com/sleske,3,https://github.com/navit-gps/navit/pull/309#issuecomment-332781614,"Another time the Rework of cmake/cpack to be able to build components.
This is usefull to have separate deb/rpm files as example for seperate gui components (if you have qml you dont need to have gtk installed)
But to handle this we need to set the dependencies in the main CMakeList.txt (arround line 820)

 Finish dependencies for Debian
 Set dependencies for rpm
 More work into NSIS (nicer layout for example
 ...","Looks fine to me at first sight. I have not tested it yet - I'll try to do that later to give feedback.
Some cosmetic changes I'd like to see:

I'd prefer putting the CPack-specific settings into a separate file (probably loading it using include).
This PR contains a lot commits with small fixes. I'd prefer rebasing it before merging (I'll glady do that once the technical details are worked out). Any objections?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,309,2017-08-25T14:31:24Z,2018-09-23T17:19:08Z,2019-06-14T05:59:49Z,CLOSED,False,158,95,61,https://github.com/jkoan,WIP: Cmake rework,8,['build system'],https://github.com/navit-gps/navit/pull/309,https://github.com/pgrandin,4,https://github.com/navit-gps/navit/pull/309#issuecomment-336506267,"Another time the Rework of cmake/cpack to be able to build components.
This is usefull to have separate deb/rpm files as example for seperate gui components (if you have qml you dont need to have gtk installed)
But to handle this we need to set the dependencies in the main CMakeList.txt (arround line 820)

 Finish dependencies for Debian
 Set dependencies for rpm
 More work into NSIS (nicer layout for example
 ...","""Also IMHO we generate way too many DEB files - if we just want to make installation easier, what's the point of having one for each plugin? Just install them all...""
I agree that we should keep it simple, but what about dependencies?
If you install the graphics-gtk plugin, it should pull GTK but not QT, and vice versa. I'm not sure that we can provide that without multiple sub-packages.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,309,2017-08-25T14:31:24Z,2018-09-23T17:19:08Z,2019-06-14T05:59:49Z,CLOSED,False,158,95,61,https://github.com/jkoan,WIP: Cmake rework,8,['build system'],https://github.com/navit-gps/navit/pull/309,https://github.com/pgrandin,5,https://github.com/navit-gps/navit/pull/309#issuecomment-341911475,"Another time the Rework of cmake/cpack to be able to build components.
This is usefull to have separate deb/rpm files as example for seperate gui components (if you have qml you dont need to have gtk installed)
But to handle this we need to set the dependencies in the main CMakeList.txt (arround line 820)

 Finish dependencies for Debian
 Set dependencies for rpm
 More work into NSIS (nicer layout for example
 ...",@jkoan @aerostitch what are your thoughts?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,309,2017-08-25T14:31:24Z,2018-09-23T17:19:08Z,2019-06-14T05:59:49Z,CLOSED,False,158,95,61,https://github.com/jkoan,WIP: Cmake rework,8,['build system'],https://github.com/navit-gps/navit/pull/309,https://github.com/sleske,6,https://github.com/navit-gps/navit/pull/309#issuecomment-341933024,"Another time the Rework of cmake/cpack to be able to build components.
This is usefull to have separate deb/rpm files as example for seperate gui components (if you have qml you dont need to have gtk installed)
But to handle this we need to set the dependencies in the main CMakeList.txt (arround line 820)

 Finish dependencies for Debian
 Set dependencies for rpm
 More work into NSIS (nicer layout for example
 ...","I agree that we should keep it simple, but what about dependencies?
If you install the graphics-gtk plugin, it should pull GTK but not QT, and vice versa. I'm not sure that we can provide that without multiple sub-package.

Yes, that makes sense. Debian does something similar. For us, maybe:

main package
GTK package  (with gui/gtk and graphics/gtk and gui/internal)
Qt package (with graphics/qt5 and the internal and QML GUI) s",True,"{'THUMBS_UP': ['https://github.com/pgrandin', 'https://github.com/aerostitch']}"
navit-gps/navit,https://github.com/navit-gps/navit,309,2017-08-25T14:31:24Z,2018-09-23T17:19:08Z,2019-06-14T05:59:49Z,CLOSED,False,158,95,61,https://github.com/jkoan,WIP: Cmake rework,8,['build system'],https://github.com/navit-gps/navit/pull/309,https://github.com/jkoan,7,https://github.com/navit-gps/navit/pull/309#issuecomment-365420995,"Another time the Rework of cmake/cpack to be able to build components.
This is usefull to have separate deb/rpm files as example for seperate gui components (if you have qml you dont need to have gtk installed)
But to handle this we need to set the dependencies in the main CMakeList.txt (arround line 820)

 Finish dependencies for Debian
 Set dependencies for rpm
 More work into NSIS (nicer layout for example
 ...","Hi @sleske,
@pgrandin and I discussed in the IRC and have the same opinion. More packages are better than fewer packages.
The reasons for that are easy:

More packages are bringing more flexibility
More packages are no problem when using package manages (which is planed with #366)
For debugging you don't need to actually install navit
If you really want a all in one package you can even build it by setting cpack to all in one (CPACK_MONOLITHIC_INSTALL)

So my conclusion is that navit is a extremely modular platform which should also be treated modular.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,309,2017-08-25T14:31:24Z,2018-09-23T17:19:08Z,2019-06-14T05:59:49Z,CLOSED,False,158,95,61,https://github.com/jkoan,WIP: Cmake rework,8,['build system'],https://github.com/navit-gps/navit/pull/309,https://github.com/aerostitch,8,https://github.com/navit-gps/navit/pull/309#issuecomment-376987755,"Another time the Rework of cmake/cpack to be able to build components.
This is usefull to have separate deb/rpm files as example for seperate gui components (if you have qml you dont need to have gtk installed)
But to handle this we need to set the dependencies in the main CMakeList.txt (arround line 820)

 Finish dependencies for Debian
 Set dependencies for rpm
 More work into NSIS (nicer layout for example
 ...","For a smooth upgrade we need the current main package to still brings what it brings now by making it a virtual package.
As discussed on irc, I'd say we need  navit, navit-minimal, navit-bindings, then merge the gui, graphics, speech and vehicles that are not in code into 1 package for each graphics system. Main map drivers in core and specific ones in a plugin package, maybe also split j580 and pedestrian in their own packages
like navit-plugin-j580",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,309,2017-08-25T14:31:24Z,2018-09-23T17:19:08Z,2019-06-14T05:59:49Z,CLOSED,False,158,95,61,https://github.com/jkoan,WIP: Cmake rework,8,['build system'],https://github.com/navit-gps/navit/pull/309,https://github.com/jkoan,9,https://github.com/navit-gps/navit/pull/309#issuecomment-423832256,"Another time the Rework of cmake/cpack to be able to build components.
This is usefull to have separate deb/rpm files as example for seperate gui components (if you have qml you dont need to have gtk installed)
But to handle this we need to set the dependencies in the main CMakeList.txt (arround line 820)

 Finish dependencies for Debian
 Set dependencies for rpm
 More work into NSIS (nicer layout for example
 ...",Close this one again because it needs to be redone again,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,310,2017-09-01T01:13:15Z,2017-09-05T17:07:07Z,2017-09-05T17:08:24Z,MERGED,True,376,716,20,https://github.com/pgrandin,Upgrade to CircleCI v2,60,[],https://github.com/navit-gps/navit/pull/310,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/310,"This PR allows us to upgrade to Circle CI v2.
This has a few benefits :

each build step is now independent and can be run completely separated from the previous one (in v1, we would break the build scripts between different containers, but a single container would execute several build scripts).
we can chain jobs for better testing : build a linux test image, and use that image to perform various regression tests. The workflow feature in v2 is quite powerful https://circleci.com/docs/2.0/workflows/
allows us to restart a single step instead of restarting the full build
allows us to choose on what image (OS) we will build instead of being limited to Ubuntu 12.04/Ubuntu 14.04

Example view from the workflow result :

We still need to fix the android_x86 build, but all other builds are working.","This PR allows us to upgrade to Circle CI v2.
This has a few benefits :

each build step is now independent and can be run completely separated from the previous one (in v1, we would break the build scripts between different containers, but a single container would execute several build scripts).
we can chain jobs for better testing : build a linux test image, and use that image to perform various regression tests. The workflow feature in v2 is quite powerful https://circleci.com/docs/2.0/workflows/
allows us to restart a single step instead of restarting the full build
allows us to choose on what image (OS) we will build instead of being limited to Ubuntu 12.04/Ubuntu 14.04

Example view from the workflow result :

We still need to fix the android_x86 build, but all other builds are working.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,310,2017-09-01T01:13:15Z,2017-09-05T17:07:07Z,2017-09-05T17:08:24Z,MERGED,True,376,716,20,https://github.com/pgrandin,Upgrade to CircleCI v2,60,[],https://github.com/navit-gps/navit/pull/310,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/310#issuecomment-326462284,"This PR allows us to upgrade to Circle CI v2.
This has a few benefits :

each build step is now independent and can be run completely separated from the previous one (in v1, we would break the build scripts between different containers, but a single container would execute several build scripts).
we can chain jobs for better testing : build a linux test image, and use that image to perform various regression tests. The workflow feature in v2 is quite powerful https://circleci.com/docs/2.0/workflows/
allows us to restart a single step instead of restarting the full build
allows us to choose on what image (OS) we will build instead of being limited to Ubuntu 12.04/Ubuntu 14.04

Example view from the workflow result :

We still need to fix the android_x86 build, but all other builds are working.","In case someone wants to help fix the android x86 build, here's the current failure:
Building C object navit/support/wordexp/CMakeFiles/support_wordexp.dir/wordexp.c.o
In file included from /root/project/navit/navit/support/zlib/crc32.c:29:0:
/root/project/navit/navit/support/zlib/zutil.h:23:22: fatal error: string.h: No such file or directory
 #  include <string.h>
                      ^
compilation terminated.
Scanning dependencies of target support_shapefile
Built target navit_config_xml
/root/project/navit/navit/support/ezxml/ezxml.c:25:20: fatal error: stdlib.h: No such file or directory
 #include <stdlib.h>
                    ^
compilation terminated.
[  1%] [  1%] In file included from /usr/lib/gcc/x86_64-linux-gnu/4.8/include-fixed/syslimits.h:7:0,
                 from /usr/lib/gcc/x86_64-linux-gnu/4.8/include-fixed/limits.h:34,
                 from /root/project/navit/navit/fib-1.1/fib.c:33:
/usr/lib/gcc/x86_64-linux-gnu/4.8/include-fixed/limits.h:168:61: error: no include path in which to search for limits.h
 #include_next <limits.h>  /* recurse down to the real one */
                                                             ^
/root/project/navit/navit/fib-1.1/fib.c:34:20: fatal error: stdlib.h: No such file or directory
 #include <stdlib.h>
                    ^
compilation terminated.

So I'm guessing that it's a missing include for the NDK ( see https://circleci.com/gh/navit-gps/navit/2514 for the full details )",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,311,2017-09-05T22:28:59Z,2017-09-08T08:53:52Z,2018-04-20T11:32:58Z,CLOSED,False,200,2,8,https://github.com/pgrandin,"Revert ""Repo cleanup""",2,[],https://github.com/navit-gps/navit/pull/311,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/311,"Reverts #308
This breaks some external builds","Reverts #308
This breaks some external builds",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,311,2017-09-05T22:28:59Z,2017-09-08T08:53:52Z,2018-04-20T11:32:58Z,CLOSED,False,200,2,8,https://github.com/pgrandin,"Revert ""Repo cleanup""",2,[],https://github.com/navit-gps/navit/pull/311,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/311#issuecomment-327346772,"Reverts #308
This breaks some external builds",@jkoan let's talk about a better strategy to address this. @hoehnp found that it was breaking external packages such as Gentoo's ebuilds.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,311,2017-09-05T22:28:59Z,2017-09-08T08:53:52Z,2018-04-20T11:32:58Z,CLOSED,False,200,2,8,https://github.com/pgrandin,"Revert ""Repo cleanup""",2,[],https://github.com/navit-gps/navit/pull/311,https://github.com/jkoan,3,https://github.com/navit-gps/navit/pull/311#issuecomment-327385944,"Reverts #308
This breaks some external builds","@hoehnp @pgrandin I understand that builds should work, but if the external builds are depending on Files that are waste probably not our project is broken. Instead of this the probability they build navit a wrong way.
Don't get me wrong, I also want that all builds of navit in the world are working, but if they depend on something outdated it's not our fault.
Think of the switch from autotools to cmake. If we say that everything that was working some time should work always in the future we can not change anything.
We must work together with all the people who are building navit or do something with navit but we can't revert every change that's made on navit only because external things are not in sync.
Although the deleted files are no big change, so we can analyze what exactly brakes the external build and revert that. Probably it's that the build depend on the ""README"" instead of the ""README.md"" ore something like that.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,311,2017-09-05T22:28:59Z,2017-09-08T08:53:52Z,2018-04-20T11:32:58Z,CLOSED,False,200,2,8,https://github.com/pgrandin,"Revert ""Repo cleanup""",2,[],https://github.com/navit-gps/navit/pull/311,https://github.com/hoehnp,4,https://github.com/navit-gps/navit/pull/311#issuecomment-327386929,"Reverts #308
This breaks some external builds","@jkoan. This is indeed the case. Both ebuilds reference to a README file and dont find it. For me, it is just unfortunate that I do not hv acces to the two repositories. For now, I could suggest to see, if their repo is on Github or somewhere and I send them a pull-request with that small update. In case you think bringing back the README file is a bad idea.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,311,2017-09-05T22:28:59Z,2017-09-08T08:53:52Z,2018-04-20T11:32:58Z,CLOSED,False,200,2,8,https://github.com/pgrandin,"Revert ""Repo cleanup""",2,[],https://github.com/navit-gps/navit/pull/311,https://github.com/sleske,5,https://github.com/navit-gps/navit/pull/311#issuecomment-327470498,"Reverts #308
This breaks some external builds","I'm a bit late to the discussion, but just an idea: As far as I understand, GitHub will also use a file called just ""README"" as the readme file. README.md is preferred if it exists, but is not required.
So why don't we just rename the new README.md to README? Then we get a nice display on GitHub, and a README file for other environments.
We don't have to give the file a .md extension just because it contains Markdown.
At any rate, please don't merge this PR and revert all the changes from 308 if the only problem is the README file. That feels like throwing the baby out with the bathwater...",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,311,2017-09-05T22:28:59Z,2017-09-08T08:53:52Z,2018-04-20T11:32:58Z,CLOSED,False,200,2,8,https://github.com/pgrandin,"Revert ""Repo cleanup""",2,[],https://github.com/navit-gps/navit/pull/311,https://github.com/jkoan,6,https://github.com/navit-gps/navit/pull/311#issuecomment-327474517,"Reverts #308
This breaks some external builds",I like this idea!,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,311,2017-09-05T22:28:59Z,2017-09-08T08:53:52Z,2018-04-20T11:32:58Z,CLOSED,False,200,2,8,https://github.com/pgrandin,"Revert ""Repo cleanup""",2,[],https://github.com/navit-gps/navit/pull/311,https://github.com/metalstrolch,7,https://github.com/navit-gps/navit/pull/311#issuecomment-327476453,"Reverts #308
This breaks some external builds",I too like the Idea,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,311,2017-09-05T22:28:59Z,2017-09-08T08:53:52Z,2018-04-20T11:32:58Z,CLOSED,False,200,2,8,https://github.com/pgrandin,"Revert ""Repo cleanup""",2,[],https://github.com/navit-gps/navit/pull/311,https://github.com/sleske,8,https://github.com/navit-gps/navit/pull/311#issuecomment-327552870,"Reverts #308
This breaks some external builds","Done, see commit 3299ac4.
I'm closing this PR; feel free to reopen if more problems occur.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,311,2017-09-05T22:28:59Z,2017-09-08T08:53:52Z,2018-04-20T11:32:58Z,CLOSED,False,200,2,8,https://github.com/pgrandin,"Revert ""Repo cleanup""",2,[],https://github.com/navit-gps/navit/pull/311,https://github.com/sleske,9,https://github.com/navit-gps/navit/pull/311#issuecomment-327634770,"Reverts #308
This breaks some external builds","Hmm.... no, that does not work. GitHub also recognizes a file ""README"", but does not render it as MarkDown, but as plain text :-(. I have reverted my changes. We'll have to find a better solution.
If all else fails, we can include a placeholder README, which points readers to README.md. A bit ugly, but will do until all builds have been changed.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,311,2017-09-05T22:28:59Z,2017-09-08T08:53:52Z,2018-04-20T11:32:58Z,CLOSED,False,200,2,8,https://github.com/pgrandin,"Revert ""Repo cleanup""",2,[],https://github.com/navit-gps/navit/pull/311,https://github.com/jkoan,10,https://github.com/navit-gps/navit/pull/311#issuecomment-327715345,"Reverts #308
This breaks some external builds","What about a symlink? This should work even with git. I only dont know what windows does with it.
Here is a good explanation of symlinks in git: https://stackoverflow.com/a/954575",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,311,2017-09-05T22:28:59Z,2017-09-08T08:53:52Z,2018-04-20T11:32:58Z,CLOSED,False,200,2,8,https://github.com/pgrandin,"Revert ""Repo cleanup""",2,[],https://github.com/navit-gps/navit/pull/311,https://github.com/sleske,11,https://github.com/navit-gps/navit/pull/311#issuecomment-327950994,"Reverts #308
This breaks some external builds","What about a symlink? This should work even with git. I only dont know what windows does with it.

It does not work on Windows, at least not very well (Windows does have symlinks, but they work differently, and require admin privs). I don't think that approach is worthwhile.
It's probably best if any build scripts that require a README file are updated to point to README.md (like we did for cpack). Debian for example has many packages that contain a README.md in place of a README, so we're not the only ones doing this.
As to breaking Gentoo's ebuilds: If that refers to the ebuild from Gentoo bug 176552 - that looks like a single line change. The ebuild explicitly references ""README"", should be easy to change.
So if there are no objections, I think we should close this PR and let Gentoo update their ebuild. We simply do not have a README file, and playing games with symlinks or copies is not the way to go.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,311,2017-09-05T22:28:59Z,2017-09-08T08:53:52Z,2018-04-20T11:32:58Z,CLOSED,False,200,2,8,https://github.com/pgrandin,"Revert ""Repo cleanup""",2,[],https://github.com/navit-gps/navit/pull/311,https://github.com/hoehnp,12,https://github.com/navit-gps/navit/pull/311#issuecomment-327951284,"Reverts #308
This breaks some external builds",fine with me. I will try to get both Gentoo ebuilds updated.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,311,2017-09-05T22:28:59Z,2017-09-08T08:53:52Z,2018-04-20T11:32:58Z,CLOSED,False,200,2,8,https://github.com/pgrandin,"Revert ""Repo cleanup""",2,[],https://github.com/navit-gps/navit/pull/311,https://github.com/sleske,13,https://github.com/navit-gps/navit/pull/311#issuecomment-328044523,"Reverts #308
This breaks some external builds",Thanks! Then I'll close this PR.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,312,2017-09-10T09:17:02Z,2017-09-20T18:14:05Z,2017-09-20T18:14:05Z,CLOSED,False,5,1,2,https://github.com/trldp,Solve problems when building on Ubuntu 17.04 system,2,[],https://github.com/navit-gps/navit/pull/312,https://github.com/trldp,1,https://github.com/navit-gps/navit/pull/312,"The first commit fixes a problem when building with -Werror=format-security (which is for example commonly used while building debian / ubuntu packages): using fprintf with a string variable instead of a string literal causes an error when building with this option. It is also a bad idea in general, since someone might accidentally call exit_with_error with a string containing a printf format specifier, like exit_with_error(""Some error with a %s"").
The second commit solves a name conflict between the min/max macros defined in util.h, and the min/max functions defined in c++'s  header. This problem appeared while building on an Ubuntu 17.04 system. Of course, there might be more transparent solutions for this than just undefing the macros in util.h (like putting these in another header, or giving these macros another name).","The first commit fixes a problem when building with -Werror=format-security (which is for example commonly used while building debian / ubuntu packages): using fprintf with a string variable instead of a string literal causes an error when building with this option. It is also a bad idea in general, since someone might accidentally call exit_with_error with a string containing a printf format specifier, like exit_with_error(""Some error with a %s"").
The second commit solves a name conflict between the min/max macros defined in util.h, and the min/max functions defined in c++'s  header. This problem appeared while building on an Ubuntu 17.04 system. Of course, there might be more transparent solutions for this than just undefing the macros in util.h (like putting these in another header, or giving these macros another name).",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,312,2017-09-10T09:17:02Z,2017-09-20T18:14:05Z,2017-09-20T18:14:05Z,CLOSED,False,5,1,2,https://github.com/trldp,Solve problems when building on Ubuntu 17.04 system,2,[],https://github.com/navit-gps/navit/pull/312,https://github.com/sleske,2,https://github.com/navit-gps/navit/pull/312#issuecomment-330278667,"The first commit fixes a problem when building with -Werror=format-security (which is for example commonly used while building debian / ubuntu packages): using fprintf with a string variable instead of a string literal causes an error when building with this option. It is also a bad idea in general, since someone might accidentally call exit_with_error with a string containing a printf format specifier, like exit_with_error(""Some error with a %s"").
The second commit solves a name conflict between the min/max macros defined in util.h, and the min/max functions defined in c++'s  header. This problem appeared while building on an Ubuntu 17.04 system. Of course, there might be more transparent solutions for this than just undefing the macros in util.h (like putting these in another header, or giving these macros another name).","Hi, thanks for the PR. I'll have a look.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,312,2017-09-10T09:17:02Z,2017-09-20T18:14:05Z,2017-09-20T18:14:05Z,CLOSED,False,5,1,2,https://github.com/trldp,Solve problems when building on Ubuntu 17.04 system,2,[],https://github.com/navit-gps/navit/pull/312,https://github.com/sleske,3,https://github.com/navit-gps/navit/pull/312#issuecomment-330935827,"The first commit fixes a problem when building with -Werror=format-security (which is for example commonly used while building debian / ubuntu packages): using fprintf with a string variable instead of a string literal causes an error when building with this option. It is also a bad idea in general, since someone might accidentally call exit_with_error with a string containing a printf format specifier, like exit_with_error(""Some error with a %s"").
The second commit solves a name conflict between the min/max macros defined in util.h, and the min/max functions defined in c++'s  header. This problem appeared while building on an Ubuntu 17.04 system. Of course, there might be more transparent solutions for this than just undefing the macros in util.h (like putting these in another header, or giving these macros another name).","Thank you for the fixes. I have reworked your second commit - the macros max/min aren't even used, so I have removed them. Committed as d1da0aa.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,313,2017-09-12T21:52:09Z,2017-09-16T23:32:11Z,2017-09-16T23:32:16Z,MERGED,True,140,19,8,https://github.com/pgrandin,Coverity upgrade,10,[],https://github.com/navit-gps/navit/pull/313,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/313,Update coverity tools to 2017.07 and adapt the relevant script to circleci v2,Update coverity tools to 2017.07 and adapt the relevant script to circleci v2,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,314,2017-09-25T08:57:28Z,2017-09-27T16:58:11Z,2017-09-27T16:58:11Z,MERGED,True,17,15,3,https://github.com/naggety,Patch:core:More Talker IDs other than GP accepted,1,[],https://github.com/navit-gps/navit/pull/314,https://github.com/naggety,1,https://github.com/navit-gps/navit/pull/314,"NMEA messages starts with '$' followed by 2 digits that indicates
the Talker ID. The most common was GP for GPS, but now many modules
can use other satellites systems or even 2 systems at the same time.
Other Talker IDs are:

GL:russian GLONASS
GA: european Galileo
BD: chinesse BeiDu
GN: Global Navigation: a combination of 2 or more systems.","NMEA messages starts with '$' followed by 2 digits that indicates
the Talker ID. The most common was GP for GPS, but now many modules
can use other satellites systems or even 2 systems at the same time.
Other Talker IDs are:

GL:russian GLONASS
GA: european Galileo
BD: chinesse BeiDu
GN: Global Navigation: a combination of 2 or more systems.",True,"{'THUMBS_UP': ['https://github.com/jkoan', 'https://github.com/pgrandin']}"
navit-gps/navit,https://github.com/navit-gps/navit,314,2017-09-25T08:57:28Z,2017-09-27T16:58:11Z,2017-09-27T16:58:11Z,MERGED,True,17,15,3,https://github.com/naggety,Patch:core:More Talker IDs other than GP accepted,1,[],https://github.com/navit-gps/navit/pull/314,https://github.com/sleske,2,https://github.com/navit-gps/navit/pull/314#issuecomment-331841158,"NMEA messages starts with '$' followed by 2 digits that indicates
the Talker ID. The most common was GP for GPS, but now many modules
can use other satellites systems or even 2 systems at the same time.
Other Talker IDs are:

GL:russian GLONASS
GA: european Galileo
BD: chinesse BeiDu
GN: Global Navigation: a combination of 2 or more systems.","Thank you for the PR.
Could you give some background on why this is necessary? Did you find a GPS device that uses a talker ID different from ""GP""?
I cannot personally test this, not having a GPS device handy, so some details would be appreciated.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,314,2017-09-25T08:57:28Z,2017-09-27T16:58:11Z,2017-09-27T16:58:11Z,MERGED,True,17,15,3,https://github.com/naggety,Patch:core:More Talker IDs other than GP accepted,1,[],https://github.com/navit-gps/navit/pull/314,https://github.com/naggety,3,https://github.com/navit-gps/navit/pull/314#issuecomment-331852573,"NMEA messages starts with '$' followed by 2 digits that indicates
the Talker ID. The most common was GP for GPS, but now many modules
can use other satellites systems or even 2 systems at the same time.
Other Talker IDs are:

GL:russian GLONASS
GA: european Galileo
BD: chinesse BeiDu
GN: Global Navigation: a combination of 2 or more systems.","Hi!


My GPS module has the capability to read signals from GPS, GLONASS, Galileo and BeiDu positioning systems.


This is the module: http://www.telit.com/gnss/sc872-a/

This is the manual: http://www.telit.com/fileadmin/user_upload/products/Downloads/GNSS/se868aas/1VV0301202_SC872-A_Product_User_Guide_r3.pdf


I can send propietary commands (NMEA compatible) to the module to select which system I want to use. It is also possible to activate GPS and GLONASS at the same time, improving accuracy, satellites coverage... In this case the talker ID sent is GN.


Looking for more info about Talker IDs, I couldn't find a lot of info, maybe this is the best one: http://www.catb.org/gpsd/NMEA.html#_talker_ids


About GN talker ID, it seems that is commonly used by many modules when they use more than one positioning system at the same time to do the calculations (including combinations other than GPS + GLONASS). I haven't been able to confirm this, but it seems to be as I say. You can search for info about GNSS and GN talker ID, maybe you are luckier.


I have also been looking if there are modules that sends data from more than one system but sending a message for each one of them, instead a combined one with GN talker ID. My module doesn't allow to do that, and I think it would be a violation of NMEA specs, since it is defined as a 'single talker, multiple listeners' protocol.


Because of this, I think it is safe to ignore the talker ID, because only one talker ID is going to be received for position and speed messages.



Additional info not very important for this pull request:


The calculation of position, speed, etc can be combined (using GN Talker ID), but the message of satellites view is sent once per system.


For example, if GPS and GLONASS are being used, position message is sent as $GNGGA, but satellites view messages are sent as $GPGSV and $GLGSV (one for GPS satellites and one for GLONASS satellites). At least, my module does it this way, I can't test if other modules work the same way.


Because of this, the info about satellites collected by navit should be modified. Now it only collects info about GPS satellites.


I intended to correct this in a future patch.




Please, tell me if you need more info or clarification.


Regards

Iñigo
…
________________________________
De: Sebastian Leske <notifications@github.com>
Enviado: lunes, 25 de septiembre de 2017 12:28:17
Para: navit-gps/navit
Cc: naggety; Author
Asunto: Re: [navit-gps/navit] Patch:core:More Talker IDs other than GP accepted (#314)


Thank you for the PR.

Could you give some background on why this is necessary? Did you find a GPS device that uses a talker ID different from ""GP""?

I cannot personally test this, not having a GPS device handy, so some details would be appreciated.

—
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub<#314 (comment)>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADWWv1Yy5voPHGCuclzVK1ARILzNRNWCks5sl4BBgaJpZM4PiZvh>.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,314,2017-09-25T08:57:28Z,2017-09-27T16:58:11Z,2017-09-27T16:58:11Z,MERGED,True,17,15,3,https://github.com/naggety,Patch:core:More Talker IDs other than GP accepted,1,[],https://github.com/navit-gps/navit/pull/314,https://github.com/sleske,4,https://github.com/navit-gps/navit/pull/314#issuecomment-332429978,"NMEA messages starts with '$' followed by 2 digits that indicates
the Talker ID. The most common was GP for GPS, but now many modules
can use other satellites systems or even 2 systems at the same time.
Other Talker IDs are:

GL:russian GLONASS
GA: european Galileo
BD: chinesse BeiDu
GN: Global Navigation: a combination of 2 or more systems.","Thank you for the long explanation. I think we can merge the change.
About the indentation problems: I can cherry-pick the change. Then I can fix the indentation in the process, and add some of the excellent information to the commit message. I'll try to do this shortly.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,315,2017-09-29T20:23:00Z,2017-11-06T19:19:51Z,2017-11-06T19:19:51Z,CLOSED,False,0,0,0,https://github.com/jkoan,Disable some things,0,[],https://github.com/navit-gps/navit/pull/315,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/315,"Disable support for things that are not needed inside the android app
Disable ""mg"" in general because its unmaintained","Disable support for things that are not needed inside the android app
Disable ""mg"" in general because its unmaintained",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,315,2017-09-29T20:23:00Z,2017-11-06T19:19:51Z,2017-11-06T19:19:51Z,CLOSED,False,0,0,0,https://github.com/jkoan,Disable some things,0,[],https://github.com/navit-gps/navit/pull/315,https://github.com/sleske,2,https://github.com/navit-gps/navit/pull/315#issuecomment-342011858,"Disable support for things that are not needed inside the android app
Disable ""mg"" in general because its unmaintained","Disabling map/mg and the ""null"" drivers for Android makes sense - I don't think anyone uses them. I would keep shapefile for now - it's only 164 kiB (or about 1% or the Navit APK).
At any rate, I strongly object to globally disabling map/mg - either we keep building it, or we delete it. Keeping it in the source tree but not building it will probably cause it to break, so we might as well delete it.
Actually, deleting it might be the best option - while it is historically important (it was Navit's first map driver), the maps it can read are proprietary and no longer available (not to mention over ten years old). Or is there a reason to keep them?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,315,2017-09-29T20:23:00Z,2017-11-06T19:19:51Z,2017-11-06T19:19:51Z,CLOSED,False,0,0,0,https://github.com/jkoan,Disable some things,0,[],https://github.com/navit-gps/navit/pull/315,https://github.com/jkoan,3,https://github.com/navit-gps/navit/pull/315#issuecomment-342065185,"Disable support for things that are not needed inside the android app
Disable ""mg"" in general because its unmaintained",Hi @sleske thanks for your opinion. I will delete map/mg after this PR has been merged. Therefor i will open another PR. About Android im Okay. Update will come in a short time.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,316,2017-09-30T19:27:39Z,2017-10-04T16:36:27Z,2017-10-04T16:36:36Z,MERGED,True,697,89,20,https://github.com/pgrandin,Update:QML2:Various updates on the QML2 UI,35,[],https://github.com/navit-gps/navit/pull/316,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/316,Some bugfixes and expanded the settings menu,Some bugfixes and expanded the settings menu,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,317,2017-10-12T19:39:26Z,2017-10-12T22:04:05Z,2017-10-12T22:23:52Z,MERGED,True,115,0,1,https://github.com/youte62,autoservice,1,[],https://github.com/navit-gps/navit/pull/317,https://github.com/youte62,1,https://github.com/navit-gps/navit/pull/317,this PR adds a missing icon for autoservice,this PR adds a missing icon for autoservice,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,318,2017-10-12T19:40:03Z,2017-10-12T22:23:31Z,2017-10-12T22:23:41Z,MERGED,True,121,0,1,https://github.com/youte62,Icon bowling,3,[],https://github.com/navit-gps/navit/pull/318,https://github.com/youte62,1,https://github.com/navit-gps/navit/pull/318,this PR adds a missing icon for bowling,this PR adds a missing icon for bowling,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,319,2017-10-12T19:40:26Z,2017-10-13T03:14:00Z,2017-10-14T21:20:27Z,MERGED,True,157,0,1,https://github.com/youte62,Icon bridge,5,[],https://github.com/navit-gps/navit/pull/319,https://github.com/youte62,1,https://github.com/navit-gps/navit/pull/319,this PR adds a missing icon for bridge,this PR adds a missing icon for bridge,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,319,2017-10-12T19:40:26Z,2017-10-13T03:14:00Z,2017-10-14T21:20:27Z,MERGED,True,157,0,1,https://github.com/youte62,Icon bridge,5,[],https://github.com/navit-gps/navit/pull/319,https://github.com/sleske,2,https://github.com/navit-gps/navit/pull/319#issuecomment-336536249,this PR adds a missing icon for bridge,@pgrandin : Thanks for merging. Just out of curiosity: How did you merge this PR? Did you cherry-pick commit b929a33  (into c0213c4 in trunk)? And how did you convince GItHub to show this PR as merged?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,319,2017-10-12T19:40:26Z,2017-10-13T03:14:00Z,2017-10-14T21:20:27Z,MERGED,True,157,0,1,https://github.com/youte62,Icon bridge,5,[],https://github.com/navit-gps/navit/pull/319,https://github.com/pgrandin,3,https://github.com/navit-gps/navit/pull/319#issuecomment-336665447,this PR adds a missing icon for bridge,"@sleske np. I used the squash and merge feature. You're right, I should have cherry picked. Will do next time, thanks!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,319,2017-10-12T19:40:26Z,2017-10-13T03:14:00Z,2017-10-14T21:20:27Z,MERGED,True,157,0,1,https://github.com/youte62,Icon bridge,5,[],https://github.com/navit-gps/navit/pull/319,https://github.com/sleske,4,https://github.com/navit-gps/navit/pull/319#issuecomment-336668254,this PR adds a missing icon for bridge,"@pgrandin Ah, interesting. Actually, squash&merge seems to have worked fine. Cherry-pick would probably also work, but it looks fine the way it is. Also, if you cherry-pick manually, I think GitHub will not show the PR as merged, which is a bit annoying.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,320,2017-10-13T13:05:28Z,2017-10-13T18:04:56Z,2017-10-13T18:04:56Z,MERGED,True,135,0,1,https://github.com/youte62,Icon carwash,5,[],https://github.com/navit-gps/navit/pull/320,https://github.com/youte62,1,https://github.com/navit-gps/navit/pull/320,add icon carwash - designed by me - free to use,add icon carwash - designed by me - free to use,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,321,2017-10-13T13:36:49Z,2017-10-13T18:06:13Z,2017-10-13T18:06:13Z,MERGED,True,130,0,1,https://github.com/youte62,Icon communication,6,[],https://github.com/navit-gps/navit/pull/321,https://github.com/youte62,1,https://github.com/navit-gps/navit/pull/321,add icon communication - designed by me - free to use,add icon communication - designed by me - free to use,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,322,2017-10-13T13:40:10Z,2017-10-13T18:06:51Z,2017-10-13T18:06:51Z,MERGED,True,147,0,1,https://github.com/youte62,Icon concert,7,[],https://github.com/navit-gps/navit/pull/322,https://github.com/youte62,1,https://github.com/navit-gps/navit/pull/322,add icon concert - designed by me - free to use,add icon concert - designed by me - free to use,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,323,2017-10-13T13:40:40Z,2017-10-13T18:07:27Z,2017-10-14T20:36:02Z,MERGED,True,191,0,1,https://github.com/youte62,Icon crossing,8,[],https://github.com/navit-gps/navit/pull/323,https://github.com/youte62,1,https://github.com/navit-gps/navit/pull/323,add icon crossing - designed by me - free to use,add icon crossing - designed by me - free to use,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,323,2017-10-13T13:40:40Z,2017-10-13T18:07:27Z,2017-10-14T20:36:02Z,MERGED,True,191,0,1,https://github.com/youte62,Icon crossing,8,[],https://github.com/navit-gps/navit/pull/323,https://github.com/sleske,2,https://github.com/navit-gps/navit/pull/323#issuecomment-336559767,add icon crossing - designed by me - free to use,"Hi @youte62 , thanks for your contributions!
One Git hint: Please don't submit multiple PRs from the same branch, as you did here (one for each commit). If you submit a PR from a branch, all commits from that branch will be submitted together anyway. If you have multiple related commits in one branch, one PR is enough. Of course, feel free to submit multiple PRs if you have multiple features to submit, which you developed in separate branches.
Ideally, rebase before submitting the PR to get rid of ""fixup"" commits (but we can to that, too).
Greetings
Sebastian",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,323,2017-10-13T13:40:40Z,2017-10-13T18:07:27Z,2017-10-14T20:36:02Z,MERGED,True,191,0,1,https://github.com/youte62,Icon crossing,8,[],https://github.com/navit-gps/navit/pull/323,https://github.com/pgrandin,3,https://github.com/navit-gps/navit/pull/323#issuecomment-336665572,add icon crossing - designed by me - free to use,"That's valuable tips @sleske thanks.
@youte62 is really new to git and based each new branch on the previous branch instead of trunk. I helped him a bit over IRC and the new PRs for the new icons should be cleaner.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,324,2017-10-14T16:15:11Z,2017-10-16T19:24:02Z,2017-10-18T12:17:38Z,MERGED,True,348,356,1,https://github.com/youte62,add:icon:dam,2,[],https://github.com/navit-gps/navit/pull/324,https://github.com/youte62,1,https://github.com/navit-gps/navit/pull/324,add dam.svg designed by me - free to use,add dam.svg designed by me - free to use,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,324,2017-10-14T16:15:11Z,2017-10-16T19:24:02Z,2017-10-18T12:17:38Z,MERGED,True,348,356,1,https://github.com/youte62,add:icon:dam,2,[],https://github.com/navit-gps/navit/pull/324,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/324#issuecomment-336663016,add dam.svg designed by me - free to use,Looking good. Thanks!,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,324,2017-10-14T16:15:11Z,2017-10-16T19:24:02Z,2017-10-18T12:17:38Z,MERGED,True,348,356,1,https://github.com/youte62,add:icon:dam,2,[],https://github.com/navit-gps/navit/pull/324,https://github.com/sleske,3,https://github.com/navit-gps/navit/pull/324#issuecomment-337475544,add dam.svg designed by me - free to use,"Hi, thanks for your icon!
I noticed you submitted numerous icons in the same style, with a big blue bubble around them. I don't think this style will work well for Navit. The big bubble does not convey any information, and causes all icons to look similar. At the moment, icons are resized to 22x22px for the Navit GUI. Your icons become very hard to distinguish at that size.
I resized two of your icons (dam.svg and diving.svg) to 22x22 px, and included one existing icon (viewpoint.svg) for comparison. Note how the viewpoint icon is clearly distinguishable, while the others are not:

Could you consider this in your designs?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,324,2017-10-14T16:15:11Z,2017-10-16T19:24:02Z,2017-10-18T12:17:38Z,MERGED,True,348,356,1,https://github.com/youte62,add:icon:dam,2,[],https://github.com/navit-gps/navit/pull/324,https://github.com/youte62,4,https://github.com/navit-gps/navit/pull/324#issuecomment-337476425,add dam.svg designed by me - free to use,"Hello. The icon on 22px is an error. The other size is 200px

Le 18 oct. 2017 08:42, ""Sebastian Leske"" <notifications@github.com> a
écrit :
…
 Hi, thanks for your icon!
 I noticed you submitted numerous icons in the same style, with a big blue
 bubble around them. I don't think this style will work well for Navit. The
 big bubble does not convey any information, and causes all icons to look
 similar. At the moment, icons are resized to 22x22px for the Navit GUI.
 Your icons become very hard to distinguish at that size.

 I resized two of your icons (dam.svg and diving.svg) to 22x22 px, and
 included one existing icon (viewpoint.svg) for comparison. Note how the
 viewpoint icon is clearly distinguishable, while the others are not:
 [image: dam-diving-viewpoint]
 <https://user-images.githubusercontent.com/1101993/31704117-2ba7a26c-b3e0-11e7-9b17-7ad741e43016.png>

 Could you consider this in your designs?

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#324 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AGW0NeKnMDZ6RS4FnMTf5jPcKFgYoI0Wks5stZ3vgaJpZM4P5brf>
 .",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,324,2017-10-14T16:15:11Z,2017-10-16T19:24:02Z,2017-10-18T12:17:38Z,MERGED,True,348,356,1,https://github.com/youte62,add:icon:dam,2,[],https://github.com/navit-gps/navit/pull/324,https://github.com/metalstrolch,5,https://github.com/navit-gps/navit/pull/324#issuecomment-337517225,add dam.svg designed by me - free to use,"I can clearly second the concerns of @sleske . See the attached screenshot of navit on Sailfish jolla, where you cannot notice the blue bubble beeing the ""drinking water"" icon at 15x15, while the ""old"" icons are clearly distinguishable. We could opt at increasing the icons to 20x20 again as was the default previously, but icons as big as 200x200 would clearly clobber the small screen.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,324,2017-10-14T16:15:11Z,2017-10-16T19:24:02Z,2017-10-18T12:17:38Z,MERGED,True,348,356,1,https://github.com/youte62,add:icon:dam,2,[],https://github.com/navit-gps/navit/pull/324,https://github.com/metalstrolch,6,https://github.com/navit-gps/navit/pull/324#issuecomment-337522346,add dam.svg designed by me - free to use,Just for fun: the same icon at 200x200,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,324,2017-10-14T16:15:11Z,2017-10-16T19:24:02Z,2017-10-18T12:17:38Z,MERGED,True,348,356,1,https://github.com/youte62,add:icon:dam,2,[],https://github.com/navit-gps/navit/pull/324,https://github.com/metalstrolch,7,https://github.com/navit-gps/navit/pull/324#issuecomment-337525518,add dam.svg designed by me - free to use,The style does not work well in POI lists as well. There the pointing bubble makes no sense at all. I would just get rid of the bubble and keep the symbols inside them. If they get a contrast (white border around dark symbol) they could work quite well.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,324,2017-10-14T16:15:11Z,2017-10-16T19:24:02Z,2017-10-18T12:17:38Z,MERGED,True,348,356,1,https://github.com/youte62,add:icon:dam,2,[],https://github.com/navit-gps/navit/pull/324,https://github.com/sleske,8,https://github.com/navit-gps/navit/pull/324#issuecomment-337571120,add dam.svg designed by me - free to use,"@metalstrolch :

The style does not work well in POI lists as well. There the pointing bubble makes no sense at all. I would just get rid of the bubble and keep the symbols inside them.

Yes, that's what I wanted to say. The bubble is a) problematic due to the small icon size, and b) does not make sense in the context we use the icons.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,324,2017-10-14T16:15:11Z,2017-10-16T19:24:02Z,2017-10-18T12:17:38Z,MERGED,True,348,356,1,https://github.com/youte62,add:icon:dam,2,[],https://github.com/navit-gps/navit/pull/324,https://github.com/sleske,9,https://github.com/navit-gps/navit/pull/324#issuecomment-337571559,add dam.svg designed by me - free to use,"@youte62:

Hello. The icon on 22px is an error. The other size is 200px

Sorry, I think there's a misunderstanding. 22px is the size that Navit uses on the map (and it would be tricky to change that). All icons are automatically resized to that size. Or what do you mean by ""the other size""?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,325,2017-10-14T16:15:55Z,2017-10-16T19:24:49Z,2017-10-16T19:24:49Z,MERGED,True,117,212,1,https://github.com/youte62,add:icon:drinking_water,2,[],https://github.com/navit-gps/navit/pull/325,https://github.com/youte62,1,https://github.com/navit-gps/navit/pull/325,add drinking_water.svg designed by me - free to use,add drinking_water.svg designed by me - free to use,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,326,2017-10-14T16:16:29Z,2017-11-04T16:26:46Z,2017-11-04T16:26:46Z,MERGED,True,75,460,1,https://github.com/youte62,add emergency.svg designed by me - free to use,3,[],https://github.com/navit-gps/navit/pull/326,https://github.com/youte62,1,https://github.com/navit-gps/navit/pull/326,add emergency.svg designed by me - free to use,add emergency.svg designed by me - free to use,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,327,2017-10-14T16:16:57Z,2018-02-09T13:35:39Z,2018-02-09T13:35:39Z,MERGED,True,112,0,1,https://github.com/youte62,add:icon:danger_area,5,[],https://github.com/navit-gps/navit/pull/327,https://github.com/youte62,1,https://github.com/navit-gps/navit/pull/327,add danger_area.svg designed by me - free to use,add danger_area.svg designed by me - free to use,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,327,2017-10-14T16:16:57Z,2018-02-09T13:35:39Z,2018-02-09T13:35:39Z,MERGED,True,112,0,1,https://github.com/youte62,add:icon:danger_area,5,[],https://github.com/navit-gps/navit/pull/327,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/327#issuecomment-364435140,add danger_area.svg designed by me - free to use,"CI looks (obviously) ok, so I will merge this now as @metalstrolch approved it already",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,328,2017-10-14T16:17:27Z,2018-04-20T18:56:02Z,2018-04-20T23:21:58Z,CLOSED,False,134,0,1,https://github.com/youte62,add:icon:dangerous,2,['icons'],https://github.com/navit-gps/navit/pull/328,https://github.com/youte62,1,https://github.com/navit-gps/navit/pull/328,add dangerous.svg designed by me - free to use,add dangerous.svg designed by me - free to use,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,328,2017-10-14T16:17:27Z,2018-04-20T18:56:02Z,2018-04-20T23:21:58Z,CLOSED,False,134,0,1,https://github.com/youte62,add:icon:dangerous,2,['icons'],https://github.com/navit-gps/navit/pull/328,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/328#issuecomment-348932076,add dangerous.svg designed by me - free to use,"I would have a look on european pictograms for danger areas like this one: https://de.wikipedia.org/wiki/Datei:DIN_4844-2_D-P006.svg
Think that could work quite well.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,328,2017-10-14T16:17:27Z,2018-04-20T18:56:02Z,2018-04-20T23:21:58Z,CLOSED,False,134,0,1,https://github.com/youte62,add:icon:dangerous,2,['icons'],https://github.com/navit-gps/navit/pull/328,https://github.com/pgrandin,3,https://github.com/navit-gps/navit/pull/328#issuecomment-383190434,add dangerous.svg designed by me - free to use,"Too long without updates, closing the PR.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,329,2017-10-14T16:18:06Z,2017-10-16T19:25:47Z,2017-10-16T19:25:47Z,MERGED,True,256,0,1,https://github.com/youte62,add:icon:diving,2,[],https://github.com/navit-gps/navit/pull/329,https://github.com/youte62,1,https://github.com/navit-gps/navit/pull/329,add diving.svg designed by me - free to use,add diving.svg designed by me - free to use,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,330,2017-10-14T16:21:23Z,2017-11-04T17:33:25Z,2017-11-04T17:33:25Z,MERGED,True,124,0,1,https://github.com/youte62,add:icon:fish,1,[],https://github.com/navit-gps/navit/pull/330,https://github.com/youte62,1,https://github.com/navit-gps/navit/pull/330,add fish.svg designed by me - free to use,add fish.svg designed by me - free to use,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,331,2017-10-14T17:09:47Z,2018-02-13T12:19:14Z,2018-02-13T12:19:14Z,MERGED,True,118,0,1,https://github.com/youte62,add:icon:forbiden_area,4,[],https://github.com/navit-gps/navit/pull/331,https://github.com/youte62,1,https://github.com/navit-gps/navit/pull/331,add forbiden_area.svg designed by me - free to use,add forbiden_area.svg designed by me - free to use,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,332,2017-10-14T17:10:33Z,2017-11-04T16:46:34Z,2017-11-04T16:46:34Z,MERGED,True,124,0,1,https://github.com/youte62,add:icon:ghost_town,1,[],https://github.com/navit-gps/navit/pull/332,https://github.com/youte62,1,https://github.com/navit-gps/navit/pull/332,add ghost_town.svg designed by me - free to use,add ghost_town.svg designed by me - free to use,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,333,2017-10-14T17:12:31Z,2017-12-04T13:32:52Z,2017-12-04T13:32:52Z,MERGED,True,148,0,1,https://github.com/youte62,add:icon:governement_building,4,[],https://github.com/navit-gps/navit/pull/333,https://github.com/youte62,1,https://github.com/navit-gps/navit/pull/333,add governement_building.svg designed by me - free to use,add governement_building.svg designed by me - free to use,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,333,2017-10-14T17:12:31Z,2017-12-04T13:32:52Z,2017-12-04T13:32:52Z,MERGED,True,148,0,1,https://github.com/youte62,add:icon:governement_building,4,[],https://github.com/navit-gps/navit/pull/333,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/333#issuecomment-341910215,add governement_building.svg designed by me - free to use,I wonder if we wouldn't need a white background between the columns for this one.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,334,2017-10-15T14:07:14Z,2018-04-20T18:55:39Z,2018-04-20T23:22:45Z,CLOSED,False,125,0,1,https://github.com/youte62,Add:icon:height,2,['icons'],https://github.com/navit-gps/navit/pull/334,https://github.com/youte62,1,https://github.com/navit-gps/navit/pull/334,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,334,2017-10-15T14:07:14Z,2018-04-20T18:55:39Z,2018-04-20T23:22:45Z,CLOSED,False,125,0,1,https://github.com/youte62,Add:icon:height,2,['icons'],https://github.com/navit-gps/navit/pull/334,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/334#issuecomment-337005264,,"Nice icon, but it looks more like a weight, not 'height' :)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,334,2017-10-15T14:07:14Z,2018-04-20T18:55:39Z,2018-04-20T23:22:45Z,CLOSED,False,125,0,1,https://github.com/youte62,Add:icon:height,2,['icons'],https://github.com/navit-gps/navit/pull/334,https://github.com/metalstrolch,3,https://github.com/navit-gps/navit/pull/334#issuecomment-341649023,,"Technically OK for me, but this kind of ""road sign"" style is unusual outside of the US. Beside that, we have no framework to translate text on icons, have we?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,334,2017-10-15T14:07:14Z,2018-04-20T18:55:39Z,2018-04-20T23:22:45Z,CLOSED,False,125,0,1,https://github.com/youte62,Add:icon:height,2,['icons'],https://github.com/navit-gps/navit/pull/334,https://github.com/pgrandin,4,https://github.com/navit-gps/navit/pull/334#issuecomment-341770554,,"You're right @metalstrolch icon should probably avoid using text as it won't be translated.
Also, I'm actually not sure if we really need this one.
OSM uses maxheight=* for bridge clearance. height is used for building heights, which we currently don't use in Navit : http://wiki.openstreetmap.org/wiki/Key:height
The only reference to the height icon I could find in Navit was in the Garmin types : https://github.com/navit-gps/navit/blob/trunk/navit/map/garmin/garmintypes.txt#L205-L206
Reading that file I am unsure of its usage.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,334,2017-10-15T14:07:14Z,2018-04-20T18:55:39Z,2018-04-20T23:22:45Z,CLOSED,False,125,0,1,https://github.com/youte62,Add:icon:height,2,['icons'],https://github.com/navit-gps/navit/pull/334,https://github.com/pgrandin,5,https://github.com/navit-gps/navit/pull/334#issuecomment-383190347,,"Too long without updates, closing the PR.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,335,2017-10-15T14:08:11Z,2017-11-02T19:15:45Z,2017-11-02T19:15:45Z,MERGED,True,131,0,1,https://github.com/youte62,add:icon:hotspring,2,[],https://github.com/navit-gps/navit/pull/335,https://github.com/youte62,1,https://github.com/navit-gps/navit/pull/335,add icons designed by me - free to use,add icons designed by me - free to use,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,336,2017-10-18T09:47:24Z,2017-10-18T10:09:10Z,2017-10-18T10:09:26Z,MERGED,True,6,2,2,https://github.com/metalstrolch,Sailfish icon size fix,2,[],https://github.com/navit-gps/navit/pull/336,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/336,"Navit medium GUI icon size fix
This changes the medium size icon for HMI to 64x64px. This is necessary
because of changed icon set and therefore different icon default sizes.
Otherwise the icons on POI screen were way too big.","Navit medium GUI icon size fix
This changes the medium size icon for HMI to 64x64px. This is necessary
because of changed icon set and therefore different icon default sizes.
Otherwise the icons on POI screen were way too big.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,336,2017-10-18T09:47:24Z,2017-10-18T10:09:10Z,2017-10-18T10:09:26Z,MERGED,True,6,2,2,https://github.com/metalstrolch,Sailfish icon size fix,2,[],https://github.com/navit-gps/navit/pull/336,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/336#issuecomment-337536998,"Navit medium GUI icon size fix
This changes the medium size icon for HMI to 64x64px. This is necessary
because of changed icon set and therefore different icon default sizes.
Otherwise the icons on POI screen were way too big.","Merging this, as this does not affect anything else than SailfishOS build.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,337,2017-10-22T04:34:46Z,2018-02-13T10:50:36Z,2018-02-13T10:50:36Z,CLOSED,False,0,0,0,https://github.com/youte62,Icon autoservice,3,[],https://github.com/navit-gps/navit/pull/337,https://github.com/youte62,1,https://github.com/navit-gps/navit/pull/337,modify icons designed by me - free to use,modify icons designed by me - free to use,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,337,2017-10-22T04:34:46Z,2018-02-13T10:50:36Z,2018-02-13T10:50:36Z,CLOSED,False,0,0,0,https://github.com/youte62,Icon autoservice,3,[],https://github.com/navit-gps/navit/pull/337,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/337#issuecomment-339154448,modify icons designed by me - free to use,"Force pushed this, removing already merged old commits to resolve conflict.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,337,2017-10-22T04:34:46Z,2018-02-13T10:50:36Z,2018-02-13T10:50:36Z,CLOSED,False,0,0,0,https://github.com/youte62,Icon autoservice,3,[],https://github.com/navit-gps/navit/pull/337,https://github.com/jkoan,3,https://github.com/navit-gps/navit/pull/337#issuecomment-365226767,modify icons designed by me - free to use,Content of this PR already merged (no difference to trunk),True,{}
navit-gps/navit,https://github.com/navit-gps/navit,338,2017-10-22T04:49:13Z,2017-11-04T16:42:09Z,2017-11-04T16:42:09Z,MERGED,True,28,28,1,https://github.com/youte62,Icon bowling,1,[],https://github.com/navit-gps/navit/pull/338,https://github.com/youte62,1,https://github.com/navit-gps/navit/pull/338,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,338,2017-10-22T04:49:13Z,2017-11-04T16:42:09Z,2017-11-04T16:42:09Z,MERGED,True,28,28,1,https://github.com/youte62,Icon bowling,1,[],https://github.com/navit-gps/navit/pull/338,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/338#issuecomment-339152734,,"Force pushed this, removing already merged old commits to resolve conflict.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,339,2017-10-22T04:55:06Z,2017-11-04T16:33:26Z,2017-11-04T16:33:26Z,MERGED,True,55,51,1,https://github.com/youte62,Icon bridge,1,[],https://github.com/navit-gps/navit/pull/339,https://github.com/youte62,1,https://github.com/navit-gps/navit/pull/339,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,339,2017-10-22T04:55:06Z,2017-11-04T16:33:26Z,2017-11-04T16:33:26Z,MERGED,True,55,51,1,https://github.com/youte62,Icon bridge,1,[],https://github.com/navit-gps/navit/pull/339,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/339#issuecomment-339150163,,"Force pushed this, removing already merged old commits to resolve conflict.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,340,2017-10-22T05:01:13Z,2018-02-09T12:46:49Z,2018-02-09T12:46:49Z,MERGED,True,25,23,1,https://github.com/youte62,add:icon:carwash,3,[],https://github.com/navit-gps/navit/pull/340,https://github.com/youte62,1,https://github.com/navit-gps/navit/pull/340,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,341,2017-10-22T05:10:38Z,2017-12-04T10:52:27Z,2017-12-04T10:52:27Z,MERGED,True,64,81,1,https://github.com/youte62,Icon crossing,3,[],https://github.com/navit-gps/navit/pull/341,https://github.com/youte62,1,https://github.com/navit-gps/navit/pull/341,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,341,2017-10-22T05:10:38Z,2017-12-04T10:52:27Z,2017-12-04T10:52:27Z,MERGED,True,64,81,1,https://github.com/youte62,Icon crossing,3,[],https://github.com/navit-gps/navit/pull/341,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/341#issuecomment-339145645,,"Force pushed this, removing already merged old commits to resolve conflict.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,342,2017-10-22T05:11:06Z,2017-11-27T05:01:11Z,2017-11-27T05:01:11Z,MERGED,True,31,48,1,https://github.com/youte62,add:icon:concert,2,[],https://github.com/navit-gps/navit/pull/342,https://github.com/youte62,1,https://github.com/navit-gps/navit/pull/342,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,342,2017-10-22T05:11:06Z,2017-11-27T05:01:11Z,2017-11-27T05:01:11Z,MERGED,True,31,48,1,https://github.com/youte62,add:icon:concert,2,[],https://github.com/navit-gps/navit/pull/342,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/342#issuecomment-339144438,,"Force pushed this, removing already merged old commits to resolve conflict.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,343,2017-10-22T05:11:51Z,2017-11-27T06:18:59Z,2017-11-28T10:45:17Z,MERGED,True,31,28,1,https://github.com/youte62,Icon communication,2,[],https://github.com/navit-gps/navit/pull/343,https://github.com/youte62,1,https://github.com/navit-gps/navit/pull/343,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,343,2017-10-22T05:11:51Z,2017-11-27T06:18:59Z,2017-11-28T10:45:17Z,MERGED,True,31,28,1,https://github.com/youte62,Icon communication,2,[],https://github.com/navit-gps/navit/pull/343,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/343#issuecomment-339143599,,"Force pushed this, removing already merged old commits to resolve conflict.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,343,2017-10-22T05:11:51Z,2017-11-27T06:18:59Z,2017-11-28T10:45:17Z,MERGED,True,31,28,1,https://github.com/youte62,Icon communication,2,[],https://github.com/navit-gps/navit/pull/343,https://github.com/sleske,3,https://github.com/navit-gps/navit/pull/343#issuecomment-347181424,,"@youte62 : I really appreciate all these icons you are creating, however some confuse me a bit. What is the purpose of this icon in Navit? Is it supposed to be shown on the map? In a menu? While it's good to have nice icons, there's little point in including them in Navit without knowing what to use them for. So what is your goal?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,343,2017-10-22T05:11:51Z,2017-11-27T06:18:59Z,2017-11-28T10:45:17Z,MERGED,True,31,28,1,https://github.com/youte62,Icon communication,2,[],https://github.com/navit-gps/navit/pull/343,https://github.com/youte62,4,https://github.com/navit-gps/navit/pull/343#issuecomment-347282699,,"I was asked to create icons missing. What I'm doing, later I do not know where it will be used.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,343,2017-10-22T05:11:51Z,2017-11-27T06:18:59Z,2017-11-28T10:45:17Z,MERGED,True,31,28,1,https://github.com/youte62,Icon communication,2,[],https://github.com/navit-gps/navit/pull/343,https://github.com/sleske,5,https://github.com/navit-gps/navit/pull/343#issuecomment-347484312,,"@youte62 : Thanks for the explanation. I just saw there is actually a POI type ""communication"" in Navit (though it's only used by the Garmin map driver), so we may be able to use the icon.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,344,2017-10-22T05:12:41Z,2017-12-26T11:25:56Z,2017-12-26T11:25:56Z,MERGED,True,166,176,1,https://github.com/youte62,Icon dam,3,[],https://github.com/navit-gps/navit/pull/344,https://github.com/youte62,1,https://github.com/navit-gps/navit/pull/344,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,344,2017-10-22T05:12:41Z,2017-12-26T11:25:56Z,2017-12-26T11:25:56Z,MERGED,True,166,176,1,https://github.com/youte62,Icon dam,3,[],https://github.com/navit-gps/navit/pull/344,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/344#issuecomment-339142679,,"Force pushed this, removing already merged old commits to resolve conflict.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,344,2017-10-22T05:12:41Z,2017-12-26T11:25:56Z,2017-12-26T11:25:56Z,MERGED,True,166,176,1,https://github.com/youte62,Icon dam,3,[],https://github.com/navit-gps/navit/pull/344,https://github.com/metalstrolch,3,https://github.com/navit-gps/navit/pull/344#issuecomment-339164084,,"Looks way better than than previous version in #324. But as mentioned there, think of adding a contrasting colour (either black or white typically, depending on how dark the icon is) outline to the symbols.
Have a look to the screenshots posted by me on #324. On the POI screen, you clearly see the white outline making the mostly black old icons work on the black background.
This is not ""as much"" a problem with this icon, as there is seldom any ""all blue"" background, but it would give more contrast having a, white in this case, outline on a black backgrounded screen.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,344,2017-10-22T05:12:41Z,2017-12-26T11:25:56Z,2017-12-26T11:25:56Z,MERGED,True,166,176,1,https://github.com/youte62,Icon dam,3,[],https://github.com/navit-gps/navit/pull/344,https://github.com/pgrandin,4,https://github.com/navit-gps/navit/pull/344#issuecomment-340672697,,"I rebased @youte62 's branch, and will work with him to fix the other PRs.
Green light for this one?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,344,2017-10-22T05:12:41Z,2017-12-26T11:25:56Z,2017-12-26T11:25:56Z,MERGED,True,166,176,1,https://github.com/youte62,Icon dam,3,[],https://github.com/navit-gps/navit/pull/344,https://github.com/metalstrolch,5,https://github.com/navit-gps/navit/pull/344#issuecomment-341646181,,OK for me. Except i did not mean putting a solid background behind the symbol for outline. But that's OK for now.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,344,2017-10-22T05:12:41Z,2017-12-26T11:25:56Z,2017-12-26T11:25:56Z,MERGED,True,166,176,1,https://github.com/youte62,Icon dam,3,[],https://github.com/navit-gps/navit/pull/344,https://github.com/pgrandin,6,https://github.com/navit-gps/navit/pull/344#issuecomment-341911946,,"I actually like your idea of using an outline instead of a background.
@youte62 what do you think?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,345,2017-10-22T05:14:01Z,2017-10-31T22:57:34Z,2017-10-31T22:57:34Z,MERGED,True,81,101,1,https://github.com/youte62,Icon diving,1,[],https://github.com/navit-gps/navit/pull/345,https://github.com/youte62,1,https://github.com/navit-gps/navit/pull/345,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,345,2017-10-22T05:14:01Z,2017-10-31T22:57:34Z,2017-10-31T22:57:34Z,MERGED,True,81,101,1,https://github.com/youte62,Icon diving,1,[],https://github.com/navit-gps/navit/pull/345,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/345#issuecomment-339142040,,"Force pushed this, removing already merged old commits to resolve conflict.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,346,2017-10-22T05:18:59Z,2017-12-04T08:58:18Z,2017-12-04T08:58:59Z,MERGED,True,26,55,1,https://github.com/youte62,Icon drinking water,7,[],https://github.com/navit-gps/navit/pull/346,https://github.com/youte62,1,https://github.com/navit-gps/navit/pull/346,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,346,2017-10-22T05:18:59Z,2017-12-04T08:58:18Z,2017-12-04T08:58:59Z,MERGED,True,26,55,1,https://github.com/youte62,Icon drinking water,7,[],https://github.com/navit-gps/navit/pull/346,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/346#issuecomment-339141131,,"Force pushed this, removing already merged old commits to resolve conflict.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,346,2017-10-22T05:18:59Z,2017-12-04T08:58:18Z,2017-12-04T08:58:59Z,MERGED,True,26,55,1,https://github.com/youte62,Icon drinking water,7,[],https://github.com/navit-gps/navit/pull/346,https://github.com/metalstrolch,3,https://github.com/navit-gps/navit/pull/346#issuecomment-348899215,,"Getting these changes into trunk, as the ""intermediate"" state in trunk is not good.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,348,2017-10-24T17:26:15Z,2017-10-25T07:49:59Z,2017-10-25T07:50:10Z,MERGED,True,2,1,1,https://github.com/pgrandin,fix:android:moved Taiwan into its own map download entry,1,[],https://github.com/navit-gps/navit/pull/348,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/348,"Split the download block from Japan + Korea + Taiwan into Japan + Korea, and Taiwan in a different block.
Addresses #347","Split the download block from Japan + Korea + Taiwan into Japan + Korea, and Taiwan in a different block.
Addresses #347",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,348,2017-10-24T17:26:15Z,2017-10-25T07:49:59Z,2017-10-25T07:50:10Z,MERGED,True,2,1,1,https://github.com/pgrandin,fix:android:moved Taiwan into its own map download entry,1,[],https://github.com/navit-gps/navit/pull/348,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/348#issuecomment-339245071,"Split the download block from Japan + Korea + Taiwan into Japan + Korea, and Taiwan in a different block.
Addresses #347",I think this is good. :) Mergeing,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,349,2017-10-27T19:04:13Z,2017-11-03T11:45:15Z,2017-11-03T11:45:15Z,CLOSED,False,25,8,2,https://github.com/geoghegan,Testing commit to get WinCE working,7,[],https://github.com/navit-gps/navit/pull/349,https://github.com/geoghegan,1,https://github.com/navit-gps/navit/pull/349,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,349,2017-10-27T19:04:13Z,2017-11-03T11:45:15Z,2017-11-03T11:45:15Z,CLOSED,False,25,8,2,https://github.com/geoghegan,Testing commit to get WinCE working,7,[],https://github.com/navit-gps/navit/pull/349,https://github.com/sleske,2,https://github.com/navit-gps/navit/pull/349#issuecomment-340112881,,"Oh so Windows CE is still alive? Anyway, thanks for the contribution.
One practical thing: Would you consider rebasing your branch and re-submitting? Commits like "" MAKE SURE TO UNDO THIS"" should not be part of a pull request, that's just asking for trouble.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,349,2017-10-27T19:04:13Z,2017-11-03T11:45:15Z,2017-11-03T11:45:15Z,CLOSED,False,25,8,2,https://github.com/geoghegan,Testing commit to get WinCE working,7,[],https://github.com/navit-gps/navit/pull/349,https://github.com/geoghegan,3,https://github.com/navit-gps/navit/pull/349#issuecomment-340548598,,"Yeah @sleske , I'm going to kill this PR if I get everything working (Circle can be a bit... annoying... with WinCE's build chain) in a somewhat sane way.
The WinCE cross compiler hasn't been updated since 2009, so I'm not holding my breath.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,349,2017-10-27T19:04:13Z,2017-11-03T11:45:15Z,2017-11-03T11:45:15Z,CLOSED,False,25,8,2,https://github.com/geoghegan,Testing commit to get WinCE working,7,[],https://github.com/navit-gps/navit/pull/349,https://github.com/geoghegan,4,https://github.com/navit-gps/navit/pull/349#issuecomment-341682074,,Closing PR. MingW32 will need to be compiled from source on a more modern system for this to ticket to be resolved. That amount of development is above my skill level,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,350,2017-10-27T20:08:45Z,2017-11-03T18:04:40Z,2017-11-03T18:04:43Z,MERGED,True,244,257,6,https://github.com/jkoan,fix:android:minor dialog fixes,2,[],https://github.com/navit-gps/navit/pull/350,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/350,This PR contains a fix for dialogs (as shown in the screenshots) and replaces Navit._() with Navit.T() bacuse _ is deprecated.,This PR contains a fix for dialogs (as shown in the screenshots) and replaces Navit._() with Navit.T() bacuse _ is deprecated.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,351,2017-10-29T22:11:16Z,2017-10-30T01:10:52Z,2020-08-18T11:56:09Z,MERGED,True,40,17,1,https://github.com/pgrandin,Update:i18n:Updated Čeština translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/351,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/351,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,352,2017-10-29T22:14:00Z,2017-10-30T01:11:07Z,2020-08-18T11:56:10Z,MERGED,True,47,9,1,https://github.com/pgrandin,Update:i18n:Updated Spanish translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/352,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/352,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,353,2017-10-29T22:15:48Z,2017-10-30T01:11:26Z,2020-08-18T11:56:10Z,MERGED,True,30,7,1,https://github.com/pgrandin,Update:i18n:Updated French (fr) translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/353,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/353,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,354,2017-10-29T23:29:31Z,2017-10-30T01:10:14Z,2017-10-30T01:10:21Z,MERGED,True,35,1,2,https://github.com/aerostitch,Build doxygen doc and push the result to a gh-pages branch,11,[],https://github.com/navit-gps/navit/pull/354,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/354,This way it's available on http://navit-gps.github.io/navit/ and the doxygen.navit-project.org can be used there.,This way it's available on http://navit-gps.github.io/navit/ and the doxygen.navit-project.org can be used there.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,354,2017-10-29T23:29:31Z,2017-10-30T01:10:14Z,2017-10-30T01:10:21Z,MERGED,True,35,1,2,https://github.com/aerostitch,Build doxygen doc and push the result to a gh-pages branch,11,[],https://github.com/navit-gps/navit/pull/354,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/354#issuecomment-340318951,This way it's available on http://navit-gps.github.io/navit/ and the doxygen.navit-project.org can be used there.,Nice work @aerostitch !,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,355,2017-10-30T02:19:16Z,2017-11-24T10:45:55Z,2017-11-24T16:31:11Z,MERGED,True,110,4,2,https://github.com/aerostitch,Proposal: Follow semver rules and update the changelog to make it usable,5,[],https://github.com/navit-gps/navit/pull/355,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/355,"Proposal: use semver and base the changelog on the http://keepachangelog.com/ template.
There's been no release in a long time and I'm not 100% sure if all the changes I put in the current version were totally significant for the current release, but I wanted to have the PR out  to see what you guys think about it.
If you're ok with the principle, I'll continue updating the changelog with the other changes I see.
Maybe we just put the most important ones for this release (currently 617 commits since v0.5.0...) and do more frequent releases in the future which would make the changelog more manageable.","Proposal: use semver and base the changelog on the http://keepachangelog.com/ template.
There's been no release in a long time and I'm not 100% sure if all the changes I put in the current version were totally significant for the current release, but I wanted to have the PR out  to see what you guys think about it.
If you're ok with the principle, I'll continue updating the changelog with the other changes I see.
Maybe we just put the most important ones for this release (currently 617 commits since v0.5.0...) and do more frequent releases in the future which would make the changelog more manageable.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,355,2017-10-30T02:19:16Z,2017-11-24T10:45:55Z,2017-11-24T16:31:11Z,MERGED,True,110,4,2,https://github.com/aerostitch,Proposal: Follow semver rules and update the changelog to make it usable,5,[],https://github.com/navit-gps/navit/pull/355,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/355#issuecomment-340327758,"Proposal: use semver and base the changelog on the http://keepachangelog.com/ template.
There's been no release in a long time and I'm not 100% sure if all the changes I put in the current version were totally significant for the current release, but I wanted to have the PR out  to see what you guys think about it.
If you're ok with the principle, I'll continue updating the changelog with the other changes I see.
Maybe we just put the most important ones for this release (currently 617 commits since v0.5.0...) and do more frequent releases in the future which would make the changelog more manageable.","Nice work @aerostitch ! Thanks for taking care of that.
I think that this is a good idea indeed. Let's hear other's opinion.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,355,2017-10-30T02:19:16Z,2017-11-24T10:45:55Z,2017-11-24T16:31:11Z,MERGED,True,110,4,2,https://github.com/aerostitch,Proposal: Follow semver rules and update the changelog to make it usable,5,[],https://github.com/navit-gps/navit/pull/355,https://github.com/sleske,3,https://github.com/navit-gps/navit/pull/355#issuecomment-340372112,"Proposal: use semver and base the changelog on the http://keepachangelog.com/ template.
There's been no release in a long time and I'm not 100% sure if all the changes I put in the current version were totally significant for the current release, but I wanted to have the PR out  to see what you guys think about it.
If you're ok with the principle, I'll continue updating the changelog with the other changes I see.
Maybe we just put the most important ones for this release (currently 617 commits since v0.5.0...) and do more frequent releases in the future which would make the changelog more manageable.","The template from http://keepachangelog.com/ looks good. Originally Navit used to enforce a certain format for commit message, with the idea that the commit log would become the changelog - see https://wiki.navit-project.org/index.php/SVN_guidelines#Format_of_the_commit_log . However, we have long stopped enforcing that, and we have loads of commits which don't follow the rule - and arguably it was always a problematic idea to use the commit log that way, so a better way probably makes sense.
However, I don't quite understand the idea to use Semantic Versioning. semver seems to be for versioning APIs, not end user software - it continually talks about ""API changes"". I don't see how this relates to Navit. At any rate, the more important thing is to decide when and if we want to have releases...",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,355,2017-10-30T02:19:16Z,2017-11-24T10:45:55Z,2017-11-24T16:31:11Z,MERGED,True,110,4,2,https://github.com/aerostitch,Proposal: Follow semver rules and update the changelog to make it usable,5,[],https://github.com/navit-gps/navit/pull/355,https://github.com/mvglasow,4,https://github.com/navit-gps/navit/pull/355#issuecomment-340497428,"Proposal: use semver and base the changelog on the http://keepachangelog.com/ template.
There's been no release in a long time and I'm not 100% sure if all the changes I put in the current version were totally significant for the current release, but I wanted to have the PR out  to see what you guys think about it.
If you're ok with the principle, I'll continue updating the changelog with the other changes I see.
Maybe we just put the most important ones for this release (currently 617 commits since v0.5.0...) and do more frequent releases in the future which would make the changelog more manageable.","Re @sleske’s comments: I guess the commit message format was abandoned (de facto) pretty much around the time we switched to git. That is in part because with SVN only a few chosen people could create commits (and were given commit access only after being informed of that convention) while others would send patches and have someone with commit permission create the commit, message included. Now people file merge requests, and those of us with commit access merge them, including the author’s comments. Git has made this format harder to enforce—unless we start rejecting all merge requests with commit messages that do not follow our convention.
Semver seems to be all about mitigating dependency hell. Makes perfect sense for a library or anything with a public API. Navit, however, is pretty much at the top of the “food chain”—few packages depend on it, and while it has some things that can be considered an API (dbus comes to mind), its primary use is as an end-user app. One might argue whether the UI itself is a kind of API as well.
For end-user apps, it is quite common to increase the major version number when major new functionalities are added, which for semver would only warrant a minor version number increase. Conversely, if we consider the UI to be part of the API, we might need a new major version whenever we move a menu item (e.g. Menu > Quit instead of Menu > Actions > Quit).
I’d therefore propose a variation of semver, adapted to an end-user app:

x.y.Z (patch): only bug fixes or refactoring, no changes in functionality
x.Y.z (minor): added or changed functionality but can be used as a drop-in replacement for the previous version (all data formats and interfaces are still supported); minor UI changes (such as moving individual menu items) are also allowed
X.y.z (major): at least one of the following:

Major new functionality (such as Augmented Reality, inertial navigation or support for live traffic services): de-facto standard for end-user apps
New user interface (such as moving from the old pulldown menu UI to the Internal GUI): this is definitely the UI equivalent of a breaking API change
Dropped support for a data format or interface: also a breaking change and usually tends to occur along with larger changes which would warrant a new major version anyway",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,355,2017-10-30T02:19:16Z,2017-11-24T10:45:55Z,2017-11-24T16:31:11Z,MERGED,True,110,4,2,https://github.com/aerostitch,Proposal: Follow semver rules and update the changelog to make it usable,5,[],https://github.com/navit-gps/navit/pull/355,https://github.com/aerostitch,5,https://github.com/navit-gps/navit/pull/355#issuecomment-340516886,"Proposal: use semver and base the changelog on the http://keepachangelog.com/ template.
There's been no release in a long time and I'm not 100% sure if all the changes I put in the current version were totally significant for the current release, but I wanted to have the PR out  to see what you guys think about it.
If you're ok with the principle, I'll continue updating the changelog with the other changes I see.
Maybe we just put the most important ones for this release (currently 617 commits since v0.5.0...) and do more frequent releases in the future which would make the changelog more manageable.","Yes, @mvglasow what you are proposing is exactly what I have in mind on how to apply semver to end-user apps.
One of the idea would also be to encourage more frequent releases (from a packaging prospective, when you are packaging for let's say debian, no release since 2015 make the project look dead even if it's not at all)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,355,2017-10-30T02:19:16Z,2017-11-24T10:45:55Z,2017-11-24T16:31:11Z,MERGED,True,110,4,2,https://github.com/aerostitch,Proposal: Follow semver rules and update the changelog to make it usable,5,[],https://github.com/navit-gps/navit/pull/355,https://github.com/jkoan,6,https://github.com/navit-gps/navit/pull/355#issuecomment-342858904,"Proposal: use semver and base the changelog on the http://keepachangelog.com/ template.
There's been no release in a long time and I'm not 100% sure if all the changes I put in the current version were totally significant for the current release, but I wanted to have the PR out  to see what you guys think about it.
If you're ok with the principle, I'll continue updating the changelog with the other changes I see.
Maybe we just put the most important ones for this release (currently 617 commits since v0.5.0...) and do more frequent releases in the future which would make the changelog more manageable.","I completely agree the idea, explicitly with the last two comments from @aerostitch and @hoehnp.
I also want to add what we should do for the nightly channel:

own fdroid repo with beta builds from circleci
own repo with builds for deb, rpm and tar.gz which can be used by adding to the system and also probably a rss feed
dev blog on the new and upcoming website (build by github pages (jekyll) --> add post with git and markdown in the future)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,355,2017-10-30T02:19:16Z,2017-11-24T10:45:55Z,2017-11-24T16:31:11Z,MERGED,True,110,4,2,https://github.com/aerostitch,Proposal: Follow semver rules and update the changelog to make it usable,5,[],https://github.com/navit-gps/navit/pull/355,https://github.com/aerostitch,7,https://github.com/navit-gps/navit/pull/355#issuecomment-343640503,"Proposal: use semver and base the changelog on the http://keepachangelog.com/ template.
There's been no release in a long time and I'm not 100% sure if all the changes I put in the current version were totally significant for the current release, but I wanted to have the PR out  to see what you guys think about it.
If you're ok with the principle, I'll continue updating the changelog with the other changes I see.
Maybe we just put the most important ones for this release (currently 617 commits since v0.5.0...) and do more frequent releases in the future which would make the changelog more manageable.","I updated the changelog but I can't fit everything in there, it's way too long and I don't know the tool enough.
If you're ok with the current version, we can merge and start from now on to add the new changes to it.
Thx",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,355,2017-10-30T02:19:16Z,2017-11-24T10:45:55Z,2017-11-24T16:31:11Z,MERGED,True,110,4,2,https://github.com/aerostitch,Proposal: Follow semver rules and update the changelog to make it usable,5,[],https://github.com/navit-gps/navit/pull/355,https://github.com/jkoan,8,https://github.com/navit-gps/navit/pull/355#issuecomment-346797427,"Proposal: use semver and base the changelog on the http://keepachangelog.com/ template.
There's been no release in a long time and I'm not 100% sure if all the changes I put in the current version were totally significant for the current release, but I wanted to have the PR out  to see what you guys think about it.
If you're ok with the principle, I'll continue updating the changelog with the other changes I see.
Maybe we just put the most important ones for this release (currently 617 commits since v0.5.0...) and do more frequent releases in the future which would make the changelog more manageable.","I Would like to merge this PR in NOW even if the Changelog is probably not perfect. It will never be perfect, but it is really really good and it will be very useful for the whole project.
If this would be now merged in we could track new changes directly in the file ;)
So:  🚢",True,"{'HEART': ['https://github.com/aerostitch'], 'HOORAY': ['https://github.com/aerostitch']}"
navit-gps/navit,https://github.com/navit-gps/navit,356,2017-10-31T17:19:46Z,2017-10-31T18:01:05Z,2017-10-31T19:05:20Z,CLOSED,False,2642,716,44,https://github.com/jkoan,Android platform tools workaround,29,[],https://github.com/navit-gps/navit/pull/356,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/356,"This pull request adds a workaround to the CI because current platform tools from google are broken.
This fixes Ticket #1354","This pull request adds a workaround to the CI because current platform tools from google are broken.
This fixes Ticket #1354",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,356,2017-10-31T17:19:46Z,2017-10-31T18:01:05Z,2017-10-31T19:05:20Z,CLOSED,False,2642,716,44,https://github.com/jkoan,Android platform tools workaround,29,[],https://github.com/navit-gps/navit/pull/356,https://github.com/aerostitch,2,https://github.com/navit-gps/navit/pull/356#issuecomment-340840808,"This pull request adds a workaround to the CI because current platform tools from google are broken.
This fixes Ticket #1354",We were woeking with @pgrandin on the branch google_play to upgrade to the new sdk commands as the current ones are deprecated. Might be a longer term approach. Currently the only problem left lies in the order of the include directives.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,356,2017-10-31T17:19:46Z,2017-10-31T18:01:05Z,2017-10-31T19:05:20Z,CLOSED,False,2642,716,44,https://github.com/jkoan,Android platform tools workaround,29,[],https://github.com/navit-gps/navit/pull/356,https://github.com/aerostitch,3,https://github.com/navit-gps/navit/pull/356#issuecomment-340853678,"This pull request adds a workaround to the CI because current platform tools from google are broken.
This fixes Ticket #1354","Note that you're more than welcome to give a new eye on this branch @jkoan ;)
Sorry I was supposed to update the ticket yesterday but got bumped with work.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,356,2017-10-31T17:19:46Z,2017-10-31T18:01:05Z,2017-10-31T19:05:20Z,CLOSED,False,2642,716,44,https://github.com/jkoan,Android platform tools workaround,29,[],https://github.com/navit-gps/navit/pull/356,https://github.com/jkoan,4,https://github.com/navit-gps/navit/pull/356#issuecomment-340855185,"This pull request adds a workaround to the CI because current platform tools from google are broken.
This fixes Ticket #1354","I will definitely look into it, but the fix (see #357 ) only for the time until the new command is ready.
I have spoken to @pgrandin about that. He pushed me to do this PR ;)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,356,2017-10-31T17:19:46Z,2017-10-31T18:01:05Z,2017-10-31T19:05:20Z,CLOSED,False,2642,716,44,https://github.com/jkoan,Android platform tools workaround,29,[],https://github.com/navit-gps/navit/pull/356,https://github.com/pgrandin,5,https://github.com/navit-gps/navit/pull/356#issuecomment-340872542,"This pull request adds a workaround to the CI because current platform tools from google are broken.
This fixes Ticket #1354","Yeah we definitely need to finish the work in the google_play branch as the android command is deprecated, but at least we can still build and release until we figure out the issue @aerostitch just mentioned.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,357,2017-10-31T18:07:03Z,2017-10-31T18:22:59Z,2017-10-31T18:23:11Z,MERGED,True,8,0,1,https://github.com/jkoan,Add self checking workaround for android platform tools,1,[],https://github.com/navit-gps/navit/pull/357,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/357,"This pull request adds a workaround to the CI because current platform tools from google are broken.
This fixes Ticket #1354
(This is the replacement for PR #356 because I had a problem with my repo)","This pull request adds a workaround to the CI because current platform tools from google are broken.
This fixes Ticket #1354
(This is the replacement for PR #356 because I had a problem with my repo)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,357,2017-10-31T18:07:03Z,2017-10-31T18:22:59Z,2017-10-31T18:23:11Z,MERGED,True,8,0,1,https://github.com/jkoan,Add self checking workaround for android platform tools,1,[],https://github.com/navit-gps/navit/pull/357,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/357#issuecomment-340856654,"This pull request adds a workaround to the CI because current platform tools from google are broken.
This fixes Ticket #1354
(This is the replacement for PR #356 because I had a problem with my repo)",Thanks @jkoan ! We still need to work on the toolchain update as the android command is now deprecated but at least we can build again.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,358,2017-10-31T19:21:10Z,2017-11-03T18:05:17Z,2017-11-03T18:05:21Z,MERGED,True,0,2,1,https://github.com/jkoan,Fix:android: Fixed forced colors in layout to have android auto adaption,2,[],https://github.com/navit-gps/navit/pull/358,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/358,This PR makes Android to auto adapt the colors of the system. See here for example:,This PR makes Android to auto adapt the colors of the system. See here for example:,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,359,2017-10-31T23:55:13Z,2017-11-01T04:09:42Z,2017-11-01T04:09:47Z,MERGED,True,23,5,1,https://github.com/charlescurley,fix:gtk:fixed missing imperial units in the GTK ui.,3,[],https://github.com/navit-gps/navit/pull/359,https://github.com/charlescurley,1,https://github.com/navit-gps/navit/pull/359,"modified:   navit/gui/gtk/gui_gtk_statusbar.c

The status bar under GTK was only showing metric units. So I coded up a fix.
I tested as follows:


Initialized the local variable imperial to true. Had imperial set to one in my navit.xml. Got imperial measures, as expected.


Changed the local variable initialization to false. Recompiled and ran. Got imperial, as expected. This indicates that the function collected it as expected.


Changed the attribute in navit.xml to 0. Ran again. Got metric units as expected.","modified:   navit/gui/gtk/gui_gtk_statusbar.c

The status bar under GTK was only showing metric units. So I coded up a fix.
I tested as follows:


Initialized the local variable imperial to true. Had imperial set to one in my navit.xml. Got imperial measures, as expected.


Changed the local variable initialization to false. Recompiled and ran. Got imperial, as expected. This indicates that the function collected it as expected.


Changed the attribute in navit.xml to 0. Ran again. Got metric units as expected.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,359,2017-10-31T23:55:13Z,2017-11-01T04:09:42Z,2017-11-01T04:09:47Z,MERGED,True,23,5,1,https://github.com/charlescurley,fix:gtk:fixed missing imperial units in the GTK ui.,3,[],https://github.com/navit-gps/navit/pull/359,https://github.com/charlescurley,2,https://github.com/navit-gps/navit/pull/359#issuecomment-340940970,"modified:   navit/gui/gtk/gui_gtk_statusbar.c

The status bar under GTK was only showing metric units. So I coded up a fix.
I tested as follows:


Initialized the local variable imperial to true. Had imperial set to one in my navit.xml. Got imperial measures, as expected.


Changed the local variable initialization to false. Recompiled and ran. Got imperial, as expected. This indicates that the function collected it as expected.


Changed the attribute in navit.xml to 0. Ran again. Got metric units as expected.",The fix is on branch fix_gtk_imperial_use,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,359,2017-10-31T23:55:13Z,2017-11-01T04:09:42Z,2017-11-01T04:09:47Z,MERGED,True,23,5,1,https://github.com/charlescurley,fix:gtk:fixed missing imperial units in the GTK ui.,3,[],https://github.com/navit-gps/navit/pull/359,https://github.com/pgrandin,3,https://github.com/navit-gps/navit/pull/359#issuecomment-340973285,"modified:   navit/gui/gtk/gui_gtk_statusbar.c

The status bar under GTK was only showing metric units. So I coded up a fix.
I tested as follows:


Initialized the local variable imperial to true. Had imperial set to one in my navit.xml. Got imperial measures, as expected.


Changed the local variable initialization to false. Recompiled and ran. Got imperial, as expected. This indicates that the function collected it as expected.


Changed the attribute in navit.xml to 0. Ran again. Got metric units as expected.",Thanks @charlescurley for fixing that!,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,360,2017-11-01T18:16:17Z,2017-11-02T23:52:16Z,2017-11-02T23:52:16Z,CLOSED,False,161,271,12,https://github.com/charlescurley,Roadbook imperial measures fix,7,[],https://github.com/navit-gps/navit/pull/360,https://github.com/charlescurley,1,https://github.com/navit-gps/navit/pull/360,"The road book now respects imperial for two more columns. The first column (Command) was good for both feet and miles. However, column 2 (Length), and the 4th column (Destination Length), were showing up only in metric. This commit fixes columns 2 and 4. This should fix bug 780.","The road book now respects imperial for two more columns. The first column (Command) was good for both feet and miles. However, column 2 (Length), and the 4th column (Destination Length), were showing up only in metric. This commit fixes columns 2 and 4. This should fix bug 780.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,360,2017-11-01T18:16:17Z,2017-11-02T23:52:16Z,2017-11-02T23:52:16Z,CLOSED,False,161,271,12,https://github.com/charlescurley,Roadbook imperial measures fix,7,[],https://github.com/navit-gps/navit/pull/360,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/360#issuecomment-341591685,"The road book now respects imperial for two more columns. The first column (Command) was good for both feet and miles. However, column 2 (Length), and the 4th column (Destination Length), were showing up only in metric. This commit fixes columns 2 and 4. This should fix bug 780.","This PR is ""reversed"" : into roadbook.imperial.fix from trunk
Should have been the opposite, but commits have been pushed to trunk.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,361,2017-11-03T18:45:32Z,2017-11-03T18:53:59Z,2017-11-03T18:54:03Z,MERGED,True,1,0,1,https://github.com/pgrandin,fix:doc:ensure that the custom domain is set for doxygen,1,[],https://github.com/navit-gps/navit/pull/361,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/361,Needed to get doxygen.navit-project.org to point to the Github-hosted content.,Needed to get doxygen.navit-project.org to point to the Github-hosted content.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,362,2017-11-03T22:03:20Z,2017-11-03T22:06:05Z,2017-11-03T22:06:12Z,MERGED,True,23,0,1,https://github.com/charlescurley,Gtk add follow vehicle toggle,2,[],https://github.com/navit-gps/navit/pull/362,https://github.com/charlescurley,1,https://github.com/navit-gps/navit/pull/362,Added the ability to toggle whether navit follows the active vehicle on its display to the Display menu.,Added the ability to toggle whether navit follows the active vehicle on its display to the Display menu.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,362,2017-11-03T22:03:20Z,2017-11-03T22:06:05Z,2017-11-03T22:06:12Z,MERGED,True,23,0,1,https://github.com/charlescurley,Gtk add follow vehicle toggle,2,[],https://github.com/navit-gps/navit/pull/362,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/362#issuecomment-341838848,Added the ability to toggle whether navit follows the active vehicle on its display to the Display menu.,👍,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,363,2017-11-03T22:53:25Z,2017-11-03T23:07:49Z,2017-11-03T23:08:19Z,MERGED,True,2,2,1,https://github.com/charlescurley,Gtk add follow vehicle toggle,4,[],https://github.com/navit-gps/navit/pull/363,https://github.com/charlescurley,1,https://github.com/navit-gps/navit/pull/363,doxygen comment syntax....,doxygen comment syntax....,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,364,2017-11-04T17:42:35Z,2017-11-04T17:43:00Z,2017-11-04T17:43:03Z,MERGED,True,2,9,1,https://github.com/pgrandin,change:android:always build apk release,1,[],https://github.com/navit-gps/navit/pull/364,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/364,"With CI v1 we were building release apk in master and debug apk everywhere else (including trunk).
With CI v2 we currently don't push from trunk to master automatically, thus our play store releases are lagging behind.","With CI v1 we were building release apk in master and debug apk everywhere else (including trunk).
With CI v2 we currently don't push from trunk to master automatically, thus our play store releases are lagging behind.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,365,2017-11-10T09:44:31Z,2017-11-24T16:31:15Z,2017-11-24T16:31:15Z,MERGED,True,264,160,2,https://github.com/naggety," Fix:Core:only GGA or RMC message required, ticket #913",4,[],https://github.com/navit-gps/navit/pull/365,https://github.com/naggety,1,https://github.com/navit-gps/navit/pull/365,Fixed bug from ticket #913,Fixed bug from ticket #913,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,367,2017-11-11T15:10:55Z,2017-11-11T20:10:51Z,2017-11-11T22:39:09Z,MERGED,True,9,5,4,https://github.com/charlescurley,fix:gtk:Fix imperial factors,2,[],https://github.com/navit-gps/navit/pull/367,https://github.com/charlescurley,1,https://github.com/navit-gps/navit/pull/367,"Some new conversion factors in navigation.h.


Corrected conversions to to use the correct factors.


Got rid of a hard coded value, replaced it with a #define.","Some new conversion factors in navigation.h.


Corrected conversions to to use the correct factors.


Got rid of a hard coded value, replaced it with a #define.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,367,2017-11-11T15:10:55Z,2017-11-11T20:10:51Z,2017-11-11T22:39:09Z,MERGED,True,9,5,4,https://github.com/charlescurley,fix:gtk:Fix imperial factors,2,[],https://github.com/navit-gps/navit/pull/367,https://github.com/charlescurley,2,https://github.com/navit-gps/navit/pull/367#issuecomment-343699009,"Some new conversion factors in navigation.h.


Corrected conversions to to use the correct factors.


Got rid of a hard coded value, replaced it with a #define.","On Sat, 11 Nov 2017 20:10:53 +0000 (UTC) Pierre GRANDIN ***@***.***> wrote:
 Merged #367.
AAARRRGGHH! I need another pair or two of eyeballs. Now the roadbook is
reporting miles incorrectly. I think I am missing something here.
…
-- 

The right of the people to be secure in their persons, houses, papers,
and effects, against unreasonable searches and seizures, shall not be
violated, and no Warrants shall issue, but upon probable cause,
supported by Oath or affirmation, and particularly describing the
place to be searched, and the persons or things to be seized.
-- U.S. Const. Amendment IV

Key fingerprint = CE5C 6645 A45A 64E4 94C0  809C FFF6 4C48 4ECD DFDB",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,368,2017-11-11T21:55:49Z,2018-04-20T18:57:38Z,2018-04-20T23:21:31Z,CLOSED,False,8120,6,89,https://github.com/pgrandin,add:audio:add audio framework,5,['help wanted'],https://github.com/navit-gps/navit/pull/368,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/368,"This has been discussed in the past, but I'd like to bring back the topic.
This PR adds audio playback capabilities to Navit.
Is is fully modular and pluggable, as any other components within Navit.
Having audio playback could be considered somewhat of a scope creep, but there is actually a really important use case in my opinion : interface feedback. When the input device is a piece of glass, having audio feedback is actually useful to inform the user that the touch event was recorded. I do believe that this is part of what we could/should improve with the new QT UI.
I've been maintaining the media playback feature in a fork for several years, but a few things are driving me to try to get it integrated in trunk:

this is a must have for carputer users. Other solutions exist, usually trying to embed navit within a media player, or worse switching between apps. In terms of user experience, this is quite poor.
maintaining this in a fork is painful and I'd really like to stop doing that
this code is modular, documented, and tested in real life

While carputer users are not our major userbase, this PR makes Navit a first class citizen for this use case and could help us expand our community.","This has been discussed in the past, but I'd like to bring back the topic.
This PR adds audio playback capabilities to Navit.
Is is fully modular and pluggable, as any other components within Navit.
Having audio playback could be considered somewhat of a scope creep, but there is actually a really important use case in my opinion : interface feedback. When the input device is a piece of glass, having audio feedback is actually useful to inform the user that the touch event was recorded. I do believe that this is part of what we could/should improve with the new QT UI.
I've been maintaining the media playback feature in a fork for several years, but a few things are driving me to try to get it integrated in trunk:

this is a must have for carputer users. Other solutions exist, usually trying to embed navit within a media player, or worse switching between apps. In terms of user experience, this is quite poor.
maintaining this in a fork is painful and I'd really like to stop doing that
this code is modular, documented, and tested in real life

While carputer users are not our major userbase, this PR makes Navit a first class citizen for this use case and could help us expand our community.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,368,2017-11-11T21:55:49Z,2018-04-20T18:57:38Z,2018-04-20T23:21:31Z,CLOSED,False,8120,6,89,https://github.com/pgrandin,add:audio:add audio framework,5,['help wanted'],https://github.com/navit-gps/navit/pull/368,https://github.com/hoehnp,2,https://github.com/navit-gps/navit/pull/368#issuecomment-343697836,"This has been discussed in the past, but I'd like to bring back the topic.
This PR adds audio playback capabilities to Navit.
Is is fully modular and pluggable, as any other components within Navit.
Having audio playback could be considered somewhat of a scope creep, but there is actually a really important use case in my opinion : interface feedback. When the input device is a piece of glass, having audio feedback is actually useful to inform the user that the touch event was recorded. I do believe that this is part of what we could/should improve with the new QT UI.
I've been maintaining the media playback feature in a fork for several years, but a few things are driving me to try to get it integrated in trunk:

this is a must have for carputer users. Other solutions exist, usually trying to embed navit within a media player, or worse switching between apps. In terms of user experience, this is quite poor.
maintaining this in a fork is painful and I'd really like to stop doing that
this code is modular, documented, and tested in real life

While carputer users are not our major userbase, this PR makes Navit a first class citizen for this use case and could help us expand our community.",Would be audio based on qt supported on all of our platforms?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,368,2017-11-11T21:55:49Z,2018-04-20T18:57:38Z,2018-04-20T23:21:31Z,CLOSED,False,8120,6,89,https://github.com/pgrandin,add:audio:add audio framework,5,['help wanted'],https://github.com/navit-gps/navit/pull/368,https://github.com/pgrandin,3,https://github.com/navit-gps/navit/pull/368#issuecomment-343700358,"This has been discussed in the past, but I'd like to bring back the topic.
This PR adds audio playback capabilities to Navit.
Is is fully modular and pluggable, as any other components within Navit.
Having audio playback could be considered somewhat of a scope creep, but there is actually a really important use case in my opinion : interface feedback. When the input device is a piece of glass, having audio feedback is actually useful to inform the user that the touch event was recorded. I do believe that this is part of what we could/should improve with the new QT UI.
I've been maintaining the media playback feature in a fork for several years, but a few things are driving me to try to get it integrated in trunk:

this is a must have for carputer users. Other solutions exist, usually trying to embed navit within a media player, or worse switching between apps. In terms of user experience, this is quite poor.
maintaining this in a fork is painful and I'd really like to stop doing that
this code is modular, documented, and tested in real life

While carputer users are not our major userbase, this PR makes Navit a first class citizen for this use case and could help us expand our community.","@hoehnp yes, if we implement an output-qt plugin, this should support any and all platform that is supported by QT.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,368,2017-11-11T21:55:49Z,2018-04-20T18:57:38Z,2018-04-20T23:21:31Z,CLOSED,False,8120,6,89,https://github.com/pgrandin,add:audio:add audio framework,5,['help wanted'],https://github.com/navit-gps/navit/pull/368,https://github.com/metalstrolch,4,https://github.com/navit-gps/navit/pull/368#issuecomment-343774022,"This has been discussed in the past, but I'd like to bring back the topic.
This PR adds audio playback capabilities to Navit.
Is is fully modular and pluggable, as any other components within Navit.
Having audio playback could be considered somewhat of a scope creep, but there is actually a really important use case in my opinion : interface feedback. When the input device is a piece of glass, having audio feedback is actually useful to inform the user that the touch event was recorded. I do believe that this is part of what we could/should improve with the new QT UI.
I've been maintaining the media playback feature in a fork for several years, but a few things are driving me to try to get it integrated in trunk:

this is a must have for carputer users. Other solutions exist, usually trying to embed navit within a media player, or worse switching between apps. In terms of user experience, this is quite poor.
maintaining this in a fork is painful and I'd really like to stop doing that
this code is modular, documented, and tested in real life

While carputer users are not our major userbase, this PR makes Navit a first class citizen for this use case and could help us expand our community.","Personally I don't have a good feeling about this. We should concentrate on making Navit a good routing application, and not a egg-laying-wool-milk-pig.
Do we want to link Navit to the 'insert favourite streaming provider'  next to spotify too? And what about video playback?
I think we should cope for input feedback in the GUI component if not supported by the platform anyway if that is really required. I'd prefer to see a feedback framework for internal gui instead. This would help augmenting the internal GUI with feedback. But mixing this with a spotify client seens to be Nuts.
Btw. this would interfere with voice prompting typically.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,368,2017-11-11T21:55:49Z,2018-04-20T18:57:38Z,2018-04-20T23:21:31Z,CLOSED,False,8120,6,89,https://github.com/pgrandin,add:audio:add audio framework,5,['help wanted'],https://github.com/navit-gps/navit/pull/368,https://github.com/sleske,5,https://github.com/navit-gps/navit/pull/368#issuecomment-343790821,"This has been discussed in the past, but I'd like to bring back the topic.
This PR adds audio playback capabilities to Navit.
Is is fully modular and pluggable, as any other components within Navit.
Having audio playback could be considered somewhat of a scope creep, but there is actually a really important use case in my opinion : interface feedback. When the input device is a piece of glass, having audio feedback is actually useful to inform the user that the touch event was recorded. I do believe that this is part of what we could/should improve with the new QT UI.
I've been maintaining the media playback feature in a fork for several years, but a few things are driving me to try to get it integrated in trunk:

this is a must have for carputer users. Other solutions exist, usually trying to embed navit within a media player, or worse switching between apps. In terms of user experience, this is quite poor.
maintaining this in a fork is painful and I'd really like to stop doing that
this code is modular, documented, and tested in real life

While carputer users are not our major userbase, this PR makes Navit a first class citizen for this use case and could help us expand our community.","When the input device is a piece of glass, having audio feedback is actually useful to inform the user that the touch event was recorded.

Sorry, that does not make sense. How can you use a ""piece of glass"" as the input device?
And while audio feedback can be useful, I don't see the relation to audio playback - you'd typically use voice output for that, which we already have. You don't usually play a song to acknowlegde a button press...
Also, I agree with @metalstrolch - we absolutely do not want a spotify client in Navit, that's way out of scope.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,368,2017-11-11T21:55:49Z,2018-04-20T18:57:38Z,2018-04-20T23:21:31Z,CLOSED,False,8120,6,89,https://github.com/pgrandin,add:audio:add audio framework,5,['help wanted'],https://github.com/navit-gps/navit/pull/368,https://github.com/mvglasow,6,https://github.com/navit-gps/navit/pull/368#issuecomment-346710526,"This has been discussed in the past, but I'd like to bring back the topic.
This PR adds audio playback capabilities to Navit.
Is is fully modular and pluggable, as any other components within Navit.
Having audio playback could be considered somewhat of a scope creep, but there is actually a really important use case in my opinion : interface feedback. When the input device is a piece of glass, having audio feedback is actually useful to inform the user that the touch event was recorded. I do believe that this is part of what we could/should improve with the new QT UI.
I've been maintaining the media playback feature in a fork for several years, but a few things are driving me to try to get it integrated in trunk:

this is a must have for carputer users. Other solutions exist, usually trying to embed navit within a media player, or worse switching between apps. In terms of user experience, this is quite poor.
maintaining this in a fork is painful and I'd really like to stop doing that
this code is modular, documented, and tested in real life

While carputer users are not our major userbase, this PR makes Navit a first class citizen for this use case and could help us expand our community.","I see the point for audio feedback (which I take to mean ”make a sound when a UI element is pressed”)—so far, so good. But the PR is largely about adding full media player capabilities to Navit, effectively taking it from a navigation system towards a full car infotainment system.
TL;DR: We can think about having Navit coexist and interact with a media player, but I consider media playback out of scope for Navit.
Navit covers a wide range of devices, including car PCs as well as smartphones. The latter category of devices will usually have all the media player features in some other app, and smartphone users who get Navit likely expect a good navigation app, and will not care much about media playback in Navit.
I understand that for a car PC the use case may be different—but I still don’t think this is something which should go into Navit core. Different suggestions:

Extend the plugin interface so that Navit can control media plugins—but keep it a generic interface, not a purpose-built one. Then offer the media plugin as a separate add-on—residing in its own source tree and installable as an add-on package (for Linux and Windows at a minimum, this should not be too difficult). That way, users can decide if they want that functionality or not.
Provide an interface for Navit to control external media players. Again, keep that generic, e.g. by adding everything to send DBus commands—then media player control would just be a configuration thing.

Generally, for a car infotainment scenario, I would aim for a generic framework around both Navit and a media player app (and whatever else should be part of that system). IIRC the police in the German state of Brandenburg uses Navit in that kind of configuration.
Another example, somewhat similar in spirit, is the UX of the Audi RNS-E:

There’s a row of buttons at the bottom of the screen through which I can select the feature I would like to use: e.g. radio, CD/MP3, navigation, traffic information. When I choose one, that UI takes up the entire screen.
There are hardware controls for volume and media back/forward, which always apply to whatever media is playing (radio, CD or MP3), even when the media UI is not visible (e.g. because the screen is in navigation mode).
Information about currently playing media is shown on the external display, even when the head unit display is showing something else (e.g. navigation).

As for the framework, I find that a good solution (it’s just the sat-nav itself that is poor, but that’s why I’m here to help build a better one :-)
Without the external display, one could instead have a top bar on the car PC screen which shows media information (and possibly media control buttons if no hardware buttons are available). Maybe one could even adapt the solution I coded for Android a while back (late 2015–early 2016), which makes the system bars a semitransparent overlay over the map, and allow the framework to display the media control bar in the same way.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,368,2017-11-11T21:55:49Z,2018-04-20T18:57:38Z,2018-04-20T23:21:31Z,CLOSED,False,8120,6,89,https://github.com/pgrandin,add:audio:add audio framework,5,['help wanted'],https://github.com/navit-gps/navit/pull/368,https://github.com/sleske,7,https://github.com/navit-gps/navit/pull/368#issuecomment-347039073,"This has been discussed in the past, but I'd like to bring back the topic.
This PR adds audio playback capabilities to Navit.
Is is fully modular and pluggable, as any other components within Navit.
Having audio playback could be considered somewhat of a scope creep, but there is actually a really important use case in my opinion : interface feedback. When the input device is a piece of glass, having audio feedback is actually useful to inform the user that the touch event was recorded. I do believe that this is part of what we could/should improve with the new QT UI.
I've been maintaining the media playback feature in a fork for several years, but a few things are driving me to try to get it integrated in trunk:

this is a must have for carputer users. Other solutions exist, usually trying to embed navit within a media player, or worse switching between apps. In terms of user experience, this is quite poor.
maintaining this in a fork is painful and I'd really like to stop doing that
this code is modular, documented, and tested in real life

While carputer users are not our major userbase, this PR makes Navit a first class citizen for this use case and could help us expand our community.","@mvglasow : You've taken my words out of my mouth :-).
I appreciate the work which pgrandin did - it's just not a good fit for the main Navit project and repository.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,368,2017-11-11T21:55:49Z,2018-04-20T18:57:38Z,2018-04-20T23:21:31Z,CLOSED,False,8120,6,89,https://github.com/pgrandin,add:audio:add audio framework,5,['help wanted'],https://github.com/navit-gps/navit/pull/368,https://github.com/mvglasow,8,https://github.com/navit-gps/navit/pull/368#issuecomment-347039685,"This has been discussed in the past, but I'd like to bring back the topic.
This PR adds audio playback capabilities to Navit.
Is is fully modular and pluggable, as any other components within Navit.
Having audio playback could be considered somewhat of a scope creep, but there is actually a really important use case in my opinion : interface feedback. When the input device is a piece of glass, having audio feedback is actually useful to inform the user that the touch event was recorded. I do believe that this is part of what we could/should improve with the new QT UI.
I've been maintaining the media playback feature in a fork for several years, but a few things are driving me to try to get it integrated in trunk:

this is a must have for carputer users. Other solutions exist, usually trying to embed navit within a media player, or worse switching between apps. In terms of user experience, this is quite poor.
maintaining this in a fork is painful and I'd really like to stop doing that
this code is modular, documented, and tested in real life

While carputer users are not our major userbase, this PR makes Navit a first class citizen for this use case and could help us expand our community.","@sleske Absolutely—it’s great work (besides illustrating nicely how to add a new plugin type to Navit), maybe it can be refactored in some way to be independent of Navit",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,368,2017-11-11T21:55:49Z,2018-04-20T18:57:38Z,2018-04-20T23:21:31Z,CLOSED,False,8120,6,89,https://github.com/pgrandin,add:audio:add audio framework,5,['help wanted'],https://github.com/navit-gps/navit/pull/368,https://github.com/jkoan,9,https://github.com/navit-gps/navit/pull/368#issuecomment-356844786,"This has been discussed in the past, but I'd like to bring back the topic.
This PR adds audio playback capabilities to Navit.
Is is fully modular and pluggable, as any other components within Navit.
Having audio playback could be considered somewhat of a scope creep, but there is actually a really important use case in my opinion : interface feedback. When the input device is a piece of glass, having audio feedback is actually useful to inform the user that the touch event was recorded. I do believe that this is part of what we could/should improve with the new QT UI.
I've been maintaining the media playback feature in a fork for several years, but a few things are driving me to try to get it integrated in trunk:

this is a must have for carputer users. Other solutions exist, usually trying to embed navit within a media player, or worse switching between apps. In terms of user experience, this is quite poor.
maintaining this in a fork is painful and I'd really like to stop doing that
this code is modular, documented, and tested in real life

While carputer users are not our major userbase, this PR makes Navit a first class citizen for this use case and could help us expand our community.","Hi guys,
my suggestion would be to separate the audio interface(like @mvglasow suggested) from the music player itself.
After splitting both my suggestion would be a plugin dev header file. Like other projects we should bring out devel packages. This would bring the benefit that plugins can totally build separate from navit itself. You would only need the headers which are in the devel package. Then you can build whatever you want with the Navit api.
Of course we need to make clear how to setup and use such a plugin. I would suggest a own repo with examples how to use specific components of the api (for example vehicle, gui, graphics and so on)
After that we have more flexibility and if should be easier for non team members to build own plugins for navit.
Then the media player plugin would go into its own repo because it can be built without building it within navit.
@pgrandin what do you think? The work is definitely really nice so we should provide a easy way to the end user to use it if they want.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,368,2017-11-11T21:55:49Z,2018-04-20T18:57:38Z,2018-04-20T23:21:31Z,CLOSED,False,8120,6,89,https://github.com/pgrandin,add:audio:add audio framework,5,['help wanted'],https://github.com/navit-gps/navit/pull/368,https://github.com/pgrandin,10,https://github.com/navit-gps/navit/pull/368#issuecomment-383190822,"This has been discussed in the past, but I'd like to bring back the topic.
This PR adds audio playback capabilities to Navit.
Is is fully modular and pluggable, as any other components within Navit.
Having audio playback could be considered somewhat of a scope creep, but there is actually a really important use case in my opinion : interface feedback. When the input device is a piece of glass, having audio feedback is actually useful to inform the user that the touch event was recorded. I do believe that this is part of what we could/should improve with the new QT UI.
I've been maintaining the media playback feature in a fork for several years, but a few things are driving me to try to get it integrated in trunk:

this is a must have for carputer users. Other solutions exist, usually trying to embed navit within a media player, or worse switching between apps. In terms of user experience, this is quite poor.
maintaining this in a fork is painful and I'd really like to stop doing that
this code is modular, documented, and tested in real life

While carputer users are not our major userbase, this PR makes Navit a first class citizen for this use case and could help us expand our community.","Thanks for the feedback everyone.
I'll move that code to a different repository. Please do not delete the branch until it's done.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,369,2017-11-13T09:17:22Z,2017-11-13T10:27:21Z,2017-11-13T13:28:39Z,MERGED,True,36,0,1,https://github.com/naggety,Add:doc:added errors and usage messages to navit_svg2png script,2,[],https://github.com/navit-gps/navit/pull/369,https://github.com/naggety,1,https://github.com/navit-gps/navit/pull/369,"To know how to use the script you had to inspect the script code.
Error messages and help/usage messages added.","To know how to use the script you had to inspect the script code.
Error messages and help/usage messages added.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,370,2017-11-13T12:57:46Z,2017-11-13T12:58:21Z,2017-11-13T12:58:21Z,CLOSED,False,266,161,3,https://github.com/naggety,Fix:core:Wrong default png size with ksvgtopng,4,[],https://github.com/navit-gps/navit/pull/370,https://github.com/naggety,1,https://github.com/navit-gps/navit/pull/370,"During building svg icons are converted to png with various predefined sizes, and also one png with the size embedded into the svg.
If using ksvgtopng to make the conversion, the size was not read fine from the svg if property ""width"" appears more than once, even if the second is in a different tag than .
Now, the first ""width"" property is read, and since  tag is the root tag, the first ""width"" property will be owed by it.","During building svg icons are converted to png with various predefined sizes, and also one png with the size embedded into the svg.
If using ksvgtopng to make the conversion, the size was not read fine from the svg if property ""width"" appears more than once, even if the second is in a different tag than .
Now, the first ""width"" property is read, and since  tag is the root tag, the first ""width"" property will be owed by it.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,371,2017-11-13T13:13:27Z,2017-11-14T16:49:50Z,2017-11-14T16:49:51Z,MERGED,True,2,1,1,https://github.com/naggety,Fix:core:Wrong default png size with ksvgtopng,1,[],https://github.com/navit-gps/navit/pull/371,https://github.com/naggety,1,https://github.com/navit-gps/navit/pull/371,"During building svg icons are converted to png with various predefined
sizes, and also one png with the size embedded into the svg.
If using ksvgtopng to make the conversion, the size was not read
fine from the svg if property ""width"" appears more than once, even
if the second is in a different tag than .
Now, the first ""width"" property is read, and since  tag is the
root tag, the first ""width"" property will be owed by it.","During building svg icons are converted to png with various predefined
sizes, and also one png with the size embedded into the svg.
If using ksvgtopng to make the conversion, the size was not read
fine from the svg if property ""width"" appears more than once, even
if the second is in a different tag than .
Now, the first ""width"" property is read, and since  tag is the
root tag, the first ""width"" property will be owed by it.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,372,2017-11-16T20:01:47Z,2017-11-17T21:17:10Z,2017-11-17T21:17:10Z,MERGED,True,31,5,2,https://github.com/mvglasow,Refactor:route:Improve documentation,2,[],https://github.com/navit-gps/navit/pull/372,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/372,Signed-off-by: mvglasow <michael -at- vonglasow.com>,Signed-off-by: mvglasow <michael -at- vonglasow.com>,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,373,2017-11-19T20:02:44Z,2018-01-19T21:51:24Z,2018-01-19T21:51:28Z,MERGED,True,20,17,1,https://github.com/charlescurley,[WIP] fix:navit:navigation.c:distance_set_last,8,[],https://github.com/navit-gps/navit/pull/373,https://github.com/charlescurley,1,https://github.com/navit-gps/navit/pull/373,"Added a test so that the array subscript is never less than the lower bound. Note: there is no test for the upper bound.
Also, I saw no reason to test for i == 0 right after the code initialized it to zero.
modified:   navit/navigation.c","Added a test so that the array subscript is never less than the lower bound. Note: there is no test for the upper bound.
Also, I saw no reason to test for i == 0 right after the code initialized it to zero.
modified:   navit/navigation.c",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,373,2017-11-19T20:02:44Z,2018-01-19T21:51:24Z,2018-01-19T21:51:28Z,MERGED,True,20,17,1,https://github.com/charlescurley,[WIP] fix:navit:navigation.c:distance_set_last,8,[],https://github.com/navit-gps/navit/pull/373,https://github.com/charlescurley,2,https://github.com/navit-gps/navit/pull/373#issuecomment-345776464,"Added a test so that the array subscript is never less than the lower bound. Note: there is no test for the upper bound.
Also, I saw no reason to test for i == 0 right after the code initialized it to zero.
modified:   navit/navigation.c","On Mon, 20 Nov 2017 08:18:09 +0000 (UTC) Stefan Wildemann ***@***.***> wrote:
 metalstrolch requested changes on this pull request.



 >  static int
  distance_set_last(void)
  {
  	static int i=0;
 -	if (i == 0) {

 Attention! Do not remove this, as **i** is a **static** variable and
 therefore will keep it's value during multiple calls. You can not
 expect this to be not zero, as it will only be initialized once.

 Having a static internal variable called **i** is indeed not good
 style, and somebody should definitly have a look at this to clarify
 why **i** is static. But one should not remove the check until done
 so.

It's a mess, and with few comments to tell you what is going on.

I know of three reasons why one would declare a variable static.

* An interrupt will play with it.

* It is a hardware location that will be modified by the hardware, such
  as a memory mapped I/O port.

* To preserve a value across calls to the function in which it is
  declared.

One and two should not apply in a Linux user land program. Some of the
things I've seen in commercial operating systems led me to check for
either of those two cases. I didn't find any. And neither one would
make sense for what the function and its one calling function are
supposed to be doing (according to the comments and internal logic).

i is used as an index to an array of truncated distances, to be used
for voice directions. E.g. ""Turn left in 300 meters."" instead of ""Turn
left in 323.28 meters.""

The possible values to use in the first sentence are in the array
distances, also in navigation.c. That array is terminated with -1,
clearly not a valid distance. So the sole purpose of the function
distance_set_last is to determine the size of the array. Making i
static means you only have to do that once. So taking out the if test
is harmless, just wasting processor time at run time. Better to leave
it in.

Cute code. I dislike cute code. It's too easy to misunderstand.

In this case, it is also unnecessary.

Why size the array at run time at all? We know at compile time the size
of the array. Or, rather we can: a #define can specify the size of the
array. Use it to initialize the array correctly. Then we can get rid of
distance_set_last entirely, with all the associated overhead.

Instead of:

int distances[]={1,2,3,4,5,10,25,50,75,100,150,200,250,300,400,500,750,-1};

something like:

#define SIZE_OF_ARRAY_DISTANCES
int distances[SIZE_OF_ARRAY_DISTANCES]={1,2,3,4,5, ... 750};

...

static int
round_distance_reduced( int dist )
{
	int factor = 1;
	if (dist > distance[SIZE_OF_ARRAY_DISTANCES-1])
	{
		dist=(dist+500)/1000;
		factor = 1000;
	}

	int i=0,d=0,m=0;
	while (i < SIZE_OF_ARRAY_DISTANCES) {
...

In addition to getting rid of a function and speeding up run time ever
so slightly, SIZE_OF_ARRAY_DISTANCES also gives you a compile time
check for too many initializers.

Or, try this:


#define SIZE_OF_ARRAY_DISTANCES
#define LAST_DISTANCE 750
int distances[SIZE_OF_ARRAY_DISTANCES]={1,2,3,4,5, ... LAST_DISTANCE};

...

static int
round_distance_reduced( int dist )
{
	int factor = 1;
	if (dist > LAST_DISTANCE)
	{
		dist=(dist+500)/1000;
		factor = 1000;
	}

	int i=0,d=0,m=0;
	while (i < SIZE_OF_ARRAY_DISTANCES) {
...


This version removes the necessity of a run time index into the array
every time the code calls round_distance_reduced. A small improvement
in run time performance. Possibly not worth it because the code is a
bit harder to read.

Thoughts? Ideas? Brickbats?
…
-- 

The right of the people to be secure in their persons, houses, papers,
and effects, against unreasonable searches and seizures, shall not be
violated, and no Warrants shall issue, but upon probable cause,
supported by Oath or affirmation, and particularly describing the
place to be searched, and the persons or things to be seized.
-- U.S. Const. Amendment IV

Key fingerprint = CE5C 6645 A45A 64E4 94C0  809C FFF6 4C48 4ECD DFDB",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,373,2017-11-19T20:02:44Z,2018-01-19T21:51:24Z,2018-01-19T21:51:28Z,MERGED,True,20,17,1,https://github.com/charlescurley,[WIP] fix:navit:navigation.c:distance_set_last,8,[],https://github.com/navit-gps/navit/pull/373,https://github.com/pgrandin,3,https://github.com/navit-gps/navit/pull/373#issuecomment-349257651,"Added a test so that the array subscript is never less than the lower bound. Note: there is no test for the upper bound.
Also, I saw no reason to test for i == 0 right after the code initialized it to zero.
modified:   navit/navigation.c",@metalstrolch would you like to update your review following @charlescurley 's comment?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,373,2017-11-19T20:02:44Z,2018-01-19T21:51:24Z,2018-01-19T21:51:28Z,MERGED,True,20,17,1,https://github.com/charlescurley,[WIP] fix:navit:navigation.c:distance_set_last,8,[],https://github.com/navit-gps/navit/pull/373,https://github.com/metalstrolch,4,https://github.com/navit-gps/navit/pull/373#issuecomment-349263877,"Added a test so that the array subscript is never less than the lower bound. Note: there is no test for the upper bound.
Also, I saw no reason to test for i == 0 right after the code initialized it to zero.
modified:   navit/navigation.c","OK, having time to have a look on what's done in navigation.c I still request the following changes:

Mark the distances array const. Used this way it must never ever change.
Replace distance_set_last function entirely by replacing it by preprocessor math to get the number of items in distances array. Or at least make it return that. Sizeof may be our friend here, to avoid miscounting.

If messing with some ""cute"" code as this, better fix it right than replace it by even ""cuter"" code.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,373,2017-11-19T20:02:44Z,2018-01-19T21:51:24Z,2018-01-19T21:51:28Z,MERGED,True,20,17,1,https://github.com/charlescurley,[WIP] fix:navit:navigation.c:distance_set_last,8,[],https://github.com/navit-gps/navit/pull/373,https://github.com/charlescurley,5,https://github.com/navit-gps/navit/pull/373#issuecomment-349779685,"Added a test so that the array subscript is never less than the lower bound. Note: there is no test for the upper bound.
Also, I saw no reason to test for i == 0 right after the code initialized it to zero.
modified:   navit/navigation.c","On Tue, 05 Dec 2017 02:34:58 -0800 Stefan Wildemann ***@***.***> wrote:
 OK, having time to have a look on what's done in navigation.c I still
 request the following changes:

 1. Mark the distances array const. Used this way it must never ever
 change.
Agree.
 2. Replace distance_set_last function entirely by replacing
 it by preprocessor math to get the number of items in distances
 array. Or at least make it return that. Sizeof may be our friend
 here, to avoid miscounting.
Agree. When I worked on this earlier, I wasn't sure sizeof() would work
correctly. I looked it up, and it should, with one caveat.

The caveat has to do with alignment, on compilers and processors where
the size of the data type is less than the word size of the processor.
The PDP 11 has a word size of 16 bits. Chars are 8 bits, but align on
16 bit boundaries. An array of chars has one char in each word of
memory. So doing this would fail:

/* a test program for sizes of arrays. */

#include <stdio.h>

char array[] = {1,2,3};
#define SIZE_OF_ARRAY (sizeof (array)/sizeof (char))
#define LAST_ELEMENT (SIZE_OF_ARRAY-1)

int
main (void) {
        printf (""Array is size %i.\n"", SIZE_OF_ARRAY);
        printf (""Last Element is %i.\n"", array[LAST_ELEMENT]);
        printf (""Penultimate Element is %i.\n"", array[LAST_ELEMENT-1]);

        return (0);
}

That works correctly on x86 because the processor will cheerfully pack
the chars several to a word. The PDP 11 won't.

This is less of a problem with ints because they are usually the word
size of the processor: 16 on the PDP 11, 64 on AMD 64 architecture.

So: Do we expect to run on any processors where this might be a
problem? And do we want to take the risk we might in the future? Is
there a better way to do this?

 If messing with some ""cute"" code as this, better fix it right than
 replace it by even ""cuter"" code.

Agree.

I added code with the above in mind to branch distance_set_last.return.
…
-- 

The right of the people to be secure in their persons, houses, papers,
and effects, against unreasonable searches and seizures, shall not be
violated, and no Warrants shall issue, but upon probable cause,
supported by Oath or affirmation, and particularly describing the
place to be searched, and the persons or things to be seized.
-- U.S. Const. Amendment IV

Key fingerprint = CE5C 6645 A45A 64E4 94C0  809C FFF6 4C48 4ECD DFDB",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,373,2017-11-19T20:02:44Z,2018-01-19T21:51:24Z,2018-01-19T21:51:28Z,MERGED,True,20,17,1,https://github.com/charlescurley,[WIP] fix:navit:navigation.c:distance_set_last,8,[],https://github.com/navit-gps/navit/pull/373,https://github.com/metalstrolch,6,https://github.com/navit-gps/navit/pull/373#issuecomment-349799470,"Added a test so that the array subscript is never less than the lower bound. Note: there is no test for the upper bound.
Also, I saw no reason to test for i == 0 right after the code initialized it to zero.
modified:   navit/navigation.c","This way it looks good. The way the number of elements is defined now seems to be quite common.
I wouldn't care too much about real exotic archs.
But you're right about the PDP11 and maybe the Honeywells of the same time.
Modern DSPs. that sometimes have char with 16 or 32 bit, are not affected by a miscalculation here. It's really only the PDP11.
Btw: shouldn't the PDP11 have 16 bit chars nowadays? Nothing says a char must be equal to 8 bit wide. It just says at least 8 bit as far as I remember.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,373,2017-11-19T20:02:44Z,2018-01-19T21:51:24Z,2018-01-19T21:51:28Z,MERGED,True,20,17,1,https://github.com/charlescurley,[WIP] fix:navit:navigation.c:distance_set_last,8,[],https://github.com/navit-gps/navit/pull/373,https://github.com/charlescurley,7,https://github.com/navit-gps/navit/pull/373#issuecomment-349812778,"Added a test so that the array subscript is never less than the lower bound. Note: there is no test for the upper bound.
Also, I saw no reason to test for i == 0 right after the code initialized it to zero.
modified:   navit/navigation.c","On Wed, 06 Dec 2017 22:42:20 +0000 (UTC) Stefan Wildemann ***@***.***> wrote:
 This way it looks good. The way the number of elements is defined now
 seems to be quite common.

 I wouldn't care too much about real exotic archs.
OK. I think I'll add a comment, just in case.
 But you're right about the PDP11 and maybe the Honeywells of the same
 time. Modern DSPs. that sometimes have char with 16 or 32 bit, are
 not affected by a miscalculation here. It's really only the PDP11.
OK. And I don't plan on using a PDP-11 for a carputer any time soon.

I want to run through this code with gdb just to be sure everything is
on the level, and haven't figured out yet how to get it called. So
let's not call it good yet.
…
-- 

The right of the people to be secure in their persons, houses, papers,
and effects, against unreasonable searches and seizures, shall not be
violated, and no Warrants shall issue, but upon probable cause,
supported by Oath or affirmation, and particularly describing the
place to be searched, and the persons or things to be seized.
-- U.S. Const. Amendment IV

Key fingerprint = CE5C 6645 A45A 64E4 94C0  809C FFF6 4C48 4ECD DFDB",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,373,2017-11-19T20:02:44Z,2018-01-19T21:51:24Z,2018-01-19T21:51:28Z,MERGED,True,20,17,1,https://github.com/charlescurley,[WIP] fix:navit:navigation.c:distance_set_last,8,[],https://github.com/navit-gps/navit/pull/373,https://github.com/pgrandin,8,https://github.com/navit-gps/navit/pull/373#issuecomment-351562543,"Added a test so that the array subscript is never less than the lower bound. Note: there is no test for the upper bound.
Also, I saw no reason to test for i == 0 right after the code initialized it to zero.
modified:   navit/navigation.c","I want to run through this code with gdb just to be sure everything is on the level, and haven't figured out yet how to get it called. So let's not call it good yet.

I've renamed your PR as a WIP for now, please remove when you feel that it's ready for review.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,373,2017-11-19T20:02:44Z,2018-01-19T21:51:24Z,2018-01-19T21:51:28Z,MERGED,True,20,17,1,https://github.com/charlescurley,[WIP] fix:navit:navigation.c:distance_set_last,8,[],https://github.com/navit-gps/navit/pull/373,https://github.com/sleske,9,https://github.com/navit-gps/navit/pull/373#issuecomment-351945159,"Added a test so that the array subscript is never less than the lower bound. Note: there is no test for the upper bound.
Also, I saw no reason to test for i == 0 right after the code initialized it to zero.
modified:   navit/navigation.c","@charlescurley:
Kudos for thinking thoroughly about the compatibility of your C code.
Just a standard-nitpicking note:

The PDP 11 has a word size of 16 bits. Chars are 8 bits, but align on 16 bit boundaries. An array of chars has one char in each word of memory. So doing this would fail:
char array[] = {1,2,3};
#define SIZE_OF_ARRAY (sizeof (array)/sizeof (char))

While I can't speak for the PDP 11, this cannot happen in standard C (as defined by the ISO/IEC standards, i.e. C99 etc). In standard C, an array is a ""contiguously allocated nonempty set of objects"", so no padding is allowed between elements. This means that in order for a type to be used in an array, its alignment must divide its size. See for example Can C arrays contain padding in between elements? on stackoverflow.com for details.
tl;dr: We don't need to worry about this, the C standard has our back 📕.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,373,2017-11-19T20:02:44Z,2018-01-19T21:51:24Z,2018-01-19T21:51:28Z,MERGED,True,20,17,1,https://github.com/charlescurley,[WIP] fix:navit:navigation.c:distance_set_last,8,[],https://github.com/navit-gps/navit/pull/373,https://github.com/pgrandin,10,https://github.com/navit-gps/navit/pull/373#issuecomment-356374676,"Added a test so that the array subscript is never less than the lower bound. Note: there is no test for the upper bound.
Also, I saw no reason to test for i == 0 right after the code initialized it to zero.
modified:   navit/navigation.c","so @charlescurley good to go? your PR still says ""WIP""",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,373,2017-11-19T20:02:44Z,2018-01-19T21:51:24Z,2018-01-19T21:51:28Z,MERGED,True,20,17,1,https://github.com/charlescurley,[WIP] fix:navit:navigation.c:distance_set_last,8,[],https://github.com/navit-gps/navit/pull/373,https://github.com/charlescurley,11,https://github.com/navit-gps/navit/pull/373#issuecomment-356401345,"Added a test so that the array subscript is never less than the lower bound. Note: there is no test for the upper bound.
Also, I saw no reason to test for i == 0 right after the code initialized it to zero.
modified:   navit/navigation.c","On Tue, 09 Jan 2018 10:38:14 -0800 Pierre GRANDIN ***@***.***> wrote:
 so @charlescurley good to go? your PR still says ""WIP""
Meh. I have not had a chance to use gdb on this. Once I do, it will be
less than a day, probably an hour's work.

Does anyone else think it necessary? Given sleske's discussion, I am
not convinced it is necessary.
…
-- 

A great civilization is not conquered from without until it has
destroyed itself within. The essential causes of Rome's decline lay in
her people, her morals, her class struggle, her failing trade, her
bureaucratic despotism, her stifling taxes, her consuming wars.
-- Will and Ariel Durant, III The Story of Civilization (1944) epilogue",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,373,2017-11-19T20:02:44Z,2018-01-19T21:51:24Z,2018-01-19T21:51:28Z,MERGED,True,20,17,1,https://github.com/charlescurley,[WIP] fix:navit:navigation.c:distance_set_last,8,[],https://github.com/navit-gps/navit/pull/373,https://github.com/pgrandin,12,https://github.com/navit-gps/navit/pull/373#issuecomment-356672706,"Added a test so that the array subscript is never less than the lower bound. Note: there is no test for the upper bound.
Also, I saw no reason to test for i == 0 right after the code initialized it to zero.
modified:   navit/navigation.c","Does anyone else think it necessary? Given sleske's discussion, I am not convinced it is necessary.

Yep, I would agree.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,374,2017-11-23T08:56:20Z,2017-11-23T18:23:06Z,2017-11-23T18:23:11Z,MERGED,True,13,8,1,https://github.com/jkoan,Android notification fix,3,[],https://github.com/navit-gps/navit/pull/374,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/374,It now uses NotificationCompat from android support to support android from api 4 and up.,It now uses NotificationCompat from android support to support android from api 4 and up.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,374,2017-11-23T08:56:20Z,2017-11-23T18:23:06Z,2017-11-23T18:23:11Z,MERGED,True,13,8,1,https://github.com/jkoan,Android notification fix,3,[],https://github.com/navit-gps/navit/pull/374,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/374#issuecomment-346678963,It now uses NotificationCompat from android support to support android from api 4 and up.,Thanks for fixing this @jkoan !,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,375,2017-11-23T10:53:00Z,2017-11-27T05:58:59Z,2017-11-27T05:59:04Z,MERGED,True,134,32,15,https://github.com/jkoan,Add some Documentation to Plugins,4,[],https://github.com/navit-gps/navit/pull/375,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/375,"This PR add Documentation to the Plugins and the Plugin Sytem.
Also all support libraries are excluded to keep focus on navit and because they are not navit related.","This PR add Documentation to the Plugins and the Plugin Sytem.
Also all support libraries are excluded to keep focus on navit and because they are not navit related.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,376,2017-11-25T11:10:09Z,2018-01-09T18:37:29Z,2018-01-09T18:37:32Z,MERGED,True,52,14,1,https://github.com/jkoan,fix:android:Use date of commit as version code instead of system time,3,[],https://github.com/navit-gps/navit/pull/376,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/376,Android version code now uses again the timestamp of the last commit instead of current system time and in the about menu the commit hash of the commit is shown again,Android version code now uses again the timestamp of the last commit instead of current system time and in the about menu the commit hash of the commit is shown again,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,376,2017-11-25T11:10:09Z,2018-01-09T18:37:29Z,2018-01-09T18:37:32Z,MERGED,True,52,14,1,https://github.com/jkoan,fix:android:Use date of commit as version code instead of system time,3,[],https://github.com/navit-gps/navit/pull/376,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/376#issuecomment-348475842,Android version code now uses again the timestamp of the last commit instead of current system time and in the about menu the commit hash of the commit is shown again,"In the current state, the git client is not able to print out the time of the last commit in a given format like the ubuntu version of git does, i will ether try to update our infrastructure to build on newer images or parse the datecode from a available format. But we need to respect timezones because navit devs are located all over the world",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,377,2017-11-25T11:17:48Z,2017-12-03T13:00:12Z,2017-12-03T13:00:16Z,MERGED,True,3,2,1,https://github.com/jkoan,fix:cmake:Make copy of files more reliable,4,[],https://github.com/navit-gps/navit/pull/377,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/377,"This PR should help with failing builds. It uses the cmake copy function instead of an ""externel"" copy. The function will check if the action was successful.","This PR should help with failing builds. It uses the cmake copy function instead of an ""externel"" copy. The function will check if the action was successful.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,377,2017-11-25T11:17:48Z,2017-12-03T13:00:12Z,2017-12-03T13:00:16Z,MERGED,True,3,2,1,https://github.com/jkoan,fix:cmake:Make copy of files more reliable,4,[],https://github.com/navit-gps/navit/pull/377,https://github.com/sleske,2,https://github.com/navit-gps/navit/pull/377#issuecomment-347180576,"This PR should help with failing builds. It uses the cmake copy function instead of an ""externel"" copy. The function will check if the action was successful.","Could you explain how this will help with failing builds (and with which ones)? As far as I see, the old version also uses commands internal to CMake, it just re-executes CMake, which is something we do in many places.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,377,2017-11-25T11:17:48Z,2017-12-03T13:00:12Z,2017-12-03T13:00:16Z,MERGED,True,3,2,1,https://github.com/jkoan,fix:cmake:Make copy of files more reliable,4,[],https://github.com/navit-gps/navit/pull/377,https://github.com/jkoan,3,https://github.com/navit-gps/navit/pull/377#issuecomment-347192603,"This PR should help with failing builds. It uses the cmake copy function instead of an ""externel"" copy. The function will check if the action was successful.","As far as i know: If you execute cmake as an external task you must check for the error message explicitly, but if you include it as a function if has all checks included.
But i will make more changes into this PR at other places, so copy errors should be away.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,377,2017-11-25T11:17:48Z,2017-12-03T13:00:12Z,2017-12-03T13:00:16Z,MERGED,True,3,2,1,https://github.com/jkoan,fix:cmake:Make copy of files more reliable,4,[],https://github.com/navit-gps/navit/pull/377,https://github.com/sleske,4,https://github.com/navit-gps/navit/pull/377#issuecomment-347489907,"This PR should help with failing builds. It uses the cmake copy function instead of an ""externel"" copy. The function will check if the action was successful.","As far as i know: If you execute cmake as an external task you must check for the error message explicitly, but if you include it as a function if has all checks included.

Yes, good point. WIth that in mind, your changes make sense.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,378,2017-11-26T21:22:09Z,2017-11-27T04:32:39Z,2017-11-27T13:26:48Z,MERGED,True,50,19,2,https://github.com/mvglasow,Refine documentation,5,[],https://github.com/navit-gps/navit/pull/378,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/378,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,379,2017-11-30T17:04:51Z,2017-12-02T19:14:55Z,2017-12-02T19:14:55Z,MERGED,True,33,2,2,https://github.com/mvglasow,Add documentation,9,[],https://github.com/navit-gps/navit/pull/379,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/379,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,379,2017-11-30T17:04:51Z,2017-12-02T19:14:55Z,2017-12-02T19:14:55Z,MERGED,True,33,2,2,https://github.com/mvglasow,Add documentation,9,[],https://github.com/navit-gps/navit/pull/379,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/379#issuecomment-348646068,,"Thanks @mvglasow
Can you please re-run the build_android_arm job? As it ran against your own fork i cannot do it.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,379,2017-11-30T17:04:51Z,2017-12-02T19:14:55Z,2017-12-02T19:14:55Z,MERGED,True,33,2,2,https://github.com/mvglasow,Add documentation,9,[],https://github.com/navit-gps/navit/pull/379,https://github.com/mvglasow,3,https://github.com/navit-gps/navit/pull/379#issuecomment-348704263,,"@pgrandin Done, this time it seems to have worked.",True,{'THUMBS_UP': ['https://github.com/jkoan']}
navit-gps/navit,https://github.com/navit-gps/navit,380,2017-11-30T17:18:12Z,2017-12-02T10:47:19Z,2017-12-02T10:47:24Z,MERGED,True,27,15,4,https://github.com/charlescurley,fix:gtk:Fix imperial factors. Again.,2,[],https://github.com/navit-gps/navit/pull/380,https://github.com/charlescurley,1,https://github.com/navit-gps/navit/pull/380,"Another go at fixing imperial measures. This is ready for testing on a different machine, but not for a pull request.
Also, some improvements in some comments.
OK, after 210 miles of tests, I think it's ready for prime time.","Another go at fixing imperial measures. This is ready for testing on a different machine, but not for a pull request.
Also, some improvements in some comments.
OK, after 210 miles of tests, I think it's ready for prime time.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,381,2017-12-02T09:42:06Z,2017-12-03T11:53:27Z,2017-12-03T11:53:30Z,MERGED,True,53,44,1,https://github.com/jkoan,fix:cmake:Rework of xslt convert process,3,[],https://github.com/navit-gps/navit/pull/381,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/381,"This PR fixes the issue that navit.dtd could not been copyed on android build which caused the build to fail sometimes.
Also i reworked this file to use 3 spaces anywhere","This PR fixes the issue that navit.dtd could not been copyed on android build which caused the build to fail sometimes.
Also i reworked this file to use 3 spaces anywhere",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,382,2017-12-04T03:43:25Z,2017-12-04T08:21:15Z,2017-12-04T08:21:22Z,MERGED,True,11,7,2,https://github.com/pgrandin,improve:ci:improved linux builds,3,[],https://github.com/navit-gps/navit/pull/382,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/382,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,384,2017-12-04T11:50:45Z,2017-12-04T23:12:31Z,2017-12-04T23:12:40Z,MERGED,True,2,2,2,https://github.com/jkoan,fix:ci:Install imagemagick for android build to convert images ,5,[],https://github.com/navit-gps/navit/pull/384,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/384,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,384,2017-12-04T11:50:45Z,2017-12-04T23:12:31Z,2017-12-04T23:12:40Z,MERGED,True,2,2,2,https://github.com/jkoan,fix:ci:Install imagemagick for android build to convert images ,5,[],https://github.com/navit-gps/navit/pull/384,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/384#issuecomment-349097286,,Let's move it to setup_common_requirements instead.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,385,2017-12-05T21:06:42Z,2017-12-06T13:59:20Z,2017-12-06T13:59:20Z,MERGED,True,21,9,1,https://github.com/mvglasow,Refactor:route:More documentation,1,[],https://github.com/navit-gps/navit/pull/385,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/385,Signed-off-by: mvglasow <michael -at- vonglasow.com>,Signed-off-by: mvglasow <michael -at- vonglasow.com>,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,386,2017-12-23T07:26:35Z,2018-01-02T20:20:38Z,2018-01-10T22:39:36Z,MERGED,True,21,5,2,https://github.com/pgrandin,fix:wince:fixed the wince build,12,[],https://github.com/navit-gps/navit/pull/386,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/386,"Since our previous efforts to get the wince toolchain to work on a recent setup failed, I took the problem the other way : building wince on a ubuntu-8.04 container.
The build generates valid .exe files, but currently has one drawback : something is broken or outdated in the certificate chain and ssl requests won't work. This isn't a big problem for the build itself, but this is currently preventing us from uploading the artifacts in circleci ( this will fail with x509: failed to load system roots and no roots provided ).
The same setup can be used to build locally :

docker run -ti -v /home/pierre/dev/wince/:/root/ pgrandin/wince:8.04 /bin/bash
mkdir /root/navit/wince/ &&  cd /root/navit/wince/
cmake -DCMAKE_TOOLCHAIN_FILE=$NAVIT_PATH/Toolchain/arm-mingw32ce.cmake -Dsvg2png_scaling:STRING=0,16 -Dsvg2png_scaling_nav:STRING=32 -Dsvg2png_scaling_country:STRING=16 $NAVIT_PATH
make","Since our previous efforts to get the wince toolchain to work on a recent setup failed, I took the problem the other way : building wince on a ubuntu-8.04 container.
The build generates valid .exe files, but currently has one drawback : something is broken or outdated in the certificate chain and ssl requests won't work. This isn't a big problem for the build itself, but this is currently preventing us from uploading the artifacts in circleci ( this will fail with x509: failed to load system roots and no roots provided ).
The same setup can be used to build locally :

docker run -ti -v /home/pierre/dev/wince/:/root/ pgrandin/wince:8.04 /bin/bash
mkdir /root/navit/wince/ &&  cd /root/navit/wince/
cmake -DCMAKE_TOOLCHAIN_FILE=$NAVIT_PATH/Toolchain/arm-mingw32ce.cmake -Dsvg2png_scaling:STRING=0,16 -Dsvg2png_scaling_nav:STRING=32 -Dsvg2png_scaling_country:STRING=16 $NAVIT_PATH
make",True,{'THUMBS_UP': ['https://github.com/geoghegan']}
navit-gps/navit,https://github.com/navit-gps/navit,386,2017-12-23T07:26:35Z,2018-01-02T20:20:38Z,2018-01-10T22:39:36Z,MERGED,True,21,5,2,https://github.com/pgrandin,fix:wince:fixed the wince build,12,[],https://github.com/navit-gps/navit/pull/386,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/386#issuecomment-353961530,"Since our previous efforts to get the wince toolchain to work on a recent setup failed, I took the problem the other way : building wince on a ubuntu-8.04 container.
The build generates valid .exe files, but currently has one drawback : something is broken or outdated in the certificate chain and ssl requests won't work. This isn't a big problem for the build itself, but this is currently preventing us from uploading the artifacts in circleci ( this will fail with x509: failed to load system roots and no roots provided ).
The same setup can be used to build locally :

docker run -ti -v /home/pierre/dev/wince/:/root/ pgrandin/wince:8.04 /bin/bash
mkdir /root/navit/wince/ &&  cd /root/navit/wince/
cmake -DCMAKE_TOOLCHAIN_FILE=$NAVIT_PATH/Toolchain/arm-mingw32ce.cmake -Dsvg2png_scaling:STRING=0,16 -Dsvg2png_scaling_nav:STRING=32 -Dsvg2png_scaling_country:STRING=16 $NAVIT_PATH
make","Maybe CircleCI is using a custom root cert?
Compare /etc/ssl/certs/ca-certificates.crt of your new docker container with some of the working ones.
Or just try replacing it by the one from a working container.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,386,2017-12-23T07:26:35Z,2018-01-02T20:20:38Z,2018-01-10T22:39:36Z,MERGED,True,21,5,2,https://github.com/pgrandin,fix:wince:fixed the wince build,12,[],https://github.com/navit-gps/navit/pull/386,https://github.com/pgrandin,3,https://github.com/navit-gps/navit/pull/386#issuecomment-353999038,"Since our previous efforts to get the wince toolchain to work on a recent setup failed, I took the problem the other way : building wince on a ubuntu-8.04 container.
The build generates valid .exe files, but currently has one drawback : something is broken or outdated in the certificate chain and ssl requests won't work. This isn't a big problem for the build itself, but this is currently preventing us from uploading the artifacts in circleci ( this will fail with x509: failed to load system roots and no roots provided ).
The same setup can be used to build locally :

docker run -ti -v /home/pierre/dev/wince/:/root/ pgrandin/wince:8.04 /bin/bash
mkdir /root/navit/wince/ &&  cd /root/navit/wince/
cmake -DCMAKE_TOOLCHAIN_FILE=$NAVIT_PATH/Toolchain/arm-mingw32ce.cmake -Dsvg2png_scaling:STRING=0,16 -Dsvg2png_scaling_nav:STRING=32 -Dsvg2png_scaling_country:STRING=16 $NAVIT_PATH
make","Or just try replacing it by the one from a working container.

I tried that quickly indeed, by copying the /etc/ssl-certificates folder from a 16.04 to this 8.04, it didn't work unfortunately.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,386,2017-12-23T07:26:35Z,2018-01-02T20:20:38Z,2018-01-10T22:39:36Z,MERGED,True,21,5,2,https://github.com/pgrandin,fix:wince:fixed the wince build,12,[],https://github.com/navit-gps/navit/pull/386,https://github.com/pgrandin,4,https://github.com/navit-gps/navit/pull/386#issuecomment-354414275,"Since our previous efforts to get the wince toolchain to work on a recent setup failed, I took the problem the other way : building wince on a ubuntu-8.04 container.
The build generates valid .exe files, but currently has one drawback : something is broken or outdated in the certificate chain and ssl requests won't work. This isn't a big problem for the build itself, but this is currently preventing us from uploading the artifacts in circleci ( this will fail with x509: failed to load system roots and no roots provided ).
The same setup can be used to build locally :

docker run -ti -v /home/pierre/dev/wince/:/root/ pgrandin/wince:8.04 /bin/bash
mkdir /root/navit/wince/ &&  cd /root/navit/wince/
cmake -DCMAKE_TOOLCHAIN_FILE=$NAVIT_PATH/Toolchain/arm-mingw32ce.cmake -Dsvg2png_scaling:STRING=0,16 -Dsvg2png_scaling_nav:STRING=32 -Dsvg2png_scaling_country:STRING=16 $NAVIT_PATH
make","I managed to fix the certificate issue, using the following Dockerfile : https://github.com/navit-gps/Dockerfiles/blob/master/wince/Dockerfile
🍾
A resulting .cab is available here : https://4514-30791823-gh.circle-artifacts.com/0/root/project/wince/output/navit.cab (all the wince artifacts are available here : https://circleci.com/gh/navit-gps/navit/4514#artifacts/containers/0 )",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,386,2017-12-23T07:26:35Z,2018-01-02T20:20:38Z,2018-01-10T22:39:36Z,MERGED,True,21,5,2,https://github.com/pgrandin,fix:wince:fixed the wince build,12,[],https://github.com/navit-gps/navit/pull/386,https://github.com/sleske,5,https://github.com/navit-gps/navit/pull/386#issuecomment-354984929,"Since our previous efforts to get the wince toolchain to work on a recent setup failed, I took the problem the other way : building wince on a ubuntu-8.04 container.
The build generates valid .exe files, but currently has one drawback : something is broken or outdated in the certificate chain and ssl requests won't work. This isn't a big problem for the build itself, but this is currently preventing us from uploading the artifacts in circleci ( this will fail with x509: failed to load system roots and no roots provided ).
The same setup can be used to build locally :

docker run -ti -v /home/pierre/dev/wince/:/root/ pgrandin/wince:8.04 /bin/bash
mkdir /root/navit/wince/ &&  cd /root/navit/wince/
cmake -DCMAKE_TOOLCHAIN_FILE=$NAVIT_PATH/Toolchain/arm-mingw32ce.cmake -Dsvg2png_scaling:STRING=0,16 -Dsvg2png_scaling_nav:STRING=32 -Dsvg2png_scaling_country:STRING=16 $NAVIT_PATH
make","@pgrandin : It's cool you got the build to work. Just out of curiosity: Which devices does this build support? The Wiki page on WinCE just says Windows CE 5.0 is supported (and does not even say on which devices).
Maybe you could update that page? There's not much point in having a build for Windows CE if noone knows what hardware it runs on...",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,386,2017-12-23T07:26:35Z,2018-01-02T20:20:38Z,2018-01-10T22:39:36Z,MERGED,True,21,5,2,https://github.com/pgrandin,fix:wince:fixed the wince build,12,[],https://github.com/navit-gps/navit/pull/386,https://github.com/pgrandin,6,https://github.com/navit-gps/navit/pull/386#issuecomment-356390121,"Since our previous efforts to get the wince toolchain to work on a recent setup failed, I took the problem the other way : building wince on a ubuntu-8.04 container.
The build generates valid .exe files, but currently has one drawback : something is broken or outdated in the certificate chain and ssl requests won't work. This isn't a big problem for the build itself, but this is currently preventing us from uploading the artifacts in circleci ( this will fail with x509: failed to load system roots and no roots provided ).
The same setup can be used to build locally :

docker run -ti -v /home/pierre/dev/wince/:/root/ pgrandin/wince:8.04 /bin/bash
mkdir /root/navit/wince/ &&  cd /root/navit/wince/
cmake -DCMAKE_TOOLCHAIN_FILE=$NAVIT_PATH/Toolchain/arm-mingw32ce.cmake -Dsvg2png_scaling:STRING=0,16 -Dsvg2png_scaling_nav:STRING=32 -Dsvg2png_scaling_country:STRING=16 $NAVIT_PATH
make","@sleske good point. The toolchain should build content compatible with ""Windows Mobile 6.1 and higher"". That's what they, without more details. We have a user on IRC that has been around for a few weeks now, trying to get Navit to work on a AVIC-MRZ02 head unit. It took some trial but we are now able to start Navit on that platform (we still need to figure out an issue with image loading though).
Hopefully we can get a couple of users who still own wince devices to run some test and provide feedback. I'll update the wince page with what I have so far though.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,386,2017-12-23T07:26:35Z,2018-01-02T20:20:38Z,2018-01-10T22:39:36Z,MERGED,True,21,5,2,https://github.com/pgrandin,fix:wince:fixed the wince build,12,[],https://github.com/navit-gps/navit/pull/386,https://github.com/sleske,7,https://github.com/navit-gps/navit/pull/386#issuecomment-356761473,"Since our previous efforts to get the wince toolchain to work on a recent setup failed, I took the problem the other way : building wince on a ubuntu-8.04 container.
The build generates valid .exe files, but currently has one drawback : something is broken or outdated in the certificate chain and ssl requests won't work. This isn't a big problem for the build itself, but this is currently preventing us from uploading the artifacts in circleci ( this will fail with x509: failed to load system roots and no roots provided ).
The same setup can be used to build locally :

docker run -ti -v /home/pierre/dev/wince/:/root/ pgrandin/wince:8.04 /bin/bash
mkdir /root/navit/wince/ &&  cd /root/navit/wince/
cmake -DCMAKE_TOOLCHAIN_FILE=$NAVIT_PATH/Toolchain/arm-mingw32ce.cmake -Dsvg2png_scaling:STRING=0,16 -Dsvg2png_scaling_nav:STRING=32 -Dsvg2png_scaling_country:STRING=16 $NAVIT_PATH
make","Hopefully we can get a couple of users who still own wince devices to run some test and provide feedback.

Yes, that is the crucial point, I think. Windows Mobile is quite old (Win Mobile 6.1 is from 2008) - not to speak of WIndows CE. The AVIC-MRZ02 is described on Pioneer's page as being from 2007. Frankly, I'm afraid we are maintaining code for a platform nobody uses - but maybe I'm wrong. We'll see.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,387,2017-12-26T01:24:46Z,2017-12-26T18:32:38Z,2018-01-02T23:27:43Z,MERGED,True,14,0,2,https://github.com/pgrandin,add:graphics-qt5:add missing watchEvent slot,3,[],https://github.com/navit-gps/navit/pull/387,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/387,"This PR adds a missing watchEvent slot, which is required to get things like gpsd vehicle update to work.","This PR adds a missing watchEvent slot, which is required to get things like gpsd vehicle update to work.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,387,2017-12-26T01:24:46Z,2017-12-26T18:32:38Z,2018-01-02T23:27:43Z,MERGED,True,14,0,2,https://github.com/pgrandin,add:graphics-qt5:add missing watchEvent slot,3,[],https://github.com/navit-gps/navit/pull/387,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/387#issuecomment-353998806,"This PR adds a missing watchEvent slot, which is required to get things like gpsd vehicle update to work.","These are the mistakes that could be avoided by using the new function pointer based connect syntax.

I'm not sure that I'm aware of that. Do you have an example?

Seems the qt5 based vehicle I use on sailfish doesn't need this. So I never encountered the err.

Yep, makes sense.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,388,2017-12-26T11:49:12Z,2017-12-31T09:59:22Z,2017-12-31T09:59:27Z,MERGED,True,8,3,2,https://github.com/metalstrolch,Sailfish build on newer SDKs,4,[],https://github.com/navit-gps/navit/pull/388,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/388,"This pull request enables Navit to be built on newer Sailfish SDKs which uses different tool paths than before. Beside that is adds now mandatory build requirement ""git"".","This pull request enables Navit to be built on newer Sailfish SDKs which uses different tool paths than before. Beside that is adds now mandatory build requirement ""git"".",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,388,2017-12-26T11:49:12Z,2017-12-31T09:59:22Z,2017-12-31T09:59:27Z,MERGED,True,8,3,2,https://github.com/metalstrolch,Sailfish build on newer SDKs,4,[],https://github.com/navit-gps/navit/pull/388,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/388#issuecomment-353978164,"This pull request enables Navit to be built on newer Sailfish SDKs which uses different tool paths than before. Beside that is adds now mandatory build requirement ""git"".",I would like to have a check for the variable (only a small message if the variable VERSION_ID is not set),True,{}
navit-gps/navit,https://github.com/navit-gps/navit,388,2017-12-26T11:49:12Z,2017-12-31T09:59:22Z,2017-12-31T09:59:27Z,MERGED,True,8,3,2,https://github.com/metalstrolch,Sailfish build on newer SDKs,4,[],https://github.com/navit-gps/navit/pull/388,https://github.com/jkoan,3,https://github.com/navit-gps/navit/pull/388#issuecomment-354595208,"This pull request enables Navit to be built on newer Sailfish SDKs which uses different tool paths than before. Beside that is adds now mandatory build requirement ""git"".",Its only for sailfish so it has no big impact --> merge,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,389,2018-01-04T20:03:55Z,2018-01-04T20:45:02Z,2018-01-19T17:05:22Z,MERGED,True,8,7,1,https://github.com/mvglasow,Refactor:route:Improve documentation,1,[],https://github.com/navit-gps/navit/pull/389,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/389,Signed-off-by: mvglasow <michael -at- vonglasow.com>,Signed-off-by: mvglasow <michael -at- vonglasow.com>,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,389,2018-01-04T20:03:55Z,2018-01-04T20:45:02Z,2018-01-19T17:05:22Z,MERGED,True,8,7,1,https://github.com/mvglasow,Refactor:route:Improve documentation,1,[],https://github.com/navit-gps/navit/pull/389,https://github.com/sleske,2,https://github.com/navit-gps/navit/pull/389#issuecomment-355548865,Signed-off-by: mvglasow <michael -at- vonglasow.com>,"Thanks for improving the docs. Often overlooked, yet important 👍 .
And BTW: I don't think simple changes like this really need a PR. Just commit them to trunk - we can always fix any mistakes later.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,389,2018-01-04T20:03:55Z,2018-01-04T20:45:02Z,2018-01-19T17:05:22Z,MERGED,True,8,7,1,https://github.com/mvglasow,Refactor:route:Improve documentation,1,[],https://github.com/navit-gps/navit/pull/389,https://github.com/mvglasow,3,https://github.com/navit-gps/navit/pull/389#issuecomment-355695308,Signed-off-by: mvglasow <michael -at- vonglasow.com>,"@sleske afaik direct commits to trunk have been disabled, which leaves pull requests as the only option.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,389,2018-01-04T20:03:55Z,2018-01-04T20:45:02Z,2018-01-19T17:05:22Z,MERGED,True,8,7,1,https://github.com/mvglasow,Refactor:route:Improve documentation,1,[],https://github.com/navit-gps/navit/pull/389,https://github.com/sleske,4,https://github.com/navit-gps/navit/pull/389#issuecomment-356104387,Signed-off-by: mvglasow <michael -at- vonglasow.com>,"@mvglasow : Ah, I didn't know. Seems it does not apply to me, as I'm a team admin.
Personally, I think that is too restrictive. Feature branches (which PRs are) should be restricted to risky, disruptive changes, or if a discussion is desired. Having a PR for every trivial change just feels wrong.
I'm not sure where to bring this up, however - do you know how this was decided?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,389,2018-01-04T20:03:55Z,2018-01-04T20:45:02Z,2018-01-19T17:05:22Z,MERGED,True,8,7,1,https://github.com/mvglasow,Refactor:route:Improve documentation,1,[],https://github.com/navit-gps/navit/pull/389,https://github.com/mvglasow,5,https://github.com/navit-gps/navit/pull/389#issuecomment-356268019,Signed-off-by: mvglasow <michael -at- vonglasow.com>,"@sleske: @pgrandin added that a couple of weeks ago (in fact it seems I was the first to stumble across this, trying to push some documentation changes). We talked about this in IRC (https://irclogs.navit.ie/%23navit-2017-10-27.log) and I made some suggestions, but I didn’t follow up any more after that.
Which again raises the question: where would we discuss such things? There’s ticket #383, somewhat related; I would in fact favor trac for such discussions (feel free to CC me if you open a ticket).",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,389,2018-01-04T20:03:55Z,2018-01-04T20:45:02Z,2018-01-19T17:05:22Z,MERGED,True,8,7,1,https://github.com/mvglasow,Refactor:route:Improve documentation,1,[],https://github.com/navit-gps/navit/pull/389,https://github.com/metalstrolch,6,https://github.com/navit-gps/navit/pull/389#issuecomment-356282336,Signed-off-by: mvglasow <michael -at- vonglasow.com>,"I would prefer Github, as I dont have ( and dont want to) have a Track account. Beside that you can easily refer things in Github. So why a double infrastructure!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,389,2018-01-04T20:03:55Z,2018-01-04T20:45:02Z,2018-01-19T17:05:22Z,MERGED,True,8,7,1,https://github.com/mvglasow,Refactor:route:Improve documentation,1,[],https://github.com/navit-gps/navit/pull/389,https://github.com/mvglasow,7,https://github.com/navit-gps/navit/pull/389#issuecomment-356393321,Signed-off-by: mvglasow <michael -at- vonglasow.com>,"@metalstrolch Trac was there before we switched to Github, and as a result, all tickets affecting Navit live there—so technically, Github issues are the redundant part in the infrastructure ;-) Trac supports OpenID with a number of authentication providers (Navit wiki as well as Google, among others, not sure about Github), thus you don’t need a separate account. I do see your point about Github references—maybe that can be added somehow. Though all of these things are even more OT than the discussion about changes to trunk…",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,389,2018-01-04T20:03:55Z,2018-01-04T20:45:02Z,2018-01-19T17:05:22Z,MERGED,True,8,7,1,https://github.com/mvglasow,Refactor:route:Improve documentation,1,[],https://github.com/navit-gps/navit/pull/389,https://github.com/sleske,8,https://github.com/navit-gps/navit/pull/389#issuecomment-359028139,Signed-off-by: mvglasow <michael -at- vonglasow.com>,"Well, it's really unfortunate that we have tickets both in Trac and in Github (issues). I initally opposed enabling issues in Github because of this, but I was overruled.
I think the best option at this point is to migrate the Trac issues to Github and shut down Trac (or make it readonly). But that's a different discussion...",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,389,2018-01-04T20:03:55Z,2018-01-04T20:45:02Z,2018-01-19T17:05:22Z,MERGED,True,8,7,1,https://github.com/mvglasow,Refactor:route:Improve documentation,1,[],https://github.com/navit-gps/navit/pull/389,https://github.com/sleske,9,https://github.com/navit-gps/navit/pull/389#issuecomment-359028490,Signed-off-by: mvglasow <michael -at- vonglasow.com>,"As to the commit / merge rules:
As explained above, I strongly object to requiring PRs for everything.
I think we should continue the discussion in #383 . I'll add a comment there.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,390,2018-01-04T20:12:47Z,2018-01-08T21:27:46Z,2018-01-08T21:28:00Z,MERGED,True,4,0,1,https://github.com/charlescurley,fix:gtk:Initialize Follow menu entry correctly.,2,[],https://github.com/navit-gps/navit/pull/390,https://github.com/charlescurley,1,https://github.com/navit-gps/navit/pull/390,"This should fix http://trac.navit-project.org/ticket/1357 I tested for
follow_vehicle set to zero and one, and absent.
modified:   navit/gui/gtk/gui_gtk_action.c","This should fix http://trac.navit-project.org/ticket/1357 I tested for
follow_vehicle set to zero and one, and absent.
modified:   navit/gui/gtk/gui_gtk_action.c",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,391,2018-01-10T19:59:20Z,2018-01-11T20:24:35Z,2018-01-11T20:24:35Z,MERGED,True,164,12,5,https://github.com/hoehnp,Fix compiler warning,5,[],https://github.com/navit-gps/navit/pull/391,https://github.com/hoehnp,1,https://github.com/navit-gps/navit/pull/391,fix:build:fixed compiler warning in graphics module,fix:build:fixed compiler warning in graphics module,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,392,2018-01-11T00:14:10Z,2018-01-11T05:52:30Z,2018-04-20T17:04:12Z,MERGED,True,106,7,2,https://github.com/mvglasow,Refactor:core:Add more documentation,1,[],https://github.com/navit-gps/navit/pull/392,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/392,Signed-off-by: mvglasow <michael -at- vonglasow.com>,Signed-off-by: mvglasow <michael -at- vonglasow.com>,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,392,2018-01-11T00:14:10Z,2018-01-11T05:52:30Z,2018-04-20T17:04:12Z,MERGED,True,106,7,2,https://github.com/mvglasow,Refactor:core:Add more documentation,1,[],https://github.com/navit-gps/navit/pull/392,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/392#issuecomment-356833761,Signed-off-by: mvglasow <michael -at- vonglasow.com>,Thank you for all your work on the documentation :),True,{}
navit-gps/navit,https://github.com/navit-gps/navit,393,2018-01-14T20:15:22Z,2018-01-14T21:07:49Z,2018-01-14T21:07:49Z,MERGED,True,10,5,2,https://github.com/hoehnp,fix:build:fixed compiler warning in graphics module,1,[],https://github.com/navit-gps/navit/pull/393,https://github.com/hoehnp,1,https://github.com/navit-gps/navit/pull/393,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,394,2018-01-15T22:48:42Z,2018-01-17T21:12:18Z,2018-01-17T21:12:18Z,MERGED,True,5,1,1,https://github.com/hoehnp,fix:build:fixed compiler warning in vehicle module,1,[],https://github.com/navit-gps/navit/pull/394,https://github.com/hoehnp,1,https://github.com/navit-gps/navit/pull/394,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,394,2018-01-15T22:48:42Z,2018-01-17T21:12:18Z,2018-01-17T21:12:18Z,MERGED,True,5,1,1,https://github.com/hoehnp,fix:build:fixed compiler warning in vehicle module,1,[],https://github.com/navit-gps/navit/pull/394,https://github.com/sleske,2,https://github.com/navit-gps/navit/pull/394#issuecomment-357875589,,"Hi, thanks for the PR. The code is still commented out, however. Could you rebase and re-push your PR?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,394,2018-01-15T22:48:42Z,2018-01-17T21:12:18Z,2018-01-17T21:12:18Z,MERGED,True,5,1,1,https://github.com/hoehnp,fix:build:fixed compiler warning in vehicle module,1,[],https://github.com/navit-gps/navit/pull/394,https://github.com/jkoan,3,https://github.com/navit-gps/navit/pull/394#issuecomment-358446820,,"*behavior of the code should not change so everything stays the same just the compiler warning is gone
Ci passed so I am merging",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,395,2018-01-20T21:30:22Z,2018-02-12T22:31:18Z,2018-10-24T21:36:12Z,MERGED,True,97,29,6,https://github.com/hoehnp,fix:build:fixed compiler warning in maptool module,11,[],https://github.com/navit-gps/navit/pull/395,https://github.com/hoehnp,1,https://github.com/navit-gps/navit/pull/395,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,395,2018-01-20T21:30:22Z,2018-02-12T22:31:18Z,2018-10-24T21:36:12Z,MERGED,True,97,29,6,https://github.com/hoehnp,fix:build:fixed compiler warning in maptool module,11,[],https://github.com/navit-gps/navit/pull/395,https://github.com/jandegr,2,https://github.com/navit-gps/navit/pull/395#issuecomment-361677106,,"Hi,
Since routech was removed a while ago
316eefa#diff-e459604cce7ac3c010d84d01ae881e3c
you might consider removing ch.c instead of mending it.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,395,2018-01-20T21:30:22Z,2018-02-12T22:31:18Z,2018-10-24T21:36:12Z,MERGED,True,97,29,6,https://github.com/hoehnp,fix:build:fixed compiler warning in maptool module,11,[],https://github.com/navit-gps/navit/pull/395,https://github.com/jkoan,3,https://github.com/navit-gps/navit/pull/395#issuecomment-364418590,,"I fixed the build issue on your branche (see last commit) the problem was that ch.c was in the CMakeList.txt but the file itself was deleted.
This also only applyes to the linux build because we build the maptool only with this build.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,395,2018-01-20T21:30:22Z,2018-02-12T22:31:18Z,2018-10-24T21:36:12Z,MERGED,True,97,29,6,https://github.com/hoehnp,fix:build:fixed compiler warning in maptool module,11,[],https://github.com/navit-gps/navit/pull/395,https://github.com/jkoan,4,https://github.com/navit-gps/navit/pull/395#issuecomment-364420310,,"Okay now the CI failed because we can not delete ch.c because at least two functions are required by maptool.c so we need to look into this later. I would suggest to revert the last two commit (mine and @hoehnp ) and merge this PR so we can advice the other topics in an new PR.
whats your oppinion @pgrandin and @jandegr ?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,395,2018-01-20T21:30:22Z,2018-02-12T22:31:18Z,2018-10-24T21:36:12Z,MERGED,True,97,29,6,https://github.com/hoehnp,fix:build:fixed compiler warning in maptool module,11,[],https://github.com/navit-gps/navit/pull/395,https://github.com/jandegr,5,https://github.com/navit-gps/navit/pull/395#issuecomment-364425482,,"No problem to deal with ch.c in another PR,
I just made the remark about ch.c because
-it is an undocumented producer
-probably abandonded many years ago for whatever reason
-the consumer is already removed, so de facto it was already decided then to dump contraction hierarchies
So it appeared trivial to keep maintaining it, but sure the references to it in maptool and cmake need to be removed as well.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,395,2018-01-20T21:30:22Z,2018-02-12T22:31:18Z,2018-10-24T21:36:12Z,MERGED,True,97,29,6,https://github.com/hoehnp,fix:build:fixed compiler warning in maptool module,11,[],https://github.com/navit-gps/navit/pull/395,https://github.com/pgrandin,6,https://github.com/navit-gps/navit/pull/395#issuecomment-365108894,,"Actually this made Coverity a bit unhappy:
*** CID 262887:  Resource leaks  (RESOURCE_LEAK)
/root/project/navit/maptool/buffer.c: 81 in load_buffer()
75     	
76     	fseeko(f, offset, SEEK_SET);
77     	b->base=malloc(b->size);
78     	dbg_assert(b->base != NULL);
79     	if (fread(b->base, b->size, 1, f) == 0){
80     		dbg(lvl_warning, ""fread failed"");
>>>     CID 262887:  Resource leaks  (RESOURCE_LEAK)
>>>     Variable ""f"" going out of scope leaks the storage it points to.
81     		return 0;
82             }
83     	fclose(f);
84     	return 1;
85     }
86     /**

*** CID 262886:  Resource leaks  (RESOURCE_LEAK)
/root/project/navit/maptool/tile.c: 404 in write_aux_tiles()
398     	char *buffer;
399     	FILE *f;
400     	int count=0;
401     	
402     	while (l) {
403     		at=l->data;
>>>     CID 262886:  Resource leaks  (RESOURCE_LEAK)
>>>     Overwriting ""buffer"" in ""buffer = malloc(at->size)"" leaks the storage that ""buffer"" points to.
404     		buffer=malloc(at->size);
405     		assert(buffer != NULL);
406     		f=fopen(at->filename,""rb"");
407     		assert(f != NULL);
408     		
409     	        if (fread(buffer, at->size, 1, f) == 0){",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,396,2018-01-28T12:14:12Z,2018-02-10T12:19:36Z,2018-02-10T12:19:36Z,MERGED,True,2,2,1,https://github.com/jkoan,change:ci:Only store bin folder from android build,2,[],https://github.com/navit-gps/navit/pull/396,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/396,"To speed up CircleCi build because Upload is slow.
This saves around 5mins","To speed up CircleCi build because Upload is slow.
This saves around 5mins",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,397,2018-01-28T12:19:38Z,2018-01-29T18:48:15Z,2018-01-29T18:48:20Z,MERGED,True,1,89,3,https://github.com/jkoan,Remove old speech binding to proprietary tts lib ,1,[],https://github.com/navit-gps/navit/pull/397,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/397,"Android has the TextToSpeech API since API Version 4 so we dont need to keep it in our repo.
Main reasons to drop the support for the old Version:

proprietary
Unused on must of the devices
Out of date (not updated since 9 years)

This is required by:
https://gitlab.com/fdroid/fdroiddata/merge_requests/2855
API Doc from Android:
https://developer.android.com/reference/android/speech/tts/TextToSpeech.html","Android has the TextToSpeech API since API Version 4 so we dont need to keep it in our repo.
Main reasons to drop the support for the old Version:

proprietary
Unused on must of the devices
Out of date (not updated since 9 years)

This is required by:
https://gitlab.com/fdroid/fdroiddata/merge_requests/2855
API Doc from Android:
https://developer.android.com/reference/android/speech/tts/TextToSpeech.html",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,397,2018-01-28T12:19:38Z,2018-01-29T18:48:15Z,2018-01-29T18:48:20Z,MERGED,True,1,89,3,https://github.com/jkoan,Remove old speech binding to proprietary tts lib ,1,[],https://github.com/navit-gps/navit/pull/397,https://github.com/hoehnp,2,https://github.com/navit-gps/navit/pull/397#issuecomment-361063875,"Android has the TextToSpeech API since API Version 4 so we dont need to keep it in our repo.
Main reasons to drop the support for the old Version:

proprietary
Unused on must of the devices
Out of date (not updated since 9 years)

This is required by:
https://gitlab.com/fdroid/fdroiddata/merge_requests/2855
API Doc from Android:
https://developer.android.com/reference/android/speech/tts/TextToSpeech.html",For android I see the point. Would it be just removed from the android build or in general? I wonder if it would be still useful for other platforms.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,397,2018-01-28T12:19:38Z,2018-01-29T18:48:15Z,2018-01-29T18:48:20Z,MERGED,True,1,89,3,https://github.com/jkoan,Remove old speech binding to proprietary tts lib ,1,[],https://github.com/navit-gps/navit/pull/397,https://github.com/jkoan,3,https://github.com/navit-gps/navit/pull/397#issuecomment-361063933,"Android has the TextToSpeech API since API Version 4 so we dont need to keep it in our repo.
Main reasons to drop the support for the old Version:

proprietary
Unused on must of the devices
Out of date (not updated since 9 years)

This is required by:
https://gitlab.com/fdroid/fdroiddata/merge_requests/2855
API Doc from Android:
https://developer.android.com/reference/android/speech/tts/TextToSpeech.html",all changes in this PR are only for android,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,399,2018-02-09T15:32:47Z,2018-02-11T14:17:51Z,2018-02-11T14:17:57Z,MERGED,True,108,24,4,https://github.com/jandegr,Psql,6,[],https://github.com/navit-gps/navit/pull/399,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/399,"Extend psql with relations.
Allows to build a map from a postgresql pgsimple database.
Use -DHAVE_POSTGRESQL=TRUE to compile it.
set up a database using osmosis from a pbf
bin\osmosis.bat --read-pbf belgium-latest.osm.pbf --log-progress --write-pgsimp database=""osmpgsimple"" user =""postgres"" password=""somepassword""
to build the map
./maptool -d postgresql://postgres:somepassword@someIP:5432/osmpgsimple belgium.bin","Extend psql with relations.
Allows to build a map from a postgresql pgsimple database.
Use -DHAVE_POSTGRESQL=TRUE to compile it.
set up a database using osmosis from a pbf
bin\osmosis.bat --read-pbf belgium-latest.osm.pbf --log-progress --write-pgsimp database=""osmpgsimple"" user =""postgres"" password=""somepassword""
to build the map
./maptool -d postgresql://postgres:somepassword@someIP:5432/osmpgsimple belgium.bin",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,399,2018-02-09T15:32:47Z,2018-02-11T14:17:51Z,2018-02-11T14:17:57Z,MERGED,True,108,24,4,https://github.com/jandegr,Psql,6,[],https://github.com/navit-gps/navit/pull/399,https://github.com/jandegr,2,https://github.com/navit-gps/navit/pull/399#issuecomment-364469176,"Extend psql with relations.
Allows to build a map from a postgresql pgsimple database.
Use -DHAVE_POSTGRESQL=TRUE to compile it.
set up a database using osmosis from a pbf
bin\osmosis.bat --read-pbf belgium-latest.osm.pbf --log-progress --write-pgsimp database=""osmpgsimple"" user =""postgres"" password=""somepassword""
to build the map
./maptool -d postgresql://postgres:somepassword@someIP:5432/osmpgsimple belgium.bin","Was used as a starting point in
#398
to add multipolygons",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,399,2018-02-09T15:32:47Z,2018-02-11T14:17:51Z,2018-02-11T14:17:57Z,MERGED,True,108,24,4,https://github.com/jandegr,Psql,6,[],https://github.com/navit-gps/navit/pull/399,https://github.com/jandegr,3,https://github.com/navit-gps/navit/pull/399#issuecomment-364474078,"Extend psql with relations.
Allows to build a map from a postgresql pgsimple database.
Use -DHAVE_POSTGRESQL=TRUE to compile it.
set up a database using osmosis from a pbf
bin\osmosis.bat --read-pbf belgium-latest.osm.pbf --log-progress --write-pgsimp database=""osmpgsimple"" user =""postgres"" password=""somepassword""
to build the map
./maptool -d postgresql://postgres:somepassword@someIP:5432/osmpgsimple belgium.bin","Since the existing code did not process relations I am confident it has not been used in ages to produce a map, so these changes won't break any box or server.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,400,2018-02-11T09:19:17Z,2018-02-11T16:57:44Z,2018-02-11T17:54:15Z,MERGED,True,1,1,1,https://github.com/jkoan,fix:build:Fix download of Cov,3,[],https://github.com/navit-gps/navit/pull/400,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/400,"So that the CircleCI Build does not fail because of ""10min without any output""","So that the CircleCI Build does not fail because of ""10min without any output""",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,401,2018-02-11T13:39:26Z,2018-02-11T14:18:13Z,2018-02-11T14:45:53Z,CLOSED,False,2,0,1,https://github.com/jandegr,store win32 nsis installer in CI artifacts,1,[],https://github.com/navit-gps/navit/pull/401,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/401,store win32 nsis installer in CI artifacts,store win32 nsis installer in CI artifacts,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,402,2018-02-11T14:43:00Z,2018-02-11T15:23:33Z,2018-02-11T17:53:35Z,MERGED,True,2,2,1,https://github.com/jandegr,Update build_win32.sh,2,[],https://github.com/navit-gps/navit/pull/402,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/402,"-Prevent instant crash on win32 because of graphics/gtk configured in navit.xml instead of graphics/win32
-restore the zoombuttons","-Prevent instant crash on win32 because of graphics/gtk configured in navit.xml instead of graphics/win32
-restore the zoombuttons",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,403,2018-02-11T17:33:52Z,2018-02-11T17:34:13Z,2018-02-11T19:48:07Z,MERGED,True,111,27,6,https://github.com/jandegr,merge from trunk,9,[],https://github.com/navit-gps/navit/pull/403,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/403,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,403,2018-02-11T17:33:52Z,2018-02-11T17:34:13Z,2018-02-11T19:48:07Z,MERGED,True,111,27,6,https://github.com/jandegr,merge from trunk,9,[],https://github.com/navit-gps/navit/pull/403,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/403#issuecomment-364780128,,"Hi @jandegr, you only need a pull request for the trunk branche ;)
everything else should work from command line :)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,403,2018-02-11T17:33:52Z,2018-02-11T17:34:13Z,2018-02-11T19:48:07Z,MERGED,True,111,27,6,https://github.com/jandegr,merge from trunk,9,[],https://github.com/navit-gps/navit/pull/403,https://github.com/jandegr,3,https://github.com/navit-gps/navit/pull/403#issuecomment-364781624,,"thx, but I use nothing but the webinterface for this repo :)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,404,2018-02-12T08:44:37Z,2018-02-12T20:20:39Z,2018-02-12T20:20:44Z,MERGED,True,16,15,2,https://github.com/jkoan,change:build:Move update of doxygen to own script,4,[],https://github.com/navit-gps/navit/pull/404,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/404,Move the actual code of the update Script into a own file to clean up the circleci config file.,Move the actual code of the update Script into a own file to clean up the circleci config file.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,405,2018-02-12T09:26:00Z,2018-02-13T07:25:04Z,2018-02-13T07:25:12Z,MERGED,True,139,2,4,https://github.com/jkoan,add:build:Add download center,21,[],https://github.com/navit-gps/navit/pull/405,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/405,"This PR adds the upload to the new download center to circleci.
To get meaningfull results two things are missing:

Jekyll Theme for the download center download-center#1
Finish work on #309

But both things does not prevent the PR to be merged.
The goal is to have a auto updating download page with good UX for endusers to download navit.
This PR is only the first step to achive this.","This PR adds the upload to the new download center to circleci.
To get meaningfull results two things are missing:

Jekyll Theme for the download center download-center#1
Finish work on #309

But both things does not prevent the PR to be merged.
The goal is to have a auto updating download page with good UX for endusers to download navit.
This PR is only the first step to achive this.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,406,2018-02-18T21:50:56Z,2018-02-18T22:01:35Z,2018-02-18T22:01:35Z,MERGED,True,20,6,2,https://github.com/mvglasow,Refactor:core:Some doxygen additions and corrections,1,[],https://github.com/navit-gps/navit/pull/406,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/406,Signed-off-by: mvglasow <michael -at- vonglasow.com>,Signed-off-by: mvglasow <michael -at- vonglasow.com>,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,407,2018-02-26T10:04:24Z,2018-03-05T17:53:59Z,2018-03-05T17:54:03Z,MERGED,True,1,1,1,https://github.com/jkoan,fix:ci:Fix logic,1,[],https://github.com/navit-gps/navit/pull/407,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/407,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,408,2018-03-08T18:56:03Z,2018-03-08T19:51:29Z,2018-03-08T19:51:32Z,MERGED,True,16,15,1,https://github.com/jkoan,fix:cmake:Fix getting the version from git to fix the wince build,1,[],https://github.com/navit-gps/navit/pull/408,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/408,This fixes the wince build and all builds where one of the two git commands would fail.,This fixes the wince build and all builds where one of the two git commands would fail.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,409,2018-03-08T21:03:20Z,2018-03-11T21:45:47Z,2018-03-11T21:45:51Z,CLOSED,False,2,1,2,https://github.com/jkoan,add:build:Add zip for wince build,2,[],https://github.com/navit-gps/navit/pull/409,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/409,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,409,2018-03-08T21:03:20Z,2018-03-11T21:45:47Z,2018-03-11T21:45:51Z,CLOSED,False,2,1,2,https://github.com/jkoan,add:build:Add zip for wince build,2,[],https://github.com/navit-gps/navit/pull/409,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/409#issuecomment-372152289,,Implemented differently via #411,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,410,2018-03-08T21:28:32Z,2018-03-15T20:31:32Z,2018-03-15T20:31:35Z,MERGED,True,1,1,1,https://github.com/jkoan,fix:fix download center for wince,1,[],https://github.com/navit-gps/navit/pull/410,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/410,Repo download on the wince docker image was broken due to really old ssh lib and git client,Repo download on the wince docker image was broken due to really old ssh lib and git client,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,411,2018-03-11T21:44:49Z,2018-03-11T21:49:21Z,2018-03-11T21:49:26Z,MERGED,True,5,2,2,https://github.com/pgrandin, Update:CI:also produce a zipfile for wince builds ,2,[],https://github.com/navit-gps/navit/pull/411,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/411,"This implement #409 in a different way.
Example result : https://5399-30791823-gh.circle-artifacts.com/0/root/project/wince/output/navit.zip
Content of the resulting zip :
$ unzip -l navit.zip 
Archive:  navit.zip
  Length      Date    Time    Name
---------  ---------- -----   ----
        0  03-11-2018 14:41   locale/
        0  03-11-2018 14:41   locale/sv/
        0  03-11-2018 14:41   locale/sv/LC_MESSAGES/
    20473  03-11-2018 14:41   locale/sv/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/jv/
        0  03-11-2018 14:41   locale/jv/LC_MESSAGES/
     5866  03-11-2018 14:41   locale/jv/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/ko/
        0  03-11-2018 14:41   locale/ko/LC_MESSAGES/
    15516  03-11-2018 14:41   locale/ko/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/lt/
        0  03-11-2018 14:41   locale/lt/LC_MESSAGES/
    29975  03-11-2018 14:41   locale/lt/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/ja/
        0  03-11-2018 14:41   locale/ja/LC_MESSAGES/
    13961  03-11-2018 14:41   locale/ja/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/zh_TW/
        0  03-11-2018 14:41   locale/zh_TW/LC_MESSAGES/
    31411  03-11-2018 14:41   locale/zh_TW/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/he/
        0  03-11-2018 14:41   locale/he/LC_MESSAGES/
    23477  03-11-2018 14:41   locale/he/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/ca/
        0  03-11-2018 14:41   locale/ca/LC_MESSAGES/
    22673  03-11-2018 14:41   locale/ca/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/bg/
        0  03-11-2018 14:41   locale/bg/LC_MESSAGES/
    23678  03-11-2018 14:41   locale/bg/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/ar/
        0  03-11-2018 14:41   locale/ar/LC_MESSAGES/
    30184  03-11-2018 14:41   locale/ar/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/bs/
        0  03-11-2018 14:41   locale/bs/LC_MESSAGES/
     1550  03-11-2018 14:41   locale/bs/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/lb/
        0  03-11-2018 14:41   locale/lb/LC_MESSAGES/
     2629  03-11-2018 14:41   locale/lb/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/fr_CH/
        0  03-11-2018 14:41   locale/fr_CH/LC_MESSAGES/
    20644  03-11-2018 14:41   locale/fr_CH/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/ru/
        0  03-11-2018 14:41   locale/ru/LC_MESSAGES/
    39991  03-11-2018 14:41   locale/ru/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/ckb/
        0  03-11-2018 14:41   locale/ckb/LC_MESSAGES/
      473  03-11-2018 14:41   locale/ckb/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/ur/
        0  03-11-2018 14:41   locale/ur/LC_MESSAGES/
    23614  03-11-2018 14:41   locale/ur/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/fa/
        0  03-11-2018 14:41   locale/fa/LC_MESSAGES/
     5273  03-11-2018 14:41   locale/fa/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/ta/
        0  03-11-2018 14:41   locale/ta/LC_MESSAGES/
     2420  03-11-2018 14:41   locale/ta/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/ro/
        0  03-11-2018 14:41   locale/ro/LC_MESSAGES/
    21228  03-11-2018 14:41   locale/ro/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/el/
        0  03-11-2018 14:41   locale/el/LC_MESSAGES/
    27251  03-11-2018 14:41   locale/el/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/kk/
        0  03-11-2018 14:41   locale/kk/LC_MESSAGES/
      466  03-11-2018 14:41   locale/kk/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/pms/
        0  03-11-2018 14:41   locale/pms/LC_MESSAGES/
     1191  03-11-2018 14:41   locale/pms/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/fil/
        0  03-11-2018 14:41   locale/fil/LC_MESSAGES/
     1772  03-11-2018 14:41   locale/fil/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/hi/
        0  03-11-2018 14:41   locale/hi/LC_MESSAGES/
     2655  03-11-2018 14:41   locale/hi/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/eo/
        0  03-11-2018 14:41   locale/eo/LC_MESSAGES/
    19813  03-11-2018 14:41   locale/eo/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/gl/
        0  03-11-2018 14:41   locale/gl/LC_MESSAGES/
    17922  03-11-2018 14:41   locale/gl/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/af/
        0  03-11-2018 14:41   locale/af/LC_MESSAGES/
    20462  03-11-2018 14:41   locale/af/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/es/
        0  03-11-2018 14:41   locale/es/LC_MESSAGES/
    33532  03-11-2018 14:41   locale/es/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/en_AU/
        0  03-11-2018 14:41   locale/en_AU/LC_MESSAGES/
    20901  03-11-2018 14:41   locale/en_AU/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/vi/
        0  03-11-2018 14:41   locale/vi/LC_MESSAGES/
    21225  03-11-2018 14:41   locale/vi/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/fo/
        0  03-11-2018 14:41   locale/fo/LC_MESSAGES/
    20438  03-11-2018 14:41   locale/fo/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/fy/
        0  03-11-2018 14:41   locale/fy/LC_MESSAGES/
      612  03-11-2018 14:41   locale/fy/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/nl/
        0  03-11-2018 14:41   locale/nl/LC_MESSAGES/
    31403  03-11-2018 14:41   locale/nl/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/pl/
        0  03-11-2018 14:41   locale/pl/LC_MESSAGES/
    29856  03-11-2018 14:41   locale/pl/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/id/
        0  03-11-2018 14:41   locale/id/LC_MESSAGES/
    15974  03-11-2018 14:41   locale/id/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/cs/
        0  03-11-2018 14:41   locale/cs/LC_MESSAGES/
    32147  03-11-2018 14:41   locale/cs/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/sl/
        0  03-11-2018 14:41   locale/sl/LC_MESSAGES/
    18214  03-11-2018 14:41   locale/sl/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/mr/
        0  03-11-2018 14:41   locale/mr/LC_MESSAGES/
     1575  03-11-2018 14:41   locale/mr/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/nds/
        0  03-11-2018 14:41   locale/nds/LC_MESSAGES/
    19946  03-11-2018 14:41   locale/nds/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/zh_HK/
        0  03-11-2018 14:41   locale/zh_HK/LC_MESSAGES/
    18952  03-11-2018 14:41   locale/zh_HK/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/fi/
        0  03-11-2018 14:41   locale/fi/LC_MESSAGES/
    20745  03-11-2018 14:41   locale/fi/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/fr/
        0  03-11-2018 14:41   locale/fr/LC_MESSAGES/
    34273  03-11-2018 14:41   locale/fr/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/sq/
        0  03-11-2018 14:41   locale/sq/LC_MESSAGES/
     7320  03-11-2018 14:41   locale/sq/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/kn/
        0  03-11-2018 14:41   locale/kn/LC_MESSAGES/
      503  03-11-2018 14:41   locale/kn/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/en/
        0  03-11-2018 14:41   locale/en/LC_MESSAGES/
     3411  03-11-2018 14:41   locale/en/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/uk/
        0  03-11-2018 14:41   locale/uk/LC_MESSAGES/
    26731  03-11-2018 14:41   locale/uk/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/sw/
        0  03-11-2018 14:41   locale/sw/LC_MESSAGES/
     8633  03-11-2018 14:41   locale/sw/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/mn/
        0  03-11-2018 14:41   locale/mn/LC_MESSAGES/
      939  03-11-2018 14:41   locale/mn/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/de/
        0  03-11-2018 14:41   locale/de/LC_MESSAGES/
    33411  03-11-2018 14:41   locale/de/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/de_CH/
        0  03-11-2018 14:41   locale/de_CH/LC_MESSAGES/
      486  03-11-2018 14:41   locale/de_CH/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/mk/
        0  03-11-2018 14:41   locale/mk/LC_MESSAGES/
    26208  03-11-2018 14:41   locale/mk/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/si/
        0  03-11-2018 14:41   locale/si/LC_MESSAGES/
    28462  03-11-2018 14:41   locale/si/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/te/
        0  03-11-2018 14:41   locale/te/LC_MESSAGES/
     8565  03-11-2018 14:41   locale/te/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/da/
        0  03-11-2018 14:41   locale/da/LC_MESSAGES/
    21432  03-11-2018 14:41   locale/da/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/nn/
        0  03-11-2018 14:41   locale/nn/LC_MESSAGES/
    15745  03-11-2018 14:41   locale/nn/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/tr/
        0  03-11-2018 14:41   locale/tr/LC_MESSAGES/
    27890  03-11-2018 14:41   locale/tr/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/th/
        0  03-11-2018 14:41   locale/th/LC_MESSAGES/
    21011  03-11-2018 14:41   locale/th/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/et/
        0  03-11-2018 14:41   locale/et/LC_MESSAGES/
    29208  03-11-2018 14:41   locale/et/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/hr/
        0  03-11-2018 14:41   locale/hr/LC_MESSAGES/
    20235  03-11-2018 14:41   locale/hr/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/sk/
        0  03-11-2018 14:41   locale/sk/LC_MESSAGES/
    28313  03-11-2018 14:41   locale/sk/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/cy/
        0  03-11-2018 14:41   locale/cy/LC_MESSAGES/
     1101  03-11-2018 14:41   locale/cy/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/nb/
        0  03-11-2018 14:41   locale/nb/LC_MESSAGES/
    22992  03-11-2018 14:41   locale/nb/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/eu/
        0  03-11-2018 14:41   locale/eu/LC_MESSAGES/
    20662  03-11-2018 14:41   locale/eu/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/ml/
        0  03-11-2018 14:41   locale/ml/LC_MESSAGES/
    48285  03-11-2018 14:41   locale/ml/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/en_GB/
        0  03-11-2018 14:41   locale/en_GB/LC_MESSAGES/
    32049  03-11-2018 14:41   locale/en_GB/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/en_CA/
        0  03-11-2018 14:41   locale/en_CA/LC_MESSAGES/
    19904  03-11-2018 14:41   locale/en_CA/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/sr/
        0  03-11-2018 14:41   locale/sr/LC_MESSAGES/
    36515  03-11-2018 14:41   locale/sr/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/it/
        0  03-11-2018 14:41   locale/it/LC_MESSAGES/
    31669  03-11-2018 14:41   locale/it/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/ku/
        0  03-11-2018 14:41   locale/ku/LC_MESSAGES/
      827  03-11-2018 14:41   locale/ku/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/pt_BR/
        0  03-11-2018 14:41   locale/pt_BR/LC_MESSAGES/
    31847  03-11-2018 14:41   locale/pt_BR/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/lv/
        0  03-11-2018 14:41   locale/lv/LC_MESSAGES/
    29773  03-11-2018 14:41   locale/lv/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/pt/
        0  03-11-2018 14:41   locale/pt/LC_MESSAGES/
    34287  03-11-2018 14:41   locale/pt/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/be/
        0  03-11-2018 14:41   locale/be/LC_MESSAGES/
    19160  03-11-2018 14:41   locale/be/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/ast/
        0  03-11-2018 14:41   locale/ast/LC_MESSAGES/
    21042  03-11-2018 14:41   locale/ast/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/zh_CN/
        0  03-11-2018 14:41   locale/zh_CN/LC_MESSAGES/
    20523  03-11-2018 14:41   locale/zh_CN/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/hu/
        0  03-11-2018 14:41   locale/hu/LC_MESSAGES/
    31349  03-11-2018 14:41   locale/hu/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/sc/
        0  03-11-2018 14:41   locale/sc/LC_MESSAGES/
    11365  03-11-2018 14:41   locale/sc/LC_MESSAGES/navit.mo
   302603  03-11-2018 14:41   navit.xml
        0  03-11-2018 14:41   maps/
       84  03-11-2018 14:41   maps/osm_bbox_11.3,47.9,11.7,48.2.xml
  1243889  03-11-2018 14:41   maps/osm_bbox_11.3,47.9,11.7,48.2.bin
        0  03-11-2018 14:41   icons/
     4852  03-11-2018 14:41   icons/gui_sound_off_32.xpm
     4443  03-11-2018 14:41   icons/nav_left_2.xpm
     7664  03-11-2018 14:41   icons/Makefile
      755  03-11-2018 14:41   icons/gc_webcam.xpm
      658  03-11-2018 14:41   icons/flag_bk_tr.xpm
     1299  03-11-2018 14:41   icons/nav_left_2_32.xpm
     4447  03-11-2018 14:41   icons/nav_right_1.xpm
      672  03-11-2018 14:41   icons/flag_wh_bk.xpm
     4443  03-11-2018 14:41   icons/nav_right_2.xpm
      773  03-11-2018 14:41   icons/gc_stages.xpm
        0  03-11-2018 14:41   icons/CMakeFiles/
        0  03-11-2018 14:41   icons/CMakeFiles/images.dir/
       99  03-11-2018 14:41   icons/CMakeFiles/images.dir/depend.make
      774  03-11-2018 14:41   icons/CMakeFiles/images.dir/cmake_clean.cmake
       99  03-11-2018 14:41   icons/CMakeFiles/images.dir/depend.internal
    17190  03-11-2018 14:41   icons/CMakeFiles/images.dir/build.make
     1475  03-11-2018 14:41   icons/CMakeFiles/images.dir/DependInfo.cmake
      611  03-11-2018 14:41   icons/CMakeFiles/images.dir/progress.make
      607  03-11-2018 14:41   icons/CMakeFiles/CMakeDirectoryInformation.cmake
        0  03-11-2018 14:41   icons/CMakeFiles/images_resource.dir/
      211  03-11-2018 14:41   icons/CMakeFiles/images_resource.dir/cmake_clean.cmake
     3779  03-11-2018 14:41   icons/CMakeFiles/images_resource.dir/build.make
     1475  03-11-2018 14:41   icons/CMakeFiles/images_resource.dir/DependInfo.cmake
        1  03-11-2018 14:41   icons/CMakeFiles/images_resource.dir/progress.make
        2  03-11-2018 14:41   icons/CMakeFiles/progress.marks
        0  03-11-2018 14:41   icons/desktop_icons/
      440  03-11-2018 14:41   icons/desktop_icons/navit.desktop
     4285  03-11-2018 14:41   icons/cmake_install.cmake
      696  03-11-2018 14:41   icons/gc_mystery.xpm
     2472  03-11-2018 14:41   icons/restroom.xpm
      845  03-11-2018 14:41   icons/bus_halt.xpm
      844  03-11-2018 14:41   icons/gc_multi.xpm
     1746  03-11-2018 14:41   icons/trailerpark.xpm
     1069  03-11-2018 14:41   icons/highway_exit.xpm
     1299  03-11-2018 14:41   icons/nav_left_1_32.xpm
     1299  03-11-2018 14:41   icons/nav_right_1_32.xpm
     2129  03-11-2018 14:41   icons/dumping_station.xpm
     4444  03-11-2018 14:41   icons/nav_straight.xpm
      672  03-11-2018 14:41   icons/flag_bl_wh.xpm
     4944  03-11-2018 14:41   icons/gui_sound_32.xpm
      700  03-11-2018 14:41   icons/gc_reference.xpm
     1299  03-11-2018 14:41   icons/nav_right_2_32.xpm
      709  03-11-2018 14:41   icons/gc_tradi.xpm
      711  03-11-2018 14:41   icons/gc_event.xpm
      471  03-11-2018 14:41   icons/gc_question.xpm
     1299  03-11-2018 14:41   icons/nav_straight_32.xpm
     4446  03-11-2018 14:41   icons/nav_left_1.xpm
      672  03-11-2018 14:41   icons/flag_bk_wh.xpm
  5135690  03-11-2018 14:41   navit.exe
---------                     -------
  8244300                     286 files","This implement #409 in a different way.
Example result : https://5399-30791823-gh.circle-artifacts.com/0/root/project/wince/output/navit.zip
Content of the resulting zip :
$ unzip -l navit.zip 
Archive:  navit.zip
  Length      Date    Time    Name
---------  ---------- -----   ----
        0  03-11-2018 14:41   locale/
        0  03-11-2018 14:41   locale/sv/
        0  03-11-2018 14:41   locale/sv/LC_MESSAGES/
    20473  03-11-2018 14:41   locale/sv/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/jv/
        0  03-11-2018 14:41   locale/jv/LC_MESSAGES/
     5866  03-11-2018 14:41   locale/jv/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/ko/
        0  03-11-2018 14:41   locale/ko/LC_MESSAGES/
    15516  03-11-2018 14:41   locale/ko/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/lt/
        0  03-11-2018 14:41   locale/lt/LC_MESSAGES/
    29975  03-11-2018 14:41   locale/lt/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/ja/
        0  03-11-2018 14:41   locale/ja/LC_MESSAGES/
    13961  03-11-2018 14:41   locale/ja/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/zh_TW/
        0  03-11-2018 14:41   locale/zh_TW/LC_MESSAGES/
    31411  03-11-2018 14:41   locale/zh_TW/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/he/
        0  03-11-2018 14:41   locale/he/LC_MESSAGES/
    23477  03-11-2018 14:41   locale/he/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/ca/
        0  03-11-2018 14:41   locale/ca/LC_MESSAGES/
    22673  03-11-2018 14:41   locale/ca/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/bg/
        0  03-11-2018 14:41   locale/bg/LC_MESSAGES/
    23678  03-11-2018 14:41   locale/bg/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/ar/
        0  03-11-2018 14:41   locale/ar/LC_MESSAGES/
    30184  03-11-2018 14:41   locale/ar/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/bs/
        0  03-11-2018 14:41   locale/bs/LC_MESSAGES/
     1550  03-11-2018 14:41   locale/bs/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/lb/
        0  03-11-2018 14:41   locale/lb/LC_MESSAGES/
     2629  03-11-2018 14:41   locale/lb/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/fr_CH/
        0  03-11-2018 14:41   locale/fr_CH/LC_MESSAGES/
    20644  03-11-2018 14:41   locale/fr_CH/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/ru/
        0  03-11-2018 14:41   locale/ru/LC_MESSAGES/
    39991  03-11-2018 14:41   locale/ru/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/ckb/
        0  03-11-2018 14:41   locale/ckb/LC_MESSAGES/
      473  03-11-2018 14:41   locale/ckb/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/ur/
        0  03-11-2018 14:41   locale/ur/LC_MESSAGES/
    23614  03-11-2018 14:41   locale/ur/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/fa/
        0  03-11-2018 14:41   locale/fa/LC_MESSAGES/
     5273  03-11-2018 14:41   locale/fa/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/ta/
        0  03-11-2018 14:41   locale/ta/LC_MESSAGES/
     2420  03-11-2018 14:41   locale/ta/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/ro/
        0  03-11-2018 14:41   locale/ro/LC_MESSAGES/
    21228  03-11-2018 14:41   locale/ro/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/el/
        0  03-11-2018 14:41   locale/el/LC_MESSAGES/
    27251  03-11-2018 14:41   locale/el/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/kk/
        0  03-11-2018 14:41   locale/kk/LC_MESSAGES/
      466  03-11-2018 14:41   locale/kk/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/pms/
        0  03-11-2018 14:41   locale/pms/LC_MESSAGES/
     1191  03-11-2018 14:41   locale/pms/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/fil/
        0  03-11-2018 14:41   locale/fil/LC_MESSAGES/
     1772  03-11-2018 14:41   locale/fil/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/hi/
        0  03-11-2018 14:41   locale/hi/LC_MESSAGES/
     2655  03-11-2018 14:41   locale/hi/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/eo/
        0  03-11-2018 14:41   locale/eo/LC_MESSAGES/
    19813  03-11-2018 14:41   locale/eo/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/gl/
        0  03-11-2018 14:41   locale/gl/LC_MESSAGES/
    17922  03-11-2018 14:41   locale/gl/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/af/
        0  03-11-2018 14:41   locale/af/LC_MESSAGES/
    20462  03-11-2018 14:41   locale/af/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/es/
        0  03-11-2018 14:41   locale/es/LC_MESSAGES/
    33532  03-11-2018 14:41   locale/es/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/en_AU/
        0  03-11-2018 14:41   locale/en_AU/LC_MESSAGES/
    20901  03-11-2018 14:41   locale/en_AU/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/vi/
        0  03-11-2018 14:41   locale/vi/LC_MESSAGES/
    21225  03-11-2018 14:41   locale/vi/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/fo/
        0  03-11-2018 14:41   locale/fo/LC_MESSAGES/
    20438  03-11-2018 14:41   locale/fo/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/fy/
        0  03-11-2018 14:41   locale/fy/LC_MESSAGES/
      612  03-11-2018 14:41   locale/fy/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/nl/
        0  03-11-2018 14:41   locale/nl/LC_MESSAGES/
    31403  03-11-2018 14:41   locale/nl/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/pl/
        0  03-11-2018 14:41   locale/pl/LC_MESSAGES/
    29856  03-11-2018 14:41   locale/pl/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/id/
        0  03-11-2018 14:41   locale/id/LC_MESSAGES/
    15974  03-11-2018 14:41   locale/id/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/cs/
        0  03-11-2018 14:41   locale/cs/LC_MESSAGES/
    32147  03-11-2018 14:41   locale/cs/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/sl/
        0  03-11-2018 14:41   locale/sl/LC_MESSAGES/
    18214  03-11-2018 14:41   locale/sl/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/mr/
        0  03-11-2018 14:41   locale/mr/LC_MESSAGES/
     1575  03-11-2018 14:41   locale/mr/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/nds/
        0  03-11-2018 14:41   locale/nds/LC_MESSAGES/
    19946  03-11-2018 14:41   locale/nds/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/zh_HK/
        0  03-11-2018 14:41   locale/zh_HK/LC_MESSAGES/
    18952  03-11-2018 14:41   locale/zh_HK/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/fi/
        0  03-11-2018 14:41   locale/fi/LC_MESSAGES/
    20745  03-11-2018 14:41   locale/fi/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/fr/
        0  03-11-2018 14:41   locale/fr/LC_MESSAGES/
    34273  03-11-2018 14:41   locale/fr/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/sq/
        0  03-11-2018 14:41   locale/sq/LC_MESSAGES/
     7320  03-11-2018 14:41   locale/sq/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/kn/
        0  03-11-2018 14:41   locale/kn/LC_MESSAGES/
      503  03-11-2018 14:41   locale/kn/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/en/
        0  03-11-2018 14:41   locale/en/LC_MESSAGES/
     3411  03-11-2018 14:41   locale/en/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/uk/
        0  03-11-2018 14:41   locale/uk/LC_MESSAGES/
    26731  03-11-2018 14:41   locale/uk/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/sw/
        0  03-11-2018 14:41   locale/sw/LC_MESSAGES/
     8633  03-11-2018 14:41   locale/sw/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/mn/
        0  03-11-2018 14:41   locale/mn/LC_MESSAGES/
      939  03-11-2018 14:41   locale/mn/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/de/
        0  03-11-2018 14:41   locale/de/LC_MESSAGES/
    33411  03-11-2018 14:41   locale/de/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/de_CH/
        0  03-11-2018 14:41   locale/de_CH/LC_MESSAGES/
      486  03-11-2018 14:41   locale/de_CH/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/mk/
        0  03-11-2018 14:41   locale/mk/LC_MESSAGES/
    26208  03-11-2018 14:41   locale/mk/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/si/
        0  03-11-2018 14:41   locale/si/LC_MESSAGES/
    28462  03-11-2018 14:41   locale/si/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/te/
        0  03-11-2018 14:41   locale/te/LC_MESSAGES/
     8565  03-11-2018 14:41   locale/te/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/da/
        0  03-11-2018 14:41   locale/da/LC_MESSAGES/
    21432  03-11-2018 14:41   locale/da/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/nn/
        0  03-11-2018 14:41   locale/nn/LC_MESSAGES/
    15745  03-11-2018 14:41   locale/nn/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/tr/
        0  03-11-2018 14:41   locale/tr/LC_MESSAGES/
    27890  03-11-2018 14:41   locale/tr/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/th/
        0  03-11-2018 14:41   locale/th/LC_MESSAGES/
    21011  03-11-2018 14:41   locale/th/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/et/
        0  03-11-2018 14:41   locale/et/LC_MESSAGES/
    29208  03-11-2018 14:41   locale/et/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/hr/
        0  03-11-2018 14:41   locale/hr/LC_MESSAGES/
    20235  03-11-2018 14:41   locale/hr/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/sk/
        0  03-11-2018 14:41   locale/sk/LC_MESSAGES/
    28313  03-11-2018 14:41   locale/sk/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/cy/
        0  03-11-2018 14:41   locale/cy/LC_MESSAGES/
     1101  03-11-2018 14:41   locale/cy/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/nb/
        0  03-11-2018 14:41   locale/nb/LC_MESSAGES/
    22992  03-11-2018 14:41   locale/nb/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/eu/
        0  03-11-2018 14:41   locale/eu/LC_MESSAGES/
    20662  03-11-2018 14:41   locale/eu/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/ml/
        0  03-11-2018 14:41   locale/ml/LC_MESSAGES/
    48285  03-11-2018 14:41   locale/ml/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/en_GB/
        0  03-11-2018 14:41   locale/en_GB/LC_MESSAGES/
    32049  03-11-2018 14:41   locale/en_GB/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/en_CA/
        0  03-11-2018 14:41   locale/en_CA/LC_MESSAGES/
    19904  03-11-2018 14:41   locale/en_CA/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/sr/
        0  03-11-2018 14:41   locale/sr/LC_MESSAGES/
    36515  03-11-2018 14:41   locale/sr/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/it/
        0  03-11-2018 14:41   locale/it/LC_MESSAGES/
    31669  03-11-2018 14:41   locale/it/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/ku/
        0  03-11-2018 14:41   locale/ku/LC_MESSAGES/
      827  03-11-2018 14:41   locale/ku/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/pt_BR/
        0  03-11-2018 14:41   locale/pt_BR/LC_MESSAGES/
    31847  03-11-2018 14:41   locale/pt_BR/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/lv/
        0  03-11-2018 14:41   locale/lv/LC_MESSAGES/
    29773  03-11-2018 14:41   locale/lv/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/pt/
        0  03-11-2018 14:41   locale/pt/LC_MESSAGES/
    34287  03-11-2018 14:41   locale/pt/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/be/
        0  03-11-2018 14:41   locale/be/LC_MESSAGES/
    19160  03-11-2018 14:41   locale/be/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/ast/
        0  03-11-2018 14:41   locale/ast/LC_MESSAGES/
    21042  03-11-2018 14:41   locale/ast/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/zh_CN/
        0  03-11-2018 14:41   locale/zh_CN/LC_MESSAGES/
    20523  03-11-2018 14:41   locale/zh_CN/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/hu/
        0  03-11-2018 14:41   locale/hu/LC_MESSAGES/
    31349  03-11-2018 14:41   locale/hu/LC_MESSAGES/navit.mo
        0  03-11-2018 14:41   locale/sc/
        0  03-11-2018 14:41   locale/sc/LC_MESSAGES/
    11365  03-11-2018 14:41   locale/sc/LC_MESSAGES/navit.mo
   302603  03-11-2018 14:41   navit.xml
        0  03-11-2018 14:41   maps/
       84  03-11-2018 14:41   maps/osm_bbox_11.3,47.9,11.7,48.2.xml
  1243889  03-11-2018 14:41   maps/osm_bbox_11.3,47.9,11.7,48.2.bin
        0  03-11-2018 14:41   icons/
     4852  03-11-2018 14:41   icons/gui_sound_off_32.xpm
     4443  03-11-2018 14:41   icons/nav_left_2.xpm
     7664  03-11-2018 14:41   icons/Makefile
      755  03-11-2018 14:41   icons/gc_webcam.xpm
      658  03-11-2018 14:41   icons/flag_bk_tr.xpm
     1299  03-11-2018 14:41   icons/nav_left_2_32.xpm
     4447  03-11-2018 14:41   icons/nav_right_1.xpm
      672  03-11-2018 14:41   icons/flag_wh_bk.xpm
     4443  03-11-2018 14:41   icons/nav_right_2.xpm
      773  03-11-2018 14:41   icons/gc_stages.xpm
        0  03-11-2018 14:41   icons/CMakeFiles/
        0  03-11-2018 14:41   icons/CMakeFiles/images.dir/
       99  03-11-2018 14:41   icons/CMakeFiles/images.dir/depend.make
      774  03-11-2018 14:41   icons/CMakeFiles/images.dir/cmake_clean.cmake
       99  03-11-2018 14:41   icons/CMakeFiles/images.dir/depend.internal
    17190  03-11-2018 14:41   icons/CMakeFiles/images.dir/build.make
     1475  03-11-2018 14:41   icons/CMakeFiles/images.dir/DependInfo.cmake
      611  03-11-2018 14:41   icons/CMakeFiles/images.dir/progress.make
      607  03-11-2018 14:41   icons/CMakeFiles/CMakeDirectoryInformation.cmake
        0  03-11-2018 14:41   icons/CMakeFiles/images_resource.dir/
      211  03-11-2018 14:41   icons/CMakeFiles/images_resource.dir/cmake_clean.cmake
     3779  03-11-2018 14:41   icons/CMakeFiles/images_resource.dir/build.make
     1475  03-11-2018 14:41   icons/CMakeFiles/images_resource.dir/DependInfo.cmake
        1  03-11-2018 14:41   icons/CMakeFiles/images_resource.dir/progress.make
        2  03-11-2018 14:41   icons/CMakeFiles/progress.marks
        0  03-11-2018 14:41   icons/desktop_icons/
      440  03-11-2018 14:41   icons/desktop_icons/navit.desktop
     4285  03-11-2018 14:41   icons/cmake_install.cmake
      696  03-11-2018 14:41   icons/gc_mystery.xpm
     2472  03-11-2018 14:41   icons/restroom.xpm
      845  03-11-2018 14:41   icons/bus_halt.xpm
      844  03-11-2018 14:41   icons/gc_multi.xpm
     1746  03-11-2018 14:41   icons/trailerpark.xpm
     1069  03-11-2018 14:41   icons/highway_exit.xpm
     1299  03-11-2018 14:41   icons/nav_left_1_32.xpm
     1299  03-11-2018 14:41   icons/nav_right_1_32.xpm
     2129  03-11-2018 14:41   icons/dumping_station.xpm
     4444  03-11-2018 14:41   icons/nav_straight.xpm
      672  03-11-2018 14:41   icons/flag_bl_wh.xpm
     4944  03-11-2018 14:41   icons/gui_sound_32.xpm
      700  03-11-2018 14:41   icons/gc_reference.xpm
     1299  03-11-2018 14:41   icons/nav_right_2_32.xpm
      709  03-11-2018 14:41   icons/gc_tradi.xpm
      711  03-11-2018 14:41   icons/gc_event.xpm
      471  03-11-2018 14:41   icons/gc_question.xpm
     1299  03-11-2018 14:41   icons/nav_straight_32.xpm
     4446  03-11-2018 14:41   icons/nav_left_1.xpm
      672  03-11-2018 14:41   icons/flag_bk_wh.xpm
  5135690  03-11-2018 14:41   navit.exe
---------                     -------
  8244300                     286 files",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,412,2018-03-11T22:00:20Z,2018-03-28T17:29:37Z,2018-04-20T11:32:22Z,MERGED,True,1,0,1,https://github.com/pgrandin,Fix:wince:Remove useless files from the output,2,[],https://github.com/navit-gps/navit/pull/412,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/412,"Removed useless .cmake files from the generated artefacts
Files in the .zip now :
  adding: locale/ (stored 0%)
  adding: locale/eo/ (stored 0%)
  adding: locale/eo/LC_MESSAGES/ (stored 0%)
  adding: locale/eo/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/bg/ (stored 0%)
  adding: locale/bg/LC_MESSAGES/ (stored 0%)
  adding: locale/bg/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/nb/ (stored 0%)
  adding: locale/nb/LC_MESSAGES/ (stored 0%)
  adding: locale/nb/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/sk/ (stored 0%)
  adding: locale/sk/LC_MESSAGES/ (stored 0%)
  adding: locale/sk/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/sl/ (stored 0%)
  adding: locale/sl/LC_MESSAGES/ (stored 0%)
  adding: locale/sl/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/kn/ (stored 0%)
  adding: locale/kn/LC_MESSAGES/ (stored 0%)
  adding: locale/kn/LC_MESSAGES/navit.mo (deflated 27%)
  adding: locale/el/ (stored 0%)
  adding: locale/el/LC_MESSAGES/ (stored 0%)
  adding: locale/el/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/ta/ (stored 0%)
  adding: locale/ta/LC_MESSAGES/ (stored 0%)
  adding: locale/ta/LC_MESSAGES/navit.mo (deflated 58%)
  adding: locale/be/ (stored 0%)
  adding: locale/be/LC_MESSAGES/ (stored 0%)
  adding: locale/be/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/lb/ (stored 0%)
  adding: locale/lb/LC_MESSAGES/ (stored 0%)
  adding: locale/lb/LC_MESSAGES/navit.mo (deflated 52%)
  adding: locale/ja/ (stored 0%)
  adding: locale/ja/LC_MESSAGES/ (stored 0%)
  adding: locale/ja/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/nl/ (stored 0%)
  adding: locale/nl/LC_MESSAGES/ (stored 0%)
  adding: locale/nl/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/cs/ (stored 0%)
  adding: locale/cs/LC_MESSAGES/ (stored 0%)
  adding: locale/cs/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/ml/ (stored 0%)
  adding: locale/ml/LC_MESSAGES/ (stored 0%)
  adding: locale/ml/LC_MESSAGES/navit.mo (deflated 66%)
  adding: locale/lv/ (stored 0%)
  adding: locale/lv/LC_MESSAGES/ (stored 0%)
  adding: locale/lv/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/th/ (stored 0%)
  adding: locale/th/LC_MESSAGES/ (stored 0%)
  adding: locale/th/LC_MESSAGES/navit.mo (deflated 60%)
  adding: locale/nn/ (stored 0%)
  adding: locale/nn/LC_MESSAGES/ (stored 0%)
  adding: locale/nn/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/fy/ (stored 0%)
  adding: locale/fy/LC_MESSAGES/ (stored 0%)
  adding: locale/fy/LC_MESSAGES/navit.mo (deflated 33%)
  adding: locale/da/ (stored 0%)
  adding: locale/da/LC_MESSAGES/ (stored 0%)
  adding: locale/da/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/fa/ (stored 0%)
  adding: locale/fa/LC_MESSAGES/ (stored 0%)
  adding: locale/fa/LC_MESSAGES/navit.mo (deflated 50%)
  adding: locale/cy/ (stored 0%)
  adding: locale/cy/LC_MESSAGES/ (stored 0%)
  adding: locale/cy/LC_MESSAGES/navit.mo (deflated 40%)
  adding: locale/es/ (stored 0%)
  adding: locale/es/LC_MESSAGES/ (stored 0%)
  adding: locale/es/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/sc/ (stored 0%)
  adding: locale/sc/LC_MESSAGES/ (stored 0%)
  adding: locale/sc/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/et/ (stored 0%)
  adding: locale/et/LC_MESSAGES/ (stored 0%)
  adding: locale/et/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/ur/ (stored 0%)
  adding: locale/ur/LC_MESSAGES/ (stored 0%)
  adding: locale/ur/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/vi/ (stored 0%)
  adding: locale/vi/LC_MESSAGES/ (stored 0%)
  adding: locale/vi/LC_MESSAGES/navit.mo (deflated 57%)
  adding: locale/ro/ (stored 0%)
  adding: locale/ro/LC_MESSAGES/ (stored 0%)
  adding: locale/ro/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/pt/ (stored 0%)
  adding: locale/pt/LC_MESSAGES/ (stored 0%)
  adding: locale/pt/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/lt/ (stored 0%)
  adding: locale/lt/LC_MESSAGES/ (stored 0%)
  adding: locale/lt/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/fo/ (stored 0%)
  adding: locale/fo/LC_MESSAGES/ (stored 0%)
  adding: locale/fo/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/jv/ (stored 0%)
  adding: locale/jv/LC_MESSAGES/ (stored 0%)
  adding: locale/jv/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/de/ (stored 0%)
  adding: locale/de/LC_MESSAGES/ (stored 0%)
  adding: locale/de/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/hu/ (stored 0%)
  adding: locale/hu/LC_MESSAGES/ (stored 0%)
  adding: locale/hu/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/si/ (stored 0%)
  adding: locale/si/LC_MESSAGES/ (stored 0%)
  adding: locale/si/LC_MESSAGES/navit.mo (deflated 62%)
  adding: locale/gl/ (stored 0%)
  adding: locale/gl/LC_MESSAGES/ (stored 0%)
  adding: locale/gl/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/mn/ (stored 0%)
  adding: locale/mn/LC_MESSAGES/ (stored 0%)
  adding: locale/mn/LC_MESSAGES/navit.mo (deflated 36%)
  adding: locale/de_CH/ (stored 0%)
  adding: locale/de_CH/LC_MESSAGES/ (stored 0%)
  adding: locale/de_CH/LC_MESSAGES/navit.mo (deflated 29%)
  adding: locale/af/ (stored 0%)
  adding: locale/af/LC_MESSAGES/ (stored 0%)
  adding: locale/af/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/tr/ (stored 0%)
  adding: locale/tr/LC_MESSAGES/ (stored 0%)
  adding: locale/tr/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/te/ (stored 0%)
  adding: locale/te/LC_MESSAGES/ (stored 0%)
  adding: locale/te/LC_MESSAGES/navit.mo (deflated 57%)
  adding: locale/it/ (stored 0%)
  adding: locale/it/LC_MESSAGES/ (stored 0%)
  adding: locale/it/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/mk/ (stored 0%)
  adding: locale/mk/LC_MESSAGES/ (stored 0%)
  adding: locale/mk/LC_MESSAGES/navit.mo (deflated 57%)
  adding: locale/uk/ (stored 0%)
  adding: locale/uk/LC_MESSAGES/ (stored 0%)
  adding: locale/uk/LC_MESSAGES/navit.mo (deflated 57%)
  adding: locale/sr/ (stored 0%)
  adding: locale/sr/LC_MESSAGES/ (stored 0%)
  adding: locale/sr/LC_MESSAGES/navit.mo (deflated 58%)
  adding: locale/ckb/ (stored 0%)
  adding: locale/ckb/LC_MESSAGES/ (stored 0%)
  adding: locale/ckb/LC_MESSAGES/navit.mo (deflated 28%)
  adding: locale/zh_CN/ (stored 0%)
  adding: locale/zh_CN/LC_MESSAGES/ (stored 0%)
  adding: locale/zh_CN/LC_MESSAGES/navit.mo (deflated 50%)
  adding: locale/sw/ (stored 0%)
  adding: locale/sw/LC_MESSAGES/ (stored 0%)
  adding: locale/sw/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/pms/ (stored 0%)
  adding: locale/pms/LC_MESSAGES/ (stored 0%)
  adding: locale/pms/LC_MESSAGES/navit.mo (deflated 45%)
  adding: locale/ko/ (stored 0%)
  adding: locale/ko/LC_MESSAGES/ (stored 0%)
  adding: locale/ko/LC_MESSAGES/navit.mo (deflated 51%)
  adding: locale/fr_CH/ (stored 0%)
  adding: locale/fr_CH/LC_MESSAGES/ (stored 0%)
  adding: locale/fr_CH/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/id/ (stored 0%)
  adding: locale/id/LC_MESSAGES/ (stored 0%)
  adding: locale/id/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/fi/ (stored 0%)
  adding: locale/fi/LC_MESSAGES/ (stored 0%)
  adding: locale/fi/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/en_CA/ (stored 0%)
  adding: locale/en_CA/LC_MESSAGES/ (stored 0%)
  adding: locale/en_CA/LC_MESSAGES/navit.mo (deflated 64%)
  adding: locale/nds/ (stored 0%)
  adding: locale/nds/LC_MESSAGES/ (stored 0%)
  adding: locale/nds/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/hr/ (stored 0%)
  adding: locale/hr/LC_MESSAGES/ (stored 0%)
  adding: locale/hr/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/eu/ (stored 0%)
  adding: locale/eu/LC_MESSAGES/ (stored 0%)
  adding: locale/eu/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/pt_BR/ (stored 0%)
  adding: locale/pt_BR/LC_MESSAGES/ (stored 0%)
  adding: locale/pt_BR/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/en_AU/ (stored 0%)
  adding: locale/en_AU/LC_MESSAGES/ (stored 0%)
  adding: locale/en_AU/LC_MESSAGES/navit.mo (deflated 64%)
  adding: locale/sv/ (stored 0%)
  adding: locale/sv/LC_MESSAGES/ (stored 0%)
  adding: locale/sv/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/ru/ (stored 0%)
  adding: locale/ru/LC_MESSAGES/ (stored 0%)
  adding: locale/ru/LC_MESSAGES/navit.mo (deflated 59%)
  adding: locale/en_GB/ (stored 0%)
  adding: locale/en_GB/LC_MESSAGES/ (stored 0%)
  adding: locale/en_GB/LC_MESSAGES/navit.mo (deflated 66%)
  adding: locale/zh_HK/ (stored 0%)
  adding: locale/zh_HK/LC_MESSAGES/ (stored 0%)
  adding: locale/zh_HK/LC_MESSAGES/navit.mo (deflated 50%)
  adding: locale/ca/ (stored 0%)
  adding: locale/ca/LC_MESSAGES/ (stored 0%)
  adding: locale/ca/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/sq/ (stored 0%)
  adding: locale/sq/LC_MESSAGES/ (stored 0%)
  adding: locale/sq/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/ku/ (stored 0%)
  adding: locale/ku/LC_MESSAGES/ (stored 0%)
  adding: locale/ku/LC_MESSAGES/navit.mo (deflated 33%)
  adding: locale/en/ (stored 0%)
  adding: locale/en/LC_MESSAGES/ (stored 0%)
  adding: locale/en/LC_MESSAGES/navit.mo (deflated 61%)
  adding: locale/ar/ (stored 0%)
  adding: locale/ar/LC_MESSAGES/ (stored 0%)
  adding: locale/ar/LC_MESSAGES/navit.mo (deflated 57%)
  adding: locale/hi/ (stored 0%)
  adding: locale/hi/LC_MESSAGES/ (stored 0%)
  adding: locale/hi/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/fil/ (stored 0%)
  adding: locale/fil/LC_MESSAGES/ (stored 0%)
  adding: locale/fil/LC_MESSAGES/navit.mo (deflated 49%)
  adding: locale/bs/ (stored 0%)
  adding: locale/bs/LC_MESSAGES/ (stored 0%)
  adding: locale/bs/LC_MESSAGES/navit.mo (deflated 47%)
  adding: locale/fr/ (stored 0%)
  adding: locale/fr/LC_MESSAGES/ (stored 0%)
  adding: locale/fr/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/ast/ (stored 0%)
  adding: locale/ast/LC_MESSAGES/ (stored 0%)
  adding: locale/ast/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/kk/ (stored 0%)
  adding: locale/kk/LC_MESSAGES/ (stored 0%)
  adding: locale/kk/LC_MESSAGES/navit.mo (deflated 30%)
  adding: locale/zh_TW/ (stored 0%)
  adding: locale/zh_TW/LC_MESSAGES/ (stored 0%)
  adding: locale/zh_TW/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/pl/ (stored 0%)
  adding: locale/pl/LC_MESSAGES/ (stored 0%)
  adding: locale/pl/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/mr/ (stored 0%)
  adding: locale/mr/LC_MESSAGES/ (stored 0%)
  adding: locale/mr/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/he/ (stored 0%)
  adding: locale/he/LC_MESSAGES/ (stored 0%)
  adding: locale/he/LC_MESSAGES/navit.mo (deflated 55%)
  adding: maps/ (stored 0%)
  adding: maps/osm_bbox_11.3,47.9,11.7,48.2.bin (deflated 1%)
  adding: maps/osm_bbox_11.3,47.9,11.7,48.2.xml (deflated 1%)
  adding: icons/ (stored 0%)
  adding: icons/nav_right_1_32.xpm (deflated 85%)
  adding: icons/nav_left_1.xpm (deflated 94%)
  adding: icons/nav_right_2.xpm (deflated 94%)
  adding: icons/restroom.xpm (deflated 56%)
  adding: icons/flag_bk_wh.xpm (deflated 78%)
  adding: icons/desktop_icons/ (stored 0%)
  adding: icons/desktop_icons/navit.desktop (deflated 41%)
  adding: icons/gui_sound_off_32.xpm (deflated 71%)
  adding: icons/highway_exit.xpm (deflated 55%)
  adding: icons/nav_right_2_32.xpm (deflated 85%)
  adding: icons/nav_left_2_32.xpm (deflated 85%)
  adding: icons/flag_bl_wh.xpm (deflated 78%)
  adding: icons/nav_left_2.xpm (deflated 94%)
  adding: icons/gc_reference.xpm (deflated 53%)
  adding: icons/cmake_install.cmake (deflated 81%)
  adding: icons/nav_left_1_32.xpm (deflated 85%)
  adding: icons/trailerpark.xpm (deflated 53%)
  adding: icons/gc_event.xpm (deflated 57%)
  adding: icons/gc_question.xpm (deflated 59%)
  adding: icons/gc_webcam.xpm (deflated 53%)
  adding: icons/dumping_station.xpm (deflated 57%)
  adding: icons/nav_straight_32.xpm (deflated 86%)
  adding: icons/gc_mystery.xpm (deflated 56%)
  adding: icons/flag_bk_tr.xpm (deflated 79%)
  adding: icons/Makefile (deflated 78%)
  adding: icons/bus_halt.xpm (deflated 58%)
  adding: icons/nav_straight.xpm (deflated 95%)
  adding: icons/gc_tradi.xpm (deflated 56%)
  adding: icons/nav_right_1.xpm (deflated 94%)
  adding: icons/gc_multi.xpm (deflated 57%)
  adding: icons/gui_sound_32.xpm (deflated 69%)
  adding: icons/gc_stages.xpm (deflated 55%)
  adding: icons/flag_wh_bk.xpm (deflated 78%)
  adding: navit.xml (deflated 89%)
  adding: navit.exe (deflated 63%)

We will need to add the svg/png icons at some point, but this is a separate issue.","Removed useless .cmake files from the generated artefacts
Files in the .zip now :
  adding: locale/ (stored 0%)
  adding: locale/eo/ (stored 0%)
  adding: locale/eo/LC_MESSAGES/ (stored 0%)
  adding: locale/eo/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/bg/ (stored 0%)
  adding: locale/bg/LC_MESSAGES/ (stored 0%)
  adding: locale/bg/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/nb/ (stored 0%)
  adding: locale/nb/LC_MESSAGES/ (stored 0%)
  adding: locale/nb/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/sk/ (stored 0%)
  adding: locale/sk/LC_MESSAGES/ (stored 0%)
  adding: locale/sk/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/sl/ (stored 0%)
  adding: locale/sl/LC_MESSAGES/ (stored 0%)
  adding: locale/sl/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/kn/ (stored 0%)
  adding: locale/kn/LC_MESSAGES/ (stored 0%)
  adding: locale/kn/LC_MESSAGES/navit.mo (deflated 27%)
  adding: locale/el/ (stored 0%)
  adding: locale/el/LC_MESSAGES/ (stored 0%)
  adding: locale/el/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/ta/ (stored 0%)
  adding: locale/ta/LC_MESSAGES/ (stored 0%)
  adding: locale/ta/LC_MESSAGES/navit.mo (deflated 58%)
  adding: locale/be/ (stored 0%)
  adding: locale/be/LC_MESSAGES/ (stored 0%)
  adding: locale/be/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/lb/ (stored 0%)
  adding: locale/lb/LC_MESSAGES/ (stored 0%)
  adding: locale/lb/LC_MESSAGES/navit.mo (deflated 52%)
  adding: locale/ja/ (stored 0%)
  adding: locale/ja/LC_MESSAGES/ (stored 0%)
  adding: locale/ja/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/nl/ (stored 0%)
  adding: locale/nl/LC_MESSAGES/ (stored 0%)
  adding: locale/nl/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/cs/ (stored 0%)
  adding: locale/cs/LC_MESSAGES/ (stored 0%)
  adding: locale/cs/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/ml/ (stored 0%)
  adding: locale/ml/LC_MESSAGES/ (stored 0%)
  adding: locale/ml/LC_MESSAGES/navit.mo (deflated 66%)
  adding: locale/lv/ (stored 0%)
  adding: locale/lv/LC_MESSAGES/ (stored 0%)
  adding: locale/lv/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/th/ (stored 0%)
  adding: locale/th/LC_MESSAGES/ (stored 0%)
  adding: locale/th/LC_MESSAGES/navit.mo (deflated 60%)
  adding: locale/nn/ (stored 0%)
  adding: locale/nn/LC_MESSAGES/ (stored 0%)
  adding: locale/nn/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/fy/ (stored 0%)
  adding: locale/fy/LC_MESSAGES/ (stored 0%)
  adding: locale/fy/LC_MESSAGES/navit.mo (deflated 33%)
  adding: locale/da/ (stored 0%)
  adding: locale/da/LC_MESSAGES/ (stored 0%)
  adding: locale/da/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/fa/ (stored 0%)
  adding: locale/fa/LC_MESSAGES/ (stored 0%)
  adding: locale/fa/LC_MESSAGES/navit.mo (deflated 50%)
  adding: locale/cy/ (stored 0%)
  adding: locale/cy/LC_MESSAGES/ (stored 0%)
  adding: locale/cy/LC_MESSAGES/navit.mo (deflated 40%)
  adding: locale/es/ (stored 0%)
  adding: locale/es/LC_MESSAGES/ (stored 0%)
  adding: locale/es/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/sc/ (stored 0%)
  adding: locale/sc/LC_MESSAGES/ (stored 0%)
  adding: locale/sc/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/et/ (stored 0%)
  adding: locale/et/LC_MESSAGES/ (stored 0%)
  adding: locale/et/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/ur/ (stored 0%)
  adding: locale/ur/LC_MESSAGES/ (stored 0%)
  adding: locale/ur/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/vi/ (stored 0%)
  adding: locale/vi/LC_MESSAGES/ (stored 0%)
  adding: locale/vi/LC_MESSAGES/navit.mo (deflated 57%)
  adding: locale/ro/ (stored 0%)
  adding: locale/ro/LC_MESSAGES/ (stored 0%)
  adding: locale/ro/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/pt/ (stored 0%)
  adding: locale/pt/LC_MESSAGES/ (stored 0%)
  adding: locale/pt/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/lt/ (stored 0%)
  adding: locale/lt/LC_MESSAGES/ (stored 0%)
  adding: locale/lt/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/fo/ (stored 0%)
  adding: locale/fo/LC_MESSAGES/ (stored 0%)
  adding: locale/fo/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/jv/ (stored 0%)
  adding: locale/jv/LC_MESSAGES/ (stored 0%)
  adding: locale/jv/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/de/ (stored 0%)
  adding: locale/de/LC_MESSAGES/ (stored 0%)
  adding: locale/de/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/hu/ (stored 0%)
  adding: locale/hu/LC_MESSAGES/ (stored 0%)
  adding: locale/hu/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/si/ (stored 0%)
  adding: locale/si/LC_MESSAGES/ (stored 0%)
  adding: locale/si/LC_MESSAGES/navit.mo (deflated 62%)
  adding: locale/gl/ (stored 0%)
  adding: locale/gl/LC_MESSAGES/ (stored 0%)
  adding: locale/gl/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/mn/ (stored 0%)
  adding: locale/mn/LC_MESSAGES/ (stored 0%)
  adding: locale/mn/LC_MESSAGES/navit.mo (deflated 36%)
  adding: locale/de_CH/ (stored 0%)
  adding: locale/de_CH/LC_MESSAGES/ (stored 0%)
  adding: locale/de_CH/LC_MESSAGES/navit.mo (deflated 29%)
  adding: locale/af/ (stored 0%)
  adding: locale/af/LC_MESSAGES/ (stored 0%)
  adding: locale/af/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/tr/ (stored 0%)
  adding: locale/tr/LC_MESSAGES/ (stored 0%)
  adding: locale/tr/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/te/ (stored 0%)
  adding: locale/te/LC_MESSAGES/ (stored 0%)
  adding: locale/te/LC_MESSAGES/navit.mo (deflated 57%)
  adding: locale/it/ (stored 0%)
  adding: locale/it/LC_MESSAGES/ (stored 0%)
  adding: locale/it/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/mk/ (stored 0%)
  adding: locale/mk/LC_MESSAGES/ (stored 0%)
  adding: locale/mk/LC_MESSAGES/navit.mo (deflated 57%)
  adding: locale/uk/ (stored 0%)
  adding: locale/uk/LC_MESSAGES/ (stored 0%)
  adding: locale/uk/LC_MESSAGES/navit.mo (deflated 57%)
  adding: locale/sr/ (stored 0%)
  adding: locale/sr/LC_MESSAGES/ (stored 0%)
  adding: locale/sr/LC_MESSAGES/navit.mo (deflated 58%)
  adding: locale/ckb/ (stored 0%)
  adding: locale/ckb/LC_MESSAGES/ (stored 0%)
  adding: locale/ckb/LC_MESSAGES/navit.mo (deflated 28%)
  adding: locale/zh_CN/ (stored 0%)
  adding: locale/zh_CN/LC_MESSAGES/ (stored 0%)
  adding: locale/zh_CN/LC_MESSAGES/navit.mo (deflated 50%)
  adding: locale/sw/ (stored 0%)
  adding: locale/sw/LC_MESSAGES/ (stored 0%)
  adding: locale/sw/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/pms/ (stored 0%)
  adding: locale/pms/LC_MESSAGES/ (stored 0%)
  adding: locale/pms/LC_MESSAGES/navit.mo (deflated 45%)
  adding: locale/ko/ (stored 0%)
  adding: locale/ko/LC_MESSAGES/ (stored 0%)
  adding: locale/ko/LC_MESSAGES/navit.mo (deflated 51%)
  adding: locale/fr_CH/ (stored 0%)
  adding: locale/fr_CH/LC_MESSAGES/ (stored 0%)
  adding: locale/fr_CH/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/id/ (stored 0%)
  adding: locale/id/LC_MESSAGES/ (stored 0%)
  adding: locale/id/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/fi/ (stored 0%)
  adding: locale/fi/LC_MESSAGES/ (stored 0%)
  adding: locale/fi/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/en_CA/ (stored 0%)
  adding: locale/en_CA/LC_MESSAGES/ (stored 0%)
  adding: locale/en_CA/LC_MESSAGES/navit.mo (deflated 64%)
  adding: locale/nds/ (stored 0%)
  adding: locale/nds/LC_MESSAGES/ (stored 0%)
  adding: locale/nds/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/hr/ (stored 0%)
  adding: locale/hr/LC_MESSAGES/ (stored 0%)
  adding: locale/hr/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/eu/ (stored 0%)
  adding: locale/eu/LC_MESSAGES/ (stored 0%)
  adding: locale/eu/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/pt_BR/ (stored 0%)
  adding: locale/pt_BR/LC_MESSAGES/ (stored 0%)
  adding: locale/pt_BR/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/en_AU/ (stored 0%)
  adding: locale/en_AU/LC_MESSAGES/ (stored 0%)
  adding: locale/en_AU/LC_MESSAGES/navit.mo (deflated 64%)
  adding: locale/sv/ (stored 0%)
  adding: locale/sv/LC_MESSAGES/ (stored 0%)
  adding: locale/sv/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/ru/ (stored 0%)
  adding: locale/ru/LC_MESSAGES/ (stored 0%)
  adding: locale/ru/LC_MESSAGES/navit.mo (deflated 59%)
  adding: locale/en_GB/ (stored 0%)
  adding: locale/en_GB/LC_MESSAGES/ (stored 0%)
  adding: locale/en_GB/LC_MESSAGES/navit.mo (deflated 66%)
  adding: locale/zh_HK/ (stored 0%)
  adding: locale/zh_HK/LC_MESSAGES/ (stored 0%)
  adding: locale/zh_HK/LC_MESSAGES/navit.mo (deflated 50%)
  adding: locale/ca/ (stored 0%)
  adding: locale/ca/LC_MESSAGES/ (stored 0%)
  adding: locale/ca/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/sq/ (stored 0%)
  adding: locale/sq/LC_MESSAGES/ (stored 0%)
  adding: locale/sq/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/ku/ (stored 0%)
  adding: locale/ku/LC_MESSAGES/ (stored 0%)
  adding: locale/ku/LC_MESSAGES/navit.mo (deflated 33%)
  adding: locale/en/ (stored 0%)
  adding: locale/en/LC_MESSAGES/ (stored 0%)
  adding: locale/en/LC_MESSAGES/navit.mo (deflated 61%)
  adding: locale/ar/ (stored 0%)
  adding: locale/ar/LC_MESSAGES/ (stored 0%)
  adding: locale/ar/LC_MESSAGES/navit.mo (deflated 57%)
  adding: locale/hi/ (stored 0%)
  adding: locale/hi/LC_MESSAGES/ (stored 0%)
  adding: locale/hi/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/fil/ (stored 0%)
  adding: locale/fil/LC_MESSAGES/ (stored 0%)
  adding: locale/fil/LC_MESSAGES/navit.mo (deflated 49%)
  adding: locale/bs/ (stored 0%)
  adding: locale/bs/LC_MESSAGES/ (stored 0%)
  adding: locale/bs/LC_MESSAGES/navit.mo (deflated 47%)
  adding: locale/fr/ (stored 0%)
  adding: locale/fr/LC_MESSAGES/ (stored 0%)
  adding: locale/fr/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/ast/ (stored 0%)
  adding: locale/ast/LC_MESSAGES/ (stored 0%)
  adding: locale/ast/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/kk/ (stored 0%)
  adding: locale/kk/LC_MESSAGES/ (stored 0%)
  adding: locale/kk/LC_MESSAGES/navit.mo (deflated 30%)
  adding: locale/zh_TW/ (stored 0%)
  adding: locale/zh_TW/LC_MESSAGES/ (stored 0%)
  adding: locale/zh_TW/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/pl/ (stored 0%)
  adding: locale/pl/LC_MESSAGES/ (stored 0%)
  adding: locale/pl/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/mr/ (stored 0%)
  adding: locale/mr/LC_MESSAGES/ (stored 0%)
  adding: locale/mr/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/he/ (stored 0%)
  adding: locale/he/LC_MESSAGES/ (stored 0%)
  adding: locale/he/LC_MESSAGES/navit.mo (deflated 55%)
  adding: maps/ (stored 0%)
  adding: maps/osm_bbox_11.3,47.9,11.7,48.2.bin (deflated 1%)
  adding: maps/osm_bbox_11.3,47.9,11.7,48.2.xml (deflated 1%)
  adding: icons/ (stored 0%)
  adding: icons/nav_right_1_32.xpm (deflated 85%)
  adding: icons/nav_left_1.xpm (deflated 94%)
  adding: icons/nav_right_2.xpm (deflated 94%)
  adding: icons/restroom.xpm (deflated 56%)
  adding: icons/flag_bk_wh.xpm (deflated 78%)
  adding: icons/desktop_icons/ (stored 0%)
  adding: icons/desktop_icons/navit.desktop (deflated 41%)
  adding: icons/gui_sound_off_32.xpm (deflated 71%)
  adding: icons/highway_exit.xpm (deflated 55%)
  adding: icons/nav_right_2_32.xpm (deflated 85%)
  adding: icons/nav_left_2_32.xpm (deflated 85%)
  adding: icons/flag_bl_wh.xpm (deflated 78%)
  adding: icons/nav_left_2.xpm (deflated 94%)
  adding: icons/gc_reference.xpm (deflated 53%)
  adding: icons/cmake_install.cmake (deflated 81%)
  adding: icons/nav_left_1_32.xpm (deflated 85%)
  adding: icons/trailerpark.xpm (deflated 53%)
  adding: icons/gc_event.xpm (deflated 57%)
  adding: icons/gc_question.xpm (deflated 59%)
  adding: icons/gc_webcam.xpm (deflated 53%)
  adding: icons/dumping_station.xpm (deflated 57%)
  adding: icons/nav_straight_32.xpm (deflated 86%)
  adding: icons/gc_mystery.xpm (deflated 56%)
  adding: icons/flag_bk_tr.xpm (deflated 79%)
  adding: icons/Makefile (deflated 78%)
  adding: icons/bus_halt.xpm (deflated 58%)
  adding: icons/nav_straight.xpm (deflated 95%)
  adding: icons/gc_tradi.xpm (deflated 56%)
  adding: icons/nav_right_1.xpm (deflated 94%)
  adding: icons/gc_multi.xpm (deflated 57%)
  adding: icons/gui_sound_32.xpm (deflated 69%)
  adding: icons/gc_stages.xpm (deflated 55%)
  adding: icons/flag_wh_bk.xpm (deflated 78%)
  adding: navit.xml (deflated 89%)
  adding: navit.exe (deflated 63%)

We will need to add the svg/png icons at some point, but this is a separate issue.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,412,2018-03-11T22:00:20Z,2018-03-28T17:29:37Z,2018-04-20T11:32:22Z,MERGED,True,1,0,1,https://github.com/pgrandin,Fix:wince:Remove useless files from the output,2,[],https://github.com/navit-gps/navit/pull/412,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/412#issuecomment-372153744,"Removed useless .cmake files from the generated artefacts
Files in the .zip now :
  adding: locale/ (stored 0%)
  adding: locale/eo/ (stored 0%)
  adding: locale/eo/LC_MESSAGES/ (stored 0%)
  adding: locale/eo/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/bg/ (stored 0%)
  adding: locale/bg/LC_MESSAGES/ (stored 0%)
  adding: locale/bg/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/nb/ (stored 0%)
  adding: locale/nb/LC_MESSAGES/ (stored 0%)
  adding: locale/nb/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/sk/ (stored 0%)
  adding: locale/sk/LC_MESSAGES/ (stored 0%)
  adding: locale/sk/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/sl/ (stored 0%)
  adding: locale/sl/LC_MESSAGES/ (stored 0%)
  adding: locale/sl/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/kn/ (stored 0%)
  adding: locale/kn/LC_MESSAGES/ (stored 0%)
  adding: locale/kn/LC_MESSAGES/navit.mo (deflated 27%)
  adding: locale/el/ (stored 0%)
  adding: locale/el/LC_MESSAGES/ (stored 0%)
  adding: locale/el/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/ta/ (stored 0%)
  adding: locale/ta/LC_MESSAGES/ (stored 0%)
  adding: locale/ta/LC_MESSAGES/navit.mo (deflated 58%)
  adding: locale/be/ (stored 0%)
  adding: locale/be/LC_MESSAGES/ (stored 0%)
  adding: locale/be/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/lb/ (stored 0%)
  adding: locale/lb/LC_MESSAGES/ (stored 0%)
  adding: locale/lb/LC_MESSAGES/navit.mo (deflated 52%)
  adding: locale/ja/ (stored 0%)
  adding: locale/ja/LC_MESSAGES/ (stored 0%)
  adding: locale/ja/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/nl/ (stored 0%)
  adding: locale/nl/LC_MESSAGES/ (stored 0%)
  adding: locale/nl/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/cs/ (stored 0%)
  adding: locale/cs/LC_MESSAGES/ (stored 0%)
  adding: locale/cs/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/ml/ (stored 0%)
  adding: locale/ml/LC_MESSAGES/ (stored 0%)
  adding: locale/ml/LC_MESSAGES/navit.mo (deflated 66%)
  adding: locale/lv/ (stored 0%)
  adding: locale/lv/LC_MESSAGES/ (stored 0%)
  adding: locale/lv/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/th/ (stored 0%)
  adding: locale/th/LC_MESSAGES/ (stored 0%)
  adding: locale/th/LC_MESSAGES/navit.mo (deflated 60%)
  adding: locale/nn/ (stored 0%)
  adding: locale/nn/LC_MESSAGES/ (stored 0%)
  adding: locale/nn/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/fy/ (stored 0%)
  adding: locale/fy/LC_MESSAGES/ (stored 0%)
  adding: locale/fy/LC_MESSAGES/navit.mo (deflated 33%)
  adding: locale/da/ (stored 0%)
  adding: locale/da/LC_MESSAGES/ (stored 0%)
  adding: locale/da/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/fa/ (stored 0%)
  adding: locale/fa/LC_MESSAGES/ (stored 0%)
  adding: locale/fa/LC_MESSAGES/navit.mo (deflated 50%)
  adding: locale/cy/ (stored 0%)
  adding: locale/cy/LC_MESSAGES/ (stored 0%)
  adding: locale/cy/LC_MESSAGES/navit.mo (deflated 40%)
  adding: locale/es/ (stored 0%)
  adding: locale/es/LC_MESSAGES/ (stored 0%)
  adding: locale/es/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/sc/ (stored 0%)
  adding: locale/sc/LC_MESSAGES/ (stored 0%)
  adding: locale/sc/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/et/ (stored 0%)
  adding: locale/et/LC_MESSAGES/ (stored 0%)
  adding: locale/et/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/ur/ (stored 0%)
  adding: locale/ur/LC_MESSAGES/ (stored 0%)
  adding: locale/ur/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/vi/ (stored 0%)
  adding: locale/vi/LC_MESSAGES/ (stored 0%)
  adding: locale/vi/LC_MESSAGES/navit.mo (deflated 57%)
  adding: locale/ro/ (stored 0%)
  adding: locale/ro/LC_MESSAGES/ (stored 0%)
  adding: locale/ro/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/pt/ (stored 0%)
  adding: locale/pt/LC_MESSAGES/ (stored 0%)
  adding: locale/pt/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/lt/ (stored 0%)
  adding: locale/lt/LC_MESSAGES/ (stored 0%)
  adding: locale/lt/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/fo/ (stored 0%)
  adding: locale/fo/LC_MESSAGES/ (stored 0%)
  adding: locale/fo/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/jv/ (stored 0%)
  adding: locale/jv/LC_MESSAGES/ (stored 0%)
  adding: locale/jv/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/de/ (stored 0%)
  adding: locale/de/LC_MESSAGES/ (stored 0%)
  adding: locale/de/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/hu/ (stored 0%)
  adding: locale/hu/LC_MESSAGES/ (stored 0%)
  adding: locale/hu/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/si/ (stored 0%)
  adding: locale/si/LC_MESSAGES/ (stored 0%)
  adding: locale/si/LC_MESSAGES/navit.mo (deflated 62%)
  adding: locale/gl/ (stored 0%)
  adding: locale/gl/LC_MESSAGES/ (stored 0%)
  adding: locale/gl/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/mn/ (stored 0%)
  adding: locale/mn/LC_MESSAGES/ (stored 0%)
  adding: locale/mn/LC_MESSAGES/navit.mo (deflated 36%)
  adding: locale/de_CH/ (stored 0%)
  adding: locale/de_CH/LC_MESSAGES/ (stored 0%)
  adding: locale/de_CH/LC_MESSAGES/navit.mo (deflated 29%)
  adding: locale/af/ (stored 0%)
  adding: locale/af/LC_MESSAGES/ (stored 0%)
  adding: locale/af/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/tr/ (stored 0%)
  adding: locale/tr/LC_MESSAGES/ (stored 0%)
  adding: locale/tr/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/te/ (stored 0%)
  adding: locale/te/LC_MESSAGES/ (stored 0%)
  adding: locale/te/LC_MESSAGES/navit.mo (deflated 57%)
  adding: locale/it/ (stored 0%)
  adding: locale/it/LC_MESSAGES/ (stored 0%)
  adding: locale/it/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/mk/ (stored 0%)
  adding: locale/mk/LC_MESSAGES/ (stored 0%)
  adding: locale/mk/LC_MESSAGES/navit.mo (deflated 57%)
  adding: locale/uk/ (stored 0%)
  adding: locale/uk/LC_MESSAGES/ (stored 0%)
  adding: locale/uk/LC_MESSAGES/navit.mo (deflated 57%)
  adding: locale/sr/ (stored 0%)
  adding: locale/sr/LC_MESSAGES/ (stored 0%)
  adding: locale/sr/LC_MESSAGES/navit.mo (deflated 58%)
  adding: locale/ckb/ (stored 0%)
  adding: locale/ckb/LC_MESSAGES/ (stored 0%)
  adding: locale/ckb/LC_MESSAGES/navit.mo (deflated 28%)
  adding: locale/zh_CN/ (stored 0%)
  adding: locale/zh_CN/LC_MESSAGES/ (stored 0%)
  adding: locale/zh_CN/LC_MESSAGES/navit.mo (deflated 50%)
  adding: locale/sw/ (stored 0%)
  adding: locale/sw/LC_MESSAGES/ (stored 0%)
  adding: locale/sw/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/pms/ (stored 0%)
  adding: locale/pms/LC_MESSAGES/ (stored 0%)
  adding: locale/pms/LC_MESSAGES/navit.mo (deflated 45%)
  adding: locale/ko/ (stored 0%)
  adding: locale/ko/LC_MESSAGES/ (stored 0%)
  adding: locale/ko/LC_MESSAGES/navit.mo (deflated 51%)
  adding: locale/fr_CH/ (stored 0%)
  adding: locale/fr_CH/LC_MESSAGES/ (stored 0%)
  adding: locale/fr_CH/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/id/ (stored 0%)
  adding: locale/id/LC_MESSAGES/ (stored 0%)
  adding: locale/id/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/fi/ (stored 0%)
  adding: locale/fi/LC_MESSAGES/ (stored 0%)
  adding: locale/fi/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/en_CA/ (stored 0%)
  adding: locale/en_CA/LC_MESSAGES/ (stored 0%)
  adding: locale/en_CA/LC_MESSAGES/navit.mo (deflated 64%)
  adding: locale/nds/ (stored 0%)
  adding: locale/nds/LC_MESSAGES/ (stored 0%)
  adding: locale/nds/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/hr/ (stored 0%)
  adding: locale/hr/LC_MESSAGES/ (stored 0%)
  adding: locale/hr/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/eu/ (stored 0%)
  adding: locale/eu/LC_MESSAGES/ (stored 0%)
  adding: locale/eu/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/pt_BR/ (stored 0%)
  adding: locale/pt_BR/LC_MESSAGES/ (stored 0%)
  adding: locale/pt_BR/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/en_AU/ (stored 0%)
  adding: locale/en_AU/LC_MESSAGES/ (stored 0%)
  adding: locale/en_AU/LC_MESSAGES/navit.mo (deflated 64%)
  adding: locale/sv/ (stored 0%)
  adding: locale/sv/LC_MESSAGES/ (stored 0%)
  adding: locale/sv/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/ru/ (stored 0%)
  adding: locale/ru/LC_MESSAGES/ (stored 0%)
  adding: locale/ru/LC_MESSAGES/navit.mo (deflated 59%)
  adding: locale/en_GB/ (stored 0%)
  adding: locale/en_GB/LC_MESSAGES/ (stored 0%)
  adding: locale/en_GB/LC_MESSAGES/navit.mo (deflated 66%)
  adding: locale/zh_HK/ (stored 0%)
  adding: locale/zh_HK/LC_MESSAGES/ (stored 0%)
  adding: locale/zh_HK/LC_MESSAGES/navit.mo (deflated 50%)
  adding: locale/ca/ (stored 0%)
  adding: locale/ca/LC_MESSAGES/ (stored 0%)
  adding: locale/ca/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/sq/ (stored 0%)
  adding: locale/sq/LC_MESSAGES/ (stored 0%)
  adding: locale/sq/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/ku/ (stored 0%)
  adding: locale/ku/LC_MESSAGES/ (stored 0%)
  adding: locale/ku/LC_MESSAGES/navit.mo (deflated 33%)
  adding: locale/en/ (stored 0%)
  adding: locale/en/LC_MESSAGES/ (stored 0%)
  adding: locale/en/LC_MESSAGES/navit.mo (deflated 61%)
  adding: locale/ar/ (stored 0%)
  adding: locale/ar/LC_MESSAGES/ (stored 0%)
  adding: locale/ar/LC_MESSAGES/navit.mo (deflated 57%)
  adding: locale/hi/ (stored 0%)
  adding: locale/hi/LC_MESSAGES/ (stored 0%)
  adding: locale/hi/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/fil/ (stored 0%)
  adding: locale/fil/LC_MESSAGES/ (stored 0%)
  adding: locale/fil/LC_MESSAGES/navit.mo (deflated 49%)
  adding: locale/bs/ (stored 0%)
  adding: locale/bs/LC_MESSAGES/ (stored 0%)
  adding: locale/bs/LC_MESSAGES/navit.mo (deflated 47%)
  adding: locale/fr/ (stored 0%)
  adding: locale/fr/LC_MESSAGES/ (stored 0%)
  adding: locale/fr/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/ast/ (stored 0%)
  adding: locale/ast/LC_MESSAGES/ (stored 0%)
  adding: locale/ast/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/kk/ (stored 0%)
  adding: locale/kk/LC_MESSAGES/ (stored 0%)
  adding: locale/kk/LC_MESSAGES/navit.mo (deflated 30%)
  adding: locale/zh_TW/ (stored 0%)
  adding: locale/zh_TW/LC_MESSAGES/ (stored 0%)
  adding: locale/zh_TW/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/pl/ (stored 0%)
  adding: locale/pl/LC_MESSAGES/ (stored 0%)
  adding: locale/pl/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/mr/ (stored 0%)
  adding: locale/mr/LC_MESSAGES/ (stored 0%)
  adding: locale/mr/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/he/ (stored 0%)
  adding: locale/he/LC_MESSAGES/ (stored 0%)
  adding: locale/he/LC_MESSAGES/navit.mo (deflated 55%)
  adding: maps/ (stored 0%)
  adding: maps/osm_bbox_11.3,47.9,11.7,48.2.bin (deflated 1%)
  adding: maps/osm_bbox_11.3,47.9,11.7,48.2.xml (deflated 1%)
  adding: icons/ (stored 0%)
  adding: icons/nav_right_1_32.xpm (deflated 85%)
  adding: icons/nav_left_1.xpm (deflated 94%)
  adding: icons/nav_right_2.xpm (deflated 94%)
  adding: icons/restroom.xpm (deflated 56%)
  adding: icons/flag_bk_wh.xpm (deflated 78%)
  adding: icons/desktop_icons/ (stored 0%)
  adding: icons/desktop_icons/navit.desktop (deflated 41%)
  adding: icons/gui_sound_off_32.xpm (deflated 71%)
  adding: icons/highway_exit.xpm (deflated 55%)
  adding: icons/nav_right_2_32.xpm (deflated 85%)
  adding: icons/nav_left_2_32.xpm (deflated 85%)
  adding: icons/flag_bl_wh.xpm (deflated 78%)
  adding: icons/nav_left_2.xpm (deflated 94%)
  adding: icons/gc_reference.xpm (deflated 53%)
  adding: icons/cmake_install.cmake (deflated 81%)
  adding: icons/nav_left_1_32.xpm (deflated 85%)
  adding: icons/trailerpark.xpm (deflated 53%)
  adding: icons/gc_event.xpm (deflated 57%)
  adding: icons/gc_question.xpm (deflated 59%)
  adding: icons/gc_webcam.xpm (deflated 53%)
  adding: icons/dumping_station.xpm (deflated 57%)
  adding: icons/nav_straight_32.xpm (deflated 86%)
  adding: icons/gc_mystery.xpm (deflated 56%)
  adding: icons/flag_bk_tr.xpm (deflated 79%)
  adding: icons/Makefile (deflated 78%)
  adding: icons/bus_halt.xpm (deflated 58%)
  adding: icons/nav_straight.xpm (deflated 95%)
  adding: icons/gc_tradi.xpm (deflated 56%)
  adding: icons/nav_right_1.xpm (deflated 94%)
  adding: icons/gc_multi.xpm (deflated 57%)
  adding: icons/gui_sound_32.xpm (deflated 69%)
  adding: icons/gc_stages.xpm (deflated 55%)
  adding: icons/flag_wh_bk.xpm (deflated 78%)
  adding: navit.xml (deflated 89%)
  adding: navit.exe (deflated 63%)

We will need to add the svg/png icons at some point, but this is a separate issue.",Maps should also not be included because it is always a very old one of Munich,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,412,2018-03-11T22:00:20Z,2018-03-28T17:29:37Z,2018-04-20T11:32:22Z,MERGED,True,1,0,1,https://github.com/pgrandin,Fix:wince:Remove useless files from the output,2,[],https://github.com/navit-gps/navit/pull/412,https://github.com/pgrandin,3,https://github.com/navit-gps/navit/pull/412#issuecomment-372153791,"Removed useless .cmake files from the generated artefacts
Files in the .zip now :
  adding: locale/ (stored 0%)
  adding: locale/eo/ (stored 0%)
  adding: locale/eo/LC_MESSAGES/ (stored 0%)
  adding: locale/eo/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/bg/ (stored 0%)
  adding: locale/bg/LC_MESSAGES/ (stored 0%)
  adding: locale/bg/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/nb/ (stored 0%)
  adding: locale/nb/LC_MESSAGES/ (stored 0%)
  adding: locale/nb/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/sk/ (stored 0%)
  adding: locale/sk/LC_MESSAGES/ (stored 0%)
  adding: locale/sk/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/sl/ (stored 0%)
  adding: locale/sl/LC_MESSAGES/ (stored 0%)
  adding: locale/sl/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/kn/ (stored 0%)
  adding: locale/kn/LC_MESSAGES/ (stored 0%)
  adding: locale/kn/LC_MESSAGES/navit.mo (deflated 27%)
  adding: locale/el/ (stored 0%)
  adding: locale/el/LC_MESSAGES/ (stored 0%)
  adding: locale/el/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/ta/ (stored 0%)
  adding: locale/ta/LC_MESSAGES/ (stored 0%)
  adding: locale/ta/LC_MESSAGES/navit.mo (deflated 58%)
  adding: locale/be/ (stored 0%)
  adding: locale/be/LC_MESSAGES/ (stored 0%)
  adding: locale/be/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/lb/ (stored 0%)
  adding: locale/lb/LC_MESSAGES/ (stored 0%)
  adding: locale/lb/LC_MESSAGES/navit.mo (deflated 52%)
  adding: locale/ja/ (stored 0%)
  adding: locale/ja/LC_MESSAGES/ (stored 0%)
  adding: locale/ja/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/nl/ (stored 0%)
  adding: locale/nl/LC_MESSAGES/ (stored 0%)
  adding: locale/nl/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/cs/ (stored 0%)
  adding: locale/cs/LC_MESSAGES/ (stored 0%)
  adding: locale/cs/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/ml/ (stored 0%)
  adding: locale/ml/LC_MESSAGES/ (stored 0%)
  adding: locale/ml/LC_MESSAGES/navit.mo (deflated 66%)
  adding: locale/lv/ (stored 0%)
  adding: locale/lv/LC_MESSAGES/ (stored 0%)
  adding: locale/lv/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/th/ (stored 0%)
  adding: locale/th/LC_MESSAGES/ (stored 0%)
  adding: locale/th/LC_MESSAGES/navit.mo (deflated 60%)
  adding: locale/nn/ (stored 0%)
  adding: locale/nn/LC_MESSAGES/ (stored 0%)
  adding: locale/nn/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/fy/ (stored 0%)
  adding: locale/fy/LC_MESSAGES/ (stored 0%)
  adding: locale/fy/LC_MESSAGES/navit.mo (deflated 33%)
  adding: locale/da/ (stored 0%)
  adding: locale/da/LC_MESSAGES/ (stored 0%)
  adding: locale/da/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/fa/ (stored 0%)
  adding: locale/fa/LC_MESSAGES/ (stored 0%)
  adding: locale/fa/LC_MESSAGES/navit.mo (deflated 50%)
  adding: locale/cy/ (stored 0%)
  adding: locale/cy/LC_MESSAGES/ (stored 0%)
  adding: locale/cy/LC_MESSAGES/navit.mo (deflated 40%)
  adding: locale/es/ (stored 0%)
  adding: locale/es/LC_MESSAGES/ (stored 0%)
  adding: locale/es/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/sc/ (stored 0%)
  adding: locale/sc/LC_MESSAGES/ (stored 0%)
  adding: locale/sc/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/et/ (stored 0%)
  adding: locale/et/LC_MESSAGES/ (stored 0%)
  adding: locale/et/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/ur/ (stored 0%)
  adding: locale/ur/LC_MESSAGES/ (stored 0%)
  adding: locale/ur/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/vi/ (stored 0%)
  adding: locale/vi/LC_MESSAGES/ (stored 0%)
  adding: locale/vi/LC_MESSAGES/navit.mo (deflated 57%)
  adding: locale/ro/ (stored 0%)
  adding: locale/ro/LC_MESSAGES/ (stored 0%)
  adding: locale/ro/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/pt/ (stored 0%)
  adding: locale/pt/LC_MESSAGES/ (stored 0%)
  adding: locale/pt/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/lt/ (stored 0%)
  adding: locale/lt/LC_MESSAGES/ (stored 0%)
  adding: locale/lt/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/fo/ (stored 0%)
  adding: locale/fo/LC_MESSAGES/ (stored 0%)
  adding: locale/fo/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/jv/ (stored 0%)
  adding: locale/jv/LC_MESSAGES/ (stored 0%)
  adding: locale/jv/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/de/ (stored 0%)
  adding: locale/de/LC_MESSAGES/ (stored 0%)
  adding: locale/de/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/hu/ (stored 0%)
  adding: locale/hu/LC_MESSAGES/ (stored 0%)
  adding: locale/hu/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/si/ (stored 0%)
  adding: locale/si/LC_MESSAGES/ (stored 0%)
  adding: locale/si/LC_MESSAGES/navit.mo (deflated 62%)
  adding: locale/gl/ (stored 0%)
  adding: locale/gl/LC_MESSAGES/ (stored 0%)
  adding: locale/gl/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/mn/ (stored 0%)
  adding: locale/mn/LC_MESSAGES/ (stored 0%)
  adding: locale/mn/LC_MESSAGES/navit.mo (deflated 36%)
  adding: locale/de_CH/ (stored 0%)
  adding: locale/de_CH/LC_MESSAGES/ (stored 0%)
  adding: locale/de_CH/LC_MESSAGES/navit.mo (deflated 29%)
  adding: locale/af/ (stored 0%)
  adding: locale/af/LC_MESSAGES/ (stored 0%)
  adding: locale/af/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/tr/ (stored 0%)
  adding: locale/tr/LC_MESSAGES/ (stored 0%)
  adding: locale/tr/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/te/ (stored 0%)
  adding: locale/te/LC_MESSAGES/ (stored 0%)
  adding: locale/te/LC_MESSAGES/navit.mo (deflated 57%)
  adding: locale/it/ (stored 0%)
  adding: locale/it/LC_MESSAGES/ (stored 0%)
  adding: locale/it/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/mk/ (stored 0%)
  adding: locale/mk/LC_MESSAGES/ (stored 0%)
  adding: locale/mk/LC_MESSAGES/navit.mo (deflated 57%)
  adding: locale/uk/ (stored 0%)
  adding: locale/uk/LC_MESSAGES/ (stored 0%)
  adding: locale/uk/LC_MESSAGES/navit.mo (deflated 57%)
  adding: locale/sr/ (stored 0%)
  adding: locale/sr/LC_MESSAGES/ (stored 0%)
  adding: locale/sr/LC_MESSAGES/navit.mo (deflated 58%)
  adding: locale/ckb/ (stored 0%)
  adding: locale/ckb/LC_MESSAGES/ (stored 0%)
  adding: locale/ckb/LC_MESSAGES/navit.mo (deflated 28%)
  adding: locale/zh_CN/ (stored 0%)
  adding: locale/zh_CN/LC_MESSAGES/ (stored 0%)
  adding: locale/zh_CN/LC_MESSAGES/navit.mo (deflated 50%)
  adding: locale/sw/ (stored 0%)
  adding: locale/sw/LC_MESSAGES/ (stored 0%)
  adding: locale/sw/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/pms/ (stored 0%)
  adding: locale/pms/LC_MESSAGES/ (stored 0%)
  adding: locale/pms/LC_MESSAGES/navit.mo (deflated 45%)
  adding: locale/ko/ (stored 0%)
  adding: locale/ko/LC_MESSAGES/ (stored 0%)
  adding: locale/ko/LC_MESSAGES/navit.mo (deflated 51%)
  adding: locale/fr_CH/ (stored 0%)
  adding: locale/fr_CH/LC_MESSAGES/ (stored 0%)
  adding: locale/fr_CH/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/id/ (stored 0%)
  adding: locale/id/LC_MESSAGES/ (stored 0%)
  adding: locale/id/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/fi/ (stored 0%)
  adding: locale/fi/LC_MESSAGES/ (stored 0%)
  adding: locale/fi/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/en_CA/ (stored 0%)
  adding: locale/en_CA/LC_MESSAGES/ (stored 0%)
  adding: locale/en_CA/LC_MESSAGES/navit.mo (deflated 64%)
  adding: locale/nds/ (stored 0%)
  adding: locale/nds/LC_MESSAGES/ (stored 0%)
  adding: locale/nds/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/hr/ (stored 0%)
  adding: locale/hr/LC_MESSAGES/ (stored 0%)
  adding: locale/hr/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/eu/ (stored 0%)
  adding: locale/eu/LC_MESSAGES/ (stored 0%)
  adding: locale/eu/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/pt_BR/ (stored 0%)
  adding: locale/pt_BR/LC_MESSAGES/ (stored 0%)
  adding: locale/pt_BR/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/en_AU/ (stored 0%)
  adding: locale/en_AU/LC_MESSAGES/ (stored 0%)
  adding: locale/en_AU/LC_MESSAGES/navit.mo (deflated 64%)
  adding: locale/sv/ (stored 0%)
  adding: locale/sv/LC_MESSAGES/ (stored 0%)
  adding: locale/sv/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/ru/ (stored 0%)
  adding: locale/ru/LC_MESSAGES/ (stored 0%)
  adding: locale/ru/LC_MESSAGES/navit.mo (deflated 59%)
  adding: locale/en_GB/ (stored 0%)
  adding: locale/en_GB/LC_MESSAGES/ (stored 0%)
  adding: locale/en_GB/LC_MESSAGES/navit.mo (deflated 66%)
  adding: locale/zh_HK/ (stored 0%)
  adding: locale/zh_HK/LC_MESSAGES/ (stored 0%)
  adding: locale/zh_HK/LC_MESSAGES/navit.mo (deflated 50%)
  adding: locale/ca/ (stored 0%)
  adding: locale/ca/LC_MESSAGES/ (stored 0%)
  adding: locale/ca/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/sq/ (stored 0%)
  adding: locale/sq/LC_MESSAGES/ (stored 0%)
  adding: locale/sq/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/ku/ (stored 0%)
  adding: locale/ku/LC_MESSAGES/ (stored 0%)
  adding: locale/ku/LC_MESSAGES/navit.mo (deflated 33%)
  adding: locale/en/ (stored 0%)
  adding: locale/en/LC_MESSAGES/ (stored 0%)
  adding: locale/en/LC_MESSAGES/navit.mo (deflated 61%)
  adding: locale/ar/ (stored 0%)
  adding: locale/ar/LC_MESSAGES/ (stored 0%)
  adding: locale/ar/LC_MESSAGES/navit.mo (deflated 57%)
  adding: locale/hi/ (stored 0%)
  adding: locale/hi/LC_MESSAGES/ (stored 0%)
  adding: locale/hi/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/fil/ (stored 0%)
  adding: locale/fil/LC_MESSAGES/ (stored 0%)
  adding: locale/fil/LC_MESSAGES/navit.mo (deflated 49%)
  adding: locale/bs/ (stored 0%)
  adding: locale/bs/LC_MESSAGES/ (stored 0%)
  adding: locale/bs/LC_MESSAGES/navit.mo (deflated 47%)
  adding: locale/fr/ (stored 0%)
  adding: locale/fr/LC_MESSAGES/ (stored 0%)
  adding: locale/fr/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/ast/ (stored 0%)
  adding: locale/ast/LC_MESSAGES/ (stored 0%)
  adding: locale/ast/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/kk/ (stored 0%)
  adding: locale/kk/LC_MESSAGES/ (stored 0%)
  adding: locale/kk/LC_MESSAGES/navit.mo (deflated 30%)
  adding: locale/zh_TW/ (stored 0%)
  adding: locale/zh_TW/LC_MESSAGES/ (stored 0%)
  adding: locale/zh_TW/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/pl/ (stored 0%)
  adding: locale/pl/LC_MESSAGES/ (stored 0%)
  adding: locale/pl/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/mr/ (stored 0%)
  adding: locale/mr/LC_MESSAGES/ (stored 0%)
  adding: locale/mr/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/he/ (stored 0%)
  adding: locale/he/LC_MESSAGES/ (stored 0%)
  adding: locale/he/LC_MESSAGES/navit.mo (deflated 55%)
  adding: maps/ (stored 0%)
  adding: maps/osm_bbox_11.3,47.9,11.7,48.2.bin (deflated 1%)
  adding: maps/osm_bbox_11.3,47.9,11.7,48.2.xml (deflated 1%)
  adding: icons/ (stored 0%)
  adding: icons/nav_right_1_32.xpm (deflated 85%)
  adding: icons/nav_left_1.xpm (deflated 94%)
  adding: icons/nav_right_2.xpm (deflated 94%)
  adding: icons/restroom.xpm (deflated 56%)
  adding: icons/flag_bk_wh.xpm (deflated 78%)
  adding: icons/desktop_icons/ (stored 0%)
  adding: icons/desktop_icons/navit.desktop (deflated 41%)
  adding: icons/gui_sound_off_32.xpm (deflated 71%)
  adding: icons/highway_exit.xpm (deflated 55%)
  adding: icons/nav_right_2_32.xpm (deflated 85%)
  adding: icons/nav_left_2_32.xpm (deflated 85%)
  adding: icons/flag_bl_wh.xpm (deflated 78%)
  adding: icons/nav_left_2.xpm (deflated 94%)
  adding: icons/gc_reference.xpm (deflated 53%)
  adding: icons/cmake_install.cmake (deflated 81%)
  adding: icons/nav_left_1_32.xpm (deflated 85%)
  adding: icons/trailerpark.xpm (deflated 53%)
  adding: icons/gc_event.xpm (deflated 57%)
  adding: icons/gc_question.xpm (deflated 59%)
  adding: icons/gc_webcam.xpm (deflated 53%)
  adding: icons/dumping_station.xpm (deflated 57%)
  adding: icons/nav_straight_32.xpm (deflated 86%)
  adding: icons/gc_mystery.xpm (deflated 56%)
  adding: icons/flag_bk_tr.xpm (deflated 79%)
  adding: icons/Makefile (deflated 78%)
  adding: icons/bus_halt.xpm (deflated 58%)
  adding: icons/nav_straight.xpm (deflated 95%)
  adding: icons/gc_tradi.xpm (deflated 56%)
  adding: icons/nav_right_1.xpm (deflated 94%)
  adding: icons/gc_multi.xpm (deflated 57%)
  adding: icons/gui_sound_32.xpm (deflated 69%)
  adding: icons/gc_stages.xpm (deflated 55%)
  adding: icons/flag_wh_bk.xpm (deflated 78%)
  adding: navit.xml (deflated 89%)
  adding: navit.exe (deflated 63%)

We will need to add the svg/png icons at some point, but this is a separate issue.","Well the map one is tricky, because without maps users get a yellow empty screen.
Thoughts?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,412,2018-03-11T22:00:20Z,2018-03-28T17:29:37Z,2018-04-20T11:32:22Z,MERGED,True,1,0,1,https://github.com/pgrandin,Fix:wince:Remove useless files from the output,2,[],https://github.com/navit-gps/navit/pull/412,https://github.com/jkoan,4,https://github.com/navit-gps/navit/pull/412#issuecomment-372154060,"Removed useless .cmake files from the generated artefacts
Files in the .zip now :
  adding: locale/ (stored 0%)
  adding: locale/eo/ (stored 0%)
  adding: locale/eo/LC_MESSAGES/ (stored 0%)
  adding: locale/eo/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/bg/ (stored 0%)
  adding: locale/bg/LC_MESSAGES/ (stored 0%)
  adding: locale/bg/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/nb/ (stored 0%)
  adding: locale/nb/LC_MESSAGES/ (stored 0%)
  adding: locale/nb/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/sk/ (stored 0%)
  adding: locale/sk/LC_MESSAGES/ (stored 0%)
  adding: locale/sk/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/sl/ (stored 0%)
  adding: locale/sl/LC_MESSAGES/ (stored 0%)
  adding: locale/sl/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/kn/ (stored 0%)
  adding: locale/kn/LC_MESSAGES/ (stored 0%)
  adding: locale/kn/LC_MESSAGES/navit.mo (deflated 27%)
  adding: locale/el/ (stored 0%)
  adding: locale/el/LC_MESSAGES/ (stored 0%)
  adding: locale/el/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/ta/ (stored 0%)
  adding: locale/ta/LC_MESSAGES/ (stored 0%)
  adding: locale/ta/LC_MESSAGES/navit.mo (deflated 58%)
  adding: locale/be/ (stored 0%)
  adding: locale/be/LC_MESSAGES/ (stored 0%)
  adding: locale/be/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/lb/ (stored 0%)
  adding: locale/lb/LC_MESSAGES/ (stored 0%)
  adding: locale/lb/LC_MESSAGES/navit.mo (deflated 52%)
  adding: locale/ja/ (stored 0%)
  adding: locale/ja/LC_MESSAGES/ (stored 0%)
  adding: locale/ja/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/nl/ (stored 0%)
  adding: locale/nl/LC_MESSAGES/ (stored 0%)
  adding: locale/nl/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/cs/ (stored 0%)
  adding: locale/cs/LC_MESSAGES/ (stored 0%)
  adding: locale/cs/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/ml/ (stored 0%)
  adding: locale/ml/LC_MESSAGES/ (stored 0%)
  adding: locale/ml/LC_MESSAGES/navit.mo (deflated 66%)
  adding: locale/lv/ (stored 0%)
  adding: locale/lv/LC_MESSAGES/ (stored 0%)
  adding: locale/lv/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/th/ (stored 0%)
  adding: locale/th/LC_MESSAGES/ (stored 0%)
  adding: locale/th/LC_MESSAGES/navit.mo (deflated 60%)
  adding: locale/nn/ (stored 0%)
  adding: locale/nn/LC_MESSAGES/ (stored 0%)
  adding: locale/nn/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/fy/ (stored 0%)
  adding: locale/fy/LC_MESSAGES/ (stored 0%)
  adding: locale/fy/LC_MESSAGES/navit.mo (deflated 33%)
  adding: locale/da/ (stored 0%)
  adding: locale/da/LC_MESSAGES/ (stored 0%)
  adding: locale/da/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/fa/ (stored 0%)
  adding: locale/fa/LC_MESSAGES/ (stored 0%)
  adding: locale/fa/LC_MESSAGES/navit.mo (deflated 50%)
  adding: locale/cy/ (stored 0%)
  adding: locale/cy/LC_MESSAGES/ (stored 0%)
  adding: locale/cy/LC_MESSAGES/navit.mo (deflated 40%)
  adding: locale/es/ (stored 0%)
  adding: locale/es/LC_MESSAGES/ (stored 0%)
  adding: locale/es/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/sc/ (stored 0%)
  adding: locale/sc/LC_MESSAGES/ (stored 0%)
  adding: locale/sc/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/et/ (stored 0%)
  adding: locale/et/LC_MESSAGES/ (stored 0%)
  adding: locale/et/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/ur/ (stored 0%)
  adding: locale/ur/LC_MESSAGES/ (stored 0%)
  adding: locale/ur/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/vi/ (stored 0%)
  adding: locale/vi/LC_MESSAGES/ (stored 0%)
  adding: locale/vi/LC_MESSAGES/navit.mo (deflated 57%)
  adding: locale/ro/ (stored 0%)
  adding: locale/ro/LC_MESSAGES/ (stored 0%)
  adding: locale/ro/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/pt/ (stored 0%)
  adding: locale/pt/LC_MESSAGES/ (stored 0%)
  adding: locale/pt/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/lt/ (stored 0%)
  adding: locale/lt/LC_MESSAGES/ (stored 0%)
  adding: locale/lt/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/fo/ (stored 0%)
  adding: locale/fo/LC_MESSAGES/ (stored 0%)
  adding: locale/fo/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/jv/ (stored 0%)
  adding: locale/jv/LC_MESSAGES/ (stored 0%)
  adding: locale/jv/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/de/ (stored 0%)
  adding: locale/de/LC_MESSAGES/ (stored 0%)
  adding: locale/de/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/hu/ (stored 0%)
  adding: locale/hu/LC_MESSAGES/ (stored 0%)
  adding: locale/hu/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/si/ (stored 0%)
  adding: locale/si/LC_MESSAGES/ (stored 0%)
  adding: locale/si/LC_MESSAGES/navit.mo (deflated 62%)
  adding: locale/gl/ (stored 0%)
  adding: locale/gl/LC_MESSAGES/ (stored 0%)
  adding: locale/gl/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/mn/ (stored 0%)
  adding: locale/mn/LC_MESSAGES/ (stored 0%)
  adding: locale/mn/LC_MESSAGES/navit.mo (deflated 36%)
  adding: locale/de_CH/ (stored 0%)
  adding: locale/de_CH/LC_MESSAGES/ (stored 0%)
  adding: locale/de_CH/LC_MESSAGES/navit.mo (deflated 29%)
  adding: locale/af/ (stored 0%)
  adding: locale/af/LC_MESSAGES/ (stored 0%)
  adding: locale/af/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/tr/ (stored 0%)
  adding: locale/tr/LC_MESSAGES/ (stored 0%)
  adding: locale/tr/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/te/ (stored 0%)
  adding: locale/te/LC_MESSAGES/ (stored 0%)
  adding: locale/te/LC_MESSAGES/navit.mo (deflated 57%)
  adding: locale/it/ (stored 0%)
  adding: locale/it/LC_MESSAGES/ (stored 0%)
  adding: locale/it/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/mk/ (stored 0%)
  adding: locale/mk/LC_MESSAGES/ (stored 0%)
  adding: locale/mk/LC_MESSAGES/navit.mo (deflated 57%)
  adding: locale/uk/ (stored 0%)
  adding: locale/uk/LC_MESSAGES/ (stored 0%)
  adding: locale/uk/LC_MESSAGES/navit.mo (deflated 57%)
  adding: locale/sr/ (stored 0%)
  adding: locale/sr/LC_MESSAGES/ (stored 0%)
  adding: locale/sr/LC_MESSAGES/navit.mo (deflated 58%)
  adding: locale/ckb/ (stored 0%)
  adding: locale/ckb/LC_MESSAGES/ (stored 0%)
  adding: locale/ckb/LC_MESSAGES/navit.mo (deflated 28%)
  adding: locale/zh_CN/ (stored 0%)
  adding: locale/zh_CN/LC_MESSAGES/ (stored 0%)
  adding: locale/zh_CN/LC_MESSAGES/navit.mo (deflated 50%)
  adding: locale/sw/ (stored 0%)
  adding: locale/sw/LC_MESSAGES/ (stored 0%)
  adding: locale/sw/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/pms/ (stored 0%)
  adding: locale/pms/LC_MESSAGES/ (stored 0%)
  adding: locale/pms/LC_MESSAGES/navit.mo (deflated 45%)
  adding: locale/ko/ (stored 0%)
  adding: locale/ko/LC_MESSAGES/ (stored 0%)
  adding: locale/ko/LC_MESSAGES/navit.mo (deflated 51%)
  adding: locale/fr_CH/ (stored 0%)
  adding: locale/fr_CH/LC_MESSAGES/ (stored 0%)
  adding: locale/fr_CH/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/id/ (stored 0%)
  adding: locale/id/LC_MESSAGES/ (stored 0%)
  adding: locale/id/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/fi/ (stored 0%)
  adding: locale/fi/LC_MESSAGES/ (stored 0%)
  adding: locale/fi/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/en_CA/ (stored 0%)
  adding: locale/en_CA/LC_MESSAGES/ (stored 0%)
  adding: locale/en_CA/LC_MESSAGES/navit.mo (deflated 64%)
  adding: locale/nds/ (stored 0%)
  adding: locale/nds/LC_MESSAGES/ (stored 0%)
  adding: locale/nds/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/hr/ (stored 0%)
  adding: locale/hr/LC_MESSAGES/ (stored 0%)
  adding: locale/hr/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/eu/ (stored 0%)
  adding: locale/eu/LC_MESSAGES/ (stored 0%)
  adding: locale/eu/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/pt_BR/ (stored 0%)
  adding: locale/pt_BR/LC_MESSAGES/ (stored 0%)
  adding: locale/pt_BR/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/en_AU/ (stored 0%)
  adding: locale/en_AU/LC_MESSAGES/ (stored 0%)
  adding: locale/en_AU/LC_MESSAGES/navit.mo (deflated 64%)
  adding: locale/sv/ (stored 0%)
  adding: locale/sv/LC_MESSAGES/ (stored 0%)
  adding: locale/sv/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/ru/ (stored 0%)
  adding: locale/ru/LC_MESSAGES/ (stored 0%)
  adding: locale/ru/LC_MESSAGES/navit.mo (deflated 59%)
  adding: locale/en_GB/ (stored 0%)
  adding: locale/en_GB/LC_MESSAGES/ (stored 0%)
  adding: locale/en_GB/LC_MESSAGES/navit.mo (deflated 66%)
  adding: locale/zh_HK/ (stored 0%)
  adding: locale/zh_HK/LC_MESSAGES/ (stored 0%)
  adding: locale/zh_HK/LC_MESSAGES/navit.mo (deflated 50%)
  adding: locale/ca/ (stored 0%)
  adding: locale/ca/LC_MESSAGES/ (stored 0%)
  adding: locale/ca/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/sq/ (stored 0%)
  adding: locale/sq/LC_MESSAGES/ (stored 0%)
  adding: locale/sq/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/ku/ (stored 0%)
  adding: locale/ku/LC_MESSAGES/ (stored 0%)
  adding: locale/ku/LC_MESSAGES/navit.mo (deflated 33%)
  adding: locale/en/ (stored 0%)
  adding: locale/en/LC_MESSAGES/ (stored 0%)
  adding: locale/en/LC_MESSAGES/navit.mo (deflated 61%)
  adding: locale/ar/ (stored 0%)
  adding: locale/ar/LC_MESSAGES/ (stored 0%)
  adding: locale/ar/LC_MESSAGES/navit.mo (deflated 57%)
  adding: locale/hi/ (stored 0%)
  adding: locale/hi/LC_MESSAGES/ (stored 0%)
  adding: locale/hi/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/fil/ (stored 0%)
  adding: locale/fil/LC_MESSAGES/ (stored 0%)
  adding: locale/fil/LC_MESSAGES/navit.mo (deflated 49%)
  adding: locale/bs/ (stored 0%)
  adding: locale/bs/LC_MESSAGES/ (stored 0%)
  adding: locale/bs/LC_MESSAGES/navit.mo (deflated 47%)
  adding: locale/fr/ (stored 0%)
  adding: locale/fr/LC_MESSAGES/ (stored 0%)
  adding: locale/fr/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/ast/ (stored 0%)
  adding: locale/ast/LC_MESSAGES/ (stored 0%)
  adding: locale/ast/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/kk/ (stored 0%)
  adding: locale/kk/LC_MESSAGES/ (stored 0%)
  adding: locale/kk/LC_MESSAGES/navit.mo (deflated 30%)
  adding: locale/zh_TW/ (stored 0%)
  adding: locale/zh_TW/LC_MESSAGES/ (stored 0%)
  adding: locale/zh_TW/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/pl/ (stored 0%)
  adding: locale/pl/LC_MESSAGES/ (stored 0%)
  adding: locale/pl/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/mr/ (stored 0%)
  adding: locale/mr/LC_MESSAGES/ (stored 0%)
  adding: locale/mr/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/he/ (stored 0%)
  adding: locale/he/LC_MESSAGES/ (stored 0%)
  adding: locale/he/LC_MESSAGES/navit.mo (deflated 55%)
  adding: maps/ (stored 0%)
  adding: maps/osm_bbox_11.3,47.9,11.7,48.2.bin (deflated 1%)
  adding: maps/osm_bbox_11.3,47.9,11.7,48.2.xml (deflated 1%)
  adding: icons/ (stored 0%)
  adding: icons/nav_right_1_32.xpm (deflated 85%)
  adding: icons/nav_left_1.xpm (deflated 94%)
  adding: icons/nav_right_2.xpm (deflated 94%)
  adding: icons/restroom.xpm (deflated 56%)
  adding: icons/flag_bk_wh.xpm (deflated 78%)
  adding: icons/desktop_icons/ (stored 0%)
  adding: icons/desktop_icons/navit.desktop (deflated 41%)
  adding: icons/gui_sound_off_32.xpm (deflated 71%)
  adding: icons/highway_exit.xpm (deflated 55%)
  adding: icons/nav_right_2_32.xpm (deflated 85%)
  adding: icons/nav_left_2_32.xpm (deflated 85%)
  adding: icons/flag_bl_wh.xpm (deflated 78%)
  adding: icons/nav_left_2.xpm (deflated 94%)
  adding: icons/gc_reference.xpm (deflated 53%)
  adding: icons/cmake_install.cmake (deflated 81%)
  adding: icons/nav_left_1_32.xpm (deflated 85%)
  adding: icons/trailerpark.xpm (deflated 53%)
  adding: icons/gc_event.xpm (deflated 57%)
  adding: icons/gc_question.xpm (deflated 59%)
  adding: icons/gc_webcam.xpm (deflated 53%)
  adding: icons/dumping_station.xpm (deflated 57%)
  adding: icons/nav_straight_32.xpm (deflated 86%)
  adding: icons/gc_mystery.xpm (deflated 56%)
  adding: icons/flag_bk_tr.xpm (deflated 79%)
  adding: icons/Makefile (deflated 78%)
  adding: icons/bus_halt.xpm (deflated 58%)
  adding: icons/nav_straight.xpm (deflated 95%)
  adding: icons/gc_tradi.xpm (deflated 56%)
  adding: icons/nav_right_1.xpm (deflated 94%)
  adding: icons/gc_multi.xpm (deflated 57%)
  adding: icons/gui_sound_32.xpm (deflated 69%)
  adding: icons/gc_stages.xpm (deflated 55%)
  adding: icons/flag_wh_bk.xpm (deflated 78%)
  adding: navit.xml (deflated 89%)
  adding: navit.exe (deflated 63%)

We will need to add the svg/png icons at some point, but this is a separate issue.","That's true but it's also not the best to provide a really old map. So I would just like to provide no map or a fake map with in the Form of ""Navit is working now get your real maps. See xyz for help. Happy driving"" so the streets Form a text",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,412,2018-03-11T22:00:20Z,2018-03-28T17:29:37Z,2018-04-20T11:32:22Z,MERGED,True,1,0,1,https://github.com/pgrandin,Fix:wince:Remove useless files from the output,2,[],https://github.com/navit-gps/navit/pull/412,https://github.com/pgrandin,5,https://github.com/navit-gps/navit/pull/412#issuecomment-372156721,"Removed useless .cmake files from the generated artefacts
Files in the .zip now :
  adding: locale/ (stored 0%)
  adding: locale/eo/ (stored 0%)
  adding: locale/eo/LC_MESSAGES/ (stored 0%)
  adding: locale/eo/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/bg/ (stored 0%)
  adding: locale/bg/LC_MESSAGES/ (stored 0%)
  adding: locale/bg/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/nb/ (stored 0%)
  adding: locale/nb/LC_MESSAGES/ (stored 0%)
  adding: locale/nb/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/sk/ (stored 0%)
  adding: locale/sk/LC_MESSAGES/ (stored 0%)
  adding: locale/sk/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/sl/ (stored 0%)
  adding: locale/sl/LC_MESSAGES/ (stored 0%)
  adding: locale/sl/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/kn/ (stored 0%)
  adding: locale/kn/LC_MESSAGES/ (stored 0%)
  adding: locale/kn/LC_MESSAGES/navit.mo (deflated 27%)
  adding: locale/el/ (stored 0%)
  adding: locale/el/LC_MESSAGES/ (stored 0%)
  adding: locale/el/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/ta/ (stored 0%)
  adding: locale/ta/LC_MESSAGES/ (stored 0%)
  adding: locale/ta/LC_MESSAGES/navit.mo (deflated 58%)
  adding: locale/be/ (stored 0%)
  adding: locale/be/LC_MESSAGES/ (stored 0%)
  adding: locale/be/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/lb/ (stored 0%)
  adding: locale/lb/LC_MESSAGES/ (stored 0%)
  adding: locale/lb/LC_MESSAGES/navit.mo (deflated 52%)
  adding: locale/ja/ (stored 0%)
  adding: locale/ja/LC_MESSAGES/ (stored 0%)
  adding: locale/ja/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/nl/ (stored 0%)
  adding: locale/nl/LC_MESSAGES/ (stored 0%)
  adding: locale/nl/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/cs/ (stored 0%)
  adding: locale/cs/LC_MESSAGES/ (stored 0%)
  adding: locale/cs/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/ml/ (stored 0%)
  adding: locale/ml/LC_MESSAGES/ (stored 0%)
  adding: locale/ml/LC_MESSAGES/navit.mo (deflated 66%)
  adding: locale/lv/ (stored 0%)
  adding: locale/lv/LC_MESSAGES/ (stored 0%)
  adding: locale/lv/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/th/ (stored 0%)
  adding: locale/th/LC_MESSAGES/ (stored 0%)
  adding: locale/th/LC_MESSAGES/navit.mo (deflated 60%)
  adding: locale/nn/ (stored 0%)
  adding: locale/nn/LC_MESSAGES/ (stored 0%)
  adding: locale/nn/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/fy/ (stored 0%)
  adding: locale/fy/LC_MESSAGES/ (stored 0%)
  adding: locale/fy/LC_MESSAGES/navit.mo (deflated 33%)
  adding: locale/da/ (stored 0%)
  adding: locale/da/LC_MESSAGES/ (stored 0%)
  adding: locale/da/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/fa/ (stored 0%)
  adding: locale/fa/LC_MESSAGES/ (stored 0%)
  adding: locale/fa/LC_MESSAGES/navit.mo (deflated 50%)
  adding: locale/cy/ (stored 0%)
  adding: locale/cy/LC_MESSAGES/ (stored 0%)
  adding: locale/cy/LC_MESSAGES/navit.mo (deflated 40%)
  adding: locale/es/ (stored 0%)
  adding: locale/es/LC_MESSAGES/ (stored 0%)
  adding: locale/es/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/sc/ (stored 0%)
  adding: locale/sc/LC_MESSAGES/ (stored 0%)
  adding: locale/sc/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/et/ (stored 0%)
  adding: locale/et/LC_MESSAGES/ (stored 0%)
  adding: locale/et/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/ur/ (stored 0%)
  adding: locale/ur/LC_MESSAGES/ (stored 0%)
  adding: locale/ur/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/vi/ (stored 0%)
  adding: locale/vi/LC_MESSAGES/ (stored 0%)
  adding: locale/vi/LC_MESSAGES/navit.mo (deflated 57%)
  adding: locale/ro/ (stored 0%)
  adding: locale/ro/LC_MESSAGES/ (stored 0%)
  adding: locale/ro/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/pt/ (stored 0%)
  adding: locale/pt/LC_MESSAGES/ (stored 0%)
  adding: locale/pt/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/lt/ (stored 0%)
  adding: locale/lt/LC_MESSAGES/ (stored 0%)
  adding: locale/lt/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/fo/ (stored 0%)
  adding: locale/fo/LC_MESSAGES/ (stored 0%)
  adding: locale/fo/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/jv/ (stored 0%)
  adding: locale/jv/LC_MESSAGES/ (stored 0%)
  adding: locale/jv/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/de/ (stored 0%)
  adding: locale/de/LC_MESSAGES/ (stored 0%)
  adding: locale/de/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/hu/ (stored 0%)
  adding: locale/hu/LC_MESSAGES/ (stored 0%)
  adding: locale/hu/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/si/ (stored 0%)
  adding: locale/si/LC_MESSAGES/ (stored 0%)
  adding: locale/si/LC_MESSAGES/navit.mo (deflated 62%)
  adding: locale/gl/ (stored 0%)
  adding: locale/gl/LC_MESSAGES/ (stored 0%)
  adding: locale/gl/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/mn/ (stored 0%)
  adding: locale/mn/LC_MESSAGES/ (stored 0%)
  adding: locale/mn/LC_MESSAGES/navit.mo (deflated 36%)
  adding: locale/de_CH/ (stored 0%)
  adding: locale/de_CH/LC_MESSAGES/ (stored 0%)
  adding: locale/de_CH/LC_MESSAGES/navit.mo (deflated 29%)
  adding: locale/af/ (stored 0%)
  adding: locale/af/LC_MESSAGES/ (stored 0%)
  adding: locale/af/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/tr/ (stored 0%)
  adding: locale/tr/LC_MESSAGES/ (stored 0%)
  adding: locale/tr/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/te/ (stored 0%)
  adding: locale/te/LC_MESSAGES/ (stored 0%)
  adding: locale/te/LC_MESSAGES/navit.mo (deflated 57%)
  adding: locale/it/ (stored 0%)
  adding: locale/it/LC_MESSAGES/ (stored 0%)
  adding: locale/it/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/mk/ (stored 0%)
  adding: locale/mk/LC_MESSAGES/ (stored 0%)
  adding: locale/mk/LC_MESSAGES/navit.mo (deflated 57%)
  adding: locale/uk/ (stored 0%)
  adding: locale/uk/LC_MESSAGES/ (stored 0%)
  adding: locale/uk/LC_MESSAGES/navit.mo (deflated 57%)
  adding: locale/sr/ (stored 0%)
  adding: locale/sr/LC_MESSAGES/ (stored 0%)
  adding: locale/sr/LC_MESSAGES/navit.mo (deflated 58%)
  adding: locale/ckb/ (stored 0%)
  adding: locale/ckb/LC_MESSAGES/ (stored 0%)
  adding: locale/ckb/LC_MESSAGES/navit.mo (deflated 28%)
  adding: locale/zh_CN/ (stored 0%)
  adding: locale/zh_CN/LC_MESSAGES/ (stored 0%)
  adding: locale/zh_CN/LC_MESSAGES/navit.mo (deflated 50%)
  adding: locale/sw/ (stored 0%)
  adding: locale/sw/LC_MESSAGES/ (stored 0%)
  adding: locale/sw/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/pms/ (stored 0%)
  adding: locale/pms/LC_MESSAGES/ (stored 0%)
  adding: locale/pms/LC_MESSAGES/navit.mo (deflated 45%)
  adding: locale/ko/ (stored 0%)
  adding: locale/ko/LC_MESSAGES/ (stored 0%)
  adding: locale/ko/LC_MESSAGES/navit.mo (deflated 51%)
  adding: locale/fr_CH/ (stored 0%)
  adding: locale/fr_CH/LC_MESSAGES/ (stored 0%)
  adding: locale/fr_CH/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/id/ (stored 0%)
  adding: locale/id/LC_MESSAGES/ (stored 0%)
  adding: locale/id/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/fi/ (stored 0%)
  adding: locale/fi/LC_MESSAGES/ (stored 0%)
  adding: locale/fi/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/en_CA/ (stored 0%)
  adding: locale/en_CA/LC_MESSAGES/ (stored 0%)
  adding: locale/en_CA/LC_MESSAGES/navit.mo (deflated 64%)
  adding: locale/nds/ (stored 0%)
  adding: locale/nds/LC_MESSAGES/ (stored 0%)
  adding: locale/nds/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/hr/ (stored 0%)
  adding: locale/hr/LC_MESSAGES/ (stored 0%)
  adding: locale/hr/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/eu/ (stored 0%)
  adding: locale/eu/LC_MESSAGES/ (stored 0%)
  adding: locale/eu/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/pt_BR/ (stored 0%)
  adding: locale/pt_BR/LC_MESSAGES/ (stored 0%)
  adding: locale/pt_BR/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/en_AU/ (stored 0%)
  adding: locale/en_AU/LC_MESSAGES/ (stored 0%)
  adding: locale/en_AU/LC_MESSAGES/navit.mo (deflated 64%)
  adding: locale/sv/ (stored 0%)
  adding: locale/sv/LC_MESSAGES/ (stored 0%)
  adding: locale/sv/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/ru/ (stored 0%)
  adding: locale/ru/LC_MESSAGES/ (stored 0%)
  adding: locale/ru/LC_MESSAGES/navit.mo (deflated 59%)
  adding: locale/en_GB/ (stored 0%)
  adding: locale/en_GB/LC_MESSAGES/ (stored 0%)
  adding: locale/en_GB/LC_MESSAGES/navit.mo (deflated 66%)
  adding: locale/zh_HK/ (stored 0%)
  adding: locale/zh_HK/LC_MESSAGES/ (stored 0%)
  adding: locale/zh_HK/LC_MESSAGES/navit.mo (deflated 50%)
  adding: locale/ca/ (stored 0%)
  adding: locale/ca/LC_MESSAGES/ (stored 0%)
  adding: locale/ca/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/sq/ (stored 0%)
  adding: locale/sq/LC_MESSAGES/ (stored 0%)
  adding: locale/sq/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/ku/ (stored 0%)
  adding: locale/ku/LC_MESSAGES/ (stored 0%)
  adding: locale/ku/LC_MESSAGES/navit.mo (deflated 33%)
  adding: locale/en/ (stored 0%)
  adding: locale/en/LC_MESSAGES/ (stored 0%)
  adding: locale/en/LC_MESSAGES/navit.mo (deflated 61%)
  adding: locale/ar/ (stored 0%)
  adding: locale/ar/LC_MESSAGES/ (stored 0%)
  adding: locale/ar/LC_MESSAGES/navit.mo (deflated 57%)
  adding: locale/hi/ (stored 0%)
  adding: locale/hi/LC_MESSAGES/ (stored 0%)
  adding: locale/hi/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/fil/ (stored 0%)
  adding: locale/fil/LC_MESSAGES/ (stored 0%)
  adding: locale/fil/LC_MESSAGES/navit.mo (deflated 49%)
  adding: locale/bs/ (stored 0%)
  adding: locale/bs/LC_MESSAGES/ (stored 0%)
  adding: locale/bs/LC_MESSAGES/navit.mo (deflated 47%)
  adding: locale/fr/ (stored 0%)
  adding: locale/fr/LC_MESSAGES/ (stored 0%)
  adding: locale/fr/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/ast/ (stored 0%)
  adding: locale/ast/LC_MESSAGES/ (stored 0%)
  adding: locale/ast/LC_MESSAGES/navit.mo (deflated 55%)
  adding: locale/kk/ (stored 0%)
  adding: locale/kk/LC_MESSAGES/ (stored 0%)
  adding: locale/kk/LC_MESSAGES/navit.mo (deflated 30%)
  adding: locale/zh_TW/ (stored 0%)
  adding: locale/zh_TW/LC_MESSAGES/ (stored 0%)
  adding: locale/zh_TW/LC_MESSAGES/navit.mo (deflated 53%)
  adding: locale/pl/ (stored 0%)
  adding: locale/pl/LC_MESSAGES/ (stored 0%)
  adding: locale/pl/LC_MESSAGES/navit.mo (deflated 54%)
  adding: locale/mr/ (stored 0%)
  adding: locale/mr/LC_MESSAGES/ (stored 0%)
  adding: locale/mr/LC_MESSAGES/navit.mo (deflated 56%)
  adding: locale/he/ (stored 0%)
  adding: locale/he/LC_MESSAGES/ (stored 0%)
  adding: locale/he/LC_MESSAGES/navit.mo (deflated 55%)
  adding: maps/ (stored 0%)
  adding: maps/osm_bbox_11.3,47.9,11.7,48.2.bin (deflated 1%)
  adding: maps/osm_bbox_11.3,47.9,11.7,48.2.xml (deflated 1%)
  adding: icons/ (stored 0%)
  adding: icons/nav_right_1_32.xpm (deflated 85%)
  adding: icons/nav_left_1.xpm (deflated 94%)
  adding: icons/nav_right_2.xpm (deflated 94%)
  adding: icons/restroom.xpm (deflated 56%)
  adding: icons/flag_bk_wh.xpm (deflated 78%)
  adding: icons/desktop_icons/ (stored 0%)
  adding: icons/desktop_icons/navit.desktop (deflated 41%)
  adding: icons/gui_sound_off_32.xpm (deflated 71%)
  adding: icons/highway_exit.xpm (deflated 55%)
  adding: icons/nav_right_2_32.xpm (deflated 85%)
  adding: icons/nav_left_2_32.xpm (deflated 85%)
  adding: icons/flag_bl_wh.xpm (deflated 78%)
  adding: icons/nav_left_2.xpm (deflated 94%)
  adding: icons/gc_reference.xpm (deflated 53%)
  adding: icons/cmake_install.cmake (deflated 81%)
  adding: icons/nav_left_1_32.xpm (deflated 85%)
  adding: icons/trailerpark.xpm (deflated 53%)
  adding: icons/gc_event.xpm (deflated 57%)
  adding: icons/gc_question.xpm (deflated 59%)
  adding: icons/gc_webcam.xpm (deflated 53%)
  adding: icons/dumping_station.xpm (deflated 57%)
  adding: icons/nav_straight_32.xpm (deflated 86%)
  adding: icons/gc_mystery.xpm (deflated 56%)
  adding: icons/flag_bk_tr.xpm (deflated 79%)
  adding: icons/Makefile (deflated 78%)
  adding: icons/bus_halt.xpm (deflated 58%)
  adding: icons/nav_straight.xpm (deflated 95%)
  adding: icons/gc_tradi.xpm (deflated 56%)
  adding: icons/nav_right_1.xpm (deflated 94%)
  adding: icons/gc_multi.xpm (deflated 57%)
  adding: icons/gui_sound_32.xpm (deflated 69%)
  adding: icons/gc_stages.xpm (deflated 55%)
  adding: icons/flag_wh_bk.xpm (deflated 78%)
  adding: navit.xml (deflated 89%)
  adding: navit.exe (deflated 63%)

We will need to add the svg/png icons at some point, but this is a separate issue.","That map is old indeed, but it's only here for demo purpose, as it only covers a very small area.
It is technically easy to provide a more up-to-date map if we want to : we just need to export the demo map say, weekly, and maybe push it to the download center.
Thoughts?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,413,2018-03-12T14:41:00Z,2018-03-13T14:51:38Z,2018-03-14T11:53:49Z,MERGED,True,169,27,4,https://github.com/lains,change:osd/core compass appearance update,5,[],https://github.com/navit-gps/navit/pull/413,https://github.com/lains,1,https://github.com/navit-gps/navit/pull/413,"Update compass to look like a compass with a red handle showing north, a bit like google maps navigation.
Slightly changing the arrow pointing towards destination so that is looks like the arrow used in bows, and updating the associated green color to be less ""flashy"" on screen.","Update compass to look like a compass with a red handle showing north, a bit like google maps navigation.
Slightly changing the arrow pointing towards destination so that is looks like the arrow used in bows, and updating the associated green color to be less ""flashy"" on screen.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,413,2018-03-12T14:41:00Z,2018-03-13T14:51:38Z,2018-03-14T11:53:49Z,MERGED,True,169,27,4,https://github.com/lains,change:osd/core compass appearance update,5,[],https://github.com/navit-gps/navit/pull/413,https://github.com/zintor,2,https://github.com/navit-gps/navit/pull/413#issuecomment-372339785,"Update compass to look like a compass with a red handle showing north, a bit like google maps navigation.
Slightly changing the arrow pointing towards destination so that is looks like the arrow used in bows, and updating the associated green color to be less ""flashy"" on screen.","Hi lains!
Thx for the update, also for the update of the doxygen comments.
Could you please upload a screenshot of the compass?
Thx.
Kind regards,
zintor",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,413,2018-03-12T14:41:00Z,2018-03-13T14:51:38Z,2018-03-14T11:53:49Z,MERGED,True,169,27,4,https://github.com/lains,change:osd/core compass appearance update,5,[],https://github.com/navit-gps/navit/pull/413,https://github.com/zintor,3,https://github.com/navit-gps/navit/pull/413#issuecomment-372341784,"Update compass to look like a compass with a red handle showing north, a bit like google maps navigation.
Slightly changing the arrow pointing towards destination so that is looks like the arrow used in bows, and updating the associated green color to be less ""flashy"" on screen.","Just a thought:
Make it sense to make the color of the two arrows customizable in navit.xml?
https://wiki.navit-project.org/index.php/OSD#compass",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,413,2018-03-12T14:41:00Z,2018-03-13T14:51:38Z,2018-03-14T11:53:49Z,MERGED,True,169,27,4,https://github.com/lains,change:osd/core compass appearance update,5,[],https://github.com/navit-gps/navit/pull/413,https://github.com/pgrandin,4,https://github.com/navit-gps/navit/pull/413#issuecomment-372413712,"Update compass to look like a compass with a red handle showing north, a bit like google maps navigation.
Slightly changing the arrow pointing towards destination so that is looks like the arrow used in bows, and updating the associated green color to be less ""flashy"" on screen.","Nice, and bonus point for updating the documentation of other functions.
Can you please attach a screenshot of the result?
(edit : just saw that @zintor already asked for it)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,413,2018-03-12T14:41:00Z,2018-03-13T14:51:38Z,2018-03-14T11:53:49Z,MERGED,True,169,27,4,https://github.com/lains,change:osd/core compass appearance update,5,[],https://github.com/navit-gps/navit/pull/413,https://github.com/lains,5,https://github.com/navit-gps/navit/pull/413#issuecomment-372510321,"Update compass to look like a compass with a red handle showing north, a bit like google maps navigation.
Slightly changing the arrow pointing towards destination so that is looks like the arrow used in bows, and updating the associated green color to be less ""flashy"" on screen.","This is how the compass looks like on my Android device.

The color of the south half of the compass (white on the attached screenshot) is actually coming from opc->osd_item.graphic_fg.
The color of the north half is red because it is the ""standard"" color used on compasses, but this could also be customized. I deliberately made north and south different not only by changing color, but also by drawing the north indicator as a plain polygon in comparison while south is displayed only as a contour.
For the direction of the target, I think that it is indeed a good idea to allow customization of the color so the user can choose something else than green.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,413,2018-03-12T14:41:00Z,2018-03-13T14:51:38Z,2018-03-14T11:53:49Z,MERGED,True,169,27,4,https://github.com/lains,change:osd/core compass appearance update,5,[],https://github.com/navit-gps/navit/pull/413,https://github.com/lains,6,https://github.com/navit-gps/navit/pull/413#issuecomment-372683263,"Update compass to look like a compass with a red handle showing north, a bit like google maps navigation.
Slightly changing the arrow pointing towards destination so that is looks like the arrow used in bows, and updating the associated green color to be less ""flashy"" on screen.","Added some color customization for compass.
Example below with <osd type=""compass"" (...) destination_dir_color=""#ff00ff"" north_color=""#00a0a0""/> tag in navit.xml:",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,413,2018-03-12T14:41:00Z,2018-03-13T14:51:38Z,2018-03-14T11:53:49Z,MERGED,True,169,27,4,https://github.com/lains,change:osd/core compass appearance update,5,[],https://github.com/navit-gps/navit/pull/413,https://github.com/jkoan,7,https://github.com/navit-gps/navit/pull/413#issuecomment-372692454,"Update compass to look like a compass with a red handle showing north, a bit like google maps navigation.
Slightly changing the arrow pointing towards destination so that is looks like the arrow used in bows, and updating the associated green color to be less ""flashy"" on screen.",Tanks for your contibution 😃 we would be happy to see more PR´s from you,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,413,2018-03-12T14:41:00Z,2018-03-13T14:51:38Z,2018-03-14T11:53:49Z,MERGED,True,169,27,4,https://github.com/lains,change:osd/core compass appearance update,5,[],https://github.com/navit-gps/navit/pull/413,https://github.com/pgrandin,8,https://github.com/navit-gps/navit/pull/413#issuecomment-372729486,"Update compass to look like a compass with a red handle showing north, a bit like google maps navigation.
Slightly changing the arrow pointing towards destination so that is looks like the arrow used in bows, and updating the associated green color to be less ""flashy"" on screen.",Really nice work here. Thanks @lains !,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,414,2018-03-12T22:37:41Z,2018-03-31T15:38:14Z,2018-03-31T21:38:13Z,CLOSED,False,7,4,3,https://github.com/tsadowski,Necessary changes to build Navit for Android SDK 23,1,[],https://github.com/navit-gps/navit/pull/414,https://github.com/tsadowski,1,https://github.com/navit-gps/navit/pull/414,I persevered to build Navit for Android from source. Here are the changes I had to make.,I persevered to build Navit for Android from source. Here are the changes I had to make.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,414,2018-03-12T22:37:41Z,2018-03-31T15:38:14Z,2018-03-31T21:38:13Z,CLOSED,False,7,4,3,https://github.com/tsadowski,Necessary changes to build Navit for Android SDK 23,1,[],https://github.com/navit-gps/navit/pull/414,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/414#issuecomment-372554255,I persevered to build Navit for Android from source. Here are the changes I had to make.,"Hello @tsadowski
First of all thanks for contributing to the Navit project.
Could you please explain why you want to increase the sdk version? Navit trys to use the lowest version as possible in order to support even old devices. So the min api version stays low while the target api version may be increased.
For the rest of the changes I need to take a closer look.
Edit: even though the CI tests are not passed so it's probably not perfect",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,414,2018-03-12T22:37:41Z,2018-03-31T15:38:14Z,2018-03-31T21:38:13Z,CLOSED,False,7,4,3,https://github.com/tsadowski,Necessary changes to build Navit for Android SDK 23,1,[],https://github.com/navit-gps/navit/pull/414,https://github.com/tsadowski,3,https://github.com/navit-gps/navit/pull/414#issuecomment-372831541,I persevered to build Navit for Android from source. Here are the changes I had to make.,"Hello @jkoan,
I don't want to increase the minSdkVersion unnecesessary. But the minSdkVersion is only an installer hint and  don't know what happens when an app using a more recent API function on an old Android. I had to use 23 as target API because Navit uses Activity.onRequestPermissionsResult new in 23.
My goal is to improve the selection of the map storage location. I can't browse the file system on my phone because of permission restrictions Google introduced somewhere between 5.0 and 7.1. There is an explanation how it should be done:
https://developer.android.com/training/data-storage/files.html
My phone has 2 external locations, emulated and the SD card. The best method to get both locations is getExternalFilesDirs added in API level 19. I will try to implement what I want and try to maintain backwards compatibility.
Best Regards,
Torsten",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,414,2018-03-12T22:37:41Z,2018-03-31T15:38:14Z,2018-03-31T21:38:13Z,CLOSED,False,7,4,3,https://github.com/tsadowski,Necessary changes to build Navit for Android SDK 23,1,[],https://github.com/navit-gps/navit/pull/414,https://github.com/tsadowski,4,https://github.com/navit-gps/navit/pull/414#issuecomment-372841398,I persevered to build Navit for Android from source. Here are the changes I had to make.,"I had a look into the circleci output. I will try the circleci build script (contents) instead of the information from the wiki and rework my changes.
Cheers,
Torsten",True,{'THUMBS_UP': ['https://github.com/jkoan']}
navit-gps/navit,https://github.com/navit-gps/navit,414,2018-03-12T22:37:41Z,2018-03-31T15:38:14Z,2018-03-31T21:38:13Z,CLOSED,False,7,4,3,https://github.com/tsadowski,Necessary changes to build Navit for Android SDK 23,1,[],https://github.com/navit-gps/navit/pull/414,https://github.com/sleske,5,https://github.com/navit-gps/navit/pull/414#issuecomment-377363108,I persevered to build Navit for Android from source. Here are the changes I had to make.,"I don't want to increase the minSdkVersion unnecesessary. But the minSdkVersion is only an installer hint

No, it is not a hint. Please read the docs:

android:minSdkVersion
The Android system will prevent the user from installing the application if the system's API Level is lower than the value specified in this attribute.

 in the Android docs
Raising the minSdkVersion is a big decision, and I don't see a compelling reason here.

I don't know what happens when an app using a more recent API function on an old Android.

Then please learn it :-).  A good start is the chapter on Remaining Backward Compatible.
Good luck!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,414,2018-03-12T22:37:41Z,2018-03-31T15:38:14Z,2018-03-31T21:38:13Z,CLOSED,False,7,4,3,https://github.com/tsadowski,Necessary changes to build Navit for Android SDK 23,1,[],https://github.com/navit-gps/navit/pull/414,https://github.com/jkoan,6,https://github.com/navit-gps/navit/pull/414#issuecomment-377701707,I persevered to build Navit for Android from source. Here are the changes I had to make.,"Hi @tsadowski
i want to know which Navit official version you tried. Because external Storage should work in Navit.
But the minAPI Version does not need to be raised. If you got Problems with your storage please leave another Issue about it here :)
But i will close this PR here because we don't want to increase the min version. But contributions are always welcome 👍",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,414,2018-03-12T22:37:41Z,2018-03-31T15:38:14Z,2018-03-31T21:38:13Z,CLOSED,False,7,4,3,https://github.com/tsadowski,Necessary changes to build Navit for Android SDK 23,1,[],https://github.com/navit-gps/navit/pull/414,https://github.com/tsadowski,7,https://github.com/navit-gps/navit/pull/414#issuecomment-377725301,I persevered to build Navit for Android from source. Here are the changes I had to make.,"Hi @ sleske
this is an installer hint, a hint for the installer not to install.
Cheers,
Torsten
android:minSdkVersion

The Android system will prevent the user from installing the application if the system's API Level is lower than the value specified in this attribute.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,415,2018-03-13T21:26:19Z,2018-03-13T21:34:23Z,2020-08-18T11:56:10Z,MERGED,True,424,461,1,https://github.com/pgrandin,Update:i18n:Updated Arabic translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/415,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/415,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,416,2018-03-17T13:33:33Z,2018-03-28T17:06:27Z,2018-03-31T14:24:30Z,MERGED,True,3,0,1,https://github.com/lains,fix:XML: Adding missing sea/ocean display in T@H layout theme,2,[],https://github.com/navit-gps/navit/pull/416,https://github.com/lains,1,https://github.com/navit-gps/navit/pull/416,"On the T@H layout theme, oceans and seas are not displayed:

This patch fixes this:","On the T@H layout theme, oceans and seas are not displayed:

This patch fixes this:",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,416,2018-03-17T13:33:33Z,2018-03-28T17:06:27Z,2018-03-31T14:24:30Z,MERGED,True,3,0,1,https://github.com/lains,fix:XML: Adding missing sea/ocean display in T@H layout theme,2,[],https://github.com/navit-gps/navit/pull/416,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/416#issuecomment-374301021,"On the T@H layout theme, oceans and seas are not displayed:

This patch fixes this:","The WinCE build is currently broken, i will merge this once the build is working again. Thy for your contribution :)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,417,2018-03-28T19:00:36Z,2018-03-28T21:25:03Z,2018-03-28T21:25:03Z,MERGED,True,10,0,2,https://github.com/jkoan,fix:ci:Fix Wince download center upload,1,[],https://github.com/navit-gps/navit/pull/417,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/417,"Because the image is to old we need to install git-core after the code checkout.
With this the WinCE build is fixed and able to push to the download center","Because the image is to old we need to install git-core after the code checkout.
With this the WinCE build is fixed and able to push to the download center",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,418,2018-03-30T21:25:08Z,2018-03-30T21:45:33Z,2018-03-30T21:56:43Z,MERGED,True,1,1,1,https://github.com/aerostitch,doc: fix misspell,1,[],https://github.com/navit-gps/navit/pull/418,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/418,"Fixing a minor typo in the man page for navit:
information is a non-count noun, so the convention is that information is both singular and plural","Fixing a minor typo in the man page for navit:
information is a non-count noun, so the convention is that information is both singular and plural",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,418,2018-03-30T21:25:08Z,2018-03-30T21:45:33Z,2018-03-30T21:56:43Z,MERGED,True,1,1,1,https://github.com/aerostitch,doc: fix misspell,1,[],https://github.com/navit-gps/navit/pull/418,https://github.com/aerostitch,2,https://github.com/navit-gps/navit/pull/418#issuecomment-377632463,"Fixing a minor typo in the man page for navit:
information is a non-count noun, so the convention is that information is both singular and plural",thx! :),True,{}
navit-gps/navit,https://github.com/navit-gps/navit,419,2018-03-30T22:35:35Z,2018-03-31T06:26:57Z,2018-04-02T21:32:03Z,MERGED,True,8,3,1,https://github.com/aerostitch,maptool: prevent issues when realloc fails,1,[],https://github.com/navit-gps/navit/pull/419,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/419,"Based on cppcheck's warning:
[navit/maptool/tile.c:516]: (error) Common realloc mistake: 'th' nulled but not freed upon failure","Based on cppcheck's warning:
[navit/maptool/tile.c:516]: (error) Common realloc mistake: 'th' nulled but not freed upon failure",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,419,2018-03-30T22:35:35Z,2018-03-31T06:26:57Z,2018-04-02T21:32:03Z,MERGED,True,8,3,1,https://github.com/aerostitch,maptool: prevent issues when realloc fails,1,[],https://github.com/navit-gps/navit/pull/419,https://github.com/mdankov,2,https://github.com/navit-gps/navit/pull/419#issuecomment-377723609,"Based on cppcheck's warning:
[navit/maptool/tile.c:516]: (error) Common realloc mistake: 'th' nulled but not freed upon failure","I do not think this is a very good way to go:


We do not want a simple message in the map build log in the case we're going to produce a broken map. Maptool would better completely fail if it's unable to produce a proper map file.


We're intensively use glib memory allocation functions in maptool. These functions abort the program in the case they are unable to allocate some memory. I'd suggest to re-factor maptool code to switch to g_malloc/g_realloc/g_new/g_free functions everywhere.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,419,2018-03-30T22:35:35Z,2018-03-31T06:26:57Z,2018-04-02T21:32:03Z,MERGED,True,8,3,1,https://github.com/aerostitch,maptool: prevent issues when realloc fails,1,[],https://github.com/navit-gps/navit/pull/419,https://github.com/aerostitch,3,https://github.com/navit-gps/navit/pull/419#issuecomment-378053288,"Based on cppcheck's warning:
[navit/maptool/tile.c:516]: (error) Common realloc mistake: 'th' nulled but not freed upon failure",Good point. I'll work on that.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,420,2018-03-30T22:49:06Z,2018-03-31T06:33:21Z,2018-03-31T12:59:49Z,MERGED,True,4,5,1,https://github.com/aerostitch,maptool: prevent memory leak when fread fails while reading aux files,1,[],https://github.com/navit-gps/navit/pull/420,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/420,"When writing aux files, if the fread fails, we don't free the buffer, which could cause some memory leaks.
This PR also contains  a cosmetic change on spacing to be coherent with the rest of the code for that block of code.","When writing aux files, if the fread fails, we don't free the buffer, which could cause some memory leaks.
This PR also contains  a cosmetic change on spacing to be coherent with the rest of the code for that block of code.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,421,2018-03-30T23:43:05Z,2018-03-31T13:06:27Z,2018-03-31T15:18:48Z,MERGED,True,22,22,12,https://github.com/aerostitch,Fix various mispells,7,[],https://github.com/navit-gps/navit/pull/421,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/421,"See the different commit for each typo.
Pretty basic change.","See the different commit for each typo.
Pretty basic change.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,421,2018-03-30T23:43:05Z,2018-03-31T13:06:27Z,2018-03-31T15:18:48Z,MERGED,True,22,22,12,https://github.com/aerostitch,Fix various mispells,7,[],https://github.com/navit-gps/navit/pull/421,https://github.com/aerostitch,2,https://github.com/navit-gps/navit/pull/421#issuecomment-377690572,"See the different commit for each typo.
Pretty basic change.",Hm. I actually did that @jkoan,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,421,2018-03-30T23:43:05Z,2018-03-31T13:06:27Z,2018-03-31T15:18:48Z,MERGED,True,22,22,12,https://github.com/aerostitch,Fix various mispells,7,[],https://github.com/navit-gps/navit/pull/421,https://github.com/jkoan,3,https://github.com/navit-gps/navit/pull/421#issuecomment-377691782,"See the different commit for each typo.
Pretty basic change.","Okay, i didn't seen that :X your right",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,421,2018-03-30T23:43:05Z,2018-03-31T13:06:27Z,2018-03-31T15:18:48Z,MERGED,True,22,22,12,https://github.com/aerostitch,Fix various mispells,7,[],https://github.com/navit-gps/navit/pull/421,https://github.com/lains,4,https://github.com/navit-gps/navit/pull/421#issuecomment-377700242,"See the different commit for each typo.
Pretty basic change.","When I ran the script ""itemgra.pl"", I also saw that there is a ""poi_bussines_service"" item in garmintypes.txt
Don't know if fixing this typo may break anything though...",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,422,2018-03-31T13:10:33Z,2018-03-31T13:13:50Z,2018-03-31T13:14:11Z,MERGED,True,0,1062,2,https://github.com/aerostitch,navit/fib: cleanup unused configure* files,1,[],https://github.com/navit-gps/navit/pull/422,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/422,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,422,2018-03-31T13:10:33Z,2018-03-31T13:13:50Z,2018-03-31T13:14:11Z,MERGED,True,0,1062,2,https://github.com/aerostitch,navit/fib: cleanup unused configure* files,1,[],https://github.com/navit-gps/navit/pull/422,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/422#issuecomment-377692182,,As discussed in irc right now,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,423,2018-03-31T15:14:41Z,2018-03-31T15:31:59Z,2018-04-28T09:16:36Z,MERGED,True,33,4,2,https://github.com/lains,"Update:icon:status_position_wait_bk adding question mark, making sharper pointer",2,[],https://github.com/navit-gps/navit/pull/423,https://github.com/lains,1,https://github.com/navit-gps/navit/pull/423,"It seemed to me more significant to have a question mark inside the icon to mean that the position is still unknown.
I have also made the pin sharper, to get closer to the cursor used in common online map websites.
The original icon:

The new icon:

I donate these changes to the navit project, in case it can be useful for merging into trunk.","It seemed to me more significant to have a question mark inside the icon to mean that the position is still unknown.
I have also made the pin sharper, to get closer to the cursor used in common online map websites.
The original icon:

The new icon:

I donate these changes to the navit project, in case it can be useful for merging into trunk.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,423,2018-03-31T15:14:41Z,2018-03-31T15:31:59Z,2018-04-28T09:16:36Z,MERGED,True,33,4,2,https://github.com/lains,"Update:icon:status_position_wait_bk adding question mark, making sharper pointer",2,[],https://github.com/navit-gps/navit/pull/423,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/423#issuecomment-377700303,"It seemed to me more significant to have a question mark inside the icon to mean that the position is still unknown.
I have also made the pin sharper, to get closer to the cursor used in common online map websites.
The original icon:

The new icon:

I donate these changes to the navit project, in case it can be useful for merging into trunk.",Thx for your contribution :) i will merge it after all tests are passed,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,429,2018-04-03T01:22:07Z,2018-04-18T18:45:55Z,2018-04-20T23:20:34Z,MERGED,True,70,101,10,https://github.com/aerostitch,maptool: migrate malloc/free/realloc to g_malloc/g_free/g_realloc,4,['enhancement'],https://github.com/navit-gps/navit/pull/429,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/429,"Closes: #427.
Migrating the malloc to g_malloc and removing some asserts already done by g_malloc.
The other operations will come later in another PR.","Closes: #427.
Migrating the malloc to g_malloc and removing some asserts already done by g_malloc.
The other operations will come later in another PR.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,429,2018-04-03T01:22:07Z,2018-04-18T18:45:55Z,2018-04-20T23:20:34Z,MERGED,True,70,101,10,https://github.com/aerostitch,maptool: migrate malloc/free/realloc to g_malloc/g_free/g_realloc,4,['enhancement'],https://github.com/navit-gps/navit/pull/429,https://github.com/aerostitch,2,https://github.com/navit-gps/navit/pull/429#issuecomment-378331074,"Closes: #427.
Migrating the malloc to g_malloc and removing some asserts already done by g_malloc.
The other operations will come later in another PR.",@mdankov let me know if you prefer to have to review just 1 function migration at a time or if you want to wait for me to do the migration from free to g_free and realloc to g_realloc. Not sure when I'll get to that though.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,429,2018-04-03T01:22:07Z,2018-04-18T18:45:55Z,2018-04-20T23:20:34Z,MERGED,True,70,101,10,https://github.com/aerostitch,maptool: migrate malloc/free/realloc to g_malloc/g_free/g_realloc,4,['enhancement'],https://github.com/navit-gps/navit/pull/429,https://github.com/mdankov,3,https://github.com/navit-gps/navit/pull/429#issuecomment-378396493,"Closes: #427.
Migrating the malloc to g_malloc and removing some asserts already done by g_malloc.
The other operations will come later in another PR.","Good work, @aerostitch !
The commit itself looks good for me so far.
But before merging, we should make sure there are no execution flows which call libc realloc() or free() on the memory allocated by a g_* function, and vice versa.
In practice, I've never seen a failure after something like free(g_malloc(...)), but it's prohibited in glib documentation to go that way.
Is it ok if I'll review and comment your changes as you suggested (function by function), but we'll finally merge them only after completing the transition for all memory handling functions in maptool?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,429,2018-04-03T01:22:07Z,2018-04-18T18:45:55Z,2018-04-20T23:20:34Z,MERGED,True,70,101,10,https://github.com/aerostitch,maptool: migrate malloc/free/realloc to g_malloc/g_free/g_realloc,4,['enhancement'],https://github.com/navit-gps/navit/pull/429,https://github.com/aerostitch,4,https://github.com/navit-gps/navit/pull/429#issuecomment-378400453,"Closes: #427.
Migrating the malloc to g_malloc and removing some asserts already done by g_malloc.
The other operations will come later in another PR.","Is it ok if I'll review and comment your changes as you suggested (function by function), but we'll finally merge them only after completing the transition for all memory handling functions in maptool?

That does totally make sense. Thanks! :)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,429,2018-04-03T01:22:07Z,2018-04-18T18:45:55Z,2018-04-20T23:20:34Z,MERGED,True,70,101,10,https://github.com/aerostitch,maptool: migrate malloc/free/realloc to g_malloc/g_free/g_realloc,4,['enhancement'],https://github.com/navit-gps/navit/pull/429,https://github.com/aerostitch,5,https://github.com/navit-gps/navit/pull/429#issuecomment-379433194,"Closes: #427.
Migrating the malloc to g_malloc and removing some asserts already done by g_malloc.
The other operations will come later in another PR.","Hi @mdankov,
I believe I finished to refactor the maptool code to use:

g_malloc instead of malloc (and remove unnecessary checks for failed allocation)
g_free instead of free
g_realloc instead of realloc (and remove unnecessary checks for failed allocation)
g_strcmp0 instead of strcmp

Those are the functions mentioned in https://wiki.navit-project.org/index.php/Programming_guidelines
Do you want me to have a look at migrating also to other GLib functions?
Are the changes I've done ok?
Thanks
Joseph",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,429,2018-04-03T01:22:07Z,2018-04-18T18:45:55Z,2018-04-20T23:20:34Z,MERGED,True,70,101,10,https://github.com/aerostitch,maptool: migrate malloc/free/realloc to g_malloc/g_free/g_realloc,4,['enhancement'],https://github.com/navit-gps/navit/pull/429,https://github.com/mdankov,6,https://github.com/navit-gps/navit/pull/429#issuecomment-379443704,"Closes: #427.
Migrating the malloc to g_malloc and removing some asserts already done by g_malloc.
The other operations will come later in another PR.","Hi!
Looks good.
But there's no need to check that value passed to g_free() is not a NULL. [upd] That's, of course, true in case when the only thing we do in ""then"" branch is a g_free call.
Also, I would like to move g_strcmp0 switch to a different PR, so we can finish with memory allocation functions beforehand.
And there's no need to check for NULL in cases like this:
if (admin_level && !g_strcmp0(admin_level, ""2""))
That's because g_strcmp0(NULL, ""2"") would neither crash or return 0.
But beware, if both g_strcmp0 arguments could be NULL, comparison is most probably still needed as it may change the behaviour. That would depend on actual code flow.
Please consider the programming guidelines note about older GLib versions, don't switch every libc function to its GLib counterpart.
Thank you.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,429,2018-04-03T01:22:07Z,2018-04-18T18:45:55Z,2018-04-20T23:20:34Z,MERGED,True,70,101,10,https://github.com/aerostitch,maptool: migrate malloc/free/realloc to g_malloc/g_free/g_realloc,4,['enhancement'],https://github.com/navit-gps/navit/pull/429,https://github.com/aerostitch,7,https://github.com/navit-gps/navit/pull/429#issuecomment-379481863,"Closes: #427.
Migrating the malloc to g_malloc and removing some asserts already done by g_malloc.
The other operations will come later in another PR.","Hi @mdankov thanks for the review.
I moved the strcmp-related changes to #434.
I also changed removed the check for null before g_free.
I only moved the functions that were mentioned in the navit programming guide is that the one you were referring to?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,429,2018-04-03T01:22:07Z,2018-04-18T18:45:55Z,2018-04-20T23:20:34Z,MERGED,True,70,101,10,https://github.com/aerostitch,maptool: migrate malloc/free/realloc to g_malloc/g_free/g_realloc,4,['enhancement'],https://github.com/navit-gps/navit/pull/429,https://github.com/mdankov,8,https://github.com/navit-gps/navit/pull/429#issuecomment-379568621,"Closes: #427.
Migrating the malloc to g_malloc and removing some asserts already done by g_malloc.
The other operations will come later in another PR.","Thank you, now it looks almost complete for me.
But there's another memory allocation function which we still have not touched: strdup(). It would call some malloc() flavour internally, so we have to change it to g_strdup(), so later g_free() would be safe.
I suggest to do the change in this PR.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,429,2018-04-03T01:22:07Z,2018-04-18T18:45:55Z,2018-04-20T23:20:34Z,MERGED,True,70,101,10,https://github.com/aerostitch,maptool: migrate malloc/free/realloc to g_malloc/g_free/g_realloc,4,['enhancement'],https://github.com/navit-gps/navit/pull/429,https://github.com/aerostitch,9,https://github.com/navit-gps/navit/pull/429#issuecomment-379588609,"Closes: #427.
Migrating the malloc to g_malloc and removing some asserts already done by g_malloc.
The other operations will come later in another PR.",Thanks for the review @mdankov . I did the change on the only 2 places that were using straight strdup instead of g_strdup. I also added it to the coding style guide examples as it's a commonly used one.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,429,2018-04-03T01:22:07Z,2018-04-18T18:45:55Z,2018-04-20T23:20:34Z,MERGED,True,70,101,10,https://github.com/aerostitch,maptool: migrate malloc/free/realloc to g_malloc/g_free/g_realloc,4,['enhancement'],https://github.com/navit-gps/navit/pull/429,https://github.com/aerostitch,10,https://github.com/navit-gps/navit/pull/429#issuecomment-382489651,"Closes: #427.
Migrating the malloc to g_malloc and removing some asserts already done by g_malloc.
The other operations will come later in another PR.",Thx!,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,430,2018-04-03T12:12:50Z,2018-04-11T13:13:57Z,2018-04-11T16:23:23Z,MERGED,True,5,5,2,https://github.com/aerostitch,icons: fix typo business not bussines,1,[],https://github.com/navit-gps/navit/pull/430,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/430,Related to: #428,Related to: #428,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,432,2018-04-04T17:34:20Z,2018-04-04T20:27:23Z,2018-04-04T20:27:27Z,MERGED,True,12,7,1,https://github.com/pgrandin,Fix coverity builds,3,[],https://github.com/navit-gps/navit/pull/432,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/432,"fixed source url for the tools
removed running make package via cov-int","fixed source url for the tools
removed running make package via cov-int",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,434,2018-04-07T16:15:43Z,2018-08-21T17:04:27Z,2018-08-21T17:04:27Z,MERGED,True,113,113,10,https://github.com/aerostitch,maptool: use g_strcmp0 instead of strcmp,2,['enhancement'],https://github.com/navit-gps/navit/pull/434,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/434,"TODO:

there's no need to check for NULL in cases like this:
if (admin_level && !g_strcmp0(admin_level, ""2""))
That's because g_strcmp0(NULL, ""2"") would neither crash or return 0.
But beware, if both g_strcmp0 arguments could be NULL, comparison is most probably still needed as it may change the behaviour. That would depend on actual code flow.","TODO:

there's no need to check for NULL in cases like this:
if (admin_level && !g_strcmp0(admin_level, ""2""))
That's because g_strcmp0(NULL, ""2"") would neither crash or return 0.
But beware, if both g_strcmp0 arguments could be NULL, comparison is most probably still needed as it may change the behaviour. That would depend on actual code flow.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,434,2018-04-07T16:15:43Z,2018-08-21T17:04:27Z,2018-08-21T17:04:27Z,MERGED,True,113,113,10,https://github.com/aerostitch,maptool: use g_strcmp0 instead of strcmp,2,['enhancement'],https://github.com/navit-gps/navit/pull/434,https://github.com/aerostitch,2,https://github.com/navit-gps/navit/pull/434#issuecomment-379507670,"TODO:

there's no need to check for NULL in cases like this:
if (admin_level && !g_strcmp0(admin_level, ""2""))
That's because g_strcmp0(NULL, ""2"") would neither crash or return 0.
But beware, if both g_strcmp0 arguments could be NULL, comparison is most probably still needed as it may change the behaviour. That would depend on actual code flow.","Concerning:

But beware, if both g_strcmp0 arguments could be NULL, comparison is most probably still needed as it may change the behaviour. That would depend on actual code flow.

Currently if one of the inputs of strcmp, the result is undetermined and may vary from one execution to the other according to the documentation. With g_strcmp0 ti will return 0 as the 2 arguments are equal in a consistent manner.
The places where that could eventually happen because we are comparing variables only are:

navit/maptool/google/protobuf-c/protobuf-c.c
navit/maptool/itembin.c but there's a verification that the variables are not NULL before
navit/maptool/maptool.c
navit/maptool/tile.c

What would you like to have returned if both arguments of g_strcmp0 are NULL @mdankov  ?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,434,2018-04-07T16:15:43Z,2018-08-21T17:04:27Z,2018-08-21T17:04:27Z,MERGED,True,113,113,10,https://github.com/aerostitch,maptool: use g_strcmp0 instead of strcmp,2,['enhancement'],https://github.com/navit-gps/navit/pull/434,https://github.com/aerostitch,3,https://github.com/navit-gps/navit/pull/434#issuecomment-383970744,"TODO:

there's no need to check for NULL in cases like this:
if (admin_level && !g_strcmp0(admin_level, ""2""))
That's because g_strcmp0(NULL, ""2"") would neither crash or return 0.
But beware, if both g_strcmp0 arguments could be NULL, comparison is most probably still needed as it may change the behaviour. That would depend on actual code flow.",Rebased the branch on current trunk to be able to merge after review.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,434,2018-04-07T16:15:43Z,2018-08-21T17:04:27Z,2018-08-21T17:04:27Z,MERGED,True,113,113,10,https://github.com/aerostitch,maptool: use g_strcmp0 instead of strcmp,2,['enhancement'],https://github.com/navit-gps/navit/pull/434,https://github.com/jkoan,4,https://github.com/navit-gps/navit/pull/434#issuecomment-392420311,"TODO:

there's no need to check for NULL in cases like this:
if (admin_level && !g_strcmp0(admin_level, ""2""))
That's because g_strcmp0(NULL, ""2"") would neither crash or return 0.
But beware, if both g_strcmp0 arguments could be NULL, comparison is most probably still needed as it may change the behaviour. That would depend on actual code flow.",@aerostitch i think you need to rebase this PR,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,434,2018-04-07T16:15:43Z,2018-08-21T17:04:27Z,2018-08-21T17:04:27Z,MERGED,True,113,113,10,https://github.com/aerostitch,maptool: use g_strcmp0 instead of strcmp,2,['enhancement'],https://github.com/navit-gps/navit/pull/434,https://github.com/aerostitch,5,https://github.com/navit-gps/navit/pull/434#issuecomment-392856129,"TODO:

there's no need to check for NULL in cases like this:
if (admin_level && !g_strcmp0(admin_level, ""2""))
That's because g_strcmp0(NULL, ""2"") would neither crash or return 0.
But beware, if both g_strcmp0 arguments could be NULL, comparison is most probably still needed as it may change the behaviour. That would depend on actual code flow.",Rebased again.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,434,2018-04-07T16:15:43Z,2018-08-21T17:04:27Z,2018-08-21T17:04:27Z,MERGED,True,113,113,10,https://github.com/aerostitch,maptool: use g_strcmp0 instead of strcmp,2,['enhancement'],https://github.com/navit-gps/navit/pull/434,https://github.com/jkoan,6,https://github.com/navit-gps/navit/pull/434#issuecomment-405119070,"TODO:

there's no need to check for NULL in cases like this:
if (admin_level && !g_strcmp0(admin_level, ""2""))
That's because g_strcmp0(NULL, ""2"") would neither crash or return 0.
But beware, if both g_strcmp0 arguments could be NULL, comparison is most probably still needed as it may change the behaviour. That would depend on actual code flow.","Update? Merge? @aerostitch in the description it's said todo, is everything finished and able to merge?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,434,2018-04-07T16:15:43Z,2018-08-21T17:04:27Z,2018-08-21T17:04:27Z,MERGED,True,113,113,10,https://github.com/aerostitch,maptool: use g_strcmp0 instead of strcmp,2,['enhancement'],https://github.com/navit-gps/navit/pull/434,https://github.com/aerostitch,7,https://github.com/navit-gps/navit/pull/434#issuecomment-405128855,"TODO:

there's no need to check for NULL in cases like this:
if (admin_level && !g_strcmp0(admin_level, ""2""))
That's because g_strcmp0(NULL, ""2"") would neither crash or return 0.
But beware, if both g_strcmp0 arguments could be NULL, comparison is most probably still needed as it may change the behaviour. That would depend on actual code flow.",Everything is done on my side and ready to merge. Just waiting for approval.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,435,2018-04-11T04:48:43Z,2019-05-25T09:01:37Z,2019-06-14T05:59:50Z,CLOSED,False,132627,119835,952,https://github.com/pgrandin,[WIP] Fix:bookmarks:Ensure that bookmarks are synced to disk,698,"['enhancement', 'WIP']",https://github.com/navit-gps/navit/pull/435,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/435,"When using navit on some devices that could loose power without being properly shut down, the bookmark files was lost (content was empty).
This problem is reproduceable : running Navit on a buildroot image on the raspberry pi (for example one built using https://github.com/navit-gps/buildroot ), if the pi looses power and the bookmark file has been modified, the bookmark file will be lost everytime.
This simple fix ensures that the files get flushed to the disk when we write the bookmark files, and solves the issue according to my tests.","When using navit on some devices that could loose power without being properly shut down, the bookmark files was lost (content was empty).
This problem is reproduceable : running Navit on a buildroot image on the raspberry pi (for example one built using https://github.com/navit-gps/buildroot ), if the pi looses power and the bookmark file has been modified, the bookmark file will be lost everytime.
This simple fix ensures that the files get flushed to the disk when we write the bookmark files, and solves the issue according to my tests.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,435,2018-04-11T04:48:43Z,2019-05-25T09:01:37Z,2019-06-14T05:59:50Z,CLOSED,False,132627,119835,952,https://github.com/pgrandin,[WIP] Fix:bookmarks:Ensure that bookmarks are synced to disk,698,"['enhancement', 'WIP']",https://github.com/navit-gps/navit/pull/435,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/435#issuecomment-380497578,"When using navit on some devices that could loose power without being properly shut down, the bookmark files was lost (content was empty).
This problem is reproduceable : running Navit on a buildroot image on the raspberry pi (for example one built using https://github.com/navit-gps/buildroot ), if the pi looses power and the bookmark file has been modified, the bookmark file will be lost everytime.
This simple fix ensures that the files get flushed to the disk when we write the bookmark files, and solves the issue according to my tests.","Thanks @hoehnp
I forgot to make it windows compliant too - will fix that, and renamed the PR as WIP meanwhile.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,435,2018-04-11T04:48:43Z,2019-05-25T09:01:37Z,2019-06-14T05:59:50Z,CLOSED,False,132627,119835,952,https://github.com/pgrandin,[WIP] Fix:bookmarks:Ensure that bookmarks are synced to disk,698,"['enhancement', 'WIP']",https://github.com/navit-gps/navit/pull/435,https://github.com/jkoan,3,https://github.com/navit-gps/navit/pull/435#issuecomment-394140322,"When using navit on some devices that could loose power without being properly shut down, the bookmark files was lost (content was empty).
This problem is reproduceable : running Navit on a buildroot image on the raspberry pi (for example one built using https://github.com/navit-gps/buildroot ), if the pi looses power and the bookmark file has been modified, the bookmark file will be lost everytime.
This simple fix ensures that the files get flushed to the disk when we write the bookmark files, and solves the issue according to my tests.","https://stackoverflow.com/a/19705693 this should have the function we are looking for.
@pgrandin could you add it?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,435,2018-04-11T04:48:43Z,2019-05-25T09:01:37Z,2019-06-14T05:59:50Z,CLOSED,False,132627,119835,952,https://github.com/pgrandin,[WIP] Fix:bookmarks:Ensure that bookmarks are synced to disk,698,"['enhancement', 'WIP']",https://github.com/navit-gps/navit/pull/435,https://github.com/jkoan,4,https://github.com/navit-gps/navit/pull/435#issuecomment-495890647,"When using navit on some devices that could loose power without being properly shut down, the bookmark files was lost (content was empty).
This problem is reproduceable : running Navit on a buildroot image on the raspberry pi (for example one built using https://github.com/navit-gps/buildroot ), if the pi looses power and the bookmark file has been modified, the bookmark file will be lost everytime.
This simple fix ensures that the files get flushed to the disk when we write the bookmark files, and solves the issue according to my tests.",Will open a new Pr for this,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,437,2018-04-11T10:58:35Z,2018-04-12T16:31:02Z,2018-04-12T16:31:15Z,MERGED,True,1,1,1,https://github.com/jandegr,Update build_win32.sh,1,[],https://github.com/navit-gps/navit/pull/437,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/437,No need to build maptool for win32,No need to build maptool for win32,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,438,2018-04-12T17:02:51Z,2018-04-12T17:51:31Z,2018-04-12T17:57:01Z,MERGED,True,0,29,3,https://github.com/jandegr,Android no acra,3,[],https://github.com/navit-gps/navit/pull/438,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/438,"Temporary remove ACRA according to the comments from Google and awaiting a real solution.
Needs testing !!!","Temporary remove ACRA according to the comments from Google and awaiting a real solution.
Needs testing !!!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,438,2018-04-12T17:02:51Z,2018-04-12T17:51:31Z,2018-04-12T17:57:01Z,MERGED,True,0,29,3,https://github.com/jandegr,Android no acra,3,[],https://github.com/navit-gps/navit/pull/438,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/438#issuecomment-380890336,"Temporary remove ACRA according to the comments from Google and awaiting a real solution.
Needs testing !!!",Looks good and is able to install. Merging it because time is ticking.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,439,2018-04-13T07:05:06Z,2018-04-16T15:21:52Z,2018-04-16T19:56:26Z,MERGED,True,61,47,3,https://github.com/pohlinkzei,PR to fix Trac 1202 (Make Image and Scale osd types obey osd_configuration setting),3,[],https://github.com/navit-gps/navit/pull/439,https://github.com/pohlinkzei,1,https://github.com/navit-gps/navit/pull/439,"This PR shall fix trac-1202.
After looking into it again after a year, I could fix the behavior for Image and Scale.
Additionally I renamed the OSD flags to what they probably do.
I took a new branch (with typo -.- ) because we do not want to see all commit from the past  year.
#235 can stay closed.","This PR shall fix trac-1202.
After looking into it again after a year, I could fix the behavior for Image and Scale.
Additionally I renamed the OSD flags to what they probably do.
I took a new branch (with typo -.- ) because we do not want to see all commit from the past  year.
#235 can stay closed.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,439,2018-04-13T07:05:06Z,2018-04-16T15:21:52Z,2018-04-16T19:56:26Z,MERGED,True,61,47,3,https://github.com/pohlinkzei,PR to fix Trac 1202 (Make Image and Scale osd types obey osd_configuration setting),3,[],https://github.com/navit-gps/navit/pull/439,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/439#issuecomment-381354692,"This PR shall fix trac-1202.
After looking into it again after a year, I could fix the behavior for Image and Scale.
Additionally I renamed the OSD flags to what they probably do.
I took a new branch (with typo -.- ) because we do not want to see all commit from the past  year.
#235 can stay closed.","It's nice to get another contribution from you @pohlinkzei!
Would you mind attaching a screenshot also showing the improvement of your PR?
Thanks!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,439,2018-04-13T07:05:06Z,2018-04-16T15:21:52Z,2018-04-16T19:56:26Z,MERGED,True,61,47,3,https://github.com/pohlinkzei,PR to fix Trac 1202 (Make Image and Scale osd types obey osd_configuration setting),3,[],https://github.com/navit-gps/navit/pull/439,https://github.com/pohlinkzei,3,https://github.com/navit-gps/navit/pull/439#issuecomment-381355017,"This PR shall fix trac-1202.
After looking into it again after a year, I could fix the behavior for Image and Scale.
Additionally I renamed the OSD flags to what they probably do.
I took a new branch (with typo -.- ) because we do not want to see all commit from the past  year.
#235 can stay closed.","Yes, I Will.


That's the OSD-Code in navit.xml:
`

	<osd enabled=""yes"" type=""compass""/>
	<osd enabled=""yes"" type=""navigation_next_turn""/> 

	<!-- Commands include gui_internal_menu, gui_internal_fullscreen, zoom_in and zoom_out.
		Usage of negative values change the button origins. x=""0"" y=""0"" specifies the top left, x=""-0"" y=""-0"" the bottom right corner.
		It's always the top left corner of the icon, so you need to consider the icon's size when you enter the values. -->
	<osd enabled=""no"" type=""button"" x=""0"" y=""0"" command=""gui.fullscreen=!gui.fullscreen"" src=""toggle_fullscreen.png""/>
	<osd enabled=""yes"" type=""button"" x=""-96"" y=""0"" command=""gui.menu(1)"" src=""menu.png""/>
	<osd enabled=""yes"" type=""image"" x=""-96"" y=""-96"" src=""zoom_in.png"" background_color=""#00000000"" text_color=""#111111"" osd_configuration=""1""/>
	<osd enabled=""yes"" type=""image"" x=""-96"" y=""-96"" src=""zoom_out.png"" background_color=""#00000000"" text_color=""#FFFFFF"" osd_configuration=""2""/>
	<osd enabled=""yes"" type=""scale"" x=""-150"" y=""-200"" font_size=""200"" h=""30"" w=""150"" background_color=""#00000000"" text_color=""#111111"" osd_configuration=""1""/>
	<osd enabled=""yes"" type=""scale"" x=""-200"" y=""-150""  font_size=""200"" h=""10"" w=""150"" background_color=""#00000000"" text_color=""#FFFFFF"" osd_configuration=""2""/> 
	 
	<osd enabled=""yes"" type=""scale"" x=""-400"" y=""-300"" font_size=""200"" h=""15"" w=""100""/> `",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,439,2018-04-13T07:05:06Z,2018-04-16T15:21:52Z,2018-04-16T19:56:26Z,MERGED,True,61,47,3,https://github.com/pohlinkzei,PR to fix Trac 1202 (Make Image and Scale osd types obey osd_configuration setting),3,[],https://github.com/navit-gps/navit/pull/439,https://github.com/pohlinkzei,4,https://github.com/navit-gps/navit/pull/439#issuecomment-381547564,"This PR shall fix trac-1202.
After looking into it again after a year, I could fix the behavior for Image and Scale.
Additionally I renamed the OSD flags to what they probably do.
I took a new branch (with typo -.- ) because we do not want to see all commit from the past  year.
#235 can stay closed.",Complete config file to be found here: https://github.com/pohlinkzei/Pi_MFD_Layout/tree/trac1202,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,439,2018-04-13T07:05:06Z,2018-04-16T15:21:52Z,2018-04-16T19:56:26Z,MERGED,True,61,47,3,https://github.com/pohlinkzei,PR to fix Trac 1202 (Make Image and Scale osd types obey osd_configuration setting),3,[],https://github.com/navit-gps/navit/pull/439,https://github.com/pgrandin,5,https://github.com/navit-gps/navit/pull/439#issuecomment-381643398,"This PR shall fix trac-1202.
After looking into it again after a year, I could fix the behavior for Image and Scale.
Additionally I renamed the OSD flags to what they probably do.
I took a new branch (with typo -.- ) because we do not want to see all commit from the past  year.
#235 can stay closed.",Nice work,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,440,2018-04-13T16:05:59Z,2018-04-14T05:33:30Z,2018-04-14T05:33:34Z,MERGED,True,15,1,1,https://github.com/jandegr,Android permission,2,[],https://github.com/navit-gps/navit/pull/440,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/440,Prevent a crash on Android when permission location has not been given or is revoked.,Prevent a crash on Android when permission location has not been given or is revoked.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,441,2018-04-15T08:12:52Z,2018-04-19T19:00:26Z,2018-04-19T19:00:26Z,MERGED,True,17,0,1,https://github.com/tengel,show min/max elevation and distance in height profile,1,[],https://github.com/navit-gps/navit/pull/441,https://github.com/tengel,1,https://github.com/navit-gps/navit/pull/441,Extend the height profile with the minimum and maximum elevation of the track as well as the distance of the track.,Extend the height profile with the minimum and maximum elevation of the track as well as the distance of the track.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,441,2018-04-15T08:12:52Z,2018-04-19T19:00:26Z,2018-04-19T19:00:26Z,MERGED,True,17,0,1,https://github.com/tengel,show min/max elevation and distance in height profile,1,[],https://github.com/navit-gps/navit/pull/441,https://github.com/jandegr,2,https://github.com/navit-gps/navit/pull/441#issuecomment-382845704,Extend the height profile with the minimum and maximum elevation of the track as well as the distance of the track.,nice,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,444,2018-04-19T15:19:10Z,2018-04-19T15:34:08Z,2018-04-20T11:31:44Z,MERGED,True,8,3,2,https://github.com/metalstrolch,New version for sailfish 0.5.1-r5,1,[],https://github.com/navit-gps/navit/pull/444,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/444,"This bumps version for navit to 0.5.1-r5
This removes gcc from build dependencies
This automatically zyppers in build requirements as given in spec file
into sailfish build virtual machine. So no hand work required anymore.","This bumps version for navit to 0.5.1-r5
This removes gcc from build dependencies
This automatically zyppers in build requirements as given in spec file
into sailfish build virtual machine. So no hand work required anymore.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,444,2018-04-19T15:19:10Z,2018-04-19T15:34:08Z,2018-04-20T11:31:44Z,MERGED,True,8,3,2,https://github.com/metalstrolch,New version for sailfish 0.5.1-r5,1,[],https://github.com/navit-gps/navit/pull/444,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/444#issuecomment-382780710,"This bumps version for navit to 0.5.1-r5
This removes gcc from build dependencies
This automatically zyppers in build requirements as given in spec file
into sailfish build virtual machine. So no hand work required anymore.",Only relevant for sailfish --> merging,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,445,2018-04-19T23:38:37Z,2018-04-20T05:02:43Z,2018-04-20T11:12:47Z,MERGED,True,987,75,3,https://github.com/aerostitch,Update CHANGELOG.md for 0.5.1 and add configurations for gitchangelog script,1,[],https://github.com/navit-gps/navit/pull/445,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/445,"I've used https://github.com/vaab/gitchangelog, which is based on commits only (I've tested a bunch of other ones but as we're not always using a consistent commit message pattern and that we don't always use PR, that's the best option I found).
All the commits about CI/CircleCI have been skipped.
Let me know if that is ok for you. If so I'll push 0.5.1.
I plan to try to do the next releases every months or so, so the changelog will be way smaller.
Plus, every time we bump a minor or a major version we could archive the changelog of the previous version in a file named CHANGELOG-0.5.md for example (we can figure that one out later).","I've used https://github.com/vaab/gitchangelog, which is based on commits only (I've tested a bunch of other ones but as we're not always using a consistent commit message pattern and that we don't always use PR, that's the best option I found).
All the commits about CI/CircleCI have been skipped.
Let me know if that is ok for you. If so I'll push 0.5.1.
I plan to try to do the next releases every months or so, so the changelog will be way smaller.
Plus, every time we bump a minor or a major version we could archive the changelog of the previous version in a file named CHANGELOG-0.5.md for example (we can figure that one out later).",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,445,2018-04-19T23:38:37Z,2018-04-20T05:02:43Z,2018-04-20T11:12:47Z,MERGED,True,987,75,3,https://github.com/aerostitch,Update CHANGELOG.md for 0.5.1 and add configurations for gitchangelog script,1,[],https://github.com/navit-gps/navit/pull/445,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/445#issuecomment-382969772,"I've used https://github.com/vaab/gitchangelog, which is based on commits only (I've tested a bunch of other ones but as we're not always using a consistent commit message pattern and that we don't always use PR, that's the best option I found).
All the commits about CI/CircleCI have been skipped.
Let me know if that is ok for you. If so I'll push 0.5.1.
I plan to try to do the next releases every months or so, so the changelog will be way smaller.
Plus, every time we bump a minor or a major version we could archive the changelog of the previous version in a file named CHANGELOG-0.5.md for example (we can figure that one out later).",I really much like this. In the future we also need to update Authors file. My idea would be to use the git log again and do it with a .mailmap file,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,446,2018-04-20T00:00:42Z,2018-04-20T04:48:07Z,2018-04-20T11:11:16Z,MERGED,True,2,0,1,https://github.com/aerostitch,Github: Add a template for github issues,1,[],https://github.com/navit-gps/navit/pull/446,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/446,Every time people will open an issue on Navit they will see a link to our wiki.,Every time people will open an issue on Navit they will see a link to our wiki.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,447,2018-04-20T00:14:25Z,2018-04-20T04:49:37Z,2018-04-20T04:49:41Z,MERGED,True,10,0,1,https://github.com/aerostitch,Add:github: Add a contributing.md that references our wiki,1,[],https://github.com/navit-gps/navit/pull/447,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/447,That would increase the visibility on our wiki.,That would increase the visibility on our wiki.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,448,2018-04-20T01:33:29Z,2018-04-20T04:48:58Z,2018-04-20T11:10:33Z,MERGED,True,16,0,1,https://github.com/aerostitch,Add:CI:Re-add the merge to master job when circleci runs on trunk and is successful,1,[],https://github.com/navit-gps/navit/pull/448,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/448,"Currently master is about 190 commits behind trunk.
I think this should work","Currently master is about 190 commits behind trunk.
I think this should work",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,448,2018-04-20T01:33:29Z,2018-04-20T04:48:58Z,2018-04-20T11:10:33Z,MERGED,True,16,0,1,https://github.com/aerostitch,Add:CI:Re-add the merge to master job when circleci runs on trunk and is successful,1,[],https://github.com/navit-gps/navit/pull/448,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/448#issuecomment-382974937,"Currently master is about 190 commits behind trunk.
I think this should work",Let's see!,True,{'THUMBS_UP': ['https://github.com/jkoan']}
navit-gps/navit,https://github.com/navit-gps/navit,449,2018-04-20T11:29:26Z,2018-04-20T11:30:57Z,2018-04-20T11:31:30Z,MERGED,True,11,0,1,https://github.com/aerostitch,Fix the merge to master in circleci and require that all build passed,2,[],https://github.com/navit-gps/navit/pull/449,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/449,"This is to fix https://circleci.com/gh/navit-gps/navit/6041
and to make sure that we only merge if all the CI build jobs passed.","This is to fix https://circleci.com/gh/navit-gps/navit/6041
and to make sure that we only merge if all the CI build jobs passed.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,450,2018-04-20T11:50:40Z,2018-04-20T11:51:27Z,2018-04-20T11:51:33Z,MERGED,True,0,2,1,https://github.com/aerostitch,Fix:CI:Put merge-to-master in the build workflow to use requires,1,[],https://github.com/navit-gps/navit/pull/450,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/450,To fix https://circleci.com/gh/navit-gps/navit/6064,To fix https://circleci.com/gh/navit-gps/navit/6064,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,451,2018-04-20T12:51:40Z,2018-04-20T17:02:40Z,2018-04-20T17:04:24Z,MERGED,True,12,6,1,https://github.com/aerostitch,Change:CI:Move doxygen to the build workflow to only run it when the build succeeds,1,[],https://github.com/navit-gps/navit/pull/451,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/451,"@jkoan pointed out with good reasons that it would be better to only run the doxygen job when the builds are all passing. This is the corresponding PR.
Putting @pgrandin as reviewer to make sure there were no specific reasons to put this one in a separate workflow.","@jkoan pointed out with good reasons that it would be better to only run the doxygen job when the builds are all passing. This is the corresponding PR.
Putting @pgrandin as reviewer to make sure there were no specific reasons to put this one in a separate workflow.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,451,2018-04-20T12:51:40Z,2018-04-20T17:02:40Z,2018-04-20T17:04:24Z,MERGED,True,12,6,1,https://github.com/aerostitch,Change:CI:Move doxygen to the build workflow to only run it when the build succeeds,1,[],https://github.com/navit-gps/navit/pull/451,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/451#issuecomment-383159689,"@jkoan pointed out with good reasons that it would be better to only run the doxygen job when the builds are all passing. This is the corresponding PR.
Putting @pgrandin as reviewer to make sure there were no specific reasons to put this one in a separate workflow.","It was done this way to ensure that doxygen was always up to date with the code in trunk, even if the code in trunk fails to build. But now that we're leveraging pull requests more, build errors should be caught before the code reaches trunk, so I'm good with that.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,452,2018-04-20T19:19:18Z,2018-10-14T19:16:50Z,2018-10-14T19:16:50Z,CLOSED,False,54,0,1,https://github.com/pgrandin,[WIP] Add:Dbus:Added code to route to a bookmark via dbus,1,[],https://github.com/navit-gps/navit/pull/452,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/452,This code allows us to trigger a route calculation to a bookmark via Dbus.,This code allows us to trigger a route calculation to a bookmark via Dbus.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,452,2018-04-20T19:19:18Z,2018-10-14T19:16:50Z,2018-10-14T19:16:50Z,CLOSED,False,54,0,1,https://github.com/pgrandin,[WIP] Add:Dbus:Added code to route to a bookmark via dbus,1,[],https://github.com/navit-gps/navit/pull/452,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/452#issuecomment-392122031,This code allows us to trigger a route calculation to a bookmark via Dbus.,"Sure:
dbus-send  --print-reply --session --dest=org.navit_project.navit /org/navit_project/navit/default_navit org.navit_project.navit.bookmarks.set_as_destination string:""Test""

But it looks like sometimes this call will fail here and segfault :

  
    
      navit/navit/binding/dbus/binding_dbus.c
    
    
         Line 1472
      in
      d9de140
    
  
  
    

        
          
           if (!item_attr_get(item, attr_label, &attr)) continue; 
        
    
  


#0  0x00007f7469c5595e in waitpid () from /lib64/libc.so.6
#1  0x00007f7469bd4f6b in ?? () from /lib64/libc.so.6
#2  0x000055676f93d84c in sigsegv (sig=<optimized out>) at /home/pierre/dev/navit/tmp/navit/navit/debug.c:83
#3  <signal handler called>
#4  item_attr_get (it=0x70e96e38, attr_type=attr_label, attr=0x7ffde00399d0) at /home/pierre/dev/navit/tmp/navit/navit/item.c:258
#5  0x00007f7469534a58 in request_bookmarks_set_as_destination (connection=0x556770e91860, message=0x556770e91ec0) at /home/pierre/dev/navit/tmp/navit/navit/binding/dbus/binding_dbus.c:1473

I need to look into it.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,452,2018-04-20T19:19:18Z,2018-10-14T19:16:50Z,2018-10-14T19:16:50Z,CLOSED,False,54,0,1,https://github.com/pgrandin,[WIP] Add:Dbus:Added code to route to a bookmark via dbus,1,[],https://github.com/navit-gps/navit/pull/452,https://github.com/jkoan,3,https://github.com/navit-gps/navit/pull/452#issuecomment-392420873,This code allows us to trigger a route calculation to a bookmark via Dbus.,"Hi @pgrandin
I think it is possible to give the same name to more then one bookmark, what would then happen?
Generally, what about rework the bookmarks and give everyone a uuid so we could call them in the api/dbus.
Then we could also switch to some more readable format or something less complex (in the meaning of faults) like sqllite.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,452,2018-04-20T19:19:18Z,2018-10-14T19:16:50Z,2018-10-14T19:16:50Z,CLOSED,False,54,0,1,https://github.com/pgrandin,[WIP] Add:Dbus:Added code to route to a bookmark via dbus,1,[],https://github.com/navit-gps/navit/pull/452,https://github.com/lains,4,https://github.com/navit-gps/navit/pull/452#issuecomment-414219882,This code allows us to trigger a route calculation to a bookmark via Dbus.,"Maybe this be implemented using two calls:

One that gets details (including GPS coords) from a bookmark, that would be something like bookmark_search
A second one that routes to a GPS coord (using the already existing set_destination Dbus method.

This would allow to have common code for the destination set, and start a whole family of methods for manipulating bookmarks (there could also be bookmark_rename, bookmark_delete, bookmark_export_as_xml, bookmark_export_as_json...)",True,{'THUMBS_UP': ['https://github.com/jkoan']}
navit-gps/navit,https://github.com/navit-gps/navit,452,2018-04-20T19:19:18Z,2018-10-14T19:16:50Z,2018-10-14T19:16:50Z,CLOSED,False,54,0,1,https://github.com/pgrandin,[WIP] Add:Dbus:Added code to route to a bookmark via dbus,1,[],https://github.com/navit-gps/navit/pull/452,https://github.com/jkoan,5,https://github.com/navit-gps/navit/pull/452#issuecomment-429653863,This code allows us to trigger a route calculation to a bookmark via Dbus.,Closing for now since we need to think again about this and rework it like @lains said ;),True,{}
navit-gps/navit,https://github.com/navit-gps/navit,453,2018-04-20T19:30:30Z,2018-04-21T07:25:40Z,2018-08-28T19:39:42Z,MERGED,True,461,446,1,https://github.com/pgrandin,Update:i18n:Updated French (fr) translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/453,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/453,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,454,2018-04-20T19:43:40Z,2018-04-20T20:03:32Z,2018-04-20T20:06:59Z,MERGED,True,6,0,1,https://github.com/aerostitch,Update:changelog:Update changelog after release 0.5.1,1,[],https://github.com/navit-gps/navit/pull/454,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/454,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,456,2018-04-20T21:26:19Z,2018-04-21T13:12:25Z,2018-04-21T13:12:32Z,MERGED,True,3,2,2,https://github.com/aerostitch,Fix:CI:Make sure the wince build fails when make or cmake fail,2,['wince'],https://github.com/navit-gps/navit/pull/456,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/456,"Closes: #455
1st run should fail on wince, then I'll work on the underlying issue.","Closes: #455
1st run should fail on wince, then I'll work on the underlying issue.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,456,2018-04-20T21:26:19Z,2018-04-21T13:12:25Z,2018-04-21T13:12:32Z,MERGED,True,3,2,2,https://github.com/aerostitch,Fix:CI:Make sure the wince build fails when make or cmake fail,2,['wince'],https://github.com/navit-gps/navit/pull/456,https://github.com/aerostitch,2,https://github.com/navit-gps/navit/pull/456#issuecomment-383227798,"Closes: #455
1st run should fail on wince, then I'll work on the underlying issue.","Ok, so the 1st commit works as expected. :)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,456,2018-04-20T21:26:19Z,2018-04-21T13:12:25Z,2018-04-21T13:12:32Z,MERGED,True,3,2,2,https://github.com/aerostitch,Fix:CI:Make sure the wince build fails when make or cmake fail,2,['wince'],https://github.com/navit-gps/navit/pull/456,https://github.com/aerostitch,3,https://github.com/navit-gps/navit/pull/456#issuecomment-383228559,"Closes: #455
1st run should fail on wince, then I'll work on the underlying issue.","The wince issue has been introduced by 54dac2a in #441
@jandegr FYI
It's really weird because it should be included in math.h which is there:
#include <math.h>",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,456,2018-04-20T21:26:19Z,2018-04-21T13:12:25Z,2018-04-21T13:12:32Z,MERGED,True,3,2,2,https://github.com/aerostitch,Fix:CI:Make sure the wince build fails when make or cmake fail,2,['wince'],https://github.com/navit-gps/navit/pull/456,https://github.com/aerostitch,4,https://github.com/navit-gps/navit/pull/456#issuecomment-383244663,"Closes: #455
1st run should fail on wince, then I'll work on the underlying issue.","So I fixed the inner issue (the absence of fmin/fmax on wince) by using the MIN/MAX macros we defined in gmacros.
Now it works and I don't think that will be a problem because we are comparing int.
@jandegr can you confirm that this change is ok for you please?
Thanks
Joseph",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,456,2018-04-20T21:26:19Z,2018-04-21T13:12:25Z,2018-04-21T13:12:32Z,MERGED,True,3,2,2,https://github.com/aerostitch,Fix:CI:Make sure the wince build fails when make or cmake fail,2,['wince'],https://github.com/navit-gps/navit/pull/456,https://github.com/pgrandin,5,https://github.com/navit-gps/navit/pull/456#issuecomment-383249421,"Closes: #455
1st run should fail on wince, then I'll work on the underlying issue.","Nice, thanks @aerostitch for taking care of that!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,456,2018-04-20T21:26:19Z,2018-04-21T13:12:25Z,2018-04-21T13:12:32Z,MERGED,True,3,2,2,https://github.com/aerostitch,Fix:CI:Make sure the wince build fails when make or cmake fail,2,['wince'],https://github.com/navit-gps/navit/pull/456,https://github.com/jkoan,6,https://github.com/navit-gps/navit/pull/456#issuecomment-383274350,"Closes: #455
1st run should fail on wince, then I'll work on the underlying issue.","Why not only ""set -e""?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,456,2018-04-20T21:26:19Z,2018-04-21T13:12:25Z,2018-04-21T13:12:32Z,MERGED,True,3,2,2,https://github.com/aerostitch,Fix:CI:Make sure the wince build fails when make or cmake fail,2,['wince'],https://github.com/navit-gps/navit/pull/456,https://github.com/aerostitch,7,https://github.com/navit-gps/navit/pull/456#issuecomment-383293535,"Closes: #455
1st run should fail on wince, then I'll work on the underlying issue.","set -e works too.
I updated the PR to use set -e, it works as expected.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,458,2018-04-21T06:59:38Z,2018-04-21T08:48:10Z,2018-04-21T08:48:17Z,MERGED,True,28,39,2,https://github.com/jandegr,Refactoring:Android:cleanup,4,[],https://github.com/navit-gps/navit/pull/458,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/458,"Remove useless graphics/null and speech/cmdline
Usage of TAG
Remove a few unused vars
Change loglevels","Remove useless graphics/null and speech/cmdline
Usage of TAG
Remove a few unused vars
Change loglevels",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,459,2018-04-21T10:18:21Z,2018-04-25T16:03:22Z,2018-04-25T16:23:41Z,MERGED,True,1,9,1,https://github.com/jkoan,fix:android:Fix for the permissions dialog,1,[],https://github.com/navit-gps/navit/pull/459,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/459,"This fixes #443
Left Picture is the new one","This fixes #443
Left Picture is the new one",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,460,2018-04-21T13:14:04Z,2018-04-22T00:48:12Z,2018-04-22T17:34:44Z,MERGED,True,20,1,7,https://github.com/aerostitch,Update:CI:Make sure that all the scripts in the ci folder have a shebang and use set -e,2,[],https://github.com/navit-gps/navit/pull/460,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/460,"Updated all the ci scripts to have a shebang and use set -e except for ci/update_download_center.sh who has a retry mechanism that prevents us from using set -e.
Also fixes an error happening when extracting the android sdk as the owner of the extracted files is not the same as in the tarball.","Updated all the ci scripts to have a shebang and use set -e except for ci/update_download_center.sh who has a retry mechanism that prevents us from using set -e.
Also fixes an error happening when extracting the android sdk as the owner of the extracted files is not the same as in the tarball.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,460,2018-04-21T13:14:04Z,2018-04-22T00:48:12Z,2018-04-22T17:34:44Z,MERGED,True,20,1,7,https://github.com/aerostitch,Update:CI:Make sure that all the scripts in the ci folder have a shebang and use set -e,2,[],https://github.com/navit-gps/navit/pull/460,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/460#issuecomment-383345052,"Updated all the ci scripts to have a shebang and use set -e except for ci/update_download_center.sh who has a retry mechanism that prevents us from using set -e.
Also fixes an error happening when extracting the android sdk as the owner of the extracted files is not the same as in the tarball.",Nice! Thanks!,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,539,2018-04-23T02:54:57Z,2018-04-25T16:09:23Z,2018-04-25T16:09:32Z,MERGED,True,4,18,1,https://github.com/pgrandin,CI:Android:Use a pre-built docker image for android toolchain,1,[],https://github.com/navit-gps/navit/pull/539,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/539,Using a pre-built docker image ( https://github.com/navit-gps/Dockerfiles/blob/master/android/Dockerfile ) we can reduce the build time by ~2:30 minutes,Using a pre-built docker image ( https://github.com/navit-gps/Dockerfiles/blob/master/android/Dockerfile ) we can reduce the build time by ~2:30 minutes,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,539,2018-04-23T02:54:57Z,2018-04-25T16:09:23Z,2018-04-25T16:09:32Z,MERGED,True,4,18,1,https://github.com/pgrandin,CI:Android:Use a pre-built docker image for android toolchain,1,[],https://github.com/navit-gps/navit/pull/539,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/539#issuecomment-383441115,Using a pre-built docker image ( https://github.com/navit-gps/Dockerfiles/blob/master/android/Dockerfile ) we can reduce the build time by ~2:30 minutes,"The idea is really good, but you need to update the software inside the image on ci side to make sure we not stuck on a old version of the android tools.
So my idea would be to use the setup scripts which where removed in this PR also to be sure that everything is up to date.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,539,2018-04-23T02:54:57Z,2018-04-25T16:09:23Z,2018-04-25T16:09:32Z,MERGED,True,4,18,1,https://github.com/pgrandin,CI:Android:Use a pre-built docker image for android toolchain,1,[],https://github.com/navit-gps/navit/pull/539,https://github.com/pgrandin,3,https://github.com/navit-gps/navit/pull/539#issuecomment-383441921,Using a pre-built docker image ( https://github.com/navit-gps/Dockerfiles/blob/master/android/Dockerfile ) we can reduce the build time by ~2:30 minutes,"The idea is really good, but you need to update the software inside the image on ci side to make sure we not stuck on a old version of the android tools.
I'm not sure I understand that.

This image was built exactly the way we are setting up android in the CI : ubuntu 14.04 + a bunch of packages and then some commands.
When it'll be time to support android-26, we just need to add it to the Dockerfile and update the image tag that we use in the CI.
Does it answer your concern?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,539,2018-04-23T02:54:57Z,2018-04-25T16:09:23Z,2018-04-25T16:09:32Z,MERGED,True,4,18,1,https://github.com/pgrandin,CI:Android:Use a pre-built docker image for android toolchain,1,[],https://github.com/navit-gps/navit/pull/539,https://github.com/jkoan,4,https://github.com/navit-gps/navit/pull/539#issuecomment-383442827,Using a pre-built docker image ( https://github.com/navit-gps/Dockerfiles/blob/master/android/Dockerfile ) we can reduce the build time by ~2:30 minutes,"Not really. The point is that Docker images are static. So thy only update when you update them manually.
For us that means when Google pushes out bug fixes for for example a support library we will not see that on the next build.
there are two ways to solve this problem. First one is to update the image automatically when something changes (which is quite hard to figure out)
or the more easy one would be to use the outdated image and update (not install) on runtime.
So usage of the new image and using the scripts would fix problems we could have with a minimal add of time and we still have the advantage of pre-installed components. The scripts will only update things if they are not on the latest version.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,539,2018-04-23T02:54:57Z,2018-04-25T16:09:23Z,2018-04-25T16:09:32Z,MERGED,True,4,18,1,https://github.com/pgrandin,CI:Android:Use a pre-built docker image for android toolchain,1,[],https://github.com/navit-gps/navit/pull/539,https://github.com/jandegr,5,https://github.com/navit-gps/navit/pull/539#issuecomment-383904749,Using a pre-built docker image ( https://github.com/navit-gps/Dockerfiles/blob/master/android/Dockerfile ) we can reduce the build time by ~2:30 minutes,"Please consider using gradle with a prebuilt image for the build, faster, better and almost maintenance-free,
just bump the used image from time to time.
Already did a bit of testing over there https://github.com/navit-gps/navit/tree/Android_gradle",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,539,2018-04-23T02:54:57Z,2018-04-25T16:09:23Z,2018-04-25T16:09:32Z,MERGED,True,4,18,1,https://github.com/pgrandin,CI:Android:Use a pre-built docker image for android toolchain,1,[],https://github.com/navit-gps/navit/pull/539,https://github.com/pgrandin,6,https://github.com/navit-gps/navit/pull/539#issuecomment-384186604,Using a pre-built docker image ( https://github.com/navit-gps/Dockerfiles/blob/master/android/Dockerfile ) we can reduce the build time by ~2:30 minutes,"@jandegr looking at your branch, it actually replaces #539
Do you have any reason for not submitting a pull request with that branch? Your approach seems better.",True,{'THUMBS_UP': ['https://github.com/jkoan']}
navit-gps/navit,https://github.com/navit-gps/navit,539,2018-04-23T02:54:57Z,2018-04-25T16:09:23Z,2018-04-25T16:09:32Z,MERGED,True,4,18,1,https://github.com/pgrandin,CI:Android:Use a pre-built docker image for android toolchain,1,[],https://github.com/navit-gps/navit/pull/539,https://github.com/jkoan,7,https://github.com/navit-gps/navit/pull/539#issuecomment-384337225,Using a pre-built docker image ( https://github.com/navit-gps/Dockerfiles/blob/master/android/Dockerfile ) we can reduce the build time by ~2:30 minutes,I would also like to do it with gradle instead when its ready. So probably close this one @pgrandin ?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,539,2018-04-23T02:54:57Z,2018-04-25T16:09:23Z,2018-04-25T16:09:32Z,MERGED,True,4,18,1,https://github.com/pgrandin,CI:Android:Use a pre-built docker image for android toolchain,1,[],https://github.com/navit-gps/navit/pull/539,https://github.com/jandegr,8,https://github.com/navit-gps/navit/pull/539#issuecomment-384342388,Using a pre-built docker image ( https://github.com/navit-gps/Dockerfiles/blob/master/android/Dockerfile ) we can reduce the build time by ~2:30 minutes,"I still have a bit of work on cmake to make it work not just on CI but in androidstudio as well, but then for the signing and publishing and such it will require your help / intervention, so I'd suggest to open an issue for it since it is not ready for a PR yet.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,539,2018-04-23T02:54:57Z,2018-04-25T16:09:23Z,2018-04-25T16:09:32Z,MERGED,True,4,18,1,https://github.com/pgrandin,CI:Android:Use a pre-built docker image for android toolchain,1,[],https://github.com/navit-gps/navit/pull/539,https://github.com/pgrandin,9,https://github.com/navit-gps/navit/pull/539#issuecomment-384343149,Using a pre-built docker image ( https://github.com/navit-gps/Dockerfiles/blob/master/android/Dockerfile ) we can reduce the build time by ~2:30 minutes,OK thanks @jandegr so I'll merge this one ( as #540 kinda need it) and we'll rework that whenever your changes will be ready.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,540,2018-04-23T03:30:23Z,2018-04-25T16:09:44Z,2018-04-25T16:45:23Z,MERGED,True,32,8,3,https://github.com/pgrandin,Fix:CI:Automated upload to playstore,15,[],https://github.com/navit-gps/navit/pull/540,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/540,"This PR fixes automated uploads to playstore from trunk.
Tested in https://circleci.com/gh/navit-gps/navit/6401","This PR fixes automated uploads to playstore from trunk.
Tested in https://circleci.com/gh/navit-gps/navit/6401",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,540,2018-04-23T03:30:23Z,2018-04-25T16:09:44Z,2018-04-25T16:45:23Z,MERGED,True,32,8,3,https://github.com/pgrandin,Fix:CI:Automated upload to playstore,15,[],https://github.com/navit-gps/navit/pull/540,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/540#issuecomment-383456227,"This PR fixes automated uploads to playstore from trunk.
Tested in https://circleci.com/gh/navit-gps/navit/6401","Could we change the order so update download center is on the end? Then we can also upload the release signed apk.

Sure

Also installing new software should be path of the setup requirements I think

Depends on what we do with #539 :)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,540,2018-04-23T03:30:23Z,2018-04-25T16:09:44Z,2018-04-25T16:45:23Z,MERGED,True,32,8,3,https://github.com/pgrandin,Fix:CI:Automated upload to playstore,15,[],https://github.com/navit-gps/navit/pull/540,https://github.com/jkoan,3,https://github.com/navit-gps/navit/pull/540#issuecomment-383555700,"This PR fixes automated uploads to playstore from trunk.
Tested in https://circleci.com/gh/navit-gps/navit/6401","Also installing new software should be path of the setup requirements I think



Depends on what we do with #539 :)

not realy because even if we have a image we should have things in scripts bundled together and not inline inside the circleci config. This makes it more usable even on other CI services than CircleCI.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,540,2018-04-23T03:30:23Z,2018-04-25T16:09:44Z,2018-04-25T16:45:23Z,MERGED,True,32,8,3,https://github.com/pgrandin,Fix:CI:Automated upload to playstore,15,[],https://github.com/navit-gps/navit/pull/540,https://github.com/pgrandin,4,https://github.com/navit-gps/navit/pull/540#issuecomment-384187098,"This PR fixes automated uploads to playstore from trunk.
Tested in https://circleci.com/gh/navit-gps/navit/6401",@jkoan better now?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,540,2018-04-23T03:30:23Z,2018-04-25T16:09:44Z,2018-04-25T16:45:23Z,MERGED,True,32,8,3,https://github.com/pgrandin,Fix:CI:Automated upload to playstore,15,[],https://github.com/navit-gps/navit/pull/540,https://github.com/pgrandin,5,https://github.com/navit-gps/navit/pull/540#issuecomment-384354714,"This PR fixes automated uploads to playstore from trunk.
Tested in https://circleci.com/gh/navit-gps/navit/6401","Your update to Navit for Android, created on Apr 25, 2018 at 4:24 PM GMT, is live in the store.

From https://circleci.com/gh/navit-gps/navit/6794
It works :D",True,"{'LAUGH': ['https://github.com/jkoan'], 'THUMBS_UP': ['https://github.com/jkoan']}"
navit-gps/navit,https://github.com/navit-gps/navit,541,2018-04-23T05:04:03Z,2018-04-24T14:56:27Z,2018-04-24T14:56:30Z,MERGED,True,154,6,3,https://github.com/aerostitch,Add a script to update the contributors list from the git log,3,[],https://github.com/navit-gps/navit/pull/541,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/541,"Hi guys,
This PR adds a script to update the AUTHORS file based on the git lofs.
It has a mechanism to remap the users identified as duplicates and identified retired contributors as the ones without any commit over the last 2 years.
Also updated the AUTHORS file at the same time so you'll see the result.
Let me know what you think about it.
Thanks!
Joseph","Hi guys,
This PR adds a script to update the AUTHORS file based on the git lofs.
It has a mechanism to remap the users identified as duplicates and identified retired contributors as the ones without any commit over the last 2 years.
Also updated the AUTHORS file at the same time so you'll see the result.
Let me know what you think about it.
Thanks!
Joseph",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,541,2018-04-23T05:04:03Z,2018-04-24T14:56:27Z,2018-04-24T14:56:30Z,MERGED,True,154,6,3,https://github.com/aerostitch,Add a script to update the contributors list from the git log,3,[],https://github.com/navit-gps/navit/pull/541,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/541#issuecomment-383457223,"Hi guys,
This PR adds a script to update the AUTHORS file based on the git lofs.
It has a mechanism to remap the users identified as duplicates and identified retired contributors as the ones without any commit over the last 2 years.
Also updated the AUTHORS file at the same time so you'll see the result.
Let me know what you think about it.
Thanks!
Joseph","Nice @aerostitch that list needed a brush-up.
Maybe we should hide the emails, and I'm not sure that the last contribution date is really useful?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,541,2018-04-23T05:04:03Z,2018-04-24T14:56:27Z,2018-04-24T14:56:30Z,MERGED,True,154,6,3,https://github.com/aerostitch,Add a script to update the contributors list from the git log,3,[],https://github.com/navit-gps/navit/pull/541,https://github.com/aerostitch,3,https://github.com/navit-gps/navit/pull/541#issuecomment-383483022,"Hi guys,
This PR adds a script to update the AUTHORS file based on the git lofs.
It has a mechanism to remap the users identified as duplicates and identified retired contributors as the ones without any commit over the last 2 years.
Also updated the AUTHORS file at the same time so you'll see the result.
Let me know what you think about it.
Thanks!
Joseph",@pgrandin I updated the PR accordingly (removed the emails and last contribution date) and sorted each list (active and retired contributors) alphabetically too.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,541,2018-04-23T05:04:03Z,2018-04-24T14:56:27Z,2018-04-24T14:56:30Z,MERGED,True,154,6,3,https://github.com/aerostitch,Add a script to update the contributors list from the git log,3,[],https://github.com/navit-gps/navit/pull/541,https://github.com/aerostitch,4,https://github.com/navit-gps/navit/pull/541#issuecomment-383789480,"Hi guys,
This PR adds a script to update the AUTHORS file based on the git lofs.
It has a mechanism to remap the users identified as duplicates and identified retired contributors as the ones without any commit over the last 2 years.
Also updated the AUTHORS file at the same time so you'll see the result.
Let me know what you think about it.
Thanks!
Joseph","I updated the PR, the script is now using the .mailmap I created.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,542,2018-04-23T18:26:20Z,2018-04-23T18:44:26Z,2018-04-23T18:46:54Z,MERGED,True,0,20,1,https://github.com/aerostitch,Fix:icons:Remove links to unknown image from gui_map.svg,1,[],https://github.com/navit-gps/navit/pull/542,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/542,To fix the gradle builds,To fix the gradle builds,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,546,2018-04-25T21:06:35Z,2018-04-26T17:12:27Z,2018-04-26T17:17:16Z,MERGED,True,2064,2053,131,https://github.com/aerostitch,Fix:debug:Change line separators for dbg to work also on win* platform,3,[],https://github.com/navit-gps/navit/pull/546,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/546,Closes #545,Closes #545,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,546,2018-04-25T21:06:35Z,2018-04-26T17:12:27Z,2018-04-26T17:17:16Z,MERGED,True,2064,2053,131,https://github.com/aerostitch,Fix:debug:Change line separators for dbg to work also on win* platform,3,[],https://github.com/navit-gps/navit/pull/546,https://github.com/aerostitch,2,https://github.com/navit-gps/navit/pull/546#issuecomment-384720021,Closes #545,Thank you guys! :),True,{}
navit-gps/navit,https://github.com/navit-gps/navit,547,2018-04-26T06:31:32Z,2018-04-28T03:40:13Z,2019-04-18T21:53:10Z,CLOSED,False,9,2,1,https://github.com/pgrandin,[WIP] Testing coverity in PRs,3,[],https://github.com/navit-gps/navit/pull/547,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/547,Testing ideas to integrate coverity scans with the pull requests.,Testing ideas to integrate coverity scans with the pull requests.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,547,2018-04-26T06:31:32Z,2018-04-28T03:40:13Z,2019-04-18T21:53:10Z,CLOSED,False,9,2,1,https://github.com/pgrandin,[WIP] Testing coverity in PRs,3,[],https://github.com/navit-gps/navit/pull/547,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/547#issuecomment-385137100,Testing ideas to integrate coverity scans with the pull requests.,Closing this PR and will reopen a new one to test the env var.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,551,2018-04-27T05:59:12Z,2018-05-07T21:28:25Z,2018-05-07T22:10:00Z,MERGED,True,6,8,1,https://github.com/pgrandin,fix:core:fix log replay,5,[],https://github.com/navit-gps/navit/pull/551,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/551,"This PR fixes traffic replay from an nmea file converted from the default navit gpx logs.
Time is not logged by default in our log config, so replaying traffic wasn't working as expected.","This PR fixes traffic replay from an nmea file converted from the default navit gpx logs.
Time is not logged by default in our log config, so replaying traffic wasn't working as expected.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,552,2018-04-27T14:46:06Z,2018-04-30T17:48:02Z,2018-04-30T17:48:05Z,MERGED,True,2,18,1,https://github.com/aerostitch,Update:xmlconfig:Move from malloc/free/strncpy to g_malloc/g_free/g_strndup,3,[],https://github.com/navit-gps/navit/pull/552,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/552,"So I wasn't sure if we should g_strndup instead of strncpy or directly g_strdup and drop the string length altogether. Any thoughts?
Also does the xml support utf8? In this case I would have to use g_utf8_strncpy.
Thanks!","So I wasn't sure if we should g_strndup instead of strncpy or directly g_strdup and drop the string length altogether. Any thoughts?
Also does the xml support utf8? In this case I would have to use g_utf8_strncpy.
Thanks!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,552,2018-04-27T14:46:06Z,2018-04-30T17:48:02Z,2018-04-30T17:48:05Z,MERGED,True,2,18,1,https://github.com/aerostitch,Update:xmlconfig:Move from malloc/free/strncpy to g_malloc/g_free/g_strndup,3,[],https://github.com/navit-gps/navit/pull/552,https://github.com/aerostitch,2,https://github.com/navit-gps/navit/pull/552#issuecomment-385207268,"So I wasn't sure if we should g_strndup instead of strncpy or directly g_strdup and drop the string length altogether. Any thoughts?
Also does the xml support utf8? In this case I would have to use g_utf8_strncpy.
Thanks!","I think we could remove the things in:
#if 0
...
#endif
Let me know if you want to do that.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,552,2018-04-27T14:46:06Z,2018-04-30T17:48:02Z,2018-04-30T17:48:05Z,MERGED,True,2,18,1,https://github.com/aerostitch,Update:xmlconfig:Move from malloc/free/strncpy to g_malloc/g_free/g_strndup,3,[],https://github.com/navit-gps/navit/pull/552,https://github.com/pgrandin,3,https://github.com/navit-gps/navit/pull/552#issuecomment-385217834,"So I wasn't sure if we should g_strndup instead of strncpy or directly g_strdup and drop the string length altogether. Any thoughts?
Also does the xml support utf8? In this case I would have to use g_utf8_strncpy.
Thanks!","I don't see a good reason to keep
#if 0
...
#endif
block codes. We should probably remove them when we encounter them.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,552,2018-04-27T14:46:06Z,2018-04-30T17:48:02Z,2018-04-30T17:48:05Z,MERGED,True,2,18,1,https://github.com/aerostitch,Update:xmlconfig:Move from malloc/free/strncpy to g_malloc/g_free/g_strndup,3,[],https://github.com/navit-gps/navit/pull/552,https://github.com/aerostitch,4,https://github.com/navit-gps/navit/pull/552#issuecomment-385220362,"So I wasn't sure if we should g_strndup instead of strncpy or directly g_strdup and drop the string length altogether. Any thoughts?
Also does the xml support utf8? In this case I would have to use g_utf8_strncpy.
Thanks!",Done.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,552,2018-04-27T14:46:06Z,2018-04-30T17:48:02Z,2018-04-30T17:48:05Z,MERGED,True,2,18,1,https://github.com/aerostitch,Update:xmlconfig:Move from malloc/free/strncpy to g_malloc/g_free/g_strndup,3,[],https://github.com/navit-gps/navit/pull/552,https://github.com/aerostitch,5,https://github.com/navit-gps/navit/pull/552#issuecomment-385475393,"So I wasn't sure if we should g_strndup instead of strncpy or directly g_strdup and drop the string length altogether. Any thoughts?
Also does the xml support utf8? In this case I would have to use g_utf8_strncpy.
Thanks!",thx!,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,553,2018-04-27T19:04:31Z,2018-05-02T19:22:18Z,2018-08-05T00:54:49Z,MERGED,True,473,53,13,https://github.com/jandegr,rework:android:Move build system from ant to gradle,33,[],https://github.com/navit-gps/navit/pull/553,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/553,"The aim is to allow building with gradle for Android

builds a multi-arch apk in one container on CI in less time than one of the 2 containers now.
can be imported as an Androidstudio project as-is, CI builds the resources as well but there are no provisions to do so locally, for now the fastest way is to grab the resources from an existing apk
gradle/androidstudio is the only tool supported by Google.
tested on CircleCI and win10, will probably work as-is on linux and osX

feel free to comment","The aim is to allow building with gradle for Android

builds a multi-arch apk in one container on CI in less time than one of the 2 containers now.
can be imported as an Androidstudio project as-is, CI builds the resources as well but there are no provisions to do so locally, for now the fastest way is to grab the resources from an existing apk
gradle/androidstudio is the only tool supported by Google.
tested on CircleCI and win10, will probably work as-is on linux and osX

feel free to comment",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,553,2018-04-27T19:04:31Z,2018-05-02T19:22:18Z,2018-08-05T00:54:49Z,MERGED,True,473,53,13,https://github.com/jandegr,rework:android:Move build system from ant to gradle,33,[],https://github.com/navit-gps/navit/pull/553,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/553#issuecomment-385432726,"The aim is to allow building with gradle for Android

builds a multi-arch apk in one container on CI in less time than one of the 2 containers now.
can be imported as an Androidstudio project as-is, CI builds the resources as well but there are no provisions to do so locally, for now the fastest way is to grab the resources from an existing apk
gradle/androidstudio is the only tool supported by Google.
tested on CircleCI and win10, will probably work as-is on linux and osX

feel free to comment",This Pr is also quiet useful for F-Droid because thy currently have some problems to build our app ;),True,{}
navit-gps/navit,https://github.com/navit-gps/navit,553,2018-04-27T19:04:31Z,2018-05-02T19:22:18Z,2018-08-05T00:54:49Z,MERGED,True,473,53,13,https://github.com/jandegr,rework:android:Move build system from ant to gradle,33,[],https://github.com/navit-gps/navit/pull/553,https://github.com/jkoan,3,https://github.com/navit-gps/navit/pull/553#issuecomment-385606925,"The aim is to allow building with gradle for Android

builds a multi-arch apk in one container on CI in less time than one of the 2 containers now.
can be imported as an Androidstudio project as-is, CI builds the resources as well but there are no provisions to do so locally, for now the fastest way is to grab the resources from an existing apk
gradle/androidstudio is the only tool supported by Google.
tested on CircleCI and win10, will probably work as-is on linux and osX

feel free to comment",@jandegr could you give me some hints how I can set up the Navit project within androidstudio?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,553,2018-04-27T19:04:31Z,2018-05-02T19:22:18Z,2018-08-05T00:54:49Z,MERGED,True,473,53,13,https://github.com/jandegr,rework:android:Move build system from ant to gradle,33,[],https://github.com/navit-gps/navit/pull/553,https://github.com/jandegr,4,https://github.com/navit-gps/navit/pull/553#issuecomment-385620873,"The aim is to allow building with gradle for Android

builds a multi-arch apk in one container on CI in less time than one of the 2 containers now.
can be imported as an Androidstudio project as-is, CI builds the resources as well but there are no provisions to do so locally, for now the fastest way is to grab the resources from an existing apk
gradle/androidstudio is the only tool supported by Google.
tested on CircleCI and win10, will probably work as-is on linux and osX

feel free to comment","[DRAFT] How to imoprt it as an Androidstudio project

provide the sources of this branch in you androidstudioprojects folder
provide the resources, either by doing the same conversions as in the CI script if you're on Linux or by grabbing them from a prebuilt apk as a shortcut on Linux or the most practical way on Windows. If you provide prebuilt icons from a prebuilt apk you may get an error because you have duplicates on the two icons that already are present in the resource folders drawable-...dpi, just remove those duplicates if needed. https://github.com/navit-gps/navit/tree/Android_gradle/navit/android/res/drawable-hdpi

Maybe we could remove those in the sources and have them processed from the icons folder during the build just like all the other icons.

in the startupscreen select ""Import project (Gradle, Eclipse ADT, etc.)""
point it to the folder containing the sources
...
restart Androidstudio, triggers some necessery step (sync ?)(not needed if the run button appears right away)
now the run button became available and you can load it onto a device connected over USB or run it on an AVD, or just build an apk or ...",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,553,2018-04-27T19:04:31Z,2018-05-02T19:22:18Z,2018-08-05T00:54:49Z,MERGED,True,473,53,13,https://github.com/jandegr,rework:android:Move build system from ant to gradle,33,[],https://github.com/navit-gps/navit/pull/553,https://github.com/pgrandin,5,https://github.com/navit-gps/navit/pull/553#issuecomment-385693915,"The aim is to allow building with gradle for Android

builds a multi-arch apk in one container on CI in less time than one of the 2 containers now.
can be imported as an Androidstudio project as-is, CI builds the resources as well but there are no provisions to do so locally, for now the fastest way is to grab the resources from an existing apk
gradle/androidstudio is the only tool supported by Google.
tested on CircleCI and win10, will probably work as-is on linux and osX

feel free to comment",@jkoan and @jandegr : that androidstudio doc would be a nice addition to the wiki ;),True,{}
navit-gps/navit,https://github.com/navit-gps/navit,553,2018-04-27T19:04:31Z,2018-05-02T19:22:18Z,2018-08-05T00:54:49Z,MERGED,True,473,53,13,https://github.com/jandegr,rework:android:Move build system from ant to gradle,33,[],https://github.com/navit-gps/navit/pull/553,https://github.com/mvglasow,6,https://github.com/navit-gps/navit/pull/553#issuecomment-406819968,"The aim is to allow building with gradle for Android

builds a multi-arch apk in one container on CI in less time than one of the 2 containers now.
can be imported as an Androidstudio project as-is, CI builds the resources as well but there are no provisions to do so locally, for now the fastest way is to grab the resources from an existing apk
gradle/androidstudio is the only tool supported by Google.
tested on CircleCI and win10, will probably work as-is on linux and osX

feel free to comment","I’ve started a small writeup at https://wiki.navit-project.org/index.php/Android_development#With_gradle (focus is on building Navit on a Linux box without Android Studio installed).
I recently tried to build with gradlew and have found two issues with the build:

Both vehicle/gpsd and map/garmin cause it to fail with errors. Are they supposed to be included in the Android build at all? They currently get enabled because the respective libraries are found, but I’m not sure if these results are accurate for cross-compilation. Maybe you can have a look at that. I managed to get the build to complete without errors by editing CMakeLists.txt and disabling these two specifically for Android.
After running gradlew build and gradlew installDebug, Navit installs fine but all icons are missing from the internal GUI (menu items, menu title bar, dialogs) as well as from the map. OSD icons display, though. The CircleCI build is OK, just my local gradle build is having issues.",True,{'THUMBS_UP': ['https://github.com/lains']}
navit-gps/navit,https://github.com/navit-gps/navit,553,2018-04-27T19:04:31Z,2018-05-02T19:22:18Z,2018-08-05T00:54:49Z,MERGED,True,473,53,13,https://github.com/jandegr,rework:android:Move build system from ant to gradle,33,[],https://github.com/navit-gps/navit/pull/553,https://github.com/lains,7,https://github.com/navit-gps/navit/pull/553#issuecomment-406843708,"The aim is to allow building with gradle for Android

builds a multi-arch apk in one container on CI in less time than one of the 2 containers now.
can be imported as an Androidstudio project as-is, CI builds the resources as well but there are no provisions to do so locally, for now the fastest way is to grab the resources from an existing apk
gradle/androidstudio is the only tool supported by Google.
tested on CircleCI and win10, will probably work as-is on linux and osX

feel free to comment","I had the same issue with gradle, and also had to disable detection of gpsd or I was getting an failure during compilation on #include ""gps.h""
At some stage, my build was also missing files, the best way to make sure you have everything is to manually perform all the steps in .circleci/config.yml",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,553,2018-04-27T19:04:31Z,2018-05-02T19:22:18Z,2018-08-05T00:54:49Z,MERGED,True,473,53,13,https://github.com/jandegr,rework:android:Move build system from ant to gradle,33,[],https://github.com/navit-gps/navit/pull/553,https://github.com/lains,8,https://github.com/navit-gps/navit/pull/553#issuecomment-406844250,"The aim is to allow building with gradle for Android

builds a multi-arch apk in one container on CI in less time than one of the 2 containers now.
can be imported as an Androidstudio project as-is, CI builds the resources as well but there are no provisions to do so locally, for now the fastest way is to grab the resources from an existing apk
gradle/androidstudio is the only tool supported by Google.
tested on CircleCI and win10, will probably work as-is on linux and osX

feel free to comment","Maybe if gradle is the way to go (and cmake support is dropped for Android builds), the build script should be updated, and all the pre- and post-build commands that are currently in config.yml could be moved to a shell script, so that when building outside of circleCI, it is just a matter of running one script.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,553,2018-04-27T19:04:31Z,2018-05-02T19:22:18Z,2018-08-05T00:54:49Z,MERGED,True,473,53,13,https://github.com/jandegr,rework:android:Move build system from ant to gradle,33,[],https://github.com/navit-gps/navit/pull/553,https://github.com/mvglasow,9,https://github.com/navit-gps/navit/pull/553#issuecomment-406874376,"The aim is to allow building with gradle for Android

builds a multi-arch apk in one container on CI in less time than one of the 2 containers now.
can be imported as an Androidstudio project as-is, CI builds the resources as well but there are no provisions to do so locally, for now the fastest way is to grab the resources from an existing apk
gradle/androidstudio is the only tool supported by Google.
tested on CircleCI and win10, will probably work as-is on linux and osX

feel free to comment","Thanks for the heads-up, I’d tried to find the CI stuff but missed the .circleci dir.
To sum it all up, there seems to be a lot of stuff which has to be done outside of gradle, though the old CMake setup would do everything automatically… not great. Gradle gurus, is there any way to have gradle trigger these things?
Otherwise, yes, a build script for Android is probably the best way to go. However, I’d advise keeping build dependency installation out of the build script—check if dependencies are there, and if not, exit with an error telling the user how to install them. Optionally, add another script to install all build dependencies.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,553,2018-04-27T19:04:31Z,2018-05-02T19:22:18Z,2018-08-05T00:54:49Z,MERGED,True,473,53,13,https://github.com/jandegr,rework:android:Move build system from ant to gradle,33,[],https://github.com/navit-gps/navit/pull/553,https://github.com/jkoan,10,https://github.com/navit-gps/navit/pull/553#issuecomment-406881461,"The aim is to allow building with gradle for Android

builds a multi-arch apk in one container on CI in less time than one of the 2 containers now.
can be imported as an Androidstudio project as-is, CI builds the resources as well but there are no provisions to do so locally, for now the fastest way is to grab the resources from an existing apk
gradle/androidstudio is the only tool supported by Google.
tested on CircleCI and win10, will probably work as-is on linux and osX

feel free to comment","For now this should do the trick:
(please adapt at least the code location as needed)
WORKDIR=$(mktemp -d)
cd $WORKDIR
git clone https://github.com/navit-gps/navit
export JVM_OPTS=""-Xmx3200m""
export GRADLE_OPTS='-Dorg.gradle.jvmargs=""-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError""'
cd navit
sudo apt-get install cmake gettext libsaxonb-java librsvg2-bin
cmake ./ -Dvehicle/gpsd_dbus:BOOL=FALSE -Dsvg2png_scaling:STRING=-1,24,32,48,64,96,128 -Dsvg2png_scaling_nav:STRING=-1,24,32,48,64,96,128 -Dsvg2png_scaling_flag:STRING=-1,24,32,64,96
cd navit/icons
make
mkdir ../android/res/drawable-nodpi
rename 'y/A-Z/a-z/' *
cp *.png ../android/res/drawable-nodpi
cd ../../
cd po
make
mkdir ../navit/android/res/raw
rename 'y/A-Z/a-z/' *
cp *.mo ../navit/android/res/raw
cd ../
cd navit
saxonb-xslt -s:navit_shipped.xml -xsl:xslt/android.xslt -o:navitldpi.xml OSD_SIZE=1 ICON_SMALL=24 ICON_MEDIUM=32 ICON_BIG=48
saxonb-xslt -s:navit_shipped.xml -xsl:xslt/android.xslt -o:navitmdpi.xml OSD_SIZE=1.33 ICON_SMALL=32 ICON_MEDIUM=48 ICON_BIG=64
saxonb-xslt -s:navit_shipped.xml -xsl:xslt/android.xslt -o:navithdpi.xml OSD_SIZE=2 ICON_SMALL=48 ICON_MEDIUM=64 ICON_BIG=96
saxonb-xslt -s:navit_shipped.xml -xsl:xslt/android.xslt -o:navitxhdpi.xml OSD_SIZE=2.67 ICON_SMALL=64 ICON_MEDIUM=96 ICON_BIG=128
saxonb-xslt -s:navit_shipped.xml -xsl:xslt/android.xslt -o:navitxxhdpi.xml OSD_SIZE=4 ICON_SMALL=96 ICON_MEDIUM=128 ICON_BIG=192
saxonb-xslt -s:navit_shipped.xml -xsl:xslt/android.xslt -o:navitxxxhdpi.xml OSD_SIZE=5.33 ICON_SMALL=128 ICON_MEDIUM=192 ICON_BIG=256
mv *dpi.xml android/res/raw
cd ../
chmod +x ./gradlew
./gradlew -v
sdkmanager ndk-bundle
./gradlew assembleDebug
ln -s navit/navit.dtd navit.dtd
mkdir /home/circleci/code/test-results
./gradlew lint test

echo Build finished
echo Apk should be in ""navit/android/build/outputs/apk""
find navit/android/build/outputs/apk -iname ""*.apk""",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,553,2018-04-27T19:04:31Z,2018-05-02T19:22:18Z,2018-08-05T00:54:49Z,MERGED,True,473,53,13,https://github.com/jandegr,rework:android:Move build system from ant to gradle,33,[],https://github.com/navit-gps/navit/pull/553,https://github.com/mvglasow,11,https://github.com/navit-gps/navit/pull/553#issuecomment-406889533,"The aim is to allow building with gradle for Android

builds a multi-arch apk in one container on CI in less time than one of the 2 containers now.
can be imported as an Androidstudio project as-is, CI builds the resources as well but there are no provisions to do so locally, for now the fastest way is to grab the resources from an existing apk
gradle/androidstudio is the only tool supported by Google.
tested on CircleCI and win10, will probably work as-is on linux and osX

feel free to comment","Just tried the following:

saved this script as scripts/build-android-gradle.sh (shebang added)
removed all apt-get, sdkmanager and git clone occurrences (no installations from a build script, and the script is meant to be run from an already existing repo)

I get an error about rename not being found, and the following message from gradle:
> Task :navit:android:mergeDebugResources FAILED
/home/michael/src/navit/navit/android/res/raw/zh_TW.mo: Error: 'T' is not a valid file-based resource name character: File-based resource names must contain only lowercase a-z, 0-9, or underscore
/home/michael/src/navit/navit/android/res/drawable-nodpi/country_US_96_96.png: Error: 'U' is not a valid file-based resource name character: File-based resource names must contain only lowercase a-z, 0-9, or underscore

Something isn’t working yet…
Also, I would suggest exiting as soon as a command fails, something like
command_which_may_fail || exit 1

Advantages:

no waste of dev time and CPU cycles if something early in the chain fails
continuing after a failure usually does not produce a usable result
running more stuff after a failure clutters up the display, making the actual error harder to spot

Lastly, running this from the root of the source tree pollutes the source tree quite badly, any easy way to avoid that?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,553,2018-04-27T19:04:31Z,2018-05-02T19:22:18Z,2018-08-05T00:54:49Z,MERGED,True,473,53,13,https://github.com/jandegr,rework:android:Move build system from ant to gradle,33,[],https://github.com/navit-gps/navit/pull/553,https://github.com/jkoan,12,https://github.com/navit-gps/navit/pull/553#issuecomment-406890458,"The aim is to allow building with gradle for Android

builds a multi-arch apk in one container on CI in less time than one of the 2 containers now.
can be imported as an Androidstudio project as-is, CI builds the resources as well but there are no provisions to do so locally, for now the fastest way is to grab the resources from an existing apk
gradle/androidstudio is the only tool supported by Google.
tested on CircleCI and win10, will probably work as-is on linux and osX

feel free to comment","The issue about rename not working seems to let gradle fail... The rename should only rename every file to lower case
For early error detection you can add set - e
And currently there's no way to do other than that, but I am working on getting it done inside the gradle build so all extra garbage will be gone.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,553,2018-04-27T19:04:31Z,2018-05-02T19:22:18Z,2018-08-05T00:54:49Z,MERGED,True,473,53,13,https://github.com/jandegr,rework:android:Move build system from ant to gradle,33,[],https://github.com/navit-gps/navit/pull/553,https://github.com/mvglasow,13,https://github.com/navit-gps/navit/pull/553#issuecomment-406892885,"The aim is to allow building with gradle for Android

builds a multi-arch apk in one container on CI in less time than one of the 2 containers now.
can be imported as an Androidstudio project as-is, CI builds the resources as well but there are no provisions to do so locally, for now the fastest way is to grab the resources from an existing apk
gradle/androidstudio is the only tool supported by Google.
tested on CircleCI and win10, will probably work as-is on linux and osX

feel free to comment","Sounds good, thanks. sudo apt-get install rename turned out to fix the issue, and now at least I'm getting a working build. Now I'm working on a cleanup script…",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,553,2018-04-27T19:04:31Z,2018-05-02T19:22:18Z,2018-08-05T00:54:49Z,MERGED,True,473,53,13,https://github.com/jandegr,rework:android:Move build system from ant to gradle,33,[],https://github.com/navit-gps/navit/pull/553,https://github.com/mvglasow,14,https://github.com/navit-gps/navit/pull/553#issuecomment-406895274,"The aim is to allow building with gradle for Android

builds a multi-arch apk in one container on CI in less time than one of the 2 containers now.
can be imported as an Androidstudio project as-is, CI builds the resources as well but there are no provisions to do so locally, for now the fastest way is to grab the resources from an existing apk
gradle/androidstudio is the only tool supported by Google.
tested on CircleCI and win10, will probably work as-is on linux and osX

feel free to comment","About the errors in components: map/garmin throws the following error:
  FAILED: cd /home/michael/src/navit/navit/android/.externalNativeBuild/cmake/debug/x86/navit/map/garmin && gentypes /home/michael/src/navit/navit/map/garmin/garmintypes.txt /home/michael/src/navit/navit/android/.externalNativeBuild/cmake/debug/x86/navit/map/garmin/g2nbuiltin.h
  /bin/sh: 1: gentypes: not found
  ninja: build stopped: subcommand failed.

vehicle/gpsd complains about not being able to find gps.h, this should probably be disabled on Android",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,553,2018-04-27T19:04:31Z,2018-05-02T19:22:18Z,2018-08-05T00:54:49Z,MERGED,True,473,53,13,https://github.com/jandegr,rework:android:Move build system from ant to gradle,33,[],https://github.com/navit-gps/navit/pull/553,https://github.com/lains,15,https://github.com/navit-gps/navit/pull/553#issuecomment-407150719,"The aim is to allow building with gradle for Android

builds a multi-arch apk in one container on CI in less time than one of the 2 containers now.
can be imported as an Androidstudio project as-is, CI builds the resources as well but there are no provisions to do so locally, for now the fastest way is to grab the resources from an existing apk
gradle/androidstudio is the only tool supported by Google.
tested on CircleCI and win10, will probably work as-is on linux and osX

feel free to comment","@mvglasow, the fix for gps.h (and garmin gentypes) that you mentionned in https://wiki.navit-project.org/index.php/Android_development#With_gradle should probably be submitted as a new pull request that adds the following two lines to CMakeLists.txt as you suggested in the Wiki (BTW thanks for the tip):
set_with_reason(vehicle/gpsd ""Android detected"" FALSE)
set_with_reason(map/garmin ""Android detected"" FALSE)

This way, it will improve the build with gradle when done locally (outside of CircleCI).",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,553,2018-04-27T19:04:31Z,2018-05-02T19:22:18Z,2018-08-05T00:54:49Z,MERGED,True,473,53,13,https://github.com/jandegr,rework:android:Move build system from ant to gradle,33,[],https://github.com/navit-gps/navit/pull/553,https://github.com/mvglasow,16,https://github.com/navit-gps/navit/pull/553#issuecomment-407205788,"The aim is to allow building with gradle for Android

builds a multi-arch apk in one container on CI in less time than one of the 2 containers now.
can be imported as an Androidstudio project as-is, CI builds the resources as well but there are no provisions to do so locally, for now the fastest way is to grab the resources from an existing apk
gradle/androidstudio is the only tool supported by Google.
tested on CircleCI and win10, will probably work as-is on linux and osX

feel free to comment","Agreed for vehicle/gpsd, which we probably don’t need on Android. I’ll add that as soon as I get to it.
As for map/garmin, I’d like some more background knowledge: Currently, the component is enabled or disabled based on whether a library is found. Question—is there an Android port of the library? (Have we supported garmin maps on Android before?) If the answer is that we never had Android support for garmin maps, then I’d agree to simply disable it in the build. Otherwise, the error is a bug in the toolchain which would need to be fixed.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,553,2018-04-27T19:04:31Z,2018-05-02T19:22:18Z,2018-08-05T00:54:49Z,MERGED,True,473,53,13,https://github.com/jandegr,rework:android:Move build system from ant to gradle,33,[],https://github.com/navit-gps/navit/pull/553,https://github.com/jkoan,17,https://github.com/navit-gps/navit/pull/553#issuecomment-407209733,"The aim is to allow building with gradle for Android

builds a multi-arch apk in one container on CI in less time than one of the 2 containers now.
can be imported as an Androidstudio project as-is, CI builds the resources as well but there are no provisions to do so locally, for now the fastest way is to grab the resources from an existing apk
gradle/androidstudio is the only tool supported by Google.
tested on CircleCI and win10, will probably work as-is on linux and osX

feel free to comment","I think we have never enforced the support for it but also never said it's not supported since the map is loaded directly from the file system over the c code.
This is what I got in mind, but I am not totally sure about it. So for Garmin we could repair it or totally drop the support, because I don't know if it's used anymore. OpenStreetMaps are quite good and they are probably the best tested map driver we have.
But for now I think exactly in android it's the best to disable it.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,553,2018-04-27T19:04:31Z,2018-05-02T19:22:18Z,2018-08-05T00:54:49Z,MERGED,True,473,53,13,https://github.com/jandegr,rework:android:Move build system from ant to gradle,33,[],https://github.com/navit-gps/navit/pull/553,https://github.com/mvglasow,18,https://github.com/navit-gps/navit/pull/553#issuecomment-407881081,"The aim is to allow building with gradle for Android

builds a multi-arch apk in one container on CI in less time than one of the 2 containers now.
can be imported as an Androidstudio project as-is, CI builds the resources as well but there are no provisions to do so locally, for now the fastest way is to grab the resources from an existing apk
gradle/androidstudio is the only tool supported by Google.
tested on CircleCI and win10, will probably work as-is on linux and osX

feel free to comment","Added in 9f57fe1 and 0e0b7a5, respectively.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,553,2018-04-27T19:04:31Z,2018-05-02T19:22:18Z,2018-08-05T00:54:49Z,MERGED,True,473,53,13,https://github.com/jandegr,rework:android:Move build system from ant to gradle,33,[],https://github.com/navit-gps/navit/pull/553,https://github.com/mvglasow,19,https://github.com/navit-gps/navit/pull/553#issuecomment-410487334,"The aim is to allow building with gradle for Android

builds a multi-arch apk in one container on CI in less time than one of the 2 containers now.
can be imported as an Androidstudio project as-is, CI builds the resources as well but there are no provisions to do so locally, for now the fastest way is to grab the resources from an existing apk
gradle/androidstudio is the only tool supported by Google.
tested on CircleCI and win10, will probably work as-is on linux and osX

feel free to comment","As for the build script, I had to modify the saxonb-xslt calls by adding -strip:none. Without it, it would mangle the XML files, stripping a bunch of whitespace characters in various places. The man page states that not stripping whitespace is default behavior, but that doesn’t seem to be the case everywhere. Adding the command line switch fixed this for me.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,554,2018-04-27T19:36:03Z,2018-04-27T19:52:47Z,2018-04-27T23:29:14Z,MERGED,True,2,2,2,https://github.com/jandegr,CI xxsmal cleanup,2,[],https://github.com/navit-gps/navit/pull/554,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/554,"I suppose we don't need both imagemagick and librsvg2-bin for the liunx build,
changed to librsvg2-bin for all.","I suppose we don't need both imagemagick and librsvg2-bin for the liunx build,
changed to librsvg2-bin for all.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,555,2018-04-28T03:41:35Z,2018-07-12T06:42:02Z,2019-04-18T21:53:10Z,CLOSED,False,9,2,1,https://github.com/pgrandin,Coverity in pr,3,[],https://github.com/navit-gps/navit/pull/555,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/555,Testing ideas to integrate coverity scans with the pull requests.,Testing ideas to integrate coverity scans with the pull requests.,True,{'HEART': ['https://github.com/lains']}
navit-gps/navit,https://github.com/navit-gps/navit,555,2018-04-28T03:41:35Z,2018-07-12T06:42:02Z,2019-04-18T21:53:10Z,CLOSED,False,9,2,1,https://github.com/pgrandin,Coverity in pr,3,[],https://github.com/navit-gps/navit/pull/555,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/555#issuecomment-385137252,Testing ideas to integrate coverity scans with the pull requests.,"Bummer, doesn't work as expected. The checks ran when i pushed the commits to the branch, and the PR isn't triggering a new build, so $CIRCLE_PR_NUMBER is never set.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,555,2018-04-28T03:41:35Z,2018-07-12T06:42:02Z,2019-04-18T21:53:10Z,CLOSED,False,9,2,1,https://github.com/pgrandin,Coverity in pr,3,[],https://github.com/navit-gps/navit/pull/555,https://github.com/jkoan,3,https://github.com/navit-gps/navit/pull/555#issuecomment-385143677,Testing ideas to integrate coverity scans with the pull requests.,I think the CIRCLE_PR_NUMBER is only raised when a new PR is made (not tested),True,{}
navit-gps/navit,https://github.com/navit-gps/navit,555,2018-04-28T03:41:35Z,2018-07-12T06:42:02Z,2019-04-18T21:53:10Z,CLOSED,False,9,2,1,https://github.com/pgrandin,Coverity in pr,3,[],https://github.com/navit-gps/navit/pull/555,https://github.com/jkoan,4,https://github.com/navit-gps/navit/pull/555#issuecomment-394140121,Testing ideas to integrate coverity scans with the pull requests.,"Still relevant?
I tested some time ago that the Variable is only set when the PR is not from the same repo",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,557,2018-04-29T22:00:30Z,2018-05-01T02:34:04Z,2018-05-01T04:34:46Z,MERGED,True,130,100,78,https://github.com/charlescurley,Display imperial (feet) in the Points of Interest (POI) window.,3,[],https://github.com/navit-gps/navit/pull/557,https://github.com/charlescurley,1,https://github.com/navit-gps/navit/pull/557,"Changed the translation string for ""Distance(m)"" from """" to ""Distance"". Rational: the ""m"" is ambiguous, it could be meters or miles. However, in the POI context, feet are more likely than miles. So take it out entirely. I did it this way rather than run sed on the entire collection of po input files.


The display code sorts the entries by distance. It has no way of knowing if ""5"" is five miles or five feet. So we leave the distances in feet or meters (depending on the setting for imperial). Allowing kilometers or miles might be a future enhancement.


See bug 556 (#556). Rather than remove the spurious one as part of this fix, I will leave that to later. But both now have the same English ""translation"", ""Select a search radius from screen center"". This hides the problem, at least from English users. This affects all four en_*.po.in files.


Someone who knows more than I do about the translation strings might have a better idea. Particularly, is there a graceful way to indicate the input units, either miles or kilometers?
modified:   navit/gui/gtk/gui_gtk_poi.c
modified:   po/en.po.in
modified:   po/en_AU.po.in
modified:   po/en_CA.po.in
modified:   po/en_GB.po.in


Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://wiki.navit-project.org/index.php/Commit_guidelines
and that your code is compliant with out coding style guidelines:
https://wiki.navit-project.org/index.php/Programming_guidelines","Changed the translation string for ""Distance(m)"" from """" to ""Distance"". Rational: the ""m"" is ambiguous, it could be meters or miles. However, in the POI context, feet are more likely than miles. So take it out entirely. I did it this way rather than run sed on the entire collection of po input files.


The display code sorts the entries by distance. It has no way of knowing if ""5"" is five miles or five feet. So we leave the distances in feet or meters (depending on the setting for imperial). Allowing kilometers or miles might be a future enhancement.


See bug 556 (#556). Rather than remove the spurious one as part of this fix, I will leave that to later. But both now have the same English ""translation"", ""Select a search radius from screen center"". This hides the problem, at least from English users. This affects all four en_*.po.in files.


Someone who knows more than I do about the translation strings might have a better idea. Particularly, is there a graceful way to indicate the input units, either miles or kilometers?
modified:   navit/gui/gtk/gui_gtk_poi.c
modified:   po/en.po.in
modified:   po/en_AU.po.in
modified:   po/en_CA.po.in
modified:   po/en_GB.po.in


Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://wiki.navit-project.org/index.php/Commit_guidelines
and that your code is compliant with out coding style guidelines:
https://wiki.navit-project.org/index.php/Programming_guidelines",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,557,2018-04-29T22:00:30Z,2018-05-01T02:34:04Z,2018-05-01T04:34:46Z,MERGED,True,130,100,78,https://github.com/charlescurley,Display imperial (feet) in the Points of Interest (POI) window.,3,[],https://github.com/navit-gps/navit/pull/557,https://github.com/charlescurley,2,https://github.com/navit-gps/navit/pull/557#issuecomment-385485093,"Changed the translation string for ""Distance(m)"" from """" to ""Distance"". Rational: the ""m"" is ambiguous, it could be meters or miles. However, in the POI context, feet are more likely than miles. So take it out entirely. I did it this way rather than run sed on the entire collection of po input files.


The display code sorts the entries by distance. It has no way of knowing if ""5"" is five miles or five feet. So we leave the distances in feet or meters (depending on the setting for imperial). Allowing kilometers or miles might be a future enhancement.


See bug 556 (#556). Rather than remove the spurious one as part of this fix, I will leave that to later. But both now have the same English ""translation"", ""Select a search radius from screen center"". This hides the problem, at least from English users. This affects all four en_*.po.in files.


Someone who knows more than I do about the translation strings might have a better idea. Particularly, is there a graceful way to indicate the input units, either miles or kilometers?
modified:   navit/gui/gtk/gui_gtk_poi.c
modified:   po/en.po.in
modified:   po/en_AU.po.in
modified:   po/en_CA.po.in
modified:   po/en_GB.po.in


Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://wiki.navit-project.org/index.php/Commit_guidelines
and that your code is compliant with out coding style guidelines:
https://wiki.navit-project.org/index.php/Programming_guidelines","On Mon, 30 Apr 2018 09:57:59 -0700 Pierre GRANDIN ***@***.***> wrote:
 pgrandin requested changes on this pull request.

 Thanks @charlescurley for this PR.
 I think that we should probably change the source translation, but
 otherwise your change makes sense!
OK. I take it by ""source translation"" you mean the version in the
source that the translation code uses for a look up key. In the po.in
file, the msgid in each stanza.

 > @@ -108,14 +110,27 @@ model_poi (struct gtk_poi_search *search)
  	struct coord coord_item,center;
  	struct pcoord pc;
  	struct mapset_handle *h;
 -	int search_distance_meters,idist;
 +	int search_distance_meters; /* distance to search the POI
 database, in meters, from the center of the screen. */
 +        int idist; /* idist appears to be the distance in meters
 from the center of the screen to a POI. */

 There's a few indentation mismatches in your PR
Hmmm, looks like a tabs/spaces issue. The coding style says use tabs,
eight characters per.
https://wiki.navit-project.org/index.php/Programming_guidelines#Coding_Style

I ran Emacs' tabify function on the file. That should solve the issue.

 > @@ -146,6 +161,21 @@ model_poi (struct gtk_poi_search *search)
  					char direction[5];
  					gtk_list_store_append(search->store_poi,
 &iter);
 get_compass_direction(direction,transform_get_angle_delta(&center,&coord_item,0),1);
 +
 +                                        /* If the user has selected

 This comment probably doesn't need to be broken down so much.
 We should up the line limit to probably 120 or so?
OK. See how this works. I used emacs' c-comment-edit tool, then
indented as needed.

I'll play around with its setup to see if I can automate it.

 > @@ -1670,7 +1670,7 @@ msgid ""Shopping""
  msgstr """"

  msgid ""Distance from screen center (km)""
 -msgstr """"
 +msgstr ""Select a search radius from screen center""

 I think that it would be better to change the source translation.

Pending answer to question above.
…
-- 
""When we talk of civilization, we are too apt to limit the meaning of
the word to its mere embellishments, such as arts and sciences; but
the true distinction between it and barbarism is, that the one
presents a state of society under the protection of just and
well-administered law, and the other is left to the chance government
of brute force.""
- The Rev. James White, Eighteen Christian Centuries, 1889
Key fingerprint = CE5C 6645 A45A 64E4 94C0  809C FFF6 4C48 4ECD DFDB
http://www.charlescurley.com",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,557,2018-04-29T22:00:30Z,2018-05-01T02:34:04Z,2018-05-01T04:34:46Z,MERGED,True,130,100,78,https://github.com/charlescurley,Display imperial (feet) in the Points of Interest (POI) window.,3,[],https://github.com/navit-gps/navit/pull/557,https://github.com/pgrandin,3,https://github.com/navit-gps/navit/pull/557#issuecomment-385509246,"Changed the translation string for ""Distance(m)"" from """" to ""Distance"". Rational: the ""m"" is ambiguous, it could be meters or miles. However, in the POI context, feet are more likely than miles. So take it out entirely. I did it this way rather than run sed on the entire collection of po input files.


The display code sorts the entries by distance. It has no way of knowing if ""5"" is five miles or five feet. So we leave the distances in feet or meters (depending on the setting for imperial). Allowing kilometers or miles might be a future enhancement.


See bug 556 (#556). Rather than remove the spurious one as part of this fix, I will leave that to later. But both now have the same English ""translation"", ""Select a search radius from screen center"". This hides the problem, at least from English users. This affects all four en_*.po.in files.


Someone who knows more than I do about the translation strings might have a better idea. Particularly, is there a graceful way to indicate the input units, either miles or kilometers?
modified:   navit/gui/gtk/gui_gtk_poi.c
modified:   po/en.po.in
modified:   po/en_AU.po.in
modified:   po/en_CA.po.in
modified:   po/en_GB.po.in


Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://wiki.navit-project.org/index.php/Commit_guidelines
and that your code is compliant with out coding style guidelines:
https://wiki.navit-project.org/index.php/Programming_guidelines","OK. I take it by ""source translation"" you mean the version in the source that the translation code uses for a look up key. In the po.in file, the msgid in each stanza.

Yep : https://github.com/navit-gps/navit/blob/trunk/navit/gui/gtk/gui_gtk_poi.c#L122
We don't want to do this kind of changes lightly as it'll invalidate all the relevant translations in all languages, but for this one it makes sense. The (km) part shouldn't be hardcoded here.
Thanks for reformatting the file, it looks good now!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,557,2018-04-29T22:00:30Z,2018-05-01T02:34:04Z,2018-05-01T04:34:46Z,MERGED,True,130,100,78,https://github.com/charlescurley,Display imperial (feet) in the Points of Interest (POI) window.,3,[],https://github.com/navit-gps/navit/pull/557,https://github.com/charlescurley,4,https://github.com/navit-gps/navit/pull/557#issuecomment-385545531,"Changed the translation string for ""Distance(m)"" from """" to ""Distance"". Rational: the ""m"" is ambiguous, it could be meters or miles. However, in the POI context, feet are more likely than miles. So take it out entirely. I did it this way rather than run sed on the entire collection of po input files.


The display code sorts the entries by distance. It has no way of knowing if ""5"" is five miles or five feet. So we leave the distances in feet or meters (depending on the setting for imperial). Allowing kilometers or miles might be a future enhancement.


See bug 556 (#556). Rather than remove the spurious one as part of this fix, I will leave that to later. But both now have the same English ""translation"", ""Select a search radius from screen center"". This hides the problem, at least from English users. This affects all four en_*.po.in files.


Someone who knows more than I do about the translation strings might have a better idea. Particularly, is there a graceful way to indicate the input units, either miles or kilometers?
modified:   navit/gui/gtk/gui_gtk_poi.c
modified:   po/en.po.in
modified:   po/en_AU.po.in
modified:   po/en_CA.po.in
modified:   po/en_GB.po.in


Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://wiki.navit-project.org/index.php/Commit_guidelines
and that your code is compliant with out coding style guidelines:
https://wiki.navit-project.org/index.php/Programming_guidelines","On Mon, 30 Apr 2018 12:51:45 -0700 Pierre GRANDIN ***@***.***> wrote:
 Yep :
 https://github.com/navit-gps/navit/blob/trunk/navit/gui/gtk/gui_gtk_poi.c#L122
 We don't want to do this kind of changes lightly as it'll invalidate
 all the relevant translations in all languages, but for this one it
 makes sense. The `(km)` part shouldn't be hardcoded here.
Done. I also took out ' (km)' where I saw it in the translated string
(msgstr). And where I had already provided a ""translation"" I reduced
that to an empty string.

Future enhancement: provide either 'km' or 'miles' as appropriate
after this string. Will that require a translation string?
…
-- 
""When we talk of civilization, we are too apt to limit the meaning of
the word to its mere embellishments, such as arts and sciences; but
the true distinction between it and barbarism is, that the one
presents a state of society under the protection of just and
well-administered law, and the other is left to the chance government
of brute force.""
- The Rev. James White, Eighteen Christian Centuries, 1889
Key fingerprint = CE5C 6645 A45A 64E4 94C0  809C FFF6 4C48 4ECD DFDB
http://www.charlescurley.com",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,557,2018-04-29T22:00:30Z,2018-05-01T02:34:04Z,2018-05-01T04:34:46Z,MERGED,True,130,100,78,https://github.com/charlescurley,Display imperial (feet) in the Points of Interest (POI) window.,3,[],https://github.com/navit-gps/navit/pull/557,https://github.com/pgrandin,5,https://github.com/navit-gps/navit/pull/557#issuecomment-385585212,"Changed the translation string for ""Distance(m)"" from """" to ""Distance"". Rational: the ""m"" is ambiguous, it could be meters or miles. However, in the POI context, feet are more likely than miles. So take it out entirely. I did it this way rather than run sed on the entire collection of po input files.


The display code sorts the entries by distance. It has no way of knowing if ""5"" is five miles or five feet. So we leave the distances in feet or meters (depending on the setting for imperial). Allowing kilometers or miles might be a future enhancement.


See bug 556 (#556). Rather than remove the spurious one as part of this fix, I will leave that to later. But both now have the same English ""translation"", ""Select a search radius from screen center"". This hides the problem, at least from English users. This affects all four en_*.po.in files.


Someone who knows more than I do about the translation strings might have a better idea. Particularly, is there a graceful way to indicate the input units, either miles or kilometers?
modified:   navit/gui/gtk/gui_gtk_poi.c
modified:   po/en.po.in
modified:   po/en_AU.po.in
modified:   po/en_CA.po.in
modified:   po/en_GB.po.in


Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://wiki.navit-project.org/index.php/Commit_guidelines
and that your code is compliant with out coding style guidelines:
https://wiki.navit-project.org/index.php/Programming_guidelines","Future enhancement: provide either 'km' or 'miles' as appropriate after this string. Will that require a translation string?

It will. Depending on the sentence complexity, we can either 1) provide two sentences, one for each unit, or 2) programmatically build the sentence (as we do for navigation).
(1) will yield better translations (as there's less possibilities, especially concerning plurals) but (2) is more powerful. We'll have to decide depending on the exact change.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,557,2018-04-29T22:00:30Z,2018-05-01T02:34:04Z,2018-05-01T04:34:46Z,MERGED,True,130,100,78,https://github.com/charlescurley,Display imperial (feet) in the Points of Interest (POI) window.,3,[],https://github.com/navit-gps/navit/pull/557,https://github.com/charlescurley,6,https://github.com/navit-gps/navit/pull/557#issuecomment-385597150,"Changed the translation string for ""Distance(m)"" from """" to ""Distance"". Rational: the ""m"" is ambiguous, it could be meters or miles. However, in the POI context, feet are more likely than miles. So take it out entirely. I did it this way rather than run sed on the entire collection of po input files.


The display code sorts the entries by distance. It has no way of knowing if ""5"" is five miles or five feet. So we leave the distances in feet or meters (depending on the setting for imperial). Allowing kilometers or miles might be a future enhancement.


See bug 556 (#556). Rather than remove the spurious one as part of this fix, I will leave that to later. But both now have the same English ""translation"", ""Select a search radius from screen center"". This hides the problem, at least from English users. This affects all four en_*.po.in files.


Someone who knows more than I do about the translation strings might have a better idea. Particularly, is there a graceful way to indicate the input units, either miles or kilometers?
modified:   navit/gui/gtk/gui_gtk_poi.c
modified:   po/en.po.in
modified:   po/en_AU.po.in
modified:   po/en_CA.po.in
modified:   po/en_GB.po.in


Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://wiki.navit-project.org/index.php/Commit_guidelines
and that your code is compliant with out coding style guidelines:
https://wiki.navit-project.org/index.php/Programming_guidelines","On Mon, 30 Apr 2018 19:35:58 -0700 Pierre GRANDIN ***@***.***> wrote:
 It will. Depending on the sentence complexity, we can either 1)
 provide two sentences, one for each unit, or 2) programmatically
 build the sentence (as we do for navigation).

 1) will yield better translations (as there's less possibilities,
 especially concerning plurals) but 2) is more powerful. We'll have to
 decide depending on the exact change.
That sounds to me like a question for the translators. I defer to their
expertise.
…
-- 
""When we talk of civilization, we are too apt to limit the meaning of
the word to its mere embellishments, such as arts and sciences; but
the true distinction between it and barbarism is, that the one
presents a state of society under the protection of just and
well-administered law, and the other is left to the chance government
of brute force.""
- The Rev. James White, Eighteen Christian Centuries, 1889
Key fingerprint = CE5C 6645 A45A 64E4 94C0  809C FFF6 4C48 4ECD DFDB
https://charlescurley.com",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,558,2018-04-30T05:08:50Z,2018-04-30T16:05:20Z,2018-04-30T16:05:22Z,MERGED,True,1,680,21,https://github.com/aerostitch,cleanup:global:Cleanup some unreachable code,2,['cleanup'],https://github.com/navit-gps/navit/pull/558,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/558,"This PR removes some sections of code unreachable because in a:
#if 0
...
#endif
block.
Note that I didn't remove the blocks that were having complete functions or the ones that seemed to be notes for later improvements.","This PR removes some sections of code unreachable because in a:
#if 0
...
#endif
block.
Note that I didn't remove the blocks that were having complete functions or the ones that seemed to be notes for later improvements.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,558,2018-04-30T05:08:50Z,2018-04-30T16:05:20Z,2018-04-30T16:05:22Z,MERGED,True,1,680,21,https://github.com/aerostitch,cleanup:global:Cleanup some unreachable code,2,['cleanup'],https://github.com/navit-gps/navit/pull/558,https://github.com/aerostitch,2,https://github.com/navit-gps/navit/pull/558#issuecomment-385445490,"This PR removes some sections of code unreachable because in a:
#if 0
...
#endif
block.
Note that I didn't remove the blocks that were having complete functions or the ones that seemed to be notes for later improvements.","Awesome, thanks for the fix! ;)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,1,https://github.com/navit-gps/navit/pull/559,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/559#issuecomment-385461656,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","Keeping a monolithic xml file vs splitting it into subfiles has always been a hot topic.
There's actually a compelling use case to split it : on some devices it looks like our current 360Kb xml file is making the device run out of memory. We've noticed that last week on DXOS's wince device. Removing unused routing profiles and layouts to shrink the file to ~60Kb fixed that issue.
That being said I'd like to get @sleske and @mdankov 's comments on this.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/jandegr,3,https://github.com/navit-gps/navit/pull/559#issuecomment-385463186,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","Hi,
XML certainly needs to be worked on but I have a few questions
Why are the layoutnames hardcoded in navit.java ? Up to now they were retreived from xml, any graphics artist could work on the layouts without hardcoding.
Furthermore I have the impression this PR does a lot more than what the title says but now it is organized as a take all or leave all PR
thx.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,4,https://github.com/navit-gps/navit/pull/559#issuecomment-385470605,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","Hi @jandegr.

Furthermore I have the impression this PR does a lot more than what the title says but now it is organized as a take all or leave all PR

Most of the changes are actually linked to the split of navit.xml in separate files.
Maybe the changes in navit/xmlconfig.c are not stricly needed because I only needed it initially when I did not set NAVIT_ACTIVECONFDIR and only had layout files location relative to the navit.xml.
I thought anyway I would keep it because have relative path in xi:include expanded to the parent's directory seems logical to me (rather than to be relative to the cwd of the process as it seems it is the case without this change).

Why are the layoutnames hardcoded in navit.java ? Up to now they were retreived from xml, any graphics artist could work on the layouts without hardcoding

I agree, hardcoding layout files in the Java code is not that great. In order to get rid of this, it requires being able to browse the content of the package from the Java...
It seems it cannot be done when data is stored in res/raw, but only when using AssetManager. I have to say I started to have a look, but this seemed to me even more work...
However, if this PR is OK for merge, I think I can implement this so that there is no layout name hardcoded in Java anymore. Just let me know before I start working on this.
To go even further, I would say that it would be better to avoid hardcoding layout names in CMakeLists.txt's variable XMLCFG_ALL_FILE_PREFIXES but rather use a wildcard... I did not go that far either...",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/aerostitch,5,https://github.com/navit-gps/navit/pull/559#issuecomment-385754641,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","For a broader reviews of the current configuration management, you can push notes to https://github.com/navit-gps/navit/projects/7",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,6,https://github.com/navit-gps/navit/pull/559#issuecomment-385928972,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","@aerostitch, I'm not sure how I can add or modify the notes at https://github.com/navit-gps/navit/projects/7
One note on:

On compilation we should have the navit xml config generated based on the compilation parameters and the target platform

From what I have seen during my work in this PR, it seems this is already (at least partly) done when appying xslt transformation to navit_shipped.xml templates during build",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,7,https://github.com/navit-gps/navit/pull/559#issuecomment-385942454,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","Let me also explain why there are so many files modified.
Splitting navit.xml in several files means shipping more files, thus the change in CMakeLists.txt
Also, during build, an xlst transformation is applied to navit.xml, I had to update it to be able to also transform navit_layout*.xml, thus the change in android.xslt
It also means extracting more than just the navit.xml file from the archive in Android, thus the change in Navit.java
I tried to reuse the existing xi:include mechanism, but the issue is that includes seem not to be relative to the XML file that use xi:include, but rather to the current working dir of the process, this is why I changed  xmlconfig.c, file.h and file.c
Later on, I thought I would directly go for an absolute path in the xi:include, but this path cannot be hardcoded, as it depends on where navit finds its navit.xml file and this is guessed at runtime.
I thus added a new variable NAVIT_ACTIVECONFDIR (change in main.c), and I need to set it to the correct value before parsing the config (change in start_real.c)
Finally, I did a grep on what points to navit.xml and I found the script itemgra.pl that I updated to be able to parse current navit.xml file or navit.xml that is using xi:include. I also a script called check_itemdef, but it seemed it did the same as itemgra.pl, so I updated only itemgra.pl (check_itemdef would not be able to parse navit.xml files with xi:include)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/aerostitch,8,https://github.com/navit-gps/navit/pull/559#issuecomment-386052540,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","Hi @lains,

I'm not sure how I can add or modify

You probably need to be in the org for that.

From what I have seen during my work in this PR, it seems this is already (at least partly) done when appying xslt transformation to navit_shipped.xml templates during build

Yes, but we don't do it for every parameters, for example on wince we still have <graphics type=""gtk_drawing_area""/> which is not really adapted for win*-based configurations.
For the rest, I'll leave it to people with stronger experience in that code.
Thanks,
Joseph",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,9,https://github.com/navit-gps/navit/pull/559#issuecomment-386505967,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","I'm wondering if it could be easier to use some templating engine like jinja (or literally anything else) to generate a minimal navit.xml based on the configuration options on the build or even at install time for some platforms.
I guess that if we split the xml we would generate a zip or tarball with all the config files to be able to distribute it the same way we do today.
Another way to do would be to have:

a configuration manager (that you would contact via RPC or shared memory calls or whatever you think is the most appropriate when you need to be able to call it from both C and Java) that would have sane defaults based on your platform & current compilation options
a little program that would generate the xml based on values you choose like a UI that proposes a list of possible fields and the possible values or a textbox with the current defaults.
This way navit.xml would only contain stuffs that the user himself really wants customized (either via the xml config generator or via the program options), which would decrease greatly its size. I think a lot of user rarely touch the xml manually.


I like a lot the second option.
This way, the user selects custom options for his/her needs, the rest remains inherited from the shipped config.
Maybe xslt could be used there again, to store only diffs with navit.xml, but this means shipping the xslt processor on the target to reapply user-defined changes at runtime after each upgrade of the package...
... or just rework the whole config format to something else than can be parsed a better way, but this would be much more work.
The initial scope of my PR was much more humble to be honest.
It was a first step in the way to make the main xml lighter so that it is less scary and can be edited a bit better.
Most of the lines counts in navit.xml consists of layouts data... and there are several isolated layouts concatenated, so this was the rationale for deciding that each could fit in its separate file. This makes navit.xml short, and by using xi:include, barely changes the way parsing is done. Also, it allows adding/removing layouts easily.
This was my initial proposal (quick and easy update, backwards compatible for people that would already have a monolithic navit.xml file of their own).
Does someone know if any user edits layout data? If not, then, they would only customise the OSD and a few other parameters in the main navit.xml, and just point to a system-wide folder of shipped layouts for inclusion.
In that case, maybe I need to add another variable called NAVIT_DEFAULTCONFDIR that points to the default layout folder, this way, it is only necessary to copy navit.xml in the user folder, and make adjustments. Maybe copying the shipped navit.xml to a user folder can even be done using a menu in the GUI. The XML editing would then be done using a third party application.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/mvglasow,10,https://github.com/navit-gps/navit/pull/559#issuecomment-386600537,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","I like the idea of separating layouts from the main XML file.
As for hardcoded layout names, yes, we should find a way to eliminate that (I believe hardcoding them would negate the main benefit—being able to just drop in extra layout files).
One question: a bunch of platforms ship a default XML config file, which gets ignored if a user-supplied file is found in a designated location (which differs from platform to platform) or supplied on the command line. How would this mechanism behave with layouts separated into their own files?
In a perfect world:

I could just drop my own layouts into the designated location for them, even if I use the default config XML, and choose between my custom layouts and the default ones
If name collisions are an issue, user-supplied layouts take precedence over default ones
I could customize navit.xml and have an easy way to get the same behavior (e.g. by copying the include stuff from the original XML file)

Would these things work?
About users editing layout data—I am definitely one of them, using a customized layout based on the 0606.at layout (my modifications include scaling it for HDPI and creating a corresponding night layout).",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,11,https://github.com/navit-gps/navit/pull/559#issuecomment-386714078,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","As for hardcoded layout names, yes, we should find a way to eliminate that (I believe hardcoding them would negate the main benefit—being able to just drop in extra layout files).

(1) I'm checking this in the Java code. I think this is feasible. I will commit some more code to handle this.

In a perfect world:
I could just drop my own layouts into the designated location for them, even if I use the default config XML, and choose between my custom layouts and the default ones
If name collisions are an issue, user-supplied layouts take precedence over default ones
I could customize navit.xml and have an easy way to get the same behavior (e.g. by copying the include stuff from the original XML file)
Would these things work?

I am pretty sure there can be a technical solution for this.
My first guess for such a solution would be:
By having the default (shipped) navit.xml include first $NAVIT_DEFAULTCONFDIR/navit_layout_*.xml then $NAVIT_USERCONFDIR/navit_layout_*.xml (and (2) getting navit set the proper directories values in $NAVIT_DEFAULTCONFDIR and $NAVIT_USERCONFDIR).
Let's then say that (3) when the XML is parsed, layouts are taken in the order they come, and a layout with an already existing name overrides a previous definition. I think it should solve the first and second requirement (user-supplied layouts coming after default system ones, they would override them).
Copying the navit.xml file to the user-specific location would still use the default shipped layouts, but copying one or several layout files as well to the user-specific location (and modifying them) would allow to override them.
One could even think of (4) a mechanism to make a layout disappear from the list by adding an empty (but with the same name)  section in the user-specific location.
Does this proposal meet your needs?
If so, then it's a matter of implementing (in the C-code) items (2), (3) and (4) and I think this new behaviour can still be backwards compatible with users that want to keep a monolithic navit.xml as it exists today.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,12,https://github.com/navit-gps/navit/pull/559#issuecomment-386871077,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","In .circleci/config.yml, I saw the following code:
      - run:
          name: Move xml's
          command: |
            cd navit
            saxonb-xslt -s:navit_shipped.xml -xsl:xslt/android.xslt -o:navitldpi.xml OSD_SIZE=1 ICON_SMALL=24 ICON_MEDIUM=32 ICON_BIG=48
            saxonb-xslt -s:navit_shipped.xml -xsl:xslt/android.xslt -o:navitmdpi.xml OSD_SIZE=1.33 ICON_SMALL=32 ICON_MEDIUM=48 ICON_BIG=64
            saxonb-xslt -s:navit_shipped.xml -xsl:xslt/android.xslt -o:navithdpi.xml OSD_SIZE=2 ICON_SMALL=48 ICON_MEDIUM=64 ICON_BIG=96
            saxonb-xslt -s:navit_shipped.xml -xsl:xslt/android.xslt -o:navitxhdpi.xml OSD_SIZE=2.67 ICON_SMALL=64 ICON_MEDIUM=96 ICON_BIG=128
            saxonb-xslt -s:navit_shipped.xml -xsl:xslt/android.xslt -o:navitxxhdpi.xml OSD_SIZE=4 ICON_SMALL=96 ICON_MEDIUM=128 ICON_BIG=192
            saxonb-xslt -s:navit_shipped.xml -xsl:xslt/android.xslt -o:navitxxxhdpi.xml OSD_SIZE=5.33 ICON_SMALL=128 ICON_MEDIUM=192 ICON_BIG=256
            sudo ls -la
            mv *dpi.xml android/res/raw
            cd ../


Does this code take precedence over the xslt processing that is done by cmake?
I guess I need to update this code as well to take new navit*.xml files and their new location for AssetManager.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/jandegr,13,https://github.com/navit-gps/navit/pull/559#issuecomment-386885370,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","Hi,
The code in circleci/config.yml replaces the one in cmakelists when building with Gradle / Ninja generator, as CI now does.
regards,",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/mvglasow,14,https://github.com/navit-gps/navit/pull/559#issuecomment-386892146,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.",@lains Re coexistence of customized vs. built-in layouts and XML vs. layout customization—that sounds good to me.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,15,https://github.com/navit-gps/navit/pull/559#issuecomment-387314594,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","@mvglasow, I have made the changes for:

(1) - commit fb06d02
(3) - commits 4e4396c and 1f54165... actually, it was much easier to implement it the other way around: when two layouts have identical names the first one is used, the following occurrences are discarded.

(2) did not need any change because there were already variables NAVIT_SHAREDIR and NAVIT_USER_DATADIR for this.
(4) could be implemented using an additional enable/disable attribute to the layout tag.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,16,https://github.com/navit-gps/navit/pull/559#issuecomment-388484666,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","OK, so I think most of the code is there.
This should allow backwards compatibility with existing navit.xml, also allow user-defined layouts to override default ones, and layout names are not hardcoded in the Java code anymore (but they need to be listed inside navit/CMakeLists.txt and .circleci/config.yml.
I have also changed the way config .xml files are stored inside the Android package, from res/raw to assets. This allow the android app to browse the list of included files.
For this purpose, a new method extractAsset() has been created. Maybe translation files (*.mo) should also be moved from res/raw to assets since they are the only remaning files that still reside in res/raw. If they are moved as well, then the method extractRes() becomes unused and can be removed.
Please feel free to test, especially with custom layout setups, and to give me any feedback on whether this feature can be useful to the navit project.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,17,https://github.com/navit-gps/navit/pull/559#issuecomment-393056780,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","Update PR to match new indentation guidelines.
This code is not ready for merge though, there are a few changes that is still need to do related one ant:checkstyle error. I have also switched to building Android packages using gradle instead of cmake, so I will need to retest on Android.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,18,https://github.com/navit-gps/navit/pull/559#issuecomment-393755777,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","Build tested successfully, after gradle build, on Android.
CodeFactor is seeing duplicate code between assets/ and res/raw extractions. This would be fixed by moving all translations also to assets as explained above.
Not sure why sanity_check is failing... indentation should have been lined-up with the current trunk.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/pgrandin,19,https://github.com/navit-gps/navit/pull/559#issuecomment-393780322,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","@lains regarding the sanity checks, here's what I see : if you look at the full log output ( https://circleci.com/api/v1.1/project/github/navit-gps/navit/9051/output/103/0?file=true ) towards the end there's some diffs between the code you pushed and the one that has been re-linted.
in gradlew.bat we have some lines terminated with ^M :
diff --git a/gradlew.bat b/gradlew.bat
index aec9973..8a0b282 100644
--- a/gradlew.bat
+++ b/gradlew.bat
@@ -1,90 +1,90 @@
-@if ""%DEBUG%"" == """" @echo off^M
-@rem ##########################################################################^M
-@rem^M
-@rem  Gradle startup script for Windows^M
-@rem^M
-@rem ##########################################################################^M
-^M
[...]

I'm not sure why this one differs:
diff --git a/navit/support/espeak/CMakeLists.txt b/navit/support/espeak/CMakeLists.txt
index 55f461a..efada42 100644
--- a/navit/support/espeak/CMakeLists.txt
+++ b/navit/support/espeak/CMakeLists.txt
@@ -2,8 +2,8 @@
 if(INTERNAL_ESPEAK_COMPLETE)
        set(ESPEAK_LIBRARY_ADDITIONAL speak_lib.c)
 endif()
-supportlib_add_library(support_espeak compiledict.c dictionary.c intonation.c readclause.c setlengths.c
-       numbers.c synth_mbrola.c synthdata.c synthesize.c translate.c tr_languages.c voices.c wavegen.c
+supportlib_add_library(support_espeak compiledict.c dictionary.c intonation.c readclause.c setlengths.c
+       numbers.c synth_mbrola.c synthdata.c synthesize.c translate.c tr_languages.c voices.c wavegen.c
        phonemelist.c klatt.c speak_init.c ${ESPEAK_LIBRARY_ADDITIONAL})

 install(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/espeak-data DESTINATION ${SHARE_DIR} PATTERN "".svn"" EXCLUDE)

Probably a trailing space here?
diff --git a/navit/support/glib/CMakeLists.txt b/navit/support/glib/CMakeLists.txt
index 56d1ae8..d53a0a8 100644
--- a/navit/support/glib/CMakeLists.txt
+++ b/navit/support/glib/CMakeLists.txt
@@ -1,3 +1,3 @@
-supportlib_add_library(support_glib fake.c galiasdef.c gatomic.c gerror.c ghash.c
+supportlib_add_library(support_glib fake.c galiasdef.c gatomic.c gerror.c ghash.c
        glib_init.c glist.c gmem.c gmessages.c gprimes.c gprintf.c gslice.c gslist.c
-       gstrfuncs.c gstring.c gutf8.c gutils.c)
+       gstrfuncs.c gstring.c gutf8.c gutils.c)

Probably a leading space here:
diff --git a/navit/support/wordexp/glob.c b/navit/support/wordexp/glob.c
index fabceb6..f971fd2 100644
--- a/navit/support/wordexp/glob.c
+++ b/navit/support/wordexp/glob.c
@@ -159,7 +159,7 @@ glob_recursive(const char *path1, const char *path2, const char *pattern, int fl
                                }
                        }
                        closedir(dh);
-               }
+               }
        } else {
                glob_recursive(path, fname, next, flags, errfunc, pglob);
        }

Probably a trailing space here:
diff --git a/navit/support/xgetopt/XGetopt.c b/navit/support/xgetopt/XGetopt.c
index 60bc0f4..255fdca 100644
--- a/navit/support/xgetopt/XGetopt.c
+++ b/navit/support/xgetopt/XGetopt.c
@@ -11,7 +11,7 @@
 //     - Added Unicode support
 //
 //     Version 1.1 - 2002 March 10
-//     - Added example to XGetopt.cpp module header
+//     - Added example to XGetopt.cpp module header
 //
 // This software is released into the public domain.
 // You are free to use it in any way you like.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,20,https://github.com/navit-gps/navit/pull/559#issuecomment-394046531,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","@pgrandin
OK I just gave a look.
Issue with navit/support/espeak/CMakeLists.txt is actually also because of trailing spaces, as for almost all other failing checks.
Trailing CR seems no problem to me on a .bat file dedicated to Windows but I understand it's unpractical to have the check handle .bat files differently.
All these fails on sanity_check are on files that I didn't modify, so I guess they should be fixed in a separate PR just not to mix them with the actual intent of this PR.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,21,https://github.com/navit-gps/navit/pull/559#issuecomment-394139734,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.",This PR should also modify ci_sanity_checks.sh to run xmllint on XML layout files in addition to  navit_shipped.xml. See PR #609.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,22,https://github.com/navit-gps/navit/pull/559#issuecomment-396885006,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","@aerostitch, I am not really sure about how to rework ci_sanity_check.sh for the new XML layout files (how to make xmllint undestrand xi:include tags, which, I guess, is preferred over having a new partial dtd for include layout XML files)
For the rest of this PR, test was successful on Android build using gradle.
There could probably be a GUI tool to copy shipped files to the user local directory, so that the user can then edit these files (indeed, it is not trivial at all to do this on Android... it is actually listed in https://wiki.navit-project.org/index.php/Usability#Android_port_specific_issues)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/aerostitch,23,https://github.com/navit-gps/navit/pull/559#issuecomment-397323609,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.",@lains I think we can update the sanity check in a separate PR and focus on your modifications for this PR to avoid confusion.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,24,https://github.com/navit-gps/navit/pull/559#issuecomment-397798313,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","OK, so I keep this PR as is, I think it does the job.
The rest will come in future PRs.
Is it OK for merge?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,25,https://github.com/navit-gps/navit/pull/559#issuecomment-405081377,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","Builds correctly also on WinCE.
Still needs to be tested on WinCE.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/jkoan,26,https://github.com/navit-gps/navit/pull/559#issuecomment-405094557,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.",Tested on WinCE its working nicely :),True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,27,https://github.com/navit-gps/navit/pull/559#issuecomment-405095246,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","This is great news, thanks for the test!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,28,https://github.com/navit-gps/navit/pull/559#issuecomment-405114320,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.",I'm switching this PR back to WIP because I have hardcoded the list of xml files in circleci (again!) and this should be improved,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/mdankov,29,https://github.com/navit-gps/navit/pull/559#issuecomment-405114991,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","Unfortunately, it didn't work for me. I see no layouts besides the ""route"" layout which is shipped in navit.xml
I have a few errors in navit.log:

error:navit:xinclude:Unable to include '\SDMMC\MobileNavigator/$NAVIT_USER_DATADIR/navit_layout_*.xml'
error:support_libc:_stat:no file
error:navit:xinclude:Unable to include '\SDMMC\MobileNavigator/\SDMMC\MobileNavigator/navit_layout_car_dark.xml'
error:support_libc:_stat:no file
error:navit:xinclude:Unable to include '\SDMMC\MobileNavigator/\SDMMC\MobileNavigator/navit_layout_car_simple.xml'
error:support_libc:_stat:no file
error:navit:xinclude:Unable to include '\SDMMC\MobileNavigator/\SDMMC\MobileNavigator/navit_layout_car_android.xml'
error:support_libc:_stat:no file
error:navit:xinclude:Unable to include '\SDMMC\MobileNavigator/\SDMMC\MobileNavigator/navit_layout_car.xml'
error:support_libc:_stat:no file
error:navit:xinclude:Unable to include '\SDMMC\MobileNavigator/\SDMMC\MobileNavigator/navit_layout_bike.xml'
error:support_libc:_stat:no file
error:navit:xinclude:Unable to include '\SDMMC\MobileNavigator/\SDMMC\MobileNavigator/navit_layout_th.xml'

Looks like a xi:include parser problem, it attempts to expand $NAVIT_SHAREDIR twice, or maybe is always prepending navit.exe's folder name. IIRC, there's no 'current working folder' semantics on WinCE, so we may have a workaround which conflicts to xi:include parser.
It's quite surprising @jkoan has reported it to be working well. Maybe he's using a more standard navit base folder name? On my device, I have to put navit into \SDMMC\MobileNavigator\ folder.
Thank you!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/jkoan,30,https://github.com/navit-gps/navit/pull/559#issuecomment-405118281,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","Hi @mdankov,
my navit installation just goes into the /flash storage/navit directory, I got a script which runs on boot where I can configure what Programm to run.
I can give further informations about my deceive and setup tomorrow. But to be short I just unzipped all contents of the artifact zip file from circleci to the flash and it worked perfectly. I also removed some layouts and rebooted to make sure everything goes as expected.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,31,https://github.com/navit-gps/navit/pull/559#issuecomment-405355205,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","I have checked for navit_layout_* hardcoded names, and this is actually also a hardcoded list in navit/CMakeLists.txt.
Maybe this is actually not a bad thing to keep control of exactly which navit_layout_*.xml file is shipped in the package, following the concept of Makefile where you often explicitly have to list files...",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/mdankov,32,https://github.com/navit-gps/navit/pull/559#issuecomment-405366759,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","@lains looks like we have the that function disabled in our own glib copy as we didn't use it yet.

  
    
      navit/navit/support/glib/gutils.c
    
    
         Line 759
      in
      dc8f7f1
    
  
  
    

        
          
           #if NOT_NEEDED_FOR_NAVIT 
        
    
  


Just move that #if  to line 787.",True,{'THUMBS_UP': ['https://github.com/lains']}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,33,https://github.com/navit-gps/navit/pull/559#issuecomment-405374587,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","@mdankov, I have switched to g_path_is_absolute as you suggested. Can you test that this fixes the issue you found on WinCE?
If there are still issues, can you get more logs by adding the following in navit.xml:
<debug name=""navit:xinclude"" dbg_level=""debug""/>
The mix of Windows/UNIX directory separators that you have in your logs worries me however, but we shouldn't see them anymore now that xi:include href absolute path are fixed (and absolute path are what is in this PR's default navit_shipped.xml).
Would you mind also testing this code using relative links in navit_shipped.xml please? (this is to make sure relative links also work on WinCE). I have switched to g_path_get_dirname() in my code, so that may have fixed the potential issue altogether.
In order to test this, you would have to change the xi:include in navit_shipped.xml with the following:
<xi:include href=""navit_layout_*.xml""/>",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/mdankov,34,https://github.com/navit-gps/navit/pull/559#issuecomment-405389240,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","The mix of Windows/UNIX directory separators is not a problem. Windows recognizes both / and \ as separators and allows to mix them in a single path.
Unfortunately, my WinCE device hardware has failed just now. Looks like its screen backlight lamp is dead. So I can't do any tests with it right now, sorry. Will try to fix it later.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,35,https://github.com/navit-gps/navit/pull/559#issuecomment-410451165,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","I have been able to test the code from this PR on a WinCE 4.2 device, It seems the expansion of wildcards and test for relative/absolute paths work so the issue with WinCE is now fixed:
debug:navit:xinclude:At level 0, processing xi:include in document href=""\Storage Card\NAVIT/navit.xml""
debug:navit:xinclude:expanding '$NAVIT_USER_DATADIR/navit_layout_*.xml'
debug:navit:xinclude:1 results
debug:navit:xinclude:converted relative filename='$NAVIT_USER_DATADIR/navit_layout_*.xml' to absolute filename='\Storage Card\NAVIT\$NAVIT_USER_DATADIR/navit_layout_*.xml'
debug:navit:xinclude:result[0]='\Storage Card\NAVIT\$NAVIT_USER_DATADIR/navit_layout_*.xml'
error:support_libc:_stat:no file
error:navit:xinclude:Unable to include '\Storage Card\NAVIT\$NAVIT_USER_DATADIR/navit_layout_*.xml'
debug:navit:xinclude:At level 0, processing xi:include in document href=""\Storage Card\NAVIT/navit.xml""
debug:navit:xinclude:expanding '$NAVIT_SHAREDIR/navit_layout_*.xml'
debug:navit:xinclude:1 results
debug:navit:xinclude:result[0]='\Storage Card\NAVIT/navit_layout_car.xml'
error:navit:layer_set_attr_do:Ignoring reference to unknown layer 'Found items' in layer 'Found items'.

@mdankov, as you said, the mix of both Windows and UNIX-style directory separators is handled properly.
Also, one can see that on my WinCE device, as on yours, NAVIT_USER_DATADIR variable is probably undefined, thus not replaced (first wildcard expansion), but NAVIT_SHAREDIR is expanded as expected.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/mvglasow,36,https://github.com/navit-gps/navit/pull/559#issuecomment-412305452,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","While we’re at it, how about scaling maps for different DPI displays automatically? Currently things look pretty poor on a higher-DPI Android display. I hacked together a script to scale Navit layouts (https://github.com/mvglasow/navit-goodies/tree/master/scripts/mapscaler) a while back, maybe you can use it in some way.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,37,https://github.com/navit-gps/navit/pull/559#issuecomment-419852326,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","Tested after merge and working as expected on Android.
It also worked on my WinCE device. @mdankov, did you manage to get your device working again? If so, can you retest please?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,38,https://github.com/navit-gps/navit/pull/559#issuecomment-419852771,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","Note: the failure on sanity_check is due to:

scripts/ci_sanity_checks.sh: line 57: xmllint: command not found

Can someone check why xmllint is not working anymore on the CI machine image for android?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/hoehnp,39,https://github.com/navit-gps/navit/pull/559#issuecomment-421140381,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.",Has this already been tested on Sailfish OS? I could do this in the weekend.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,40,https://github.com/navit-gps/navit/pull/559#issuecomment-422723560,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","@hoehnp, I don't think anyone has tested this but I am interested in the result. Did you manage to do it?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,41,https://github.com/navit-gps/navit/pull/559#issuecomment-422724338,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","@mvglasow, I saw your comment on scaling maps automatically for high resolution DPI, probably this should be treated in a separate PR though.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,42,https://github.com/navit-gps/navit/pull/559#issuecomment-425722970,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","@hoehnp, did you have any success on testing this feature on Sailfish OS?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/hoehnp,43,https://github.com/navit-gps/navit/pull/559#issuecomment-425746430,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","@lains, i am not aware of any built package of Sailfish OS. As soon as i have a modified one, i can give it a shot.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/metalstrolch,44,https://github.com/navit-gps/navit/pull/559#issuecomment-425831201,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","OK. Building Sailfish the usual way fails with:
[ 19%] Generating navit.xml
Applying sailfish_disable.xslt
Applying sailfish_qt5.xslt
Applying sailfish_osd.xslt
Applying sailfish_cursor.xslt
Applying sailfish_mapset.xslt
Applying sailfish_svg.xslt
Applying sailfish_gui.xslt
Error renaming from ""/tmp/_home_src1_rpmbuild_BUILD_navit-build_navit__navit.xml/navit_shipped.xml.temp"" to ""/home/src1/rpmbuild/BUILD/navit-build/navit//navit.xml"": Invalid cross-device link
make[2]: *** [navit/navit.xml] Error 1
make[1]: *** [navit/CMakeFiles/navit_config_xml.dir/all] Error 2
make: *** [all] Error 2

Don't think this is that Sailfish specific. I think this is because /tmp is on a differrent partition and rename refuses to work then.
this happens on ""plain"" Linux as well (and most probably on other OSs as well). See review for suggested fix.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/hoehnp,45,https://github.com/navit-gps/navit/pull/559#issuecomment-426247209,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","@metalstrolch : should we maybe add building on sailfish using the container by coderus to the common build steps? If you don't mind, I would try this.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/metalstrolch,46,https://github.com/navit-gps/navit/pull/559#issuecomment-426254732,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","Good idea if you manage to get this working. I'm no docker expert, so I never tried.
This would allow us to produce sailfish nightly and release packages the usual way as well.
But would be a good idea to open a separate issue for this.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,47,https://github.com/navit-gps/navit/pull/559#issuecomment-427557193,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","I will do some experiments on this (rework the xslt). This should:

avoid using harcoded /tmp for intermediate xslt files)
allow to remove the xslt processing code from the .circleci/config.yml and just issue a make navit_config_xml instead... this is not perfect though, as I guess this should all be integrated in build.gradle but I'm not very good at gradle config files...",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,48,https://github.com/navit-gps/navit/pull/559#issuecomment-428516919,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","There are indentation issues that a re not strictly related to this code.
I'd rather submit fixes for those in a preliminary PR rather than adding unrelated changes to this PR.
Is there a way to allow build check in circleci even if sanity check fails?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,49,https://github.com/navit-gps/navit/pull/559#issuecomment-431888082,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","Good point on default layout, probably this can be fixed by adding an attribute on layouts with a priority of some kind. Default layout (when no selection has been done by the user) would be the highest value or something like this...
About Sailfish, did you refer to PR #679? Is there anything change to be done here?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/pgrandin,50,https://github.com/navit-gps/navit/pull/559#issuecomment-433212187,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","This default layout change is annoying as it kind of prevents merging this PR. We could maybe rename the car profile to auto or some other name that keeps it first, and implement a proper default layout in a second step. Thoughts?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/jkoan,51,https://github.com/navit-gps/navit/pull/559#issuecomment-433322056,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.",@pgrandin i totaly agree with you. And after that we should finaly merge :),True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,52,https://github.com/navit-gps/navit/pull/559#issuecomment-433656517,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","I updated the name of file layout_car.xml to layout_auto.xml so that it gets picked up first when listing
layout-*.xml files in a directory.
This works as intended and the user is still presented the old layout name because what is displayed in the GUI list is the XML name attribute of the layout tag, which still contains the value ""Car"" in layout_auto.xml
Of course, there is more work to be done there because if I create a new layout called layout_aaa.xml, it will be selected as default layout again.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/mvglasow,53,https://github.com/navit-gps/navit/pull/559#issuecomment-433662426,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","Is there currently no option to set a default layout by name? That would be the cleanest approach IMHO, anything else is a workaround at best.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,54,https://github.com/navit-gps/navit/pull/559#issuecomment-433692480,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","Yes, I agree. This is a workaround for now.
Probably a better approach is something like what I suggested here but this requires more development.
As @pgrandin mentionned here, it's maybe better to first merge this part of the code and work on a cleanup on the default layout in a subsequent PR.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/mvglasow,55,https://github.com/navit-gps/navit/pull/559#issuecomment-433734010,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","We have something similar for vehicle already:

enabled controls whether the vehicle is shown on the map and can be selected as the current one.
active is set to true for the default vehicle. (AFAIK if more then one vehicle is active, the first active vehicle is the default one.)

The same could be implemented for layouts.
Another option would be to store the default layout in the parent (i.e. navit): add a layout or default_layout attribute to it which stores the name of the default layout. (If the attribute is missing or refers to a nonexistent layout, fall back to the first layout in the list).
Considering both, I actually prefer the second one: there is less ambiguity, and more importantly, it keeps this information out of the layout files, making it easier for users to exchange layouts between them.",True,"{'THUMBS_UP': ['https://github.com/jkoan', 'https://github.com/lains']}"
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,56,https://github.com/navit-gps/navit/pull/559#issuecomment-433844890,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","Another option would be to store the default layout in the parent (i.e. navit): add a layout or default_layout attribute to it which stores the name of the default layout. (If the attribute is missing or refers to a nonexistent layout, fall back to the first layout in the list).

I will look into this... it could be quite easy.
I just need to identify the code that selects the default layout.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,57,https://github.com/navit-gps/navit/pull/559#issuecomment-434004978,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","Default layout is set by function navit_add_layout(). Initially, layout_current is NULL, thus the first layout element that is parsed and added to navit's list of layouts will be selected as layout_current.
This is where a more complex logic must be implemented.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/mvglasow,58,https://github.com/navit-gps/navit/pull/559#issuecomment-434105878,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","Either there or after the function returns: Read the to-be-defined attribute, and if it is non-NULL, cycle through the layouts, and if a match is found, set it as the current layout. If no match is found, nothing is touched, so the first layout is the default one.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/pgrandin,59,https://github.com/navit-gps/navit/pull/559#issuecomment-434111237,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","Another option would be to store the default layout in the parent (i.e. navit): add a layout or default_layout attribute to it which stores the name of the default layout. (If the attribute is missing or refers to a nonexistent layout, fall back to the first layout in the list).

exactly how i would have done it.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/pgrandin,60,https://github.com/navit-gps/navit/pull/559#issuecomment-434111708,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","Unless someone objects, I think that we can still merge this PR as-is and work on the default layout mechanism that has been discussed in another PR.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/mvglasow,61,https://github.com/navit-gps/navit/pull/559#issuecomment-434115281,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","My layout is called Android-XXHDPI and thus appears before auto, hence no objection from my part :-) Unless the default layout mechanism turns out to be a real quick addition…",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,62,https://github.com/navit-gps/navit/pull/559#issuecomment-434213596,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","OK, if you give me another 1 or 2 days, I will try to add the default layout mechanism.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,63,https://github.com/navit-gps/navit/pull/559#issuecomment-434430957,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.",Almost done...,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,64,https://github.com/navit-gps/navit/pull/559#issuecomment-434434903,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","I have renamed the navit_layout_auto.xml file into navit_layout_car.xml as initially (and updated the sailfish spec file accordingly).
There is a new default_layout attribute to the  tag in the config file. If a layout name is provided there, and it is valid, then this is the default layout that will be used (instead of the first file found during wildcard expansion of navit_layout_*.xml). Otherwise, the first file will be used, which is then going to be ""bike"".",True,{'THUMBS_UP': ['https://github.com/mvglasow']}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,65,https://github.com/navit-gps/navit/pull/559#issuecomment-434471299,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","The term ""layout"" should maybe be renamed ""map_theme"" (in the code and in the confid) so that it is aligned with the user interface and probably is a bit more self explainatory.
But this is cosmetic change and impacts quite a lot of files, so it is another PR.",True,{'THUMBS_UP': ['https://github.com/mvglasow']}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,66,https://github.com/navit-gps/navit/pull/559#issuecomment-434472205,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.",All changes related to default config selection have been implemented.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/mvglasow,67,https://github.com/navit-gps/navit/pull/559#issuecomment-434580932,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","The term ""layout"" should maybe be renamed ""map_theme"" (in the code and in the confid) so that it is aligned with the user interface and probably is a bit more self explainatory.

As far as I can tell, though, the internal UI currently has “layout” for the map—unless that has changed since I merged the last upstream config. The UI probably needs to be verified as well and updated where needed.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,68,https://github.com/navit-gps/navit/pull/559#issuecomment-434587984,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","As far as I can tell, though, the internal UI currently has “layout” for the map—unless that has changed since I merged the last upstream config. The UI probably needs to be verified as well and updated where needed

You're right, it's only in the french translation that ""layout"" has been translated as ""theme"".",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,69,https://github.com/navit-gps/navit/pull/559#issuecomment-437571574,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.",OK to merge? Terminology change for  tags should be another PR anyway...,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/hoehnp,70,https://github.com/navit-gps/navit/pull/559#issuecomment-437578795,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","@lains: Can you give me a few days. I would put it on my todo list to download the RPM for sailfish and test if the build starts, runs, etc.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,71,https://github.com/navit-gps/navit/pull/559#issuecomment-437655141,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","@hoehnp, sure, I'm very interested in your results for Sailfish as I have no way to test it myself.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/hoehnp,72,https://github.com/navit-gps/navit/pull/559#issuecomment-437713094,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","@lains: Just after installing it starts, however, I only see a full navit.xml in the rpm file. Can you provide me a sample file?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/hoehnp,73,https://github.com/navit-gps/navit/pull/559#issuecomment-438038352,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.","@lains: I corrected the issue. It was a problem caused by me in the circleci config file. I can confirm, that navit starts on Sailfish. Maybe tomorrow, I can download a map and test it on a short distance.",True,{'HOORAY': ['https://github.com/lains']}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/hoehnp,74,https://github.com/navit-gps/navit/pull/559#issuecomment-439630727,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.",@lains: I did further tests. The short distance navigation I did not do yet because of #714. Do you think both things are related?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/pgrandin,75,https://github.com/navit-gps/navit/pull/559#issuecomment-439729529,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.",@hoehnp this PR is quite massive and aside from the issue you mentioned seems ready to me to be merged. We should probably track your issue separately to avoid delaying this PR even more.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,559,2018-04-30T15:16:51Z,2018-11-18T21:59:14Z,2019-01-01T23:00:28Z,MERGED,True,7322,7062,29,https://github.com/lains,Refactoring:Xmlconfig:Moving layout definition in their own .xml file (makes main navit.xml file lighter),118,[],https://github.com/navit-gps/navit/pull/559,https://github.com/lains,76,https://github.com/navit-gps/navit/pull/559#issuecomment-450763466,"Layouts contain quite heavy xml code, and there are many layouts available for navit.
They are all inserted inside the main navit.xml, which makes it hard to edit because of its size, even if changes or customizations by users are very rarely on the layout code.
I have thus moved the layout code away from navit.xml, each layout having its own xml definition file, called navit_layout_*.xml
These files are inserted inside the main navit.xml file by using the already existing xi:include mechanism, this also allow for backwards compatibility (old monolithic navit.xml files are still valid and can be used).
The other advantage for this is that f the user wants to have his/her own customized navit.xml, he/she can still include the shipped layout files, making their xml lighter. This also allow to enable/disable specific layouts easily by including or not each layout file.
It is also easier to perform side-by-side comparison between two layout files.
I have run an auto-indenter on XML files so that they all use tabs for indentation. File size in lines are now:

449 bytes for navit_shipped.xml
1052 bytes for navit_layout_bike_shipped.xml
1338 bytes for navit_layout_car_android_shipped.xml
1725 bytes for navit_layout_car_dark_shipped.xml
2015 bytes for navit_layout_car_shipped.xml
122 bytes for navit_layout_car_simple_shipped.xml
547 bytes for navit_layout_th_shipped.xml

This has been tested and works well on the Android and Linux builds. Test should be done on other platforms, especially the files that are packaged should include the new navit_layout*.xml but I think they all use the xml_config target in the Makefile, and this seems to be common amongst all platforms except Android.
There is maybe some work to do on the NavitConfigurator tool to handle this new type of config file, I haven't checked... however, I have made sure that the sanity tool navit/script/itemgra.pl was updated to handle the standalone layout files.",Wiki pages updated to explain how to set default layout and how layout are split out of navit.xml,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,560,2018-04-30T15:47:53Z,2018-04-30T16:04:47Z,2018-05-01T05:55:40Z,MERGED,True,6,6,1,https://github.com/lains,Fix:debug:Correction on segfault in debug_vprintf() introduced in 221f783e,1,[],https://github.com/navit-gps/navit/pull/560,https://github.com/lains,1,https://github.com/navit-gps/navit/pull/560,"When using the dbg(log_error, ...) function, I now get segfaults.
The bug has been introduced at commit 221f783
g_strconcat's arguments should be a list of pointers, the last has to be NULL.
I have reworked the append so that it does not require a temporary allocation of the format string, but rather adds EOL characters manually.
I changed the hardcoded 4095 to a sizeof() call which is more future-proof in case the buffer size is updated in the future.
I finally, I also force \0 termination of the resulting string (maybe there could be issues if the message is longer than the 4095 bytes of the buffer). Please review this last point as it is maybe not really needed.","When using the dbg(log_error, ...) function, I now get segfaults.
The bug has been introduced at commit 221f783
g_strconcat's arguments should be a list of pointers, the last has to be NULL.
I have reworked the append so that it does not require a temporary allocation of the format string, but rather adds EOL characters manually.
I changed the hardcoded 4095 to a sizeof() call which is more future-proof in case the buffer size is updated in the future.
I finally, I also force \0 termination of the resulting string (maybe there could be issues if the message is longer than the 4095 bytes of the buffer). Please review this last point as it is maybe not really needed.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,560,2018-04-30T15:47:53Z,2018-04-30T16:04:47Z,2018-05-01T05:55:40Z,MERGED,True,6,6,1,https://github.com/lains,Fix:debug:Correction on segfault in debug_vprintf() introduced in 221f783e,1,[],https://github.com/navit-gps/navit/pull/560,https://github.com/lains,2,https://github.com/navit-gps/navit/pull/560#issuecomment-385605081,"When using the dbg(log_error, ...) function, I now get segfaults.
The bug has been introduced at commit 221f783
g_strconcat's arguments should be a list of pointers, the last has to be NULL.
I have reworked the append so that it does not require a temporary allocation of the format string, but rather adds EOL characters manually.
I changed the hardcoded 4095 to a sizeof() call which is more future-proof in case the buffer size is updated in the future.
I finally, I also force \0 termination of the resulting string (maybe there could be issues if the message is longer than the 4095 bytes of the buffer). Please review this last point as it is maybe not really needed.","Actually, there is still an issue with my code... strings might not be NUL terminated when I overwrite with either \r or \n let me try to refactor a bit more and add doxygen comments. I think I can even use only one 4096 buffer instead of two... I will propose a subsequent PR (or shall I commit in the same PR?)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,560,2018-04-30T15:47:53Z,2018-04-30T16:04:47Z,2018-05-01T05:55:40Z,MERGED,True,6,6,1,https://github.com/lains,Fix:debug:Correction on segfault in debug_vprintf() introduced in 221f783e,1,[],https://github.com/navit-gps/navit/pull/560,https://github.com/jkoan,3,https://github.com/navit-gps/navit/pull/560#issuecomment-385605344,"When using the dbg(log_error, ...) function, I now get segfaults.
The bug has been introduced at commit 221f783
g_strconcat's arguments should be a list of pointers, the last has to be NULL.
I have reworked the append so that it does not require a temporary allocation of the format string, but rather adds EOL characters manually.
I changed the hardcoded 4095 to a sizeof() call which is more future-proof in case the buffer size is updated in the future.
I finally, I also force \0 termination of the resulting string (maybe there could be issues if the message is longer than the 4095 bytes of the buffer). Please review this last point as it is maybe not really needed.",As the PR is already merged you need to open a new PR but you can just use the same branche,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,563,2018-04-30T21:21:36Z,2018-05-01T06:30:41Z,2018-05-01T06:30:47Z,MERGED,True,130,174,9,https://github.com/jandegr,refactor:Android,1,[],https://github.com/navit-gps/navit/pull/563,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/563,"Some refactoring for Android

narrow down acces modifiers
remove useless imports
remove unused vars
remove redundant vars
fix som static access issue preventing instanrun

Done with the help of Androidstudio","Some refactoring for Android

narrow down acces modifiers
remove useless imports
remove unused vars
remove redundant vars
fix som static access issue preventing instanrun

Done with the help of Androidstudio",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,564,2018-05-01T15:40:16Z,2018-06-03T16:52:18Z,2018-06-16T08:36:59Z,MERGED,True,113,22,1,https://github.com/lains,Fix:debug:Fix potential unterminated C--string and refactoring debug_vprintf(),13,[],https://github.com/navit-gps/navit/pull/564,https://github.com/lains,1,https://github.com/navit-gps/navit/pull/564,"Following PR #560, when inserting '\r' or '\n', the string may not be NUL terminated.
This fixes this and also reduces the string buffer to only 4096.
I also added doxygen comments and dbg_assert() to protect from unlikely buffer overflow. Buffer overflow on the message itself is directly checked at run time (it is probably the only realistically possible occurrence of buffer overflow).
This should be checked on Windows, especially with timestamps, as I have no environment to test.","Following PR #560, when inserting '\r' or '\n', the string may not be NUL terminated.
This fixes this and also reduces the string buffer to only 4096.
I also added doxygen comments and dbg_assert() to protect from unlikely buffer overflow. Buffer overflow on the message itself is directly checked at run time (it is probably the only realistically possible occurrence of buffer overflow).
This should be checked on Windows, especially with timestamps, as I have no environment to test.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,564,2018-05-01T15:40:16Z,2018-06-03T16:52:18Z,2018-06-16T08:36:59Z,MERGED,True,113,22,1,https://github.com/lains,Fix:debug:Fix potential unterminated C--string and refactoring debug_vprintf(),13,[],https://github.com/navit-gps/navit/pull/564,https://github.com/aerostitch,2,https://github.com/navit-gps/navit/pull/564#issuecomment-386433822,"Following PR #560, when inserting '\r' or '\n', the string may not be NUL terminated.
This fixes this and also reduces the string buffer to only 4096.
I also added doxygen comments and dbg_assert() to protect from unlikely buffer overflow. Buffer overflow on the message itself is directly checked at run time (it is probably the only realistically possible occurrence of buffer overflow).
This should be checked on Windows, especially with timestamps, as I have no environment to test.",The changes look good to me but I'd be more comfortable if a 2nd pair of eyes could double-check.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,564,2018-05-01T15:40:16Z,2018-06-03T16:52:18Z,2018-06-16T08:36:59Z,MERGED,True,113,22,1,https://github.com/lains,Fix:debug:Fix potential unterminated C--string and refactoring debug_vprintf(),13,[],https://github.com/navit-gps/navit/pull/564,https://github.com/charlescurley,3,https://github.com/navit-gps/navit/pull/564#issuecomment-386458700,"Following PR #560, when inserting '\r' or '\n', the string may not be NUL terminated.
This fixes this and also reduces the string buffer to only 4096.
I also added doxygen comments and dbg_assert() to protect from unlikely buffer overflow. Buffer overflow on the message itself is directly checked at run time (it is probably the only realistically possible occurrence of buffer overflow).
This should be checked on Windows, especially with timestamps, as I have no environment to test.","On Thu, 03 May 2018 13:55:36 -0700 Joseph Herlant ***@***.***> wrote:
 The changes look good to me but I'd be more comfortable if a 2nd pair
 of eyes could double-check.

I went to look, but I don't seem able to check out the branch
fix-dbg-segfault. It is not listed as a remote or local branch.
…
-- 
""When we talk of civilization, we are too apt to limit the meaning of
the word to its mere embellishments, such as arts and sciences; but
the true distinction between it and barbarism is, that the one
presents a state of society under the protection of just and
well-administered law, and the other is left to the chance government
of brute force.""
- The Rev. James White, Eighteen Christian Centuries, 1889
Key fingerprint = CE5C 6645 A45A 64E4 94C0  809C FFF6 4C48 4ECD DFDB
http://www.charlescurley.com",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,564,2018-05-01T15:40:16Z,2018-06-03T16:52:18Z,2018-06-16T08:36:59Z,MERGED,True,113,22,1,https://github.com/lains,Fix:debug:Fix potential unterminated C--string and refactoring debug_vprintf(),13,[],https://github.com/navit-gps/navit/pull/564,https://github.com/aerostitch,4,https://github.com/navit-gps/navit/pull/564#issuecomment-386460056,"Following PR #560, when inserting '\r' or '\n', the string may not be NUL terminated.
This fixes this and also reduces the string buffer to only 4096.
I also added doxygen comments and dbg_assert() to protect from unlikely buffer overflow. Buffer overflow on the message itself is directly checked at run time (it is probably the only realistically possible occurrence of buffer overflow).
This should be checked on Windows, especially with timestamps, as I have no environment to test.","@charlescurley it's because the branch comes from a fork.
But you can use https://help.github.com/articles/checking-out-pull-requests-locally/ to check it out tho.
That would be (from your local repo):
git fetch origin pull/564/head:PR_564
git checkout PR_564",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,564,2018-05-01T15:40:16Z,2018-06-03T16:52:18Z,2018-06-16T08:36:59Z,MERGED,True,113,22,1,https://github.com/lains,Fix:debug:Fix potential unterminated C--string and refactoring debug_vprintf(),13,[],https://github.com/navit-gps/navit/pull/564,https://github.com/charlescurley,5,https://github.com/navit-gps/navit/pull/564#issuecomment-386750966,"Following PR #560, when inserting '\r' or '\n', the string may not be NUL terminated.
This fixes this and also reduces the string buffer to only 4096.
I also added doxygen comments and dbg_assert() to protect from unlikely buffer overflow. Buffer overflow on the message itself is directly checked at run time (it is probably the only realistically possible occurrence of buffer overflow).
This should be checked on Windows, especially with timestamps, as I have no environment to test.","On Thu, 03 May 2018 15:49:10 -0700 Joseph Herlant ***@***.***> wrote:
 @charlescurley it's because the branch comes from a fork.
 But you can use
 https://help.github.com/articles/checking-out-pull-requests-locally/
 to check it out tho. That would be: ```
 git fetch origin pull/564/head:PR_564
 git checkout PR_564
Much better, thanks.

A few thoughts...

What an unholy mess of code! Even after lains' work. I probably didn't
get everything.

Library functions have return values for a reason. Either use them or
cast them to void to make it clear you are deliberately not using them.

More specific...



In debug_timestamp, is it necessary for val to be a double float?
Making it an int of some sort will save you all sorts of floating point
maths. E.g.:

val=counter.HighPart * 4294967296.0 + counter.LowPart;

becomes

val=counter.HighPart<<32 + counter.LowPart;

The stickler is whether you can get the precision you need where you
divide val by the frequency.

in debug_vprintf:

The documentation for g-strlcpy says that the return value is the size
of the *attempted* copy, i.e. including any overflows. So you could use
that to check for overflows before going any further.
https://developer.gnome.org/glib/stable/glib-String-Utility-Functions.html#g-strlcpy


Without knowing the code, I am dubious of the value of having a call to
dbg_assert in debug code.


Line 353:
			*end++ = ':';
			len=strlen(message_origin);

NO!!! Some (most? all?) implementations of strlen rely on the string
being null terminated. The first line there steps on what should be a
null terminator. But it does nothing to append a new null terminator.

			*end++ = ':';
                        *end = '\0';
			len=strlen(message_origin);

(I think this is what lains tried to do in commit
831d89e. If so, he missed this one,
which is easy enough to do in this code.)

This is done correctly down at line 359 and elsewhere.

And, rather than calling strlen there, how about simply

                        len++;
…
-- 
""When we talk of civilization, we are too apt to limit the meaning of
the word to its mere embellishments, such as arts and sciences; but
the true distinction between it and barbarism is, that the one
presents a state of society under the protection of just and
well-administered law, and the other is left to the chance government
of brute force.""
- The Rev. James White, Eighteen Christian Centuries, 1889
Key fingerprint = CE5C 6645 A45A 64E4 94C0  809C FFF6 4C48 4ECD DFDB
http://www.charlescurley.com",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,564,2018-05-01T15:40:16Z,2018-06-03T16:52:18Z,2018-06-16T08:36:59Z,MERGED,True,113,22,1,https://github.com/lains,Fix:debug:Fix potential unterminated C--string and refactoring debug_vprintf(),13,[],https://github.com/navit-gps/navit/pull/564,https://github.com/lains,6,https://github.com/navit-gps/navit/pull/564#issuecomment-386805262,"Following PR #560, when inserting '\r' or '\n', the string may not be NUL terminated.
This fixes this and also reduces the string buffer to only 4096.
I also added doxygen comments and dbg_assert() to protect from unlikely buffer overflow. Buffer overflow on the message itself is directly checked at run time (it is probably the only realistically possible occurrence of buffer overflow).
This should be checked on Windows, especially with timestamps, as I have no environment to test.","What an unholy mess of code! Even after lains' work. I probably didn't
get everything.

I agree so much!

In debug_timestamp, is it necessary for val to be a double float?
Making it an int of some sort will save you all sorts of floating point
maths. E.g.:
val=counter.HighPart * 4294967296.0 + counter.LowPart;
becomes
val=counter.HighPart<<32 + counter.LowPart;

I'm not confident in changing this code because I have no way to test under Windows (I actually did a few changes on the Windows-specific code and I don't like to do blind coding, so I'd rather have someone that has a way to compile the Windows version of the code to do the change).

in debug_vprintf:
The documentation for g-strlcpy says that the return value is the size
of the attempted copy, i.e. including any overflows. So you could use
that to check for overflows before going any further.
https://developer.gnome.org/glib/stable/glib-String-Utility-Functions.html#g-strlcpy

Yes, this can be done, sure. It is low risk in my opinion because we are copying a few characters almost at the beginning of a 4096 byte-buffer

Without knowing the code, I am dubious of the value of having a call to
dbg_assert in debug code.
Line 353:
*end++ = ':';
len=strlen(message_origin);
NO!!! Some (most? all?) implementations of strlen rely on the string
being null terminated. The first line there steps on what should be a
null terminator. But it does nothing to append a new null terminator.

Yes, the string contructed at *end is actually not terminated at line 353 but at line 354 strlen() is not applied to this unterminated string but to message_origin which is \0 terminated (at line 315)
*message_origin = '\0';	/* Force string termination of message_origin (last byte of debug_message) */
This is far from obvious though, I agree!
What is not \0 terminated at line 353 is the C-string pointed by debug_message (at the end of which end points at that moment).
But line 356 continues this string a few lines later by using memmove() on end
Line 359 adds a ':' and finally line 360 terminates the string with '\0' as you noticed!

And, rather than calling strlen there, how about simply
                    len++;


Actually, strlen() gets the length of message_origin while using len++ would just take into account the fact we added 1 character to debug_message so it is a different string.
I agree this code is hard to read, mostly because it stores two strings in one char[] buffer, and just to save a bit of space (4kB).",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,564,2018-05-01T15:40:16Z,2018-06-03T16:52:18Z,2018-06-16T08:36:59Z,MERGED,True,113,22,1,https://github.com/lains,Fix:debug:Fix potential unterminated C--string and refactoring debug_vprintf(),13,[],https://github.com/navit-gps/navit/pull/564,https://github.com/charlescurley,7,https://github.com/navit-gps/navit/pull/564#issuecomment-386834146,"Following PR #560, when inserting '\r' or '\n', the string may not be NUL terminated.
This fixes this and also reduces the string buffer to only 4096.
I also added doxygen comments and dbg_assert() to protect from unlikely buffer overflow. Buffer overflow on the message itself is directly checked at run time (it is probably the only realistically possible occurrence of buffer overflow).
This should be checked on Windows, especially with timestamps, as I have no environment to test.","On Sat, 05 May 2018 13:20:15 +0000 (UTC) lains ***@***.***> wrote:
 > In debug_timestamp, is it necessary for val to be a double float?
 > Making it an int of some sort will save you all sorts of floating
 > point maths. E.g.:
 >
 > val=counter.HighPart * 4294967296.0 + counter.LowPart;
 >
 > becomes
 >
 > val=counter.HighPart<<32 + counter.LowPart;

 I'm not confident in changing this code because I have no way to test
 under Windows (I actually did a few changes on the Windows-specific
 code and I don't like to do blind coding, so I'd rather have someone
 that has a way to compile the Windows version of the code to do the
 change).
OK, then leave it alone. If it works, don't fix it.

Which leads to the broader question, do we still have WinCE users and
maintainers?

 > in debug_vprintf:
 >
 > The documentation for g-strlcpy says that the return value is the
 > size of the *attempted* copy, i.e. including any overflows. So you
 > could use that to check for overflows before going any further.
 > https://developer.gnome.org/glib/stable/glib-String-Utility-Functions.html#g-strlcpy

 Yes, this can be done, sure. It is low risk in my opinion because we
 are copying a few characters almost at the beginning of a 4096
 byte-buffer
OK. Your call, then.

 >
 > Line 353:
 > 			*end++ = ':';
 > 			len=strlen(message_origin);
 >
 > NO!!! Some (most? all?) implementations of strlen rely on the string
 > being null terminated. The first line there steps on what should be
 > a null terminator. But it does nothing to append a new null
 > terminator.

 Yes, the string contructed at `*end` is actually not terminated at
 line 353 but at line 354 `strlen()` is not applied to this
 unterminated string but to `message_origin` which is \0 terminated
 (at line 315)

 ` *message_origin = '\0';	/* Force string termination of message_origin (last byte of debug_message) */
 `
 This is far from obvious though, I agree!
OK. I'll take your word for it. Perhaps this is where efficiency should
give way to maintainability. I did not catch the fact that the code is
building two strings up in one buffer. *Shudder!*

<rant>Another example of the utter failure of ""The code is the
documentation"".</rant>

 What is not \0 terminated at line 353 is the C-string pointed by
 `debug_message` (at the end of which `end` points at that
 moment). But line 356 continues this string a few lines later by
 using `memmove()` on `end` Line 359 adds a ':' and finally line 360
 terminates the string with '\0' as you noticed!
OK, fair enough. It's a possible trap for a later maintainer, but let
that go.

 > And, rather than calling strlen there, how about simply
 >
 >                         len++;

 Actually, `strlen()` gets the length of `message_origin` while using
 `len++` would just take into account the fact we added 1 character to
 `debug_message` so it is a different string.

 I agree this code is hard to read, mostly because it stores two
 strings in one char[] buffer, and just to save a bit of space (4kB).
I have no problem saving 4 kB, having worked in environments where 4
kB would have been utter luxury. But, even under WinCE, are we under
that much of a constraint? Would 2 2 kB buffers do the job just as
well, and be easier to understand. Or is that another WinCE ism of
which I have remained cheerfully ignorant?

I'm not sure what the Navit project customs are, but I would document
this in the code.
…
-- 
""When we talk of civilization, we are too apt to limit the meaning of
the word to its mere embellishments, such as arts and sciences; but
the true distinction between it and barbarism is, that the one
presents a state of society under the protection of just and
well-administered law, and the other is left to the chance government
of brute force.""
- The Rev. James White, Eighteen Christian Centuries, 1889
Key fingerprint = CE5C 6645 A45A 64E4 94C0  809C FFF6 4C48 4ECD DFDB
http://www.charlescurley.com",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,564,2018-05-01T15:40:16Z,2018-06-03T16:52:18Z,2018-06-16T08:36:59Z,MERGED,True,113,22,1,https://github.com/lains,Fix:debug:Fix potential unterminated C--string and refactoring debug_vprintf(),13,[],https://github.com/navit-gps/navit/pull/564,https://github.com/lains,8,https://github.com/navit-gps/navit/pull/564#issuecomment-386858421,"Following PR #560, when inserting '\r' or '\n', the string may not be NUL terminated.
This fixes this and also reduces the string buffer to only 4096.
I also added doxygen comments and dbg_assert() to protect from unlikely buffer overflow. Buffer overflow on the message itself is directly checked at run time (it is probably the only realistically possible occurrence of buffer overflow).
This should be checked on Windows, especially with timestamps, as I have no environment to test.","val=counter.HighPart * 4294967296.0 + counter.LowPart;
becomes
val=counter.HighPart<<32 + counter.LowPart;
I'm not confident in changing this code because I have no way to test
under Windows (I actually did a few changes on the Windows-specific
code and I don't like to do blind coding, so I'd rather have someone
that has a way to compile the Windows version of the code to do the
change).

I think it would be a good thing to apply your proposal if it still behaves the intended way.
Is there anybody that can try the Windows build and check that this code is OK (by forcing timestamps on)?

I have no problem saving 4 kB, having worked in environments where 4
kB would have been utter luxury. But, even under WinCE, are we under
that much of a constraint? Would 2 2 kB buffers do the job just as
well, and be easier to understand. Or is that another WinCE ism of
which I have remained cheerfully ignorant?

Good point, shall we really optimize for size and speed when code becomes harded to understand?
This is really the compromise.
To be honest, I just followed the track of the previous code (or at least what I believed it was): optimize for size and speed... and this means avoid strlen, allocs on the heap, and multiplication of buffers.
I added dbg_assert() clauses because it is obvious that, indeed, there are potential memory leaks. However, in my opinion, they could be caused more by a rework on the source code for debug_vprintf(), rather than by misusing calls to dbg().
The only big risk for overflow when calling dbg() is to provide a log message that is too long for the buffer, and this is handled by using vsnprintf()
I really need review of this code by other people just to make sure I didn't mess up.
@charlescurley, did you have any chance to compile and to run step-by-step in a debugger?

I'm not sure what the Navit project customs are, but I would document
this in the code.

Yes, your replies made me understand the code in this function is quite unreadable, so maybe this can be (at least patly) fixed by documenting the code.
Let's see what I can do by adding some verbosity to the code...",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,564,2018-05-01T15:40:16Z,2018-06-03T16:52:18Z,2018-06-16T08:36:59Z,MERGED,True,113,22,1,https://github.com/lains,Fix:debug:Fix potential unterminated C--string and refactoring debug_vprintf(),13,[],https://github.com/navit-gps/navit/pull/564,https://github.com/pgrandin,9,https://github.com/navit-gps/navit/pull/564#issuecomment-387468779,"Following PR #560, when inserting '\r' or '\n', the string may not be NUL terminated.
This fixes this and also reduces the string buffer to only 4096.
I also added doxygen comments and dbg_assert() to protect from unlikely buffer overflow. Buffer overflow on the message itself is directly checked at run time (it is probably the only realistically possible occurrence of buffer overflow).
This should be checked on Windows, especially with timestamps, as I have no environment to test.","Which leads to the broader question, do we still have WinCE users and maintainers?

We still have some users yes.

I'm not sure what the Navit project customs are, but I would document this in the code.

Absolutely.

To be honest, I just followed the track of the previous code (or at least what I believed it was): optimize for size and speed...

Some of this code is over 10 years old, so this kind of optimizations might not be as relevant anymore?
Talking about optimizations, buffer overflows and things like that, we are also using coverity static code analysis. If you guys are interested, I can send you an invite.
It gives us this kind of reports :

(this is from 
  
    
      navit/navit/vehicle/file/vehicle_file.c
    
    
         Line 600
      in
      221f783
    
  
  
    

        
          
           strncpy(priv->fixtime, item[1], sizeof(priv->fixtime)); 
        
    
  

 )",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,564,2018-05-01T15:40:16Z,2018-06-03T16:52:18Z,2018-06-16T08:36:59Z,MERGED,True,113,22,1,https://github.com/lains,Fix:debug:Fix potential unterminated C--string and refactoring debug_vprintf(),13,[],https://github.com/navit-gps/navit/pull/564,https://github.com/charlescurley,10,https://github.com/navit-gps/navit/pull/564#issuecomment-387477738,"Following PR #560, when inserting '\r' or '\n', the string may not be NUL terminated.
This fixes this and also reduces the string buffer to only 4096.
I also added doxygen comments and dbg_assert() to protect from unlikely buffer overflow. Buffer overflow on the message itself is directly checked at run time (it is probably the only realistically possible occurrence of buffer overflow).
This should be checked on Windows, especially with timestamps, as I have no environment to test.","On Tue, 08 May 2018 09:51:42 -0700 Pierre GRANDIN ***@***.***> wrote:
 > Which leads to the broader question, do we still have WinCE users
 > and maintainers?

 We still have some users yes.
OK, then let us continue to support them. But I am not in any position
to do so.

 > I'm not sure what the Navit project customs are, but I would
 > document this in the code.

 Absolutely.
Thank you.

 > To be honest, I just followed the track of the previous code (or at
 > least what I believed it was): optimize for size and speed...

 Some of this code is over 10 years old, so this kind of optimizations
 might not be as relevant anymore?
Under most circumstances, I would agree. But WinCE is no longer an
active product. We have the same resource limitations we had when WinCE
was still an active product. Two considerations that may be more
important:

* Are there better places to put limited time and talent? We are all
  volunteers here, so no-one will say, ""You can't work on that code!""
  But even volunteers should want the most bang for their time/effort
  ""buck"".

* If it works, don't fix it.

 Talking about optimizations, buffer overflows and things like that,
 we are also using coverity static code analysis. If you guys are
 interested, I can send you an invite.

 It gives us this kind of reports :

 ![coverity](https://user-images.githubusercontent.com/701794/39770895-40dfe072-52a5-11e8-98aa-7055446691ee.png)

 (this is from
 https://github.com/navit-gps/navit/blob/221f783ea1caaaab2f5ceadc6b0fb3e720aac3df
 )/navit/vehicle/file/vehicle_file.c#L600 )

Kewl! I am somewhat familiar with it from another project.
http://www.catb.org/gpsd/reliability.html Are we paying for it, or is it
a free account?

My opinion: If we are going to use coverity, we should deal with all of
its complaints properly. That way any new complaint will stand out for
immediate inspection and disposal. Same with compiler warnings.
…
-- 
""When we talk of civilization, we are too apt to limit the meaning of
the word to its mere embellishments, such as arts and sciences; but
the true distinction between it and barbarism is, that the one
presents a state of society under the protection of just and
well-administered law, and the other is left to the chance government
of brute force.""
- The Rev. James White, Eighteen Christian Centuries, 1889
Key fingerprint = CE5C 6645 A45A 64E4 94C0  809C FFF6 4C48 4ECD DFDB
http://www.charlescurley.com",True,{'HEART': ['https://github.com/aerostitch']}
navit-gps/navit,https://github.com/navit-gps/navit,564,2018-05-01T15:40:16Z,2018-06-03T16:52:18Z,2018-06-16T08:36:59Z,MERGED,True,113,22,1,https://github.com/lains,Fix:debug:Fix potential unterminated C--string and refactoring debug_vprintf(),13,[],https://github.com/navit-gps/navit/pull/564,https://github.com/lains,11,https://github.com/navit-gps/navit/pull/564#issuecomment-388485702,"Following PR #560, when inserting '\r' or '\n', the string may not be NUL terminated.
This fixes this and also reduces the string buffer to only 4096.
I also added doxygen comments and dbg_assert() to protect from unlikely buffer overflow. Buffer overflow on the message itself is directly checked at run time (it is probably the only realistically possible occurrence of buffer overflow).
This should be checked on Windows, especially with timestamps, as I have no environment to test.","@pgrandin, no problem to participate to the effort of code analysis if I can find enough spare time. Do you have a report that covers the whole code?
I agree with @charlescurley on the fact that once all warnings are covered or marked as irrelevant, any new issue will likely get more review and care, so the big part of the work is the initial analysis.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,564,2018-05-01T15:40:16Z,2018-06-03T16:52:18Z,2018-06-16T08:36:59Z,MERGED,True,113,22,1,https://github.com/lains,Fix:debug:Fix potential unterminated C--string and refactoring debug_vprintf(),13,[],https://github.com/navit-gps/navit/pull/564,https://github.com/pgrandin,12,https://github.com/navit-gps/navit/pull/564#issuecomment-391689752,"Following PR #560, when inserting '\r' or '\n', the string may not be NUL terminated.
This fixes this and also reduces the string buffer to only 4096.
I also added doxygen comments and dbg_assert() to protect from unlikely buffer overflow. Buffer overflow on the message itself is directly checked at run time (it is probably the only realistically possible occurrence of buffer overflow).
This should be checked on Windows, especially with timestamps, as I have no environment to test.","@charlescurley

OK, then let us continue to support them. But I am not in any position to do so.

No problem. This was intended as a ""let's not drop support for it for now"" :)
Regarding Coverity, we have access to their free tier for open source projects. I didn't notice that you also contributed to gpsd, really nice!
@lains unfortunately I am not aware of a way to export the report to publish it somewhere, but if you and/or @charlescurley are interested I can send you an invite to get access to the dashboard. I'll just need your email. I can use the email from your git commits, or maybe stop by on IRC real quick? http://webchat.freenode.net/?channels=navit",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,564,2018-05-01T15:40:16Z,2018-06-03T16:52:18Z,2018-06-16T08:36:59Z,MERGED,True,113,22,1,https://github.com/lains,Fix:debug:Fix potential unterminated C--string and refactoring debug_vprintf(),13,[],https://github.com/navit-gps/navit/pull/564,https://github.com/pgrandin,13,https://github.com/navit-gps/navit/pull/564#issuecomment-391690194,"Following PR #560, when inserting '\r' or '\n', the string may not be NUL terminated.
This fixes this and also reduces the string buffer to only 4096.
I also added doxygen comments and dbg_assert() to protect from unlikely buffer overflow. Buffer overflow on the message itself is directly checked at run time (it is probably the only realistically possible occurrence of buffer overflow).
This should be checked on Windows, especially with timestamps, as I have no environment to test.","My opinion: If we are going to use coverity, we should deal with all of its complaints properly. That way any new complaint will stand out for immediate inspection and disposal. Same with compiler warnings.

Completely agree. We do have some backlogged work there, but if we get more people involved it would be easier to get rid of it. Hopefully soon we will be able to prevent new warnings/errors from reaching trunk. There's no existing integration for Github/Coverity today but we can probably build one ourselves, and get the results in the pull requests.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,564,2018-05-01T15:40:16Z,2018-06-03T16:52:18Z,2018-06-16T08:36:59Z,MERGED,True,113,22,1,https://github.com/lains,Fix:debug:Fix potential unterminated C--string and refactoring debug_vprintf(),13,[],https://github.com/navit-gps/navit/pull/564,https://github.com/aerostitch,14,https://github.com/navit-gps/navit/pull/564#issuecomment-391735221,"Following PR #560, when inserting '\r' or '\n', the string may not be NUL terminated.
This fixes this and also reduces the string buffer to only 4096.
I also added doxygen comments and dbg_assert() to protect from unlikely buffer overflow. Buffer overflow on the message itself is directly checked at run time (it is probably the only realistically possible occurrence of buffer overflow).
This should be checked on Windows, especially with timestamps, as I have no environment to test.","For coverity, it seems they have an api to pull the reports.
It seems there are already some tools like https://github.com/philippegabriel/coverity which could help.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,564,2018-05-01T15:40:16Z,2018-06-03T16:52:18Z,2018-06-16T08:36:59Z,MERGED,True,113,22,1,https://github.com/lains,Fix:debug:Fix potential unterminated C--string and refactoring debug_vprintf(),13,[],https://github.com/navit-gps/navit/pull/564,https://github.com/pgrandin,15,https://github.com/navit-gps/navit/pull/564#issuecomment-391773555,"Following PR #560, when inserting '\r' or '\n', the string may not be NUL terminated.
This fixes this and also reduces the string buffer to only 4096.
I also added doxygen comments and dbg_assert() to protect from unlikely buffer overflow. Buffer overflow on the message itself is directly checked at run time (it is probably the only realistically possible occurrence of buffer overflow).
This should be checked on Windows, especially with timestamps, as I have no environment to test.","For coverity, it seems they have an api to pull the reports.

For the paid version of the product yes. I'm not aware of an endpoint for the version that we use. For paying customers there's also a binary cov-manage-im that allows you to pull reports for example.

It seems there are already some tools like https://github.com/philippegabriel/coverity which could help.

I gave it a shot, but it seems to be quite outdated, and trying to guess the endpoint didn't yield any results.
It would be really, really useful to be able to publish these results.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,564,2018-05-01T15:40:16Z,2018-06-03T16:52:18Z,2018-06-16T08:36:59Z,MERGED,True,113,22,1,https://github.com/lains,Fix:debug:Fix potential unterminated C--string and refactoring debug_vprintf(),13,[],https://github.com/navit-gps/navit/pull/564,https://github.com/aerostitch,16,https://github.com/navit-gps/navit/pull/564#issuecomment-391787255,"Following PR #560, when inserting '\r' or '\n', the string may not be NUL terminated.
This fixes this and also reduces the string buffer to only 4096.
I also added doxygen comments and dbg_assert() to protect from unlikely buffer overflow. Buffer overflow on the message itself is directly checked at run time (it is probably the only realistically possible occurrence of buffer overflow).
This should be checked on Windows, especially with timestamps, as I have no environment to test.","@pgrandin There's a button in the UI to export a view as CSV or XML.
Example of export: https://github.com/aerostitch/navit-attachments/blob/master/20180524_outstanding_defects_coverity.csv",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,564,2018-05-01T15:40:16Z,2018-06-03T16:52:18Z,2018-06-16T08:36:59Z,MERGED,True,113,22,1,https://github.com/lains,Fix:debug:Fix potential unterminated C--string and refactoring debug_vprintf(),13,[],https://github.com/navit-gps/navit/pull/564,https://github.com/lains,17,https://github.com/navit-gps/navit/pull/564#issuecomment-392315414,"Following PR #560, when inserting '\r' or '\n', the string may not be NUL terminated.
This fixes this and also reduces the string buffer to only 4096.
I also added doxygen comments and dbg_assert() to protect from unlikely buffer overflow. Buffer overflow on the message itself is directly checked at run time (it is probably the only realistically possible occurrence of buffer overflow).
This should be checked on Windows, especially with timestamps, as I have no environment to test.","Yes, you can use the email in my commits. Thanks.
…
On 05/24/2018 02:05 PM, Pierre GRANDIN wrote:

 @charlescurley <https://github.com/charlescurley>

     OK, then let us continue to support them. But I am not in any
     position to do so.

 No problem. This was intended as a ""let's not drop support for it for
 now"" :)

 Regarding Coverity, we have access to their free tier for open source
 projects. I didn't notice that you also contributed to gpsd, really nice!

 @lains <https://github.com/lains> unfortunately I am not aware of a
 way to export the report to publish it somewhere, but if you and/or
 @charlescurley <https://github.com/charlescurley> are interested I can
 send you an invite to get access to the dashboard. I'll just need your
 email. I can use the email from your git commits, or maybe stop by on
 IRC real quick? http://webchat.freenode.net/?channels=navit

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#564 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAXaDgTMPmXlUHNQJskeFQAVSxqw9txWks5t1qIXgaJpZM4TuGKk>.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,564,2018-05-01T15:40:16Z,2018-06-03T16:52:18Z,2018-06-16T08:36:59Z,MERGED,True,113,22,1,https://github.com/lains,Fix:debug:Fix potential unterminated C--string and refactoring debug_vprintf(),13,[],https://github.com/navit-gps/navit/pull/564,https://github.com/lains,18,https://github.com/navit-gps/navit/pull/564#issuecomment-393055304,"Following PR #560, when inserting '\r' or '\n', the string may not be NUL terminated.
This fixes this and also reduces the string buffer to only 4096.
I also added doxygen comments and dbg_assert() to protect from unlikely buffer overflow. Buffer overflow on the message itself is directly checked at run time (it is probably the only realistically possible occurrence of buffer overflow).
This should be checked on Windows, especially with timestamps, as I have no environment to test.",I have updated the PR to line-up with the indentation settings proposed in #569.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,564,2018-05-01T15:40:16Z,2018-06-03T16:52:18Z,2018-06-16T08:36:59Z,MERGED,True,113,22,1,https://github.com/lains,Fix:debug:Fix potential unterminated C--string and refactoring debug_vprintf(),13,[],https://github.com/navit-gps/navit/pull/564,https://github.com/mvglasow,19,https://github.com/navit-gps/navit/pull/564#issuecomment-394019861,"Following PR #560, when inserting '\r' or '\n', the string may not be NUL terminated.
This fixes this and also reduces the string buffer to only 4096.
I also added doxygen comments and dbg_assert() to protect from unlikely buffer overflow. Buffer overflow on the message itself is directly checked at run time (it is probably the only realistically possible occurrence of buffer overflow).
This should be checked on Windows, especially with timestamps, as I have no environment to test.","Any chance of this getting merged soon (what would it take for that)? If this is going to take longer, I would propose committing the quick fix I mentioned in my comment to 4231cac (zero out the whole debug_message buffer rather than just its first byte on initialization) so that at least we get clean debug output again.
Right now we’ve had broken debug output for a couple of weeks. Applying the quick fix locally rectifies this but means always having an uncommitted change, which disrupts a couple of git workflows (such as stash, reset, checkout a different branch or merge). Committing it to trunk would alleviate this, and if we decide we don’t want to keep the quick fix in the long run, we can always revert the change upon merging this PR.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,564,2018-05-01T15:40:16Z,2018-06-03T16:52:18Z,2018-06-16T08:36:59Z,MERGED,True,113,22,1,https://github.com/lains,Fix:debug:Fix potential unterminated C--string and refactoring debug_vprintf(),13,[],https://github.com/navit-gps/navit/pull/564,https://github.com/aerostitch,20,https://github.com/navit-gps/navit/pull/564#issuecomment-394042548,"Following PR #560, when inserting '\r' or '\n', the string may not be NUL terminated.
This fixes this and also reduces the string buffer to only 4096.
I also added doxygen comments and dbg_assert() to protect from unlikely buffer overflow. Buffer overflow on the message itself is directly checked at run time (it is probably the only realistically possible occurrence of buffer overflow).
This should be checked on Windows, especially with timestamps, as I have no environment to test.","@mvglasow did you check the code? If you approve it and that @lains can resolve the current conflicts with trunk I'm ok to merge.
I don't think @charlescurley or @pgrandin still have any open remarks on the current code modification proposal right?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,564,2018-05-01T15:40:16Z,2018-06-03T16:52:18Z,2018-06-16T08:36:59Z,MERGED,True,113,22,1,https://github.com/lains,Fix:debug:Fix potential unterminated C--string and refactoring debug_vprintf(),13,[],https://github.com/navit-gps/navit/pull/564,https://github.com/charlescurley,21,https://github.com/navit-gps/navit/pull/564#issuecomment-394048966,"Following PR #560, when inserting '\r' or '\n', the string may not be NUL terminated.
This fixes this and also reduces the string buffer to only 4096.
I also added doxygen comments and dbg_assert() to protect from unlikely buffer overflow. Buffer overflow on the message itself is directly checked at run time (it is probably the only realistically possible occurrence of buffer overflow).
This should be checked on Windows, especially with timestamps, as I have no environment to test.","On Fri, 01 Jun 2018 17:35:47 -0700 Joseph Herlant ***@***.***> wrote:
 I don't think @charlescurley or @pgrandin still have any open remarks
 on the current code modification proposal right?
I do not. Whatever of my comments are worth pursuing should be pursued
in separate PRs. And I leave that to our WinCE maintainers.
…
-- 
""When we talk of civilization, we are too apt to limit the meaning of
the word to its mere embellishments, such as arts and sciences; but
the true distinction between it and barbarism is, that the one
presents a state of society under the protection of just and
well-administered law, and the other is left to the chance government
of brute force.""
- The Rev. James White, Eighteen Christian Centuries, 1889
Key fingerprint = CE5C 6645 A45A 64E4 94C0  809C FFF6 4C48 4ECD DFDB
https://charlescurley.com",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,564,2018-05-01T15:40:16Z,2018-06-03T16:52:18Z,2018-06-16T08:36:59Z,MERGED,True,113,22,1,https://github.com/lains,Fix:debug:Fix potential unterminated C--string and refactoring debug_vprintf(),13,[],https://github.com/navit-gps/navit/pull/564,https://github.com/aerostitch,22,https://github.com/navit-gps/navit/pull/564#issuecomment-394088798,"Following PR #560, when inserting '\r' or '\n', the string may not be NUL terminated.
This fixes this and also reduces the string buffer to only 4096.
I also added doxygen comments and dbg_assert() to protect from unlikely buffer overflow. Buffer overflow on the message itself is directly checked at run time (it is probably the only realistically possible occurrence of buffer overflow).
This should be checked on Windows, especially with timestamps, as I have no environment to test.","@lains can I ask you one last modification so the circleci builds can run please?
You discarded the changes from trunk on debug.c as expected but some changes still need to be done for the style to be respected on this file.
Could you just break the lines longer than 120 chars as shown in this git diff please?
$ git diff
diff --git a/navit/debug.c b/navit/debug.c
index b0daa7db..54ae7a7a 100644
--- a/navit/debug.c
+++ b/navit/debug.c
@@ -409,14 +409,16 @@ void debug_vprintf(dbg_level level, const char *module, const int mlen, const ch
     }
 }
 
-void debug_printf(dbg_level level, const char *module, const int mlen,const char *function, const int flen, int prefix, const char *fmt, ...) {
+void debug_printf(dbg_level level, const char *module, const int mlen,const char *function, const int flen, int prefix,
+                  const char *fmt, ...) {
     va_list ap;
     va_start(ap, fmt);
     debug_vprintf(level, module, mlen, function, flen, prefix, fmt, ap);
     va_end(ap);
 }
 
-void debug_assert_fail(const char *module, const int mlen,const char *function, const int flen, const char *file, int line, const char *expr) {
+void debug_assert_fail(const char *module, const int mlen,const char *function, const int flen, const char *file,
+                       int line, const char *expr) {
     debug_printf(lvl_error,module,mlen,function,flen,1,""%s:%d assertion failed:%s\n"", file, line, expr);
     abort();
 }

It's the last change before merging.
Thanks for your patience,
Joseph",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,564,2018-05-01T15:40:16Z,2018-06-03T16:52:18Z,2018-06-16T08:36:59Z,MERGED,True,113,22,1,https://github.com/lains,Fix:debug:Fix potential unterminated C--string and refactoring debug_vprintf(),13,[],https://github.com/navit-gps/navit/pull/564,https://github.com/lains,23,https://github.com/navit-gps/navit/pull/564#issuecomment-394100865,"Following PR #560, when inserting '\r' or '\n', the string may not be NUL terminated.
This fixes this and also reduces the string buffer to only 4096.
I also added doxygen comments and dbg_assert() to protect from unlikely buffer overflow. Buffer overflow on the message itself is directly checked at run time (it is probably the only realistically possible occurrence of buffer overflow).
This should be checked on Windows, especially with timestamps, as I have no environment to test.","It's OK @aerostitch, I've performed the changes.
Curiously, it didn't show up in the sanity_check output.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,564,2018-05-01T15:40:16Z,2018-06-03T16:52:18Z,2018-06-16T08:36:59Z,MERGED,True,113,22,1,https://github.com/lains,Fix:debug:Fix potential unterminated C--string and refactoring debug_vprintf(),13,[],https://github.com/navit-gps/navit/pull/564,https://github.com/aerostitch,24,https://github.com/navit-gps/navit/pull/564#issuecomment-394111011,"Following PR #560, when inserting '\r' or '\n', the string may not be NUL terminated.
This fixes this and also reduces the string buffer to only 4096.
I also added doxygen comments and dbg_assert() to protect from unlikely buffer overflow. Buffer overflow on the message itself is directly checked at run time (it is probably the only realistically possible occurrence of buffer overflow).
This should be checked on Windows, especially with timestamps, as I have no environment to test.","Give me just a few hours to get #609 merged. It fixes the check on files that come from the merge commits.
Once that's done it won't be failing anymore and you should be good to go.
Thanks for your patience.
Joseph",True,{'HOORAY': ['https://github.com/lains']}
navit-gps/navit,https://github.com/navit-gps/navit,564,2018-05-01T15:40:16Z,2018-06-03T16:52:18Z,2018-06-16T08:36:59Z,MERGED,True,113,22,1,https://github.com/lains,Fix:debug:Fix potential unterminated C--string and refactoring debug_vprintf(),13,[],https://github.com/navit-gps/navit/pull/564,https://github.com/mvglasow,25,https://github.com/navit-gps/navit/pull/564#issuecomment-397388375,"Following PR #560, when inserting '\r' or '\n', the string may not be NUL terminated.
This fixes this and also reduces the string buffer to only 4096.
I also added doxygen comments and dbg_assert() to protect from unlikely buffer overflow. Buffer overflow on the message itself is directly checked at run time (it is probably the only realistically possible occurrence of buffer overflow).
This should be checked on Windows, especially with timestamps, as I have no environment to test.","I realized only today that this has been merged in the meantime, and I can confirm I am now getting clean debug output again. Thanks a lot!",True,{'HEART': ['https://github.com/aerostitch']}
navit-gps/navit,https://github.com/navit-gps/navit,566,2018-05-01T17:48:45Z,2018-05-01T18:23:06Z,2020-08-18T11:56:10Z,MERGED,True,518,468,1,https://github.com/pgrandin,Update:i18n:Updated Spanish translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/566,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/566,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,567,2018-05-01T17:49:32Z,2018-05-01T18:23:21Z,2020-08-18T11:56:11Z,MERGED,True,528,469,1,https://github.com/pgrandin,Update:i18n:Updated German translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/567,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/567,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,568,2018-05-02T02:47:15Z,2018-05-02T17:05:41Z,2018-05-02T17:05:46Z,CLOSED,False,5,0,1,https://github.com/aerostitch,Add:cleanup:Add a config for indent,1,"['build system', 'cleanup']",https://github.com/navit-gps/navit/pull/568,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/568,"This PR adds a config that we would use for indent.
If we all agree on this config I'll:

run indent on all *.c, *.cpp and *.h files.
add a script to the CI that verifies (as a prerequisite to all the builds) that running indent don't modify the (*.c, *.cpp and *.h) files modified by the PR. If it does it will fail.
add a note in the PR template (and maybe in contributing.md)

Would that work for everybody?
I'm totally open to any changes.","This PR adds a config that we would use for indent.
If we all agree on this config I'll:

run indent on all *.c, *.cpp and *.h files.
add a script to the CI that verifies (as a prerequisite to all the builds) that running indent don't modify the (*.c, *.cpp and *.h) files modified by the PR. If it does it will fail.
add a note in the PR template (and maybe in contributing.md)

Would that work for everybody?
I'm totally open to any changes.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,568,2018-05-02T02:47:15Z,2018-05-02T17:05:41Z,2018-05-02T17:05:46Z,CLOSED,False,5,0,1,https://github.com/aerostitch,Add:cleanup:Add a config for indent,1,"['build system', 'cleanup']",https://github.com/navit-gps/navit/pull/568,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/568#issuecomment-385866402,"This PR adds a config that we would use for indent.
If we all agree on this config I'll:

run indent on all *.c, *.cpp and *.h files.
add a script to the CI that verifies (as a prerequisite to all the builds) that running indent don't modify the (*.c, *.cpp and *.h) files modified by the PR. If it does it will fail.
add a note in the PR template (and maybe in contributing.md)

Would that work for everybody?
I'm totally open to any changes.","Thanks for tackling this @aerostitch
Guidelines are defined here : https://wiki.navit-project.org/index.php/Programming_guidelines
The formatting aspect can be summarized by :  indent --procnames-start-lines --k-and-r-style --indent-level 8",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,568,2018-05-02T02:47:15Z,2018-05-02T17:05:41Z,2018-05-02T17:05:46Z,CLOSED,False,5,0,1,https://github.com/aerostitch,Add:cleanup:Add a config for indent,1,"['build system', 'cleanup']",https://github.com/navit-gps/navit/pull/568,https://github.com/aerostitch,3,https://github.com/navit-gps/navit/pull/568#issuecomment-385867000,"This PR adds a config that we would use for indent.
If we all agree on this config I'll:

run indent on all *.c, *.cpp and *.h files.
add a script to the CI that verifies (as a prerequisite to all the builds) that running indent don't modify the (*.c, *.cpp and *.h) files modified by the PR. If it does it will fail.
add a note in the PR template (and maybe in contributing.md)

Would that work for everybody?
I'm totally open to any changes.","Ok, sorry for that.
PR updated.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,568,2018-05-02T02:47:15Z,2018-05-02T17:05:41Z,2018-05-02T17:05:46Z,CLOSED,False,5,0,1,https://github.com/aerostitch,Add:cleanup:Add a config for indent,1,"['build system', 'cleanup']",https://github.com/navit-gps/navit/pull/568,https://github.com/aerostitch,4,https://github.com/navit-gps/navit/pull/568#issuecomment-385888092,"This PR adds a config that we would use for indent.
If we all agree on this config I'll:

run indent on all *.c, *.cpp and *.h files.
add a script to the CI that verifies (as a prerequisite to all the builds) that running indent don't modify the (*.c, *.cpp and *.h) files modified by the PR. If it does it will fail.
add a note in the PR template (and maybe in contributing.md)

Would that work for everybody?
I'm totally open to any changes.",We might just drop this one if we go with astyle.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,568,2018-05-02T02:47:15Z,2018-05-02T17:05:41Z,2018-05-02T17:05:46Z,CLOSED,False,5,0,1,https://github.com/aerostitch,Add:cleanup:Add a config for indent,1,"['build system', 'cleanup']",https://github.com/navit-gps/navit/pull/568,https://github.com/pgrandin,5,https://github.com/navit-gps/navit/pull/568#issuecomment-386036480,"This PR adds a config that we would use for indent.
If we all agree on this config I'll:

run indent on all *.c, *.cpp and *.h files.
add a script to the CI that verifies (as a prerequisite to all the builds) that running indent don't modify the (*.c, *.cpp and *.h) files modified by the PR. If it does it will fail.
add a note in the PR template (and maybe in contributing.md)

Would that work for everybody?
I'm totally open to any changes.",According to what we saw yesterday astyle handles some of our code better. Should we close this one?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,568,2018-05-02T02:47:15Z,2018-05-02T17:05:41Z,2018-05-02T17:05:46Z,CLOSED,False,5,0,1,https://github.com/aerostitch,Add:cleanup:Add a config for indent,1,"['build system', 'cleanup']",https://github.com/navit-gps/navit/pull/568,https://github.com/aerostitch,6,https://github.com/navit-gps/navit/pull/568#issuecomment-386049772,"This PR adds a config that we would use for indent.
If we all agree on this config I'll:

run indent on all *.c, *.cpp and *.h files.
add a script to the CI that verifies (as a prerequisite to all the builds) that running indent don't modify the (*.c, *.cpp and *.h) files modified by the PR. If it does it will fail.
add a note in the PR template (and maybe in contributing.md)

Would that work for everybody?
I'm totally open to any changes.","Yep, probably.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/569,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/aerostitch,2,https://github.com/navit-gps/navit/pull/569#issuecomment-385854876,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""",There's definitely something wrong with the way indent sees ATTR*. I'll have to look into that,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/aerostitch,3,https://github.com/navit-gps/navit/pull/569#issuecomment-385867624,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","Updating the PR with the official style guidelines of navit --procnames-start-lines --k-and-r-style --indent-level 8. Still got the warnings:
$ find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent --procnames-start-lines --k-and-r-style --indent-level 8 {} \; ; find . -iname '*~' -delete
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""

indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""

indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""

indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""

indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""

indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""

indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""

indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""

indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""

indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""

indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""

indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""

indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""

indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""

indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""

indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""

I also still suspect something fishy with navit/attr_def.h",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/pgrandin,4,https://github.com/navit-gps/navit/pull/569#issuecomment-385873902,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""",I think that we should switch to 120 chars now. This will match how Github displays pull requests for example.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/pgrandin,5,https://github.com/navit-gps/navit/pull/569#issuecomment-385873963,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""",./navit/gui/qml/ should probably be dropped soon.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/aerostitch,6,https://github.com/navit-gps/navit/pull/569#issuecomment-385874262,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""",Updated.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/pgrandin,7,https://github.com/navit-gps/navit/pull/569#issuecomment-385880767,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","Actually astyle seems to do a better job at handling attr_def.h and our various #ifdef __cplusplus
astyle --indent=tab=8 --style=kr ...",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/aerostitch,8,https://github.com/navit-gps/navit/pull/569#issuecomment-385885460,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","Updated the PR.
The command to reformat I used is:
find . -type f  \
 \( -not -path './navit/support/*' -a -not -path './navit/fib-1.1/*' \) \
 -a \( -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -o -iname '*.java' \) \
-exec \
 astyle --indent=tab=8 --style=kr -n  --break-return-type-decl --max-code-length=120 {} \;",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/metalstrolch,9,https://github.com/navit-gps/navit/pull/569#issuecomment-385892939,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","While I really like having automatic coding style, there are two major problems with introducing it this hard way:

It will render most of the open branches useless, as none would merge any more probably.
It may break compilation because things like headers requiring a defined include order. This could be avoided by not having a style sorting the includes. For example the qt5 graphics will break if you change the order of the include files. I learned that from using clang-format on those files...",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/pgrandin,10,https://github.com/navit-gps/navit/pull/569#issuecomment-385895514,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","Thanks @metalstrolch ! My 2 cents:

It will render most of the open branches useless, as none would merge any more probably.

True. We do not need to merge the PR right now as @aerostitch is generating the change with a script.
We have 2 possibilities : merge all possible PRs before applying this change (and fix whatever will need to be fixed on the remaining ones) or start a branch like 0.6.0 with this refactoring, that we'll merge later. What are your thoughts?

It may break compilation because things like headers requiring a defined include order. This could be avoided by not having a style sorting the includes. For example the qt5 graphics will break if you change the order of the include files. I learned that from using clang-format on those files...

Yeah, also applying the K&R style on the headers make them look ugly. I agree that we should skip them.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/aerostitch,11,https://github.com/navit-gps/navit/pull/569#issuecomment-385895634,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","Hi @metalstrolch,
To answer your points (which are totally valid):

I can rebase the branches if they are up-to-date in the repo and am able to identify who's working on it (to ping him/her, making sure he/she will pull the branch before pushing any more changes.
for the headers we can either exclude them entirely or have different style options, safer ones. which one do you prefer.

We're currently experimenting with astyle and we'll try to enforce that later on so if you have suggestions, we're totally open to it! :)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/metalstrolch,12,https://github.com/navit-gps/navit/pull/569#issuecomment-385896593,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","No you cannot notify people working on it. I for example had  the qt5 branches locally for almost two years. Nobody knew that. Changing the whole codebase at once will render such works unusable. This may disappoint a lot of people. Of course here we may never be presented the results then.
But maybe the experiments lead to finally fixing our headers so the order shouldn't matter. But that's a different story.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/aerostitch,13,https://github.com/navit-gps/navit/pull/569#issuecomment-385898658,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","My bad I thought you were talking about branches that are currently in the repo.
What are your suggestions then?
The problem with this is that if I touch any file in the repo I might end up annoying someone because he/she would have to rebase/merge their local changes.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/metalstrolch,14,https://github.com/navit-gps/navit/pull/569#issuecomment-385922605,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","It's all about timing then. And it's about giving hints on how to rescue your work.
This should be waged against the benefits from using a tool to ""clean"" the code.
Think of all the snippets floating around like the proposal for multipolygon support posted as a patch to trac long ago.
I still really like the idea (and used clang-format for my work as well).
But all of us should know and think of all the consequences.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/aerostitch,15,https://github.com/navit-gps/navit/pull/569#issuecomment-386043441,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","I can surely wait a week or so and ping @jandegr, @sleske, @mdankov, @jfitie, @jkoan, @pohlinkzei, @hoehnp, @charlescurley, @mvglasow, @xenos1984 and maybe the rest of the @navit-gps/navit team in this issue, so that everybody has time to voice their potential issues there.
Rebasing this PR is really easy for me, it's just a matter of git reset --hard HEAD^ && git pull --all && git merge upstream/trunk before regenerating the cleanup commit with the following (I just updated it to not include the headers file in the reformatting), then I push and it's done, so really no biggy 😃 :
find . -type f  \
 \( -not -path './navit/support/*' -a -not -path './navit/fib-1.1/*' \) \
 -a \( -iname '*.c' -o -iname '*.cpp' -o -iname '*.java' \) \
-exec \
 astyle --indent=tab=8 --style=kr -n  --break-return-type-decl --max-code-length=120 {} \;

Note that after this patch is merged, I'm also totally open to:

get the branches up-to-date myself with latest version as long as people let me know which ones they need (and that they push their branches to the repo so that I can access them). After I'm done they'd just need to pull and it would be all good
integrate the patches in up-to-date branches if people let me know which ones. I can look around in trac and make branches for trac tickets that have a patch if you want. If that can help I'll do it gladly

Note that if pushing directly in branches of the navit-gps/navit repo (and not in a fork), we might want to start to put the name of the person working on it in front of it so that it's easier to ping the right person when doing cleanup or helping on getting them up-to-date. What do you think?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/jandegr,16,https://github.com/navit-gps/navit/pull/569#issuecomment-386053854,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","Hi,
This is not my specialty and lately I've been working almost exclusively on Android code, so this would not interfere with anything for me for now, but why not set a fixed date to when this will move forward ?",True,{'THUMBS_UP': ['https://github.com/aerostitch']}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/pgrandin,17,https://github.com/navit-gps/navit/pull/569#issuecomment-386056077,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","Kudos for the help you're offering here, @aerostitch
👍 🚀",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/aerostitch,18,https://github.com/navit-gps/navit/pull/569#issuecomment-386162781,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""",Let's target a merge on the May the 9th then.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/aerostitch,19,https://github.com/navit-gps/navit/pull/569#issuecomment-386365053,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","So I'd like to add something to remove trailing spaces too but for all the files this time like:
find . -type f \( -not -path './navit/support/*' -a -not -path './navit/fib-1.1/*' -a -not -path './.git/*' \) \
  -a \( -not -iname '*.bat' \) | while read f; do \
   [[ ""$(file -bi $f)"" =~ ^text ]] && sed 's/\s*$//' -i $f; done

git commit -am 'cleanup:cmake:remove trailing spaces'

And maybe also to find an easy way to have consistency between tabs and spaces in CMakelist.txt (by mimicking a vim retab function) like:
find . -iname 'CMakeLists.txt' -exec ex +""set syn=cmake"" +""set noexpandtab"" +""norm gg=G"" -cwq {} \; 

git commit -am 'cleanup:cmake:retab all CMakeLists.txt files'

What do you think?",True,{'THUMBS_UP': ['https://github.com/jandegr']}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/pgrandin,20,https://github.com/navit-gps/navit/pull/569#issuecomment-387462147,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","@metalstrolch any concerns with @aerostitch 's plan to merge soon?
Our fear of breaking things is what prevented us from doing it in the past, but we need to improve our codebase.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/mvglasow,21,https://github.com/navit-gps/navit/pull/569#issuecomment-387527094,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","Sounds good to me, I have just one question: Since I have a branch in the pipeline (forked before the Great Cleanup, to be merged after), how do I prevent tons of merge conflicts?
My first approach would be:

Run the same cleanup against my branch
Merge master into it (which should not cause any conflicts due to formatting changes, because both branches have changed in identical ways)
Continue developing
Finally run cleanup once more before I file a merge request

Is that the recommended way to go? Or is there another?
Are the steps to execute documented in a foolproof way (i.e. command lines in the exact order)? Since I understand all new code will be expected to comply with these formatting guidelines, maybe it would make sense to include a shell script for the cleanup, which I just need to run before merging.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/aerostitch,22,https://github.com/navit-gps/navit/pull/569#issuecomment-387538780,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","It depends how many commits you have.
The cleanest approach I would take would be (make sure you read the commands as you will have to adapt to your situation):
# Make sure everything is commited:
git commit -am 'backup before cleanup'
# export your changes as patches.
#If you have 10 commits that have not been merged for example:
git format-patch HEAD~10
# This will generate 1 file per commit in the current directory,
#so move them into a safe place, for example your home directory/backup_navit
mkdir ${HOME}/backup_navit
mv *.patch ${HOME}/backup_navit/
# then update trunk (I'm assuming you're not working on a fork here)
git checkout trunk
git pull --all
# go back in your branch, remove all your commits
# we're still assuming 10 here:
git checkout your_branch
git reset --hard HEAD~10
# merge with trunk making sure you fast-forward only
git merge trunk --ff-only
# finally reapply your patches 1 by 1 
# you will have to recreate a commit for each patch
patch -p1 < ${HOME}/backup_navit/0001-my_patch_name.patch
git commit -am 'Your commit message for that patch'
# do those last 2 lines for each patch and you will have fully rebased your branch
# then you push using --force on your branch
Note that you might have to deal with rejected patches at some points but the patch files are just git diffs so you can edit them easily.
How far behind is your branch? If not too far it'll be easy (generally the patch command is pretty good at dealing with that).
The cleanup shell script will require you to have the astyle command install and it would be (assuming you're running linux):
find . -type f  \
 \( -not -path './navit/support/*' -a -not -path './navit/fib-1.1/*' \) \
 -a \( -iname '*.c' -o -iname '*.cpp' -o -iname '*.java' \) \
-exec \
 astyle --indent=tab=8 --style=kr -n  --break-return-type-decl --max-code-length=120 {} \;

git commit -am 'cleanup:global:Use astyle to reformat everything'

find . -type f \( -not -path './navit/support/*' -a -not -path './navit/fib-1.1/*' -a -not -path './.git/*' \) \
  -a \( -not -iname '*.bat' \) | while read f; do \
   [[ ""$(file -bi $f)"" =~ ^text ]] && sed 's/\s*$//' -i $f; done

git commit -am 'cleanup:cmake:remove trailing spaces'

find . -iname 'CMakeLists.txt' -exec ex +""set syn=cmake"" +""set noexpandtab"" +""norm gg=G"" -cwq {} \;

git commit -am 'cleanup:cmake:retab all CMakeLists.txt files'
Note that yes, I'm planning to provide a pre-commit hook that you would just put in your .git/hooks/ folder and that will do the reformat during the commit.
I'm also planning to add a step in circleci to enforce that if everyone's ok with that.",True,{'THUMBS_UP': ['https://github.com/pgrandin']}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/mvglasow,23,https://github.com/navit-gps/navit/pull/569#issuecomment-387545971,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","I created the traffic branch in October and have merged trunk a few times since. It is currently 57 commits behind trunk, although I would merge trunk once more before the Great Cleanup.
It is also currently 236 commits ahead, therefore I am looking for a way to automate this in a manner that yields a performance of O(1) rather than O(n). Applying a patch for each commit may still work for 10 commits, but not for 236.
However, if I run the commands you describe below on my branch once, I assume it would merge cleanly (as long as there are no unrelated merge conflicts)? That would be fairly easy to QA then (fork both trunk and traffic, run cleanup on both, merge and see what happens). Can I assume the cleanup script to be stable or may there still be changes which would have an impact on code formatting?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/aerostitch,24,https://github.com/navit-gps/navit/pull/569#issuecomment-387547890,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","Holly molly, 236 commits, that indeed changes a lot of things! 😃
Yes, the cleanup script is pretty stable. If you see stuffs that you don't like in the current commits, then we can change the command but as long as everybody's happy with it it won't change.
Note that the last find command will require you to have vim installed.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/mvglasow,25,https://github.com/navit-gps/navit/pull/569#issuecomment-387557726,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","Yep, adding live traffic is no small thing :-) I’ll merge trunk once more, then QA it as described and report back.
There are only a few things I would change in the script (no impact on the code itself):

If all code changes are automated, we don’t really need three separate commits—that can be committed all at once.
I’d advise against git commit -a, as it makes it all too easy to commit things you didn’t mean to—or miss new files which are not yet being tracked. (In one of my other projects I use submodules, and if one of those isn’t up to date, running git commit -a is a recipe for disaster.) My general recommendation is to use a GUI tool or review the changes on the command line before committing. Here, we could simply not bother with it and at the end tell the user to commit the changes made by the script.
If this is to become a script, then I would add an initial check if the repo has uncommitted changes and, if that is the case, let the user choose what to do (abort, proceed, stash and proceed, …)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/aerostitch,26,https://github.com/navit-gps/navit/pull/569#issuecomment-387565133,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","If all code changes are automated, we don’t really need three separate commits—that can be committed all at once.

Yes, I separated them just to make it clearer for the code review.

I’d advise against git commit -a, as it makes it all too easy to commit things you didn’t mean to—or miss new files which are not yet being tracked.

Yes, I know, it was just there for easier use but in general I specify the files of at least use git status and git diff before committing anything (if several files, git diff of each file and fit add when I'm done with the review).

If this is to become a script, then I would add an initial check if the repo has uncommitted changes and, if that is the case, let the user choose what to do (abort, proceed, stash and proceed, …)

Yes that's the idea behind using a pre-commit hook.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/jandegr,27,https://github.com/navit-gps/navit/pull/569#issuecomment-387650591,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","pls consider using it with  style=java and 4 spaces for java files
some UnJava samples from your branch
aerostitch@2744e17#diff-d338841f828fc6274fa4cd860a19b16bR58
aerostitch@2744e17#diff-d338841f828fc6274fa4cd860a19b16bR40
thx",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/mvglasow,28,https://github.com/navit-gps/navit/pull/569#issuecomment-387761585,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","I’ve created a shell script for the cleanup, which you can find at https://github.com/mvglasow/navit-goodies/blob/master/scripts/cleanup/cleanup.
About style=java, is there any good reason not to use that for all files, Java and C alike? In fact I prefer
sometype someFunc() {
    // code here
}

over
sometype
someFunc()
{
    // code here
}

—the first example is much more compact, allowing me to view more information in the same amount of screen real estate. It’s also how Eclipse formats code by default (the only IDE for which we have documented support). Also, having a consistent style guide across C and Java is easier for devs to deal with and less coding work to automate.
I realize the programming guidelines on our wiki mention K&R style, but that isn’t set in stone, and if we are to change it, it is easiest to do that now.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/mvglasow,29,https://github.com/navit-gps/navit/pull/569#issuecomment-387774581,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","Something isn’t working as expected. When I apply the cleanup script to two branches and merge them, I get a couple of these in CMakeLists.txt and navit/CMakeLists.txt:
@@@ -161,12 -161,12 +166,17 @@@ endif ()add_executable (navit 
  
  )if (DEFINED NAVIT_BINARY)
    set_target_properties (navit PROPERTIES OUTPUT_NAME $
  			 {
  			 NAVIT_BINARY}
  <<<<<<< HEAD
 +)endif (DEFINED NAVIT_BINARY) ifindent: Standard input:100: Error:Unmatched 'else'
 + (BUILD_BUNDLE)
  =======
+ )endif (DEFINED NAVIT_BINARY) if (BUILD_BUindent: Standard input:100: Error:Unmatched 'else'
+ NDLE)
  >>>>>>> wip-trunk-cleanup
    add_custom_command (OUTPUT resources / share COMMAND mkdir -
  		      p resources /
  		      share) set_source_files_properties (resources /
  							  share resources /
  							  Icon.png resources /

That indicates an error in the script (errors from indent scattered throughout the output), which will most likely break something somewhere. It seems to affect only CMakeList.txt files.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/charlescurley,30,https://github.com/navit-gps/navit/pull/569#issuecomment-387778090,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","On Wed, 09 May 2018 14:39:38 +0000 (UTC) mvglasow ***@***.***> wrote:
 About `style=java`, is there any good reason not to use that for all
 files, Java and C alike?
I think I would find it mildly disconcerting to have Java style on C
programs. I am accustomed to having C look like, well, C, and Java like
Java.

Can we have a uniform C style and a uniform Java style? Would two
passes with ""find"", one for each language, be too onerous?
…
-- 
""When we talk of civilization, we are too apt to limit the meaning of
the word to its mere embellishments, such as arts and sciences; but
the true distinction between it and barbarism is, that the one
presents a state of society under the protection of just and
well-administered law, and the other is left to the chance government
of brute force.""
- The Rev. James White, Eighteen Christian Centuries, 1889
Key fingerprint = CE5C 6645 A45A 64E4 94C0  809C FFF6 4C48 4ECD DFDB
https://charlescurley.com",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/aerostitch,31,https://github.com/navit-gps/navit/pull/569#issuecomment-387785463,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","I'll have a look for the error you have @mvglasow . I probably missed a parameter that is already declared in my vimrc. Do you have the vimrc you used when running the script by any chance?
For the style, I'm adjust to what you prefer as it's more a question of finding a common ground in personal habits. I personally like to have more compact declaration like the  ""google"" style: http://astyle.sourceforge.net/astyle.html#_style=google but I'm fine with having a java style for java and a more C-like style for C (different languages = different way of seeing how to do things right).
But I'd like to have common rules like on the use of tabs vs spaces and the number of spaces a tab represent at least.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/mvglasow,32,https://github.com/navit-gps/navit/pull/569#issuecomment-387798308,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","@aerostitch I do not have any customizations in my vimrc (in fact, I do not even have ~/.vimrc or ~/.vim/vimrc), so distro defaults apply (Ubuntu 18.04, no idea how heavily vimrc is customized by distros).",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/pgrandin,33,https://github.com/navit-gps/navit/pull/569#issuecomment-387799980,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","I realize the programming guidelines on our wiki mention K&R style, but that isn’t set in stone, and if we are to change it, it is easiest to do that now.

I personally prefer the one liner too, but we'd need to get feedback from everybody if we were to change that now (and now that @aerostitch is reformatting the code is probably our last chance to do it).",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/jandegr,34,https://github.com/navit-gps/navit/pull/569#issuecomment-387804589,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","I like to follow a leading authority for styling
for Android-java this is the one https://source.android.com/setup/contribute/code-style
Navit wiki says for C it is K & R
but I would personally not mind if another one was chosen for C with a more complete description.
A random sample https://users.ece.cmu.edu/~eno/coding/CCodingStandard.html
Just don't be tempted to choose an existing style and make variations on it, Navit is just too small an organization to make its own custom style.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/aerostitch,35,https://github.com/navit-gps/navit/pull/569#issuecomment-387810022,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","@mvglasow could you either push your resulting branch or come on a chat system please? I'm having trouble reproducing your issue right now in a blank Ubuntu 18.04 docker container and I'd like to avoid to pollute too much this thread with debugging that issue.
Concerning the style choice, I'd like to hear @sleske's opinion has he has been contributing a bunch to the style guide in the wiki.
Basically we'd need an agreement on:

use tab or spaces (and if spaces, how many do an indentation)
put the braces at the end of the line or on a new line
put the return type on a line separated from the rest of the function declaration

Based on that we can choose one of the standard styles for C and C++.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/aerostitch,36,https://github.com/navit-gps/navit/pull/569#issuecomment-387844614,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","To make it easier for everyone I made a google form: https://goo.gl/forms/eQ5FY18Fj5LwEscE2
Just answer in it and we'll choose the style based on the responses we have there.
The survey will be closed on May 18th. Please don't answer at the last minute, it's just 5 questions with radio-buttons to click, should take 30seconds max.
Thanks",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/mvglasow,37,https://github.com/navit-gps/navit/pull/569#issuecomment-387918686,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""",@aerostitch I’ve pushed the results of running the cleanup script on trunk to mvglasow/wip-trunk-cleanup (and just got the notifications from CircleCI that the builds are failing one by one).,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/aerostitch,38,https://github.com/navit-gps/navit/pull/569#issuecomment-388203378,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","Sorry I've been busy, I'll try to have a look in the next few days. Thanks for pushing that!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/aerostitch,39,https://github.com/navit-gps/navit/pull/569#issuecomment-388242376,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","@mvglasow I'm able to reproduce the issue but due to the fact that the trunk branch of your repo is 168 commits behind navit-gps/navit:trunk. Did you update your trunk locally?
Provided that you already did setup your remote upstream, could you retry after syncing your trunk if you haven't before please?
Doc for configuring your upstream: https://help.github.com/articles/configuring-a-remote-for-a-fork/
Doc for updating your fork: https://help.github.com/articles/syncing-a-fork/
Note that I was able to update trunk locally, run the cleanup, switch to the traffic branch, merge directly without applying the cleanup and I only ended up with very few conflicts which looks easy to solve (not sure why they ended up being tagged as conflict) in those files:
        both modified:   navit/CMakeLists.txt
        both modified:   navit/route.c
        both modified:   navit/util.c
        both modified:   navit/xmlconfig.c

So I'd advise not to run the cleanup against your branch before merging (this way the files don't look to be both modified by different commits).",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/mvglasow,40,https://github.com/navit-gps/navit/pull/569#issuecomment-388466048,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","@aerostitch Yes, I updated trunk locally (if you look at the history, you will see that it is still up to date with trunk). I have both repos (navit-gps and my own) configured as remotes locally; branches which are also in the official repo get updated infrequently in my own repo.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/mvglasow,41,https://github.com/navit-gps/navit/pull/569#issuecomment-388466520,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","ps: even after running the cleanup against my own branch, I get few (and easily resolvable) conflicts. It’s only the two CMakeLists.txt that give me trouble.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/aerostitch,42,https://github.com/navit-gps/navit/pull/569#issuecomment-388486612,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","Oh, sorry I understood just now that you were merging wip-trunk-cleanup in your config.
I see now that your issue is what has been changed here: mvglasow@11c25a6#diff-af3b638bc2a3e6c650974192a53c7291R723
I have no idea yet why this has changed this way, It doesn't do it for me, even if I run a docker ubuntu 18.04 with no specific configuration, just install git and vim, run the 2 last commands.
But one thing I'm sure is that the last command was not applied properly as there are still a combination of tabs and spaces (you can see them using :set list in vim).
Could you, on the wip-trunk-cleanup branch, do the following:

git reset --hard HEAD^ to remove the last cleanup commit
Run just find . -iname 'CMakeLists.txt' -exec ex +""set syn=cmake"" +""set noexpandtab"" +""norm gg=G"" -cwq {} \; (no commit)
open the CMakefile.txt with vim and use :set list to see if there are still a mix of spaces and tabs
in CMakelist.txt look for compose_xslt_transform_command and check if the indentation is all weird after that like it is in your current one
commit and see if anything changed

Also:

do you have any git hooks in your repo (located in .git/hooks/) that would do some reformatting using indent or astyle (that would definitely be an issue)?
did you run the script by copy-pasting its content or did you run the script as a real script? (I tried both and I still can't reproduce the problem but at least we'd start on common ground)
what shell do you use? (I'm wondering if there would not be a char escaping that would change between interpreters)

Thanks for your patience.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/mvglasow,43,https://github.com/navit-gps/navit/pull/569#issuecomment-388584353,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","I just tried the steps you described.

There is no file named CMakefile.txt. In case you meant CMakeLists.txt (the only file in the root dir of the source tree starting with CMake): that file still seems to have a mix of tabs (^I) and spaces
In the same file, macro (compose_xslt_transform_command CMDVAR XSLT_FILE SRC_XML DEST_XML) is indented with four spaces, no tabs; this is the only occurrence of compose_xslt_transform_command in that file
Most of the file has changed; only a handful of lines have not. (Let me know if you would like me to push this, either to the same or another branch.)
I have no git hooks (at least I did not knowingly create any)
I ran the script as a real script
Shell is bash",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/aerostitch,44,https://github.com/navit-gps/navit/pull/569#issuecomment-388670966,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","Thanks a lot for those details and sorry for the late reply.

There is no file named CMakefile.txt. In case you meant CMakeLists.txt

Yes, sorry my bad I meant CMakeLists.txt
I have no idea why it does that on your environment, so to avoid making you loose more time I pushed the cleaned up version to the aerostitch-cleanup-pr569 branch in navit-gps/navit. Could you try to git merge upstream/aerostitch-cleanup-pr569 on your traffic branch in your own repo after doing a git fetch upstream please? (I tried and it seems to resolve your issue)
Seeing that the CMakeLists.txt reformat is not always reproducible depending on the environment I propose that I'll take care of verifying that manually before each releases and just have a regex that checks for spaces vs tabs in the indentation part of the line when we'll work on the sanity check script.
Would you be ok doing it that way?
Note: I updated my this PR with the current results of the survery (seems for now 80% of the people prefers everything on one line and 4 spaces instead of tabs). The style attach should match this and allow both Java and C/C++ users to be happy I'd say. The new script I use is:
find . -type f  \
 \( -not -path './navit/support/*' -a -not -path './navit/fib-1.1/*' \) \
 -a \( -iname '*.c' -o -iname '*.cpp' -o -iname '*.java' \) \
-exec \
 astyle --indent=spaces=4 --style=attach -n --max-code-length=120 {} \;
# git commit -am 'cleanup:global:Use astyle to reformat everything'

find . -type f \( -not -path './navit/support/*' -a -not -path './navit/fib-1.1/*' -a -not -path './.git/*' \) \
  -a \( -not -iname '*.bat' \) | while read f; do \
   [[ ""$(file -bi $f)"" =~ ^text ]] && sed 's/\s*$//' -i $f; done
# git commit -am 'cleanup:cmake:remove trailing spaces'

find . -iname 'CMakeLists.txt' -exec ex +""set syn=cmake"" +""set noexpandtab"" +""norm gg=G"" -cwq {} \;
# git commit -am 'cleanup:cmake:retab all CMakeLists.txt files'
Let me know what you think,
Thanks
Joseph",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/mvglasow,45,https://github.com/navit-gps/navit/pull/569#issuecomment-389857457,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","Sorry for the late reply—I tried merging upstream/aerostitch-cleanup-pr569 into my traffic branch (without performing a local cleanup) and get a long list of conflicts.
As for CMakeLists.txt: as I understand it so far, the cleanup stuff is going to be a pre-commit hook which will run against the code before it gets committed, and your proposal is not to change CMakeLists.txt in this step, correct? If that is what you had in mind, it probably makes sense (at least until we’ve figured out why I am getting these errors). That would mean eliminating the last line from the script, correct?
As for merging traffic, I guess it is going to be easiest if I simply run the cleanup script (not touching CMakeLists.txt) on my branch and then merge the cleaned-up trunk (all of this after merging the last pre-cleanup commit on trunk first). At most, this should give me some conflicts in the two CMakeLists.txt (IIRC there were also conflicts where I changed existing code in the *.c files, but they were easy to resolve).",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/lains,46,https://github.com/navit-gps/navit/pull/569#issuecomment-390464180,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","@mvglasow, if I understood well, the process you're suggesting is:

Get informed of the official date for the cleanup.
Merge the upstream trunk onto the local fork's trunk just before the re-indent cleanup (even if the date of the cleanup has already passed, merge on the commit just before it was done)
Merge the local trunk into the WIP local branch
Manually apply the re-indent cleanup on the WIP local branch
Commit this locally on the WIP local branch
Merge the upstream trunk to the local fork's trunk just after the re-indent cleanup.
Merge the local fork's trunk into the WIP local branch. During this merge, just keep the local WIP branch as is (discard anything from the trunk as the local branch is already indented)
Continue to work with the new indentation guidelines
When submitting the PR, the only changes highlighted should be the actual new code, all indenting will be identical between upstream and local fork.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/mvglasow,47,https://github.com/navit-gps/navit/pull/569#issuecomment-390487886,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","@lains pretty much, yes. As for

During this merge, just keep the local WIP branch as is (discard anything from the trunk as the local branch is already indented)

Presumably that’s what’s going to happen, though I’d want to look at every conflict in detail just to be sure.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/aerostitch,48,https://github.com/navit-gps/navit/pull/569#issuecomment-391549457,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","Sorry for the late reply.

I tried merging upstream/aerostitch-cleanup-pr569 into my traffic branch (without performing a local cleanup) and get a long list of conflicts.

That's really weird, I don't understand why, I get only a few number of files when I do it. :(

As for CMakeLists.txt: as I understand it so far, the cleanup stuff is going to be a pre-commit hook which will run against the code before it gets committed, and your proposal is not to change CMakeLists.txt in this step, correct? If that is what you had in mind, it probably makes sense (at least until we’ve figured out why I am getting these errors). That would mean eliminating the last line from the script, correct?

Well, the pre-commit hook works one file at a time, but the idea will be similar, yes.
But yes, that is correct, that my proposal will be not to include the CMakeLists.txt files cleanup on that step.

As for merging traffic, I guess it is going to be easiest if I simply run the cleanup script (not touching CMakeLists.txt) on my branch and then merge the cleaned-up trunk (all of this after merging the last pre-cleanup commit on trunk first). At most, this should give me some conflicts in the two CMakeLists.txt (IIRC there were also conflicts where I changed existing code in the *.c files, but they were easy to resolve).

Yep, not touching the CMakeLists.txt is better.

Get informed of the official date for the cleanup.

I'll do that as soon as I get an approval on the current PR.
Now the results of the survey:

100% of the responses indicated 120 chars as preferred line length
80% indicated 4 chars as preferred indentation both for C and Java files
80% prefer open brackets on the same line as the function name (for C)
100% prefer the return type of the function on the same line as the function named (for C)

I just updated the branch of this PR with the latest trunk updates and the coding style above (attach style in astyle).",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/mvglasow,49,https://github.com/navit-gps/navit/pull/569#issuecomment-391683114,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","I tried merging upstream/aerostitch-cleanup-pr569 into my traffic branch (without performing a local cleanup) and get a long list of conflicts.

That's really weird, I don't understand why, I get only a few number of files when I do it. :(

Due to the nature of the conflicts, I suspect this is because one branch was missing a few commits from trunk.

my proposal will be not to include the CMakeLists.txt files cleanup on that step

Sounds good to me.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/jandegr,50,https://github.com/navit-gps/navit/pull/569#issuecomment-391828816,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","Hi,
Can I assume that the 120 chars linelength and 4 spaces for a tab from the results of the survey are the final choice ?
Can astyle be set to a double tab for linewrap ?
https://source.android.com/setup/contribute/code-style#use-spaces-for-indentation
thx.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/aerostitch,51,https://github.com/navit-gps/navit/pull/569#issuecomment-391829880,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","Hi,

Can I assume that the 120 chars linelength and 4 spaces for a tab from the results of the survey are the final choice ?

Yes you can!

Can astyle be set to a double tab for linewrap ?

I haven't found how to do that but I believe it already does that (If you look at https://github.com/navit-gps/navit/pull/569/files#diff-78dd85e830faeb085c926b3922b0ab9aL77 for example)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/aerostitch,52,https://github.com/navit-gps/navit/pull/569#issuecomment-391910535,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","Cool, thanks.
Unless anybody disagrees I'm going to merge this PR on May 25th at 4PM Pacific time.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/mvglasow,53,https://github.com/navit-gps/navit/pull/569#issuecomment-392028439,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","Quick one, what about commits made in the meantime (I see the reindent-everything branch is one commit behind trunk at this time)? Will they still get merged before?
I would suggest we hold back other commits and merges for the rest of the day, until the cleanup has been merged—things might get messy otherwise.
BTW (as I just had to look that up myself), 16:00 PDT = 23:00 UTC.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/aerostitch,54,https://github.com/navit-gps/navit/pull/569#issuecomment-392132714,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","Quick one, what about commits made in the meantime (I see the reindent-everything branch is one commit behind trunk at this time)? Will they still get merged before?

I'll rebase on trunk just before merging.

I would suggest we hold back other commits and merges for the rest of the day, until the cleanup has been merged—things might get messy otherwise.

yes that would be ideal",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/aerostitch,55,https://github.com/navit-gps/navit/pull/569#issuecomment-392237317,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","Sorry I'm 6 hours late.
I'll merge at the end of the circleci build.
I'll push some PR for a sanity check job in circleci tomorrow or Sunday and a pre-commit hook proposal with instructions in another PR.
I also need to update the style guide.",True,{'HOORAY': ['https://github.com/pgrandin']}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/aerostitch,56,https://github.com/navit-gps/navit/pull/569#issuecomment-392237695,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""",PR merged! 🎉,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/jandegr,57,https://github.com/navit-gps/navit/pull/569#issuecomment-392238479,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","Hi,
Checkstyle for Java seems to have 240 extra warnings but it could as well be that checkstyle itself has to be tuned a little more, however there are a few strange issues
sample
https://github.com/navit-gps/navit/blob/trunk/navit/android/src/org/navitproject/navit/NavitSensors.java#L42
https://github.com/navit-gps/navit/blob/trunk/navit/android/src/org/navitproject/navit/Navit.java#L313
Lines have actually been shortened but the indents are ignored, so there are lines with a length of up to 4,8,12,.. too long.
for the rest it is just some odd things that did not get corrected automatically.
For java I will fix the issues together with some more refactoring but I did not verify if this linelength issue occured in the C files too.
THX for the PR !!!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/mvglasow,58,https://github.com/navit-gps/navit/pull/569#issuecomment-392291532,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","Thanks for the work you did!
I have cleaned up the traffic branch locally, and things largely worked as I expected them to.
CMakeLists.txt got reformatted, but with two spaces instead of tabs. Can you re-post the exact command lines you used? I used the ones you posted above (also found in the script in my repo), has anything changed about them?
Eventually, I was able to resolve the resulting conflicts (resolving them in favor of trunk, then re-applying the few actual modifications introduced in my branch).
Conflicts in C files were a bit less obvious and I resolved them after reviewing each one manually. Mostly that was in favor of the local branch, but the diffs often weren’t obvious, as git reported a couple of conflicts in which large parts of both hunks appeared to be identical in the end.
Merge strategy here in a nutshell:

Have I changed the file in my branch?

No → Use remote version (i.e. trunk)
Yes →Do all of the conflicts refer to code I changed in my branch? (If in doubt, look at local branch history.)

Yes → Use local version (i.e. from own branch)
No → Use a diff tool to evaluate and resolve each conflict individually





I just built my branch and ran my test cases, and everything seems OK. (Strategy above can be considered battle-hardened, as the traffic branch is one of the more complex test cases.)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/aerostitch,59,https://github.com/navit-gps/navit/pull/569#issuecomment-392864848,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","@jandegr that is indeed really strange. We'll have to dig deeper.
@mvglasow the ""2 spaces instead of tabs"" thing leads me to believe there's something in your vim config that overwrites the command-line arguments. In the command-line the noexpandtab is used to avoid using spaces instead of tabs. Here's the command I used to reformat the CMakeLists.txt:
find . -iname 'CMakeLists.txt' -exec ex +""set syn=cmake"" +""set noexpandtab"" +""norm gg=G"" -cwq {} \;

I copy/pasted the command-lines from #569 (comment) to reformat.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/aerostitch,60,https://github.com/navit-gps/navit/pull/569#issuecomment-392873905,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","@jandegr note that it did not break the line itself. If you look at the code change, it was already like that, see: https://github.com/navit-gps/navit/pull/569/files#diff-c722c954d2aad81c7bd56a37db855021L42
The problem is that it was missing the -xf -xh which force the attachement of the return type, which does not seem to be by default on java files.
I'll create a separate PR to fix those.
Also: http://astyle.sourceforge.net/astyle.html#_max-code-length

Some code will not be broken, such as comments, quotes, and arrays. If used with keep‑one‑line‑blocks or add-one-line-braces the blocks will NOT be broken. If used with keep‑one‑line‑statements the statements will be broken at a semicolon if the line goes over the maximum length. If there is no available break point within the max code length, the line will be broken at the first available break point after the max code length.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/mvglasow,61,https://github.com/navit-gps/navit/pull/569#issuecomment-392887035,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","@aerostitch

leads me to believe there's something in your vim config that overwrites the command-line arguments

Odd indeed, as my vim config is about as bone stock as it gets (I don’t have a user-specific one at all), unless Canonical is doing some weird stuff in their distro.
However, if the local config is such a game changer and we don’t manage to override anything which might be relevant in the command line, maybe vim is not the most suitable tool for this kind of task and we might want to look into other ways of achieving what we want.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/aerostitch,62,https://github.com/navit-gps/navit/pull/569#issuecomment-392887671,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""","Yep, that's why I'm not using it in #603",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,569,2018-05-02T03:01:11Z,2018-05-26T05:17:51Z,2018-06-02T11:04:45Z,MERGED,True,81607,85334,469,https://github.com/aerostitch,Cleanup:global:Use astyle to reformat everything,3,['cleanup'],https://github.com/navit-gps/navit/pull/569,https://github.com/jandegr,63,https://github.com/navit-gps/navit/pull/569#issuecomment-394078810,"This PR uses the config file in #568 to reindent everything.
Commands used:
find . -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -exec indent -gnu -l200 {} \;
# indent generates backup files that you need to delete
find . -iname '*~' -delete

I put that in a separate PR to allow more clarity.
As we update the other PR I'll update this one too.
1st iteration is using -gnu --line-length=200
Note that when I can that I got:
indent: ./navit/data.h:38: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                                
indent: ./navit/data.h:50: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                                               
indent: ./navit/data.h:77: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                        
indent: ./navit/data.h:89: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                         
indent: ./navit/gui/qml/searchProxy.h:30: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                      
indent: ./navit/gui/qml/ngqpoint.h:268: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                          
indent: ./navit/gui/qml/ngqpoint.h:272: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:319: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                         
indent: ./navit/gui/qml/ngqpoint.h:341: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                     
indent: ./navit/gui/qml/routeProxy.h:18: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                       
indent: ./navit/gui/qml/routeProxy.h:23: Warning:old style assignment ambiguity in ""=*"".  Assuming ""= *""
                                                  
indent: ./navit/support/glib/galias.h:0: Error:Zero-length file ./navit/support/glib/galias.h
indent: ./navit/support/espeak/speak_lib.h:145: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/debug.h:44: Warning:old style assignment ambiguity in ""=-"".  Assuming ""= -""
                                                    
indent: ./navit/map.h:113: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                               
indent: ./navit/map.h:155: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""
                                                                           
indent: ./navit/map.h:186: Warning:old style assignment ambiguity in ""=&"".  Assuming ""= &""",See comment in  #603 about the linelength or codelength,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,570,2018-05-02T06:42:30Z,2018-05-02T06:56:57Z,2018-05-02T06:57:00Z,MERGED,True,4228,4228,54,https://github.com/aerostitch,cleanup:general:Declaring war to control-M,1,[],https://github.com/navit-gps/navit/pull/570,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/570,"Seems that we have some contributors using windows with the core.autocrlf configuration set to false, generating a bunch of control-M in the files.
That PR cleans that up.","Seems that we have some contributors using windows with the core.autocrlf configuration set to false, generating a bunch of control-M in the files.
That PR cleans that up.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,571,2018-05-02T16:40:00Z,2018-05-02T17:04:24Z,2018-05-02T17:04:27Z,MERGED,True,1,1,1,https://github.com/jandegr,fix:typo,1,[],https://github.com/navit-gps/navit/pull/571,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/571,just a misleading typo,just a misleading typo,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,572,2018-05-02T17:36:10Z,2018-05-04T07:04:02Z,2018-05-04T07:04:07Z,MERGED,True,584,896,9,https://github.com/jandegr,refactor:Android,3,[],https://github.com/navit-gps/navit/pull/572,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/572,As a follow-up on #563 some more refactoring / cleanup in Android with special attention for translations.,As a follow-up on #563 some more refactoring / cleanup in Android with special attention for translations.,True,{'HOORAY': ['https://github.com/aerostitch']}
navit-gps/navit,https://github.com/navit-gps/navit,574,2018-05-03T05:27:39Z,2018-06-03T17:00:19Z,2018-06-03T17:00:22Z,MERGED,True,4,4,1,https://github.com/aerostitch,Fix:cmake:Fix the way we set the LIB_DIR when LIBDIR is set,1,[],https://github.com/navit-gps/navit/pull/574,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/574,"Previously we were able to set LIBDIR to standard values like lib and the /navit folder would be added to it later on.
With #215 there have been some enhancements in the handling of LIB_DIR when LIBDIR is not set by setting LIB_DIR directly to lib/navit or lib64/navit. The problem is when you do set LIBDIR, then just the last folder of the provided path is taken as it was before. This causes 2 issues:

/navit is never added to it so you end up adding your libs to lib or lib64 directly
as explained in the cmake documentation section, the LIBDIR could be more than 1 folder level

So I propose we don't change the LIBDIR provided and set LIB_DIR to ${LIBDIR}/navit if LIBDIR is provided but not LIB_DIR (with that change we'll be able to have the same behavior as before #215).
@metalstrolch could you test that this behavior would do fine on Sailfish OS please?
Note: the file had a bunch of mixed spaces and tabs so I used vim to reindent everything to tabs.
Thanks
Joseph","Previously we were able to set LIBDIR to standard values like lib and the /navit folder would be added to it later on.
With #215 there have been some enhancements in the handling of LIB_DIR when LIBDIR is not set by setting LIB_DIR directly to lib/navit or lib64/navit. The problem is when you do set LIBDIR, then just the last folder of the provided path is taken as it was before. This causes 2 issues:

/navit is never added to it so you end up adding your libs to lib or lib64 directly
as explained in the cmake documentation section, the LIBDIR could be more than 1 folder level

So I propose we don't change the LIBDIR provided and set LIB_DIR to ${LIBDIR}/navit if LIBDIR is provided but not LIB_DIR (with that change we'll be able to have the same behavior as before #215).
@metalstrolch could you test that this behavior would do fine on Sailfish OS please?
Note: the file had a bunch of mixed spaces and tabs so I used vim to reindent everything to tabs.
Thanks
Joseph",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,574,2018-05-03T05:27:39Z,2018-06-03T17:00:19Z,2018-06-03T17:00:22Z,MERGED,True,4,4,1,https://github.com/aerostitch,Fix:cmake:Fix the way we set the LIB_DIR when LIBDIR is set,1,[],https://github.com/navit-gps/navit/pull/574,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/574#issuecomment-386210760,"Previously we were able to set LIBDIR to standard values like lib and the /navit folder would be added to it later on.
With #215 there have been some enhancements in the handling of LIB_DIR when LIBDIR is not set by setting LIB_DIR directly to lib/navit or lib64/navit. The problem is when you do set LIBDIR, then just the last folder of the provided path is taken as it was before. This causes 2 issues:

/navit is never added to it so you end up adding your libs to lib or lib64 directly
as explained in the cmake documentation section, the LIBDIR could be more than 1 folder level

So I propose we don't change the LIBDIR provided and set LIB_DIR to ${LIBDIR}/navit if LIBDIR is provided but not LIB_DIR (with that change we'll be able to have the same behavior as before #215).
@metalstrolch could you test that this behavior would do fine on Sailfish OS please?
Note: the file had a bunch of mixed spaces and tabs so I used vim to reindent everything to tabs.
Thanks
Joseph","OK, I'll check if this still works. But would you mind redoing the patch without the indention fix? It's impossible to find what you actually changed. Or at least do one commit fixing only the indention, and then another doing the change. That's one of the consequences i pointed to in #569",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,574,2018-05-03T05:27:39Z,2018-06-03T17:00:19Z,2018-06-03T17:00:22Z,MERGED,True,4,4,1,https://github.com/aerostitch,Fix:cmake:Fix the way we set the LIB_DIR when LIBDIR is set,1,[],https://github.com/navit-gps/navit/pull/574,https://github.com/aerostitch,3,https://github.com/navit-gps/navit/pull/574#issuecomment-386358239,"Previously we were able to set LIBDIR to standard values like lib and the /navit folder would be added to it later on.
With #215 there have been some enhancements in the handling of LIB_DIR when LIBDIR is not set by setting LIB_DIR directly to lib/navit or lib64/navit. The problem is when you do set LIBDIR, then just the last folder of the provided path is taken as it was before. This causes 2 issues:

/navit is never added to it so you end up adding your libs to lib or lib64 directly
as explained in the cmake documentation section, the LIBDIR could be more than 1 folder level

So I propose we don't change the LIBDIR provided and set LIB_DIR to ${LIBDIR}/navit if LIBDIR is provided but not LIB_DIR (with that change we'll be able to have the same behavior as before #215).
@metalstrolch could you test that this behavior would do fine on Sailfish OS please?
Note: the file had a bunch of mixed spaces and tabs so I used vim to reindent everything to tabs.
Thanks
Joseph","I just saw your comment about the indentation stuff, sorry for that. If I split the commit now I'm afraid we'll loose the current discussion thread that we have so let me summarize it outside of the code review comment and I'll do the split right after.

LIBDIR is (at least in GNU standards) the name of the folder to suffix to ${INSTALL_DIR} where all libraries should be. According to cmake documentation it is: object code libraries (lib or lib64 or lib/<multiarch-tuple> on Debian)
LIB_DIR is a good way you added to overwrite where the navit libaries should be (by default it is either lib/navit, lib64/navit or ${LIBDIR}/navit but thanks to your change it can be anything else you set when running cmake)

I think also that we should change the hardcoded navit default suffix with the PACKAGE variable (I would even have said PACKAGE_NAME initially but for whatever reason this one is set to navit-git, so not that).
Did I miss something?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,574,2018-05-03T05:27:39Z,2018-06-03T17:00:19Z,2018-06-03T17:00:22Z,MERGED,True,4,4,1,https://github.com/aerostitch,Fix:cmake:Fix the way we set the LIB_DIR when LIBDIR is set,1,[],https://github.com/navit-gps/navit/pull/574,https://github.com/aerostitch,4,https://github.com/navit-gps/navit/pull/574#issuecomment-386369019,"Previously we were able to set LIBDIR to standard values like lib and the /navit folder would be added to it later on.
With #215 there have been some enhancements in the handling of LIB_DIR when LIBDIR is not set by setting LIB_DIR directly to lib/navit or lib64/navit. The problem is when you do set LIBDIR, then just the last folder of the provided path is taken as it was before. This causes 2 issues:

/navit is never added to it so you end up adding your libs to lib or lib64 directly
as explained in the cmake documentation section, the LIBDIR could be more than 1 folder level

So I propose we don't change the LIBDIR provided and set LIB_DIR to ${LIBDIR}/navit if LIBDIR is provided but not LIB_DIR (with that change we'll be able to have the same behavior as before #215).
@metalstrolch could you test that this behavior would do fine on Sailfish OS please?
Note: the file had a bunch of mixed spaces and tabs so I used vim to reindent everything to tabs.
Thanks
Joseph",Commit split.,True,{'THUMBS_UP': ['https://github.com/pgrandin']}
navit-gps/navit,https://github.com/navit-gps/navit,574,2018-05-03T05:27:39Z,2018-06-03T17:00:19Z,2018-06-03T17:00:22Z,MERGED,True,4,4,1,https://github.com/aerostitch,Fix:cmake:Fix the way we set the LIB_DIR when LIBDIR is set,1,[],https://github.com/navit-gps/navit/pull/574,https://github.com/aerostitch,5,https://github.com/navit-gps/navit/pull/574#issuecomment-394092126,"Previously we were able to set LIBDIR to standard values like lib and the /navit folder would be added to it later on.
With #215 there have been some enhancements in the handling of LIB_DIR when LIBDIR is not set by setting LIB_DIR directly to lib/navit or lib64/navit. The problem is when you do set LIBDIR, then just the last folder of the provided path is taken as it was before. This causes 2 issues:

/navit is never added to it so you end up adding your libs to lib or lib64 directly
as explained in the cmake documentation section, the LIBDIR could be more than 1 folder level

So I propose we don't change the LIBDIR provided and set LIB_DIR to ${LIBDIR}/navit if LIBDIR is provided but not LIB_DIR (with that change we'll be able to have the same behavior as before #215).
@metalstrolch could you test that this behavior would do fine on Sailfish OS please?
Note: the file had a bunch of mixed spaces and tabs so I used vim to reindent everything to tabs.
Thanks
Joseph",Rebased from trunk and removed the un-necessary re-formatting now that trunk has them.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,576,2018-05-03T06:39:47Z,2018-05-03T14:35:52Z,2018-05-03T14:35:52Z,MERGED,True,0,1,1,https://github.com/aerostitch,cleanup:wince:remove unused ConvertUTF.h header,1,[],https://github.com/navit-gps/navit/pull/576,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/576,"In #575 I noticed that this header seems unused, so cleaning it up.","In #575 I noticed that this header seems unused, so cleaning it up.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,576,2018-05-03T06:39:47Z,2018-05-03T14:35:52Z,2018-05-03T14:35:52Z,MERGED,True,0,1,1,https://github.com/aerostitch,cleanup:wince:remove unused ConvertUTF.h header,1,[],https://github.com/navit-gps/navit/pull/576,https://github.com/jandegr,2,https://github.com/navit-gps/navit/pull/576#issuecomment-386317295,"In #575 I noticed that this header seems unused, so cleaning it up.",thx,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,580,2018-05-06T16:35:01Z,2018-05-06T20:33:58Z,2018-05-06T20:34:02Z,MERGED,True,2,1,1,https://github.com/jandegr,Android:Fix:graphics,2,[],https://github.com/navit-gps/navit/pull/580,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/580,"This fixes an Android Lint error in Androidgraphics.java.
(call required a higher API than minSDK)
AFAIK this was the last one and opens the way to add Lint error checking in the Gradle build.","This fixes an Android Lint error in Androidgraphics.java.
(call required a higher API than minSDK)
AFAIK this was the last one and opens the way to add Lint error checking in the Gradle build.",True,{'THUMBS_UP': ['https://github.com/pgrandin']}
navit-gps/navit,https://github.com/navit-gps/navit,582,2018-05-07T19:20:11Z,2018-05-07T19:27:37Z,2018-05-07T19:27:41Z,CLOSED,False,4,6,1,https://github.com/jkoan,fix:osd:Import Patch from Trac #317,1,[],https://github.com/navit-gps/navit/pull/582,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/582,This PR imports the patch from http://trac.navit-project.org/ticket/371,This PR imports the patch from http://trac.navit-project.org/ticket/371,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,583,2018-05-07T20:22:24Z,2018-05-24T05:28:17Z,2018-05-24T05:28:17Z,MERGED,True,1,1,1,https://github.com/jkoan,fix:config:Fix dtd to allow real xmlint,1,[],https://github.com/navit-gps/navit/pull/583,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/583,"This PR fixes the navit.dtd
Test Command:
xmllint --noout --dtdvalid navit/navit.dtd navit/navit_shipped.xml
Output before:

navit/navit_shipped.xml:36: element navit: validity error : Element navit content does not follow the DTD, expecting (graphics , gui+ , log* , osd* , vehicle* , tracking , vehicleprofile* , route , navigation , speech , mapset+ , layout+)*, got (graphics gui gui log osd osd osd osd osd osd vehicle vehicle tracking vehicleprofile vehicleprofile vehicleprofile vehicleprofile vehicleprofile vehicleprofile vehicleprofile vehicleprofile route navigation speech mapset mapset mapset mapset layer layout layout layout layout layout layout layout ) Document navit/navit_shipped.xml does not validate against navit/navit.dtd
RC: 3

After the Patch:

 
RC: 0","This PR fixes the navit.dtd
Test Command:
xmllint --noout --dtdvalid navit/navit.dtd navit/navit_shipped.xml
Output before:

navit/navit_shipped.xml:36: element navit: validity error : Element navit content does not follow the DTD, expecting (graphics , gui+ , log* , osd* , vehicle* , tracking , vehicleprofile* , route , navigation , speech , mapset+ , layout+)*, got (graphics gui gui log osd osd osd osd osd osd vehicle vehicle tracking vehicleprofile vehicleprofile vehicleprofile vehicleprofile vehicleprofile vehicleprofile vehicleprofile vehicleprofile route navigation speech mapset mapset mapset mapset layer layout layout layout layout layout layout layout ) Document navit/navit_shipped.xml does not validate against navit/navit.dtd
RC: 3

After the Patch:

 
RC: 0",True,{'HOORAY': ['https://github.com/jandegr']}
navit-gps/navit,https://github.com/navit-gps/navit,583,2018-05-07T20:22:24Z,2018-05-24T05:28:17Z,2018-05-24T05:28:17Z,MERGED,True,1,1,1,https://github.com/jkoan,fix:config:Fix dtd to allow real xmlint,1,[],https://github.com/navit-gps/navit/pull/583,https://github.com/aerostitch,2,https://github.com/navit-gps/navit/pull/583#issuecomment-387823427,"This PR fixes the navit.dtd
Test Command:
xmllint --noout --dtdvalid navit/navit.dtd navit/navit_shipped.xml
Output before:

navit/navit_shipped.xml:36: element navit: validity error : Element navit content does not follow the DTD, expecting (graphics , gui+ , log* , osd* , vehicle* , tracking , vehicleprofile* , route , navigation , speech , mapset+ , layout+)*, got (graphics gui gui log osd osd osd osd osd osd vehicle vehicle tracking vehicleprofile vehicleprofile vehicleprofile vehicleprofile vehicleprofile vehicleprofile vehicleprofile vehicleprofile route navigation speech mapset mapset mapset mapset layer layout layout layout layout layout layout layout ) Document navit/navit_shipped.xml does not validate against navit/navit.dtd
RC: 3

After the Patch:

 
RC: 0",Do you plan to add that to the CI @jkoan ?,True,{'THUMBS_UP': ['https://github.com/jandegr']}
navit-gps/navit,https://github.com/navit-gps/navit,583,2018-05-07T20:22:24Z,2018-05-24T05:28:17Z,2018-05-24T05:28:17Z,MERGED,True,1,1,1,https://github.com/jkoan,fix:config:Fix dtd to allow real xmlint,1,[],https://github.com/navit-gps/navit/pull/583,https://github.com/jkoan,3,https://github.com/navit-gps/navit/pull/583#issuecomment-391401384,"This PR fixes the navit.dtd
Test Command:
xmllint --noout --dtdvalid navit/navit.dtd navit/navit_shipped.xml
Output before:

navit/navit_shipped.xml:36: element navit: validity error : Element navit content does not follow the DTD, expecting (graphics , gui+ , log* , osd* , vehicle* , tracking , vehicleprofile* , route , navigation , speech , mapset+ , layout+)*, got (graphics gui gui log osd osd osd osd osd osd vehicle vehicle tracking vehicleprofile vehicleprofile vehicleprofile vehicleprofile vehicleprofile vehicleprofile vehicleprofile vehicleprofile route navigation speech mapset mapset mapset mapset layer layout layout layout layout layout layout layout ) Document navit/navit_shipped.xml does not validate against navit/navit.dtd
RC: 3

After the Patch:

 
RC: 0","@aerostitch not for now, but maybe later :D",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,586,2018-05-10T08:33:38Z,2018-05-12T19:24:52Z,2018-05-12T19:25:00Z,MERGED,True,22,53,4,https://github.com/jandegr,Android lint check,5,[],https://github.com/navit-gps/navit/pull/586,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/586,"This adds lint error checking to the Android builds, the result is uploaded in the artefacts, sample https://7955-30791823-gh.circle-artifacts.com/0/reports/lint-results.html
The CI will fail if errors are found, warnings pass.
Also fixes the last Lint errors appearing in the above report (API mismatches) and now CI succeeds with this as report https://7964-30791823-gh.circle-artifacts.com/0/reports/lint-results.html
The fix for the <19 basetheme will make it look just like other apps on your device, from the 19+ values the entries requiring 21+ are removed.","This adds lint error checking to the Android builds, the result is uploaded in the artefacts, sample https://7955-30791823-gh.circle-artifacts.com/0/reports/lint-results.html
The CI will fail if errors are found, warnings pass.
Also fixes the last Lint errors appearing in the above report (API mismatches) and now CI succeeds with this as report https://7964-30791823-gh.circle-artifacts.com/0/reports/lint-results.html
The fix for the <19 basetheme will make it look just like other apps on your device, from the 19+ values the entries requiring 21+ are removed.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,586,2018-05-10T08:33:38Z,2018-05-12T19:24:52Z,2018-05-12T19:25:00Z,MERGED,True,22,53,4,https://github.com/jandegr,Android lint check,5,[],https://github.com/navit-gps/navit/pull/586,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/586#issuecomment-388065716,"This adds lint error checking to the Android builds, the result is uploaded in the artefacts, sample https://7955-30791823-gh.circle-artifacts.com/0/reports/lint-results.html
The CI will fail if errors are found, warnings pass.
Also fixes the last Lint errors appearing in the above report (API mismatches) and now CI succeeds with this as report https://7964-30791823-gh.circle-artifacts.com/0/reports/lint-results.html
The fix for the <19 basetheme will make it look just like other apps on your device, from the 19+ values the entries requiring 21+ are removed.",Nice!,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,587,2018-05-10T15:36:09Z,2018-05-28T05:20:08Z,2020-08-18T11:56:11Z,CLOSED,False,4063,3952,48,https://github.com/pgrandin,Update:i18n:Updated Bulgarian translation from launchpad,2,['i18n'],https://github.com/navit-gps/navit/pull/587,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/587,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,587,2018-05-10T15:36:09Z,2018-05-28T05:20:08Z,2020-08-18T11:56:11Z,CLOSED,False,4063,3952,48,https://github.com/pgrandin,Update:i18n:Updated Bulgarian translation from launchpad,2,['i18n'],https://github.com/navit-gps/navit/pull/587,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/587#issuecomment-392421842,,"Many next time we are able to import Bulgarian but for now ""upstream"" seems to be broken.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,589,2018-05-12T19:23:53Z,2018-05-14T17:17:37Z,2018-05-15T17:35:15Z,MERGED,True,3890,3394,13,https://github.com/jandegr,Android translations,8,[],https://github.com/navit-gps/navit/pull/589,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/589,"Moves all UI strings from java code to strings.xml.
@pgrandin can you verify the pot file and point me to any errors or shortcomings ?
thx
https://8109-30791823-gh.circle-artifacts.com/0/translations/navit.pot","Moves all UI strings from java code to strings.xml.
@pgrandin can you verify the pot file and point me to any errors or shortcomings ?
thx
https://8109-30791823-gh.circle-artifacts.com/0/translations/navit.pot",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,589,2018-05-12T19:23:53Z,2018-05-14T17:17:37Z,2018-05-15T17:35:15Z,MERGED,True,3890,3394,13,https://github.com/jandegr,Android translations,8,[],https://github.com/navit-gps/navit/pull/589,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/589#issuecomment-388893971,"Moves all UI strings from java code to strings.xml.
@pgrandin can you verify the pot file and point me to any errors or shortcomings ?
thx
https://8109-30791823-gh.circle-artifacts.com/0/translations/navit.pot",Looks like this solves the strings missing from the .pot.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,591,2018-05-14T10:22:40Z,2018-05-14T14:15:21Z,2018-05-14T14:15:21Z,MERGED,True,9,9,1,https://github.com/KAMiKAZOW,Remove overused space characters drom README.md,1,[],https://github.com/navit-gps/navit/pull/591,https://github.com/KAMiKAZOW,1,https://github.com/navit-gps/navit/pull/591,Remove overused space characters from README.md to comply with English language.,Remove overused space characters from README.md to comply with English language.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,592,2018-05-16T16:46:12Z,2018-05-17T04:38:21Z,2018-05-17T04:38:29Z,MERGED,True,1,0,1,https://github.com/jandegr,cleanup:android:remove unused dependency libpng,1,[],https://github.com/navit-gps/navit/pull/592,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/592,"Removes the unused dependency on libpng from the Android build.
Anybody feel free to set a correct title for this accordigng to the guidelines, maybe I will learn myself someday ....","Removes the unused dependency on libpng from the Android build.
Anybody feel free to set a correct title for this accordigng to the guidelines, maybe I will learn myself someday ....",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,593,2018-05-17T01:14:29Z,2018-05-24T13:01:17Z,2018-05-24T14:23:27Z,MERGED,True,22,22,28,https://github.com/aerostitch,cosmetic:ci:rename ci folder to scripts,1,[],https://github.com/navit-gps/navit/pull/593,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/593,"The idea would be in the future to make sure that our scripts are not a bit everywhere in the repo.
Currently there seems to be a bunch lying around, I wonder if we still use them all and if it wouldn't be clearer to regroup some of them into the scripts folder:
$ find . -type f -exec file {} \; | grep 'script'
./.git/hooks/pre-commit: Bourne-Again shell script, ASCII text executable
./gradlew: Bourne-Again shell script, ASCII text executable
./scripts/build_android.sh: Bourne-Again shell script, ASCII text executable
./scripts/build_android_x86.sh: Bourne-Again shell script, ASCII text executable
./scripts/merge_i18n_update.sh: POSIX shell script, ASCII text executable
./scripts/build_wince.sh: POSIX shell script, ASCII text executable      
./scripts/publish.sh: POSIX shell script, ASCII text executable
./scripts/update_download_center.sh: Bourne-Again shell script, ASCII text executable
./scripts/setup_tomtom_requirements.sh: POSIX shell script, ASCII text executable
./scripts/generate_contributors.sh: Bourne-Again shell script, ASCII text executable
./scripts/import_translations.sh: Bourne-Again shell script, ASCII text executable
./scripts/build_win32.sh: POSIX shell script, ASCII text executable      
./scripts/basic_upload_apks.py: Python script, ASCII text executable   
./scripts/dbus_tests.py: Python script, ASCII text executable     
./scripts/build_linux.sh: Bourne-Again shell script, ASCII text executable
./scripts/docker/tomtom/entrypoint.sh: ASCII text                    
./scripts/docker/tomtom/tomtom.cache: ASCII text                          
./scripts/docker/tomtom/Dockerfile: ASCII text                                  
./scripts/docker/tomtom/README.md: ASCII text                            
./scripts/setup_android.sh: Bourne-Again shell script, ASCII text executable
./scripts/update_doxygen.sh: Bourne-Again shell script, ASCII text executable
./scripts/setup_common_requirements.sh: POSIX shell script, ASCII text executable
./scripts/build_tomtom_minimal.sh: POSIX shell script, ASCII text executable 
./scripts/pointer-64.png: PNG image data, 64 x 64, 8-bit gray+alpha, non-interlaced
./scripts/xdotools.sh: POSIX shell script, ASCII text executable                
./scripts/build.sh: ASCII text                                               
./scripts/build_tomtom_plugin.sh: POSIX shell script, ASCII text executable
./scripts/run_linux_tests.sh: Bourne-Again shell script, ASCII text executable
./scripts/setup_wince.sh: ASCII text                                      
./contrib/tomtom/ts/ts-wrapper: POSIX shell script, ASCII text executable       
./contrib/tomtom/navit-wrapper: POSIX shell script, ASCII text executable 
./contrib/android-update-map-sizes.pl: Perl script text executable        
./contrib/sjjb_import.pl: Perl script text executable                     
./contrib/sailfish/build_on_sailfish_sdk.sh: POSIX shell script, ASCII text executable
./contrib/geojson-to-bbox.py: Python script, ASCII text executable
./navit/icons/navit_svg2png: POSIX shell script, ASCII text executable
./navit/android/change_xslt.sh: Bourne-Again shell script, ASCII text executable
./navit/support/gettext_intl/config.charset: POSIX shell script, ASCII text executable
./navit/tools/gpx2navit_txt/mkinstalldirs: POSIX shell script, ASCII text executable
./navit/tools/gpx2navit_txt/missing: POSIX shell script, ASCII text executable
./navit/tools/gpx2navit_txt/config.sub: POSIX shell script, ASCII text executable
./navit/tools/gpx2navit_txt/autogen.sh: POSIX shell script, ASCII text executable
./navit/tools/gpx2navit_txt/install-sh: POSIX shell script, ASCII text executable
./navit/tools/gpx2navit_txt/config.guess: POSIX shell script, ASCII text executable
./navit/tools/gpx2navit_txt/depcomp: POSIX shell script, ASCII text executable
./navit/tools/latlon2bookmark/Makefile: makefile script, ASCII text
./navit/tools/asc2navit: Perl script text executable
./navit/tools/cleanattr.sh: POSIX shell script, ASCII text executable
./navit/startonce.sh: POSIX shell script, ASCII text executable
./navit/binding/dbus/eval.py: a /usr/bin/python script, ASCII text executable
./navit/binding/dbus/test.py: a /usr/bin/python script, ASCII text executable
./navit/script.c: C source, ASCII text
./navit/script/gps_emu4: Perl script text executable
./navit/script/gps_emu: Bourne-Again shell script, ASCII text executable
./navit/script/download_index.html: HTML document, ASCII text
./navit/script/dump_types: POSIX shell script, ASCII text executable
./navit/script/gps_emu3: Bourne-Again shell script, ASCII text executable
./navit/script/gps_emu2: Perl script text executable
./navit/script/compare_map: POSIX shell script, ASCII text executable
./navit/script/gensvg: POSIX shell script, ASCII text executable
./navit/script/get_map: Bourne-Again shell script, ASCII text executable
./navit/script/map_index.php: PHP script, ASCII text
./navit/script/wiki2def: Bourne-Again shell script, ASCII text executable
./navit/script/check_itemdef: POSIX shell script, ASCII text executable
./navit/script/osm/border_follower.pl: Perl script text executable
./navit/script/osm/Geo/OSM/Planet.pm: Perl5 module source, ISO-8859 text
./navit/script/osm/Geo/OSM/OsmXML.pm: Perl5 module source, ASCII text
./navit/script/osm/Geo/OSM/APIClientV6.pm: Perl5 module source, ASCII text
./navit/script/osm/Geo/OSM/OsmChangeReaderV3.pm: Perl5 module source, ASCII text
./navit/script/osm/Geo/OSM/EntitiesV3.pm: Perl5 module source, ASCII text
./navit/script/osm/Geo/OSM/Upload.pm: Perl5 module source, ISO-8859 text
./navit/script/osm/Geo/OSM/EntitiesV5.pm: Perl5 module source, ASCII text
./navit/script/osm/Geo/OSM/Tracks2OSM.pm: Perl5 module source, ISO-8859 text
./navit/script/osm/Geo/OSM/MapFeatures.pm: Perl5 module source, ISO-8859 text
./navit/script/osm/Geo/OSM/EntitiesV6.pm: Perl5 module source, ASCII text
./navit/script/osm/Geo/OSM/OsmChangeReaderV6.pm: Perl5 module source, ASCII text
./navit/script/osm/Geo/OSM/SegmentList.pm: Perl5 module source, ISO-8859 text
./navit/script/osm/Geo/OSM/OsmReaderV5.pm: Perl5 module source, ASCII text
./navit/script/osm/Geo/OSM/Write.pm: Perl5 module source, ISO-8859 text
./navit/script/osm/Geo/OSM/OsmReaderV6.pm: Perl5 module source, ASCII text
./navit/script/osm/Geo/OSM/OsmChangeReaderV5.pm: Perl5 module source, ASCII text
./navit/script/osm/Geo/OSM/APIClientV5.pm: Perl5 module source, ASCII text
./navit/script/osm/Geo/OSM/OsmReaderV3.pm: Perl5 module source, ASCII text
./navit/script/osm/Geo/OSM/APIClientV4.pm: Perl5 module source, ASCII text
./navit/script/osm/osmtool.pl: Perl script text executable
./navit/script/mapExtract.class.php: PHP script, ASCII text
./navit/script/mapextract.php: PHP script, ASCII text executable
./navit/script/cabify.sh: Bourne-Again shell script, ASCII text executable
./navit/script/geotag: POSIX shell script, ASCII text executable
./navit/script/itemgra.pl: Perl script text executable","The idea would be in the future to make sure that our scripts are not a bit everywhere in the repo.
Currently there seems to be a bunch lying around, I wonder if we still use them all and if it wouldn't be clearer to regroup some of them into the scripts folder:
$ find . -type f -exec file {} \; | grep 'script'
./.git/hooks/pre-commit: Bourne-Again shell script, ASCII text executable
./gradlew: Bourne-Again shell script, ASCII text executable
./scripts/build_android.sh: Bourne-Again shell script, ASCII text executable
./scripts/build_android_x86.sh: Bourne-Again shell script, ASCII text executable
./scripts/merge_i18n_update.sh: POSIX shell script, ASCII text executable
./scripts/build_wince.sh: POSIX shell script, ASCII text executable      
./scripts/publish.sh: POSIX shell script, ASCII text executable
./scripts/update_download_center.sh: Bourne-Again shell script, ASCII text executable
./scripts/setup_tomtom_requirements.sh: POSIX shell script, ASCII text executable
./scripts/generate_contributors.sh: Bourne-Again shell script, ASCII text executable
./scripts/import_translations.sh: Bourne-Again shell script, ASCII text executable
./scripts/build_win32.sh: POSIX shell script, ASCII text executable      
./scripts/basic_upload_apks.py: Python script, ASCII text executable   
./scripts/dbus_tests.py: Python script, ASCII text executable     
./scripts/build_linux.sh: Bourne-Again shell script, ASCII text executable
./scripts/docker/tomtom/entrypoint.sh: ASCII text                    
./scripts/docker/tomtom/tomtom.cache: ASCII text                          
./scripts/docker/tomtom/Dockerfile: ASCII text                                  
./scripts/docker/tomtom/README.md: ASCII text                            
./scripts/setup_android.sh: Bourne-Again shell script, ASCII text executable
./scripts/update_doxygen.sh: Bourne-Again shell script, ASCII text executable
./scripts/setup_common_requirements.sh: POSIX shell script, ASCII text executable
./scripts/build_tomtom_minimal.sh: POSIX shell script, ASCII text executable 
./scripts/pointer-64.png: PNG image data, 64 x 64, 8-bit gray+alpha, non-interlaced
./scripts/xdotools.sh: POSIX shell script, ASCII text executable                
./scripts/build.sh: ASCII text                                               
./scripts/build_tomtom_plugin.sh: POSIX shell script, ASCII text executable
./scripts/run_linux_tests.sh: Bourne-Again shell script, ASCII text executable
./scripts/setup_wince.sh: ASCII text                                      
./contrib/tomtom/ts/ts-wrapper: POSIX shell script, ASCII text executable       
./contrib/tomtom/navit-wrapper: POSIX shell script, ASCII text executable 
./contrib/android-update-map-sizes.pl: Perl script text executable        
./contrib/sjjb_import.pl: Perl script text executable                     
./contrib/sailfish/build_on_sailfish_sdk.sh: POSIX shell script, ASCII text executable
./contrib/geojson-to-bbox.py: Python script, ASCII text executable
./navit/icons/navit_svg2png: POSIX shell script, ASCII text executable
./navit/android/change_xslt.sh: Bourne-Again shell script, ASCII text executable
./navit/support/gettext_intl/config.charset: POSIX shell script, ASCII text executable
./navit/tools/gpx2navit_txt/mkinstalldirs: POSIX shell script, ASCII text executable
./navit/tools/gpx2navit_txt/missing: POSIX shell script, ASCII text executable
./navit/tools/gpx2navit_txt/config.sub: POSIX shell script, ASCII text executable
./navit/tools/gpx2navit_txt/autogen.sh: POSIX shell script, ASCII text executable
./navit/tools/gpx2navit_txt/install-sh: POSIX shell script, ASCII text executable
./navit/tools/gpx2navit_txt/config.guess: POSIX shell script, ASCII text executable
./navit/tools/gpx2navit_txt/depcomp: POSIX shell script, ASCII text executable
./navit/tools/latlon2bookmark/Makefile: makefile script, ASCII text
./navit/tools/asc2navit: Perl script text executable
./navit/tools/cleanattr.sh: POSIX shell script, ASCII text executable
./navit/startonce.sh: POSIX shell script, ASCII text executable
./navit/binding/dbus/eval.py: a /usr/bin/python script, ASCII text executable
./navit/binding/dbus/test.py: a /usr/bin/python script, ASCII text executable
./navit/script.c: C source, ASCII text
./navit/script/gps_emu4: Perl script text executable
./navit/script/gps_emu: Bourne-Again shell script, ASCII text executable
./navit/script/download_index.html: HTML document, ASCII text
./navit/script/dump_types: POSIX shell script, ASCII text executable
./navit/script/gps_emu3: Bourne-Again shell script, ASCII text executable
./navit/script/gps_emu2: Perl script text executable
./navit/script/compare_map: POSIX shell script, ASCII text executable
./navit/script/gensvg: POSIX shell script, ASCII text executable
./navit/script/get_map: Bourne-Again shell script, ASCII text executable
./navit/script/map_index.php: PHP script, ASCII text
./navit/script/wiki2def: Bourne-Again shell script, ASCII text executable
./navit/script/check_itemdef: POSIX shell script, ASCII text executable
./navit/script/osm/border_follower.pl: Perl script text executable
./navit/script/osm/Geo/OSM/Planet.pm: Perl5 module source, ISO-8859 text
./navit/script/osm/Geo/OSM/OsmXML.pm: Perl5 module source, ASCII text
./navit/script/osm/Geo/OSM/APIClientV6.pm: Perl5 module source, ASCII text
./navit/script/osm/Geo/OSM/OsmChangeReaderV3.pm: Perl5 module source, ASCII text
./navit/script/osm/Geo/OSM/EntitiesV3.pm: Perl5 module source, ASCII text
./navit/script/osm/Geo/OSM/Upload.pm: Perl5 module source, ISO-8859 text
./navit/script/osm/Geo/OSM/EntitiesV5.pm: Perl5 module source, ASCII text
./navit/script/osm/Geo/OSM/Tracks2OSM.pm: Perl5 module source, ISO-8859 text
./navit/script/osm/Geo/OSM/MapFeatures.pm: Perl5 module source, ISO-8859 text
./navit/script/osm/Geo/OSM/EntitiesV6.pm: Perl5 module source, ASCII text
./navit/script/osm/Geo/OSM/OsmChangeReaderV6.pm: Perl5 module source, ASCII text
./navit/script/osm/Geo/OSM/SegmentList.pm: Perl5 module source, ISO-8859 text
./navit/script/osm/Geo/OSM/OsmReaderV5.pm: Perl5 module source, ASCII text
./navit/script/osm/Geo/OSM/Write.pm: Perl5 module source, ISO-8859 text
./navit/script/osm/Geo/OSM/OsmReaderV6.pm: Perl5 module source, ASCII text
./navit/script/osm/Geo/OSM/OsmChangeReaderV5.pm: Perl5 module source, ASCII text
./navit/script/osm/Geo/OSM/APIClientV5.pm: Perl5 module source, ASCII text
./navit/script/osm/Geo/OSM/OsmReaderV3.pm: Perl5 module source, ASCII text
./navit/script/osm/Geo/OSM/APIClientV4.pm: Perl5 module source, ASCII text
./navit/script/osm/osmtool.pl: Perl script text executable
./navit/script/mapExtract.class.php: PHP script, ASCII text
./navit/script/mapextract.php: PHP script, ASCII text executable
./navit/script/cabify.sh: Bourne-Again shell script, ASCII text executable
./navit/script/geotag: POSIX shell script, ASCII text executable
./navit/script/itemgra.pl: Perl script text executable",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,594,2018-05-23T14:55:37Z,2018-05-23T15:57:18Z,2018-05-23T16:11:22Z,MERGED,True,4,0,1,https://github.com/mvglasow,Add:build:Add cmake4eclipse artifacts to .gitignore,1,[],https://github.com/navit-gps/navit/pull/594,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/594,"After upgrading to Eclipse Oxygen (previously on Luna) and encountering several issues, I learned that CMake’s project generator for Eclipse is unmaintained and Eclipse’s maintainers advise against using it, as there have been issues with it. The recommendation is to use cmake4eclipse instead.
I have tried it and found it not only fixes the issues I was experiencing, but also does away with the limitations we had in the past:

Source files no longer appear in two different places in the tree, leaving you to wonder which is the correct one to edit
As CMakeLists.txt is the single source of truth, changes to the CMake setup take effect instantly (presumably—not yet tested in practice)
Team features (git access from Eclipse) are now available

I have created a draft for an updated installation guide at https://wiki.navit-project.org/index.php/User:Mvglasow/Eclipse.
However, this setup writes a few files to the Navit source tree: build artifacts go into a subdir of it, and there are a few Eclipse housekeeping files. This pull request extends .gitignore to prevent these things from polluting our source tree (these files contain local configuration and should not be committed).","After upgrading to Eclipse Oxygen (previously on Luna) and encountering several issues, I learned that CMake’s project generator for Eclipse is unmaintained and Eclipse’s maintainers advise against using it, as there have been issues with it. The recommendation is to use cmake4eclipse instead.
I have tried it and found it not only fixes the issues I was experiencing, but also does away with the limitations we had in the past:

Source files no longer appear in two different places in the tree, leaving you to wonder which is the correct one to edit
As CMakeLists.txt is the single source of truth, changes to the CMake setup take effect instantly (presumably—not yet tested in practice)
Team features (git access from Eclipse) are now available

I have created a draft for an updated installation guide at https://wiki.navit-project.org/index.php/User:Mvglasow/Eclipse.
However, this setup writes a few files to the Navit source tree: build artifacts go into a subdir of it, and there are a few Eclipse housekeeping files. This pull request extends .gitignore to prevent these things from polluting our source tree (these files contain local configuration and should not be committed).",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,595,2018-05-23T19:32:39Z,2018-05-25T04:58:50Z,2018-05-25T04:58:55Z,MERGED,True,689,372,17,https://github.com/jandegr,Add:Android:checkstyle-javadoc,11,[],https://github.com/navit-gps/navit/pull/595,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/595,"Adds checkstyle and javadoc.
Awaiting #569 it treats Array brackets at illegal position and incorrect lexicographycal order of imports as errors, just to start with something easy, and leaves the rest as warning.
To be refined after #569.
adds
https://8419-30791823-gh.circle-artifacts.com/0/reports/checkstyleMain.html
https://8419-30791823-gh.circle-artifacts.com/0/doc/index.html
to what we already had (Lint)
https://8419-30791823-gh.circle-artifacts.com/0/reports/lint-results.html","Adds checkstyle and javadoc.
Awaiting #569 it treats Array brackets at illegal position and incorrect lexicographycal order of imports as errors, just to start with something easy, and leaves the rest as warning.
To be refined after #569.
adds
https://8419-30791823-gh.circle-artifacts.com/0/reports/checkstyleMain.html
https://8419-30791823-gh.circle-artifacts.com/0/doc/index.html
to what we already had (Lint)
https://8419-30791823-gh.circle-artifacts.com/0/reports/lint-results.html",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,596,2018-05-24T13:03:52Z,2018-05-24T13:05:03Z,2018-05-24T13:05:03Z,MERGED,True,3949,3479,47,https://github.com/jkoan,Update brache to trigger fresh build,7,[],https://github.com/navit-gps/navit/pull/596,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/596,Update brache to trigger fresh build,Update brache to trigger fresh build,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,598,2018-05-24T17:44:33Z,2018-05-24T20:19:02Z,2018-05-24T20:19:05Z,MERGED,True,3,2,1,https://github.com/aerostitch,fix:maptool:coverity #262887 - leaked_storage: Variable f going out of scope leaks the storage it points to.,1,[],https://github.com/navit-gps/navit/pull/598,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/598,Closes: #597,Closes: #597,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,599,2018-05-24T18:13:30Z,2018-06-03T06:16:38Z,2018-08-31T02:53:15Z,MERGED,True,2,0,1,https://github.com/jkoan,add:doc:addcodefactor.io,1,[],https://github.com/navit-gps/navit/pull/599,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/599,Add codefactor.io to Readme since it is used now and has good hints ;),Add codefactor.io to Readme since it is used now and has good hints ;),True,{}
navit-gps/navit,https://github.com/navit-gps/navit,599,2018-05-24T18:13:30Z,2018-06-03T06:16:38Z,2018-08-31T02:53:15Z,MERGED,True,2,0,1,https://github.com/jkoan,add:doc:addcodefactor.io,1,[],https://github.com/navit-gps/navit/pull/599,https://github.com/jandegr,2,https://github.com/navit-gps/navit/pull/599#issuecomment-391829788,Add codefactor.io to Readme since it is used now and has good hints ;),"Hi,
I'd like to ask the following
Is it configurable ?
Is there a list somewehere indicating what it investigates.
I have the impression it does not find a lot for java, giving more or less a false OK.
thx",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,599,2018-05-24T18:13:30Z,2018-06-03T06:16:38Z,2018-08-31T02:53:15Z,MERGED,True,2,0,1,https://github.com/jkoan,add:doc:addcodefactor.io,1,[],https://github.com/navit-gps/navit/pull/599,https://github.com/pgrandin,3,https://github.com/navit-gps/navit/pull/599#issuecomment-391846250,Add codefactor.io to Readme since it is used now and has good hints ;),@jandegr worst case we can start by adding an ignore pattern for the java files : https://www.codefactor.io/repository/github/navit-gps/navit/ignore and then dig to see if we can have it parse more than one language at once?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,599,2018-05-24T18:13:30Z,2018-06-03T06:16:38Z,2018-08-31T02:53:15Z,MERGED,True,2,0,1,https://github.com/jkoan,add:doc:addcodefactor.io,1,[],https://github.com/navit-gps/navit/pull/599,https://github.com/pgrandin,4,https://github.com/navit-gps/navit/pull/599#issuecomment-391846600,Add codefactor.io to Readme since it is used now and has good hints ;),@jandegr actually we can use a checkstyle.xml file for java : http://checkstyle.sourceforge.net/style_configs.html,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,599,2018-05-24T18:13:30Z,2018-06-03T06:16:38Z,2018-08-31T02:53:15Z,MERGED,True,2,0,1,https://github.com/jkoan,add:doc:addcodefactor.io,1,[],https://github.com/navit-gps/navit/pull/599,https://github.com/jandegr,5,https://github.com/navit-gps/navit/pull/599#issuecomment-391849241,Add codefactor.io to Readme since it is used now and has good hints ;),"thx, why not give it a go with the checkstyle config from #595
https://github.com/navit-gps/navit/blob/Android_checkstyle_2/navit/android/navit_checkstyle.xml
and we can compare with https://8419-30791823-gh.circle-artifacts.com/0/reports/checkstyleMain.html
I don't have access to codefactor, so if one of you could...",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,599,2018-05-24T18:13:30Z,2018-06-03T06:16:38Z,2018-08-31T02:53:15Z,MERGED,True,2,0,1,https://github.com/jkoan,add:doc:addcodefactor.io,1,[],https://github.com/navit-gps/navit/pull/599,https://github.com/pgrandin,6,https://github.com/navit-gps/navit/pull/599#issuecomment-391911886,Add codefactor.io to Readme since it is used now and has good hints ;),"Oh wow, the timing of #595 is perfect :)
We might need to rename navit/android/navit_checkstyle.xml to checkstyle.xml
I'll dig to see if we can configure CodeFactor to use a file at a different path",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,599,2018-05-24T18:13:30Z,2018-06-03T06:16:38Z,2018-08-31T02:53:15Z,MERGED,True,2,0,1,https://github.com/jkoan,add:doc:addcodefactor.io,1,[],https://github.com/navit-gps/navit/pull/599,https://github.com/pgrandin,7,https://github.com/navit-gps/navit/pull/599#issuecomment-392977824,Add codefactor.io to Readme since it is used now and has good hints ;),"CodeFactor support replied :



Both file name and location are important forcheckstyle. So e.g. https://github.com/navit-gps/navit/checkstyle.xml can be recognized by CodeFactor. You can also check https://www.codefactor.io/repository/github/navit-gps/navit/settings to see whether or not you are using the custom configuration. If your checkstyle.xml file is in the right place, Settings Page will show ""Custom"" configuration tooltip next to it.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,599,2018-05-24T18:13:30Z,2018-06-03T06:16:38Z,2018-08-31T02:53:15Z,MERGED,True,2,0,1,https://github.com/jkoan,add:doc:addcodefactor.io,1,[],https://github.com/navit-gps/navit/pull/599,https://github.com/jkoan,8,https://github.com/navit-gps/navit/pull/599#issuecomment-393212476,Add codefactor.io to Readme since it is used now and has good hints ;),@jandegr @pgrandin so we would need to move the file or set a link?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,600,2018-05-25T17:02:03Z,2018-05-25T17:02:34Z,2020-08-18T11:56:11Z,MERGED,True,821,531,1,https://github.com/pgrandin,Update:i18n:Updated Serbian translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/600,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/600,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,601,2018-05-25T17:03:05Z,2018-05-25T17:06:06Z,2020-08-18T11:56:12Z,MERGED,True,862,555,1,https://github.com/pgrandin,Update:i18n:Updated Dutch translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/601,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/601,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,602,2018-05-25T17:03:30Z,2018-05-25T17:35:17Z,2020-08-18T11:56:12Z,MERGED,True,866,584,1,https://github.com/pgrandin,Update:i18n:Updated Čeština translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/602,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/602,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,603,2018-05-29T17:18:09Z,2018-09-02T07:30:30Z,2018-09-02T07:30:30Z,MERGED,True,44,0,1,https://github.com/aerostitch,add:helper:Add a pre-commit hook script for users to use locally,1,[],https://github.com/navit-gps/navit/pull/603,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/603,"Related to #569: This PR adds a pre-commit hook example script that removes trailing spaces, control-M and uses astyle to reformat files automatically.
Instructions are in the header.
This is not something mandatory and we'll probably need to mention it in the doc when we update it.","Related to #569: This PR adds a pre-commit hook example script that removes trailing spaces, control-M and uses astyle to reformat files automatically.
Instructions are in the header.
This is not something mandatory and we'll probably need to mention it in the doc when we update it.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,603,2018-05-29T17:18:09Z,2018-09-02T07:30:30Z,2018-09-02T07:30:30Z,MERGED,True,44,0,1,https://github.com/aerostitch,add:helper:Add a pre-commit hook script for users to use locally,1,[],https://github.com/navit-gps/navit/pull/603,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/603#issuecomment-392865018,"Related to #569: This PR adds a pre-commit hook example script that removes trailing spaces, control-M and uses astyle to reformat files automatically.
Instructions are in the header.
This is not something mandatory and we'll probably need to mention it in the doc when we update it.",What about windows and other OS's that don't have bash?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,603,2018-05-29T17:18:09Z,2018-09-02T07:30:30Z,2018-09-02T07:30:30Z,MERGED,True,44,0,1,https://github.com/aerostitch,add:helper:Add a pre-commit hook script for users to use locally,1,[],https://github.com/navit-gps/navit/pull/603,https://github.com/aerostitch,3,https://github.com/navit-gps/navit/pull/603#issuecomment-392866220,"Related to #569: This PR adds a pre-commit hook example script that removes trailing spaces, control-M and uses astyle to reformat files automatically.
Instructions are in the header.
This is not something mandatory and we'll probably need to mention it in the doc when we update it.","I don't have a language that I'm sure to be installed everywhere. Bash is the most commonly installed on *nix platforms, that's why it's used here.
I have the chance not to have to touch a windows platform in years, so maybe someone with windows knowledge can add a windows-specific script.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,603,2018-05-29T17:18:09Z,2018-09-02T07:30:30Z,2018-09-02T07:30:30Z,MERGED,True,44,0,1,https://github.com/aerostitch,add:helper:Add a pre-commit hook script for users to use locally,1,[],https://github.com/navit-gps/navit/pull/603,https://github.com/jandegr,4,https://github.com/navit-gps/navit/pull/603#issuecomment-392867780,"Related to #569: This PR adds a pre-commit hook example script that removes trailing spaces, control-M and uses astyle to reformat files automatically.
Instructions are in the header.
This is not something mandatory and we'll probably need to mention it in the doc when we update it.","Hi,
This is a little bit confusing,
On line 36 it suggests it will check java too, but did not find it in the code.
For Java I already commented #569 (comment)
I have the impression nobody took an in-depth look at wat astyle did ok or not ok for C files but a very quick check revealed it did not a lot better there either.
Why not install checkstyle on CI for C first like I already did for Java ?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,603,2018-05-29T17:18:09Z,2018-09-02T07:30:30Z,2018-09-02T07:30:30Z,MERGED,True,44,0,1,https://github.com/aerostitch,add:helper:Add a pre-commit hook script for users to use locally,1,[],https://github.com/navit-gps/navit/pull/603,https://github.com/aerostitch,5,https://github.com/navit-gps/navit/pull/603#issuecomment-392871207,"Related to #569: This PR adds a pre-commit hook example script that removes trailing spaces, control-M and uses astyle to reformat files automatically.
Instructions are in the header.
This is not something mandatory and we'll probably need to mention it in the doc when we update it.","Hi @jandegr,

On line 36 it suggests it will check java too, but did not find it in the code.

I forgot to remove the java part from the comment. Good catch. I wasn't sure what was the final tool that you wanted to use for java formatting.

I have the impression nobody took an in-depth look at wat astyle did ok or not ok for C files but a very quick check revealed it did not a lot better there either.

I think that statement is not really fair. Several people went over the changes and yes, it seems you caught some weirdness afterwards that had not been caught before. It's no reason to diminish other people's work on change reviews.

Why not install checkstyle on CI for C first like I already did for Java ?

The initial idea was to use one tool for everything, and in #569 we started using astyle. You came up later with the checkstyle project and it's still not clear to me waht you want to use it for. Originally I thought you only wanted it for some java best practices, now you're sayign it's our linter for java and for C?
Also you're suggesting that people using the pre-commit should also have java installed and run checkstyle?
I would really like for us to be coherent in the tools we use for code formatting. Can we make sure everybody agrees on 1 tool and stick to it?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,603,2018-05-29T17:18:09Z,2018-09-02T07:30:30Z,2018-09-02T07:30:30Z,MERGED,True,44,0,1,https://github.com/aerostitch,add:helper:Add a pre-commit hook script for users to use locally,1,[],https://github.com/navit-gps/navit/pull/603,https://github.com/aerostitch,6,https://github.com/navit-gps/navit/pull/603#issuecomment-392875016,"Related to #569: This PR adds a pre-commit hook example script that removes trailing spaces, control-M and uses astyle to reformat files automatically.
Instructions are in the header.
This is not something mandatory and we'll probably need to mention it in the doc when we update it.","I have the impression nobody took an in-depth look at wat astyle did ok or not ok for C files but a very quick check revealed it did not a lot better there either.

See: #569 (comment)
and #604",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,603,2018-05-29T17:18:09Z,2018-09-02T07:30:30Z,2018-09-02T07:30:30Z,MERGED,True,44,0,1,https://github.com/aerostitch,add:helper:Add a pre-commit hook script for users to use locally,1,[],https://github.com/navit-gps/navit/pull/603,https://github.com/jandegr,7,https://github.com/navit-gps/navit/pull/603#issuecomment-392875317,"Related to #569: This PR adds a pre-commit hook example script that removes trailing spaces, control-M and uses astyle to reformat files automatically.
Instructions are in the header.
This is not something mandatory and we'll probably need to mention it in the doc when we update it.","Checkstyle cheks, it does not do any formatting but it points me to lines longer than 120 after the astyle work. Nothing is more than some ink on paper without chekcs, no matter what the conversion tool claims.
If somebody runs checkstyle on the C code it will report lines over 120 chars long over there as well.
The formatting tool and the conversion tool are two different things, lint as a third goes over more conceptual matters.
Checkstyle warnings increased by 250 after astyle to 1232, have been working ever since the commit to clean it up and now got it down to 770 in total (not all astyle related).
Astyle did ok for placement of {}, tabs, trailing spaces and such but for linelength and wrapping ???
If somobody actually looked indepth they would have seen the linelength as well, so nobody looked !!!!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,603,2018-05-29T17:18:09Z,2018-09-02T07:30:30Z,2018-09-02T07:30:30Z,MERGED,True,44,0,1,https://github.com/aerostitch,add:helper:Add a pre-commit hook script for users to use locally,1,[],https://github.com/navit-gps/navit/pull/603,https://github.com/aerostitch,8,https://github.com/navit-gps/navit/pull/603#issuecomment-392879974,"Related to #569: This PR adds a pre-commit hook example script that removes trailing spaces, control-M and uses astyle to reformat files automatically.
Instructions are in the header.
This is not something mandatory and we'll probably need to mention it in the doc when we update it.","Jeez, can you take just one min to read the doc before accusing people to not do a good job: http://astyle.sourceforge.net/astyle.html#_max-code-length

Some code will not be broken, such as comments, quotes, and arrays. If used with keep‑one‑line‑blocks or add-one-line-braces the blocks will NOT be broken. If used with keep‑one‑line‑statements the statements will be broken at a semicolon if the line goes over the maximum length. If there is no available break point within the max code length, the line will be broken at the first available break point after the max code length.

Note that trailing spaces has nothing to do with astyle if you bothered looking at the script...",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,603,2018-05-29T17:18:09Z,2018-09-02T07:30:30Z,2018-09-02T07:30:30Z,MERGED,True,44,0,1,https://github.com/aerostitch,add:helper:Add a pre-commit hook script for users to use locally,1,[],https://github.com/navit-gps/navit/pull/603,https://github.com/jkoan,9,https://github.com/navit-gps/navit/pull/603#issuecomment-393289230,"Related to #569: This PR adds a pre-commit hook example script that removes trailing spaces, control-M and uses astyle to reformat files automatically.
Instructions are in the header.
This is not something mandatory and we'll probably need to mention it in the doc when we update it.","Generally i like the idea of hooks, but i think we should not do it like that. The CI test should only reject the PR and we can handle it like we want.
I know that this brings a bit more overhead but is better for not so advanced users that don't know how to fix such problems.
Other opinions? @pgrandin",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,603,2018-05-29T17:18:09Z,2018-09-02T07:30:30Z,2018-09-02T07:30:30Z,MERGED,True,44,0,1,https://github.com/aerostitch,add:helper:Add a pre-commit hook script for users to use locally,1,[],https://github.com/navit-gps/navit/pull/603,https://github.com/aerostitch,10,https://github.com/navit-gps/navit/pull/603#issuecomment-393291588,"Related to #569: This PR adds a pre-commit hook example script that removes trailing spaces, control-M and uses astyle to reformat files automatically.
Instructions are in the header.
This is not something mandatory and we'll probably need to mention it in the doc when we update it.","Note:
The hook is just a helper that you can install only if you want to on your computer and nowhere else (nothing to do with the CI), it's not mandatory at all (in case you thought so). Having it in our repo would just allow us to reference in the doc and not having people reinvent the wheel if they want to add such helper.
It will just let you avoid to worry about the formatting and the trailing spaces for you (when you execute your git commit command.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,603,2018-05-29T17:18:09Z,2018-09-02T07:30:30Z,2018-09-02T07:30:30Z,MERGED,True,44,0,1,https://github.com/aerostitch,add:helper:Add a pre-commit hook script for users to use locally,1,[],https://github.com/navit-gps/navit/pull/603,https://github.com/jandegr,11,https://github.com/navit-gps/navit/pull/603#issuecomment-394078633,"Related to #569: This PR adds a pre-commit hook example script that removes trailing spaces, control-M and uses astyle to reformat files automatically.
Instructions are in the header.
This is not something mandatory and we'll probably need to mention it in the doc when we update it.","Lets all look in the mirror,
In #569 you suggest linelength will be limited to 120,
as you stated there
100% of the responses indicated 120 chars as preferred line length
I already stated in #569 that it ignores the preceding spaces (from the indents)
You ran astyle to limit the codelength to 120 instead of linelength, resulting in lines with up to 120 chars of code + any number of indents.
If that was the intended result you should have been clear about it.
I think it is questionable and I am not alone
https://sourceforge.net/p/astyle/bugs/230/
Excuse me very much for running checkstyle on it before and after the change, I know of no better than to check first, then modify followed by an after check, and then proceed with actions like this PR to enforce it in future commits.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,603,2018-05-29T17:18:09Z,2018-09-02T07:30:30Z,2018-09-02T07:30:30Z,MERGED,True,44,0,1,https://github.com/aerostitch,add:helper:Add a pre-commit hook script for users to use locally,1,[],https://github.com/navit-gps/navit/pull/603,https://github.com/aerostitch,12,https://github.com/navit-gps/navit/pull/603#issuecomment-394087819,"Related to #569: This PR adds a pre-commit hook example script that removes trailing spaces, control-M and uses astyle to reformat files automatically.
Instructions are in the header.
This is not something mandatory and we'll probably need to mention it in the doc when we update it.","Hi @jandegr,

I already stated in #569 that it ignores the preceding spaces (from the indents)

Indeed, with what you added in your last comment it's much clearer Thanks for that.

You ran astyle to limit the codelength to 120 instead of linelength, resulting in lines with up to 120 chars of code + any number of indents.
If that was the intended result you should have been clear about it.

Not it was not. But now that you've noticed that issue we can say that astyle is not good for length enforcement but it could still be useful for making sure that the function declaration is attached to its opening bracket and its return type no?

Excuse me very much for running checkstyle on it before and after the change

It's already been stated several times that the work you did on checkstyle is awesome.
The disagreement in the previous response was on the aggressiveness of the comments around the work of the reviewers after the merge.
The other PR was open for more than a month and easily reproducible but a lot of changes at the same time often lead to misses and this was no exception.
Maybe if we would have checked the checkstyle reports before the merge we would have caught it earlier.

then proceed with actions like this PR to enforce it in future commits.

Again, this is just a helper that you can install locally to make some minor code style change while you commit. It's not meant to enforce anything and is not mandatory.
The enforcement:

of the trim of line endings (using sed) and the attachement of return code and opening brackets (using astyle) is be done with #606
of the use of checkstyle will be done with #608 (I know that codefactor has sometimes weird behavior so if you want to add it globally in circleci to the sanity check from #606, that's no problem)

I think both could be complementary but if you have a better solution, we can switch to it. I'm totally open to change.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,603,2018-05-29T17:18:09Z,2018-09-02T07:30:30Z,2018-09-02T07:30:30Z,MERGED,True,44,0,1,https://github.com/aerostitch,add:helper:Add a pre-commit hook script for users to use locally,1,[],https://github.com/navit-gps/navit/pull/603,https://github.com/jkoan,13,https://github.com/navit-gps/navit/pull/603#issuecomment-417910998,"Related to #569: This PR adds a pre-commit hook example script that removes trailing spaces, control-M and uses astyle to reformat files automatically.
Instructions are in the header.
This is not something mandatory and we'll probably need to mention it in the doc when we update it.","I will merge that now because it's only locally and does not conflict with anything. Even though there are two ways to c hack the code style, I think both have there advantages and there for we should use both to check the style. Anyone can optimize this check script if he wants to",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,604,2018-05-29T17:54:38Z,2018-05-29T18:31:39Z,2018-05-29T22:58:25Z,MERGED,True,2,4,1,https://github.com/aerostitch,Cleanup:android: re-attach return type to function declaration,1,[],https://github.com/navit-gps/navit/pull/604,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/604,"As mentionned in #569 (comment)
there was a miss in the reformatting.","As mentionned in #569 (comment)
there was a miss in the reformatting.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,604,2018-05-29T17:54:38Z,2018-05-29T18:31:39Z,2018-05-29T22:58:25Z,MERGED,True,2,4,1,https://github.com/aerostitch,Cleanup:android: re-attach return type to function declaration,1,[],https://github.com/navit-gps/navit/pull/604,https://github.com/aerostitch,2,https://github.com/navit-gps/navit/pull/604#issuecomment-392887847,"As mentionned in #569 (comment)
there was a miss in the reformatting.",Thx,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,604,2018-05-29T17:54:38Z,2018-05-29T18:31:39Z,2018-05-29T22:58:25Z,MERGED,True,2,4,1,https://github.com/aerostitch,Cleanup:android: re-attach return type to function declaration,1,[],https://github.com/navit-gps/navit/pull/604,https://github.com/pgrandin,3,https://github.com/navit-gps/navit/pull/604#issuecomment-392974293,"As mentionned in #569 (comment)
there was a miss in the reformatting.",This was commit #7000 ! 🎊 🍸,True,{'LAUGH': ['https://github.com/aerostitch']}
navit-gps/navit,https://github.com/navit-gps/navit,605,2018-05-29T18:01:37Z,2018-05-30T15:43:43Z,2018-05-30T15:46:50Z,MERGED,True,3470,6541,159,https://github.com/aerostitch,Cleanup:global:force the re-attach the return type to the function declaration,2,[],https://github.com/navit-gps/navit/pull/605,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/605,"It seems that there was a miss in #569: the -xf and -xh options of astyle have been forgotten, so the attachement of the return types was not done.
This PR corrects this for C and Cpp files.
Command-line used:
find . -type f   \
  \( -not -path './navit/support/*' -a -not -path './navit/fib-1.1/*' \)  \
  -a \( -iname '*.c' -o -iname '*.cpp' \) \
  -exec  astyle --indent=spaces=4 --style=attach -n --max-code-length=120 -xf -xh {} \;","It seems that there was a miss in #569: the -xf and -xh options of astyle have been forgotten, so the attachement of the return types was not done.
This PR corrects this for C and Cpp files.
Command-line used:
find . -type f   \
  \( -not -path './navit/support/*' -a -not -path './navit/fib-1.1/*' \)  \
  -a \( -iname '*.c' -o -iname '*.cpp' \) \
  -exec  astyle --indent=spaces=4 --style=attach -n --max-code-length=120 -xf -xh {} \;",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,605,2018-05-29T18:01:37Z,2018-05-30T15:43:43Z,2018-05-30T15:46:50Z,MERGED,True,3470,6541,159,https://github.com/aerostitch,Cleanup:global:force the re-attach the return type to the function declaration,2,[],https://github.com/navit-gps/navit/pull/605,https://github.com/aerostitch,2,https://github.com/navit-gps/navit/pull/605#issuecomment-392888594,"It seems that there was a miss in #569: the -xf and -xh options of astyle have been forgotten, so the attachement of the return types was not done.
This PR corrects this for C and Cpp files.
Command-line used:
find . -type f   \
  \( -not -path './navit/support/*' -a -not -path './navit/fib-1.1/*' \)  \
  -a \( -iname '*.c' -o -iname '*.cpp' \) \
  -exec  astyle --indent=spaces=4 --style=attach -n --max-code-length=120 -xf -xh {} \;",I wonder if I should just break this one in smaller PR to make it easier for people to review.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,605,2018-05-29T18:01:37Z,2018-05-30T15:43:43Z,2018-05-30T15:46:50Z,MERGED,True,3470,6541,159,https://github.com/aerostitch,Cleanup:global:force the re-attach the return type to the function declaration,2,[],https://github.com/navit-gps/navit/pull/605,https://github.com/aerostitch,3,https://github.com/navit-gps/navit/pull/605#issuecomment-392890116,"It seems that there was a miss in #569: the -xf and -xh options of astyle have been forgotten, so the attachement of the return types was not done.
This PR corrects this for C and Cpp files.
Command-line used:
find . -type f   \
  \( -not -path './navit/support/*' -a -not -path './navit/fib-1.1/*' \)  \
  -a \( -iname '*.c' -o -iname '*.cpp' \) \
  -exec  astyle --indent=spaces=4 --style=attach -n --max-code-length=120 -xf -xh {} \;","Note that the already broken function declarations don't get reattached, resulting in stuffs like:
JNIEXPORT void JNICALL Java_org_navitproject_navit_NavitAddressSearchActivity_CallbackCancelAddressSearch( JNIEnv* env,
        jobject thiz,
        jlong handle) {

Cleaning that up.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,605,2018-05-29T18:01:37Z,2018-05-30T15:43:43Z,2018-05-30T15:46:50Z,MERGED,True,3470,6541,159,https://github.com/aerostitch,Cleanup:global:force the re-attach the return type to the function declaration,2,[],https://github.com/navit-gps/navit/pull/605,https://github.com/aerostitch,4,https://github.com/navit-gps/navit/pull/605#issuecomment-393033855,"It seems that there was a miss in #569: the -xf and -xh options of astyle have been forgotten, so the attachement of the return types was not done.
This PR corrects this for C and Cpp files.
Command-line used:
find . -type f   \
  \( -not -path './navit/support/*' -a -not -path './navit/fib-1.1/*' \)  \
  -a \( -iname '*.c' -o -iname '*.cpp' \) \
  -exec  astyle --indent=spaces=4 --style=attach -n --max-code-length=120 -xf -xh {} \;",@pgrandin should I merge or wait for another approval?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,606,2018-05-29T21:44:41Z,2018-05-30T18:22:00Z,2018-05-30T18:22:03Z,MERGED,True,68,7,3,https://github.com/aerostitch,add:ci:Add sanity check script on circleci,2,[],https://github.com/navit-gps/navit/pull/606,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/606,"The idea of this is to add a sanity check before even the builds start.
This just remove the trailing spaces and runs astyle with what we did in #569 and #605.
It could be, for example, extended with the nice work @jandegr is doing on checkstyle with Java.","The idea of this is to add a sanity check before even the builds start.
This just remove the trailing spaces and runs astyle with what we did in #569 and #605.
It could be, for example, extended with the nice work @jandegr is doing on checkstyle with Java.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,606,2018-05-29T21:44:41Z,2018-05-30T18:22:00Z,2018-05-30T18:22:03Z,MERGED,True,68,7,3,https://github.com/aerostitch,add:ci:Add sanity check script on circleci,2,[],https://github.com/navit-gps/navit/pull/606,https://github.com/aerostitch,2,https://github.com/navit-gps/navit/pull/606#issuecomment-392962387,"The idea of this is to add a sanity check before even the builds start.
This just remove the trailing spaces and runs astyle with what we did in #569 and #605.
It could be, for example, extended with the nice work @jandegr is doing on checkstyle with Java.",We should probably add something that enforce @jkoan 's work from #583 in there.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,606,2018-05-29T21:44:41Z,2018-05-30T18:22:00Z,2018-05-30T18:22:03Z,MERGED,True,68,7,3,https://github.com/aerostitch,add:ci:Add sanity check script on circleci,2,[],https://github.com/navit-gps/navit/pull/606,https://github.com/aerostitch,3,https://github.com/navit-gps/navit/pull/606#issuecomment-393033898,"The idea of this is to add a sanity check before even the builds start.
This just remove the trailing spaces and runs astyle with what we did in #569 and #605.
It could be, for example, extended with the nice work @jandegr is doing on checkstyle with Java.",@pgrandin should I merge or wait for another approval?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,607,2018-05-30T19:43:54Z,2018-06-02T10:53:13Z,2018-06-02T10:53:13Z,MERGED,True,1,1,1,https://github.com/tengel,Add underscore to internal gui keyboard.,1,[],https://github.com/navit-gps/navit/pull/607,https://github.com/tengel,1,https://github.com/navit-gps/navit/pull/607,"This patch adds a underscore key ('_') to the internal GUI keyboard. The underscore is necessary to search for POI types, for example poi_shop_bicycle.
Thank you for merging.","This patch adds a underscore key ('_') to the internal GUI keyboard. The underscore is necessary to search for POI types, for example poi_shop_bicycle.
Thank you for merging.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,607,2018-05-30T19:43:54Z,2018-06-02T10:53:13Z,2018-06-02T10:53:13Z,MERGED,True,1,1,1,https://github.com/tengel,Add underscore to internal gui keyboard.,1,[],https://github.com/navit-gps/navit/pull/607,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/607#issuecomment-393776764,"This patch adds a underscore key ('_') to the internal GUI keyboard. The underscore is necessary to search for POI types, for example poi_shop_bicycle.
Thank you for merging.","Looks good to me.
@tengel could you please attach a before/after screenshot?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,607,2018-05-30T19:43:54Z,2018-06-02T10:53:13Z,2018-06-02T10:53:13Z,MERGED,True,1,1,1,https://github.com/tengel,Add underscore to internal gui keyboard.,1,[],https://github.com/navit-gps/navit/pull/607,https://github.com/tengel,3,https://github.com/navit-gps/navit/pull/607#issuecomment-394055622,"This patch adds a underscore key ('_') to the internal GUI keyboard. The underscore is necessary to search for POI types, for example poi_shop_bicycle.
Thank you for merging.","before:

after:",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,608,2018-06-01T06:38:59Z,2018-06-03T06:16:04Z,2018-08-31T02:53:13Z,MERGED,True,1,1,2,https://github.com/jkoan,change:ci:Move checkstyle.xml to be used by Codefactor.io ,3,[],https://github.com/navit-gps/navit/pull/608,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/608,"This Moves the file /navit/android/navit_checkstyle.xml to /navit_checkstyle.xml so Codefactor.io uses it.
Example Scan: https://www.codefactor.io/repository/github/navit-gps/navit/overview/codefactorio
This also referenced to what @pgrandin said in #599","This Moves the file /navit/android/navit_checkstyle.xml to /navit_checkstyle.xml so Codefactor.io uses it.
Example Scan: https://www.codefactor.io/repository/github/navit-gps/navit/overview/codefactorio
This also referenced to what @pgrandin said in #599",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,609,2018-06-02T15:09:58Z,2018-06-03T06:12:53Z,2018-06-03T16:56:33Z,MERGED,True,43,19,1,https://github.com/aerostitch,update:ci:Refactor the sanity check for better output and add xmllint check,4,[],https://github.com/navit-gps/navit/pull/609,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/609,"This PR:

Adds a check for the xmllint if modified in the PR as a follow-up from #583
removes the set -x so that it has a more understandable output
makes sure that the diff is done for each check and each file, not just one big diff that would make it less understandable
only run the check on each file once (using | sort | uniq)
show all the errors before exiting (so I had to remove set -e)
add a warning in case people try to run it locally","This PR:

Adds a check for the xmllint if modified in the PR as a follow-up from #583
removes the set -x so that it has a more understandable output
makes sure that the diff is done for each check and each file, not just one big diff that would make it less understandable
only run the check on each file once (using | sort | uniq)
show all the errors before exiting (so I had to remove set -e)
add a warning in case people try to run it locally",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,609,2018-06-02T15:09:58Z,2018-06-03T06:12:53Z,2018-06-03T16:56:33Z,MERGED,True,43,19,1,https://github.com/aerostitch,update:ci:Refactor the sanity check for better output and add xmllint check,4,[],https://github.com/navit-gps/navit/pull/609,https://github.com/aerostitch,2,https://github.com/navit-gps/navit/pull/609#issuecomment-394110653,"This PR:

Adds a check for the xmllint if modified in the PR as a follow-up from #583
removes the set -x so that it has a more understandable output
makes sure that the diff is done for each check and each file, not just one big diff that would make it less understandable
only run the check on each file once (using | sort | uniq)
show all the errors before exiting (so I had to remove set -e)
add a warning in case people try to run it locally","In the last commit I switched from git show to git diff so that we only check files that differ from the trunk and avoid checking files that are a result of a branch merge commit. Let me know if I should revert that.
Basically the result is that it only checks that show as changed in the PR in the end.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,610,2018-06-03T02:15:22Z,2018-06-03T06:08:39Z,2018-06-03T06:08:39Z,MERGED,True,1,0,1,https://github.com/aerostitch,add:desktop:Add keywords to application desktop file,1,[],https://github.com/navit-gps/navit/pull/610,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/610,"Adding a Keywords field in desktop file as described in:

https://wiki.gnome.org/Initiatives/GnomeGoals/DesktopFileKeywords
https://specifications.freedesktop.org/desktop-entry-spec/latest/ar01s06.html","Adding a Keywords field in desktop file as described in:

https://wiki.gnome.org/Initiatives/GnomeGoals/DesktopFileKeywords
https://specifications.freedesktop.org/desktop-entry-spec/latest/ar01s06.html",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,611,2018-06-04T17:03:29Z,2018-06-04T17:30:11Z,2018-06-04T17:34:28Z,MERGED,True,0,5,1,https://github.com/aerostitch,cleanup:win32:Remove unused variables,1,[],https://github.com/navit-gps/navit/pull/611,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/611,"This PR gets rid of the following compilation warnings for win32
/root/project/navit/graphics/win32/graphics_win32.c: In function 'pngdecode':
/root/project/navit/graphics/win32/graphics_win32.c:1132:19: warning: variable 'alpha_present' set but not used [-Wunused-but-set-variable]                                                                       
     int           alpha_present;
                   ^
/root/project/navit/graphics/win32/graphics_win32.c: In function 'pngscale':
/root/project/navit/graphics/win32/graphics_win32.c:1292:12: warning: variable 'origPixels' set but not used [-Wunused-but-set-variable]                                                                          
  png_byte *origPixels;
            ^
/root/project/navit/graphics/win32/graphics_win32.c: In function 'graphics_win32_new':
/root/project/navit/graphics/win32/graphics_win32.c:1644:13: warning: unused variable 'user32' [-Wunused-variable]                                                                                                
     HMODULE user32;
             ^","This PR gets rid of the following compilation warnings for win32
/root/project/navit/graphics/win32/graphics_win32.c: In function 'pngdecode':
/root/project/navit/graphics/win32/graphics_win32.c:1132:19: warning: variable 'alpha_present' set but not used [-Wunused-but-set-variable]                                                                       
     int           alpha_present;
                   ^
/root/project/navit/graphics/win32/graphics_win32.c: In function 'pngscale':
/root/project/navit/graphics/win32/graphics_win32.c:1292:12: warning: variable 'origPixels' set but not used [-Wunused-but-set-variable]                                                                          
  png_byte *origPixels;
            ^
/root/project/navit/graphics/win32/graphics_win32.c: In function 'graphics_win32_new':
/root/project/navit/graphics/win32/graphics_win32.c:1644:13: warning: unused variable 'user32' [-Wunused-variable]                                                                                                
     HMODULE user32;
             ^",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,611,2018-06-04T17:03:29Z,2018-06-04T17:30:11Z,2018-06-04T17:34:28Z,MERGED,True,0,5,1,https://github.com/aerostitch,cleanup:win32:Remove unused variables,1,[],https://github.com/navit-gps/navit/pull/611,https://github.com/aerostitch,2,https://github.com/navit-gps/navit/pull/611#issuecomment-394436316,"This PR gets rid of the following compilation warnings for win32
/root/project/navit/graphics/win32/graphics_win32.c: In function 'pngdecode':
/root/project/navit/graphics/win32/graphics_win32.c:1132:19: warning: variable 'alpha_present' set but not used [-Wunused-but-set-variable]                                                                       
     int           alpha_present;
                   ^
/root/project/navit/graphics/win32/graphics_win32.c: In function 'pngscale':
/root/project/navit/graphics/win32/graphics_win32.c:1292:12: warning: variable 'origPixels' set but not used [-Wunused-but-set-variable]                                                                          
  png_byte *origPixels;
            ^
/root/project/navit/graphics/win32/graphics_win32.c: In function 'graphics_win32_new':
/root/project/navit/graphics/win32/graphics_win32.c:1644:13: warning: unused variable 'user32' [-Wunused-variable]                                                                                                
     HMODULE user32;
             ^",Thanks! :),True,{}
navit-gps/navit,https://github.com/navit-gps/navit,612,2018-06-04T17:18:22Z,2018-06-04T17:30:24Z,2018-06-04T17:34:43Z,MERGED,True,8,13,2,https://github.com/aerostitch,update:style:optimize the usage of cat in shell scripts,1,[],https://github.com/navit-gps/navit/pull/612,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/612,"This PR removes the warnings in codefactor about ""Useless cat usage"": https://www.codefactor.io/repository/github/navit-gps/navit/issues?category=Performance&groupId=1692
Note that it also remove unnecessary copy and redirect of temporary file by using the ""in-place"" capabilities of sed.","This PR removes the warnings in codefactor about ""Useless cat usage"": https://www.codefactor.io/repository/github/navit-gps/navit/issues?category=Performance&groupId=1692
Note that it also remove unnecessary copy and redirect of temporary file by using the ""in-place"" capabilities of sed.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,612,2018-06-04T17:18:22Z,2018-06-04T17:30:24Z,2018-06-04T17:34:43Z,MERGED,True,8,13,2,https://github.com/aerostitch,update:style:optimize the usage of cat in shell scripts,1,[],https://github.com/navit-gps/navit/pull/612,https://github.com/aerostitch,2,https://github.com/navit-gps/navit/pull/612#issuecomment-394436395,"This PR removes the warnings in codefactor about ""Useless cat usage"": https://www.codefactor.io/repository/github/navit-gps/navit/issues?category=Performance&groupId=1692
Note that it also remove unnecessary copy and redirect of temporary file by using the ""in-place"" capabilities of sed.",Thanks! :),True,{}
navit-gps/navit,https://github.com/navit-gps/navit,613,2018-06-04T17:27:40Z,2018-06-04T17:44:11Z,2018-06-04T17:49:39Z,MERGED,True,4,4,4,https://github.com/aerostitch,update:scripts:change the scripts that use non-POSIX functionnalities to bash,1,[],https://github.com/navit-gps/navit/pull/613,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/613,"Most of those scripts are forcibly started with bash anyway.
This should solve the codefactor issues: https://www.codefactor.io/repository/github/navit-gps/navit/issues?category=Compatibility&groupId=1669","Most of those scripts are forcibly started with bash anyway.
This should solve the codefactor issues: https://www.codefactor.io/repository/github/navit-gps/navit/issues?category=Compatibility&groupId=1669",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,614,2018-06-04T17:34:13Z,2018-06-04T19:23:24Z,2018-06-04T19:23:27Z,MERGED,True,1,1,1,https://github.com/aerostitch,update:scripts:avoid iterating over ls output by using glob,1,[],https://github.com/navit-gps/navit/pull/614,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/614,Removes a warning in codefactor: https://www.codefactor.io/repository/github/navit-gps/navit/issues?category=Maintainability&groupId=1697,Removes a warning in codefactor: https://www.codefactor.io/repository/github/navit-gps/navit/issues?category=Maintainability&groupId=1697,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,615,2018-06-04T17:39:19Z,2018-06-04T19:23:36Z,2018-06-04T19:23:39Z,MERGED,True,1,1,1,https://github.com/aerostitch,fix:scripts:fix malformed shebang,1,[],https://github.com/navit-gps/navit/pull/615,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/615,This adds a forgotten ! in the shebang. Fixes: https://www.codefactor.io/repository/github/navit-gps/navit/issues?category=Maintainability&groupId=1694,This adds a forgotten ! in the shebang. Fixes: https://www.codefactor.io/repository/github/navit-gps/navit/issues?category=Maintainability&groupId=1694,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,616,2018-06-04T17:43:05Z,2018-06-04T19:23:46Z,2018-06-04T19:23:49Z,MERGED,True,1,1,1,https://github.com/aerostitch,cleanup:scripts:removes deprecated usage of egrep,1,[],https://github.com/navit-gps/navit/pull/616,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/616,"egrep is officially deprecated, see: https://www.gnu.org/software/grep/manual/html_node/grep-Programs.html#grep-Programs
This PR moves its usage to grep -E as recommended.
Fixes: https://www.codefactor.io/repository/github/navit-gps/navit/issues?category=Maintainability&groupId=1680","egrep is officially deprecated, see: https://www.gnu.org/software/grep/manual/html_node/grep-Programs.html#grep-Programs
This PR moves its usage to grep -E as recommended.
Fixes: https://www.codefactor.io/repository/github/navit-gps/navit/issues?category=Maintainability&groupId=1680",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,617,2018-06-04T17:48:25Z,2018-06-04T19:23:57Z,2018-06-04T19:24:00Z,MERGED,True,1,1,1,https://github.com/aerostitch,fix:scripts:replace \s with the supported use of the space class,1,[],https://github.com/navit-gps/navit/pull/617,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/617,"Seems the space with \s is not correctly supported in bash regex and we should use the space class instead. This PR fixes that.
Codefactore issue: https://www.codefactor.io/repository/github/navit-gps/navit/issues?category=Maintainability&groupId=1667","Seems the space with \s is not correctly supported in bash regex and we should use the space class instead. This PR fixes that.
Codefactore issue: https://www.codefactor.io/repository/github/navit-gps/navit/issues?category=Maintainability&groupId=1667",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,618,2018-06-04T18:01:32Z,2018-06-04T19:24:07Z,2018-06-04T19:24:10Z,MERGED,True,2,2,2,https://github.com/aerostitch,update:scripts:change the scripts that use non-POSIX functionalities to bash (v2),1,[],https://github.com/navit-gps/navit/pull/618,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/618,"Seems I forgot to take care of the 2nd page of warnings that were on codefactor about the use of functionalities that was not POSIX sh compliant.
https://www.codefactor.io/repository/github/navit-gps/navit/issues?category=Compatibility&groupId=1669","Seems I forgot to take care of the 2nd page of warnings that were on codefactor about the use of functionalities that was not POSIX sh compliant.
https://www.codefactor.io/repository/github/navit-gps/navit/issues?category=Compatibility&groupId=1669",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,619,2018-06-04T18:25:55Z,2018-06-05T06:25:17Z,2018-06-05T09:50:59Z,MERGED,True,20,21,2,https://github.com/aerostitch,cleanup:osd&support_espeak:get rid of unused-variables compilation warnings,2,[],https://github.com/navit-gps/navit/pull/619,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/619,"This PR gets rid of the following compilation warnings:
/root/project/navit/osd/core/osd_core.c: In function 'osd_scale_new':
/root/project/navit/osd/core/osd_core.c:4000:15: warning: unused variable 'attr' [-Wunused-variable]
  struct attr *attr;
               ^
/root/project/navit/support/espeak/readclause.c: In function 'LoadSoundFile':
/root/project/navit/support/espeak/readclause.c:674:7: warning: unused variable 'fname_temp' [-Wunused-variable]
  char fname_temp[100];
       ^

(And some trailing spaces as the support folder was not part of the cleanup)","This PR gets rid of the following compilation warnings:
/root/project/navit/osd/core/osd_core.c: In function 'osd_scale_new':
/root/project/navit/osd/core/osd_core.c:4000:15: warning: unused variable 'attr' [-Wunused-variable]
  struct attr *attr;
               ^
/root/project/navit/support/espeak/readclause.c: In function 'LoadSoundFile':
/root/project/navit/support/espeak/readclause.c:674:7: warning: unused variable 'fname_temp' [-Wunused-variable]
  char fname_temp[100];
       ^

(And some trailing spaces as the support folder was not part of the cleanup)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,620,2018-06-04T22:15:43Z,2018-06-05T06:25:54Z,2018-06-05T09:51:10Z,MERGED,True,2,2,2,https://github.com/aerostitch,update:scripts:simplify the variables concatenation,1,[],https://github.com/navit-gps/navit/pull/620,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/620,Fixes: https://www.codefactor.io/repository/github/navit-gps/navit/issues?category=Maintainability&groupId=1675,Fixes: https://www.codefactor.io/repository/github/navit-gps/navit/issues?category=Maintainability&groupId=1675,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,621,2018-06-04T22:24:30Z,2018-06-04T22:54:06Z,2018-06-04T22:55:02Z,MERGED,True,6,2,1,https://github.com/metalstrolch,Revert #612 for sailfish build script,3,[],https://github.com/navit-gps/navit/pull/621,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/621,"Whatever the 'enhancement' done in #612 should bring, it causes grep
to complain for non existing file in Sailfish's MER SDK.
Most probably because the escaping of the parenthesis was wrongly
considered. Never mind - revert.","Whatever the 'enhancement' done in #612 should bring, it causes grep
to complain for non existing file in Sailfish's MER SDK.
Most probably because the escaping of the parenthesis was wrongly
considered. Never mind - revert.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,621,2018-06-04T22:24:30Z,2018-06-04T22:54:06Z,2018-06-04T22:55:02Z,MERGED,True,6,2,1,https://github.com/metalstrolch,Revert #612 for sailfish build script,3,[],https://github.com/navit-gps/navit/pull/621,https://github.com/aerostitch,2,https://github.com/navit-gps/navit/pull/621#issuecomment-394522856,"Whatever the 'enhancement' done in #612 should bring, it causes grep
to complain for non existing file in Sailfish's MER SDK.
Most probably because the escaping of the parenthesis was wrongly
considered. Never mind - revert.","Hi @metalstrolch,
I actually just noticed the issue I've done in #612 which is put the file name in 1st argument instead of the 2nd one. Sorry for that.
Could you change it in this way instead of a cat | please?
So that would look like:
grep ""^BuildRequires: "" navit-sailfish.spec | sed -e ""s/BuildRequires: //""

Note, you can see the 2 issues reintroduced in codefactor by the revert in the link bellow.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,621,2018-06-04T22:24:30Z,2018-06-04T22:54:06Z,2018-06-04T22:55:02Z,MERGED,True,6,2,1,https://github.com/metalstrolch,Revert #612 for sailfish build script,3,[],https://github.com/navit-gps/navit/pull/621,https://github.com/aerostitch,3,https://github.com/navit-gps/navit/pull/621#issuecomment-394523813,"Whatever the 'enhancement' done in #612 should bring, it causes grep
to complain for non existing file in Sailfish's MER SDK.
Most probably because the escaping of the parenthesis was wrongly
considered. Never mind - revert.","Nevermind, I'll push the change to the branch.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,621,2018-06-04T22:24:30Z,2018-06-04T22:54:06Z,2018-06-04T22:55:02Z,MERGED,True,6,2,1,https://github.com/metalstrolch,Revert #612 for sailfish build script,3,[],https://github.com/navit-gps/navit/pull/621,https://github.com/metalstrolch,4,https://github.com/navit-gps/navit/pull/621#issuecomment-394523853,"Whatever the 'enhancement' done in #612 should bring, it causes grep
to complain for non existing file in Sailfish's MER SDK.
Most probably because the escaping of the parenthesis was wrongly
considered. Never mind - revert.","Why? Using cat that way is something that was always done. I think the old way of doing it is way more readable.
But you see the Problems arising with all these fancy checkers trying to fix things that aren't even broken.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,621,2018-06-04T22:24:30Z,2018-06-04T22:54:06Z,2018-06-04T22:55:02Z,MERGED,True,6,2,1,https://github.com/metalstrolch,Revert #612 for sailfish build script,3,[],https://github.com/navit-gps/navit/pull/621,https://github.com/aerostitch,5,https://github.com/navit-gps/navit/pull/621#issuecomment-394524112,"Whatever the 'enhancement' done in #612 should bring, it causes grep
to complain for non existing file in Sailfish's MER SDK.
Most probably because the escaping of the parenthesis was wrongly
considered. Never mind - revert.","It's to avoid a unnecessary pipe and an extra fork.
grep is able to read files directly and it has been for years.
Error is human. Sometimes swapping 2 argumetns happen...",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,621,2018-06-04T22:24:30Z,2018-06-04T22:54:06Z,2018-06-04T22:55:02Z,MERGED,True,6,2,1,https://github.com/metalstrolch,Revert #612 for sailfish build script,3,[],https://github.com/navit-gps/navit/pull/621,https://github.com/aerostitch,6,https://github.com/navit-gps/navit/pull/621#issuecomment-394524721,"Whatever the 'enhancement' done in #612 should bring, it causes grep
to complain for non existing file in Sailfish's MER SDK.
Most probably because the escaping of the parenthesis was wrongly
considered. Never mind - revert.",Would 6148aec be acceptable for you?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,621,2018-06-04T22:24:30Z,2018-06-04T22:54:06Z,2018-06-04T22:55:02Z,MERGED,True,6,2,1,https://github.com/metalstrolch,Revert #612 for sailfish build script,3,[],https://github.com/navit-gps/navit/pull/621,https://github.com/metalstrolch,7,https://github.com/navit-gps/navit/pull/621#issuecomment-394525638,"Whatever the 'enhancement' done in #612 should bring, it causes grep
to complain for non existing file in Sailfish's MER SDK.
Most probably because the escaping of the parenthesis was wrongly
considered. Never mind - revert.","Seems to be OK, if that makes you happy.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,621,2018-06-04T22:24:30Z,2018-06-04T22:54:06Z,2018-06-04T22:55:02Z,MERGED,True,6,2,1,https://github.com/metalstrolch,Revert #612 for sailfish build script,3,[],https://github.com/navit-gps/navit/pull/621,https://github.com/aerostitch,8,https://github.com/navit-gps/navit/pull/621#issuecomment-394526034,"Whatever the 'enhancement' done in #612 should bring, it causes grep
to complain for non existing file in Sailfish's MER SDK.
Most probably because the escaping of the parenthesis was wrongly
considered. Never mind - revert.","Thanks for the fix!
Sorry for the issue introduced.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,622,2018-06-04T22:32:52Z,2018-06-05T06:26:28Z,2018-06-05T09:51:18Z,MERGED,True,18,18,3,https://github.com/aerostitch,cleanup:python:cleanup python scripts,1,[],https://github.com/navit-gps/navit/pull/622,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/622,"Remove unnecessary semicolon at the end of line.
Fixes: https://www.codefactor.io/repository/github/navit-gps/navit/issues?category=Maintainability&groupId=459
iter is the name of a builtin function in python, so avoid overwriting that keyword.
Fixes: https://www.codefactor.io/repository/github/navit-gps/navit/issues/trunk?category=Maintainability&groupId=415","Remove unnecessary semicolon at the end of line.
Fixes: https://www.codefactor.io/repository/github/navit-gps/navit/issues?category=Maintainability&groupId=459
iter is the name of a builtin function in python, so avoid overwriting that keyword.
Fixes: https://www.codefactor.io/repository/github/navit-gps/navit/issues/trunk?category=Maintainability&groupId=415",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,623,2018-06-04T23:34:36Z,2018-06-05T06:27:44Z,2018-06-05T09:51:26Z,MERGED,True,55,55,9,https://github.com/aerostitch,cleanup:scripts:Use $(..) instead of legacy `..` to make codefactor happy,1,[],https://github.com/navit-gps/navit/pull/623,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/623,Fixes: https://www.codefactor.io/repository/github/navit-gps/navit/issues?category=Maintainability&groupId=1668,Fixes: https://www.codefactor.io/repository/github/navit-gps/navit/issues?category=Maintainability&groupId=1668,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,624,2018-06-05T12:28:38Z,2018-07-15T07:23:17Z,2018-11-28T16:05:02Z,MERGED,True,15719,7127,309,https://github.com/metalstrolch,update in-tree espeak to espeak-1.48.04,9,"['enhancement', 'help wanted']",https://github.com/navit-gps/navit/pull/624,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/624,"Update the C-ified version of espeak to espeak-1.48.04.
Currently builds and links for Sailfish.
Builds on Windows in CI (with many warnings as usual on Windows...)
Can be merged after having been checked on Windows OS","Update the C-ified version of espeak to espeak-1.48.04.
Currently builds and links for Sailfish.
Builds on Windows in CI (with many warnings as usual on Windows...)
Can be merged after having been checked on Windows OS",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,624,2018-06-05T12:28:38Z,2018-07-15T07:23:17Z,2018-11-28T16:05:02Z,MERGED,True,15719,7127,309,https://github.com/metalstrolch,update in-tree espeak to espeak-1.48.04,9,"['enhancement', 'help wanted']",https://github.com/navit-gps/navit/pull/624,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/624#issuecomment-394691187,"Update the C-ified version of espeak to espeak-1.48.04.
Currently builds and links for Sailfish.
Builds on Windows in CI (with many warnings as usual on Windows...)
Can be merged after having been checked on Windows OS","Can I somehow disable all those coding style checks for this in-tree 3rd party package?
Don't think it's a good ide to mess around with espeak's data files.


Can I temporarily disable this new sanity check? I want to know of this builds for Windows prior being picky about some silly style guide.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,624,2018-06-05T12:28:38Z,2018-07-15T07:23:17Z,2018-11-28T16:05:02Z,MERGED,True,15719,7127,309,https://github.com/metalstrolch,update in-tree espeak to espeak-1.48.04,9,"['enhancement', 'help wanted']",https://github.com/navit-gps/navit/pull/624,https://github.com/aerostitch,3,https://github.com/navit-gps/navit/pull/624#issuecomment-394768287,"Update the C-ified version of espeak to espeak-1.48.04.
Currently builds and links for Sailfish.
Builds on Windows in CI (with many warnings as usual on Windows...)
Can be merged after having been checked on Windows OS","Sorry for that.
Give me a min,  I'm working on a PR to disable the sanity check on the files in navit/support.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,624,2018-06-05T12:28:38Z,2018-07-15T07:23:17Z,2018-11-28T16:05:02Z,MERGED,True,15719,7127,309,https://github.com/metalstrolch,update in-tree espeak to espeak-1.48.04,9,"['enhancement', 'help wanted']",https://github.com/navit-gps/navit/pull/624,https://github.com/aerostitch,4,https://github.com/navit-gps/navit/pull/624#issuecomment-394779415,"Update the C-ified version of espeak to espeak-1.48.04.
Currently builds and links for Sailfish.
Builds on Windows in CI (with many warnings as usual on Windows...)
Can be merged after having been checked on Windows OS","Done in #625. Will be active once it's reviewed and merged.
Note that the sanity check is only failing because of trailing whitespaces right now. astyle itself is not running on the files.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,624,2018-06-05T12:28:38Z,2018-07-15T07:23:17Z,2018-11-28T16:05:02Z,MERGED,True,15719,7127,309,https://github.com/metalstrolch,update in-tree espeak to espeak-1.48.04,9,"['enhancement', 'help wanted']",https://github.com/navit-gps/navit/pull/624,https://github.com/metalstrolch,5,https://github.com/navit-gps/navit/pull/624#issuecomment-394885504,"Update the C-ified version of espeak to espeak-1.48.04.
Currently builds and links for Sailfish.
Builds on Windows in CI (with many warnings as usual on Windows...)
Can be merged after having been checked on Windows OS","OK, now somebody should test the result on Windows. Unfortunately I don't have any windows.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,624,2018-06-05T12:28:38Z,2018-07-15T07:23:17Z,2018-11-28T16:05:02Z,MERGED,True,15719,7127,309,https://github.com/metalstrolch,update in-tree espeak to espeak-1.48.04,9,"['enhancement', 'help wanted']",https://github.com/navit-gps/navit/pull/624,https://github.com/jkoan,6,https://github.com/navit-gps/navit/pull/624#issuecomment-395496083,"Update the C-ified version of espeak to espeak-1.48.04.
Currently builds and links for Sailfish.
Builds on Windows in CI (with many warnings as usual on Windows...)
Can be merged after having been checked on Windows OS",Only to understand: Shouldn't we remove external things in the future and link against library's? And for Win we should build externally and link all together? or do i only understand everything totally false?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,624,2018-06-05T12:28:38Z,2018-07-15T07:23:17Z,2018-11-28T16:05:02Z,MERGED,True,15719,7127,309,https://github.com/metalstrolch,update in-tree espeak to espeak-1.48.04,9,"['enhancement', 'help wanted']",https://github.com/navit-gps/navit/pull/624,https://github.com/mdankov,7,https://github.com/navit-gps/navit/pull/624#issuecomment-395523441,"Update the C-ified version of espeak to espeak-1.48.04.
Currently builds and links for Sailfish.
Builds on Windows in CI (with many warnings as usual on Windows...)
Can be merged after having been checked on Windows OS","@jkoan, IIRC, espeak copy is here for two reasons:

there were no support for espeak on Windows CE platform. Unsure if wince is supported now by espeak.
we decided to port espeak to C to keep memory usage low. It's critical for WinCE platform as these devices are way outdated now, having 64Mb of RAM on board is typical.

@metalstrolch,
We did not use builtin espeak on any platform besides WinCE a couple years ago, so testing on desktop Windows isn't going to make sense anyway.
I will try to reanimate my WinCE device and give you some feedback in a week.",True,{'THUMBS_UP': ['https://github.com/pgrandin']}
navit-gps/navit,https://github.com/navit-gps/navit,624,2018-06-05T12:28:38Z,2018-07-15T07:23:17Z,2018-11-28T16:05:02Z,MERGED,True,15719,7127,309,https://github.com/metalstrolch,update in-tree espeak to espeak-1.48.04,9,"['enhancement', 'help wanted']",https://github.com/navit-gps/navit/pull/624,https://github.com/metalstrolch,8,https://github.com/navit-gps/navit/pull/624#issuecomment-395537087,"Update the C-ified version of espeak to espeak-1.48.04.
Currently builds and links for Sailfish.
Builds on Windows in CI (with many warnings as usual on Windows...)
Can be merged after having been checked on Windows OS","I already use in tree espeak for my sailfish os builds since some time, as sailfish doesn't have libespeak and sailfish disallows library packages. So since espeak is in tree I used it.
But of course the speech/qt5_espeak builds against external libespeak as well.
Windows (and WinCe) builds would NOT build against stock libespeak currently because speech/espeak does not use espeak the usual way.
I just refreshed the espeak port to be based on latest espeak version which removes a lot of warnings on x86 and x86_64 builds and besides that comes with more languages.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,624,2018-06-05T12:28:38Z,2018-07-15T07:23:17Z,2018-11-28T16:05:02Z,MERGED,True,15719,7127,309,https://github.com/metalstrolch,update in-tree espeak to espeak-1.48.04,9,"['enhancement', 'help wanted']",https://github.com/navit-gps/navit/pull/624,https://github.com/mdankov,9,https://github.com/navit-gps/navit/pull/624#issuecomment-395847829,"Update the C-ified version of espeak to espeak-1.48.04.
Currently builds and links for Sailfish.
Builds on Windows in CI (with many warnings as usual on Windows...)
Can be merged after having been checked on Windows OS","My WinCE run has succeeded, with following drawbacks:

No espeak-data folder copied to wince navit.zip artifact.
Speech type is not set to ""espeak"" in shipped navit.xml.

I guess, this is not related to your changes, and there are more things to work on:


Graphics type is set to gtk_drawing_area in navit.xml. Should be win32 for this
platform.


Gpsd vehicle type should be switched to something more wince specific (but we do not support
autodetection on this platform, so manual change would be still needed).


We have to test desktop windows version of navit. Maybe Wine test would be enough?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,624,2018-06-05T12:28:38Z,2018-07-15T07:23:17Z,2018-11-28T16:05:02Z,MERGED,True,15719,7127,309,https://github.com/metalstrolch,update in-tree espeak to espeak-1.48.04,9,"['enhancement', 'help wanted']",https://github.com/navit-gps/navit/pull/624,https://github.com/lains,10,https://github.com/navit-gps/navit/pull/624#issuecomment-405036882,"Update the C-ified version of espeak to espeak-1.48.04.
Currently builds and links for Sailfish.
Builds on Windows in CI (with many warnings as usual on Windows...)
Can be merged after having been checked on Windows OS","@mdankov, I have played with a WinCE device recently, so I can confirm that:

espeak-data is missing from zip, and this it not related to your change.
navit.xml could be tuned much more for WinCE than it is right now.

I don't have a WinCE build environment setup right now, so I prefer not to make changes to WinCE build.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,624,2018-06-05T12:28:38Z,2018-07-15T07:23:17Z,2018-11-28T16:05:02Z,MERGED,True,15719,7127,309,https://github.com/metalstrolch,update in-tree espeak to espeak-1.48.04,9,"['enhancement', 'help wanted']",https://github.com/navit-gps/navit/pull/624,https://github.com/metalstrolch,11,https://github.com/navit-gps/navit/pull/624#issuecomment-405047246,"Update the C-ified version of espeak to espeak-1.48.04.
Currently builds and links for Sailfish.
Builds on Windows in CI (with many warnings as usual on Windows...)
Can be merged after having been checked on Windows OS","My intention was not to fix WinCE package, config or behaviour, but to update in tree espeak for Sailfish use.
It is currently used for sailfish builds as there are no espeak packages in Sailfish, and Sailfish's Harbour rules would not permit having library packages as dependencies. And since espeak is in tree already I just used it.
All Navit Qt5 code dealing with espeak can as well do so against stock out of tree espeak libraries. Default build system will do so if espeak is found on build system. So in tree espeak is not required for QT5 speech builds.
What to do for me?

Merge this as it works for Sailfish ignoring possible WinCE problems?
Block this until someone finally decides to drop WinCE as it seems nobody cannot even test it anymore? Or will somebody finally care?
Fork Navit for Sailfish to include this, not caring about wince?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,624,2018-06-05T12:28:38Z,2018-07-15T07:23:17Z,2018-11-28T16:05:02Z,MERGED,True,15719,7127,309,https://github.com/metalstrolch,update in-tree espeak to espeak-1.48.04,9,"['enhancement', 'help wanted']",https://github.com/navit-gps/navit/pull/624,https://github.com/lains,12,https://github.com/navit-gps/navit/pull/624#issuecomment-405050587,"Update the C-ified version of espeak to espeak-1.48.04.
Currently builds and links for Sailfish.
Builds on Windows in CI (with many warnings as usual on Windows...)
Can be merged after having been checked on Windows OS","@metalstrolch, I have recently managed to install navit on a WinCE device. This is not my main device though, and I don't have it right now, but I should be able to test when I get it back.
I am currently submitting patches for the WinCE build to pass again (#632), this will fix the issues on WinCE's espeak that are not related to your changes.
When I have my WinCE device back with me, I can try you changes to tell you if it works as with the current espeak.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,624,2018-06-05T12:28:38Z,2018-07-15T07:23:17Z,2018-11-28T16:05:02Z,MERGED,True,15719,7127,309,https://github.com/metalstrolch,update in-tree espeak to espeak-1.48.04,9,"['enhancement', 'help wanted']",https://github.com/navit-gps/navit/pull/624,https://github.com/lains,13,https://github.com/navit-gps/navit/pull/624#issuecomment-405072487,"Update the C-ified version of espeak to espeak-1.48.04.
Currently builds and links for Sailfish.
Builds on Windows in CI (with many warnings as usual on Windows...)
Can be merged after having been checked on Windows OS",I have tested the compilation on WinCE and it builds fine with this new version of espeak (although I don't have my WinCE device to test it right now).,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,624,2018-06-05T12:28:38Z,2018-07-15T07:23:17Z,2018-11-28T16:05:02Z,MERGED,True,15719,7127,309,https://github.com/metalstrolch,update in-tree espeak to espeak-1.48.04,9,"['enhancement', 'help wanted']",https://github.com/navit-gps/navit/pull/624,https://github.com/lains,14,https://github.com/navit-gps/navit/pull/624#issuecomment-442475442,"Update the C-ified version of espeak to espeak-1.48.04.
Currently builds and links for Sailfish.
Builds on Windows in CI (with many warnings as usual on Windows...)
Can be merged after having been checked on Windows OS","Does this solve ticket 997 opened on trac?
http://trac.navit-project.org/ticket/997",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,624,2018-06-05T12:28:38Z,2018-07-15T07:23:17Z,2018-11-28T16:05:02Z,MERGED,True,15719,7127,309,https://github.com/metalstrolch,update in-tree espeak to espeak-1.48.04,9,"['enhancement', 'help wanted']",https://github.com/navit-gps/navit/pull/624,https://github.com/metalstrolch,15,https://github.com/navit-gps/navit/pull/624#issuecomment-442501245,"Update the C-ified version of espeak to espeak-1.48.04.
Currently builds and links for Sailfish.
Builds on Windows in CI (with many warnings as usual on Windows...)
Can be merged after having been checked on Windows OS","Most probably not, or at least not directly, as the problem described in http://trac.navit-project.org/ticket/997 points more to missing locale problem in Windows CE. ""Old"" espeak could happily speak German ever since. At least I used it in sailfish before as well, and I'm German native speaker.
But maybe @pgrandin fixed it by accident in #680",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,624,2018-06-05T12:28:38Z,2018-07-15T07:23:17Z,2018-11-28T16:05:02Z,MERGED,True,15719,7127,309,https://github.com/metalstrolch,update in-tree espeak to espeak-1.48.04,9,"['enhancement', 'help wanted']",https://github.com/navit-gps/navit/pull/624,https://github.com/metalstrolch,16,https://github.com/navit-gps/navit/pull/624#issuecomment-442501889,"Update the C-ified version of espeak to espeak-1.48.04.
Currently builds and links for Sailfish.
Builds on Windows in CI (with many warnings as usual on Windows...)
Can be merged after having been checked on Windows OS",I recently bought a Windows CE palmtop on flea market. I'll give it a try once I find a suitable power supply :),True,{}
navit-gps/navit,https://github.com/navit-gps/navit,625,2018-06-05T16:21:05Z,2018-06-05T20:58:28Z,2018-06-05T20:59:56Z,MERGED,True,34,30,1,https://github.com/aerostitch,update:scripts:change the sanity script to exclude fib and support,1,[],https://github.com/navit-gps/navit/pull/625,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/625,"As requested in #624, removes checking for trailing spaces and other style-related elments on navit/support. Also added navit/fib-1.1 to it as it is a 3rd party lib.
Note: the indentation change is just to make sure we're also using 4 spaces indentation in the script (I was using 2 spaces before).
You can use the diff settings button when reviewing to get rid of the white spaces diffs which makes the review way easier.","As requested in #624, removes checking for trailing spaces and other style-related elments on navit/support. Also added navit/fib-1.1 to it as it is a 3rd party lib.
Note: the indentation change is just to make sure we're also using 4 spaces indentation in the script (I was using 2 spaces before).
You can use the diff settings button when reviewing to get rid of the white spaces diffs which makes the review way easier.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,625,2018-06-05T16:21:05Z,2018-06-05T20:58:28Z,2018-06-05T20:59:56Z,MERGED,True,34,30,1,https://github.com/aerostitch,update:scripts:change the sanity script to exclude fib and support,1,[],https://github.com/navit-gps/navit/pull/625,https://github.com/aerostitch,2,https://github.com/navit-gps/navit/pull/625#issuecomment-394858404,"As requested in #624, removes checking for trailing spaces and other style-related elments on navit/support. Also added navit/fib-1.1 to it as it is a 3rd party lib.
Note: the indentation change is just to make sure we're also using 4 spaces indentation in the script (I was using 2 spaces before).
You can use the diff settings button when reviewing to get rid of the white spaces diffs which makes the review way easier.",Thanks!,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,626,2018-06-06T18:45:04Z,2018-07-12T05:20:59Z,2018-07-12T17:24:35Z,CLOSED,False,32,4,1,https://github.com/jkoan,[WIP] fix:ci:Readd android app to download center,5,[],https://github.com/navit-gps/navit/pull/626,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/626,see IRC https://irclogs.navit.ie/%23navit-2018-06-06.log,see IRC https://irclogs.navit.ie/%23navit-2018-06-06.log,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,626,2018-06-06T18:45:04Z,2018-07-12T05:20:59Z,2018-07-12T17:24:35Z,CLOSED,False,32,4,1,https://github.com/jkoan,[WIP] fix:ci:Readd android app to download center,5,[],https://github.com/navit-gps/navit/pull/626,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/626#issuecomment-404392614,see IRC https://irclogs.navit.ie/%23navit-2018-06-06.log,"We should focus on finishing gradle instead of readding the old build, so i am closing this PR",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,627,2018-06-19T07:28:28Z,2018-08-12T17:31:07Z,2018-08-12T17:31:07Z,MERGED,True,2,2,2,https://github.com/jkoan,Fix latlon2bookmark,2,[],https://github.com/navit-gps/navit/pull/627,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/627,This PR Fixes two minor Bugs wit latlon2bookmark. Now its possible to compile it again,This PR Fixes two minor Bugs wit latlon2bookmark. Now its possible to compile it again,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,627,2018-06-19T07:28:28Z,2018-08-12T17:31:07Z,2018-08-12T17:31:07Z,MERGED,True,2,2,2,https://github.com/jkoan,Fix latlon2bookmark,2,[],https://github.com/navit-gps/navit/pull/627,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/627#issuecomment-398420307,This PR Fixes two minor Bugs wit latlon2bookmark. Now its possible to compile it again,"Thanks @jkoan !
Maybe we should add a step in the CI to test the different scripts / extra tools that we have?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,627,2018-06-19T07:28:28Z,2018-08-12T17:31:07Z,2018-08-12T17:31:07Z,MERGED,True,2,2,2,https://github.com/jkoan,Fix latlon2bookmark,2,[],https://github.com/navit-gps/navit/pull/627,https://github.com/jkoan,3,https://github.com/navit-gps/navit/pull/627#issuecomment-398426041,This PR Fixes two minor Bugs wit latlon2bookmark. Now its possible to compile it again,Or add it to cmake build?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,627,2018-06-19T07:28:28Z,2018-08-12T17:31:07Z,2018-08-12T17:31:07Z,MERGED,True,2,2,2,https://github.com/jkoan,Fix latlon2bookmark,2,[],https://github.com/navit-gps/navit/pull/627,https://github.com/pgrandin,4,https://github.com/navit-gps/navit/pull/627#issuecomment-405827548,This PR Fixes two minor Bugs wit latlon2bookmark. Now its possible to compile it again,"Yeah we could have an ""extra"" or ""tools"" section there.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,627,2018-06-19T07:28:28Z,2018-08-12T17:31:07Z,2018-08-12T17:31:07Z,MERGED,True,2,2,2,https://github.com/jkoan,Fix latlon2bookmark,2,[],https://github.com/navit-gps/navit/pull/627,https://github.com/jkoan,5,https://github.com/navit-gps/navit/pull/627#issuecomment-412358592,This PR Fixes two minor Bugs wit latlon2bookmark. Now its possible to compile it again,I will merge this now and add other things like the cmake integration later,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,628,2018-06-19T16:55:59Z,2018-07-15T07:15:36Z,2018-07-15T07:22:24Z,MERGED,True,33,18,1,https://github.com/lains,Refactoring:graphics Improving quality of circles on platforms without native circle method,3,[],https://github.com/navit-gps/navit/pull/628,https://github.com/lains,1,https://github.com/navit-gps/navit/pull/628,"Circles are not that smooth on platforms without native support for circles.
On these platforms, circles are actually drawn using multiple segments.
Improving definition of small radius circles.
Also, I renamed function draw_circle() because it does not draw a circle but rather creates a set of points that represent a circle or an arc.
I also took the opportunity to add doxygen comments on related functions and fix a few comments.","Circles are not that smooth on platforms without native support for circles.
On these platforms, circles are actually drawn using multiple segments.
Improving definition of small radius circles.
Also, I renamed function draw_circle() because it does not draw a circle but rather creates a set of points that represent a circle or an arc.
I also took the opportunity to add doxygen comments on related functions and fix a few comments.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,631,2018-07-14T17:47:34Z,2018-08-21T17:05:34Z,2019-01-08T19:57:42Z,MERGED,True,277,66,6,https://github.com/lains,"Refactor:gui/internal: Add pointer and label when using function ""view on map""",21,['enhancement'],https://github.com/navit-gps/navit/pull/631,https://github.com/lains,1,https://github.com/navit-gps/navit/pull/631,"When selecting GPS coords or a town/street, and choosing ""View on map"", the display is centered on the selected location, but there is no visible pointer on this location.
In order to implement this, I have am re-using the code that is already existing to handle action ""Show results on the map"", and that is already able to display multiple result pointers on the map.
Here is an example of the result when selecting ""View on map"" for ""An der Hauptfeuerwache"" in Mûnchen.

I added some code to split long strings to multilines, in order to avoid having the text spread too much accross the map. This is also useful when using GPS coords:","When selecting GPS coords or a town/street, and choosing ""View on map"", the display is centered on the selected location, but there is no visible pointer on this location.
In order to implement this, I have am re-using the code that is already existing to handle action ""Show results on the map"", and that is already able to display multiple result pointers on the map.
Here is an example of the result when selecting ""View on map"" for ""An der Hauptfeuerwache"" in Mûnchen.

I added some code to split long strings to multilines, in order to avoid having the text spread too much accross the map. This is also useful when using GPS coords:",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,631,2018-07-14T17:47:34Z,2018-08-21T17:05:34Z,2019-01-08T19:57:42Z,MERGED,True,277,66,6,https://github.com/lains,"Refactor:gui/internal: Add pointer and label when using function ""view on map""",21,['enhancement'],https://github.com/navit-gps/navit/pull/631,https://github.com/lains,2,https://github.com/navit-gps/navit/pull/631#issuecomment-406785528,"When selecting GPS coords or a town/street, and choosing ""View on map"", the display is centered on the selected location, but there is no visible pointer on this location.
In order to implement this, I have am re-using the code that is already existing to handle action ""Show results on the map"", and that is already able to display multiple result pointers on the map.
Here is an example of the result when selecting ""View on map"" for ""An der Hauptfeuerwache"" in Mûnchen.

I added some code to split long strings to multilines, in order to avoid having the text spread too much accross the map. This is also useful when using GPS coords:",I've fixed the typo.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,631,2018-07-14T17:47:34Z,2018-08-21T17:05:34Z,2019-01-08T19:57:42Z,MERGED,True,277,66,6,https://github.com/lains,"Refactor:gui/internal: Add pointer and label when using function ""view on map""",21,['enhancement'],https://github.com/navit-gps/navit/pull/631,https://github.com/lains,3,https://github.com/navit-gps/navit/pull/631#issuecomment-450472592,"When selecting GPS coords or a town/street, and choosing ""View on map"", the display is centered on the selected location, but there is no visible pointer on this location.
In order to implement this, I have am re-using the code that is already existing to handle action ""Show results on the map"", and that is already able to display multiple result pointers on the map.
Here is an example of the result when selecting ""View on map"" for ""An der Hauptfeuerwache"" in Mûnchen.

I added some code to split long strings to multilines, in order to avoid having the text spread too much accross the map. This is also useful when using GPS coords:",This feature would also be nice on the gtk GUI.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,631,2018-07-14T17:47:34Z,2018-08-21T17:05:34Z,2019-01-08T19:57:42Z,MERGED,True,277,66,6,https://github.com/lains,"Refactor:gui/internal: Add pointer and label when using function ""view on map""",21,['enhancement'],https://github.com/navit-gps/navit/pull/631,https://github.com/lains,4,https://github.com/navit-gps/navit/pull/631#issuecomment-452431339,"When selecting GPS coords or a town/street, and choosing ""View on map"", the display is centered on the selected location, but there is no visible pointer on this location.
In order to implement this, I have am re-using the code that is already existing to handle action ""Show results on the map"", and that is already able to display multiple result pointers on the map.
Here is an example of the result when selecting ""View on map"" for ""An der Hauptfeuerwache"" in Mûnchen.

I added some code to split long strings to multilines, in order to avoid having the text spread too much accross the map. This is also useful when using GPS coords:",PR #729 submitted to add a similar feature on the GTK GUI.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,632,2018-07-14T20:14:27Z,2018-07-15T07:05:42Z,2018-07-15T07:20:26Z,MERGED,True,19,5,3,https://github.com/lains,"Fix:scripts:WinCE build script (remove sample map, add espeak-data)",3,[],https://github.com/navit-gps/navit/pull/632,https://github.com/lains,1,https://github.com/navit-gps/navit/pull/632,"Remove inclusion of sample map in zip package (which, in addition, fails currently because map server is down)
Allow running build_wince.sh script twice by performing cleanup on directories if already created
Adding missing espeak-data to zip package (the content of this directory is currently missing in WinCE output package and makes navit speech synthesis fail unless manually copied on the WinCE device)","Remove inclusion of sample map in zip package (which, in addition, fails currently because map server is down)
Allow running build_wince.sh script twice by performing cleanup on directories if already created
Adding missing espeak-data to zip package (the content of this directory is currently missing in WinCE output package and makes navit speech synthesis fail unless manually copied on the WinCE device)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,632,2018-07-14T20:14:27Z,2018-07-15T07:05:42Z,2018-07-15T07:20:26Z,MERGED,True,19,5,3,https://github.com/lains,"Fix:scripts:WinCE build script (remove sample map, add espeak-data)",3,[],https://github.com/navit-gps/navit/pull/632,https://github.com/lains,2,https://github.com/navit-gps/navit/pull/632#issuecomment-405050132,"Remove inclusion of sample map in zip package (which, in addition, fails currently because map server is down)
Allow running build_wince.sh script twice by performing cleanup on directories if already created
Adding missing espeak-data to zip package (the content of this directory is currently missing in WinCE output package and makes navit speech synthesis fail unless manually copied on the WinCE device)","xslt processing is not done on the WinCE environment, on the cmake logs, we can see
No XSLT processor available.  You have to configure navit.xml yourself, or
  install an XSLT processor (supported:
  saxonb-xslt;saxon;saxon8;saxon-xslt;xsltproc;transform.exe).

... and the Ubuntu on which the WinCE is running is quite old (Ubuntu 8.04.4 LTS), so even the saxon lib that was available then does not allow xslt processing.
xsltproc is available however, so with xsltproc installed, the required windows.xslt now applies.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,633,2018-07-15T07:31:11Z,2018-08-12T17:32:13Z,2018-11-28T14:45:55Z,MERGED,True,27,2,2,https://github.com/jkoan,Fix Android apk VersionCode ,13,[],https://github.com/navit-gps/navit/pull/633,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/633,"This PR Fixes the version code of the resulting apk to get back the old behavior.
In a further PR I will also update the circleci build so it is more clean and can publish signed apks again to google play.","This PR Fixes the version code of the resulting apk to get back the old behavior.
In a further PR I will also update the circleci build so it is more clean and can publish signed apks again to google play.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,633,2018-07-15T07:31:11Z,2018-08-12T17:32:13Z,2018-11-28T14:45:55Z,MERGED,True,27,2,2,https://github.com/jkoan,Fix Android apk VersionCode ,13,[],https://github.com/navit-gps/navit/pull/633,https://github.com/lains,2,https://github.com/navit-gps/navit/pull/633#issuecomment-405114605,"This PR Fixes the version code of the resulting apk to get back the old behavior.
In a further PR I will also update the circleci build so it is more clean and can publish signed apks again to google play.",Tested... works well on my android build.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,633,2018-07-15T07:31:11Z,2018-08-12T17:32:13Z,2018-11-28T14:45:55Z,MERGED,True,27,2,2,https://github.com/jkoan,Fix Android apk VersionCode ,13,[],https://github.com/navit-gps/navit/pull/633,https://github.com/pgrandin,3,https://github.com/navit-gps/navit/pull/633#issuecomment-405826700,"This PR Fixes the version code of the resulting apk to get back the old behavior.
In a further PR I will also update the circleci build so it is more clean and can publish signed apks again to google play.","to get back the old behavior

Can you share an example of the result?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,633,2018-07-15T07:31:11Z,2018-08-12T17:32:13Z,2018-11-28T14:45:55Z,MERGED,True,27,2,2,https://github.com/jkoan,Fix Android apk VersionCode ,13,[],https://github.com/navit-gps/navit/pull/633,https://github.com/jkoan,4,https://github.com/navit-gps/navit/pull/633#issuecomment-405942611,"This PR Fixes the version code of the resulting apk to get back the old behavior.
In a further PR I will also update the circleci build so it is more clean and can publish signed apks again to google play.",That's what it look like if you view the installed apps in a app overview app (in this example es file explorer),True,{}
navit-gps/navit,https://github.com/navit-gps/navit,633,2018-07-15T07:31:11Z,2018-08-12T17:32:13Z,2018-11-28T14:45:55Z,MERGED,True,27,2,2,https://github.com/jkoan,Fix Android apk VersionCode ,13,[],https://github.com/navit-gps/navit/pull/633,https://github.com/lains,5,https://github.com/navit-gps/navit/pull/633#issuecomment-406842922,"This PR Fixes the version code of the resulting apk to get back the old behavior.
In a further PR I will also update the circleci build so it is more clean and can publish signed apks again to google play.","Just a thought, about Version Name, https://semver.org/ recommends to use + before the build number, so version name could be 0.5.1-876+3fbbaab. Maybe this is actually coming from git-describe. Is this the very same value displayed in the ""About"" dialog?
On version code, maybe it would be good to display the full year 201807150412 instead of 1807150412 (if it's a free string... I don't know if there's a format to respect). I think it's quicker to spot the fact that this string is a date this way.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,633,2018-07-15T07:31:11Z,2018-08-12T17:32:13Z,2018-11-28T14:45:55Z,MERGED,True,27,2,2,https://github.com/jkoan,Fix Android apk VersionCode ,13,[],https://github.com/navit-gps/navit/pull/633,https://github.com/jkoan,6,https://github.com/navit-gps/navit/pull/633#issuecomment-406882545,"This PR Fixes the version code of the resulting apk to get back the old behavior.
In a further PR I will also update the circleci build so it is more clean and can publish signed apks again to google play.","hi @lains
thats exactly what it will look like:
0.5.1-876-g3fbbaab
We only have one digit more at git Hash and the version 0.5.0 in my screenshot is only because my fork is somewhat broken, but the main repo is ok and will give 0.5.1 as release tag.
And regrading the versioncode it need to be counted onwards. So YYYY instead of YY will work but this wont give a gig benefit.
EDIT:
This is only the fastest and easiest  version we can do with gradle so i went with this as it also contains all informations.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,633,2018-07-15T07:31:11Z,2018-08-12T17:32:13Z,2018-11-28T14:45:55Z,MERGED,True,27,2,2,https://github.com/jkoan,Fix Android apk VersionCode ,13,[],https://github.com/navit-gps/navit/pull/633,https://github.com/lains,7,https://github.com/navit-gps/navit/pull/633#issuecomment-406884681,"This PR Fixes the version code of the resulting apk to get back the old behavior.
In a further PR I will also update the circleci build so it is more clean and can publish signed apks again to google play.","OK, this is fine. My comment was just about the +, I was not really worried about the 0.5.1, I actually made a typo while copying the version because I took the one displayed on my phone.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,633,2018-07-15T07:31:11Z,2018-08-12T17:32:13Z,2018-11-28T14:45:55Z,MERGED,True,27,2,2,https://github.com/jkoan,Fix Android apk VersionCode ,13,[],https://github.com/navit-gps/navit/pull/633,https://github.com/jkoan,8,https://github.com/navit-gps/navit/pull/633#issuecomment-412358714,"This PR Fixes the version code of the resulting apk to get back the old behavior.
In a further PR I will also update the circleci build so it is more clean and can publish signed apks again to google play.",I will merge this now since it's important to get updates out on Google Playstore,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,633,2018-07-15T07:31:11Z,2018-08-12T17:32:13Z,2018-11-28T14:45:55Z,MERGED,True,27,2,2,https://github.com/jkoan,Fix Android apk VersionCode ,13,[],https://github.com/navit-gps/navit/pull/633,https://github.com/lains,9,https://github.com/navit-gps/navit/pull/633#issuecomment-442471635,"This PR Fixes the version code of the resulting apk to get back the old behavior.
In a further PR I will also update the circleci build so it is more clean and can publish signed apks again to google play.",Does this fix issue 1366 opened in trac?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,635,2018-07-27T08:47:32Z,2018-10-15T15:29:27Z,2018-10-15T15:29:27Z,CLOSED,False,3,1,2,https://github.com/lains,Update:i18n:Updating a few french translations,5,['i18n'],https://github.com/navit-gps/navit/pull/635,https://github.com/lains,1,https://github.com/navit-gps/navit/pull/635,"Updating some french translation, especially for menus texts that are partly out of the display on Android.","Updating some french translation, especially for menus texts that are partly out of the display on Android.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,635,2018-07-27T08:47:32Z,2018-10-15T15:29:27Z,2018-10-15T15:29:27Z,CLOSED,False,3,1,2,https://github.com/lains,Update:i18n:Updating a few french translations,5,['i18n'],https://github.com/navit-gps/navit/pull/635,https://github.com/lains,2,https://github.com/navit-gps/navit/pull/635#issuecomment-419641095,"Updating some french translation, especially for menus texts that are partly out of the display on Android.","Hi @jkoan, I have updated the PR (removing all gettext translations, that have been done in launchpad instead).",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,635,2018-07-27T08:47:32Z,2018-10-15T15:29:27Z,2018-10-15T15:29:27Z,CLOSED,False,3,1,2,https://github.com/lains,Update:i18n:Updating a few french translations,5,['i18n'],https://github.com/navit-gps/navit/pull/635,https://github.com/jkoan,3,https://github.com/navit-gps/navit/pull/635#issuecomment-429900998,"Updating some french translation, especially for menus texts that are partly out of the display on Android.",PR #686 merged this with success,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,636,2018-07-27T09:36:00Z,2018-09-03T13:26:16Z,2018-09-08T13:07:45Z,MERGED,True,2,1,1,https://github.com/lains,"Fix:gui/internal:Handling ""spacing"" attribute properly for tag <gui type=""internal"">",1,['enhancement'],https://github.com/navit-gps/navit/pull/636,https://github.com/lains,1,https://github.com/navit-gps/navit/pull/636,Feature was introduced in SVN r1456 (commit 5dea1c6) but was not applying tag properly from config file,Feature was introduced in SVN r1456 (commit 5dea1c6) but was not applying tag properly from config file,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,636,2018-07-27T09:36:00Z,2018-09-03T13:26:16Z,2018-09-08T13:07:45Z,MERGED,True,2,1,1,https://github.com/lains,"Fix:gui/internal:Handling ""spacing"" attribute properly for tag <gui type=""internal"">",1,['enhancement'],https://github.com/navit-gps/navit/pull/636,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/636#issuecomment-412358966,Feature was introduced in SVN r1456 (commit 5dea1c6) but was not applying tag properly from config file,"Hi @lains
Could you please describe what the feature is for? I don't have any idea where a ""spacing"" is needed.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,636,2018-07-27T09:36:00Z,2018-09-03T13:26:16Z,2018-09-08T13:07:45Z,MERGED,True,2,1,1,https://github.com/lains,"Fix:gui/internal:Handling ""spacing"" attribute properly for tag <gui type=""internal"">",1,['enhancement'],https://github.com/navit-gps/navit/pull/636,https://github.com/lains,3,https://github.com/navit-gps/navit/pull/636#issuecomment-413009726,Feature was introduced in SVN r1456 (commit 5dea1c6) but was not applying tag properly from config file,"This seems to be an old feature of the internal GUI, but that seems to be broken maybe since the beginning.
It allows to override the default spacing of icons in the internal GUI menus, but is is also used to decide the vertical spacing of many internal GUI windows.
Example with the default value:

When overriding using <gui type=""internal"" spacing=""30"">

When overriding using <gui type=""internal"" spacing=""3"">

Using the spacing attribute in navit.xml allows to force the value of attibute spacing in struct gui_priv see https://github.com/navit-gps/navit/blob/trunk/navit/gui/internal/gui_internal_priv.h#L55",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,636,2018-07-27T09:36:00Z,2018-09-03T13:26:16Z,2018-09-08T13:07:45Z,MERGED,True,2,1,1,https://github.com/lains,"Fix:gui/internal:Handling ""spacing"" attribute properly for tag <gui type=""internal"">",1,['enhancement'],https://github.com/navit-gps/navit/pull/636,https://github.com/lains,4,https://github.com/navit-gps/navit/pull/636#issuecomment-413121265,Feature was introduced in SVN r1456 (commit 5dea1c6) but was not applying tag properly from config file,"Note: this has impact (for internal GUI) on menus and submenus, and spacing attribute is set to different values for the various screen definitions on Android (ldpi, mdpi, hdpi, xhdpi, xxhdpi, xxxhdpi) - where spacing ranges from 2 (ldpi) to 11 (xxxhdpi). Default value is set as the last value of each entry in variable config_profiles (see https://github.com/navit-gps/navit/blob/trunk/navit/gui/internal/gui_internal.c#L108)
Therefore, this PR will be an impact on how menus display on Android.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,638,2018-08-02T20:41:47Z,2018-08-30T06:08:16Z,2018-08-30T15:07:25Z,MERGED,True,191,178,1,https://github.com/charlescurley,Curley distance poi,5,[],https://github.com/navit-gps/navit/pull/638,https://github.com/charlescurley,1,https://github.com/navit-gps/navit/pull/638,fix:gtk:poi Distances to POIs can now be shown in feet.,fix:gtk:poi Distances to POIs can now be shown in feet.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,638,2018-08-02T20:41:47Z,2018-08-30T06:08:16Z,2018-08-30T15:07:25Z,MERGED,True,191,178,1,https://github.com/charlescurley,Curley distance poi,5,[],https://github.com/navit-gps/navit/pull/638,https://github.com/charlescurley,2,https://github.com/navit-gps/navit/pull/638#issuecomment-414841086,fix:gtk:poi Distances to POIs can now be shown in feet.,"On Tue, 21 Aug 2018 17:15:38 +0000 (UTC) jkoan ***@***.***> wrote:
 Changes look good.
 Android build is failing because of an error in trunk, could you
 rebase?
Haven't done a rebase, but will give it a try. :-)
…
-- 
""When we talk of civilization, we are too apt to limit the meaning of
the word to its mere embellishments, such as arts and sciences; but
the true distinction between it and barbarism is, that the one
presents a state of society under the protection of just and
well-administered law, and the other is left to the chance government
of brute force.""
- The Rev. James White, Eighteen Christian Centuries, 1889
Key fingerprint = CE5C 6645 A45A 64E4 94C0  809C FFF6 4C48 4ECD DFDB
https://charlescurley.com",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,638,2018-08-02T20:41:47Z,2018-08-30T06:08:16Z,2018-08-30T15:07:25Z,MERGED,True,191,178,1,https://github.com/charlescurley,Curley distance poi,5,[],https://github.com/navit-gps/navit/pull/638,https://github.com/jkoan,3,https://github.com/navit-gps/navit/pull/638#issuecomment-415074453,fix:gtk:poi Distances to POIs can now be shown in feet.,"If you are working on Commandline, a simple git rebase trunk should be enought ;) if this is not working probably origin/trunk or something like this",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,638,2018-08-02T20:41:47Z,2018-08-30T06:08:16Z,2018-08-30T15:07:25Z,MERGED,True,191,178,1,https://github.com/charlescurley,Curley distance poi,5,[],https://github.com/navit-gps/navit/pull/638,https://github.com/charlescurley,4,https://github.com/navit-gps/navit/pull/638#issuecomment-416000698,fix:gtk:poi Distances to POIs can now be shown in feet.,"On Wed, 22 Aug 2018 08:31:55 -0700 jkoan ***@***.***> wrote:
 If you are working on Commandline, a simple `git rebase trunk` should
 be enought ;) if this is not working probably origin/trunk or
 something like this
OK, I've gone as far as I can.

One lesson: do NOT edit the .po files (e.g. po/en_GB.po.in)! Something
that runs during build time (I think) updates them for you. Editing
them for yourself results in conflicts that git doesn't like and you
have to resolve by hand.

Would someone kindly add that to the docs. Thank you.

I did a git clone to get the latest & greatest onto my computer. That
didn't have the branch in question. So I did ""git clone -b
curleyDistancePoi..."", and that got the latest with the branch I
wanted. I then started the rebase, which was a mess.

charles@hawk:~/versioned/navit$ git rebase --skip
charles@hawk:~/versioned/navit$ git st
On branch curleyDistancePoi
Your branch and 'origin/curleyDistancePoi' have diverged,
and have 7 and 6 different commits each, respectively.
  (use ""git pull"" to merge the remote branch into yours)
nothing to commit, working tree clean
charles@hawk:~/versioned/navit$ git commit -a
On branch curleyDistancePoi
Your branch and 'origin/curleyDistancePoi' have diverged,
and have 7 and 6 different commits each, respectively.
  (use ""git pull"" to merge the remote branch into yours)
nothing to commit, working tree clean
charles@hawk:~/versioned/navit$


Now what?
…
-- 
""When we talk of civilization, we are too apt to limit the meaning of
the word to its mere embellishments, such as arts and sciences; but
the true distinction between it and barbarism is, that the one
presents a state of society under the protection of just and
well-administered law, and the other is left to the chance government
of brute force.""
- The Rev. James White, Eighteen Christian Centuries, 1889
Key fingerprint = CE5C 6645 A45A 64E4 94C0  809C FFF6 4C48 4ECD DFDB
https://charlescurley.com",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,638,2018-08-02T20:41:47Z,2018-08-30T06:08:16Z,2018-08-30T15:07:25Z,MERGED,True,191,178,1,https://github.com/charlescurley,Curley distance poi,5,[],https://github.com/navit-gps/navit/pull/638,https://github.com/jkoan,5,https://github.com/navit-gps/navit/pull/638#issuecomment-416272763,fix:gtk:poi Distances to POIs can now be shown in feet.,"I have done the rebase and pushed it on the repo, could you please verify that this exacly what you want to get merged?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,638,2018-08-02T20:41:47Z,2018-08-30T06:08:16Z,2018-08-30T15:07:25Z,MERGED,True,191,178,1,https://github.com/charlescurley,Curley distance poi,5,[],https://github.com/navit-gps/navit/pull/638,https://github.com/charlescurley,6,https://github.com/navit-gps/navit/pull/638#issuecomment-416280660,fix:gtk:poi Distances to POIs can now be shown in feet.,"On Mon, 27 Aug 2018 15:50:30 +0000 (UTC) jkoan ***@***.***> wrote:
 I have done the rebase and pushed it on the repo, could you please
 verify that this exacly what you want to get merged?
Yes. The code looks right. It builds and runs, and the UI looks right.

Thank you.

Obviously I have some things to learn about rebasing.
…
-- 
""When we talk of civilization, we are too apt to limit the meaning of
the word to its mere embellishments, such as arts and sciences; but
the true distinction between it and barbarism is, that the one
presents a state of society under the protection of just and
well-administered law, and the other is left to the chance government
of brute force.""
- The Rev. James White, Eighteen Christian Centuries, 1889
Key fingerprint = CE5C 6645 A45A 64E4 94C0  809C FFF6 4C48 4ECD DFDB
https://charlescurley.com",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,638,2018-08-02T20:41:47Z,2018-08-30T06:08:16Z,2018-08-30T15:07:25Z,MERGED,True,191,178,1,https://github.com/charlescurley,Curley distance poi,5,[],https://github.com/navit-gps/navit/pull/638,https://github.com/charlescurley,7,https://github.com/navit-gps/navit/pull/638#issuecomment-416284463,fix:gtk:poi Distances to POIs can now be shown in feet.,"On Mon, 27 Aug 2018 15:50:30 +0000 (UTC) jkoan ***@***.***> wrote:
 I have done the rebase and pushed it on the repo, could you please
 verify that this exacly what you want to get merged?
I assumed that what you wanted me to check was in the branch
curleyDistancePoi. Is that correct?
…
-- 
""When we talk of civilization, we are too apt to limit the meaning of
the word to its mere embellishments, such as arts and sciences; but
the true distinction between it and barbarism is, that the one
presents a state of society under the protection of just and
well-administered law, and the other is left to the chance government
of brute force.""
- The Rev. James White, Eighteen Christian Centuries, 1889
Key fingerprint = CE5C 6645 A45A 64E4 94C0  809C FFF6 4C48 4ECD DFDB
https://charlescurley.com",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,638,2018-08-02T20:41:47Z,2018-08-30T06:08:16Z,2018-08-30T15:07:25Z,MERGED,True,191,178,1,https://github.com/charlescurley,Curley distance poi,5,[],https://github.com/navit-gps/navit/pull/638,https://github.com/jkoan,8,https://github.com/navit-gps/navit/pull/638#issuecomment-416292917,fix:gtk:poi Distances to POIs can now be shown in feet.,"Yes, and i also need to improve my merge and rebase workflow, i made a mistake in this progress :/ but if its okay now i would like that @pgrandin also looks on the code and merges when approved ;)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,638,2018-08-02T20:41:47Z,2018-08-30T06:08:16Z,2018-08-30T15:07:25Z,MERGED,True,191,178,1,https://github.com/charlescurley,Curley distance poi,5,[],https://github.com/navit-gps/navit/pull/638,https://github.com/pgrandin,9,https://github.com/navit-gps/navit/pull/638#issuecomment-417200940,fix:gtk:poi Distances to POIs can now be shown in feet.,"The changes to the .po.in files will need to be backported to launchpad.
The translation template is generated via the CI and pushed to launchpad, then we import the .po.in files from launchpad into the VCS. ( https://wiki.navit-project.org/index.php/Translations )
In the future we should refrain from pushing changes to .po.in files directly as they will be lost anyway.
Otherwise the change looks good, thanks @charlescurley !",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,638,2018-08-02T20:41:47Z,2018-08-30T06:08:16Z,2018-08-30T15:07:25Z,MERGED,True,191,178,1,https://github.com/charlescurley,Curley distance poi,5,[],https://github.com/navit-gps/navit/pull/638,https://github.com/charlescurley,10,https://github.com/navit-gps/navit/pull/638#issuecomment-417353674,fix:gtk:poi Distances to POIs can now be shown in feet.,"On Wed, 29 Aug 2018 23:08:12 -0700 Pierre GRANDIN ***@***.***> wrote:
 The changes to the .po.in files will need to be backported to
 launchpad. The translation template is generated via the CI and
 pushed to launchpad, then we import the .po.in files from launchpad
 into the VCS. ( https://wiki.navit-project.org/index.php/Translations
 )
All good stuff to know.

 In the future we should refrain from pushing changes to .po.in files
 directly as they will be lost anyway.
I quite agree. I did not read any of the stuff for translators because
I wasn't translating. So I wasn't aware of this process. Please
document this for developers so that others don't make the same mistake.

Thanks

 Otherwise the change looks good, thanks @charlescurley !

You are welcome.
…
-- 
""When we talk of civilization, we are too apt to limit the meaning of
the word to its mere embellishments, such as arts and sciences; but
the true distinction between it and barbarism is, that the one
presents a state of society under the protection of just and
well-administered law, and the other is left to the chance government
of brute force.""
- The Rev. James White, Eighteen Christian Centuries, 1889
Key fingerprint = CE5C 6645 A45A 64E4 94C0  809C FFF6 4C48 4ECD DFDB
https://charlescurley.com",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,645,2018-08-30T01:03:20Z,2018-08-31T02:23:04Z,2018-08-31T02:23:09Z,MERGED,True,1134,1029,19,https://github.com/aerostitch,cleanup:android:Fix android checkstyle complains,29,[],https://github.com/navit-gps/navit/pull/645,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/645,"@jandegr had started an awesome work around the java files cleanup.
Creating this PR to avoid loosing that and try to continue it a bit.","@jandegr had started an awesome work around the java files cleanup.
Creating this PR to avoid loosing that and try to continue it a bit.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,645,2018-08-30T01:03:20Z,2018-08-31T02:23:04Z,2018-08-31T02:23:09Z,MERGED,True,1134,1029,19,https://github.com/aerostitch,cleanup:android:Fix android checkstyle complains,29,[],https://github.com/navit-gps/navit/pull/645,https://github.com/aerostitch,2,https://github.com/navit-gps/navit/pull/645#issuecomment-417378152,"@jandegr had started an awesome work around the java files cleanup.
Creating this PR to avoid loosing that and try to continue it a bit.",@pgrandin @jkoan I'm wondering if I should continue on this PR or if it's going to get harder and harder to review? Should we merge and continue in smaller PR?,True,{'THUMBS_UP': ['https://github.com/jkoan']}
navit-gps/navit,https://github.com/navit-gps/navit,645,2018-08-30T01:03:20Z,2018-08-31T02:23:04Z,2018-08-31T02:23:09Z,MERGED,True,1134,1029,19,https://github.com/aerostitch,cleanup:android:Fix android checkstyle complains,29,[],https://github.com/navit-gps/navit/pull/645,https://github.com/pgrandin,3,https://github.com/navit-gps/navit/pull/645#issuecomment-417452692,"@jandegr had started an awesome work around the java files cleanup.
Creating this PR to avoid loosing that and try to continue it a bit.","I'm wondering if I should continue on this PR or if it's going to get harder and harder to review? Should we merge and continue in smaller PR?

Definitely. Smaller changes are easier to review and test.
Merge!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,646,2018-08-30T04:46:58Z,2018-08-30T06:01:31Z,2018-08-30T16:15:00Z,MERGED,True,68,68,2,https://github.com/aerostitch,"cleanup:scripts:Fix condefactor complains ""String concat is not required here; use a single string instead""",1,[],https://github.com/navit-gps/navit/pull/646,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/646,"Not even sure we still use this script but it seems a little cleanup would make codefactor happy, so here it is.
Does anyone know how it's used?","Not even sure we still use this script but it seems a little cleanup would make codefactor happy, so here it is.
Does anyone know how it's used?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,646,2018-08-30T04:46:58Z,2018-08-30T06:01:31Z,2018-08-30T16:15:00Z,MERGED,True,68,68,2,https://github.com/aerostitch,"cleanup:scripts:Fix condefactor complains ""String concat is not required here; use a single string instead""",1,[],https://github.com/navit-gps/navit/pull/646,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/646#issuecomment-417199681,"Not even sure we still use this script but it seems a little cleanup would make codefactor happy, so here it is.
Does anyone know how it's used?","It's probably outdated. But fixing the lint won't break anything, so let's do it.",True,{'HOORAY': ['https://github.com/aerostitch']}
navit-gps/navit,https://github.com/navit-gps/navit,647,2018-08-30T05:00:19Z,2019-10-16T05:02:31Z,2019-10-17T00:14:05Z,CLOSED,False,1,0,1,https://github.com/aerostitch,[On_HOLD] fix:build:Fix an issue with buildroot unable to find libfib in its rpath,2,[],https://github.com/navit-gps/navit/pull/647,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/647,"Closes: #629
This is a patch from @naggety, see mentionned issue.
Needs to be tested, but I want to verify that it doesn't break any of our builds first.","Closes: #629
This is a patch from @naggety, see mentionned issue.
Needs to be tested, but I want to verify that it doesn't break any of our builds first.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,647,2018-08-30T05:00:19Z,2019-10-16T05:02:31Z,2019-10-17T00:14:05Z,CLOSED,False,1,0,1,https://github.com/aerostitch,[On_HOLD] fix:build:Fix an issue with buildroot unable to find libfib in its rpath,2,[],https://github.com/navit-gps/navit/pull/647,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/647#issuecomment-417199353,"Closes: #629
This is a patch from @naggety, see mentionned issue.
Needs to be tested, but I want to verify that it doesn't break any of our builds first.","While the patch might fix the issue for @naggety, I am wondering if the root cause isn't somewhere else. I've used buildroot extensively myself  ( https://github.com/pgrandin/navit-buildroot/tree/master/packages/navit ) and haven't faced that issue. I need to dig into @naggety's package code. We might want to wait before merging that.",True,{'THUMBS_UP': ['https://github.com/aerostitch']}
navit-gps/navit,https://github.com/navit-gps/navit,647,2018-08-30T05:00:19Z,2019-10-16T05:02:31Z,2019-10-17T00:14:05Z,CLOSED,False,1,0,1,https://github.com/aerostitch,[On_HOLD] fix:build:Fix an issue with buildroot unable to find libfib in its rpath,2,[],https://github.com/navit-gps/navit/pull/647,https://github.com/jkoan,3,https://github.com/navit-gps/navit/pull/647#issuecomment-420794296,"Closes: #629
This is a patch from @naggety, see mentionned issue.
Needs to be tested, but I want to verify that it doesn't break any of our builds first.",The difference between your two implementations are that @pgrandin set the LIB-DIR but @naggety didn't set it.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,647,2018-08-30T05:00:19Z,2019-10-16T05:02:31Z,2019-10-17T00:14:05Z,CLOSED,False,1,0,1,https://github.com/aerostitch,[On_HOLD] fix:build:Fix an issue with buildroot unable to find libfib in its rpath,2,[],https://github.com/navit-gps/navit/pull/647,https://github.com/metalstrolch,4,https://github.com/navit-gps/navit/pull/647#issuecomment-423989210,"Closes: #629
This is a patch from @naggety, see mentionned issue.
Needs to be tested, but I want to verify that it doesn't break any of our builds first.","There seems to be something else strange as well around fib.
On buildroot setup i try to build navit against qt5, but without plugin support. Still libfib gets built seperately. (I get libfib.so)
Doesn't happen on my Gentoo-PC and obviously not on sailfish MER build environment. Because there is no libfib.so then.
What's different on building fib?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,647,2018-08-30T05:00:19Z,2019-10-16T05:02:31Z,2019-10-17T00:14:05Z,CLOSED,False,1,0,1,https://github.com/aerostitch,[On_HOLD] fix:build:Fix an issue with buildroot unable to find libfib in its rpath,2,[],https://github.com/navit-gps/navit/pull/647,https://github.com/metalstrolch,5,https://github.com/navit-gps/navit/pull/647#issuecomment-423992528,"Closes: #629
This is a patch from @naggety, see mentionned issue.
Needs to be tested, but I want to verify that it doesn't break any of our builds first.","The difference between sailfish build, my pc build and buildroot is, that only buildroot does an in tree build. Maybe there is a name clash somewhere if built in tree.
edit: This was found to be NOT the cause.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,647,2018-08-30T05:00:19Z,2019-10-16T05:02:31Z,2019-10-17T00:14:05Z,CLOSED,False,1,0,1,https://github.com/aerostitch,[On_HOLD] fix:build:Fix an issue with buildroot unable to find libfib in its rpath,2,[],https://github.com/navit-gps/navit/pull/647,https://github.com/metalstrolch,6,https://github.com/navit-gps/navit/pull/647#issuecomment-424027876,"Closes: #629
This is a patch from @naggety, see mentionned issue.
Needs to be tested, but I want to verify that it doesn't break any of our builds first.","OK, found the libfib oddity with buildroot:
libfib is added to the project by simple ""add_library"" cmake function without explicitly stating how to link it. So the default behaviour of CMAKE in this case depends on the presence of the BUILD_SHARED_LIBS variable.
Buildroot sets BUILD_SHARED_LIBS environment on cmake to ""ON"". If unset (like on sailfish or my PC) the behaviour defaults to ""NO"".
For buildroot this can be fixed by explicitly stating BUILD_SHARED_LIBS in cmake run.
But I suggest to alter supportlib_add_library macro to honour ""USE_PLUGINS"" setting as well.
All support libraries are affected by this. But since they are rarely used and rarely anybody builds with USE_PLUGINS=FALSE, this was never noticed eventually.
Or does anyone have better ideas?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,647,2018-08-30T05:00:19Z,2019-10-16T05:02:31Z,2019-10-17T00:14:05Z,CLOSED,False,1,0,1,https://github.com/aerostitch,[On_HOLD] fix:build:Fix an issue with buildroot unable to find libfib in its rpath,2,[],https://github.com/navit-gps/navit/pull/647,https://github.com/jkoan,7,https://github.com/navit-gps/navit/pull/647#issuecomment-542516007,"Closes: #629
This is a patch from @naggety, see mentionned issue.
Needs to be tested, but I want to verify that it doesn't break any of our builds first.",Please continue the dicussion within #629,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,650,2018-09-02T01:48:18Z,2018-10-20T06:15:28Z,2018-10-20T07:36:29Z,MERGED,True,166,5162,16,https://github.com/bignaux,Refactoring:navit/maptool:build with external protobuf-c,3,[],https://github.com/navit-gps/navit/pull/650,https://github.com/bignaux,1,https://github.com/navit-gps/navit/pull/650,depend on #651 : need target to be updated.,depend on #651 : need target to be updated.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,650,2018-09-02T01:48:18Z,2018-10-20T06:15:28Z,2018-10-20T07:36:29Z,MERGED,True,166,5162,16,https://github.com/bignaux,Refactoring:navit/maptool:build with external protobuf-c,3,[],https://github.com/navit-gps/navit/pull/650,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/650#issuecomment-426525539,depend on #651 : need target to be updated.,@jkoan looks like @bignaux addressed your concerns. Want to update your review?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,650,2018-09-02T01:48:18Z,2018-10-20T06:15:28Z,2018-10-20T07:36:29Z,MERGED,True,166,5162,16,https://github.com/bignaux,Refactoring:navit/maptool:build with external protobuf-c,3,[],https://github.com/navit-gps/navit/pull/650,https://github.com/jkoan,3,https://github.com/navit-gps/navit/pull/650#issuecomment-426527799,depend on #651 : need target to be updated.,I don't see any new commits. And the issue with the find protobuf-c has end addressed as well.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,650,2018-09-02T01:48:18Z,2018-10-20T06:15:28Z,2018-10-20T07:36:29Z,MERGED,True,166,5162,16,https://github.com/bignaux,Refactoring:navit/maptool:build with external protobuf-c,3,[],https://github.com/navit-gps/navit/pull/650,https://github.com/pgrandin,4,https://github.com/navit-gps/navit/pull/650#issuecomment-431553358,depend on #651 : need target to be updated.,🎊,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,651,2018-09-02T15:17:10Z,2019-05-25T20:45:36Z,2019-05-25T20:45:51Z,MERGED,True,67,766,12,https://github.com/bignaux,Refactoring:cmake:from 2.6 to 3.2,1,"['build system', 'cleanup']",https://github.com/navit-gps/navit/pull/651,https://github.com/bignaux,1,https://github.com/navit-gps/navit/pull/651,"Need container navit/tomtom-build-image to be upgrade :
CMake 3.1 or higher is required.  You are running version 2.8.12.2
Need wince targets and others to be fixed to by theirs maintainers or be drop from default CI build. we can't be stuck to very old version of software because others parts are not playing the game of upgrade software time to time. Please up trusty at least to xenial ...","Need container navit/tomtom-build-image to be upgrade :
CMake 3.1 or higher is required.  You are running version 2.8.12.2
Need wince targets and others to be fixed to by theirs maintainers or be drop from default CI build. we can't be stuck to very old version of software because others parts are not playing the game of upgrade software time to time. Please up trusty at least to xenial ...",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,651,2018-09-02T15:17:10Z,2019-05-25T20:45:36Z,2019-05-25T20:45:51Z,MERGED,True,67,766,12,https://github.com/bignaux,Refactoring:cmake:from 2.6 to 3.2,1,"['build system', 'cleanup']",https://github.com/navit-gps/navit/pull/651,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/651#issuecomment-418020186,"Need container navit/tomtom-build-image to be upgrade :
CMake 3.1 or higher is required.  You are running version 2.8.12.2
Need wince targets and others to be fixed to by theirs maintainers or be drop from default CI build. we can't be stuck to very old version of software because others parts are not playing the game of upgrade software time to time. Please up trusty at least to xenial ...","The problem with expachially WinCE is that it is WinCE and we have no way to update the OS because the Toolchain is so old that its only running on such old OSs. This is a Problem we encountered because the WinCe Toolchain is not updated anymore, but we dont want to drop support for it because most of the common navigation devices are WinCE devices (especially those cheap ones from ebay, and devices which are build into cars). So we dont want to drop a large userbase.
But i denenetly agree that we should update cmake and probably also everythink that is possible on OS side for every build, but we may not drop device support and there for targets",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,651,2018-09-02T15:17:10Z,2019-05-25T20:45:36Z,2019-05-25T20:45:51Z,MERGED,True,67,766,12,https://github.com/bignaux,Refactoring:cmake:from 2.6 to 3.2,1,"['build system', 'cleanup']",https://github.com/navit-gps/navit/pull/651,https://github.com/bignaux,3,https://github.com/navit-gps/navit/pull/651#issuecomment-418096893,"Need container navit/tomtom-build-image to be upgrade :
CMake 3.1 or higher is required.  You are running version 2.8.12.2
Need wince targets and others to be fixed to by theirs maintainers or be drop from default CI build. we can't be stuck to very old version of software because others parts are not playing the game of upgrade software time to time. Please up trusty at least to xenial ...","Anyway , for the moment i think we have to update the old trusty and stretch env to latest ubuntu LTS. I make that depend on PR #655",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,651,2018-09-02T15:17:10Z,2019-05-25T20:45:36Z,2019-05-25T20:45:51Z,MERGED,True,67,766,12,https://github.com/bignaux,Refactoring:cmake:from 2.6 to 3.2,1,"['build system', 'cleanup']",https://github.com/navit-gps/navit/pull/651,https://github.com/bignaux,4,https://github.com/navit-gps/navit/pull/651#issuecomment-431677700,"Need container navit/tomtom-build-image to be upgrade :
CMake 3.1 or higher is required.  You are running version 2.8.12.2
Need wince targets and others to be fixed to by theirs maintainers or be drop from default CI build. we can't be stuck to very old version of software because others parts are not playing the game of upgrade software time to time. Please up trusty at least to xenial ...",fix cmake 3.x on windows : PR #702,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,652,2018-09-03T12:27:13Z,2018-10-19T13:07:43Z,2018-10-21T13:44:31Z,CLOSED,False,0,0,0,https://github.com/bignaux,[WIP] refactoring:switch build to latest ubuntu LTS,0,[],https://github.com/navit-gps/navit/pull/652,https://github.com/bignaux,1,https://github.com/navit-gps/navit/pull/652,"CMake is progressively dropping support and we HAVE to update it.
Some buildenv seems not maintained for years (or month), if we can't spend time on them, use available and saves time to reinvent the wheel.
unify on latest ubuntu LTS would save time fixing packages dependencies, configuration and scripts.

Please avoid to split code between dockerfile, circleci , and bash scripting. Do the maximum in the scripts, so we don't have to fix on upper software.
UPDATE : with tomtom-ng , oldest cmake is V3.2.0 from wince. This image could be update later thanks to http://max.kellermann.name/projects/cegcc/ .
@pgrandin @jkoan Should i continue this work or useless ?","CMake is progressively dropping support and we HAVE to update it.
Some buildenv seems not maintained for years (or month), if we can't spend time on them, use available and saves time to reinvent the wheel.
unify on latest ubuntu LTS would save time fixing packages dependencies, configuration and scripts.

Please avoid to split code between dockerfile, circleci , and bash scripting. Do the maximum in the scripts, so we don't have to fix on upper software.
UPDATE : with tomtom-ng , oldest cmake is V3.2.0 from wince. This image could be update later thanks to http://max.kellermann.name/projects/cegcc/ .
@pgrandin @jkoan Should i continue this work or useless ?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,652,2018-09-03T12:27:13Z,2018-10-19T13:07:43Z,2018-10-21T13:44:31Z,CLOSED,False,0,0,0,https://github.com/bignaux,[WIP] refactoring:switch build to latest ubuntu LTS,0,[],https://github.com/navit-gps/navit/pull/652,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/652#issuecomment-418454414,"CMake is progressively dropping support and we HAVE to update it.
Some buildenv seems not maintained for years (or month), if we can't spend time on them, use available and saves time to reinvent the wheel.
unify on latest ubuntu LTS would save time fixing packages dependencies, configuration and scripts.

Please avoid to split code between dockerfile, circleci , and bash scripting. Do the maximum in the scripts, so we don't have to fix on upper software.
UPDATE : with tomtom-ng , oldest cmake is V3.2.0 from wince. This image could be update later thanks to http://max.kellermann.name/projects/cegcc/ .
@pgrandin @jkoan Should i continue this work or useless ?","Should i continue this work or useless ?

Definitely useful to update our base image. Thanks for looking into this!",True,"{'THUMBS_UP': ['https://github.com/mvglasow', 'https://github.com/jkoan']}"
navit-gps/navit,https://github.com/navit-gps/navit,653,2018-09-03T12:50:38Z,2018-09-03T13:11:37Z,2018-09-03T13:17:44Z,MERGED,True,1,0,1,https://github.com/pohlinkzei,Add netbeans project folder to gitignore,1,[],https://github.com/navit-gps/navit/pull/653,https://github.com/pohlinkzei,1,https://github.com/navit-gps/navit/pull/653,"Hi,
just a very small change - I'd like to have the nbprojects folder netbeans uses for its project included in .gitignore.
Thanks ;)","Hi,
just a very small change - I'd like to have the nbprojects folder netbeans uses for its project included in .gitignore.
Thanks ;)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,655,2018-09-04T13:42:30Z,2018-09-04T13:56:26Z,2018-10-19T12:17:21Z,MERGED,True,2,2,1,https://github.com/bignaux,Add:circleci:Upgrade tomtom build image,1,[],https://github.com/navit-gps/navit/pull/655,https://github.com/bignaux,1,https://github.com/navit-gps/navit/pull/655,"Just update this to have cmake 3.2 since circular issue : fixing build need improve cmake, fixing cmake need to update build :)","Just update this to have cmake 3.2 since circular issue : fixing build need improve cmake, fixing cmake need to update build :)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,656,2018-09-04T15:12:35Z,2018-09-04T15:35:49Z,2018-09-04T15:37:58Z,MERGED,True,10,8,1,https://github.com/bignaux,Add:circleci:Upgrade linux build image to latest ubuntu LTS,1,[],https://github.com/navit-gps/navit/pull/656,https://github.com/bignaux,1,https://github.com/navit-gps/navit/pull/656,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,657,2018-09-04T17:10:49Z,2018-10-15T15:27:53Z,2020-08-18T11:56:12Z,CLOSED,False,34,18,1,https://github.com/pgrandin,Update:i18n:Updated Dutch translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/657,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/657,This mostly relates to @charlescurley's work on the GTK ui.,This mostly relates to @charlescurley's work on the GTK ui.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,657,2018-09-04T17:10:49Z,2018-10-15T15:27:53Z,2020-08-18T11:56:12Z,CLOSED,False,34,18,1,https://github.com/pgrandin,Update:i18n:Updated Dutch translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/657,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/657#issuecomment-429900343,This mostly relates to @charlescurley's work on the GTK ui.,@Kazer please redonthis as well ;),True,{}
navit-gps/navit,https://github.com/navit-gps/navit,658,2018-09-04T17:20:52Z,2018-09-06T11:01:56Z,2020-08-18T11:56:13Z,MERGED,True,66,47,2,https://github.com/pgrandin,add:18n:added script to import one launchpad translation via its url,4,['i18n'],https://github.com/navit-gps/navit/pull/658,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/658,"This is the script that we currently use to import a single translation from launchpad.
After running this script (for example like this :bash import.sh http://launchpadlibrarian.net/386809990/navit_navit-ru.po) we only need to create the pull request for the relevant branch (which could probably be automated too).","This is the script that we currently use to import a single translation from launchpad.
After running this script (for example like this :bash import.sh http://launchpadlibrarian.net/386809990/navit_navit-ru.po) we only need to create the pull request for the relevant branch (which could probably be automated too).",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,659,2018-09-06T21:22:49Z,2019-05-20T19:29:45Z,2019-05-20T19:32:36Z,MERGED,True,53,48,8,https://github.com/bignaux,Refactoring:mingw:simplify toolchain,2,[],https://github.com/navit-gps/navit/pull/659,https://github.com/bignaux,1,https://github.com/navit-gps/navit/pull/659,"Should allow win64 build.
mingw32 -> mingw-w64","Should allow win64 build.
mingw32 -> mingw-w64",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,661,2018-09-10T02:34:01Z,2019-09-22T05:44:45Z,2019-09-22T05:44:52Z,CLOSED,False,40,20,1,https://github.com/aerostitch,[WIP] cleanup:graphics:Make sure we use g_strcmp0 instead of strcmp,2,['WIP'],https://github.com/navit-gps/navit/pull/661,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/661,"Everywhere else in that file (especially for this variable), we use the g_* functions to manage the memory. It would only make sense that we use the g_strcmp0 instead of strcmp there too.
Plus, g_strcmp0 handles NULL better.","Everywhere else in that file (especially for this variable), we use the g_* functions to manage the memory. It would only make sense that we use the g_strcmp0 instead of strcmp there too.
Plus, g_strcmp0 handles NULL better.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,661,2018-09-10T02:34:01Z,2019-09-22T05:44:45Z,2019-09-22T05:44:52Z,CLOSED,False,40,20,1,https://github.com/aerostitch,[WIP] cleanup:graphics:Make sure we use g_strcmp0 instead of strcmp,2,['WIP'],https://github.com/navit-gps/navit/pull/661,https://github.com/aerostitch,2,https://github.com/navit-gps/navit/pull/661#issuecomment-419775948,"Everywhere else in that file (especially for this variable), we use the g_* functions to manage the memory. It would only make sense that we use the g_strcmp0 instead of strcmp there too.
Plus, g_strcmp0 handles NULL better.","@pgrandin maybe we should update our glib support?
Do you know how we do that? Are there restrictions about it?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,661,2018-09-10T02:34:01Z,2019-09-22T05:44:45Z,2019-09-22T05:44:52Z,CLOSED,False,40,20,1,https://github.com/aerostitch,[WIP] cleanup:graphics:Make sure we use g_strcmp0 instead of strcmp,2,['WIP'],https://github.com/navit-gps/navit/pull/661,https://github.com/aerostitch,3,https://github.com/navit-gps/navit/pull/661#issuecomment-533851988,"Everywhere else in that file (especially for this variable), we use the g_* functions to manage the memory. It would only make sense that we use the g_strcmp0 instead of strcmp there too.
Plus, g_strcmp0 handles NULL better.","Closing for now as it requires a refactor of the way we embed glib, which we don't really have the bandwidth for.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,662,2018-09-10T02:59:52Z,2019-09-22T05:45:18Z,2019-09-22T05:45:23Z,CLOSED,False,6,6,1,https://github.com/aerostitch,[WIP] cleanup:navigation:Make sure we use g_strcmp0 instead of strcmp,1,['WIP'],https://github.com/navit-gps/navit/pull/662,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/662,Moving strcmp to g_strcmp0 in navit/navigation.c.,Moving strcmp to g_strcmp0 in navit/navigation.c.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,662,2018-09-10T02:59:52Z,2019-09-22T05:45:18Z,2019-09-22T05:45:23Z,CLOSED,False,6,6,1,https://github.com/aerostitch,[WIP] cleanup:navigation:Make sure we use g_strcmp0 instead of strcmp,1,['WIP'],https://github.com/navit-gps/navit/pull/662,https://github.com/aerostitch,2,https://github.com/navit-gps/navit/pull/662#issuecomment-419776026,Moving strcmp to g_strcmp0 in navit/navigation.c.,"Maybe we should update our glib support?
Do you know how we do that? Are there restrictions about it?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,662,2018-09-10T02:59:52Z,2019-09-22T05:45:18Z,2019-09-22T05:45:23Z,CLOSED,False,6,6,1,https://github.com/aerostitch,[WIP] cleanup:navigation:Make sure we use g_strcmp0 instead of strcmp,1,['WIP'],https://github.com/navit-gps/navit/pull/662,https://github.com/pgrandin,3,https://github.com/navit-gps/navit/pull/662#issuecomment-420508011,Moving strcmp to g_strcmp0 in navit/navigation.c.,"Yes it looks like an upgrade is needed as per the discussion on IRC.
Going to mark this PR ""WIP"" for now.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,662,2018-09-10T02:59:52Z,2019-09-22T05:45:18Z,2019-09-22T05:45:23Z,CLOSED,False,6,6,1,https://github.com/aerostitch,[WIP] cleanup:navigation:Make sure we use g_strcmp0 instead of strcmp,1,['WIP'],https://github.com/navit-gps/navit/pull/662,https://github.com/aerostitch,4,https://github.com/navit-gps/navit/pull/662#issuecomment-533852018,Moving strcmp to g_strcmp0 in navit/navigation.c.,"Closing for now as it requires a refactor of the way we embed glib, which we don't really have the bandwidth for.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,663,2018-09-10T04:05:16Z,2018-09-12T04:26:27Z,2018-09-12T04:26:29Z,MERGED,True,7,12,1,https://github.com/aerostitch, cleanup:coord:Make sure we use g_* for malloc/free/strncpy,3,[],https://github.com/navit-gps/navit/pull/663,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/663,Also included a style fix.,Also included a style fix.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,664,2018-09-10T23:58:40Z,2018-09-11T04:53:04Z,2018-09-11T04:53:25Z,MERGED,True,6,12,1,https://github.com/aerostitch,cosmetic:core:Reformat callback.c to fit our standards,1,[],https://github.com/navit-gps/navit/pull/664,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/664,Just saw that while reading the code. Cosmetic change.,Just saw that while reading the code. Cosmetic change.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,665,2018-09-12T14:25:48Z,2018-09-12T15:28:50Z,2018-09-12T15:28:50Z,MERGED,True,3,3,2,https://github.com/lains,Fix:Circleci Fix on indentation warning and enabling xmllint on android builds,6,['build system'],https://github.com/navit-gps/navit/pull/665,https://github.com/lains,1,https://github.com/navit-gps/navit/pull/665,"There are circleci issues on my previous PR #559 that are not related to code, but to scripts checking for sanity.
This PR aims to fix these errors.","There are circleci issues on my previous PR #559 that are not related to code, but to scripts checking for sanity.
This PR aims to fix these errors.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,666,2018-09-12T19:09:37Z,2018-09-14T03:35:23Z,2018-09-25T06:25:22Z,MERGED,True,1,2,1,https://github.com/jkoan,build:maptool:Fix cmake CMP0026 warning,3,[],https://github.com/navit-gps/navit/pull/666,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/666,"This fixes the CMP0026 warning from cmake:
CMake Warning (dev) at navit/maps/CMakeLists.txt:5 (GET_TARGET_PROPERTY):
  Policy CMP0026 is not set: Disallow use of the LOCATION target property.
  Run ""cmake --help-policy CMP0026"" for policy details.  Use the cmake_policy
  command to set the policy and suppress this warning.

  The LOCATION property should not be read from target ""maptool"".  Use the
  target name directly with add_custom_command, or use the generator
  expression $<TARGET_FILE>, as appropriate.

This warning is for project developers.  Use -Wno-dev to suppress it.

Local Build Log: https://gist.github.com/jkoan/ef8723cb99e438b74f2affa3b9fc8db2","This fixes the CMP0026 warning from cmake:
CMake Warning (dev) at navit/maps/CMakeLists.txt:5 (GET_TARGET_PROPERTY):
  Policy CMP0026 is not set: Disallow use of the LOCATION target property.
  Run ""cmake --help-policy CMP0026"" for policy details.  Use the cmake_policy
  command to set the policy and suppress this warning.

  The LOCATION property should not be read from target ""maptool"".  Use the
  target name directly with add_custom_command, or use the generator
  expression $<TARGET_FILE>, as appropriate.

This warning is for project developers.  Use -Wno-dev to suppress it.

Local Build Log: https://gist.github.com/jkoan/ef8723cb99e438b74f2affa3b9fc8db2",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,666,2018-09-12T19:09:37Z,2018-09-14T03:35:23Z,2018-09-25T06:25:22Z,MERGED,True,1,2,1,https://github.com/jkoan,build:maptool:Fix cmake CMP0026 warning,3,[],https://github.com/navit-gps/navit/pull/666,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/666#issuecomment-420782477,"This fixes the CMP0026 warning from cmake:
CMake Warning (dev) at navit/maps/CMakeLists.txt:5 (GET_TARGET_PROPERTY):
  Policy CMP0026 is not set: Disallow use of the LOCATION target property.
  Run ""cmake --help-policy CMP0026"" for policy details.  Use the cmake_policy
  command to set the policy and suppress this warning.

  The LOCATION property should not be read from target ""maptool"".  Use the
  target name directly with add_custom_command, or use the generator
  expression $<TARGET_FILE>, as appropriate.

This warning is for project developers.  Use -Wno-dev to suppress it.

Local Build Log: https://gist.github.com/jkoan/ef8723cb99e438b74f2affa3b9fc8db2",Wait for #667,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,666,2018-09-12T19:09:37Z,2018-09-14T03:35:23Z,2018-09-25T06:25:22Z,MERGED,True,1,2,1,https://github.com/jkoan,build:maptool:Fix cmake CMP0026 warning,3,[],https://github.com/navit-gps/navit/pull/666,https://github.com/pgrandin,3,https://github.com/navit-gps/navit/pull/666#issuecomment-421187804,"This fixes the CMP0026 warning from cmake:
CMake Warning (dev) at navit/maps/CMakeLists.txt:5 (GET_TARGET_PROPERTY):
  Policy CMP0026 is not set: Disallow use of the LOCATION target property.
  Run ""cmake --help-policy CMP0026"" for policy details.  Use the cmake_policy
  command to set the policy and suppress this warning.

  The LOCATION property should not be read from target ""maptool"".  Use the
  target name directly with add_custom_command, or use the generator
  expression $<TARGET_FILE>, as appropriate.

This warning is for project developers.  Use -Wno-dev to suppress it.

Local Build Log: https://gist.github.com/jkoan/ef8723cb99e438b74f2affa3b9fc8db2",LOL @aerostitch,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,667,2018-09-12T19:55:57Z,2018-09-12T20:24:54Z,2018-09-12T20:24:54Z,MERGED,True,600,576,11,https://github.com/jkoan,fix:gui:Run astyle against gui/gtk,2,[],https://github.com/navit-gps/navit/pull/667,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/667,"Fixes for #638
As discussed at IRC","Fixes for #638
As discussed at IRC",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,668,2018-09-16T00:39:59Z,2019-08-28T19:01:45Z,2019-08-28T19:01:45Z,CLOSED,False,24,22102,43,https://github.com/aerostitch,[WIP] update:support:Switch to CMake ExternalProject_Add instead of support for glib,7,['WIP'],https://github.com/navit-gps/navit/pull/668,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/668,"This is a first tentative to use cmake's external projects instead of including glib via support.
There are a bunch of cleanup to do later on, but let's see if we manage to build everywhere with that.","This is a first tentative to use cmake's external projects instead of including glib via support.
There are a bunch of cleanup to do later on, but let's see if we manage to build everywhere with that.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,668,2018-09-16T00:39:59Z,2019-08-28T19:01:45Z,2019-08-28T19:01:45Z,CLOSED,False,24,22102,43,https://github.com/aerostitch,[WIP] update:support:Switch to CMake ExternalProject_Add instead of support for glib,7,['WIP'],https://github.com/navit-gps/navit/pull/668,https://github.com/aerostitch,2,https://github.com/navit-gps/navit/pull/668#issuecomment-421671258,"This is a first tentative to use cmake's external projects instead of including glib via support.
There are a bunch of cleanup to do later on, but let's see if we manage to build everywhere with that.","Working on this locally for now to avoid hitting circleci quotas, please don't push anything to this branch for now.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,668,2018-09-16T00:39:59Z,2019-08-28T19:01:45Z,2019-08-28T19:01:45Z,CLOSED,False,24,22102,43,https://github.com/aerostitch,[WIP] update:support:Switch to CMake ExternalProject_Add instead of support for glib,7,['WIP'],https://github.com/navit-gps/navit/pull/668,https://github.com/aerostitch,3,https://github.com/navit-gps/navit/pull/668#issuecomment-424910644,"This is a first tentative to use cmake's external projects instead of including glib via support.
There are a bunch of cleanup to do later on, but let's see if we manage to build everywhere with that.","I haven't had the time to go much further lately so if you got more time to look at it, knock yourself out. Just put a note in the PR so that we don't both work on it at the same time.
Thx!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,668,2018-09-16T00:39:59Z,2019-08-28T19:01:45Z,2019-08-28T19:01:45Z,CLOSED,False,24,22102,43,https://github.com/aerostitch,[WIP] update:support:Switch to CMake ExternalProject_Add instead of support for glib,7,['WIP'],https://github.com/navit-gps/navit/pull/668,https://github.com/bignaux,4,https://github.com/navit-gps/navit/pull/668#issuecomment-432488675,"This is a first tentative to use cmake's external projects instead of including glib via support.
There are a bunch of cleanup to do later on, but let's see if we manage to build everywhere with that.",seems a bit over complicated to try to build glib2 from navit source instead of use binary from http://win-builds.org/doku.php/1.5.0_packages#glib2_2421-1_-_library_of_c_routines for example and install them via circle-ci (to avoid distro specific stuff in script directory).  keep the build system as simple as possible and let distro packager provides the right dependancies is for me a better way to do.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,668,2018-09-16T00:39:59Z,2019-08-28T19:01:45Z,2019-08-28T19:01:45Z,CLOSED,False,24,22102,43,https://github.com/aerostitch,[WIP] update:support:Switch to CMake ExternalProject_Add instead of support for glib,7,['WIP'],https://github.com/navit-gps/navit/pull/668,https://github.com/aerostitch,5,https://github.com/navit-gps/navit/pull/668#issuecomment-433554495,"This is a first tentative to use cmake's external projects instead of including glib via support.
There are a bunch of cleanup to do later on, but let's see if we manage to build everywhere with that.","seems a bit over complicated to try to build glib2 from navit source instead of use binary from http://win-builds.org/doku.php/1.5.0_packages#glib2_2421-1_-_library_of_c_routines for example and install them via circle-ci (to avoid distro specific stuff in script directory).

Sounds interesting. Do they support wince too?
Note that from the discussions I had with @pgrandin it seems the glib version in support was a patched version and nobody knows which version it was and what the patch was! :)

keep the build system as simple as possible and let distro packager provides the right dependancies is for me a better way to do.

Agreed, this is only used for platforms that don't have glib available, like the other libs that are present in support/
I don't have time to have a look further right now but if you want to give it a shot and use win-builds, feel free to do so @bignaux",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,668,2018-09-16T00:39:59Z,2019-08-28T19:01:45Z,2019-08-28T19:01:45Z,CLOSED,False,24,22102,43,https://github.com/aerostitch,[WIP] update:support:Switch to CMake ExternalProject_Add instead of support for glib,7,['WIP'],https://github.com/navit-gps/navit/pull/668,https://github.com/bignaux,6,https://github.com/navit-gps/navit/pull/668#issuecomment-435241959,"This is a first tentative to use cmake's external projects instead of including glib via support.
There are a bunch of cleanup to do later on, but let's see if we manage to build everywhere with that.","for win32 plateform, we need to enable gtk ui (currently only internal is available) so we need at least atk cairo gtk2 gdk_pixbuf pango imlib2 . So ExternalProject_Add for each would transform our cmake to a package manager ... Have you try to build for wince with this 2.58 version ? I'd really like to clean stuff (ezxml for example) and we need this glib update.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,668,2018-09-16T00:39:59Z,2019-08-28T19:01:45Z,2019-08-28T19:01:45Z,CLOSED,False,24,22102,43,https://github.com/aerostitch,[WIP] update:support:Switch to CMake ExternalProject_Add instead of support for glib,7,['WIP'],https://github.com/navit-gps/navit/pull/668,https://github.com/jkoan,7,https://github.com/navit-gps/navit/pull/668#issuecomment-525165398,"This is a first tentative to use cmake's external projects instead of including glib via support.
There are a bunch of cleanup to do later on, but let's see if we manage to build everywhere with that.",@aerostitch let's cose this PR for now but open a issue to rember that we want to update some build things later (like glib in build images and so on),True,{}
navit-gps/navit,https://github.com/navit-gps/navit,668,2018-09-16T00:39:59Z,2019-08-28T19:01:45Z,2019-08-28T19:01:45Z,CLOSED,False,24,22102,43,https://github.com/aerostitch,[WIP] update:support:Switch to CMake ExternalProject_Add instead of support for glib,7,['WIP'],https://github.com/navit-gps/navit/pull/668,https://github.com/aerostitch,8,https://github.com/navit-gps/navit/pull/668#issuecomment-525879094,"This is a first tentative to use cmake's external projects instead of including glib via support.
There are a bunch of cleanup to do later on, but let's see if we manage to build everywhere with that.",Created #848,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,669,2018-09-16T21:02:21Z,2018-10-22T16:47:33Z,2018-10-22T16:47:44Z,CLOSED,False,6,4,2,https://github.com/aerostitch,update:ci:deprecate setup_wince.sh script,2,[],https://github.com/navit-gps/navit/pull/669,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/669,Follow-up of navit-gps/Dockerfiles#3,Follow-up of navit-gps/Dockerfiles#3,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,669,2018-09-16T21:02:21Z,2018-10-22T16:47:33Z,2018-10-22T16:47:44Z,CLOSED,False,6,4,2,https://github.com/aerostitch,update:ci:deprecate setup_wince.sh script,2,[],https://github.com/navit-gps/navit/pull/669,https://github.com/aerostitch,2,https://github.com/navit-gps/navit/pull/669#issuecomment-421835108,Follow-up of navit-gps/Dockerfiles#3,"Looks like installing git-core brings a bad version of git that doesn't properly support to git clone in ..
The upgrade of the image starts to be a blocker for me. I guess I'll have to make it a priority 😞",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,669,2018-09-16T21:02:21Z,2018-10-22T16:47:33Z,2018-10-22T16:47:44Z,CLOSED,False,6,4,2,https://github.com/aerostitch,update:ci:deprecate setup_wince.sh script,2,[],https://github.com/navit-gps/navit/pull/669,https://github.com/aerostitch,3,https://github.com/navit-gps/navit/pull/669#issuecomment-430341942,Follow-up of navit-gps/Dockerfiles#3,"Note that for now this removes the git sha info from the wince build (until we create a new image with a newer OS where we'll re-add git.
Scanning dependencies of target git_version
-- git not found, cannot record git commit
-- Git commit: xdevxgitxnotxfound
-- Git   date: 7001010000
[  0%] Built target git_version",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,669,2018-09-16T21:02:21Z,2018-10-22T16:47:33Z,2018-10-22T16:47:44Z,CLOSED,False,6,4,2,https://github.com/aerostitch,update:ci:deprecate setup_wince.sh script,2,[],https://github.com/navit-gps/navit/pull/669,https://github.com/pgrandin,4,https://github.com/navit-gps/navit/pull/669#issuecomment-431642313,Follow-up of navit-gps/Dockerfiles#3,So this is still a WIP because of the git issue?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,669,2018-09-16T21:02:21Z,2018-10-22T16:47:33Z,2018-10-22T16:47:44Z,CLOSED,False,6,4,2,https://github.com/aerostitch,update:ci:deprecate setup_wince.sh script,2,[],https://github.com/navit-gps/navit/pull/669,https://github.com/jkoan,5,https://github.com/navit-gps/navit/pull/669#issuecomment-431646215,Follow-up of navit-gps/Dockerfiles#3,"@pgrandin yes. But I had the idea to add a fake git program in the path witch handles the ""."" directory by checking out to a temp directory and then move everything to the target directory once finished",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,669,2018-09-16T21:02:21Z,2018-10-22T16:47:33Z,2018-10-22T16:47:44Z,CLOSED,False,6,4,2,https://github.com/aerostitch,update:ci:deprecate setup_wince.sh script,2,[],https://github.com/navit-gps/navit/pull/669,https://github.com/aerostitch,6,https://github.com/navit-gps/navit/pull/669#issuecomment-431893466,Follow-up of navit-gps/Dockerfiles#3,I'll close this one until I get more time to work on the image upgrade for wince as it's quite dependent on it to work properly.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,672,2018-09-29T16:18:28Z,2018-10-13T20:11:50Z,2019-02-01T21:17:50Z,MERGED,True,8366,379,30,https://github.com/mvglasow,First merge for traffic branch,365,[],https://github.com/navit-gps/navit/pull/672,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/672,"I would like to do a first merge of the traffic branch I’ve been working on for the past months.
See here for what works and what doesn’t (yet): https://github.com/navit-gps/navit/projects/8
The traffic module will not do anything unless explicitly enabled by adding the respective line to navit.xml. It is currently not enabled in the default configuration but needs to be enabled manually if you want it, as it is still an experimental feature.
The first (and so far only) functional traffic plugin is the Android one. It receives traffic updates via system broadcasts from external apps; the first app that sends these broadcasts is the upcoming build of Qz.
On Linux, traffic messages can be injected via Dbus messages; this is mainly intended as a test interface, not a production-use one. You will still need to configure a traffic plugin for this to work; there is a null traffic plugin which provides all internal functionality but will never send any traffic messages of its own.
Without the traffic module enabled, the main change is that Navit now uses LPA* instead of Dijkstra for routing. This change was necessary in order to do dynamic re-routing as segment costs change. It also allows for a couple of future routing improvements, as we can now add segments to the route graph any time, even after calculating a route. This would allow us to do the following:

If the vehicle deviates from the route, we no longer have to do a full recalculation (which can take a long time for longer routes, and may leave drivers without instructions just when they need them most). Instead, we can simply add the local roads around the current position (which may not be in the route graph yet) and recalculate the parts affected by these segments.
Rather than first building a complete route graph and then flooding it, we could first add the surroundings of the destination, start calculating, figure out which area we need to add next, add it and continue calculating, and continue doing this until we have a route. This approach could solve our long-standing route depth issue (Navit ignoring roads lower than trunk on long routes) with fewer resources than the current workaround. Performance implications would need to be tested. Another upside is that this kind of routing is fairly easy to move to an idle loop, so the UI remains responsive while Navit is calculating that 1000-km route.

The new routing is the main reason I would like to do a first merge now. I have run my suite of 78 routing test cases (originally created for Project HighFive) against both the current and proposed implementation, and both produced the exact same results.
Work on the traffic branch will, of course, continue after the merge.
I’ve marked this as WIP to allow me to test this in real life while the change is under review; I will remove the marker when the branch appears stable under real-life conditions.","I would like to do a first merge of the traffic branch I’ve been working on for the past months.
See here for what works and what doesn’t (yet): https://github.com/navit-gps/navit/projects/8
The traffic module will not do anything unless explicitly enabled by adding the respective line to navit.xml. It is currently not enabled in the default configuration but needs to be enabled manually if you want it, as it is still an experimental feature.
The first (and so far only) functional traffic plugin is the Android one. It receives traffic updates via system broadcasts from external apps; the first app that sends these broadcasts is the upcoming build of Qz.
On Linux, traffic messages can be injected via Dbus messages; this is mainly intended as a test interface, not a production-use one. You will still need to configure a traffic plugin for this to work; there is a null traffic plugin which provides all internal functionality but will never send any traffic messages of its own.
Without the traffic module enabled, the main change is that Navit now uses LPA* instead of Dijkstra for routing. This change was necessary in order to do dynamic re-routing as segment costs change. It also allows for a couple of future routing improvements, as we can now add segments to the route graph any time, even after calculating a route. This would allow us to do the following:

If the vehicle deviates from the route, we no longer have to do a full recalculation (which can take a long time for longer routes, and may leave drivers without instructions just when they need them most). Instead, we can simply add the local roads around the current position (which may not be in the route graph yet) and recalculate the parts affected by these segments.
Rather than first building a complete route graph and then flooding it, we could first add the surroundings of the destination, start calculating, figure out which area we need to add next, add it and continue calculating, and continue doing this until we have a route. This approach could solve our long-standing route depth issue (Navit ignoring roads lower than trunk on long routes) with fewer resources than the current workaround. Performance implications would need to be tested. Another upside is that this kind of routing is fairly easy to move to an idle loop, so the UI remains responsive while Navit is calculating that 1000-km route.

The new routing is the main reason I would like to do a first merge now. I have run my suite of 78 routing test cases (originally created for Project HighFive) against both the current and proposed implementation, and both produced the exact same results.
Work on the traffic branch will, of course, continue after the merge.
I’ve marked this as WIP to allow me to test this in real life while the change is under review; I will remove the marker when the branch appears stable under real-life conditions.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,672,2018-09-29T16:18:28Z,2018-10-13T20:11:50Z,2019-02-01T21:17:50Z,MERGED,True,8366,379,30,https://github.com/mvglasow,First merge for traffic branch,365,[],https://github.com/navit-gps/navit/pull/672,https://github.com/mvglasow,2,https://github.com/navit-gps/navit/pull/672#issuecomment-425661523,"I would like to do a first merge of the traffic branch I’ve been working on for the past months.
See here for what works and what doesn’t (yet): https://github.com/navit-gps/navit/projects/8
The traffic module will not do anything unless explicitly enabled by adding the respective line to navit.xml. It is currently not enabled in the default configuration but needs to be enabled manually if you want it, as it is still an experimental feature.
The first (and so far only) functional traffic plugin is the Android one. It receives traffic updates via system broadcasts from external apps; the first app that sends these broadcasts is the upcoming build of Qz.
On Linux, traffic messages can be injected via Dbus messages; this is mainly intended as a test interface, not a production-use one. You will still need to configure a traffic plugin for this to work; there is a null traffic plugin which provides all internal functionality but will never send any traffic messages of its own.
Without the traffic module enabled, the main change is that Navit now uses LPA* instead of Dijkstra for routing. This change was necessary in order to do dynamic re-routing as segment costs change. It also allows for a couple of future routing improvements, as we can now add segments to the route graph any time, even after calculating a route. This would allow us to do the following:

If the vehicle deviates from the route, we no longer have to do a full recalculation (which can take a long time for longer routes, and may leave drivers without instructions just when they need them most). Instead, we can simply add the local roads around the current position (which may not be in the route graph yet) and recalculate the parts affected by these segments.
Rather than first building a complete route graph and then flooding it, we could first add the surroundings of the destination, start calculating, figure out which area we need to add next, add it and continue calculating, and continue doing this until we have a route. This approach could solve our long-standing route depth issue (Navit ignoring roads lower than trunk on long routes) with fewer resources than the current workaround. Performance implications would need to be tested. Another upside is that this kind of routing is fairly easy to move to an idle loop, so the UI remains responsive while Navit is calculating that 1000-km route.

The new routing is the main reason I would like to do a first merge now. I have run my suite of 78 routing test cases (originally created for Project HighFive) against both the current and proposed implementation, and both produced the exact same results.
Work on the traffic branch will, of course, continue after the merge.
I’ve marked this as WIP to allow me to test this in real life while the change is under review; I will remove the marker when the branch appears stable under real-life conditions.","As for CodeFactor, which of the issues reported do I need to fix in order for the check to pass? Just the ones with the yellow triangle, or the informational ones as well?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,672,2018-09-29T16:18:28Z,2018-10-13T20:11:50Z,2019-02-01T21:17:50Z,MERGED,True,8366,379,30,https://github.com/mvglasow,First merge for traffic branch,365,[],https://github.com/navit-gps/navit/pull/672,https://github.com/mvglasow,3,https://github.com/navit-gps/navit/pull/672#issuecomment-425754047,"I would like to do a first merge of the traffic branch I’ve been working on for the past months.
See here for what works and what doesn’t (yet): https://github.com/navit-gps/navit/projects/8
The traffic module will not do anything unless explicitly enabled by adding the respective line to navit.xml. It is currently not enabled in the default configuration but needs to be enabled manually if you want it, as it is still an experimental feature.
The first (and so far only) functional traffic plugin is the Android one. It receives traffic updates via system broadcasts from external apps; the first app that sends these broadcasts is the upcoming build of Qz.
On Linux, traffic messages can be injected via Dbus messages; this is mainly intended as a test interface, not a production-use one. You will still need to configure a traffic plugin for this to work; there is a null traffic plugin which provides all internal functionality but will never send any traffic messages of its own.
Without the traffic module enabled, the main change is that Navit now uses LPA* instead of Dijkstra for routing. This change was necessary in order to do dynamic re-routing as segment costs change. It also allows for a couple of future routing improvements, as we can now add segments to the route graph any time, even after calculating a route. This would allow us to do the following:

If the vehicle deviates from the route, we no longer have to do a full recalculation (which can take a long time for longer routes, and may leave drivers without instructions just when they need them most). Instead, we can simply add the local roads around the current position (which may not be in the route graph yet) and recalculate the parts affected by these segments.
Rather than first building a complete route graph and then flooding it, we could first add the surroundings of the destination, start calculating, figure out which area we need to add next, add it and continue calculating, and continue doing this until we have a route. This approach could solve our long-standing route depth issue (Navit ignoring roads lower than trunk on long routes) with fewer resources than the current workaround. Performance implications would need to be tested. Another upside is that this kind of routing is fairly easy to move to an idle loop, so the UI remains responsive while Navit is calculating that 1000-km route.

The new routing is the main reason I would like to do a first merge now. I have run my suite of 78 routing test cases (originally created for Project HighFive) against both the current and proposed implementation, and both produced the exact same results.
Work on the traffic branch will, of course, continue after the merge.
I’ve marked this as WIP to allow me to test this in real life while the change is under review; I will remove the marker when the branch appears stable under real-life conditions.","Did some real-world tests today, without anything out-of-the ordinary. To the user, LPA* does not look any different from Dijkstra. (I should note that, for the last three months, I have already been running a hybrid, with Dijkstra being used for initial routing and LPA* for partial recalculations after traffic situations changed—no issues with routing.)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,672,2018-09-29T16:18:28Z,2018-10-13T20:11:50Z,2019-02-01T21:17:50Z,MERGED,True,8366,379,30,https://github.com/mvglasow,First merge for traffic branch,365,[],https://github.com/navit-gps/navit/pull/672,https://github.com/mvglasow,4,https://github.com/navit-gps/navit/pull/672#issuecomment-426762409,"I would like to do a first merge of the traffic branch I’ve been working on for the past months.
See here for what works and what doesn’t (yet): https://github.com/navit-gps/navit/projects/8
The traffic module will not do anything unless explicitly enabled by adding the respective line to navit.xml. It is currently not enabled in the default configuration but needs to be enabled manually if you want it, as it is still an experimental feature.
The first (and so far only) functional traffic plugin is the Android one. It receives traffic updates via system broadcasts from external apps; the first app that sends these broadcasts is the upcoming build of Qz.
On Linux, traffic messages can be injected via Dbus messages; this is mainly intended as a test interface, not a production-use one. You will still need to configure a traffic plugin for this to work; there is a null traffic plugin which provides all internal functionality but will never send any traffic messages of its own.
Without the traffic module enabled, the main change is that Navit now uses LPA* instead of Dijkstra for routing. This change was necessary in order to do dynamic re-routing as segment costs change. It also allows for a couple of future routing improvements, as we can now add segments to the route graph any time, even after calculating a route. This would allow us to do the following:

If the vehicle deviates from the route, we no longer have to do a full recalculation (which can take a long time for longer routes, and may leave drivers without instructions just when they need them most). Instead, we can simply add the local roads around the current position (which may not be in the route graph yet) and recalculate the parts affected by these segments.
Rather than first building a complete route graph and then flooding it, we could first add the surroundings of the destination, start calculating, figure out which area we need to add next, add it and continue calculating, and continue doing this until we have a route. This approach could solve our long-standing route depth issue (Navit ignoring roads lower than trunk on long routes) with fewer resources than the current workaround. Performance implications would need to be tested. Another upside is that this kind of routing is fairly easy to move to an idle loop, so the UI remains responsive while Navit is calculating that 1000-km route.

The new routing is the main reason I would like to do a first merge now. I have run my suite of 78 routing test cases (originally created for Project HighFive) against both the current and proposed implementation, and both produced the exact same results.
Work on the traffic branch will, of course, continue after the merge.
I’ve marked this as WIP to allow me to test this in real life while the change is under review; I will remove the marker when the branch appears stable under real-life conditions.","I’ve used this branch for the past few days, and routing works as expected, no changes for the end user. I’ve removed the WIP from the title.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,672,2018-09-29T16:18:28Z,2018-10-13T20:11:50Z,2019-02-01T21:17:50Z,MERGED,True,8366,379,30,https://github.com/mvglasow,First merge for traffic branch,365,[],https://github.com/navit-gps/navit/pull/672,https://github.com/mvglasow,5,https://github.com/navit-gps/navit/pull/672#issuecomment-427964719,"I would like to do a first merge of the traffic branch I’ve been working on for the past months.
See here for what works and what doesn’t (yet): https://github.com/navit-gps/navit/projects/8
The traffic module will not do anything unless explicitly enabled by adding the respective line to navit.xml. It is currently not enabled in the default configuration but needs to be enabled manually if you want it, as it is still an experimental feature.
The first (and so far only) functional traffic plugin is the Android one. It receives traffic updates via system broadcasts from external apps; the first app that sends these broadcasts is the upcoming build of Qz.
On Linux, traffic messages can be injected via Dbus messages; this is mainly intended as a test interface, not a production-use one. You will still need to configure a traffic plugin for this to work; there is a null traffic plugin which provides all internal functionality but will never send any traffic messages of its own.
Without the traffic module enabled, the main change is that Navit now uses LPA* instead of Dijkstra for routing. This change was necessary in order to do dynamic re-routing as segment costs change. It also allows for a couple of future routing improvements, as we can now add segments to the route graph any time, even after calculating a route. This would allow us to do the following:

If the vehicle deviates from the route, we no longer have to do a full recalculation (which can take a long time for longer routes, and may leave drivers without instructions just when they need them most). Instead, we can simply add the local roads around the current position (which may not be in the route graph yet) and recalculate the parts affected by these segments.
Rather than first building a complete route graph and then flooding it, we could first add the surroundings of the destination, start calculating, figure out which area we need to add next, add it and continue calculating, and continue doing this until we have a route. This approach could solve our long-standing route depth issue (Navit ignoring roads lower than trunk on long routes) with fewer resources than the current workaround. Performance implications would need to be tested. Another upside is that this kind of routing is fairly easy to move to an idle loop, so the UI remains responsive while Navit is calculating that 1000-km route.

The new routing is the main reason I would like to do a first merge now. I have run my suite of 78 routing test cases (originally created for Project HighFive) against both the current and proposed implementation, and both produced the exact same results.
Work on the traffic branch will, of course, continue after the merge.
I’ve marked this as WIP to allow me to test this in real life while the change is under review; I will remove the marker when the branch appears stable under real-life conditions.","Done. I’ve also fixed navit.dtd, added support for lane closure and contraflow events, and fixed a bug regarding supplementary information classes.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,672,2018-09-29T16:18:28Z,2018-10-13T20:11:50Z,2019-02-01T21:17:50Z,MERGED,True,8366,379,30,https://github.com/mvglasow,First merge for traffic branch,365,[],https://github.com/navit-gps/navit/pull/672,https://github.com/mvglasow,6,https://github.com/navit-gps/navit/pull/672#issuecomment-427965326,"I would like to do a first merge of the traffic branch I’ve been working on for the past months.
See here for what works and what doesn’t (yet): https://github.com/navit-gps/navit/projects/8
The traffic module will not do anything unless explicitly enabled by adding the respective line to navit.xml. It is currently not enabled in the default configuration but needs to be enabled manually if you want it, as it is still an experimental feature.
The first (and so far only) functional traffic plugin is the Android one. It receives traffic updates via system broadcasts from external apps; the first app that sends these broadcasts is the upcoming build of Qz.
On Linux, traffic messages can be injected via Dbus messages; this is mainly intended as a test interface, not a production-use one. You will still need to configure a traffic plugin for this to work; there is a null traffic plugin which provides all internal functionality but will never send any traffic messages of its own.
Without the traffic module enabled, the main change is that Navit now uses LPA* instead of Dijkstra for routing. This change was necessary in order to do dynamic re-routing as segment costs change. It also allows for a couple of future routing improvements, as we can now add segments to the route graph any time, even after calculating a route. This would allow us to do the following:

If the vehicle deviates from the route, we no longer have to do a full recalculation (which can take a long time for longer routes, and may leave drivers without instructions just when they need them most). Instead, we can simply add the local roads around the current position (which may not be in the route graph yet) and recalculate the parts affected by these segments.
Rather than first building a complete route graph and then flooding it, we could first add the surroundings of the destination, start calculating, figure out which area we need to add next, add it and continue calculating, and continue doing this until we have a route. This approach could solve our long-standing route depth issue (Navit ignoring roads lower than trunk on long routes) with fewer resources than the current workaround. Performance implications would need to be tested. Another upside is that this kind of routing is fairly easy to move to an idle loop, so the UI remains responsive while Navit is calculating that 1000-km route.

The new routing is the main reason I would like to do a first merge now. I have run my suite of 78 routing test cases (originally created for Project HighFive) against both the current and proposed implementation, and both produced the exact same results.
Work on the traffic branch will, of course, continue after the merge.
I’ve marked this as WIP to allow me to test this in real life while the change is under review; I will remove the marker when the branch appears stable under real-life conditions.","I notice the Android build failed, due to some toolchain issue. In the meantime, I’ve successfully built this PR for Android, hence the code is not at fault.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,672,2018-09-29T16:18:28Z,2018-10-13T20:11:50Z,2019-02-01T21:17:50Z,MERGED,True,8366,379,30,https://github.com/mvglasow,First merge for traffic branch,365,[],https://github.com/navit-gps/navit/pull/672,https://github.com/mvglasow,7,https://github.com/navit-gps/navit/pull/672#issuecomment-427967369,"I would like to do a first merge of the traffic branch I’ve been working on for the past months.
See here for what works and what doesn’t (yet): https://github.com/navit-gps/navit/projects/8
The traffic module will not do anything unless explicitly enabled by adding the respective line to navit.xml. It is currently not enabled in the default configuration but needs to be enabled manually if you want it, as it is still an experimental feature.
The first (and so far only) functional traffic plugin is the Android one. It receives traffic updates via system broadcasts from external apps; the first app that sends these broadcasts is the upcoming build of Qz.
On Linux, traffic messages can be injected via Dbus messages; this is mainly intended as a test interface, not a production-use one. You will still need to configure a traffic plugin for this to work; there is a null traffic plugin which provides all internal functionality but will never send any traffic messages of its own.
Without the traffic module enabled, the main change is that Navit now uses LPA* instead of Dijkstra for routing. This change was necessary in order to do dynamic re-routing as segment costs change. It also allows for a couple of future routing improvements, as we can now add segments to the route graph any time, even after calculating a route. This would allow us to do the following:

If the vehicle deviates from the route, we no longer have to do a full recalculation (which can take a long time for longer routes, and may leave drivers without instructions just when they need them most). Instead, we can simply add the local roads around the current position (which may not be in the route graph yet) and recalculate the parts affected by these segments.
Rather than first building a complete route graph and then flooding it, we could first add the surroundings of the destination, start calculating, figure out which area we need to add next, add it and continue calculating, and continue doing this until we have a route. This approach could solve our long-standing route depth issue (Navit ignoring roads lower than trunk on long routes) with fewer resources than the current workaround. Performance implications would need to be tested. Another upside is that this kind of routing is fairly easy to move to an idle loop, so the UI remains responsive while Navit is calculating that 1000-km route.

The new routing is the main reason I would like to do a first merge now. I have run my suite of 78 routing test cases (originally created for Project HighFive) against both the current and proposed implementation, and both produced the exact same results.
Work on the traffic branch will, of course, continue after the merge.
I’ve marked this as WIP to allow me to test this in real life while the change is under review; I will remove the marker when the branch appears stable under real-life conditions.","Re-ran the build, Android seems OK now.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,672,2018-09-29T16:18:28Z,2018-10-13T20:11:50Z,2019-02-01T21:17:50Z,MERGED,True,8366,379,30,https://github.com/mvglasow,First merge for traffic branch,365,[],https://github.com/navit-gps/navit/pull/672,https://github.com/lains,8,https://github.com/navit-gps/navit/pull/672#issuecomment-459870572,"I would like to do a first merge of the traffic branch I’ve been working on for the past months.
See here for what works and what doesn’t (yet): https://github.com/navit-gps/navit/projects/8
The traffic module will not do anything unless explicitly enabled by adding the respective line to navit.xml. It is currently not enabled in the default configuration but needs to be enabled manually if you want it, as it is still an experimental feature.
The first (and so far only) functional traffic plugin is the Android one. It receives traffic updates via system broadcasts from external apps; the first app that sends these broadcasts is the upcoming build of Qz.
On Linux, traffic messages can be injected via Dbus messages; this is mainly intended as a test interface, not a production-use one. You will still need to configure a traffic plugin for this to work; there is a null traffic plugin which provides all internal functionality but will never send any traffic messages of its own.
Without the traffic module enabled, the main change is that Navit now uses LPA* instead of Dijkstra for routing. This change was necessary in order to do dynamic re-routing as segment costs change. It also allows for a couple of future routing improvements, as we can now add segments to the route graph any time, even after calculating a route. This would allow us to do the following:

If the vehicle deviates from the route, we no longer have to do a full recalculation (which can take a long time for longer routes, and may leave drivers without instructions just when they need them most). Instead, we can simply add the local roads around the current position (which may not be in the route graph yet) and recalculate the parts affected by these segments.
Rather than first building a complete route graph and then flooding it, we could first add the surroundings of the destination, start calculating, figure out which area we need to add next, add it and continue calculating, and continue doing this until we have a route. This approach could solve our long-standing route depth issue (Navit ignoring roads lower than trunk on long routes) with fewer resources than the current workaround. Performance implications would need to be tested. Another upside is that this kind of routing is fairly easy to move to an idle loop, so the UI remains responsive while Navit is calculating that 1000-km route.

The new routing is the main reason I would like to do a first merge now. I have run my suite of 78 routing test cases (originally created for Project HighFive) against both the current and proposed implementation, and both produced the exact same results.
Work on the traffic branch will, of course, continue after the merge.
I’ve marked this as WIP to allow me to test this in real life while the change is under review; I will remove the marker when the branch appears stable under real-life conditions.","@mvglasow, it is definitely a nice feature to get real time traffic taken into consideration for routing decisions.
I'm looking forward to using this feature.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,679,2018-10-03T22:13:31Z,2018-10-21T18:08:42Z,2018-11-17T17:06:51Z,MERGED,True,47,2,3,https://github.com/hoehnp,add:sailfish:added script to build a package for Sailfish OS,81,[],https://github.com/navit-gps/navit/pull/679,https://github.com/hoehnp,1,https://github.com/navit-gps/navit/pull/679,"Currently the building of packages for Sailfish OS is performed manually by @metalstrolch, which means that build errors for Sailfish OS cannot be seen directly. In order to mitigate this, I created a docker image and modified the circleci configuration accordingly. The results can be seen in PR
Still left to do would be an automatic upload. @metalstrolch  I would need your help on this.","Currently the building of packages for Sailfish OS is performed manually by @metalstrolch, which means that build errors for Sailfish OS cannot be seen directly. In order to mitigate this, I created a docker image and modified the circleci configuration accordingly. The results can be seen in PR
Still left to do would be an automatic upload. @metalstrolch  I would need your help on this.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,679,2018-10-03T22:13:31Z,2018-10-21T18:08:42Z,2018-11-17T17:06:51Z,MERGED,True,47,2,3,https://github.com/hoehnp,add:sailfish:added script to build a package for Sailfish OS,81,[],https://github.com/navit-gps/navit/pull/679,https://github.com/hoehnp,2,https://github.com/navit-gps/navit/pull/679#issuecomment-427077776,"Currently the building of packages for Sailfish OS is performed manually by @metalstrolch, which means that build errors for Sailfish OS cannot be seen directly. In order to mitigate this, I created a docker image and modified the circleci configuration accordingly. The results can be seen in PR
Still left to do would be an automatic upload. @metalstrolch  I would need your help on this.","@metalstrolch: Using --non-interactive is essential to run the build-script in an automated fashion. Therefore, for sure, I have to keep it.
I think I will move those few files to the circleci conf file
Any comment about automatic upload of nightly files?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,679,2018-10-03T22:13:31Z,2018-10-21T18:08:42Z,2018-11-17T17:06:51Z,MERGED,True,47,2,3,https://github.com/hoehnp,add:sailfish:added script to build a package for Sailfish OS,81,[],https://github.com/navit-gps/navit/pull/679,https://github.com/metalstrolch,3,https://github.com/navit-gps/navit/pull/679#issuecomment-427083000,"Currently the building of packages for Sailfish OS is performed manually by @metalstrolch, which means that build errors for Sailfish OS cannot be seen directly. In order to mitigate this, I created a docker image and modified the circleci configuration accordingly. The results can be seen in PR
Still left to do would be an automatic upload. @metalstrolch  I would need your help on this.","About how to store the nightlies is a good question. I would just put them beside the other artefacts. But I think when pushed to trunk it already will. I think release downloads are added manually here?
I would not push to openrepos automatic. I don't know if this ever is supported.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,680,2018-10-04T12:49:51Z,2018-10-12T21:38:30Z,2018-10-12T21:38:33Z,MERGED,True,43,14,6,https://github.com/hoehnp,Fix of win32 build,55,[],https://github.com/navit-gps/navit/pull/680,https://github.com/hoehnp,1,https://github.com/navit-gps/navit/pull/680,"This PR should fix the issue occurring in the win32 build when applying the changes from PR #652 by @bignaux. After first including the PR for development I removed it for the final PR. Therefore, I suppose that not all builds will work directly with this PR.","This PR should fix the issue occurring in the win32 build when applying the changes from PR #652 by @bignaux. After first including the PR for development I removed it for the final PR. Therefore, I suppose that not all builds will work directly with this PR.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,680,2018-10-04T12:49:51Z,2018-10-12T21:38:30Z,2018-10-12T21:38:33Z,MERGED,True,43,14,6,https://github.com/hoehnp,Fix of win32 build,55,[],https://github.com/navit-gps/navit/pull/680,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/680#issuecomment-429209285,"This PR should fix the issue occurring in the win32 build when applying the changes from PR #652 by @bignaux. After first including the PR for development I removed it for the final PR. Therefore, I suppose that not all builds will work directly with this PR.","Currently the build is failing with the following error in the CI:
Linking C executable navit.exe
support/gettext_intl/libsupport_gettext_intl.a(dcigettext.c.obj): In function `libintl_dcigettext':
/root/project/navit/support/gettext_intl/dcigettext.c:575: undefined reference to `_mempcpy'
support/gettext_intl/libsupport_gettext_intl.a(localealias.c.obj): In function `read_alias_file':
/root/project/navit/support/gettext_intl/localealias.c:230: undefined reference to `_mempcpy'",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,680,2018-10-04T12:49:51Z,2018-10-12T21:38:30Z,2018-10-12T21:38:33Z,MERGED,True,43,14,6,https://github.com/hoehnp,Fix of win32 build,55,[],https://github.com/navit-gps/navit/pull/680,https://github.com/hoehnp,3,https://github.com/navit-gps/navit/pull/680#issuecomment-429410389,"This PR should fix the issue occurring in the win32 build when applying the changes from PR #652 by @bignaux. After first including the PR for development I removed it for the final PR. Therefore, I suppose that not all builds will work directly with this PR.","As stated in the original pull-request, this is not surprising for me, as I removed the commit from #652. My goal was to make the adjustments to let #652 run without issues.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,680,2018-10-04T12:49:51Z,2018-10-12T21:38:30Z,2018-10-12T21:38:33Z,MERGED,True,43,14,6,https://github.com/hoehnp,Fix of win32 build,55,[],https://github.com/navit-gps/navit/pull/680,https://github.com/pgrandin,4,https://github.com/navit-gps/navit/pull/680#issuecomment-429424576,"This PR should fix the issue occurring in the win32 build when applying the changes from PR #652 by @bignaux. After first including the PR for development I removed it for the final PR. Therefore, I suppose that not all builds will work directly with this PR.",Yeah I remember that we discussed it. We need to fix it before being able to merge though.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,681,2018-10-04T19:37:52Z,2018-10-07T08:18:31Z,2018-10-07T08:18:31Z,MERGED,True,8,1,3,https://github.com/hoehnp,Replace espeak win32,6,[],https://github.com/navit-gps/navit/pull/681,https://github.com/hoehnp,1,https://github.com/navit-gps/navit/pull/681,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,682,2018-10-06T08:58:38Z,2019-01-30T14:25:05Z,2019-02-01T07:19:07Z,MERGED,True,376,81,6,https://github.com/lains,Fix:gui/internal:Handling resize/rotation,28,[],https://github.com/navit-gps/navit/pull/682,https://github.com/lains,1,https://github.com/navit-gps/navit/pull/682,"This change allows dynamically resizing windows using the internal GUI.
Initially, I guess this GUI was targeted for embedded touchscreen devices, but it is also used for Android (probably until the Qt5 GUI is available).
The issue with the internal GUI is that it does not really handle resizing when navigating inside menus and submenus, it merely moves back to the main menu each time there is a resize (and rotation on Android implies resize which is annoying).
Issue #433  has been open to track this.
This PR aims to solve this resize problem, allowing to continue wherever the user is (inside the menus/submenus) in the menu after a resize/rotation.","This change allows dynamically resizing windows using the internal GUI.
Initially, I guess this GUI was targeted for embedded touchscreen devices, but it is also used for Android (probably until the Qt5 GUI is available).
The issue with the internal GUI is that it does not really handle resizing when navigating inside menus and submenus, it merely moves back to the main menu each time there is a resize (and rotation on Android implies resize which is annoying).
Issue #433  has been open to track this.
This PR aims to solve this resize problem, allowing to continue wherever the user is (inside the menus/submenus) in the menu after a resize/rotation.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,682,2018-10-06T08:58:38Z,2019-01-30T14:25:05Z,2019-02-01T07:19:07Z,MERGED,True,376,81,6,https://github.com/lains,Fix:gui/internal:Handling resize/rotation,28,[],https://github.com/navit-gps/navit/pull/682,https://github.com/lains,2,https://github.com/navit-gps/navit/pull/682#issuecomment-429527909,"This change allows dynamically resizing windows using the internal GUI.
Initially, I guess this GUI was targeted for embedded touchscreen devices, but it is also used for Android (probably until the Qt5 GUI is available).
The issue with the internal GUI is that it does not really handle resizing when navigating inside menus and submenus, it merely moves back to the main menu each time there is a resize (and rotation on Android implies resize which is annoying).
Issue #433  has been open to track this.
This PR aims to solve this resize problem, allowing to continue wherever the user is (inside the menus/submenus) in the menu after a resize/rotation.","Resize/rotate is now working on HTML menus and on widget-constructed menus as well (these are handled differently).
It still needs work on virtual keyboard resizing (and this is maybe only due to the fact tables resizing is not implemented yet).",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,682,2018-10-06T08:58:38Z,2019-01-30T14:25:05Z,2019-02-01T07:19:07Z,MERGED,True,376,81,6,https://github.com/lains,Fix:gui/internal:Handling resize/rotation,28,[],https://github.com/navit-gps/navit/pull/682,https://github.com/hoehnp,3,https://github.com/navit-gps/navit/pull/682#issuecomment-429545262,"This change allows dynamically resizing windows using the internal GUI.
Initially, I guess this GUI was targeted for embedded touchscreen devices, but it is also used for Android (probably until the Qt5 GUI is available).
The issue with the internal GUI is that it does not really handle resizing when navigating inside menus and submenus, it merely moves back to the main menu each time there is a resize (and rotation on Android implies resize which is annoying).
Issue #433  has been open to track this.
This PR aims to solve this resize problem, allowing to continue wherever the user is (inside the menus/submenus) in the menu after a resize/rotation.",Will it also be possible to get a signal about the rotation for use in changes of the osd layouts?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,682,2018-10-06T08:58:38Z,2019-01-30T14:25:05Z,2019-02-01T07:19:07Z,MERGED,True,376,81,6,https://github.com/lains,Fix:gui/internal:Handling resize/rotation,28,[],https://github.com/navit-gps/navit/pull/682,https://github.com/lains,4,https://github.com/navit-gps/navit/pull/682#issuecomment-429622582,"This change allows dynamically resizing windows using the internal GUI.
Initially, I guess this GUI was targeted for embedded touchscreen devices, but it is also used for Android (probably until the Qt5 GUI is available).
The issue with the internal GUI is that it does not really handle resizing when navigating inside menus and submenus, it merely moves back to the main menu each time there is a resize (and rotation on Android implies resize which is annoying).
Issue #433  has been open to track this.
This PR aims to solve this resize problem, allowing to continue wherever the user is (inside the menus/submenus) in the menu after a resize/rotation.","@hoehnp: yes, we should be able to get a generic notification about resize (thus also handling rotation for fixed-size displays).
From the test I made, map view resize can also be catched by gui_internal_resize() but I think there should be a better place (not related to internal GUI code).
Do you have another example of a signal that is send to OSD items from other events?
How do you catch such signals in OSD items?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,682,2018-10-06T08:58:38Z,2019-01-30T14:25:05Z,2019-02-01T07:19:07Z,MERGED,True,376,81,6,https://github.com/lains,Fix:gui/internal:Handling resize/rotation,28,[],https://github.com/navit-gps/navit/pull/682,https://github.com/hoehnp,5,https://github.com/navit-gps/navit/pull/682#issuecomment-429626165,"This change allows dynamically resizing windows using the internal GUI.
Initially, I guess this GUI was targeted for embedded touchscreen devices, but it is also used for Android (probably until the Qt5 GUI is available).
The issue with the internal GUI is that it does not really handle resizing when navigating inside menus and submenus, it merely moves back to the main menu each time there is a resize (and rotation on Android implies resize which is annoying).
Issue #433  has been open to track this.
This PR aims to solve this resize problem, allowing to continue wherever the user is (inside the menus/submenus) in the menu after a resize/rotation.","I think gui_internal_resize is a bit ambiguous. So far to my knowledge it was not possible to catch it and use it for rescaling of osd elements. My idea would be to do it similarly like the click event, which calls a separate function, e.g. 
  
    
      navit/navit/osd/core/osd_core.c
    
    
         Line 943
      in
      c094186
    
  
  
    

        
          
           static void osd_odometer_click(struct osd_priv_common *opc, struct navit *nav, int pressed, int button, 
        
    
  

 . Then I guess we had to add an additional callback from osd side. Honestly, I never have gone so deeply in the details. Will figure out next week.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,682,2018-10-06T08:58:38Z,2019-01-30T14:25:05Z,2019-02-01T07:19:07Z,MERGED,True,376,81,6,https://github.com/lains,Fix:gui/internal:Handling resize/rotation,28,[],https://github.com/navit-gps/navit/pull/682,https://github.com/lains,6,https://github.com/navit-gps/navit/pull/682#issuecomment-431889255,"This change allows dynamically resizing windows using the internal GUI.
Initially, I guess this GUI was targeted for embedded touchscreen devices, but it is also used for Android (probably until the Qt5 GUI is available).
The issue with the internal GUI is that it does not really handle resizing when navigating inside menus and submenus, it merely moves back to the main menu each time there is a resize (and rotation on Android implies resize which is annoying).
Issue #433  has been open to track this.
This PR aims to solve this resize problem, allowing to continue wherever the user is (inside the menus/submenus) in the menu after a resize/rotation.","Yes, definitely, if there is a hook to implement, it should be outside of internal GUI, because the way the map is displayed (and thus OSD items on top of it), is really separate from the GUI implemented in my opinion.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,682,2018-10-06T08:58:38Z,2019-01-30T14:25:05Z,2019-02-01T07:19:07Z,MERGED,True,376,81,6,https://github.com/lains,Fix:gui/internal:Handling resize/rotation,28,[],https://github.com/navit-gps/navit/pull/682,https://github.com/lains,7,https://github.com/navit-gps/navit/pull/682#issuecomment-431889650,"This change allows dynamically resizing windows using the internal GUI.
Initially, I guess this GUI was targeted for embedded touchscreen devices, but it is also used for Android (probably until the Qt5 GUI is available).
The issue with the internal GUI is that it does not really handle resizing when navigating inside menus and submenus, it merely moves back to the main menu each time there is a resize (and rotation on Android implies resize which is annoying).
Issue #433  has been open to track this.
This PR aims to solve this resize problem, allowing to continue wherever the user is (inside the menus/submenus) in the menu after a resize/rotation.","I still have some work to do on handling table and box resize properly, this is impacting virtual keyboard that is currently not rescaled properly.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,682,2018-10-06T08:58:38Z,2019-01-30T14:25:05Z,2019-02-01T07:19:07Z,MERGED,True,376,81,6,https://github.com/lains,Fix:gui/internal:Handling resize/rotation,28,[],https://github.com/navit-gps/navit/pull/682,https://github.com/lains,8,https://github.com/navit-gps/navit/pull/682#issuecomment-433851508,"This change allows dynamically resizing windows using the internal GUI.
Initially, I guess this GUI was targeted for embedded touchscreen devices, but it is also used for Android (probably until the Qt5 GUI is available).
The issue with the internal GUI is that it does not really handle resizing when navigating inside menus and submenus, it merely moves back to the main menu each time there is a resize (and rotation on Android implies resize which is annoying).
Issue #433  has been open to track this.
This PR aims to solve this resize problem, allowing to continue wherever the user is (inside the menus/submenus) in the menu after a resize/rotation.","I'm almost there but the code around widget packing is quite complex.
However, I am getting small deltas between an initially small rendered window resized to fullscreen, and an originally fullscreen rendered one...
Is there any internal GUI expert that could help out?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,682,2018-10-06T08:58:38Z,2019-01-30T14:25:05Z,2019-02-01T07:19:07Z,MERGED,True,376,81,6,https://github.com/lains,Fix:gui/internal:Handling resize/rotation,28,[],https://github.com/navit-gps/navit/pull/682,https://github.com/pgrandin,9,https://github.com/navit-gps/navit/pull/682#issuecomment-435515289,"This change allows dynamically resizing windows using the internal GUI.
Initially, I guess this GUI was targeted for embedded touchscreen devices, but it is also used for Android (probably until the Qt5 GUI is available).
The issue with the internal GUI is that it does not really handle resizing when navigating inside menus and submenus, it merely moves back to the main menu each time there is a resize (and rotation on Android implies resize which is annoying).
Issue #433  has been open to track this.
This PR aims to solve this resize problem, allowing to continue wherever the user is (inside the menus/submenus) in the menu after a resize/rotation.","I'm not an expert, but if you share code/screenshots maybe we can figure it out.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,682,2018-10-06T08:58:38Z,2019-01-30T14:25:05Z,2019-02-01T07:19:07Z,MERGED,True,376,81,6,https://github.com/lains,Fix:gui/internal:Handling resize/rotation,28,[],https://github.com/navit-gps/navit/pull/682,https://github.com/lains,10,https://github.com/navit-gps/navit/pull/682#issuecomment-436032901,"This change allows dynamically resizing windows using the internal GUI.
Initially, I guess this GUI was targeted for embedded touchscreen devices, but it is also used for Android (probably until the Qt5 GUI is available).
The issue with the internal GUI is that it does not really handle resizing when navigating inside menus and submenus, it merely moves back to the main menu each time there is a resize (and rotation on Android implies resize which is annoying).
Issue #433  has been open to track this.
This PR aims to solve this resize problem, allowing to continue wherever the user is (inside the menus/submenus) in the menu after a resize/rotation.","I had to actually write some code to debug the internal GUI boxes (highlight them in red).
If this is of interest, I can share this very small patch to the code or add a preprocessor define to make this accessible to others.
Once I highlight boxes using a red border, and if I initially display the keyboard, then maximize the window, the last (bottom) line of the virtual keyboard was cut as per the screenshot below:

I wrote ""was"" because, in the meantime, I have made progress on this, and it now seems solved by my last commit 91e6a05 (now resizing while displaying the virtual keyboard seems to work).
However, I think handling resize properly would actually need to be developped on a per-GUI menu basis. And it seems to me that I could extend the issue with virtual keyboard to all cases where a box is not aligned to the top left (which was the case for the virtual keyboard that is aligned with the bottom of the window).
Fortunately, this may be caught properly by the resize handler I wrote (for box widgets), because this handler actually recursively repacks all children of a widget.
I have written no handler for tables though, so the result is uncertain.
... and to be honest, I have no good control about the side effects of the code I have added so testers are welcome...",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,682,2018-10-06T08:58:38Z,2019-01-30T14:25:05Z,2019-02-01T07:19:07Z,MERGED,True,376,81,6,https://github.com/lains,Fix:gui/internal:Handling resize/rotation,28,[],https://github.com/navit-gps/navit/pull/682,https://github.com/lains,11,https://github.com/navit-gps/navit/pull/682#issuecomment-436033091,"This change allows dynamically resizing windows using the internal GUI.
Initially, I guess this GUI was targeted for embedded touchscreen devices, but it is also used for Android (probably until the Qt5 GUI is available).
The issue with the internal GUI is that it does not really handle resizing when navigating inside menus and submenus, it merely moves back to the main menu each time there is a resize (and rotation on Android implies resize which is annoying).
Issue #433  has been open to track this.
This PR aims to solve this resize problem, allowing to continue wherever the user is (inside the menus/submenus) in the menu after a resize/rotation.","In any case, it seems that the code in this PR is actually working as expected and solves the issue initially targetted (resize/rotation).
I will give it a try on Android to check how well it performs...
Please let me know what you think about this fix.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,682,2018-10-06T08:58:38Z,2019-01-30T14:25:05Z,2019-02-01T07:19:07Z,MERGED,True,376,81,6,https://github.com/lains,Fix:gui/internal:Handling resize/rotation,28,[],https://github.com/navit-gps/navit/pull/682,https://github.com/hoehnp,12,https://github.com/navit-gps/navit/pull/682#issuecomment-436037266,"This change allows dynamically resizing windows using the internal GUI.
Initially, I guess this GUI was targeted for embedded touchscreen devices, but it is also used for Android (probably until the Qt5 GUI is available).
The issue with the internal GUI is that it does not really handle resizing when navigating inside menus and submenus, it merely moves back to the main menu each time there is a resize (and rotation on Android implies resize which is annoying).
Issue #433  has been open to track this.
This PR aims to solve this resize problem, allowing to continue wherever the user is (inside the menus/submenus) in the menu after a resize/rotation.",nice work. I think for OSD designers the code with the red lines is for sure a useful patch.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,682,2018-10-06T08:58:38Z,2019-01-30T14:25:05Z,2019-02-01T07:19:07Z,MERGED,True,376,81,6,https://github.com/lains,Fix:gui/internal:Handling resize/rotation,28,[],https://github.com/navit-gps/navit/pull/682,https://github.com/lains,13,https://github.com/navit-gps/navit/pull/682#issuecomment-437572972,"This change allows dynamically resizing windows using the internal GUI.
Initially, I guess this GUI was targeted for embedded touchscreen devices, but it is also used for Android (probably until the Qt5 GUI is available).
The issue with the internal GUI is that it does not really handle resizing when navigating inside menus and submenus, it merely moves back to the main menu each time there is a resize (and rotation on Android implies resize which is annoying).
Issue #433  has been open to track this.
This PR aims to solve this resize problem, allowing to continue wherever the user is (inside the menus/submenus) in the menu after a resize/rotation.","I'll submit the debugging patch (red lines) in a separate request but this is only active on menus (drawn by the internal GUI), not for OSD items on the map.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,682,2018-10-06T08:58:38Z,2019-01-30T14:25:05Z,2019-02-01T07:19:07Z,MERGED,True,376,81,6,https://github.com/lains,Fix:gui/internal:Handling resize/rotation,28,[],https://github.com/navit-gps/navit/pull/682,https://github.com/lains,14,https://github.com/navit-gps/navit/pull/682#issuecomment-437573319,"This change allows dynamically resizing windows using the internal GUI.
Initially, I guess this GUI was targeted for embedded touchscreen devices, but it is also used for Android (probably until the Qt5 GUI is available).
The issue with the internal GUI is that it does not really handle resizing when navigating inside menus and submenus, it merely moves back to the main menu each time there is a resize (and rotation on Android implies resize which is annoying).
Issue #433  has been open to track this.
This PR aims to solve this resize problem, allowing to continue wherever the user is (inside the menus/submenus) in the menu after a resize/rotation.","I have tested on Android, and it is actually fixing the rotation also (you don't return to the main menu, or loose anything that you might start typing).
There is one bug that I have identified: if you start in a menu with a given size or orientation, then enter a submenu, then change size or orientation, and finally go back to the previous menu, it is not drawn properly (it has not completely applied the orientation change itself).
I know where it comes from, I will submit a patch when I have some spare time.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,682,2018-10-06T08:58:38Z,2019-01-30T14:25:05Z,2019-02-01T07:19:07Z,MERGED,True,376,81,6,https://github.com/lains,Fix:gui/internal:Handling resize/rotation,28,[],https://github.com/navit-gps/navit/pull/682,https://github.com/lains,15,https://github.com/navit-gps/navit/pull/682#issuecomment-438390517,"This change allows dynamically resizing windows using the internal GUI.
Initially, I guess this GUI was targeted for embedded touchscreen devices, but it is also used for Android (probably until the Qt5 GUI is available).
The issue with the internal GUI is that it does not really handle resizing when navigating inside menus and submenus, it merely moves back to the main menu each time there is a resize (and rotation on Android implies resize which is annoying).
Issue #433  has been open to track this.
This PR aims to solve this resize problem, allowing to continue wherever the user is (inside the menus/submenus) in the menu after a resize/rotation.","I confirm menus display is broken when going back after rotating, so I still need to work on this.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,682,2018-10-06T08:58:38Z,2019-01-30T14:25:05Z,2019-02-01T07:19:07Z,MERGED,True,376,81,6,https://github.com/lains,Fix:gui/internal:Handling resize/rotation,28,[],https://github.com/navit-gps/navit/pull/682,https://github.com/pgrandin,16,https://github.com/navit-gps/navit/pull/682#issuecomment-439729418,"This change allows dynamically resizing windows using the internal GUI.
Initially, I guess this GUI was targeted for embedded touchscreen devices, but it is also used for Android (probably until the Qt5 GUI is available).
The issue with the internal GUI is that it does not really handle resizing when navigating inside menus and submenus, it merely moves back to the main menu each time there is a resize (and rotation on Android implies resize which is annoying).
Issue #433  has been open to track this.
This PR aims to solve this resize problem, allowing to continue wherever the user is (inside the menus/submenus) in the menu after a resize/rotation.",Nice work @lains ! This rotation issue was quite annoying. I also agree with @hoehnp the patch to highlight items would definitely be useful.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,682,2018-10-06T08:58:38Z,2019-01-30T14:25:05Z,2019-02-01T07:19:07Z,MERGED,True,376,81,6,https://github.com/lains,Fix:gui/internal:Handling resize/rotation,28,[],https://github.com/navit-gps/navit/pull/682,https://github.com/lains,17,https://github.com/navit-gps/navit/pull/682#issuecomment-440038247,"This change allows dynamically resizing windows using the internal GUI.
Initially, I guess this GUI was targeted for embedded touchscreen devices, but it is also used for Android (probably until the Qt5 GUI is available).
The issue with the internal GUI is that it does not really handle resizing when navigating inside menus and submenus, it merely moves back to the main menu each time there is a resize (and rotation on Android implies resize which is annoying).
Issue #433  has been open to track this.
This PR aims to solve this resize problem, allowing to continue wherever the user is (inside the menus/submenus) in the menu after a resize/rotation.","@hoehnp and @pgrandin, no problem, I will submit another PR to allow for visually debugging the internal GUI.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,682,2018-10-06T08:58:38Z,2019-01-30T14:25:05Z,2019-02-01T07:19:07Z,MERGED,True,376,81,6,https://github.com/lains,Fix:gui/internal:Handling resize/rotation,28,[],https://github.com/navit-gps/navit/pull/682,https://github.com/lains,18,https://github.com/navit-gps/navit/pull/682#issuecomment-440040254,"This change allows dynamically resizing windows using the internal GUI.
Initially, I guess this GUI was targeted for embedded touchscreen devices, but it is also used for Android (probably until the Qt5 GUI is available).
The issue with the internal GUI is that it does not really handle resizing when navigating inside menus and submenus, it merely moves back to the main menu each time there is a resize (and rotation on Android implies resize which is annoying).
Issue #433  has been open to track this.
This PR aims to solve this resize problem, allowing to continue wherever the user is (inside the menus/submenus) in the menu after a resize/rotation.","I still need to do some testing on table widget resizing and this PR should then be ready.
Now going back menus is working even after a rotation (has been fixed in 081fa13)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,682,2018-10-06T08:58:38Z,2019-01-30T14:25:05Z,2019-02-01T07:19:07Z,MERGED,True,376,81,6,https://github.com/lains,Fix:gui/internal:Handling resize/rotation,28,[],https://github.com/navit-gps/navit/pull/682,https://github.com/lains,19,https://github.com/navit-gps/navit/pull/682#issuecomment-441744424,"This change allows dynamically resizing windows using the internal GUI.
Initially, I guess this GUI was targeted for embedded touchscreen devices, but it is also used for Android (probably until the Qt5 GUI is available).
The issue with the internal GUI is that it does not really handle resizing when navigating inside menus and submenus, it merely moves back to the main menu each time there is a resize (and rotation on Android implies resize which is annoying).
Issue #433  has been open to track this.
This PR aims to solve this resize problem, allowing to continue wherever the user is (inside the menus/submenus) in the menu after a resize/rotation.","Development is finsihed for this PR. Please test and tell me if there are corner cases of menus in the internal GUI.
Virtual keyboard, top menu bar and standard HTML-like menus should resize/rotate without issues.
The risky parts are the content zone of other menus, for example layout lists, GPS coords input.
Testing can be done directly under Linux by using the internal GUI and resizing the window while on a menu.

I also agree with @hoehnp the patch to highlight items would definitely be useful.

I have submitted the visual debugging in PR #715",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,682,2018-10-06T08:58:38Z,2019-01-30T14:25:05Z,2019-02-01T07:19:07Z,MERGED,True,376,81,6,https://github.com/lains,Fix:gui/internal:Handling resize/rotation,28,[],https://github.com/navit-gps/navit/pull/682,https://github.com/lains,20,https://github.com/navit-gps/navit/pull/682#issuecomment-442443592,"This change allows dynamically resizing windows using the internal GUI.
Initially, I guess this GUI was targeted for embedded touchscreen devices, but it is also used for Android (probably until the Qt5 GUI is available).
The issue with the internal GUI is that it does not really handle resizing when navigating inside menus and submenus, it merely moves back to the main menu each time there is a resize (and rotation on Android implies resize which is annoying).
Issue #433  has been open to track this.
This PR aims to solve this resize problem, allowing to continue wherever the user is (inside the menus/submenus) in the menu after a resize/rotation.","This patch should handle the issue covered by trac ticket 1149:
http://trac.navit-project.org/ticket/1149",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,682,2018-10-06T08:58:38Z,2019-01-30T14:25:05Z,2019-02-01T07:19:07Z,MERGED,True,376,81,6,https://github.com/lains,Fix:gui/internal:Handling resize/rotation,28,[],https://github.com/navit-gps/navit/pull/682,https://github.com/metalstrolch,21,https://github.com/navit-gps/navit/pull/682#issuecomment-458932832,"This change allows dynamically resizing windows using the internal GUI.
Initially, I guess this GUI was targeted for embedded touchscreen devices, but it is also used for Android (probably until the Qt5 GUI is available).
The issue with the internal GUI is that it does not really handle resizing when navigating inside menus and submenus, it merely moves back to the main menu each time there is a resize (and rotation on Android implies resize which is annoying).
Issue #433  has been open to track this.
This PR aims to solve this resize problem, allowing to continue wherever the user is (inside the menus/submenus) in the menu after a resize/rotation.","Is this ready to be merged? Would be cool if so, because this fixes something really annoying.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,682,2018-10-06T08:58:38Z,2019-01-30T14:25:05Z,2019-02-01T07:19:07Z,MERGED,True,376,81,6,https://github.com/lains,Fix:gui/internal:Handling resize/rotation,28,[],https://github.com/navit-gps/navit/pull/682,https://github.com/lains,22,https://github.com/navit-gps/navit/pull/682#issuecomment-458933926,"This change allows dynamically resizing windows using the internal GUI.
Initially, I guess this GUI was targeted for embedded touchscreen devices, but it is also used for Android (probably until the Qt5 GUI is available).
The issue with the internal GUI is that it does not really handle resizing when navigating inside menus and submenus, it merely moves back to the main menu each time there is a resize (and rotation on Android implies resize which is annoying).
Issue #433  has been open to track this.
This PR aims to solve this resize problem, allowing to continue wherever the user is (inside the menus/submenus) in the menu after a resize/rotation.","@metalstrolch, tes, it should be ready, I have tested this on Android and Linux builds.
You can already build this code and test it either on the desktop version (resizing the window will show you the result), or by installing it on android which uses the internal GUI. You should get rotation and resize working even while typing some search text for countries, towns or streets.
Please let me know if this works correctly for you.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,682,2018-10-06T08:58:38Z,2019-01-30T14:25:05Z,2019-02-01T07:19:07Z,MERGED,True,376,81,6,https://github.com/lains,Fix:gui/internal:Handling resize/rotation,28,[],https://github.com/navit-gps/navit/pull/682,https://github.com/metalstrolch,23,https://github.com/navit-gps/navit/pull/682#issuecomment-458961431,"This change allows dynamically resizing windows using the internal GUI.
Initially, I guess this GUI was targeted for embedded touchscreen devices, but it is also used for Android (probably until the Qt5 GUI is available).
The issue with the internal GUI is that it does not really handle resizing when navigating inside menus and submenus, it merely moves back to the main menu each time there is a resize (and rotation on Android implies resize which is annoying).
Issue #433  has been open to track this.
This PR aims to solve this resize problem, allowing to continue wherever the user is (inside the menus/submenus) in the menu after a resize/rotation.","It's OK for me, tested this under sailfish/et5 on desktop as well. Unfortunately it triggers an old bug in graphics_qt5 that sometimes does not redraw the screen after rotation. But that's clearly NOT an issue of this task. So I think we can merge this.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,682,2018-10-06T08:58:38Z,2019-01-30T14:25:05Z,2019-02-01T07:19:07Z,MERGED,True,376,81,6,https://github.com/lains,Fix:gui/internal:Handling resize/rotation,28,[],https://github.com/navit-gps/navit/pull/682,https://github.com/metalstrolch,24,https://github.com/navit-gps/navit/pull/682#issuecomment-458962214,"This change allows dynamically resizing windows using the internal GUI.
Initially, I guess this GUI was targeted for embedded touchscreen devices, but it is also used for Android (probably until the Qt5 GUI is available).
The issue with the internal GUI is that it does not really handle resizing when navigating inside menus and submenus, it merely moves back to the main menu each time there is a resize (and rotation on Android implies resize which is annoying).
Issue #433  has been open to track this.
This PR aims to solve this resize problem, allowing to continue wherever the user is (inside the menus/submenus) in the menu after a resize/rotation.","Thank you, good work.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,682,2018-10-06T08:58:38Z,2019-01-30T14:25:05Z,2019-02-01T07:19:07Z,MERGED,True,376,81,6,https://github.com/lains,Fix:gui/internal:Handling resize/rotation,28,[],https://github.com/navit-gps/navit/pull/682,https://github.com/metalstrolch,25,https://github.com/navit-gps/navit/pull/682#issuecomment-458962769,"This change allows dynamically resizing windows using the internal GUI.
Initially, I guess this GUI was targeted for embedded touchscreen devices, but it is also used for Android (probably until the Qt5 GUI is available).
The issue with the internal GUI is that it does not really handle resizing when navigating inside menus and submenus, it merely moves back to the main menu each time there is a resize (and rotation on Android implies resize which is annoying).
Issue #433  has been open to track this.
This PR aims to solve this resize problem, allowing to continue wherever the user is (inside the menus/submenus) in the menu after a resize/rotation.","Unfortunately I cannot close the trac ticket, as I don't know how and don't have credentials.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,683,2018-10-08T07:42:55Z,2018-10-11T17:54:46Z,2018-10-11T17:54:50Z,MERGED,True,4,0,1,https://github.com/jkoan,Readd Navit Download Center for Android,1,[],https://github.com/navit-gps/navit/pull/683,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/683,After we merged the gradle build with #553 we havent updated the download center with new data from android builds. This should fix it once merged.,After we merged the gradle build with #553 we havent updated the download center with new data from android builds. This should fix it once merged.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,684,2018-10-11T22:54:52Z,2018-10-12T05:07:40Z,2019-03-24T20:56:41Z,MERGED,True,2,2,1,https://github.com/jkoan,fix:build:Pad metadata files so jekyll sort works corect,1,[],https://github.com/navit-gps/navit/pull/684,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/684,"Currently our download center does not have the last build because it's sorting is alphabetical instead of numerical. And this can't be fixed easily with jekyll itself, but a easy solution is to do a padding on the filenames before we upload them to git. This PR should fix this.","Currently our download center does not have the last build because it's sorting is alphabetical instead of numerical. And this can't be fixed easily with jekyll itself, but a easy solution is to do a padding on the filenames before we upload them to git. This PR should fix this.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,686,2018-10-13T16:37:14Z,2018-10-15T13:48:06Z,2020-08-18T11:56:13Z,MERGED,True,614,324,1,https://github.com/pgrandin,Update:i18n:Updated French (fr) translation from launchpad,2,['i18n'],https://github.com/navit-gps/navit/pull/686,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/686,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,687,2018-10-13T18:19:00Z,2018-10-14T13:10:14Z,2018-10-15T03:30:53Z,MERGED,True,2,2,1,https://github.com/hoehnp,fix: cmake url,6,[],https://github.com/navit-gps/navit/pull/687,https://github.com/hoehnp,1,https://github.com/navit-gps/navit/pull/687,downloading the base map failed with recent changes of the navit server. The PR changes the URL to a working one.,downloading the base map failed with recent changes of the navit server. The PR changes the URL to a working one.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,687,2018-10-13T18:19:00Z,2018-10-14T13:10:14Z,2018-10-15T03:30:53Z,MERGED,True,2,2,1,https://github.com/hoehnp,fix: cmake url,6,[],https://github.com/navit-gps/navit/pull/687,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/687#issuecomment-429576891,downloading the base map failed with recent changes of the navit server. The PR changes the URL to a working one.,"@hoehnp it looks like you based your PR from the wrong branch, making it difficult to read.
A better approach would be this:

create a new branch from trunk
apply your map download change (hint : you can fetch it as a patch here : https://github.com/navit-gps/navit/commit/410a4624bd777307916884385435d794062cf7b5.patch and apply it easily )
submit a PR.

Once that PR will be merged, we can import trunk into your WIP branches to fix the download there.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,687,2018-10-13T18:19:00Z,2018-10-14T13:10:14Z,2018-10-15T03:30:53Z,MERGED,True,2,2,1,https://github.com/hoehnp,fix: cmake url,6,[],https://github.com/navit-gps/navit/pull/687,https://github.com/hoehnp,3,https://github.com/navit-gps/navit/pull/687#issuecomment-429622242,downloading the base map failed with recent changes of the navit server. The PR changes the URL to a working one.,@pgrandin: is it better now?,True,{'THUMBS_UP': ['https://github.com/pgrandin']}
navit-gps/navit,https://github.com/navit-gps/navit,688,2018-10-15T03:38:22Z,2018-10-15T13:48:21Z,2020-08-18T11:56:13Z,MERGED,True,3,0,1,https://github.com/pgrandin,fix:i18n:remove extra whitespaces when importing translations,1,['i18n'],https://github.com/navit-gps/navit/pull/688,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/688,This ensures that we don't commit translation updates with extra spaces at the end of the line. It should avoid having the CI fail on the sanity checks.,This ensures that we don't commit translation updates with extra spaces at the end of the line. It should avoid having the CI fail on the sanity checks.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,688,2018-10-15T03:38:22Z,2018-10-15T13:48:21Z,2020-08-18T11:56:13Z,MERGED,True,3,0,1,https://github.com/pgrandin,fix:i18n:remove extra whitespaces when importing translations,1,['i18n'],https://github.com/navit-gps/navit/pull/688,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/688#issuecomment-429698942,This ensures that we don't commit translation updates with extra spaces at the end of the line. It should avoid having the CI fail on the sanity checks.,Tested via #686,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,689,2018-10-15T21:44:18Z,2018-10-15T22:00:22Z,2018-10-15T22:00:25Z,MERGED,True,31,15,1,https://github.com/pgrandin,Update:i18n:Updated Dutch translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/689,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/689,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,690,2018-10-15T21:46:15Z,2018-10-15T21:59:56Z,2018-10-15T21:59:59Z,MERGED,True,31,16,1,https://github.com/pgrandin,Update:i18n:Updated Čeština translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/690,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/690,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,691,2018-10-15T22:02:44Z,2018-10-15T23:44:20Z,2018-10-15T23:44:23Z,MERGED,True,593,356,1,https://github.com/pgrandin,Update:i18n:Updated Filipino translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/691,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/691,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,692,2018-10-15T23:45:22Z,2018-10-16T01:23:15Z,2018-10-16T01:23:32Z,MERGED,True,870,531,1,https://github.com/pgrandin,Update:i18n:Updated English (United Kingdom) translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/692,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/692,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,693,2018-10-15T23:46:04Z,2018-10-16T01:24:20Z,2018-10-16T01:24:25Z,MERGED,True,891,537,1,https://github.com/pgrandin,Update:i18n:Updated Brazilian Portuguese translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/693,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/693,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,694,2018-10-16T01:59:49Z,2018-10-16T03:01:16Z,2018-10-16T03:01:19Z,MERGED,True,586,346,1,https://github.com/pgrandin,Update:i18n:Updated Afrikaans translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/694,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/694,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,695,2018-10-16T01:59:52Z,2018-10-16T03:01:25Z,2018-10-16T03:01:28Z,MERGED,True,539,246,1,https://github.com/pgrandin,Update:i18n:Updated Arabic translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/695,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/695,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,696,2018-10-16T01:59:55Z,2018-10-16T03:01:34Z,2018-10-16T03:01:37Z,MERGED,True,586,346,1,https://github.com/pgrandin,Update:i18n:Updated Asturian translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/696,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/696,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,697,2018-10-16T02:00:51Z,2018-10-16T17:17:17Z,2018-10-16T17:47:49Z,MERGED,True,621,371,1,https://github.com/pgrandin,Update:i18n:Updated Bulgarian translation from launchpad,3,['i18n'],https://github.com/navit-gps/navit/pull/697,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/697,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,698,2018-10-16T02:00:57Z,2018-10-16T03:01:49Z,2018-10-16T03:01:52Z,MERGED,True,567,331,1,https://github.com/pgrandin,Update:i18n:Updated Belarusian translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/698,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/698,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,699,2018-10-16T03:07:54Z,2018-10-16T11:47:53Z,2019-04-18T21:12:01Z,MERGED,True,554,318,1,https://github.com/pgrandin,Update:i18n:Updated Bosnian translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/699,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/699,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,700,2018-10-16T03:09:01Z,2018-10-16T11:47:40Z,2019-04-18T21:12:02Z,MERGED,True,595,348,1,https://github.com/pgrandin,Update:i18n:Updated Catalan translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/700,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/700,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,702,2018-10-21T13:55:32Z,2018-10-23T17:58:08Z,2018-10-23T18:52:04Z,MERGED,True,5,0,2,https://github.com/bignaux,circleci:add ppa for cmake 3.x on win32 target,2,[],https://github.com/navit-gps/navit/pull/702,https://github.com/bignaux,1,https://github.com/navit-gps/navit/pull/702,"Since no people are interested to update image, this quickfix the cmake version on old 14.04 for win32 target.","Since no people are interested to update image, this quickfix the cmake version on old 14.04 for win32 target.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,704,2018-10-23T20:14:40Z,2018-10-25T19:24:40Z,2018-10-26T09:33:07Z,MERGED,True,42,30,8,https://github.com/bignaux,Fix:SDL:fix headers according to SDL convention.,1,[],https://github.com/navit-gps/navit/pull/704,https://github.com/bignaux,1,https://github.com/navit-gps/navit/pull/704,use https://cmake.org/cmake/help/v3.2/module/FindSDL.html?highlight=sdl,use https://cmake.org/cmake/help/v3.2/module/FindSDL.html?highlight=sdl,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,705,2018-10-24T18:25:12Z,2018-10-24T19:15:12Z,2019-03-24T20:56:16Z,MERGED,True,4,21,1,https://github.com/jkoan,Remove unnecessary if else constructs and nixpaste,1,[],https://github.com/navit-gps/navit/pull/705,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/705,"As discussed on IRC we should get rid of nixpaste and clean the build up.
I also set ""set -e"" to fail whatever is not working as expected.","As discussed on IRC we should get rid of nixpaste and clean the build up.
I also set ""set -e"" to fail whatever is not working as expected.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,706,2018-10-24T18:57:15Z,2018-10-24T19:14:50Z,2019-03-24T20:56:15Z,MERGED,True,2,1,1,https://github.com/jkoan,Android build fix,3,[],https://github.com/navit-gps/navit/pull/706,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/706,"This fixes the issue #703
Its because the remote servers changed there files, now its working again","This fixes the issue #703
Its because the remote servers changed there files, now its working again",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,707,2018-10-26T10:49:24Z,2018-10-29T22:36:04Z,2018-10-30T08:52:33Z,MERGED,True,1,1,1,https://github.com/bignaux,fix:cmake:fix sdl include directory,1,[],https://github.com/navit-gps/navit/pull/707,https://github.com/bignaux,1,https://github.com/navit-gps/navit/pull/707,this fix also https://github.com/NixOS/nixpkgs/blob/b8b71e26ed39449747785036aa0dad01edef2e67/pkgs/applications/misc/navit/default.nix#L38,this fix also https://github.com/NixOS/nixpkgs/blob/b8b71e26ed39449747785036aa0dad01edef2e67/pkgs/applications/misc/navit/default.nix#L38,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,708,2018-10-29T00:08:49Z,2018-10-29T21:32:10Z,2018-10-29T21:32:10Z,CLOSED,False,18,0,1,https://github.com/hoehnp,fix: adjustments for successful building for sailfish os using circleci machine executor,1,[],https://github.com/navit-gps/navit/pull/708,https://github.com/hoehnp,1,https://github.com/navit-gps/navit/pull/708,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,709,2018-10-29T21:33:05Z,2018-10-29T22:37:22Z,2018-10-29T22:54:35Z,MERGED,True,18,23,2,https://github.com/hoehnp,fix: working sailfish build on circleci using machine executor,2,[],https://github.com/navit-gps/navit/pull/709,https://github.com/hoehnp,1,https://github.com/navit-gps/navit/pull/709,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,709,2018-10-29T21:33:05Z,2018-10-29T22:37:22Z,2018-10-29T22:54:35Z,MERGED,True,18,23,2,https://github.com/hoehnp,fix: working sailfish build on circleci using machine executor,2,[],https://github.com/navit-gps/navit/pull/709,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/709#issuecomment-434106583,,Resulting builds : https://12891-30791823-gh.circle-artifacts.com/0/home/circleci/rpmbuild/RPMS/i586/harbour-navit-0.5.3-1.i586.rpm and https://12891-30791823-gh.circle-artifacts.com/0/home/circleci/rpmbuild/RPMS/armv7hl/harbour-navit-0.5.3-1.armv7hl.rpm,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,710,2018-11-01T21:29:41Z,2019-05-24T08:11:54Z,2019-05-24T09:48:53Z,MERGED,True,15,95,11,https://github.com/bignaux,Refactoring:cmake:simplify version management,1,[],https://github.com/navit-gps/navit/pull/710,https://github.com/bignaux,1,https://github.com/navit-gps/navit/pull/710,"Currently , cmake relies on git to provide version variable. This is a bug (and a bad practice) since git data are removed from tarball (and distribution prefers archives to git for lot of good reasons) . So official releases have all ugly version like on ubuntu :
# navit -v
navit 0.5.0+git:0000-

or nixos : 
 navit 0.5.3+git:xdevxgitxnotxfound-

So let packager setup  -DGIT_VERSION at cmake invocation (if needed so only for non official tagged releases). I made many improvement in the intention to fix that well, move from a global variable to a build time macro, but i need information about how you want to manage release.
I try to keep the things as they were. NAVIT_VARIANT seems unused, could we remove it ? GIT_VERSION=$(git rev-parse --short HEAD) in the build script is easy to add, how do you want to  ? Can we remove the ""+git:"" in the NAVIT_VERSION string ?
Proposal :

NAVIT_VERSION will have PACKAGE_VERSION+GIT_VERSION(if provided):NAVIT_VARIANT(if provided)
remove PACKAGE_NAME var.","Currently , cmake relies on git to provide version variable. This is a bug (and a bad practice) since git data are removed from tarball (and distribution prefers archives to git for lot of good reasons) . So official releases have all ugly version like on ubuntu :
# navit -v
navit 0.5.0+git:0000-

or nixos : 
 navit 0.5.3+git:xdevxgitxnotxfound-

So let packager setup  -DGIT_VERSION at cmake invocation (if needed so only for non official tagged releases). I made many improvement in the intention to fix that well, move from a global variable to a build time macro, but i need information about how you want to manage release.
I try to keep the things as they were. NAVIT_VARIANT seems unused, could we remove it ? GIT_VERSION=$(git rev-parse --short HEAD) in the build script is easy to add, how do you want to  ? Can we remove the ""+git:"" in the NAVIT_VERSION string ?
Proposal :

NAVIT_VERSION will have PACKAGE_VERSION+GIT_VERSION(if provided):NAVIT_VARIANT(if provided)
remove PACKAGE_NAME var.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,710,2018-11-01T21:29:41Z,2019-05-24T08:11:54Z,2019-05-24T09:48:53Z,MERGED,True,15,95,11,https://github.com/bignaux,Refactoring:cmake:simplify version management,1,[],https://github.com/navit-gps/navit/pull/710,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/710#issuecomment-439596535,"Currently , cmake relies on git to provide version variable. This is a bug (and a bad practice) since git data are removed from tarball (and distribution prefers archives to git for lot of good reasons) . So official releases have all ugly version like on ubuntu :
# navit -v
navit 0.5.0+git:0000-

or nixos : 
 navit 0.5.3+git:xdevxgitxnotxfound-

So let packager setup  -DGIT_VERSION at cmake invocation (if needed so only for non official tagged releases). I made many improvement in the intention to fix that well, move from a global variable to a build time macro, but i need information about how you want to manage release.
I try to keep the things as they were. NAVIT_VARIANT seems unused, could we remove it ? GIT_VERSION=$(git rev-parse --short HEAD) in the build script is easy to add, how do you want to  ? Can we remove the ""+git:"" in the NAVIT_VERSION string ?
Proposal :

NAVIT_VERSION will have PACKAGE_VERSION+GIT_VERSION(if provided):NAVIT_VARIANT(if provided)
remove PACKAGE_NAME var.","NAVIT_VARIANT seems unused, could we remove it ?

indeed.

Can we remove the ""+git:"" in the NAVIT_VERSION string ?

so use directly the sha here? I don't have an objection. what's bothering you with the git prefix?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,710,2018-11-01T21:29:41Z,2019-05-24T08:11:54Z,2019-05-24T09:48:53Z,MERGED,True,15,95,11,https://github.com/bignaux,Refactoring:cmake:simplify version management,1,[],https://github.com/navit-gps/navit/pull/710,https://github.com/metalstrolch,3,https://github.com/navit-gps/navit/pull/710#issuecomment-492614765,"Currently , cmake relies on git to provide version variable. This is a bug (and a bad practice) since git data are removed from tarball (and distribution prefers archives to git for lot of good reasons) . So official releases have all ugly version like on ubuntu :
# navit -v
navit 0.5.0+git:0000-

or nixos : 
 navit 0.5.3+git:xdevxgitxnotxfound-

So let packager setup  -DGIT_VERSION at cmake invocation (if needed so only for non official tagged releases). I made many improvement in the intention to fix that well, move from a global variable to a build time macro, but i need information about how you want to manage release.
I try to keep the things as they were. NAVIT_VARIANT seems unused, could we remove it ? GIT_VERSION=$(git rev-parse --short HEAD) in the build script is easy to add, how do you want to  ? Can we remove the ""+git:"" in the NAVIT_VERSION string ?
Proposal :

NAVIT_VERSION will have PACKAGE_VERSION+GIT_VERSION(if provided):NAVIT_VARIANT(if provided)
remove PACKAGE_NAME var.",The git prefix is misleading. Sailfish packages are for example versioned differently. So the version used for building in GIT_VERSION is actually not pointing to anything git. It's not even a sha1 hash most probably. Same for e.g. ubuntu I think. So it would be better to remove the hardcoded git: from the string.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,710,2018-11-01T21:29:41Z,2019-05-24T08:11:54Z,2019-05-24T09:48:53Z,MERGED,True,15,95,11,https://github.com/bignaux,Refactoring:cmake:simplify version management,1,[],https://github.com/navit-gps/navit/pull/710,https://github.com/jkoan,4,https://github.com/navit-gps/navit/pull/710#issuecomment-493389878,"Currently , cmake relies on git to provide version variable. This is a bug (and a bad practice) since git data are removed from tarball (and distribution prefers archives to git for lot of good reasons) . So official releases have all ugly version like on ubuntu :
# navit -v
navit 0.5.0+git:0000-

or nixos : 
 navit 0.5.3+git:xdevxgitxnotxfound-

So let packager setup  -DGIT_VERSION at cmake invocation (if needed so only for non official tagged releases). I made many improvement in the intention to fix that well, move from a global variable to a build time macro, but i need information about how you want to manage release.
I try to keep the things as they were. NAVIT_VARIANT seems unused, could we remove it ? GIT_VERSION=$(git rev-parse --short HEAD) in the build script is easy to add, how do you want to  ? Can we remove the ""+git:"" in the NAVIT_VERSION string ?
Proposal :

NAVIT_VERSION will have PACKAGE_VERSION+GIT_VERSION(if provided):NAVIT_VARIANT(if provided)
remove PACKAGE_NAME var.","I would Promote to remove all of the automatic version detection stuff and define the version in the version.h in the future. Of cause this can yield to human error, but if we document it in the Release Process: https://wiki.navit-project.org/index.php/Release_process
Future more i would change only the cmake scripts so that whe Sha sum is passed to the build it will be appended. But dont require this. If a sum is not specified it will be threaded as a dev build (like in IDE), If it is passed and CMAKE_BUILD_TYPE is not given or not Release its also a dev build. But when CMAKE_BUILD_TYPE==Release and sum is not given the build should fail since we don't want to release a build without a sum because this would make Problems in the future, especially debugging and searching for errors.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,710,2018-11-01T21:29:41Z,2019-05-24T08:11:54Z,2019-05-24T09:48:53Z,MERGED,True,15,95,11,https://github.com/bignaux,Refactoring:cmake:simplify version management,1,[],https://github.com/navit-gps/navit/pull/710,https://github.com/jkoan,5,https://github.com/navit-gps/navit/pull/710#issuecomment-495515935,"Currently , cmake relies on git to provide version variable. This is a bug (and a bad practice) since git data are removed from tarball (and distribution prefers archives to git for lot of good reasons) . So official releases have all ugly version like on ubuntu :
# navit -v
navit 0.5.0+git:0000-

or nixos : 
 navit 0.5.3+git:xdevxgitxnotxfound-

So let packager setup  -DGIT_VERSION at cmake invocation (if needed so only for non official tagged releases). I made many improvement in the intention to fix that well, move from a global variable to a build time macro, but i need information about how you want to manage release.
I try to keep the things as they were. NAVIT_VARIANT seems unused, could we remove it ? GIT_VERSION=$(git rev-parse --short HEAD) in the build script is easy to add, how do you want to  ? Can we remove the ""+git:"" in the NAVIT_VERSION string ?
Proposal :

NAVIT_VERSION will have PACKAGE_VERSION+GIT_VERSION(if provided):NAVIT_VARIANT(if provided)
remove PACKAGE_NAME var.","I will merge this now, but we need at least to add the hand over of the Git version to our CI",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,713,2018-11-12T21:18:23Z,2018-11-12T21:47:21Z,2018-11-12T21:47:31Z,MERGED,True,3,2,1,https://github.com/hoehnp,fix: replaced custom git clone command by standard checkout command,1,[],https://github.com/navit-gps/navit/pull/713,https://github.com/hoehnp,1,https://github.com/navit-gps/navit/pull/713,Previously the sailfish build was not using the standard checkout command which could not handle pull requests in a proper way. The PR fixes this.,Previously the sailfish build was not using the standard checkout command which could not handle pull requests in a proper way. The PR fixes this.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,715,2018-11-26T18:18:48Z,2019-02-19T09:10:42Z,2019-02-27T18:49:36Z,MERGED,True,82,8,3,https://github.com/lains,Add:Gui/Internal: Allowing visual debugging on boxes and tables,4,[],https://github.com/navit-gps/navit/pull/715,https://github.com/lains,1,https://github.com/navit-gps/navit/pull/715,"This patch enables to activate visual debugging on the internal GUI.
Example of debugging:

In order to activate debugging, the following line must be added in navit.xml:
<debug name=""gui_internal_visual_layout"" dbg_level=""debug""/>","This patch enables to activate visual debugging on the internal GUI.
Example of debugging:

In order to activate debugging, the following line must be added in navit.xml:
<debug name=""gui_internal_visual_layout"" dbg_level=""debug""/>",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,716,2018-11-28T14:38:33Z,2018-12-27T11:33:22Z,2019-01-08T20:16:45Z,MERGED,True,3,3,1,https://github.com/lains,circleci:Android: adding high resolution icons and improving rename steps,2,[],https://github.com/navit-gps/navit/pull/716,https://github.com/lains,1,https://github.com/navit-gps/navit/pull/716,"In Android build by circleci, icons for 192 and 256px are not built, which, altogether with #584 makes icons be displayed with the worst available resolution.
This PR adds high resolution icons during build.
It also fixes successive builds on circleci for android where a rename command applies to all files, including Makefiles, and makes subsequent builds fail.","In Android build by circleci, icons for 192 and 256px are not built, which, altogether with #584 makes icons be displayed with the worst available resolution.
This PR adds high resolution icons during build.
It also fixes successive builds on circleci for android where a rename command applies to all files, including Makefiles, and makes subsequent builds fail.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,716,2018-11-28T14:38:33Z,2018-12-27T11:33:22Z,2019-01-08T20:16:45Z,MERGED,True,3,3,1,https://github.com/lains,circleci:Android: adding high resolution icons and improving rename steps,2,[],https://github.com/navit-gps/navit/pull/716,https://github.com/lains,2,https://github.com/navit-gps/navit/pull/716#issuecomment-442714335,"In Android build by circleci, icons for 192 and 256px are not built, which, altogether with #584 makes icons be displayed with the worst available resolution.
This PR adds high resolution icons during build.
It also fixes successive builds on circleci for android where a rename command applies to all files, including Makefiles, and makes subsequent builds fail.","@jkoan, no problem.
I am not very used to editing gradle config so I am not sure I can help.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,720,2018-12-19T21:40:00Z,2018-12-19T22:01:49Z,2018-12-19T22:01:49Z,MERGED,True,21,8,3,https://github.com/mvglasow,Traffic: Improve handling of situations where no segments are found,4,[],https://github.com/navit-gps/navit/pull/720,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/720,"Fixes a crash in the traffic module if no matching segments are found for a traffic condition.
For three-point locations (from–via–to), if no segments are found for from–via, then via–to is used.","Fixes a crash in the traffic module if no matching segments are found for a traffic condition.
For three-point locations (from–via–to), if no segments are found for from–via, then via–to is used.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,720,2018-12-19T21:40:00Z,2018-12-19T22:01:49Z,2018-12-19T22:01:49Z,MERGED,True,21,8,3,https://github.com/mvglasow,Traffic: Improve handling of situations where no segments are found,4,[],https://github.com/navit-gps/navit/pull/720,https://github.com/mvglasow,2,https://github.com/navit-gps/navit/pull/720#issuecomment-448759456,"Fixes a crash in the traffic module if no matching segments are found for a traffic condition.
For three-point locations (from–via–to), if no segments are found for from–via, then via–to is used.","All errors were related to formatting of files not touched by this PR, merging anyway.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,724,2018-12-30T22:27:58Z,2019-09-18T12:31:34Z,2019-09-18T12:31:52Z,MERGED,True,1394,1007,7,https://github.com/lains,Update:Navit logo according to proposal in issue #436,12,[],https://github.com/navit-gps/navit/pull/724,https://github.com/lains,1,https://github.com/navit-gps/navit/pull/724,"Updating navit logo icon as proposed in issue #436.
Changing GTK GUI to use this logo on window.
Using this logo as the icon for the Action menu in the internal GUI:","Updating navit logo icon as proposed in issue #436.
Changing GTK GUI to use this logo on window.
Using this logo as the icon for the Action menu in the internal GUI:",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,724,2018-12-30T22:27:58Z,2019-09-18T12:31:34Z,2019-09-18T12:31:52Z,MERGED,True,1394,1007,7,https://github.com/lains,Update:Navit logo according to proposal in issue #436,12,[],https://github.com/navit-gps/navit/pull/724,https://github.com/mvglasow,2,https://github.com/navit-gps/navit/pull/724#issuecomment-450592626,"Updating navit logo icon as proposed in issue #436.
Changing GTK GUI to use this logo on window.
Using this logo as the icon for the Action menu in the internal GUI:","Looks good, except that I personally would leave the Actions icon as is. (In fact, the menu/UX is in need of a redesign as well, but that is way out of scope here.)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,724,2018-12-30T22:27:58Z,2019-09-18T12:31:34Z,2019-09-18T12:31:52Z,MERGED,True,1394,1007,7,https://github.com/lains,Update:Navit logo according to proposal in issue #436,12,[],https://github.com/navit-gps/navit/pull/724,https://github.com/zintor,3,https://github.com/navit-gps/navit/pull/724#issuecomment-450626140,"Updating navit logo icon as proposed in issue #436.
Changing GTK GUI to use this logo on window.
Using this logo as the icon for the Action menu in the internal GUI:","It looks also good to me. I am also with mvglasow, that it sould be a logo replacement and not a redesign of menu/UX.
As pointed, there are more ressources of changing the logo. There is a wiki page, which we could use to summarize where the logo should be exchanged. Please feel free to use the page. When we do not forget a location.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,724,2018-12-30T22:27:58Z,2019-09-18T12:31:34Z,2019-09-18T12:31:52Z,MERGED,True,1394,1007,7,https://github.com/lains,Update:Navit logo according to proposal in issue #436,12,[],https://github.com/navit-gps/navit/pull/724,https://github.com/lains,4,https://github.com/navit-gps/navit/pull/724#issuecomment-450757189,"Updating navit logo icon as proposed in issue #436.
Changing GTK GUI to use this logo on window.
Using this logo as the icon for the Action menu in the internal GUI:","I've excluded the update in the internal GUI from this PR.
I agree that a more global redesign of the Internal GUI wuld be required, various actions are using the same icon, and this created some confusion to me when I first used this software.
I also switched to a black logo for the GTK UI for better readability (orange over grey was not very good).",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,724,2018-12-30T22:27:58Z,2019-09-18T12:31:34Z,2019-09-18T12:31:52Z,MERGED,True,1394,1007,7,https://github.com/lains,Update:Navit logo according to proposal in issue #436,12,[],https://github.com/navit-gps/navit/pull/724,https://github.com/jkoan,5,https://github.com/navit-gps/navit/pull/724#issuecomment-465444831,"Updating navit logo icon as proposed in issue #436.
Changing GTK GUI to use this logo on window.
Using this logo as the icon for the Action menu in the internal GUI:","Looks good, except that I personally would leave the Actions icon as is. (In fact, the menu/UX is in need of a redesign as well, but that is way out of scope here.)

I totally agree with this.
But the GTK UI Icon in black looks good.
We need to put much more work into UX/UI anyway.
I like the Logo itself (both) but i think we need to redesign even more and meke the look and feel unique across the application.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,724,2018-12-30T22:27:58Z,2019-09-18T12:31:34Z,2019-09-18T12:31:52Z,MERGED,True,1394,1007,7,https://github.com/lains,Update:Navit logo according to proposal in issue #436,12,[],https://github.com/navit-gps/navit/pull/724,https://github.com/lains,6,https://github.com/navit-gps/navit/pull/724#issuecomment-466944821,"Updating navit logo icon as proposed in issue #436.
Changing GTK GUI to use this logo on window.
Using this logo as the icon for the Action menu in the internal GUI:","I have reverted the icon used for the Action button to the original one here, but, yes, I think the design of UI is a wider work.
Can't we first tackle the update of logo/application icon rework, before starting the whole UI rework? This would maybe help to split this huge work into smaller chunks.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,724,2018-12-30T22:27:58Z,2019-09-18T12:31:34Z,2019-09-18T12:31:52Z,MERGED,True,1394,1007,7,https://github.com/lains,Update:Navit logo according to proposal in issue #436,12,[],https://github.com/navit-gps/navit/pull/724,https://github.com/mvglasow,7,https://github.com/navit-gps/navit/pull/724#issuecomment-467087467,"Updating navit logo icon as proposed in issue #436.
Changing GTK GUI to use this logo on window.
Using this logo as the icon for the Action menu in the internal GUI:","Can't we first tackle the update of logo/application icon rework, before starting the whole UI rework? This would maybe help to split this huge work into smaller chunks.

Absolutely. Let’s stick with the application logo for this PR, and tackle other UX items separately. I have a few ideas of my own to contribute there. We might want to turn UX redesign into a project to allow us to keep an overview of everything going on, as it involves a bunch of things.",True,{'THUMBS_UP': ['https://github.com/jkoan']}
navit-gps/navit,https://github.com/navit-gps/navit,724,2018-12-30T22:27:58Z,2019-09-18T12:31:34Z,2019-09-18T12:31:52Z,MERGED,True,1394,1007,7,https://github.com/lains,Update:Navit logo according to proposal in issue #436,12,[],https://github.com/navit-gps/navit/pull/724,https://github.com/lains,8,https://github.com/navit-gps/navit/pull/724#issuecomment-502035585,"Updating navit logo icon as proposed in issue #436.
Changing GTK GUI to use this logo on window.
Using this logo as the icon for the Action menu in the internal GUI:","Hello all,
What shall we do with this PR?
Shall we just merge this new logo, initially designed by redmusic and reworked+implemented as svg by @zintor?
This PR not only adds the new color svg logo for Navit but also a derived black and white logo for application, and also adds code to make the GTK GUI Windows use that B&W logo as icon.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,724,2018-12-30T22:27:58Z,2019-09-18T12:31:34Z,2019-09-18T12:31:52Z,MERGED,True,1394,1007,7,https://github.com/lains,Update:Navit logo according to proposal in issue #436,12,[],https://github.com/navit-gps/navit/pull/724,https://github.com/lains,9,https://github.com/navit-gps/navit/pull/724#issuecomment-525788314,"Updating navit logo icon as proposed in issue #436.
Changing GTK GUI to use this logo on window.
Using this logo as the icon for the Action menu in the internal GUI:","Rebased code on trunk.
Also, I intergated to sources, the svg logo catalog that was last posted in #436 (comment)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,724,2018-12-30T22:27:58Z,2019-09-18T12:31:34Z,2019-09-18T12:31:52Z,MERGED,True,1394,1007,7,https://github.com/lains,Update:Navit logo according to proposal in issue #436,12,[],https://github.com/navit-gps/navit/pull/724,https://github.com/lains,10,https://github.com/navit-gps/navit/pull/724#issuecomment-531540287,"Updating navit logo icon as proposed in issue #436.
Changing GTK GUI to use this logo on window.
Using this logo as the icon for the Action menu in the internal GUI:","Anyone against merging this? If not, I will rebase and merge (probably around Wed 18th).",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,724,2018-12-30T22:27:58Z,2019-09-18T12:31:34Z,2019-09-18T12:31:52Z,MERGED,True,1394,1007,7,https://github.com/lains,Update:Navit logo according to proposal in issue #436,12,[],https://github.com/navit-gps/navit/pull/724,https://github.com/mvglasow,11,https://github.com/navit-gps/navit/pull/724#issuecomment-531882327,"Updating navit logo icon as proposed in issue #436.
Changing GTK GUI to use this logo on window.
Using this logo as the icon for the Action menu in the internal GUI:",Looks good to me.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,726,2019-01-07T22:48:09Z,2019-01-07T22:49:48Z,2019-01-07T22:49:48Z,MERGED,True,172,48,2,https://github.com/mvglasow,Traffic: Improve segment matching,14,[],https://github.com/navit-gps/navit/pull/726,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/726,"Improvements to the algorithm which matches traffic locations to their corresponding map segments. In particular, this improves match quality on mountain pass roads.","Improvements to the algorithm which matches traffic locations to their corresponding map segments. In particular, this improves match quality on mountain pass roads.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,727,2019-01-08T18:47:57Z,2019-01-08T19:19:43Z,2019-01-08T19:19:43Z,MERGED,True,108,59,5,https://github.com/mvglasow,Move Android build to separate script,7,[],https://github.com/navit-gps/navit/pull/727,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/727,"This PR moves the entire Android build process to a separate shell script. The script is used by CircleCI but can also run locally on Linux if all build dependencies are in place.
The script is designed to exit with an error if any of the build steps fails (a different error code for each step), close to present behavior.
Benefits:

An official build script for local builds (not sure how others did that, but I had to maintain my own local build script, which was tedious)
Changes to the build process can now be tested locally before committing
If the CircleCI build works, local builds likely will, too, and vice versa
Changes to the build process affect both local and CircleCI builds (which reduces the likelihood of
changes breaking your local build)

Some cleanup was necessary because the build process appeared to be broken:

Source files not passing the sanity check
Install the cmake component from the Android SDK (required to build; an alternative would be to install ninja-build locally)

Also, the sdkmanager step (installing Android SDK components) was moved up in the queue, before the build, as it is a one-time step for those doing local builds.","This PR moves the entire Android build process to a separate shell script. The script is used by CircleCI but can also run locally on Linux if all build dependencies are in place.
The script is designed to exit with an error if any of the build steps fails (a different error code for each step), close to present behavior.
Benefits:

An official build script for local builds (not sure how others did that, but I had to maintain my own local build script, which was tedious)
Changes to the build process can now be tested locally before committing
If the CircleCI build works, local builds likely will, too, and vice versa
Changes to the build process affect both local and CircleCI builds (which reduces the likelihood of
changes breaking your local build)

Some cleanup was necessary because the build process appeared to be broken:

Source files not passing the sanity check
Install the cmake component from the Android SDK (required to build; an alternative would be to install ninja-build locally)

Also, the sdkmanager step (installing Android SDK components) was moved up in the queue, before the build, as it is a one-time step for those doing local builds.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,728,2019-01-08T19:49:34Z,2019-01-08T19:49:55Z,2019-01-08T19:49:55Z,MERGED,True,7,0,1,https://github.com/mvglasow,Add:scripts:Make linux build script more verbose,1,[],https://github.com/navit-gps/navit/pull/728,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/728,Signed-off-by: mvglasow <michael -at- vonglasow.com>,Signed-off-by: mvglasow <michael -at- vonglasow.com>,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,729,2019-01-08T19:56:56Z,2019-03-05T15:27:00Z,2019-03-10T20:07:43Z,MERGED,True,336,199,9,https://github.com/lains,Refactor:GUI/GTK:Adding pointer and label when displaying POI on map,16,"['enhancement', 'gtk']",https://github.com/navit-gps/navit/pull/729,https://github.com/lains,1,https://github.com/navit-gps/navit/pull/729,"Update to the GTK GUI to display pointers for each result in GTK GUI's POI search window.
This PR is re-using code submitted in PR #631, but making it more generic.
Common code has thus been moved out of internal GUI to allow any GUI to display a list of items on a map (search results).","Update to the GTK GUI to display pointers for each result in GTK GUI's POI search window.
This PR is re-using code submitted in PR #631, but making it more generic.
Common code has thus been moved out of internal GUI to allow any GUI to display a list of items on a map (search results).",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,729,2019-01-08T19:56:56Z,2019-03-05T15:27:00Z,2019-03-10T20:07:43Z,MERGED,True,336,199,9,https://github.com/lains,Refactor:GUI/GTK:Adding pointer and label when displaying POI on map,16,"['enhancement', 'gtk']",https://github.com/navit-gps/navit/pull/729,https://github.com/lains,2,https://github.com/navit-gps/navit/pull/729#issuecomment-452801060,"Update to the GTK GUI to display pointers for each result in GTK GUI's POI search window.
This PR is re-using code submitted in PR #631, but making it more generic.
Common code has thus been moved out of internal GUI to allow any GUI to display a list of items on a map (search results).",Some style to fix and this PR should be ready.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,729,2019-01-08T19:56:56Z,2019-03-05T15:27:00Z,2019-03-10T20:07:43Z,MERGED,True,336,199,9,https://github.com/lains,Refactor:GUI/GTK:Adding pointer and label when displaying POI on map,16,"['enhancement', 'gtk']",https://github.com/navit-gps/navit/pull/729,https://github.com/lains,3,https://github.com/navit-gps/navit/pull/729#issuecomment-459797564,"Update to the GTK GUI to display pointers for each result in GTK GUI's POI search window.
This PR is re-using code submitted in PR #631, but making it more generic.
Common code has thus been moved out of internal GUI to allow any GUI to display a list of items on a map (search results).","Here is how it looks like when you select one POI and click on the ""Map"" button (similar to ""View on map"" for the Internal GUI, but in GTK for POI:",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,729,2019-01-08T19:56:56Z,2019-03-05T15:27:00Z,2019-03-10T20:07:43Z,MERGED,True,336,199,9,https://github.com/lains,Refactor:GUI/GTK:Adding pointer and label when displaying POI on map,16,"['enhancement', 'gtk']",https://github.com/navit-gps/navit/pull/729,https://github.com/lains,4,https://github.com/navit-gps/navit/pull/729#issuecomment-459809158,"Update to the GTK GUI to display pointers for each result in GTK GUI's POI search window.
This PR is re-using code submitted in PR #631, but making it more generic.
Common code has thus been moved out of internal GUI to allow any GUI to display a list of items on a map (search results).","This PR is ready for merge.
Can someone test this feature on the GTK GUI?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,729,2019-01-08T19:56:56Z,2019-03-05T15:27:00Z,2019-03-10T20:07:43Z,MERGED,True,336,199,9,https://github.com/lains,Refactor:GUI/GTK:Adding pointer and label when displaying POI on map,16,"['enhancement', 'gtk']",https://github.com/navit-gps/navit/pull/729,https://github.com/charlescurley,5,https://github.com/navit-gps/navit/pull/729#issuecomment-459815147,"Update to the GTK GUI to display pointers for each result in GTK GUI's POI search window.
This PR is re-using code submitted in PR #631, but making it more generic.
Common code has thus been moved out of internal GUI to allow any GUI to display a list of items on a map (search results).","On Fri, 01 Feb 2019 09:54:25 -0800 lains ***@***.***> wrote:
 This PR is ready for merge.
 Can someone test this feature on the GTK GUI?
Yes. What's the name of the branch to check out?
…
-- 
""When we talk of civilization, we are too apt to limit the meaning of
the word to its mere embellishments, such as arts and sciences; but
the true distinction between it and barbarism is, that the one
presents a state of society under the protection of just and
well-administered law, and the other is left to the chance government
of brute force.""
- The Rev. James White, Eighteen Christian Centuries, 1889
Key fingerprint = CE5C 6645 A45A 64E4 94C0  809C FFF6 4C48 4ECD DFDB
https://charlescurley.com",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,729,2019-01-08T19:56:56Z,2019-03-05T15:27:00Z,2019-03-10T20:07:43Z,MERGED,True,336,199,9,https://github.com/lains,Refactor:GUI/GTK:Adding pointer and label when displaying POI on map,16,"['enhancement', 'gtk']",https://github.com/navit-gps/navit/pull/729,https://github.com/lains,6,https://github.com/navit-gps/navit/pull/729#issuecomment-459864713,"Update to the GTK GUI to display pointers for each result in GTK GUI's POI search window.
This PR is re-using code submitted in PR #631, but making it more generic.
Common code has thus been moved out of internal GUI to allow any GUI to display a list of items on a map (search results).","The branch is view-on-map-for-gtk.
You can follow instructions at https://help.github.com/articles/checking-out-pull-requests-locally/ to get a local copy and build it:
git fetch origin pull/729/head:PR_729
git checkout PR_729",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,729,2019-01-08T19:56:56Z,2019-03-05T15:27:00Z,2019-03-10T20:07:43Z,MERGED,True,336,199,9,https://github.com/lains,Refactor:GUI/GTK:Adding pointer and label when displaying POI on map,16,"['enhancement', 'gtk']",https://github.com/navit-gps/navit/pull/729,https://github.com/charlescurley,7,https://github.com/navit-gps/navit/pull/729#issuecomment-459879597,"Update to the GTK GUI to display pointers for each result in GTK GUI's POI search window.
This PR is re-using code submitted in PR #631, but making it more generic.
Common code has thus been moved out of internal GUI to allow any GUI to display a list of items on a map (search results).","On Fri, 01 Feb 2019 12:55:48 -0800 lains ***@***.***> wrote:
 The branch is view-on-map-for-gtk.
 You can follow instructions at
 https://help.github.com/articles/checking-out-pull-requests-locally/
 to get a local copy and build it:

 ```
 git fetch origin pull/729/head:PR_729
 git checkout PR_729
 ```

Thank you for those instructions.

Very nice enhancement! Thank you.

One minor glitch: When I hit ""Map"", the PoI lights up nicely. If I then
select a different PoI, and hit ""Destination"", the one selected via
""Map"" stays lit up. You might have ""Destination"" and ""Visit Before""
check for a lit up PoI and remove it before going on. I suggest you
merge this PR as is, then fix that glitch.

Do we have access to the font characteristics in navit.xml?

Feature request: Do the same for ""Destination"" and ""Visit Before"" points
selected the same way, but leave them lit up until the user stops
navigation.
…
-- 
""When we talk of civilization, we are too apt to limit the meaning of
the word to its mere embellishments, such as arts and sciences; but
the true distinction between it and barbarism is, that the one
presents a state of society under the protection of just and
well-administered law, and the other is left to the chance government
of brute force.""
- The Rev. James White, Eighteen Christian Centuries, 1889
Key fingerprint = CE5C 6645 A45A 64E4 94C0  809C FFF6 4C48 4ECD DFDB
https://charlescurley.com",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,729,2019-01-08T19:56:56Z,2019-03-05T15:27:00Z,2019-03-10T20:07:43Z,MERGED,True,336,199,9,https://github.com/lains,Refactor:GUI/GTK:Adding pointer and label when displaying POI on map,16,"['enhancement', 'gtk']",https://github.com/navit-gps/navit/pull/729,https://github.com/lains,8,https://github.com/navit-gps/navit/pull/729#issuecomment-460038724,"Update to the GTK GUI to display pointers for each result in GTK GUI's POI search window.
This PR is re-using code submitted in PR #631, but making it more generic.
Common code has thus been moved out of internal GUI to allow any GUI to display a list of items on a map (search results).","One minor glitch: When I hit ""Map"", the PoI lights up nicely. If I then
select a different PoI, and hit ""Destination"", the one selected via
""Map"" stays lit up. You might have ""Destination"" and ""Visit Before""
check for a lit up PoI and remove it before going on. I suggest you
merge this PR as is, then fix that glitch.

Yes, I see what you mean, this can be fixed quite easily, so I think mergeing PR can wait for this fix to by inserted inside this PR. I'm tagging the PR as WIP in the meantime.

Do we have access to the font characteristics in navit.xml?

The style for the item display is takeng from type_found_item and is defined here
Maybe font characteristics can be customized there. I haven't tried.

Feature request: Do the same for ""Destination"" and ""Visit Before"" points
selected the same way, but leave them lit up until the user stops
navigation.

On my version, it seems that ""Destination"" is actually selected a very similar way (but there is a destination flag also dispayed there). Not sure about ""Visit Before"" but I saw some code showing a flag and the sequence number (1, 2, 3...) dispplayed for waypoints.
But I don't have any GPS on the GTK exec machine, so maybe once the GPS is active, this flag disappears.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,729,2019-01-08T19:56:56Z,2019-03-05T15:27:00Z,2019-03-10T20:07:43Z,MERGED,True,336,199,9,https://github.com/lains,Refactor:GUI/GTK:Adding pointer and label when displaying POI on map,16,"['enhancement', 'gtk']",https://github.com/navit-gps/navit/pull/729,https://github.com/lains,9,https://github.com/navit-gps/navit/pull/729#issuecomment-460358306,"Update to the GTK GUI to display pointers for each result in GTK GUI's POI search window.
This PR is re-using code submitted in PR #631, but making it more generic.
Common code has thus been moved out of internal GUI to allow any GUI to display a list of items on a map (search results).","@charlescurley, I have just added code so that a highlighted point is hidden again whenever a destination for  routing is selected.
Is this what you meant?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,729,2019-01-08T19:56:56Z,2019-03-05T15:27:00Z,2019-03-10T20:07:43Z,MERGED,True,336,199,9,https://github.com/lains,Refactor:GUI/GTK:Adding pointer and label when displaying POI on map,16,"['enhancement', 'gtk']",https://github.com/navit-gps/navit/pull/729,https://github.com/charlescurley,10,https://github.com/navit-gps/navit/pull/729#issuecomment-460471678,"Update to the GTK GUI to display pointers for each result in GTK GUI's POI search window.
This PR is re-using code submitted in PR #631, but making it more generic.
Common code has thus been moved out of internal GUI to allow any GUI to display a list of items on a map (search results).","On Mon, 04 Feb 2019 18:28:56 +0000 (UTC) lains ***@***.***> wrote:
 @charlescurley, I have just added code so that a highlighted point is
 hidden again whenever a destination for  routing is selected. Is this
 what you meant?
Yes.

Here's my thought on when to hide and how I think we currently handle
routing, in a tab delimited table:

Previous	This time	Response

Map	Map	Hide (no prior routing)

Map	Visit Before	Hide (start routing)

Map	Destination	Hide (start routing)

Visit Before	Map	Do Not Hide (continue routing)

Visit Before	Visit Before	Do Not Hide (continue routing)

Visit Before	Destination	Hide (cancel previous routing)

Destination	Map	Do Not Hide (continue routing)

Destination	Visit Before	Do Not Hide (continue routing)

Destination	Destination	Hide (cancel previous routing)

When the user hits map, show that point, but do not add it to the
route.

To stop routing entirely, the user should move focus to the main
window, and hit CTL S or Route -> Stop Navigation.

N.b: Currently you must hit ""Destination"" before you hit any ""visit
before"" points. If you hit a ""visit before"", and then a ""Destination"",
prior points are removed from the route.

Does that help, or is it too much information? :-)
…
-- 
""When we talk of civilization, we are too apt to limit the meaning of
the word to its mere embellishments, such as arts and sciences; but
the true distinction between it and barbarism is, that the one
presents a state of society under the protection of just and
well-administered law, and the other is left to the chance government
of brute force.""
- The Rev. James White, Eighteen Christian Centuries, 1889
Key fingerprint = CE5C 6645 A45A 64E4 94C0  809C FFF6 4C48 4ECD DFDB
https://charlescurley.com",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,729,2019-01-08T19:56:56Z,2019-03-05T15:27:00Z,2019-03-10T20:07:43Z,MERGED,True,336,199,9,https://github.com/lains,Refactor:GUI/GTK:Adding pointer and label when displaying POI on map,16,"['enhancement', 'gtk']",https://github.com/navit-gps/navit/pull/729,https://github.com/charlescurley,11,https://github.com/navit-gps/navit/pull/729#issuecomment-460473125,"Update to the GTK GUI to display pointers for each result in GTK GUI's POI search window.
This PR is re-using code submitted in PR #631, but making it more generic.
Common code has thus been moved out of internal GUI to allow any GUI to display a list of items on a map (search results).","On Sun, 03 Feb 2019 02:08:04 -0800 lains ***@***.***> wrote:
 > Do we have access to the font characteristics in navit.xml?

 The style for the item display is takeng from `type_found_item` and
 is defined
 [here](https://github.com/navit-gps/navit/blob/e70a28963ff9754d3257361fad93aebf59edee08/navit/navit_shipped.xml#L425)
 Maybe font characteristics can be customized there. I haven't tried.
Nice, thank you.

 > Feature request: Do the same for ""Destination"" and ""Visit Before""
 > points selected the same way, but leave them lit up until the user
 > stops navigation.

 On my version, it seems that ""Destination"" is actually selected a
 very similar way (but there is a destination flag also dispayed
 there). Not sure about ""Visit Before"" but I saw some code showing a
 flag and the sequence number (1, 2, 3...) dispplayed for waypoints.
 But I don't have any GPS on the GTK exec machine, so maybe once the
 GPS is active, this flag disappears.
The flags do not disappear when the GPS receiver is active. I have not
experimented with what happens when you arrive at (near) a ""Visit
Before"" point. I do know that when you arrive at (near) the
destination, routing stops and the route is removed from the display.

Does that help?
…
-- 
""When we talk of civilization, we are too apt to limit the meaning of
the word to its mere embellishments, such as arts and sciences; but
the true distinction between it and barbarism is, that the one
presents a state of society under the protection of just and
well-administered law, and the other is left to the chance government
of brute force.""
- The Rev. James White, Eighteen Christian Centuries, 1889
Key fingerprint = CE5C 6645 A45A 64E4 94C0  809C FFF6 4C48 4ECD DFDB
https://charlescurley.com",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,729,2019-01-08T19:56:56Z,2019-03-05T15:27:00Z,2019-03-10T20:07:43Z,MERGED,True,336,199,9,https://github.com/lains,Refactor:GUI/GTK:Adding pointer and label when displaying POI on map,16,"['enhancement', 'gtk']",https://github.com/navit-gps/navit/pull/729,https://github.com/lains,12,https://github.com/navit-gps/navit/pull/729#issuecomment-468746135,"Update to the GTK GUI to display pointers for each result in GTK GUI's POI search window.
This PR is re-using code submitted in PR #631, but making it more generic.
Common code has thus been moved out of internal GUI to allow any GUI to display a list of items on a map (search results).","In your previous comment, you described a specific user experience, based on the previous state and new state (depending on which button was pressed).
I think, this could also be applied to the internal GUI, not only GTK GUI, so that the UX is the same on both platforms.
Maybe this should be part of the broader rework of the UI and proposed as a specific solution for how should ""View on map""+""Set destination""+""Set waypoint"" be combined together.
However, I think this is much wider scope as what this PR initially intended to be: line up the GTK view on map with what already exists on the internal GUI, namely, visually display, on the map, the selected location together with its label.
Maybe this PR should thus limit its scope to implementing the view on map, and be merged as is. Then the UI and UX should be reworked as a more global redesign.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,729,2019-01-08T19:56:56Z,2019-03-05T15:27:00Z,2019-03-10T20:07:43Z,MERGED,True,336,199,9,https://github.com/lains,Refactor:GUI/GTK:Adding pointer and label when displaying POI on map,16,"['enhancement', 'gtk']",https://github.com/navit-gps/navit/pull/729,https://github.com/charlescurley,13,https://github.com/navit-gps/navit/pull/729#issuecomment-468765360,"Update to the GTK GUI to display pointers for each result in GTK GUI's POI search window.
This PR is re-using code submitted in PR #631, but making it more generic.
Common code has thus been moved out of internal GUI to allow any GUI to display a list of items on a map (search results).","On Fri, 01 Mar 2019 09:34:10 -0800 lains ***@***.***> wrote:
 Maybe this PR should thus limit its scope to implementing the view on
 map, and be merged as is. Then the UI and UX should be reworked as a
 more global redesign.
I concur.
…
-- 
""When we talk of civilization, we are too apt to limit the meaning of
the word to its mere embellishments, such as arts and sciences; but
the true distinction between it and barbarism is, that the one
presents a state of society under the protection of just and
well-administered law, and the other is left to the chance government
of brute force.""
- The Rev. James White, Eighteen Christian Centuries, 1889
Key fingerprint = CE5C 6645 A45A 64E4 94C0  809C FFF6 4C48 4ECD DFDB
https://charlescurley.com",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,729,2019-01-08T19:56:56Z,2019-03-05T15:27:00Z,2019-03-10T20:07:43Z,MERGED,True,336,199,9,https://github.com/lains,Refactor:GUI/GTK:Adding pointer and label when displaying POI on map,16,"['enhancement', 'gtk']",https://github.com/navit-gps/navit/pull/729,https://github.com/jkoan,14,https://github.com/navit-gps/navit/pull/729#issuecomment-469170787,"Update to the GTK GUI to display pointers for each result in GTK GUI's POI search window.
This PR is re-using code submitted in PR #631, but making it more generic.
Common code has thus been moved out of internal GUI to allow any GUI to display a list of items on a map (search results).",@charlescurley are you okay to merge?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,729,2019-01-08T19:56:56Z,2019-03-05T15:27:00Z,2019-03-10T20:07:43Z,MERGED,True,336,199,9,https://github.com/lains,Refactor:GUI/GTK:Adding pointer and label when displaying POI on map,16,"['enhancement', 'gtk']",https://github.com/navit-gps/navit/pull/729,https://github.com/charlescurley,15,https://github.com/navit-gps/navit/pull/729#issuecomment-469451885,"Update to the GTK GUI to display pointers for each result in GTK GUI's POI search window.
This PR is re-using code submitted in PR #631, but making it more generic.
Common code has thus been moved out of internal GUI to allow any GUI to display a list of items on a map (search results).","On Mon, 04 Mar 2019 08:59:00 +0000 (UTC) jkoan ***@***.***> wrote:
 @charlescurley are you okay to merge?
Yes, merge away.

Sorry I wasn't clear in my last response.
…
-- 
""When we talk of civilization, we are too apt to limit the meaning of
the word to its mere embellishments, such as arts and sciences; but
the true distinction between it and barbarism is, that the one
presents a state of society under the protection of just and
well-administered law, and the other is left to the chance government
of brute force.""
- The Rev. James White, Eighteen Christian Centuries, 1889
Key fingerprint = CE5C 6645 A45A 64E4 94C0  809C FFF6 4C48 4ECD DFDB
https://charlescurley.com",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,730,2019-01-11T19:01:28Z,2019-01-12T19:26:34Z,2019-01-12T19:26:34Z,MERGED,True,30,30,1,https://github.com/mvglasow,Fix:circleci:Temporarily disable Coverity as it is currently down,2,[],https://github.com/navit-gps/navit/pull/730,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/730,"As Coverity is currently unavailable (see https://community.synopsys.com/s/article/Coverity-Scan-Update), this PR disables the Coverity scan to allow CI to complete successfully.
Right now, automatic merges of trunk into master are impossible if the Coverity scan (i.e. generating the scan and uploading the results) fails, as this will result in CI failing. Conversely, as I understand it, scan results do not affect the outcome of CI. That is:

If the scan cannot be executed or uploaded, CI fails and no merges into master take place. (Which is the case if Coverity is down.)
If the scan runs successfully and the upload goes through, but several bugs are found in the code, that doesn’t prevent CI from reporting success and merging the results.

On the long run, we should IMHO choose one of the two:

Ensure CI fails if the scan finds anything suspicious, or
Try scanning and uploading the results, possibly generating a warning if that fails, but still report success for CI.

If we go for the first, we might want some kind of override, i.e. being able to manually tell CI to ignore what we deem a false positive.
For the time being, this PR disables Coverity altogether, to allow CI to complete until Coverity is back online.","As Coverity is currently unavailable (see https://community.synopsys.com/s/article/Coverity-Scan-Update), this PR disables the Coverity scan to allow CI to complete successfully.
Right now, automatic merges of trunk into master are impossible if the Coverity scan (i.e. generating the scan and uploading the results) fails, as this will result in CI failing. Conversely, as I understand it, scan results do not affect the outcome of CI. That is:

If the scan cannot be executed or uploaded, CI fails and no merges into master take place. (Which is the case if Coverity is down.)
If the scan runs successfully and the upload goes through, but several bugs are found in the code, that doesn’t prevent CI from reporting success and merging the results.

On the long run, we should IMHO choose one of the two:

Ensure CI fails if the scan finds anything suspicious, or
Try scanning and uploading the results, possibly generating a warning if that fails, but still report success for CI.

If we go for the first, we might want some kind of override, i.e. being able to manually tell CI to ignore what we deem a false positive.
For the time being, this PR disables Coverity altogether, to allow CI to complete until Coverity is back online.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,730,2019-01-11T19:01:28Z,2019-01-12T19:26:34Z,2019-01-12T19:26:34Z,MERGED,True,30,30,1,https://github.com/mvglasow,Fix:circleci:Temporarily disable Coverity as it is currently down,2,[],https://github.com/navit-gps/navit/pull/730,https://github.com/mvglasow,2,https://github.com/navit-gps/navit/pull/730#issuecomment-453628764,"As Coverity is currently unavailable (see https://community.synopsys.com/s/article/Coverity-Scan-Update), this PR disables the Coverity scan to allow CI to complete successfully.
Right now, automatic merges of trunk into master are impossible if the Coverity scan (i.e. generating the scan and uploading the results) fails, as this will result in CI failing. Conversely, as I understand it, scan results do not affect the outcome of CI. That is:

If the scan cannot be executed or uploaded, CI fails and no merges into master take place. (Which is the case if Coverity is down.)
If the scan runs successfully and the upload goes through, but several bugs are found in the code, that doesn’t prevent CI from reporting success and merging the results.

On the long run, we should IMHO choose one of the two:

Ensure CI fails if the scan finds anything suspicious, or
Try scanning and uploading the results, possibly generating a warning if that fails, but still report success for CI.

If we go for the first, we might want some kind of override, i.e. being able to manually tell CI to ignore what we deem a false positive.
For the time being, this PR disables Coverity altogether, to allow CI to complete until Coverity is back online.",PS: refer to today’s IRC logs for the discussion with jkoan.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,731,2019-01-12T21:33:59Z,2019-01-12T22:47:02Z,2019-01-12T22:47:02Z,MERGED,True,5,8,1,https://github.com/mvglasow, Add:traffic:Use compare_name_systematic for all road refs ,3,[],https://github.com/navit-gps/navit/pull/731,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/731,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,734,2019-01-24T20:56:59Z,2019-01-24T21:17:46Z,2019-01-25T05:02:38Z,CLOSED,False,4,0,1,https://github.com/worldcitizen,Fix:Core:Fixed Added fix for gpsd >= 1.7,1,[],https://github.com/navit-gps/navit/pull/734,https://github.com/worldcitizen,1,https://github.com/navit-gps/navit/pull/734,"Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://wiki.navit-project.org/index.php/Commit_guidelines
and that your code is compliant with out coding style guidelines:
https://wiki.navit-project.org/index.php/Programming_guidelines","Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://wiki.navit-project.org/index.php/Commit_guidelines
and that your code is compliant with out coding style guidelines:
https://wiki.navit-project.org/index.php/Programming_guidelines",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,734,2019-01-24T20:56:59Z,2019-01-24T21:17:46Z,2019-01-25T05:02:38Z,CLOSED,False,4,0,1,https://github.com/worldcitizen,Fix:Core:Fixed Added fix for gpsd >= 1.7,1,[],https://github.com/navit-gps/navit/pull/734,https://github.com/charlescurley,2,https://github.com/navit-gps/navit/pull/734#issuecomment-457392097,"Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://wiki.navit-project.org/index.php/Commit_guidelines
and that your code is compliant with out coding style guidelines:
https://wiki.navit-project.org/index.php/Programming_guidelines","I confirm your fix for gpsd 1.8 & higher. That's the same code I had, and it compiles & works on Debian 9.7. Thanks.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,734,2019-01-24T20:56:59Z,2019-01-24T21:17:46Z,2019-01-25T05:02:38Z,CLOSED,False,4,0,1,https://github.com/worldcitizen,Fix:Core:Fixed Added fix for gpsd >= 1.7,1,[],https://github.com/navit-gps/navit/pull/734,https://github.com/jkoan,3,https://github.com/navit-gps/navit/pull/734#issuecomment-457456628,"Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://wiki.navit-project.org/index.php/Commit_guidelines
and that your code is compliant with out coding style guidelines:
https://wiki.navit-project.org/index.php/Programming_guidelines",It's now on #735,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,735,2019-01-24T21:08:27Z,2019-02-19T09:06:09Z,2019-02-19T09:06:09Z,CLOSED,False,4,0,1,https://github.com/worldcitizen,Fix:Core:Fixed Added fix for gpsd >= 1.7,1,[],https://github.com/navit-gps/navit/pull/735,https://github.com/worldcitizen,1,https://github.com/navit-gps/navit/pull/735,"Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://wiki.navit-project.org/index.php/Commit_guidelines
and that your code is compliant with out coding style guidelines:
https://wiki.navit-project.org/index.php/Programming_guidelines","Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://wiki.navit-project.org/index.php/Commit_guidelines
and that your code is compliant with out coding style guidelines:
https://wiki.navit-project.org/index.php/Programming_guidelines",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,735,2019-01-24T21:08:27Z,2019-02-19T09:06:09Z,2019-02-19T09:06:09Z,CLOSED,False,4,0,1,https://github.com/worldcitizen,Fix:Core:Fixed Added fix for gpsd >= 1.7,1,[],https://github.com/navit-gps/navit/pull/735,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/735#issuecomment-465047585,"Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://wiki.navit-project.org/index.php/Commit_guidelines
and that your code is compliant with out coding style guidelines:
https://wiki.navit-project.org/index.php/Programming_guidelines",Included in #749,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/737,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):","Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/hoehnp,2,https://github.com/navit-gps/navit/pull/737#issuecomment-457586452,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):",@mvglasow: thanks for the work. It is a very nice design. Does the design also work well in landscape mode? I would also suggest one more improvement which i worked on in the past but didn't complete yet. I worked on implementing opening an auxmap with a map layout  excluding POIs to give a better guidance in crowded city areas. In particular this covers a large number of parking POIs.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/mvglasow,3,https://github.com/navit-gps/navit/pull/737#issuecomment-457590623,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):","@hoehnp that’s why I designed it for a 240×240 screen—I assumed the minimum available to be a QVGA screen (320×240) and ensured nothing takes up more than 240 pixels in either direction. (On platforms that support higher densities, these sizes go for LDPI, thus the screen needs to be 320 dp×320 dp.) All controls are aligned to the closest screen corner; the bands along the top and bottom take up the entire screen width. So yes, the layout should work for portrait and landscape mode alike.
As for your auxmap solution, do you have any screenshots to share? Might be a separate pull request, though.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/mvglasow,4,https://github.com/navit-gps/navit/pull/737#issuecomment-457592716,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):",…and here’s a screenshot in landscape mode:,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/hoehnp,5,https://github.com/navit-gps/navit/pull/737#issuecomment-457603291,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):",@mvglasow: I don't have a screenshot of the complete solution yet. Otherwise I had already integrated it ;-) but I can show you a bad picture of what i have in mind:,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/hoehnp,6,https://github.com/navit-gps/navit/pull/737#issuecomment-457605864,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):",The code part I am missing is to give auxmap the option to use a different layout compared to the main screen.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/mvglasow,7,https://github.com/navit-gps/navit/pull/737#issuecomment-457670847,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):","@metalstrolch @aerostitch @jandegr I see you have created platform-specific OSD configurations for Tomtom and Sailfish respectively, would you be open to switching to a common default layout?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/metalstrolch,8,https://github.com/navit-gps/navit/pull/737#issuecomment-457965173,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):","Simply copied over openmoko.xslt to sailfsh_osd.xslt to enable the new OSD layout, but fails badly on x86_64 configured the same way as sailfish is. Configure using the following cmake line:
cmake -DCMAKE_INSTALL_PREFIX:PATH=/tmp/navit -DPACKAGE:STRING=harbour-navit -DNAVIT_BINARY:STRING=harbour-navit -DSHARE_DIR:PATH=share/harbour-navit -DLOCALE_DIR:PATH=share/harbour-navit/locale -DIMAGE_DIR:PATH=share/harbour-navit/icons -DLIB_DIR:PATH=share/harbour-navit/lib -DBUILD_MAPTOOL:BOOL=FALSE -Dfont/freetype:BOOL=FALSE -Dbinding/dbus:BOOL=FALSE -Dbinding/python:BOOL=FALSE -Dgraphics/gtk_drawing_area:BOOL=FALSE -Dgraphics/null:BOOL=FALSE -Dgraphics/opengl:BOOL=FALSE -Dgraphics/sdl:BOOL=FALSE -Dspeech/dbus:BOOL=FALSE -Dvehicle/gpsd:BOOL=FALSE -Dvehicle/gpsd_dbus:BOOL=FALSE -DUSE_PLUGINS=n -DUSE_QWIDGET:BOOL=FALSE -DXSLTS:STRING=""sailfish_disable;sailfish_qt5;sailfish_osd;sailfish_cursor;sailfish_mapset;sailfish_svg;sailfish_gui"" ../navit/
Fails badly not finding some callbacks and segfaulting. What's the cause? Any ideas?
error:navit:command_register_callbacks:could not resolve object in cs=0x55e87e857700: error:navit:command_register_callbacks:	navigation.nav_status>=3 error:navit:command_register_callbacks:	           ^ error:navit:command_register_callbacks:could not resolve object in cs=0x55e87e857ff0: error:navit:command_register_callbacks:	vehicle.position_valid error:navit:command_register_callbacks:	^ error:navit:command_register_callbacks:could not resolve object in cs=0x55e87e8587b0: error:navit:command_register_callbacks:	navigation.nav_status>=3 error:navit:command_register_callbacks:	           ^ error:navit:command_register_callbacks:could not resolve object in cs=0x55e87e8590f0: error:navit:command_register_callbacks:	navigation.nav_status==-1 || navigation.nav_status==1 || navigation.nav_status==2 error:navit:command_register_callbacks:	           ^ error:navit:command_register_callbacks:could not resolve object in cs=0x55e87e859910: error:navit:command_register_callbacks:	navigation.nav_status>=3 error:navit:command_register_callbacks:	           ^ error:navit:command_register_callbacks:could not resolve object in cs=0x55e87e85a130: error:navit:command_register_callbacks:	navigation.nav_status>=3 error:navit:command_register_callbacks:	           ^ error:navit:command_register_callbacks:could not resolve object in cs=0x55e87e85cd80: error:navit:command_register_callbacks:	navigation.nav_status>=3 error:navit:command_register_callbacks:	           ^ error:navit:command_register_callbacks:could not resolve object in cs=0x55e87e85d640: error:navit:command_register_callbacks:	vehicle.position_valid error:navit:command_register_callbacks:	^ error:navit:command_register_callbacks:could not resolve object in cs=0x55e87e8608d0: error:navit:command_register_callbacks:	follow>1 error:navit:command_register_callbacks:	^ Segmentation fault",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/mvglasow,9,https://github.com/navit-gps/navit/pull/737#issuecomment-457965298,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):","About proximity of buttons, I have used a similar setup (with the same button size and distance) on Android for years now and personally did not have issues with the size.
The buttons are designed to be 48 px at 100–120 dpi (which includes most PC screens and WinCE devices), with 8 px spacing. For Android they are scaled according to pixel density and end up being 64 dip (display-independent pixels) with ~10 dip spacing, which is what Google recommends for UI design. This is 1.33× the touch target size recommended by Google (48 dip with 8 dip spacing).
For Openmoko I have assumed the pixel density to be 240 dpi (taking the Freerunner screen as a basis) and scaled things accordingly, i.e. doubling pixel dimensions.
The Jolla with its 4.5"", 960 × 540 px display would be quite close to 240 dpi, therefore things should be OK here if we scale the items by a factor of 2 (which would make the buttons 96 px, with 16 px spacing). Though I am not particularly familiar with the Sailfish platform, neither the devices available (and how much pixel density varies) nor with how the platform addresses pixel density. I understand SVG solves some of the issues, but how would I specify that I want a particular particular item some 0.4 inches wide (0.5 still being OK but not 0.2), regardless of the screen’s pixel density?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/mvglasow,10,https://github.com/navit-gps/navit/pull/737#issuecomment-457966475,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):","As for the error messages, I am seeing the ones about irresolvable objects as well. Seems to be a pre-existing bug in Navit that some objects are not yet visible when the OSD starts up. Other than generating a few error messages on startup, it is harmless and the OSD will work properly once everything is loaded.
I have successfully tested this OSD layout on Linux and Android (the screenshots were made on Linux with the Android LDPI OSD copied in). You will also see that code changes are minimal and mostly limited to constants; any bugs are probably long-standing ones that are coming to light only now.
I never had a segfault, though. Can you get me a stack trace of where the segfault occurs? Then I can look into it.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/metalstrolch,11,https://github.com/navit-gps/navit/pull/737#issuecomment-458074693,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):","OK, on another system i don't see the segfault. I'll investigate that segfault later on. Here I can get the OSD to load and it seems to scale nicely with screen site and aspect.
But I,ve got another problem:
Sailfish doesn't support saxon on the build machine (as my gentoo boxes do not as well by default).
Only option is xsltproc. Unfortunately that doesn't understand xslt 2.0 and therefore fails generating the osd properly.
Possible to port your xslt's to 1.0 in order to still support xsltproc and probably convert.exe?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/mvglasow,12,https://github.com/navit-gps/navit/pull/737#issuecomment-458155747,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):","Good to hear the OSD seems to work.
Re saxon: build chain fragmentation is something that should be avoided as much as possible—once a uniform build chain is in place, development becomes so much easier. Is the CI environment also affected by this? Would installing saxon be an option, or is there anything preventing it?
If not, we would have to explore the path of porting the XSLTs affected to 1.0, though I am by no means an expert on XSLT and would need some help with that.
About image file names and size: I will look into specifying the OSDs as you said—give w and h attributes and strip dimensions and format from the file name. If that works, I’ll look into the same for toggle_announcer, for which the logic is slightly different (due to the need to swap bitmaps to reflect current state). On Sailfish, how would I specify dimensions—physical pixels on a 240dpi screen? Or something else?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/metalstrolch,13,https://github.com/navit-gps/navit/pull/737#issuecomment-458193559,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):","Adding saxon as a build requirement is quite hard, as it is a java tool and would pull in entire java into the build system. Think that isn't even available as a official package on sailfish. Don't know if CI is affected as I don't know what package feed is used there. Xsltproc has always been valid option in navit build, as is windows ""convert.exe"" which is most probably even more restrictive. Albeit I don't know if it is still used. So currently the xslt files doesn't fit to that.
For me the best way would be to port (most) xslt files to 1.0, but I'm no expert here as well.
Dimensions on sailfish are given the same way as on every navit platform, in percent or pixels. Would be cool if navit could honor DPI values and then understand millimeters. Would solve the ""osd for dpi"" thing for good if one could say the icon should be 6mm x 6mm. But this would be a quite big change to navit's OSD and other modules.
Now I have the problem that the OSD doesn't really work on qt5 graphics, but I more and more think this is an old qt5 graphics bug since I remember disappearing overlays and such from development.
Seems It's time to fix qt5 here.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/mvglasow,14,https://github.com/navit-gps/navit/pull/737#issuecomment-458342868,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):","I’ve now converted all icons to just the base name, leaving it to Navit to complete them with dimensions and a file extension. For button this was quite straightforward. navigation_next_turn and navigation_status presented the additional challenge that the OSD item was intended to be bigger than the icon, with padding around it. This is how I discovered the additional icon_w and icon_h attributes, which can be specified to get an icon that is smaller than the OSD itself. toggle_announcer also has these fields in the respective struct, but they are broken and the attribute did not seem to work, so I removed it altogether. This makes toggle_announcer behave more like button, which feels correct to me.
As for saxon/java dependencies, they would not be required on the target platform, just on the build platform. Would that still be an obstacle?
I did notice CI throwing some errors about XSLT 2.0 not being supported, still the build completed. Might be worth adding the XSLT to Sailfish and see if it passes CI, and what the artifact looks like. Btw, I did not introduce XSLT 2.0—I simply modified an existing file that was being used for the Android and iPhone builds already.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/mvglasow,15,https://github.com/navit-gps/navit/pull/737#issuecomment-458351631,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):","Now that I am looking at it again, I see that osd_minimum.xslt is version 1.0, and this is the only XSLT needed for the OSD layout. So we should be fine here.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/metalstrolch,16,https://github.com/navit-gps/navit/pull/737#issuecomment-458514959,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):","OK, I made some progress here. I fixed graphics_qt5 to finally handle overlays properly. See #741 .
By porting openmoko.xslt to sailfish_osd.xslt and converting osd_enable_zoom.xslt to version 1.1 I'm finally able to build this for qt5 with svg only. Now I've 2 problems left
:


osd_enable_zoom.xslt enables the zoom buttons out of navit_shipped.xml as well. How did you fix this for your build?


The enable_expression's don't work. So I always see all elements, causing some elements to overlap. Try to investigate why. I get plenty of error messages that could pint to that problem.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/metalstrolch,17,https://github.com/navit-gps/navit/pull/737#issuecomment-458515131,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):","Btw. saxon is a problem, as sailfish doesn't have packages for it. So you could not simply install it.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/mvglasow,18,https://github.com/navit-gps/navit/pull/737#issuecomment-458523337,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):","Re saxon, as the only xslt involved is version 1.0, this should no longer be an issue.
You might not need the full openmoko.xslt, it should be sufficient to include osd_minimum.xslt and make sure the variables it uses are defined. I’ll come up with something.
As for enable_expressions, they work on Linux and Android, thus it is something specific to certain configurations. Just a wild guess (as I don’t know the inner workings), but this might have to do with the graphics driver. Things to try:

When you touch an OSD button which should be disabled but appears nonetheless, does it trigger the desired action? (You might want to build a custom button for that, with an action that is noticeable on the screen (such as zoom in/out) and an enable_expression that should evaluate to false.) If the button does nothing, it might be a graphics issue rather than the enable_expression not being evaluated.
As I understand, Sailfish supports multiple graphics drivers. Do they all exhibit the same problem, or is it limited only to some? In the latter case, that would point at a graphics issue.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/mvglasow,19,https://github.com/navit-gps/navit/pull/737#issuecomment-458526088,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):","3c51ff8 applies the OSD changes to Sailfish. Icon sizes are adapted to match those in sailfish_gui.xslt (buttons follow medium icon size, route status/next turn follows big icon size).",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/metalstrolch,20,https://github.com/navit-gps/navit/pull/737#issuecomment-458529309,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):","You must enable the zoom buttons for Sailfish/qt5, as zoom gestures are not supported(yet).
The osd_enable_zoom.xslt can be ported to 1.1 by just replacing the version number. But it enables buttons brought from navit_shipped.xml as well.
Sailfish uses always graphics_qt5, but this can use QWidgets or QML for drawing. Both modes share most of the code and (mis)behave the same with your layout. The default btw. is to use QML, as QWidgets is disallowed on Sailfish store. After all I was the one who wrote that. But you're right, it is graphics dependent, albeit I don't know why and how. But It's not drawing. I think this is somehow a race condition.
The Problem:
The buttons always work, albeit funny things happen if you press overlapping ones.
I think the cause is indicated by:
error:navit:osd_std_config:Error in saved command: not_ready, item=0x5624516b2a00. error:navit:osd_std_config:Error in saved command: not_ready, item=0x562451681cf0. error:navit:osd_std_config:Error in saved command: not_ready, item=0x562451680b60. error:navit:osd_std_config:Error in saved command: not_ready, item=0x56245168cf30. error:navit:osd_std_config:Error in saved command: not_ready, item=0x56245168c570. error:navit:osd_std_config:Error in saved command: not_ready, item=0x56245168bbd0. error:navit:osd_std_config:Error in saved command: not_ready, item=0x562451695680. error:navit:osd_std_config:Error in saved command: not_ready, item=0x562451693f00.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/metalstrolch,21,https://github.com/navit-gps/navit/pull/737#issuecomment-458529505,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):","Oops, wrong button. of course stays open...",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/mvglasow,22,https://github.com/navit-gps/navit/pull/737#issuecomment-458534847,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):","Added osd_enable_zoom. As for my build, I did not touch that part, other than changing the button images and moving the buttons to a new location.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/metalstrolch,23,https://github.com/navit-gps/navit/pull/737#issuecomment-458618626,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):","OK, were getting closer. Fixed graphics_qt5 so the enable_expressions are evaluated right. Again see #471
Still the additional set of zoom buttons. present in the sailfish rpm out of CI artefacts as well.
Remaining questions valid on qt5 and gtk:


What should the ""follow"" button do? I didn't manage to make it appear. I think it should react on ""follow_cursor"" instead of ""follow"". Additionally the ""set_center_cursor()"" call needs to be guarded or fixed, as it segfaulted on my box having no active vehicle. I use ""demo"" vehicle which must be activated manually before it has a ""fix"". Maybe I have a look in set_center_cursor() next.


I would remove the ""cmd_interface"" line as this makes everything behave really strange. At least for me this doesn't ""feel"" right when using navit. Maybe it's because I don't like the tilted view (and autozoom, but that's a different story)


When should the compass appear? At least with the ""demo"" vehicle it did never.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/mvglasow,24,https://github.com/navit-gps/navit/pull/737#issuecomment-458625457,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):","The follow button should appear when dragging the map; tapping it should reattach the map to the vehicle position (so it will follow the vehicle).
The cmd_interface is something I took over from the existing config unmodified, but I have disabled it in the setup I use. I will look into it.
The compass should appear whenever the vehicle has a valid position. On Linux (the setup on which I generated the screenshots) with the demo vehicle this works as soon as we have a position and a destination, and the compass remains when navigation is stopped. I use the same definition on Android, and that works as well—the compass appears when Navit gets its first location. Might be another graphics issue, or (less likely) something about vehicle position or related callbacks on Sailfish.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/mvglasow,25,https://github.com/navit-gps/navit/pull/737#issuecomment-458646034,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):",The cmd_interface sets the pitch (enabling/disabling 3D view) and orientation when autozoom is active and the map is set to follow the vehicle. This was introduced in #306. I’ve disabled it in my personal config—maybe it could be improved by adding some setting that toggles between 2D and automatic 2D/3D switching.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/metalstrolch,26,https://github.com/navit-gps/navit/pull/737#issuecomment-458733977,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):","Now I got it working. The trick is that the active=""1"" property must be set on vehicle. If I add this to the demo vehicle it works. If the property is not set and the vehicle is enabled using the menu, the OSD fails. Unfortunately this property is missing on navit_shipped.xml
Can somebody confirm this?
If true, how can we fix that.
Still I think the automatic pitch / orientation setting is plain stupid and renders the menu items about the same useless. But if the majority thinks this is an improvement I will only disable this on my personal device and keep it for the default sailfish package.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/mvglasow,27,https://github.com/navit-gps/navit/pull/737#issuecomment-458741563,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):","I also have doubts if the cmd_interface is the best way of doing it; a proper option would probably be better. Anyway I have disabled it in my personal config as I do not use 3D at all. But I guess this feature should be discussed in a separate ticket.
About the vehicle, IIRC the vehicle must be both enabled and active in order for Navit to use its position. The internal menu has a menu item for points, “Set as position (and deactivate vehicle)”, which will make Navit assume that position as the current one and ignore position updates from the vehicle, until the vehicle is set as active again. With the vehicle disabled, reattaching the map view to the vehicle is not really meaningful.
With the demo vehicle disabled, if you set a position and a destination, I suspect Navit would not even start routing or at least would not update the map view to move along the route.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/metalstrolch,28,https://github.com/navit-gps/navit/pull/737#issuecomment-458867325,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):","If using the demo vehicle without active=""1"" , you can manually enable it via the vehicle menu. The same way you can re enable your vehicle after ""Set as position (and deactivate vehicle)"". That's how I used demo vehicle up to now, as navit_shipped.xml does not contain active=""1"".
Need to try what happens to the OSD if ""Set as position (and deactivate vehicle)"" and later on activate it again with a ""real"" vehicle.
Right about the pitch discussion. Should be done elsewhere. Personally I will disable that as well. Don't like 3d view at all.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/mvglasow,29,https://github.com/navit-gps/navit/pull/737#issuecomment-458920194,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):","demo vehicle [...] navit_shipped.xml does not contain active=""1"".

Kind of makes sense, as it is seldom needed for production use. I have seen some commercial sat-navs which offer a simulation of the route, but cannot think of a real use case other than presentation to a potential buyer—or testing the product during development. Thus, making it the default would make sense only for development, test or demonstration setups, not for production ones.
Anyways, what is left to be done before this OSD on Sailfish is ready for prime time?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/metalstrolch,30,https://github.com/navit-gps/navit/pull/737#issuecomment-458923673,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):","I've still the issue with the double zoom buttons, but I think here we have a misunderstanding.
Should the zoom buttons of the OSD layout added by osd_minimum.xslt be visible by default or not.
Because including osd_minimum.xslt and osd_enable_zoom.xslt in the same.xslt file and therefore the same xslt run doesn't make sense. By including both rules are applied together to the basis, so osd_enable_zoom.xslt will never apply to the zoom buttons brought by osd_minimum.xslt. The nodes do not yet exist when the enable rules are applied.
I think we must: remove the include of osd_enable_zoom.xslt from all .xslt's that include osd_minimum.xslt as well (sailfish, openmoko, windows). The zoom buttons are currently always available from osd_minimal.xslt.
If we want to control the zoom button presence from osd_minimum.xslt, the I would simply do it using a xslt variable like done for use_overlay.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/mvglasow,31,https://github.com/navit-gps/navit/pull/737#issuecomment-458939252,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):","I get what you mean now, will look into it",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/mvglasow,32,https://github.com/navit-gps/navit/pull/737#issuecomment-458954605,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):","OK, I’ve removed osd_enable_zoom.xslt from anything that includes osd_minimum.xslt. That will make them show on any platform that uses that OSD. This maintains existing behavior on Android and iOS. On WinCE and Openmoko the zoom buttons are needed as devices are not guaranteed to have other means of zooming.
I understand we need the buttons on Sailfish as well, correct?
On the long run, it might help to have a property like has_hardware_zoom which could then be used in an enable_expression, as this can vary between devices of even the same platform, and may even change at run time (imagine unplugging a wheel mouse, and falling back to the two-button no-scroll touchpad). Then again, despite having pinch-to-zoom on Android, I prefer having zoom in/out buttons. Again, different issue for a different PR.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/metalstrolch,33,https://github.com/navit-gps/navit/pull/737#issuecomment-458966468,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):","Yes we need zoom buttons on sailfish, as qt5 is not (yet) enabled for zoom touch gestures.
But, as is, the zoom buttons are always enabled! On any platform I think.
osd_enable_zoom.xslt is only good for enabling the zoom buttons already present in navit_shipped.xml that show up on the lower right and left corners of the screen. If done next to osd_minimal.xslt., two pairs of buttons appear.
Have a look on the generated navit.xml. You see two sets of zoom buttons, but the one coming from navit_shipped.xml are usually disabled.
But yes, the ""has_hardware_zoom"" is indeed a good idea.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/mvglasow,34,https://github.com/navit-gps/navit/pull/737#issuecomment-459008753,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):",Great! Now I’d just like an opinion from the Tomtom folks…,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/mvglasow,35,https://github.com/navit-gps/navit/pull/737#issuecomment-459544078,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):","@jkoan could you maybe take a look at the latest CircleCI artifacts? Seems the XML config is missing entirely from it, and has been for a while already.
An older Tomtom file I found had a config file named tomtom480.xml in /navit/share, the CircleCI artifacts do not. If I SSH into the machine, I can find ./project/build/tomtom480.xml but none of the XSLT transforms seem to have been applied. In both cases, that goes for the current build, the last build before I changed the Tomtom XSLT, and the latest build on master.
While I am not an expert on this platform, to me that looks like the Tomtom build is broken…",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/lains,36,https://github.com/navit-gps/navit/pull/737#issuecomment-459870023,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):","@mvglasow, this OSD looks nice to me.
If the XML config parsing is broken on tomtom, this might come from of my previous work in PR #559. I don't know if anyone managed to test it on tomtom builds before the code was merged.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/mvglasow,37,https://github.com/navit-gps/navit/pull/737#issuecomment-459881988,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):",@lains any ideas where to look? A lot of things changed in this PR…,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/mvglasow,38,https://github.com/navit-gps/navit/pull/737#issuecomment-459887628,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):","@lains it looks like Tomtom had the same issues before. I just created a branch based on b077321 (the immediate parent of your changes—just had to doctor the CircleCI config to force the Tomtom builds to run) and ran it through CircleCI. Same thing, no XML file in /navit/share. If that is an error (which I can only suspect), it has been there before.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/mvglasow,39,https://github.com/navit-gps/navit/pull/737#issuecomment-460345885,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):","I went back in CircleCI history as far as it would go (i.e. September 5, 2017) and already back then, the XML file was absent from the Tomtom builds. In other words, this file has been absent from the packages since we moved to CircleCI V2, that is, for almost a year and a half.
@jkoan @lains can you shed some light on this? Is this an error at all? If not, where does the Tomtom build get its config from? If yes, any idea what might be causing it and how to fix it?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/lains,40,https://github.com/navit-gps/navit/pull/737#issuecomment-460357512,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):","@jkoan @lains can you shed some light on this? Is this an error at all? If not, where does the Tomtom build get its config from? If yes, any idea what might be causing it and how to fix it?

Sorry, I have never built for tomtom, only for WinCE, Linux and Android so I don't know that process very well, and I don't have a device to play with, either.
It seems most of the build is handled inside build_tomtom_minimal.sh but you probably know this already... there is a line there that copies the xml config, but strangely no in the $OUT_PATH directory as I would have expected...",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/mvglasow,41,https://github.com/navit-gps/navit/pull/737#issuecomment-460408753,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):","Yes, I’d seen that line already. It explains why the XML file does not show up in the output, but not why the XSLs are not getting applied.
The wiki links to an archive which has the XML file (https://wiki.navit-project.org/index.php/TomTom#Using_pre-compiled_binaries), dated December 3, 2016. As of September 5, 2017, the file has been missing; I’ll examine the commits in that timeframe. History is a bit hard to trace for the build scripts as they were moved to a different directory after that date.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/jkoan,42,https://github.com/navit-gps/navit/pull/737#issuecomment-460679293,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):","I went back in CircleCI history as far as it would go (i.e. September 5, 2017) and already back then, the XML file was absent from the Tomtom builds. In other words, this file has been absent from the packages since we moved to CircleCI V2, that is, for almost a year and a half.
@jkoan @lains can you shed some light on this? Is this an error at all? If not, where does the Tomtom build get its config from? If yes, any idea what might be causing it and how to fix it?

To clarify what artifacts we have we need to understand which one is for which.
First, the TomTom plugin type is for the official TomTom distro like a add-on to the old software.
the other option is the OpenTom distro where TomTom minimal was intended to be used, but probably nobody uses it (at least i don't have heared of someone)
The last method is NavitTom which will be a full Distro for TomTom and have everything integrated from the first start.
But its true that all solutions for TomTom are really much work in progress. It needs to be fixed, i try to address this soon.
Will test for this PR with a local build.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/mvglasow,43,https://github.com/navit-gps/navit/pull/737#issuecomment-460727046,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):","@jkoan Thanks for looking into this, very much appreciated!
PS: examining the commits for the build script did not reveal anything that looked suspicious to me…",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/lains,44,https://github.com/navit-gps/navit/pull/737#issuecomment-461052893,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):","the zoom in and zoom out buttons are quite close to each other. Quite a pain to use. Even wrong with the toggle auto zoom next to them

I have compiled and tried on Android (hdpi display).
This OSD looks nice and modern to me. Congratulations.
I tend to agree with what @metalstrolch wrote: I often miss the zoom in, out and manual icons when I click on them on that specific phone.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/mvglasow,45,https://github.com/navit-gps/navit/pull/737#issuecomment-461464167,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):","@lains the buttoms use the medium icon size for the platform, which is also used for the title bar of the internal GUI menu. There’s a bit of variation in screen densities; particularly when a device is in the border area between two density bins (say, almost halfway between HDPI and XHDPI), but reporting the lower of the two densities, buttons may end up being a bit smaller. If that is an issue, we would need to increase the medium icon size.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/mvglasow,46,https://github.com/navit-gps/navit/pull/737#issuecomment-464518357,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):",Any news on the Tomtom build?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,737,2019-01-25T14:13:41Z,2019-02-19T23:22:59Z,2019-02-19T23:22:59Z,MERGED,True,1051,282,17,https://github.com/mvglasow,New default OSD layout,33,[],https://github.com/navit-gps/navit/pull/737,https://github.com/mvglasow,47,https://github.com/navit-gps/navit/pull/737#issuecomment-465353263,"Inspired by #733, I am proposing a gentle redesign of the default OSD layout. Its main features are:

Consistent design for all OSD touch controls
Default transparency changed to 0x0a for better legibility, while still allowing the map to shine through
Touch controls with white icons on semitransparent black background, to improve visibility on the map background
Variable-width items (street names) occupy the full screen width
OSD items are hidden when they are not meaningful, and are grouped so that blocks of items are shown or hidden together
Items related to the current position are near the bottom of the screen, those related to routing are near the top of the screen (in a fashion similar to traffic signs).
Designed to work with any screen size (minimum 240×240 LDPI)

Currently this is implemented for Android and iOS (which already shared a minimum OSD), as well as for WinCE and Openmoko, but I am proposing to extend this to all mobile platforms.


Different use cases (no location, location but not routing, map not following vehicle, calculating route, routing):","See #751 for Tomtom build issues; I will merge this one now. If the OSD does not work properly on Tomtom after fixing the build, this will need to be looked at separately.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,739,2019-01-26T17:19:13Z,2019-01-26T17:29:14Z,2019-03-24T20:56:18Z,MERGED,True,1,1,1,https://github.com/jkoan,Fix:build:Fix android build on circleci ,1,[],https://github.com/navit-gps/navit/pull/739,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/739,This fixes the problem with the android build on circleci. See #738,This fixes the problem with the android build on circleci. See #738,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,740,2019-01-26T18:14:22Z,2019-01-26T18:18:40Z,2019-01-26T18:18:40Z,MERGED,True,67,123,4,https://github.com/mvglasow,Improvements to the Android build script,5,[],https://github.com/navit-gps/navit/pull/740,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/740,"Do not install NDK on the CI image as it is already included
Rename build script to build_android.sh (as it builds for a number or platforms, as determined by build.gradle); build_android_arm.sh points at it for backward compatibility reasons (F-Droid)
When renaming and copying files to generated directories, do the rename operation in the target dir to minimize source tree pollution","Do not install NDK on the CI image as it is already included
Rename build script to build_android.sh (as it builds for a number or platforms, as determined by build.gradle); build_android_arm.sh points at it for backward compatibility reasons (F-Droid)
When renaming and copying files to generated directories, do the rename operation in the target dir to minimize source tree pollution",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,741,2019-01-29T11:46:42Z,2019-01-30T12:22:37Z,2019-01-30T12:23:29Z,MERGED,True,79,50,8,https://github.com/metalstrolch,Fix:graphics_qt5:fix overlay handling,6,[],https://github.com/navit-gps/navit/pull/741,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/741,"Do not clear overlay contents if resize is called for them, but the actual geometry doesn't change.
This happens on resize if the overlays are repositioned. Now OSD's do not loose elements any more.
Apply astyle to comply with coding style and to tame CI","Do not clear overlay contents if resize is called for them, but the actual geometry doesn't change.
This happens on resize if the overlays are repositioned. Now OSD's do not loose elements any more.
Apply astyle to comply with coding style and to tame CI",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,741,2019-01-29T11:46:42Z,2019-01-30T12:22:37Z,2019-01-30T12:23:29Z,MERGED,True,79,50,8,https://github.com/metalstrolch,Fix:graphics_qt5:fix overlay handling,6,[],https://github.com/navit-gps/navit/pull/741,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/741#issuecomment-458924995,"Do not clear overlay contents if resize is called for them, but the actual geometry doesn't change.
This happens on resize if the overlays are repositioned. Now OSD's do not loose elements any more.
Apply astyle to comply with coding style and to tame CI",Merged because required for properly testing new osd.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,743,2019-01-30T22:29:25Z,2019-01-30T23:15:16Z,2019-01-31T16:13:15Z,MERGED,True,17,6,1,https://github.com/metalstrolch,Fix:vehicle_qt5:Properly update position status,1,[],https://github.com/navit-gps/navit/pull/743,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/743,"This fixes the position status update of vehicle_qt5.
Now the fix status can be properly tracked for things like OSD and auto zoom to work.","This fixes the position status update of vehicle_qt5.
Now the fix status can be properly tracked for things like OSD and auto zoom to work.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,744,2019-02-03T00:15:11Z,2019-02-11T06:56:23Z,2019-02-11T06:56:23Z,MERGED,True,6,0,2,https://github.com/mvglasow,Enable traffic plugins by default,2,[],https://github.com/navit-gps/navit/pull/744,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/744,"This enables the traffic plugin by default on all platforms via the XML config file.
On Android, the traff_android plugin is used and any traffic updates received via TraFF broadcasts are processed.
On all other platforms, the null plugin is used. This plugin enables traffic message processing but will never supply any messages. On Linux this allows injection of TraFF messages via dbus (while this functionality could be [ab]used for a traffic supplier, it is intended as a test interface).
Users with a custom navit.xml will not be affected by these changes until they adapt their configuration accordingly.
So far these plugins have been tested on Linux and Android. Tests on other platforms would be welcome (though I expect regressions to be quite unlikely here).","This enables the traffic plugin by default on all platforms via the XML config file.
On Android, the traff_android plugin is used and any traffic updates received via TraFF broadcasts are processed.
On all other platforms, the null plugin is used. This plugin enables traffic message processing but will never supply any messages. On Linux this allows injection of TraFF messages via dbus (while this functionality could be [ab]used for a traffic supplier, it is intended as a test interface).
Users with a custom navit.xml will not be affected by these changes until they adapt their configuration accordingly.
So far these plugins have been tested on Linux and Android. Tests on other platforms would be welcome (though I expect regressions to be quite unlikely here).",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,745,2019-02-04T18:29:50Z,2019-02-19T20:37:57Z,2019-02-19T21:03:43Z,MERGED,True,188,106,2,https://github.com/mvglasow,Make Navit work in split screen mode,3,[],https://github.com/navit-gps/navit/pull/745,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/745,"According to blame, this particular chunk of code was added by Rikky (who seems to be no longer active) in 2011, and seemed to be a precautionary measure to prevent unclean shutdowns.
However, this prevented Navit from resizing properly, as resizing destroys the activity and then recreates it—the latter being prevented by Navit exiting. This explains why Navit would not work in multi-window mode. (Tested on Anbox, where this change will make Navit resize properly rather than exiting on any attempt to change the window size.)
Most likely we do not need that precautionary measure any longer: 85b9d5d already replaced the call to finish() in the Navit#exit() method with a call to NavitDestroy() (to prevent unclean shutdowns), and any non-Android quit operation should cause the process to exit anyway.
Still I would appreciate it if someone familiar with the Android port could take a look at this, as I might have overlooked something.","According to blame, this particular chunk of code was added by Rikky (who seems to be no longer active) in 2011, and seemed to be a precautionary measure to prevent unclean shutdowns.
However, this prevented Navit from resizing properly, as resizing destroys the activity and then recreates it—the latter being prevented by Navit exiting. This explains why Navit would not work in multi-window mode. (Tested on Anbox, where this change will make Navit resize properly rather than exiting on any attempt to change the window size.)
Most likely we do not need that precautionary measure any longer: 85b9d5d already replaced the call to finish() in the Navit#exit() method with a call to NavitDestroy() (to prevent unclean shutdowns), and any non-Android quit operation should cause the process to exit anyway.
Still I would appreciate it if someone familiar with the Android port could take a look at this, as I might have overlooked something.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,745,2019-02-04T18:29:50Z,2019-02-19T20:37:57Z,2019-02-19T21:03:43Z,MERGED,True,188,106,2,https://github.com/mvglasow,Make Navit work in split screen mode,3,[],https://github.com/navit-gps/navit/pull/745,https://github.com/mvglasow,2,https://github.com/navit-gps/navit/pull/745#issuecomment-460430339,"According to blame, this particular chunk of code was added by Rikky (who seems to be no longer active) in 2011, and seemed to be a precautionary measure to prevent unclean shutdowns.
However, this prevented Navit from resizing properly, as resizing destroys the activity and then recreates it—the latter being prevented by Navit exiting. This explains why Navit would not work in multi-window mode. (Tested on Anbox, where this change will make Navit resize properly rather than exiting on any attempt to change the window size.)
Most likely we do not need that precautionary measure any longer: 85b9d5d already replaced the call to finish() in the Navit#exit() method with a call to NavitDestroy() (to prevent unclean shutdowns), and any non-Android quit operation should cause the process to exit anyway.
Still I would appreciate it if someone familiar with the Android port could take a look at this, as I might have overlooked something.","After testing in true split-screen mode, it seems that the change per se works. However, the transparent system bars (in fact, the way Navit handles them) needs to be adapted to work with split screen properly.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,745,2019-02-04T18:29:50Z,2019-02-19T20:37:57Z,2019-02-19T21:03:43Z,MERGED,True,188,106,2,https://github.com/mvglasow,Make Navit work in split screen mode,3,[],https://github.com/navit-gps/navit/pull/745,https://github.com/mvglasow,3,https://github.com/navit-gps/navit/pull/745#issuecomment-460866830,"According to blame, this particular chunk of code was added by Rikky (who seems to be no longer active) in 2011, and seemed to be a precautionary measure to prevent unclean shutdowns.
However, this prevented Navit from resizing properly, as resizing destroys the activity and then recreates it—the latter being prevented by Navit exiting. This explains why Navit would not work in multi-window mode. (Tested on Anbox, where this change will make Navit resize properly rather than exiting on any attempt to change the window size.)
Most likely we do not need that precautionary measure any longer: 85b9d5d already replaced the call to finish() in the Navit#exit() method with a call to NavitDestroy() (to prevent unclean shutdowns), and any non-Android quit operation should cause the process to exit anyway.
Still I would appreciate it if someone familiar with the Android port could take a look at this, as I might have overlooked something.","Reworked the system bars, which should now fix a couple of bugs (requires API 23+, though; earlier APIs still retain the previous behavior).
There’s one bug remaining: the navigation bar is not transparent in split screen, but when it borders on the Navit window, the system reports an inset on that edge, equal to the height/width of the navigation bar. As a consequence, Navit will prevent OSD items from occupying that area. Dunno why this happens (or even if transparent navigation bars are supposed to work in split screen).
Help is appreciated—either to make the navigation bar transparent in split screen, or reliably tell whether or not it is obscuring parts of the window. Right now window insets will always claim it is on top of the Navit view even when it isn’t…",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,745,2019-02-04T18:29:50Z,2019-02-19T20:37:57Z,2019-02-19T21:03:43Z,MERGED,True,188,106,2,https://github.com/mvglasow,Make Navit work in split screen mode,3,[],https://github.com/navit-gps/navit/pull/745,https://github.com/mvglasow,4,https://github.com/navit-gps/navit/pull/745#issuecomment-461506231,"According to blame, this particular chunk of code was added by Rikky (who seems to be no longer active) in 2011, and seemed to be a precautionary measure to prevent unclean shutdowns.
However, this prevented Navit from resizing properly, as resizing destroys the activity and then recreates it—the latter being prevented by Navit exiting. This explains why Navit would not work in multi-window mode. (Tested on Anbox, where this change will make Navit resize properly rather than exiting on any attempt to change the window size.)
Most likely we do not need that precautionary measure any longer: 85b9d5d already replaced the call to finish() in the Navit#exit() method with a call to NavitDestroy() (to prevent unclean shutdowns), and any non-Android quit operation should cause the process to exit anyway.
Still I would appreciate it if someone familiar with the Android port could take a look at this, as I might have overlooked something.","This is getting weirder and weirder. Spoiler: there seems to be a solution, albeit a hacky one.
Apparently transparency in split screen mode is supported for the notification bar but not for the navigation bar, and no content will be drawn behind the latter. Nonetheless, querying the root window insets always reports an inset for the navigation bar, which would result in unnecessary padding along it.
This whole mechanism does not seem to be the preferred way of querying window insets anyway, and is only supported on API 23+ (whereas window insets first appeared in API 20). Apparently, the preferred way is to override onApplyWindowInsets() and examine the insets argument. (This method can also alter the insets, specifying how much of them it will consume with padding, resulting the altered values to be passed down to child views.)
Sound cool? Not quite so, for that mechanism has a bug of its own: the top inset is somewhere between 24 and 64 dip too big. It will report an inset for a notification bar when there is none (as on Anbox, where each app runs in a window), or when it is not obstructing any part of the app (e.g. in split-screen mode when the app is being displayed in the lower half). Or it will report an inset much bigger than the area occupied by notification bar. Or a combination of both.
We thus have two ways of querying insets, each with its own bugs:

Querying root window insets will give an incorrect inset for the navigation bar.
onApplyWindowInsets() will give an incorrect top inset.

As long as the navigation bar never gets displayed at the top, these two bugs are complementary. As a workaround, we determine the top inset by querying root window insets and the others using onApplyWindowInsets(). This seems to work so far, will conduct more tests to be sure and then merge the changes.
Also, the insets do not reflect space occupied by the on-screen keyboard, thus regressions affecting that feature are not to be expected.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,745,2019-02-04T18:29:50Z,2019-02-19T20:37:57Z,2019-02-19T21:03:43Z,MERGED,True,188,106,2,https://github.com/mvglasow,Make Navit work in split screen mode,3,[],https://github.com/navit-gps/navit/pull/745,https://github.com/mvglasow,5,https://github.com/navit-gps/navit/pull/745#issuecomment-461569584,"According to blame, this particular chunk of code was added by Rikky (who seems to be no longer active) in 2011, and seemed to be a precautionary measure to prevent unclean shutdowns.
However, this prevented Navit from resizing properly, as resizing destroys the activity and then recreates it—the latter being prevented by Navit exiting. This explains why Navit would not work in multi-window mode. (Tested on Anbox, where this change will make Navit resize properly rather than exiting on any attempt to change the window size.)
Most likely we do not need that precautionary measure any longer: 85b9d5d already replaced the call to finish() in the Navit#exit() method with a call to NavitDestroy() (to prevent unclean shutdowns), and any non-Android quit operation should cause the process to exit anyway.
Still I would appreciate it if someone familiar with the Android port could take a look at this, as I might have overlooked something.","Tests look good, seems like we’ve finally nailed window insets. I am still getting a warning that the LocationListener is never unregistered; will look into that.
Also, we are currently discarding and recreating the activity whenever it changes (rotation, resize, split screen toggle), which is very expensive. Might want to look into keeping the activity, as we do on other platforms.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,745,2019-02-04T18:29:50Z,2019-02-19T20:37:57Z,2019-02-19T21:03:43Z,MERGED,True,188,106,2,https://github.com/mvglasow,Make Navit work in split screen mode,3,[],https://github.com/navit-gps/navit/pull/745,https://github.com/hoehnp,6,https://github.com/navit-gps/navit/pull/745#issuecomment-461577832,"According to blame, this particular chunk of code was added by Rikky (who seems to be no longer active) in 2011, and seemed to be a precautionary measure to prevent unclean shutdowns.
However, this prevented Navit from resizing properly, as resizing destroys the activity and then recreates it—the latter being prevented by Navit exiting. This explains why Navit would not work in multi-window mode. (Tested on Anbox, where this change will make Navit resize properly rather than exiting on any attempt to change the window size.)
Most likely we do not need that precautionary measure any longer: 85b9d5d already replaced the call to finish() in the Navit#exit() method with a call to NavitDestroy() (to prevent unclean shutdowns), and any non-Android quit operation should cause the process to exit anyway.
Still I would appreciate it if someone familiar with the Android port could take a look at this, as I might have overlooked something.",do you have a screenshot of t he split screen?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,745,2019-02-04T18:29:50Z,2019-02-19T20:37:57Z,2019-02-19T21:03:43Z,MERGED,True,188,106,2,https://github.com/mvglasow,Make Navit work in split screen mode,3,[],https://github.com/navit-gps/navit/pull/745,https://github.com/mvglasow,7,https://github.com/navit-gps/navit/pull/745#issuecomment-461625035,"According to blame, this particular chunk of code was added by Rikky (who seems to be no longer active) in 2011, and seemed to be a precautionary measure to prevent unclean shutdowns.
However, this prevented Navit from resizing properly, as resizing destroys the activity and then recreates it—the latter being prevented by Navit exiting. This explains why Navit would not work in multi-window mode. (Tested on Anbox, where this change will make Navit resize properly rather than exiting on any attempt to change the window size.)
Most likely we do not need that precautionary measure any longer: 85b9d5d already replaced the call to finish() in the Navit#exit() method with a call to NavitDestroy() (to prevent unclean shutdowns), and any non-Android quit operation should cause the process to exit anyway.
Still I would appreciate it if someone familiar with the Android port could take a look at this, as I might have overlooked something.",Here it is (the blurred line at the bottom would be the current device location),True,{}
navit-gps/navit,https://github.com/navit-gps/navit,745,2019-02-04T18:29:50Z,2019-02-19T20:37:57Z,2019-02-19T21:03:43Z,MERGED,True,188,106,2,https://github.com/mvglasow,Make Navit work in split screen mode,3,[],https://github.com/navit-gps/navit/pull/745,https://github.com/mvglasow,8,https://github.com/navit-gps/navit/pull/745#issuecomment-461632823,"According to blame, this particular chunk of code was added by Rikky (who seems to be no longer active) in 2011, and seemed to be a precautionary measure to prevent unclean shutdowns.
However, this prevented Navit from resizing properly, as resizing destroys the activity and then recreates it—the latter being prevented by Navit exiting. This explains why Navit would not work in multi-window mode. (Tested on Anbox, where this change will make Navit resize properly rather than exiting on any attempt to change the window size.)
Most likely we do not need that precautionary measure any longer: 85b9d5d already replaced the call to finish() in the Navit#exit() method with a call to NavitDestroy() (to prevent unclean shutdowns), and any non-Android quit operation should cause the process to exit anyway.
Still I would appreciate it if someone familiar with the Android port could take a look at this, as I might have overlooked something.","btw, the LocationListener leak has been there all the time, not something introduced by the changes in this PR. Most devices don’t log it but one of the emulators I tested on did, which likely is why it went unnoticed. Also it is not critical, as we would release the LocationListener only upon closing Navit (and at that point the OS does that for us anyway).
Recreating the activity is also nothing new, except that split-screen mode exacerbates the issues (especially with a lot of cached traffic reports). I would therefore propose looking into reusing the activity in a second step, and in the meantime merge this PR as-is (as it also fixes some potential issues with transparent/translucent navigation bars).",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,745,2019-02-04T18:29:50Z,2019-02-19T20:37:57Z,2019-02-19T21:03:43Z,MERGED,True,188,106,2,https://github.com/mvglasow,Make Navit work in split screen mode,3,[],https://github.com/navit-gps/navit/pull/745,https://github.com/mvglasow,9,https://github.com/navit-gps/navit/pull/745#issuecomment-461782247,"According to blame, this particular chunk of code was added by Rikky (who seems to be no longer active) in 2011, and seemed to be a precautionary measure to prevent unclean shutdowns.
However, this prevented Navit from resizing properly, as resizing destroys the activity and then recreates it—the latter being prevented by Navit exiting. This explains why Navit would not work in multi-window mode. (Tested on Anbox, where this change will make Navit resize properly rather than exiting on any attempt to change the window size.)
Most likely we do not need that precautionary measure any longer: 85b9d5d already replaced the call to finish() in the Navit#exit() method with a call to NavitDestroy() (to prevent unclean shutdowns), and any non-Android quit operation should cause the process to exit anyway.
Still I would appreciate it if someone familiar with the Android port could take a look at this, as I might have overlooked something.","Taking a closer look, I see the activity is set to be preserved, and adding extra debug output reveals that Android appears to honor that. However, I see that cached traffic messages are getting re-read when the configuration changes. Possibly the activity unnecessarily goes through startup stuff on a config change.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,745,2019-02-04T18:29:50Z,2019-02-19T20:37:57Z,2019-02-19T21:03:43Z,MERGED,True,188,106,2,https://github.com/mvglasow,Make Navit work in split screen mode,3,[],https://github.com/navit-gps/navit/pull/745,https://github.com/mvglasow,10,https://github.com/navit-gps/navit/pull/745#issuecomment-461796913,"According to blame, this particular chunk of code was added by Rikky (who seems to be no longer active) in 2011, and seemed to be a precautionary measure to prevent unclean shutdowns.
However, this prevented Navit from resizing properly, as resizing destroys the activity and then recreates it—the latter being prevented by Navit exiting. This explains why Navit would not work in multi-window mode. (Tested on Anbox, where this change will make Navit resize properly rather than exiting on any attempt to change the window size.)
Most likely we do not need that precautionary measure any longer: 85b9d5d already replaced the call to finish() in the Navit#exit() method with a call to NavitDestroy() (to prevent unclean shutdowns), and any non-Android quit operation should cause the process to exit anyway.
Still I would appreciate it if someone familiar with the Android port could take a look at this, as I might have overlooked something.","Actually… not quite. onConfiguration() gets called twice, but almost immediately after, I see a call to onDestroy(), followed by a call to onCreate() during which getChangingConfigurations() returns 0.
That is, the activity is notified of the configuration change, but then gets destroyed and recreated for no apparent configuration change.
That leaves us with two options: either dig deeper and figure out why this activity is getting destroyed, or simply let it happen and ensure we preserve its state across instances. The latter would also help should there be some configuration changes which we can’t handle properly.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,745,2019-02-04T18:29:50Z,2019-02-19T20:37:57Z,2019-02-19T21:03:43Z,MERGED,True,188,106,2,https://github.com/mvglasow,Make Navit work in split screen mode,3,[],https://github.com/navit-gps/navit/pull/745,https://github.com/mvglasow,11,https://github.com/navit-gps/navit/pull/745#issuecomment-464510985,"According to blame, this particular chunk of code was added by Rikky (who seems to be no longer active) in 2011, and seemed to be a precautionary measure to prevent unclean shutdowns.
However, this prevented Navit from resizing properly, as resizing destroys the activity and then recreates it—the latter being prevented by Navit exiting. This explains why Navit would not work in multi-window mode. (Tested on Anbox, where this change will make Navit resize properly rather than exiting on any attempt to change the window size.)
Most likely we do not need that precautionary measure any longer: 85b9d5d already replaced the call to finish() in the Navit#exit() method with a call to NavitDestroy() (to prevent unclean shutdowns), and any non-Android quit operation should cause the process to exit anyway.
Still I would appreciate it if someone familiar with the Android port could take a look at this, as I might have overlooked something.","I had another look at the initialization stuff on Android. On Anbox I see the main activity gets destroyed and recreated already during startup, so I am inclined to just accept this is going to happen (basically, this seems to be what the Android docs say: be prepared for your activity to get destroyed and recreated any moment).
Most Navit members are already static and would survive recreation; those few which are not are related to the activity itself, and it makes sense to reinitialize them. Most of that happens in Navit#onCreate(); the method body contains only calls which are either required after an instance recreation (as they requery parameters which may have changed) or are very quick.
Ultimately, the method calls through to Navit#NavitMain(), a native method. As above, most calls in the method body are fairly quick, the only exception being the call to main_real().
main_real() is the all-platform entry point to Navit. Among others, it initializes all plugins and eventually starts the main event loop. This is the stuff that takes long and shouldn’t be necessary twice on Android.
I then did the following:

initialize the static member Navit.navit to null
in Navit#onCreate(), check if navit is null: if yes, we are starting from scratch; else we are just recreating the activity.
add a boolean argument to Navit#NavitMain() which is true on launch, false when called for a recreated activity
in Navit#NavitMain(), skip the call to main_real() unless we are starting from scratch
in the same place, call event_main_loop_run() instead of main_real() for activity recreation
in Navit#onActivityResult(), add a check to ensure ActivityResult is non-null before invoking its event handler

Alas, this does not work. I just get a black window, but I don’t know what I missed. Any help would be appreciated.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,745,2019-02-04T18:29:50Z,2019-02-19T20:37:57Z,2019-02-19T21:03:43Z,MERGED,True,188,106,2,https://github.com/mvglasow,Make Navit work in split screen mode,3,[],https://github.com/navit-gps/navit/pull/745,https://github.com/mvglasow,12,https://github.com/navit-gps/navit/pull/745#issuecomment-465300112,"According to blame, this particular chunk of code was added by Rikky (who seems to be no longer active) in 2011, and seemed to be a precautionary measure to prevent unclean shutdowns.
However, this prevented Navit from resizing properly, as resizing destroys the activity and then recreates it—the latter being prevented by Navit exiting. This explains why Navit would not work in multi-window mode. (Tested on Anbox, where this change will make Navit resize properly rather than exiting on any attempt to change the window size.)
Most likely we do not need that precautionary measure any longer: 85b9d5d already replaced the call to finish() in the Navit#exit() method with a call to NavitDestroy() (to prevent unclean shutdowns), and any non-Android quit operation should cause the process to exit anyway.
Still I would appreciate it if someone familiar with the Android port could take a look at this, as I might have overlooked something.","I’m merging the changes as they fix something that is definitely broken. This does exacerbate the startup bug, but the latter bug has been there all along, and is only an issue in those use cases which, as of now, are completely broken—that is, while the result is still not perfect, nothing will change for the worse.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,745,2019-02-04T18:29:50Z,2019-02-19T20:37:57Z,2019-02-19T21:03:43Z,MERGED,True,188,106,2,https://github.com/mvglasow,Make Navit work in split screen mode,3,[],https://github.com/navit-gps/navit/pull/745,https://github.com/jkoan,13,https://github.com/navit-gps/navit/pull/745#issuecomment-465301023,"According to blame, this particular chunk of code was added by Rikky (who seems to be no longer active) in 2011, and seemed to be a precautionary measure to prevent unclean shutdowns.
However, this prevented Navit from resizing properly, as resizing destroys the activity and then recreates it—the latter being prevented by Navit exiting. This explains why Navit would not work in multi-window mode. (Tested on Anbox, where this change will make Navit resize properly rather than exiting on any attempt to change the window size.)
Most likely we do not need that precautionary measure any longer: 85b9d5d already replaced the call to finish() in the Navit#exit() method with a call to NavitDestroy() (to prevent unclean shutdowns), and any non-Android quit operation should cause the process to exit anyway.
Still I would appreciate it if someone familiar with the Android port could take a look at this, as I might have overlooked something.",Thanks for taking care of this and the other Android stuff like F-Droid :-),True,{}
navit-gps/navit,https://github.com/navit-gps/navit,745,2019-02-04T18:29:50Z,2019-02-19T20:37:57Z,2019-02-19T21:03:43Z,MERGED,True,188,106,2,https://github.com/mvglasow,Make Navit work in split screen mode,3,[],https://github.com/navit-gps/navit/pull/745,https://github.com/mvglasow,14,https://github.com/navit-gps/navit/pull/745#issuecomment-465303949,"According to blame, this particular chunk of code was added by Rikky (who seems to be no longer active) in 2011, and seemed to be a precautionary measure to prevent unclean shutdowns.
However, this prevented Navit from resizing properly, as resizing destroys the activity and then recreates it—the latter being prevented by Navit exiting. This explains why Navit would not work in multi-window mode. (Tested on Anbox, where this change will make Navit resize properly rather than exiting on any attempt to change the window size.)
Most likely we do not need that precautionary measure any longer: 85b9d5d already replaced the call to finish() in the Navit#exit() method with a call to NavitDestroy() (to prevent unclean shutdowns), and any non-Android quit operation should cause the process to exit anyway.
Still I would appreciate it if someone familiar with the Android port could take a look at this, as I might have overlooked something.","@jkoan I am just working on a separate issue for the startup bug and will post the link here. If you have anything to contribute, that would be much appreciated, as I currently feel I’m at the end of my wits…",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,745,2019-02-04T18:29:50Z,2019-02-19T20:37:57Z,2019-02-19T21:03:43Z,MERGED,True,188,106,2,https://github.com/mvglasow,Make Navit work in split screen mode,3,[],https://github.com/navit-gps/navit/pull/745,https://github.com/mvglasow,15,https://github.com/navit-gps/navit/pull/745#issuecomment-465308862,"According to blame, this particular chunk of code was added by Rikky (who seems to be no longer active) in 2011, and seemed to be a precautionary measure to prevent unclean shutdowns.
However, this prevented Navit from resizing properly, as resizing destroys the activity and then recreates it—the latter being prevented by Navit exiting. This explains why Navit would not work in multi-window mode. (Tested on Anbox, where this change will make Navit resize properly rather than exiting on any attempt to change the window size.)
Most likely we do not need that precautionary measure any longer: 85b9d5d already replaced the call to finish() in the Navit#exit() method with a call to NavitDestroy() (to prevent unclean shutdowns), and any non-Android quit operation should cause the process to exit anyway.
Still I would appreciate it if someone familiar with the Android port could take a look at this, as I might have overlooked something.",#750 deals with the Android startup bug.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,746,2019-02-05T17:54:45Z,2019-02-05T17:55:11Z,2019-02-05T17:55:11Z,MERGED,True,5,18,3,https://github.com/mvglasow,Android build chain updates,3,[],https://github.com/navit-gps/navit/pull/746,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/746,"Add $ANDROID_HOME/tools/bin to PATH
Remove build_android_arm.sh (no longer needed, use build_android.sh instead)
Remove CircleCI step build_android_arm to build_android (as it will build for whatever platforms are configured in build.gradle, currently arm and x86)","Add $ANDROID_HOME/tools/bin to PATH
Remove build_android_arm.sh (no longer needed, use build_android.sh instead)
Remove CircleCI step build_android_arm to build_android (as it will build for whatever platforms are configured in build.gradle, currently arm and x86)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,749,2019-02-18T22:22:38Z,2019-02-19T09:02:34Z,2019-03-24T20:56:19Z,MERGED,True,4,0,1,https://github.com/charlescurley,"patch:vehicle:gpsd allow navit to use gpsd API version 7 and higher, …",1,[],https://github.com/navit-gps/navit/pull/749,https://github.com/charlescurley,1,https://github.com/navit-gps/navit/pull/749,"…which have an API change.
modified:   navit/vehicle/gpsd/vehicle_gpsd.c

Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://wiki.navit-project.org/index.php/Commit_guidelines
and that your code is compliant with out coding style guidelines:
https://wiki.navit-project.org/index.php/Programming_guidelines","…which have an API change.
modified:   navit/vehicle/gpsd/vehicle_gpsd.c

Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://wiki.navit-project.org/index.php/Commit_guidelines
and that your code is compliant with out coding style guidelines:
https://wiki.navit-project.org/index.php/Programming_guidelines",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,749,2019-02-18T22:22:38Z,2019-02-19T09:02:34Z,2019-03-24T20:56:19Z,MERGED,True,4,0,1,https://github.com/charlescurley,"patch:vehicle:gpsd allow navit to use gpsd API version 7 and higher, …",1,[],https://github.com/navit-gps/navit/pull/749,https://github.com/charlescurley,2,https://github.com/navit-gps/navit/pull/749#issuecomment-464911381,"…which have an API change.
modified:   navit/vehicle/gpsd/vehicle_gpsd.c

Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://wiki.navit-project.org/index.php/Commit_guidelines
and that your code is compliant with out coding style guidelines:
https://wiki.navit-project.org/index.php/Programming_guidelines","All checks passed, including the one that blocked issue #749. Is there any reason not to merge this pull request?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,749,2019-02-18T22:22:38Z,2019-02-19T09:02:34Z,2019-03-24T20:56:19Z,MERGED,True,4,0,1,https://github.com/charlescurley,"patch:vehicle:gpsd allow navit to use gpsd API version 7 and higher, …",1,[],https://github.com/navit-gps/navit/pull/749,https://github.com/jkoan,3,https://github.com/navit-gps/navit/pull/749#issuecomment-465047081,"…which have an API change.
modified:   navit/vehicle/gpsd/vehicle_gpsd.c

Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://wiki.navit-project.org/index.php/Commit_guidelines
and that your code is compliant with out coding style guidelines:
https://wiki.navit-project.org/index.php/Programming_guidelines",No there isn't ;),True,{}
navit-gps/navit,https://github.com/navit-gps/navit,753,2019-02-20T21:33:51Z,2019-02-21T18:35:09Z,2019-02-25T09:51:15Z,MERGED,True,125,4,2,https://github.com/OLFDB,Add:gui/internal: Greek keyboard,9,[],https://github.com/navit-gps/navit/pull/753,https://github.com/OLFDB,1,https://github.com/navit-gps/navit/pull/753,Add:gui/internal: Greek keyboard,Add:gui/internal: Greek keyboard,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,753,2019-02-20T21:33:51Z,2019-02-21T18:35:09Z,2019-02-25T09:51:15Z,MERGED,True,125,4,2,https://github.com/OLFDB,Add:gui/internal: Greek keyboard,9,[],https://github.com/navit-gps/navit/pull/753,https://github.com/mvglasow,2,https://github.com/navit-gps/navit/pull/753#issuecomment-465770271,Add:gui/internal: Greek keyboard,"Can I ask you to rework your code?
You are reformatting the code in a number of places, making it very hard to see what has changed. If you feel sections of the code need to be reformatted, please do so in a separate commit and make it clear in the commit message that this is a mere refactoring, with no functionality changed.
Also, I see you have changed some Doxygen comments (starting with /** or /**<) into regular ones, meaning that the respective declarations will no longer appear in the documentation. Please refrain from doing that—we are working hard on documenting our code. (While I am aware of the argument that the source code should be self-explanatory, there are limits to that. Even well-written code can only explain what you are doing, but not why you are doing it.)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,753,2019-02-20T21:33:51Z,2019-02-21T18:35:09Z,2019-02-25T09:51:15Z,MERGED,True,125,4,2,https://github.com/OLFDB,Add:gui/internal: Greek keyboard,9,[],https://github.com/navit-gps/navit/pull/753,https://github.com/mvglasow,3,https://github.com/navit-gps/navit/pull/753#issuecomment-466114321,Add:gui/internal: Greek keyboard,Looks better now. Thanks!,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,753,2019-02-20T21:33:51Z,2019-02-21T18:35:09Z,2019-02-25T09:51:15Z,MERGED,True,125,4,2,https://github.com/OLFDB,Add:gui/internal: Greek keyboard,9,[],https://github.com/navit-gps/navit/pull/753,https://github.com/lains,4,https://github.com/navit-gps/navit/pull/753#issuecomment-466946690,Add:gui/internal: Greek keyboard,"Hello @OLFDB, thanks for your nice work.
Please do not hesitate to help us improve also the doxygen comments by submitting a separate PR as @mvglasow mentionned.
There are many functions, enums, structs etc. that are not yet documented.
The result of doxygen generation of the code is available here.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,754,2019-02-21T01:51:43Z,2019-02-22T22:16:36Z,2019-02-25T09:36:05Z,MERGED,True,98,48,8,https://github.com/mvglasow,Android: Do not reinitialize everything when the activity is recreated,3,[],https://github.com/navit-gps/navit/pull/754,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/754,"Fixes #750. This significantly improves performance when the window dimensions change (as happens when entering or leaving split-screen mode, or when rotating the device), and also fixes some resource leaks and potentially a race condition.
Developed and tested on Anbox, as well as some brief tests on a real device.","Fixes #750. This significantly improves performance when the window dimensions change (as happens when entering or leaving split-screen mode, or when rotating the device), and also fixes some resource leaks and potentially a race condition.
Developed and tested on Anbox, as well as some brief tests on a real device.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,754,2019-02-21T01:51:43Z,2019-02-22T22:16:36Z,2019-02-25T09:36:05Z,MERGED,True,98,48,8,https://github.com/mvglasow,Android: Do not reinitialize everything when the activity is recreated,3,[],https://github.com/navit-gps/navit/pull/754,https://github.com/mvglasow,2,https://github.com/navit-gps/navit/pull/754#issuecomment-465831069,"Fixes #750. This significantly improves performance when the window dimensions change (as happens when entering or leaving split-screen mode, or when rotating the device), and also fixes some resource leaks and potentially a race condition.
Developed and tested on Anbox, as well as some brief tests on a real device.","Dunno why CircleCI isn’t running on the PR, but the run on my branch has been successful.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,754,2019-02-21T01:51:43Z,2019-02-22T22:16:36Z,2019-02-25T09:36:05Z,MERGED,True,98,48,8,https://github.com/mvglasow,Android: Do not reinitialize everything when the activity is recreated,3,[],https://github.com/navit-gps/navit/pull/754,https://github.com/mvglasow,3,https://github.com/navit-gps/navit/pull/754#issuecomment-466108630,"Fixes #750. This significantly improves performance when the window dimensions change (as happens when entering or leaving split-screen mode, or when rotating the device), and also fixes some resource leaks and potentially a race condition.
Developed and tested on Anbox, as well as some brief tests on a real device.","Tested on a real device today, Navit keeps running and receiving location updates after switching to split screen and back. Response is almost instant, certainly faster than before. Ready to merge from my side.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,754,2019-02-21T01:51:43Z,2019-02-22T22:16:36Z,2019-02-25T09:36:05Z,MERGED,True,98,48,8,https://github.com/mvglasow,Android: Do not reinitialize everything when the activity is recreated,3,[],https://github.com/navit-gps/navit/pull/754,https://github.com/mvglasow,4,https://github.com/navit-gps/navit/pull/754#issuecomment-466213742,"Fixes #750. This significantly improves performance when the window dimensions change (as happens when entering or leaving split-screen mode, or when rotating the device), and also fixes some resource leaks and potentially a race condition.
Developed and tested on Anbox, as well as some brief tests on a real device.","Last commit is for the pedestrian plugin (if anyone still uses that…), not tested beyond a quick glance at the code and ensuring the thing builds",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,754,2019-02-21T01:51:43Z,2019-02-22T22:16:36Z,2019-02-25T09:36:05Z,MERGED,True,98,48,8,https://github.com/mvglasow,Android: Do not reinitialize everything when the activity is recreated,3,[],https://github.com/navit-gps/navit/pull/754,https://github.com/lains,5,https://github.com/navit-gps/navit/pull/754#issuecomment-466941706,"Fixes #750. This significantly improves performance when the window dimensions change (as happens when entering or leaving split-screen mode, or when rotating the device), and also fixes some resource leaks and potentially a race condition.
Developed and tested on Anbox, as well as some brief tests on a real device.","Nice work, I will soon rebase my current workspace, build and try this!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,755,2019-02-24T07:39:00Z,2019-03-03T14:49:58Z,2019-03-03T14:49:58Z,CLOSED,False,49,2,4,https://github.com/OLFDB, FIX:DTD <navit> ,18,[],https://github.com/navit-gps/navit/pull/755,https://github.com/OLFDB,1,https://github.com/navit-gps/navit/pull/755,added attributes and attribute descriptions for all attributes used in navit.xml,added attributes and attribute descriptions for all attributes used in navit.xml,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,756,2019-02-25T23:57:45Z,2019-02-26T17:17:08Z,2019-02-26T17:17:08Z,MERGED,True,44,7,2,https://github.com/mvglasow,Fix:port/Android:Create notification channel on API 26+,3,[],https://github.com/navit-gps/navit/pull/756,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/756,"Fixes #640. This restores the notification icon on API 26+ (Oreo and up).
I had to change the NotificationCompat.Builder in Navit.java to Notification.Builder as the latter allows us to specify a notification channel on API26+. NotificationCompat.Builder would require us to use version 26+ of the compatibility library (we currently use version 24), requiring us to increase the minimum SDK version.
Notification.Builder seems to work (tested on LineageOS 15.1), so I would stick with that unless someone can give me a compelling reason why we need NotificationCompat.Builder.","Fixes #640. This restores the notification icon on API 26+ (Oreo and up).
I had to change the NotificationCompat.Builder in Navit.java to Notification.Builder as the latter allows us to specify a notification channel on API26+. NotificationCompat.Builder would require us to use version 26+ of the compatibility library (we currently use version 24), requiring us to increase the minimum SDK version.
Notification.Builder seems to work (tested on LineageOS 15.1), so I would stick with that unless someone can give me a compelling reason why we need NotificationCompat.Builder.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,756,2019-02-25T23:57:45Z,2019-02-26T17:17:08Z,2019-02-26T17:17:08Z,MERGED,True,44,7,2,https://github.com/mvglasow,Fix:port/Android:Create notification channel on API 26+,3,[],https://github.com/navit-gps/navit/pull/756,https://github.com/mvglasow,2,https://github.com/navit-gps/navit/pull/756#issuecomment-467236710,"Fixes #640. This restores the notification icon on API 26+ (Oreo and up).
I had to change the NotificationCompat.Builder in Navit.java to Notification.Builder as the latter allows us to specify a notification channel on API26+. NotificationCompat.Builder would require us to use version 26+ of the compatibility library (we currently use version 24), requiring us to increase the minimum SDK version.
Notification.Builder seems to work (tested on LineageOS 15.1), so I would stick with that unless someone can give me a compelling reason why we need NotificationCompat.Builder.","Found the compelling reason for NotificationCompat.Builder: it is called API 9/10, which does not support Notification.Builder. Will look into it.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,756,2019-02-25T23:57:45Z,2019-02-26T17:17:08Z,2019-02-26T17:17:08Z,MERGED,True,44,7,2,https://github.com/mvglasow,Fix:port/Android:Create notification channel on API 26+,3,[],https://github.com/navit-gps/navit/pull/756,https://github.com/mvglasow,3,https://github.com/navit-gps/navit/pull/756#issuecomment-467241106,"Fixes #640. This restores the notification icon on API 26+ (Oreo and up).
I had to change the NotificationCompat.Builder in Navit.java to Notification.Builder as the latter allows us to specify a notification channel on API26+. NotificationCompat.Builder would require us to use version 26+ of the compatibility library (we currently use version 24), requiring us to increase the minimum SDK version.
Notification.Builder seems to work (tested on LineageOS 15.1), so I would stick with that unless someone can give me a compelling reason why we need NotificationCompat.Builder.","Solved it by using NotificationCompat.Builder on API <= 25 and Notification.Builder on API 26+, should work everywhere now.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,758,2019-03-03T15:08:54Z,2019-09-25T08:34:53Z,2019-09-25T08:57:31Z,MERGED,True,40,17,2,https://github.com/OLFDB,Feature:Support USERPROFILE folder for Windows target,45,[],https://github.com/navit-gps/navit/pull/758,https://github.com/OLFDB,1,https://github.com/navit-gps/navit/pull/758,"USERPROFILE/navit is used as NAVIT_USER_DATADIR.
The windows build works with gtk_drawing_area again (msys64 with MINGW32)
navit.xml: navit tag doesn't show errors in XML editors","USERPROFILE/navit is used as NAVIT_USER_DATADIR.
The windows build works with gtk_drawing_area again (msys64 with MINGW32)
navit.xml: navit tag doesn't show errors in XML editors",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,758,2019-03-03T15:08:54Z,2019-09-25T08:34:53Z,2019-09-25T08:57:31Z,MERGED,True,40,17,2,https://github.com/OLFDB,Feature:Support USERPROFILE folder for Windows target,45,[],https://github.com/navit-gps/navit/pull/758,https://github.com/OLFDB,2,https://github.com/navit-gps/navit/pull/758#issuecomment-469543768,"USERPROFILE/navit is used as NAVIT_USER_DATADIR.
The windows build works with gtk_drawing_area again (msys64 with MINGW32)
navit.xml: navit tag doesn't show errors in XML editors",I provided a new version with expanded array and use of ~ to supply the home directory.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,758,2019-03-03T15:08:54Z,2019-09-25T08:34:53Z,2019-09-25T08:57:31Z,MERGED,True,40,17,2,https://github.com/OLFDB,Feature:Support USERPROFILE folder for Windows target,45,[],https://github.com/navit-gps/navit/pull/758,https://github.com/lains,3,https://github.com/navit-gps/navit/pull/758#issuecomment-474947790,"USERPROFILE/navit is used as NAVIT_USER_DATADIR.
The windows build works with gtk_drawing_area again (msys64 with MINGW32)
navit.xml: navit tag doesn't show errors in XML editors","@OLFDB, do you want me to test on WinCE? I have a device that I can use for testing.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,758,2019-03-03T15:08:54Z,2019-09-25T08:34:53Z,2019-09-25T08:57:31Z,MERGED,True,40,17,2,https://github.com/OLFDB,Feature:Support USERPROFILE folder for Windows target,45,[],https://github.com/navit-gps/navit/pull/758,https://github.com/OLFDB,4,https://github.com/navit-gps/navit/pull/758#issuecomment-475126544,"USERPROFILE/navit is used as NAVIT_USER_DATADIR.
The windows build works with gtk_drawing_area again (msys64 with MINGW32)
navit.xml: navit tag doesn't show errors in XML editors",Yes. Please test.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,758,2019-03-03T15:08:54Z,2019-09-25T08:34:53Z,2019-09-25T08:57:31Z,MERGED,True,40,17,2,https://github.com/OLFDB,Feature:Support USERPROFILE folder for Windows target,45,[],https://github.com/navit-gps/navit/pull/758,https://github.com/lains,5,https://github.com/navit-gps/navit/pull/758#issuecomment-478253847,"USERPROFILE/navit is used as NAVIT_USER_DATADIR.
The windows build works with gtk_drawing_area again (msys64 with MINGW32)
navit.xml: navit tag doesn't show errors in XML editors","There are compilation warnings for WinCE:
warning: extra tokens at end of #ifdef directive
Because the compiler does not like:
#ifdef HAVE_API_WIN32_BASE && HAVE_API_WIN32_CE

and would require instead:
#if defined(HAVE_API_WIN32_BASE) && defined(HAVE_API_WIN32_CE)",True,{'THUMBS_UP': ['https://github.com/jkoan']}
navit-gps/navit,https://github.com/navit-gps/navit,758,2019-03-03T15:08:54Z,2019-09-25T08:34:53Z,2019-09-25T08:57:31Z,MERGED,True,40,17,2,https://github.com/OLFDB,Feature:Support USERPROFILE folder for Windows target,45,[],https://github.com/navit-gps/navit/pull/758,https://github.com/lains,6,https://github.com/navit-gps/navit/pull/758#issuecomment-484600865,"USERPROFILE/navit is used as NAVIT_USER_DATADIR.
The windows build works with gtk_drawing_area again (msys64 with MINGW32)
navit.xml: navit tag doesn't show errors in XML editors","I confirm that there are preprocessor errors on the WinCE build due to using #ifdef instead of #if defined()
This can also be seen on Continuous Integration logs at https://circleci.com/gh/OLFDB/navit/75?utm_campaign=vcs-integration-link&utm_medium=referral&utm_source=github-build-link
I used the following changes in order to fix these preprocessor errors:
diff --git a/navit/main.c b/navit/main.c
index 053070c51..315bb7a8e 100644
--- a/navit/main.c
+++ b/navit/main.c
@@ -114,7 +114,7 @@ static void main_setup_environment(int mode) {
                     val=g_strdup_printf(""%s%s"", getenv(""NAVIT_PREFIX""), val+1);
                 break;
             case '~':
-#ifdef HAVE_API_WIN32_BASE && !HAVE_API_WIN32_CE
+#if defined(HAVE_API_WIN32_BASE) && !defined(HAVE_API_WIN32_CE)
                 homedir=getenv(""USERPROFILE"");
 #else
                 homedir=getenv(""HOME"");
@@ -132,7 +132,7 @@ static void main_setup_environment(int mode) {
         }
         i++;
     }
-#ifdef HAVE_API_WIN32_BASE && !HAVE_API_WIN32_CE
+#if defined(HAVE_API_WIN32_BASE) && !defined(HAVE_API_WIN32_CE)
     navit_get_user_data_directory(1); /* Create the user data directory */
 #endif
 }
@@ -383,11 +383,11 @@ void main_init(const char *program) {
             } else
                 setenv(""NAVIT_PREFIX"", PREFIX, 0);
         }
-#ifdef HAVE_API_ANDROID
+# ifdef HAVE_API_ANDROID
         main_setup_environment(3);
-#else
+# else
         main_setup_environment(1);
-#endif
+# endif
     }
 
 #else          /* _WIN32 || _WIN32_WCE */
@@ -397,12 +397,12 @@ void main_init(const char *program) {
         int len;
 
         *filename = '\0';
-#ifdef _UNICODE                /* currently for wince */
+# ifdef _UNICODE               /* currently for wince */
         if (GetModuleFileNameW(NULL, wfilename, MAX_PATH)) {
             wcstombs(filename, wfilename, MAX_PATH);
-#else
+# else
         if (GetModuleFileName(NULL, filename, MAX_PATH)) {
-#endif
+# endif
             end = strrchr(filename, L'\\');    /* eliminate the file name which is on the right side */
             if(end)
                 *end = '\0';
@@ -415,12 +415,21 @@ void main_init(const char *program) {
     }
     if (!getenv(""HOME""))
         setenv(""HOME"", getenv(""NAVIT_PREFIX""), 0);
-#ifdef HAVE_API_WIN32_BASE && !HAVE_API_WIN32_CE
+# if defined(HAVE_API_WIN32_BASE) && !defined(HAVE_API_WIN32_CE)
     main_setup_environment(4);
-#endif
-#ifdef HAVE_API_WIN32_CE && !HAVE_API_WIN32_BASE
+# else /* not (defined(HAVE_API_WIN32_BASE) && !defined(HAVE_API_WIN32_CE)) */
+#  if defined(HAVE_API_WIN32_CE) && !defined(HAVE_API_WIN32_BASE)
     main_setup_environment(2);
-#endif
+#  else /* not (defined(HAVE_API_WIN32_CE) && !defined(HAVE_API_WIN32_BASE)) */
+#   if defined(HAVE_API_WIN32_CE)
+#    warning HAVE_API_WIN32_CE is defined
+#   endif
+#   if defined(HAVE_API_WIN32_BASE)
+#    warning HAVE_API_WIN32_BASE is defined
+#   endif
+#   error Exactly only one directive amongst HAVE_API_WIN32_CE or HAVE_API_WIN32_BASE should be defined when preprocessor reach this section of code
+#  endif
+# endif
 #endif /* _WIN32 || _WIN32_WCE */
 
     s = getenv(""NAVIT_WID"");


But I end up with:
/navit-wince/navit/main.c:425:2: warning: #warning HAVE_API_WIN32_CE is defined
/navit-wince/navit/main.c:428:2: warning: #warning HAVE_API_WIN32_BASE is defined
/navit-wince/navit/main.c:430:2: error: #error Exactly only one directive amongst HAVE_API_WIN32_CE or HAVE_API_WIN32_BASE should be defined when preprocessor reach this section of code
make[2]: *** [navit/CMakeFiles/navit_core.dir/main.c.obj] Error 1
make[1]: *** [navit/CMakeFiles/navit_core.dir/all] Error 2
make: *** [all] Error 2

So it seems that both HAVE_API_WIN32_CE and HAVE_API_WIN32_BASE can exist simultaneously (this happened on docker image docker navit/dockerfiles:wince)
@OLFDB, do you want me to add the changes above to the PR (if I manage)?
Do you know what could lead to HAVE_API_WIN32_CE and HAVE_API_WIN32_BASE be defined simultaneously?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,758,2019-03-03T15:08:54Z,2019-09-25T08:34:53Z,2019-09-25T08:57:31Z,MERGED,True,40,17,2,https://github.com/OLFDB,Feature:Support USERPROFILE folder for Windows target,45,[],https://github.com/navit-gps/navit/pull/758,https://github.com/OLFDB,7,https://github.com/navit-gps/navit/pull/758#issuecomment-486077580,"USERPROFILE/navit is used as NAVIT_USER_DATADIR.
The windows build works with gtk_drawing_area again (msys64 with MINGW32)
navit.xml: navit tag doesn't show errors in XML editors","Thank you for testing it. Yes, I would like you to implement the changes.
See the CMakeLists.txt in the navit directory. It is possible to have HAVE_API_WIN32_BASE and HAVE_API_WIN32_CE set both.
if(WIN32 OR WINCE)
        SET(CMAKE_EXECUTABLE_SUFFIX "".exe"")
        add_module(graphics/win32 ""Windows detected"" TRUE)
        add_plugin(support/win32 ""Windows detected"" TRUE)

        SET(CMAKE_RC_COMPILE_OBJECT ""<CMAKE_RC_COMPILER> -O coff -I ${CMAKE_CURRENT_SOURCE_DIR}/navit/gui/win32/resources <DEFINES> -i <SOURCE> -o <OBJECT>"")
        set_with_reason(binding/win32 ""Windows detected"" TRUE)

        # vehicle_file is broken for windows. use vehicle_wince instead
        # whicle_wince isn't buildable on non-CE windows ssytems

        # plugins currently not supported on windows
        set_with_reason(USE_PLUGINS ""win32: currently not supported"" FALSE)

        set(HAVE_API_WIN32_BASE 1)

So the HAVE_API_WIN32_BASE define has to be changed to HAVE_API_WIN32 to have exclusive defines.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,758,2019-03-03T15:08:54Z,2019-09-25T08:34:53Z,2019-09-25T08:57:31Z,MERGED,True,40,17,2,https://github.com/OLFDB,Feature:Support USERPROFILE folder for Windows target,45,[],https://github.com/navit-gps/navit/pull/758,https://github.com/lains,8,https://github.com/navit-gps/navit/pull/758#issuecomment-487726965,"USERPROFILE/navit is used as NAVIT_USER_DATADIR.
The windows build works with gtk_drawing_area again (msys64 with MINGW32)
navit.xml: navit tag doesn't show errors in XML editors","Yes @OLFDB, you're right. The mutually exclusive defines are HAVE_API_WIN32 and HAVE_API_WIN32_CE.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,758,2019-03-03T15:08:54Z,2019-09-25T08:34:53Z,2019-09-25T08:57:31Z,MERGED,True,40,17,2,https://github.com/OLFDB,Feature:Support USERPROFILE folder for Windows target,45,[],https://github.com/navit-gps/navit/pull/758,https://github.com/lains,9,https://github.com/navit-gps/navit/pull/758#issuecomment-502031012,"USERPROFILE/navit is used as NAVIT_USER_DATADIR.
The windows build works with gtk_drawing_area again (msys64 with MINGW32)
navit.xml: navit tag doesn't show errors in XML editors","What shall we do with this PR?
It affects Windows and WinCE.
Can someone building and testing on these platforms check that this is working as expected?
I have a WinCE device if test is needed...
Shall we merge?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,758,2019-03-03T15:08:54Z,2019-09-25T08:34:53Z,2019-09-25T08:57:31Z,MERGED,True,40,17,2,https://github.com/OLFDB,Feature:Support USERPROFILE folder for Windows target,45,[],https://github.com/navit-gps/navit/pull/758,https://github.com/pgrandin,10,https://github.com/navit-gps/navit/pull/758#issuecomment-506981806,"USERPROFILE/navit is used as NAVIT_USER_DATADIR.
The windows build works with gtk_drawing_area again (msys64 with MINGW32)
navit.xml: navit tag doesn't show errors in XML editors","It looks like there's some conflicts that need to be fixed.
@lains did you know that you can pull the build artifacts from here if you want to test them locally?
Click on a build details on the checks list, and then go to the Artifact tab :",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,758,2019-03-03T15:08:54Z,2019-09-25T08:34:53Z,2019-09-25T08:57:31Z,MERGED,True,40,17,2,https://github.com/OLFDB,Feature:Support USERPROFILE folder for Windows target,45,[],https://github.com/navit-gps/navit/pull/758,https://github.com/lains,11,https://github.com/navit-gps/navit/pull/758#issuecomment-507012845,"USERPROFILE/navit is used as NAVIT_USER_DATADIR.
The windows build works with gtk_drawing_area again (msys64 with MINGW32)
navit.xml: navit tag doesn't show errors in XML editors","Hello @pgrandin, thanks for the tip on CircleCI.
I probably miss some access rights because I have only 4 tabs displayed in CircleCI, but no Artifacts:

Test Summary
Configuration
Timing
Parameters

Pulling the build result would be very helpful for me for other PRs.
Concerning this PR, I did code some review and associated compilation fix for WinCE, but I don't really know what I intended to fix or add for Windows build, but it seems it also adds code for Apple, and currently seems to break WinCE build (see https://github.com/navit-gps/navit/pull/758/files#r298820399).
I am thus not sure if this works as intended or not, but rather checking that it's not breaking other things.
@OLFDB, can you give more details on the aim of this code?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,758,2019-03-03T15:08:54Z,2019-09-25T08:34:53Z,2019-09-25T08:57:31Z,MERGED,True,40,17,2,https://github.com/OLFDB,Feature:Support USERPROFILE folder for Windows target,45,[],https://github.com/navit-gps/navit/pull/758,https://github.com/lains,12,https://github.com/navit-gps/navit/pull/758#issuecomment-515671203,"USERPROFILE/navit is used as NAVIT_USER_DATADIR.
The windows build works with gtk_drawing_area again (msys64 with MINGW32)
navit.xml: navit tag doesn't show errors in XML editors","Was it tested successfully on Windows?
I can retest for WinCE if needed.
If everything OK, shall we merge?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,758,2019-03-03T15:08:54Z,2019-09-25T08:34:53Z,2019-09-25T08:57:31Z,MERGED,True,40,17,2,https://github.com/OLFDB,Feature:Support USERPROFILE folder for Windows target,45,[],https://github.com/navit-gps/navit/pull/758,https://github.com/pgrandin,13,https://github.com/navit-gps/navit/pull/758#issuecomment-522092597,"USERPROFILE/navit is used as NAVIT_USER_DATADIR.
The windows build works with gtk_drawing_area again (msys64 with MINGW32)
navit.xml: navit tag doesn't show errors in XML editors","I'm updating the code with trunk changes, and if we can get some reports about windows/wince platform I think that we can merge it?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,758,2019-03-03T15:08:54Z,2019-09-25T08:34:53Z,2019-09-25T08:57:31Z,MERGED,True,40,17,2,https://github.com/OLFDB,Feature:Support USERPROFILE folder for Windows target,45,[],https://github.com/navit-gps/navit/pull/758,https://github.com/lains,14,https://github.com/navit-gps/navit/pull/758#issuecomment-522294274,"USERPROFILE/navit is used as NAVIT_USER_DATADIR.
The windows build works with gtk_drawing_area again (msys64 with MINGW32)
navit.xml: navit tag doesn't show errors in XML editors","Hi, next week, I am planning to retest this PR on a WinCE platform (and I will also test the new changes in build process for WinCE at the same time).
If someone can test the impact of this PR on a Windows32 platform...",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,758,2019-03-03T15:08:54Z,2019-09-25T08:34:53Z,2019-09-25T08:57:31Z,MERGED,True,40,17,2,https://github.com/OLFDB,Feature:Support USERPROFILE folder for Windows target,45,[],https://github.com/navit-gps/navit/pull/758,https://github.com/lains,15,https://github.com/navit-gps/navit/pull/758#issuecomment-523491698,"USERPROFILE/navit is used as NAVIT_USER_DATADIR.
The windows build works with gtk_drawing_area again (msys64 with MINGW32)
navit.xml: navit tag doesn't show errors in XML editors","Tested today on WinCE.
Navit binary successfully found map and layouts so I assume path are correct on WinCE.
Anyone able to test on Windows?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,758,2019-03-03T15:08:54Z,2019-09-25T08:34:53Z,2019-09-25T08:57:31Z,MERGED,True,40,17,2,https://github.com/OLFDB,Feature:Support USERPROFILE folder for Windows target,45,[],https://github.com/navit-gps/navit/pull/758,https://github.com/jandegr,16,https://github.com/navit-gps/navit/pull/758#issuecomment-527450727,"USERPROFILE/navit is used as NAVIT_USER_DATADIR.
The windows build works with gtk_drawing_area again (msys64 with MINGW32)
navit.xml: navit tag doesn't show errors in XML editors","Works perfectly on windows 10 and just happens to look in exactly the same path as I made my own windows10-64 build look for xml long time ago, so I can now have navit-gps32 and my own 64bit version on the same box and use the same xml. Changes like this from @OLFDB is what navit needs for the windows port. The new generation of Navit folks have neglected the windows port for too long.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,758,2019-03-03T15:08:54Z,2019-09-25T08:34:53Z,2019-09-25T08:57:31Z,MERGED,True,40,17,2,https://github.com/OLFDB,Feature:Support USERPROFILE folder for Windows target,45,[],https://github.com/navit-gps/navit/pull/758,https://github.com/jandegr,17,https://github.com/navit-gps/navit/pull/758#issuecomment-533861062,"USERPROFILE/navit is used as NAVIT_USER_DATADIR.
The windows build works with gtk_drawing_area again (msys64 with MINGW32)
navit.xml: navit tag doesn't show errors in XML editors","*** bump ***
AFAIK all it takes is rebase-merge and done.
thx",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,758,2019-03-03T15:08:54Z,2019-09-25T08:34:53Z,2019-09-25T08:57:31Z,MERGED,True,40,17,2,https://github.com/OLFDB,Feature:Support USERPROFILE folder for Windows target,45,[],https://github.com/navit-gps/navit/pull/758,https://github.com/lains,18,https://github.com/navit-gps/navit/pull/758#issuecomment-534896351,"USERPROFILE/navit is used as NAVIT_USER_DATADIR.
The windows build works with gtk_drawing_area again (msys64 with MINGW32)
navit.xml: navit tag doesn't show errors in XML editors",Rebasing...,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,758,2019-03-03T15:08:54Z,2019-09-25T08:34:53Z,2019-09-25T08:57:31Z,MERGED,True,40,17,2,https://github.com/OLFDB,Feature:Support USERPROFILE folder for Windows target,45,[],https://github.com/navit-gps/navit/pull/758,https://github.com/lains,19,https://github.com/navit-gps/navit/pull/758#issuecomment-534913343,"USERPROFILE/navit is used as NAVIT_USER_DATADIR.
The windows build works with gtk_drawing_area again (msys64 with MINGW32)
navit.xml: navit tag doesn't show errors in XML editors",Merging as it has been successfully tested on WinCE and Windows 10.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,758,2019-03-03T15:08:54Z,2019-09-25T08:34:53Z,2019-09-25T08:57:31Z,MERGED,True,40,17,2,https://github.com/OLFDB,Feature:Support USERPROFILE folder for Windows target,45,[],https://github.com/navit-gps/navit/pull/758,https://github.com/lains,20,https://github.com/navit-gps/navit/pull/758#issuecomment-534923970,"USERPROFILE/navit is used as NAVIT_USER_DATADIR.
The windows build works with gtk_drawing_area again (msys64 with MINGW32)
navit.xml: navit tag doesn't show errors in XML editors","@OLFDB, there were initially other features in this PR (see below).
Are these aimed at being merged to navit upstream:
diff --git a/navit/graphics/opengl/graphics_opengl.c b/navit/graphics/opengl/graphics_opengl.c
index 2789061f1..5f7f516ac 100644
--- a/navit/graphics/opengl/graphics_opengl.c
+++ b/navit/graphics/opengl/graphics_opengl.c
@@ -193,6 +193,7 @@ static GHashTable *hImageData;
 
 #ifdef USE_OPENGLES
 #else
+#define APIENTRY
 /*  prototypes */
 void APIENTRY tessBeginCB(GLenum which);
 void APIENTRY tessEndCB(void);
diff --git a/navit/main.c b/navit/main.c
index 898fb9dca..7a49f62ce 100644
--- a/navit/main.c
+++ b/navit/main.c
@@ -431,5 +431,8 @@ void main_init(const char *program) {
     if (s) {
         setenv(""SDL_WINDOWID"", s, 0);
     }
+#if defined(HAVE_API_WIN32) && !defined(HAVE_API_WIN32_CE) // For Windows only, excluding WinCE
+    navit_get_user_data_directory(1); /* Create the user data directory */
+#endif
 }
 
diff --git a/navit/map/binfile/CMakeLists.txt b/navit/map/binfile/CMakeLists.txt
index 62ef1326b..63ef605ac 100644
--- a/navit/map/binfile/CMakeLists.txt
+++ b/navit/map/binfile/CMakeLists.txt
@@ -1 +1,6 @@
+if(HAVE_GTK2 AND NOT MSVC)
+       #binfile for WIN32 needs -mno-ms-bitfields
+       remove_definitions(""-mms-bitfields"")
+       add_definitions(""-mno-ms-bitfields"")
+endif(HAVE_GTK2 AND NOT MSVC)
 module_add_library(map_binfile binfile.c)
diff --git a/navit/navit.dtd b/navit/navit.dtd
index 645816a93..962a78871 100644
--- a/navit/navit.dtd
+++ b/navit/navit.dtd
@@ -17,13 +17,29 @@
 <!ATTLIST log flush_size CDATA #IMPLIED>
 <!ATTLIST log flush_time CDATA #IMPLIED>
 <!ATTLIST log attr_types CDATA #IMPLIED>
-<!ELEMENT navit (graphics,gui+,log*,osd*,traffic*,vehicle*,tracking?,vehicleprofile*,route,navigation,speech,mapset+,layer+,layout+) >
+<!ELEMENT navit (center, zoom, orientation, graphics,gui+,log*,osd*,traffic*,vehicle*,
+tracking?,vehicleprofile*,route,navigation,speech,mapset+,layer+,layout+,default_layout,recent_dest,drag_bitmap) >
 <!ATTLIST navit center CDATA #REQUIRED>
 <!ATTLIST navit zoom CDATA #REQUIRED>
 <!ATTLIST navit tracking CDATA #REQUIRED>
 <!ATTLIST navit orientation CDATA #REQUIRED>
 <!ATTLIST navit recent_dest CDATA #IMPLIED>
 <!ATTLIST navit drag_bitmap CDATA #IMPLIED>
+<!ATTLIST navit default_layout CDATA #IMPLIED>
+<!ATTLIST navit  graphics CDATA #IMPLIED>
+<!ATTLIST navit  gui CDATA #IMPLIED>
+<!ATTLIST navit  log CDATA #IMPLIED>
+<!ATTLIST navit  osd CDATA #IMPLIED>
+<!ATTLIST navit  traffic CDATA #IMPLIED>
+<!ATTLIST navit  vehicle CDATA #IMPLIED>
+<!ATTLIST navit  vehicleprofile CDATA #IMPLIED>
+<!ATTLIST navit  route CDATA #IMPLIED>
+<!ATTLIST navit  navigation CDATA #IMPLIED>
+<!ATTLIST navit  speech CDATA #IMPLIED>
+<!ATTLIST navit  mapset CDATA #IMPLIED>
+<!ATTLIST navit  layer CDATA #IMPLIED>
+<!ATTLIST navit  layout CDATA #IMPLIED>
+<!ATTLIST navit  default_layout CDATA #IMPLIED>
 <!ELEMENT gui ANY>
 <!ATTLIST gui type CDATA #REQUIRED>
 <!ATTLIST gui menubar CDATA #IMPLIED>
diff --git a/navit/start_apple.m b/navit/start_apple.m
index 114fd4bbe..2cc593e98 100644
--- a/navit/start_apple.m
+++ b/navit/start_apple.m
@@ -21,6 +21,7 @@
 #import <Foundation/Foundation.h>
 #include <glib.h>
 #include <stdlib.h>
+#include ""debug.h""  /* we use debug here so include it */
 
 int
 main(int argc, char **argv)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,761,2019-03-10T20:15:04Z,2019-03-26T08:33:22Z,2019-03-28T06:19:49Z,MERGED,True,8,1,1,https://github.com/lains,Fix:Speech:Android: Replace hyphens with white spaces when using android speech,1,"['enhancement', 'android']",https://github.com/navit-gps/navit/pull/761,https://github.com/lains,1,https://github.com/navit-gps/navit/pull/761,"On some versions of Android, I found out that hyphens were pronounced textually by the speech processor.
For example, on Android 5.1, in french, I get ""Saint ... trait d'union ... Germain"" pronounced for ""Saint-Germain"".
This patches the text before getting into the speech processor, so that there are no hyphens anymore.","On some versions of Android, I found out that hyphens were pronounced textually by the speech processor.
For example, on Android 5.1, in french, I get ""Saint ... trait d'union ... Germain"" pronounced for ""Saint-Germain"".
This patches the text before getting into the speech processor, so that there are no hyphens anymore.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,766,2019-04-03T04:21:35Z,2020-01-15T19:25:34Z,2021-02-12T18:43:39Z,CLOSED,False,419,228,3,https://github.com/OLFDB,FEATURE:Read traff messages from a traff file,15,[],https://github.com/navit-gps/navit/pull/766,https://github.com/OLFDB,1,https://github.com/navit-gps/navit/pull/766,This plugin uses a traff file located in NAVIT_USER_DATADIR to read traff messages. The whole file is read once and then monitored for new messages.,This plugin uses a traff file located in NAVIT_USER_DATADIR to read traff messages. The whole file is read once and then monitored for new messages.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,766,2019-04-03T04:21:35Z,2020-01-15T19:25:34Z,2021-02-12T18:43:39Z,CLOSED,False,419,228,3,https://github.com/OLFDB,FEATURE:Read traff messages from a traff file,15,[],https://github.com/navit-gps/navit/pull/766,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/766#issuecomment-479335962,This plugin uses a traff file located in NAVIT_USER_DATADIR to read traff messages. The whole file is read once and then monitored for new messages.,"Also please take a look at the last output from ci, it hints you to fixes.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,766,2019-04-03T04:21:35Z,2020-01-15T19:25:34Z,2021-02-12T18:43:39Z,CLOSED,False,419,228,3,https://github.com/OLFDB,FEATURE:Read traff messages from a traff file,15,[],https://github.com/navit-gps/navit/pull/766,https://github.com/OLFDB,3,https://github.com/navit-gps/navit/pull/766#issuecomment-479346216,This plugin uses a traff file located in NAVIT_USER_DATADIR to read traff messages. The whole file is read once and then monitored for new messages.,"CircleCI gives a comment ""Formatted  navit/graphics/android/graphics_android.c"", but that file was not changed in this CR.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,766,2019-04-03T04:21:35Z,2020-01-15T19:25:34Z,2021-02-12T18:43:39Z,CLOSED,False,419,228,3,https://github.com/OLFDB,FEATURE:Read traff messages from a traff file,15,[],https://github.com/navit-gps/navit/pull/766,https://github.com/jkoan,4,https://github.com/navit-gps/navit/pull/766#issuecomment-479349668,This plugin uses a traff file located in NAVIT_USER_DATADIR to read traff messages. The whole file is read once and then monitored for new messages.,"I'm fine with this PR, before merging we should look at the ci and make sure that everythings okay. Even if the ci is red, I'm fine to merge this PR because it is one of the cleanest PRs we had in the last time",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,766,2019-04-03T04:21:35Z,2020-01-15T19:25:34Z,2021-02-12T18:43:39Z,CLOSED,False,419,228,3,https://github.com/OLFDB,FEATURE:Read traff messages from a traff file,15,[],https://github.com/navit-gps/navit/pull/766,https://github.com/lains,5,https://github.com/navit-gps/navit/pull/766#issuecomment-479376248,This plugin uses a traff file located in NAVIT_USER_DATADIR to read traff messages. The whole file is read once and then monitored for new messages.,"CircleCI gives a comment ""Formatted navit/graphics/android/graphics_android.c"", but that file was not changed in this CR.

Yes, this seems to be a recurrent issue with sanity check on PR. There are formatting and indentation that are rejected by sanity check, while they have actually not been modified by the PR. If someone knows how to fix this... it's probably something related to the changed files detection:

  
    
      navit/scripts/ci_sanity_checks.sh
    
    
         Line 26
      in
      7523c11
    
  
  
    

        
          
           # List the files that are different from the trunk",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,766,2019-04-03T04:21:35Z,2020-01-15T19:25:34Z,2021-02-12T18:43:39Z,CLOSED,False,419,228,3,https://github.com/OLFDB,FEATURE:Read traff messages from a traff file,15,[],https://github.com/navit-gps/navit/pull/766,https://github.com/jkoan,6,https://github.com/navit-gps/navit/pull/766#issuecomment-479384735,This plugin uses a traff file located in NAVIT_USER_DATADIR to read traff messages. The whole file is read once and then monitored for new messages.,"CircleCI gives a comment ""Formatted navit/graphics/android/graphics_android.c"", but that file was not changed in this CR.

Yes, this seems to be a recurrent issue with sanity check on PR. There are formatting and indentation that are rejected by sanity check, while they have actually not been modified by the PR. If someone knows how to fix this... it's probably something related to the changed files detection:
navit/scripts/ci_sanity_checks.sh
Line 26 in 7523c11
List the files that are different from the trunk

Yes, i will look into it, last time i was not able to reproduce it",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,766,2019-04-03T04:21:35Z,2020-01-15T19:25:34Z,2021-02-12T18:43:39Z,CLOSED,False,419,228,3,https://github.com/OLFDB,FEATURE:Read traff messages from a traff file,15,[],https://github.com/navit-gps/navit/pull/766,https://github.com/OLFDB,7,https://github.com/navit-gps/navit/pull/766#issuecomment-479385496,This plugin uses a traff file located in NAVIT_USER_DATADIR to read traff messages. The whole file is read once and then monitored for new messages.,OK. I have adpated the Eclipse formatter to match the guidelines required by CircleCI and traffic_traff_file.c is fine now.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,766,2019-04-03T04:21:35Z,2020-01-15T19:25:34Z,2021-02-12T18:43:39Z,CLOSED,False,419,228,3,https://github.com/OLFDB,FEATURE:Read traff messages from a traff file,15,[],https://github.com/navit-gps/navit/pull/766,https://github.com/mvglasow,8,https://github.com/navit-gps/navit/pull/766#issuecomment-479506862,This plugin uses a traff file located in NAVIT_USER_DATADIR to read traff messages. The whole file is read once and then monitored for new messages.,"Great to see someone else is taking up work on the traffic module! Apparently you didn’t see my comments in the IRC logs a few days back—never mind, at least that gives me time to sort out what I need to get across :-)
TraFF is based on XML, which doesn’t lend itself too well to streaming information. For some in-depth information about TraFF, you might want to check out https://gitlab.com/traffxml/traff, which explains the ideas behind TraFF and what I had in mind for message exchange. (Which is also how the traff_android plugin is implemented.)
Message exchange is based on feeds. There can be multiple sources sending feeds, and multiple consumers receiving them. Maybe tomorrow OSMand will process TraFF as well. Or we’ll have another provider over which drivers can create and share share traffic reports, or one which performs image recognition on variable-messsage signs and extracts traffic information from them.
Each feed is a complete XML document with (only) the new messages in it. A feed is sent by the source (e.g. Qz) on its broadcast channel to all interested consumers (e.g. Navit). A consumer also can (and usually needs to) send a poll request (“show me everything you have”), to which the source will reply with the complete list of currently active messages.
Future versions may need to include additional capabilities, such as applications being able to subscribe to certain regions and getting updates only for that region.
Feeds can be implemented with a variety of transport media. Between two local applications, my idea was to use the request broker architecture of the respective platform. On Android that means intents. On Linux this would be DBus. There is, in fact, a rudimentary DBus implementation in binding_dbus.c (look at request_navit_traffic_inject()). It is not perfect, as it relies on temporary files for data storage—a better option would be to send the XML data over the DBus link. Also, it uses directed messages (only Navit will receive those); a broadcast would be the better option. (Admittedly, I do not know my way around DBus very well, therefore I’m not sure if and how these things can be done.) On Windows the mechanism of choice would probably be DCOM (which I haven’t used in decades, though). Feel free to make a proposal over at TraFF, this part is not yet worked out in detail, although much needed.
As an alternative mode of transportation, bare TCP/UDP sockets would probably work as well, but for anything that is not a broadcast mechanism, we would need a subscription mechanism so sources would know where to send their data. An HTTP API would also be an option for the future, but this would require consumers polling the source for updates and indicating the timespan they are interested in. (Again, the TraFF project would happily welcome a proposal—feel free to open a ticket or draft a spec.)
A file is probably not the best way to do that—monitor mode might work, but still feels a bit hacky to me. For example, we’ll always be dealing with malformed XML—either the root element is still open, or we have multiple root elements. Also, once we introduce subscriptions (or service status), we might need to add attributes to the root element, and these might change from one feed to the next.
Sorry if that means extra work, but I can assure you that you are not alone in this… traffic took lots of iterations to get right (and about a year to get anywhere near usable), and multithreading is very similar in that.
Regarding the poll interval for TraFF, bear in mind that I am currently working on multithreading (#760). Traffic is the first candidate I am moving into a separate thread (essentially traffic_process_messages_int() and everything it calls), so it will not block the UI any more (unless both are trying to access the same data structure at the same time). The 1s interval will then become the duration for which the traffic thread sleeps when it is done processing all new messages.
I'd be interested in seeing your Qz port, though. I had something like that in mind but never got around to actually implementing it (I use Android for production, for Linux tests I rely on canned data injected through the test interface).",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,766,2019-04-03T04:21:35Z,2020-01-15T19:25:34Z,2021-02-12T18:43:39Z,CLOSED,False,419,228,3,https://github.com/OLFDB,FEATURE:Read traff messages from a traff file,15,[],https://github.com/navit-gps/navit/pull/766,https://github.com/OLFDB,9,https://github.com/navit-gps/navit/pull/766#issuecomment-479563494,This plugin uses a traff file located in NAVIT_USER_DATADIR to read traff messages. The whole file is read once and then monitored for new messages.,"The poll interval is not an issue any longer, as with the monitor only new messages being read. I agree a file is hacky. Maybe an idea is using JMS for transport. That could be used on Linux, Windows, OSX.
My Qz port is a mess currently. I mocked all the android classes in a new package and changed the imports of all the files I needed to get the TMCReceiver up and running. It writes into the traff file with each message wrapped in  . This is working fine. I gave it a first live try in Berlins traffic yesterday on Windows. Do you have an idea how to import the mocked or real android classes based on the build target? As in Java I can't use preprocessor defines this is a problem currently. The TMCReceiver needs to get some private->protected changes so it can be a super class. There is no GUI currently and I'm not sure if it is worth to create one. Would be better to make Navit showing more details on the map like icons for the type of issue, times etc. A big deal would be to make Qz TPEG capable. e.g. using the Monkeyboard DAB+ receiver to get the raw data.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,766,2019-04-03T04:21:35Z,2020-01-15T19:25:34Z,2021-02-12T18:43:39Z,CLOSED,False,419,228,3,https://github.com/OLFDB,FEATURE:Read traff messages from a traff file,15,[],https://github.com/navit-gps/navit/pull/766,https://github.com/mvglasow,10,https://github.com/navit-gps/navit/pull/766#issuecomment-479893987,This plugin uses a traff file located in NAVIT_USER_DATADIR to read traff messages. The whole file is read once and then monitored for new messages.,"About the Qz port, I have created an issue at https://gitlab.com/mvglasow/qz/issues/53.
For mocked Android classes, you could place them in a JAR and include that, or turn the mock classes into a Git submodule (as I did with the other Qz dependencies).

Maybe an idea is using JMS for transport. That could be used on Linux, Windows, OSX.

Sounds good, but would this also work with native applications (such as Navit)?

Would be better to make Navit showing more details on the map like icons for the type of issue, times etc.

Absolutely. See https://github.com/navit-gps/navit/projects/8. The graphics driver is currently very limited. On the other hand, I am somewhat concerned about cluttering the map (which is also why I use a map theme derived from 0606.at, rather than the default one). It’s all too easy to fall for the fat-and-dirty approach, but deciding what not to display can be just as important. Therefore I would keep the map display somewhat minimalistic but implement a list of active traffic messages in the GUI.

A big deal would be to make Qz TPEG capable. e.g. using the Monkeyboard DAB+ receiver to get the raw data.

That would in fact be a new application. Just to give you an idea, it took me roughly two years to extend RDS Surveyor with all the functionality I needed (extra tuner support, TMC location parsing), draw up the TraFF specification (including the list of messages and how to translate TMC to TraFF) and finally write Qz around it. Also, I am not currently exploring that option as Germany seems to be the only place that has free-to-air TPEG services (https://en.wikipedia.org/wiki/TPEG#TPEG_services_worldwide); everywhere else things seem to be encrypted and require payment. I am currently leaning more towards a crowdsourced traffic service where people can report congestions they are observing.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,766,2019-04-03T04:21:35Z,2020-01-15T19:25:34Z,2021-02-12T18:43:39Z,CLOSED,False,419,228,3,https://github.com/OLFDB,FEATURE:Read traff messages from a traff file,15,[],https://github.com/navit-gps/navit/pull/766,https://github.com/jkoan,11,https://github.com/navit-gps/navit/pull/766#issuecomment-493392475,This plugin uses a traff file located in NAVIT_USER_DATADIR to read traff messages. The whole file is read once and then monitored for new messages.,"@mvglasow so what do do with this PR? As i understood, since this would read xml and xml is not streamable this whould not make much sense to merge, right?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,766,2019-04-03T04:21:35Z,2020-01-15T19:25:34Z,2021-02-12T18:43:39Z,CLOSED,False,419,228,3,https://github.com/OLFDB,FEATURE:Read traff messages from a traff file,15,[],https://github.com/navit-gps/navit/pull/766,https://github.com/jkoan,12,https://github.com/navit-gps/navit/pull/766#issuecomment-574816526,This plugin uses a traff file located in NAVIT_USER_DATADIR to read traff messages. The whole file is read once and then monitored for new messages.,Cloasing this as xml files are not really streamable. But feel free to open new PRs at any time,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,766,2019-04-03T04:21:35Z,2020-01-15T19:25:34Z,2021-02-12T18:43:39Z,CLOSED,False,419,228,3,https://github.com/OLFDB,FEATURE:Read traff messages from a traff file,15,[],https://github.com/navit-gps/navit/pull/766,https://github.com/mvglasow,13,https://github.com/navit-gps/navit/pull/766#issuecomment-619632523,This plugin uses a traff file located in NAVIT_USER_DATADIR to read traff messages. The whole file is read once and then monitored for new messages.,"@OLFDB I have recently started working on exchanging TraFF via HTTP. It’s still in its infancy, but maybe this is something that might work for you.
Source code: https://gitlab.com/traffxml/traff-server.
Documentation of the subscription mechanism (still in draft status): https://gitlab.com/traffxml/traff/-/blob/dev/TraFF%20Subscription%20Management.pdf",True,{'THUMBS_UP': ['https://github.com/jkoan']}
navit-gps/navit,https://github.com/navit-gps/navit,766,2019-04-03T04:21:35Z,2020-01-15T19:25:34Z,2021-02-12T18:43:39Z,CLOSED,False,419,228,3,https://github.com/OLFDB,FEATURE:Read traff messages from a traff file,15,[],https://github.com/navit-gps/navit/pull/766,https://github.com/mvglasow,14,https://github.com/navit-gps/navit/pull/766#issuecomment-778373686,This plugin uses a traff file located in NAVIT_USER_DATADIR to read traff messages. The whole file is read once and then monitored for new messages.,"TraFF server is somewhat usable with the available sources, and the TraFF 0.8 spec (which introduces HTTP transport) is now final.
I am now considering a TraFF HTTP plugin, which would be available on most (ideally on all) platforms to which Navit has been ported.
What we would need is HTTP client functionality in Navit. The only thing we have so far is the map download code in navit/file.c, most of which seems to have been written back in 2010/2011 by Martin Schaller. However, it is quite rudimentary and limited to plain HTTP (no TLS) and GET (no POST). Therefore, I would either have to implement all of this from scratch (which feels like reinventing the wheel) or introduce some third-party HTTP client library.
Hence the first question: has anyone ever considered using an external HTTP client library for Navit?
If we go down that route, we could also replace the code in file.c with calls to the library—would be cleaner than having two independent HTTP implementations. That would require the help of someone who is familiar with this portion of the code and would know how to port it to another support library.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,769,2019-04-04T11:45:10Z,2019-04-04T11:53:19Z,2019-04-04T11:54:01Z,CLOSED,False,464,229,9,https://github.com/OLFDB,Zip code search,15,[],https://github.com/navit-gps/navit/pull/769,https://github.com/OLFDB,1,https://github.com/navit-gps/navit/pull/769,FEATURE:internal gui command 'postal_code' to search destination using postal codes.,FEATURE:internal gui command 'postal_code' to search destination using postal codes.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,769,2019-04-04T11:45:10Z,2019-04-04T11:53:19Z,2019-04-04T11:54:01Z,CLOSED,False,464,229,9,https://github.com/OLFDB,Zip code search,15,[],https://github.com/navit-gps/navit/pull/769,https://github.com/OLFDB,2,https://github.com/navit-gps/navit/pull/769#issuecomment-479866500,FEATURE:internal gui command 'postal_code' to search destination using postal codes.,Too many changes.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,770,2019-04-04T12:58:11Z,2020-01-15T19:27:34Z,2020-01-15T19:27:34Z,CLOSED,False,464,229,9,https://github.com/OLFDB,Zip code search only,15,[],https://github.com/navit-gps/navit/pull/770,https://github.com/OLFDB,1,https://github.com/navit-gps/navit/pull/770,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,770,2019-04-04T12:58:11Z,2020-01-15T19:27:34Z,2020-01-15T19:27:34Z,CLOSED,False,464,229,9,https://github.com/OLFDB,Zip code search only,15,[],https://github.com/navit-gps/navit/pull/770,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/770#issuecomment-495884115,,"Whats the current state of this PR? Can it be closed, or is there still ongoing work?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,770,2019-04-04T12:58:11Z,2020-01-15T19:27:34Z,2020-01-15T19:27:34Z,CLOSED,False,464,229,9,https://github.com/OLFDB,Zip code search only,15,[],https://github.com/navit-gps/navit/pull/770,https://github.com/lains,3,https://github.com/navit-gps/navit/pull/770#issuecomment-502033957,,"Hello @OLFDB, what is the intent of this PR?
It seems it adds an internal GUI command to search by zipcode. Is this right?
There are also other changes mixed inside this PR:

changes on traffic (module traffic/traff_file)
Is this intentional? This code is probably coming for another PR: #766
indentation and style changes
Are these needed? Shouldn't they be split out into another separate PR?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,770,2019-04-04T12:58:11Z,2020-01-15T19:27:34Z,2020-01-15T19:27:34Z,CLOSED,False,464,229,9,https://github.com/OLFDB,Zip code search only,15,[],https://github.com/navit-gps/navit/pull/770,https://github.com/OLFDB,4,https://github.com/navit-gps/navit/pull/770#issuecomment-507105232,,"The intent of the CR is to add search by zipcode.
The traffic changes are not related to this PR.
Can you support in moving them on a seperate branch?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,770,2019-04-04T12:58:11Z,2020-01-15T19:27:34Z,2020-01-15T19:27:34Z,CLOSED,False,464,229,9,https://github.com/OLFDB,Zip code search only,15,[],https://github.com/navit-gps/navit/pull/770,https://github.com/jkoan,5,https://github.com/navit-gps/navit/pull/770#issuecomment-525163097,,"Only 10eab7f seems contain the changes that sould be in this change, is that true?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,770,2019-04-04T12:58:11Z,2020-01-15T19:27:34Z,2020-01-15T19:27:34Z,CLOSED,False,464,229,9,https://github.com/OLFDB,Zip code search only,15,[],https://github.com/navit-gps/navit/pull/770,https://github.com/hoehnp,6,https://github.com/navit-gps/navit/pull/770#issuecomment-526949437,,"@OLFDB: Thanks a lot for this idea. Recently when travelling i facing the issue that many cities might have the same name, so it is difficult to find from the search which one is the right city. I think searching for zip code would already resolve this.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,770,2019-04-04T12:58:11Z,2020-01-15T19:27:34Z,2020-01-15T19:27:34Z,CLOSED,False,464,229,9,https://github.com/OLFDB,Zip code search only,15,[],https://github.com/navit-gps/navit/pull/770,https://github.com/aerostitch,7,https://github.com/navit-gps/navit/pull/770#issuecomment-547599176,,Is this still relevant after @metalstrolch 's changes from #818 ?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,770,2019-04-04T12:58:11Z,2020-01-15T19:27:34Z,2020-01-15T19:27:34Z,CLOSED,False,464,229,9,https://github.com/OLFDB,Zip code search only,15,[],https://github.com/navit-gps/navit/pull/770,https://github.com/jkoan,8,https://github.com/navit-gps/navit/pull/770#issuecomment-574817362,,As this is only a Draft and probably also invalid i will close this now. Feel free to open new PRs at any time,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,771,2019-04-04T19:27:18Z,2019-06-05T13:28:03Z,2019-06-05T13:28:03Z,MERGED,True,7,0,1,https://github.com/jkoan,Fix:core:Fix item_def.h when used whithout defined macros (like in IDE),3,[],https://github.com/navit-gps/navit/pull/771,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/771,"Hi,
always when in a IDE like Eclipse i head the problem that all attr_* definitions where not found by the IDE and therefore where marked as error, so my approach now is to declare them as extern so the IDE does not get annoyed by this. This also fixes auto competition.","Hi,
always when in a IDE like Eclipse i head the problem that all attr_* definitions where not found by the IDE and therefore where marked as error, so my approach now is to declare them as extern so the IDE does not get annoyed by this. This also fixes auto competition.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,771,2019-04-04T19:27:18Z,2019-06-05T13:28:03Z,2019-06-05T13:28:03Z,MERGED,True,7,0,1,https://github.com/jkoan,Fix:core:Fix item_def.h when used whithout defined macros (like in IDE),3,[],https://github.com/navit-gps/navit/pull/771,https://github.com/mvglasow,2,https://github.com/navit-gps/navit/pull/771#issuecomment-480036433,"Hi,
always when in a IDE like Eclipse i head the problem that all attr_* definitions where not found by the IDE and therefore where marked as error, so my approach now is to declare them as extern so the IDE does not get annoyed by this. This also fixes auto competition.","Much needed indeed (this has been bothering me as well for some time :-)
The only doubt I have is related to this comment:
/* This file is generated from http://wiki.navit-project.org/index.php/Item_def.h, do not edit it, edit the wiki page instead */

Does that still reflect the current status? If yes, we’d need to make sure the extra declarations survive an update. If not, the comment should be removed.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,771,2019-04-04T19:27:18Z,2019-06-05T13:28:03Z,2019-06-05T13:28:03Z,MERGED,True,7,0,1,https://github.com/jkoan,Fix:core:Fix item_def.h when used whithout defined macros (like in IDE),3,[],https://github.com/navit-gps/navit/pull/771,https://github.com/jkoan,3,https://github.com/navit-gps/navit/pull/771#issuecomment-480062232,"Hi,
always when in a IDE like Eclipse i head the problem that all attr_* definitions where not found by the IDE and therefore where marked as error, so my approach now is to declare them as extern so the IDE does not get annoyed by this. This also fixes auto competition.",I think this is not up to date. At least we don't do this automatically. There is a script for that but I don't even know if it is functional. So my opinion would be to remove the comment,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,771,2019-04-04T19:27:18Z,2019-06-05T13:28:03Z,2019-06-05T13:28:03Z,MERGED,True,7,0,1,https://github.com/jkoan,Fix:core:Fix item_def.h when used whithout defined macros (like in IDE),3,[],https://github.com/navit-gps/navit/pull/771,https://github.com/mvglasow,4,https://github.com/navit-gps/navit/pull/771#issuecomment-480525097,"Hi,
always when in a IDE like Eclipse i head the problem that all attr_* definitions where not found by the IDE and therefore where marked as error, so my approach now is to declare them as extern so the IDE does not get annoyed by this. This also fixes auto competition.","I am generally not convinced that generating a source file from a wiki page is such a great idea. However, I would suggest doing a test run of the script to see if it runs at all.

If the script fails and is not trivial to fix, I’d suggest removing it. If the fix is easy, fix and retry.
If the script runs but ends up removing item types (suggesting the wiki is out of date), I’d also suggest removing the script.
If the script runs and generates essentially the same file (without the fixes), then I would suggest extending the script to generate item_def.h with the fixes.

With that I would give my approval. If we end up removing the script, we might consider updating the wiki from the source file—but that doesn’t have to go in this pull request.
BTW, Eclipse equally nags about stuff in attr_def.h—would the fix work there as well?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,771,2019-04-04T19:27:18Z,2019-06-05T13:28:03Z,2019-06-05T13:28:03Z,MERGED,True,7,0,1,https://github.com/jkoan,Fix:core:Fix item_def.h when used whithout defined macros (like in IDE),3,[],https://github.com/navit-gps/navit/pull/771,https://github.com/pgrandin,5,https://github.com/navit-gps/navit/pull/771#issuecomment-483816915,"Hi,
always when in a IDE like Eclipse i head the problem that all attr_* definitions where not found by the IDE and therefore where marked as error, so my approach now is to declare them as extern so the IDE does not get annoyed by this. This also fixes auto competition.",100% onboard with @mvglasow 's approach.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,771,2019-04-04T19:27:18Z,2019-06-05T13:28:03Z,2019-06-05T13:28:03Z,MERGED,True,7,0,1,https://github.com/jkoan,Fix:core:Fix item_def.h when used whithout defined macros (like in IDE),3,[],https://github.com/navit-gps/navit/pull/771,https://github.com/jkoan,6,https://github.com/navit-gps/navit/pull/771#issuecomment-493379681,"Hi,
always when in a IDE like Eclipse i head the problem that all attr_* definitions where not found by the IDE and therefore where marked as error, so my approach now is to declare them as extern so the IDE does not get annoyed by this. This also fixes auto competition.","I am generally not convinced that generating a source file from a wiki page is such a great idea. However, I would suggest doing a test run of the script to see if it runs at all.
* If the script fails and is not trivial to fix, I’d suggest removing it. If the fix is easy, fix and retry.

* If the script runs but ends up removing item types (suggesting the wiki is out of date), I’d also suggest removing the script.

* If the script runs and generates essentially the same file (without the fixes), then I would suggest extending the script to generate `item_def.h` with the fixes.

With that I would give my approval. If we end up removing the script, we might consider updating the wiki from the source file—but that doesn’t have to go in this pull request.

The Script is functional and works but the wiki is outdated. So remove Script and edit wiki to say that item_defs are now handled in the item_def.h file?
Currently the state of the Wiki would breake things as Items would be added what would change places.

BTW, Eclipse equally nags about stuff in attr_def.h—would the fix work there as well?
We Could fix this as well, i will open another PR for this",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,771,2019-04-04T19:27:18Z,2019-06-05T13:28:03Z,2019-06-05T13:28:03Z,MERGED,True,7,0,1,https://github.com/jkoan,Fix:core:Fix item_def.h when used whithout defined macros (like in IDE),3,[],https://github.com/navit-gps/navit/pull/771,https://github.com/mvglasow,7,https://github.com/navit-gps/navit/pull/771#issuecomment-493539685,"Hi,
always when in a IDE like Eclipse i head the problem that all attr_* definitions where not found by the IDE and therefore where marked as error, so my approach now is to declare them as extern so the IDE does not get annoyed by this. This also fixes auto competition.","The Script is functional and works but the wiki is outdated. So remove Script and edit wiki to say that item_defs are now handled in the item_def.h file?

Sounds good to me—and remove the comment in item_def.h, which is now obsolete.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,771,2019-04-04T19:27:18Z,2019-06-05T13:28:03Z,2019-06-05T13:28:03Z,MERGED,True,7,0,1,https://github.com/jkoan,Fix:core:Fix item_def.h when used whithout defined macros (like in IDE),3,[],https://github.com/navit-gps/navit/pull/771,https://github.com/jkoan,8,https://github.com/navit-gps/navit/pull/771#issuecomment-493540511,"Hi,
always when in a IDE like Eclipse i head the problem that all attr_* definitions where not found by the IDE and therefore where marked as error, so my approach now is to declare them as extern so the IDE does not get annoyed by this. This also fixes auto competition.",I will do this in another pr where I also remove the script,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,775,2019-04-23T18:37:54Z,2019-05-06T11:07:09Z,2019-05-06T11:07:09Z,MERGED,True,2,0,1,https://github.com/jkoan,fix:graphics:Fix issue when try to close the SDL window ion non webos,1,[],https://github.com/navit-gps/navit/pull/775,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/775,"Currenty the window created by the SDL driver cant be closed with wihe window X button.
This fixes this issue","Currenty the window created by the SDL driver cant be closed with wihe window X button.
This fixes this issue",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,775,2019-04-23T18:37:54Z,2019-05-06T11:07:09Z,2019-05-06T11:07:09Z,MERGED,True,2,0,1,https://github.com/jkoan,fix:graphics:Fix issue when try to close the SDL window ion non webos,1,[],https://github.com/navit-gps/navit/pull/775,https://github.com/mvglasow,2,https://github.com/navit-gps/navit/pull/775#issuecomment-486814555,"Currenty the window created by the SDL driver cant be closed with wihe window X button.
This fixes this issue","@jkoan I trust your tests, don’t feel I’m competent to make a judgement here as I don’t use SDL.",True,{'THUMBS_UP': ['https://github.com/jkoan']}
navit-gps/navit,https://github.com/navit-gps/navit,778,2019-05-17T09:12:23Z,2019-06-05T13:27:05Z,2019-06-05T13:27:05Z,MERGED,True,6,0,1,https://github.com/jkoan,Fix:core:Fix Warning in IDE for Items not found,1,[],https://github.com/navit-gps/navit/pull/778,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/778,As discussed in #771 and requested by @mvglasow hers the same fix for attr_def.h,As discussed in #771 and requested by @mvglasow hers the same fix for attr_def.h,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,778,2019-05-17T09:12:23Z,2019-06-05T13:27:05Z,2019-06-05T13:27:05Z,MERGED,True,6,0,1,https://github.com/jkoan,Fix:core:Fix Warning in IDE for Items not found,1,[],https://github.com/navit-gps/navit/pull/778,https://github.com/mvglasow,2,https://github.com/navit-gps/navit/pull/778#issuecomment-493539072,As discussed in #771 and requested by @mvglasow hers the same fix for attr_def.h,"Umm… this changes item_def.h (as #771), not attr_def.h, looks like you committed the wrong file",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,778,2019-05-17T09:12:23Z,2019-06-05T13:27:05Z,2019-06-05T13:27:05Z,MERGED,True,6,0,1,https://github.com/jkoan,Fix:core:Fix Warning in IDE for Items not found,1,[],https://github.com/navit-gps/navit/pull/778,https://github.com/jkoan,3,https://github.com/navit-gps/navit/pull/778#issuecomment-493539742,As discussed in #771 and requested by @mvglasow hers the same fix for attr_def.h,"Oh yes, true. Will fix this",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,778,2019-05-17T09:12:23Z,2019-06-05T13:27:05Z,2019-06-05T13:27:05Z,MERGED,True,6,0,1,https://github.com/jkoan,Fix:core:Fix Warning in IDE for Items not found,1,[],https://github.com/navit-gps/navit/pull/778,https://github.com/jkoan,4,https://github.com/navit-gps/navit/pull/778#issuecomment-493731374,As discussed in #771 and requested by @mvglasow hers the same fix for attr_def.h,Now its better ;),True,{}
navit-gps/navit,https://github.com/navit-gps/navit,782,2019-05-25T09:47:49Z,2019-06-14T05:35:03Z,2019-06-14T05:35:04Z,MERGED,True,7,0,1,https://github.com/jkoan,Sync bookmarks 2,2,[],https://github.com/navit-gps/navit/pull/782,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/782,"As a followup for #435 heres a version which fixes the Problem for all Plattforms.
Original Text from @pgrandin:

When using navit on some devices that could loose power without being properly shut down, the bookmark files was lost (content was empty).
This problem is reproduceable : running Navit on a buildroot image on the raspberry pi (for example one built using https://github.com/navit-gps/buildroot ), if the pi looses power and the bookmark file has been modified, the bookmark file will be lost everytime.
This simple fix ensures that the files get flushed to the disk when we write the bookmark files, and solves the issue according to my tests.","As a followup for #435 heres a version which fixes the Problem for all Plattforms.
Original Text from @pgrandin:

When using navit on some devices that could loose power without being properly shut down, the bookmark files was lost (content was empty).
This problem is reproduceable : running Navit on a buildroot image on the raspberry pi (for example one built using https://github.com/navit-gps/buildroot ), if the pi looses power and the bookmark file has been modified, the bookmark file will be lost everytime.
This simple fix ensures that the files get flushed to the disk when we write the bookmark files, and solves the issue according to my tests.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,782,2019-05-25T09:47:49Z,2019-06-14T05:35:03Z,2019-06-14T05:35:04Z,MERGED,True,7,0,1,https://github.com/jkoan,Sync bookmarks 2,2,[],https://github.com/navit-gps/navit/pull/782,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/782#issuecomment-498903499,"As a followup for #435 heres a version which fixes the Problem for all Plattforms.
Original Text from @pgrandin:

When using navit on some devices that could loose power without being properly shut down, the bookmark files was lost (content was empty).
This problem is reproduceable : running Navit on a buildroot image on the raspberry pi (for example one built using https://github.com/navit-gps/buildroot ), if the pi looses power and the bookmark file has been modified, the bookmark file will be lost everytime.
This simple fix ensures that the files get flushed to the disk when we write the bookmark files, and solves the issue according to my tests.",Thanks for finishing my half-assed work 😄,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,784,2019-06-04T01:15:01Z,2019-06-06T14:48:45Z,2019-10-29T17:23:36Z,MERGED,True,1029,0,14,https://github.com/pgrandin,Readthedocs import,78,['doc'],https://github.com/navit-gps/navit/pull/784,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/784,"This PR includes the config and documentation ported from the wiki (which suffers from too much spam and too little organization) to readthedocs
Any changes made to this branch will be visible within a few minutes at https://navit.readthedocs.io/en/latest/","This PR includes the config and documentation ported from the wiki (which suffers from too much spam and too little organization) to readthedocs
Any changes made to this branch will be visible within a few minutes at https://navit.readthedocs.io/en/latest/",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,784,2019-06-04T01:15:01Z,2019-06-06T14:48:45Z,2019-10-29T17:23:36Z,MERGED,True,1029,0,14,https://github.com/pgrandin,Readthedocs import,78,['doc'],https://github.com/navit-gps/navit/pull/784,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/784#issuecomment-498944343,"This PR includes the config and documentation ported from the wiki (which suffers from too much spam and too little organization) to readthedocs
Any changes made to this branch will be visible within a few minutes at https://navit.readthedocs.io/en/latest/","Content Looks good, but please update the branch so it mergable. ;)
Ah, and we need to add the link (and the badge) to the README.md once finished
For all others:
As also discussed in #425 the wiki is quite loaded with spam, so the intention is to move the user doc to ""Read the Docks"" and have the Technical Documentation at Doxygen. The last remaining Path would be where the rest would stay, like Doc for xml file, plugins written guides and so on. Probably it's the easyest to do this on ""Read The Docs"" as a different section.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,784,2019-06-04T01:15:01Z,2019-06-06T14:48:45Z,2019-10-29T17:23:36Z,MERGED,True,1029,0,14,https://github.com/pgrandin,Readthedocs import,78,['doc'],https://github.com/navit-gps/navit/pull/784,https://github.com/mvglasow,3,https://github.com/navit-gps/navit/pull/784#issuecomment-499080027,"This PR includes the config and documentation ported from the wiki (which suffers from too much spam and too little organization) to readthedocs
Any changes made to this branch will be visible within a few minutes at https://navit.readthedocs.io/en/latest/","The last remaining Path would be where the rest would stay, like Doc for xml file, plugins written guides and so on.

You mean where the remaining wiki content will be placed? @aerostitch had made a proposal, but I haven’t heard back from him. He may be busy, but he might be able to contribute some ideas.
Also, the wiki is an authentication source for trac, so we need to think about something for that before we close the wiki down altogether. (Yes, other means of authentication would still work, but everybody who used to authenticate with a wiki account would need to use a different account, unless we do something trac-side.)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,784,2019-06-04T01:15:01Z,2019-06-06T14:48:45Z,2019-10-29T17:23:36Z,MERGED,True,1029,0,14,https://github.com/pgrandin,Readthedocs import,78,['doc'],https://github.com/navit-gps/navit/pull/784,https://github.com/aerostitch,4,https://github.com/navit-gps/navit/pull/784#issuecomment-499156798,"This PR includes the config and documentation ported from the wiki (which suffers from too much spam and too little organization) to readthedocs
Any changes made to this branch will be visible within a few minutes at https://navit.readthedocs.io/en/latest/","Sorry I've been away from any opensource for a (way too) long time now.
Is that all the wiki content there? What about the docs on how to release and the user personnal docs that provide tips on how to build on specific devices?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,784,2019-06-04T01:15:01Z,2019-06-06T14:48:45Z,2019-10-29T17:23:36Z,MERGED,True,1029,0,14,https://github.com/pgrandin,Readthedocs import,78,['doc'],https://github.com/navit-gps/navit/pull/784,https://github.com/pgrandin,5,https://github.com/navit-gps/navit/pull/784#issuecomment-499158504,"This PR includes the config and documentation ported from the wiki (which suffers from too much spam and too little organization) to readthedocs
Any changes made to this branch will be visible within a few minutes at https://navit.readthedocs.io/en/latest/","Thanks for your input guys.
@mvglasow : the goal right now isn't to shut down the wiki. There is still a lot of valuable content there that would need to be reviewed/updated and moved to rtd. And yeah as you mentioned this also serves as an authentication for the forum. The issue is that we are getting over 10 spam users registration everyday, we'll have to address that.
@aerostitch : it's nice to see you around here :) This definitely isn't all the content. Just a few pages used to start the process and get familiar with the syntax. There is much, much more that needs to be reviewed. My intent was to start with basic content for first time user, and then move into more ""advanced"" topics under a different section.
One of the benefits of rtd is that these changes are now reviewed before being merged, so it should help catch typos, errors, and also will allow several people to think about how the docs are organized.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,784,2019-06-04T01:15:01Z,2019-06-06T14:48:45Z,2019-10-29T17:23:36Z,MERGED,True,1029,0,14,https://github.com/pgrandin,Readthedocs import,78,['doc'],https://github.com/navit-gps/navit/pull/784,https://github.com/aerostitch,6,https://github.com/navit-gps/navit/pull/784#issuecomment-499162959,"This PR includes the config and documentation ported from the wiki (which suffers from too much spam and too little organization) to readthedocs
Any changes made to this branch will be visible within a few minutes at https://navit.readthedocs.io/en/latest/","Alrighty, that looks good.
So the next step would be to disable creation of new accounts on the wiki/trac correct?
I don't think there's been any new users for trac (I guess most people use github now) in a really long time and we can say that the wiki is moving to rtd, so new users should contribute there.
I still have a lot of personal issues to deal with and crazy busy with work too so not sure when I'll be back in any helpful way. nut I will try to move a doc from time to time if we have that there.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,784,2019-06-04T01:15:01Z,2019-06-06T14:48:45Z,2019-10-29T17:23:36Z,MERGED,True,1029,0,14,https://github.com/pgrandin,Readthedocs import,78,['doc'],https://github.com/navit-gps/navit/pull/784,https://github.com/aerostitch,7,https://github.com/navit-gps/navit/pull/784#issuecomment-499163695,"This PR includes the config and documentation ported from the wiki (which suffers from too much spam and too little organization) to readthedocs
Any changes made to this branch will be visible within a few minutes at https://navit.readthedocs.io/en/latest/","As for the typos @pgrandin :
$ misspell docs/
docs/configuration/layout.rst:33:184: ""overriden"" is a misspelling of ""overridden""
docs/configuration/vehicle.rst:26:5: ""esential"" is a misspelling of ""essential""
docs/configuration/vehicle.rst:46:44: ""postion"" is a misspelling of ""position""",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,784,2019-06-04T01:15:01Z,2019-06-06T14:48:45Z,2019-10-29T17:23:36Z,MERGED,True,1029,0,14,https://github.com/pgrandin,Readthedocs import,78,['doc'],https://github.com/navit-gps/navit/pull/784,https://github.com/pgrandin,8,https://github.com/navit-gps/navit/pull/784#issuecomment-499164068,"This PR includes the config and documentation ported from the wiki (which suffers from too much spam and too little organization) to readthedocs
Any changes made to this branch will be visible within a few minutes at https://navit.readthedocs.io/en/latest/",Oh wow we should totally add a call to mispell on that branch in the CI!,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,784,2019-06-04T01:15:01Z,2019-06-06T14:48:45Z,2019-10-29T17:23:36Z,MERGED,True,1029,0,14,https://github.com/pgrandin,Readthedocs import,78,['doc'],https://github.com/navit-gps/navit/pull/784,https://github.com/pgrandin,9,https://github.com/navit-gps/navit/pull/784#issuecomment-499527261,"This PR includes the config and documentation ported from the wiki (which suffers from too much spam and too little organization) to readthedocs
Any changes made to this branch will be visible within a few minutes at https://navit.readthedocs.io/en/latest/","I merged the PR, but we should probably keep the branch as the latest version of the docs is built automatically from it. It'll be useful to test the next updates/import.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,785,2019-06-04T18:56:29Z,2019-06-05T19:28:45Z,2019-06-07T06:02:27Z,MERGED,True,72,24,1,https://github.com/lains,Add:Gui/Internal: Adding missing escape modes and fixing generic html escape mode,4,['enhancement'],https://github.com/navit-gps/navit/pull/785,https://github.com/lains,1,https://github.com/navit-gps/navit/pull/785,"This is some preliminary work for re-using this escape function also in Android code.
Code will thus be moved as a generic (non-static) utility function global for Anroid and internal GUI.
I also added doxygen doc, and made the algo more readable (or at least, I consider it to be)","This is some preliminary work for re-using this escape function also in Android code.
Code will thus be moved as a generic (non-static) utility function global for Anroid and internal GUI.
I also added doxygen doc, and made the algo more readable (or at least, I consider it to be)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,787,2019-06-05T01:41:41Z,2019-06-05T05:02:17Z,2019-06-05T05:02:17Z,MERGED,True,2,2,1,https://github.com/pgrandin,Fixed typos,1,[],https://github.com/navit-gps/navit/pull/787,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/787,We haven't opened that file in a while it seems!,We haven't opened that file in a while it seems!,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,788,2019-06-05T04:56:14Z,2019-06-05T13:25:32Z,2019-06-07T06:09:39Z,MERGED,True,25,7,3,https://github.com/lains,Adding comments and const,1,"['doc', 'cleanup', 'WIP']",https://github.com/navit-gps/navit/pull/788,https://github.com/lains,1,https://github.com/navit-gps/navit/pull/788,"I open this PR because I have been browsing through the code, and it often took me a while tracing the meaning of function arguments, so I wrote some comments that I thought would be interesting to share to others as doxygen comments.
Also, and more importantly, I have been adding a few const type qualifiers to input arguments passed as pointers.
There are a lot of cases where structs are passed as pointers, most often only for input (they are unmodified).
Input and output arguments passed as reference can be explained by using doxygen @param[in] and @param[out] but I think a good and visual safeguard is also to qualify them as const so that the programmer and compiler both know this argument should not be modified.
Adding const qualification is a recursive action that can lead to changing many sub-function calls, so there is quite some work to be done, probably each time starting from higher level functions, and necessarily recursively reworking the prototypes of the sub-functions they use.","I open this PR because I have been browsing through the code, and it often took me a while tracing the meaning of function arguments, so I wrote some comments that I thought would be interesting to share to others as doxygen comments.
Also, and more importantly, I have been adding a few const type qualifiers to input arguments passed as pointers.
There are a lot of cases where structs are passed as pointers, most often only for input (they are unmodified).
Input and output arguments passed as reference can be explained by using doxygen @param[in] and @param[out] but I think a good and visual safeguard is also to qualify them as const so that the programmer and compiler both know this argument should not be modified.
Adding const qualification is a recursive action that can lead to changing many sub-function calls, so there is quite some work to be done, probably each time starting from higher level functions, and necessarily recursively reworking the prototypes of the sub-functions they use.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,788,2019-06-05T04:56:14Z,2019-06-05T13:25:32Z,2019-06-07T06:09:39Z,MERGED,True,25,7,3,https://github.com/lains,Adding comments and const,1,"['doc', 'cleanup', 'WIP']",https://github.com/navit-gps/navit/pull/788,https://github.com/mvglasow,2,https://github.com/navit-gps/navit/pull/788#issuecomment-499082076,"I open this PR because I have been browsing through the code, and it often took me a while tracing the meaning of function arguments, so I wrote some comments that I thought would be interesting to share to others as doxygen comments.
Also, and more importantly, I have been adding a few const type qualifiers to input arguments passed as pointers.
There are a lot of cases where structs are passed as pointers, most often only for input (they are unmodified).
Input and output arguments passed as reference can be explained by using doxygen @param[in] and @param[out] but I think a good and visual safeguard is also to qualify them as const so that the programmer and compiler both know this argument should not be modified.
Adding const qualification is a recursive action that can lead to changing many sub-function calls, so there is quite some work to be done, probably each time starting from higher level functions, and necessarily recursively reworking the prototypes of the sub-functions they use.",Happy to see more Doxygen contributions. Thanks!,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,788,2019-06-05T04:56:14Z,2019-06-05T13:25:32Z,2019-06-07T06:09:39Z,MERGED,True,25,7,3,https://github.com/lains,Adding comments and const,1,"['doc', 'cleanup', 'WIP']",https://github.com/navit-gps/navit/pull/788,https://github.com/pgrandin,3,https://github.com/navit-gps/navit/pull/788#issuecomment-499154650,"I open this PR because I have been browsing through the code, and it often took me a while tracing the meaning of function arguments, so I wrote some comments that I thought would be interesting to share to others as doxygen comments.
Also, and more importantly, I have been adding a few const type qualifiers to input arguments passed as pointers.
There are a lot of cases where structs are passed as pointers, most often only for input (they are unmodified).
Input and output arguments passed as reference can be explained by using doxygen @param[in] and @param[out] but I think a good and visual safeguard is also to qualify them as const so that the programmer and compiler both know this argument should not be modified.
Adding const qualification is a recursive action that can lead to changing many sub-function calls, so there is quite some work to be done, probably each time starting from higher level functions, and necessarily recursively reworking the prototypes of the sub-functions they use.","Nice work, thanks @lains !",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,788,2019-06-05T04:56:14Z,2019-06-05T13:25:32Z,2019-06-07T06:09:39Z,MERGED,True,25,7,3,https://github.com/lains,Adding comments and const,1,"['doc', 'cleanup', 'WIP']",https://github.com/navit-gps/navit/pull/788,https://github.com/jkoan,4,https://github.com/navit-gps/navit/pull/788#issuecomment-499347914,"I open this PR because I have been browsing through the code, and it often took me a while tracing the meaning of function arguments, so I wrote some comments that I thought would be interesting to share to others as doxygen comments.
Also, and more importantly, I have been adding a few const type qualifiers to input arguments passed as pointers.
There are a lot of cases where structs are passed as pointers, most often only for input (they are unmodified).
Input and output arguments passed as reference can be explained by using doxygen @param[in] and @param[out] but I think a good and visual safeguard is also to qualify them as const so that the programmer and compiler both know this argument should not be modified.
Adding const qualification is a recursive action that can lead to changing many sub-function calls, so there is quite some work to be done, probably each time starting from higher level functions, and necessarily recursively reworking the prototypes of the sub-functions they use.","Öhm guys, this PR had the WIP tag set",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,788,2019-06-05T04:56:14Z,2019-06-05T13:25:32Z,2019-06-07T06:09:39Z,MERGED,True,25,7,3,https://github.com/lains,Adding comments and const,1,"['doc', 'cleanup', 'WIP']",https://github.com/navit-gps/navit/pull/788,https://github.com/lains,5,https://github.com/navit-gps/navit/pull/788#issuecomment-499588706,"I open this PR because I have been browsing through the code, and it often took me a while tracing the meaning of function arguments, so I wrote some comments that I thought would be interesting to share to others as doxygen comments.
Also, and more importantly, I have been adding a few const type qualifiers to input arguments passed as pointers.
There are a lot of cases where structs are passed as pointers, most often only for input (they are unmodified).
Input and output arguments passed as reference can be explained by using doxygen @param[in] and @param[out] but I think a good and visual safeguard is also to qualify them as const so that the programmer and compiler both know this argument should not be modified.
Adding const qualification is a recursive action that can lead to changing many sub-function calls, so there is quite some work to be done, probably each time starting from higher level functions, and necessarily recursively reworking the prototypes of the sub-functions they use.","No worries, its was ready to merge. I just used the WIP tag because I wanted to add more of similar stuff, but I'll open new PRs for further work on this topic.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,788,2019-06-05T04:56:14Z,2019-06-05T13:25:32Z,2019-06-07T06:09:39Z,MERGED,True,25,7,3,https://github.com/lains,Adding comments and const,1,"['doc', 'cleanup', 'WIP']",https://github.com/navit-gps/navit/pull/788,https://github.com/mvglasow,6,https://github.com/navit-gps/navit/pull/788#issuecomment-499621353,"I open this PR because I have been browsing through the code, and it often took me a while tracing the meaning of function arguments, so I wrote some comments that I thought would be interesting to share to others as doxygen comments.
Also, and more importantly, I have been adding a few const type qualifiers to input arguments passed as pointers.
There are a lot of cases where structs are passed as pointers, most often only for input (they are unmodified).
Input and output arguments passed as reference can be explained by using doxygen @param[in] and @param[out] but I think a good and visual safeguard is also to qualify them as const so that the programmer and compiler both know this argument should not be modified.
Adding const qualification is a recursive action that can lead to changing many sub-function calls, so there is quite some work to be done, probably each time starting from higher level functions, and necessarily recursively reworking the prototypes of the sub-functions they use.","Sorry, I get trigger-happy when it comes to docs :-)
Personally, when I have docs to add, I commit them straight to trunk (after once being advised that for pure refactoring without even any code changes, there is no need to go through the whole review process).",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,788,2019-06-05T04:56:14Z,2019-06-05T13:25:32Z,2019-06-07T06:09:39Z,MERGED,True,25,7,3,https://github.com/lains,Adding comments and const,1,"['doc', 'cleanup', 'WIP']",https://github.com/navit-gps/navit/pull/788,https://github.com/lains,7,https://github.com/navit-gps/navit/pull/788#issuecomment-499768678,"I open this PR because I have been browsing through the code, and it often took me a while tracing the meaning of function arguments, so I wrote some comments that I thought would be interesting to share to others as doxygen comments.
Also, and more importantly, I have been adding a few const type qualifiers to input arguments passed as pointers.
There are a lot of cases where structs are passed as pointers, most often only for input (they are unmodified).
Input and output arguments passed as reference can be explained by using doxygen @param[in] and @param[out] but I think a good and visual safeguard is also to qualify them as const so that the programmer and compiler both know this argument should not be modified.
Adding const qualification is a recursive action that can lead to changing many sub-function calls, so there is quite some work to be done, probably each time starting from higher level functions, and necessarily recursively reworking the prototypes of the sub-functions they use.","OK, I'll do it this way (ie: go without review for added doc only). But I think I'll still go via a PR if there are const type qualifiers added as I'm interested in getting circle CI feedback... adding const may break compilation or at least add warnings and this might be in parts of the code that are platform-specific, so I may not have seen it when compiling on my machine.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,791,2019-06-12T00:37:26Z,2019-06-13T17:41:42Z,2019-06-13T17:45:18Z,MERGED,True,36,1,1,https://github.com/aerostitch,update:doc: add the submit patches section from the old wiki close to the code,2,[],https://github.com/navit-gps/navit/pull/791,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/791,"I think it makes sense to start putting elements to contribute to the code inside the CONTRIBUTING.md document to centralise that a bit more like every other project do.
This PR migrate the https://wiki.navit-project.org/index.php/Submitting_patches document from the wiki to here and do some updates on it.","I think it makes sense to start putting elements to contribute to the code inside the CONTRIBUTING.md document to centralise that a bit more like every other project do.
This PR migrate the https://wiki.navit-project.org/index.php/Submitting_patches document from the wiki to here and do some updates on it.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,791,2019-06-12T00:37:26Z,2019-06-13T17:41:42Z,2019-06-13T17:45:18Z,MERGED,True,36,1,1,https://github.com/aerostitch,update:doc: add the submit patches section from the old wiki close to the code,2,[],https://github.com/navit-gps/navit/pull/791,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/791#issuecomment-501805649,"I think it makes sense to start putting elements to contribute to the code inside the CONTRIBUTING.md document to centralise that a bit more like every other project do.
This PR migrate the https://wiki.navit-project.org/index.php/Submitting_patches document from the wiki to here and do some updates on it.","Thanks @aerostitch
We will probably need to rework the content at some point, but it's definitely a good start.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,791,2019-06-12T00:37:26Z,2019-06-13T17:41:42Z,2019-06-13T17:45:18Z,MERGED,True,36,1,1,https://github.com/aerostitch,update:doc: add the submit patches section from the old wiki close to the code,2,[],https://github.com/navit-gps/navit/pull/791,https://github.com/aerostitch,3,https://github.com/navit-gps/navit/pull/791#issuecomment-501808935,"I think it makes sense to start putting elements to contribute to the code inside the CONTRIBUTING.md document to centralise that a bit more like every other project do.
This PR migrate the https://wiki.navit-project.org/index.php/Submitting_patches document from the wiki to here and do some updates on it.","Thanks I'll migrate other docs in the days to come.
Bisou beco! 😚",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,793,2019-06-14T04:16:11Z,2019-06-14T15:14:20Z,2019-06-14T15:14:30Z,MERGED,True,21,3,1,https://github.com/aerostitch,update:doc: Update the contributing.md to add the contributing section of the Programming guidelines,1,[],https://github.com/navit-gps/navit/pull/793,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/793,"I think the rest of the Programming guidelines should probably go to a ""Development"" section in ReadTheDocs as it's a bit bigger.
Just took parts of the Contributing section of the Programming guidelines to put here what was missing.","I think the rest of the Programming guidelines should probably go to a ""Development"" section in ReadTheDocs as it's a bit bigger.
Just took parts of the Contributing section of the Programming guidelines to put here what was missing.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,793,2019-06-14T04:16:11Z,2019-06-14T15:14:20Z,2019-06-14T15:14:30Z,MERGED,True,21,3,1,https://github.com/aerostitch,update:doc: Update the contributing.md to add the contributing section of the Programming guidelines,1,[],https://github.com/navit-gps/navit/pull/793,https://github.com/aerostitch,2,https://github.com/navit-gps/navit/pull/793#issuecomment-502148259,"I think the rest of the Programming guidelines should probably go to a ""Development"" section in ReadTheDocs as it's a bit bigger.
Just took parts of the Contributing section of the Programming guidelines to put here what was missing.",Thanks! :),True,{}
navit-gps/navit,https://github.com/navit-gps/navit,794,2019-06-14T07:24:09Z,2019-09-22T15:33:57Z,2019-09-22T15:34:08Z,MERGED,True,344,213,11,https://github.com/lains,Add/Android: Provide geo coordinates for clicked position in contextual menu,35,"['enhancement', 'android']",https://github.com/navit-gps/navit/pull/794,https://github.com/lains,1,https://github.com/navit-gps/navit/pull/794,"When performing a short clicking/tap on an point on the map, in Android, a contextual menu is opened.
This menu mainly allows to start navigation to the point that has just been clicked on.
This PR adds two features:


it adds the geographical coordinates of the point clicked on the map in the contextual menu title:



and it fixes the displayed name of the location in the destination history (before it used screen coordinates as a bookmark names, which does not make much sense for the final user, and was partially broken, as only X coordinates were used).
The screenshot below allows to compare both the new destination name format (top), and the old destination format (second entry named ""334""):



In addition, this PR also adds a mechanism to escape and unescape double quotes ("") in text files (required to store geographical coordinates, as they use character ("") for seconds).","When performing a short clicking/tap on an point on the map, in Android, a contextual menu is opened.
This menu mainly allows to start navigation to the point that has just been clicked on.
This PR adds two features:


it adds the geographical coordinates of the point clicked on the map in the contextual menu title:



and it fixes the displayed name of the location in the destination history (before it used screen coordinates as a bookmark names, which does not make much sense for the final user, and was partially broken, as only X coordinates were used).
The screenshot below allows to compare both the new destination name format (top), and the old destination format (second entry named ""334""):



In addition, this PR also adds a mechanism to escape and unescape double quotes ("") in text files (required to store geographical coordinates, as they use character ("") for seconds).",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,794,2019-06-14T07:24:09Z,2019-09-22T15:33:57Z,2019-09-22T15:34:08Z,MERGED,True,344,213,11,https://github.com/lains,Add/Android: Provide geo coordinates for clicked position in contextual menu,35,"['enhancement', 'android']",https://github.com/navit-gps/navit/pull/794,https://github.com/lains,2,https://github.com/navit-gps/navit/pull/794#issuecomment-522250420,"When performing a short clicking/tap on an point on the map, in Android, a contextual menu is opened.
This menu mainly allows to start navigation to the point that has just been clicked on.
This PR adds two features:


it adds the geographical coordinates of the point clicked on the map in the contextual menu title:



and it fixes the displayed name of the location in the destination history (before it used screen coordinates as a bookmark names, which does not make much sense for the final user, and was partially broken, as only X coordinates were used).
The screenshot below allows to compare both the new destination name format (top), and the old destination format (second entry named ""334""):



In addition, this PR also adds a mechanism to escape and unescape double quotes ("") in text files (required to store geographical coordinates, as they use character ("") for seconds).","This PR has been rebased on the latest trunk, including the fix for Android build (c2f9838).",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,794,2019-06-14T07:24:09Z,2019-09-22T15:33:57Z,2019-09-22T15:34:08Z,MERGED,True,344,213,11,https://github.com/lains,Add/Android: Provide geo coordinates for clicked position in contextual menu,35,"['enhancement', 'android']",https://github.com/navit-gps/navit/pull/794,https://github.com/lains,3,https://github.com/navit-gps/navit/pull/794#issuecomment-529187687,"When performing a short clicking/tap on an point on the map, in Android, a contextual menu is opened.
This menu mainly allows to start navigation to the point that has just been clicked on.
This PR adds two features:


it adds the geographical coordinates of the point clicked on the map in the contextual menu title:



and it fixes the displayed name of the location in the destination history (before it used screen coordinates as a bookmark names, which does not make much sense for the final user, and was partially broken, as only X coordinates were used).
The screenshot below allows to compare both the new destination name format (top), and the old destination format (second entry named ""334""):



In addition, this PR also adds a mechanism to escape and unescape double quotes ("") in text files (required to store geographical coordinates, as they use character ("") for seconds).",PR rebased on current trunk and is ready for merge. Should probably be merged before #812 (that also includes this code).,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,794,2019-06-14T07:24:09Z,2019-09-22T15:33:57Z,2019-09-22T15:34:08Z,MERGED,True,344,213,11,https://github.com/lains,Add/Android: Provide geo coordinates for clicked position in contextual menu,35,"['enhancement', 'android']",https://github.com/navit-gps/navit/pull/794,https://github.com/lains,4,https://github.com/navit-gps/navit/pull/794#issuecomment-531540395,"When performing a short clicking/tap on an point on the map, in Android, a contextual menu is opened.
This menu mainly allows to start navigation to the point that has just been clicked on.
This PR adds two features:


it adds the geographical coordinates of the point clicked on the map in the contextual menu title:



and it fixes the displayed name of the location in the destination history (before it used screen coordinates as a bookmark names, which does not make much sense for the final user, and was partially broken, as only X coordinates were used).
The screenshot below allows to compare both the new destination name format (top), and the old destination format (second entry named ""334""):



In addition, this PR also adds a mechanism to escape and unescape double quotes ("") in text files (required to store geographical coordinates, as they use character ("") for seconds).","This is a prerequisite for #812.
Anyone against merging this? If not, I will rebase and merge (probably next week-end... September 21-22nd)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,794,2019-06-14T07:24:09Z,2019-09-22T15:33:57Z,2019-09-22T15:34:08Z,MERGED,True,344,213,11,https://github.com/lains,Add/Android: Provide geo coordinates for clicked position in contextual menu,35,"['enhancement', 'android']",https://github.com/navit-gps/navit/pull/794,https://github.com/jandegr,5,https://github.com/navit-gps/navit/pull/794#issuecomment-531551858,"When performing a short clicking/tap on an point on the map, in Android, a contextual menu is opened.
This menu mainly allows to start navigation to the point that has just been clicked on.
This PR adds two features:


it adds the geographical coordinates of the point clicked on the map in the contextual menu title:



and it fixes the displayed name of the location in the destination history (before it used screen coordinates as a bookmark names, which does not make much sense for the final user, and was partially broken, as only X coordinates were used).
The screenshot below allows to compare both the new destination name format (top), and the old destination format (second entry named ""334""):



In addition, this PR also adds a mechanism to escape and unescape double quotes ("") in text files (required to store geographical coordinates, as they use character ("") for seconds).","Hi,
A small note on the JNI signature
int must be jint and the name must be Java_org_navitproject_navit_NavitGraphics_getCoordForPoint
and in java change the name as well and private will do
private native String getCoordForPoint(int id, int x, int y);
otherwise an extra codefactor issue for the name :)
for the rest you might have a too long line here or there, checks on CI do not verify linelength but codefactor will bite.
Final remark, do you need an import of math.h in android.c or is that a remain of a preliminay version ?
thx.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,794,2019-06-14T07:24:09Z,2019-09-22T15:33:57Z,2019-09-22T15:34:08Z,MERGED,True,344,213,11,https://github.com/lains,Add/Android: Provide geo coordinates for clicked position in contextual menu,35,"['enhancement', 'android']",https://github.com/navit-gps/navit/pull/794,https://github.com/lains,6,https://github.com/navit-gps/navit/pull/794#issuecomment-531892157,"When performing a short clicking/tap on an point on the map, in Android, a contextual menu is opened.
This menu mainly allows to start navigation to the point that has just been clicked on.
This PR adds two features:


it adds the geographical coordinates of the point clicked on the map in the contextual menu title:



and it fixes the displayed name of the location in the destination history (before it used screen coordinates as a bookmark names, which does not make much sense for the final user, and was partially broken, as only X coordinates were used).
The screenshot below allows to compare both the new destination name format (top), and the old destination format (second entry named ""334""):



In addition, this PR also adds a mechanism to escape and unescape double quotes ("") in text files (required to store geographical coordinates, as they use character ("") for seconds).","Hi @jandegr, thanks for your feedback. I'll have a look at these items.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,794,2019-06-14T07:24:09Z,2019-09-22T15:33:57Z,2019-09-22T15:34:08Z,MERGED,True,344,213,11,https://github.com/lains,Add/Android: Provide geo coordinates for clicked position in contextual menu,35,"['enhancement', 'android']",https://github.com/navit-gps/navit/pull/794,https://github.com/lains,7,https://github.com/navit-gps/navit/pull/794#issuecomment-532312354,"When performing a short clicking/tap on an point on the map, in Android, a contextual menu is opened.
This menu mainly allows to start navigation to the point that has just been clicked on.
This PR adds two features:


it adds the geographical coordinates of the point clicked on the map in the contextual menu title:



and it fixes the displayed name of the location in the destination history (before it used screen coordinates as a bookmark names, which does not make much sense for the final user, and was partially broken, as only X coordinates were used).
The screenshot below allows to compare both the new destination name format (top), and the old destination format (second entry named ""334""):



In addition, this PR also adds a mechanism to escape and unescape double quotes ("") in text files (required to store geographical coordinates, as they use character ("") for seconds).","CircleCI sanity check passed. CodeFactor did find style issues including lines that are too long, but these are not related to the changes included by this PR, so I'd rather not mix current changes with unrelated style updates.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,794,2019-06-14T07:24:09Z,2019-09-22T15:33:57Z,2019-09-22T15:34:08Z,MERGED,True,344,213,11,https://github.com/lains,Add/Android: Provide geo coordinates for clicked position in contextual menu,35,"['enhancement', 'android']",https://github.com/navit-gps/navit/pull/794,https://github.com/lains,8,https://github.com/navit-gps/navit/pull/794#issuecomment-533819610,"When performing a short clicking/tap on an point on the map, in Android, a contextual menu is opened.
This menu mainly allows to start navigation to the point that has just been clicked on.
This PR adds two features:


it adds the geographical coordinates of the point clicked on the map in the contextual menu title:



and it fixes the displayed name of the location in the destination history (before it used screen coordinates as a bookmark names, which does not make much sense for the final user, and was partially broken, as only X coordinates were used).
The screenshot below allows to compare both the new destination name format (top), and the old destination format (second entry named ""334""):



In addition, this PR also adds a mechanism to escape and unescape double quotes ("") in text files (required to store geographical coordinates, as they use character ("") for seconds).",Will soon (probably tomorrow) rebase and squash merge... unless anyone is against it...,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,797,2019-06-18T08:52:16Z,2019-06-18T09:13:31Z,2019-09-25T20:46:04Z,MERGED,True,7,0,1,https://github.com/metalstrolch,Disable maptool if protobuf-c not found,1,[],https://github.com/navit-gps/navit/pull/797,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/797,"After updating I noticed that now maptool seems to hard depend on protobuf-c. This fix disables maptool if protobuf-c is not found, but allows to build the rest of navit as usual.","After updating I noticed that now maptool seems to hard depend on protobuf-c. This fix disables maptool if protobuf-c is not found, but allows to build the rest of navit as usual.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,798,2019-06-18T09:07:32Z,2019-06-18T11:37:13Z,2019-09-25T20:44:16Z,MERGED,True,6,3,4,https://github.com/metalstrolch,qt5: Remove unnecessary moc includes.,3,[],https://github.com/navit-gps/navit/pull/798,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/798,"This commit removes moc file includes for some classes which do not
define new qt classes. This caused a long standing warning which seems
to be treated as error on some setups.
Additionally a small fix to make nit-picky gcc 8 happy.","This commit removes moc file includes for some classes which do not
define new qt classes. This caused a long standing warning which seems
to be treated as error on some setups.
Additionally a small fix to make nit-picky gcc 8 happy.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,798,2019-06-18T09:07:32Z,2019-06-18T11:37:13Z,2019-09-25T20:44:16Z,MERGED,True,6,3,4,https://github.com/metalstrolch,qt5: Remove unnecessary moc includes.,3,[],https://github.com/navit-gps/navit/pull/798,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/798#issuecomment-503026507,"This commit removes moc file includes for some classes which do not
define new qt classes. This caused a long standing warning which seems
to be treated as error on some setups.
Additionally a small fix to make nit-picky gcc 8 happy.","@metalstrolch QAudio::InterruptedState was added in qt 5.10.
@hoehnp can we update Sailfish build image to a newer qt version?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,798,2019-06-18T09:07:32Z,2019-06-18T11:37:13Z,2019-09-25T20:44:16Z,MERGED,True,6,3,4,https://github.com/metalstrolch,qt5: Remove unnecessary moc includes.,3,[],https://github.com/navit-gps/navit/pull/798,https://github.com/metalstrolch,3,https://github.com/navit-gps/navit/pull/798#issuecomment-503042051,"This commit removes moc file includes for some classes which do not
define new qt classes. This caused a long standing warning which seems
to be treated as error on some setups.
Additionally a small fix to make nit-picky gcc 8 happy.","No, unless Jolla decides to do, we cannot update QT",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,799,2019-06-19T04:10:40Z,2019-06-19T16:51:49Z,2019-06-19T16:52:00Z,MERGED,True,193,4,4,https://github.com/aerostitch,Migrate the programming guidelines documentation to readthedocs,1,[],https://github.com/navit-gps/navit/pull/799,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/799,"Migration from https://wiki.navit-project.org/index.php/Programming_guidelines to readthedocs
Created a section specific for developers to make things clearer.","Migration from https://wiki.navit-project.org/index.php/Programming_guidelines to readthedocs
Created a section specific for developers to make things clearer.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,799,2019-06-19T04:10:40Z,2019-06-19T16:51:49Z,2019-06-19T16:52:00Z,MERGED,True,193,4,4,https://github.com/aerostitch,Migrate the programming guidelines documentation to readthedocs,1,[],https://github.com/navit-gps/navit/pull/799,https://github.com/aerostitch,2,https://github.com/navit-gps/navit/pull/799#issuecomment-503642287,"Migration from https://wiki.navit-project.org/index.php/Programming_guidelines to readthedocs
Created a section specific for developers to make things clearer.",thx!,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,803,2019-06-21T19:21:16Z,2019-09-15T09:46:25Z,2019-09-27T12:47:14Z,CLOSED,False,1,1,1,https://github.com/jkoan,fix:core:Fix run when in build dir,1,[],https://github.com/navit-gps/navit/pull/803,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/803,This PR should fix the issue for not finding the right files when navit in run through the build directory,This PR should fix the issue for not finding the right files when navit in run through the build directory,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,803,2019-06-21T19:21:16Z,2019-09-15T09:46:25Z,2019-09-27T12:47:14Z,CLOSED,False,1,1,1,https://github.com/jkoan,fix:core:Fix run when in build dir,1,[],https://github.com/navit-gps/navit/pull/803,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/803#issuecomment-504688389,This PR should fix the issue for not finding the right files when navit in run through the build directory,"Fix for Tomtom will be addressed in another PR, its not related to this PR and occures because of outside network effects",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,803,2019-06-21T19:21:16Z,2019-09-15T09:46:25Z,2019-09-27T12:47:14Z,CLOSED,False,1,1,1,https://github.com/jkoan,fix:core:Fix run when in build dir,1,[],https://github.com/navit-gps/navit/pull/803,https://github.com/jandegr,3,https://github.com/navit-gps/navit/pull/803#issuecomment-504734480,This PR should fix the issue for not finding the right files when navit in run through the build directory,"Hi,
Not checking for version.h won't help a bit, which makes me think this proposed fix is yet another one that has not been tested properly.
Looking for Makefile might be an alternative and a first test shows it works, see https://circleci.com/gh/jandegr/routing-qa/582#artifacts/containers/0
It would be odd that somebody would run it from a place where something else had been built and left a Makefile behind, but if somebody can think of a sideeffect or propose a better, working, solution the pls. do so.
IIRC correctly, in the old days in CI, after compilation maptool would compile the sample map, navit would then be started with the produced binfile and a screenshot would be imported. That was real testing and would prevent such mishaps from beeing committed.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,803,2019-06-21T19:21:16Z,2019-09-15T09:46:25Z,2019-09-27T12:47:14Z,CLOSED,False,1,1,1,https://github.com/jkoan,fix:core:Fix run when in build dir,1,[],https://github.com/navit-gps/navit/pull/803,https://github.com/jkoan,4,https://github.com/navit-gps/navit/pull/803#issuecomment-531551257,This PR should fix the issue for not finding the right files when navit in run through the build directory,"@jandegr you are right, it was my mistake while testing. I will try do do a better fix soon. But checking for Makefile is not a solution ether, since cmake cant use a few other generators. checking for lib directory's or other build results could be a solution or even create a file within BINARYDIR which is empty and its only purpose is to be detected in this case.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,803,2019-06-21T19:21:16Z,2019-09-15T09:46:25Z,2019-09-27T12:47:14Z,CLOSED,False,1,1,1,https://github.com/jkoan,fix:core:Fix run when in build dir,1,[],https://github.com/navit-gps/navit/pull/803,https://github.com/jandegr,5,https://github.com/navit-gps/navit/pull/803#issuecomment-535924446,This PR should fix the issue for not finding the right files when navit in run through the build directory,"ok, the workaround I came up with is far from optimal either, that is true, but I just had to find some temporary solution to get QA back running, otherwise it was just dead in the water :)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,806,2019-06-27T17:51:42Z,2019-06-28T15:22:19Z,2019-06-28T15:22:23Z,MERGED,True,5,0,2,https://github.com/pgrandin,jandegr's fix for the windows builds issues,1,[],https://github.com/navit-gps/navit/pull/806,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/806,The resulting build has been confirmed to fix the issue.,The resulting build has been confirmed to fix the issue.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,806,2019-06-27T17:51:42Z,2019-06-28T15:22:19Z,2019-06-28T15:22:23Z,MERGED,True,5,0,2,https://github.com/pgrandin,jandegr's fix for the windows builds issues,1,[],https://github.com/navit-gps/navit/pull/806,https://github.com/jandegr,2,https://github.com/navit-gps/navit/pull/806#issuecomment-506454170,The resulting build has been confirmed to fix the issue.,"Tested on win10-64 and I confirm it can read binfile again and no errormessages (except for the speech issue as reported in #777)
On IRC DuncanDo confirmed it working as well on june 4",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,807,2019-06-29T21:21:11Z,2019-07-01T21:57:40Z,2019-07-01T21:57:48Z,MERGED,True,4,4,2,https://github.com/aerostitch,update:doc:Fix the readthedocs url for the development guidelines,1,['doc'],https://github.com/navit-gps/navit/pull/807,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/807,The readthedocs url is available for the trunk branch but not the latest tag in readthedocs so let's use that branch instead.,The readthedocs url is available for the trunk branch but not the latest tag in readthedocs so let's use that branch instead.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,807,2019-06-29T21:21:11Z,2019-07-01T21:57:40Z,2019-07-01T21:57:48Z,MERGED,True,4,4,2,https://github.com/aerostitch,update:doc:Fix the readthedocs url for the development guidelines,1,['doc'],https://github.com/navit-gps/navit/pull/807,https://github.com/aerostitch,2,https://github.com/navit-gps/navit/pull/807#issuecomment-507440891,The readthedocs url is available for the trunk branch but not the latest tag in readthedocs so let's use that branch instead.,thx!,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,810,2019-07-15T13:29:47Z,2019-07-21T11:21:03Z,2019-08-27T08:30:51Z,CLOSED,False,1019,578,41,https://github.com/metalstrolch,Add:osd/core:honor screen dpi,19,['enhancement'],https://github.com/navit-gps/navit/pull/810,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/810,"This pull request adds the possibility to specify OSD items and OSD icons in human units correctly honouring screen dpi. It allows to give for example w=""15.2mm"" or ""x=-20.5mm"" in config file for osd items displaying them the same size regardless of the device's DPI. This allows to have the same OSD configuration for quite different dpi devices.
For example on sailfish the high dpi sony xperia xa2 vs the standard Jolla1.
Eventually I'll enhance this text sizes as well, or maybe even for map drawing.
Does contain:

Small backward compatible interface change for graphics plug ins.
Change in attr handling for attr_type_rel_abs eventually overcoming ATTR_REL_RELSHIFT magic.
Change in attr handling for internal gui (icon_xs, icon_s, icon_l and spacing)

What works already:

qt5 graphics already gives dpi value. Needs to be implemented for different graphics as well.
gtk_drawing_area gives dpi value.
standard OSD items x,y,w,h values. Not all tested though.
on map icons w and h values.
internal gui icon sizes can take human values and relative values (%) as well.

What works not:

icon_w and icon_h for those that support this. Don't know if this makes sense at all.
font size handling. But no regression on existing configs.
Need to understand the unit navit works with for font size, to learn how to convert from e.g. mm to that.
- setting the changed attrs from bindings like d-bus may fail without porting the remote application.

Comments are welcome, of course.","This pull request adds the possibility to specify OSD items and OSD icons in human units correctly honouring screen dpi. It allows to give for example w=""15.2mm"" or ""x=-20.5mm"" in config file for osd items displaying them the same size regardless of the device's DPI. This allows to have the same OSD configuration for quite different dpi devices.
For example on sailfish the high dpi sony xperia xa2 vs the standard Jolla1.
Eventually I'll enhance this text sizes as well, or maybe even for map drawing.
Does contain:

Small backward compatible interface change for graphics plug ins.
Change in attr handling for attr_type_rel_abs eventually overcoming ATTR_REL_RELSHIFT magic.
Change in attr handling for internal gui (icon_xs, icon_s, icon_l and spacing)

What works already:

qt5 graphics already gives dpi value. Needs to be implemented for different graphics as well.
gtk_drawing_area gives dpi value.
standard OSD items x,y,w,h values. Not all tested though.
on map icons w and h values.
internal gui icon sizes can take human values and relative values (%) as well.

What works not:

icon_w and icon_h for those that support this. Don't know if this makes sense at all.
font size handling. But no regression on existing configs.
Need to understand the unit navit works with for font size, to learn how to convert from e.g. mm to that.
- setting the changed attrs from bindings like d-bus may fail without porting the remote application.

Comments are welcome, of course.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,810,2019-07-15T13:29:47Z,2019-07-21T11:21:03Z,2019-08-27T08:30:51Z,CLOSED,False,1019,578,41,https://github.com/metalstrolch,Add:osd/core:honor screen dpi,19,['enhancement'],https://github.com/navit-gps/navit/pull/810,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/810#issuecomment-511731465,"This pull request adds the possibility to specify OSD items and OSD icons in human units correctly honouring screen dpi. It allows to give for example w=""15.2mm"" or ""x=-20.5mm"" in config file for osd items displaying them the same size regardless of the device's DPI. This allows to have the same OSD configuration for quite different dpi devices.
For example on sailfish the high dpi sony xperia xa2 vs the standard Jolla1.
Eventually I'll enhance this text sizes as well, or maybe even for map drawing.
Does contain:

Small backward compatible interface change for graphics plug ins.
Change in attr handling for attr_type_rel_abs eventually overcoming ATTR_REL_RELSHIFT magic.
Change in attr handling for internal gui (icon_xs, icon_s, icon_l and spacing)

What works already:

qt5 graphics already gives dpi value. Needs to be implemented for different graphics as well.
gtk_drawing_area gives dpi value.
standard OSD items x,y,w,h values. Not all tested though.
on map icons w and h values.
internal gui icon sizes can take human values and relative values (%) as well.

What works not:

icon_w and icon_h for those that support this. Don't know if this makes sense at all.
font size handling. But no regression on existing configs.
Need to understand the unit navit works with for font size, to learn how to convert from e.g. mm to that.
- setting the changed attrs from bindings like d-bus may fail without porting the remote application.

Comments are welcome, of course.","Help wanted:
What's the current unit of navit font sizes? How to convert to that from e.g. millimeters, inches, or pixels. Currently it doesn't seem to be pixels.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,810,2019-07-15T13:29:47Z,2019-07-21T11:21:03Z,2019-08-27T08:30:51Z,CLOSED,False,1019,578,41,https://github.com/metalstrolch,Add:osd/core:honor screen dpi,19,['enhancement'],https://github.com/navit-gps/navit/pull/810,https://github.com/metalstrolch,3,https://github.com/navit-gps/navit/pull/810#issuecomment-511778781,"This pull request adds the possibility to specify OSD items and OSD icons in human units correctly honouring screen dpi. It allows to give for example w=""15.2mm"" or ""x=-20.5mm"" in config file for osd items displaying them the same size regardless of the device's DPI. This allows to have the same OSD configuration for quite different dpi devices.
For example on sailfish the high dpi sony xperia xa2 vs the standard Jolla1.
Eventually I'll enhance this text sizes as well, or maybe even for map drawing.
Does contain:

Small backward compatible interface change for graphics plug ins.
Change in attr handling for attr_type_rel_abs eventually overcoming ATTR_REL_RELSHIFT magic.
Change in attr handling for internal gui (icon_xs, icon_s, icon_l and spacing)

What works already:

qt5 graphics already gives dpi value. Needs to be implemented for different graphics as well.
gtk_drawing_area gives dpi value.
standard OSD items x,y,w,h values. Not all tested though.
on map icons w and h values.
internal gui icon sizes can take human values and relative values (%) as well.

What works not:

icon_w and icon_h for those that support this. Don't know if this makes sense at all.
font size handling. But no regression on existing configs.
Need to understand the unit navit works with for font size, to learn how to convert from e.g. mm to that.
- setting the changed attrs from bindings like d-bus may fail without porting the remote application.

Comments are welcome, of course.","Help wanted:
What applications exist dealing with ""w h x y icon_xs icon_s icon_l spacing"" from remote and what purpose for?
Who knows about how the bindings are used?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,810,2019-07-15T13:29:47Z,2019-07-21T11:21:03Z,2019-08-27T08:30:51Z,CLOSED,False,1019,578,41,https://github.com/metalstrolch,Add:osd/core:honor screen dpi,19,['enhancement'],https://github.com/navit-gps/navit/pull/810,https://github.com/mvglasow,4,https://github.com/navit-gps/navit/pull/810#issuecomment-513154349,"This pull request adds the possibility to specify OSD items and OSD icons in human units correctly honouring screen dpi. It allows to give for example w=""15.2mm"" or ""x=-20.5mm"" in config file for osd items displaying them the same size regardless of the device's DPI. This allows to have the same OSD configuration for quite different dpi devices.
For example on sailfish the high dpi sony xperia xa2 vs the standard Jolla1.
Eventually I'll enhance this text sizes as well, or maybe even for map drawing.
Does contain:

Small backward compatible interface change for graphics plug ins.
Change in attr handling for attr_type_rel_abs eventually overcoming ATTR_REL_RELSHIFT magic.
Change in attr handling for internal gui (icon_xs, icon_s, icon_l and spacing)

What works already:

qt5 graphics already gives dpi value. Needs to be implemented for different graphics as well.
gtk_drawing_area gives dpi value.
standard OSD items x,y,w,h values. Not all tested though.
on map icons w and h values.
internal gui icon sizes can take human values and relative values (%) as well.

What works not:

icon_w and icon_h for those that support this. Don't know if this makes sense at all.
font size handling. But no regression on existing configs.
Need to understand the unit navit works with for font size, to learn how to convert from e.g. mm to that.
- setting the changed attrs from bindings like d-bus may fail without porting the remote application.

Comments are welcome, of course.","I may be a bit late to the party but I would suggest considering the way other platforms deal with different screen densities.
Android (being the one I am most familiar width) has the concept of the “display-independent pixel” (or was that density-independent?): 1 dp (or dip) corresponds to 1 pixel on a 160 dpi screen (the baseline resolution). When Android gets a size specified in dip, it will scale it according to the reported screen density of the device. For bitmap resources, it will pick a differently-sized bitmap if available.
To simplify things, devices do not report their precise DPI but are divided into “density bins” of 120, 160, 240, 360 and 480 dpi (LDPI, MDPI, HDPI, XHDPI and XXHDPI, respectively).
iOS, as far as I know, follows a somewhat similar approach: pixel sizes refer to the density of the original iPhone (which was around 160 dpi) and are scaled on later models with different screen densities.
Windows has had a registry setting for screen density since Windows 95/NT 4.0. Default was 96 dpi (roughly equivalent to a 24″ screen at 1920×1080). Back in the days, fiddling with the DPI did not have any effect on the dimensions of UI elements, though some applications would resize their content accordingly (print previews in Word being one case I remember). Not sure if this is the same setting by which more recent versions of Windows determine UI dimensions.
No idea how Unix-like platforms do this; I remember seeing something long ago about 75 dpi being the baseline assumption (roughly equivalent to the density common on CRT screens back in the days).
I would in fact go for a unit such as “pixels at baseline resolution” combined with density bins, thus avoiding arbitrary scaling. (A bitmap scaled to 2.851849 times its native size doesn’t look too good, especially on low-density screens.) Also, metric sized don’t lend themselves too well to this purpose, as screen measures are mostly inch-based.
For the baseline resolution, 160 dpi would be good for compatibility with mobile OSes. The original assumption of pixel density in Navit was probably around 100 dpi (as higher display densities weren’t yet a thing for another 5 years). A good compromise would be 120 dpi, sufficiently close to the density of traditional desktop displays and still compatible with the density bins mentioned above, so I would go for a baseline of either 120 or 160 dpi.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,810,2019-07-15T13:29:47Z,2019-07-21T11:21:03Z,2019-08-27T08:30:51Z,CLOSED,False,1019,578,41,https://github.com/metalstrolch,Add:osd/core:honor screen dpi,19,['enhancement'],https://github.com/navit-gps/navit/pull/810,https://github.com/metalstrolch,5,https://github.com/navit-gps/navit/pull/810#issuecomment-513177010,"This pull request adds the possibility to specify OSD items and OSD icons in human units correctly honouring screen dpi. It allows to give for example w=""15.2mm"" or ""x=-20.5mm"" in config file for osd items displaying them the same size regardless of the device's DPI. This allows to have the same OSD configuration for quite different dpi devices.
For example on sailfish the high dpi sony xperia xa2 vs the standard Jolla1.
Eventually I'll enhance this text sizes as well, or maybe even for map drawing.
Does contain:

Small backward compatible interface change for graphics plug ins.
Change in attr handling for attr_type_rel_abs eventually overcoming ATTR_REL_RELSHIFT magic.
Change in attr handling for internal gui (icon_xs, icon_s, icon_l and spacing)

What works already:

qt5 graphics already gives dpi value. Needs to be implemented for different graphics as well.
gtk_drawing_area gives dpi value.
standard OSD items x,y,w,h values. Not all tested though.
on map icons w and h values.
internal gui icon sizes can take human values and relative values (%) as well.

What works not:

icon_w and icon_h for those that support this. Don't know if this makes sense at all.
font size handling. But no regression on existing configs.
Need to understand the unit navit works with for font size, to learn how to convert from e.g. mm to that.
- setting the changed attrs from bindings like d-bus may fail without porting the remote application.

Comments are welcome, of course.","Yes that's exactly what i try to do here. I'm not quite shure to what extend.
Usually you have your dpi value. Which means how many pixels per inch your display has.
Then you need a physical unit:
I choose ""mm"" and ""in"". It's simple to add ""dip"" (2 lines). Because all of them are physical units.
1 in == 1 * dpi pixels
1 mm == (0,0393701) * dpi pixels
1 dip == (1 / 160) * dpi pixels
-> you always need to scale things including bitmaps (or better use svg) to screen. Android does this as well. But usually only upscaling if higher dpi. That's barely visible.
Navit currently uses pixels internally on interface between navit core and the graphics. The text size is in pixels as well, but a strange unit is used here due to somebody once misunderstood freetyp I think.
My concern is that I don't want to break old configs. All configs currently give everything in pixels. I try to enhance this by allowing to specify a unit in configuration: 1 (pixels), 1mm (millimeters) 1in (inches). We could add 1dip (android dip).
But maybe you're right, We could (globally) make navit work with a virtual pixel unit, and make the unit selectable. This would best be done directly inside the graphics plugins then. But this will effectively limit the ""addressable"" pixels for navit, which on the other hand increases processing speed on high dpi screens. BUt this attempty may be way simpler and less intrusive...
Think I'll roll a second attempt on that. (Now I know how text size is given...)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,810,2019-07-15T13:29:47Z,2019-07-21T11:21:03Z,2019-08-27T08:30:51Z,CLOSED,False,1019,578,41,https://github.com/metalstrolch,Add:osd/core:honor screen dpi,19,['enhancement'],https://github.com/navit-gps/navit/pull/810,https://github.com/metalstrolch,6,https://github.com/navit-gps/navit/pull/810#issuecomment-513545114,"This pull request adds the possibility to specify OSD items and OSD icons in human units correctly honouring screen dpi. It allows to give for example w=""15.2mm"" or ""x=-20.5mm"" in config file for osd items displaying them the same size regardless of the device's DPI. This allows to have the same OSD configuration for quite different dpi devices.
For example on sailfish the high dpi sony xperia xa2 vs the standard Jolla1.
Eventually I'll enhance this text sizes as well, or maybe even for map drawing.
Does contain:

Small backward compatible interface change for graphics plug ins.
Change in attr handling for attr_type_rel_abs eventually overcoming ATTR_REL_RELSHIFT magic.
Change in attr handling for internal gui (icon_xs, icon_s, icon_l and spacing)

What works already:

qt5 graphics already gives dpi value. Needs to be implemented for different graphics as well.
gtk_drawing_area gives dpi value.
standard OSD items x,y,w,h values. Not all tested though.
on map icons w and h values.
internal gui icon sizes can take human values and relative values (%) as well.

What works not:

icon_w and icon_h for those that support this. Don't know if this makes sense at all.
font size handling. But no regression on existing configs.
Need to understand the unit navit works with for font size, to learn how to convert from e.g. mm to that.
- setting the changed attrs from bindings like d-bus may fail without porting the remote application.

Comments are welcome, of course.","Closed, as #813 is the better attempt.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,812,2019-07-20T18:50:24Z,2019-10-23T19:38:53Z,2019-10-28T08:26:58Z,MERGED,True,248,81,6,https://github.com/lains,Add/Android Supporting sending & receiving geo: intents,74,['android'],https://github.com/navit-gps/navit/pull/812,https://github.com/lains,1,https://github.com/navit-gps/navit/pull/812,"This PR adds 2 features to navit for Android:


When a geo: intent is started on Android, for example by scanning a geo QR code, navit is able to takes these coordinates as input


When a specific point is clicked on the map, this PR adds a new item in the contextual menu: ""View"". By clicking on that item (and if there are applications to handle it) a geo intent is generated in Android","This PR adds 2 features to navit for Android:


When a geo: intent is started on Android, for example by scanning a geo QR code, navit is able to takes these coordinates as input


When a specific point is clicked on the map, this PR adds a new item in the contextual menu: ""View"". By clicking on that item (and if there are applications to handle it) a geo intent is generated in Android",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,812,2019-07-20T18:50:24Z,2019-10-23T19:38:53Z,2019-10-28T08:26:58Z,MERGED,True,248,81,6,https://github.com/lains,Add/Android Supporting sending & receiving geo: intents,74,['android'],https://github.com/navit-gps/navit/pull/812,https://github.com/lains,2,https://github.com/navit-gps/navit/pull/812#issuecomment-513490840,"This PR adds 2 features to navit for Android:


When a geo: intent is started on Android, for example by scanning a geo QR code, navit is able to takes these coordinates as input


When a specific point is clicked on the map, this PR adds a new item in the contextual menu: ""View"". By clicking on that item (and if there are applications to handle it) a geo intent is generated in Android","This PR adds the feature described in #678
If you scan that QR code, navit will use the geo location.",True,{'THUMBS_UP': ['https://github.com/jkoan']}
navit-gps/navit,https://github.com/navit-gps/navit,812,2019-07-20T18:50:24Z,2019-10-23T19:38:53Z,2019-10-28T08:26:58Z,MERGED,True,248,81,6,https://github.com/lains,Add/Android Supporting sending & receiving geo: intents,74,['android'],https://github.com/navit-gps/navit/pull/812,https://github.com/lains,3,https://github.com/navit-gps/navit/pull/812#issuecomment-513490926,"This PR adds 2 features to navit for Android:


When a geo: intent is started on Android, for example by scanning a geo QR code, navit is able to takes these coordinates as input


When a specific point is clicked on the map, this PR adds a new item in the contextual menu: ""View"". By clicking on that item (and if there are applications to handle it) a geo intent is generated in Android","This PR is a work in progress, it should not be merged as is as it is based on PR #794 , and it thus requires #794 to be merged first.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,812,2019-07-20T18:50:24Z,2019-10-23T19:38:53Z,2019-10-28T08:26:58Z,MERGED,True,248,81,6,https://github.com/lains,Add/Android Supporting sending & receiving geo: intents,74,['android'],https://github.com/navit-gps/navit/pull/812,https://github.com/lains,4,https://github.com/navit-gps/navit/pull/812#issuecomment-535035337,"This PR adds 2 features to navit for Android:


When a geo: intent is started on Android, for example by scanning a geo QR code, navit is able to takes these coordinates as input


When a specific point is clicked on the map, this PR adds a new item in the contextual menu: ""View"". By clicking on that item (and if there are applications to handle it) a geo intent is generated in Android","@jandegr, I think the tweak you did here needs to be added to the current PR to avoid the loop you're mentionning.
I should maybe even add code to remove navit from the proposed applications so that we never propose the intent to loop back to navit... if this can be done on Android... but I have a track to investigate.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,812,2019-07-20T18:50:24Z,2019-10-23T19:38:53Z,2019-10-28T08:26:58Z,MERGED,True,248,81,6,https://github.com/lains,Add/Android Supporting sending & receiving geo: intents,74,['android'],https://github.com/navit-gps/navit/pull/812,https://github.com/jandegr,5,https://github.com/navit-gps/navit/pull/812#issuecomment-535451413,"This PR adds 2 features to navit for Android:


When a geo: intent is started on Android, for example by scanning a geo QR code, navit is able to takes these coordinates as input


When a specific point is clicked on the map, this PR adds a new item in the contextual menu: ""View"". By clicking on that item (and if there are applications to handle it) a geo intent is generated in Android","Hi,
I removed the receiving geo part in 877. Users can already enjoy sending intents while the other issues are being solved I suppose. I have a few concerns with the receiving geo part but to solve these the differences between navit-gps and #877 become relevant.
For the loopback issue you can retreive the list with candidate receivers, remove Navit from that list and then use it to launch a chooser yourself (navit itself) instead of letting android deal with it. If there is only one left after Navit is removed you can just use it as a target without launching a chooser.
From the brief test I did with the 'receive' part and just looking at the code

when an intent is received it looks as you just set it as destination, maybe an option view on map and discard would be usefull
when an intent is directed towards Navit it just starts as it should, but what happens when there is already a Navit running ? I had the impression it starts a completely new Navit alongside the already running one.

It are just my thoughts on it.
Thx for making this usefull geo intent addition  :)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,812,2019-07-20T18:50:24Z,2019-10-23T19:38:53Z,2019-10-28T08:26:58Z,MERGED,True,248,81,6,https://github.com/lains,Add/Android Supporting sending & receiving geo: intents,74,['android'],https://github.com/navit-gps/navit/pull/812,https://github.com/lains,6,https://github.com/navit-gps/navit/pull/812#issuecomment-535811698,"This PR adds 2 features to navit for Android:


When a geo: intent is started on Android, for example by scanning a geo QR code, navit is able to takes these coordinates as input


When a specific point is clicked on the map, this PR adds a new item in the contextual menu: ""View"". By clicking on that item (and if there are applications to handle it) a geo intent is generated in Android","Hi,
Good stuff. Can you please point me to some sample code so that I can filter out navit from the list of app candidates to receive the goe: intent I send from navit?
When navit is the receiving app for an intent issued by navit itself, you're right, we end up with two apps running, sometimes it even crashes, so I have to deal with this case.
In the future (in another PR), I am planning to build on this code to open a contextual menu when a geo: intent is received. Probably, this could be an internal GUI menu showing options like ""set as destination"", ""view POIs"", ""add to bookmarks"" etc.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,812,2019-07-20T18:50:24Z,2019-10-23T19:38:53Z,2019-10-28T08:26:58Z,MERGED,True,248,81,6,https://github.com/lains,Add/Android Supporting sending & receiving geo: intents,74,['android'],https://github.com/navit-gps/navit/pull/812,https://github.com/jandegr,7,https://github.com/navit-gps/navit/pull/812#issuecomment-535846399,"This PR adds 2 features to navit for Android:


When a geo: intent is started on Android, for example by scanning a geo QR code, navit is able to takes these coordinates as input


When a specific point is clicked on the map, this PR adds a new item in the contextual menu: ""View"". By clicking on that item (and if there are applications to handle it) a geo intent is generated in Android","If I read it correctly then this
https://developer.android.com/reference/android/content/pm/PackageManager#queryIntentActivityOptions(android.content.ComponentName,%20android.content.Intent%5B%5D,%20android.content.Intent,%20int)
could provide a filtered list using the caller param, if I did not read correct then you can still remove navit from the list yourself.
For the chooser, postings like this might help
https://stackoverflow.com/questions/5734678/custom-filtering-of-intent-chooser-based-on-installed-android-package-name
You may have to dig throug a number of those to get a correct solution.

When navit is the receiving app for an intent issued by navit itself, you're right, we end up with two apps running

I think this will happen if Navit is already running and you launch an intent from another app just the same, we just noticed it because of the loopback, or have you tested more ?

sometimes it even crashes

PR 877 comes with a 1 year/20000km warranty for such crashes, I am very interested in scenarios that can cause one related to android code.

In the future (in another PR), I am planning to build on this code to open a contextual menu when a geo: intent is received. Probably, this could be an internal GUI menu showing options like ""set as destination"", ""view POIs"", ""add to bookmarks"" etc.

ok to deal with it later, my take on it would be to handle it with a dedicated activity but feel free to think otherwise",True,{'THUMBS_UP': ['https://github.com/lains']}
navit-gps/navit,https://github.com/navit-gps/navit,812,2019-07-20T18:50:24Z,2019-10-23T19:38:53Z,2019-10-28T08:26:58Z,MERGED,True,248,81,6,https://github.com/lains,Add/Android Supporting sending & receiving geo: intents,74,['android'],https://github.com/navit-gps/navit/pull/812,https://github.com/lains,8,https://github.com/navit-gps/navit/pull/812#issuecomment-536861723,"This PR adds 2 features to navit for Android:


When a geo: intent is started on Android, for example by scanning a geo QR code, navit is able to takes these coordinates as input


When a specific point is clicked on the map, this PR adds a new item in the contextual menu: ""View"". By clicking on that item (and if there are applications to handle it) a geo intent is generated in Android",I am going to rework the part that sends intents so that it does not propose to loop back to navit. I already did some tests that looks promising.,True,{'THUMBS_UP': ['https://github.com/jandegr']}
navit-gps/navit,https://github.com/navit-gps/navit,812,2019-07-20T18:50:24Z,2019-10-23T19:38:53Z,2019-10-28T08:26:58Z,MERGED,True,248,81,6,https://github.com/lains,Add/Android Supporting sending & receiving geo: intents,74,['android'],https://github.com/navit-gps/navit/pull/812,https://github.com/lains,9,https://github.com/navit-gps/navit/pull/812#issuecomment-538622012,"This PR adds 2 features to navit for Android:


When a geo: intent is started on Android, for example by scanning a geo QR code, navit is able to takes these coordinates as input


When a specific point is clicked on the map, this PR adds a new item in the contextual menu: ""View"". By clicking on that item (and if there are applications to handle it) a geo intent is generated in Android","PR 877 comes with a 1 year/20000km warranty for such crashes, I am very interested in scenarios that can cause one related to android code.

Do you want me to try and reproduce the issue of reopening navit from navit, by re-building on a previous commit (this is when I had a crash)?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,812,2019-07-20T18:50:24Z,2019-10-23T19:38:53Z,2019-10-28T08:26:58Z,MERGED,True,248,81,6,https://github.com/lains,Add/Android Supporting sending & receiving geo: intents,74,['android'],https://github.com/navit-gps/navit/pull/812,https://github.com/jandegr,10,https://github.com/navit-gps/navit/pull/812#issuecomment-538622334,"This PR adds 2 features to navit for Android:


When a geo: intent is started on Android, for example by scanning a geo QR code, navit is able to takes these coordinates as input


When a specific point is clicked on the map, this PR adds a new item in the contextual menu: ""View"". By clicking on that item (and if there are applications to handle it) a geo intent is generated in Android","The point is that after PR 877 I want it to be crashfree, sure it was strange in the loopback situation so if you can make it crash on code after PR 877 I would be interested.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,812,2019-07-20T18:50:24Z,2019-10-23T19:38:53Z,2019-10-28T08:26:58Z,MERGED,True,248,81,6,https://github.com/lains,Add/Android Supporting sending & receiving geo: intents,74,['android'],https://github.com/navit-gps/navit/pull/812,https://github.com/jandegr,11,https://github.com/navit-gps/navit/pull/812#issuecomment-538623567,"This PR adds 2 features to navit for Android:


When a geo: intent is started on Android, for example by scanning a geo QR code, navit is able to takes these coordinates as input


When a specific point is clicked on the map, this PR adds a new item in the contextual menu: ""View"". By clicking on that item (and if there are applications to handle it) a geo intent is generated in Android","This one https://circleci.com/gh/navit-gps/navit/17716#artifacts/containers/0
on the SM-J600G of STF @pgrandin
View leads to Googlemaps without the chooser menu, so I suppose there is only Googlemaps and Navit on the device to receive geo and with that assumption it behaves as expected and sends it to Googlemaps without showing the chooser.

After installing one more app to receive geo intents I now get the chooser.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,812,2019-07-20T18:50:24Z,2019-10-23T19:38:53Z,2019-10-28T08:26:58Z,MERGED,True,248,81,6,https://github.com/lains,Add/Android Supporting sending & receiving geo: intents,74,['android'],https://github.com/navit-gps/navit/pull/812,https://github.com/jandegr,12,https://github.com/navit-gps/navit/pull/812#issuecomment-538633002,"This PR adds 2 features to navit for Android:


When a geo: intent is started on Android, for example by scanning a geo QR code, navit is able to takes these coordinates as input


When a specific point is clicked on the map, this PR adds a new item in the contextual menu: ""View"". By clicking on that item (and if there are applications to handle it) a geo intent is generated in Android","Receiving a geo intent works but I just have the impression I end up with multiple instances of Navit at the same time, especially if Navit was already running backgrounded. I compared this with the behaviour of a PDF viewer, there I can try whatever I want, no way I could get multiple instances running.
A screenshot of 2 Navit's running in splitscreen mode after sending a geo intent to Navit.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,812,2019-07-20T18:50:24Z,2019-10-23T19:38:53Z,2019-10-28T08:26:58Z,MERGED,True,248,81,6,https://github.com/lains,Add/Android Supporting sending & receiving geo: intents,74,['android'],https://github.com/navit-gps/navit/pull/812,https://github.com/jandegr,13,https://github.com/navit-gps/navit/pull/812#issuecomment-538635784,"This PR adds 2 features to navit for Android:


When a geo: intent is started on Android, for example by scanning a geo QR code, navit is able to takes these coordinates as input


When a specific point is clicked on the map, this PR adds a new item in the contextual menu: ""View"". By clicking on that item (and if there are applications to handle it) a geo intent is generated in Android","The default launch mode is





""standard""

Default. The system always creates a new instance of the activity in the target task and routes the intent to it.



where you could try with singleTop, singleTask or singleInstance
EDIT: after looking a bit further into it singleTask, might be the best option together with onNewIntent() that will receive the intent in case the Navit activity already exists. In case Navit is not yet created nohting changes and you handle the intent just as before.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,812,2019-07-20T18:50:24Z,2019-10-23T19:38:53Z,2019-10-28T08:26:58Z,MERGED,True,248,81,6,https://github.com/lains,Add/Android Supporting sending & receiving geo: intents,74,['android'],https://github.com/navit-gps/navit/pull/812,https://github.com/lains,14,https://github.com/navit-gps/navit/pull/812#issuecomment-539108633,"This PR adds 2 features to navit for Android:


When a geo: intent is started on Android, for example by scanning a geo QR code, navit is able to takes these coordinates as input


When a specific point is clicked on the map, this PR adds a new item in the contextual menu: ""View"". By clicking on that item (and if there are applications to handle it) a geo intent is generated in Android","Hi @jandegr, I could not reproduce the issue, but I'm sure I've noticed before this feeling of multiple instances running.
I have implemented the changes you suggested, and the singleTask is indeed a singleton, so this is probably what is needed.
Please let me know if this new version of the code fixes it.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,812,2019-07-20T18:50:24Z,2019-10-23T19:38:53Z,2019-10-28T08:26:58Z,MERGED,True,248,81,6,https://github.com/lains,Add/Android Supporting sending & receiving geo: intents,74,['android'],https://github.com/navit-gps/navit/pull/812,https://github.com/lains,15,https://github.com/navit-gps/navit/pull/812#issuecomment-539117432,"This PR adds 2 features to navit for Android:


When a geo: intent is started on Android, for example by scanning a geo QR code, navit is able to takes these coordinates as input


When a specific point is clicked on the map, this PR adds a new item in the contextual menu: ""View"". By clicking on that item (and if there are applications to handle it) a geo intent is generated in Android","I could not reproduce the issue, but I'm sure I've noticed before this feeling of multiple instances running.

Actually, I just reproduced the issue on a Samsung device running Android 4.4.2.
And there, it seems fixed by the singleTask launch mode...",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,812,2019-07-20T18:50:24Z,2019-10-23T19:38:53Z,2019-10-28T08:26:58Z,MERGED,True,248,81,6,https://github.com/lains,Add/Android Supporting sending & receiving geo: intents,74,['android'],https://github.com/navit-gps/navit/pull/812,https://github.com/lains,16,https://github.com/navit-gps/navit/pull/812#issuecomment-539118281,"This PR adds 2 features to navit for Android:


When a geo: intent is started on Android, for example by scanning a geo QR code, navit is able to takes these coordinates as input


When a specific point is clicked on the map, this PR adds a new item in the contextual menu: ""View"". By clicking on that item (and if there are applications to handle it) a geo intent is generated in Android","And I also restested the intent loopback issue (crash) after I rebased on the code from trunk including PR877 and it did not crash. So, I think you already fixed the crash in that PR.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,812,2019-07-20T18:50:24Z,2019-10-23T19:38:53Z,2019-10-28T08:26:58Z,MERGED,True,248,81,6,https://github.com/lains,Add/Android Supporting sending & receiving geo: intents,74,['android'],https://github.com/navit-gps/navit/pull/812,https://github.com/jandegr,17,https://github.com/navit-gps/navit/pull/812#issuecomment-539126754,"This PR adds 2 features to navit for Android:


When a geo: intent is started on Android, for example by scanning a geo QR code, navit is able to takes these coordinates as input


When a specific point is clicked on the map, this PR adds a new item in the contextual menu: ""View"". By clicking on that item (and if there are applications to handle it) a geo intent is generated in Android","I will take some time to test it soon, but even without testing I suspect it now indeed sticks to being a singleton, but since you did not implement onNewIntent(), it will just recreate navit and that is not what we want. I might be wrong, but I just think it will now show in the log it takes the onCreate() route (or maybe, but probably not, the onRestart() route) since you don't open the onNewIntent entrypoint. At least it is what the API makes me think.
THX",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,812,2019-07-20T18:50:24Z,2019-10-23T19:38:53Z,2019-10-28T08:26:58Z,MERGED,True,248,81,6,https://github.com/lains,Add/Android Supporting sending & receiving geo: intents,74,['android'],https://github.com/navit-gps/navit/pull/812,https://github.com/lains,18,https://github.com/navit-gps/navit/pull/812#issuecomment-539579247,"This PR adds 2 features to navit for Android:


When a geo: intent is started on Android, for example by scanning a geo QR code, navit is able to takes these coordinates as input


When a specific point is clicked on the map, this PR adds a new item in the contextual menu: ""View"". By clicking on that item (and if there are applications to handle it) a geo intent is generated in Android","I did some additional testing, and the execution flow actually doesn't go through onCreate() but it is even worse because the intent now is not handled properly.
When navit is initially started from a geo intent, the sequence is:
onCreate()
**1**A android.intent.action.VIEW
**1**D geo:48.709807,15.193542
OnStart()
OnResume()
**2**A android.intent.action.VIEW
**2**D geo:48.709807,15.193542
target found (b): 48.709807,15.193542

But when navit is already running and resumed with a new geo intent, we go through:
OnRestart()
OnStart()

But does not take the intent into account... it keeps the previous destination, if any, so the intent reception feature is actually not working properly anymore.
I'll have a look into this. Probably, as suggested, I need to implement onNewIntent() and also decode the intent there... and do as what is currently done inside onCreate() (intent is cached inside member variable sStartupIntent, then processed later on in onResume())
To be continued...",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,812,2019-07-20T18:50:24Z,2019-10-23T19:38:53Z,2019-10-28T08:26:58Z,MERGED,True,248,81,6,https://github.com/lains,Add/Android Supporting sending & receiving geo: intents,74,['android'],https://github.com/navit-gps/navit/pull/812,https://github.com/lains,19,https://github.com/navit-gps/navit/pull/812#issuecomment-541821853,"This PR adds 2 features to navit for Android:


When a geo: intent is started on Android, for example by scanning a geo QR code, navit is able to takes these coordinates as input


When a specific point is clicked on the map, this PR adds a new item in the contextual menu: ""View"". By clicking on that item (and if there are applications to handle it) a geo intent is generated in Android","I have tested on this new code and receiving a geo intent now works as expected (starts navigating to the coordinates provided) even when navit is already running.
If navit was inside a menu when the intent is received, it remains inside that menu. Not sure whether this should be kept like that or if map should be displayed immediately and current menu dropped.
I am already planning to build some future work on this code base, opening a contextual menu based on the geolocation extracted from the intent, so that the exact action to perform on the input coordinates can be selected by the user, exactly the same way as when coordinates are input using the Action>Coordinates menu in the internal GUI...
But I would rather not add more code to the current PR and handle this in a future PR as explained in a previous comment.
@jandegr already told me sending geo intents is working but I fixed receiving geo intents since then, so I'd be happy if someone can test and give me feedback on this feature.
Shall I merge?
Thanks!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,812,2019-07-20T18:50:24Z,2019-10-23T19:38:53Z,2019-10-28T08:26:58Z,MERGED,True,248,81,6,https://github.com/lains,Add/Android Supporting sending & receiving geo: intents,74,['android'],https://github.com/navit-gps/navit/pull/812,https://github.com/jandegr,20,https://github.com/navit-gps/navit/pull/812#issuecomment-543648658,"This PR adds 2 features to navit for Android:


When a geo: intent is started on Android, for example by scanning a geo QR code, navit is able to takes these coordinates as input


When a specific point is clicked on the map, this PR adds a new item in the contextual menu: ""View"". By clicking on that item (and if there are applications to handle it) a geo intent is generated in Android","Hi,
There are failing scenario's for the existing google.navigation intent in the existing codebase and your work just inherits those.
There are several ways to deal with this and the way that not turns this into an endless story for you is you commit this and I will apply the fixes afterwards together with some other rework. You will see some of your lines being shuffled around afterwards.
The other way is you change all of it into a solution working in every scenario for both the intents.
your choice.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,812,2019-07-20T18:50:24Z,2019-10-23T19:38:53Z,2019-10-28T08:26:58Z,MERGED,True,248,81,6,https://github.com/lains,Add/Android Supporting sending & receiving geo: intents,74,['android'],https://github.com/navit-gps/navit/pull/812,https://github.com/jandegr,21,https://github.com/navit-gps/navit/pull/812#issuecomment-544474730,"This PR adds 2 features to navit for Android:


When a geo: intent is started on Android, for example by scanning a geo QR code, navit is able to takes these coordinates as input


When a specific point is clicked on the map, this PR adds a new item in the contextual menu: ""View"". By clicking on that item (and if there are applications to handle it) a geo intent is generated in Android","@lains pls. merge this since future work depends on it.
After merging I can post another (but smaller this time) Android rework and then you can proceed with the future extensions you mentioned whenever it suits you.
THX",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,812,2019-07-20T18:50:24Z,2019-10-23T19:38:53Z,2019-10-28T08:26:58Z,MERGED,True,248,81,6,https://github.com/lains,Add/Android Supporting sending & receiving geo: intents,74,['android'],https://github.com/navit-gps/navit/pull/812,https://github.com/lains,22,https://github.com/navit-gps/navit/pull/812#issuecomment-546019949,"This PR adds 2 features to navit for Android:


When a geo: intent is started on Android, for example by scanning a geo QR code, navit is able to takes these coordinates as input


When a specific point is clicked on the map, this PR adds a new item in the contextual menu: ""View"". By clicking on that item (and if there are applications to handle it) a geo intent is generated in Android","Great. Thanks @pgrandin for merging this.
@jandegr, yes, I will wait for #919 before doing further work on the view intent.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,813,2019-07-21T11:19:48Z,2019-07-28T10:29:59Z,2019-08-01T20:36:50Z,MERGED,True,390,131,8,https://github.com/metalstrolch,add:graphics:dpi scaling support,13,[],https://github.com/navit-gps/navit/pull/813,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/813,"This pull request adds dpi scaling to navit's graphics layer. It basically allows to convert the internal measurement unit (traditionally 1:1 pixels) into something virtual. You can specify the dpi value your layout / OSD was designed against in virtual_dpi, effectively assigning the internal pixel a human unit.
Then it will get the screen dpi value (or you can override that in config) to scale your setup to your real hardware dpi. Hardware dpi support is given for qt5 and gtk, but not widely tested yet.
Of course best results if real_dpi is a even multiple of virtual_dpi
This can be used as a basis for supporting human units (like millimeters, inches, android dip) in config files as well, since these can be converted using virtual_dpi.
This is the second attempt after #810 . But #810 was the wrong attempt do do what is done here.","This pull request adds dpi scaling to navit's graphics layer. It basically allows to convert the internal measurement unit (traditionally 1:1 pixels) into something virtual. You can specify the dpi value your layout / OSD was designed against in virtual_dpi, effectively assigning the internal pixel a human unit.
Then it will get the screen dpi value (or you can override that in config) to scale your setup to your real hardware dpi. Hardware dpi support is given for qt5 and gtk, but not widely tested yet.
Of course best results if real_dpi is a even multiple of virtual_dpi
This can be used as a basis for supporting human units (like millimeters, inches, android dip) in config files as well, since these can be converted using virtual_dpi.
This is the second attempt after #810 . But #810 was the wrong attempt do do what is done here.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,813,2019-07-21T11:19:48Z,2019-07-28T10:29:59Z,2019-08-01T20:36:50Z,MERGED,True,390,131,8,https://github.com/metalstrolch,add:graphics:dpi scaling support,13,[],https://github.com/navit-gps/navit/pull/813,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/813#issuecomment-513545189,"This pull request adds dpi scaling to navit's graphics layer. It basically allows to convert the internal measurement unit (traditionally 1:1 pixels) into something virtual. You can specify the dpi value your layout / OSD was designed against in virtual_dpi, effectively assigning the internal pixel a human unit.
Then it will get the screen dpi value (or you can override that in config) to scale your setup to your real hardware dpi. Hardware dpi support is given for qt5 and gtk, but not widely tested yet.
Of course best results if real_dpi is a even multiple of virtual_dpi
This can be used as a basis for supporting human units (like millimeters, inches, android dip) in config files as well, since these can be converted using virtual_dpi.
This is the second attempt after #810 . But #810 was the wrong attempt do do what is done here.","We should agree on a proper default value for virtual_dpi, as the usual desktop 96dpi seems to be wrong for most layouts.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,813,2019-07-21T11:19:48Z,2019-07-28T10:29:59Z,2019-08-01T20:36:50Z,MERGED,True,390,131,8,https://github.com/metalstrolch,add:graphics:dpi scaling support,13,[],https://github.com/navit-gps/navit/pull/813,https://github.com/metalstrolch,3,https://github.com/navit-gps/navit/pull/813#issuecomment-513728965,"This pull request adds dpi scaling to navit's graphics layer. It basically allows to convert the internal measurement unit (traditionally 1:1 pixels) into something virtual. You can specify the dpi value your layout / OSD was designed against in virtual_dpi, effectively assigning the internal pixel a human unit.
Then it will get the screen dpi value (or you can override that in config) to scale your setup to your real hardware dpi. Hardware dpi support is given for qt5 and gtk, but not widely tested yet.
Of course best results if real_dpi is a even multiple of virtual_dpi
This can be used as a basis for supporting human units (like millimeters, inches, android dip) in config files as well, since these can be converted using virtual_dpi.
This is the second attempt after #810 . But #810 was the wrong attempt do do what is done here.","Ok done and working for qt5, but can be used on all other graphics as well.
What this does: It scales in all calls to the graphics backend the containing coordinates, widths, lengths and font sizes by the rounded factor given by virtual_dpi/real_dpi. It is limited to scale even factors only, as fractional factor provide really ugly results.
Additionally it hooks to the call back list provided by graphics core to the graphics backend. There it unscales all coordinates, widths, lengths and font sizes by the same factor.
This has following result:

The displayed image get's upscaled.
Navit uses less resources as it needs to render data for only factor of the screen size.

To test: add virtual_dpi=""100"" real_dpi=""200""  to graphics tag in navit.xml to upscale by 2
The diff of graphics.c / graphics.h is bigger than required due to the new ""astyle"" (in)sanity check on CircleCI. Sorry for that.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,813,2019-07-21T11:19:48Z,2019-07-28T10:29:59Z,2019-08-01T20:36:50Z,MERGED,True,390,131,8,https://github.com/metalstrolch,add:graphics:dpi scaling support,13,[],https://github.com/navit-gps/navit/pull/813,https://github.com/metalstrolch,4,https://github.com/navit-gps/navit/pull/813#issuecomment-515750857,"This pull request adds dpi scaling to navit's graphics layer. It basically allows to convert the internal measurement unit (traditionally 1:1 pixels) into something virtual. You can specify the dpi value your layout / OSD was designed against in virtual_dpi, effectively assigning the internal pixel a human unit.
Then it will get the screen dpi value (or you can override that in config) to scale your setup to your real hardware dpi. Hardware dpi support is given for qt5 and gtk, but not widely tested yet.
Of course best results if real_dpi is a even multiple of virtual_dpi
This can be used as a basis for supporting human units (like millimeters, inches, android dip) in config files as well, since these can be converted using virtual_dpi.
This is the second attempt after #810 . But #810 was the wrong attempt do do what is done here.","No comment is good comment... Will merge this as would conflict with ongoing work on multipolygons.
Blame me if this breaks anything.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,813,2019-07-21T11:19:48Z,2019-07-28T10:29:59Z,2019-08-01T20:36:50Z,MERGED,True,390,131,8,https://github.com/metalstrolch,add:graphics:dpi scaling support,13,[],https://github.com/navit-gps/navit/pull/813,https://github.com/jkoan,5,https://github.com/navit-gps/navit/pull/813#issuecomment-515751004,"This pull request adds dpi scaling to navit's graphics layer. It basically allows to convert the internal measurement unit (traditionally 1:1 pixels) into something virtual. You can specify the dpi value your layout / OSD was designed against in virtual_dpi, effectively assigning the internal pixel a human unit.
Then it will get the screen dpi value (or you can override that in config) to scale your setup to your real hardware dpi. Hardware dpi support is given for qt5 and gtk, but not widely tested yet.
Of course best results if real_dpi is a even multiple of virtual_dpi
This can be used as a basis for supporting human units (like millimeters, inches, android dip) in config files as well, since these can be converted using virtual_dpi.
This is the second attempt after #810 . But #810 was the wrong attempt do do what is done here.","Hi @metalstrolch,
i looked at the sources and they looked good. But until now i cant test it, maybe tomorrow.
But i can say that i really like the work you are doing 😄",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,813,2019-07-21T11:19:48Z,2019-07-28T10:29:59Z,2019-08-01T20:36:50Z,MERGED,True,390,131,8,https://github.com/metalstrolch,add:graphics:dpi scaling support,13,[],https://github.com/navit-gps/navit/pull/813,https://github.com/metalstrolch,6,https://github.com/navit-gps/navit/pull/813#issuecomment-515751252,"This pull request adds dpi scaling to navit's graphics layer. It basically allows to convert the internal measurement unit (traditionally 1:1 pixels) into something virtual. You can specify the dpi value your layout / OSD was designed against in virtual_dpi, effectively assigning the internal pixel a human unit.
Then it will get the screen dpi value (or you can override that in config) to scale your setup to your real hardware dpi. Hardware dpi support is given for qt5 and gtk, but not widely tested yet.
Of course best results if real_dpi is a even multiple of virtual_dpi
This can be used as a basis for supporting human units (like millimeters, inches, android dip) in config files as well, since these can be converted using virtual_dpi.
This is the second attempt after #810 . But #810 was the wrong attempt do do what is done here.",Is this because of the broken android build? Seems I'm the only one left not on android.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,813,2019-07-21T11:19:48Z,2019-07-28T10:29:59Z,2019-08-01T20:36:50Z,MERGED,True,390,131,8,https://github.com/metalstrolch,add:graphics:dpi scaling support,13,[],https://github.com/navit-gps/navit/pull/813,https://github.com/jkoan,7,https://github.com/navit-gps/navit/pull/813#issuecomment-515751411,"This pull request adds dpi scaling to navit's graphics layer. It basically allows to convert the internal measurement unit (traditionally 1:1 pixels) into something virtual. You can specify the dpi value your layout / OSD was designed against in virtual_dpi, effectively assigning the internal pixel a human unit.
Then it will get the screen dpi value (or you can override that in config) to scale your setup to your real hardware dpi. Hardware dpi support is given for qt5 and gtk, but not widely tested yet.
Of course best results if real_dpi is a even multiple of virtual_dpi
This can be used as a basis for supporting human units (like millimeters, inches, android dip) in config files as well, since these can be converted using virtual_dpi.
This is the second attempt after #810 . But #810 was the wrong attempt do do what is done here.","Is this because of the broken android build? Seems I'm the only one left not on android.

is't mostly because of time on my side. I also know @hoehnp is also using Navit on non android",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,813,2019-07-21T11:19:48Z,2019-07-28T10:29:59Z,2019-08-01T20:36:50Z,MERGED,True,390,131,8,https://github.com/metalstrolch,add:graphics:dpi scaling support,13,[],https://github.com/navit-gps/navit/pull/813,https://github.com/metalstrolch,8,https://github.com/navit-gps/navit/pull/813#issuecomment-515751543,"This pull request adds dpi scaling to navit's graphics layer. It basically allows to convert the internal measurement unit (traditionally 1:1 pixels) into something virtual. You can specify the dpi value your layout / OSD was designed against in virtual_dpi, effectively assigning the internal pixel a human unit.
Then it will get the screen dpi value (or you can override that in config) to scale your setup to your real hardware dpi. Hardware dpi support is given for qt5 and gtk, but not widely tested yet.
Of course best results if real_dpi is a even multiple of virtual_dpi
This can be used as a basis for supporting human units (like millimeters, inches, android dip) in config files as well, since these can be converted using virtual_dpi.
This is the second attempt after #810 . But #810 was the wrong attempt do do what is done here.","No stress. I merged this because I want to continue with multipolygon support. Now I'm facing the drawing side of it, and there I want to do the scaling right already. Sorry for my not being patiently.",True,{'THUMBS_UP': ['https://github.com/jkoan']}
navit-gps/navit,https://github.com/navit-gps/navit,813,2019-07-21T11:19:48Z,2019-07-28T10:29:59Z,2019-08-01T20:36:50Z,MERGED,True,390,131,8,https://github.com/metalstrolch,add:graphics:dpi scaling support,13,[],https://github.com/navit-gps/navit/pull/813,https://github.com/metalstrolch,9,https://github.com/navit-gps/navit/pull/813#issuecomment-515755446,"This pull request adds dpi scaling to navit's graphics layer. It basically allows to convert the internal measurement unit (traditionally 1:1 pixels) into something virtual. You can specify the dpi value your layout / OSD was designed against in virtual_dpi, effectively assigning the internal pixel a human unit.
Then it will get the screen dpi value (or you can override that in config) to scale your setup to your real hardware dpi. Hardware dpi support is given for qt5 and gtk, but not widely tested yet.
Of course best results if real_dpi is a even multiple of virtual_dpi
This can be used as a basis for supporting human units (like millimeters, inches, android dip) in config files as well, since these can be converted using virtual_dpi.
This is the second attempt after #810 . But #810 was the wrong attempt do do what is done here.","@mvglasow It seems you pushed something direct on master, so merging this via CI from trunk to master failed. Was this on intention? How to restore ""master""?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,813,2019-07-21T11:19:48Z,2019-07-28T10:29:59Z,2019-08-01T20:36:50Z,MERGED,True,390,131,8,https://github.com/metalstrolch,add:graphics:dpi scaling support,13,[],https://github.com/navit-gps/navit/pull/813,https://github.com/hoehnp,10,https://github.com/navit-gps/navit/pull/813#issuecomment-515756160,"This pull request adds dpi scaling to navit's graphics layer. It basically allows to convert the internal measurement unit (traditionally 1:1 pixels) into something virtual. You can specify the dpi value your layout / OSD was designed against in virtual_dpi, effectively assigning the internal pixel a human unit.
Then it will get the screen dpi value (or you can override that in config) to scale your setup to your real hardware dpi. Hardware dpi support is given for qt5 and gtk, but not widely tested yet.
Of course best results if real_dpi is a even multiple of virtual_dpi
This can be used as a basis for supporting human units (like millimeters, inches, android dip) in config files as well, since these can be converted using virtual_dpi.
This is the second attempt after #810 . But #810 was the wrong attempt do do what is done here.","As @jkoan  mentioned, I use navit both on SailfishOS and sometimes also on Android. @metalstrolch would be great to improve navit on SailfishOS, in particular the TTS. Is the scaling also working on Sailfish?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,813,2019-07-21T11:19:48Z,2019-07-28T10:29:59Z,2019-08-01T20:36:50Z,MERGED,True,390,131,8,https://github.com/metalstrolch,add:graphics:dpi scaling support,13,[],https://github.com/navit-gps/navit/pull/813,https://github.com/metalstrolch,11,https://github.com/navit-gps/navit/pull/813#issuecomment-515772411,"This pull request adds dpi scaling to navit's graphics layer. It basically allows to convert the internal measurement unit (traditionally 1:1 pixels) into something virtual. You can specify the dpi value your layout / OSD was designed against in virtual_dpi, effectively assigning the internal pixel a human unit.
Then it will get the screen dpi value (or you can override that in config) to scale your setup to your real hardware dpi. Hardware dpi support is given for qt5 and gtk, but not widely tested yet.
Of course best results if real_dpi is a even multiple of virtual_dpi
This can be used as a basis for supporting human units (like millimeters, inches, android dip) in config files as well, since these can be converted using virtual_dpi.
This is the second attempt after #810 . But #810 was the wrong attempt do do what is done here.","Should work on all platforms. Qt5 on Sailfish even reports hardware dpi. I did this specially for Sailfish. I don't want to require different packages for standard dpi Jolla1 and high dpi Sony Xperia devices. Should be OK now.
Next i plan to add multipolygon support to finally get rivers and lakes shown.
I don't have plans to work on tts, as espeak works for me.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,814,2019-07-22T19:52:51Z,2019-07-25T11:15:05Z,2019-07-25T11:15:05Z,MERGED,True,14,10,2,https://github.com/hoehnp,"fix: no redraw of map when stopping drag over osd_speed_warner, osd_stopwatch and osd_odometer",3,[],https://github.com/navit-gps/navit/pull/814,https://github.com/hoehnp,1,https://github.com/navit-gps/navit/pull/814,PR on behalf on @gefin,PR on behalf on @gefin,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,814,2019-07-22T19:52:51Z,2019-07-25T11:15:05Z,2019-07-25T11:15:05Z,MERGED,True,14,10,2,https://github.com/hoehnp,"fix: no redraw of map when stopping drag over osd_speed_warner, osd_stopwatch and osd_odometer",3,[],https://github.com/navit-gps/navit/pull/814,https://github.com/gefin,2,https://github.com/navit-gps/navit/pull/814#issuecomment-514050907,PR on behalf on @gefin,"looks like the cleanup in binding_dbus.c make a ""sequence"" problem:
In file included from /root/project/navit/binding/dbus/binding_dbus.c:44:0:
/root/project/navit/osd.h:48:15: error: field 'color_bg' has incomplete type
struct color color_bg, color_fg, text_color;
aproved  osd_core",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,814,2019-07-22T19:52:51Z,2019-07-25T11:15:05Z,2019-07-25T11:15:05Z,MERGED,True,14,10,2,https://github.com/hoehnp,"fix: no redraw of map when stopping drag over osd_speed_warner, osd_stopwatch and osd_odometer",3,[],https://github.com/navit-gps/navit/pull/814,https://github.com/metalstrolch,3,https://github.com/navit-gps/navit/pull/814#issuecomment-514805522,PR on behalf on @gefin,"Fixed the includes. Don't know why CircleCI thinks it needs to merge to master. Maybe because its ""trunk"" on hoehnp/navit ...",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,816,2019-07-24T09:02:59Z,2019-08-07T11:29:38Z,2019-08-28T07:26:21Z,MERGED,True,21,7,4,https://github.com/metalstrolch,fix:core: Correct default layout handling.,1,[],https://github.com/navit-gps/navit/pull/816,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/816,"This commit corrects the default layout handling broken when splitting
the layouts to own files. It restores the layout saving of the internal
gui. So now it starts again with the last selected layout honouring
gui_internal.txt","This commit corrects the default layout handling broken when splitting
the layouts to own files. It restores the layout saving of the internal
gui. So now it starts again with the last selected layout honouring
gui_internal.txt",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,816,2019-07-24T09:02:59Z,2019-08-07T11:29:38Z,2019-08-28T07:26:21Z,MERGED,True,21,7,4,https://github.com/metalstrolch,fix:core: Correct default layout handling.,1,[],https://github.com/navit-gps/navit/pull/816,https://github.com/lains,2,https://github.com/navit-gps/navit/pull/816#issuecomment-517441504,"This commit corrects the default layout handling broken when splitting
the layouts to own files. It restores the layout saving of the internal
gui. So now it starts again with the last selected layout honouring
gui_internal.txt","Thanks for spotting this.
The split of layout descriptions in their own files was done in #559
OK, I didn't know about the existence of an active=""yes""/""no"" attribute on the <layout> tag.
Do you know how this tag is used? In which use case?
I tried to understand what the changes would mean in terms of sequence.
Is my below guess correct?
The changes would modify the way navit determines which default layout to use (whenever the user has not selected any layout yet), following the sequence:

check active tags for layouts in the order of parsing
check if the default layout name matches the name for layouts in the order of parsing

At the first match of either conditions above, select the layout as the default one.
This will be overriden by the user selected layout if any.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,816,2019-07-24T09:02:59Z,2019-08-07T11:29:38Z,2019-08-28T07:26:21Z,MERGED,True,21,7,4,https://github.com/metalstrolch,fix:core: Correct default layout handling.,1,[],https://github.com/navit-gps/navit/pull/816,https://github.com/metalstrolch,3,https://github.com/navit-gps/navit/pull/816#issuecomment-517447137,"This commit corrects the default layout handling broken when splitting
the layouts to own files. It restores the layout saving of the internal
gui. So now it starts again with the last selected layout honouring
gui_internal.txt","Truly said I didn't know about the active attribute myself unless I spotted it trying to find the solution for the default layout handling breaking user selection. But looking at it, it was already a way to define the default value back when all layouts were in the same file. With this patch both ways work. Albeit not at the same time. Btw: #559 removed the ""cursor"" from Car-simple layout as well.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,816,2019-07-24T09:02:59Z,2019-08-07T11:29:38Z,2019-08-28T07:26:21Z,MERGED,True,21,7,4,https://github.com/metalstrolch,fix:core: Correct default layout handling.,1,[],https://github.com/navit-gps/navit/pull/816,https://github.com/lains,4,https://github.com/navit-gps/navit/pull/816#issuecomment-517755892,"This commit corrects the default layout handling broken when splitting
the layouts to own files. It restores the layout saving of the internal
gui. So now it starts again with the last selected layout honouring
gui_internal.txt","Do you mean that when the user selects a layout (different from the default layout), it is currently not kept in navit at the next startup, and navits defaults back to the default layout each time?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,816,2019-07-24T09:02:59Z,2019-08-07T11:29:38Z,2019-08-28T07:26:21Z,MERGED,True,21,7,4,https://github.com/metalstrolch,fix:core: Correct default layout handling.,1,[],https://github.com/navit-gps/navit/pull/816,https://github.com/lains,5,https://github.com/navit-gps/navit/pull/816#issuecomment-517759314,"This commit corrects the default layout handling broken when splitting
the layouts to own files. It restores the layout saving of the internal
gui. So now it starts again with the last selected layout honouring
gui_internal.txt","You're right, there is no cursor in Car-simple after #599:

  
    
      navit/navit/navit_layout_car_simple_shipped.xml
    
    
         Line 2
      in
      e70a289
    
  
  
    

        
          
           <layout xmlns:xi=""http://www.w3.org/2001/XInclude"" name=""Car-simple"" color=""#839ea9""> 
        
    
  


but it seems it was already not there before the merge for #599:

  
    
      navit/navit/navit_shipped.xml
    
    
         Line 5574
      in
      b077321
    
  
  
    

        
          
           <layout name=""Car-simple"" color=""#839ea9""> 
        
    
  


It even seems it was never there: 1dd6966
In any case, it is missing, so probably there is no cursor at all displayed. I have to admit I have never used this layout during navigation...
Or maybe I understood incorrectly. Are we speaking about the <cursor> tag?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,816,2019-07-24T09:02:59Z,2019-08-07T11:29:38Z,2019-08-28T07:26:21Z,MERGED,True,21,7,4,https://github.com/metalstrolch,fix:core: Correct default layout handling.,1,[],https://github.com/navit-gps/navit/pull/816,https://github.com/metalstrolch,6,https://github.com/navit-gps/navit/pull/816#issuecomment-517808449,"This commit corrects the default layout handling broken when splitting
the layouts to own files. It restores the layout saving of the internal
gui. So now it starts again with the last selected layout honouring
gui_internal.txt","Yes, currently its even worse. Navit starts up drawing the first map in user selected layout, then if you move the map or force it otherwise to refresh, it partly switches to default layout keeping the cursor from previous. This reverts correct behaviour.
As for the simple layout, I didn't bisect. If there was no cursor before then sorry for blaming.
Btw. there's something wrong with night/daylayout switching as well . But that was broken before layout split already. Its also possible that this is vehicle dependent.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,816,2019-07-24T09:02:59Z,2019-08-07T11:29:38Z,2019-08-28T07:26:21Z,MERGED,True,21,7,4,https://github.com/metalstrolch,fix:core: Correct default layout handling.,1,[],https://github.com/navit-gps/navit/pull/816,https://github.com/lains,7,https://github.com/navit-gps/navit/pull/816#issuecomment-519784887,"This commit corrects the default layout handling broken when splitting
the layouts to own files. It restores the layout saving of the internal
gui. So now it starts again with the last selected layout honouring
gui_internal.txt","Sorry... I couldn't reproduce the issue on my Android build, but I'm confident your code fixes the issue.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,816,2019-07-24T09:02:59Z,2019-08-07T11:29:38Z,2019-08-28T07:26:21Z,MERGED,True,21,7,4,https://github.com/metalstrolch,fix:core: Correct default layout handling.,1,[],https://github.com/navit-gps/navit/pull/816,https://github.com/metalstrolch,8,https://github.com/navit-gps/navit/pull/816#issuecomment-519823422,"This commit corrects the default layout handling broken when splitting
the layouts to own files. It restores the layout saving of the internal
gui. So now it starts again with the last selected layout honouring
gui_internal.txt",Is Android using gui-internal at all? I don't have some Android device to check.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,816,2019-07-24T09:02:59Z,2019-08-07T11:29:38Z,2019-08-28T07:26:21Z,MERGED,True,21,7,4,https://github.com/metalstrolch,fix:core: Correct default layout handling.,1,[],https://github.com/navit-gps/navit/pull/816,https://github.com/lains,9,https://github.com/navit-gps/navit/pull/816#issuecomment-520311765,"This commit corrects the default layout handling broken when splitting
the layouts to own files. It restores the layout saving of the internal
gui. So now it starts again with the last selected layout honouring
gui_internal.txt","Yes, Android build uses gui-internal.
So far, it properly saves and restores the user-defined layout.
I will only check that it still does (just in case) after these changes, but I don't see why it shouldn't.
But I am waiting for #802 to be fixed before I can easily build for Android again.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,817,2019-07-24T09:04:43Z,2019-08-20T19:33:29Z,2019-08-20T19:33:42Z,MERGED,True,51,22,1,https://github.com/metalstrolch,fix: vehicle: Increase layer for cursor for rotation,4,[],https://github.com/navit-gps/navit/pull/817,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/817,"This commit increases the layer used for drawing the cursor that the
cursor fits on it regardless its rotation. This is required as some
graphics (e.g. qt5) clip drawings leaving the overlay size. This
cripples the cursor if the layout creator did not mind this. This patch
adds extra space to compensate.","This commit increases the layer used for drawing the cursor that the
cursor fits on it regardless its rotation. This is required as some
graphics (e.g. qt5) clip drawings leaving the overlay size. This
cripples the cursor if the layout creator did not mind this. This patch
adds extra space to compensate.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,817,2019-07-24T09:04:43Z,2019-08-20T19:33:29Z,2019-08-20T19:33:42Z,MERGED,True,51,22,1,https://github.com/metalstrolch,fix: vehicle: Increase layer for cursor for rotation,4,[],https://github.com/navit-gps/navit/pull/817,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/817#issuecomment-519057086,"This commit increases the layer used for drawing the cursor that the
cursor fits on it regardless its rotation. This is required as some
graphics (e.g. qt5) clip drawings leaving the overlay size. This
cripples the cursor if the layout creator did not mind this. This patch
adds extra space to compensate.",What about this? Anybody any remarks?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,817,2019-07-24T09:04:43Z,2019-08-20T19:33:29Z,2019-08-20T19:33:42Z,MERGED,True,51,22,1,https://github.com/metalstrolch,fix: vehicle: Increase layer for cursor for rotation,4,[],https://github.com/navit-gps/navit/pull/817,https://github.com/lains,3,https://github.com/navit-gps/navit/pull/817#issuecomment-522297188,"This commit increases the layer used for drawing the cursor that the
cursor fits on it regardless its rotation. This is required as some
graphics (e.g. qt5) clip drawings leaving the overlay size. This
cripples the cursor if the layout creator did not mind this. This patch
adds extra space to compensate.","No remark from my side, except a minor typo at https://github.com/navit-gps/navit/pull/817/files#diff-e4894e6a6c9c1250eb569166a703bef1R316
cursot->cursor
I don't know this part of the code, so I trust your changes.
Could it be related to #747 ?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,818,2019-07-25T10:17:33Z,2019-09-27T07:30:28Z,2019-09-27T07:30:37Z,MERGED,True,1,1,1,https://github.com/metalstrolch,feature:gui_internal: include post code in town serch,2,[],https://github.com/navit-gps/navit/pull/818,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/818,This pull request includes postal code or zip code into the town search.,This pull request includes postal code or zip code into the town search.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,818,2019-07-25T10:17:33Z,2019-09-27T07:30:28Z,2019-09-27T07:30:37Z,MERGED,True,1,1,1,https://github.com/metalstrolch,feature:gui_internal: include post code in town serch,2,[],https://github.com/navit-gps/navit/pull/818,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/818#issuecomment-514987677,This pull request includes postal code or zip code into the town search.,"Why not just include post code / zip code in town search? Renders #770 obsolete probably.
-Was / is there a reason for not doing this? Performance?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,818,2019-07-25T10:17:33Z,2019-09-27T07:30:28Z,2019-09-27T07:30:37Z,MERGED,True,1,1,1,https://github.com/metalstrolch,feature:gui_internal: include post code in town serch,2,[],https://github.com/navit-gps/navit/pull/818,https://github.com/metalstrolch,3,https://github.com/navit-gps/navit/pull/818#issuecomment-535071011,This pull request includes postal code or zip code into the town search.,"Any news here? Still find this very useful, at least in Germany.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,818,2019-07-25T10:17:33Z,2019-09-27T07:30:28Z,2019-09-27T07:30:37Z,MERGED,True,1,1,1,https://github.com/metalstrolch,feature:gui_internal: include post code in town serch,2,[],https://github.com/navit-gps/navit/pull/818,https://github.com/aerostitch,4,https://github.com/navit-gps/navit/pull/818#issuecomment-535294069,This pull request includes postal code or zip code into the town search.,Does that mean that we can't search by town/district anymore on town level and only use zip code?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,818,2019-07-25T10:17:33Z,2019-09-27T07:30:28Z,2019-09-27T07:30:37Z,MERGED,True,1,1,1,https://github.com/metalstrolch,feature:gui_internal: include post code in town serch,2,[],https://github.com/navit-gps/navit/pull/818,https://github.com/metalstrolch,5,https://github.com/navit-gps/navit/pull/818#issuecomment-535456963,This pull request includes postal code or zip code into the town search.,"No it doesn't. It just includes postal code matches into the result. So you can start to search with numbers finding postal code. Could imagine this being a problem in countries where postal codes are letters. But even there it should add them correctly to the result.
Stumbled across this by looking at #770 which tried to additionally switch the keyboard to numbers. But if you gave letters the usual name search popped up. So I created this PR for the ""simple"" way not requiring a HMI change.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,818,2019-07-25T10:17:33Z,2019-09-27T07:30:28Z,2019-09-27T07:30:37Z,MERGED,True,1,1,1,https://github.com/metalstrolch,feature:gui_internal: include post code in town serch,2,[],https://github.com/navit-gps/navit/pull/818,https://github.com/metalstrolch,6,https://github.com/navit-gps/navit/pull/818#issuecomment-535458283,This pull request includes postal code or zip code into the town search.,To be honest I didn't inspect the search code much. So this might even exploit a bug in reality. But at least for me this works quite nice.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,822,2019-07-28T17:54:59Z,2019-08-20T15:44:53Z,2019-08-20T15:44:54Z,MERGED,True,848,153,10,https://github.com/mvglasow,traffic:Improve startup performance,64,[],https://github.com/navit-gps/navit/pull/822,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/822,"To address #815, this PR improves performance of the traffic module by deferring location expansion until the location is actually needed, speeding things up when we are starting up with a large number of cached messages or receiving a large feed.
On startup and when receiving a feed, items for the location are generated immediately only if we are currently routing and the rectangle for the location overlaps with the rectangle for the route, as these messages may influence the route.
Otherwise, when a map rectangle is opened on the traffic map, items are generated for locations whose rectangles overlap the queried rectangle.
When the traffic map is queried with a NULL selection (meaning everything should be retrieved), nothing is expanded and items are returned only for previously expanded locations. This is an experimental feature which became necessary since the traffic module occasionally queries its own map (all of which happens with a NULL pointer and would otherwise cause all locations to be expanded). If the current implementation is found to cause trouble, we would need to constrain these operations to a particular rectangle.
When TraFF messages are exported via Dbus, all messages are expanded as part of the operation—so the export can now take quite long when the message store holds a lot of unresolved messages.
This still needs to undergo some tests. Starting up with a large list of messages and dragging the map around works, but routing and export have not been tested yet.","To address #815, this PR improves performance of the traffic module by deferring location expansion until the location is actually needed, speeding things up when we are starting up with a large number of cached messages or receiving a large feed.
On startup and when receiving a feed, items for the location are generated immediately only if we are currently routing and the rectangle for the location overlaps with the rectangle for the route, as these messages may influence the route.
Otherwise, when a map rectangle is opened on the traffic map, items are generated for locations whose rectangles overlap the queried rectangle.
When the traffic map is queried with a NULL selection (meaning everything should be retrieved), nothing is expanded and items are returned only for previously expanded locations. This is an experimental feature which became necessary since the traffic module occasionally queries its own map (all of which happens with a NULL pointer and would otherwise cause all locations to be expanded). If the current implementation is found to cause trouble, we would need to constrain these operations to a particular rectangle.
When TraFF messages are exported via Dbus, all messages are expanded as part of the operation—so the export can now take quite long when the message store holds a lot of unresolved messages.
This still needs to undergo some tests. Starting up with a large list of messages and dragging the map around works, but routing and export have not been tested yet.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,822,2019-07-28T17:54:59Z,2019-08-20T15:44:53Z,2019-08-20T15:44:54Z,MERGED,True,848,153,10,https://github.com/mvglasow,traffic:Improve startup performance,64,[],https://github.com/navit-gps/navit/pull/822,https://github.com/mvglasow,2,https://github.com/navit-gps/navit/pull/822#issuecomment-515787905,"To address #815, this PR improves performance of the traffic module by deferring location expansion until the location is actually needed, speeding things up when we are starting up with a large number of cached messages or receiving a large feed.
On startup and when receiving a feed, items for the location are generated immediately only if we are currently routing and the rectangle for the location overlaps with the rectangle for the route, as these messages may influence the route.
Otherwise, when a map rectangle is opened on the traffic map, items are generated for locations whose rectangles overlap the queried rectangle.
When the traffic map is queried with a NULL selection (meaning everything should be retrieved), nothing is expanded and items are returned only for previously expanded locations. This is an experimental feature which became necessary since the traffic module occasionally queries its own map (all of which happens with a NULL pointer and would otherwise cause all locations to be expanded). If the current implementation is found to cause trouble, we would need to constrain these operations to a particular rectangle.
When TraFF messages are exported via Dbus, all messages are expanded as part of the operation—so the export can now take quite long when the message store holds a lot of unresolved messages.
This still needs to undergo some tests. Starting up with a large list of messages and dragging the map around works, but routing and export have not been tested yet.",Rerouting still has errors when messages are added (removing messages works as before). Freshly calculated routes (after the messages were received) look OK.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,822,2019-07-28T17:54:59Z,2019-08-20T15:44:53Z,2019-08-20T15:44:54Z,MERGED,True,848,153,10,https://github.com/mvglasow,traffic:Improve startup performance,64,[],https://github.com/navit-gps/navit/pull/822,https://github.com/mvglasow,3,https://github.com/navit-gps/navit/pull/822#issuecomment-516143070,"To address #815, this PR improves performance of the traffic module by deferring location expansion until the location is actually needed, speeding things up when we are starting up with a large number of cached messages or receiving a large feed.
On startup and when receiving a feed, items for the location are generated immediately only if we are currently routing and the rectangle for the location overlaps with the rectangle for the route, as these messages may influence the route.
Otherwise, when a map rectangle is opened on the traffic map, items are generated for locations whose rectangles overlap the queried rectangle.
When the traffic map is queried with a NULL selection (meaning everything should be retrieved), nothing is expanded and items are returned only for previously expanded locations. This is an experimental feature which became necessary since the traffic module occasionally queries its own map (all of which happens with a NULL pointer and would otherwise cause all locations to be expanded). If the current implementation is found to cause trouble, we would need to constrain these operations to a particular rectangle.
When TraFF messages are exported via Dbus, all messages are expanded as part of the operation—so the export can now take quite long when the message store holds a lot of unresolved messages.
This still needs to undergo some tests. Starting up with a large list of messages and dragging the map around works, but routing and export have not been tested yet.","Rerouting works as of e2d9a74; the error was an incorrect negation. However, freshly calculated messages now seem to have issues. Exports work.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,822,2019-07-28T17:54:59Z,2019-08-20T15:44:53Z,2019-08-20T15:44:54Z,MERGED,True,848,153,10,https://github.com/mvglasow,traffic:Improve startup performance,64,[],https://github.com/navit-gps/navit/pull/822,https://github.com/mvglasow,4,https://github.com/navit-gps/navit/pull/822#issuecomment-516168201,"To address #815, this PR improves performance of the traffic module by deferring location expansion until the location is actually needed, speeding things up when we are starting up with a large number of cached messages or receiving a large feed.
On startup and when receiving a feed, items for the location are generated immediately only if we are currently routing and the rectangle for the location overlaps with the rectangle for the route, as these messages may influence the route.
Otherwise, when a map rectangle is opened on the traffic map, items are generated for locations whose rectangles overlap the queried rectangle.
When the traffic map is queried with a NULL selection (meaning everything should be retrieved), nothing is expanded and items are returned only for previously expanded locations. This is an experimental feature which became necessary since the traffic module occasionally queries its own map (all of which happens with a NULL pointer and would otherwise cause all locations to be expanded). If the current implementation is found to cause trouble, we would need to constrain these operations to a particular rectangle.
When TraFF messages are exported via Dbus, all messages are expanded as part of the operation—so the export can now take quite long when the message store holds a lot of unresolved messages.
This still needs to undergo some tests. Starting up with a large list of messages and dragging the map around works, but routing and export have not been tested yet.",Freshly calculated messages work as well as of ee59ece.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,822,2019-07-28T17:54:59Z,2019-08-20T15:44:53Z,2019-08-20T15:44:54Z,MERGED,True,848,153,10,https://github.com/mvglasow,traffic:Improve startup performance,64,[],https://github.com/navit-gps/navit/pull/822,https://github.com/mvglasow,5,https://github.com/navit-gps/navit/pull/822#issuecomment-516619032,"To address #815, this PR improves performance of the traffic module by deferring location expansion until the location is actually needed, speeding things up when we are starting up with a large number of cached messages or receiving a large feed.
On startup and when receiving a feed, items for the location are generated immediately only if we are currently routing and the rectangle for the location overlaps with the rectangle for the route, as these messages may influence the route.
Otherwise, when a map rectangle is opened on the traffic map, items are generated for locations whose rectangles overlap the queried rectangle.
When the traffic map is queried with a NULL selection (meaning everything should be retrieved), nothing is expanded and items are returned only for previously expanded locations. This is an experimental feature which became necessary since the traffic module occasionally queries its own map (all of which happens with a NULL pointer and would otherwise cause all locations to be expanded). If the current implementation is found to cause trouble, we would need to constrain these operations to a particular rectangle.
When TraFF messages are exported via Dbus, all messages are expanded as part of the operation—so the export can now take quite long when the message store holds a lot of unresolved messages.
This still needs to undergo some tests. Starting up with a large list of messages and dragging the map around works, but routing and export have not been tested yet.","70071e7 fixes an out-of-bounds write. On Android, due to #802, you need to revert 4e5b35a before building, after that it will build into a functioning Android app.
I’ll take it for a spin these days to rule out any unwanted side effects in practice, and then report back.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,822,2019-07-28T17:54:59Z,2019-08-20T15:44:53Z,2019-08-20T15:44:54Z,MERGED,True,848,153,10,https://github.com/mvglasow,traffic:Improve startup performance,64,[],https://github.com/navit-gps/navit/pull/822,https://github.com/mvglasow,6,https://github.com/navit-gps/navit/pull/822#issuecomment-519673172,"To address #815, this PR improves performance of the traffic module by deferring location expansion until the location is actually needed, speeding things up when we are starting up with a large number of cached messages or receiving a large feed.
On startup and when receiving a feed, items for the location are generated immediately only if we are currently routing and the rectangle for the location overlaps with the rectangle for the route, as these messages may influence the route.
Otherwise, when a map rectangle is opened on the traffic map, items are generated for locations whose rectangles overlap the queried rectangle.
When the traffic map is queried with a NULL selection (meaning everything should be retrieved), nothing is expanded and items are returned only for previously expanded locations. This is an experimental feature which became necessary since the traffic module occasionally queries its own map (all of which happens with a NULL pointer and would otherwise cause all locations to be expanded). If the current implementation is found to cause trouble, we would need to constrain these operations to a particular rectangle.
When TraFF messages are exported via Dbus, all messages are expanded as part of the operation—so the export can now take quite long when the message store holds a lot of unresolved messages.
This still needs to undergo some tests. Starting up with a large list of messages and dragging the map around works, but routing and export have not been tested yet.","Tests for lazy location matching did not reveal any unwanted side effects. Startup is quick, at the expense of long routes taking a long time to calculate if there are a lot of traffic reports within their map selection.
The latest batch of commits adds location caching: traffic map items are written to traffic.xml and restored on startup. This works well in lab tests, real-life tests are still pending.
Bugs and limitations (still to be fixed):

Speed limits may be incorrect if an item has more than one associated message.
If map data changes after the location was expanded and cached, this is not detected and the traffic distortion may no longer match the map data.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,822,2019-07-28T17:54:59Z,2019-08-20T15:44:53Z,2019-08-20T15:44:54Z,MERGED,True,848,153,10,https://github.com/mvglasow,traffic:Improve startup performance,64,[],https://github.com/navit-gps/navit/pull/822,https://github.com/mvglasow,7,https://github.com/navit-gps/navit/pull/822#issuecomment-520175024,"To address #815, this PR improves performance of the traffic module by deferring location expansion until the location is actually needed, speeding things up when we are starting up with a large number of cached messages or receiving a large feed.
On startup and when receiving a feed, items for the location are generated immediately only if we are currently routing and the rectangle for the location overlaps with the rectangle for the route, as these messages may influence the route.
Otherwise, when a map rectangle is opened on the traffic map, items are generated for locations whose rectangles overlap the queried rectangle.
When the traffic map is queried with a NULL selection (meaning everything should be retrieved), nothing is expanded and items are returned only for previously expanded locations. This is an experimental feature which became necessary since the traffic module occasionally queries its own map (all of which happens with a NULL pointer and would otherwise cause all locations to be expanded). If the current implementation is found to cause trouble, we would need to constrain these operations to a particular rectangle.
When TraFF messages are exported via Dbus, all messages are expanded as part of the operation—so the export can now take quite long when the message store holds a lot of unresolved messages.
This still needs to undergo some tests. Starting up with a large list of messages and dragging the map around works, but routing and export have not been tested yet.","And the latest batch of updates also fixes the two bugs and limitations:

Speed limits now should be handled correctly even for items referenced by multiple messages
When restoring traffic distortions, Navit now compares them to the map (i.e. all active maps in the mapset) and discards all cached data if it does not match current map data

The only open point is that restoring segmented ways currently does not work—segmented ways have to be regenerated from scratch. This would only be an issue with exotic use cases (binfiles from the map download server do not have segmented ways), and would only negate performance benefits introduces by these commits but not impact accuracy of data.
Tested in the lab but not in real-life use cases yet.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,822,2019-07-28T17:54:59Z,2019-08-20T15:44:53Z,2019-08-20T15:44:54Z,MERGED,True,848,153,10,https://github.com/mvglasow,traffic:Improve startup performance,64,[],https://github.com/navit-gps/navit/pull/822,https://github.com/mvglasow,8,https://github.com/navit-gps/navit/pull/822#issuecomment-520235367,"To address #815, this PR improves performance of the traffic module by deferring location expansion until the location is actually needed, speeding things up when we are starting up with a large number of cached messages or receiving a large feed.
On startup and when receiving a feed, items for the location are generated immediately only if we are currently routing and the rectangle for the location overlaps with the rectangle for the route, as these messages may influence the route.
Otherwise, when a map rectangle is opened on the traffic map, items are generated for locations whose rectangles overlap the queried rectangle.
When the traffic map is queried with a NULL selection (meaning everything should be retrieved), nothing is expanded and items are returned only for previously expanded locations. This is an experimental feature which became necessary since the traffic module occasionally queries its own map (all of which happens with a NULL pointer and would otherwise cause all locations to be expanded). If the current implementation is found to cause trouble, we would need to constrain these operations to a particular rectangle.
When TraFF messages are exported via Dbus, all messages are expanded as part of the operation—so the export can now take quite long when the message store holds a lot of unresolved messages.
This still needs to undergo some tests. Starting up with a large list of messages and dragging the map around works, but routing and export have not been tested yet.",A brief test on a real device with real traffic messages looked OK. I will likely be making some heavy use of the new features over the course of the next week and then report back.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,822,2019-07-28T17:54:59Z,2019-08-20T15:44:53Z,2019-08-20T15:44:54Z,MERGED,True,848,153,10,https://github.com/mvglasow,traffic:Improve startup performance,64,[],https://github.com/navit-gps/navit/pull/822,https://github.com/mvglasow,9,https://github.com/navit-gps/navit/pull/822#issuecomment-520548203,"To address #815, this PR improves performance of the traffic module by deferring location expansion until the location is actually needed, speeding things up when we are starting up with a large number of cached messages or receiving a large feed.
On startup and when receiving a feed, items for the location are generated immediately only if we are currently routing and the rectangle for the location overlaps with the rectangle for the route, as these messages may influence the route.
Otherwise, when a map rectangle is opened on the traffic map, items are generated for locations whose rectangles overlap the queried rectangle.
When the traffic map is queried with a NULL selection (meaning everything should be retrieved), nothing is expanded and items are returned only for previously expanded locations. This is an experimental feature which became necessary since the traffic module occasionally queries its own map (all of which happens with a NULL pointer and would otherwise cause all locations to be expanded). If the current implementation is found to cause trouble, we would need to constrain these operations to a particular rectangle.
When TraFF messages are exported via Dbus, all messages are expanded as part of the operation—so the export can now take quite long when the message store holds a lot of unresolved messages.
This still needs to undergo some tests. Starting up with a large list of messages and dragging the map around works, but routing and export have not been tested yet.","I did a test under real-world conditions today:

Grabbed all active messages for Poland and Lithuania (some 600, though one-third expires after a few minutes)
Calculated a route from Munich to Augustów, about all the way across Poland, then shut down Navit
The next day, opened up Navit and calculated a route in town

Startup and route calculation were still quite slow, which may be in part because restoring some 200–300 locations from cache is still quite time-consuming. It might in fact make sense to defer even restoring of items until a map area containing them is queried.
Also, if a message has cached items but an update for that message is received before the items can be restored, Navit might discard the cached data, negating all performance benefits. I checked, when a message is replaced and the new location matches the old one, the new message gets the entire location structure (which holds the reference to the items in binfile format) and the items, hence no issue here.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,822,2019-07-28T17:54:59Z,2019-08-20T15:44:53Z,2019-08-20T15:44:54Z,MERGED,True,848,153,10,https://github.com/mvglasow,traffic:Improve startup performance,64,[],https://github.com/navit-gps/navit/pull/822,https://github.com/mvglasow,10,https://github.com/navit-gps/navit/pull/822#issuecomment-520581758,"To address #815, this PR improves performance of the traffic module by deferring location expansion until the location is actually needed, speeding things up when we are starting up with a large number of cached messages or receiving a large feed.
On startup and when receiving a feed, items for the location are generated immediately only if we are currently routing and the rectangle for the location overlaps with the rectangle for the route, as these messages may influence the route.
Otherwise, when a map rectangle is opened on the traffic map, items are generated for locations whose rectangles overlap the queried rectangle.
When the traffic map is queried with a NULL selection (meaning everything should be retrieved), nothing is expanded and items are returned only for previously expanded locations. This is an experimental feature which became necessary since the traffic module occasionally queries its own map (all of which happens with a NULL pointer and would otherwise cause all locations to be expanded). If the current implementation is found to cause trouble, we would need to constrain these operations to a particular rectangle.
When TraFF messages are exported via Dbus, all messages are expanded as part of the operation—so the export can now take quite long when the message store holds a lot of unresolved messages.
This still needs to undergo some tests. Starting up with a large list of messages and dragging the map around works, but routing and export have not been tested yet.","The latest batch of commits defers restore operations until a rectangle possibly containing the items is queried. That speeds up startup and calculation of short routes; the performance penalty will only strike when calculating a long route in an area with a lot of traffic messages. Probably the best we can get without multithreading. I’ll do some more tests over the course of this week, but I am planning to merge if I don’t encounter any crashes—for a number of use cases this is already a massive performance improvement over what we had before.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,822,2019-07-28T17:54:59Z,2019-08-20T15:44:53Z,2019-08-20T15:44:54Z,MERGED,True,848,153,10,https://github.com/mvglasow,traffic:Improve startup performance,64,[],https://github.com/navit-gps/navit/pull/822,https://github.com/mvglasow,11,https://github.com/navit-gps/navit/pull/822#issuecomment-522073196,"To address #815, this PR improves performance of the traffic module by deferring location expansion until the location is actually needed, speeding things up when we are starting up with a large number of cached messages or receiving a large feed.
On startup and when receiving a feed, items for the location are generated immediately only if we are currently routing and the rectangle for the location overlaps with the rectangle for the route, as these messages may influence the route.
Otherwise, when a map rectangle is opened on the traffic map, items are generated for locations whose rectangles overlap the queried rectangle.
When the traffic map is queried with a NULL selection (meaning everything should be retrieved), nothing is expanded and items are returned only for previously expanded locations. This is an experimental feature which became necessary since the traffic module occasionally queries its own map (all of which happens with a NULL pointer and would otherwise cause all locations to be expanded). If the current implementation is found to cause trouble, we would need to constrain these operations to a particular rectangle.
When TraFF messages are exported via Dbus, all messages are expanded as part of the operation—so the export can now take quite long when the message store holds a lot of unresolved messages.
This still needs to undergo some tests. Starting up with a large list of messages and dragging the map around works, but routing and export have not been tested yet.","Real-world performance for a route all across Poland was still disastrous; route calculation with expansion of some 300 items took several minutes.
Iterating over the whole map set once for each item we restore turns out to be quite inefficient. The latest commit takes a different approach: parse everything, then iterate over the map and compare anything with matching IDs and mark items when a match is found. If all items are matched, use the data, else discard everything. In the lab, this has cut route calculation from 60 to 14 seconds (tested with a route from the Latvian-Lithuanian border to Hradec Králové, spanning most of Lithuania and Poland).",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,822,2019-07-28T17:54:59Z,2019-08-20T15:44:53Z,2019-08-20T15:44:54Z,MERGED,True,848,153,10,https://github.com/mvglasow,traffic:Improve startup performance,64,[],https://github.com/navit-gps/navit/pull/822,https://github.com/mvglasow,12,https://github.com/navit-gps/navit/pull/822#issuecomment-522478563,"To address #815, this PR improves performance of the traffic module by deferring location expansion until the location is actually needed, speeding things up when we are starting up with a large number of cached messages or receiving a large feed.
On startup and when receiving a feed, items for the location are generated immediately only if we are currently routing and the rectangle for the location overlaps with the rectangle for the route, as these messages may influence the route.
Otherwise, when a map rectangle is opened on the traffic map, items are generated for locations whose rectangles overlap the queried rectangle.
When the traffic map is queried with a NULL selection (meaning everything should be retrieved), nothing is expanded and items are returned only for previously expanded locations. This is an experimental feature which became necessary since the traffic module occasionally queries its own map (all of which happens with a NULL pointer and would otherwise cause all locations to be expanded). If the current implementation is found to cause trouble, we would need to constrain these operations to a particular rectangle.
When TraFF messages are exported via Dbus, all messages are expanded as part of the operation—so the export can now take quite long when the message store holds a lot of unresolved messages.
This still needs to undergo some tests. Starting up with a large list of messages and dragging the map around works, but routing and export have not been tested yet.","Ready for merge, except that CodeFactor is preventing me from doing an automatic merge…",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,824,2019-08-01T20:59:22Z,2019-09-03T07:14:40Z,2019-09-25T20:44:01Z,MERGED,True,1420,360,14,https://github.com/metalstrolch,core:feature:multipolygon support,38,"['enhancement', 'core']",https://github.com/navit-gps/navit/pull/824,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/824,"This adds multi polygon support to navit binfile.
It uses the following attempt:

Multipolygon ""outer"" polygons are converted to polygons inside the binfile map.
Multipolygon ""inner"" polygons are added as attributes to the outer polygon.
New method is added to graphics to draw polygons with ""holes"" (currently qt5, gtk_drawing_area, and Windows (except CE) but at least sdl can do this as well)

Since the binfile format stays structural intact, new maps can be processed by old Navit versions, except they draw the multipolygons without their ""holes"",
New version of navit can still read old maps of course.
Limitations:

In the maps, there are multipolygons having other multipolygons as inner or outer. These are unsupported and fail the member check. According to https://wiki.openstreetmap.org/wiki/Relation:multipolygon these are invalid. And the current web display cannot display them as well. See https://www.openstreetmap.org/relation/5587300 . Don't know if this get a standard mapping feature. Hopefully not.
Multipolygon polygons tend to become huge. No algorithm to split them into smaller chunks is contained. But my personal opinion is to exclude some types of polygons from map altogether on constrained devices over not including or artificial cutting the multipolygon ones. Btw. there are already huge traditional polygons as well.
Currently I don't know if the resulting polygons are sorted to the correct map layer according to their size. However they ""look"" fine.
Processing the map required more disk space as one cannot early drop ways with unknown tags any more, as they could be part of multipolygon. Maptools -n flag works as expected for the final result though.","This adds multi polygon support to navit binfile.
It uses the following attempt:

Multipolygon ""outer"" polygons are converted to polygons inside the binfile map.
Multipolygon ""inner"" polygons are added as attributes to the outer polygon.
New method is added to graphics to draw polygons with ""holes"" (currently qt5, gtk_drawing_area, and Windows (except CE) but at least sdl can do this as well)

Since the binfile format stays structural intact, new maps can be processed by old Navit versions, except they draw the multipolygons without their ""holes"",
New version of navit can still read old maps of course.
Limitations:

In the maps, there are multipolygons having other multipolygons as inner or outer. These are unsupported and fail the member check. According to https://wiki.openstreetmap.org/wiki/Relation:multipolygon these are invalid. And the current web display cannot display them as well. See https://www.openstreetmap.org/relation/5587300 . Don't know if this get a standard mapping feature. Hopefully not.
Multipolygon polygons tend to become huge. No algorithm to split them into smaller chunks is contained. But my personal opinion is to exclude some types of polygons from map altogether on constrained devices over not including or artificial cutting the multipolygon ones. Btw. there are already huge traditional polygons as well.
Currently I don't know if the resulting polygons are sorted to the correct map layer according to their size. However they ""look"" fine.
Processing the map required more disk space as one cannot early drop ways with unknown tags any more, as they could be part of multipolygon. Maptools -n flag works as expected for the final result though.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,824,2019-08-01T20:59:22Z,2019-09-03T07:14:40Z,2019-09-25T20:44:01Z,MERGED,True,1420,360,14,https://github.com/metalstrolch,core:feature:multipolygon support,38,"['enhancement', 'core']",https://github.com/navit-gps/navit/pull/824,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/824#issuecomment-517457008,"This adds multi polygon support to navit binfile.
It uses the following attempt:

Multipolygon ""outer"" polygons are converted to polygons inside the binfile map.
Multipolygon ""inner"" polygons are added as attributes to the outer polygon.
New method is added to graphics to draw polygons with ""holes"" (currently qt5, gtk_drawing_area, and Windows (except CE) but at least sdl can do this as well)

Since the binfile format stays structural intact, new maps can be processed by old Navit versions, except they draw the multipolygons without their ""holes"",
New version of navit can still read old maps of course.
Limitations:

In the maps, there are multipolygons having other multipolygons as inner or outer. These are unsupported and fail the member check. According to https://wiki.openstreetmap.org/wiki/Relation:multipolygon these are invalid. And the current web display cannot display them as well. See https://www.openstreetmap.org/relation/5587300 . Don't know if this get a standard mapping feature. Hopefully not.
Multipolygon polygons tend to become huge. No algorithm to split them into smaller chunks is contained. But my personal opinion is to exclude some types of polygons from map altogether on constrained devices over not including or artificial cutting the multipolygon ones. Btw. there are already huge traditional polygons as well.
Currently I don't know if the resulting polygons are sorted to the correct map layer according to their size. However they ""look"" fine.
Processing the map required more disk space as one cannot early drop ways with unknown tags any more, as they could be part of multipolygon. Maptools -n flag works as expected for the final result though.","What's the state of this:

maptool successfully converts large parts of germany. Try run converting full europe is currently running. I don't have the disk space to try to convert world.
core support to deal with multipolygons with holes is added and operational.
qt5 graphics driver (linux / sailfish) is enhanced to draw polygons with holes.

Could be merged, if somebody can confirm the maptool is ordering the multipolygons right.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,824,2019-08-01T20:59:22Z,2019-09-03T07:14:40Z,2019-09-25T20:44:01Z,MERGED,True,1420,360,14,https://github.com/metalstrolch,core:feature:multipolygon support,38,"['enhancement', 'core']",https://github.com/navit-gps/navit/pull/824,https://github.com/metalstrolch,3,https://github.com/navit-gps/navit/pull/824#issuecomment-517457317,"This adds multi polygon support to navit binfile.
It uses the following attempt:

Multipolygon ""outer"" polygons are converted to polygons inside the binfile map.
Multipolygon ""inner"" polygons are added as attributes to the outer polygon.
New method is added to graphics to draw polygons with ""holes"" (currently qt5, gtk_drawing_area, and Windows (except CE) but at least sdl can do this as well)

Since the binfile format stays structural intact, new maps can be processed by old Navit versions, except they draw the multipolygons without their ""holes"",
New version of navit can still read old maps of course.
Limitations:

In the maps, there are multipolygons having other multipolygons as inner or outer. These are unsupported and fail the member check. According to https://wiki.openstreetmap.org/wiki/Relation:multipolygon these are invalid. And the current web display cannot display them as well. See https://www.openstreetmap.org/relation/5587300 . Don't know if this get a standard mapping feature. Hopefully not.
Multipolygon polygons tend to become huge. No algorithm to split them into smaller chunks is contained. But my personal opinion is to exclude some types of polygons from map altogether on constrained devices over not including or artificial cutting the multipolygon ones. Btw. there are already huge traditional polygons as well.
Currently I don't know if the resulting polygons are sorted to the correct map layer according to their size. However they ""look"" fine.
Processing the map required more disk space as one cannot early drop ways with unknown tags any more, as they could be part of multipolygon. Maptools -n flag works as expected for the final result though.",Fixes #398,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,824,2019-08-01T20:59:22Z,2019-09-03T07:14:40Z,2019-09-25T20:44:01Z,MERGED,True,1420,360,14,https://github.com/metalstrolch,core:feature:multipolygon support,38,"['enhancement', 'core']",https://github.com/navit-gps/navit/pull/824,https://github.com/metalstrolch,4,https://github.com/navit-gps/navit/pull/824#issuecomment-517598036,"This adds multi polygon support to navit binfile.
It uses the following attempt:

Multipolygon ""outer"" polygons are converted to polygons inside the binfile map.
Multipolygon ""inner"" polygons are added as attributes to the outer polygon.
New method is added to graphics to draw polygons with ""holes"" (currently qt5, gtk_drawing_area, and Windows (except CE) but at least sdl can do this as well)

Since the binfile format stays structural intact, new maps can be processed by old Navit versions, except they draw the multipolygons without their ""holes"",
New version of navit can still read old maps of course.
Limitations:

In the maps, there are multipolygons having other multipolygons as inner or outer. These are unsupported and fail the member check. According to https://wiki.openstreetmap.org/wiki/Relation:multipolygon these are invalid. And the current web display cannot display them as well. See https://www.openstreetmap.org/relation/5587300 . Don't know if this get a standard mapping feature. Hopefully not.
Multipolygon polygons tend to become huge. No algorithm to split them into smaller chunks is contained. But my personal opinion is to exclude some types of polygons from map altogether on constrained devices over not including or artificial cutting the multipolygon ones. Btw. there are already huge traditional polygons as well.
Currently I don't know if the resulting polygons are sorted to the correct map layer according to their size. However they ""look"" fine.
Processing the map required more disk space as one cannot early drop ways with unknown tags any more, as they could be part of multipolygon. Maptools -n flag works as expected for the final result though.","Aargh. Maptool segfaulted processing europe-latest.pbf at a point where I did not change anything.
It segfaulted during osm_process_towns. unfortunately maptool isn't known for stability...
Does anybody know how ""world"" is usually processed? Is it done with increased stack size (ulimit)?
What settings for the maptool are used?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,824,2019-08-01T20:59:22Z,2019-09-03T07:14:40Z,2019-09-25T20:44:01Z,MERGED,True,1420,360,14,https://github.com/metalstrolch,core:feature:multipolygon support,38,"['enhancement', 'core']",https://github.com/navit-gps/navit/pull/824,https://github.com/metalstrolch,5,https://github.com/navit-gps/navit/pull/824#issuecomment-517601067,"This adds multi polygon support to navit binfile.
It uses the following attempt:

Multipolygon ""outer"" polygons are converted to polygons inside the binfile map.
Multipolygon ""inner"" polygons are added as attributes to the outer polygon.
New method is added to graphics to draw polygons with ""holes"" (currently qt5, gtk_drawing_area, and Windows (except CE) but at least sdl can do this as well)

Since the binfile format stays structural intact, new maps can be processed by old Navit versions, except they draw the multipolygons without their ""holes"",
New version of navit can still read old maps of course.
Limitations:

In the maps, there are multipolygons having other multipolygons as inner or outer. These are unsupported and fail the member check. According to https://wiki.openstreetmap.org/wiki/Relation:multipolygon these are invalid. And the current web display cannot display them as well. See https://www.openstreetmap.org/relation/5587300 . Don't know if this get a standard mapping feature. Hopefully not.
Multipolygon polygons tend to become huge. No algorithm to split them into smaller chunks is contained. But my personal opinion is to exclude some types of polygons from map altogether on constrained devices over not including or artificial cutting the multipolygon ones. Btw. there are already huge traditional polygons as well.
Currently I don't know if the resulting polygons are sorted to the correct map layer according to their size. However they ""look"" fine.
Processing the map required more disk space as one cannot early drop ways with unknown tags any more, as they could be part of multipolygon. Maptools -n flag works as expected for the final result though.","Looks as if the stack run full:
segfault at 7ffcc46e0fe8 ip 0000557a7ed815af sp 00007ffcc46e0ff0 error 6 in maptool[557a7ed78000+6a000]
Error 6 indicates a userspace write operation. Looks as if it was writing behind stack limit.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,824,2019-08-01T20:59:22Z,2019-09-03T07:14:40Z,2019-09-25T20:44:01Z,MERGED,True,1420,360,14,https://github.com/metalstrolch,core:feature:multipolygon support,38,"['enhancement', 'core']",https://github.com/navit-gps/navit/pull/824,https://github.com/metalstrolch,6,https://github.com/navit-gps/navit/pull/824#issuecomment-518602217,"This adds multi polygon support to navit binfile.
It uses the following attempt:

Multipolygon ""outer"" polygons are converted to polygons inside the binfile map.
Multipolygon ""inner"" polygons are added as attributes to the outer polygon.
New method is added to graphics to draw polygons with ""holes"" (currently qt5, gtk_drawing_area, and Windows (except CE) but at least sdl can do this as well)

Since the binfile format stays structural intact, new maps can be processed by old Navit versions, except they draw the multipolygons without their ""holes"",
New version of navit can still read old maps of course.
Limitations:

In the maps, there are multipolygons having other multipolygons as inner or outer. These are unsupported and fail the member check. According to https://wiki.openstreetmap.org/wiki/Relation:multipolygon these are invalid. And the current web display cannot display them as well. See https://www.openstreetmap.org/relation/5587300 . Don't know if this get a standard mapping feature. Hopefully not.
Multipolygon polygons tend to become huge. No algorithm to split them into smaller chunks is contained. But my personal opinion is to exclude some types of polygons from map altogether on constrained devices over not including or artificial cutting the multipolygon ones. Btw. there are already huge traditional polygons as well.
Currently I don't know if the resulting polygons are sorted to the correct map layer according to their size. However they ""look"" fine.
Processing the map required more disk space as one cannot early drop ways with unknown tags any more, as they could be part of multipolygon. Maptools -n flag works as expected for the final result though.","Finally Europe converts. ulimit -c unlimited is your friend. But the result was rubbish, as I forgot to give ""-6"" switch and the file was way over 4GiB (14GiB in fact). As I didn't give -k as well it threw away temp files. Bummer. Made -6 standard.
Next try in around 24 Hours. Btw: We could do the same multiprocessing improvement I did to multipolygons to turn restriction processing as well.
Added processing time by multipolygons: 4hours. Added map result size roughly: 2GiB. Better than I feared.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,824,2019-08-01T20:59:22Z,2019-09-03T07:14:40Z,2019-09-25T20:44:01Z,MERGED,True,1420,360,14,https://github.com/metalstrolch,core:feature:multipolygon support,38,"['enhancement', 'core']",https://github.com/navit-gps/navit/pull/824,https://github.com/metalstrolch,7,https://github.com/navit-gps/navit/pull/824#issuecomment-518729648,"This adds multi polygon support to navit binfile.
It uses the following attempt:

Multipolygon ""outer"" polygons are converted to polygons inside the binfile map.
Multipolygon ""inner"" polygons are added as attributes to the outer polygon.
New method is added to graphics to draw polygons with ""holes"" (currently qt5, gtk_drawing_area, and Windows (except CE) but at least sdl can do this as well)

Since the binfile format stays structural intact, new maps can be processed by old Navit versions, except they draw the multipolygons without their ""holes"",
New version of navit can still read old maps of course.
Limitations:

In the maps, there are multipolygons having other multipolygons as inner or outer. These are unsupported and fail the member check. According to https://wiki.openstreetmap.org/wiki/Relation:multipolygon these are invalid. And the current web display cannot display them as well. See https://www.openstreetmap.org/relation/5587300 . Don't know if this get a standard mapping feature. Hopefully not.
Multipolygon polygons tend to become huge. No algorithm to split them into smaller chunks is contained. But my personal opinion is to exclude some types of polygons from map altogether on constrained devices over not including or artificial cutting the multipolygon ones. Btw. there are already huge traditional polygons as well.
Currently I don't know if the resulting polygons are sorted to the correct map layer according to their size. However they ""look"" fine.
Processing the map required more disk space as one cannot early drop ways with unknown tags any more, as they could be part of multipolygon. Maptools -n flag works as expected for the final result though.","While Europe is processing, I processed a smaller map for the Alpes area. Here for comparisation two times the Ammersee Area near Munich (48° 0′ N, 11° 7′ O)",True,{'THUMBS_UP': ['https://github.com/viktorgino']}
navit-gps/navit,https://github.com/navit-gps/navit,824,2019-08-01T20:59:22Z,2019-09-03T07:14:40Z,2019-09-25T20:44:01Z,MERGED,True,1420,360,14,https://github.com/metalstrolch,core:feature:multipolygon support,38,"['enhancement', 'core']",https://github.com/navit-gps/navit/pull/824,https://github.com/zintor,8,https://github.com/navit-gps/navit/pull/824#issuecomment-518803956,"This adds multi polygon support to navit binfile.
It uses the following attempt:

Multipolygon ""outer"" polygons are converted to polygons inside the binfile map.
Multipolygon ""inner"" polygons are added as attributes to the outer polygon.
New method is added to graphics to draw polygons with ""holes"" (currently qt5, gtk_drawing_area, and Windows (except CE) but at least sdl can do this as well)

Since the binfile format stays structural intact, new maps can be processed by old Navit versions, except they draw the multipolygons without their ""holes"",
New version of navit can still read old maps of course.
Limitations:

In the maps, there are multipolygons having other multipolygons as inner or outer. These are unsupported and fail the member check. According to https://wiki.openstreetmap.org/wiki/Relation:multipolygon these are invalid. And the current web display cannot display them as well. See https://www.openstreetmap.org/relation/5587300 . Don't know if this get a standard mapping feature. Hopefully not.
Multipolygon polygons tend to become huge. No algorithm to split them into smaller chunks is contained. But my personal opinion is to exclude some types of polygons from map altogether on constrained devices over not including or artificial cutting the multipolygon ones. Btw. there are already huge traditional polygons as well.
Currently I don't know if the resulting polygons are sorted to the correct map layer according to their size. However they ""look"" fine.
Processing the map required more disk space as one cannot early drop ways with unknown tags any more, as they could be part of multipolygon. Maptools -n flag works as expected for the final result though.","Wow, this looks promising.
And I thought the multipolygon support is only for the water coasts, but it Impacts also the ground area.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,824,2019-08-01T20:59:22Z,2019-09-03T07:14:40Z,2019-09-25T20:44:01Z,MERGED,True,1420,360,14,https://github.com/metalstrolch,core:feature:multipolygon support,38,"['enhancement', 'core']",https://github.com/navit-gps/navit/pull/824,https://github.com/metalstrolch,9,https://github.com/navit-gps/navit/pull/824#issuecomment-518992164,"This adds multi polygon support to navit binfile.
It uses the following attempt:

Multipolygon ""outer"" polygons are converted to polygons inside the binfile map.
Multipolygon ""inner"" polygons are added as attributes to the outer polygon.
New method is added to graphics to draw polygons with ""holes"" (currently qt5, gtk_drawing_area, and Windows (except CE) but at least sdl can do this as well)

Since the binfile format stays structural intact, new maps can be processed by old Navit versions, except they draw the multipolygons without their ""holes"",
New version of navit can still read old maps of course.
Limitations:

In the maps, there are multipolygons having other multipolygons as inner or outer. These are unsupported and fail the member check. According to https://wiki.openstreetmap.org/wiki/Relation:multipolygon these are invalid. And the current web display cannot display them as well. See https://www.openstreetmap.org/relation/5587300 . Don't know if this get a standard mapping feature. Hopefully not.
Multipolygon polygons tend to become huge. No algorithm to split them into smaller chunks is contained. But my personal opinion is to exclude some types of polygons from map altogether on constrained devices over not including or artificial cutting the multipolygon ones. Btw. there are already huge traditional polygons as well.
Currently I don't know if the resulting polygons are sorted to the correct map layer according to their size. However they ""look"" fine.
Processing the map required more disk space as one cannot early drop ways with unknown tags any more, as they could be part of multipolygon. Maptools -n flag works as expected for the final result though.","Added support for gtk_drawing_area as well. If someone wants to port graphics, this fake Munich map done with JOSM may help debugging:
fake-munich.zip
The ""fixed"" has the OSMIDs converted to positive numbers for maptool to process, the .osm is the original as saved with JOSM. JOSM uses negative IDs to indicate something not uploaded. Since of course we do NOT want to upload this we need to convert this.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,824,2019-08-01T20:59:22Z,2019-09-03T07:14:40Z,2019-09-25T20:44:01Z,MERGED,True,1420,360,14,https://github.com/metalstrolch,core:feature:multipolygon support,38,"['enhancement', 'core']",https://github.com/navit-gps/navit/pull/824,https://github.com/metalstrolch,10,https://github.com/navit-gps/navit/pull/824#issuecomment-519080043,"This adds multi polygon support to navit binfile.
It uses the following attempt:

Multipolygon ""outer"" polygons are converted to polygons inside the binfile map.
Multipolygon ""inner"" polygons are added as attributes to the outer polygon.
New method is added to graphics to draw polygons with ""holes"" (currently qt5, gtk_drawing_area, and Windows (except CE) but at least sdl can do this as well)

Since the binfile format stays structural intact, new maps can be processed by old Navit versions, except they draw the multipolygons without their ""holes"",
New version of navit can still read old maps of course.
Limitations:

In the maps, there are multipolygons having other multipolygons as inner or outer. These are unsupported and fail the member check. According to https://wiki.openstreetmap.org/wiki/Relation:multipolygon these are invalid. And the current web display cannot display them as well. See https://www.openstreetmap.org/relation/5587300 . Don't know if this get a standard mapping feature. Hopefully not.
Multipolygon polygons tend to become huge. No algorithm to split them into smaller chunks is contained. But my personal opinion is to exclude some types of polygons from map altogether on constrained devices over not including or artificial cutting the multipolygon ones. Btw. there are already huge traditional polygons as well.
Currently I don't know if the resulting polygons are sorted to the correct map layer according to their size. However they ""look"" fine.
Processing the map required more disk space as one cannot early drop ways with unknown tags any more, as they could be part of multipolygon. Maptools -n flag works as expected for the final result though.","Finally processed Europe map. result Looks good. Attached is the logfile if somebody wants to start fixing the OSM map. Many multipolygon and other errors are detected by maptool.
logfile2.zip
Removing WIP.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,824,2019-08-01T20:59:22Z,2019-09-03T07:14:40Z,2019-09-25T20:44:01Z,MERGED,True,1420,360,14,https://github.com/metalstrolch,core:feature:multipolygon support,38,"['enhancement', 'core']",https://github.com/navit-gps/navit/pull/824,https://github.com/metalstrolch,11,https://github.com/navit-gps/navit/pull/824#issuecomment-519081851,"This adds multi polygon support to navit binfile.
It uses the following attempt:

Multipolygon ""outer"" polygons are converted to polygons inside the binfile map.
Multipolygon ""inner"" polygons are added as attributes to the outer polygon.
New method is added to graphics to draw polygons with ""holes"" (currently qt5, gtk_drawing_area, and Windows (except CE) but at least sdl can do this as well)

Since the binfile format stays structural intact, new maps can be processed by old Navit versions, except they draw the multipolygons without their ""holes"",
New version of navit can still read old maps of course.
Limitations:

In the maps, there are multipolygons having other multipolygons as inner or outer. These are unsupported and fail the member check. According to https://wiki.openstreetmap.org/wiki/Relation:multipolygon these are invalid. And the current web display cannot display them as well. See https://www.openstreetmap.org/relation/5587300 . Don't know if this get a standard mapping feature. Hopefully not.
Multipolygon polygons tend to become huge. No algorithm to split them into smaller chunks is contained. But my personal opinion is to exclude some types of polygons from map altogether on constrained devices over not including or artificial cutting the multipolygon ones. Btw. there are already huge traditional polygons as well.
Currently I don't know if the resulting polygons are sorted to the correct map layer according to their size. However they ""look"" fine.
Processing the map required more disk space as one cannot early drop ways with unknown tags any more, as they could be part of multipolygon. Maptools -n flag works as expected for the final result though.","For testing: you can get whatever map chunk from geofabrik and convert as usual using the maptool built with this branch.
If processing larger area, remember to issue ulimit-s unlimited before. Already ported graphics back ends are Qt5 on Linux or Sailfish, and gtk_drawing_area on all gtk platforms.
Unfortunately I don't have the disk space to process whole world. Any volunteer to do so?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,824,2019-08-01T20:59:22Z,2019-09-03T07:14:40Z,2019-09-25T20:44:01Z,MERGED,True,1420,360,14,https://github.com/metalstrolch,core:feature:multipolygon support,38,"['enhancement', 'core']",https://github.com/navit-gps/navit/pull/824,https://github.com/jkoan,12,https://github.com/navit-gps/navit/pull/824#issuecomment-525141393,"This adds multi polygon support to navit binfile.
It uses the following attempt:

Multipolygon ""outer"" polygons are converted to polygons inside the binfile map.
Multipolygon ""inner"" polygons are added as attributes to the outer polygon.
New method is added to graphics to draw polygons with ""holes"" (currently qt5, gtk_drawing_area, and Windows (except CE) but at least sdl can do this as well)

Since the binfile format stays structural intact, new maps can be processed by old Navit versions, except they draw the multipolygons without their ""holes"",
New version of navit can still read old maps of course.
Limitations:

In the maps, there are multipolygons having other multipolygons as inner or outer. These are unsupported and fail the member check. According to https://wiki.openstreetmap.org/wiki/Relation:multipolygon these are invalid. And the current web display cannot display them as well. See https://www.openstreetmap.org/relation/5587300 . Don't know if this get a standard mapping feature. Hopefully not.
Multipolygon polygons tend to become huge. No algorithm to split them into smaller chunks is contained. But my personal opinion is to exclude some types of polygons from map altogether on constrained devices over not including or artificial cutting the multipolygon ones. Btw. there are already huge traditional polygons as well.
Currently I don't know if the resulting polygons are sorted to the correct map layer according to their size. However they ""look"" fine.
Processing the map required more disk space as one cannot early drop ways with unknown tags any more, as they could be part of multipolygon. Maptools -n flag works as expected for the final result though.","Any volunteer to do so?

the maptool version from this PR with the osm planet (pbf) is running since around 9 hours ;)
Currently (within phase 2) disk consumption is 210G as reported by du -sh

Bummer. Made -6 standard.

could you open a issue for that as we dont want to spam the PR with comments on this.

While Europe is processing, I processed a smaller map for the Alpes area. Here for comparisation two times the Ammersee Area near Munich (48° 0′ N, 11° 7′ O)

It looks amazing 😍



Multipolygon ""outer"" polygons are converted to polygons inside the binfile map.


Multipolygon ""inner"" polygons are added as attributes to the outer polygon.



Woulden't it in theory be enought to only have one of those? on the largest polygon inner as a list of references to the inner ones?
Could you explain how this approch is different from @jandegr's? He also showed Pictures which seem to be multipylogons, so whats the difference?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,824,2019-08-01T20:59:22Z,2019-09-03T07:14:40Z,2019-09-25T20:44:01Z,MERGED,True,1420,360,14,https://github.com/metalstrolch,core:feature:multipolygon support,38,"['enhancement', 'core']",https://github.com/navit-gps/navit/pull/824,https://github.com/metalstrolch,13,https://github.com/navit-gps/navit/pull/824#issuecomment-525192326,"This adds multi polygon support to navit binfile.
It uses the following attempt:

Multipolygon ""outer"" polygons are converted to polygons inside the binfile map.
Multipolygon ""inner"" polygons are added as attributes to the outer polygon.
New method is added to graphics to draw polygons with ""holes"" (currently qt5, gtk_drawing_area, and Windows (except CE) but at least sdl can do this as well)

Since the binfile format stays structural intact, new maps can be processed by old Navit versions, except they draw the multipolygons without their ""holes"",
New version of navit can still read old maps of course.
Limitations:

In the maps, there are multipolygons having other multipolygons as inner or outer. These are unsupported and fail the member check. According to https://wiki.openstreetmap.org/wiki/Relation:multipolygon these are invalid. And the current web display cannot display them as well. See https://www.openstreetmap.org/relation/5587300 . Don't know if this get a standard mapping feature. Hopefully not.
Multipolygon polygons tend to become huge. No algorithm to split them into smaller chunks is contained. But my personal opinion is to exclude some types of polygons from map altogether on constrained devices over not including or artificial cutting the multipolygon ones. Btw. there are already huge traditional polygons as well.
Currently I don't know if the resulting polygons are sorted to the correct map layer according to their size. However they ""look"" fine.
Processing the map required more disk space as one cannot early drop ways with unknown tags any more, as they could be part of multipolygon. Maptools -n flag works as expected for the final result though.","Nice to see somebody is interested in that.
There is not so much conceptional difference to @jandegr's attempt shown in #398, in fact it was his work that brought me to the idea on how to do that without breaking anything. The maps are still upward and downward compatible the way I did it.
Main difference is in the way I implemented it. in #398, it was tried to just add the ""holes"" to the coordinate section of the binfile element. And then to detect the holes by finding ""loops"" in the graphics back end. However the Coordinates get heavily changed on zooming / moving / rotating and so on, so the ""find a loop"" attempt was doomed to fail. The only other place we can store something in the binfile is the attr section. So I invented an attr for a ""hole"" storing the coordinates there. This way we do not need to guess them, they can be given by looking at the attrs. This works quite flawlessly.
Next thing is, I completely moved the problem of drawing a polygon with holes to the graphics section. Qt for example can simply do that. So why take the hassle to try to triangulate them in core. If there is a graphics library that cannot do it, the we have the option to not support it for this library, or triangulate ourselves only for this library. Did not try for Windows or Android, but Qt and Gtk can easily do this.
For the references: In theory you're right. We only need to ""reference"" the hole polygons. That's what a relation is. Unfortunately, the navit binfile doesn't know any concept for referencing other map elements. And the inner ""polygons"" are in fact given as a lot of independent way snippets by the relations. So we couldn't just reference the ""hole"". In fact then we would be required to dereference the whole relations ""on the fly"". Barely doable. Remember how long the maptool takes to do the task. See https://navit.readthedocs.io/en/latest/maps.html#content for the binfile format.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,824,2019-08-01T20:59:22Z,2019-09-03T07:14:40Z,2019-09-25T20:44:01Z,MERGED,True,1420,360,14,https://github.com/metalstrolch,core:feature:multipolygon support,38,"['enhancement', 'core']",https://github.com/navit-gps/navit/pull/824,https://github.com/jkoan,14,https://github.com/navit-gps/navit/pull/824#issuecomment-525587301,"This adds multi polygon support to navit binfile.
It uses the following attempt:

Multipolygon ""outer"" polygons are converted to polygons inside the binfile map.
Multipolygon ""inner"" polygons are added as attributes to the outer polygon.
New method is added to graphics to draw polygons with ""holes"" (currently qt5, gtk_drawing_area, and Windows (except CE) but at least sdl can do this as well)

Since the binfile format stays structural intact, new maps can be processed by old Navit versions, except they draw the multipolygons without their ""holes"",
New version of navit can still read old maps of course.
Limitations:

In the maps, there are multipolygons having other multipolygons as inner or outer. These are unsupported and fail the member check. According to https://wiki.openstreetmap.org/wiki/Relation:multipolygon these are invalid. And the current web display cannot display them as well. See https://www.openstreetmap.org/relation/5587300 . Don't know if this get a standard mapping feature. Hopefully not.
Multipolygon polygons tend to become huge. No algorithm to split them into smaller chunks is contained. But my personal opinion is to exclude some types of polygons from map altogether on constrained devices over not including or artificial cutting the multipolygon ones. Btw. there are already huge traditional polygons as well.
Currently I don't know if the resulting polygons are sorted to the correct map layer according to their size. However they ""look"" fine.
Processing the map required more disk space as one cannot early drop ways with unknown tags any more, as they could be part of multipolygon. Maptools -n flag works as expected for the final result though.","PROGRESS4: Processed 0 nodes (0 out) 347200046 ways 0 relations 0 tiles 1881:
15 35 MB
error:maptool:write_item_way_subsection:/root/project/navit/maptool/osm.c:368
4 assertion failed:fwrite(attr, attr_len*4, 1, out)==1

Abgebrochen (Speicherabzug geschrieben)

aaand it crashed, didn't though that 300GB are not enough... Need to look for another machine to download and process the planet...",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,824,2019-08-01T20:59:22Z,2019-09-03T07:14:40Z,2019-09-25T20:44:01Z,MERGED,True,1420,360,14,https://github.com/metalstrolch,core:feature:multipolygon support,38,"['enhancement', 'core']",https://github.com/navit-gps/navit/pull/824,https://github.com/metalstrolch,15,https://github.com/navit-gps/navit/pull/824#issuecomment-525615440,"This adds multi polygon support to navit binfile.
It uses the following attempt:

Multipolygon ""outer"" polygons are converted to polygons inside the binfile map.
Multipolygon ""inner"" polygons are added as attributes to the outer polygon.
New method is added to graphics to draw polygons with ""holes"" (currently qt5, gtk_drawing_area, and Windows (except CE) but at least sdl can do this as well)

Since the binfile format stays structural intact, new maps can be processed by old Navit versions, except they draw the multipolygons without their ""holes"",
New version of navit can still read old maps of course.
Limitations:

In the maps, there are multipolygons having other multipolygons as inner or outer. These are unsupported and fail the member check. According to https://wiki.openstreetmap.org/wiki/Relation:multipolygon these are invalid. And the current web display cannot display them as well. See https://www.openstreetmap.org/relation/5587300 . Don't know if this get a standard mapping feature. Hopefully not.
Multipolygon polygons tend to become huge. No algorithm to split them into smaller chunks is contained. But my personal opinion is to exclude some types of polygons from map altogether on constrained devices over not including or artificial cutting the multipolygon ones. Btw. there are already huge traditional polygons as well.
Currently I don't know if the resulting polygons are sorted to the correct map layer according to their size. However they ""look"" fine.
Processing the map required more disk space as one cannot early drop ways with unknown tags any more, as they could be part of multipolygon. Maptools -n flag works as expected for the final result though.","Yes that's my problem about this as well. Not so much processing power and ram, but disk space. Maybe I shell out some bucks to buy myself a 2 TB USB disk to do world conversion...",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,824,2019-08-01T20:59:22Z,2019-09-03T07:14:40Z,2019-09-25T20:44:01Z,MERGED,True,1420,360,14,https://github.com/metalstrolch,core:feature:multipolygon support,38,"['enhancement', 'core']",https://github.com/navit-gps/navit/pull/824,https://github.com/jkoan,16,https://github.com/navit-gps/navit/pull/824#issuecomment-526006993,"This adds multi polygon support to navit binfile.
It uses the following attempt:

Multipolygon ""outer"" polygons are converted to polygons inside the binfile map.
Multipolygon ""inner"" polygons are added as attributes to the outer polygon.
New method is added to graphics to draw polygons with ""holes"" (currently qt5, gtk_drawing_area, and Windows (except CE) but at least sdl can do this as well)

Since the binfile format stays structural intact, new maps can be processed by old Navit versions, except they draw the multipolygons without their ""holes"",
New version of navit can still read old maps of course.
Limitations:

In the maps, there are multipolygons having other multipolygons as inner or outer. These are unsupported and fail the member check. According to https://wiki.openstreetmap.org/wiki/Relation:multipolygon these are invalid. And the current web display cannot display them as well. See https://www.openstreetmap.org/relation/5587300 . Don't know if this get a standard mapping feature. Hopefully not.
Multipolygon polygons tend to become huge. No algorithm to split them into smaller chunks is contained. But my personal opinion is to exclude some types of polygons from map altogether on constrained devices over not including or artificial cutting the multipolygon ones. Btw. there are already huge traditional polygons as well.
Currently I don't know if the resulting polygons are sorted to the correct map layer according to their size. However they ""look"" fine.
Processing the map required more disk space as one cannot early drop ways with unknown tags any more, as they could be part of multipolygon. Maptools -n flag works as expected for the final result though.","Processing planet again (local) already in phase 4
edit (Do 29. Aug 04:57:55 UTC 2019) now phase 6",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,824,2019-08-01T20:59:22Z,2019-09-03T07:14:40Z,2019-09-25T20:44:01Z,MERGED,True,1420,360,14,https://github.com/metalstrolch,core:feature:multipolygon support,38,"['enhancement', 'core']",https://github.com/navit-gps/navit/pull/824,https://github.com/metalstrolch,17,https://github.com/navit-gps/navit/pull/824#issuecomment-526053303,"This adds multi polygon support to navit binfile.
It uses the following attempt:

Multipolygon ""outer"" polygons are converted to polygons inside the binfile map.
Multipolygon ""inner"" polygons are added as attributes to the outer polygon.
New method is added to graphics to draw polygons with ""holes"" (currently qt5, gtk_drawing_area, and Windows (except CE) but at least sdl can do this as well)

Since the binfile format stays structural intact, new maps can be processed by old Navit versions, except they draw the multipolygons without their ""holes"",
New version of navit can still read old maps of course.
Limitations:

In the maps, there are multipolygons having other multipolygons as inner or outer. These are unsupported and fail the member check. According to https://wiki.openstreetmap.org/wiki/Relation:multipolygon these are invalid. And the current web display cannot display them as well. See https://www.openstreetmap.org/relation/5587300 . Don't know if this get a standard mapping feature. Hopefully not.
Multipolygon polygons tend to become huge. No algorithm to split them into smaller chunks is contained. But my personal opinion is to exclude some types of polygons from map altogether on constrained devices over not including or artificial cutting the multipolygon ones. Btw. there are already huge traditional polygons as well.
Currently I don't know if the resulting polygons are sorted to the correct map layer according to their size. However they ""look"" fine.
Processing the map required more disk space as one cannot early drop ways with unknown tags any more, as they could be part of multipolygon. Maptools -n flag works as expected for the final result though.","Then you're machine is way faster than mine :) Mine is at at phase 4, 1375:22 minutes, currently using more than 300GiB disk storage.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,824,2019-08-01T20:59:22Z,2019-09-03T07:14:40Z,2019-09-25T20:44:01Z,MERGED,True,1420,360,14,https://github.com/metalstrolch,core:feature:multipolygon support,38,"['enhancement', 'core']",https://github.com/navit-gps/navit/pull/824,https://github.com/metalstrolch,18,https://github.com/navit-gps/navit/pull/824#issuecomment-526173202,"This adds multi polygon support to navit binfile.
It uses the following attempt:

Multipolygon ""outer"" polygons are converted to polygons inside the binfile map.
Multipolygon ""inner"" polygons are added as attributes to the outer polygon.
New method is added to graphics to draw polygons with ""holes"" (currently qt5, gtk_drawing_area, and Windows (except CE) but at least sdl can do this as well)

Since the binfile format stays structural intact, new maps can be processed by old Navit versions, except they draw the multipolygons without their ""holes"",
New version of navit can still read old maps of course.
Limitations:

In the maps, there are multipolygons having other multipolygons as inner or outer. These are unsupported and fail the member check. According to https://wiki.openstreetmap.org/wiki/Relation:multipolygon these are invalid. And the current web display cannot display them as well. See https://www.openstreetmap.org/relation/5587300 . Don't know if this get a standard mapping feature. Hopefully not.
Multipolygon polygons tend to become huge. No algorithm to split them into smaller chunks is contained. But my personal opinion is to exclude some types of polygons from map altogether on constrained devices over not including or artificial cutting the multipolygon ones. Btw. there are already huge traditional polygons as well.
Currently I don't know if the resulting polygons are sorted to the correct map layer according to their size. However they ""look"" fine.
Processing the map required more disk space as one cannot early drop ways with unknown tags any more, as they could be part of multipolygon. Maptools -n flag works as expected for the final result though.","Added ""draw polygon with holes"" support to windows graphics as well as this was no big deal to do.
World progress:
PROGRESS6: Processed 0 nodes (0 out) 0 ways 421424 relations 0 tiles 1732:20 943 MB",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,824,2019-08-01T20:59:22Z,2019-09-03T07:14:40Z,2019-09-25T20:44:01Z,MERGED,True,1420,360,14,https://github.com/metalstrolch,core:feature:multipolygon support,38,"['enhancement', 'core']",https://github.com/navit-gps/navit/pull/824,https://github.com/jkoan,19,https://github.com/navit-gps/navit/pull/824#issuecomment-526826963,"This adds multi polygon support to navit binfile.
It uses the following attempt:

Multipolygon ""outer"" polygons are converted to polygons inside the binfile map.
Multipolygon ""inner"" polygons are added as attributes to the outer polygon.
New method is added to graphics to draw polygons with ""holes"" (currently qt5, gtk_drawing_area, and Windows (except CE) but at least sdl can do this as well)

Since the binfile format stays structural intact, new maps can be processed by old Navit versions, except they draw the multipolygons without their ""holes"",
New version of navit can still read old maps of course.
Limitations:

In the maps, there are multipolygons having other multipolygons as inner or outer. These are unsupported and fail the member check. According to https://wiki.openstreetmap.org/wiki/Relation:multipolygon these are invalid. And the current web display cannot display them as well. See https://www.openstreetmap.org/relation/5587300 . Don't know if this get a standard mapping feature. Hopefully not.
Multipolygon polygons tend to become huge. No algorithm to split them into smaller chunks is contained. But my personal opinion is to exclude some types of polygons from map altogether on constrained devices over not including or artificial cutting the multipolygon ones. Btw. there are already huge traditional polygons as well.
Currently I don't know if the resulting polygons are sorted to the correct map layer according to their size. However they ""look"" fine.
Processing the map required more disk space as one cannot early drop ways with unknown tags any more, as they could be part of multipolygon. Maptools -n flag works as expected for the final result though.","Now on Phase 13 hope to finish soon :D
In the meantime I had one crash (no bug in maptool) so I needed a restart, but now I am optimistic to get it finished :)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,824,2019-08-01T20:59:22Z,2019-09-03T07:14:40Z,2019-09-25T20:44:01Z,MERGED,True,1420,360,14,https://github.com/metalstrolch,core:feature:multipolygon support,38,"['enhancement', 'core']",https://github.com/navit-gps/navit/pull/824,https://github.com/metalstrolch,20,https://github.com/navit-gps/navit/pull/824#issuecomment-526846812,"This adds multi polygon support to navit binfile.
It uses the following attempt:

Multipolygon ""outer"" polygons are converted to polygons inside the binfile map.
Multipolygon ""inner"" polygons are added as attributes to the outer polygon.
New method is added to graphics to draw polygons with ""holes"" (currently qt5, gtk_drawing_area, and Windows (except CE) but at least sdl can do this as well)

Since the binfile format stays structural intact, new maps can be processed by old Navit versions, except they draw the multipolygons without their ""holes"",
New version of navit can still read old maps of course.
Limitations:

In the maps, there are multipolygons having other multipolygons as inner or outer. These are unsupported and fail the member check. According to https://wiki.openstreetmap.org/wiki/Relation:multipolygon these are invalid. And the current web display cannot display them as well. See https://www.openstreetmap.org/relation/5587300 . Don't know if this get a standard mapping feature. Hopefully not.
Multipolygon polygons tend to become huge. No algorithm to split them into smaller chunks is contained. But my personal opinion is to exclude some types of polygons from map altogether on constrained devices over not including or artificial cutting the multipolygon ones. Btw. there are already huge traditional polygons as well.
Currently I don't know if the resulting polygons are sorted to the correct map layer according to their size. However they ""look"" fine.
Processing the map required more disk space as one cannot early drop ways with unknown tags any more, as they could be part of multipolygon. Maptools -n flag works as expected for the final result though.","Cool!
Mine is at 13 as well. No crashes so far. Peak Memory around 400 GiB on disk. Now at 303GiB again.
PROGRESS13: Processed 0 nodes (0 out) 456792987 ways 0 relations 0 tiles 4844:47 5189 MB
We definitely have some memory leaks in Maptool, but I think no new ones.
We definitely want https://github.com/navit-gps/navit/tree/maptool_turn_restriction_threading and some more multi threading enhancements. But lets stabilize this as is before.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,824,2019-08-01T20:59:22Z,2019-09-03T07:14:40Z,2019-09-25T20:44:01Z,MERGED,True,1420,360,14,https://github.com/metalstrolch,core:feature:multipolygon support,38,"['enhancement', 'core']",https://github.com/navit-gps/navit/pull/824,https://github.com/jkoan,21,https://github.com/navit-gps/navit/pull/824#issuecomment-526886203,"This adds multi polygon support to navit binfile.
It uses the following attempt:

Multipolygon ""outer"" polygons are converted to polygons inside the binfile map.
Multipolygon ""inner"" polygons are added as attributes to the outer polygon.
New method is added to graphics to draw polygons with ""holes"" (currently qt5, gtk_drawing_area, and Windows (except CE) but at least sdl can do this as well)

Since the binfile format stays structural intact, new maps can be processed by old Navit versions, except they draw the multipolygons without their ""holes"",
New version of navit can still read old maps of course.
Limitations:

In the maps, there are multipolygons having other multipolygons as inner or outer. These are unsupported and fail the member check. According to https://wiki.openstreetmap.org/wiki/Relation:multipolygon these are invalid. And the current web display cannot display them as well. See https://www.openstreetmap.org/relation/5587300 . Don't know if this get a standard mapping feature. Hopefully not.
Multipolygon polygons tend to become huge. No algorithm to split them into smaller chunks is contained. But my personal opinion is to exclude some types of polygons from map altogether on constrained devices over not including or artificial cutting the multipolygon ones. Btw. there are already huge traditional polygons as well.
Currently I don't know if the resulting polygons are sorted to the correct map layer according to their size. However they ""look"" fine.
Processing the map required more disk space as one cannot early drop ways with unknown tags any more, as they could be part of multipolygon. Maptools -n flag works as expected for the final result though.","My planet has finally succeeded to convert. Maps working and everything looks really nice. Only thing I am wondering, how do the multipylogons impact performance? If I understand correctly there are more objects to render on the same area as before. So this means rendering time rises and on embedded systems we will most likely have problems with those maps. Is that true?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,824,2019-08-01T20:59:22Z,2019-09-03T07:14:40Z,2019-09-25T20:44:01Z,MERGED,True,1420,360,14,https://github.com/metalstrolch,core:feature:multipolygon support,38,"['enhancement', 'core']",https://github.com/navit-gps/navit/pull/824,https://github.com/metalstrolch,22,https://github.com/navit-gps/navit/pull/824#issuecomment-526910761,"This adds multi polygon support to navit binfile.
It uses the following attempt:

Multipolygon ""outer"" polygons are converted to polygons inside the binfile map.
Multipolygon ""inner"" polygons are added as attributes to the outer polygon.
New method is added to graphics to draw polygons with ""holes"" (currently qt5, gtk_drawing_area, and Windows (except CE) but at least sdl can do this as well)

Since the binfile format stays structural intact, new maps can be processed by old Navit versions, except they draw the multipolygons without their ""holes"",
New version of navit can still read old maps of course.
Limitations:

In the maps, there are multipolygons having other multipolygons as inner or outer. These are unsupported and fail the member check. According to https://wiki.openstreetmap.org/wiki/Relation:multipolygon these are invalid. And the current web display cannot display them as well. See https://www.openstreetmap.org/relation/5587300 . Don't know if this get a standard mapping feature. Hopefully not.
Multipolygon polygons tend to become huge. No algorithm to split them into smaller chunks is contained. But my personal opinion is to exclude some types of polygons from map altogether on constrained devices over not including or artificial cutting the multipolygon ones. Btw. there are already huge traditional polygons as well.
Currently I don't know if the resulting polygons are sorted to the correct map layer according to their size. However they ""look"" fine.
Processing the map required more disk space as one cannot early drop ways with unknown tags any more, as they could be part of multipolygon. Maptools -n flag works as expected for the final result though.","Congrats. seems maptool is doing fine.
@jkoan: what graphics backind did you check the result with?
For the running navit, there is no difference if a element came from a multipolygon or from a traditional one. They are all treated the same, as maptool effectively converts multipolygons to polygons. But of course the number of elements present in binfile map affects performance on readin the elements from file as well as on rendering. You just need to compare the loading time of a rural area against a city like Munich and you'll get what I mean.
So for constrained devices we need to ask the performance question not wheather multipolygon support affects performance. Instead we need to ask how to limit the elements to be rendered for such devices.
I think using a layout (like car-simple) that just doesn't render many map elements like ""meadows"" or even ""buildings"" is the better solution than saying the ""meadow"" coming from the multipolygon is the one too much.
For example on a constrained device, somebody might switich off the rendering for most landuses, but he might want to keep the lakes and rivers, as those are usually the elements to orientate on map as one knows their shape and location.
Rivers are the best example. One just needs to look at the current map to see that filtering out only the multipolygons is not what one wants. You either want to have the complete river or none of it. But not only the pieces modelled as traditional polygons in OSM.
For really constrained devices, we could process a ""minimal"" world binfile throwing out anything one does not require for routing from the binfile, but keep only selected things like lakes and rivers. Again here, if a element comes from Polygon or not does not matter. This can be done quite easy. I was planning to give this a try anyways, as to learn how small a routable world map could be made throwing away all the candy.
My ""world"" completed as well. Resulting file 30GiB.
PROGRESS: Phase 14: done 5570:15 5189 MB
If somebody has space to upload this for others to download, just drop me how to upload it an I'll do.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,824,2019-08-01T20:59:22Z,2019-09-03T07:14:40Z,2019-09-25T20:44:01Z,MERGED,True,1420,360,14,https://github.com/metalstrolch,core:feature:multipolygon support,38,"['enhancement', 'core']",https://github.com/navit-gps/navit/pull/824,https://github.com/gefin,23,https://github.com/navit-gps/navit/pull/824#issuecomment-526929606,"This adds multi polygon support to navit binfile.
It uses the following attempt:

Multipolygon ""outer"" polygons are converted to polygons inside the binfile map.
Multipolygon ""inner"" polygons are added as attributes to the outer polygon.
New method is added to graphics to draw polygons with ""holes"" (currently qt5, gtk_drawing_area, and Windows (except CE) but at least sdl can do this as well)

Since the binfile format stays structural intact, new maps can be processed by old Navit versions, except they draw the multipolygons without their ""holes"",
New version of navit can still read old maps of course.
Limitations:

In the maps, there are multipolygons having other multipolygons as inner or outer. These are unsupported and fail the member check. According to https://wiki.openstreetmap.org/wiki/Relation:multipolygon these are invalid. And the current web display cannot display them as well. See https://www.openstreetmap.org/relation/5587300 . Don't know if this get a standard mapping feature. Hopefully not.
Multipolygon polygons tend to become huge. No algorithm to split them into smaller chunks is contained. But my personal opinion is to exclude some types of polygons from map altogether on constrained devices over not including or artificial cutting the multipolygon ones. Btw. there are already huge traditional polygons as well.
Currently I don't know if the resulting polygons are sorted to the correct map layer according to their size. However they ""look"" fine.
Processing the map required more disk space as one cannot early drop ways with unknown tags any more, as they could be part of multipolygon. Maptools -n flag works as expected for the final result though.","jkoan wrote
""""""If I understand correctly there are more objects to render on the same area as before. So this means rendering time rises and on embedded systems we will most likely have problems with those maps. Is that true?""""""
It would be interesting to compare the object count of problematic regions like munich.
I tested the impact of Layout settings on devices with bad power/displayresolution relationship .
(Tomtom XL,TT730 and LG K9)
Just as sample munich B2R middle ring screen filling:
car simpĺe ~1.5 sec, car android ~2.5 sec,  car day ~ 4 sec ,OSM-look  ~ 4.5 sec ( all not measured).
So i think the main problem is the layout complexity.
May be its possible to extract sublayouts for just one display depth  (order) and switch between while zooming. Hoping it helps to save time.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,824,2019-08-01T20:59:22Z,2019-09-03T07:14:40Z,2019-09-25T20:44:01Z,MERGED,True,1420,360,14,https://github.com/metalstrolch,core:feature:multipolygon support,38,"['enhancement', 'core']",https://github.com/navit-gps/navit/pull/824,https://github.com/metalstrolch,24,https://github.com/navit-gps/navit/pull/824#issuecomment-526944099,"This adds multi polygon support to navit binfile.
It uses the following attempt:

Multipolygon ""outer"" polygons are converted to polygons inside the binfile map.
Multipolygon ""inner"" polygons are added as attributes to the outer polygon.
New method is added to graphics to draw polygons with ""holes"" (currently qt5, gtk_drawing_area, and Windows (except CE) but at least sdl can do this as well)

Since the binfile format stays structural intact, new maps can be processed by old Navit versions, except they draw the multipolygons without their ""holes"",
New version of navit can still read old maps of course.
Limitations:

In the maps, there are multipolygons having other multipolygons as inner or outer. These are unsupported and fail the member check. According to https://wiki.openstreetmap.org/wiki/Relation:multipolygon these are invalid. And the current web display cannot display them as well. See https://www.openstreetmap.org/relation/5587300 . Don't know if this get a standard mapping feature. Hopefully not.
Multipolygon polygons tend to become huge. No algorithm to split them into smaller chunks is contained. But my personal opinion is to exclude some types of polygons from map altogether on constrained devices over not including or artificial cutting the multipolygon ones. Btw. there are already huge traditional polygons as well.
Currently I don't know if the resulting polygons are sorted to the correct map layer according to their size. However they ""look"" fine.
Processing the map required more disk space as one cannot early drop ways with unknown tags any more, as they could be part of multipolygon. Maptools -n flag works as expected for the final result though.","I think we should discuss rendering performance in a seperate issue, as I think it is not direct related to multipolygon support at all. If we compare e.g. the ancient Munich snapshot still used as sample map to the state of Munich today, then there is a highly increased object count over the years. Of course adding the long missing multipolygons gives a complexity jump for Navit, but that's still nothing compared to the complexity jump by just OSM getting more complex over the years.
And as @gefin proposes, there are plenty of improvements to rendering / layout handling possible to address constrained devices generally.
Interestingly, this doesn't seem to be ""that"" an issue, because nobody was really complaining about this over the last years. Map size increased drastically over the last 10 Years. Even without multipolygons.",True,{'THUMBS_UP': ['https://github.com/jkoan']}
navit-gps/navit,https://github.com/navit-gps/navit,824,2019-08-01T20:59:22Z,2019-09-03T07:14:40Z,2019-09-25T20:44:01Z,MERGED,True,1420,360,14,https://github.com/metalstrolch,core:feature:multipolygon support,38,"['enhancement', 'core']",https://github.com/navit-gps/navit/pull/824,https://github.com/jkoan,25,https://github.com/navit-gps/navit/pull/824#issuecomment-527019378,"This adds multi polygon support to navit binfile.
It uses the following attempt:

Multipolygon ""outer"" polygons are converted to polygons inside the binfile map.
Multipolygon ""inner"" polygons are added as attributes to the outer polygon.
New method is added to graphics to draw polygons with ""holes"" (currently qt5, gtk_drawing_area, and Windows (except CE) but at least sdl can do this as well)

Since the binfile format stays structural intact, new maps can be processed by old Navit versions, except they draw the multipolygons without their ""holes"",
New version of navit can still read old maps of course.
Limitations:

In the maps, there are multipolygons having other multipolygons as inner or outer. These are unsupported and fail the member check. According to https://wiki.openstreetmap.org/wiki/Relation:multipolygon these are invalid. And the current web display cannot display them as well. See https://www.openstreetmap.org/relation/5587300 . Don't know if this get a standard mapping feature. Hopefully not.
Multipolygon polygons tend to become huge. No algorithm to split them into smaller chunks is contained. But my personal opinion is to exclude some types of polygons from map altogether on constrained devices over not including or artificial cutting the multipolygon ones. Btw. there are already huge traditional polygons as well.
Currently I don't know if the resulting polygons are sorted to the correct map layer according to their size. However they ""look"" fine.
Processing the map required more disk space as one cannot early drop ways with unknown tags any more, as they could be part of multipolygon. Maptools -n flag works as expected for the final result though.","@jkoan: what graphics backind did you check the result with?

I tested with sdl (i know it dont have the support) only had time to do a short test. Will test today (hopefully), can test wince and win10 64bit as well

I think we should discuss rendering performance in a seperate issue,

Yes, please open another issue for this",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,824,2019-08-01T20:59:22Z,2019-09-03T07:14:40Z,2019-09-25T20:44:01Z,MERGED,True,1420,360,14,https://github.com/metalstrolch,core:feature:multipolygon support,38,"['enhancement', 'core']",https://github.com/navit-gps/navit/pull/824,https://github.com/metalstrolch,26,https://github.com/navit-gps/navit/pull/824#issuecomment-527058357,"This adds multi polygon support to navit binfile.
It uses the following attempt:

Multipolygon ""outer"" polygons are converted to polygons inside the binfile map.
Multipolygon ""inner"" polygons are added as attributes to the outer polygon.
New method is added to graphics to draw polygons with ""holes"" (currently qt5, gtk_drawing_area, and Windows (except CE) but at least sdl can do this as well)

Since the binfile format stays structural intact, new maps can be processed by old Navit versions, except they draw the multipolygons without their ""holes"",
New version of navit can still read old maps of course.
Limitations:

In the maps, there are multipolygons having other multipolygons as inner or outer. These are unsupported and fail the member check. According to https://wiki.openstreetmap.org/wiki/Relation:multipolygon these are invalid. And the current web display cannot display them as well. See https://www.openstreetmap.org/relation/5587300 . Don't know if this get a standard mapping feature. Hopefully not.
Multipolygon polygons tend to become huge. No algorithm to split them into smaller chunks is contained. But my personal opinion is to exclude some types of polygons from map altogether on constrained devices over not including or artificial cutting the multipolygon ones. Btw. there are already huge traditional polygons as well.
Currently I don't know if the resulting polygons are sorted to the correct map layer according to their size. However they ""look"" fine.
Processing the map required more disk space as one cannot early drop ways with unknown tags any more, as they could be part of multipolygon. Maptools -n flag works as expected for the final result though.","Still any objections against merging?
Will merge tomorrow Tuesday 3rd of September otherwise.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,827,2019-08-14T18:38:27Z,2019-08-16T18:45:08Z,2019-08-28T11:05:53Z,MERGED,True,31,20,7,https://github.com/jandegr,Android build fix and update - to be tested,7,[],https://github.com/navit-gps/navit/pull/827,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/827,"try to fix #802
The apk built on circle now includes tha so's again, but I am a bit short in Android devices for the moment so I invite everybody to help in testing.
further testing to be done for regressions this might introduce in other platforms, I don't expect any but lets make sure.
adds 64 bit native lib for google play store as well
https://android-developers.googleblog.com/2019/01/get-your-apps-ready-for-64-bit.html
https://developer.android.com/distribute/best-practices/develop/64-bit

If you do not have any arm64-v8a or x86_64 libraries, you'll need to update your build process to start building and packaging those artifacts in your APK.

so I suppose adding arm64-v8a is enough and it is not mandatory to add x86_64 as well, however that would be no problem if needed.","try to fix #802
The apk built on circle now includes tha so's again, but I am a bit short in Android devices for the moment so I invite everybody to help in testing.
further testing to be done for regressions this might introduce in other platforms, I don't expect any but lets make sure.
adds 64 bit native lib for google play store as well
https://android-developers.googleblog.com/2019/01/get-your-apps-ready-for-64-bit.html
https://developer.android.com/distribute/best-practices/develop/64-bit

If you do not have any arm64-v8a or x86_64 libraries, you'll need to update your build process to start building and packaging those artifacts in your APK.

so I suppose adding arm64-v8a is enough and it is not mandatory to add x86_64 as well, however that would be no problem if needed.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,827,2019-08-14T18:38:27Z,2019-08-16T18:45:08Z,2019-08-28T11:05:53Z,MERGED,True,31,20,7,https://github.com/jandegr,Android build fix and update - to be tested,7,[],https://github.com/navit-gps/navit/pull/827,https://github.com/gefin,2,https://github.com/navit-gps/navit/pull/827#issuecomment-521378882,"try to fix #802
The apk built on circle now includes tha so's again, but I am a bit short in Android devices for the moment so I invite everybody to help in testing.
further testing to be done for regressions this might introduce in other platforms, I don't expect any but lets make sure.
adds 64 bit native lib for google play store as well
https://android-developers.googleblog.com/2019/01/get-your-apps-ready-for-64-bit.html
https://developer.android.com/distribute/best-practices/develop/64-bit

If you do not have any arm64-v8a or x86_64 libraries, you'll need to update your build process to start building and packaging those artifacts in your APK.

so I suppose adding arm64-v8a is enough and it is not mandatory to add x86_64 as well, however that would be no problem if needed.","Tested the Build result 3951. It work on Android 7.1.2.
Tested Build 3954 The binary work with opentom.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,827,2019-08-14T18:38:27Z,2019-08-16T18:45:08Z,2019-08-28T11:05:53Z,MERGED,True,31,20,7,https://github.com/jandegr,Android build fix and update - to be tested,7,[],https://github.com/navit-gps/navit/pull/827,https://github.com/jandegr,3,https://github.com/navit-gps/navit/pull/827#issuecomment-521380666,"try to fix #802
The apk built on circle now includes tha so's again, but I am a bit short in Android devices for the moment so I invite everybody to help in testing.
further testing to be done for regressions this might introduce in other platforms, I don't expect any but lets make sure.
adds 64 bit native lib for google play store as well
https://android-developers.googleblog.com/2019/01/get-your-apps-ready-for-64-bit.html
https://developer.android.com/distribute/best-practices/develop/64-bit

If you do not have any arm64-v8a or x86_64 libraries, you'll need to update your build process to start building and packaging those artifacts in your APK.

so I suppose adding arm64-v8a is enough and it is not mandatory to add x86_64 as well, however that would be no problem if needed.","thx @gefin
I tested the windows32 build (3952) on windows10_64, and 3951 on android 6, found no regressions
@pgrandin can you test if it now complies with the 64 bit requirements of the google play store, thx.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,827,2019-08-14T18:38:27Z,2019-08-16T18:45:08Z,2019-08-28T11:05:53Z,MERGED,True,31,20,7,https://github.com/jandegr,Android build fix and update - to be tested,7,[],https://github.com/navit-gps/navit/pull/827,https://github.com/pgrandin,4,https://github.com/navit-gps/navit/pull/827#issuecomment-521717067,"try to fix #802
The apk built on circle now includes tha so's again, but I am a bit short in Android devices for the moment so I invite everybody to help in testing.
further testing to be done for regressions this might introduce in other platforms, I don't expect any but lets make sure.
adds 64 bit native lib for google play store as well
https://android-developers.googleblog.com/2019/01/get-your-apps-ready-for-64-bit.html
https://developer.android.com/distribute/best-practices/develop/64-bit

If you do not have any arm64-v8a or x86_64 libraries, you'll need to update your build process to start building and packaging those artifacts in your APK.

so I suppose adding arm64-v8a is enough and it is not mandatory to add x86_64 as well, however that would be no problem if needed.","So it works on the 2 following devices :

SM-J600G, android 8.0.0, SDK 26, ABI armeabi-v7a
SM-J320H, android 5.1.1, SDK 22, ABI armeabi-v7a

It doesn't work on the following device :

Mi A2, android 9, SDK 28, ABI arm64-v8a

I think that this PR address the original intent of #802 (missing lib) and I've created #828 to keep track of this issue.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,827,2019-08-14T18:38:27Z,2019-08-16T18:45:08Z,2019-08-28T11:05:53Z,MERGED,True,31,20,7,https://github.com/jandegr,Android build fix and update - to be tested,7,[],https://github.com/navit-gps/navit/pull/827,https://github.com/jandegr,5,https://github.com/navit-gps/navit/pull/827#issuecomment-521788359,"try to fix #802
The apk built on circle now includes tha so's again, but I am a bit short in Android devices for the moment so I invite everybody to help in testing.
further testing to be done for regressions this might introduce in other platforms, I don't expect any but lets make sure.
adds 64 bit native lib for google play store as well
https://android-developers.googleblog.com/2019/01/get-your-apps-ready-for-64-bit.html
https://developer.android.com/distribute/best-practices/develop/64-bit

If you do not have any arm64-v8a or x86_64 libraries, you'll need to update your build process to start building and packaging those artifacts in your APK.

so I suppose adding arm64-v8a is enough and it is not mandatory to add x86_64 as well, however that would be no problem if needed.","removed arm64-v8a to narrow this pr down to the issue of the missing so,
and just now some build issue pops up :(",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,827,2019-08-14T18:38:27Z,2019-08-16T18:45:08Z,2019-08-28T11:05:53Z,MERGED,True,31,20,7,https://github.com/jandegr,Android build fix and update - to be tested,7,[],https://github.com/navit-gps/navit/pull/827,https://github.com/jkoan,6,https://github.com/navit-gps/navit/pull/827#issuecomment-521939881,"try to fix #802
The apk built on circle now includes tha so's again, but I am a bit short in Android devices for the moment so I invite everybody to help in testing.
further testing to be done for regressions this might introduce in other platforms, I don't expect any but lets make sure.
adds 64 bit native lib for google play store as well
https://android-developers.googleblog.com/2019/01/get-your-apps-ready-for-64-bit.html
https://developer.android.com/distribute/best-practices/develop/64-bit

If you do not have any arm64-v8a or x86_64 libraries, you'll need to update your build process to start building and packaging those artifacts in your APK.

so I suppose adding arm64-v8a is enough and it is not mandatory to add x86_64 as well, however that would be no problem if needed.","Hi @jandegr
first of all thanks for the fix.
The build issue could be because we don't pin the Docker images of our build images, could you just restart the build on circleci? Or even better the whole pipeline. For me it looks like circleci could have got a problem with some jobs because there status is ""expected"" here on github.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,827,2019-08-14T18:38:27Z,2019-08-16T18:45:08Z,2019-08-28T11:05:53Z,MERGED,True,31,20,7,https://github.com/jandegr,Android build fix and update - to be tested,7,[],https://github.com/navit-gps/navit/pull/827,https://github.com/lains,7,https://github.com/navit-gps/navit/pull/827#issuecomment-521989794,"try to fix #802
The apk built on circle now includes tha so's again, but I am a bit short in Android devices for the moment so I invite everybody to help in testing.
further testing to be done for regressions this might introduce in other platforms, I don't expect any but lets make sure.
adds 64 bit native lib for google play store as well
https://android-developers.googleblog.com/2019/01/get-your-apps-ready-for-64-bit.html
https://developer.android.com/distribute/best-practices/develop/64-bit

If you do not have any arm64-v8a or x86_64 libraries, you'll need to update your build process to start building and packaging those artifacts in your APK.

so I suppose adding arm64-v8a is enough and it is not mandatory to add x86_64 as well, however that would be no problem if needed.","I tried to build manually for Android, but I am getting the following compilation error:
  In file included from ../../../../../support/wordexp/wordexp.c:15:
  In file included from /usr/include/glib-2.0/glib.h:30:
  In file included from /usr/include/glib-2.0/glib/galloca.h:32:
  /usr/include/glib-2.0/glib/gtypes.h:423:3: error: '_GStaticAssertCompileTimeAssertion_0' declared as an array with a negative size
    G_STATIC_ASSERT(sizeof (unsigned long long) == sizeof (guint64));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  /usr/include/glib-2.0/glib/gmacros.h:232:103: note: expanded from macro 'G_STATIC_ASSERT'
  #define G_STATIC_ASSERT(expr) typedef char G_PASTE (_GStaticAssertCompileTimeAssertion_, __COUNTER__)[(expr) ? 1 : -1] G_GNUC_UNUSED
                                                                                                        ^~~~~~~~~~~~~~~
  1 error generated.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,827,2019-08-14T18:38:27Z,2019-08-16T18:45:08Z,2019-08-28T11:05:53Z,MERGED,True,31,20,7,https://github.com/jandegr,Android build fix and update - to be tested,7,[],https://github.com/navit-gps/navit/pull/827,https://github.com/lains,8,https://github.com/navit-gps/navit/pull/827#issuecomment-521990690,"try to fix #802
The apk built on circle now includes tha so's again, but I am a bit short in Android devices for the moment so I invite everybody to help in testing.
further testing to be done for regressions this might introduce in other platforms, I don't expect any but lets make sure.
adds 64 bit native lib for google play store as well
https://android-developers.googleblog.com/2019/01/get-your-apps-ready-for-64-bit.html
https://developer.android.com/distribute/best-practices/develop/64-bit

If you do not have any arm64-v8a or x86_64 libraries, you'll need to update your build process to start building and packaging those artifacts in your APK.

so I suppose adding arm64-v8a is enough and it is not mandatory to add x86_64 as well, however that would be no problem if needed.","And this comes from the glib headers used by the build process:
During compilation for ../../../../../support/wordexp/wordexp.c, the compiler is called with
-I/usr/include/glib-2.0, which uses the local installed glib. If I replace with
-I../../../../../support/glib, then the compilation works...",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,827,2019-08-14T18:38:27Z,2019-08-16T18:45:08Z,2019-08-28T11:05:53Z,MERGED,True,31,20,7,https://github.com/jandegr,Android build fix and update - to be tested,7,[],https://github.com/navit-gps/navit/pull/827,https://github.com/lains,9,https://github.com/navit-gps/navit/pull/827#issuecomment-521991552,"try to fix #802
The apk built on circle now includes tha so's again, but I am a bit short in Android devices for the moment so I invite everybody to help in testing.
further testing to be done for regressions this might introduce in other platforms, I don't expect any but lets make sure.
adds 64 bit native lib for google play store as well
https://android-developers.googleblog.com/2019/01/get-your-apps-ready-for-64-bit.html
https://developer.android.com/distribute/best-practices/develop/64-bit

If you do not have any arm64-v8a or x86_64 libraries, you'll need to update your build process to start building and packaging those artifacts in your APK.

so I suppose adding arm64-v8a is enough and it is not mandatory to add x86_64 as well, however that would be no problem if needed.","But probably, this is not coming from this PR, but rather from something else that was broken at commit 4e5b35a (there was quite some rework on the glib package detection there...)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,827,2019-08-14T18:38:27Z,2019-08-16T18:45:08Z,2019-08-28T11:05:53Z,MERGED,True,31,20,7,https://github.com/jandegr,Android build fix and update - to be tested,7,[],https://github.com/navit-gps/navit/pull/827,https://github.com/jandegr,10,https://github.com/navit-gps/navit/pull/827#issuecomment-522003013,"try to fix #802
The apk built on circle now includes tha so's again, but I am a bit short in Android devices for the moment so I invite everybody to help in testing.
further testing to be done for regressions this might introduce in other platforms, I don't expect any but lets make sure.
adds 64 bit native lib for google play store as well
https://android-developers.googleblog.com/2019/01/get-your-apps-ready-for-64-bit.html
https://developer.android.com/distribute/best-practices/develop/64-bit

If you do not have any arm64-v8a or x86_64 libraries, you'll need to update your build process to start building and packaging those artifacts in your APK.

so I suppose adding arm64-v8a is enough and it is not mandatory to add x86_64 as well, however that would be no problem if needed.","since there was some work required to fix the building on circleci, I added arm64-v8a again and applied some other fixes and updated just about everything I could, incl. ndk, in an attempt to get it running on  android 9, SDK 28, ABI arm64-v8a too.
building android does not wait anymore until that sanity thing ends, holding each build until that finishes just wastes too much time.
Navit can have that codefactor thing to play with, but from what i've seen nobody cares for it and it just causes frustration. The issues it reports are generally valid, but like in the case of this pr, a small change in one line suddenly reports over 40 issues it should have seen before.",True,{'THUMBS_UP': ['https://github.com/jkoan']}
navit-gps/navit,https://github.com/navit-gps/navit,827,2019-08-14T18:38:27Z,2019-08-16T18:45:08Z,2019-08-28T11:05:53Z,MERGED,True,31,20,7,https://github.com/jandegr,Android build fix and update - to be tested,7,[],https://github.com/navit-gps/navit/pull/827,https://github.com/pgrandin,11,https://github.com/navit-gps/navit/pull/827#issuecomment-522112316,"try to fix #802
The apk built on circle now includes tha so's again, but I am a bit short in Android devices for the moment so I invite everybody to help in testing.
further testing to be done for regressions this might introduce in other platforms, I don't expect any but lets make sure.
adds 64 bit native lib for google play store as well
https://android-developers.googleblog.com/2019/01/get-your-apps-ready-for-64-bit.html
https://developer.android.com/distribute/best-practices/develop/64-bit

If you do not have any arm64-v8a or x86_64 libraries, you'll need to update your build process to start building and packaging those artifacts in your APK.

so I suppose adding arm64-v8a is enough and it is not mandatory to add x86_64 as well, however that would be no problem if needed.","Codefactor isn't really a merge blocker if it complains about code that wasn't touched by the PR.
It's more a way to ensure we don't introduce new issues, and try to fix what it finds whenever possible. I've created #832 to track the issues it reported in this PR.
Thanks a lot for your help here @jandegr
The arm64 specific issue is tracked in #828",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,827,2019-08-14T18:38:27Z,2019-08-16T18:45:08Z,2019-08-28T11:05:53Z,MERGED,True,31,20,7,https://github.com/jandegr,Android build fix and update - to be tested,7,[],https://github.com/navit-gps/navit/pull/827,https://github.com/lains,12,https://github.com/navit-gps/navit/pull/827#issuecomment-522220754,"try to fix #802
The apk built on circle now includes tha so's again, but I am a bit short in Android devices for the moment so I invite everybody to help in testing.
further testing to be done for regressions this might introduce in other platforms, I don't expect any but lets make sure.
adds 64 bit native lib for google play store as well
https://android-developers.googleblog.com/2019/01/get-your-apps-ready-for-64-bit.html
https://developer.android.com/distribute/best-practices/develop/64-bit

If you do not have any arm64-v8a or x86_64 libraries, you'll need to update your build process to start building and packaging those artifacts in your APK.

so I suppose adding arm64-v8a is enough and it is not mandatory to add x86_64 as well, however that would be no problem if needed.","Great work, thanks!
I successfully tested on an Android device running LineageOS
LineageOS version: 15.1
Android version: 8.1.0
I had to tweak the build process because of glib dependencies that were mistakenly pointing to the build host rather than the Android toolchain.
I have submitted the changes in a separate PR (#833) if someone is interested (it does not seem to occur on CircleCI builds, only when manually building on a host where glib, gmodule and/or dbusglib headers are present).",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,827,2019-08-14T18:38:27Z,2019-08-16T18:45:08Z,2019-08-28T11:05:53Z,MERGED,True,31,20,7,https://github.com/jandegr,Android build fix and update - to be tested,7,[],https://github.com/navit-gps/navit/pull/827,https://github.com/lains,13,https://github.com/navit-gps/navit/pull/827#issuecomment-523496441,"try to fix #802
The apk built on circle now includes tha so's again, but I am a bit short in Android devices for the moment so I invite everybody to help in testing.
further testing to be done for regressions this might introduce in other platforms, I don't expect any but lets make sure.
adds 64 bit native lib for google play store as well
https://android-developers.googleblog.com/2019/01/get-your-apps-ready-for-64-bit.html
https://developer.android.com/distribute/best-practices/develop/64-bit

If you do not have any arm64-v8a or x86_64 libraries, you'll need to update your build process to start building and packaging those artifacts in your APK.

so I suppose adding arm64-v8a is enough and it is not mandatory to add x86_64 as well, however that would be no problem if needed.","Tested today on WinCE. Build completed successfully. I had an issue with the resulting archive, but it had nothing to do with this PR (was coming from the configuration lines inside the navit.xml file).",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,827,2019-08-14T18:38:27Z,2019-08-16T18:45:08Z,2019-08-28T11:05:53Z,MERGED,True,31,20,7,https://github.com/jandegr,Android build fix and update - to be tested,7,[],https://github.com/navit-gps/navit/pull/827,https://github.com/mvglasow,14,https://github.com/navit-gps/navit/pull/827#issuecomment-524047118,"try to fix #802
The apk built on circle now includes tha so's again, but I am a bit short in Android devices for the moment so I invite everybody to help in testing.
further testing to be done for regressions this might introduce in other platforms, I don't expect any but lets make sure.
adds 64 bit native lib for google play store as well
https://android-developers.googleblog.com/2019/01/get-your-apps-ready-for-64-bit.html
https://developer.android.com/distribute/best-practices/develop/64-bit

If you do not have any arm64-v8a or x86_64 libraries, you'll need to update your build process to start building and packaging those artifacts in your APK.

so I suppose adding arm64-v8a is enough and it is not mandatory to add x86_64 as well, however that would be no problem if needed.","@lains I am having issues with the Android build as well (the same ones), see #840. Would you mind sharing how you tweaked the build? Something there is not quite right yet…",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,827,2019-08-14T18:38:27Z,2019-08-16T18:45:08Z,2019-08-28T11:05:53Z,MERGED,True,31,20,7,https://github.com/jandegr,Android build fix and update - to be tested,7,[],https://github.com/navit-gps/navit/pull/827,https://github.com/mvglasow,15,https://github.com/navit-gps/navit/pull/827#issuecomment-524560147,"try to fix #802
The apk built on circle now includes tha so's again, but I am a bit short in Android devices for the moment so I invite everybody to help in testing.
further testing to be done for regressions this might introduce in other platforms, I don't expect any but lets make sure.
adds 64 bit native lib for google play store as well
https://android-developers.googleblog.com/2019/01/get-your-apps-ready-for-64-bit.html
https://developer.android.com/distribute/best-practices/develop/64-bit

If you do not have any arm64-v8a or x86_64 libraries, you'll need to update your build process to start building and packaging those artifacts in your APK.

so I suppose adding arm64-v8a is enough and it is not mandatory to add x86_64 as well, however that would be no problem if needed.","Found it, the build works after deleting all the .gitignored stuff in navit/android.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,827,2019-08-14T18:38:27Z,2019-08-16T18:45:08Z,2019-08-28T11:05:53Z,MERGED,True,31,20,7,https://github.com/jandegr,Android build fix and update - to be tested,7,[],https://github.com/navit-gps/navit/pull/827,https://github.com/lains,16,https://github.com/navit-gps/navit/pull/827#issuecomment-524609268,"try to fix #802
The apk built on circle now includes tha so's again, but I am a bit short in Android devices for the moment so I invite everybody to help in testing.
further testing to be done for regressions this might introduce in other platforms, I don't expect any but lets make sure.
adds 64 bit native lib for google play store as well
https://android-developers.googleblog.com/2019/01/get-your-apps-ready-for-64-bit.html
https://developer.android.com/distribute/best-practices/develop/64-bit

If you do not have any arm64-v8a or x86_64 libraries, you'll need to update your build process to start building and packaging those artifacts in your APK.

so I suppose adding arm64-v8a is enough and it is not mandatory to add x86_64 as well, however that would be no problem if needed.","Indeed, I got the same problem and I described the process I followed here.
Hopefully, this will not occur anymore to future users now that #833 has been merged.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,830,2019-08-16T10:42:40Z,2019-08-16T11:04:49Z,2019-08-16T11:04:49Z,CLOSED,False,1981,1097,68,https://github.com/viktorgino,Merge core changes from qml-gui-wip,35,[],https://github.com/navit-gps/navit/pull/830,https://github.com/viktorgino,1,https://github.com/navit-gps/navit/pull/830,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,830,2019-08-16T10:42:40Z,2019-08-16T11:04:49Z,2019-08-16T11:04:49Z,CLOSED,False,1981,1097,68,https://github.com/viktorgino,Merge core changes from qml-gui-wip,35,[],https://github.com/navit-gps/navit/pull/830,https://github.com/viktorgino,2,https://github.com/navit-gps/navit/pull/830#issuecomment-521972859,,Closed as source is wrong,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,831,2019-08-16T11:05:36Z,,2021-06-22T07:28:28Z,OPEN,False,43,2,3,https://github.com/viktorgino,Merge core changes from qml-gui-wip,10,[],https://github.com/navit-gps/navit/pull/831,https://github.com/viktorgino,1,https://github.com/navit-gps/navit/pull/831,"There are some core changes in qml-gui-wip that add some new features to core, use this PR to review those changes.","There are some core changes in qml-gui-wip that add some new features to core, use this PR to review those changes.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,831,2019-08-16T11:05:36Z,,2021-06-22T07:28:28Z,OPEN,False,43,2,3,https://github.com/viktorgino,Merge core changes from qml-gui-wip,10,[],https://github.com/navit-gps/navit/pull/831,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/831#issuecomment-522096413,"There are some core changes in qml-gui-wip that add some new features to core, use this PR to review those changes.",I think that the build_android failure is related to https://github.com/navit-gps/navit/pull/827/files#diff-f940ede166f88341829e50c9c345047b,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,831,2019-08-16T11:05:36Z,,2021-06-22T07:28:28Z,OPEN,False,43,2,3,https://github.com/viktorgino,Merge core changes from qml-gui-wip,10,[],https://github.com/navit-gps/navit/pull/831,https://github.com/viktorgino,3,https://github.com/navit-gps/navit/pull/831#issuecomment-522513050,"There are some core changes in qml-gui-wip that add some new features to core, use this PR to review those changes.",@pgrandin should be related to this: #834,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,833,2019-08-17T09:33:06Z,2019-08-20T15:06:28Z,2019-08-20T17:53:49Z,MERGED,True,36,25,2,https://github.com/lains,"Fix: Fix pkgconfig detection, and multiple subsequent build for Android",3,"['build system', 'android']",https://github.com/navit-gps/navit/pull/833,https://github.com/lains,1,https://github.com/navit-gps/navit/pull/833,"This PR brings 2 changes for the build for Android platforms:


It fixes rename of the filenames (have to be lowercase on Android) so builds work even if it is run multiple times (today, only the first build works, further builds fail because rename itself fails, as renamed lowercase files still exist in the previous build working directories)


It changes the way the build process uses pkgconfig.
Indeed glib and ezxml dependencies are checked by default against the build host, not against the toolchain Android libs.
It seems that this started from 4e5b35a.
This issue does not seem to occur on CircleCI builds, but seem to occur when manually building on a host where glib, gmodule, dbusglib  and/or ezxml headers are present.
Symptom of the wrong libs picked up is an error during compilation:


  In file included from ../../../../../support/wordexp/wordexp.c:15:
  In file included from /usr/include/glib-2.0/glib.h:30:
  In file included from /usr/include/glib-2.0/glib/galloca.h:32:
  /usr/include/glib-2.0/glib/gtypes.h:423:3: error: '_GStaticAssertCompileTimeAssertion_0' declared as an array with a negative size
    G_STATIC_ASSERT(sizeof (unsigned long long) == sizeof (guint64));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  /usr/include/glib-2.0/glib/gmacros.h:232:103: note: expanded from macro 'G_STATIC_ASSERT'
  #define G_STATIC_ASSERT(expr) typedef char G_PASTE (_GStaticAssertCompileTimeAssertion_, __COUNTER__)[(expr) ? 1 : -1] G_GNUC_UNUSED
                                                                                                        ^~~~~~~~~~~~~~~
  1 error generated.

The source can then be spotted inside the -I options of the compiler's command line.
During compilation for ../../../../../support/wordexp/wordexp.c, the compiler is called with
-I/usr/include/glib-2.0, which uses the locally installed glib. The issue is fixed if this argument is replaced by: -I../../../../../support/glib","This PR brings 2 changes for the build for Android platforms:


It fixes rename of the filenames (have to be lowercase on Android) so builds work even if it is run multiple times (today, only the first build works, further builds fail because rename itself fails, as renamed lowercase files still exist in the previous build working directories)


It changes the way the build process uses pkgconfig.
Indeed glib and ezxml dependencies are checked by default against the build host, not against the toolchain Android libs.
It seems that this started from 4e5b35a.
This issue does not seem to occur on CircleCI builds, but seem to occur when manually building on a host where glib, gmodule, dbusglib  and/or ezxml headers are present.
Symptom of the wrong libs picked up is an error during compilation:


  In file included from ../../../../../support/wordexp/wordexp.c:15:
  In file included from /usr/include/glib-2.0/glib.h:30:
  In file included from /usr/include/glib-2.0/glib/galloca.h:32:
  /usr/include/glib-2.0/glib/gtypes.h:423:3: error: '_GStaticAssertCompileTimeAssertion_0' declared as an array with a negative size
    G_STATIC_ASSERT(sizeof (unsigned long long) == sizeof (guint64));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  /usr/include/glib-2.0/glib/gmacros.h:232:103: note: expanded from macro 'G_STATIC_ASSERT'
  #define G_STATIC_ASSERT(expr) typedef char G_PASTE (_GStaticAssertCompileTimeAssertion_, __COUNTER__)[(expr) ? 1 : -1] G_GNUC_UNUSED
                                                                                                        ^~~~~~~~~~~~~~~
  1 error generated.

The source can then be spotted inside the -I options of the compiler's command line.
During compilation for ../../../../../support/wordexp/wordexp.c, the compiler is called with
-I/usr/include/glib-2.0, which uses the locally installed glib. The issue is fixed if this argument is replaced by: -I../../../../../support/glib",True,{'THUMBS_UP': ['https://github.com/mvglasow']}
navit-gps/navit,https://github.com/navit-gps/navit,833,2019-08-17T09:33:06Z,2019-08-20T15:06:28Z,2019-08-20T17:53:49Z,MERGED,True,36,25,2,https://github.com/lains,"Fix: Fix pkgconfig detection, and multiple subsequent build for Android",3,"['build system', 'android']",https://github.com/navit-gps/navit/pull/833,https://github.com/jandegr,2,https://github.com/navit-gps/navit/pull/833#issuecomment-522246740,"This PR brings 2 changes for the build for Android platforms:


It fixes rename of the filenames (have to be lowercase on Android) so builds work even if it is run multiple times (today, only the first build works, further builds fail because rename itself fails, as renamed lowercase files still exist in the previous build working directories)


It changes the way the build process uses pkgconfig.
Indeed glib and ezxml dependencies are checked by default against the build host, not against the toolchain Android libs.
It seems that this started from 4e5b35a.
This issue does not seem to occur on CircleCI builds, but seem to occur when manually building on a host where glib, gmodule, dbusglib  and/or ezxml headers are present.
Symptom of the wrong libs picked up is an error during compilation:


  In file included from ../../../../../support/wordexp/wordexp.c:15:
  In file included from /usr/include/glib-2.0/glib.h:30:
  In file included from /usr/include/glib-2.0/glib/galloca.h:32:
  /usr/include/glib-2.0/glib/gtypes.h:423:3: error: '_GStaticAssertCompileTimeAssertion_0' declared as an array with a negative size
    G_STATIC_ASSERT(sizeof (unsigned long long) == sizeof (guint64));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  /usr/include/glib-2.0/glib/gmacros.h:232:103: note: expanded from macro 'G_STATIC_ASSERT'
  #define G_STATIC_ASSERT(expr) typedef char G_PASTE (_GStaticAssertCompileTimeAssertion_, __COUNTER__)[(expr) ? 1 : -1] G_GNUC_UNUSED
                                                                                                        ^~~~~~~~~~~~~~~
  1 error generated.

The source can then be spotted inside the -I options of the compiler's command line.
During compilation for ../../../../../support/wordexp/wordexp.c, the compiler is called with
-I/usr/include/glib-2.0, which uses the locally installed glib. The issue is fixed if this argument is replaced by: -I../../../../../support/glib","Hi,
I tried to confuse cmake on cirlceci by installing libdbus-glib-1-dev libgtk2.0-dev
and indeed, it goes wrong on circleci too, so it is not just some local issue in your setup

debug|armeabi-v7a :--->>> speech
debug|armeabi-v7a :Enabled   android ( Android detected )
debug|armeabi-v7a :Disabled  cmdline ( Android detected )
debug|armeabi-v7a :Enabled   dbus ( dbus-glib-1 found )
debug|armeabi-v7a :Disabled  espeak ( Default )
debug|armeabi-v7a :Disabled  iphone ( Default )
debug|armeabi-v7a :Disabled  qt5_espeak ( Qt5 multimedia not found )
debug|armeabi-v7a :Disabled  speech_dispatcher ( speech_dispatcher lib not found )
debug|armeabi-v7a :--->>> support
debug|armeabi-v7a :Disabled  espeak ( Default )
debug|armeabi-v7a :Disabled  ezxml ( native Glib found )
debug|armeabi-v7a :Enabled   gettext_intl ( native libintl missing )
debug|armeabi-v7a :Disabled  glib ( native Glib found )
debug|armeabi-v7a :Disabled  libpng ( Android detected )
debug|armeabi-v7a :Enabled   shapefile ( Default )
debug|armeabi-v7a :Enabled   wordexp ( native wordexp missing )
debug|armeabi-v7a :Disabled  zlib ( native zlib found )
debug|armeabi-v7a :--->>> traffic
debug|armeabi-v7a :Enabled   dummy ( Default )
debug|armeabi-v7a :Enabled   null ( Default )
debug|armeabi-v7a :Enabled   traff_android ( Android detected )
debug|armeabi-v7a :--->>> vehicle
debug|armeabi-v7a :Enabled   android ( Android detected )
debug|armeabi-v7a :Enabled   demo ( Default )
debug|armeabi-v7a :Disabled  file ( Android detected )

However, the solution you propose might work (did not test that), but it removes some flexibility by hardcoding some choices.
context of the remark : for quite a while I build for windows in 2 flavors, classic with glib from support or I build a dll for glib first and then cmake detects it and skips the stuff from support. Just now I wanted to start to port that dual system over to android, but with your solution cmake won't ever detect a prebuilt glib for android and keep building the stuff from support, at least it is what I think will happen.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,833,2019-08-17T09:33:06Z,2019-08-20T15:06:28Z,2019-08-20T17:53:49Z,MERGED,True,36,25,2,https://github.com/lains,"Fix: Fix pkgconfig detection, and multiple subsequent build for Android",3,"['build system', 'android']",https://github.com/navit-gps/navit/pull/833,https://github.com/jandegr,3,https://github.com/navit-gps/navit/pull/833#issuecomment-522262833,"This PR brings 2 changes for the build for Android platforms:


It fixes rename of the filenames (have to be lowercase on Android) so builds work even if it is run multiple times (today, only the first build works, further builds fail because rename itself fails, as renamed lowercase files still exist in the previous build working directories)


It changes the way the build process uses pkgconfig.
Indeed glib and ezxml dependencies are checked by default against the build host, not against the toolchain Android libs.
It seems that this started from 4e5b35a.
This issue does not seem to occur on CircleCI builds, but seem to occur when manually building on a host where glib, gmodule, dbusglib  and/or ezxml headers are present.
Symptom of the wrong libs picked up is an error during compilation:


  In file included from ../../../../../support/wordexp/wordexp.c:15:
  In file included from /usr/include/glib-2.0/glib.h:30:
  In file included from /usr/include/glib-2.0/glib/galloca.h:32:
  /usr/include/glib-2.0/glib/gtypes.h:423:3: error: '_GStaticAssertCompileTimeAssertion_0' declared as an array with a negative size
    G_STATIC_ASSERT(sizeof (unsigned long long) == sizeof (guint64));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  /usr/include/glib-2.0/glib/gmacros.h:232:103: note: expanded from macro 'G_STATIC_ASSERT'
  #define G_STATIC_ASSERT(expr) typedef char G_PASTE (_GStaticAssertCompileTimeAssertion_, __COUNTER__)[(expr) ? 1 : -1] G_GNUC_UNUSED
                                                                                                        ^~~~~~~~~~~~~~~
  1 error generated.

The source can then be spotted inside the -I options of the compiler's command line.
During compilation for ../../../../../support/wordexp/wordexp.c, the compiler is called with
-I/usr/include/glib-2.0, which uses the locally installed glib. The issue is fixed if this argument is replaced by: -I../../../../../support/glib","Hi,
adding
export PKG_CONFIG_LIBDIR=""/opt"" # here to prevent finding regular linux libs
to the buildscript fixes the confusion I introduced in circleci
maybe we could add
export PKG_CONFIG_PATH="""" # here to prevent finding regular linux libs
to be on the safe side
If you build smth. for linux again on your box you will have to reinitialize those paths
I don't know enough about cmake to find the actual cause, maybe somone else can.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,833,2019-08-17T09:33:06Z,2019-08-20T15:06:28Z,2019-08-20T17:53:49Z,MERGED,True,36,25,2,https://github.com/lains,"Fix: Fix pkgconfig detection, and multiple subsequent build for Android",3,"['build system', 'android']",https://github.com/navit-gps/navit/pull/833,https://github.com/lains,4,https://github.com/navit-gps/navit/pull/833#issuecomment-522291145,"This PR brings 2 changes for the build for Android platforms:


It fixes rename of the filenames (have to be lowercase on Android) so builds work even if it is run multiple times (today, only the first build works, further builds fail because rename itself fails, as renamed lowercase files still exist in the previous build working directories)


It changes the way the build process uses pkgconfig.
Indeed glib and ezxml dependencies are checked by default against the build host, not against the toolchain Android libs.
It seems that this started from 4e5b35a.
This issue does not seem to occur on CircleCI builds, but seem to occur when manually building on a host where glib, gmodule, dbusglib  and/or ezxml headers are present.
Symptom of the wrong libs picked up is an error during compilation:


  In file included from ../../../../../support/wordexp/wordexp.c:15:
  In file included from /usr/include/glib-2.0/glib.h:30:
  In file included from /usr/include/glib-2.0/glib/galloca.h:32:
  /usr/include/glib-2.0/glib/gtypes.h:423:3: error: '_GStaticAssertCompileTimeAssertion_0' declared as an array with a negative size
    G_STATIC_ASSERT(sizeof (unsigned long long) == sizeof (guint64));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  /usr/include/glib-2.0/glib/gmacros.h:232:103: note: expanded from macro 'G_STATIC_ASSERT'
  #define G_STATIC_ASSERT(expr) typedef char G_PASTE (_GStaticAssertCompileTimeAssertion_, __COUNTER__)[(expr) ? 1 : -1] G_GNUC_UNUSED
                                                                                                        ^~~~~~~~~~~~~~~
  1 error generated.

The source can then be spotted inside the -I options of the compiler's command line.
During compilation for ../../../../../support/wordexp/wordexp.c, the compiler is called with
-I/usr/include/glib-2.0, which uses the locally installed glib. The issue is fixed if this argument is replaced by: -I../../../../../support/glib","Hi @jandegr, I tried your proposal and it does the trick for me:
Adding export PKG_CONFIG_LIBDIR="""" in scripts/build_android.sh just before the line that runs cmake.
Removing file CMakeCache.txt
Cleaning up the folder navit/android (to pristine state)
And running scripts/build_android.sh once more.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,833,2019-08-17T09:33:06Z,2019-08-20T15:06:28Z,2019-08-20T17:53:49Z,MERGED,True,36,25,2,https://github.com/lains,"Fix: Fix pkgconfig detection, and multiple subsequent build for Android",3,"['build system', 'android']",https://github.com/navit-gps/navit/pull/833,https://github.com/lains,5,https://github.com/navit-gps/navit/pull/833#issuecomment-522874153,"This PR brings 2 changes for the build for Android platforms:


It fixes rename of the filenames (have to be lowercase on Android) so builds work even if it is run multiple times (today, only the first build works, further builds fail because rename itself fails, as renamed lowercase files still exist in the previous build working directories)


It changes the way the build process uses pkgconfig.
Indeed glib and ezxml dependencies are checked by default against the build host, not against the toolchain Android libs.
It seems that this started from 4e5b35a.
This issue does not seem to occur on CircleCI builds, but seem to occur when manually building on a host where glib, gmodule, dbusglib  and/or ezxml headers are present.
Symptom of the wrong libs picked up is an error during compilation:


  In file included from ../../../../../support/wordexp/wordexp.c:15:
  In file included from /usr/include/glib-2.0/glib.h:30:
  In file included from /usr/include/glib-2.0/glib/galloca.h:32:
  /usr/include/glib-2.0/glib/gtypes.h:423:3: error: '_GStaticAssertCompileTimeAssertion_0' declared as an array with a negative size
    G_STATIC_ASSERT(sizeof (unsigned long long) == sizeof (guint64));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  /usr/include/glib-2.0/glib/gmacros.h:232:103: note: expanded from macro 'G_STATIC_ASSERT'
  #define G_STATIC_ASSERT(expr) typedef char G_PASTE (_GStaticAssertCompileTimeAssertion_, __COUNTER__)[(expr) ? 1 : -1] G_GNUC_UNUSED
                                                                                                        ^~~~~~~~~~~~~~~
  1 error generated.

The source can then be spotted inside the -I options of the compiler's command line.
During compilation for ../../../../../support/wordexp/wordexp.c, the compiler is called with
-I/usr/include/glib-2.0, which uses the locally installed glib. The issue is fixed if this argument is replaced by: -I../../../../../support/glib","@jandegr, I have implemented your proposal, as it works wellfor my setup and it would be a good thing that this is done automatically during build.
In case someone still wants to detect specific libs for the target, providing a non-empty value for PKG_CONFIG_LIBDIR should work.
Also, this is outside of cmake so it only affects building for Android using scripts/build_android.sh
I also included a fix for subsequent builds for Android.
The first build succeeds, but subsequent builds fail (except if a cleanup is done manually on files renamed for Android).
I fixed the call to rename so that the cleanup is done automatically before each build.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,833,2019-08-17T09:33:06Z,2019-08-20T15:06:28Z,2019-08-20T17:53:49Z,MERGED,True,36,25,2,https://github.com/lains,"Fix: Fix pkgconfig detection, and multiple subsequent build for Android",3,"['build system', 'android']",https://github.com/navit-gps/navit/pull/833,https://github.com/lains,6,https://github.com/navit-gps/navit/pull/833#issuecomment-523101940,"This PR brings 2 changes for the build for Android platforms:


It fixes rename of the filenames (have to be lowercase on Android) so builds work even if it is run multiple times (today, only the first build works, further builds fail because rename itself fails, as renamed lowercase files still exist in the previous build working directories)


It changes the way the build process uses pkgconfig.
Indeed glib and ezxml dependencies are checked by default against the build host, not against the toolchain Android libs.
It seems that this started from 4e5b35a.
This issue does not seem to occur on CircleCI builds, but seem to occur when manually building on a host where glib, gmodule, dbusglib  and/or ezxml headers are present.
Symptom of the wrong libs picked up is an error during compilation:


  In file included from ../../../../../support/wordexp/wordexp.c:15:
  In file included from /usr/include/glib-2.0/glib.h:30:
  In file included from /usr/include/glib-2.0/glib/galloca.h:32:
  /usr/include/glib-2.0/glib/gtypes.h:423:3: error: '_GStaticAssertCompileTimeAssertion_0' declared as an array with a negative size
    G_STATIC_ASSERT(sizeof (unsigned long long) == sizeof (guint64));
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  /usr/include/glib-2.0/glib/gmacros.h:232:103: note: expanded from macro 'G_STATIC_ASSERT'
  #define G_STATIC_ASSERT(expr) typedef char G_PASTE (_GStaticAssertCompileTimeAssertion_, __COUNTER__)[(expr) ? 1 : -1] G_GNUC_UNUSED
                                                                                                        ^~~~~~~~~~~~~~~
  1 error generated.

The source can then be spotted inside the -I options of the compiler's command line.
During compilation for ../../../../../support/wordexp/wordexp.c, the compiler is called with
-I/usr/include/glib-2.0, which uses the locally installed glib. The issue is fixed if this argument is replaced by: -I../../../../../support/glib","Oops, there was still code on CMakeLists.txt changes in this PR (these diffs were not needed anymore, the implementation has been done another way in the build_android.sh script).
Because this PR has been merged already, I am going to revert on trunk the extra changes that were not supposed to be merge.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,835,2019-08-20T17:38:09Z,2019-08-20T18:05:59Z,2019-08-20T18:06:05Z,MERGED,True,23,29,1,https://github.com/lains,Reverting part of e7a70e9dc04b94b47fb7786aab4edfd25132c70f,1,[],https://github.com/navit-gps/navit/pull/835,https://github.com/lains,1,https://github.com/navit-gps/navit/pull/835,Reverting part of e7a70e9 (PR #833) that was not needed.,Reverting part of e7a70e9 (PR #833) that was not needed.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,837,2019-08-21T19:07:16Z,2019-08-21T19:25:56Z,2019-08-21T19:27:12Z,MERGED,True,2,1,1,https://github.com/gefin,Issue/826,2,[],https://github.com/navit-gps/navit/pull/837,https://github.com/gefin,1,https://github.com/navit-gps/navit/pull/837,"In bad case the function iso8601_to_secs(time_attr.u.str); is called with a NULL pointer.
The function dont check this...
The bad call of iso8601_to_secs is in navit/track.c line 683.
vehicle_get_attr(tr->vehicle, attr_position_time_iso8601, &time_attr, NULL));
was removed at
03f3aa8#diff-3cbc3b1f62b4a7f91ff8ea7691e63e64","In bad case the function iso8601_to_secs(time_attr.u.str); is called with a NULL pointer.
The function dont check this...
The bad call of iso8601_to_secs is in navit/track.c line 683.
vehicle_get_attr(tr->vehicle, attr_position_time_iso8601, &time_attr, NULL));
was removed at
03f3aa8#diff-3cbc3b1f62b4a7f91ff8ea7691e63e64",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,837,2019-08-21T19:07:16Z,2019-08-21T19:25:56Z,2019-08-21T19:27:12Z,MERGED,True,2,1,1,https://github.com/gefin,Issue/826,2,[],https://github.com/navit-gps/navit/pull/837,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/837#issuecomment-523613427,"In bad case the function iso8601_to_secs(time_attr.u.str); is called with a NULL pointer.
The function dont check this...
The bad call of iso8601_to_secs is in navit/track.c line 683.
vehicle_get_attr(tr->vehicle, attr_position_time_iso8601, &time_attr, NULL));
was removed at
03f3aa8#diff-3cbc3b1f62b4a7f91ff8ea7691e63e64",Nice! Adding issue link for easy reference : #826,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,838,2019-08-21T20:28:00Z,2019-08-21T21:35:20Z,2019-08-21T21:35:20Z,MERGED,True,1,1,1,https://github.com/mvglasow,Fix:graphics/android:Fix crash on startup,2,[],https://github.com/navit-gps/navit/pull/838,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/838,Fixes #836,Fixes #836,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,839,2019-08-21T21:43:01Z,2019-08-22T16:26:10Z,2019-08-25T07:51:48Z,MERGED,True,4,4,2,https://github.com/mvglasow, Fix:toolchain:Remove privileged operation from build script,4,[],https://github.com/navit-gps/navit/pull/839,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/839,"As mentioned in #827, this PR moves privileged operations (sudo apt-get install) out of the build script, replacing it with a check if the required component is installed (if it is not, the script will abort with an error).
For local builds, you need to install ant yourself. If you haven’t done so before starting the build, the script will abort with a meaningful error message.
For CircleCI, ant has been added to the list of packages to install.
On F-Droid this will be a separate merge request (Link will follow).","As mentioned in #827, this PR moves privileged operations (sudo apt-get install) out of the build script, replacing it with a check if the required component is installed (if it is not, the script will abort with an error).
For local builds, you need to install ant yourself. If you haven’t done so before starting the build, the script will abort with a meaningful error message.
For CircleCI, ant has been added to the list of packages to install.
On F-Droid this will be a separate merge request (Link will follow).",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,839,2019-08-21T21:43:01Z,2019-08-22T16:26:10Z,2019-08-25T07:51:48Z,MERGED,True,4,4,2,https://github.com/mvglasow, Fix:toolchain:Remove privileged operation from build script,4,[],https://github.com/navit-gps/navit/pull/839,https://github.com/mvglasow,2,https://github.com/navit-gps/navit/pull/839#issuecomment-523661445,"As mentioned in #827, this PR moves privileged operations (sudo apt-get install) out of the build script, replacing it with a check if the required component is installed (if it is not, the script will abort with an error).
For local builds, you need to install ant yourself. If you haven’t done so before starting the build, the script will abort with a meaningful error message.
For CircleCI, ant has been added to the list of packages to install.
On F-Droid this will be a separate merge request (Link will follow).","@jandegr could you take a look at this as well, just to make sure I am not inadvertently breaking anything?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,839,2019-08-21T21:43:01Z,2019-08-22T16:26:10Z,2019-08-25T07:51:48Z,MERGED,True,4,4,2,https://github.com/mvglasow, Fix:toolchain:Remove privileged operation from build script,4,[],https://github.com/navit-gps/navit/pull/839,https://github.com/mvglasow,3,https://github.com/navit-gps/navit/pull/839#issuecomment-523662474,"As mentioned in #827, this PR moves privileged operations (sudo apt-get install) out of the build script, replacing it with a check if the required component is installed (if it is not, the script will abort with an error).
For local builds, you need to install ant yourself. If you haven’t done so before starting the build, the script will abort with a meaningful error message.
For CircleCI, ant has been added to the list of packages to install.
On F-Droid this will be a separate merge request (Link will follow).",And the related F-Droid merge request is at https://gitlab.com/fdroid/fdroiddata/merge_requests/5289,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,839,2019-08-21T21:43:01Z,2019-08-22T16:26:10Z,2019-08-25T07:51:48Z,MERGED,True,4,4,2,https://github.com/mvglasow, Fix:toolchain:Remove privileged operation from build script,4,[],https://github.com/navit-gps/navit/pull/839,https://github.com/pgrandin,4,https://github.com/navit-gps/navit/pull/839#issuecomment-523681381,"As mentioned in #827, this PR moves privileged operations (sudo apt-get install) out of the build script, replacing it with a check if the required component is installed (if it is not, the script will abort with an error).
For local builds, you need to install ant yourself. If you haven’t done so before starting the build, the script will abort with a meaningful error message.
For CircleCI, ant has been added to the list of packages to install.
On F-Droid this will be a separate merge request (Link will follow).",I think that it makes sense 👍,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,841,2019-08-22T18:37:12Z,2019-08-23T15:00:21Z,2019-08-23T15:00:31Z,MERGED,True,59,4,4,https://github.com/aerostitch,Add:doc:Migrate the commit guidelines document to readthedocs,1,[],https://github.com/navit-gps/navit/pull/841,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/841,Migrates https://wiki.navit-project.org/index.php/Commit_guidelines to readthedocs,Migrates https://wiki.navit-project.org/index.php/Commit_guidelines to readthedocs,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,841,2019-08-22T18:37:12Z,2019-08-23T15:00:21Z,2019-08-23T15:00:31Z,MERGED,True,59,4,4,https://github.com/aerostitch,Add:doc:Migrate the commit guidelines document to readthedocs,1,[],https://github.com/navit-gps/navit/pull/841,https://github.com/aerostitch,2,https://github.com/navit-gps/navit/pull/841#issuecomment-524348587,Migrates https://wiki.navit-project.org/index.php/Commit_guidelines to readthedocs,thx!,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,842,2019-08-26T19:22:00Z,2019-08-26T21:31:59Z,2019-08-26T21:31:59Z,CLOSED,False,1,1,1,https://github.com/hoehnp,update building of sailfish OS to version 3.1.0.12,1,[],https://github.com/navit-gps/navit/pull/842,https://github.com/hoehnp,1,https://github.com/navit-gps/navit/pull/842,"ändrad:        .circleci/config.yml
ändrad:        contrib/sailfish/build_sailfish_ci.sh

Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://navit.readthedocs.io/en/trunk/development/commit_guidelines.html
and that your code is compliant with out coding style guidelines:
https://navit.readthedocs.io/en/trunk/development/programming_guidelines.html","ändrad:        .circleci/config.yml
ändrad:        contrib/sailfish/build_sailfish_ci.sh

Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://navit.readthedocs.io/en/trunk/development/commit_guidelines.html
and that your code is compliant with out coding style guidelines:
https://navit.readthedocs.io/en/trunk/development/programming_guidelines.html",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,843,2019-08-26T21:33:22Z,2019-08-27T09:28:33Z,2019-09-01T20:31:05Z,MERGED,True,1,1,1,https://github.com/hoehnp,update building of sailfish OS to version 3.1.0.12,1,[],https://github.com/navit-gps/navit/pull/843,https://github.com/hoehnp,1,https://github.com/navit-gps/navit/pull/843,"ändrad:        .circleci/config.yml
ändrad:        contrib/sailfish/build_sailfish_ci.sh

Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://navit.readthedocs.io/en/trunk/development/commit_guidelines.html
and that your code is compliant with out coding style guidelines:
https://navit.readthedocs.io/en/trunk/development/programming_guidelines.html","ändrad:        .circleci/config.yml
ändrad:        contrib/sailfish/build_sailfish_ci.sh

Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://navit.readthedocs.io/en/trunk/development/commit_guidelines.html
and that your code is compliant with out coding style guidelines:
https://navit.readthedocs.io/en/trunk/development/programming_guidelines.html",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,843,2019-08-26T21:33:22Z,2019-08-27T09:28:33Z,2019-09-01T20:31:05Z,MERGED,True,1,1,1,https://github.com/hoehnp,update building of sailfish OS to version 3.1.0.12,1,[],https://github.com/navit-gps/navit/pull/843,https://github.com/hoehnp,2,https://github.com/navit-gps/navit/pull/843#issuecomment-525154765,"ändrad:        .circleci/config.yml
ändrad:        contrib/sailfish/build_sailfish_ci.sh

Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://navit.readthedocs.io/en/trunk/development/commit_guidelines.html
and that your code is compliant with out coding style guidelines:
https://navit.readthedocs.io/en/trunk/development/programming_guidelines.html","@metalstrolch: The comment seems wrong. During the course of fixing things, I also played with file and removed the changes later on again.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,846,2019-08-27T16:03:52Z,2019-08-28T05:10:00Z,2019-08-28T07:26:08Z,MERGED,True,2,0,3,https://github.com/metalstrolch,countries:add:Kosovo,1,[],https://github.com/navit-gps/navit/pull/846,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/846,"Add Kosovo to the list of known countries and add Kosovo flag.
Despite the dispute about Kosovo's legal status, we should add it to the known Countries using its ""XK"" iso tag. Otherwise we loose all Kosovo cities due to not understanding the country border already present in OSM.","Add Kosovo to the list of known countries and add Kosovo flag.
Despite the dispute about Kosovo's legal status, we should add it to the known Countries using its ""XK"" iso tag. Otherwise we loose all Kosovo cities due to not understanding the country border already present in OSM.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,850,2019-08-28T20:02:59Z,2019-09-01T21:37:54Z,2019-09-01T21:37:54Z,MERGED,True,20,17,1,https://github.com/mvglasow,Fix:xml:Fix bike routing,2,[],https://github.com/navit-gps/navit/pull/850,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/850,"This improves bike routing (see also #844):

Oneway restrictions are respected for bikes (if a way has different oneway restrictions for bikes, create two ways, one for each direction, and set access flags accordingly)
Trunk roads are allowed if access flags permit, but with a low priority
Unpaved paths get a low speed and priority so paved paths are preferred
Priority decreases as road order increases

Tests with the use cases in #844 show significant improvements over the previous situation. There may not be a perfect solution because:

We do not have elevation information so we cannot consider that for routing.
We do know if a way where both pedestrians and bikes are allowed is segregated (we would prefer segregated ways for routing), or if a designated bike path runs right next to a main road (which some bikers might not like)
Finding an easy-to-follow route is not always easy as most road networks are structured primarily with cars in mind, not medium-distance biking (and we do not have medium/long-distance bike path information in the map data, so we cannot consider that)

All of these would require a different approach to routing, primarily a cost function which does not solely depend on vehicle profile, item type and distance.","This improves bike routing (see also #844):

Oneway restrictions are respected for bikes (if a way has different oneway restrictions for bikes, create two ways, one for each direction, and set access flags accordingly)
Trunk roads are allowed if access flags permit, but with a low priority
Unpaved paths get a low speed and priority so paved paths are preferred
Priority decreases as road order increases

Tests with the use cases in #844 show significant improvements over the previous situation. There may not be a perfect solution because:

We do not have elevation information so we cannot consider that for routing.
We do know if a way where both pedestrians and bikes are allowed is segregated (we would prefer segregated ways for routing), or if a designated bike path runs right next to a main road (which some bikers might not like)
Finding an easy-to-follow route is not always easy as most road networks are structured primarily with cars in mind, not medium-distance biking (and we do not have medium/long-distance bike path information in the map data, so we cannot consider that)

All of these would require a different approach to routing, primarily a cost function which does not solely depend on vehicle profile, item type and distance.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,850,2019-08-28T20:02:59Z,2019-09-01T21:37:54Z,2019-09-01T21:37:54Z,MERGED,True,20,17,1,https://github.com/mvglasow,Fix:xml:Fix bike routing,2,[],https://github.com/navit-gps/navit/pull/850,https://github.com/mvglasow,2,https://github.com/navit-gps/navit/pull/850#issuecomment-525900693,"This improves bike routing (see also #844):

Oneway restrictions are respected for bikes (if a way has different oneway restrictions for bikes, create two ways, one for each direction, and set access flags accordingly)
Trunk roads are allowed if access flags permit, but with a low priority
Unpaved paths get a low speed and priority so paved paths are preferred
Priority decreases as road order increases

Tests with the use cases in #844 show significant improvements over the previous situation. There may not be a perfect solution because:

We do not have elevation information so we cannot consider that for routing.
We do know if a way where both pedestrians and bikes are allowed is segregated (we would prefer segregated ways for routing), or if a designated bike path runs right next to a main road (which some bikers might not like)
Finding an easy-to-follow route is not always easy as most road networks are structured primarily with cars in mind, not medium-distance biking (and we do not have medium/long-distance bike path information in the map data, so we cannot consider that)

All of these would require a different approach to routing, primarily a cost function which does not solely depend on vehicle profile, item type and distance.",Fixes #844.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,851,2019-08-29T07:25:26Z,2019-09-17T13:30:51Z,2019-10-29T17:25:05Z,CLOSED,False,12,5,3,https://github.com/jandegr,fix android 64,5,['android'],https://github.com/navit-gps/navit/pull/851,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/851,"The first step in fixing #828
Glib from support already worked for 64 bits on windows but just needed a small tweak to get it going on android 64 as well.
Before fixing this I tested it with a glib built from latest glib sources (glib-2.61.2) to get a view of what other work there is to do in navit to fix it for arm64 but it is too much to build libglib-2.0.so just for distribution of navit apk's.
After this it still crashes on arm64 as there are a bunch of fixes to follow in the android specific navit code, but I thought to commit this first seperatly so it can bet tested for regressions on other platforms before committing the rest of the fixes.
The rest of the fixes are in android code, so those can't have sideffects on other platforms.
tested with a version including the most essential fixes in the android code on
android 8.1 arm64-v8a
android 9 x86_64","The first step in fixing #828
Glib from support already worked for 64 bits on windows but just needed a small tweak to get it going on android 64 as well.
Before fixing this I tested it with a glib built from latest glib sources (glib-2.61.2) to get a view of what other work there is to do in navit to fix it for arm64 but it is too much to build libglib-2.0.so just for distribution of navit apk's.
After this it still crashes on arm64 as there are a bunch of fixes to follow in the android specific navit code, but I thought to commit this first seperatly so it can bet tested for regressions on other platforms before committing the rest of the fixes.
The rest of the fixes are in android code, so those can't have sideffects on other platforms.
tested with a version including the most essential fixes in the android code on
android 8.1 arm64-v8a
android 9 x86_64",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,851,2019-08-29T07:25:26Z,2019-09-17T13:30:51Z,2019-10-29T17:25:05Z,CLOSED,False,12,5,3,https://github.com/jandegr,fix android 64,5,['android'],https://github.com/navit-gps/navit/pull/851,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/851#issuecomment-531475697,"The first step in fixing #828
Glib from support already worked for 64 bits on windows but just needed a small tweak to get it going on android 64 as well.
Before fixing this I tested it with a glib built from latest glib sources (glib-2.61.2) to get a view of what other work there is to do in navit to fix it for arm64 but it is too much to build libglib-2.0.so just for distribution of navit apk's.
After this it still crashes on arm64 as there are a bunch of fixes to follow in the android specific navit code, but I thought to commit this first seperatly so it can bet tested for regressions on other platforms before committing the rest of the fixes.
The rest of the fixes are in android code, so those can't have sideffects on other platforms.
tested with a version including the most essential fixes in the android code on
android 8.1 arm64-v8a
android 9 x86_64","Hi @jandegr
I had finaly time to test this fix, for me its not working right now.
I run a Logcat und did a grep -i navit on it. Hers the output:
navit_log_pr_851.log",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,851,2019-08-29T07:25:26Z,2019-09-17T13:30:51Z,2019-10-29T17:25:05Z,CLOSED,False,12,5,3,https://github.com/jandegr,fix android 64,5,['android'],https://github.com/navit-gps/navit/pull/851,https://github.com/jandegr,3,https://github.com/navit-gps/navit/pull/851#issuecomment-531705279,"The first step in fixing #828
Glib from support already worked for 64 bits on windows but just needed a small tweak to get it going on android 64 as well.
Before fixing this I tested it with a glib built from latest glib sources (glib-2.61.2) to get a view of what other work there is to do in navit to fix it for arm64 but it is too much to build libglib-2.0.so just for distribution of navit apk's.
After this it still crashes on arm64 as there are a bunch of fixes to follow in the android specific navit code, but I thought to commit this first seperatly so it can bet tested for regressions on other platforms before committing the rest of the fixes.
The rest of the fixes are in android code, so those can't have sideffects on other platforms.
tested with a version including the most essential fixes in the android code on
android 8.1 arm64-v8a
android 9 x86_64","@jkoan
As stated in the opening post it still should have crashed, thx for confirming that it crashes not in glib anymore but now a lot further in the anroid code exactly where it should so that is a valid testresult for me and it confirms your phone can actually run 64bit apk's, otherwise it would have loaded the armv7 binary just as before and run fine.
Again as stated in the opening post, I posted this small snippet from  #863 for in case somebody wants to test for regressions on other posix platforms that use glib from support.
The windows port does not use posix threads and I suppose it is the same for winCE, Tomtom builds its own glib, so that excludes those 3 but maybe sailfish is to be tested ?
thx for testing",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,851,2019-08-29T07:25:26Z,2019-09-17T13:30:51Z,2019-10-29T17:25:05Z,CLOSED,False,12,5,3,https://github.com/jandegr,fix android 64,5,['android'],https://github.com/navit-gps/navit/pull/851,https://github.com/jandegr,4,https://github.com/navit-gps/navit/pull/851#issuecomment-532221668,"The first step in fixing #828
Glib from support already worked for 64 bits on windows but just needed a small tweak to get it going on android 64 as well.
Before fixing this I tested it with a glib built from latest glib sources (glib-2.61.2) to get a view of what other work there is to do in navit to fix it for arm64 but it is too much to build libglib-2.0.so just for distribution of navit apk's.
After this it still crashes on arm64 as there are a bunch of fixes to follow in the android specific navit code, but I thought to commit this first seperatly so it can bet tested for regressions on other platforms before committing the rest of the fixes.
The rest of the fixes are in android code, so those can't have sideffects on other platforms.
tested with a version including the most essential fixes in the android code on
android 8.1 arm64-v8a
android 9 x86_64","apparently sailfish provides glib, so I can close this I suppose",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,854,2019-08-29T12:30:12Z,2019-09-19T14:50:35Z,2019-09-19T14:50:47Z,CLOSED,False,2,0,1,https://github.com/jandegr,fix crosscompilation without PkgConfig,1,[],https://github.com/navit-gps/navit/pull/854,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/854,"Since 4e5b35a a dependency on PkgConfig creeped in for crosscompiling.
It is typical not to have gtk stuff installed if not compiling for linux, so PkgConfig isn't there either.
I fixed it in the first way that came to mind, anybody feel free to change.","Since 4e5b35a a dependency on PkgConfig creeped in for crosscompiling.
It is typical not to have gtk stuff installed if not compiling for linux, so PkgConfig isn't there either.
I fixed it in the first way that came to mind, anybody feel free to change.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,854,2019-08-29T12:30:12Z,2019-09-19T14:50:35Z,2019-09-19T14:50:47Z,CLOSED,False,2,0,1,https://github.com/jandegr,fix crosscompilation without PkgConfig,1,[],https://github.com/navit-gps/navit/pull/854,https://github.com/jandegr,2,https://github.com/navit-gps/navit/pull/854#issuecomment-533167314,"Since 4e5b35a a dependency on PkgConfig creeped in for crosscompiling.
It is typical not to have gtk stuff installed if not compiling for linux, so PkgConfig isn't there either.
I fixed it in the first way that came to mind, anybody feel free to change.",closing this since I needed it to work on #877 and as such is included there.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,855,2019-08-29T12:47:05Z,2019-08-29T12:47:54Z,2019-08-29T12:50:33Z,MERGED,True,63,0,1,https://github.com/metalstrolch,Add:graphics/windows: draw polygon with holes,7,[],https://github.com/navit-gps/navit/pull/855,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/855,Add drawing polygons with holes to windows graphics except CE.,Add drawing polygons with holes to windows graphics except CE.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,856,2019-08-30T06:48:14Z,2019-09-19T14:19:36Z,2019-09-22T12:46:50Z,CLOSED,False,1,1,1,https://github.com/jandegr,android:fix mapdownload,1,[],https://github.com/navit-gps/navit/pull/856,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/856,"Errormessage on android 9 when downloading a map as mentioned in #853
E/org.navitproject.navit.NavitMapDownloader: Error reading from server: java.io.IOException: Cleartext HTTP traffic to maps.navit-project.org not permitted
When Google released Android Marshmallow (API level 23), it provided a configuration to disable clear text traffic, which would prevent your app from making clear HTTP requests. With the release of Android Pie (API level 28), clear text traffic is disabled by default.
This PR enables cleartext traffic.","Errormessage on android 9 when downloading a map as mentioned in #853
E/org.navitproject.navit.NavitMapDownloader: Error reading from server: java.io.IOException: Cleartext HTTP traffic to maps.navit-project.org not permitted
When Google released Android Marshmallow (API level 23), it provided a configuration to disable clear text traffic, which would prevent your app from making clear HTTP requests. With the release of Android Pie (API level 28), clear text traffic is disabled by default.
This PR enables cleartext traffic.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,856,2019-08-30T06:48:14Z,2019-09-19T14:19:36Z,2019-09-22T12:46:50Z,CLOSED,False,1,1,1,https://github.com/jandegr,android:fix mapdownload,1,[],https://github.com/navit-gps/navit/pull/856,https://github.com/jandegr,2,https://github.com/navit-gps/navit/pull/856#issuecomment-533152513,"Errormessage on android 9 when downloading a map as mentioned in #853
E/org.navitproject.navit.NavitMapDownloader: Error reading from server: java.io.IOException: Cleartext HTTP traffic to maps.navit-project.org not permitted
When Google released Android Marshmallow (API level 23), it provided a configuration to disable clear text traffic, which would prevent your app from making clear HTTP requests. With the release of Android Pie (API level 28), clear text traffic is disabled by default.
This PR enables cleartext traffic.",closing because included in #877,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,857,2019-08-30T18:38:23Z,2019-08-31T16:11:43Z,2019-08-31T16:11:45Z,MERGED,True,1,1,1,https://github.com/aerostitch,Refactoring:xml: Fix a typo of the OpenStreetMap name in the shipped XML,2,[],https://github.com/navit-gps/navit/pull/857,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/857,"Fixes a typo on the tradermarked name of OpenStreetMap.
I was curious after seeing #849 to see if we had some in the code so I found this one.","Fixes a typo on the tradermarked name of OpenStreetMap.
I was curious after seeing #849 to see if we had some in the code so I found this one.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,858,2019-08-30T19:04:03Z,2019-08-31T12:10:16Z,2019-08-31T16:11:07Z,MERGED,True,14,19,4,https://github.com/aerostitch,"Refactoring:tools:minor Check exit code directly with e.g. ""if mycmd;"", not indirectly with $?",2,[],https://github.com/navit-gps/navit/pull/858,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/858,"This is a cleanup of the errors Check exit code directly with e.g. 'if mycmd;', not indirectly with $? found in codefactor: https://www.codefactor.io/repository/github/navit-gps/navit/issues/trunk?lang=1#
Nothing really exciting there.","This is a cleanup of the errors Check exit code directly with e.g. 'if mycmd;', not indirectly with $? found in codefactor: https://www.codefactor.io/repository/github/navit-gps/navit/issues/trunk?lang=1#
Nothing really exciting there.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,859,2019-08-30T23:30:50Z,2019-09-06T11:55:25Z,2019-09-06T11:55:25Z,MERGED,True,51,36,1,https://github.com/mvglasow,Admin levels for additional countries,11,[],https://github.com/navit-gps/navit/pull/859,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/859,"Addresses #847 for the Baltic states.
This may not yet be perfect but is better than what we have now (which is just the town name with no further information). Improvements are welcome!","Addresses #847 for the Baltic states.
This may not yet be perfect but is better than what we have now (which is just the town name with no further information). Improvements are welcome!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,859,2019-08-30T23:30:50Z,2019-09-06T11:55:25Z,2019-09-06T11:55:25Z,MERGED,True,51,36,1,https://github.com/mvglasow,Admin levels for additional countries,11,[],https://github.com/navit-gps/navit/pull/859,https://github.com/mvglasow,2,https://github.com/navit-gps/navit/pull/859#issuecomment-528066991,"Addresses #847 for the Baltic states.
This may not yet be perfect but is better than what we have now (which is just the town name with no further information). Improvements are welcome!","I have added a few more countries based on information from https://wiki.openstreetmap.org/wiki/Tag:boundary%3Dadministrative#10_admin_level_values_for_specific_countries: we now cover most of the EU as well as Iceland, Belarus, Serbia, Georgia, Turkey, India, Japan, both Koreas, New Zealand, Canada, Mexico and Brazil. Of these, I have only given Czechia and Austria a quick test. However, none of these changes should introduce any major issues: at the worst, we still won’t get any useful information underneath the town name. Not all of them may be perfect, but this can only be better than what we had before, and anyone who knows better is welcome to suggest improvements!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,859,2019-08-30T23:30:50Z,2019-09-06T11:55:25Z,2019-09-06T11:55:25Z,MERGED,True,51,36,1,https://github.com/mvglasow,Admin levels for additional countries,11,[],https://github.com/navit-gps/navit/pull/859,https://github.com/metalstrolch,3,https://github.com/navit-gps/navit/pull/859#issuecomment-528824832,"Addresses #847 for the Baltic states.
This may not yet be perfect but is better than what we have now (which is just the town name with no further information). Improvements are welcome!",Merging this. Looks fine and improves usability a lot for those countries. Fixes #847,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,860,2019-09-02T09:58:48Z,2019-09-06T16:23:10Z,2019-09-06T16:23:18Z,CLOSED,False,3,0,1,https://github.com/jandegr,Fix:Core:Fix crash,2,[],https://github.com/navit-gps/navit/pull/860,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/860,"fixes a crash in the following scenario
click a point on the map
set it as position with gui_internal
click the button that centers the map around your position","fixes a crash in the following scenario
click a point on the map
set it as position with gui_internal
click the button that centers the map around your position",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,860,2019-09-02T09:58:48Z,2019-09-06T16:23:10Z,2019-09-06T16:23:18Z,CLOSED,False,3,0,1,https://github.com/jandegr,Fix:Core:Fix crash,2,[],https://github.com/navit-gps/navit/pull/860,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/860#issuecomment-528832367,"fixes a crash in the following scenario
click a point on the map
set it as position with gui_internal
click the button that centers the map around your position","Unable to merge this, as branch is outdated, but @jandegr doesn't give push permission on his branch.
@jandegr please update (and merge) your branch.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,860,2019-09-02T09:58:48Z,2019-09-06T16:23:10Z,2019-09-06T16:23:18Z,CLOSED,False,3,0,1,https://github.com/jandegr,Fix:Core:Fix crash,2,[],https://github.com/navit-gps/navit/pull/860,https://github.com/jandegr,3,https://github.com/navit-gps/navit/pull/860#issuecomment-528898859,"fixes a crash in the following scenario
click a point on the map
set it as position with gui_internal
click the button that centers the map around your position","I gave permissions, but why not use this one as a testcase for #868
thx.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,860,2019-09-02T09:58:48Z,2019-09-06T16:23:10Z,2019-09-06T16:23:18Z,CLOSED,False,3,0,1,https://github.com/jandegr,Fix:Core:Fix crash,2,[],https://github.com/navit-gps/navit/pull/860,https://github.com/jkoan,4,https://github.com/navit-gps/navit/pull/860#issuecomment-528906271,"fixes a crash in the following scenario
click a point on the map
set it as position with gui_internal
click the button that centers the map around your position","I gave permissions, but why not use this one as a testcase for #868
thx.

if the commit 43485ae would follow the commit guidelines i could ""rebase and merge"" directly, but now i would need ""Squash and merge"" to give a new commit message",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,860,2019-09-02T09:58:48Z,2019-09-06T16:23:10Z,2019-09-06T16:23:18Z,CLOSED,False,3,0,1,https://github.com/jandegr,Fix:Core:Fix crash,2,[],https://github.com/navit-gps/navit/pull/860,https://github.com/jandegr,5,https://github.com/navit-gps/navit/pull/860#issuecomment-528920897,"fixes a crash in the following scenario
click a point on the map
set it as position with gui_internal
click the button that centers the map around your position","Indeed, I just could fix the title to comply with https://navit.readthedocs.io/en/latest/development/commit_guidelines.html
I can't change the commit message myself anymore either, will close this one and open a new one for it.
But why was this not done correctly for so many of those other commits in trunk if it is so simple to deal with  #868",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,861,2019-09-03T07:40:42Z,2019-09-05T20:49:17Z,2019-09-07T21:19:51Z,MERGED,True,236,29,3,https://github.com/metalstrolch,Add:graphics/sdl: Polygon with holes support.,2,[],https://github.com/navit-gps/navit/pull/861,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/861,Add polygon with holes support to SDL graphics.,Add polygon with holes support to SDL graphics.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,861,2019-09-03T07:40:42Z,2019-09-05T20:49:17Z,2019-09-07T21:19:51Z,MERGED,True,236,29,3,https://github.com/metalstrolch,Add:graphics/sdl: Polygon with holes support.,2,[],https://github.com/navit-gps/navit/pull/861,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/861#issuecomment-527346009,Add polygon with holes support to SDL graphics.,@jkoan: you can retest multi polygon support with SDL. I added the support for it.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,861,2019-09-03T07:40:42Z,2019-09-05T20:49:17Z,2019-09-07T21:19:51Z,MERGED,True,236,29,3,https://github.com/metalstrolch,Add:graphics/sdl: Polygon with holes support.,2,[],https://github.com/navit-gps/navit/pull/861,https://github.com/metalstrolch,3,https://github.com/navit-gps/navit/pull/861#issuecomment-528258245,Add polygon with holes support to SDL graphics.,Can somebody check this on tomtom as well? Seems tomtom uses sdl.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,861,2019-09-03T07:40:42Z,2019-09-05T20:49:17Z,2019-09-07T21:19:51Z,MERGED,True,236,29,3,https://github.com/metalstrolch,Add:graphics/sdl: Polygon with holes support.,2,[],https://github.com/navit-gps/navit/pull/861,https://github.com/gefin,4,https://github.com/navit-gps/navit/pull/861#issuecomment-528406970,Add polygon with holes support to SDL graphics.,"Yes, i can test tomtom..
Is there a source to download a matching map ( ~300-800 MB )",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,861,2019-09-03T07:40:42Z,2019-09-05T20:49:17Z,2019-09-07T21:19:51Z,MERGED,True,236,29,3,https://github.com/metalstrolch,Add:graphics/sdl: Polygon with holes support.,2,[],https://github.com/navit-gps/navit/pull/861,https://github.com/metalstrolch,5,https://github.com/navit-gps/navit/pull/861#issuecomment-528419592,Add polygon with holes support to SDL graphics.,"File taken down.
I've created one: http://metalstrolche.de/bayern.bin
Covers Bavaria / Germany. Sample map Munich is contained within it.
I will edit this post when I take it down again.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,861,2019-09-03T07:40:42Z,2019-09-05T20:49:17Z,2019-09-07T21:19:51Z,MERGED,True,236,29,3,https://github.com/metalstrolch,Add:graphics/sdl: Polygon with holes support.,2,[],https://github.com/navit-gps/navit/pull/861,https://github.com/metalstrolch,6,https://github.com/navit-gps/navit/pull/861#issuecomment-528424064,Add polygon with holes support to SDL graphics.,"You may want to try the map contained there as well. Center Navit to Munich before loading this map. You should see some shapes. Some of them should have holes.
fake-munich.zip",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,861,2019-09-03T07:40:42Z,2019-09-05T20:49:17Z,2019-09-07T21:19:51Z,MERGED,True,236,29,3,https://github.com/metalstrolch,Add:graphics/sdl: Polygon with holes support.,2,[],https://github.com/navit-gps/navit/pull/861,https://github.com/gefin,7,https://github.com/navit-gps/navit/pull/861#issuecomment-528451493,Add polygon with holes support to SDL graphics.,"Real map look good. Multi polygons are drawn.
The Fake-Munich stay blank.
fake-munich.bin is only 1218 bytes. Is this OK?
Is there a debug line to grep for?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,861,2019-09-03T07:40:42Z,2019-09-05T20:49:17Z,2019-09-07T21:19:51Z,MERGED,True,236,29,3,https://github.com/metalstrolch,Add:graphics/sdl: Polygon with holes support.,2,[],https://github.com/navit-gps/navit/pull/861,https://github.com/metalstrolch,8,https://github.com/navit-gps/navit/pull/861#issuecomment-528460413,Add polygon with holes support to SDL graphics.,"Yes the size is OK, there are only few polygon shapes inside. That's no ""real"" map.
Of course you can check if the map got loaded at all. But I think you just miss the not that big elements.
They are roughly at 48.1333N 11.5666E. You can enter these coordinates in Actions->Coordinates in internal GUI.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,861,2019-09-03T07:40:42Z,2019-09-05T20:49:17Z,2019-09-07T21:19:51Z,MERGED,True,236,29,3,https://github.com/metalstrolch,Add:graphics/sdl: Polygon with holes support.,2,[],https://github.com/navit-gps/navit/pull/861,https://github.com/gefin,9,https://github.com/navit-gps/navit/pull/861#issuecomment-528479509,Add polygon with holes support to SDL graphics.,"All blank. Map are loaded. May be my Layout don't show this type of object.
Are also normal objects on the map?
p.s. the circleci navit builds dont contain a default layout.
my opentom version use old SDL.1.2.15 and SDL_image 1.2.12.
Can this be the problem?
Tomorrow i can try to compile sdl_with_holes in my build environment.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,861,2019-09-03T07:40:42Z,2019-09-05T20:49:17Z,2019-09-07T21:19:51Z,MERGED,True,236,29,3,https://github.com/metalstrolch,Add:graphics/sdl: Polygon with holes support.,2,[],https://github.com/navit-gps/navit/pull/861,https://github.com/metalstrolch,10,https://github.com/navit-gps/navit/pull/861#issuecomment-528503447,Add polygon with holes support to SDL graphics.,"The objects are all of type poly_landfill. You can enable them by adding
      <itemgra item_types=""poly_landfill"" order=""10-"">
         <polygon color=""#999893""/>
         <text text_size=""5""/>
      </itemgra>

To your layout. There are no other objects inside the fake map. Maybe I do one with some POIs and different landuse tags tomorrow.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,861,2019-09-03T07:40:42Z,2019-09-05T20:49:17Z,2019-09-07T21:19:51Z,MERGED,True,236,29,3,https://github.com/metalstrolch,Add:graphics/sdl: Polygon with holes support.,2,[],https://github.com/navit-gps/navit/pull/861,https://github.com/metalstrolch,11,https://github.com/navit-gps/navit/pull/861#issuecomment-528504034,Add polygon with holes support to SDL graphics.,"If you have an old version without this patch, you still will see the polygons, but the holes are filled as well.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,861,2019-09-03T07:40:42Z,2019-09-05T20:49:17Z,2019-09-07T21:19:51Z,MERGED,True,236,29,3,https://github.com/metalstrolch,Add:graphics/sdl: Polygon with holes support.,2,[],https://github.com/navit-gps/navit/pull/861,https://github.com/gefin,12,https://github.com/navit-gps/navit/pull/861#issuecomment-528569165,Add polygon with holes support to SDL graphics.,"Yes with the ""landfill"" i see a polygon (6 corner) with a hole (3 corner) and a square with a hole  and a polygon in this hole.
Also 8 further polygons (one with 3 holes)
look like it work ;-)
The ""hole"" in the chiemsee work also.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,861,2019-09-03T07:40:42Z,2019-09-05T20:49:17Z,2019-09-07T21:19:51Z,MERGED,True,236,29,3,https://github.com/metalstrolch,Add:graphics/sdl: Polygon with holes support.,2,[],https://github.com/navit-gps/navit/pull/861,https://github.com/metalstrolch,13,https://github.com/navit-gps/navit/pull/861#issuecomment-528575394,Add polygon with holes support to SDL graphics.,Seems we're ready to go.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,861,2019-09-03T07:40:42Z,2019-09-05T20:49:17Z,2019-09-07T21:19:51Z,MERGED,True,236,29,3,https://github.com/metalstrolch,Add:graphics/sdl: Polygon with holes support.,2,[],https://github.com/navit-gps/navit/pull/861,https://github.com/gefin,14,https://github.com/navit-gps/navit/pull/861#issuecomment-529114327,Add polygon with holes support to SDL graphics.,"After driving ~100km with this version on tomtom 730 i found a location where the performance drop strong. Time for one screen update is then up to 4 sec. Things like unexpected ""turn if possible"" happens.
The problem exist only with car layout. Car-simple layout 0.3 sec is good.
Location is 48°8'24'' N    12°1`50`` E  along the B12
zoom=32
After testing many builds i found the problem here in the #861 patch.
I think it is because draw_polygon() is generally replaced by draw_polygon_with_holes().",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,861,2019-09-03T07:40:42Z,2019-09-05T20:49:17Z,2019-09-07T21:19:51Z,MERGED,True,236,29,3,https://github.com/metalstrolch,Add:graphics/sdl: Polygon with holes support.,2,[],https://github.com/navit-gps/navit/pull/861,https://github.com/metalstrolch,15,https://github.com/navit-gps/navit/pull/861#issuecomment-529147661,Add polygon with holes support to SDL graphics.,"No, it's not because of replacing draw_polygon() by draw_polygon_with_holes() as this works exactly the same as before if something doesn't have holes. The new version should be even faster than before as the coordinates are memcopied one time less.
It's missing clipping for polygons with holes I think, together with the sheer size of some polygons.
Seems this happens because of two really large polygons with many holes having a quite high node count each:
https://www.openstreetmap.org/relation/2892951
and
https://www.openstreetmap.org/relation/68363
At the location 48°8'24'' N 12°1`50`` E along the B12.
Currently core doesn't implement clipping for polygons with holes. It does for polygons without holes.
And the WindowsCE (and SDL) graphics do not implement clipping as well.
So the polygons are completely raycasted and drawn even if only small portions of them are really on screen.
I'll try two things:


Port the ""clipping"" version of polygon handling in graphics.c to support holes as well. I've left a TODO there anyways.


Check  layer geometry on Windows / SDL graphics to only raycast lines which are actually on layer.


Opened #869 as this pull request is already closed.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,862,2019-09-03T08:54:39Z,2019-09-06T10:22:04Z,2019-09-06T12:28:38Z,MERGED,True,170,5,1,https://github.com/metalstrolch,Add:graphics/windows: polygons with holes for windows CE,2,[],https://github.com/navit-gps/navit/pull/862,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/862,Add polygon with holes support for windows CE,Add polygon with holes support for windows CE,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,862,2019-09-03T08:54:39Z,2019-09-06T10:22:04Z,2019-09-06T12:28:38Z,MERGED,True,170,5,1,https://github.com/metalstrolch,Add:graphics/windows: polygons with holes for windows CE,2,[],https://github.com/navit-gps/navit/pull/862,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/862#issuecomment-527370438,Add polygon with holes support for windows CE,"Untested on real windows CE device!
Needs to be confirmed working before merge!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,862,2019-09-03T08:54:39Z,2019-09-06T10:22:04Z,2019-09-06T12:28:38Z,MERGED,True,170,5,1,https://github.com/metalstrolch,Add:graphics/windows: polygons with holes for windows CE,2,[],https://github.com/navit-gps/navit/pull/862,https://github.com/metalstrolch,3,https://github.com/navit-gps/navit/pull/862#issuecomment-528600346,Add polygon with holes support for windows CE,"See  #861 for preprocessed map of Bavaria, as well as a test map showing only some test polygons.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,862,2019-09-03T08:54:39Z,2019-09-06T10:22:04Z,2019-09-06T12:28:38Z,MERGED,True,170,5,1,https://github.com/metalstrolch,Add:graphics/windows: polygons with holes for windows CE,2,[],https://github.com/navit-gps/navit/pull/862,https://github.com/gefin,4,https://github.com/navit-gps/navit/pull/862#issuecomment-528758905,Add polygon with holes support for windows CE,"search for Prien to find the location.
It is a bit slow, but work.
By the way...Navit run out of memory while searching a street in munich. The device has only 64K RAM...",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,862,2019-09-03T08:54:39Z,2019-09-06T10:22:04Z,2019-09-06T12:28:38Z,MERGED,True,170,5,1,https://github.com/metalstrolch,Add:graphics/windows: polygons with holes for windows CE,2,[],https://github.com/navit-gps/navit/pull/862,https://github.com/metalstrolch,5,https://github.com/navit-gps/navit/pull/862#issuecomment-528783958,Add polygon with holes support for windows CE,"OK. Great to see it's working at least, and the drawing looks OK as far as I can see. It only places the zoom buttons wrong, but this is unlikely introduced by this change.
About the speed: is it actually slower than before introducing the multipolygons? The device is not really a rocket.
About memory usage: I know about this being an issue on devices with only 64MB memory. But not specially introduced by this pull request. Feel free to open another issue about this topic.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,862,2019-09-03T08:54:39Z,2019-09-06T10:22:04Z,2019-09-06T12:28:38Z,MERGED,True,170,5,1,https://github.com/metalstrolch,Add:graphics/windows: polygons with holes for windows CE,2,[],https://github.com/navit-gps/navit/pull/862,https://github.com/gefin,6,https://github.com/navit-gps/navit/pull/862#issuecomment-528794296,Add polygon with holes support for windows CE,"There is not much change in munich. It was slow and is slow with Car layout. Its better with android layout.
Flat land work well before and after.
The Chiemsee is much slower like before because it was not rendered.
Chiemsee is rendered in 3 seconds, munich in 4.
I think it would be a good idea to open a ""speed"" issue. I think there is potential, because it looks like also not drawn itemgra items slows down rendering. May be its possible to make a ""quick skip"" or ""skip cache"" for items which are not drawn (order=...).
The osd setting is better like in the last version. I think the small zoom buttons are old, the big are a new addition. Not sure, but i think with the old ce version (0.5.1) the icons had transparent background.
I cant check now, because i had to remove it to get free space.
Yes, the memory problem was also before. For Tomtom i can work with swap memory.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,862,2019-09-03T08:54:39Z,2019-09-06T10:22:04Z,2019-09-06T12:28:38Z,MERGED,True,170,5,1,https://github.com/metalstrolch,Add:graphics/windows: polygons with holes for windows CE,2,[],https://github.com/navit-gps/navit/pull/862,https://github.com/metalstrolch,7,https://github.com/navit-gps/navit/pull/862#issuecomment-528799930,Add polygon with holes support for windows CE,"OK. Going to merge this.
I think for devices like this it would be best idea to process a map throwing out everything one doesn't want to render anyway. While being done quite easy with maptool, we don't have an infrastructure to provide such maps yet. Additionally we could provide a map with all the rest. So one could have two binfiles. One for the roads and routing things. And another for the eyecandy like landuses and so forth. Then we could enable or disable that via the maps menu. Or opt not to have the second one at all. Maybe I'll give that aproach a try. Stay tuned.",True,{'THUMBS_UP': ['https://github.com/lains']}
navit-gps/navit,https://github.com/navit-gps/navit,863,2019-09-03T17:59:04Z,2019-09-19T13:12:07Z,2019-09-25T17:30:55Z,CLOSED,False,2238,2343,38,https://github.com/jandegr,[WIP] Android Navit64,63,[],https://github.com/navit-gps/navit/pull/863,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/863,"fixes #828
acts upon #832","fixes #828
acts upon #832",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,863,2019-09-03T17:59:04Z,2019-09-19T13:12:07Z,2019-09-25T17:30:55Z,CLOSED,False,2238,2343,38,https://github.com/jandegr,[WIP] Android Navit64,63,[],https://github.com/navit-gps/navit/pull/863,https://github.com/jandegr,2,https://github.com/navit-gps/navit/pull/863#issuecomment-527588900,"fixes #828
acts upon #832","Codefactor 52 issues reported as fixed, 84 reported as new despite only 2 of them actually are introduced by this PR.
I will fix a bunch more tomorrow or so.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,863,2019-09-03T17:59:04Z,2019-09-19T13:12:07Z,2019-09-25T17:30:55Z,CLOSED,False,2238,2343,38,https://github.com/jandegr,[WIP] Android Navit64,63,[],https://github.com/navit-gps/navit/pull/863,https://github.com/jkoan,3,https://github.com/navit-gps/navit/pull/863#issuecomment-531476945,"fixes #828
acts upon #832","With this fix Navit finally works again on arm64 (Oneplus 3t)
Nice work!
Do you want to add anything to this, or is it ready to merge? Its still on WIP/Draft Status. And Codefactor is not a Merge blocker for us.
Thank you really much for your work 😄",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,863,2019-09-03T17:59:04Z,2019-09-19T13:12:07Z,2019-09-25T17:30:55Z,CLOSED,False,2238,2343,38,https://github.com/jandegr,[WIP] Android Navit64,63,[],https://github.com/navit-gps/navit/pull/863,https://github.com/jandegr,4,https://github.com/navit-gps/navit/pull/863#issuecomment-531687218,"fixes #828
acts upon #832","Hi,
I finally got to add the next batch.
@jkoan thx for testing.
Since you also tested the glib part of this pr #851 there is no doubt about your phone, but if somebody else wants to test pls. report the flavor that is added in the gui_internal about page.
All testing is usefull but it gets even more meaning if the flavor is reported as well.
THX",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,863,2019-09-03T17:59:04Z,2019-09-19T13:12:07Z,2019-09-25T17:30:55Z,CLOSED,False,2238,2343,38,https://github.com/jandegr,[WIP] Android Navit64,63,[],https://github.com/navit-gps/navit/pull/863,https://github.com/jandegr,5,https://github.com/navit-gps/navit/pull/863#issuecomment-531729824,"fixes #828
acts upon #832","@metalstrolch
Thx for looking into this POC.
I can't do CARVED_IN_STONE = askaround() but since doc would be appropriate there
https://github.com/navit-gps/navit/blob/trunk/navit/android.c#L70
it would be a good place to add a reference to the CMAKE fixed equivalent.
thx.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,863,2019-09-03T17:59:04Z,2019-09-19T13:12:07Z,2019-09-25T17:30:55Z,CLOSED,False,2238,2343,38,https://github.com/jandegr,[WIP] Android Navit64,63,[],https://github.com/navit-gps/navit/pull/863,https://github.com/jkoan,6,https://github.com/navit-gps/navit/pull/863#issuecomment-531880051,"fixes #828
acts upon #832","I did a quick test with all the other test devices i have lieing around:
apk file: 7b85978912d2dd5b575a32027d2ef672
build: https://app.circleci.com/jobs/github/jandegr/navit/5168/artifacts
armeabi-v7a (Huawei Y300-0100) working ✔️
armeabi-v7a (Sony C1505) working ✔️
armeabi-v6l (LG-P690) not working ❌  Android 4.1.2 cyanogenmod 10-20121222-UNOFFICIAL-p690 : Couldn't load navit: findLibrary returned null
armeabi (Samsung GT-S6802) not working ❌ Android 2.3.6 : error while installing Failure [INSTALL_FAILED_CPU_ABI_INCOMPATIBLE]
armeabi-v7a (Sony LT22i) working ✔️  Android 4.1.2",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,863,2019-09-03T17:59:04Z,2019-09-19T13:12:07Z,2019-09-25T17:30:55Z,CLOSED,False,2238,2343,38,https://github.com/jandegr,[WIP] Android Navit64,63,[],https://github.com/navit-gps/navit/pull/863,https://github.com/jandegr,7,https://github.com/navit-gps/navit/pull/863#issuecomment-531901743,"fixes #828
acts upon #832","Hi,
@jkoan
this apk includes all ABI's still supported today
ndk { abiFilters 'x86', 'x86_64', 'arm64-v8a', 'armeabi-v7a' }
We used to have the older flavor armeabi with one of the old buildscripts, they deleted those from the repo but I think you can still find them.
Support for those was dropped in ndk 17, so use 16b. Minsdk is 9 so that will be ok.
https://developer.android.com/ndk/guides/abis
thx again for testing again :)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,863,2019-09-03T17:59:04Z,2019-09-19T13:12:07Z,2019-09-25T17:30:55Z,CLOSED,False,2238,2343,38,https://github.com/jandegr,[WIP] Android Navit64,63,[],https://github.com/navit-gps/navit/pull/863,https://github.com/jkoan,8,https://github.com/navit-gps/navit/pull/863#issuecomment-532549252,"fixes #828
acts upon #832",@jandegr could you give a todo list for this PR whats left to do until we can finaly Rewiew this really nice work and ship it into the coming release?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,863,2019-09-03T17:59:04Z,2019-09-19T13:12:07Z,2019-09-25T17:30:55Z,CLOSED,False,2238,2343,38,https://github.com/jandegr,[WIP] Android Navit64,63,[],https://github.com/navit-gps/navit/pull/863,https://github.com/jandegr,9,https://github.com/navit-gps/navit/pull/863#issuecomment-532802694,"fixes #828
acts upon #832","@jkoan
after the last update did

minor cleanup / rework
fix a regression I introduced for KITKAT
tested the pedestrian plugin for regressions
reworked native keyboard, complete upto KITKAT for all orientations and in portrait for versions > KITKAT

todo

fix native keyboard for versions > KITKAT in landscape orientation
look into a detail when backgrounded or lost focus
fullscreen mode to revisit
etc...
fix a few household matters with @pgrandin

The lowhanging fruit in the fixes is gone, remaining fixes seem to take longer and longer...",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,863,2019-09-03T17:59:04Z,2019-09-19T13:12:07Z,2019-09-25T17:30:55Z,CLOSED,False,2238,2343,38,https://github.com/jandegr,[WIP] Android Navit64,63,[],https://github.com/navit-gps/navit/pull/863,https://github.com/jandegr,10,https://github.com/navit-gps/navit/pull/863#issuecomment-533123926,"fixes #828
acts upon #832",closing this since #876 contains the latest updates,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,864,2019-09-05T01:30:55Z,2020-05-21T13:00:33Z,2020-05-21T13:00:34Z,CLOSED,False,6,0,1,https://github.com/aerostitch,update:doc: Add note about the partnershipt with short-circuit.com,2,['doc'],https://github.com/navit-gps/navit/pull/864,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/864,"While going through the pages of our old wiki to migrate it I found in https://wiki.navit-project.org/index.php/Changelog that we have or had a partnership with short-circuit.
If it's still current we might want to advertise that in our readme.
Not sure who knows about the status of that partnership.","While going through the pages of our old wiki to migrate it I found in https://wiki.navit-project.org/index.php/Changelog that we have or had a partnership with short-circuit.
If it's still current we might want to advertise that in our readme.
Not sure who knows about the status of that partnership.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,864,2019-09-05T01:30:55Z,2020-05-21T13:00:33Z,2020-05-21T13:00:34Z,CLOSED,False,6,0,1,https://github.com/aerostitch,update:doc: Add note about the partnershipt with short-circuit.com,2,['doc'],https://github.com/navit-gps/navit/pull/864,https://github.com/jandegr,2,https://github.com/navit-gps/navit/pull/864#issuecomment-528795163,"While going through the pages of our old wiki to migrate it I found in https://wiki.navit-project.org/index.php/Changelog that we have or had a partnership with short-circuit.
If it's still current we might want to advertise that in our readme.
Not sure who knows about the status of that partnership.","Navit is stil mentioned there https://www.short-circuit.com/support/links.php6
so somebody should volunteer to buy smth. there and try to get the 5% discount or mail them to inquire.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,864,2019-09-05T01:30:55Z,2020-05-21T13:00:33Z,2020-05-21T13:00:34Z,CLOSED,False,6,0,1,https://github.com/aerostitch,update:doc: Add note about the partnershipt with short-circuit.com,2,['doc'],https://github.com/navit-gps/navit/pull/864,https://github.com/mvglasow,3,https://github.com/navit-gps/navit/pull/864#issuecomment-529099065,"While going through the pages of our old wiki to migrate it I found in https://wiki.navit-project.org/index.php/Changelog that we have or had a partnership with short-circuit.
If it's still current we might want to advertise that in our readme.
Not sure who knows about the status of that partnership.","Besides, the link on short-circuit.com still points to Sourceforge.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,864,2019-09-05T01:30:55Z,2020-05-21T13:00:33Z,2020-05-21T13:00:34Z,CLOSED,False,6,0,1,https://github.com/aerostitch,update:doc: Add note about the partnershipt with short-circuit.com,2,['doc'],https://github.com/navit-gps/navit/pull/864,https://github.com/jkoan,4,https://github.com/navit-gps/navit/pull/864#issuecomment-544372425,"While going through the pages of our old wiki to migrate it I found in https://wiki.navit-project.org/index.php/Changelog that we have or had a partnership with short-circuit.
If it's still current we might want to advertise that in our readme.
Not sure who knows about the status of that partnership.","For me the question remains which type ""partnership"" this should be.
Yes, a little discount for navit users is nice, but looking at the shop from my needs/perspective I don't see anything that is worth buying. Not even to mention the shop seems to be really old and not totally trustworthy.
So is there any benefit for the Navit project itself?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,864,2019-09-05T01:30:55Z,2020-05-21T13:00:33Z,2020-05-21T13:00:34Z,CLOSED,False,6,0,1,https://github.com/aerostitch,update:doc: Add note about the partnershipt with short-circuit.com,2,['doc'],https://github.com/navit-gps/navit/pull/864,https://github.com/pgrandin,5,https://github.com/navit-gps/navit/pull/864#issuecomment-547689662,"While going through the pages of our old wiki to migrate it I found in https://wiki.navit-project.org/index.php/Changelog that we have or had a partnership with short-circuit.
If it's still current we might want to advertise that in our readme.
Not sure who knows about the status of that partnership.","For the Navit project itself, no real benefits. We won't be getting back any cut from the benefits. For our users, a deal could be nice, although I wonder how many times this has been used in the past.
Regarding trustworthiness, I have purchased from that shop myself in the past (this is where the deal comes from). The deal is probably more interesting for users building carpc.
I could reach out to them to get an update and get a sense of how many times our users purchased from that shop.",True,{'THUMBS_UP': ['https://github.com/aerostitch']}
navit-gps/navit,https://github.com/navit-gps/navit,864,2019-09-05T01:30:55Z,2020-05-21T13:00:33Z,2020-05-21T13:00:34Z,CLOSED,False,6,0,1,https://github.com/aerostitch,update:doc: Add note about the partnershipt with short-circuit.com,2,['doc'],https://github.com/navit-gps/navit/pull/864,https://github.com/jkoan,6,https://github.com/navit-gps/navit/pull/864#issuecomment-574819281,"While going through the pages of our old wiki to migrate it I found in https://wiki.navit-project.org/index.php/Changelog that we have or had a partnership with short-circuit.
If it's still current we might want to advertise that in our readme.
Not sure who knows about the status of that partnership.",Any update on this?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,864,2019-09-05T01:30:55Z,2020-05-21T13:00:33Z,2020-05-21T13:00:34Z,CLOSED,False,6,0,1,https://github.com/aerostitch,update:doc: Add note about the partnershipt with short-circuit.com,2,['doc'],https://github.com/navit-gps/navit/pull/864,https://github.com/jkoan,7,https://github.com/navit-gps/navit/pull/864#issuecomment-632072114,"While going through the pages of our old wiki to migrate it I found in https://wiki.navit-project.org/index.php/Changelog that we have or had a partnership with short-circuit.
If it's still current we might want to advertise that in our readme.
Not sure who knows about the status of that partnership.",Closing this for now,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,865,2019-09-05T05:26:09Z,2019-09-22T01:35:04Z,2019-09-22T01:35:09Z,CLOSED,False,62,0,1,https://github.com/aerostitch,update:doc: Add a tip on about a commit-msg hook [skip ci],2,['doc'],https://github.com/navit-gps/navit/pull/865,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/865,"As I'm adding some doc I realize that we're spending a lot of time on CI builds for stuffs that don't affect the builds so I made a commit-msg git hook for myself and thought that it might be useful to have it in the documentation in case someone wants to use it too without having to reinvent the wheel.
I made it in python so that it's portable on several platforms.
It's also compatible python 2 and 3.","As I'm adding some doc I realize that we're spending a lot of time on CI builds for stuffs that don't affect the builds so I made a commit-msg git hook for myself and thought that it might be useful to have it in the documentation in case someone wants to use it too without having to reinvent the wheel.
I made it in python so that it's portable on several platforms.
It's also compatible python 2 and 3.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,865,2019-09-05T05:26:09Z,2019-09-22T01:35:04Z,2019-09-22T01:35:09Z,CLOSED,False,62,0,1,https://github.com/aerostitch,update:doc: Add a tip on about a commit-msg hook [skip ci],2,['doc'],https://github.com/navit-gps/navit/pull/865,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/865#issuecomment-528908633,"As I'm adding some doc I realize that we're spending a lot of time on CI builds for stuffs that don't affect the builds so I made a commit-msg git hook for myself and thought that it might be useful to have it in the documentation in case someone wants to use it too without having to reinvent the wheel.
I made it in python so that it's portable on several platforms.
It's also compatible python 2 and 3.","Normaly perfect to save CI time, but there are two concerns:

spellcheck won't run
Github needs those statuses to pass the checks, earlier on GitHub this wasn't a Problem, but since Github somehow Cashes the ""Expected"" results, it is.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,865,2019-09-05T05:26:09Z,2019-09-22T01:35:04Z,2019-09-22T01:35:09Z,CLOSED,False,62,0,1,https://github.com/aerostitch,update:doc: Add a tip on about a commit-msg hook [skip ci],2,['doc'],https://github.com/navit-gps/navit/pull/865,https://github.com/aerostitch,3,https://github.com/navit-gps/navit/pull/865#issuecomment-533842336,"As I'm adding some doc I realize that we're spending a lot of time on CI builds for stuffs that don't affect the builds so I made a commit-msg git hook for myself and thought that it might be useful to have it in the documentation in case someone wants to use it too without having to reinvent the wheel.
I made it in python so that it's portable on several platforms.
It's also compatible python 2 and 3.",Alright. Closing then.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,870,2019-09-10T09:55:22Z,2019-09-13T12:43:31Z,2019-09-13T12:43:39Z,MERGED,True,186,43,1,https://github.com/metalstrolch,fix:core:add clipping to polygons with holes,2,[],https://github.com/navit-gps/navit/pull/870,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/870,"As some simple graphics like SDL or windows CE do not clip on drawing, the rendering performance of huge (not necessary in node count but on screen) polygons with holes cause poor drawing performance even if only small portions of those polygons are on screen.
To fix this we clip polygons with holes before calling back end to draw like done with traditional polygons as well.","As some simple graphics like SDL or windows CE do not clip on drawing, the rendering performance of huge (not necessary in node count but on screen) polygons with holes cause poor drawing performance even if only small portions of those polygons are on screen.
To fix this we clip polygons with holes before calling back end to draw like done with traditional polygons as well.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,870,2019-09-10T09:55:22Z,2019-09-13T12:43:31Z,2019-09-13T12:43:39Z,MERGED,True,186,43,1,https://github.com/metalstrolch,fix:core:add clipping to polygons with holes,2,[],https://github.com/navit-gps/navit/pull/870,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/870#issuecomment-529865604,"As some simple graphics like SDL or windows CE do not clip on drawing, the rendering performance of huge (not necessary in node count but on screen) polygons with holes cause poor drawing performance even if only small portions of those polygons are on screen.
To fix this we clip polygons with holes before calling back end to draw like done with traditional polygons as well.","I will ignore CodeFactor once more, as it is totally stupid to implement, and test code, and then on creating the pull request being told by CodeFactor it was too complex. I will not rewrite tested code because of this. It's hard to guess the metric of CodeFactor applies.",True,{'THUMBS_UP': ['https://github.com/jkoan']}
navit-gps/navit,https://github.com/navit-gps/navit,870,2019-09-10T09:55:22Z,2019-09-13T12:43:31Z,2019-09-13T12:43:39Z,MERGED,True,186,43,1,https://github.com/metalstrolch,fix:core:add clipping to polygons with holes,2,[],https://github.com/navit-gps/navit/pull/870,https://github.com/metalstrolch,3,https://github.com/navit-gps/navit/pull/870#issuecomment-530002082,"As some simple graphics like SDL or windows CE do not clip on drawing, the rendering performance of huge (not necessary in node count but on screen) polygons with holes cause poor drawing performance even if only small portions of those polygons are on screen.
To fix this we clip polygons with holes before calling back end to draw like done with traditional polygons as well.",Confirmed working in #869 by @gefin,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,870,2019-09-10T09:55:22Z,2019-09-13T12:43:31Z,2019-09-13T12:43:39Z,MERGED,True,186,43,1,https://github.com/metalstrolch,fix:core:add clipping to polygons with holes,2,[],https://github.com/navit-gps/navit/pull/870,https://github.com/metalstrolch,4,https://github.com/navit-gps/navit/pull/870#issuecomment-531221963,"As some simple graphics like SDL or windows CE do not clip on drawing, the rendering performance of huge (not necessary in node count but on screen) polygons with holes cause poor drawing performance even if only small portions of those polygons are on screen.
To fix this we clip polygons with holes before calling back end to draw like done with traditional polygons as well.",Merging this as confirmed to be fine in #869,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,872,2019-09-10T17:33:27Z,2019-09-26T22:03:31Z,2019-09-26T22:03:35Z,MERGED,True,1,0,1,https://github.com/gefin,Add watch after reopen the gps file,2,[],https://github.com/navit-gps/navit/pull/872,https://github.com/gefin,1,https://github.com/navit-gps/navit/pull/872,"vehicle_file_close(priv) disables watch of the file.
vehicle_file_open(priv) dont reenable it. So the gps position was frozen
In my case it is suspend/resume which lead to GPS the reopen.","vehicle_file_close(priv) disables watch of the file.
vehicle_file_open(priv) dont reenable it. So the gps position was frozen
In my case it is suspend/resume which lead to GPS the reopen.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,872,2019-09-10T17:33:27Z,2019-09-26T22:03:31Z,2019-09-26T22:03:35Z,MERGED,True,1,0,1,https://github.com/gefin,Add watch after reopen the gps file,2,[],https://github.com/navit-gps/navit/pull/872,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/872#issuecomment-535703254,"vehicle_file_close(priv) disables watch of the file.
vehicle_file_open(priv) dont reenable it. So the gps position was frozen
In my case it is suspend/resume which lead to GPS the reopen.",Thanks @gefin !,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,874,2019-09-18T13:00:17Z,2019-09-18T13:39:34Z,2019-09-25T20:43:55Z,MERGED,True,0,0,5,https://github.com/metalstrolch,update: Navit logo for (sailfish) desktop,1,[],https://github.com/navit-gps/navit/pull/874,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/874,"#724 updated the navit logo, but forgot about the desktop icons used for Sailfish and maybe others.","#724 updated the navit logo, but forgot about the desktop icons used for Sailfish and maybe others.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,874,2019-09-18T13:00:17Z,2019-09-18T13:39:34Z,2019-09-25T20:43:55Z,MERGED,True,0,0,5,https://github.com/metalstrolch,update: Navit logo for (sailfish) desktop,1,[],https://github.com/navit-gps/navit/pull/874,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/874#issuecomment-532688237,"#724 updated the navit logo, but forgot about the desktop icons used for Sailfish and maybe others.",Merging this. As we want the new icon we want the new icon...,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,875,2019-09-18T17:50:49Z,2019-11-08T07:47:18Z,2019-11-08T07:47:18Z,MERGED,True,19,8,5,https://github.com/gefin,fix:tomtom: Make sure the tomtom_plugin and tomtom_minimal contain navit.xml,12,"['bug', 'tomtom']",https://github.com/navit-gps/navit/pull/875,https://github.com/gefin,1,https://github.com/navit-gps/navit/pull/875,"the circleci build Job 15587 tomtom_plugin and tomtom_minimal dont contain a navit.xml.
also the locales Path is wrong.
Closes: #823","the circleci build Job 15587 tomtom_plugin and tomtom_minimal dont contain a navit.xml.
also the locales Path is wrong.
Closes: #823",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,875,2019-09-18T17:50:49Z,2019-11-08T07:47:18Z,2019-11-08T07:47:18Z,MERGED,True,19,8,5,https://github.com/gefin,fix:tomtom: Make sure the tomtom_plugin and tomtom_minimal contain navit.xml,12,"['bug', 'tomtom']",https://github.com/navit-gps/navit/pull/875,https://github.com/gefin,2,https://github.com/navit-gps/navit/pull/875#issuecomment-532805595,"the circleci build Job 15587 tomtom_plugin and tomtom_minimal dont contain a navit.xml.
also the locales Path is wrong.
Closes: #823","With this patches i get a tomtom480.xml, but the XML is not for Tomtom.
The xml dont contain layouts so we should them copy too.
Graphics are gtk, but should be SDL. The Resolution is also wrong.
I wonder because my local build environment makes a  tomtom480.xml with SDL good resolution.
How to change?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,875,2019-09-18T17:50:49Z,2019-11-08T07:47:18Z,2019-11-08T07:47:18Z,MERGED,True,19,8,5,https://github.com/gefin,fix:tomtom: Make sure the tomtom_plugin and tomtom_minimal contain navit.xml,12,"['bug', 'tomtom']",https://github.com/navit-gps/navit/pull/875,https://github.com/lains,3,https://github.com/navit-gps/navit/pull/875#issuecomment-533815901,"the circleci build Job 15587 tomtom_plugin and tomtom_minimal dont contain a navit.xml.
also the locales Path is wrong.
Closes: #823","It seems for tomtom, there is a dedicated XLST transformation that is applied during the build.
I had a similar issue before for platform WinCE, and it was because no proper xslt processor was found during the build from CircleCI...
From the circleCI output for tomtom_minimal (below), it seems its is the same issue:
CMake Warning at CMakeLists.txt:589 (message):
  No XSLT processor available.  You have to configure navit.xml yourself, or
  install an XSLT processor (supported:
  saxonb-xslt;saxon;saxon8;saxon-xslt;xsltproc;transform.exe).",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,875,2019-09-18T17:50:49Z,2019-11-08T07:47:18Z,2019-11-08T07:47:18Z,MERGED,True,19,8,5,https://github.com/gefin,fix:tomtom: Make sure the tomtom_plugin and tomtom_minimal contain navit.xml,12,"['bug', 'tomtom']",https://github.com/navit-gps/navit/pull/875,https://github.com/lains,4,https://github.com/navit-gps/navit/pull/875#issuecomment-533816296,"the circleci build Job 15587 tomtom_plugin and tomtom_minimal dont contain a navit.xml.
also the locales Path is wrong.
Closes: #823","OK, I just read in the separate issue (#823 (comment)) that you had already found out.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,875,2019-09-18T17:50:49Z,2019-11-08T07:47:18Z,2019-11-08T07:47:18Z,MERGED,True,19,8,5,https://github.com/gefin,fix:tomtom: Make sure the tomtom_plugin and tomtom_minimal contain navit.xml,12,"['bug', 'tomtom']",https://github.com/navit-gps/navit/pull/875,https://github.com/gefin,5,https://github.com/navit-gps/navit/pull/875#issuecomment-533820748,"the circleci build Job 15587 tomtom_plugin and tomtom_minimal dont contain a navit.xml.
also the locales Path is wrong.
Closes: #823","Yes, but i dont know how to add xslt support to ci.
A second problem is that the layouts now in extra files. In my home environment this layout files are empty.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,875,2019-09-18T17:50:49Z,2019-11-08T07:47:18Z,2019-11-08T07:47:18Z,MERGED,True,19,8,5,https://github.com/gefin,fix:tomtom: Make sure the tomtom_plugin and tomtom_minimal contain navit.xml,12,"['bug', 'tomtom']",https://github.com/navit-gps/navit/pull/875,https://github.com/lains,6,https://github.com/navit-gps/navit/pull/875#issuecomment-533889172,"the circleci build Job 15587 tomtom_plugin and tomtom_minimal dont contain a navit.xml.
also the locales Path is wrong.
Closes: #823","The docker image (navit/tomtom-ng) used for build by circleci is specified here:
https://github.com/navit-gps/navit/blob/trunk/.circleci/config.yml#L182
So, I guess either the docker image should be updated to include an xslt processor, or maybe an easier way is to add a step that installs the right tool during the setup, similarly to what I did here:
https://github.com/navit-gps/navit/blob/trunk/scripts/setup_wince.sh#L7",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,875,2019-09-18T17:50:49Z,2019-11-08T07:47:18Z,2019-11-08T07:47:18Z,MERGED,True,19,8,5,https://github.com/gefin,fix:tomtom: Make sure the tomtom_plugin and tomtom_minimal contain navit.xml,12,"['bug', 'tomtom']",https://github.com/navit-gps/navit/pull/875,https://github.com/gefin,7,https://github.com/navit-gps/navit/pull/875#issuecomment-533897253,"the circleci build Job 15587 tomtom_plugin and tomtom_minimal dont contain a navit.xml.
also the locales Path is wrong.
Closes: #823","I need help with this patch request.
How to remove the last two commits.
I was not able to add clean xslt support without affecting other platforms.
Actual knowings:
After adding xslt support to Update setup_common_requirements.sh navit.xml is built for Tomtom.
setup_tomtom_requirenments where this change should be is not called at all.
Because i was unsure i removed the change in setup_common_requirements.sh navit.xml.
Navit.xml is built without layouts. The layout-files are empty so that we need additional changes for this problem.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,875,2019-09-18T17:50:49Z,2019-11-08T07:47:18Z,2019-11-08T07:47:18Z,MERGED,True,19,8,5,https://github.com/gefin,fix:tomtom: Make sure the tomtom_plugin and tomtom_minimal contain navit.xml,12,"['bug', 'tomtom']",https://github.com/navit-gps/navit/pull/875,https://github.com/lains,8,https://github.com/navit-gps/navit/pull/875#issuecomment-533978492,"the circleci build Job 15587 tomtom_plugin and tomtom_minimal dont contain a navit.xml.
also the locales Path is wrong.
Closes: #823","Hi @gefin, the easiest way to undo your last two commits is to do a git revert on these commits.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,875,2019-09-18T17:50:49Z,2019-11-08T07:47:18Z,2019-11-08T07:47:18Z,MERGED,True,19,8,5,https://github.com/gefin,fix:tomtom: Make sure the tomtom_plugin and tomtom_minimal contain navit.xml,12,"['bug', 'tomtom']",https://github.com/navit-gps/navit/pull/875,https://github.com/lains,9,https://github.com/navit-gps/navit/pull/875#issuecomment-533979936,"the circleci build Job 15587 tomtom_plugin and tomtom_minimal dont contain a navit.xml.
also the locales Path is wrong.
Closes: #823","CircleCI seems to only call scripts/setup_common_requirements.sh.
Changing setup_common_requirements.sh will probably have side effects, so you're right, your changes probably should go into setup_tomtom_requirements.sh.
And then, I would assume that this setup_tomtom_requirements.sh should be executed by CircleCI right after running setup_common_requirements.sh (this requires adding a new line inside https://github.com/navit-gps/navit/blob/trunk/.circleci/config.yml)",True,{'THUMBS_UP': ['https://github.com/jkoan']}
navit-gps/navit,https://github.com/navit-gps/navit,875,2019-09-18T17:50:49Z,2019-11-08T07:47:18Z,2019-11-08T07:47:18Z,MERGED,True,19,8,5,https://github.com/gefin,fix:tomtom: Make sure the tomtom_plugin and tomtom_minimal contain navit.xml,12,"['bug', 'tomtom']",https://github.com/navit-gps/navit/pull/875,https://github.com/lains,10,https://github.com/navit-gps/navit/pull/875#issuecomment-535011493,"the circleci build Job 15587 tomtom_plugin and tomtom_minimal dont contain a navit.xml.
also the locales Path is wrong.
Closes: #823",Tyring to implement what I suggested here...,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,875,2019-09-18T17:50:49Z,2019-11-08T07:47:18Z,2019-11-08T07:47:18Z,MERGED,True,19,8,5,https://github.com/gefin,fix:tomtom: Make sure the tomtom_plugin and tomtom_minimal contain navit.xml,12,"['bug', 'tomtom']",https://github.com/navit-gps/navit/pull/875,https://github.com/lains,11,https://github.com/navit-gps/navit/pull/875#issuecomment-535015997,"the circleci build Job 15587 tomtom_plugin and tomtom_minimal dont contain a navit.xml.
also the locales Path is wrong.
Closes: #823","Now xslt seems to be applied... but running the whole setup_tomtom_requirements.sh seems overkill as it downloads and builds plenty of tools that are probably already in the docker image used for build.
So the really only missing step here was:
apt-get install -y xsltproc",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,875,2019-09-18T17:50:49Z,2019-11-08T07:47:18Z,2019-11-08T07:47:18Z,MERGED,True,19,8,5,https://github.com/gefin,fix:tomtom: Make sure the tomtom_plugin and tomtom_minimal contain navit.xml,12,"['bug', 'tomtom']",https://github.com/navit-gps/navit/pull/875,https://github.com/lains,12,https://github.com/navit-gps/navit/pull/875#issuecomment-535018296,"the circleci build Job 15587 tomtom_plugin and tomtom_minimal dont contain a navit.xml.
also the locales Path is wrong.
Closes: #823","Moving the xslt install command inside circleci (this avoids running the full https://github.com/navit-gps/navit/blob/trunk/scripts/setup_tomtom_requirements.sh).
This lines-up the way circleci builds tomtom with what is done for Linux or Windows for example (where a bunch of apt-get install commands are run inside the environment preparation step)
I'm also keeping apt-get install -y xsltproc inside setup_tomtom_requirements.sh as well because I think it should also be installed when bringing up an environment to build for tomtom outside of CircleCI.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,875,2019-09-18T17:50:49Z,2019-11-08T07:47:18Z,2019-11-08T07:47:18Z,MERGED,True,19,8,5,https://github.com/gefin,fix:tomtom: Make sure the tomtom_plugin and tomtom_minimal contain navit.xml,12,"['bug', 'tomtom']",https://github.com/navit-gps/navit/pull/875,https://github.com/gefin,13,https://github.com/navit-gps/navit/pull/875#issuecomment-535074797,"the circleci build Job 15587 tomtom_plugin and tomtom_minimal dont contain a navit.xml.
also the locales Path is wrong.
Closes: #823","Now the zip contain a good navit.xml for tomtom.
Also the layout files like navit_layout_car.xml are in the zip.
The problem now is that navit_layout_car.xml are empty and navit.xml dont include it.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,875,2019-09-18T17:50:49Z,2019-11-08T07:47:18Z,2019-11-08T07:47:18Z,MERGED,True,19,8,5,https://github.com/gefin,fix:tomtom: Make sure the tomtom_plugin and tomtom_minimal contain navit.xml,12,"['bug', 'tomtom']",https://github.com/navit-gps/navit/pull/875,https://github.com/lains,14,https://github.com/navit-gps/navit/pull/875#issuecomment-535325731,"the circleci build Job 15587 tomtom_plugin and tomtom_minimal dont contain a navit.xml.
also the locales Path is wrong.
Closes: #823","I give it a try...
XLST format has always been a challenge for me, but I think this should work on both included and stand-alone layout definitions.
I also updated the part of the script that copies over of XML config giles, it is now more specific which will hopefully avoid copying over non-related xml files.
@gefin, does this work better?
I guess you have a tomtom target to test this on. I am interested in knowing if the split of layouts into stand alone XML (that I developped one year ago) works on that platform. At least, it seems I broke it until now... sorry!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,875,2019-09-18T17:50:49Z,2019-11-08T07:47:18Z,2019-11-08T07:47:18Z,MERGED,True,19,8,5,https://github.com/gefin,fix:tomtom: Make sure the tomtom_plugin and tomtom_minimal contain navit.xml,12,"['bug', 'tomtom']",https://github.com/navit-gps/navit/pull/875,https://github.com/gefin,15,https://github.com/navit-gps/navit/pull/875#issuecomment-535330950,"the circleci build Job 15587 tomtom_plugin and tomtom_minimal dont contain a navit.xml.
also the locales Path is wrong.
Closes: #823","@lains Thank you.
The Layouts work now well on the real device.
Some gui internal icons are a little to big, but i think i am able to change this.
Need some tests.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,875,2019-09-18T17:50:49Z,2019-11-08T07:47:18Z,2019-11-08T07:47:18Z,MERGED,True,19,8,5,https://github.com/gefin,fix:tomtom: Make sure the tomtom_plugin and tomtom_minimal contain navit.xml,12,"['bug', 'tomtom']",https://github.com/navit-gps/navit/pull/875,https://github.com/gefin,16,https://github.com/navit-gps/navit/pull/875#issuecomment-535564950,"the circleci build Job 15587 tomtom_plugin and tomtom_minimal dont contain a navit.xml.
also the locales Path is wrong.
Closes: #823","Today real drive worked good.
I changed some lines in navit.xml because i fond no setting in the XSLT.
So the GUI internal fit better to screen:
from
<gui type=""internal"" enabled=""yes"" >

to
<gui type=""internal"" enabled=""yes"" font_size=""250"" icon_l=""48"" >

Also added 2 OSD zoom buttons:
 <osd enabled=""yes""  type=""button"" w=""60"" h=""60"" x=""-60"" y=""50"" command=""zoom_in()"" src=""gui_zoom_in.png""/>                                    
 <osd enabled=""yes""  type=""button"" w=""60"" h=""60"" x=""-60"" y=""100"" command=""zoom_out()"" src=""gui_zoom_out.png""/> 

is this possible in the XSLT?
Note : edited by @pgrandin  : I added ``` around your xml code so that it would show up",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,875,2019-09-18T17:50:49Z,2019-11-08T07:47:18Z,2019-11-08T07:47:18Z,MERGED,True,19,8,5,https://github.com/gefin,fix:tomtom: Make sure the tomtom_plugin and tomtom_minimal contain navit.xml,12,"['bug', 'tomtom']",https://github.com/navit-gps/navit/pull/875,https://github.com/mvglasow,17,https://github.com/navit-gps/navit/pull/875#issuecomment-535693930,"the circleci build Job 15587 tomtom_plugin and tomtom_minimal dont contain a navit.xml.
also the locales Path is wrong.
Closes: #823","@gefin re zoom buttons, have a look at #737, where we implemented a common OSD layout across all platforms. Tomtom was the only one left out back then because the build was broken and we had no way to verify things worked as intended. The (IMHO) perfect solution would be to apply the changes from #737 to Tomtom as well, with the necessary modifications—preferably by someone who knows their way around that particular build and can test on a real device :-)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,875,2019-09-18T17:50:49Z,2019-11-08T07:47:18Z,2019-11-08T07:47:18Z,MERGED,True,19,8,5,https://github.com/gefin,fix:tomtom: Make sure the tomtom_plugin and tomtom_minimal contain navit.xml,12,"['bug', 'tomtom']",https://github.com/navit-gps/navit/pull/875,https://github.com/mvglasow,18,https://github.com/navit-gps/navit/pull/875#issuecomment-535695370,"the circleci build Job 15587 tomtom_plugin and tomtom_minimal dont contain a navit.xml.
also the locales Path is wrong.
Closes: #823","correction to the above: as I infer from the PR, we did implement this on Tomtom in the hope that it would work, as we couldn’t test it back then…",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,875,2019-09-18T17:50:49Z,2019-11-08T07:47:18Z,2019-11-08T07:47:18Z,MERGED,True,19,8,5,https://github.com/gefin,fix:tomtom: Make sure the tomtom_plugin and tomtom_minimal contain navit.xml,12,"['bug', 'tomtom']",https://github.com/navit-gps/navit/pull/875,https://github.com/gefin,19,https://github.com/navit-gps/navit/pull/875#issuecomment-535812347,"the circleci build Job 15587 tomtom_plugin and tomtom_minimal dont contain a navit.xml.
also the locales Path is wrong.
Closes: #823",I can test on TT 730 (480x272).,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,875,2019-09-18T17:50:49Z,2019-11-08T07:47:18Z,2019-11-08T07:47:18Z,MERGED,True,19,8,5,https://github.com/gefin,fix:tomtom: Make sure the tomtom_plugin and tomtom_minimal contain navit.xml,12,"['bug', 'tomtom']",https://github.com/navit-gps/navit/pull/875,https://github.com/gefin,20,https://github.com/navit-gps/navit/pull/875#issuecomment-536004094,"the circleci build Job 15587 tomtom_plugin and tomtom_minimal dont contain a navit.xml.
also the locales Path is wrong.
Closes: #823","@mvglasow just checked against #737 and it look like osd_minimum is included in tomtom.xslt
After build navit.xml contain no osd lines .
The other Question is how to add icon and font size.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,875,2019-09-18T17:50:49Z,2019-11-08T07:47:18Z,2019-11-08T07:47:18Z,MERGED,True,19,8,5,https://github.com/gefin,fix:tomtom: Make sure the tomtom_plugin and tomtom_minimal contain navit.xml,12,"['bug', 'tomtom']",https://github.com/navit-gps/navit/pull/875,https://github.com/metalstrolch,21,https://github.com/navit-gps/navit/pull/875#issuecomment-536015630,"the circleci build Job 15587 tomtom_plugin and tomtom_minimal dont contain a navit.xml.
also the locales Path is wrong.
Closes: #823","You can have a look at the ""sailfish"" xslt's. I think they basically do what you need. You can copy from them.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,875,2019-09-18T17:50:49Z,2019-11-08T07:47:18Z,2019-11-08T07:47:18Z,MERGED,True,19,8,5,https://github.com/gefin,fix:tomtom: Make sure the tomtom_plugin and tomtom_minimal contain navit.xml,12,"['bug', 'tomtom']",https://github.com/navit-gps/navit/pull/875,https://github.com/mvglasow,22,https://github.com/navit-gps/navit/pull/875#issuecomment-536055045,"the circleci build Job 15587 tomtom_plugin and tomtom_minimal dont contain a navit.xml.
also the locales Path is wrong.
Closes: #823","If navit.xml contains no OSD lines, that looks like something has gone wrong. Do the other settings from tomtom.xslt take effect? If not, that would be a sign the whole XSLT is not getting applied. One way or the other, you might want to look out for warning/error messages related to XML processing.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,875,2019-09-18T17:50:49Z,2019-11-08T07:47:18Z,2019-11-08T07:47:18Z,MERGED,True,19,8,5,https://github.com/gefin,fix:tomtom: Make sure the tomtom_plugin and tomtom_minimal contain navit.xml,12,"['bug', 'tomtom']",https://github.com/navit-gps/navit/pull/875,https://github.com/gefin,23,https://github.com/navit-gps/navit/pull/875#issuecomment-536156291,"the circleci build Job 15587 tomtom_plugin and tomtom_minimal dont contain a navit.xml.
also the locales Path is wrong.
Closes: #823","I dont see errors or warnings.
The lines for gps source, map storage,  graphic, geometry some other things are applied.
If i change something bad i see messages.
The sailfish configuration is to different for me to see where the problem is.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,875,2019-09-18T17:50:49Z,2019-11-08T07:47:18Z,2019-11-08T07:47:18Z,MERGED,True,19,8,5,https://github.com/gefin,fix:tomtom: Make sure the tomtom_plugin and tomtom_minimal contain navit.xml,12,"['bug', 'tomtom']",https://github.com/navit-gps/navit/pull/875,https://github.com/gefin,24,https://github.com/navit-gps/navit/pull/875#issuecomment-537113219,"the circleci build Job 15587 tomtom_plugin and tomtom_minimal dont contain a navit.xml.
also the locales Path is wrong.
Closes: #823","My changes from tomtom.xslt dont work.
With "" copy-of "" i get osd buttons into the xml, but i get them not enabled.
I need help with tomtom.xslt",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,875,2019-09-18T17:50:49Z,2019-11-08T07:47:18Z,2019-11-08T07:47:18Z,MERGED,True,19,8,5,https://github.com/gefin,fix:tomtom: Make sure the tomtom_plugin and tomtom_minimal contain navit.xml,12,"['bug', 'tomtom']",https://github.com/navit-gps/navit/pull/875,https://github.com/jkoan,25,https://github.com/navit-gps/navit/pull/875#issuecomment-542519131,"the circleci build Job 15587 tomtom_plugin and tomtom_minimal dont contain a navit.xml.
also the locales Path is wrong.
Closes: #823",My suggestion would be that we only need one configuration regarding the display size. This can be achieved by using relative sizes within osd for example. This will simplify things. Also I would like to provide another pull request wich also tryes to fix #823 but with a cpack approach. If this is okay for you. Then we can decide which solution is better.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,875,2019-09-18T17:50:49Z,2019-11-08T07:47:18Z,2019-11-08T07:47:18Z,MERGED,True,19,8,5,https://github.com/gefin,fix:tomtom: Make sure the tomtom_plugin and tomtom_minimal contain navit.xml,12,"['bug', 'tomtom']",https://github.com/navit-gps/navit/pull/875,https://github.com/gefin,26,https://github.com/navit-gps/navit/pull/875#issuecomment-542721709,"the circleci build Job 15587 tomtom_plugin and tomtom_minimal dont contain a navit.xml.
also the locales Path is wrong.
Closes: #823",Yes it is ok for me. We have only two relevant resolutions. 480x272 and 320x240,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,875,2019-09-18T17:50:49Z,2019-11-08T07:47:18Z,2019-11-08T07:47:18Z,MERGED,True,19,8,5,https://github.com/gefin,fix:tomtom: Make sure the tomtom_plugin and tomtom_minimal contain navit.xml,12,"['bug', 'tomtom']",https://github.com/navit-gps/navit/pull/875,https://github.com/jkoan,27,https://github.com/navit-gps/navit/pull/875#issuecomment-551422310,"the circleci build Job 15587 tomtom_plugin and tomtom_minimal dont contain a navit.xml.
also the locales Path is wrong.
Closes: #823","Will merge this now, and correct everything else in another PR since there are more than only on thing to work on. THX for your work",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,876,2019-09-19T13:10:47Z,2019-09-19T13:26:00Z,2019-09-29T06:33:31Z,CLOSED,False,2239,2443,43,https://github.com/jandegr,Fix:Android:64bit and cleanup,1,[],https://github.com/navit-gps/navit/pull/876,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/876,"A cleaned version as a followup on
#863
Many more fixes to do but I have to draw a line from time to time","A cleaned version as a followup on
#863
Many more fixes to do but I have to draw a line from time to time",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,876,2019-09-19T13:10:47Z,2019-09-19T13:26:00Z,2019-09-29T06:33:31Z,CLOSED,False,2239,2443,43,https://github.com/jandegr,Fix:Android:64bit and cleanup,1,[],https://github.com/navit-gps/navit/pull/876,https://github.com/jandegr,2,https://github.com/navit-gps/navit/pull/876#issuecomment-533129519,"A cleaned version as a followup on
#863
Many more fixes to do but I have to draw a line from time to time","ouch, will open a new one",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,877,2019-09-19T13:47:20Z,2019-09-26T19:43:51Z,2019-10-29T17:24:49Z,MERGED,True,2715,2847,47,https://github.com/jandegr,Fix:android:64 bit and cleanup2,9,['android'],https://github.com/navit-gps/navit/pull/877,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/877,"A cleaned version as a followup on
#863
Many more fixes to do but I have to draw a line from time to time
after this you may have to set autobrief on doxygen if not already so
If the JAVADOC_AUTOBRIEF is set to YES then doxygen will interpret the first line (until the first dot) of a JavaDoc-style comment as the brief description.
fixes #828
fixes #832
fixes #550","A cleaned version as a followup on
#863
Many more fixes to do but I have to draw a line from time to time
after this you may have to set autobrief on doxygen if not already so
If the JAVADOC_AUTOBRIEF is set to YES then doxygen will interpret the first line (until the first dot) of a JavaDoc-style comment as the brief description.
fixes #828
fixes #832
fixes #550",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,877,2019-09-19T13:47:20Z,2019-09-26T19:43:51Z,2019-10-29T17:24:49Z,MERGED,True,2715,2847,47,https://github.com/jandegr,Fix:android:64 bit and cleanup2,9,['android'],https://github.com/navit-gps/navit/pull/877,https://github.com/jandegr,2,https://github.com/navit-gps/navit/pull/877#issuecomment-533852792,"A cleaned version as a followup on
#863
Many more fixes to do but I have to draw a line from time to time
after this you may have to set autobrief on doxygen if not already so
If the JAVADOC_AUTOBRIEF is set to YES then doxygen will interpret the first line (until the first dot) of a JavaDoc-style comment as the brief description.
fixes #828
fixes #832
fixes #550",a test on a MI A2  with STF,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,877,2019-09-19T13:47:20Z,2019-09-26T19:43:51Z,2019-10-29T17:24:49Z,MERGED,True,2715,2847,47,https://github.com/jandegr,Fix:android:64 bit and cleanup2,9,['android'],https://github.com/navit-gps/navit/pull/877,https://github.com/jandegr,3,https://github.com/navit-gps/navit/pull/877#issuecomment-534604544,"A cleaned version as a followup on
#863
Many more fixes to do but I have to draw a line from time to time
after this you may have to set autobrief on doxygen if not already so
If the JAVADOC_AUTOBRIEF is set to YES then doxygen will interpret the first line (until the first dot) of a JavaDoc-style comment as the brief description.
fixes #828
fixes #832
fixes #550","Hi,
Solved the merge conflict and included the ""send geo intent"" part of #812 all credits to @lains
STF @pgrandin is quite slow right now, so the screenshot is from a local jellybean device this time,
showing the selection popup after launching a geo intent from Navit.
@lains sending an intent works flawless, I just had the impression smth in #812 is only 95% identical to #794 but I could not resist testing it. Manifest already registers Navit as a receiver but obviously that won't work yet since the code itself is not included, but I tweaked the sending part so that it requires more than one receiving app to prevent sent intents from just being looped back to Navit. What are your thoughts about all of this ?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,877,2019-09-19T13:47:20Z,2019-09-26T19:43:51Z,2019-10-29T17:24:49Z,MERGED,True,2715,2847,47,https://github.com/jandegr,Fix:android:64 bit and cleanup2,9,['android'],https://github.com/navit-gps/navit/pull/877,https://github.com/lains,4,https://github.com/navit-gps/navit/pull/877#issuecomment-534893884,"A cleaned version as a followup on
#863
Many more fixes to do but I have to draw a line from time to time
after this you may have to set autobrief on doxygen if not already so
If the JAVADOC_AUTOBRIEF is set to YES then doxygen will interpret the first line (until the first dot) of a JavaDoc-style comment as the brief description.
fixes #828
fixes #832
fixes #550","@lains sending an intent works flawless, I just had the impression smth in #812 is only 95% identical to #794 but I could not resist testing it. Manifest already registers Navit as a receiver but obviously that won't work yet since the code itself is not included, but I tweaked the sending part so that it requires more than one receiving app to prevent sent intents from just being looped back to Navit. What are your thoughts about all of this ?

@jandegr, yes you're perfectly right. #794 (now merged) was already containing features that were re-used for #812.
I am planning to merge #812 soon, so that you can rebase on trunk... and you're right also that looping geo: view intents back to navit is not a good thing...",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,877,2019-09-19T13:47:20Z,2019-09-26T19:43:51Z,2019-10-29T17:24:49Z,MERGED,True,2715,2847,47,https://github.com/jandegr,Fix:android:64 bit and cleanup2,9,['android'],https://github.com/navit-gps/navit/pull/877,https://github.com/lains,5,https://github.com/navit-gps/navit/pull/877#issuecomment-534900270,"A cleaned version as a followup on
#863
Many more fixes to do but I have to draw a line from time to time
after this you may have to set autobrief on doxygen if not already so
If the JAVADOC_AUTOBRIEF is set to YES then doxygen will interpret the first line (until the first dot) of a JavaDoc-style comment as the brief description.
fixes #828
fixes #832
fixes #550","@jandegr,

shall #812 be squash-merged and you rebase on trunk?
or do you want to submit #877 containing all changes

I'd rather got for option 1, since option 2 maybe not as good because in the history, both features will be mixed, which makes it more difficult to debug.
#812 is ready for merge to trunk, and it seems you already reviewed the code, so if that PR is OK for you, please post me review comment on #812 and I'll merge.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,877,2019-09-19T13:47:20Z,2019-09-26T19:43:51Z,2019-10-29T17:24:49Z,MERGED,True,2715,2847,47,https://github.com/jandegr,Fix:android:64 bit and cleanup2,9,['android'],https://github.com/navit-gps/navit/pull/877,https://github.com/jandegr,6,https://github.com/navit-gps/navit/pull/877#issuecomment-534931826,"A cleaned version as a followup on
#863
Many more fixes to do but I have to draw a line from time to time
after this you may have to set autobrief on doxygen if not already so
If the JAVADOC_AUTOBRIEF is set to YES then doxygen will interpret the first line (until the first dot) of a JavaDoc-style comment as the brief description.
fixes #828
fixes #832
fixes #550","Hi @lains
You're completely free to handle it as you want, this pr just shows how I think things can be handled and I doubt any of it will make it into trunk as such. In the case of the geo intent sending I just showed it in advance instead of waiting until it was committed.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,877,2019-09-19T13:47:20Z,2019-09-26T19:43:51Z,2019-10-29T17:24:49Z,MERGED,True,2715,2847,47,https://github.com/jandegr,Fix:android:64 bit and cleanup2,9,['android'],https://github.com/navit-gps/navit/pull/877,https://github.com/jandegr,7,https://github.com/navit-gps/navit/pull/877#issuecomment-535448916,"A cleaned version as a followup on
#863
Many more fixes to do but I have to draw a line from time to time
after this you may have to set autobrief on doxygen if not already so
If the JAVADOC_AUTOBRIEF is set to YES then doxygen will interpret the first line (until the first dot) of a JavaDoc-style comment as the brief description.
fixes #828
fixes #832
fixes #550","Hi,
By now I started reworking other stuff so I did a final and last commit on this PR.
Removes receiving geo intents, that was very interesting and gave a preview of what issues to expect so I limited it to sending geo intents for now (credit to @lains).
And some last minor cleanup.
Known issues

colors in the filebrowseractivity not ok on android 2.3 as reported by @jkoan
fullscreen to be reviewed
in landscape mode the native keyboard leaves little room for gui_internal, removing the numerical bar could improve things a bit.

The system bars become solid instead of transparent while dragging the map, a limitation of graphics not being informed by navit that it changes from mapview to gui_internal, subject to improvement.
Reanimating the pedestrian plugin needs more work.
Several other improvements and fixes of mostly longstanding issues were not handled and could be done in smaller PR's.
Testing was done

locally on 4 devices and 3 AVD's
2 devices on Kobiton
2 devices on STF @pgrandin THX!
several tests done by @jkoan THX!

Fixes all 327 of https://17312-30791823-gh.circle-artifacts.com/0/reports/checkstyleMain.html
Bumps it from B to A- on codefactor, but at the rate new issues are created that won't last long.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,878,2019-09-20T07:24:39Z,2019-09-20T07:28:47Z,2019-09-25T20:43:19Z,MERGED,True,5,23,1,https://github.com/metalstrolch,fix:graphics/qt5; Allow to draw transparent polygons,1,[],https://github.com/navit-gps/navit/pull/878,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/878,"There is a ""misconception"" in qt5 graphics about how to draw transparent stuff causing transparent items on the map to not correctly work. This PR changes qt5 graphics to force-clear overlays on starting to draw them instead of force clearing the shape of a transparent item. While this imposes the limitation that the content of an overlay cannot be drawn in multiple runs, it allows to draw transparent stuff on the map.
Luckily I don't know of any overlay item yet that is not drawn in one run. So this seems to work OK.","There is a ""misconception"" in qt5 graphics about how to draw transparent stuff causing transparent items on the map to not correctly work. This PR changes qt5 graphics to force-clear overlays on starting to draw them instead of force clearing the shape of a transparent item. While this imposes the limitation that the content of an overlay cannot be drawn in multiple runs, it allows to draw transparent stuff on the map.
Luckily I don't know of any overlay item yet that is not drawn in one run. So this seems to work OK.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,878,2019-09-20T07:24:39Z,2019-09-20T07:28:47Z,2019-09-25T20:43:19Z,MERGED,True,5,23,1,https://github.com/metalstrolch,fix:graphics/qt5; Allow to draw transparent polygons,1,[],https://github.com/navit-gps/navit/pull/878,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/878#issuecomment-533442453,"There is a ""misconception"" in qt5 graphics about how to draw transparent stuff causing transparent items on the map to not correctly work. This PR changes qt5 graphics to force-clear overlays on starting to draw them instead of force clearing the shape of a transparent item. While this imposes the limitation that the content of an overlay cannot be drawn in multiple runs, it allows to draw transparent stuff on the map.
Luckily I don't know of any overlay item yet that is not drawn in one run. So this seems to work OK.","Immediately merging this as only relevant for qt5 graphics. Blame me on new bugs imposed by it.
Btw. I strongly need to find out how Navit initially intended to clear the overlays, or if and when it expects the overlay to be clear. No doc about it, so still guessing. Assume the background_gc callback of the graphics has something to do with that.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,879,2019-09-20T07:43:19Z,2019-09-25T20:42:26Z,2019-09-25T20:42:36Z,MERGED,True,38,34,1,https://github.com/metalstrolch,enhancement:layout_car:use transparency to draw some map features,5,[],https://github.com/navit-gps/navit/pull/879,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/879,"With the introduction of the multipolygon code we now have all the nice landuses in the map. However, in OSM there are some map features that are not mapped as multipolygon but just ""above"" the other landuses. Like poly_zoo, poly_theme_park or poly_airfield.
Current configuration causes them to be hidden by the landuses, as these are drawn after the above mentioned. OSM's Mapnik style solves the problem by drawing those feature transparent above the landuses.
This pull request does so for some map features as well causing the map to look way better.
If transparent drawing is not supported by the platform, this causes the mentioned polys to be drawn above the landuses, showing them, eventually hiding some landuse details underneath. But this looks even better than before too.
NOTE: Transparent drawing is known to work on: Qt5 (sailfish) and gtk.
NOTE: Transparent drawing is known NOT to work on SDL
Dont't know for all the others. Sombody might want to check Android? Remember #852 on comparing screenshots though.","With the introduction of the multipolygon code we now have all the nice landuses in the map. However, in OSM there are some map features that are not mapped as multipolygon but just ""above"" the other landuses. Like poly_zoo, poly_theme_park or poly_airfield.
Current configuration causes them to be hidden by the landuses, as these are drawn after the above mentioned. OSM's Mapnik style solves the problem by drawing those feature transparent above the landuses.
This pull request does so for some map features as well causing the map to look way better.
If transparent drawing is not supported by the platform, this causes the mentioned polys to be drawn above the landuses, showing them, eventually hiding some landuse details underneath. But this looks even better than before too.
NOTE: Transparent drawing is known to work on: Qt5 (sailfish) and gtk.
NOTE: Transparent drawing is known NOT to work on SDL
Dont't know for all the others. Sombody might want to check Android? Remember #852 on comparing screenshots though.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,879,2019-09-20T07:43:19Z,2019-09-25T20:42:26Z,2019-09-25T20:42:36Z,MERGED,True,38,34,1,https://github.com/metalstrolch,enhancement:layout_car:use transparency to draw some map features,5,[],https://github.com/navit-gps/navit/pull/879,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/879#issuecomment-533454778,"With the introduction of the multipolygon code we now have all the nice landuses in the map. However, in OSM there are some map features that are not mapped as multipolygon but just ""above"" the other landuses. Like poly_zoo, poly_theme_park or poly_airfield.
Current configuration causes them to be hidden by the landuses, as these are drawn after the above mentioned. OSM's Mapnik style solves the problem by drawing those feature transparent above the landuses.
This pull request does so for some map features as well causing the map to look way better.
If transparent drawing is not supported by the platform, this causes the mentioned polys to be drawn above the landuses, showing them, eventually hiding some landuse details underneath. But this looks even better than before too.
NOTE: Transparent drawing is known to work on: Qt5 (sailfish) and gtk.
NOTE: Transparent drawing is known NOT to work on SDL
Dont't know for all the others. Sombody might want to check Android? Remember #852 on comparing screenshots though.","See the difference on the small snippet near Ammersee, Munich:


Note the airport on the upper right corner, and the ""zoo"" in the center. The zoo is drawn as a transparent outline only, the Airport is tinted by overlaying the shape transparent.",True,{'THUMBS_UP': ['https://github.com/jkoan']}
navit-gps/navit,https://github.com/navit-gps/navit,879,2019-09-20T07:43:19Z,2019-09-25T20:42:26Z,2019-09-25T20:42:36Z,MERGED,True,38,34,1,https://github.com/metalstrolch,enhancement:layout_car:use transparency to draw some map features,5,[],https://github.com/navit-gps/navit/pull/879,https://github.com/jkoan,3,https://github.com/navit-gps/navit/pull/879#issuecomment-533594615,"With the introduction of the multipolygon code we now have all the nice landuses in the map. However, in OSM there are some map features that are not mapped as multipolygon but just ""above"" the other landuses. Like poly_zoo, poly_theme_park or poly_airfield.
Current configuration causes them to be hidden by the landuses, as these are drawn after the above mentioned. OSM's Mapnik style solves the problem by drawing those feature transparent above the landuses.
This pull request does so for some map features as well causing the map to look way better.
If transparent drawing is not supported by the platform, this causes the mentioned polys to be drawn above the landuses, showing them, eventually hiding some landuse details underneath. But this looks even better than before too.
NOTE: Transparent drawing is known to work on: Qt5 (sailfish) and gtk.
NOTE: Transparent drawing is known NOT to work on SDL
Dont't know for all the others. Sombody might want to check Android? Remember #852 on comparing screenshots though.",I did realignment and diffed the images. The Purple paths are where the PR makes changes:,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,879,2019-09-20T07:43:19Z,2019-09-25T20:42:26Z,2019-09-25T20:42:36Z,MERGED,True,38,34,1,https://github.com/metalstrolch,enhancement:layout_car:use transparency to draw some map features,5,[],https://github.com/navit-gps/navit/pull/879,https://github.com/metalstrolch,4,https://github.com/navit-gps/navit/pull/879#issuecomment-533649953,"With the introduction of the multipolygon code we now have all the nice landuses in the map. However, in OSM there are some map features that are not mapped as multipolygon but just ""above"" the other landuses. Like poly_zoo, poly_theme_park or poly_airfield.
Current configuration causes them to be hidden by the landuses, as these are drawn after the above mentioned. OSM's Mapnik style solves the problem by drawing those feature transparent above the landuses.
This pull request does so for some map features as well causing the map to look way better.
If transparent drawing is not supported by the platform, this causes the mentioned polys to be drawn above the landuses, showing them, eventually hiding some landuse details underneath. But this looks even better than before too.
NOTE: Transparent drawing is known to work on: Qt5 (sailfish) and gtk.
NOTE: Transparent drawing is known NOT to work on SDL
Dont't know for all the others. Sombody might want to check Android? Remember #852 on comparing screenshots though.","Wow thats cool. I was too lazy to do show it like that.
Most changes are due to giving meadows a lighter color. Nothing unexpected.
Android anyone?
Do we like that?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,879,2019-09-20T07:43:19Z,2019-09-25T20:42:26Z,2019-09-25T20:42:36Z,MERGED,True,38,34,1,https://github.com/metalstrolch,enhancement:layout_car:use transparency to draw some map features,5,[],https://github.com/navit-gps/navit/pull/879,https://github.com/metalstrolch,5,https://github.com/navit-gps/navit/pull/879#issuecomment-534106301,"With the introduction of the multipolygon code we now have all the nice landuses in the map. However, in OSM there are some map features that are not mapped as multipolygon but just ""above"" the other landuses. Like poly_zoo, poly_theme_park or poly_airfield.
Current configuration causes them to be hidden by the landuses, as these are drawn after the above mentioned. OSM's Mapnik style solves the problem by drawing those feature transparent above the landuses.
This pull request does so for some map features as well causing the map to look way better.
If transparent drawing is not supported by the platform, this causes the mentioned polys to be drawn above the landuses, showing them, eventually hiding some landuse details underneath. But this looks even better than before too.
NOTE: Transparent drawing is known to work on: Qt5 (sailfish) and gtk.
NOTE: Transparent drawing is known NOT to work on SDL
Dont't know for all the others. Sombody might want to check Android? Remember #852 on comparing screenshots though.","If no objections going to merge this at Fr, 27th of September.
I like it.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,879,2019-09-20T07:43:19Z,2019-09-25T20:42:26Z,2019-09-25T20:42:36Z,MERGED,True,38,34,1,https://github.com/metalstrolch,enhancement:layout_car:use transparency to draw some map features,5,[],https://github.com/navit-gps/navit/pull/879,https://github.com/metalstrolch,6,https://github.com/navit-gps/navit/pull/879#issuecomment-535211672,"With the introduction of the multipolygon code we now have all the nice landuses in the map. However, in OSM there are some map features that are not mapped as multipolygon but just ""above"" the other landuses. Like poly_zoo, poly_theme_park or poly_airfield.
Current configuration causes them to be hidden by the landuses, as these are drawn after the above mentioned. OSM's Mapnik style solves the problem by drawing those feature transparent above the landuses.
This pull request does so for some map features as well causing the map to look way better.
If transparent drawing is not supported by the platform, this causes the mentioned polys to be drawn above the landuses, showing them, eventually hiding some landuse details underneath. But this looks even better than before too.
NOTE: Transparent drawing is known to work on: Qt5 (sailfish) and gtk.
NOTE: Transparent drawing is known NOT to work on SDL
Dont't know for all the others. Sombody might want to check Android? Remember #852 on comparing screenshots though.","OK, merging this even if it's not friday yet",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,880,2019-09-22T04:30:05Z,2019-09-22T19:19:04Z,2019-09-22T19:19:08Z,MERGED,True,202,0,2,https://github.com/aerostitch,update:doc:Migrating linux development and dependencies from the old wiki,4,['doc'],https://github.com/navit-gps/navit/pull/880,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/880,"Migrating:
https://wiki.navit-project.org/index.php/Linux_development
https://wiki.navit-project.org/index.php/Dependencies
https://wiki.navit-project.org/index.php/OpenSuse_dependencies
https://wiki.navit-project.org/index.php/Gentoo_dependencies
https://wiki.navit-project.org/index.php/Debian_dependencies
https://wiki.navit-project.org/index.php/Ubuntu_dependencies
https://wiki.navit-project.org/index.php/Fedora_dependencies
I copy/pasted those making very small edits. They probably do need more than that but the migration phase is done and it'll be easier to work on further enhancements when in the repo.","Migrating:
https://wiki.navit-project.org/index.php/Linux_development
https://wiki.navit-project.org/index.php/Dependencies
https://wiki.navit-project.org/index.php/OpenSuse_dependencies
https://wiki.navit-project.org/index.php/Gentoo_dependencies
https://wiki.navit-project.org/index.php/Debian_dependencies
https://wiki.navit-project.org/index.php/Ubuntu_dependencies
https://wiki.navit-project.org/index.php/Fedora_dependencies
I copy/pasted those making very small edits. They probably do need more than that but the migration phase is done and it'll be easier to work on further enhancements when in the repo.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,881,2019-09-22T16:11:21Z,2019-09-22T18:11:26Z,2019-09-22T18:11:27Z,CLOSED,False,1,0,1,https://github.com/gefin,Add xslt support,1,[],https://github.com/navit-gps/navit/pull/881,https://github.com/gefin,1,https://github.com/navit-gps/navit/pull/881,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,881,2019-09-22T16:11:21Z,2019-09-22T18:11:26Z,2019-09-22T18:11:27Z,CLOSED,False,1,0,1,https://github.com/gefin,Add xslt support,1,[],https://github.com/navit-gps/navit/pull/881,https://github.com/gefin,2,https://github.com/navit-gps/navit/pull/881#issuecomment-533898362,,"looks like
scripts/setup_tomtom_requirements.sh
is not used by circleci.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,881,2019-09-22T16:11:21Z,2019-09-22T18:11:26Z,2019-09-22T18:11:27Z,CLOSED,False,1,0,1,https://github.com/gefin,Add xslt support,1,[],https://github.com/navit-gps/navit/pull/881,https://github.com/gefin,3,https://github.com/navit-gps/navit/pull/881#issuecomment-533904364,,"I close this request because it should be a addition to Pull #875.
To make things not so complicated i asked there for help.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,882,2019-09-22T19:32:44Z,2019-09-22T19:42:26Z,2019-09-22T19:42:30Z,CLOSED,False,3,2,1,https://github.com/aerostitch,update:graphics:Avoid declaring variables if count < 2 in graphics_draw_polyline_as_polygon - minor,1,[],https://github.com/navit-gps/navit/pull/882,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/882,"When working on something else I realized that we do initialize some variables for nothing when count < 2 in that function.
So this is just to move the check of count before we start to allocate some memory.","When working on something else I realized that we do initialize some variables for nothing when count < 2 in that function.
So this is just to move the check of count before we start to allocate some memory.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,883,2019-09-22T20:52:15Z,2019-09-23T03:40:50Z,2019-09-23T03:40:54Z,MERGED,True,946,35,6,https://github.com/aerostitch,"add:doc: Migrate MacOS, Windows and WinCE Development pages to readthedocs",5,[],https://github.com/navit-gps/navit/pull/883,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/883,"Migrating
https://wiki.navit-project.org/index.php/MacOS_development
https://wiki.navit-project.org/index.php/WinCE_development
https://wiki.navit-project.org/index.php/Windows_development
And fixing some formatting.","Migrating
https://wiki.navit-project.org/index.php/MacOS_development
https://wiki.navit-project.org/index.php/WinCE_development
https://wiki.navit-project.org/index.php/Windows_development
And fixing some formatting.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,884,2019-09-23T15:20:07Z,2019-09-25T19:52:56Z,2019-09-30T15:07:28Z,MERGED,True,250,46,12,https://github.com/metalstrolch,fix/enhancement:graphics/layout:get default icon size from layout + draw tunnels transparent + mark oneway streets,10,['enhancement'],https://github.com/navit-gps/navit/pull/884,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/884,"This pull request adds the possibility to globally set a default for icon size of a layout.
You can now give ""icon_h"" and ""icon_w"" properties in ""layout"" tag. This causes navit to not use the real size of an icon but to scale it to have the requested size. Guessing prescaled icons (the name_w_h.png's of course works. Default size of 22x22px which is the default size hint on most of the svg's is used. This fixes #819.
This pull request adds the property ""underground_alpha"" to the ""graphics"" tag giving the alpha value to use as transparency if ways are flagged with AF_UNDERGROUND. This effectively renders tunnels in transparent.
This pull request adds a ""oneway"" tag to itemgras in layouts. Together with the enhancements of the ""arrows"" itemgra used for drawing the route graph one can print nice arrows on oneway roads.","This pull request adds the possibility to globally set a default for icon size of a layout.
You can now give ""icon_h"" and ""icon_w"" properties in ""layout"" tag. This causes navit to not use the real size of an icon but to scale it to have the requested size. Guessing prescaled icons (the name_w_h.png's of course works. Default size of 22x22px which is the default size hint on most of the svg's is used. This fixes #819.
This pull request adds the property ""underground_alpha"" to the ""graphics"" tag giving the alpha value to use as transparency if ways are flagged with AF_UNDERGROUND. This effectively renders tunnels in transparent.
This pull request adds a ""oneway"" tag to itemgras in layouts. Together with the enhancements of the ""arrows"" itemgra used for drawing the route graph one can print nice arrows on oneway roads.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,884,2019-09-23T15:20:07Z,2019-09-25T19:52:56Z,2019-09-30T15:07:28Z,MERGED,True,250,46,12,https://github.com/metalstrolch,fix/enhancement:graphics/layout:get default icon size from layout + draw tunnels transparent + mark oneway streets,10,['enhancement'],https://github.com/navit-gps/navit/pull/884,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/884#issuecomment-534155106,"This pull request adds the possibility to globally set a default for icon size of a layout.
You can now give ""icon_h"" and ""icon_w"" properties in ""layout"" tag. This causes navit to not use the real size of an icon but to scale it to have the requested size. Guessing prescaled icons (the name_w_h.png's of course works. Default size of 22x22px which is the default size hint on most of the svg's is used. This fixes #819.
This pull request adds the property ""underground_alpha"" to the ""graphics"" tag giving the alpha value to use as transparency if ways are flagged with AF_UNDERGROUND. This effectively renders tunnels in transparent.
This pull request adds a ""oneway"" tag to itemgras in layouts. Together with the enhancements of the ""arrows"" itemgra used for drawing the route graph one can print nice arrows on oneway roads.","While the icon size is too stupid too screenshot, the tunnel transparency is quite nice. See the following screenshots (done with gtk_drawing_area) as example:


Note the shadows at the road joints in the transparent tunnel show how Navit is actually drawing internally and cannot easy be removed. But that's better than nothing.
The transparency can be controlled by ""underground_alpha"" value in layout xml.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,884,2019-09-23T15:20:07Z,2019-09-25T19:52:56Z,2019-09-30T15:07:28Z,MERGED,True,250,46,12,https://github.com/metalstrolch,fix/enhancement:graphics/layout:get default icon size from layout + draw tunnels transparent + mark oneway streets,10,['enhancement'],https://github.com/navit-gps/navit/pull/884,https://github.com/mvglasow,3,https://github.com/navit-gps/navit/pull/884#issuecomment-534268236,"This pull request adds the possibility to globally set a default for icon size of a layout.
You can now give ""icon_h"" and ""icon_w"" properties in ""layout"" tag. This causes navit to not use the real size of an icon but to scale it to have the requested size. Guessing prescaled icons (the name_w_h.png's of course works. Default size of 22x22px which is the default size hint on most of the svg's is used. This fixes #819.
This pull request adds the property ""underground_alpha"" to the ""graphics"" tag giving the alpha value to use as transparency if ways are flagged with AF_UNDERGROUND. This effectively renders tunnels in transparent.
This pull request adds a ""oneway"" tag to itemgras in layouts. Together with the enhancements of the ""arrows"" itemgra used for drawing the route graph one can print nice arrows on oneway roads.","Great work! However, I would go for slightly less transparency for the underground ways to make them more visible. I would suggest something close to the OSD elements, which IIRC are around 70% (0% being fully transparent, 100% being completely opaque).",True,"{'THUMBS_UP': ['https://github.com/jkoan', 'https://github.com/lains']}"
navit-gps/navit,https://github.com/navit-gps/navit,884,2019-09-23T15:20:07Z,2019-09-25T19:52:56Z,2019-09-30T15:07:28Z,MERGED,True,250,46,12,https://github.com/metalstrolch,fix/enhancement:graphics/layout:get default icon size from layout + draw tunnels transparent + mark oneway streets,10,['enhancement'],https://github.com/navit-gps/navit/pull/884,https://github.com/metalstrolch,4,https://github.com/navit-gps/navit/pull/884#issuecomment-534452905,"This pull request adds the possibility to globally set a default for icon size of a layout.
You can now give ""icon_h"" and ""icon_w"" properties in ""layout"" tag. This causes navit to not use the real size of an icon but to scale it to have the requested size. Guessing prescaled icons (the name_w_h.png's of course works. Default size of 22x22px which is the default size hint on most of the svg's is used. This fixes #819.
This pull request adds the property ""underground_alpha"" to the ""graphics"" tag giving the alpha value to use as transparency if ways are flagged with AF_UNDERGROUND. This effectively renders tunnels in transparent.
This pull request adds a ""oneway"" tag to itemgras in layouts. Together with the enhancements of the ""arrows"" itemgra used for drawing the route graph one can print nice arrows on oneway roads.","The amount of transparency used for tunnels if course is about personal liking. Luckily it can be configured by ""underground_alpha"" tag in layout. I'll make the tunnels more solid in default ""car"" layout though. However the suggested 80% are too solid to maintain the effect. Stay tuned, I'll add one way street arrows soon as well.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,884,2019-09-23T15:20:07Z,2019-09-25T19:52:56Z,2019-09-30T15:07:28Z,MERGED,True,250,46,12,https://github.com/metalstrolch,fix/enhancement:graphics/layout:get default icon size from layout + draw tunnels transparent + mark oneway streets,10,['enhancement'],https://github.com/navit-gps/navit/pull/884,https://github.com/metalstrolch,5,https://github.com/navit-gps/navit/pull/884#issuecomment-534549819,"This pull request adds the possibility to globally set a default for icon size of a layout.
You can now give ""icon_h"" and ""icon_w"" properties in ""layout"" tag. This causes navit to not use the real size of an icon but to scale it to have the requested size. Guessing prescaled icons (the name_w_h.png's of course works. Default size of 22x22px which is the default size hint on most of the svg's is used. This fixes #819.
This pull request adds the property ""underground_alpha"" to the ""graphics"" tag giving the alpha value to use as transparency if ways are flagged with AF_UNDERGROUND. This effectively renders tunnels in transparent.
This pull request adds a ""oneway"" tag to itemgras in layouts. Together with the enhancements of the ""arrows"" itemgra used for drawing the route graph one can print nice arrows on oneway roads.","OK. Enabled arrows on oneway streets for higher zoom levels on car layout.


It's working on 2d and 3d view. And I increased the tunnel density. Of course the arrows get transparent on tunnels as well.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,884,2019-09-23T15:20:07Z,2019-09-25T19:52:56Z,2019-09-30T15:07:28Z,MERGED,True,250,46,12,https://github.com/metalstrolch,fix/enhancement:graphics/layout:get default icon size from layout + draw tunnels transparent + mark oneway streets,10,['enhancement'],https://github.com/navit-gps/navit/pull/884,https://github.com/lains,6,https://github.com/navit-gps/navit/pull/884#issuecomment-534887436,"This pull request adds the possibility to globally set a default for icon size of a layout.
You can now give ""icon_h"" and ""icon_w"" properties in ""layout"" tag. This causes navit to not use the real size of an icon but to scale it to have the requested size. Guessing prescaled icons (the name_w_h.png's of course works. Default size of 22x22px which is the default size hint on most of the svg's is used. This fixes #819.
This pull request adds the property ""underground_alpha"" to the ""graphics"" tag giving the alpha value to use as transparency if ways are flagged with AF_UNDERGROUND. This effectively renders tunnels in transparent.
This pull request adds a ""oneway"" tag to itemgras in layouts. Together with the enhancements of the ""arrows"" itemgra used for drawing the route graph one can print nice arrows on oneway roads.",This is a great feature that I have been missing a few times while driving (both tunnels and one way roads). Thanks for making it alive!,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,884,2019-09-23T15:20:07Z,2019-09-25T19:52:56Z,2019-09-30T15:07:28Z,MERGED,True,250,46,12,https://github.com/metalstrolch,fix/enhancement:graphics/layout:get default icon size from layout + draw tunnels transparent + mark oneway streets,10,['enhancement'],https://github.com/navit-gps/navit/pull/884,https://github.com/metalstrolch,7,https://github.com/navit-gps/navit/pull/884#issuecomment-534928428,"This pull request adds the possibility to globally set a default for icon size of a layout.
You can now give ""icon_h"" and ""icon_w"" properties in ""layout"" tag. This causes navit to not use the real size of an icon but to scale it to have the requested size. Guessing prescaled icons (the name_w_h.png's of course works. Default size of 22x22px which is the default size hint on most of the svg's is used. This fixes #819.
This pull request adds the property ""underground_alpha"" to the ""graphics"" tag giving the alpha value to use as transparency if ways are flagged with AF_UNDERGROUND. This effectively renders tunnels in transparent.
This pull request adds a ""oneway"" tag to itemgras in layouts. Together with the enhancements of the ""arrows"" itemgra used for drawing the route graph one can print nice arrows on oneway roads.","WIP again, as there still is a BUG in calculation of the arrow placement for one way. Seems I've missed some corner case. Try to fix this this evening...",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,884,2019-09-23T15:20:07Z,2019-09-25T19:52:56Z,2019-09-30T15:07:28Z,MERGED,True,250,46,12,https://github.com/metalstrolch,fix/enhancement:graphics/layout:get default icon size from layout + draw tunnels transparent + mark oneway streets,10,['enhancement'],https://github.com/navit-gps/navit/pull/884,https://github.com/metalstrolch,8,https://github.com/navit-gps/navit/pull/884#issuecomment-534945746,"This pull request adds the possibility to globally set a default for icon size of a layout.
You can now give ""icon_h"" and ""icon_w"" properties in ""layout"" tag. This causes navit to not use the real size of an icon but to scale it to have the requested size. Guessing prescaled icons (the name_w_h.png's of course works. Default size of 22x22px which is the default size hint on most of the svg's is used. This fixes #819.
This pull request adds the property ""underground_alpha"" to the ""graphics"" tag giving the alpha value to use as transparency if ways are flagged with AF_UNDERGROUND. This effectively renders tunnels in transparent.
This pull request adds a ""oneway"" tag to itemgras in layouts. Together with the enhancements of the ""arrows"" itemgra used for drawing the route graph one can print nice arrows on oneway roads.",Should be fixed now. Keep WIP until I've gotten more time to test.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,884,2019-09-23T15:20:07Z,2019-09-25T19:52:56Z,2019-09-30T15:07:28Z,MERGED,True,250,46,12,https://github.com/metalstrolch,fix/enhancement:graphics/layout:get default icon size from layout + draw tunnels transparent + mark oneway streets,10,['enhancement'],https://github.com/navit-gps/navit/pull/884,https://github.com/metalstrolch,9,https://github.com/navit-gps/navit/pull/884#issuecomment-535068400,"This pull request adds the possibility to globally set a default for icon size of a layout.
You can now give ""icon_h"" and ""icon_w"" properties in ""layout"" tag. This causes navit to not use the real size of an icon but to scale it to have the requested size. Guessing prescaled icons (the name_w_h.png's of course works. Default size of 22x22px which is the default size hint on most of the svg's is used. This fixes #819.
This pull request adds the property ""underground_alpha"" to the ""graphics"" tag giving the alpha value to use as transparency if ways are flagged with AF_UNDERGROUND. This effectively renders tunnels in transparent.
This pull request adds a ""oneway"" tag to itemgras in layouts. Together with the enhancements of the ""arrows"" itemgra used for drawing the route graph one can print nice arrows on oneway roads.",Yeslooks good. Ready for review and merge.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,884,2019-09-23T15:20:07Z,2019-09-25T19:52:56Z,2019-09-30T15:07:28Z,MERGED,True,250,46,12,https://github.com/metalstrolch,fix/enhancement:graphics/layout:get default icon size from layout + draw tunnels transparent + mark oneway streets,10,['enhancement'],https://github.com/navit-gps/navit/pull/884,https://github.com/lains,10,https://github.com/navit-gps/navit/pull/884#issuecomment-535076100,"This pull request adds the possibility to globally set a default for icon size of a layout.
You can now give ""icon_h"" and ""icon_w"" properties in ""layout"" tag. This causes navit to not use the real size of an icon but to scale it to have the requested size. Guessing prescaled icons (the name_w_h.png's of course works. Default size of 22x22px which is the default size hint on most of the svg's is used. This fixes #819.
This pull request adds the property ""underground_alpha"" to the ""graphics"" tag giving the alpha value to use as transparency if ways are flagged with AF_UNDERGROUND. This effectively renders tunnels in transparent.
This pull request adds a ""oneway"" tag to itemgras in layouts. Together with the enhancements of the ""arrows"" itemgra used for drawing the route graph one can print nice arrows on oneway roads.","Great! Great!
Any chance we can reduce the number of arrows displayed (for example first and last ones on a road where there is no other way in/out)? This is probably tricky to implement though...
Also, if I understood the screenshots correctly, only tips of arrows are currently drawn, maybe a body (even short) would be good to disambiguate the direction (especially in 3D) when arrows end up being drawn almost as a triangle.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,884,2019-09-23T15:20:07Z,2019-09-25T19:52:56Z,2019-09-30T15:07:28Z,MERGED,True,250,46,12,https://github.com/metalstrolch,fix/enhancement:graphics/layout:get default icon size from layout + draw tunnels transparent + mark oneway streets,10,['enhancement'],https://github.com/navit-gps/navit/pull/884,https://github.com/metalstrolch,11,https://github.com/navit-gps/navit/pull/884#issuecomment-535184183,"This pull request adds the possibility to globally set a default for icon size of a layout.
You can now give ""icon_h"" and ""icon_w"" properties in ""layout"" tag. This causes navit to not use the real size of an icon but to scale it to have the requested size. Guessing prescaled icons (the name_w_h.png's of course works. Default size of 22x22px which is the default size hint on most of the svg's is used. This fixes #819.
This pull request adds the property ""underground_alpha"" to the ""graphics"" tag giving the alpha value to use as transparency if ways are flagged with AF_UNDERGROUND. This effectively renders tunnels in transparent.
This pull request adds a ""oneway"" tag to itemgras in layouts. Together with the enhancements of the ""arrows"" itemgra used for drawing the route graph one can print nice arrows on oneway roads.","Actually, the fix for drawing reduces the number of arrows somehow. But we cannot just draw the first and last before a junction, because on drawing we don't know if there are junctions any more. Drawing is done item by item. Looking at the transparent parts of the screenshots you can see the granularity by spotting the transparent circles visible. Improving this would require a complete rework how Navit draws. This isn't worth it, I think. Specially given that Navit couldn't mark one way streets ever since.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,884,2019-09-23T15:20:07Z,2019-09-25T19:52:56Z,2019-09-30T15:07:28Z,MERGED,True,250,46,12,https://github.com/metalstrolch,fix/enhancement:graphics/layout:get default icon size from layout + draw tunnels transparent + mark oneway streets,10,['enhancement'],https://github.com/navit-gps/navit/pull/884,https://github.com/metalstrolch,12,https://github.com/navit-gps/navit/pull/884#issuecomment-535184274,"This pull request adds the possibility to globally set a default for icon size of a layout.
You can now give ""icon_h"" and ""icon_w"" properties in ""layout"" tag. This causes navit to not use the real size of an icon but to scale it to have the requested size. Guessing prescaled icons (the name_w_h.png's of course works. Default size of 22x22px which is the default size hint on most of the svg's is used. This fixes #819.
This pull request adds the property ""underground_alpha"" to the ""graphics"" tag giving the alpha value to use as transparency if ways are flagged with AF_UNDERGROUND. This effectively renders tunnels in transparent.
This pull request adds a ""oneway"" tag to itemgras in layouts. Together with the enhancements of the ""arrows"" itemgra used for drawing the route graph one can print nice arrows on oneway roads.",And off we go ...,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,884,2019-09-23T15:20:07Z,2019-09-25T19:52:56Z,2019-09-30T15:07:28Z,MERGED,True,250,46,12,https://github.com/metalstrolch,fix/enhancement:graphics/layout:get default icon size from layout + draw tunnels transparent + mark oneway streets,10,['enhancement'],https://github.com/navit-gps/navit/pull/884,https://github.com/metalstrolch,13,https://github.com/navit-gps/navit/pull/884#issuecomment-535184907,"This pull request adds the possibility to globally set a default for icon size of a layout.
You can now give ""icon_h"" and ""icon_w"" properties in ""layout"" tag. This causes navit to not use the real size of an icon but to scale it to have the requested size. Guessing prescaled icons (the name_w_h.png's of course works. Default size of 22x22px which is the default size hint on most of the svg's is used. This fixes #819.
This pull request adds the property ""underground_alpha"" to the ""graphics"" tag giving the alpha value to use as transparency if ways are flagged with AF_UNDERGROUND. This effectively renders tunnels in transparent.
This pull request adds a ""oneway"" tag to itemgras in layouts. Together with the enhancements of the ""arrows"" itemgra used for drawing the route graph one can print nice arrows on oneway roads.",Does somebody know if/where we document attributes for xml?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,884,2019-09-23T15:20:07Z,2019-09-25T19:52:56Z,2019-09-30T15:07:28Z,MERGED,True,250,46,12,https://github.com/metalstrolch,fix/enhancement:graphics/layout:get default icon size from layout + draw tunnels transparent + mark oneway streets,10,['enhancement'],https://github.com/navit-gps/navit/pull/884,https://github.com/mvglasow,14,https://github.com/navit-gps/navit/pull/884#issuecomment-535683446,"This pull request adds the possibility to globally set a default for icon size of a layout.
You can now give ""icon_h"" and ""icon_w"" properties in ""layout"" tag. This causes navit to not use the real size of an icon but to scale it to have the requested size. Guessing prescaled icons (the name_w_h.png's of course works. Default size of 22x22px which is the default size hint on most of the svg's is used. This fixes #819.
This pull request adds the property ""underground_alpha"" to the ""graphics"" tag giving the alpha value to use as transparency if ways are flagged with AF_UNDERGROUND. This effectively renders tunnels in transparent.
This pull request adds a ""oneway"" tag to itemgras in layouts. Together with the enhancements of the ""arrows"" itemgra used for drawing the route graph one can print nice arrows on oneway roads.","We have something on the wiki, I believe the entry point is here: https://wiki.navit-project.org/index.php/Configuration —updates welcome!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,886,2019-09-26T01:53:22Z,2019-09-26T23:32:46Z,2019-09-26T23:32:56Z,MERGED,True,0,1,1,https://github.com/aerostitch,cleanup:search:Minor - Use fallthrough like the rest of the cases,5,[],https://github.com/navit-gps/navit/pull/886,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/886,"This is really a pedantic commit but as I was reading that part of the code I wasn't sure of why we didn't use the fallthrought like the rest of the cases here, so just a tiny cleanup.
Let me know if there's a reason I missed.
Thanks
Joseph","This is really a pedantic commit but as I was reading that part of the code I wasn't sure of why we didn't use the fallthrought like the rest of the cases here, so just a tiny cleanup.
Let me know if there's a reason I missed.
Thanks
Joseph",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,886,2019-09-26T01:53:22Z,2019-09-26T23:32:46Z,2019-09-26T23:32:56Z,MERGED,True,0,1,1,https://github.com/aerostitch,cleanup:search:Minor - Use fallthrough like the rest of the cases,5,[],https://github.com/navit-gps/navit/pull/886,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/886#issuecomment-535460937,"This is really a pedantic commit but as I was reading that part of the code I wasn't sure of why we didn't use the fallthrought like the rest of the cases here, so just a tiny cleanup.
Let me know if there's a reason I missed.
Thanks
Joseph",In my oppinion we should do exectly the opposite and get rid of all fallthrought code over time. As in my oppinion fallthrought code does not increases the readability,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,886,2019-09-26T01:53:22Z,2019-09-26T23:32:46Z,2019-09-26T23:32:56Z,MERGED,True,0,1,1,https://github.com/aerostitch,cleanup:search:Minor - Use fallthrough like the rest of the cases,5,[],https://github.com/navit-gps/navit/pull/886,https://github.com/aerostitch,3,https://github.com/navit-gps/navit/pull/886#issuecomment-535579054,"This is really a pedantic commit but as I was reading that part of the code I wasn't sure of why we didn't use the fallthrought like the rest of the cases here, so just a tiny cleanup.
Let me know if there's a reason I missed.
Thanks
Joseph","I do agree that fallthrought decreases readability and I just wanted consistency in there.
So instead I moved to no fallthrought. Are you still ok with that @metalstrolch ?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,886,2019-09-26T01:53:22Z,2019-09-26T23:32:46Z,2019-09-26T23:32:56Z,MERGED,True,0,1,1,https://github.com/aerostitch,cleanup:search:Minor - Use fallthrough like the rest of the cases,5,[],https://github.com/navit-gps/navit/pull/886,https://github.com/pgrandin,4,https://github.com/navit-gps/navit/pull/886#issuecomment-535658324,"This is really a pedantic commit but as I was reading that part of the code I wasn't sure of why we didn't use the fallthrought like the rest of the cases here, so just a tiny cleanup.
Let me know if there's a reason I missed.
Thanks
Joseph",I agree with @metalstrolch on this one. The latest commit in this PR decreases readability IMO,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,886,2019-09-26T01:53:22Z,2019-09-26T23:32:46Z,2019-09-26T23:32:56Z,MERGED,True,0,1,1,https://github.com/aerostitch,cleanup:search:Minor - Use fallthrough like the rest of the cases,5,[],https://github.com/navit-gps/navit/pull/886,https://github.com/aerostitch,5,https://github.com/navit-gps/navit/pull/886#issuecomment-535664687,"This is really a pedantic commit but as I was reading that part of the code I wasn't sure of why we didn't use the fallthrought like the rest of the cases here, so just a tiny cleanup.
Let me know if there's a reason I missed.
Thanks
Joseph","Lol! Works for me!
I reverted the last change so that it's only the 1 line removal.
I'll merge as soon as circleci is done.
Thanks for the review guys! :)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,886,2019-09-26T01:53:22Z,2019-09-26T23:32:46Z,2019-09-26T23:32:56Z,MERGED,True,0,1,1,https://github.com/aerostitch,cleanup:search:Minor - Use fallthrough like the rest of the cases,5,[],https://github.com/navit-gps/navit/pull/886,https://github.com/mvglasow,6,https://github.com/navit-gps/navit/pull/886#issuecomment-535688092,"This is really a pedantic commit but as I was reading that part of the code I wasn't sure of why we didn't use the fallthrought like the rest of the cases here, so just a tiny cleanup.
Let me know if there's a reason I missed.
Thanks
Joseph","IIRC fallthrough is needed to silence compiler warnings about case statements without break. I have added some of those in the past to get rid of these excessive warnings. However, I am not sure if case statements with no body at all would trigger that warning as well.
I don’t see readability as so much of an issue, either with or without. Where the lack of either fallthrough or break does not generate compiler warnings, I’m OK with removing the fallthrough. Elsewhere we’ll need to see if we can disable compiler warnings about case statements without break altogether—at the cost of no longer getting informed about truly forgotten break statements.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,886,2019-09-26T01:53:22Z,2019-09-26T23:32:46Z,2019-09-26T23:32:56Z,MERGED,True,0,1,1,https://github.com/aerostitch,cleanup:search:Minor - Use fallthrough like the rest of the cases,5,[],https://github.com/navit-gps/navit/pull/886,https://github.com/metalstrolch,7,https://github.com/navit-gps/navit/pull/886#issuecomment-535699761,"This is really a pedantic commit but as I was reading that part of the code I wasn't sure of why we didn't use the fallthrought like the rest of the cases here, so just a tiny cleanup.
Let me know if there's a reason I missed.
Thanks
Joseph","As far as I noticed, at least gcc does not warn if cases fall through without any statements between the cases. This is the most common and widely accepted use of falling through case usage. Otherwise gcc requires a comment statement like /falls through/ to not generate a warning on falling through case.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,889,2019-09-27T11:20:19Z,2020-01-15T21:44:19Z,2020-04-12T21:48:29Z,MERGED,True,112,3,2,https://github.com/metalstrolch,feature:graphics/android: add polygons with holes support,13,"['android', 'WIP']",https://github.com/navit-gps/navit/pull/889,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/889,Add drawing support for polygons with holes for android canvas.,Add drawing support for polygons with holes for android canvas.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,889,2019-09-27T11:20:19Z,2020-01-15T21:44:19Z,2020-04-12T21:48:29Z,MERGED,True,112,3,2,https://github.com/metalstrolch,feature:graphics/android: add polygons with holes support,13,"['android', 'WIP']",https://github.com/navit-gps/navit/pull/889,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/889#issuecomment-536906523,Add drawing support for polygons with holes for android canvas.,Abandoned by me as mentioned in #852. Sorry for that. Android devs may feel free to continue the branch.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,889,2019-09-27T11:20:19Z,2020-01-15T21:44:19Z,2020-04-12T21:48:29Z,MERGED,True,112,3,2,https://github.com/metalstrolch,feature:graphics/android: add polygons with holes support,13,"['android', 'WIP']",https://github.com/navit-gps/navit/pull/889,https://github.com/aerostitch,3,https://github.com/navit-gps/navit/pull/889#issuecomment-548457048,Add drawing support for polygons with holes for android canvas.,@jkoan have you been able to test this one out?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,889,2019-09-27T11:20:19Z,2020-01-15T21:44:19Z,2020-04-12T21:48:29Z,MERGED,True,112,3,2,https://github.com/metalstrolch,feature:graphics/android: add polygons with holes support,13,"['android', 'WIP']",https://github.com/navit-gps/navit/pull/889,https://github.com/jkoan,4,https://github.com/navit-gps/navit/pull/889#issuecomment-574831290,Add drawing support for polygons with holes for android canvas.,"Now tested, should be good. Will merge to put it into 0.5.4-rc1",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,890,2019-09-29T07:40:07Z,2019-10-16T15:34:22Z,2019-10-29T17:23:49Z,MERGED,True,582,565,9,https://github.com/jandegr,Fix:Android:system bars ,12,['android'],https://github.com/navit-gps/navit/pull/890,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/890,"Fixes system bars losing transparency while dragging the map, a todo leftover from #877, and a bit of cleanup for the pedestrian plugin.","Fixes system bars losing transparency while dragging the map, a todo leftover from #877, and a bit of cleanup for the pedestrian plugin.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,890,2019-09-29T07:40:07Z,2019-10-16T15:34:22Z,2019-10-29T17:23:49Z,MERGED,True,582,565,9,https://github.com/jandegr,Fix:Android:system bars ,12,['android'],https://github.com/navit-gps/navit/pull/890,https://github.com/jandegr,2,https://github.com/navit-gps/navit/pull/890#issuecomment-538039746,"Fixes system bars losing transparency while dragging the map, a todo leftover from #877, and a bit of cleanup for the pedestrian plugin.","bumps minsdk from 9 to 10, as discussed on IRC and is open for discussion here as well.
motivation :

don't promise it will work on devices it is not tesed on
the oldest device known to me amongst the contributers is an sdk 10 tablet
Google dropped support for armeabi a few ndk's ago and to my best knowledge, the oldest armv7 devices have sdk 10.
STF works from sdk 10 upwards",True,{'THUMBS_UP': ['https://github.com/pgrandin']}
navit-gps/navit,https://github.com/navit-gps/navit,890,2019-09-29T07:40:07Z,2019-10-16T15:34:22Z,2019-10-29T17:23:49Z,MERGED,True,582,565,9,https://github.com/jandegr,Fix:Android:system bars ,12,['android'],https://github.com/navit-gps/navit/pull/890,https://github.com/jandegr,3,https://github.com/navit-gps/navit/pull/890#issuecomment-540050209,"Fixes system bars losing transparency while dragging the map, a todo leftover from #877, and a bit of cleanup for the pedestrian plugin.","fixes other activities crawling behind the statusbar, part of #904",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,890,2019-09-29T07:40:07Z,2019-10-16T15:34:22Z,2019-10-29T17:23:49Z,MERGED,True,582,565,9,https://github.com/jandegr,Fix:Android:system bars ,12,['android'],https://github.com/navit-gps/navit/pull/890,https://github.com/jandegr,4,https://github.com/navit-gps/navit/pull/890#issuecomment-540055581,"Fixes system bars losing transparency while dragging the map, a todo leftover from #877, and a bit of cleanup for the pedestrian plugin.","tested for the issues of this PR on
android 4.1.2 (sdk 16) Samsung GT-S5310
android 4.2.2 (sdk 17) Asus me173
android 4.4 (sdk 19) AVD
android 5.0.2 (sdk 21) AVD
android 6.0 (sdk 23) Motorola moto E2
android 7.1.1 (sdk 25) Lenovo moto E4 plus
android 8.0 (sdk 26) Samsung SM-J600G STF @pgrandin
android 9.0 (sdk 28) AVD
android 9.0 (sdk 28) MI A2 STF @pgrandin
android 9.0 (sdk 28) nokia, with a 64GB sd card confiured as internal storage.
android 10 (sdk 29) AVD, ok for now but urgently needs more work, see lower",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,890,2019-09-29T07:40:07Z,2019-10-16T15:34:22Z,2019-10-29T17:23:49Z,MERGED,True,582,565,9,https://github.com/jandegr,Fix:Android:system bars ,12,['android'],https://github.com/navit-gps/navit/pull/890,https://github.com/gefin,5,https://github.com/navit-gps/navit/pull/890#issuecomment-540067271,"Fixes system bars losing transparency while dragging the map, a todo leftover from #877, and a bit of cleanup for the pedestrian plugin.",tested with android 7.1.2 LG,True,{'THUMBS_UP': ['https://github.com/jandegr']}
navit-gps/navit,https://github.com/navit-gps/navit,890,2019-09-29T07:40:07Z,2019-10-16T15:34:22Z,2019-10-29T17:23:49Z,MERGED,True,582,565,9,https://github.com/jandegr,Fix:Android:system bars ,12,['android'],https://github.com/navit-gps/navit/pull/890,https://github.com/jandegr,6,https://github.com/navit-gps/navit/pull/890#issuecomment-540068850,"Fixes system bars losing transparency while dragging the map, a todo leftover from #877, and a bit of cleanup for the pedestrian plugin.","On the MI A2 STF @pgrandin , just because I was asked to post STF screenshots :)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,890,2019-09-29T07:40:07Z,2019-10-16T15:34:22Z,2019-10-29T17:23:49Z,MERGED,True,582,565,9,https://github.com/jandegr,Fix:Android:system bars ,12,['android'],https://github.com/navit-gps/navit/pull/890,https://github.com/jandegr,7,https://github.com/navit-gps/navit/pull/890#issuecomment-540461799,"Fixes system bars losing transparency while dragging the map, a todo leftover from #877, and a bit of cleanup for the pedestrian plugin.","Changed the code for fullscreen mode to the few lines we had for this years ago for devices below kitkat. Fullscreenmode does nothing from kitkat upwards since those have the transparent bars.
Known issues not related to this PR


OSD buttons often disappear after doing some action but the button with the speaker never disappears, observed on all kinds of devices. A scenario I just tested on STF  SM-J600G, fresh install, go to town search in gui internal, change the suggested country, abandon the search and just go back to the mapview,  the screenshot below is the result where all buttons were present at the start of the test. EDIT made an issue for this one #905


toggling 2D/3D on its own initiative, observed on all kinds of devices.


on devices where the filebrowseractivity has a black background the black map icons blend into the background. Observed on android 4.1.2 (sdk 16) samsun GT-S5310",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,890,2019-09-29T07:40:07Z,2019-10-16T15:34:22Z,2019-10-29T17:23:49Z,MERGED,True,582,565,9,https://github.com/jandegr,Fix:Android:system bars ,12,['android'],https://github.com/navit-gps/navit/pull/890,https://github.com/mvglasow,8,https://github.com/navit-gps/navit/pull/890#issuecomment-540779603,"Fixes system bars losing transparency while dragging the map, a todo leftover from #877, and a bit of cleanup for the pedestrian plugin.","Tested on a Nexus S, Android 4.4.4 (Cyanogenmod) and a OnePlus One, Android 8.1 (LineageOS 15.1); both work.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,890,2019-09-29T07:40:07Z,2019-10-16T15:34:22Z,2019-10-29T17:23:49Z,MERGED,True,582,565,9,https://github.com/jandegr,Fix:Android:system bars ,12,['android'],https://github.com/navit-gps/navit/pull/890,https://github.com/mvglasow,9,https://github.com/navit-gps/navit/pull/890#issuecomment-541226077,"Fixes system bars losing transparency while dragging the map, a todo leftover from #877, and a bit of cleanup for the pedestrian plugin.","Is there a need to remove fullscreen for Lollipop and up? If it still works, I’d suggest leaving it in. It still offers slightly more screen real estate than the transparent system bars do and some people might prefer it that way.
Otherwise, is there any obstacle to merging this?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,890,2019-09-29T07:40:07Z,2019-10-16T15:34:22Z,2019-10-29T17:23:49Z,MERGED,True,582,565,9,https://github.com/jandegr,Fix:Android:system bars ,12,['android'],https://github.com/navit-gps/navit/pull/890,https://github.com/jandegr,10,https://github.com/navit-gps/navit/pull/890#issuecomment-541393394,"Fixes system bars losing transparency while dragging the map, a todo leftover from #877, and a bit of cleanup for the pedestrian plugin.","Hi

is there any obstacle to merging this?

I am not into merging my own things. I only post solutions with some kind of a test report.
If navit-gps wants it, anybody can (squash)merge it.

Is there a need to remove fullscreen for Lollipop and up?

I tried to make it clear that I only back compliant, properly tested and working solutions. During testing it became clear there was trouble with the fullscreenmode. Reverting it to the few lines we had long ago and have been used for many years on pre kitkat devices seemed a safe option until an extensively tested, working for everybody solution becomes available.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,890,2019-09-29T07:40:07Z,2019-10-16T15:34:22Z,2019-10-29T17:23:49Z,MERGED,True,582,565,9,https://github.com/jandegr,Fix:Android:system bars ,12,['android'],https://github.com/navit-gps/navit/pull/890,https://github.com/jandegr,11,https://github.com/navit-gps/navit/pull/890#issuecomment-541810747,"Fixes system bars losing transparency while dragging the map, a todo leftover from #877, and a bit of cleanup for the pedestrian plugin.","Testing on a nokia android 9 (sdk 28)
It is one of those where the camera is in a notch in the screen and the screen has rounded corners but the screenshots show no sign of it. In landscape orientation the mapview does not expand into the area with the notch, it just stays black there, but the preinstalled apps behave exactly the same, so the test passed I suppose.
Fresh install then settings->apps->select application->change storage location to the 'internal' SD card storage and then download europe on a 64GB SD card

Using the all-of-europe map",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,890,2019-09-29T07:40:07Z,2019-10-16T15:34:22Z,2019-10-29T17:23:49Z,MERGED,True,582,565,9,https://github.com/jandegr,Fix:Android:system bars ,12,['android'],https://github.com/navit-gps/navit/pull/890,https://github.com/jandegr,12,https://github.com/navit-gps/navit/pull/890#issuecomment-542158914,"Fixes system bars losing transparency while dragging the map, a todo leftover from #877, and a bit of cleanup for the pedestrian plugin.","These Android-reworked builds are already prepared for the upcoming restrictions on access to storage since they use getExternalFilesDir() and there is no need to use the temporarily opt-out .
About their warning next year.... independent of target SDK level I just wonder how they will enforce that. EDIT: they can wrap that inside a security update or the Q platform update, depending on the exisiting firmware of the device and the timeline.
For fresh installs there will be no problem, but these builds preserve non-compliant paths in an upgrade situation as a convenience. Their announcement is a little bit ambigue to me, but if I interpret it in a strict sense, then the convenience of picking-up existing non-compliant paths may have to be removed some time next year at the latest. I will try to test that as soon as possible using the opt-in option.
EDIT: tests show the 'convenience' solution can stay.
EDIT, finally got an Android Q AVD running, so here we go (test) again
with manually granted permission storage.
test 1, fresh install without the opt-in switch set, still possible to use a custom path
test 2, fresh install with the opt-in switch set, impossible to set a custom path
test 3,

fresh install without the opt-in switch set (aka opted-out)
set it to  a custom path
download a map
upgrade navit with an  opt-in version
-> the upgrade scenario of these 'reworked' builds still works, navit was the owner of the path before and it keeps working afther the upgrade. Downloading more maps into the old custom path works.

test 4, same as test 3 but with an uninstall before installing the upgrade and manually deleted the leftover custom folder from test 3 first.

delete leftover folder from test 3
fresh install without the opt-in switch set (aka opted-out)
set it to  a custom path
download a map
uninstall navit
install an  opt-in version of navit
try to change the path with the filebroweractivity  to the custom path
-> fails simply because even with permission storage granted, the filebrowseractivity can not pick the custom path anymore. This behaviour corresponds completely to the description of the upcoming restrictions. The upgrade scenario of test 3 still working is an unexpected surprise the (what I somtimes called 'a convenience')

For the rest : the tinting of the navbar is not ok on sdk29, it seems to be tinted twice.
The tinting of statusbar is ok, in gui internal all the bars are ok, native keyboard to be reviewed (did not even show up).
Conclusion : some work to do for Android Q, will not be done in ths PR !!!
and I wish #907 pursuing noncompliant solutions all the luck in the world and I am convinced it will present a testrack with the one of this PR as the minimum, including android being able to shuffle the private storage of Navit around as I briefly tested with the 'large binfile' download.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,890,2019-09-29T07:40:07Z,2019-10-16T15:34:22Z,2019-10-29T17:23:49Z,MERGED,True,582,565,9,https://github.com/jandegr,Fix:Android:system bars ,12,['android'],https://github.com/navit-gps/navit/pull/890,https://github.com/jandegr,13,https://github.com/navit-gps/navit/pull/890#issuecomment-542174670,"Fixes system bars losing transparency while dragging the map, a todo leftover from #877, and a bit of cleanup for the pedestrian plugin.","final statement
Donwload of large binfiles (over 3,8GB) has been tested on the nokia onto the SD card and on an AVD sdk28 tot the onboard memory (after increasing the memory size in its settings). While both tests revealed no problems, it is not enough to be conclusive, so the option is not included in this PR.
For the rest, I tested just about everything I could on any device within reach + AVD's + devices on remote locations + a few occasional test reports from contributers.
There are a few scenario's known to me that lead to a crash, but with reasons deeper down in the C code shared with other platforms, if they were in the android-only code I would have fixed them.
good luck with it folks.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,891,2019-09-30T19:49:05Z,2019-10-01T07:15:43Z,2019-10-28T12:28:36Z,MERGED,True,17,3,4,https://github.com/metalstrolch,fix:circleci: do not download build environment for sanity check,1,[],https://github.com/navit-gps/navit/pull/891,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/891,and reenable xml lint for all configurations shipped. To do this the navit.dtd model is updated by the new properties added.,and reenable xml lint for all configurations shipped. To do this the navit.dtd model is updated by the new properties added.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,891,2019-09-30T19:49:05Z,2019-10-01T07:15:43Z,2019-10-28T12:28:36Z,MERGED,True,17,3,4,https://github.com/metalstrolch,fix:circleci: do not download build environment for sanity check,1,[],https://github.com/navit-gps/navit/pull/891,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/891#issuecomment-536723224,and reenable xml lint for all configurations shipped. To do this the navit.dtd model is updated by the new properties added.,fixes #888,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,892,2019-10-01T17:40:10Z,2019-10-15T08:53:40Z,2019-10-17T00:38:22Z,MERGED,True,53,3,1,https://github.com/aerostitch,Prepare changelog for release 0.5.4,2,['doc'],https://github.com/navit-gps/navit/pull/892,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/892,"I'm trying out some new tool (https://github.com/github-changelog-generator/github-changelog-generator) to generate the changelog based on the PR instead of the commits (some PR have hundreds of commits making the changelog quite unreadable.
We should probably re-work some PR titles to make them more relevant and reorganize the PR around the different sections that we had under the previous releases.
We could also reorganize the changes by components (graphics, traffic, core, etc)
Note: I removed from the changelog the minor cleanup/typos and the docs-related PR.
Let me know what you think.
It would look like: https://github.com/navit-gps/navit/blob/aerostitch/changelog/CHANGELOG.md","I'm trying out some new tool (https://github.com/github-changelog-generator/github-changelog-generator) to generate the changelog based on the PR instead of the commits (some PR have hundreds of commits making the changelog quite unreadable.
We should probably re-work some PR titles to make them more relevant and reorganize the PR around the different sections that we had under the previous releases.
We could also reorganize the changes by components (graphics, traffic, core, etc)
Note: I removed from the changelog the minor cleanup/typos and the docs-related PR.
Let me know what you think.
It would look like: https://github.com/navit-gps/navit/blob/aerostitch/changelog/CHANGELOG.md",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,895,2019-10-02T19:24:09Z,2019-10-04T12:30:59Z,2020-08-18T11:56:13Z,MERGED,True,599,316,1,https://github.com/hoehnp,Update:i18n:Updated German translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/895,https://github.com/hoehnp,1,https://github.com/navit-gps/navit/pull/895,"finished German translation, thanks also to @jkoan for helping","finished German translation, thanks also to @jkoan for helping",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,896,2019-10-02T22:57:14Z,2019-10-04T10:30:02Z,2020-08-18T11:56:14Z,MERGED,True,20,6,1,https://github.com/hoehnp,Update:i18n:Updated English (United Kingdom) translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/896,https://github.com/hoehnp,1,https://github.com/navit-gps/navit/pull/896,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,897,2019-10-03T12:23:09Z,2019-10-06T14:37:35Z,2019-10-28T12:28:22Z,MERGED,True,39,14,1,https://github.com/metalstrolch,fix:core:prevent stack overflow on drawing huge polygons,2,[],https://github.com/navit-gps/navit/pull/897,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/897,"This commit prevents c_alloca from flooding the stack if we have to deal
with really huge polygons. Use slower g_malloc instead.","This commit prevents c_alloca from flooding the stack if we have to deal
with really huge polygons. Use slower g_malloc instead.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,897,2019-10-03T12:23:09Z,2019-10-06T14:37:35Z,2019-10-28T12:28:22Z,MERGED,True,39,14,1,https://github.com/metalstrolch,fix:core:prevent stack overflow on drawing huge polygons,2,[],https://github.com/navit-gps/navit/pull/897,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/897#issuecomment-538753271,"This commit prevents c_alloca from flooding the stack if we have to deal
with really huge polygons. Use slower g_malloc instead.",No objections. Off we go,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,901,2019-10-07T07:45:02Z,2019-10-18T10:01:15Z,2019-10-28T12:28:25Z,MERGED,True,292,29,5,https://github.com/metalstrolch,enhancement:maptool:improve processing speed and fix some memory holes,6,[],https://github.com/navit-gps/navit/pull/901,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/901,"This pull request increases processing speed of maptool on large areas (world) by partly parallelizing the turn restriction processing as well as by introducing buffered read of nodes on relation processing.
Time saved on my box: -1day / ~20%","This pull request increases processing speed of maptool on large areas (world) by partly parallelizing the turn restriction processing as well as by introducing buffered read of nodes on relation processing.
Time saved on my box: -1day / ~20%",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,901,2019-10-07T07:45:02Z,2019-10-18T10:01:15Z,2019-10-28T12:28:25Z,MERGED,True,292,29,5,https://github.com/metalstrolch,enhancement:maptool:improve processing speed and fix some memory holes,6,[],https://github.com/navit-gps/navit/pull/901,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/901#issuecomment-539041651,"This pull request increases processing speed of maptool on large areas (world) by partly parallelizing the turn restriction processing as well as by introducing buffered read of nodes on relation processing.
Time saved on my box: -1day / ~20%",How many threads did you assigned on your tests and what would you suggest as a optimum if running with ryzen 2600 and NVMe ssd?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,901,2019-10-07T07:45:02Z,2019-10-18T10:01:15Z,2019-10-28T12:28:25Z,MERGED,True,292,29,5,https://github.com/metalstrolch,enhancement:maptool:improve processing speed and fix some memory holes,6,[],https://github.com/navit-gps/navit/pull/901,https://github.com/metalstrolch,3,https://github.com/navit-gps/navit/pull/901#issuecomment-539049089,"This pull request increases processing speed of maptool on large areas (world) by partly parallelizing the turn restriction processing as well as by introducing buffered read of nodes on relation processing.
Time saved on my box: -1day / ~20%","I used the now default of 8 threads. I wouldn't use many more because, with every thread, you split the resulting hash. I used 7GiB of slice size on a 16GiB RAM machine. Remember to do ulimit -s unlimited.
My machine is a core I7 NUC with a spinning USB attached disc. So I expect yours to be way faster. Unfortunately currently the disk speed doesn't help that much.
Some explanation:
On creating the hashes, you basically read all items in a common queue, and every thread hashes the next item it gets into its own private hash. As hashing scales bad with number of elements, this helps a lot because a: more processing power, and b: smaller hashes per cpu.
BUT:
On processing the hash, you have to try all items against all hashes! Sot the more threads you used before the slower that gets. Luckily using the hash scales way better. This can only be done by one thread currently, as most parts of maptool are not thread safe!
Additionally using your SSD, the smaller fix contained will help a lot, I think. instead of reading the coordinates (several billions in world) one by one from disk I added a buffer reading them several MiB at once and then serving them from the buffer. This helps most on turn restriction processing.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,901,2019-10-07T07:45:02Z,2019-10-18T10:01:15Z,2019-10-28T12:28:25Z,MERGED,True,292,29,5,https://github.com/metalstrolch,enhancement:maptool:improve processing speed and fix some memory holes,6,[],https://github.com/navit-gps/navit/pull/901,https://github.com/metalstrolch,4,https://github.com/navit-gps/navit/pull/901#issuecomment-542580225,"This pull request increases processing speed of maptool on large areas (world) by partly parallelizing the turn restriction processing as well as by introducing buffered read of nodes on relation processing.
Time saved on my box: -1day / ~20%","Somebody planning to test this or is already testing this? Works for me.
If no objections: Planning to merge on Friday 18th October 2019.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,901,2019-10-07T07:45:02Z,2019-10-18T10:01:15Z,2019-10-28T12:28:25Z,MERGED,True,292,29,5,https://github.com/metalstrolch,enhancement:maptool:improve processing speed and fix some memory holes,6,[],https://github.com/navit-gps/navit/pull/901,https://github.com/gefin,5,https://github.com/navit-gps/navit/pull/901#issuecomment-542732866,"This pull request increases processing speed of maptool on large areas (world) by partly parallelizing the turn restriction processing as well as by introducing buffered read of nodes on relation processing.
Time saved on my box: -1day / ~20%","Sorry i cant test (map size>>device size)
I can test the planetextractor result after it is active...",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,901,2019-10-07T07:45:02Z,2019-10-18T10:01:15Z,2019-10-28T12:28:25Z,MERGED,True,292,29,5,https://github.com/metalstrolch,enhancement:maptool:improve processing speed and fix some memory holes,6,[],https://github.com/navit-gps/navit/pull/901,https://github.com/jkoan,6,https://github.com/navit-gps/navit/pull/901#issuecomment-542736971,"This pull request increases processing speed of maptool on large areas (world) by partly parallelizing the turn restriction processing as well as by introducing buffered read of nodes on relation processing.
Time saved on my box: -1day / ~20%","Somebody planning to test this or is already testing this? Works for me.
If no objections: Planning to merge on Friday 18th October 2019.

Maptool running against pbf of Germany ;) Will show a comparison when finished",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,901,2019-10-07T07:45:02Z,2019-10-18T10:01:15Z,2019-10-28T12:28:25Z,MERGED,True,292,29,5,https://github.com/metalstrolch,enhancement:maptool:improve processing speed and fix some memory holes,6,[],https://github.com/navit-gps/navit/pull/901,https://github.com/metalstrolch,7,https://github.com/navit-gps/navit/pull/901#issuecomment-542744954,"This pull request increases processing speed of maptool on large areas (world) by partly parallelizing the turn restriction processing as well as by introducing buffered read of nodes on relation processing.
Time saved on my box: -1day / ~20%","Cool. @jkoan . I'll await your result, Expect the order of some elements in the binfile to be different, because the threading shuffles the processing order a bit. Shouldn't matter much, as osm files are usually ordered by OSM ID, which is purely random in terms of map functionality as well.
@gefin Unfortunately I don't have a clue when this will hit planet extractor after merge, as I don't know any way to see maptool version used there. Hopefully we will never notice this pull request there.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,901,2019-10-07T07:45:02Z,2019-10-18T10:01:15Z,2019-10-28T12:28:25Z,MERGED,True,292,29,5,https://github.com/metalstrolch,enhancement:maptool:improve processing speed and fix some memory holes,6,[],https://github.com/navit-gps/navit/pull/901,https://github.com/metalstrolch,8,https://github.com/navit-gps/navit/pull/901#issuecomment-542748472,"This pull request increases processing speed of maptool on large areas (world) by partly parallelizing the turn restriction processing as well as by introducing buffered read of nodes on relation processing.
Time saved on my box: -1day / ~20%","Does anybody have a ready-made tool to extract regions out of a world binfile? While the algorithm is basically described in https://navit.readthedocs.io/en/latest/maps.html#binfile , it would stupid to reimplement something that seems to exist at least for planet extractor. Would help a lot to check #906",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,901,2019-10-07T07:45:02Z,2019-10-18T10:01:15Z,2019-10-28T12:28:25Z,MERGED,True,292,29,5,https://github.com/metalstrolch,enhancement:maptool:improve processing speed and fix some memory holes,6,[],https://github.com/navit-gps/navit/pull/901,https://github.com/jkoan,9,https://github.com/navit-gps/navit/pull/901#issuecomment-542750571,"This pull request increases processing speed of maptool on large areas (world) by partly parallelizing the turn restriction processing as well as by introducing buffered read of nodes on relation processing.
Time saved on my box: -1day / ~20%","Does anybody have a ready-made tool to extract regions out of a world binfile? While the algorithm is basically described in https://navit.readthedocs.io/en/latest/maps.html#binfile , it would stupid to reimplement something that seems to exist at least for planet extractor. Would help a lot to check #906

i don't know a tool like this, but we plan to rewrite planet extractor anyway since its closed source and not maintainable. But this is something for another issue, not this PR",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,901,2019-10-07T07:45:02Z,2019-10-18T10:01:15Z,2019-10-28T12:28:25Z,MERGED,True,292,29,5,https://github.com/metalstrolch,enhancement:maptool:improve processing speed and fix some memory holes,6,[],https://github.com/navit-gps/navit/pull/901,https://github.com/metalstrolch,10,https://github.com/navit-gps/navit/pull/901#issuecomment-542751740,"This pull request increases processing speed of maptool on large areas (world) by partly parallelizing the turn restriction processing as well as by introducing buffered read of nodes on relation processing.
Time saved on my box: -1day / ~20%",Bummer. Seems to be the reason why I never found the source for it.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,901,2019-10-07T07:45:02Z,2019-10-18T10:01:15Z,2019-10-28T12:28:25Z,MERGED,True,292,29,5,https://github.com/metalstrolch,enhancement:maptool:improve processing speed and fix some memory holes,6,[],https://github.com/navit-gps/navit/pull/901,https://github.com/jkoan,11,https://github.com/navit-gps/navit/pull/901#issuecomment-542826125,"This pull request increases processing speed of maptool on large areas (world) by partly parallelizing the turn restriction processing as well as by introducing buffered read of nodes on relation processing.
Time saved on my box: -1day / ~20%","version
run num
real
user
sys




trunk
1
41m15,070s
40m22,668s
1m55,011s


trunk
3
44m19,450s
42m38,990s
2m26,089s


maptool_turn_restriction_threading
2
39m8,376s
38m22,635s
1m59,468s


maptool_turn_restriction_threading
4
40m15,357s
38m50,225s
2m18,419s



Runs number 1&2 did run after each other. Run number 3 and 4 run at the same time (different dirs).
Command: maptool --protobuf -T $(nproc) -i germany-latest.osm.pbf germany-trunk2.bin
pbf-File: https://download.geofabrik.de/europe/germany-191015.osm.pbf",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,901,2019-10-07T07:45:02Z,2019-10-18T10:01:15Z,2019-10-28T12:28:25Z,MERGED,True,292,29,5,https://github.com/metalstrolch,enhancement:maptool:improve processing speed and fix some memory holes,6,[],https://github.com/navit-gps/navit/pull/901,https://github.com/metalstrolch,12,https://github.com/navit-gps/navit/pull/901#issuecomment-543644912,"This pull request increases processing speed of maptool on large areas (world) by partly parallelizing the turn restriction processing as well as by introducing buffered read of nodes on relation processing.
Time saved on my box: -1day / ~20%",Merging this albeit it seems to be system dependent or dependent on the size of map file how much speed is gained. At least on my setup this saves around 20% processing time. At least some memory holes get fixed.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,901,2019-10-07T07:45:02Z,2019-10-18T10:01:15Z,2019-10-28T12:28:25Z,MERGED,True,292,29,5,https://github.com/metalstrolch,enhancement:maptool:improve processing speed and fix some memory holes,6,[],https://github.com/navit-gps/navit/pull/901,https://github.com/metalstrolch,13,https://github.com/navit-gps/navit/pull/901#issuecomment-543646630,"This pull request increases processing speed of maptool on large areas (world) by partly parallelizing the turn restriction processing as well as by introducing buffered read of nodes on relation processing.
Time saved on my box: -1day / ~20%",Will keep the branch for a while for reference.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,902,2019-10-08T20:49:11Z,2019-10-08T21:16:02Z,2019-10-08T21:47:44Z,MERGED,True,1,1,1,https://github.com/mvglasow,"Fix:traffic:Use correct coord count for restored items, fixes #900",1,[],https://github.com/navit-gps/navit/pull/902,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/902,Fixes #900,Fixes #900,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,903,2019-10-08T21:19:53Z,2019-10-08T21:44:51Z,2019-10-08T21:47:32Z,MERGED,True,1,1,1,https://github.com/mvglasow,Fix:traffic:Determine item delay correctly,1,[],https://github.com/navit-gps/navit/pull/903,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/903,Fixes an incorrect comparison operator,Fixes an incorrect comparison operator,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,906,2019-10-11T13:38:52Z,2019-10-28T10:31:51Z,2019-10-28T12:28:44Z,MERGED,True,950,28,21,https://github.com/metalstrolch,enhancement:maptool:slice big polygons into smaller parts,14,[],https://github.com/navit-gps/navit/pull/906,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/906,"This commit allows to slice all polygons (except poly_water_sliced) into
squares so that they fit into smaller map tiles. Holes if present are
correctly sliced as well.
This has the advantage that they do not need to be processed albeit not
being displayed, and navit-planet-extractor can filter them out.
This has the disadvantage that the big polygons are displayed checkered
if the corresponding itemgra in config features an outline.
TODO: Slice already on polygon creation. Currently the slicing has to be
performed twice, because of tile preprocessing and saving is done in
seperate steps from the tempfiles.
TODO: Make the trigger for slicing configurable. Right now it slices
everything smaller than tile level 4.
Hopefully fixes #894","This commit allows to slice all polygons (except poly_water_sliced) into
squares so that they fit into smaller map tiles. Holes if present are
correctly sliced as well.
This has the advantage that they do not need to be processed albeit not
being displayed, and navit-planet-extractor can filter them out.
This has the disadvantage that the big polygons are displayed checkered
if the corresponding itemgra in config features an outline.
TODO: Slice already on polygon creation. Currently the slicing has to be
performed twice, because of tile preprocessing and saving is done in
seperate steps from the tempfiles.
TODO: Make the trigger for slicing configurable. Right now it slices
everything smaller than tile level 4.
Hopefully fixes #894",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,906,2019-10-11T13:38:52Z,2019-10-28T10:31:51Z,2019-10-28T12:28:44Z,MERGED,True,950,28,21,https://github.com/metalstrolch,enhancement:maptool:slice big polygons into smaller parts,14,[],https://github.com/navit-gps/navit/pull/906,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/906#issuecomment-541072078,"This commit allows to slice all polygons (except poly_water_sliced) into
squares so that they fit into smaller map tiles. Holes if present are
correctly sliced as well.
This has the advantage that they do not need to be processed albeit not
being displayed, and navit-planet-extractor can filter them out.
This has the disadvantage that the big polygons are displayed checkered
if the corresponding itemgra in config features an outline.
TODO: Slice already on polygon creation. Currently the slicing has to be
performed twice, because of tile preprocessing and saving is done in
seperate steps from the tempfiles.
TODO: Make the trigger for slicing configurable. Right now it slices
everything smaller than tile level 4.
Hopefully fixes #894","If the question arises, why i didn't reuse the coastline code which somehow does something quite similiar, the answer is simply: I don't dare.
I do not fully understand the coastline code yet and I don't want to screw it because my changes / additions. Maybe in the future when I understand maptool better I'm able to merge the itembin slicer with the coastline code saving some doubling.
Same is somehow true for the place I added the slicing. I know this is processed twice, but as I do not fully understand the tile selection code as well, this seemed to be the less intrusive way of doing this.
And for exactly this reason I will not care for CodeFactor reporting about code doubling. (my version uses double, while the geom.c version uses int which overflows when used on map coordinates instead of display pixels. And float is OK for the maptool. Definitely.)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,906,2019-10-11T13:38:52Z,2019-10-28T10:31:51Z,2019-10-28T12:28:44Z,MERGED,True,950,28,21,https://github.com/metalstrolch,enhancement:maptool:slice big polygons into smaller parts,14,[],https://github.com/navit-gps/navit/pull/906,https://github.com/metalstrolch,3,https://github.com/navit-gps/navit/pull/906#issuecomment-543648696,"This commit allows to slice all polygons (except poly_water_sliced) into
squares so that they fit into smaller map tiles. Holes if present are
correctly sliced as well.
This has the advantage that they do not need to be processed albeit not
being displayed, and navit-planet-extractor can filter them out.
This has the disadvantage that the big polygons are displayed checkered
if the corresponding itemgra in config features an outline.
TODO: Slice already on polygon creation. Currently the slicing has to be
performed twice, because of tile preprocessing and saving is done in
seperate steps from the tempfiles.
TODO: Make the trigger for slicing configurable. Right now it slices
everything smaller than tile level 4.
Hopefully fixes #894","Seems to be OK and do what is wanted. Currently world is processing. Will try to post the sliced elements here. Not so many at all, but some are really huge.
Will try to generate world extracts like planet extractor does to cross check the results.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,906,2019-10-11T13:38:52Z,2019-10-28T10:31:51Z,2019-10-28T12:28:44Z,MERGED,True,950,28,21,https://github.com/metalstrolch,enhancement:maptool:slice big polygons into smaller parts,14,[],https://github.com/navit-gps/navit/pull/906,https://github.com/jkoan,4,https://github.com/navit-gps/navit/pull/906#issuecomment-543653008,"This commit allows to slice all polygons (except poly_water_sliced) into
squares so that they fit into smaller map tiles. Holes if present are
correctly sliced as well.
This has the advantage that they do not need to be processed albeit not
being displayed, and navit-planet-extractor can filter them out.
This has the disadvantage that the big polygons are displayed checkered
if the corresponding itemgra in config features an outline.
TODO: Slice already on polygon creation. Currently the slicing has to be
performed twice, because of tile preprocessing and saving is done in
seperate steps from the tempfiles.
TODO: Make the trigger for slicing configurable. Right now it slices
everything smaller than tile level 4.
Hopefully fixes #894","Seems to be OK and do what is wanted. Currently world is processing. Will try to post the sliced elements here. Not so many at all, but some are really huge.
Will try to generate world extracts like planet extractor does to cross check the results.

For a quick solution just unpack the planet and repack it into a zipfile which only contains the wanted pices. The empty files should not ne necessary any more.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,906,2019-10-11T13:38:52Z,2019-10-28T10:31:51Z,2019-10-28T12:28:44Z,MERGED,True,950,28,21,https://github.com/metalstrolch,enhancement:maptool:slice big polygons into smaller parts,14,[],https://github.com/navit-gps/navit/pull/906,https://github.com/metalstrolch,5,https://github.com/navit-gps/navit/pull/906#issuecomment-544197236,"This commit allows to slice all polygons (except poly_water_sliced) into
squares so that they fit into smaller map tiles. Holes if present are
correctly sliced as well.
This has the advantage that they do not need to be processed albeit not
being displayed, and navit-planet-extractor can filter them out.
This has the disadvantage that the big polygons are displayed checkered
if the corresponding itemgra in config features an outline.
TODO: Slice already on polygon creation. Currently the slicing has to be
performed twice, because of tile preprocessing and saving is done in
seperate steps from the tempfiles.
TODO: Make the trigger for slicing configurable. Right now it slices
everything smaller than tile level 4.
Hopefully fixes #894","@jkoan Unfortunately it's not that easy. The 64bit zip file support of Navit is quite crippled and based on a very old zip file specification, but required for any map bigger than 4GiB. So your nowadays ""zip"" tool creates a zip file that's valid but will happily cause Navit to segfault. I'm in progress of writing a small application allowing to extract things creating Navit compatible files. And in the long run we should update / fix Navits zip file support. But that's another story.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,906,2019-10-11T13:38:52Z,2019-10-28T10:31:51Z,2019-10-28T12:28:44Z,MERGED,True,950,28,21,https://github.com/metalstrolch,enhancement:maptool:slice big polygons into smaller parts,14,[],https://github.com/navit-gps/navit/pull/906,https://github.com/jkoan,6,https://github.com/navit-gps/navit/pull/906#issuecomment-544348070,"This commit allows to slice all polygons (except poly_water_sliced) into
squares so that they fit into smaller map tiles. Holes if present are
correctly sliced as well.
This has the advantage that they do not need to be processed albeit not
being displayed, and navit-planet-extractor can filter them out.
This has the disadvantage that the big polygons are displayed checkered
if the corresponding itemgra in config features an outline.
TODO: Slice already on polygon creation. Currently the slicing has to be
performed twice, because of tile preprocessing and saving is done in
seperate steps from the tempfiles.
TODO: Make the trigger for slicing configurable. Right now it slices
everything smaller than tile level 4.
Hopefully fixes #894","Couldent try it out myself, but probably this could help as well, in our repo deep deep in the source i found this https://github.com/navit-gps/navit/blob/trunk/navit/script/map_index.php it looks loke this is some kind of old state of the map extraction server. As well ther seems to be a cli option too https://github.com/navit-gps/navit/blob/trunk/navit/script/mapextract.php",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,906,2019-10-11T13:38:52Z,2019-10-28T10:31:51Z,2019-10-28T12:28:44Z,MERGED,True,950,28,21,https://github.com/metalstrolch,enhancement:maptool:slice big polygons into smaller parts,14,[],https://github.com/navit-gps/navit/pull/906,https://github.com/metalstrolch,7,https://github.com/navit-gps/navit/pull/906#issuecomment-544441795,"This commit allows to slice all polygons (except poly_water_sliced) into
squares so that they fit into smaller map tiles. Holes if present are
correctly sliced as well.
This has the advantage that they do not need to be processed albeit not
being displayed, and navit-planet-extractor can filter them out.
This has the disadvantage that the big polygons are displayed checkered
if the corresponding itemgra in config features an outline.
TODO: Slice already on polygon creation. Currently the slicing has to be
performed twice, because of tile preprocessing and saving is done in
seperate steps from the tempfiles.
TODO: Make the trigger for slicing configurable. Right now it slices
everything smaller than tile level 4.
Hopefully fixes #894","@jkoan Ah, didn't know that, but did never search for php. My ""C"" version of an extractor is basically running and allowed me to find the problem here in 52d1f53.
I can steal the mercator conversion function from the PHP script at least which is still missing from my version.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,906,2019-10-11T13:38:52Z,2019-10-28T10:31:51Z,2019-10-28T12:28:44Z,MERGED,True,950,28,21,https://github.com/metalstrolch,enhancement:maptool:slice big polygons into smaller parts,14,[],https://github.com/navit-gps/navit/pull/906,https://github.com/metalstrolch,8,https://github.com/navit-gps/navit/pull/906#issuecomment-544741668,"This commit allows to slice all polygons (except poly_water_sliced) into
squares so that they fit into smaller map tiles. Holes if present are
correctly sliced as well.
This has the advantage that they do not need to be processed albeit not
being displayed, and navit-planet-extractor can filter them out.
This has the disadvantage that the big polygons are displayed checkered
if the corresponding itemgra in config features an outline.
TODO: Slice already on polygon creation. Currently the slicing has to be
performed twice, because of tile preprocessing and saving is done in
seperate steps from the tempfiles.
TODO: Make the trigger for slicing configurable. Right now it slices
everything smaller than tile level 4.
Hopefully fixes #894","The tool to extract portions from navit bin file is here: https://github.com/metalstrolch/navit_binfile_extractor
The parameters are in the same order as the web based planet extractor puts them into the resulting file name.
Its working, but may lack error handling (but there are no errors eh?)
@jkoan The PHP version in trunk will fail, as it will calculate tile bboxes wrong. See #918",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,906,2019-10-11T13:38:52Z,2019-10-28T10:31:51Z,2019-10-28T12:28:44Z,MERGED,True,950,28,21,https://github.com/metalstrolch,enhancement:maptool:slice big polygons into smaller parts,14,[],https://github.com/navit-gps/navit/pull/906,https://github.com/metalstrolch,9,https://github.com/navit-gps/navit/pull/906#issuecomment-546682749,"This commit allows to slice all polygons (except poly_water_sliced) into
squares so that they fit into smaller map tiles. Holes if present are
correctly sliced as well.
This has the advantage that they do not need to be processed albeit not
being displayed, and navit-planet-extractor can filter them out.
This has the disadvantage that the big polygons are displayed checkered
if the corresponding itemgra in config features an outline.
TODO: Slice already on polygon creation. Currently the slicing has to be
performed twice, because of tile preprocessing and saving is done in
seperate steps from the tempfiles.
TODO: Make the trigger for slicing configurable. Right now it slices
everything smaller than tile level 4.
Hopefully fixes #894","World processed without errors. Seems to do what it is expected to do, including the somehow suboptimal look of the sliced polygons. But there are not so many at all. For those being curious, there's the actual list:
OSM Info:http://www.openstreetmap.org/relation/167043 slice down 4 steps from acb to (acbaaaa - accaaaa)
OSM Info:http://www.openstreetmap.org/relation/1536358 slice down 4 steps from abd to (abdaaaa - acaaaaa)
OSM Info:http://www.openstreetmap.org/relation/2687974 slice down 4 steps from bab to (babaaaa - bacaaaa)
OSM Info:http://www.openstreetmap.org/relation/2823200 slice down 4 steps from dca to (dcaaaaa - dcbaaaa)
OSM Info:http://www.openstreetmap.org/relation/2823697 slice down 7 steps from  to (aaaaaaa - aaaaaaa)
OSM Info:http://www.openstreetmap.org/relation/2823707 slice down 5 steps from dc to (dcaaaaa - ddaaaaa)
OSM Info:http://www.openstreetmap.org/relation/3003587 slice down 4 steps from dcb to (dcbaaaa - dccaaaa)
OSM Info:http://www.openstreetmap.org/relation/3878946 slice down 5 steps from ba to (baaaaaa - bbaaaaa)
OSM Info:http://www.openstreetmap.org/relation/4641113 slice down 4 steps from bcb to (bcbaaaa - bccaaaa)
OSM Info:http://www.openstreetmap.org/relation/6818398 slice down 6 steps from a to (aaaaaaa - baaaaaa)
OSM Info:http://www.openstreetmap.org/relation/9350856 slice down 6 steps from a to (aaaaaaa - baaaaaa)
OSM Info:http://www.openstreetmap.org/relation/253949 slice down 4 steps from bda to (bdaaaaa - bdbaaaa)
OSM Info:http://www.openstreetmap.org/relation/3987743 slice down 5 steps from ad to (adaaaaa - baaaaaa)
OSM Info:http://www.openstreetmap.org/relation/4039486 slice down 6 steps from b to (baaaaaa - caaaaaa)
OSM Info:http://www.openstreetmap.org/relation/5576397 slice down 4 steps from aca to (acaaaaa - acbaaaa)
OSM Info:http://www.openstreetmap.org/relation/6282022 slice down 4 steps from bda to (bdaaaaa - bdbaaaa)
OSM Info:http://www.openstreetmap.org/relation/8186637 slice down 4 steps from add to (addaaaa - baaaaaa)
OSM Info:http://www.openstreetmap.org/relation/207292 slice down 4 steps from bda to (bdaaaaa - bdbaaaa)
OSM Info:http://www.openstreetmap.org/relation/337014 slice down 4 steps from cbb to (cbbaaaa - cbcaaaa)
OSM Info:http://www.openstreetmap.org/relation/1536355 slice down 4 steps from abd to (abdaaaa - acaaaaa)
OSM Info:http://www.openstreetmap.org/relation/2687976 slice down 4 steps from baa to (baaaaaa - babaaaa)
OSM Info:http://www.openstreetmap.org/relation/2823201 slice down 5 steps from dd to (ddaaaaa - aaaaaaa)
OSM Info:http://www.openstreetmap.org/relation/5491350 slice down 4 steps from bab to (babaaaa - bacaaaa)
OSM Info:http://www.openstreetmap.org/relation/166275 slice down 4 steps from acb to (acbaaaa - accaaaa)
OSM Info:http://www.openstreetmap.org/relation/1268072 slice down 4 steps from ada to (adaaaaa - adbaaaa)
OSM Info:http://www.openstreetmap.org/relation/1279614 slice down 6 steps from b to (baaaaaa - caaaaaa)
OSM Info:http://www.openstreetmap.org/relation/1952895 slice down 4 steps from bcb to (bcbaaaa - bccaaaa)
OSM Info:http://www.openstreetmap.org/relation/1964696 slice down 4 steps from acd to (acdaaaa - adaaaaa)
OSM Info:http://www.openstreetmap.org/relation/2532525 slice down 4 steps from abc to (abcaaaa - abdaaaa)
OSM Info:http://www.openstreetmap.org/relation/2823670 slice down 4 steps from ccb to (ccbaaaa - cccaaaa)
OSM Info:http://www.openstreetmap.org/relation/2823696 slice down 5 steps from dd to (ddaaaaa - aaaaaaa)
OSM Info:http://www.openstreetmap.org/relation/2823719 slice down 6 steps from c to (caaaaaa - daaaaaa)
OSM Info:http://www.openstreetmap.org/relation/3623948 slice down 4 steps from acb to (acbaaaa - accaaaa)
OSM Info:http://www.openstreetmap.org/relation/9706230 slice down 4 steps from bcb to (bcbaaaa - bccaaaa)
OSM Info:http://www.openstreetmap.org/relation/2823675 slice down 4 steps from dda to (ddaaaaa - ddbaaaa)
OSM Info:http://www.openstreetmap.org/relation/2823708 slice down 4 steps from cdb to (cdbaaaa - cdcaaaa)
OSM Info:http://www.openstreetmap.org/relation/4555382 slice down 4 steps from bcb to (bcbaaaa - bccaaaa)
OSM Info:http://www.openstreetmap.org/relation/8864760 slice down 5 steps from ad to (adaaaaa - baaaaaa)
OSM Info:http://www.openstreetmap.org/relation/9845896 slice down 4 steps from dab to (dabaaaa - dacaaaa)
OSM Info:http://www.openstreetmap.org/relation/1760170 slice down 4 steps from ada to (adaaaaa - adbaaaa)
OSM Info:http://www.openstreetmap.org/relation/2740046 slice down 4 steps from bda to (bdaaaaa - bdbaaaa)
OSM Info:http://www.openstreetmap.org/relation/2791738 slice down 4 steps from bda to (bdaaaaa - bdbaaaa)
OSM Info:http://www.openstreetmap.org/relation/1834172 slice down 4 steps from bda to (bdaaaaa - bdbaaaa)
OSM Info:http://www.openstreetmap.org/relation/2823691 slice down 5 steps from cc to (ccaaaaa - cdaaaaa)
OSM Info:http://www.openstreetmap.org/relation/3004618 slice down 4 steps from dcb to (dcbaaaa - dccaaaa)
OSM Info:http://www.openstreetmap.org/relation/3137761 slice down 4 steps from cca to (ccaaaaa - ccbaaaa)
OSM Info:http://www.openstreetmap.org/relation/3304008 slice down 4 steps from bcb to (bcbaaaa - bccaaaa)
OSM Info:http://www.openstreetmap.org/relation/23227 slice down 4 steps from bca to (bcaaaaa - bcbaaaa)
OSM Info:http://www.openstreetmap.org/relation/2791372 slice down 6 steps from b to (baaaaaa - caaaaaa)
OSM Info:http://www.openstreetmap.org/relation/2859405 slice down 4 steps from abc to (abcaaaa - abdaaaa)
OSM Info:http://www.openstreetmap.org/relation/3817092 slice down 4 steps from dab to (dabaaaa - dacaaaa)
OSM Info:http://www.openstreetmap.org/relation/8590456 slice down 6 steps from a to (aaaaaaa - baaaaaa)
OSM Info:http://www.openstreetmap.org/relation/9466755 slice down 4 steps from acb to (acbaaaa - accaaaa)
OSM Info:http://www.openstreetmap.org/way/49001537 slice down 4 steps from aad to (aadaaaa - abaaaaa)
OSM Info:http://www.openstreetmap.org/way/219219881 slice down 4 steps from abc to (abcaaaa - abdaaaa)
OSM Info:http://www.openstreetmap.org/way/231394351 slice down 4 steps from abd to (abdaaaa - acaaaaa)
OSM Info:http://www.openstreetmap.org/way/321693450 slice down 4 steps from bcd to (bcdaaaa - bdaaaaa)
OSM Info:http://www.openstreetmap.org/way/372353383 slice down 4 steps from abb to (abbaaaa - abcaaaa)
OSM Info:http://www.openstreetmap.org/way/432066068 slice down 4 steps from bcc to (bccaaaa - bcdaaaa)
OSM Info:http://www.openstreetmap.org/way/436098551 slice down 5 steps from ca to (caaaaaa - cbaaaaa)
OSM Info:http://www.openstreetmap.org/way/436690530 slice down 5 steps from ca to (caaaaaa - cbaaaaa)
OSM Info:http://www.openstreetmap.org/way/447195251 slice down 4 steps from acb to (acbaaaa - accaaaa)
OSM Info:http://www.openstreetmap.org/way/544274312 slice down 5 steps from ca to (caaaaaa - cbaaaaa)
OSM Info:http://www.openstreetmap.org/way/571486923 slice down 4 steps from daa to (daaaaaa - dabaaaa)
OSM Info:http://www.openstreetmap.org/way/662627631 slice down 4 steps from adc to (adcaaaa - addaaaa)
OSM Info:http://www.openstreetmap.org/way/663224610 slice down 4 steps from aca to (acaaaaa - acbaaaa)
OSM Info:http://www.openstreetmap.org/way/680080430 slice down 4 steps from cbb to (cbbaaaa - cbcaaaa)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,906,2019-10-11T13:38:52Z,2019-10-28T10:31:51Z,2019-10-28T12:28:44Z,MERGED,True,950,28,21,https://github.com/metalstrolch,enhancement:maptool:slice big polygons into smaller parts,14,[],https://github.com/navit-gps/navit/pull/906,https://github.com/metalstrolch,10,https://github.com/navit-gps/navit/pull/906#issuecomment-546682855,"This commit allows to slice all polygons (except poly_water_sliced) into
squares so that they fit into smaller map tiles. Holes if present are
correctly sliced as well.
This has the advantage that they do not need to be processed albeit not
being displayed, and navit-planet-extractor can filter them out.
This has the disadvantage that the big polygons are displayed checkered
if the corresponding itemgra in config features an outline.
TODO: Slice already on polygon creation. Currently the slicing has to be
performed twice, because of tile preprocessing and saving is done in
seperate steps from the tempfiles.
TODO: Make the trigger for slicing configurable. Right now it slices
everything smaller than tile level 4.
Hopefully fixes #894",Will wait for result on #894 before proceeding.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,906,2019-10-11T13:38:52Z,2019-10-28T10:31:51Z,2019-10-28T12:28:44Z,MERGED,True,950,28,21,https://github.com/metalstrolch,enhancement:maptool:slice big polygons into smaller parts,14,[],https://github.com/navit-gps/navit/pull/906,https://github.com/metalstrolch,11,https://github.com/navit-gps/navit/pull/906#issuecomment-546878826,"This commit allows to slice all polygons (except poly_water_sliced) into
squares so that they fit into smaller map tiles. Holes if present are
correctly sliced as well.
This has the advantage that they do not need to be processed albeit not
being displayed, and navit-planet-extractor can filter them out.
This has the disadvantage that the big polygons are displayed checkered
if the corresponding itemgra in config features an outline.
TODO: Slice already on polygon creation. Currently the slicing has to be
performed twice, because of tile preprocessing and saving is done in
seperate steps from the tempfiles.
TODO: Make the trigger for slicing configurable. Right now it slices
everything smaller than tile level 4.
Hopefully fixes #894",Confirmed to do what it should. Preparing to merge.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,908,2019-10-12T15:56:26Z,2019-10-15T11:32:34Z,2019-10-15T17:50:10Z,CLOSED,False,690,569,12,https://github.com/jandegr,Android:feature settings,14,[],https://github.com/navit-gps/navit/pull/908,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/908,"Serves as an illustration for #548 and since this is for testing only this PR will never leave Draft status.
Adds an experimental settings entry in the Android menu.
The only implemented one is a test for devices troubled by #548
This is a very minimalistic implementation with the following properties

in an updrage install where a custom location was used, this location will be pciked up
and further used, but once you change to one of the suggestions in the settings menu, there is no way to go back to the original custom location (yet).
unfortunatly it still requires a restart after changing the map location
the suggested location for SD is supposed to fix it for all devices in  #548
for Marshmallow and up only
no need for permission storage to use the suggested locations
you can have maps in both the suggested locations and switch between them (with the restart inbetween ofcourse)","Serves as an illustration for #548 and since this is for testing only this PR will never leave Draft status.
Adds an experimental settings entry in the Android menu.
The only implemented one is a test for devices troubled by #548
This is a very minimalistic implementation with the following properties

in an updrage install where a custom location was used, this location will be pciked up
and further used, but once you change to one of the suggestions in the settings menu, there is no way to go back to the original custom location (yet).
unfortunatly it still requires a restart after changing the map location
the suggested location for SD is supposed to fix it for all devices in  #548
for Marshmallow and up only
no need for permission storage to use the suggested locations
you can have maps in both the suggested locations and switch between them (with the restart inbetween ofcourse)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,908,2019-10-12T15:56:26Z,2019-10-15T11:32:34Z,2019-10-15T17:50:10Z,CLOSED,False,690,569,12,https://github.com/jandegr,Android:feature settings,14,[],https://github.com/navit-gps/navit/pull/908,https://github.com/jandegr,2,https://github.com/navit-gps/navit/pull/908#issuecomment-542167942,"Serves as an illustration for #548 and since this is for testing only this PR will never leave Draft status.
Adds an experimental settings entry in the Android menu.
The only implemented one is a test for devices troubled by #548
This is a very minimalistic implementation with the following properties

in an updrage install where a custom location was used, this location will be pciked up
and further used, but once you change to one of the suggestions in the settings menu, there is no way to go back to the original custom location (yet).
unfortunatly it still requires a restart after changing the map location
the suggested location for SD is supposed to fix it for all devices in  #548
for Marshmallow and up only
no need for permission storage to use the suggested locations
you can have maps in both the suggested locations and switch between them (with the restart inbetween ofcourse)","Since this pr just serves  as an illustration for #548 there is no need for this to be an open PR, even if it has a draft label, so closing it.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,911,2019-10-13T09:30:53Z,2019-10-15T10:27:54Z,2019-10-15T11:08:21Z,MERGED,True,0,4,1,https://github.com/jandegr,CI:cleanup,2,[],https://github.com/navit-gps/navit/pull/911,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/911,"Storing translations was added to the android build on CI a long time ago to debug a specific issue.
It takes up to 30 seconds but is not needed anymore.
relates to #910","Storing translations was added to the android build on CI a long time ago to debug a specific issue.
It takes up to 30 seconds but is not needed anymore.
relates to #910",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,911,2019-10-13T09:30:53Z,2019-10-15T10:27:54Z,2019-10-15T11:08:21Z,MERGED,True,0,4,1,https://github.com/jandegr,CI:cleanup,2,[],https://github.com/navit-gps/navit/pull/911,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/911#issuecomment-542147982,"Storing translations was added to the android build on CI a long time ago to debug a specific issue.
It takes up to 30 seconds but is not needed anymore.
relates to #910",Merged this PR with admin rights since the pull requests from @jandegr seem to run on his account instead of the Navit-gps account which leeds to different statuses which are reported back to github.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,912,2019-10-15T19:11:12Z,2019-11-05T12:16:02Z,2019-11-05T12:16:07Z,MERGED,True,771,500,1,https://github.com/hoehnp,Update:i18n:Updated Swedish translation from launchpad,2,"['i18n', 'WIP']",https://github.com/navit-gps/navit/pull/912,https://github.com/hoehnp,1,https://github.com/navit-gps/navit/pull/912,"Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://navit.readthedocs.io/en/trunk/development/commit_guidelines.html
and that your code is compliant with out coding style guidelines:
https://navit.readthedocs.io/en/trunk/development/programming_guidelines.html","Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://navit.readthedocs.io/en/trunk/development/commit_guidelines.html
and that your code is compliant with out coding style guidelines:
https://navit.readthedocs.io/en/trunk/development/programming_guidelines.html",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,912,2019-10-15T19:11:12Z,2019-11-05T12:16:02Z,2019-11-05T12:16:07Z,MERGED,True,771,500,1,https://github.com/hoehnp,Update:i18n:Updated Swedish translation from launchpad,2,"['i18n', 'WIP']",https://github.com/navit-gps/navit/pull/912,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/912#issuecomment-544368059,"Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://navit.readthedocs.io/en/trunk/development/commit_guidelines.html
and that your code is compliant with out coding style guidelines:
https://navit.readthedocs.io/en/trunk/development/programming_guidelines.html",Still WIP?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,912,2019-10-15T19:11:12Z,2019-11-05T12:16:02Z,2019-11-05T12:16:07Z,MERGED,True,771,500,1,https://github.com/hoehnp,Update:i18n:Updated Swedish translation from launchpad,2,"['i18n', 'WIP']",https://github.com/navit-gps/navit/pull/912,https://github.com/hoehnp,3,https://github.com/navit-gps/navit/pull/912#issuecomment-546387565,"Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://navit.readthedocs.io/en/trunk/development/commit_guidelines.html
and that your code is compliant with out coding style guidelines:
https://navit.readthedocs.io/en/trunk/development/programming_guidelines.html",possibly next week on the weekend I can revisit this issue. @jkoan: if you want you can merge the intermediate version and I open a new PR later on.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,912,2019-10-15T19:11:12Z,2019-11-05T12:16:02Z,2019-11-05T12:16:07Z,MERGED,True,771,500,1,https://github.com/hoehnp,Update:i18n:Updated Swedish translation from launchpad,2,"['i18n', 'WIP']",https://github.com/navit-gps/navit/pull/912,https://github.com/hoehnp,4,https://github.com/navit-gps/navit/pull/912#issuecomment-549569056,"Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://navit.readthedocs.io/en/trunk/development/commit_guidelines.html
and that your code is compliant with out coding style guidelines:
https://navit.readthedocs.io/en/trunk/development/programming_guidelines.html",@pgrandin: any clue why despite using pull --rebase the branch is still out of date?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,912,2019-10-15T19:11:12Z,2019-11-05T12:16:02Z,2019-11-05T12:16:07Z,MERGED,True,771,500,1,https://github.com/hoehnp,Update:i18n:Updated Swedish translation from launchpad,2,"['i18n', 'WIP']",https://github.com/navit-gps/navit/pull/912,https://github.com/pgrandin,5,https://github.com/navit-gps/navit/pull/912#issuecomment-549798648,"Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://navit.readthedocs.io/en/trunk/development/commit_guidelines.html
and that your code is compliant with out coding style guidelines:
https://navit.readthedocs.io/en/trunk/development/programming_guidelines.html",@hoehnp looks like @jkoan fixed it for you :),True,{}
navit-gps/navit,https://github.com/navit-gps/navit,913,2019-10-15T19:21:50Z,2019-10-17T09:57:54Z,2019-10-17T09:58:02Z,MERGED,True,2,2,1,https://github.com/hoehnp,Disable building of navit for sailfish on i586 platform,2,[],https://github.com/navit-gps/navit/pull/913,https://github.com/hoehnp,1,https://github.com/navit-gps/navit/pull/913,In order to reduce the time spend in building navit for sailfish I disabled as discussed in  #910 the compilation steps for the i586 platform.,In order to reduce the time spend in building navit for sailfish I disabled as discussed in  #910 the compilation steps for the i586 platform.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,915,2019-10-17T09:46:08Z,2019-10-18T08:27:44Z,2019-10-18T08:27:56Z,MERGED,True,14,4,1,https://github.com/metalstrolch,fix:maptool:create valid zip64 central directory,2,[],https://github.com/navit-gps/navit/pull/915,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/915,"This fixes the zip64 central directory created by the maptool.
While the broken one works on navit, it failed to extract with usual zip
tools due to parts of the zip64 end of directory part not being filled
correctly with values.
This happens on all 64 bit zip files generated by maptool including the sample map since the multipolygon patches.
Files downloaded from planet extractor are and always have been corrupt as well. Without the source of the planet extractor, I don't know if this actually fixes the files shared by planet extractor as well.","This fixes the zip64 central directory created by the maptool.
While the broken one works on navit, it failed to extract with usual zip
tools due to parts of the zip64 end of directory part not being filled
correctly with values.
This happens on all 64 bit zip files generated by maptool including the sample map since the multipolygon patches.
Files downloaded from planet extractor are and always have been corrupt as well. Without the source of the planet extractor, I don't know if this actually fixes the files shared by planet extractor as well.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,915,2019-10-17T09:46:08Z,2019-10-18T08:27:44Z,2019-10-18T08:27:56Z,MERGED,True,14,4,1,https://github.com/metalstrolch,fix:maptool:create valid zip64 central directory,2,[],https://github.com/navit-gps/navit/pull/915,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/915#issuecomment-543549246,"This fixes the zip64 central directory created by the maptool.
While the broken one works on navit, it failed to extract with usual zip
tools due to parts of the zip64 end of directory part not being filled
correctly with values.
This happens on all 64 bit zip files generated by maptool including the sample map since the multipolygon patches.
Files downloaded from planet extractor are and always have been corrupt as well. Without the source of the planet extractor, I don't know if this actually fixes the files shared by planet extractor as well.",As far as i rememper from reading the zip spec some time ago this is correct :D,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,915,2019-10-17T09:46:08Z,2019-10-18T08:27:44Z,2019-10-18T08:27:56Z,MERGED,True,14,4,1,https://github.com/metalstrolch,fix:maptool:create valid zip64 central directory,2,[],https://github.com/navit-gps/navit/pull/915,https://github.com/metalstrolch,3,https://github.com/navit-gps/navit/pull/915#issuecomment-543595885,"This fixes the zip64 central directory created by the maptool.
While the broken one works on navit, it failed to extract with usual zip
tools due to parts of the zip64 end of directory part not being filled
correctly with values.
This happens on all 64 bit zip files generated by maptool including the sample map since the multipolygon patches.
Files downloaded from planet extractor are and always have been corrupt as well. Without the source of the planet extractor, I don't know if this actually fixes the files shared by planet extractor as well.","Merging this. Hope it doesn't have any negative effect on the planet extractor.
Done this to ease up working on a ""planet extractor"" tool myself.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,916,2019-10-19T01:12:05Z,2019-10-21T06:27:24Z,2019-10-23T01:56:35Z,MERGED,True,154,0,2,https://github.com/aerostitch,update:docs:Migrate Android development documentation over,1,['doc'],https://github.com/navit-gps/navit/pull/916,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/916,"Migrating the following docs:
https://wiki.navit-project.org/index.php/Android_development","Migrating the following docs:
https://wiki.navit-project.org/index.php/Android_development",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,917,2019-10-20T23:17:38Z,2019-10-27T17:04:01Z,2019-10-29T17:19:12Z,MERGED,True,13,31,3,https://github.com/aerostitch,cleanup:search:Remove duplicate code for search_fix_spaces,9,"['core', 'cleanup']",https://github.com/navit-gps/navit/pull/917,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/917,"Closes: #898
The only differences I can see between the function in search.c and the one in android.c are:

the signature takes a const char * in android.c instead of a char * which shouldn't be a problem
the 1st if of the for loop has a duplicate ret[i] == ',' || condition which is cleaned up with the PR

Note that this would add a compilation warning saying:
warning: passing argument 1 of ‘search_fix_spaces’ discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]

But as we need the const context for the android part to call ReleaseStringUTFChars I'm not sure if there's a better way to do that.","Closes: #898
The only differences I can see between the function in search.c and the one in android.c are:

the signature takes a const char * in android.c instead of a char * which shouldn't be a problem
the 1st if of the for loop has a duplicate ret[i] == ',' || condition which is cleaned up with the PR

Note that this would add a compilation warning saying:
warning: passing argument 1 of ‘search_fix_spaces’ discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]

But as we need the const context for the android part to call ReleaseStringUTFChars I'm not sure if there's a better way to do that.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,917,2019-10-20T23:17:38Z,2019-10-27T17:04:01Z,2019-10-29T17:19:12Z,MERGED,True,13,31,3,https://github.com/aerostitch,cleanup:search:Remove duplicate code for search_fix_spaces,9,"['core', 'cleanup']",https://github.com/navit-gps/navit/pull/917,https://github.com/aerostitch,2,https://github.com/navit-gps/navit/pull/917#issuecomment-544304290,"Closes: #898
The only differences I can see between the function in search.c and the one in android.c are:

the signature takes a const char * in android.c instead of a char * which shouldn't be a problem
the 1st if of the for loop has a duplicate ret[i] == ',' || condition which is cleaned up with the PR

Note that this would add a compilation warning saying:
warning: passing argument 1 of ‘search_fix_spaces’ discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]

But as we need the const context for the android part to call ReleaseStringUTFChars I'm not sure if there's a better way to do that.",I added 1b50447 to avoid that discarded qualifier warning. Let me know if you want to keep it or not. Either way is fine with me.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,917,2019-10-20T23:17:38Z,2019-10-27T17:04:01Z,2019-10-29T17:19:12Z,MERGED,True,13,31,3,https://github.com/aerostitch,cleanup:search:Remove duplicate code for search_fix_spaces,9,"['core', 'cleanup']",https://github.com/navit-gps/navit/pull/917,https://github.com/jandegr,3,https://github.com/navit-gps/navit/pull/917#issuecomment-544440513,"Closes: #898
The only differences I can see between the function in search.c and the one in android.c are:

the signature takes a const char * in android.c instead of a char * which shouldn't be a problem
the 1st if of the for loop has a duplicate ret[i] == ',' || condition which is cleaned up with the PR

Note that this would add a compilation warning saying:
warning: passing argument 1 of ‘search_fix_spaces’ discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]

But as we need the const context for the android part to call ReleaseStringUTFChars I'm not sure if there's a better way to do that.","To test I started with testing the old code
3 sample tests (the - is printed to show the start and end and is not part of the string)
searchstring = -de, /t          -
resultstring = -de t-
searchstring = -,,   ,///,f th,u/h -
resultstring = -f th u h-
searchstring = -        hjk-
resultstring = -hjk-
based on the output of some tests the behaviour can be described as
replaces , and / by a space
then
removes all trailing spaces and limits consequtive spaces 'within' the string to one single,
removes all preceding spaces but a string with just a bunch of spaces remains as is.
In the old situation the code was right above the usage of it, but since it is now exported from within search, maybe a little doc is appropriate.
STEP 2 test the new situation (duplicate removed and android uses the code fro search.c) but without the change for the compiler warning.
I ran a bunch of teststrings (a lot more than I posted as samples above) and found no difference whatsoever. No matter how much tests I do, it can't prove there is no problem, it can only make my confidence grow versus one single failing test is enough to prove there is a problem, but such a failing testcase was not found.
My eyesight is slowly getting less, but with the exception of the signature, one blank line and the little duplicate 'or' statement I found no difference in the code either. The android code used to have the dupl. 'or' too, I removed it recently in android.c but did not bother to remove it in search, despite I knew it was for 100% just copy pasted from there. So I provided an argument to fix those code duplications, an issue (trivial in this case) is fixed in one copy of the code and left alone in the other(s).
Same argument goes for adding doc.
STEP 3 the fix for the compiler warning is not tested since there is already a more in-depth discussion started about it.
All tests were done from within an Android activity.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,917,2019-10-20T23:17:38Z,2019-10-27T17:04:01Z,2019-10-29T17:19:12Z,MERGED,True,13,31,3,https://github.com/aerostitch,cleanup:search:Remove duplicate code for search_fix_spaces,9,"['core', 'cleanup']",https://github.com/navit-gps/navit/pull/917,https://github.com/metalstrolch,4,https://github.com/navit-gps/navit/pull/917#issuecomment-544445276,"Closes: #898
The only differences I can see between the function in search.c and the one in android.c are:

the signature takes a const char * in android.c instead of a char * which shouldn't be a problem
the 1st if of the for loop has a duplicate ret[i] == ',' || condition which is cleaned up with the PR

Note that this would add a compilation warning saying:
warning: passing argument 1 of ‘search_fix_spaces’ discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]

But as we need the const context for the android part to call ReleaseStringUTFChars I'm not sure if there's a better way to do that.","@jandegr  Yeah, but the code in search.c for example doesn't remove multiple spaces from the result, while the android.c version does. So if removing the android version, the android code then gets feed with search strings containing multiple space sequences. Which may or may not be a problem. Same the other way round.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,917,2019-10-20T23:17:38Z,2019-10-27T17:04:01Z,2019-10-29T17:19:12Z,MERGED,True,13,31,3,https://github.com/aerostitch,cleanup:search:Remove duplicate code for search_fix_spaces,9,"['core', 'cleanup']",https://github.com/navit-gps/navit/pull/917,https://github.com/jandegr,5,https://github.com/navit-gps/navit/pull/917#issuecomment-544448493,"Closes: #898
The only differences I can see between the function in search.c and the one in android.c are:

the signature takes a const char * in android.c instead of a char * which shouldn't be a problem
the 1st if of the for loop has a duplicate ret[i] == ',' || condition which is cleaned up with the PR

Note that this would add a compilation warning saying:
warning: passing argument 1 of ‘search_fix_spaces’ discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]

But as we need the const context for the android part to call ReleaseStringUTFChars I'm not sure if there's a better way to do that.",removed comment because outdated,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,917,2019-10-20T23:17:38Z,2019-10-27T17:04:01Z,2019-10-29T17:19:12Z,MERGED,True,13,31,3,https://github.com/aerostitch,cleanup:search:Remove duplicate code for search_fix_spaces,9,"['core', 'cleanup']",https://github.com/navit-gps/navit/pull/917,https://github.com/aerostitch,6,https://github.com/navit-gps/navit/pull/917#issuecomment-544774038,"Closes: #898
The only differences I can see between the function in search.c and the one in android.c are:

the signature takes a const char * in android.c instead of a char * which shouldn't be a problem
the 1st if of the for loop has a duplicate ret[i] == ',' || condition which is cleaned up with the PR

Note that this would add a compilation warning saying:
warning: passing argument 1 of ‘search_fix_spaces’ discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]

But as we need the const context for the android part to call ReleaseStringUTFChars I'm not sure if there's a better way to do that.","Hi @metalstrolch ,
Good catch for the redirect, thanks!
I changed the function signature to add the const (I didn't actually realize that it would work providing a char to a function having a const char in the signature).
I compared both functions using vimdiff and I don't see the difference outside of the extra empty line and signature. Based on my tests it looks to me that they both handle multiple spaces.
I've added also the comments for the function.
Let me know if you still see any issue with the new version.
Thanks a LOT for both of your time guys,
Joseph",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,917,2019-10-20T23:17:38Z,2019-10-27T17:04:01Z,2019-10-29T17:19:12Z,MERGED,True,13,31,3,https://github.com/aerostitch,cleanup:search:Remove duplicate code for search_fix_spaces,9,"['core', 'cleanup']",https://github.com/navit-gps/navit/pull/917,https://github.com/aerostitch,7,https://github.com/navit-gps/navit/pull/917#issuecomment-544843202,"Closes: #898
The only differences I can see between the function in search.c and the one in android.c are:

the signature takes a const char * in android.c instead of a char * which shouldn't be a problem
the 1st if of the for loop has a duplicate ret[i] == ',' || condition which is cleaned up with the PR

Note that this would add a compilation warning saying:
warning: passing argument 1 of ‘search_fix_spaces’ discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]

But as we need the const context for the android part to call ReleaseStringUTFChars I'm not sure if there's a better way to do that.","I've made some unit tests separately in https://gist.github.com/aerostitch/faa106d7534416c4dd9dc7e57dbfd209 and discovered a corner case that was not handled properly which is that the pointer was not incremented when the string was only containing chars that we wanted to discard. I addressed that issue in 1cecebf
But then I started thinking that maybe we'd like to discard not only spaces but all white-space characters so I made a slightly different implementation of the function: https://gist.github.com/aerostitch/faa106d7534416c4dd9dc7e57dbfd209#file-search-c
Let me know which one you like best.
Thanks!
Joseph",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,917,2019-10-20T23:17:38Z,2019-10-27T17:04:01Z,2019-10-29T17:19:12Z,MERGED,True,13,31,3,https://github.com/aerostitch,cleanup:search:Remove duplicate code for search_fix_spaces,9,"['core', 'cleanup']",https://github.com/navit-gps/navit/pull/917,https://github.com/jandegr,8,https://github.com/navit-gps/navit/pull/917#issuecomment-545608365,"Closes: #898
The only differences I can see between the function in search.c and the one in android.c are:

the signature takes a const char * in android.c instead of a char * which shouldn't be a problem
the 1st if of the for loop has a duplicate ret[i] == ',' || condition which is cleaned up with the PR

Note that this would add a compilation warning saying:
warning: passing argument 1 of ‘search_fix_spaces’ discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]

But as we need the const context for the android part to call ReleaseStringUTFChars I'm not sure if there's a better way to do that.","I am ok with any version, if somebody gives ok for those C related issue.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,917,2019-10-20T23:17:38Z,2019-10-27T17:04:01Z,2019-10-29T17:19:12Z,MERGED,True,13,31,3,https://github.com/aerostitch,cleanup:search:Remove duplicate code for search_fix_spaces,9,"['core', 'cleanup']",https://github.com/navit-gps/navit/pull/917,https://github.com/aerostitch,9,https://github.com/navit-gps/navit/pull/917#issuecomment-546092256,"Closes: #898
The only differences I can see between the function in search.c and the one in android.c are:

the signature takes a const char * in android.c instead of a char * which shouldn't be a problem
the 1st if of the for loop has a duplicate ret[i] == ',' || condition which is cleaned up with the PR

Note that this would add a compilation warning saying:
warning: passing argument 1 of ‘search_fix_spaces’ discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]

But as we need the const context for the android part to call ReleaseStringUTFChars I'm not sure if there's a better way to do that.","Thanks for the review guys.
@metalstrolch Are you ok with the latest version of the change?
Do you want me to include the isspace  changes I was testing out in https://github.com/aerostitch/unit_testing_c/blob/master/src/search.c before merging? (as that part is separate from the duplicate removal I can create a PR later for functionality change.)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,917,2019-10-20T23:17:38Z,2019-10-27T17:04:01Z,2019-10-29T17:19:12Z,MERGED,True,13,31,3,https://github.com/aerostitch,cleanup:search:Remove duplicate code for search_fix_spaces,9,"['core', 'cleanup']",https://github.com/navit-gps/navit/pull/917,https://github.com/aerostitch,10,https://github.com/navit-gps/navit/pull/917#issuecomment-546713994,"Closes: #898
The only differences I can see between the function in search.c and the one in android.c are:

the signature takes a const char * in android.c instead of a char * which shouldn't be a problem
the 1st if of the for loop has a duplicate ret[i] == ',' || condition which is cleaned up with the PR

Note that this would add a compilation warning saying:
warning: passing argument 1 of ‘search_fix_spaces’ discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]

But as we need the const context for the android part to call ReleaseStringUTFChars I'm not sure if there's a better way to do that.",Thx! :),True,{}
navit-gps/navit,https://github.com/navit-gps/navit,919,2019-10-24T17:01:19Z,2019-10-29T15:54:36Z,2019-10-29T17:18:59Z,MERGED,True,693,747,16,https://github.com/jandegr,Fix:Android:fixes,18,"['android', 'cleanup']",https://github.com/navit-gps/navit/pull/919,https://github.com/jandegr,1,https://github.com/navit-gps/navit/pull/919,"Restores the titlebar of the mapdownloadactivity showing available space
makes the softkeyboard show up on sdk29 devices
untangles the callbackmessagechannel from navitgraphics
where receiving intents already worked after #812 when navit was not running or running backgrounded with the mapview, this fixes it for splitscreen mode and cases where navit had another activity on top
defers graphics updates in case the mapview is not visible

note : Android does not refresh available space often, so after deleting or downloading a map a restart of Navit is sometimes needed to show the correct free space. This is not a Navit issue and I have no idea on how to force Android to update freespace sooner.
A test with getAllocatableBytes() did not solve it.","Restores the titlebar of the mapdownloadactivity showing available space
makes the softkeyboard show up on sdk29 devices
untangles the callbackmessagechannel from navitgraphics
where receiving intents already worked after #812 when navit was not running or running backgrounded with the mapview, this fixes it for splitscreen mode and cases where navit had another activity on top
defers graphics updates in case the mapview is not visible

note : Android does not refresh available space often, so after deleting or downloading a map a restart of Navit is sometimes needed to show the correct free space. This is not a Navit issue and I have no idea on how to force Android to update freespace sooner.
A test with getAllocatableBytes() did not solve it.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,919,2019-10-24T17:01:19Z,2019-10-29T15:54:36Z,2019-10-29T17:18:59Z,MERGED,True,693,747,16,https://github.com/jandegr,Fix:Android:fixes,18,"['android', 'cleanup']",https://github.com/navit-gps/navit/pull/919,https://github.com/jandegr,2,https://github.com/navit-gps/navit/pull/919#issuecomment-546050041,"Restores the titlebar of the mapdownloadactivity showing available space
makes the softkeyboard show up on sdk29 devices
untangles the callbackmessagechannel from navitgraphics
where receiving intents already worked after #812 when navit was not running or running backgrounded with the mapview, this fixes it for splitscreen mode and cases where navit had another activity on top
defers graphics updates in case the mapview is not visible

note : Android does not refresh available space often, so after deleting or downloading a map a restart of Navit is sometimes needed to show the correct free space. This is not a Navit issue and I have no idea on how to force Android to update freespace sooner.
A test with getAllocatableBytes() did not solve it.","Includes backing-up bookmark.txt on a backup account for testing.
expected to work at least on devices >= sdk 23, maybe it can work on older devices too.
Testscenario

fresh install of navit on sdk 28 nokia
download a map (optional)
make some bookmark
make the device do a backup (because of no patience to wait for the scheduled backup)
check the backupaccount on a desktop to view the backup has happened
uninstall navit
verify all files effectively are removed
fresh install of navit

Do NOT change the default path, the testcenario did not mention doing it but some might be tempted to change it anyway and uninstall navit if one was present on the device to have the fresh install of the first step.
watch logcat
I/Backup: [GmsBackupTransport] Got full restore package: org.navitproject.navit 2019-10-24 20:20:25.699 889-1822/?
 I/BackupManagerService: Next restore package: RestoreDescription{org.navitproject.navit : STREAM} 2019-10-24 20:20:25.725 5450-5473/?
I/Backup: [FullRestoreDataProcessorFac] Performing unencrypted restore for org.navitproject.navit
D/BackupManagerService: restoreFinished packageName=org.navitproject.navit
D/BackupManagerService: Restore complete, killing host process of org.navitproject.navit
result : the bookmark is restored right away at install",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,919,2019-10-24T17:01:19Z,2019-10-29T15:54:36Z,2019-10-29T17:18:59Z,MERGED,True,693,747,16,https://github.com/jandegr,Fix:Android:fixes,18,"['android', 'cleanup']",https://github.com/navit-gps/navit/pull/919,https://github.com/jandegr,3,https://github.com/navit-gps/navit/pull/919#issuecomment-546242203,"Restores the titlebar of the mapdownloadactivity showing available space
makes the softkeyboard show up on sdk29 devices
untangles the callbackmessagechannel from navitgraphics
where receiving intents already worked after #812 when navit was not running or running backgrounded with the mapview, this fixes it for splitscreen mode and cases where navit had another activity on top
defers graphics updates in case the mapview is not visible

note : Android does not refresh available space often, so after deleting or downloading a map a restart of Navit is sometimes needed to show the correct free space. This is not a Navit issue and I have no idea on how to force Android to update freespace sooner.
A test with getAllocatableBytes() did not solve it.","tested on
android 4.1.2 (sdk 16) Samsung GT-S5310
android 4.2.2 (sdk 17) Asus me173
android 5.1.1 (sdk 22) SM-J320H STF @pgrandin
android 6.0 (sdk 23) Motorola moto E2
android 7.1.1 (sdk 25) Lenovo moto E4 plus
android 8.0 (sdk 26) Samsung SM-J600G STF @pgrandin
android 9.0 (sdk 28) MI A2 STF @pgrandin
android 9.0 (sdk 28) nokia.
android 10 (sdk 29) AVD
on an android 4.1.2 (sdk 16) Samsung GT-S5310",True,{'THUMBS_UP': ['https://github.com/pgrandin']}
navit-gps/navit,https://github.com/navit-gps/navit,919,2019-10-24T17:01:19Z,2019-10-29T15:54:36Z,2019-10-29T17:18:59Z,MERGED,True,693,747,16,https://github.com/jandegr,Fix:Android:fixes,18,"['android', 'cleanup']",https://github.com/navit-gps/navit/pull/919,https://github.com/jandegr,4,https://github.com/navit-gps/navit/pull/919#issuecomment-547364725,"Restores the titlebar of the mapdownloadactivity showing available space
makes the softkeyboard show up on sdk29 devices
untangles the callbackmessagechannel from navitgraphics
where receiving intents already worked after #812 when navit was not running or running backgrounded with the mapview, this fixes it for splitscreen mode and cases where navit had another activity on top
defers graphics updates in case the mapview is not visible

note : Android does not refresh available space often, so after deleting or downloading a map a restart of Navit is sometimes needed to show the correct free space. This is not a Navit issue and I have no idea on how to force Android to update freespace sooner.
A test with getAllocatableBytes() did not solve it.","Last addition for this PR, some work on the mapdownloader

updates the estimated sizes of the predefined area's
some cleanup
the predefined area western europe is disabled, it contains more than the europe area where western europe should be a portion of europe
the predefined area of france also contains belgium and luxembourg, changed the name to make that clear
added a new area france + luxembourg, over 500MB smaller than the version including belgium completely",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,920,2019-10-24T18:06:54Z,2019-10-25T05:51:59Z,2019-10-29T17:18:05Z,CLOSED,False,202,238,16,https://github.com/jkoan,fix:doc:First set of style-fixes for reStructuredText/Read the Docs,1,"['doc', 'cleanup']",https://github.com/navit-gps/navit/pull/920,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/920,"These are a lot of fixes to fix to fiy styling of reStructuredText files, because they are invalid, now sphinx-build . build/html -E -v reports no Warnings any more.
More fixes will follow in other PRs to get updates to Read the Docs as fast as possible.","These are a lot of fixes to fix to fiy styling of reStructuredText files, because they are invalid, now sphinx-build . build/html -E -v reports no Warnings any more.
More fixes will follow in other PRs to get updates to Read the Docs as fast as possible.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,920,2019-10-24T18:06:54Z,2019-10-25T05:51:59Z,2019-10-29T17:18:05Z,CLOSED,False,202,238,16,https://github.com/jkoan,fix:doc:First set of style-fixes for reStructuredText/Read the Docs,1,"['doc', 'cleanup']",https://github.com/navit-gps/navit/pull/920,https://github.com/aerostitch,2,https://github.com/navit-gps/navit/pull/920#issuecomment-546090901,"These are a lot of fixes to fix to fiy styling of reStructuredText files, because they are invalid, now sphinx-build . build/html -E -v reports no Warnings any more.
More fixes will follow in other PRs to get updates to Read the Docs as fast as possible.",Thanks for doing that! :),True,{}
navit-gps/navit,https://github.com/navit-gps/navit,920,2019-10-24T18:06:54Z,2019-10-25T05:51:59Z,2019-10-29T17:18:05Z,CLOSED,False,202,238,16,https://github.com/jkoan,fix:doc:First set of style-fixes for reStructuredText/Read the Docs,1,"['doc', 'cleanup']",https://github.com/navit-gps/navit/pull/920,https://github.com/jkoan,3,https://github.com/navit-gps/navit/pull/920#issuecomment-546211645,"These are a lot of fixes to fix to fiy styling of reStructuredText files, because they are invalid, now sphinx-build . build/html -E -v reports no Warnings any more.
More fixes will follow in other PRs to get updates to Read the Docs as fast as possible.","Neet to reopen this PR to trigger Github checks again, the circleci config on my project was broken...",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,921,2019-10-25T05:52:39Z,2019-10-28T10:45:47Z,2019-10-29T17:18:12Z,MERGED,True,202,238,16,https://github.com/jkoan,fix:doc:First set of style-fixes for reStructuredText/Read the Docs,1,"['doc', 'cleanup']",https://github.com/navit-gps/navit/pull/921,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/921,"These are a lot of fixes to fix to fiy styling of reStructuredText files, because they are invalid, now sphinx-build . build/html -E -v reports no Warnings any more.
More fixes will follow in other PRs to get updates to Read the Docs as fast as possible.","These are a lot of fixes to fix to fiy styling of reStructuredText files, because they are invalid, now sphinx-build . build/html -E -v reports no Warnings any more.
More fixes will follow in other PRs to get updates to Read the Docs as fast as possible.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,921,2019-10-25T05:52:39Z,2019-10-28T10:45:47Z,2019-10-29T17:18:12Z,MERGED,True,202,238,16,https://github.com/jkoan,fix:doc:First set of style-fixes for reStructuredText/Read the Docs,1,"['doc', 'cleanup']",https://github.com/navit-gps/navit/pull/921,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/921#issuecomment-546220031,"These are a lot of fixes to fix to fiy styling of reStructuredText files, because they are invalid, now sphinx-build . build/html -E -v reports no Warnings any more.
More fixes will follow in other PRs to get updates to Read the Docs as fast as possible.",I really have no clue why github checks dosnt show up... but all oldstyle checks passed (its only a docs change anyway),True,{}
navit-gps/navit,https://github.com/navit-gps/navit,921,2019-10-25T05:52:39Z,2019-10-28T10:45:47Z,2019-10-29T17:18:12Z,MERGED,True,202,238,16,https://github.com/jkoan,fix:doc:First set of style-fixes for reStructuredText/Read the Docs,1,"['doc', 'cleanup']",https://github.com/navit-gps/navit/pull/921,https://github.com/aerostitch,3,https://github.com/navit-gps/navit/pull/921#issuecomment-546436497,"These are a lot of fixes to fix to fiy styling of reStructuredText files, because they are invalid, now sphinx-build . build/html -E -v reports no Warnings any more.
More fixes will follow in other PRs to get updates to Read the Docs as fast as possible.","Based on https://thomas-cokelaer.info/tutorials/sphinx/rest_syntax.html you don't have to overline the 1st level titles. Maybe we should keep the titles that are not document title (the one on the top of the page) overlined + underlined and the rest just underline. What do you think?
I'm just asking because it seems that overlining is a bit too much here.
Also is the following convention what you're going for? (Just to make sure we're on the same page)
# with overline, for parts
* with overline, for chapters
= for sections
- for subsections
^ for subsubsections
“ for paragraphs

Also what do you consider as parts and what do you consider as chapters?
To me parts is like NAVIT'S DEVELOPER DOCUMENTATION and Navit's user documentation that you declare in https://raw.githubusercontent.com/navit-gps/navit/trunk/docs/index.rst
And chapters are the headers you declare in the 1st lines of the page.
But in this case I don't see why we would have a rst format for it so I just want to clarify that.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,923,2019-10-27T20:09:06Z,2019-10-28T21:07:07Z,2019-10-29T17:18:45Z,MERGED,True,35,11,2,https://github.com/aerostitch,update:doc:Add section about contributing to the documentation and fix toctree indentation,8,['doc'],https://github.com/navit-gps/navit/pull/923,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/923,"Fixes:

toctree directive requires a 3 spaces indentation as specified in https://documentation-style-guide-sphinx.readthedocs.io/en/latest/style-guide.html#indentation
Add a section for contributing to the documentation","Fixes:

toctree directive requires a 3 spaces indentation as specified in https://documentation-style-guide-sphinx.readthedocs.io/en/latest/style-guide.html#indentation
Add a section for contributing to the documentation",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,923,2019-10-27T20:09:06Z,2019-10-28T21:07:07Z,2019-10-29T17:18:45Z,MERGED,True,35,11,2,https://github.com/aerostitch,update:doc:Add section about contributing to the documentation and fix toctree indentation,8,['doc'],https://github.com/navit-gps/navit/pull/923,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/923#issuecomment-546944674,"Fixes:

toctree directive requires a 3 spaces indentation as specified in https://documentation-style-guide-sphinx.readthedocs.io/en/latest/style-guide.html#indentation
Add a section for contributing to the documentation","Also you could add a command line overwrite for the theme to build with the read the docs theme

Parameter would be: -Dhtml_theme=""sphinx_rtd_theme""",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,923,2019-10-27T20:09:06Z,2019-10-28T21:07:07Z,2019-10-29T17:18:45Z,MERGED,True,35,11,2,https://github.com/aerostitch,update:doc:Add section about contributing to the documentation and fix toctree indentation,8,['doc'],https://github.com/navit-gps/navit/pull/923,https://github.com/aerostitch,3,https://github.com/navit-gps/navit/pull/923#issuecomment-547026052,"Fixes:

toctree directive requires a 3 spaces indentation as specified in https://documentation-style-guide-sphinx.readthedocs.io/en/latest/style-guide.html#indentation
Add a section for contributing to the documentation","@jkoan I also just added how to view your rendered site locally in the doc FYI.
Thanks for the 👍 I'll merge when the circleci stuff is finished.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,926,2019-10-28T16:40:20Z,2019-10-28T16:58:46Z,2019-10-29T17:18:27Z,MERGED,True,18,11,4,https://github.com/jkoan,add:doc:Add Changelog to doc with Markdown include (m2r),1,['doc'],https://github.com/navit-gps/navit/pull/926,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/926,"Added Changelog to Doc to be able to reference to it, and as well have a nice integrated display even within the offline docs (pdf copy)","Added Changelog to Doc to be able to reference to it, and as well have a nice integrated display even within the offline docs (pdf copy)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,927,2019-10-28T21:25:17Z,2019-10-29T16:56:28Z,2019-10-29T16:56:32Z,MERGED,True,109,99,4,https://github.com/aerostitch,update:doc: Fix windows doc and cleanup sphinx warnings,3,"['doc', 'cleanup']",https://github.com/navit-gps/navit/pull/927,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/927,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,928,2019-10-29T13:01:25Z,2019-10-29T23:23:40Z,2019-10-29T23:24:15Z,MERGED,True,277,70,4,https://github.com/metalstrolch,fix:core:Don't flood stack on big map elements,5,['core'],https://github.com/navit-gps/navit/pull/928,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/928,"Use g_malloc instead of g_alloca on huge map elements.
Correctly calculate element intersection with map selection
even if buffer is too small.
First part of #924","Use g_malloc instead of g_alloca on huge map elements.
Correctly calculate element intersection with map selection
even if buffer is too small.
First part of #924",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,928,2019-10-29T13:01:25Z,2019-10-29T23:23:40Z,2019-10-29T23:24:15Z,MERGED,True,277,70,4,https://github.com/metalstrolch,fix:core:Don't flood stack on big map elements,5,['core'],https://github.com/navit-gps/navit/pull/928,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/928#issuecomment-547532989,"Use g_malloc instead of g_alloca on huge map elements.
Correctly calculate element intersection with map selection
even if buffer is too small.
First part of #924","Albeit doing what it should, I think I'll rewrite item_coord_get_within_selection function. Not because it's cyclomatic complexity, but because it got too ugly. Stay tuned.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,928,2019-10-29T13:01:25Z,2019-10-29T23:23:40Z,2019-10-29T23:24:15Z,MERGED,True,277,70,4,https://github.com/metalstrolch,fix:core:Don't flood stack on big map elements,5,['core'],https://github.com/navit-gps/navit/pull/928,https://github.com/metalstrolch,3,https://github.com/navit-gps/navit/pull/928#issuecomment-547578821,"Use g_malloc instead of g_alloca on huge map elements.
Correctly calculate element intersection with map selection
even if buffer is too small.
First part of #924","Hmm, seems CodeFactor checked the previous revision? Can somebody confirm this?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,928,2019-10-29T13:01:25Z,2019-10-29T23:23:40Z,2019-10-29T23:24:15Z,MERGED,True,277,70,4,https://github.com/metalstrolch,fix:core:Don't flood stack on big map elements,5,['core'],https://github.com/navit-gps/navit/pull/928,https://github.com/aerostitch,4,https://github.com/navit-gps/navit/pull/928#issuecomment-547661502,"Use g_malloc instead of g_alloca on huge map elements.
Correctly calculate element intersection with map selection
even if buffer is too small.
First part of #924","Looks like it counts as complex by calculating the number of if, for and while you have there.
To be honest it's fine to have some complex functions sometimes. It can be refactored if it makes sense later and split in smaller functions if the same code is re-used elsewhere but as long as the code is clear it should be fine.
And don't worry too much about codefactor it's not mandatory. What counts is to ship code that works, is documented and readable.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,928,2019-10-29T13:01:25Z,2019-10-29T23:23:40Z,2019-10-29T23:24:15Z,MERGED,True,277,70,4,https://github.com/metalstrolch,fix:core:Don't flood stack on big map elements,5,['core'],https://github.com/navit-gps/navit/pull/928,https://github.com/metalstrolch,5,https://github.com/navit-gps/navit/pull/928#issuecomment-547672681,"Use g_malloc instead of g_alloca on huge map elements.
Correctly calculate element intersection with map selection
even if buffer is too small.
First part of #924","To be honest, I don't really care for cyclomatic complexity count of CodeFactor. Seriously. I ranted enough about that. What puzzled me this time is that CodeFactor happily refers to outdated version 8a9c2cb in it's problem report. But hey, CodeFactor does lot's of funny things. Merging anyway, as this bug is quite nasty. Let's see what top do with Lake Nasser in map. Lake Nasser is by factors the biggest single OSM polygon.",True,{'ROCKET': ['https://github.com/aerostitch']}
navit-gps/navit,https://github.com/navit-gps/navit,929,2019-10-29T17:54:40Z,2019-10-30T01:43:22Z,2019-10-30T01:43:27Z,MERGED,True,1,6,1,https://github.com/aerostitch,cleanup:ci:Simplify the listing of files for sanity check,3,"['build system', 'cleanup']",https://github.com/navit-gps/navit/pull/929,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/929,"The current way of doing with interval sometimes leads to the last commit from trunk being included in the diff, leading to false positives.
This change simplifies the way we pull the files, and should make it more reliable.","The current way of doing with interval sometimes leads to the last commit from trunk being included in the diff, leading to false positives.
This change simplifies the way we pull the files, and should make it more reliable.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,929,2019-10-29T17:54:40Z,2019-10-30T01:43:22Z,2019-10-30T01:43:27Z,MERGED,True,1,6,1,https://github.com/aerostitch,cleanup:ci:Simplify the listing of files for sanity check,3,"['build system', 'cleanup']",https://github.com/navit-gps/navit/pull/929,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/929#issuecomment-547688837,"The current way of doing with interval sometimes leads to the last commit from trunk being included in the diff, leading to false positives.
This change simplifies the way we pull the files, and should make it more reliable.",I like it!,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,930,2019-10-29T19:27:37Z,2019-10-29T22:14:24Z,2019-10-29T22:14:28Z,MERGED,True,164,170,9,https://github.com/aerostitch,cleanup:qt:Whitespaces and blank lines cleanup according to cpplint,5,[],https://github.com/navit-gps/navit/pull/930,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/930,"It's mostly to cleanup stuffs for codefactor, just whitespaces, extra white lines for example.","It's mostly to cleanup stuffs for codefactor, just whitespaces, extra white lines for example.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,930,2019-10-29T19:27:37Z,2019-10-29T22:14:24Z,2019-10-29T22:14:28Z,MERGED,True,164,170,9,https://github.com/aerostitch,cleanup:qt:Whitespaces and blank lines cleanup according to cpplint,5,[],https://github.com/navit-gps/navit/pull/930,https://github.com/aerostitch,2,https://github.com/navit-gps/navit/pull/930#issuecomment-547652936,"It's mostly to cleanup stuffs for codefactor, just whitespaces, extra white lines for example.","HAHAHA! Yeah I was bored and waiting for my sinusitis meds to kick in to clear up my fuzzy head! 😆
But also I'm fine helping cleanup style stuffs. It helps me read and understand code than smarter person than me write :)
If you want I can take back #889 and do the style cleanup so that it passes.
And if any other style stuffs discourage you in one of Navit's PR just ping me in the PR and I'll do the cleanup for you, I'm totally fine with it (I'm serious!). It distracts me from way more boring stuffs that I have to do every day! 😛
Anyway, thanks for the 👍",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,931,2019-10-30T00:28:49Z,2019-10-30T10:31:44Z,2019-11-04T17:48:16Z,MERGED,True,554,318,1,https://github.com/pgrandin,Update:i18n:Updated Kurdish (Sorani) translation from launchpad,4,['i18n'],https://github.com/navit-gps/navit/pull/931,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/931,"This is part of an effort to automate this process a bit further.
The version code is wrong but will be fixed in a future PR","This is part of an effort to automate this process a bit further.
The version code is wrong but will be fixed in a future PR",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,932,2019-10-30T00:30:16Z,2019-10-30T00:47:23Z,2019-10-30T00:47:27Z,MERGED,True,554,318,1,https://github.com/pgrandin,Update:i18n:Updated Welsh translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/932,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/932,"This is part of an effort to automate this process a bit further.
The version code is wrong but will be fixed in a future PR","This is part of an effort to automate this process a bit further.
The version code is wrong but will be fixed in a future PR",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,933,2019-10-30T00:31:17Z,2019-10-30T09:17:03Z,2019-10-31T16:48:29Z,MERGED,True,589,349,1,https://github.com/pgrandin,Update:i18n:Updated Danish translation from launchpad,5,['i18n'],https://github.com/navit-gps/navit/pull/933,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/933,"This is part of an effort to automate this process a bit further.
The version code is wrong but will be fixed in a future PR","This is part of an effort to automate this process a bit further.
The version code is wrong but will be fixed in a future PR",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,934,2019-10-30T00:33:05Z,2019-10-30T01:28:35Z,2019-10-30T01:28:39Z,MERGED,True,553,317,1,https://github.com/pgrandin,Update:i18n:Updated German (Switzerland) translation from launchpad,1,['i18n'],https://github.com/navit-gps/navit/pull/934,https://github.com/pgrandin,1,https://github.com/navit-gps/navit/pull/934,"This is part of an effort to automate this process a bit further.
The version code is wrong but will be fixed in a future PR","This is part of an effort to automate this process a bit further.
The version code is wrong but will be fixed in a future PR",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,935,2019-10-30T00:36:13Z,2019-10-30T01:03:04Z,2019-10-30T01:03:08Z,MERGED,True,228,186,30,https://github.com/metalstrolch,fix:all:fix compiler warnings,2,"['core', 'cleanup', 'WIP']",https://github.com/navit-gps/navit/pull/935,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/935,This pull request tries to solve most compiler warnings. Specially the nasty ones about wrong function pointer casts.,This pull request tries to solve most compiler warnings. Specially the nasty ones about wrong function pointer casts.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,935,2019-10-30T00:36:13Z,2019-10-30T01:03:04Z,2019-10-30T01:03:08Z,MERGED,True,228,186,30,https://github.com/metalstrolch,fix:all:fix compiler warnings,2,"['core', 'cleanup', 'WIP']",https://github.com/navit-gps/navit/pull/935,https://github.com/pgrandin,2,https://github.com/navit-gps/navit/pull/935#issuecomment-547694396,This pull request tries to solve most compiler warnings. Specially the nasty ones about wrong function pointer casts.,That's pure grunt work. Thank you for taking care of it!,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,936,2019-10-30T02:04:50Z,2019-11-02T01:11:09Z,2019-11-05T19:24:19Z,MERGED,True,7,8,3,https://github.com/aerostitch,Move checkstyle into the sanity_check phase,5,['build system'],https://github.com/navit-gps/navit/pull/936,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/936,Trying to work on #725,Trying to work on #725,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,936,2019-10-30T02:04:50Z,2019-11-02T01:11:09Z,2019-11-05T19:24:19Z,MERGED,True,7,8,3,https://github.com/aerostitch,Move checkstyle into the sanity_check phase,5,['build system'],https://github.com/navit-gps/navit/pull/936,https://github.com/jandegr,2,https://github.com/navit-gps/navit/pull/936#issuecomment-547787992,Trying to work on #725,"Hi,
You're mixing things up here with .... ?
the opening post in 725 is about asyle.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,936,2019-10-30T02:04:50Z,2019-11-02T01:11:09Z,2019-11-05T19:24:19Z,MERGED,True,7,8,3,https://github.com/aerostitch,Move checkstyle into the sanity_check phase,5,['build system'],https://github.com/navit-gps/navit/pull/936,https://github.com/aerostitch,3,https://github.com/navit-gps/navit/pull/936#issuecomment-547937938,Trying to work on #725,"Hi @jandegr ,
I'm not sure I understand your remark so feel free to correct me.
In the thread in 725 (which has expanded to more than astyle) there is one request (if I understand it correctly) about having both the C/C++ (astyle) and Java (checkstyle) code style checks done at the same level.
The idea behind that is to avoid having to wait for a builder to start the android build before discovering that your PR has style issue when doing java code changes.
One of the issues that got people discouraged by waiting for java style check was #889 for example.
Does that makes sense?
Thanks
Joseph",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,936,2019-10-30T02:04:50Z,2019-11-02T01:11:09Z,2019-11-05T19:24:19Z,MERGED,True,7,8,3,https://github.com/aerostitch,Move checkstyle into the sanity_check phase,5,['build system'],https://github.com/navit-gps/navit/pull/936,https://github.com/jandegr,4,https://github.com/navit-gps/navit/pull/936#issuecomment-548042047,Trying to work on #725,"Hi,
Instead of 'expanding' in 725, the original issue is just dropped and 725 is just hijacked for other purposes, and we all know what those are.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,936,2019-10-30T02:04:50Z,2019-11-02T01:11:09Z,2019-11-05T19:24:19Z,MERGED,True,7,8,3,https://github.com/aerostitch,Move checkstyle into the sanity_check phase,5,['build system'],https://github.com/navit-gps/navit/pull/936,https://github.com/aerostitch,5,https://github.com/navit-gps/navit/pull/936#issuecomment-548050440,Trying to work on #725,"I'm not sure I understand what you mean. The title was""Revisit code style checks"" and raised one of the problems that was faced to illustrate one of the frustrations. As I said in that issue I think the astyle issue has been fixed in another PR. Now if you're saying that there's some hidden evil purposes behind the expansion of that I can assure you there's none from my side.
Now if there's a problem in 725 maybe we want to treat it there and evaluate here if the proposed change is something that makes sense and that we want. If you feel strong about this change not being the right way to address the wait for a builder to start the android build before discovering that your PR has style issue when doing java code changes issue, we can close it or change it and try to find a better approach that would maybe alleviate the frustration that has been happening.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,936,2019-10-30T02:04:50Z,2019-11-02T01:11:09Z,2019-11-05T19:24:19Z,MERGED,True,7,8,3,https://github.com/aerostitch,Move checkstyle into the sanity_check phase,5,['build system'],https://github.com/navit-gps/navit/pull/936,https://github.com/jandegr,6,https://github.com/navit-gps/navit/pull/936#issuecomment-548089152,Trying to work on #725,"ah whatever, you protested against checkstyle last year and now I brought it to zero virgule zero issues and blocking without your permission, so sure that will be changed. I am the very last one who will oppose so no need to beat around the bush.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,936,2019-10-30T02:04:50Z,2019-11-02T01:11:09Z,2019-11-05T19:24:19Z,MERGED,True,7,8,3,https://github.com/aerostitch,Move checkstyle into the sanity_check phase,5,['build system'],https://github.com/navit-gps/navit/pull/936,https://github.com/pgrandin,7,https://github.com/navit-gps/navit/pull/936#issuecomment-548100537,Trying to work on #725,"I'm not sure why people are getting twitchy. We're here to work towards the same goal.
@jandegr :

the original issue is just dropped and 725 is just hijacked

are you referring to the issue being dropped in the discussion or in this pull request? From what I read the intent of this pull request isn't to fix everything that was listed in the issue, but to start working on it. This looks fine to me.

you protested against checkstyle last year

actually I think that @aerostitch is the one who implemented it
Now, our current checkstyle/sanity checks is far from perfect. Yesterday I pushed a translation update and it complained about a .c file that I didn't touch. Annoying, but we just need to fix these glitches and soon we'll have a pipeline that will help us enforce and uphold better coding practices and standards.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,936,2019-10-30T02:04:50Z,2019-11-02T01:11:09Z,2019-11-05T19:24:19Z,MERGED,True,7,8,3,https://github.com/aerostitch,Move checkstyle into the sanity_check phase,5,['build system'],https://github.com/navit-gps/navit/pull/936,https://github.com/aerostitch,8,https://github.com/navit-gps/navit/pull/936#issuecomment-548120810,Trying to work on #725,"actually I think that @aerostitch is the one who implemented it

No. @jandegr did the implementation and did a great job at it.

ah whatever, you protested against checkstyle last year and now I brought it to zero virgule zero issues and blocking without your permission, so sure that will be changed. I am the very last one who will oppose so no need to beat around the bush.

@jandegr If you're referring to the heated discussion of last year where I took with less than empathy that I should have the fact that the merge of astyle messed up the work you were doing on checkstyle I'm really sorry. I don't think I properly apologized for that so here it is: my sincere apologies for that.
I've been through pretty tough times over the last 2 years and sometimes behaved like a real dick.
To be honest I think the work you did on checkstyle is really great and I don't want to put it in question, just move it more forward in the build process.
I know that this last year discussion ended up with you leaving the org and I think I speak for everybody when I say that we'd really like to have you back in the org full time.
You bring way more to the org than I do and if it would help I can stick to the docs migration and not touch the rest. Just let me know.
If you would feel more comfortable with me out of the org doing only external contributions I'm fine with that too. Just let me know.
But really here I'm just trying to make everybody's life easier around Navit.
Note: this PR is really not to hijack your work. It's just to put the check of both C and Java on the 1st step to get the detection of issues quicker.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,936,2019-10-30T02:04:50Z,2019-11-02T01:11:09Z,2019-11-05T19:24:19Z,MERGED,True,7,8,3,https://github.com/aerostitch,Move checkstyle into the sanity_check phase,5,['build system'],https://github.com/navit-gps/navit/pull/936,https://github.com/jandegr,9,https://github.com/navit-gps/navit/pull/936#issuecomment-548246109,Trying to work on #725,"hi,

apologies for that

thx, but really no need to,really not, was partially caused by bad timing.
then for the content itself, they just will come up with any kind of excuse to make it not-blocking anymore as you aready set as a goal in 725, not blocking
I knew this was going to happen beforehand, I don't even care a bit, and all the rest will be happy if the blocking status is removed. Once that is done they are not at all interested anymore in when or where what runs, everybody happy.
You know the short track, just change the severity tags so it does not block anymore. Codefactor will keep reporting new issues, so no other checkstyle related work to do.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,936,2019-10-30T02:04:50Z,2019-11-02T01:11:09Z,2019-11-05T19:24:19Z,MERGED,True,7,8,3,https://github.com/aerostitch,Move checkstyle into the sanity_check phase,5,['build system'],https://github.com/navit-gps/navit/pull/936,https://github.com/aerostitch,10,https://github.com/navit-gps/navit/pull/936#issuecomment-548468040,Trying to work on #725,"Hi,
I was proposing to make them not blocking because I was not seeing any other mean to remove the frustration around it but it seems that it's not going to be necessary based on the feedback which is great! It seems mostly to be more about keeping all the style checking (no matter the language) at the same place and enhance documentation, so that's somewhat positive :)
I've been working on cleaning up Codefactor when time permitted (and I personally don't mind doing that) but in a lot of PR I've seen people fixing issues shown by Codefactor in the code they were submitting even if it's only optional.
Open source is really things we do on our free time so it has to stay fun. That's why I've been worrying about the fact that some PR were abandoned because of frustration on how things work right now and I'm trying to find a good compromise to keep it appealing.
Hope that makes sense.
Don't be discouraged about all this. It's really about doing some minor adjustments to make contributing to Navit better. We've all cleaned a lot of stuffs over the last year thanks to the things we've been putting in place. I remember Codefactor showing over 1200 issues and now it's less than 500. Checkstyle is squeaky clean. astyle still seems to have hiccups but that's something I'll try to focus on if it still happens now that #929 is merged.
Once we've moved the rest of the wiki to readthedocs and been able to figure out what to do with trac I'll try to focus on continuing to cleanup our compilation warnings, then CodeFactor and after that Coverity (or maybe Coverity before CodeFactor we'll see). But don't worry, it's something that I think is important and is not going to be forgotten anytime soon.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,936,2019-10-30T02:04:50Z,2019-11-02T01:11:09Z,2019-11-05T19:24:19Z,MERGED,True,7,8,3,https://github.com/aerostitch,Move checkstyle into the sanity_check phase,5,['build system'],https://github.com/navit-gps/navit/pull/936,https://github.com/aerostitch,11,https://github.com/navit-gps/navit/pull/936#issuecomment-548884609,Trying to work on #725,"Thanks for the approval.
I'll wait until navit-gps/Dockerfiles#9 is merged to use the corresponding image so that we don't add too many concerns to #910",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,936,2019-10-30T02:04:50Z,2019-11-02T01:11:09Z,2019-11-05T19:24:19Z,MERGED,True,7,8,3,https://github.com/aerostitch,Move checkstyle into the sanity_check phase,5,['build system'],https://github.com/navit-gps/navit/pull/936,https://github.com/aerostitch,12,https://github.com/navit-gps/navit/pull/936#issuecomment-548994474,Trying to work on #725,"I actually pushed the image and tested it, works fine so I'll merge as I updated the circleci to use the new image.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,936,2019-10-30T02:04:50Z,2019-11-02T01:11:09Z,2019-11-05T19:24:19Z,MERGED,True,7,8,3,https://github.com/aerostitch,Move checkstyle into the sanity_check phase,5,['build system'],https://github.com/navit-gps/navit/pull/936,https://github.com/jandegr,13,https://github.com/navit-gps/navit/pull/936#issuecomment-549019468,Trying to work on #725,"May I ask if checkstylemain.html is dumped or is it just coincidence, for the record only.
https://15831-30791823-gh.circle-artifacts.com/0/reports/checkstyleMain.html",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,936,2019-10-30T02:04:50Z,2019-11-02T01:11:09Z,2019-11-05T19:24:19Z,MERGED,True,7,8,3,https://github.com/aerostitch,Move checkstyle into the sanity_check phase,5,['build system'],https://github.com/navit-gps/navit/pull/936,https://github.com/aerostitch,14,https://github.com/navit-gps/navit/pull/936#issuecomment-549030324,Trying to work on #725,"That's a great catch, thanks!
I fixed it as part of #941 as I'm modifying the .circleci/config.yaml in there. See 5306d79",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,936,2019-10-30T02:04:50Z,2019-11-02T01:11:09Z,2019-11-05T19:24:19Z,MERGED,True,7,8,3,https://github.com/aerostitch,Move checkstyle into the sanity_check phase,5,['build system'],https://github.com/navit-gps/navit/pull/936,https://github.com/jandegr,15,https://github.com/navit-gps/navit/pull/936#issuecomment-549036698,Trying to work on #725,"thx, and to keep my reputation, here's another one
Why install gradle ?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,936,2019-10-30T02:04:50Z,2019-11-02T01:11:09Z,2019-11-05T19:24:19Z,MERGED,True,7,8,3,https://github.com/aerostitch,Move checkstyle into the sanity_check phase,5,['build system'],https://github.com/navit-gps/navit/pull/936,https://github.com/aerostitch,16,https://github.com/navit-gps/navit/pull/936#issuecomment-549979779,Trying to work on #725,"Sorry for the late reply I've bee busy.
What do you mean install gradle? In the image? I just download the zip so that it doesn't have to do it everytime (using the link defined in the wrapper: https://github.com/navit-gps/navit/blob/trunk/gradle/wrapper/gradle-wrapper.properties#L5)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,937,2019-10-30T02:30:40Z,2019-10-31T16:32:49Z,2019-10-31T16:32:53Z,CLOSED,False,12,0,1,https://github.com/aerostitch,update:ci:Trying out using github action for checkstyle,1,"['build system', 'WIP']",https://github.com/navit-gps/navit/pull/937,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/937,"Trying out related to #725
For whatever reason the actions are not active on this repo and I can't figure out how to activate them.
The idea would be to have the checkstyle and sanity check out of circleci to avoid wasting CircleCI time and avoid scaring too much contributors.
We'll see. I'll keep the PR open for a bit to see if I can find out how to do a proof of concept on that.","Trying out related to #725
For whatever reason the actions are not active on this repo and I can't figure out how to activate them.
The idea would be to have the checkstyle and sanity check out of circleci to avoid wasting CircleCI time and avoid scaring too much contributors.
We'll see. I'll keep the PR open for a bit to see if I can find out how to do a proof of concept on that.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,938,2019-10-30T04:10:31Z,2019-10-31T17:07:33Z,2019-10-31T17:07:33Z,CLOSED,False,110,0,6,https://github.com/aerostitch,add:tests:Add a way to run unit tests in Navit,3,"['enhancement', 'build system', 'WIP']",https://github.com/navit-gps/navit/pull/938,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/938,"Starting to implement the idea proposed in #561
Just creating the PR for now as I need to do something else.
If you want to try it out or fix something in it feel free to. Just let me know so that we don't work at the same time on the same stuff.
We should probably be able to exploit some of the CMake integration for gtest too: https://cmake.org/cmake/help/v3.10/module/GoogleTest.html","Starting to implement the idea proposed in #561
Just creating the PR for now as I need to do something else.
If you want to try it out or fix something in it feel free to. Just let me know so that we don't work at the same time on the same stuff.
We should probably be able to exploit some of the CMake integration for gtest too: https://cmake.org/cmake/help/v3.10/module/GoogleTest.html",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,938,2019-10-30T04:10:31Z,2019-10-31T17:07:33Z,2019-10-31T17:07:33Z,CLOSED,False,110,0,6,https://github.com/aerostitch,add:tests:Add a way to run unit tests in Navit,3,"['enhancement', 'build system', 'WIP']",https://github.com/navit-gps/navit/pull/938,https://github.com/aerostitch,2,https://github.com/navit-gps/navit/pull/938#issuecomment-547735110,"Starting to implement the idea proposed in #561
Just creating the PR for now as I need to do something else.
If you want to try it out or fix something in it feel free to. Just let me know so that we don't work at the same time on the same stuff.
We should probably be able to exploit some of the CMake integration for gtest too: https://cmake.org/cmake/help/v3.10/module/GoogleTest.html","I seem to have triggered some kind of infinite loop.
I'm pretty noob on cmake so it's going to take me some time to figure out what's wrong probably.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,938,2019-10-30T04:10:31Z,2019-10-31T17:07:33Z,2019-10-31T17:07:33Z,CLOSED,False,110,0,6,https://github.com/aerostitch,add:tests:Add a way to run unit tests in Navit,3,"['enhancement', 'build system', 'WIP']",https://github.com/navit-gps/navit/pull/938,https://github.com/aerostitch,3,https://github.com/navit-gps/navit/pull/938#issuecomment-547736449,"Starting to implement the idea proposed in #561
Just creating the PR for now as I need to do something else.
If you want to try it out or fix something in it feel free to. Just let me know so that we don't work at the same time on the same stuff.
We should probably be able to exploit some of the CMake integration for gtest too: https://cmake.org/cmake/help/v3.10/module/GoogleTest.html","Found something that seems more relevant to rely on: https://github.com/google/googletest/blob/master/googletest/README.md#incorporating-into-an-existing-cmake-project
I'll have a look tomorrow.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,938,2019-10-30T04:10:31Z,2019-10-31T17:07:33Z,2019-10-31T17:07:33Z,CLOSED,False,110,0,6,https://github.com/aerostitch,add:tests:Add a way to run unit tests in Navit,3,"['enhancement', 'build system', 'WIP']",https://github.com/navit-gps/navit/pull/938,https://github.com/aerostitch,4,https://github.com/navit-gps/navit/pull/938#issuecomment-547738401,"Starting to implement the idea proposed in #561
Just creating the PR for now as I need to do something else.
If you want to try it out or fix something in it feel free to. Just let me know so that we don't work at the same time on the same stuff.
We should probably be able to exploit some of the CMake integration for gtest too: https://cmake.org/cmake/help/v3.10/module/GoogleTest.html","Used the example. googletest installs. Now the error is a link to target between navit and the tests.
[ 33%] No patch step for 'googletest'                                                                                 
[ 44%] Performing update step for 'googletest'             
[ 55%] No configure step for 'googletest'                                                                             
[ 66%] No build step for 'googletest'                                                                                 
[ 77%] No install step for 'googletest'                    
[ 88%] No test step for 'googletest'                       
[100%] Completed 'googletest'      
[100%] Built target googletest                             
-- Found PythonInterp: /usr/bin/python3.7 (found version ""3.7.5"")                                                     
CMake Error at CMakeLists.txt:960 (target_link_libraries):                                                            
  Target ""navit"" of type EXECUTABLE may not be linked into another target.                                            
  One may link only to INTERFACE, OBJECT, STATIC or SHARED libraries, or to                                           
  executables with the ENABLE_EXPORTS property set.        
                                                           
                                                                                                                      
-- Configuring incomplete, errors occurred!

I'll read https://crascit.com/2015/07/25/cmake-gtest/ tomorrow to see if I can understand how to make it work better. In the meantime I'm open to suggestions.
Note: I know that the git version for external_projects will be a problem for wince so we might have to disable it there until we get the wince image updated (that update is not trivial).",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,938,2019-10-30T04:10:31Z,2019-10-31T17:07:33Z,2019-10-31T17:07:33Z,CLOSED,False,110,0,6,https://github.com/aerostitch,add:tests:Add a way to run unit tests in Navit,3,"['enhancement', 'build system', 'WIP']",https://github.com/navit-gps/navit/pull/938,https://github.com/aerostitch,5,https://github.com/navit-gps/navit/pull/938#issuecomment-548475183,"Starting to implement the idea proposed in #561
Just creating the PR for now as I need to do something else.
If you want to try it out or fix something in it feel free to. Just let me know so that we don't work at the same time on the same stuff.
We should probably be able to exploit some of the CMake integration for gtest too: https://cmake.org/cmake/help/v3.10/module/GoogleTest.html","Closing the PR for now. This might take a while before I get things running and we'll need to upgrade the WinCE image which is going to be a nightmare.
Plus I'm kind of afraid that will bring a bit too much annoyance, so closing until I have something solid and easy to manage.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,940,2019-10-31T18:51:02Z,2019-11-05T11:14:02Z,2019-11-11T01:54:07Z,MERGED,True,419,350,29,https://github.com/metalstrolch,fix:various:fix compiler warnings,8,[],https://github.com/navit-gps/navit/pull/940,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/940,This PR fixes a lot of compiler warnings. The core and the well maintained plug ins build at least under Linux without severe warnings.,This PR fixes a lot of compiler warnings. The core and the well maintained plug ins build at least under Linux without severe warnings.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,940,2019-10-31T18:51:02Z,2019-11-05T11:14:02Z,2019-11-11T01:54:07Z,MERGED,True,419,350,29,https://github.com/metalstrolch,fix:various:fix compiler warnings,8,[],https://github.com/navit-gps/navit/pull/940,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/940#issuecomment-548519337,This PR fixes a lot of compiler warnings. The core and the well maintained plug ins build at least under Linux without severe warnings.,A pity CodeFactor doesn't help here. This would be really helpful.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,940,2019-10-31T18:51:02Z,2019-11-05T11:14:02Z,2019-11-11T01:54:07Z,MERGED,True,419,350,29,https://github.com/metalstrolch,fix:various:fix compiler warnings,8,[],https://github.com/navit-gps/navit/pull/940,https://github.com/metalstrolch,3,https://github.com/navit-gps/navit/pull/940#issuecomment-548524650,This PR fixes a lot of compiler warnings. The core and the well maintained plug ins build at least under Linux without severe warnings.,"The current CodeFactor ""findings"" are a good example why CodeFactor should not be blocking. The duplicated code is the plug ins. As those are built and linked separately, one cannot just ""unify"" the code. I think here the code was duplicated for good reasons. If anybody starts up a new plug in he will likely start by copying one of the existing ones. And most likely nobody wants to mess up the old one by trying to unify code.
It's good CodeFactor tells this, but it's also good the developer can decide to ignore it or not. Last but not least as the PR has nothing and really nothing to do with fixing such things.

just to have mentioned this for the die hard's to recognize.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,940,2019-10-31T18:51:02Z,2019-11-05T11:14:02Z,2019-11-11T01:54:07Z,MERGED,True,419,350,29,https://github.com/metalstrolch,fix:various:fix compiler warnings,8,[],https://github.com/navit-gps/navit/pull/940,https://github.com/aerostitch,4,https://github.com/navit-gps/navit/pull/940#issuecomment-549075786,This PR fixes a lot of compiler warnings. The core and the well maintained plug ins build at least under Linux without severe warnings.,"Codefactor is not blocking. The only one that is blocking is circleci (""build_all"" which is the target for all the circleci builds) and you can see it as it says ""Required"" next to details.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,940,2019-10-31T18:51:02Z,2019-11-05T11:14:02Z,2019-11-11T01:54:07Z,MERGED,True,419,350,29,https://github.com/metalstrolch,fix:various:fix compiler warnings,8,[],https://github.com/navit-gps/navit/pull/940,https://github.com/metalstrolch,5,https://github.com/navit-gps/navit/pull/940#issuecomment-549132471,This PR fixes a lot of compiler warnings. The core and the well maintained plug ins build at least under Linux without severe warnings.,"Yes luckily CodeFactor is not blocking anymore. But as there is another round of discussions going on in some PRs I do not refer from here, I left the comment to point out why CodeFactor shouldn't be blocking.
Its a good tool but far away from being fool prove.
And still I wonder that none of the tools complains about the very creative casting done in the C parts. This was common back in the days, but wasn't really a good Idea ever since as the compiler could trash the Stack by function pointer casting going wrong. Im planning to address the alignment issues on arm targets caused by this next.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,941,2019-11-02T01:24:48Z,2019-11-04T17:18:58Z,2019-11-04T17:19:28Z,MERGED,True,53,4,2,https://github.com/aerostitch,update:CI: skip the build steps if the change is only for documentation,11,"['build system', 'doc']",https://github.com/navit-gps/navit/pull/941,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/941,"Closes #925
The idea is to skip the build steps if the change is only done on *.md or *.rst files or is only in the docs folder.
Saves CI time and makes the time to have the relevant checks passing shorter. Should help on #910
Note that the branch should be be up-to-date with trunk to make it work.
Side note: if there is no diff with trunk (aka that's pushed on master or trunk) then we only check for the files in the last commit).
And if we are on a tag, we just exit 1 as we want to build even if the last change is a doc change.","Closes #925
The idea is to skip the build steps if the change is only done on *.md or *.rst files or is only in the docs folder.
Saves CI time and makes the time to have the relevant checks passing shorter. Should help on #910
Note that the branch should be be up-to-date with trunk to make it work.
Side note: if there is no diff with trunk (aka that's pushed on master or trunk) then we only check for the files in the last commit).
And if we are on a tag, we just exit 1 as we want to build even if the last change is a doc change.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,941,2019-11-02T01:24:48Z,2019-11-04T17:18:58Z,2019-11-04T17:19:28Z,MERGED,True,53,4,2,https://github.com/aerostitch,update:CI: skip the build steps if the change is only for documentation,11,"['build system', 'doc']",https://github.com/navit-gps/navit/pull/941,https://github.com/aerostitch,2,https://github.com/navit-gps/navit/pull/941#issuecomment-549030698,"Closes #925
The idea is to skip the build steps if the change is only done on *.md or *.rst files or is only in the docs folder.
Saves CI time and makes the time to have the relevant checks passing shorter. Should help on #910
Note that the branch should be be up-to-date with trunk to make it work.
Side note: if there is no diff with trunk (aka that's pushed on master or trunk) then we only check for the files in the last commit).
And if we are on a tag, we just exit 1 as we want to build even if the last change is a doc change.","Testing right now using 270e1c7 it almost works.
In build_linux, build-wince and build-windows I run this before the setup_requirements right now so git is not found. Should be an easy fix",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,941,2019-11-02T01:24:48Z,2019-11-04T17:18:58Z,2019-11-04T17:19:28Z,MERGED,True,53,4,2,https://github.com/aerostitch,update:CI: skip the build steps if the change is only for documentation,11,"['build system', 'doc']",https://github.com/navit-gps/navit/pull/941,https://github.com/aerostitch,3,https://github.com/navit-gps/navit/pull/941#issuecomment-549031456,"Closes #925
The idea is to skip the build steps if the change is only done on *.md or *.rst files or is only in the docs folder.
Saves CI time and makes the time to have the relevant checks passing shorter. Should help on #910
Note that the branch should be be up-to-date with trunk to make it work.
Side note: if there is no diff with trunk (aka that's pushed on master or trunk) then we only check for the files in the last commit).
And if we are on a tag, we just exit 1 as we want to build even if the last change is a doc change.",Alright so frigging build_win* are on old ubuntu with old bash that don't accept the declare options to local so I need to rewrite a bit the script.,True,{'LAUGH': ['https://github.com/pgrandin']}
navit-gps/navit,https://github.com/navit-gps/navit,941,2019-11-02T01:24:48Z,2019-11-04T17:18:58Z,2019-11-04T17:19:28Z,MERGED,True,53,4,2,https://github.com/aerostitch,update:CI: skip the build steps if the change is only for documentation,11,"['build system', 'doc']",https://github.com/navit-gps/navit/pull/941,https://github.com/aerostitch,4,https://github.com/navit-gps/navit/pull/941#issuecomment-549031583,"Closes #925
The idea is to skip the build steps if the change is only done on *.md or *.rst files or is only in the docs folder.
Saves CI time and makes the time to have the relevant checks passing shorter. Should help on #910
Note that the branch should be be up-to-date with trunk to make it work.
Side note: if there is no diff with trunk (aka that's pushed on master or trunk) then we only check for the files in the last commit).
And if we are on a tag, we just exit 1 as we want to build even if the last change is a doc change.","Also included in this PR the change for storing the checkstyle report that was broken in #936.
https://18961-30791823-gh.circle-artifacts.com/0/reports/checkstyleMain.html",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,941,2019-11-02T01:24:48Z,2019-11-04T17:18:58Z,2019-11-04T17:19:28Z,MERGED,True,53,4,2,https://github.com/aerostitch,update:CI: skip the build steps if the change is only for documentation,11,"['build system', 'doc']",https://github.com/navit-gps/navit/pull/941,https://github.com/aerostitch,5,https://github.com/navit-gps/navit/pull/941#issuecomment-549035029,"Closes #925
The idea is to skip the build steps if the change is only done on *.md or *.rst files or is only in the docs folder.
Saves CI time and makes the time to have the relevant checks passing shorter. Should help on #910
Note that the branch should be be up-to-date with trunk to make it work.
Side note: if there is no diff with trunk (aka that's pushed on master or trunk) then we only check for the files in the last commit).
And if we are on a tag, we just exit 1 as we want to build even if the last change is a doc change.","Alright. I think it's ready to review and merge.
Both filtered and non-filtered cases have been tested in this PR so we should be good to go I think.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,943,2019-11-05T18:35:40Z,2019-11-06T10:31:19Z,2019-11-06T10:31:19Z,MERGED,True,198,146,6,https://github.com/lains,Update:Android:Navit logo. Closes #909,2,"['icons', 'android']",https://github.com/navit-gps/navit/pull/943,https://github.com/lains,1,https://github.com/navit-gps/navit/pull/943,"Following the redesign of the Navit log in #436, this PR applies the new theme to the navit icon for Android.
After applying the changes in this PR, the logo would look like this:","Following the redesign of the Navit log in #436, this PR applies the new theme to the navit icon for Android.
After applying the changes in this PR, the logo would look like this:",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,944,2019-11-08T03:46:45Z,2019-11-08T07:00:12Z,2019-11-10T20:04:22Z,MERGED,True,88,59,1,https://github.com/aerostitch,add:doc:document the sanity check steps and add a note about the Java code,1,[],https://github.com/navit-gps/navit/pull/944,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/944,"I believe this is the last step for #725
@metalstrolch does that answer your questions about the style checks?","I believe this is the last step for #725
@metalstrolch does that answer your questions about the style checks?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,944,2019-11-08T03:46:45Z,2019-11-08T07:00:12Z,2019-11-10T20:04:22Z,MERGED,True,88,59,1,https://github.com/aerostitch,add:doc:document the sanity check steps and add a note about the Java code,1,[],https://github.com/navit-gps/navit/pull/944,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/944#issuecomment-551664037,"I believe this is the last step for #725
@metalstrolch does that answer your questions about the style checks?","What I'm still missing is the version of checkstyle required. At least Gentoo still ships one too old. And do we really require gradle to run it? On the boxes I usually code, Ill never get gradle. And no I won't run code installed by an obscure script. But hey, I doubt I ever will do Java for Android again here. So at least it's mentioned.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,944,2019-11-08T03:46:45Z,2019-11-08T07:00:12Z,2019-11-10T20:04:22Z,MERGED,True,88,59,1,https://github.com/aerostitch,add:doc:document the sanity check steps and add a note about the Java code,1,[],https://github.com/navit-gps/navit/pull/944,https://github.com/aerostitch,3,https://github.com/navit-gps/navit/pull/944#issuecomment-552228553,"I believe this is the last step for #725
@metalstrolch does that answer your questions about the style checks?","Trying to address your concern, I'll need more info in #945 for that if you don't mind. I didn't realize that Checkstyle came also separately from Gradle. ;)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,946,2019-11-10T21:56:56Z,2019-11-26T00:46:02Z,2019-11-26T00:46:17Z,MERGED,True,11,7,3,https://github.com/aerostitch,fix:ci:Fix checkstyle changes since 8.24,4,[],https://github.com/navit-gps/navit/pull/946,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/946,"In 8.24, the following change happened:
Change LineLength Check parent from TreeWalker to Checker. Author: rnveach, Roman Ivanov #2116

In 8.25, the following change happened:
JavadocMethodCheck: remove deprecated properties ignoreMethodNamesRegex, minLineCount, allowMissingJavadoc, allowMissingPropertyJavadoc. Author: rnveach #7096

This PR is fixing this.
Fixes #945","In 8.24, the following change happened:
Change LineLength Check parent from TreeWalker to Checker. Author: rnveach, Roman Ivanov #2116

In 8.25, the following change happened:
JavadocMethodCheck: remove deprecated properties ignoreMethodNamesRegex, minLineCount, allowMissingJavadoc, allowMissingPropertyJavadoc. Author: rnveach #7096

This PR is fixing this.
Fixes #945",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,946,2019-11-10T21:56:56Z,2019-11-26T00:46:02Z,2019-11-26T00:46:17Z,MERGED,True,11,7,3,https://github.com/aerostitch,fix:ci:Fix checkstyle changes since 8.24,4,[],https://github.com/navit-gps/navit/pull/946,https://github.com/aerostitch,2,https://github.com/navit-gps/navit/pull/946#issuecomment-552241281,"In 8.24, the following change happened:
Change LineLength Check parent from TreeWalker to Checker. Author: rnveach, Roman Ivanov #2116

In 8.25, the following change happened:
JavadocMethodCheck: remove deprecated properties ignoreMethodNamesRegex, minLineCount, allowMissingJavadoc, allowMissingPropertyJavadoc. Author: rnveach #7096

This PR is fixing this.
Fixes #945","@metalstrolch with the latest changes I updated the build.gradle and specified the version requirements in the doc.
Looks like we're going to need to have an update of checkstyle in gentoo. @pgrandin do you think you could help getting that in?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,946,2019-11-10T21:56:56Z,2019-11-26T00:46:02Z,2019-11-26T00:46:17Z,MERGED,True,11,7,3,https://github.com/aerostitch,fix:ci:Fix checkstyle changes since 8.24,4,[],https://github.com/navit-gps/navit/pull/946,https://github.com/aerostitch,3,https://github.com/navit-gps/navit/pull/946#issuecomment-558407502,"In 8.24, the following change happened:
Change LineLength Check parent from TreeWalker to Checker. Author: rnveach, Roman Ivanov #2116

In 8.25, the following change happened:
JavadocMethodCheck: remove deprecated properties ignoreMethodNamesRegex, minLineCount, allowMissingJavadoc, allowMissingPropertyJavadoc. Author: rnveach #7096

This PR is fixing this.
Fixes #945",Thanks for the review! :),True,{}
navit-gps/navit,https://github.com/navit-gps/navit,947,2019-11-17T14:12:02Z,2020-01-15T19:24:22Z,2020-01-15T19:24:23Z,CLOSED,False,7,134,3,https://github.com/bignaux,wip: remove custom cmake/FindProtobuf-c.cmake,3,['WIP'],https://github.com/navit-gps/navit/pull/947,https://github.com/bignaux,1,https://github.com/navit-gps/navit/pull/947,"btw , seems internal cmake https://cmake.org/cmake/help/v3.2/module/FindProtobuf.html doesn't work for  libprotobuf-c-dev","btw , seems internal cmake https://cmake.org/cmake/help/v3.2/module/FindProtobuf.html doesn't work for  libprotobuf-c-dev",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,947,2019-11-17T14:12:02Z,2020-01-15T19:24:22Z,2020-01-15T19:24:23Z,CLOSED,False,7,134,3,https://github.com/bignaux,wip: remove custom cmake/FindProtobuf-c.cmake,3,['WIP'],https://github.com/navit-gps/navit/pull/947,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/947#issuecomment-559204197,"btw , seems internal cmake https://cmake.org/cmake/help/v3.2/module/FindProtobuf.html doesn't work for  libprotobuf-c-dev","Hi @bignaux,
we have FindProtobuf-c.cmake (note the -c) because we need to find the version for c not the standart variant, so i think that this PR is invalid, right? @pgrandin",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,947,2019-11-17T14:12:02Z,2020-01-15T19:24:22Z,2020-01-15T19:24:23Z,CLOSED,False,7,134,3,https://github.com/bignaux,wip: remove custom cmake/FindProtobuf-c.cmake,3,['WIP'],https://github.com/navit-gps/navit/pull/947,https://github.com/jkoan,3,https://github.com/navit-gps/navit/pull/947#issuecomment-574816033,"btw , seems internal cmake https://cmake.org/cmake/help/v3.2/module/FindProtobuf.html doesn't work for  libprotobuf-c-dev",Closing this because of the reason from the last comment.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,955,2020-01-15T21:02:28Z,2020-01-15T21:16:54Z,2020-01-15T21:16:57Z,MERGED,True,1,9,1,https://github.com/jkoan,fix:build:android:Fix android build on circleci,1,[],https://github.com/navit-gps/navit/pull/955,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/955,"Fix android build on circleci, now using ndk version of the circleci images
tested with command: circleci local execute --job build_android","Fix android build on circleci, now using ndk version of the circleci images
tested with command: circleci local execute --job build_android",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,956,2020-01-15T21:55:01Z,2020-01-18T17:41:58Z,2020-01-18T17:41:58Z,MERGED,True,2,13,3,https://github.com/jkoan,change:build_android:Remove dependency of ant. Not needed anymore,2,[],https://github.com/navit-gps/navit/pull/956,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/956,"This PR removes ant as its not needed anymore
Tested with android, xml files generate well app installes and everythings good (as far i see)","This PR removes ant as its not needed anymore
Tested with android, xml files generate well app installes and everythings good (as far i see)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,957,2020-01-15T21:59:38Z,2020-01-18T23:07:24Z,2020-01-18T23:07:29Z,MERGED,True,4,1,2,https://github.com/jkoan,Fix run when in build dir,4,[],https://github.com/navit-gps/navit/pull/957,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/957,"As a follow up for #803 now hers a working fix which will work with all build systems supported by cmake.
If creates a new file which which navit is searching for. If Navit finds this it will run in build dir mode.
The file itself will not be included into binary distributions as desired.","As a follow up for #803 now hers a working fix which will work with all build systems supported by cmake.
If creates a new file which which navit is searching for. If Navit finds this it will run in build dir mode.
The file itself will not be included into binary distributions as desired.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,959,2020-01-18T16:32:24Z,2020-01-18T22:02:52Z,2020-01-18T22:02:56Z,MERGED,True,4,0,1,https://github.com/aerostitch,vehicle:fix: add compatibility for gpsd 3.20,3,['core'],https://github.com/navit-gps/navit/pull/959,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/959,"Hi,
In gpsd 3.20, all timestamp_t have been converted to timespec_t (see https://gitlab.com/gpsd/gpsd/blob/master/NEWS#L33).
This causes issues in Debian and Peter Michael Green proposed this patch in https://bugs.debian.org/948388 which makes sense to me.
Thanks for your help,
Joseph","Hi,
In gpsd 3.20, all timestamp_t have been converted to timespec_t (see https://gitlab.com/gpsd/gpsd/blob/master/NEWS#L33).
This causes issues in Debian and Peter Michael Green proposed this patch in https://bugs.debian.org/948388 which makes sense to me.
Thanks for your help,
Joseph",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,960,2020-01-18T22:49:56Z,2020-01-18T23:35:25Z,2020-01-18T23:35:29Z,MERGED,True,86,35,2,https://github.com/aerostitch,Prepare changelog for release 0.5.4,3,[],https://github.com/navit-gps/navit/pull/960,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/960,"Updating the changelog for the coming release.
This also update the contributors list based on our release process described in https://wiki.navit-project.org/index.php/Release_process","Updating the changelog for the coming release.
This also update the contributors list based on our release process described in https://wiki.navit-project.org/index.php/Release_process",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,961,2020-01-18T22:55:00Z,2020-01-18T23:36:56Z,2020-01-18T23:58:10Z,MERGED,True,2,2,2,https://github.com/aerostitch,Bump version to 0.5.4,2,[],https://github.com/navit-gps/navit/pull/961,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/961,"Standard process before cutting the tag as described in https://wiki.navit-project.org/index.php/Release_process
Requires #957 and #960 to be merged 1st!","Standard process before cutting the tag as described in https://wiki.navit-project.org/index.php/Release_process
Requires #957 and #960 to be merged 1st!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,963,2020-01-19T14:26:56Z,2020-01-19T15:47:15Z,2020-01-19T17:41:33Z,MERGED,True,44,14,6,https://github.com/mvglasow,Fix:port/android:Use new icon for notification,1,[],https://github.com/navit-gps/navit/pull/963,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/963,"Also updates the Android notification icon, which was still missing after #943.","Also updates the Android notification icon, which was still missing after #943.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,963,2020-01-19T14:26:56Z,2020-01-19T15:47:15Z,2020-01-19T17:41:33Z,MERGED,True,44,14,6,https://github.com/mvglasow,Fix:port/android:Use new icon for notification,1,[],https://github.com/navit-gps/navit/pull/963,https://github.com/mvglasow,2,https://github.com/navit-gps/navit/pull/963#issuecomment-576015543,"Also updates the Android notification icon, which was still missing after #943.","build_all Expected — Waiting for status to be reported

Something’s wrong here, everything shows up as successful on CircleCI but Github isn’t picking it up, even after rerunning the tests. Seems I cannot merge, as even a manual merge gets rejected.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,963,2020-01-19T14:26:56Z,2020-01-19T15:47:15Z,2020-01-19T17:41:33Z,MERGED,True,44,14,6,https://github.com/mvglasow,Fix:port/android:Use new icon for notification,1,[],https://github.com/navit-gps/navit/pull/963,https://github.com/jkoan,3,https://github.com/navit-gps/navit/pull/963#issuecomment-576016377,"Also updates the Android notification icon, which was still missing after #943.","build_all Expected — Waiting for status to be reported

Something’s wrong here, everything shows up as successful on CircleCI but Github isn’t picking it up, even after rerunning the tests. Seems I cannot merge, as even a manual merge gets rejected.

You need to enable Github Checks on CircleCi, this is a gap i really hate, between old style checks(status) and new style checks.
The Problem only apperes on fors which have there own circleci build (which shuldent happen according to the circleci org settings, but it does)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,963,2020-01-19T14:26:56Z,2020-01-19T15:47:15Z,2020-01-19T17:41:33Z,MERGED,True,44,14,6,https://github.com/mvglasow,Fix:port/android:Use new icon for notification,1,[],https://github.com/navit-gps/navit/pull/963,https://github.com/mvglasow,4,https://github.com/navit-gps/navit/pull/963#issuecomment-576017055,"Also updates the Android notification icon, which was still missing after #943.","Thanks, I just enabled CircleCI checks and restarted the workflow (as GH still did not pick up the result). We’ll see…",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,963,2020-01-19T14:26:56Z,2020-01-19T15:47:15Z,2020-01-19T17:41:33Z,MERGED,True,44,14,6,https://github.com/mvglasow,Fix:port/android:Use new icon for notification,1,[],https://github.com/navit-gps/navit/pull/963,https://github.com/jkoan,5,https://github.com/navit-gps/navit/pull/963#issuecomment-576017907,"Also updates the Android notification icon, which was still missing after #943.","build_all Expected — Waiting for status to be reported

Something’s wrong here, everything shows up as successful on CircleCI but Github isn’t picking it up, even after rerunning the tests. Seems I cannot merge, as even a manual merge gets rejected.

Yes, the check needs to be triggered from github. Will merge the PR without the check right now, but on your next PR it should work as normal",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,963,2020-01-19T14:26:56Z,2020-01-19T15:47:15Z,2020-01-19T17:41:33Z,MERGED,True,44,14,6,https://github.com/mvglasow,Fix:port/android:Use new icon for notification,1,[],https://github.com/navit-gps/navit/pull/963,https://github.com/mvglasow,6,https://github.com/navit-gps/navit/pull/963#issuecomment-576027960,"Also updates the Android notification icon, which was still missing after #943.",Thanks!,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,964,2020-01-19T14:32:38Z,2020-06-02T10:36:53Z,2020-06-02T10:36:53Z,MERGED,True,236,232,1,https://github.com/emaiannone,Refactor Member Ignoring Method smell in NavitMapDownloader class,2,[],https://github.com/navit-gps/navit/pull/964,https://github.com/emaiannone,1,https://github.com/navit-gps/navit/pull/964,"Hi, I'm Emanuele Iannone, a master student at University of Salerno.
Since my bachelor's thesis I have been working on a code smell refactoring plugin called aDoctor, which is able to identify and fix energy-related problems in Android apps.
I launched it on your project, finding different instances of code smells. I chose one of them and let the plugin automatically fix it.
In this case I chose Member Ignoring Method, that is present when a non static method does not use at all instance variables and other non static methods. These kind of smell may have a non trivial impact on energy consumption, as shown in this paper: https://www.sciencedirect.com/science/article/pii/S0950584918301678.
Besides, this kind of refactoring does not impact on the functionalities of your app, so it is totally safe. Let me know if you are interested in this refactoring proposal.","Hi, I'm Emanuele Iannone, a master student at University of Salerno.
Since my bachelor's thesis I have been working on a code smell refactoring plugin called aDoctor, which is able to identify and fix energy-related problems in Android apps.
I launched it on your project, finding different instances of code smells. I chose one of them and let the plugin automatically fix it.
In this case I chose Member Ignoring Method, that is present when a non static method does not use at all instance variables and other non static methods. These kind of smell may have a non trivial impact on energy consumption, as shown in this paper: https://www.sciencedirect.com/science/article/pii/S0950584918301678.
Besides, this kind of refactoring does not impact on the functionalities of your app, so it is totally safe. Let me know if you are interested in this refactoring proposal.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,964,2020-01-19T14:32:38Z,2020-06-02T10:36:53Z,2020-06-02T10:36:53Z,MERGED,True,236,232,1,https://github.com/emaiannone,Refactor Member Ignoring Method smell in NavitMapDownloader class,2,[],https://github.com/navit-gps/navit/pull/964,https://github.com/aerostitch,2,https://github.com/navit-gps/navit/pull/964#issuecomment-576032021,"Hi, I'm Emanuele Iannone, a master student at University of Salerno.
Since my bachelor's thesis I have been working on a code smell refactoring plugin called aDoctor, which is able to identify and fix energy-related problems in Android apps.
I launched it on your project, finding different instances of code smells. I chose one of them and let the plugin automatically fix it.
In this case I chose Member Ignoring Method, that is present when a non static method does not use at all instance variables and other non static methods. These kind of smell may have a non trivial impact on energy consumption, as shown in this paper: https://www.sciencedirect.com/science/article/pii/S0950584918301678.
Besides, this kind of refactoring does not impact on the functionalities of your app, so it is totally safe. Let me know if you are interested in this refactoring proposal.","Hi @emaiannone ,
It seems your change is not passing the style checks that are required to follow our project's styleguide:
[ant:checkstyle] [ERROR] /root/project/navit/android/src/org/navitproject/navit/NavitMapDownloader.java:722: 'method def' child has incorrect indentation level 16, expected level should be 8. [Indentation]
[ant:checkstyle] [ERROR] /root/project/navit/android/src/org/navitproject/navit/NavitMapDownloader.java:722:1: Line contains a tab character. [FileTabCharacter]
[ant:checkstyle] [ERROR] /root/project/navit/android/src/org/navitproject/navit/NavitMapDownloader.java:723: 'try' has incorrect indentation level 16, expected level should be 8. [Indentation]
[ant:checkstyle] [ERROR] /root/project/navit/android/src/org/navitproject/navit/NavitMapDownloader.java:723:1: Line contains a tab character. [FileTabCharacter]
[ant:checkstyle] [ERROR] /root/project/navit/android/src/org/navitproject/navit/NavitMapDownloader.java:724: 'try' child has incorrect indentation level 24, expected level should be 12. [Indentation]
[ant:checkstyle] [ERROR] /root/project/navit/android/src/org/navitproject/navit/NavitMapDownloader.java:724:1: Line contains a tab character. [FileTabCharacter]
[ant:checkstyle] [ERROR] /root/project/navit/android/src/org/navitproject/navit/NavitMapDownloader.java:725: 'try rcurly' has incorrect indentation level 16, expected level should be 8. [Indentation]
[ant:checkstyle] [ERROR] /root/project/navit/android/src/org/navitproject/navit/NavitMapDownloader.java:725:1: Line contains a tab character. [FileTabCharacter]
[ant:checkstyle] [ERROR] /root/project/navit/android/src/org/navitproject/navit/NavitMapDownloader.java:726: 'catch' child has incorrect indentation level 24, expected level should be 12. [Indentation]
[ant:checkstyle] [ERROR] /root/project/navit/android/src/org/navitproject/navit/NavitMapDownloader.java:726:1: Line contains a tab character. [FileTabCharacter]
[ant:checkstyle] [ERROR] /root/project/navit/android/src/org/navitproject/navit/NavitMapDownloader.java:727: 'catch' child has incorrect indentation level 24, expected level should be 12. [Indentation]
[ant:checkstyle] [ERROR] /root/project/navit/android/src/org/navitproject/navit/NavitMapDownloader.java:727:1: Line contains a tab character. [FileTabCharacter]
[ant:checkstyle] [ERROR] /root/project/navit/android/src/org/navitproject/navit/NavitMapDownloader.java:728: 'catch rcurly' has incorrect indentation level 16, expected level should be 8. [Indentation]
[ant:checkstyle] [ERROR] /root/project/navit/android/src/org/navitproject/navit/NavitMapDownloader.java:728:1: Line contains a tab character. [FileTabCharacter]
[ant:checkstyle] [ERROR] /root/project/navit/android/src/org/navitproject/navit/NavitMapDownloader.java:729: 'method def' child has incorrect indentation level 16, expected level should be 8. [Indentation]
[ant:checkstyle] [ERROR] /root/project/navit/android/src/org/navitproject/navit/NavitMapDownloader.java:729:1: Line contains a tab character. [FileTabCharacter]
[ant:checkstyle] [ERROR] /root/project/navit/android/src/org/navitproject/navit/NavitMapDownloader.java:730: 'method def rcurly' has incorrect indentation level 8, expected level should be 4. [Indentation]
[ant:checkstyle] [ERROR] /root/project/navit/android/src/org/navitproject/navit/NavitMapDownloader.java:730:1: Line contains a tab character. [FileTabCharacter]

Could you fix that in your PR please?
See our guidelines from https://github.com/navit-gps/navit/blob/trunk/CONTRIBUTING.md for more details.
Thanks,
Joseph",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,964,2020-01-19T14:32:38Z,2020-06-02T10:36:53Z,2020-06-02T10:36:53Z,MERGED,True,236,232,1,https://github.com/emaiannone,Refactor Member Ignoring Method smell in NavitMapDownloader class,2,[],https://github.com/navit-gps/navit/pull/964,https://github.com/emaiannone,3,https://github.com/navit-gps/navit/pull/964#issuecomment-576046360,"Hi, I'm Emanuele Iannone, a master student at University of Salerno.
Since my bachelor's thesis I have been working on a code smell refactoring plugin called aDoctor, which is able to identify and fix energy-related problems in Android apps.
I launched it on your project, finding different instances of code smells. I chose one of them and let the plugin automatically fix it.
In this case I chose Member Ignoring Method, that is present when a non static method does not use at all instance variables and other non static methods. These kind of smell may have a non trivial impact on energy consumption, as shown in this paper: https://www.sciencedirect.com/science/article/pii/S0950584918301678.
Besides, this kind of refactoring does not impact on the functionalities of your app, so it is totally safe. Let me know if you are interested in this refactoring proposal.",Thank you for your feedback. I already know this issue about formatting. The tool works on ASTs and I leave the suggested formatting done by the library I rely on.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,966,2020-01-19T20:28:54Z,2020-01-20T20:03:47Z,2020-01-20T20:03:53Z,MERGED,True,2,2,1,https://github.com/aerostitch,fix:plugins: too few arguments to functions navit_attr_iter_new and config_attr_iter_new,2,[],https://github.com/navit-gps/navit/pull/966,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/966,"In Debian, the build fails with the 2 following errors:
/<<PKGBUILDDIR>>/navit/plugin/pedestrian/pedestrian.c: In function ‘pedestrian_navit_init’:
/<<PKGBUILDDIR>>/navit/plugin/pedestrian/pedestrian.c:1341:12: error: too few arguments to function ‘navit_attr_iter_new’
 1341 |     iter = navit_attr_iter_new();
      |            ^~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/navit/plugin/pedestrian/pedestrian.c:1400:12: error: too few arguments to function ‘config_attr_iter_new’
 1400 |     iter = config_attr_iter_new();
      |            ^~~~~~~~~~~~~~~~~~~~

This PR should fix that.
Note that the following flags are set during the build. Maybe we should consider having those inside our standard build system to avoid surprises (broken in several lines for readability):
-fstack-protector-strong -D_FORTIFY_SOURCE=2 -Wall -Wundef -Wcast-align
  -Wpointer-arith -Wno-unused-parameter -Wno-sign-compare
  -Wno-missing-field-initializers
  -Wextra  -Wmissing-prototypes  -Wstrict-prototypes  -Wformat-security
  -g -O2 -Wformat -Werror=format-security -Wdate-time  -fPIC

What do you think?","In Debian, the build fails with the 2 following errors:
/<<PKGBUILDDIR>>/navit/plugin/pedestrian/pedestrian.c: In function ‘pedestrian_navit_init’:
/<<PKGBUILDDIR>>/navit/plugin/pedestrian/pedestrian.c:1341:12: error: too few arguments to function ‘navit_attr_iter_new’
 1341 |     iter = navit_attr_iter_new();
      |            ^~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/navit/plugin/pedestrian/pedestrian.c:1400:12: error: too few arguments to function ‘config_attr_iter_new’
 1400 |     iter = config_attr_iter_new();
      |            ^~~~~~~~~~~~~~~~~~~~

This PR should fix that.
Note that the following flags are set during the build. Maybe we should consider having those inside our standard build system to avoid surprises (broken in several lines for readability):
-fstack-protector-strong -D_FORTIFY_SOURCE=2 -Wall -Wundef -Wcast-align
  -Wpointer-arith -Wno-unused-parameter -Wno-sign-compare
  -Wno-missing-field-initializers
  -Wextra  -Wmissing-prototypes  -Wstrict-prototypes  -Wformat-security
  -g -O2 -Wformat -Werror=format-security -Wdate-time  -fPIC

What do you think?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,966,2020-01-19T20:28:54Z,2020-01-20T20:03:47Z,2020-01-20T20:03:53Z,MERGED,True,2,2,1,https://github.com/aerostitch,fix:plugins: too few arguments to functions navit_attr_iter_new and config_attr_iter_new,2,[],https://github.com/navit-gps/navit/pull/966,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/966#issuecomment-576404287,"In Debian, the build fails with the 2 following errors:
/<<PKGBUILDDIR>>/navit/plugin/pedestrian/pedestrian.c: In function ‘pedestrian_navit_init’:
/<<PKGBUILDDIR>>/navit/plugin/pedestrian/pedestrian.c:1341:12: error: too few arguments to function ‘navit_attr_iter_new’
 1341 |     iter = navit_attr_iter_new();
      |            ^~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/navit/plugin/pedestrian/pedestrian.c:1400:12: error: too few arguments to function ‘config_attr_iter_new’
 1400 |     iter = config_attr_iter_new();
      |            ^~~~~~~~~~~~~~~~~~~~

This PR should fix that.
Note that the following flags are set during the build. Maybe we should consider having those inside our standard build system to avoid surprises (broken in several lines for readability):
-fstack-protector-strong -D_FORTIFY_SOURCE=2 -Wall -Wundef -Wcast-align
  -Wpointer-arith -Wno-unused-parameter -Wno-sign-compare
  -Wno-missing-field-initializers
  -Wextra  -Wmissing-prototypes  -Wstrict-prototypes  -Wformat-security
  -g -O2 -Wformat -Werror=format-security -Wdate-time  -fPIC

What do you think?","BTW, the compiler settings do not affect if this gets found or not. If the pedestrian plug in doesn't get built, it won't fail. It think it's that simple...",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,966,2020-01-19T20:28:54Z,2020-01-20T20:03:47Z,2020-01-20T20:03:53Z,MERGED,True,2,2,1,https://github.com/aerostitch,fix:plugins: too few arguments to functions navit_attr_iter_new and config_attr_iter_new,2,[],https://github.com/navit-gps/navit/pull/966,https://github.com/aerostitch,3,https://github.com/navit-gps/navit/pull/966#issuecomment-576413478,"In Debian, the build fails with the 2 following errors:
/<<PKGBUILDDIR>>/navit/plugin/pedestrian/pedestrian.c: In function ‘pedestrian_navit_init’:
/<<PKGBUILDDIR>>/navit/plugin/pedestrian/pedestrian.c:1341:12: error: too few arguments to function ‘navit_attr_iter_new’
 1341 |     iter = navit_attr_iter_new();
      |            ^~~~~~~~~~~~~~~~~~~
/<<PKGBUILDDIR>>/navit/plugin/pedestrian/pedestrian.c:1400:12: error: too few arguments to function ‘config_attr_iter_new’
 1400 |     iter = config_attr_iter_new();
      |            ^~~~~~~~~~~~~~~~~~~~

This PR should fix that.
Note that the following flags are set during the build. Maybe we should consider having those inside our standard build system to avoid surprises (broken in several lines for readability):
-fstack-protector-strong -D_FORTIFY_SOURCE=2 -Wall -Wundef -Wcast-align
  -Wpointer-arith -Wno-unused-parameter -Wno-sign-compare
  -Wno-missing-field-initializers
  -Wextra  -Wmissing-prototypes  -Wstrict-prototypes  -Wformat-security
  -g -O2 -Wformat -Werror=format-security -Wdate-time  -fPIC

What do you think?",Thanks. I'll create a PR to enable it on one of the builds then :),True,{}
navit-gps/navit,https://github.com/navit-gps/navit,969,2020-01-19T22:52:45Z,2020-01-25T15:37:46Z,2020-01-26T01:30:54Z,MERGED,True,15,11,1,https://github.com/aerostitch,add:cmake: add compilation flags to harden the security of navit,7,[],https://github.com/navit-gps/navit/pull/969,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/969,"Hi guys,
This PR adds a few compilation flags that detects issues in advance.
Those are generally set in Debian as best practices and right now, those return errors (see #966 ).
So I propose we add them to make sure that we can detect those issues in advance.
What do you think?
Thanks
Joseph","Hi guys,
This PR adds a few compilation flags that detects issues in advance.
Those are generally set in Debian as best practices and right now, those return errors (see #966 ).
So I propose we add them to make sure that we can detect those issues in advance.
What do you think?
Thanks
Joseph",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,969,2020-01-19T22:52:45Z,2020-01-25T15:37:46Z,2020-01-26T01:30:54Z,MERGED,True,15,11,1,https://github.com/aerostitch,add:cmake: add compilation flags to harden the security of navit,7,[],https://github.com/navit-gps/navit/pull/969,https://github.com/aerostitch,2,https://github.com/navit-gps/navit/pull/969#issuecomment-576057308,"Hi guys,
This PR adds a few compilation flags that detects issues in advance.
Those are generally set in Debian as best practices and right now, those return errors (see #966 ).
So I propose we add them to make sure that we can detect those issues in advance.
What do you think?
Thanks
Joseph","Not sure yet why it's not failing! :
But at least those ones would be good to have in our default flags.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,969,2020-01-19T22:52:45Z,2020-01-25T15:37:46Z,2020-01-26T01:30:54Z,MERGED,True,15,11,1,https://github.com/aerostitch,add:cmake: add compilation flags to harden the security of navit,7,[],https://github.com/navit-gps/navit/pull/969,https://github.com/aerostitch,3,https://github.com/navit-gps/navit/pull/969#issuecomment-576363314,"Hi guys,
This PR adds a few compilation flags that detects issues in advance.
Those are generally set in Debian as best practices and right now, those return errors (see #966 ).
So I propose we add them to make sure that we can detect those issues in advance.
What do you think?
Thanks
Joseph","So I removed the if(CMAKE_COMPILER_IS_GNUCC OR CCMAKE_COMPILER_IS_GNUCXX) altogether as it's not the recommended way to test the compiler according to https://cmake.org/cmake/help/latest/variable/CMAKE_COMPILER_IS_GNUCC.html and it's also only available starting in cmake 3.7 and we require only cmake 3.2.
Plus changing the add of default flags to all use our add_compiler_flag_if_available macro so that there's only 1 way of adding flags which seems simpler. (this macro adds to the CMAKE_C_FLAGS and CMAKE_CXX_FLAGS: https://github.com/navit-gps/navit/blob/trunk/cmake/navit_macros.cmake#L95
Do those flags show up now on your Gentoo?
It should look something like that:
-- Performing Test FLAG_AVAILABLE_C_-Wdate-time
-- Performing Test FLAG_AVAILABLE_C_-Wdate-time - Success
-- Performing Test FLAG_AVAILABLE_CXX_-Wdate-time
-- Performing Test FLAG_AVAILABLE_CXX_-Wdate-time - Success",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,971,2020-01-20T19:17:00Z,2020-01-20T19:59:34Z,2020-01-20T19:59:38Z,MERGED,True,1,1,1,https://github.com/aerostitch,Update:CI: Use debian:latest in the CI to get more up-to-date tools,1,['build system'],https://github.com/navit-gps/navit/pull/971,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/971,This is just changing the default image to pull more up-to-date dependencies like gcc.,This is just changing the default image to pull more up-to-date dependencies like gcc.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,972,2020-01-20T20:15:07Z,2020-01-26T01:09:14Z,2020-01-26T01:09:31Z,CLOSED,False,17,6,4,https://github.com/aerostitch,add:ci: enable the pedestrian plugin by default on linux and android,1,[],https://github.com/navit-gps/navit/pull/972,https://github.com/aerostitch,1,https://github.com/navit-gps/navit/pull/972,"Hi guys,
I think it would make sense to have the pedestrian module enabled by default.
At least that's how it's configured on Debian.
Wondering if we should have it built by default so that when we distribute the new release it's there.
What do you think?
Are there other plugins you think would be worth enabling by default?
Thanks,
Joseph","Hi guys,
I think it would make sense to have the pedestrian module enabled by default.
At least that's how it's configured on Debian.
Wondering if we should have it built by default so that when we distribute the new release it's there.
What do you think?
Are there other plugins you think would be worth enabling by default?
Thanks,
Joseph",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,972,2020-01-20T20:15:07Z,2020-01-26T01:09:14Z,2020-01-26T01:09:31Z,CLOSED,False,17,6,4,https://github.com/aerostitch,add:ci: enable the pedestrian plugin by default on linux and android,1,[],https://github.com/navit-gps/navit/pull/972,https://github.com/aerostitch,2,https://github.com/navit-gps/navit/pull/972#issuecomment-576425169,"Hi guys,
I think it would make sense to have the pedestrian module enabled by default.
At least that's how it's configured on Debian.
Wondering if we should have it built by default so that when we distribute the new release it's there.
What do you think?
Are there other plugins you think would be worth enabling by default?
Thanks,
Joseph","Seems it fails to compile on win*. Was it supposed to compile on those platforms?
(note: I removed the win* from the title as it doesn't seem to compile there but keeping the change for now to start a discussion on whether it's expected or not)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,972,2020-01-20T20:15:07Z,2020-01-26T01:09:14Z,2020-01-26T01:09:31Z,CLOSED,False,17,6,4,https://github.com/aerostitch,add:ci: enable the pedestrian plugin by default on linux and android,1,[],https://github.com/navit-gps/navit/pull/972,https://github.com/metalstrolch,3,https://github.com/navit-gps/navit/pull/972#issuecomment-576425586,"Hi guys,
I think it would make sense to have the pedestrian module enabled by default.
At least that's how it's configured on Debian.
Wondering if we should have it built by default so that when we distribute the new release it's there.
What do you think?
Are there other plugins you think would be worth enabling by default?
Thanks,
Joseph","What does it do? I Didn't get it up to now. It's not pedestrian routing, isn't it? But obviously it:
a) doesn't build under win32
b) is missed by nobody.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,972,2020-01-20T20:15:07Z,2020-01-26T01:09:14Z,2020-01-26T01:09:31Z,CLOSED,False,17,6,4,https://github.com/aerostitch,add:ci: enable the pedestrian plugin by default on linux and android,1,[],https://github.com/navit-gps/navit/pull/972,https://github.com/aerostitch,4,https://github.com/navit-gps/navit/pull/972#issuecomment-576427043,"Hi guys,
I think it would make sense to have the pedestrian module enabled by default.
At least that's how it's configured on Debian.
Wondering if we should have it built by default so that when we distribute the new release it's there.
What do you think?
Are there other plugins you think would be worth enabling by default?
Thanks,
Joseph","I think it is the pedestrian routing!
And no, aside from people using the debian package (raspbian & co) or compilation from source with explicit flag set.
And it was broken until #966 (but was compiling on release 0.5.3 so not sure exactly what happened)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,972,2020-01-20T20:15:07Z,2020-01-26T01:09:14Z,2020-01-26T01:09:31Z,CLOSED,False,17,6,4,https://github.com/aerostitch,add:ci: enable the pedestrian plugin by default on linux and android,1,[],https://github.com/navit-gps/navit/pull/972,https://github.com/metalstrolch,5,https://github.com/navit-gps/navit/pull/972#issuecomment-576430163,"Hi guys,
I think it would make sense to have the pedestrian module enabled by default.
At least that's how it's configured on Debian.
Wondering if we should have it built by default so that when we distribute the new release it's there.
What do you think?
Are there other plugins you think would be worth enabling by default?
Thanks,
Joseph","I broke it by forgetting it during my refactoring to remove compiler warnings. As it was not built by CI this didn't show up. This was fixed in #966. But I don't know what it is good for. And I don't think it built for windows last release.
At least it includes termios.h which isn't supported by mingw.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,972,2020-01-20T20:15:07Z,2020-01-26T01:09:14Z,2020-01-26T01:09:31Z,CLOSED,False,17,6,4,https://github.com/aerostitch,add:ci: enable the pedestrian plugin by default on linux and android,1,[],https://github.com/navit-gps/navit/pull/972,https://github.com/mvglasow,6,https://github.com/navit-gps/navit/pull/972#issuecomment-576437194,"Hi guys,
I think it would make sense to have the pedestrian module enabled by default.
At least that's how it's configured on Debian.
Wondering if we should have it built by default so that when we distribute the new release it's there.
What do you think?
Are there other plugins you think would be worth enabling by default?
Thanks,
Joseph","As far as I remember, the pedestrian plugin was/is this one: https://wiki.navit-project.org/index.php/Augmented_Reality
As far as I know it has not seen any maintenance (I have never used it and am not sure it still works at all) and got removed from the standard Android build sometime during the last 1–2 years. I am just surprised to learn it is part of the Debian build. Grepping the commit history for pedestrian should provide some hints at the history of this plugin.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,972,2020-01-20T20:15:07Z,2020-01-26T01:09:14Z,2020-01-26T01:09:31Z,CLOSED,False,17,6,4,https://github.com/aerostitch,add:ci: enable the pedestrian plugin by default on linux and android,1,[],https://github.com/navit-gps/navit/pull/972,https://github.com/aerostitch,7,https://github.com/navit-gps/navit/pull/972#issuecomment-578458797,"Hi guys,
I think it would make sense to have the pedestrian module enabled by default.
At least that's how it's configured on Debian.
Wondering if we should have it built by default so that when we distribute the new release it's there.
What do you think?
Are there other plugins you think would be worth enabling by default?
Thanks,
Joseph","Alright, if that's the one then it's probably not advisable. I disabled it in Debian.
Thanks for looking into it! :)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,973,2020-01-20T21:39:18Z,2020-01-25T10:54:08Z,2020-04-12T21:48:21Z,MERGED,True,74,16,2,https://github.com/metalstrolch,Fix: graphics/android: polygons with hole drawing,5,[],https://github.com/navit-gps/navit/pull/973,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/973,Try to fix #965,Try to fix #965,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,973,2020-01-20T21:39:18Z,2020-01-25T10:54:08Z,2020-04-12T21:48:21Z,MERGED,True,74,16,2,https://github.com/metalstrolch,Fix: graphics/android: polygons with hole drawing,5,[],https://github.com/navit-gps/navit/pull/973,https://github.com/gefin,2,https://github.com/navit-gps/navit/pull/973#issuecomment-577252660,Try to fix #965,With build 19675 it look like this:,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,973,2020-01-20T21:39:18Z,2020-01-25T10:54:08Z,2020-04-12T21:48:21Z,MERGED,True,74,16,2,https://github.com/metalstrolch,Fix: graphics/android: polygons with hole drawing,5,[],https://github.com/navit-gps/navit/pull/973,https://github.com/metalstrolch,3,https://github.com/navit-gps/navit/pull/973#issuecomment-578389181,Try to fix #965,Confirmed working by @gefin in #965 . Ready to be merged.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,981,2020-03-01T10:56:31Z,2020-03-01T11:21:32Z,2020-03-01T11:21:32Z,MERGED,True,2,2,2,https://github.com/jkoan,Fix QML build,2,[],https://github.com/navit-gps/navit/pull/981,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/981,This fix should fix issue #980 where we have issues building gui:qml. The build is already tested with docker manually because our CI currently doesn't build qml.,This fix should fix issue #980 where we have issues building gui:qml. The build is already tested with docker manually because our CI currently doesn't build qml.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,987,2020-04-06T07:05:25Z,,2021-02-05T19:45:17Z,OPEN,False,200,27,11,https://github.com/lains,[WIP] Update:Android:GUI/Internal: Show contextual GUI menu when receiving geo intent,25,"['enhancement', 'android', 'WIP', 'proposal', 'internal-gui']",https://github.com/navit-gps/navit/pull/987,https://github.com/lains,1,https://github.com/navit-gps/navit/pull/987,"In my previous PR #812, the default action when receiving a geo intent (for example by scanning a geo QR code), is to start navigating to the provided location.
This PR aims to give the user more control over which action is started when navit receives a geo intent.
For this (and only implemented when using the internal GUI), I bring up the contextual submenu for a geo position in the internal GUI, and let the user select what to do with this position (add bookmark, set as waypoint, destination, search for nearby POIs), in the same way as when the geo pos is entered manually in the internal GUI.
This is only for Android, and if this feature is not implemented in the active GUI plugin (only implemented in internal GUI for now), the behaviour will revert back to set destination to the GPS coords.","In my previous PR #812, the default action when receiving a geo intent (for example by scanning a geo QR code), is to start navigating to the provided location.
This PR aims to give the user more control over which action is started when navit receives a geo intent.
For this (and only implemented when using the internal GUI), I bring up the contextual submenu for a geo position in the internal GUI, and let the user select what to do with this position (add bookmark, set as waypoint, destination, search for nearby POIs), in the same way as when the geo pos is entered manually in the internal GUI.
This is only for Android, and if this feature is not implemented in the active GUI plugin (only implemented in internal GUI for now), the behaviour will revert back to set destination to the GPS coords.",True,{'THUMBS_UP': ['https://github.com/jkoan']}
navit-gps/navit,https://github.com/navit-gps/navit,987,2020-04-06T07:05:25Z,,2021-02-05T19:45:17Z,OPEN,False,200,27,11,https://github.com/lains,[WIP] Update:Android:GUI/Internal: Show contextual GUI menu when receiving geo intent,25,"['enhancement', 'android', 'WIP', 'proposal', 'internal-gui']",https://github.com/navit-gps/navit/pull/987,https://github.com/lains,2,https://github.com/navit-gps/navit/pull/987#issuecomment-609605545,"In my previous PR #812, the default action when receiving a geo intent (for example by scanning a geo QR code), is to start navigating to the provided location.
This PR aims to give the user more control over which action is started when navit receives a geo intent.
For this (and only implemented when using the internal GUI), I bring up the contextual submenu for a geo position in the internal GUI, and let the user select what to do with this position (add bookmark, set as waypoint, destination, search for nearby POIs), in the same way as when the geo pos is entered manually in the internal GUI.
This is only for Android, and if this feature is not implemented in the active GUI plugin (only implemented in internal GUI for now), the behaviour will revert back to set destination to the GPS coords.",This is the implementation of what I was proposing in a comment on my previous PR (#812 (comment)),True,{}
navit-gps/navit,https://github.com/navit-gps/navit,987,2020-04-06T07:05:25Z,,2021-02-05T19:45:17Z,OPEN,False,200,27,11,https://github.com/lains,[WIP] Update:Android:GUI/Internal: Show contextual GUI menu when receiving geo intent,25,"['enhancement', 'android', 'WIP', 'proposal', 'internal-gui']",https://github.com/navit-gps/navit/pull/987,https://github.com/lains,3,https://github.com/navit-gps/navit/pull/987#issuecomment-616046835,"In my previous PR #812, the default action when receiving a geo intent (for example by scanning a geo QR code), is to start navigating to the provided location.
This PR aims to give the user more control over which action is started when navit receives a geo intent.
For this (and only implemented when using the internal GUI), I bring up the contextual submenu for a geo position in the internal GUI, and let the user select what to do with this position (add bookmark, set as waypoint, destination, search for nearby POIs), in the same way as when the geo pos is entered manually in the internal GUI.
This is only for Android, and if this feature is not implemented in the active GUI plugin (only implemented in internal GUI for now), the behaviour will revert back to set destination to the GPS coords.","Hello All,
I have an issue with this current implementation.
OSD items still display on top of internal menu.
I have the feeling that this could be fixed by running NavitGraphics.overlay_disable(1), but I don't know how to get a reference to the top NavitGraphics object from within Java_org_navitproject_navit_NavitCallbackHandler_callbackMessageChannel in android.c
If anyone has an idea?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,987,2020-04-06T07:05:25Z,,2021-02-05T19:45:17Z,OPEN,False,200,27,11,https://github.com/lains,[WIP] Update:Android:GUI/Internal: Show contextual GUI menu when receiving geo intent,25,"['enhancement', 'android', 'WIP', 'proposal', 'internal-gui']",https://github.com/navit-gps/navit/pull/987,https://github.com/lains,4,https://github.com/navit-gps/navit/pull/987#issuecomment-616144953,"In my previous PR #812, the default action when receiving a geo intent (for example by scanning a geo QR code), is to start navigating to the provided location.
This PR aims to give the user more control over which action is started when navit receives a geo intent.
For this (and only implemented when using the internal GUI), I bring up the contextual submenu for a geo position in the internal GUI, and let the user select what to do with this position (add bookmark, set as waypoint, destination, search for nearby POIs), in the same way as when the geo pos is entered manually in the internal GUI.
This is only for Android, and if this feature is not implemented in the active GUI plugin (only implemented in internal GUI for now), the behaviour will revert back to set destination to the GPS coords.","I think I found a solution about access to overlay_disable() by directly using exported methods from graphics plugins.
I still have a crash when directly initiating a geo intent when Navit is not started yet... probably because access to Internal GUI is done at a too early stage...",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,987,2020-04-06T07:05:25Z,,2021-02-05T19:45:17Z,OPEN,False,200,27,11,https://github.com/lains,[WIP] Update:Android:GUI/Internal: Show contextual GUI menu when receiving geo intent,25,"['enhancement', 'android', 'WIP', 'proposal', 'internal-gui']",https://github.com/navit-gps/navit/pull/987,https://github.com/lains,5,https://github.com/navit-gps/navit/pull/987#issuecomment-616335248,"In my previous PR #812, the default action when receiving a geo intent (for example by scanning a geo QR code), is to start navigating to the provided location.
This PR aims to give the user more control over which action is started when navit receives a geo intent.
For this (and only implemented when using the internal GUI), I bring up the contextual submenu for a geo position in the internal GUI, and let the user select what to do with this position (add bookmark, set as waypoint, destination, search for nearby POIs), in the same way as when the geo pos is entered manually in the internal GUI.
This is only for Android, and if this feature is not implemented in the active GUI plugin (only implemented in internal GUI for now), the behaviour will revert back to set destination to the GPS coords.","Unfortunately, circle CI build for Android fails due to an external issue:
2020-04-20 06:01:51 (58.9 MB/s) - ‘keystore.gpg’ saved [2256/2256]

aes-256-cbc: Option -k needs a value
aes-256-cbc: Use -help for summary.

Exited with code exit status 1",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,987,2020-04-06T07:05:25Z,,2021-02-05T19:45:17Z,OPEN,False,200,27,11,https://github.com/lains,[WIP] Update:Android:GUI/Internal: Show contextual GUI menu when receiving geo intent,25,"['enhancement', 'android', 'WIP', 'proposal', 'internal-gui']",https://github.com/navit-gps/navit/pull/987,https://github.com/lains,6,https://github.com/navit-gps/navit/pull/987#issuecomment-619732502,"In my previous PR #812, the default action when receiving a geo intent (for example by scanning a geo QR code), is to start navigating to the provided location.
This PR aims to give the user more control over which action is started when navit receives a geo intent.
For this (and only implemented when using the internal GUI), I bring up the contextual submenu for a geo position in the internal GUI, and let the user select what to do with this position (add bookmark, set as waypoint, destination, search for nearby POIs), in the same way as when the geo pos is entered manually in the internal GUI.
This is only for Android, and if this feature is not implemented in the active GUI plugin (only implemented in internal GUI for now), the behaviour will revert back to set destination to the GPS coords.","Getting there. OSD icons are not displayed anymore and internal GUI submenu for the specific geo coord is now activated properly.
However, the internal GUI menu is only fully displayed correctly if the any internal GUI menu has been already been displayed at least once in the past. If this is the first internal GUI menu displayed since navit was started, then widgets are only rendered when clicking on them (they are not displayed by default).",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,987,2020-04-06T07:05:25Z,,2021-02-05T19:45:17Z,OPEN,False,200,27,11,https://github.com/lains,[WIP] Update:Android:GUI/Internal: Show contextual GUI menu when receiving geo intent,25,"['enhancement', 'android', 'WIP', 'proposal', 'internal-gui']",https://github.com/navit-gps/navit/pull/987,https://github.com/lains,7,https://github.com/navit-gps/navit/pull/987#issuecomment-619762620,"In my previous PR #812, the default action when receiving a geo intent (for example by scanning a geo QR code), is to start navigating to the provided location.
This PR aims to give the user more control over which action is started when navit receives a geo intent.
For this (and only implemented when using the internal GUI), I bring up the contextual submenu for a geo position in the internal GUI, and let the user select what to do with this position (add bookmark, set as waypoint, destination, search for nearby POIs), in the same way as when the geo pos is entered manually in the internal GUI.
This is only for Android, and if this feature is not implemented in the active GUI plugin (only implemented in internal GUI for now), the behaviour will revert back to set destination to the GPS coords.","I fixed the display of the internal menu by stealing menu bringup sequence from gui_internal_cmd_log().
Now, remains one issue: Navit crashes when it is starts from scratch, directly by receiving the geo intent. It seems internal menu functions are invoked, while the display is not yet setup completely.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,987,2020-04-06T07:05:25Z,,2021-02-05T19:45:17Z,OPEN,False,200,27,11,https://github.com/lains,[WIP] Update:Android:GUI/Internal: Show contextual GUI menu when receiving geo intent,25,"['enhancement', 'android', 'WIP', 'proposal', 'internal-gui']",https://github.com/navit-gps/navit/pull/987,https://github.com/jkoan,8,https://github.com/navit-gps/navit/pull/987#issuecomment-638073974,"In my previous PR #812, the default action when receiving a geo intent (for example by scanning a geo QR code), is to start navigating to the provided location.
This PR aims to give the user more control over which action is started when navit receives a geo intent.
For this (and only implemented when using the internal GUI), I bring up the contextual submenu for a geo position in the internal GUI, and let the user select what to do with this position (add bookmark, set as waypoint, destination, search for nearby POIs), in the same way as when the geo pos is entered manually in the internal GUI.
This is only for Android, and if this feature is not implemented in the active GUI plugin (only implemented in internal GUI for now), the behaviour will revert back to set destination to the GPS coords.",@lains still WIP?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,987,2020-04-06T07:05:25Z,,2021-02-05T19:45:17Z,OPEN,False,200,27,11,https://github.com/lains,[WIP] Update:Android:GUI/Internal: Show contextual GUI menu when receiving geo intent,25,"['enhancement', 'android', 'WIP', 'proposal', 'internal-gui']",https://github.com/navit-gps/navit/pull/987,https://github.com/lains,9,https://github.com/navit-gps/navit/pull/987#issuecomment-638251242,"In my previous PR #812, the default action when receiving a geo intent (for example by scanning a geo QR code), is to start navigating to the provided location.
This PR aims to give the user more control over which action is started when navit receives a geo intent.
For this (and only implemented when using the internal GUI), I bring up the contextual submenu for a geo position in the internal GUI, and let the user select what to do with this position (add bookmark, set as waypoint, destination, search for nearby POIs), in the same way as when the geo pos is entered manually in the internal GUI.
This is only for Android, and if this feature is not implemented in the active GUI plugin (only implemented in internal GUI for now), the behaviour will revert back to set destination to the GPS coords.","Most of the work is done, menu is displayed when navit is already running.
But there is an issue when scanning a QR code while navit is not yet running. In that case, the navit app is started directly from the intent received and I'm then getting a crash. Maybe a race condition. If someone with a better understanding (about the Android+Internal GUI startup sequence) can help...
@jandegr , I think you refactored a lot of code around this, can you help?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,987,2020-04-06T07:05:25Z,,2021-02-05T19:45:17Z,OPEN,False,200,27,11,https://github.com/lains,[WIP] Update:Android:GUI/Internal: Show contextual GUI menu when receiving geo intent,25,"['enhancement', 'android', 'WIP', 'proposal', 'internal-gui']",https://github.com/navit-gps/navit/pull/987,https://github.com/lains,10,https://github.com/navit-gps/navit/pull/987#issuecomment-639287241,"In my previous PR #812, the default action when receiving a geo intent (for example by scanning a geo QR code), is to start navigating to the provided location.
This PR aims to give the user more control over which action is started when navit receives a geo intent.
For this (and only implemented when using the internal GUI), I bring up the contextual submenu for a geo position in the internal GUI, and let the user select what to do with this position (add bookmark, set as waypoint, destination, search for nearby POIs), in the same way as when the geo pos is entered manually in the internal GUI.
This is only for Android, and if this feature is not implemented in the active GUI plugin (only implemented in internal GUI for now), the behaviour will revert back to set destination to the GPS coords.","Retested today, here is the crash I'm getting when navit is not yet started when the geo intent is fired:
06-05 08:03:26.787 20477 20477 D Navit   : onCreate
06-05 08:03:26.818 20477 20477 D Navit   : lang=fr
06-05 08:03:26.818 20477 20477 D Navit   : Country1 FR
06-05 08:03:26.818 20477 20477 D Navit   : Country2 FR
06-05 08:03:26.818 20477 20477 D Navit   : Language fr
06-05 08:03:26.821 20477 20477 I Navit   : NavitDataDir = /data/user/0/org.navitproject.navit/files
06-05 08:03:26.821 20477 20477 I Navit   : mapFilenamePath = /storage/emulated/0/Android/data/org.navitproject.navit/files/
06-05 08:03:26.823 20477 20477 D Navit   : -> pixels x=540 pixels y=960
06-05 08:03:26.823 20477 20477 D Navit   : -> dpi=239
06-05 08:03:26.823 20477 20477 D Navit   : -> density=1.5
06-05 08:03:26.823 20477 20477 D Navit   : -> scaledDensity=1.5
06-05 08:03:26.828 20477 20477 D Navit   : Res Name fr, result /data/user/0/org.navitproject.navit/files/locale/fr/LC_MESSAGES/navit.mo
06-05 08:03:26.834 20477 20477 D Navit   : Res ID 2131034138
06-05 08:03:26.836 20477 20477 I Navit   : Device density detected: hdpi
06-05 08:03:27.484 20477 20477 D Navit   : Processing config file 'navit.xml' from assets
06-05 08:03:27.484 20477 20477 D Navit   : Asset Name config/hdpi/navit.xml, output /data/user/0/org.navitproject.navit/files/share/navit.xml
06-05 08:03:27.486 20477 20477 D Navit   : Processing config file 'navit_layout_bike.xml' from assets
06-05 08:03:27.486 20477 20477 D Navit   : Asset Name config/hdpi/navit_layout_bike.xml, output /data/user/0/org.navitproject.navit/files/share/navit_layout_bike.xml
06-05 08:03:27.488 20477 20477 D Navit   : Processing config file 'navit_layout_car.xml' from assets
06-05 08:03:27.488 20477 20477 D Navit   : Asset Name config/hdpi/navit_layout_car.xml, output /data/user/0/org.navitproject.navit/files/share/navit_layout_car.xml
06-05 08:03:27.490 20477 20477 D Navit   : Processing config file 'navit_layout_car_android.xml' from assets
06-05 08:03:27.490 20477 20477 D Navit   : Asset Name config/hdpi/navit_layout_car_android.xml, output /data/user/0/org.navitproject.navit/files/share/navit_layout_car_android.xml
06-05 08:03:27.492 20477 20477 D Navit   : Processing config file 'navit_layout_car_dark.xml' from assets
06-05 08:03:27.492 20477 20477 D Navit   : Asset Name config/hdpi/navit_layout_car_dark.xml, output /data/user/0/org.navitproject.navit/files/share/navit_layout_car_dark.xml
06-05 08:03:27.494 20477 20477 D Navit   : Processing config file 'navit_layout_car_simple.xml' from assets
06-05 08:03:27.494 20477 20477 D Navit   : Asset Name config/hdpi/navit_layout_car_simple.xml, output /data/user/0/org.navitproject.navit/files/share/navit_layout_car_simple.xml
06-05 08:03:27.496 20477 20477 D Navit   : Processing config file 'navit_layout_th.xml' from assets
06-05 08:03:27.496 20477 20477 D Navit   : Asset Name config/hdpi/navit_layout_th.xml, output /data/user/0/org.navitproject.navit/files/share/navit_layout_th.xml
06-05 08:03:27.499 20477 20477 D Navit   : android.os.Build.VERSION.SDK_INT=23
06-05 08:03:27.512 20477 20477 V NavitGraphics: set Buttononcallback
06-05 08:03:27.512 20477 20477 V NavitGraphics: set Motioncallback
06-05 08:03:27.512 20477 20477 V NavitGraphics: set Keypresscallback
06-05 08:03:27.513 20477 20477 E navit   : error:navit:struct attr *attr_new_from_text(const char *, const char *):Incorrect value 'false' for attribute 'keyboard';  expected a number. Defaulting to 0.
06-05 08:03:27.513 20477 20477 E navit   :
06-05 08:03:27.513 20477 20477 W navit   : warning:navit:int command_object_get_attr(struct context *, struct attr *, enum attr_type, struct attr *):cannot retrieve attributes from navigation (0x0), func=0xb3e586e4
06-05 08:03:27.513 20477 20477 W navit   : warning:navit:void command_get_attr(struct context *, struct result *):could not retrieve 'nav_status' from 'navigation'
06-05 08:03:27.513 20477 20477 E navit   : error:navit:int command_register_callbacks(struct command_saved *):could not resolve object in cs=0xb4d3e980:
06-05 08:03:27.513 20477 20477 E navit   : error:navit:int command_register_callbacks(struct command_saved *):  navigation.nav_status>=3
06-05 08:03:27.513 20477 20477 E navit   : error:navit:int command_register_callbacks(struct command_saved *):             ^
06-05 08:03:27.513 20477 20477 W navit   : warning:navit:int command_object_get_attr(struct context *, struct attr *, enum attr_type, struct attr *):navit (0xb4c6c280) has no attribute vehicle
06-05 08:03:27.513 20477 20477 W navit   : warning:navit:void command_get_attr(struct context *, struct result *):could not retrieve 'vehicle' from 'navit'
06-05 08:03:27.513 20477 20477 E navit   : error:navit:int command_register_callbacks(struct command_saved *):could not resolve object in cs=0xb4d3ea20:
06-05 08:03:27.513 20477 20477 E navit   : error:navit:int command_register_callbacks(struct command_saved *):  vehicle.position_valid
06-05 08:03:27.513 20477 20477 E navit   : error:navit:int command_register_callbacks(struct command_saved *):  ^
06-05 08:03:27.513 20477 20477 W navit   : warning:navit:int command_object_get_attr(struct context *, struct attr *, enum attr_type, struct attr *):cannot retrieve attributes from navigation (0x0), func=0xb3e586e4
06-05 08:03:27.513 20477 20477 W navit   : warning:navit:void command_get_attr(struct context *, struct result *):could not retrieve 'nav_status' from 'navigation'
06-05 08:03:27.513 20477 20477 E navit   : error:navit:int command_register_callbacks(struct command_saved *):could not resolve object in cs=0xb4d3eac0:
06-05 08:03:27.513 20477 20477 E navit   : error:navit:int command_register_callbacks(struct command_saved *):  navigation.nav_status>=3
06-05 08:03:27.514 20477 20477 E navit   : error:navit:int command_register_callbacks(struct command_saved *):             ^
06-05 08:03:27.514 20477 20477 W navit   : warning:navit:int command_object_get_attr(struct context *, struct attr *, enum attr_type, struct attr *):cannot retrieve attributes from navigation (0x0), func=0xb3e586e4
06-05 08:03:27.514 20477 20477 W navit   : warning:navit:void command_get_attr(struct context *, struct result *):could not retrieve 'nav_status' from 'navigation'
06-05 08:03:27.514 20477 20477 E navit   : error:navit:int command_register_callbacks(struct command_saved *):could not resolve object in cs=0xb4d3eb60:
06-05 08:03:27.514 20477 20477 E navit   : error:navit:int command_register_callbacks(struct command_saved *):  navigation.nav_status==-1 || navigation.nav_status==1 || navigation.nav_status==2
06-05 08:03:27.514 20477 20477 E navit   : error:navit:int command_register_callbacks(struct command_saved *):             ^
06-05 08:03:27.514 20477 20477 W navit   : warning:navit:int command_object_get_attr(struct context *, struct attr *, enum attr_type, struct attr *):cannot retrieve attributes from navigation (0x0), func=0xb3e586e4
06-05 08:03:27.514 20477 20477 W navit   : warning:navit:void command_get_attr(struct context *, struct result *):could not retrieve 'nav_status' from 'navigation'
06-05 08:03:27.514 20477 20477 E navit   : error:navit:int command_register_callbacks(struct command_saved *):could not resolve object in cs=0xb4d3ec00:
06-05 08:03:27.514 20477 20477 E navit   : error:navit:int command_register_callbacks(struct command_saved *):  navigation.nav_status>=3
06-05 08:03:27.514 20477 20477 E navit   : error:navit:int command_register_callbacks(struct command_saved *):             ^
06-05 08:03:27.514 20477 20477 W navit   : warning:navit:int command_object_get_attr(struct context *, struct attr *, enum attr_type, struct attr *):cannot retrieve attributes from navigation (0x0), func=0xb3e586e4
06-05 08:03:27.514 20477 20477 W navit   : warning:navit:void command_get_attr(struct context *, struct result *):could not retrieve 'nav_status' from 'navigation'
06-05 08:03:27.514 20477 20477 E navit   : error:navit:int command_register_callbacks(struct command_saved *):could not resolve object in cs=0xb4d3eca0:
06-05 08:03:27.514 20477 20477 E navit   : error:navit:int command_register_callbacks(struct command_saved *):  navigation.nav_status>=3
06-05 08:03:27.514 20477 20477 E navit   : error:navit:int command_register_callbacks(struct command_saved *):             ^
06-05 08:03:27.514 20477 20477 W navit   : warning:navit:int command_object_get_attr(struct context *, struct attr *, enum attr_type, struct attr *):cannot retrieve attributes from navigation (0x0), func=0xb3e586e4
06-05 08:03:27.514 20477 20477 W navit   : warning:navit:void command_get_attr(struct context *, struct result *):could not retrieve 'nav_status' from 'navigation'
06-05 08:03:27.514 20477 20477 E navit   : error:navit:int command_register_callbacks(struct command_saved *):could not resolve object in cs=0xb4d3ed40:
06-05 08:03:27.514 20477 20477 E navit   : error:navit:int command_register_callbacks(struct command_saved *):  navigation.nav_status>=3
06-05 08:03:27.514 20477 20477 E navit   : error:navit:int command_register_callbacks(struct command_saved *):             ^
06-05 08:03:27.514 20477 20477 W navit   : warning:navit:int command_object_get_attr(struct context *, struct attr *, enum attr_type, struct attr *):navit (0xb4c6c280) has no attribute vehicle
06-05 08:03:27.514 20477 20477 W navit   : warning:navit:void command_get_attr(struct context *, struct result *):could not retrieve 'vehicle' from 'navit'
06-05 08:03:27.514 20477 20477 E navit   : error:navit:int command_register_callbacks(struct command_saved *):could not resolve object in cs=0xb4d3ede0:
06-05 08:03:27.514 20477 20477 E navit   : error:navit:int command_register_callbacks(struct command_saved *):  vehicle.position_valid
06-05 08:03:27.514 20477 20477 E navit   : error:navit:int command_register_callbacks(struct command_saved *):  ^
06-05 08:03:27.515 20477 20477 W navit   : warning:navit:int command_object_get_attr(struct context *, struct attr *, enum attr_type, struct attr *):navit (0xb4c6c280) has no attribute follow
06-05 08:03:27.515 20477 20477 W navit   : warning:navit:void command_get_attr(struct context *, struct result *):could not retrieve 'follow' from 'navit'
06-05 08:03:27.515 20477 20477 E navit   : error:navit:int command_register_callbacks(struct command_saved *):could not resolve object in cs=0xb4d3efc0:
06-05 08:03:27.515 20477 20477 E navit   : error:navit:int command_register_callbacks(struct command_saved *):  follow>1
06-05 08:03:27.515 20477 20477 E navit   : error:navit:int command_register_callbacks(struct command_saved *):  ^
06-05 08:03:27.530 20477 20477 D NavitVehicle: Providers [passive, gps, network]
06-05 08:03:27.532 20477 20477 D NavitVehicle: Precise Provider gps
06-05 08:03:27.533 20477 20477 D NavitVehicle: Fast Provider gps
06-05 08:03:27.566 20477 20477 D NavitSpeech2: Create
06-05 08:03:27.567 20477 20477 D NavitSpeech2: ACTION_CHECK_TTS_DATA available
06-05 08:03:27.568   581  1767 I ActivityManager: START u0 {act=android.speech.tts.engine.CHECK_TTS_DATA cmp=com.google.android.tts/.settings.CheckVoiceData} from uid 10178 on display 0
06-05 08:03:27.887   581  1767 I WindowManager: Screenshot max retries 4 of Token{e4443f4 ActivityRecord{b1b71c7 u0 org.navitproject.navit/.Navit t368}} appWin=Window{58ed2bf u0 Starting org.navitproject.navit} drawState=1
06-05 08:03:27.919   581  2966 W art     : Long monitor contention event with owner method=int com.android.server.am.ActivityStackSupervisor.startActivityMayWait(android.app.IApplicationThread, int, java.lang.String, android.content.Intent, java.lang.String, android.service.voice.IVoiceInteractionSession, com.android.internal.app.IVoiceInteractor, android.os.IBinder, java.lang.String, int, int, android.app.ProfilerInfo, android.app.IActivityManager$WaitResult, android.content.res.Configuration, android.os.Bundle, boolean, int, android.app.IActivityContainer, com.android.server.am.TaskRecord) from ActivityStackSupervisor.java:953 waiters=0 for 331ms
06-05 08:03:27.921   581   615 W art     : Long monitor contention event with owner method=int com.android.server.am.ActivityStackSupervisor.startActivityMayWait(android.app.IApplicationThread, int, java.lang.String, android.content.Intent, java.lang.String, android.service.voice.IVoiceInteractionSession, com.android.internal.app.IVoiceInteractor, android.os.IBinder, java.lang.String, int, int, android.app.ProfilerInfo, android.app.IActivityManager$WaitResult, android.content.res.Configuration, android.os.Bundle, boolean, int, android.app.IActivityContainer, com.android.server.am.TaskRecord) from ActivityStackSupervisor.java:953 waiters=1 for 341ms
06-05 08:03:28.077 20477 20477 E navit   : error:navit:int xml_parse_file(char *, void *, void (*)(xml_context *, const char *, const char **, const char **, void *, GError **), void (*)(xml_context *, const char *, void *, GError **), void (*)(xml_context *, const char *, gsize, void *, GError **)):could not open XML file
06-05 08:03:28.077 20477 20477 E navit   : error:navit:struct traffic_message **traffic_get_messages_from_xml_file(struct traffic *, char *):could not retrieve stored traffic messages
06-05 08:03:28.078 20477 20477 D Navit   : onCreate intent Intent { act=android.intent.action.VIEW dat=geo:48.858434,2.294481 flg=0x10000000 cmp=org.navitproject.navit/.Navit }
06-05 08:03:28.078 20477 20477 D Navit   : Using intent Intent { act=android.intent.action.VIEW dat=geo:48.858434,2.294481 flg=0x10000000 cmp=org.navitproject.navit/.Navit }
06-05 08:03:28.079 20477 20477 D Navit   : target found (b): 48.858434,2.294481
06-05 08:03:28.080 20477 20477 D Navit   : onStart
06-05 08:03:28.081 20477 20477 D Navit   : onResume
06-05 08:03:28.088 20477 20499 D OpenGLRenderer: Use EGL_SWAP_BEHAVIOR_PRESERVED: true
06-05 08:03:28.199 20477 20477 V Navit   : Handle Event
06-05 08:03:28.200 20477 20477 V Navit   : Handle Event
06-05 08:03:28.200 20477 20477 V Navit   : Handle Event
06-05 08:03:28.200 20477 20477 V Navit   : Handle Event
06-05 08:03:28.202 20477 20477 V Navit   : Handle Event
06-05 08:03:28.202 20477 20477 V Navit   : Handle Event
06-05 08:03:28.202 20477 20477 V Navit   : Handle Event
06-05 08:03:28.202 20477 20477 V Navit   : Handle Event
06-05 08:03:28.204 20477 20477 D Navit   : onPause
06-05 08:03:28.224 20477 20477 V NavitGraphics: overlay_disable: 1, Parent: false
06-05 08:03:28.224 20477 20477 V NavitGraphics: workaround gui internal
06-05 08:03:28.239 20477 20477 E navit   : error:gui_internal:void gui_internal_box_pack(struct gui_priv *, struct widget *):Warning width and height of a widget are 0
06-05 08:03:28.259   581   851 I WindowManager: Screen frozen for +1s678ms due to Window{58ed2bf u0 Starting org.navitproject.navit}
06-05 08:03:28.271 20477 20477 E navit   : error:gui_internal:void gui_internal_box_pack(struct gui_priv *, struct widget *):Warning width and height of a widget are 0
06-05 08:03:28.271 20477 20477 E navit   : error:gui_internal:void gui_internal_box_pack(struct gui_priv *, struct widget *):Warning width and height of a widget are 0
06-05 08:03:28.274 20477 20477 D NavitGraphics: onApplyWindowInsets
06-05 08:03:28.275 20477 20477 V NavitGraphics: Padding -1a- left=0 top=36 right=0 bottom=0
06-05 08:03:28.286 20477 20499 I Adreno-EGL: <qeglDrvAPI_eglInitialize:379>: QUALCOMM Build: 10/21/15, 369a2ea, I96aee987eb
06-05 08:03:28.303 20477 20477 D NavitGraphics: onSizeChanged pixels x=540 pixels y=960
06-05 08:03:28.303 20477 20477 D NavitGraphics: handleResize w=540 h=960
06-05 08:03:28.327 20477 20499 I OpenGLRenderer: Initialized EGL, version 1.4
06-05 08:03:28.327 20477 20477 W navit   : warning:navit:void osd_std_calculate_sizes(struct osd_item *, int, int):cannot get padding for item=0xb4cfe400: item->gr is NULL
06-05 08:03:28.332 20477 20477 W navit   : warning:navit:void osd_std_calculate_sizes(struct osd_item *, int, int):cannot get padding for item=0xb4cfe400: item->gr is NULL
06-05 08:03:28.337 20477 20477 V NavitGraphics: set Buttononcallback
06-05 08:03:28.337 20477 20477 V NavitGraphics: set Motioncallback
06-05 08:03:28.337 20477 20477 V NavitGraphics: set Keypresscallback
06-05 08:03:28.338 20477 20477 V NavitGraphics: overlay_disable: 1, Parent: true
06-05 08:03:28.339 20477 20477 W navit   : warning:navit:void osd_std_calculate_sizes(struct osd_item *, int, int):cannot get padding for item=0xb4cfe340: item->gr is NULL
06-05 08:03:28.339 20477 20477 V NavitGraphics: set Buttononcallback
06-05 08:03:28.339 20477 20477 V NavitGraphics: set Motioncallback
06-05 08:03:28.339 20477 20477 V NavitGraphics: set Keypresscallback
06-05 08:03:28.339 20477 20477 V NavitGraphics: overlay_disable: 0, Parent: true
06-05 08:03:28.339 20477 20477 W navit   : warning:navit:void osd_std_calculate_sizes(struct osd_item *, int, int):cannot get padding for item=0xb4cfe280: item->gr is NULL
06-05 08:03:28.342 20477 20477 W navit   : warning:navit:void osd_std_calculate_sizes(struct osd_item *, int, int):cannot get padding for item=0xb4cfe280: item->gr is NULL
06-05 08:03:28.343 20477 20477 V NavitGraphics: set Buttononcallback
06-05 08:03:28.343 20477 20477 V NavitGraphics: set Motioncallback
06-05 08:03:28.343 20477 20477 V NavitGraphics: set Keypresscallback
06-05 08:03:28.344 20477 20477 V NavitGraphics: overlay_disable: 1, Parent: true
06-05 08:03:28.344 20477 20477 W navit   : warning:navit:void osd_std_calculate_sizes(struct osd_item *, int, int):cannot get padding for item=0xb4cfe1c0: item->gr is NULL
06-05 08:03:28.346 20477 20477 W navit   : warning:navit:void osd_std_calculate_sizes(struct osd_item *, int, int):cannot get padding for item=0xb4cfe1c0: item->gr is NULL
06-05 08:03:28.353 20477 20477 V NavitGraphics: set Buttononcallback
06-05 08:03:28.353 20477 20477 V NavitGraphics: set Motioncallback
06-05 08:03:28.353 20477 20477 V NavitGraphics: set Keypresscallback
06-05 08:03:28.353 20477 20477 V NavitGraphics: overlay_disable: 0, Parent: true
06-05 08:03:28.354 20477 20477 W navit   : warning:navit:void osd_std_calculate_sizes(struct osd_item *, int, int):cannot get padding for item=0xb4cfe100: item->gr is NULL
06-05 08:03:28.357 20477 20477 W navit   : warning:navit:void osd_std_calculate_sizes(struct osd_item *, int, int):cannot get padding for item=0xb4cfe100: item->gr is NULL
06-05 08:03:28.358 20477 20477 V NavitGraphics: set Buttononcallback
06-05 08:03:28.358 20477 20477 V NavitGraphics: set Motioncallback
06-05 08:03:28.358 20477 20477 V NavitGraphics: set Keypresscallback
06-05 08:03:28.359 20477 20477 V NavitGraphics: overlay_disable: 0, Parent: true
06-05 08:03:28.359 20477 20477 W navit   : warning:navit:void osd_std_calculate_sizes(struct osd_item *, int, int):cannot get padding for item=0xb4cfe040: item->gr is NULL
06-05 08:03:28.361 20477 20477 W navit   : warning:navit:void osd_std_calculate_sizes(struct osd_item *, int, int):cannot get padding for item=0xb4cfe040: item->gr is NULL
06-05 08:03:28.362 20477 20477 V NavitGraphics: set Buttononcallback
06-05 08:03:28.362 20477 20477 V NavitGraphics: set Motioncallback
06-05 08:03:28.362 20477 20477 V NavitGraphics: set Keypresscallback
06-05 08:03:28.362 20477 20477 V NavitGraphics: overlay_disable: 1, Parent: true
06-05 08:03:28.362 20477 20477 W navit   : warning:navit:void osd_std_calculate_sizes(struct osd_item *, int, int):cannot get padding for item=0xb4cfdf80: item->gr is NULL
06-05 08:03:28.368 20477 20477 W navit   : warning:navit:void osd_std_calculate_sizes(struct osd_item *, int, int):cannot get padding for item=0xb4cfdf80: item->gr is NULL
06-05 08:03:28.370 20477 20477 V NavitGraphics: set Buttononcallback
06-05 08:03:28.370 20477 20477 V NavitGraphics: set Motioncallback
06-05 08:03:28.370 20477 20477 V NavitGraphics: set Keypresscallback
06-05 08:03:28.370 20477 20477 V NavitGraphics: overlay_disable: 0, Parent: true
06-05 08:03:28.370 20477 20477 W navit   : warning:navit:void osd_std_calculate_sizes(struct osd_item *, int, int):cannot get padding for item=0xb4cfdec0: item->gr is NULL
06-05 08:03:28.371 20477 20477 V NavitGraphics: set Buttononcallback
06-05 08:03:28.371 20477 20477 V NavitGraphics: set Motioncallback
06-05 08:03:28.371 20477 20477 V NavitGraphics: set Keypresscallback
06-05 08:03:28.371 20477 20477 V NavitGraphics: overlay_disable: 0, Parent: true
06-05 08:03:28.373 20477 20477 W navit   : warning:navit:void osd_std_calculate_sizes(struct osd_item *, int, int):cannot get padding for item=0xb4cfde00: item->gr is NULL
06-05 08:03:28.374 20477 20477 V NavitGraphics: set Buttononcallback
06-05 08:03:28.374 20477 20477 V NavitGraphics: set Motioncallback
06-05 08:03:28.374 20477 20477 V NavitGraphics: set Keypresscallback
06-05 08:03:28.374 20477 20477 V NavitGraphics: overlay_disable: 1, Parent: true
06-05 08:03:28.376 20477 20477 W navit   : warning:navit:void osd_std_calculate_sizes(struct osd_item *, int, int):cannot get padding for item=0xb4cfdd40: item->gr is NULL
06-05 08:03:28.376 20477 20477 V NavitGraphics: set Buttononcallback
06-05 08:03:28.376 20477 20477 V NavitGraphics: set Motioncallback
06-05 08:03:28.376 20477 20477 V NavitGraphics: set Keypresscallback
06-05 08:03:28.376 20477 20477 V NavitGraphics: overlay_disable: 1, Parent: true
06-05 08:03:28.377 20477 20477 W navit   : warning:navit:void osd_std_calculate_sizes(struct osd_item *, int, int):cannot get padding for item=0xb4cfdc80: item->gr is NULL
06-05 08:03:28.377 20477 20477 V NavitGraphics: set Buttononcallback
06-05 08:03:28.377 20477 20477 V NavitGraphics: set Motioncallback
06-05 08:03:28.377 20477 20477 V NavitGraphics: set Keypresscallback
06-05 08:03:28.377 20477 20477 V NavitGraphics: overlay_disable: 1, Parent: true
06-05 08:03:28.378 20477 20477 W navit   : warning:navit:void osd_std_calculate_sizes(struct osd_item *, int, int):cannot get padding for item=0xb4cfdbc0: item->gr is NULL
06-05 08:03:28.378 20477 20477 V NavitGraphics: set Buttononcallback
06-05 08:03:28.378 20477 20477 V NavitGraphics: set Motioncallback
06-05 08:03:28.378 20477 20477 V NavitGraphics: set Keypresscallback
06-05 08:03:28.378 20477 20477 V NavitGraphics: overlay_disable: 1, Parent: true
06-05 08:03:28.379 20477 20477 W navit   : warning:navit:void osd_std_calculate_sizes(struct osd_item *, int, int):cannot get padding for item=0xb4cfdb00: item->gr is NULL
06-05 08:03:28.379 20477 20477 V NavitGraphics: set Buttononcallback
06-05 08:03:28.379 20477 20477 V NavitGraphics: set Motioncallback
06-05 08:03:28.379 20477 20477 V NavitGraphics: set Keypresscallback
06-05 08:03:28.379 20477 20477 V NavitGraphics: overlay_disable: 1, Parent: true
06-05 08:03:28.385 20477 20477 W navit   : warning:navit:void osd_std_calculate_sizes(struct osd_item *, int, int):cannot get padding for item=0xb4cfda40: item->gr is NULL
06-05 08:03:28.386 20477 20477 V NavitGraphics: set Buttononcallback
06-05 08:03:28.386 20477 20477 V NavitGraphics: set Motioncallback
06-05 08:03:28.386 20477 20477 V NavitGraphics: set Keypresscallback
06-05 08:03:28.386 20477 20477 V NavitGraphics: overlay_disable: 1, Parent: true
06-05 08:03:28.387 20477 20477 W navit   : warning:navit:void osd_std_calculate_sizes(struct osd_item *, int, int):cannot get padding for item=0xb4cfd980: item->gr is NULL
06-05 08:03:28.387 20477 20477 V NavitGraphics: set Buttononcallback
06-05 08:03:28.388 20477 20477 V NavitGraphics: set Motioncallback
06-05 08:03:28.388 20477 20477 V NavitGraphics: set Keypresscallback
06-05 08:03:28.388 20477 20477 V NavitGraphics: overlay_disable: 1, Parent: true
06-05 08:03:28.389 20477 20477 W navit   : warning:navit:void osd_std_calculate_sizes(struct osd_item *, int, int):cannot get padding for item=0xb4cfd8c0: item->gr is NULL
06-05 08:03:28.389 20477 20477 V NavitGraphics: set Buttononcallback
06-05 08:03:28.389 20477 20477 V NavitGraphics: set Motioncallback
06-05 08:03:28.389 20477 20477 V NavitGraphics: set Keypresscallback
06-05 08:03:28.389 20477 20477 V NavitGraphics: overlay_disable: 1, Parent: true
--------- beginning of crash
06-05 08:03:28.395 20477 20477 F libc    : Fatal signal 11 (SIGSEGV), code 1, fault addr 0x0 in tid 20477 (itproject.navit)
06-05 08:03:28.399   211   211 I DEBUG   : property debug.db.uid not set; NOT waiting for gdb.
06-05 08:03:28.401   211   211 I DEBUG   : HINT: adb shell setprop debug.db.uid 100000
06-05 08:03:28.401   211   211 I DEBUG   : HINT: adb forward tcp:5039 tcp:5039
06-05 08:03:28.453   211   211 F DEBUG   : *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***
06-05 08:03:28.453   211   211 F DEBUG   : CM Version: '13.0-20161221-SNAPSHOT-ZNH5YAO3Y6-serranoltexx'
06-05 08:03:28.453   211   211 F DEBUG   : Build fingerprint: 'samsung/serranoltexx/serranolte:4.4.2/KOT49H/I9195XXUCNE6:user/release-keys'
06-05 08:03:28.453   211   211 F DEBUG   : Revision: '0'
06-05 08:03:28.453   211   211 F DEBUG   : ABI: 'arm'
06-05 08:03:28.455   211   211 F DEBUG   : pid: 20477, tid: 20477, name: itproject.navit  >>> org.navitproject.navit <<<
06-05 08:03:28.455   211   211 F DEBUG   : signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x0
06-05 08:03:28.473   211   211 F DEBUG   :     r0 b4d3e8e0  r1 00000076  r2 00000001  r3 0000008a
06-05 08:03:28.474   211   211 F DEBUG   :     r4 b3deb909  r5 00000000  r6 00000000  r7 be9f7050
06-05 08:03:28.474   211   211 F DEBUG   :     r8 be9f7028  r9 a26e9898  sl b6d0cec0  fp 12c34420
06-05 08:03:28.474   211   211 F DEBUG   :     ip 00000000  sp be9f7018  lr 00010000  pc b3dbb9be  cpsr 60030030
06-05 08:03:28.481   211   211 F DEBUG   :
06-05 08:03:28.481   211   211 F DEBUG   : backtrace:
06-05 08:03:28.481   211   211 F DEBUG   :     #00 pc 0002d9be  /data/app/org.navitproject.navit-1/lib/arm/libnavit.so (graphics_draw_text+53)
06-05 08:03:28.481   211   211 F DEBUG   :     #01 pc 00072e77  /data/app/org.navitproject.navit-1/lib/arm/libnavit.so
06-05 08:03:28.482   211   211 F DEBUG   :     #02 pc 000723df  /data/app/org.navitproject.navit-1/lib/arm/libnavit.so (gui_internal_widget_render+162)
06-05 08:03:28.482   211   211 F DEBUG   :     #03 pc 000723df  /data/app/org.navitproject.navit-1/lib/arm/libnavit.so (gui_internal_widget_render+162)
06-05 08:03:28.483   211   211 F DEBUG   :     #04 pc 000723df  /data/app/org.navitproject.navit-1/lib/arm/libnavit.so (gui_internal_widget_render+162)
06-05 08:03:28.483   211   211 F DEBUG   :     #05 pc 000723df  /data/app/org.navitproject.navit-1/lib/arm/libnavit.so (gui_internal_widget_render+162)
06-05 08:03:28.483   211   211 F DEBUG   :     #06 pc 000250bb  /data/app/org.navitproject.navit-1/lib/arm/libnavit.so (callback_call+450)
06-05 08:03:28.483   211   211 F DEBUG   :     #07 pc 00025227  /data/app/org.navitproject.navit-1/lib/arm/libnavit.so (callback_list_call_attr+62)
06-05 08:03:28.483   211   211 F DEBUG   :     #08 pc 0002528b  /data/app/org.navitproject.navit-1/lib/arm/libnavit.so (callback_list_call_attr_args+78)
06-05 08:03:28.483   211   211 F DEBUG   :     #09 pc 0005e841  /data/app/org.navitproject.navit-1/lib/arm/libnavit.so
06-05 08:03:28.483   211   211 F DEBUG   :     #10 pc 000250bb  /data/app/org.navitproject.navit-1/lib/arm/libnavit.so (callback_call+450)
06-05 08:03:28.484   211   211 F DEBUG   :     #11 pc 000251bf  /data/app/org.navitproject.navit-1/lib/arm/libnavit.so (callback_call_args+78)
06-05 08:03:28.484   211   211 F DEBUG   :     #12 pc 002b8f3d  /data/app/org.navitproject.navit-1/oat/arm/base.odex (offset 0x1e3000)
06-05 08:03:29.258   211   211 F DEBUG   :
06-05 08:03:29.258   211   211 F DEBUG   : Tombstone written to: /data/tombstones/tombstone_06
06-05 08:03:29.258   211   211 E DEBUG   : AM write failed: Broken pipe
06-05 08:03:29.272   581   630 I BootReceiver: Copying /data/tombstones/tombstone_06 to DropBox (SYSTEM_TOMBSTONE)
06-05 08:03:29.275   581   596 D GraphicsStats: Buffer count: 7
06-05 08:03:29.275   581  1766 I WindowState: WIN DEATH: Window{84c3545 u0 org.navitproject.navit/org.navitproject.navit.Navit}
06-05 08:03:29.286   581   596 D GpsStatusListenerHelper: Remote Listener died: android.location.IGpsStatusListener$Stub$Proxy@bb8cc54
06-05 08:03:29.301   220   220 I Zygote  : Process 20477 exited due to signal (11)
06-05 08:03:29.320   581   597 I ActivityManager: Process org.navitproject.navit (pid 20477) has died
06-05 08:03:29.320   581   597 D ActivityManager: cleanUpApplicationRecord -- 20477
06-05 08:03:29.321   581   597 W ActivityManager: Force removing ActivityRecord{b1b71c7 u0 org.navitproject.navit/.Navit t368}: app died, no saved state
06-05 08:03:29.349   581   597 I ActivityManager: Config changes=480 {1.0 208mcc15mnc fr_FR ldltr sw360dp w640dp h336dp 240dpi nrml long land finger -keyb/v/h -nav/h s.19 themeResource=null}

Using ~/ANDROID_NDK_HOME/ndk-stack --sym ./navit/android/build/intermediates/cmake/debug/obj/armeabi-v7a on this crashdump, I get:
********** Crash dump: **********
Build fingerprint: 'samsung/serranoltexx/serranolte:4.4.2/KOT49H/I9195XXUCNE6:user/release-keys'
#00 0x0002d9be libnavit.so (graphics_draw_text+53)
                            debug_vprintf
                            navit/debug.c:396:50
#01 0x00072e77 libnavit.so
                            seg_data_equals
                            navit/traffic.c:425:10
#02 0x000723df libnavit.so (gui_internal_widget_render+162)
                            traffic_get_item_speed
                            navit/traffic.c:2766:9
#03 0x000723df libnavit.so (gui_internal_widget_render+162)
                            traffic_get_item_speed
                            navit/traffic.c:2766:9
#04 0x000723df libnavit.so (gui_internal_widget_render+162)
                            traffic_get_item_speed
                            navit/traffic.c:2766:9
#05 0x000723df libnavit.so (gui_internal_widget_render+162)
                            traffic_get_item_speed
                            navit/traffic.c:2766:9
#06 0x000250bb libnavit.so (callback_call+450)
                            cache_equal20
                            navit/cache.c:76:12
#07 0x00025227 libnavit.so (callback_list_call_attr+62)
                            cache_flush
                            navit/cache.c:239:31
#08 0x0002528b libnavit.so (callback_list_call_attr_args+78)
                            cache_remove_from_list
                            navit/cache.c:127:26
#09 0x0005e841 libnavit.so
                            rm_rect_destroy
                            navit/route.c:3846:9
#10 0x000250bb libnavit.so (callback_call+450)
                            cache_equal20
                            navit/cache.c:76:12
#11 0x000251bf libnavit.so (callback_call_args+78)
                            cache_entry_destroy
                            navit/cache.c:185:5
#12 0x002b8f3d /data/app/org.navitproject.navit-1/oat/arm/base.odex (offset 0x1e3000)
Crash dump is completed",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,987,2020-04-06T07:05:25Z,,2021-02-05T19:45:17Z,OPEN,False,200,27,11,https://github.com/lains,[WIP] Update:Android:GUI/Internal: Show contextual GUI menu when receiving geo intent,25,"['enhancement', 'android', 'WIP', 'proposal', 'internal-gui']",https://github.com/navit-gps/navit/pull/987,https://github.com/jandegr,11,https://github.com/navit-gps/navit/pull/987#issuecomment-643098974,"In my previous PR #812, the default action when receiving a geo intent (for example by scanning a geo QR code), is to start navigating to the provided location.
This PR aims to give the user more control over which action is started when navit receives a geo intent.
For this (and only implemented when using the internal GUI), I bring up the contextual submenu for a geo position in the internal GUI, and let the user select what to do with this position (add bookmark, set as waypoint, destination, search for nearby POIs), in the same way as when the geo pos is entered manually in the internal GUI.
This is only for Android, and if this feature is not implemented in the active GUI plugin (only implemented in internal GUI for now), the behaviour will revert back to set destination to the GPS coords.","Hi
I have one extra significant crashdump line
(Java_org_navitproject_navit_NavitGraphics_sizeChangedCallback+343)
So apparently it does not survive the initial resize.
I tested it with Navit already running before firing the intent and then it returned to mapview instead of handling the resize in gui internal as other gui screens do when rotating the device (causes a resize too).
It might be usefull to debug this does not handle resize properly issue first, and who knows the solution for the issue from cold start comes a bit closer",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,987,2020-04-06T07:05:25Z,,2021-02-05T19:45:17Z,OPEN,False,200,27,11,https://github.com/lains,[WIP] Update:Android:GUI/Internal: Show contextual GUI menu when receiving geo intent,25,"['enhancement', 'android', 'WIP', 'proposal', 'internal-gui']",https://github.com/navit-gps/navit/pull/987,https://github.com/lains,12,https://github.com/navit-gps/navit/pull/987#issuecomment-659160372,"In my previous PR #812, the default action when receiving a geo intent (for example by scanning a geo QR code), is to start navigating to the provided location.
This PR aims to give the user more control over which action is started when navit receives a geo intent.
For this (and only implemented when using the internal GUI), I bring up the contextual submenu for a geo position in the internal GUI, and let the user select what to do with this position (add bookmark, set as waypoint, destination, search for nearby POIs), in the same way as when the geo pos is entered manually in the internal GUI.
This is only for Android, and if this feature is not implemented in the active GUI plugin (only implemented in internal GUI for now), the behaviour will revert back to set destination to the GPS coords.","I gave it a try yesterday.
On my device, I only have an issue when the geo: intent fires while navit is not running yet.
When navit is already started, then the internal GUI displays properly and the feature works properly (for me).
I confirm (while digging a bit more the crash occuring when the intent fires while navit is not running) that there is a race condition between internal GUI startup and the intent processing in android.c, because if I delay the intent processing by, say, 250ms, then everything runs fine (no crash anymore).
I will submit these changes and line-up this code with trunk for others to test.
I don't like adding fixed time delays to get code working, so there must be something better to do here.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,987,2020-04-06T07:05:25Z,,2021-02-05T19:45:17Z,OPEN,False,200,27,11,https://github.com/lains,[WIP] Update:Android:GUI/Internal: Show contextual GUI menu when receiving geo intent,25,"['enhancement', 'android', 'WIP', 'proposal', 'internal-gui']",https://github.com/navit-gps/navit/pull/987,https://github.com/lains,13,https://github.com/navit-gps/navit/pull/987#issuecomment-660060134,"In my previous PR #812, the default action when receiving a geo intent (for example by scanning a geo QR code), is to start navigating to the provided location.
This PR aims to give the user more control over which action is started when navit receives a geo intent.
For this (and only implemented when using the internal GUI), I bring up the contextual submenu for a geo position in the internal GUI, and let the user select what to do with this position (add bookmark, set as waypoint, destination, search for nearby POIs), in the same way as when the geo pos is entered manually in the internal GUI.
This is only for Android, and if this feature is not implemented in the active GUI plugin (only implemented in internal GUI for now), the behaviour will revert back to set destination to the GPS coords.","In order not to get the crash, it looks like the internal GUI contextual menu must only be invoked after NavitGraphics: handleResize has run.
And in order for the contextual menu to display properly (instead of having the map view displayed while already be inside the menu), the internal GUI contextual menu must only be invoked after Navit   : onResume",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,987,2020-04-06T07:05:25Z,,2021-02-05T19:45:17Z,OPEN,False,200,27,11,https://github.com/lains,[WIP] Update:Android:GUI/Internal: Show contextual GUI menu when receiving geo intent,25,"['enhancement', 'android', 'WIP', 'proposal', 'internal-gui']",https://github.com/navit-gps/navit/pull/987,https://github.com/lains,14,https://github.com/navit-gps/navit/pull/987#issuecomment-683581680,"In my previous PR #812, the default action when receiving a geo intent (for example by scanning a geo QR code), is to start navigating to the provided location.
This PR aims to give the user more control over which action is started when navit receives a geo intent.
For this (and only implemented when using the internal GUI), I bring up the contextual submenu for a geo position in the internal GUI, and let the user select what to do with this position (add bookmark, set as waypoint, destination, search for nearby POIs), in the same way as when the geo pos is entered manually in the internal GUI.
This is only for Android, and if this feature is not implemented in the active GUI plugin (only implemented in internal GUI for now), the behaviour will revert back to set destination to the GPS coords.","Could someone give a try to this new version for Android and check that it is running better, without crash, whether navit is already started or not when the intent is fired?
If it works well, I will have a look at suppressing the fixed delay and rely on a better sequencing on the internal GUI startup.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,987,2020-04-06T07:05:25Z,,2021-02-05T19:45:17Z,OPEN,False,200,27,11,https://github.com/lains,[WIP] Update:Android:GUI/Internal: Show contextual GUI menu when receiving geo intent,25,"['enhancement', 'android', 'WIP', 'proposal', 'internal-gui']",https://github.com/navit-gps/navit/pull/987,https://github.com/lains,15,https://github.com/navit-gps/navit/pull/987#issuecomment-752360719,"In my previous PR #812, the default action when receiving a geo intent (for example by scanning a geo QR code), is to start navigating to the provided location.
This PR aims to give the user more control over which action is started when navit receives a geo intent.
For this (and only implemented when using the internal GUI), I bring up the contextual submenu for a geo position in the internal GUI, and let the user select what to do with this position (add bookmark, set as waypoint, destination, search for nearby POIs), in the same way as when the geo pos is entered manually in the internal GUI.
This is only for Android, and if this feature is not implemented in the active GUI plugin (only implemented in internal GUI for now), the behaviour will revert back to set destination to the GPS coords.","Hi, I got my build environment back up. I will start testing again to sort out the race condition at startup.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,987,2020-04-06T07:05:25Z,,2021-02-05T19:45:17Z,OPEN,False,200,27,11,https://github.com/lains,[WIP] Update:Android:GUI/Internal: Show contextual GUI menu when receiving geo intent,25,"['enhancement', 'android', 'WIP', 'proposal', 'internal-gui']",https://github.com/navit-gps/navit/pull/987,https://github.com/lains,16,https://github.com/navit-gps/navit/pull/987#issuecomment-774238176,"In my previous PR #812, the default action when receiving a geo intent (for example by scanning a geo QR code), is to start navigating to the provided location.
This PR aims to give the user more control over which action is started when navit receives a geo intent.
For this (and only implemented when using the internal GUI), I bring up the contextual submenu for a geo position in the internal GUI, and let the user select what to do with this position (add bookmark, set as waypoint, destination, search for nearby POIs), in the same way as when the geo pos is entered manually in the internal GUI.
This is only for Android, and if this feature is not implemented in the active GUI plugin (only implemented in internal GUI for now), the behaviour will revert back to set destination to the GPS coords.","I'm having issues with navit crashing at startup, just as soon as I accept access to GPS and SD card. But it looks like I'm getting the same behaviour even when building from trunk, not only when including the code from this PR...
Anyone having the same issue (SDK android-sdk-6858069, NDK android-ndk-r21d, device is running )?
02-05 19:50:23.763   595  4205 I ActivityManager: START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=org.navitproject.navit/.Navit (has extras)} from uid 10037 on display 0
02-05 19:50:23.826   595   830 I ActivityManager: Start proc 8538:org.navitproject.navit/u0a213 for activity org.navitproject.navit/.Navit
02-05 19:50:23.970  8538  8538 D Navit   : onCreate
02-05 19:50:23.991  8538  8538 D Navit   : ask for permission(s)
02-05 19:50:24.006  8538  8538 D Navit   : lang=fr
02-05 19:50:24.006  8538  8538 D Navit   : Country1 FR
02-05 19:50:24.006  8538  8538 D Navit   : Country2 FR
02-05 19:50:24.006  8538  8538 D Navit   : Language fr
02-05 19:50:24.045   595  4109 D VoldConnector: SND -> {28 volume mkdirs /storage/emulated/0/Android/data/org.navitproject.navit/files/}
02-05 19:50:24.047  8538  8538 I Navit   : NavitDataDir = /data/user/0/org.navitproject.navit/files
02-05 19:50:24.047  8538  8538 I Navit   : mapFilenamePath = /storage/emulated/0/Android/data/org.navitproject.navit/files/
02-05 19:50:24.048  8538  8538 D Navit   : -> pixels x=540 pixels y=960
02-05 19:50:24.048  8538  8538 D Navit   : -> dpi=239
02-05 19:50:24.048  8538  8538 D Navit   : -> density=1.5
02-05 19:50:24.048  8538  8538 D Navit   : -> scaledDensity=1.5
02-05 19:50:24.049  8538  8538 D Navit   : Res Name fr, result /data/user/0/org.navitproject.navit/files/locale/fr/LC_MESSAGES/navit.mo
02-05 19:50:24.049  8538  8538 D Navit   : Res ID 2131099674
02-05 19:50:24.050  8538  8538 D Navit   : Extracting resource
02-05 19:50:24.059  8538  8538 I Navit   : Device density detected: hdpi
02-05 19:50:24.116  8538  8538 D Navit   : Processing config file 'navit.xml' from assets
02-05 19:50:24.116  8538  8538 D Navit   : Asset Name config/hdpi/navit.xml, output /data/user/0/org.navitproject.navit/files/share/navit.xml
02-05 19:50:24.116  8538  8538 D Navit   : Extracting asset 'config/hdpi/navit.xml'
02-05 19:50:24.121  8538  8538 D Navit   : Processing config file 'navit_layout_bike.xml' from assets
02-05 19:50:24.121  8538  8538 D Navit   : Asset Name config/hdpi/navit_layout_bike.xml, output /data/user/0/org.navitproject.navit/files/share/navit_layout_bike.xml
02-05 19:50:24.121  8538  8538 D Navit   : Extracting asset 'config/hdpi/navit_layout_bike.xml'
02-05 19:50:24.124  8538  8538 D Navit   : Processing config file 'navit_layout_car.xml' from assets
02-05 19:50:24.124  8538  8538 D Navit   : Asset Name config/hdpi/navit_layout_car.xml, output /data/user/0/org.navitproject.navit/files/share/navit_layout_car.xml
02-05 19:50:24.124  8538  8538 D Navit   : Extracting asset 'config/hdpi/navit_layout_car.xml'
02-05 19:50:24.129  8538  8538 D Navit   : Processing config file 'navit_layout_car_android.xml' from assets
02-05 19:50:24.129  8538  8538 D Navit   : Asset Name config/hdpi/navit_layout_car_android.xml, output /data/user/0/org.navitproject.navit/files/share/navit_layout_car_android.xml
02-05 19:50:24.129  8538  8538 D Navit   : Extracting asset 'config/hdpi/navit_layout_car_android.xml'
02-05 19:50:24.132  8538  8538 D Navit   : Processing config file 'navit_layout_car_dark.xml' from assets
02-05 19:50:24.132  8538  8538 D Navit   : Asset Name config/hdpi/navit_layout_car_dark.xml, output /data/user/0/org.navitproject.navit/files/share/navit_layout_car_dark.xml
02-05 19:50:24.133  8538  8538 D Navit   : Extracting asset 'config/hdpi/navit_layout_car_dark.xml'
02-05 19:50:24.140  8538  8538 D Navit   : Processing config file 'navit_layout_car_simple.xml' from assets
02-05 19:50:24.140  8538  8538 D Navit   : Asset Name config/hdpi/navit_layout_car_simple.xml, output /data/user/0/org.navitproject.navit/files/share/navit_layout_car_simple.xml
02-05 19:50:24.140  8538  8538 D Navit   : Extracting asset 'config/hdpi/navit_layout_car_simple.xml'
02-05 19:50:24.141  8538  8538 D Navit   : Processing config file 'navit_layout_th.xml' from assets
02-05 19:50:24.141  8538  8538 D Navit   : Asset Name config/hdpi/navit_layout_th.xml, output /data/user/0/org.navitproject.navit/files/share/navit_layout_th.xml
02-05 19:50:24.141  8538  8538 D Navit   : Extracting asset 'config/hdpi/navit_layout_th.xml'
02-05 19:50:24.143  8538  8538 D Navit   : android.os.Build.VERSION.SDK_INT=23
02-05 19:50:24.154  8538  8538 V NavitGraphics: set Buttononcallback
02-05 19:50:24.154  8538  8538 V NavitGraphics: set Motioncallback
02-05 19:50:24.154  8538  8538 V NavitGraphics: set Keypresscallback
02-05 19:50:24.154  8538  8538 E navit   : error:navit:struct attr *attr_new_from_text(const char *, const char *):Incorrect value 'false' for attribute 'keyboard';  expected a number. Defaulting to 0.
02-05 19:50:24.154  8538  8538 E navit   : 
02-05 19:50:24.155  8538  8538 E navit   : error:navit:int command_register_callbacks(struct command_saved *):could not resolve object in cs=0xb4cfe8e0:
02-05 19:50:24.155  8538  8538 E navit   : error:navit:int command_register_callbacks(struct command_saved *):	navigation.nav_status>=3
02-05 19:50:24.155  8538  8538 E navit   : error:navit:int command_register_callbacks(struct command_saved *):	           ^
02-05 19:50:24.155  8538  8538 E navit   : error:navit:int command_register_callbacks(struct command_saved *):could not resolve object in cs=0xb4cfe980:
02-05 19:50:24.155  8538  8538 E navit   : error:navit:int command_register_callbacks(struct command_saved *):	vehicle.position_valid
02-05 19:50:24.155  8538  8538 E navit   : error:navit:int command_register_callbacks(struct command_saved *):	^
02-05 19:50:24.155  8538  8538 E navit   : error:navit:int command_register_callbacks(struct command_saved *):could not resolve object in cs=0xb4cfea20:
02-05 19:50:24.155  8538  8538 E navit   : error:navit:int command_register_callbacks(struct command_saved *):	navigation.nav_status>=3
02-05 19:50:24.155  8538  8538 E navit   : error:navit:int command_register_callbacks(struct command_saved *):	           ^
02-05 19:50:24.155  8538  8538 E navit   : error:navit:int command_register_callbacks(struct command_saved *):could not resolve object in cs=0xb4cfeac0:
02-05 19:50:24.155  8538  8538 E navit   : error:navit:int command_register_callbacks(struct command_saved *):	navigation.nav_status==-1 || navigation.nav_status==1 || navigation.nav_status==2
02-05 19:50:24.155  8538  8538 E navit   : error:navit:int command_register_callbacks(struct command_saved *):	           ^
02-05 19:50:24.155  8538  8538 E navit   : error:navit:int command_register_callbacks(struct command_saved *):could not resolve object in cs=0xb4cfeb60:
02-05 19:50:24.155  8538  8538 E navit   : error:navit:int command_register_callbacks(struct command_saved *):	navigation.nav_status>=3
02-05 19:50:24.155  8538  8538 E navit   : error:navit:int command_register_callbacks(struct command_saved *):	           ^
02-05 19:50:24.156  8538  8538 E navit   : error:navit:int command_register_callbacks(struct command_saved *):could not resolve object in cs=0xb4cfec00:
02-05 19:50:24.156  8538  8538 E navit   : error:navit:int command_register_callbacks(struct command_saved *):	navigation.nav_status>=3
02-05 19:50:24.156  8538  8538 E navit   : error:navit:int command_register_callbacks(struct command_saved *):	           ^
02-05 19:50:24.156  8538  8538 E navit   : error:navit:int command_register_callbacks(struct command_saved *):could not resolve object in cs=0xb4cfeca0:
02-05 19:50:24.156  8538  8538 E navit   : error:navit:int command_register_callbacks(struct command_saved *):	navigation.nav_status>=3
02-05 19:50:24.156  8538  8538 E navit   : error:navit:int command_register_callbacks(struct command_saved *):	           ^
02-05 19:50:24.156  8538  8538 E navit   : error:navit:int command_register_callbacks(struct command_saved *):could not resolve object in cs=0xb4cfed40:
02-05 19:50:24.156  8538  8538 E navit   : error:navit:int command_register_callbacks(struct command_saved *):	vehicle.position_valid
02-05 19:50:24.156  8538  8538 E navit   : error:navit:int command_register_callbacks(struct command_saved *):	^
02-05 19:50:24.156  8538  8538 E navit   : error:navit:int command_register_callbacks(struct command_saved *):could not resolve object in cs=0xb4cfef20:
02-05 19:50:24.156  8538  8538 E navit   : error:navit:int command_register_callbacks(struct command_saved *):	follow>1
02-05 19:50:24.156  8538  8538 E navit   : error:navit:int command_register_callbacks(struct command_saved *):	^
02-05 19:50:24.165  8538  8538 D NavitSpeech2: Create
02-05 19:50:24.166  8538  8538 D NavitSpeech2: ACTION_CHECK_TTS_DATA available
02-05 19:50:24.368  8538  8538 E navit   : error:navit:int xml_parse_file(char *, void *, void (*)(xml_context *, const char *, const char **, const char **, void *, GError **), void (*)(xml_context *, const char *, void *, GError **), void (*)(xml_context *, const char *, gsize, void *, GError **)):could not open XML file
02-05 19:50:24.368  8538  8538 E navit   : error:navit:struct traffic_message **traffic_get_messages_from_xml_file(struct traffic *, char *):could not retrieve stored traffic messages
02-05 19:50:24.501   595   628 W ActivityManager: Activity pause timeout for ActivityRecord{eb12a5a u0 org.navitproject.navit/.Navit t590}
02-05 19:50:24.527  8538  8538 D Navit   : onCreate intent Intent { act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=org.navitproject.navit/.Navit bnds=[42,162][132,252] (has extras) }
02-05 19:50:24.528  8538  8538 D Navit   : onStart
02-05 19:50:24.529  8538  8538 D Navit   : onResume
02-05 19:50:24.550  8538  8538 D Navit   : onPause
02-05 19:50:24.551  8538  8538 V Navit   : Handle Event
02-05 19:50:24.552  8538  8538 V Navit   : Handle Event
02-05 19:50:24.552  8538  8538 V Navit   : Handle Event
02-05 19:50:24.552  8538  8538 V Navit   : Handle Event
02-05 19:50:24.553  8538  8538 V Navit   : Handle Event
02-05 19:50:24.554  8538  8538 V Navit   : Handle Event
02-05 19:50:24.554  8538  8538 V Navit   : Handle Event
02-05 19:50:24.554  8538  8538 V Navit   : Handle Event
02-05 19:50:24.612  8538  8538 D NavitGraphics: onApplyWindowInsets
02-05 19:50:24.613  8538  8538 V NavitGraphics: Padding -1a- left=0 top=36 right=0 bottom=0
02-05 19:50:24.680  8538  8538 D NavitGraphics: onSizeChanged pixels x=540 pixels y=960
02-05 19:50:24.681  8538  8538 D NavitGraphics: handleResize w=540 h=960
02-05 19:50:24.686  8538  8538 V NavitGraphics: set Buttononcallback
02-05 19:50:24.686  8538  8538 V NavitGraphics: set Motioncallback
02-05 19:50:24.686  8538  8538 V NavitGraphics: set Keypresscallback
02-05 19:50:24.687  8538  8538 V NavitGraphics: overlay_disable: 1, Parent: true
02-05 19:50:24.688  8538  8538 V NavitGraphics: set Buttononcallback
02-05 19:50:24.688  8538  8538 V NavitGraphics: set Motioncallback
02-05 19:50:24.688  8538  8538 V NavitGraphics: set Keypresscallback
02-05 19:50:24.688  8538  8538 V NavitGraphics: overlay_disable: 0, Parent: true
02-05 19:50:24.690  8538  8538 V NavitGraphics: set Buttononcallback
02-05 19:50:24.691  8538  8538 V NavitGraphics: set Motioncallback
02-05 19:50:24.691  8538  8538 V NavitGraphics: set Keypresscallback
02-05 19:50:24.691  8538  8538 V NavitGraphics: overlay_disable: 1, Parent: true
02-05 19:50:24.694  8538  8538 V NavitGraphics: set Buttononcallback
02-05 19:50:24.694  8538  8538 V NavitGraphics: set Motioncallback
02-05 19:50:24.694  8538  8538 V NavitGraphics: set Keypresscallback
02-05 19:50:24.694  8538  8538 V NavitGraphics: overlay_disable: 0, Parent: true
02-05 19:50:24.697  8538  8538 V NavitGraphics: set Buttononcallback
02-05 19:50:24.697  8538  8538 V NavitGraphics: set Motioncallback
02-05 19:50:24.697  8538  8538 V NavitGraphics: set Keypresscallback
02-05 19:50:24.697  8538  8538 V NavitGraphics: overlay_disable: 0, Parent: true
02-05 19:50:24.700  8538  8538 V NavitGraphics: set Buttononcallback
02-05 19:50:24.700  8538  8538 V NavitGraphics: set Motioncallback
02-05 19:50:24.700  8538  8538 V NavitGraphics: set Keypresscallback
02-05 19:50:24.700  8538  8538 V NavitGraphics: overlay_disable: 1, Parent: true
02-05 19:50:24.705  8538  8538 V NavitGraphics: set Buttononcallback
02-05 19:50:24.705  8538  8538 V NavitGraphics: set Motioncallback
02-05 19:50:24.705  8538  8538 V NavitGraphics: set Keypresscallback
02-05 19:50:24.705  8538  8538 V NavitGraphics: overlay_disable: 0, Parent: true
02-05 19:50:24.707  8538  8538 V NavitGraphics: set Buttononcallback
02-05 19:50:24.707  8538  8538 V NavitGraphics: set Motioncallback
02-05 19:50:24.707  8538  8538 V NavitGraphics: set Keypresscallback
02-05 19:50:24.707  8538  8538 V NavitGraphics: overlay_disable: 0, Parent: true
02-05 19:50:24.710  8538  8538 V NavitGraphics: set Buttononcallback
02-05 19:50:24.710  8538  8538 V NavitGraphics: set Motioncallback
02-05 19:50:24.710  8538  8538 V NavitGraphics: set Keypresscallback
02-05 19:50:24.710  8538  8538 V NavitGraphics: overlay_disable: 1, Parent: true
02-05 19:50:24.712  8538  8538 V NavitGraphics: set Buttononcallback
02-05 19:50:24.712  8538  8538 V NavitGraphics: set Motioncallback
02-05 19:50:24.712  8538  8538 V NavitGraphics: set Keypresscallback
02-05 19:50:24.712  8538  8538 V NavitGraphics: overlay_disable: 1, Parent: true
02-05 19:50:24.713  8538  8538 V NavitGraphics: set Buttononcallback
02-05 19:50:24.713  8538  8538 V NavitGraphics: set Motioncallback
02-05 19:50:24.713  8538  8538 V NavitGraphics: set Keypresscallback
02-05 19:50:24.713  8538  8538 V NavitGraphics: overlay_disable: 1, Parent: true
02-05 19:50:24.715  8538  8538 V NavitGraphics: set Buttononcallback
02-05 19:50:24.715  8538  8538 V NavitGraphics: set Motioncallback
02-05 19:50:24.715  8538  8538 V NavitGraphics: set Keypresscallback
02-05 19:50:24.715  8538  8538 V NavitGraphics: overlay_disable: 1, Parent: true
02-05 19:50:24.716  8538  8538 V NavitGraphics: set Buttononcallback
02-05 19:50:24.716  8538  8538 V NavitGraphics: set Motioncallback
02-05 19:50:24.716  8538  8538 V NavitGraphics: set Keypresscallback
02-05 19:50:24.716  8538  8538 V NavitGraphics: overlay_disable: 1, Parent: true
02-05 19:50:24.722  8538  8538 V NavitGraphics: set Buttononcallback
02-05 19:50:24.722  8538  8538 V NavitGraphics: set Motioncallback
02-05 19:50:24.722  8538  8538 V NavitGraphics: set Keypresscallback
02-05 19:50:24.722  8538  8538 V NavitGraphics: overlay_disable: 1, Parent: true
02-05 19:50:24.723  8538  8538 V NavitGraphics: set Buttononcallback
02-05 19:50:24.723  8538  8538 V NavitGraphics: set Motioncallback
02-05 19:50:24.723  8538  8538 V NavitGraphics: set Keypresscallback
02-05 19:50:24.723  8538  8538 V NavitGraphics: overlay_disable: 1, Parent: true
02-05 19:50:24.725  8538  8538 V NavitGraphics: set Buttononcallback
02-05 19:50:24.725  8538  8538 V NavitGraphics: set Motioncallback
02-05 19:50:24.725  8538  8538 V NavitGraphics: set Keypresscallback
02-05 19:50:24.725  8538  8538 V NavitGraphics: overlay_disable: 1, Parent: true
02-05 19:50:24.877  8538  8538 D NavitSpeech2: onActivityResult 1 1
02-05 19:50:24.998  8538  8538 D Navit   : onResume
02-05 19:50:25.133  8538  8538 D NavitSpeech2: Status 0
02-05 19:50:25.160  8538  8538 V Navit   : Handle Event
02-05 19:50:25.368  8538  8538 V Navit   : Handle Event
02-05 19:50:25.689  8538  8538 V Navit   : Handle Event
02-05 19:50:26.175  8538  8538 V Navit   : Handle Event
02-05 19:50:26.406  8538  8538 V Navit   : Handle Event
02-05 19:50:26.446  8538  8538 D Navit   : onDestroy
02-05 19:50:26.495   595  1340 I WindowState: WIN DEATH: Window{aa489f3 u0 org.navitproject.navit/org.navitproject.navit.Navit}
02-05 19:50:26.502   595   712 W InputDispatcher: channel 'e1ad929 org.navitproject.navit/org.navitproject.navit.Navit (server)' ~ Consumer closed input channel or an error occurred.  events=0x9
02-05 19:50:26.502   595   712 E InputDispatcher: channel 'e1ad929 org.navitproject.navit/org.navitproject.navit.Navit (server)' ~ Channel is unrecoverably broken and will be disposed!
02-05 19:50:26.502   595   712 W InputDispatcher: channel '71bc47 org.navitproject.navit/org.navitproject.navit.Navit (server)' ~ Consumer closed input channel or an error occurred.  events=0x9
02-05 19:50:26.502   595   712 E InputDispatcher: channel '71bc47 org.navitproject.navit/org.navitproject.navit.Navit (server)' ~ Channel is unrecoverably broken and will be disposed!
02-05 19:50:26.508   595  1354 I WindowState: WIN DEATH: Window{e1ad929 u0 org.navitproject.navit/org.navitproject.navit.Navit}
02-05 19:50:26.508   595  1354 W InputDispatcher: Attempted to unregister already unregistered input channel 'e1ad929 org.navitproject.navit/org.navitproject.navit.Navit (server)'
02-05 19:50:26.513   595  4765 I WindowState: WIN DEATH: Window{71bc47 u0 org.navitproject.navit/org.navitproject.navit.Navit}
02-05 19:50:26.513   595  4765 W InputDispatcher: Attempted to unregister already unregistered input channel '71bc47 org.navitproject.navit/org.navitproject.navit.Navit (server)'
02-05 19:50:26.532   595  3946 I ActivityManager: Process org.navitproject.navit (pid 8538) has died
02-05 19:50:26.533   595  3946 W ActivityManager: Force removing ActivityRecord{eb12a5a u0 org.navitproject.navit/.Navit t590}: app died, no saved state",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,987,2020-04-06T07:05:25Z,,2021-02-05T19:45:17Z,OPEN,False,200,27,11,https://github.com/lains,[WIP] Update:Android:GUI/Internal: Show contextual GUI menu when receiving geo intent,25,"['enhancement', 'android', 'WIP', 'proposal', 'internal-gui']",https://github.com/navit-gps/navit/pull/987,https://github.com/lains,17,https://github.com/navit-gps/navit/pull/987#issuecomment-774249068,"In my previous PR #812, the default action when receiving a geo intent (for example by scanning a geo QR code), is to start navigating to the provided location.
This PR aims to give the user more control over which action is started when navit receives a geo intent.
For this (and only implemented when using the internal GUI), I bring up the contextual submenu for a geo position in the internal GUI, and let the user select what to do with this position (add bookmark, set as waypoint, destination, search for nearby POIs), in the same way as when the geo pos is entered manually in the internal GUI.
This is only for Android, and if this feature is not implemented in the active GUI plugin (only implemented in internal GUI for now), the behaviour will revert back to set destination to the GPS coords.","Indeed, I can get rid of this startup crash if I rebase this PR on 6b48a55, and then selectively cherry-picking the following commits:

14f9089
0b61705
93f73aa",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,988,2020-04-12T21:43:50Z,2020-04-12T21:44:54Z,2020-04-13T10:18:01Z,MERGED,True,1,0,1,https://github.com/metalstrolch,fix:ci:fix sailfish artifacts uploading,1,[],https://github.com/navit-gps/navit/pull/988,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/988,"For whatever reasons the sailfish rpms are not visible in circleci
any more when they used to be. Maybe because of indirect path usage on
uploading them. This fixes that.","For whatever reasons the sailfish rpms are not visible in circleci
any more when they used to be. Maybe because of indirect path usage on
uploading them. This fixes that.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,988,2020-04-12T21:43:50Z,2020-04-12T21:44:54Z,2020-04-13T10:18:01Z,MERGED,True,1,0,1,https://github.com/metalstrolch,fix:ci:fix sailfish artifacts uploading,1,[],https://github.com/navit-gps/navit/pull/988,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/988#issuecomment-612760468,"For whatever reasons the sailfish rpms are not visible in circleci
any more when they used to be. Maybe because of indirect path usage on
uploading them. This fixes that.","Hi, the reason was that circleci cleaned up old artifacts as far I remember",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,988,2020-04-12T21:43:50Z,2020-04-12T21:44:54Z,2020-04-13T10:18:01Z,MERGED,True,1,0,1,https://github.com/metalstrolch,fix:ci:fix sailfish artifacts uploading,1,[],https://github.com/navit-gps/navit/pull/988,https://github.com/jkoan,3,https://github.com/navit-gps/navit/pull/988#issuecomment-612841779,"For whatever reasons the sailfish rpms are not visible in circleci
any more when they used to be. Maybe because of indirect path usage on
uploading them. This fixes that.","From Circleci Build-Job Page:
""After 30 days, all artifacts associated with a build automatically expire. Since this run is over 30 days old, the artifacts may have been deleted.""",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,989,2020-04-22T19:57:38Z,2020-04-25T22:59:37Z,2020-04-25T23:00:03Z,MERGED,True,390,14,15,https://github.com/metalstrolch,Add:Core+Graphics+Qt5:Add support for textured polygons,5,[],https://github.com/navit-gps/navit/pull/989,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/989,"This pull request adds the basic support for textured polygons.

It adds a function to graphics plugins to set texture.
It enhances itemgra configuration that allows to set a picture to polygon map elements
Basic support for Qt5 graphics.
Some example textures added to car layout.
Texture files have own resource directory.","This pull request adds the basic support for textured polygons.

It adds a function to graphics plugins to set texture.
It enhances itemgra configuration that allows to set a picture to polygon map elements
Basic support for Qt5 graphics.
Some example textures added to car layout.
Texture files have own resource directory.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,989,2020-04-22T19:57:38Z,2020-04-25T22:59:37Z,2020-04-25T23:00:03Z,MERGED,True,390,14,15,https://github.com/metalstrolch,Add:Core+Graphics+Qt5:Add support for textured polygons,5,[],https://github.com/navit-gps/navit/pull/989,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/989#issuecomment-618007200,"This pull request adds the basic support for textured polygons.

It adds a function to graphics plugins to set texture.
It enhances itemgra configuration that allows to set a picture to polygon map elements
Basic support for Qt5 graphics.
Some example textures added to car layout.
Texture files have own resource directory.",Example (Sailfish) screenshot. See cemetary and wood polygons.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,990,2020-04-22T20:06:15Z,2020-04-30T10:23:19Z,2020-05-01T16:40:41Z,MERGED,True,67,2,4,https://github.com/metalstrolch,Add:Core:Add mapfeatures,3,[],https://github.com/navit-gps/navit/pull/990,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/990,"This pull request adds some missing map features to maptool and to configuration.
Most notably caves, cliffs and dams.","This pull request adds some missing map features to maptool and to configuration.
Most notably caves, cliffs and dams.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,991,2020-04-26T14:28:03Z,2020-04-30T22:02:05Z,2020-05-01T16:40:37Z,MERGED,True,0,0,2,https://github.com/jkoan,fix:icons:Update svgz files to be valid for librsvg > 2.47,3,[],https://github.com/navit-gps/navit/pull/991,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/991,"This fixes #978
Tested within manjaro Linux and visually inspected with inkscape","This fixes #978
Tested within manjaro Linux and visually inspected with inkscape",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,993,2020-04-29T18:13:58Z,2020-04-30T20:40:07Z,2020-05-01T16:43:51Z,MERGED,True,150,120,2,https://github.com/jfitie,"Fix:POI/poly/labels:Small visual improvements to POI order, poly colors, and labels",12,"['enhancement', 'cleanup', 'osd']",https://github.com/navit-gps/navit/pull/993,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/993,"Small visual improvements to POI order.
Also fixed POI order in navit_layout_car_dark_shipped.xml, which is now the same as in navit_layout_car_shipped.xml.","Small visual improvements to POI order.
Also fixed POI order in navit_layout_car_dark_shipped.xml, which is now the same as in navit_layout_car_shipped.xml.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,993,2020-04-29T18:13:58Z,2020-04-30T20:40:07Z,2020-05-01T16:43:51Z,MERGED,True,150,120,2,https://github.com/jfitie,"Fix:POI/poly/labels:Small visual improvements to POI order, poly colors, and labels",12,"['enhancement', 'cleanup', 'osd']",https://github.com/navit-gps/navit/pull/993,https://github.com/jfitie,2,https://github.com/navit-gps/navit/pull/993#issuecomment-621397476,"Small visual improvements to POI order.
Also fixed POI order in navit_layout_car_dark_shipped.xml, which is now the same as in navit_layout_car_shipped.xml.",Why does this PR fail?,True,{'CONFUSED': ['https://github.com/jfitie']}
navit-gps/navit,https://github.com/navit-gps/navit,993,2020-04-29T18:13:58Z,2020-04-30T20:40:07Z,2020-05-01T16:43:51Z,MERGED,True,150,120,2,https://github.com/jfitie,"Fix:POI/poly/labels:Small visual improvements to POI order, poly colors, and labels",12,"['enhancement', 'cleanup', 'osd']",https://github.com/navit-gps/navit/pull/993,https://github.com/metalstrolch,3,https://github.com/navit-gps/navit/pull/993#issuecomment-621411852,"Small visual improvements to POI order.
Also fixed POI order in navit_layout_car_dark_shipped.xml, which is now the same as in navit_layout_car_shipped.xml.","OK, then this isn't only with my setup. It seems that currently android build fails on branchs that are not on navit-gps but on users fork. Here on jfiftie. Noticed that on builds for my branches as well. But I don't have a clue why.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,993,2020-04-29T18:13:58Z,2020-04-30T20:40:07Z,2020-05-01T16:43:51Z,MERGED,True,150,120,2,https://github.com/jfitie,"Fix:POI/poly/labels:Small visual improvements to POI order, poly colors, and labels",12,"['enhancement', 'cleanup', 'osd']",https://github.com/navit-gps/navit/pull/993,https://github.com/metalstrolch,4,https://github.com/navit-gps/navit/pull/993#issuecomment-621416084,"Small visual improvements to POI order.
Also fixed POI order in navit_layout_car_dark_shipped.xml, which is now the same as in navit_layout_car_shipped.xml.",Pushed the same branch to navit-gps repository. Let's see if this builds.,True,{'THUMBS_UP': ['https://github.com/jfitie']}
navit-gps/navit,https://github.com/navit-gps/navit,993,2020-04-29T18:13:58Z,2020-04-30T20:40:07Z,2020-05-01T16:43:51Z,MERGED,True,150,120,2,https://github.com/jfitie,"Fix:POI/poly/labels:Small visual improvements to POI order, poly colors, and labels",12,"['enhancement', 'cleanup', 'osd']",https://github.com/navit-gps/navit/pull/993,https://github.com/metalstrolch,5,https://github.com/navit-gps/navit/pull/993#issuecomment-621432466,"Small visual improvements to POI order.
Also fixed POI order in navit_layout_car_dark_shipped.xml, which is now the same as in navit_layout_car_shipped.xml.","Funny. Now the branch on navit-gps finished CI, this PR is green as well.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,993,2020-04-29T18:13:58Z,2020-04-30T20:40:07Z,2020-05-01T16:43:51Z,MERGED,True,150,120,2,https://github.com/jfitie,"Fix:POI/poly/labels:Small visual improvements to POI order, poly colors, and labels",12,"['enhancement', 'cleanup', 'osd']",https://github.com/navit-gps/navit/pull/993,https://github.com/jfitie,6,https://github.com/navit-gps/navit/pull/993#issuecomment-621663204,"Small visual improvements to POI order.
Also fixed POI order in navit_layout_car_dark_shipped.xml, which is now the same as in navit_layout_car_shipped.xml.",Removed the navit-gps:smallvisimprov branch,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,993,2020-04-29T18:13:58Z,2020-04-30T20:40:07Z,2020-05-01T16:43:51Z,MERGED,True,150,120,2,https://github.com/jfitie,"Fix:POI/poly/labels:Small visual improvements to POI order, poly colors, and labels",12,"['enhancement', 'cleanup', 'osd']",https://github.com/navit-gps/navit/pull/993,https://github.com/jfitie,7,https://github.com/navit-gps/navit/pull/993#issuecomment-621757316,"Small visual improvements to POI order.
Also fixed POI order in navit_layout_car_dark_shipped.xml, which is now the same as in navit_layout_car_shipped.xml.","@metalstrolch Is this good enough to merge? If so, please go ahead.
Hope this brings a bit more consistency to the default map layout",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,995,2020-04-29T20:58:55Z,2020-05-01T17:34:14Z,2020-05-01T18:48:02Z,CLOSED,False,9,8,4,https://github.com/metalstrolch,fix:scripts:Correct conditionals in android keystore setup,10,['help wanted'],https://github.com/navit-gps/navit/pull/995,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/995,"This commit fixes the conditionals used in setup script for android keystore causing the android build to fail if there are no android keys there. This is usually the case on all repos not being on navit-gps
Fixes #994","This commit fixes the conditionals used in setup script for android keystore causing the android build to fail if there are no android keys there. This is usually the case on all repos not being on navit-gps
Fixes #994",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,995,2020-04-29T20:58:55Z,2020-05-01T17:34:14Z,2020-05-01T18:48:02Z,CLOSED,False,9,8,4,https://github.com/metalstrolch,fix:scripts:Correct conditionals in android keystore setup,10,['help wanted'],https://github.com/navit-gps/navit/pull/995,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/995#issuecomment-621749983,"This commit fixes the conditionals used in setup script for android keystore causing the android build to fail if there are no android keys there. This is usually the case on all repos not being on navit-gps
Fixes #994","OK, changed it a bit. Does the usual build if scripts/setup_publish_keys.sh previously was able to open a key ring. So on all branches on ""navit-gps"" it does a ""release"" build. On all other repos it does a ""nosigned"" build.
Verified with this branch on ""metalstrolch"" and on ""navit-gps"".
Ready to be merged from my side.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,995,2020-04-29T20:58:55Z,2020-05-01T17:34:14Z,2020-05-01T18:48:02Z,CLOSED,False,9,8,4,https://github.com/metalstrolch,fix:scripts:Correct conditionals in android keystore setup,10,['help wanted'],https://github.com/navit-gps/navit/pull/995,https://github.com/metalstrolch,3,https://github.com/navit-gps/navit/pull/995#issuecomment-621821245,"This commit fixes the conditionals used in setup script for android keystore causing the android build to fail if there are no android keys there. This is usually the case on all repos not being on navit-gps
Fixes #994",Why isn't this report one status? and which? Bummer,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,995,2020-04-29T20:58:55Z,2020-05-01T17:34:14Z,2020-05-01T18:48:02Z,CLOSED,False,9,8,4,https://github.com/metalstrolch,fix:scripts:Correct conditionals in android keystore setup,10,['help wanted'],https://github.com/navit-gps/navit/pull/995,https://github.com/metalstrolch,4,https://github.com/navit-gps/navit/pull/995#issuecomment-622427568,"This commit fixes the conditionals used in setup script for android keystore causing the android build to fail if there are no android keys there. This is usually the case on all repos not being on navit-gps
Fixes #994","Well, this builds now and CI shows it's green. But the build_all step waits for something.
As I cannot inspect CI config I don't know what it is waiting for. Can anyone help?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,995,2020-04-29T20:58:55Z,2020-05-01T17:34:14Z,2020-05-01T18:48:02Z,CLOSED,False,9,8,4,https://github.com/metalstrolch,fix:scripts:Correct conditionals in android keystore setup,10,['help wanted'],https://github.com/navit-gps/navit/pull/995,https://github.com/jkoan,5,https://github.com/navit-gps/navit/pull/995#issuecomment-622428883,"This commit fixes the conditionals used in setup script for android keystore causing the android build to fail if there are no android keys there. This is usually the case on all repos not being on navit-gps
Fixes #994","Well, this builds now and CI shows it's green. But the build_all step waits for something.
As I cannot inspect CI config I don't know what it is waiting for. Can anyone help?

Please enable the Github Checks functionality on CircleCI",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,995,2020-04-29T20:58:55Z,2020-05-01T17:34:14Z,2020-05-01T18:48:02Z,CLOSED,False,9,8,4,https://github.com/metalstrolch,fix:scripts:Correct conditionals in android keystore setup,10,['help wanted'],https://github.com/navit-gps/navit/pull/995,https://github.com/metalstrolch,6,https://github.com/navit-gps/navit/pull/995#issuecomment-622463027,"This commit fixes the conditionals used in setup script for android keystore causing the android build to fail if there are no android keys there. This is usually the case on all repos not being on navit-gps
Fixes #994","Nope. Enabling github checks doesn't fix that. It's some step of the build that's not running most probably. The change disables apk signing for android if no keys are available. Eventually there's a check configured that awaits the signed apk somewhere. Would be interesting to know navit-gps merge check settings expect to be there to consider build_all to finish.
The same branch pushed to navit-gps:navit would build properly (as keys are available).",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,995,2020-04-29T20:58:55Z,2020-05-01T17:34:14Z,2020-05-01T18:48:02Z,CLOSED,False,9,8,4,https://github.com/metalstrolch,fix:scripts:Correct conditionals in android keystore setup,10,['help wanted'],https://github.com/navit-gps/navit/pull/995,https://github.com/jkoan,7,https://github.com/navit-gps/navit/pull/995#issuecomment-622477671,"This commit fixes the conditionals used in setup script for android keystore causing the android build to fail if there are no android keys there. This is usually the case on all repos not being on navit-gps
Fixes #994","Would be interesting to know navit-gps merge check settings expect to be there to consider build_all to finish.


Thats all, its only that we chack build_all passed, which is activated by circleci when github checks is enabled. Could you please try to close this PR and push a new branch and open a new PR ? Of cause after github checks are enabled.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,995,2020-04-29T20:58:55Z,2020-05-01T17:34:14Z,2020-05-01T18:48:02Z,CLOSED,False,9,8,4,https://github.com/metalstrolch,fix:scripts:Correct conditionals in android keystore setup,10,['help wanted'],https://github.com/navit-gps/navit/pull/995,https://github.com/metalstrolch,8,https://github.com/navit-gps/navit/pull/995#issuecomment-622513488,"This commit fixes the conditionals used in setup script for android keystore causing the android build to fail if there are no android keys there. This is usually the case on all repos not being on navit-gps
Fixes #994","See #999, #1000 and #1001 for different behaviour.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,996,2020-04-30T13:08:23Z,2020-04-30T13:09:22Z,2020-05-01T17:41:02Z,CLOSED,False,21,9,3,https://github.com/metalstrolch,testing to be deleted!!!,6,[],https://github.com/navit-gps/navit/pull/996,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/996,Why doesn't the CI workflow complete as it should.,Why doesn't the CI workflow complete as it should.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,996,2020-04-30T13:08:23Z,2020-04-30T13:09:22Z,2020-05-01T17:41:02Z,CLOSED,False,21,9,3,https://github.com/metalstrolch,testing to be deleted!!!,6,[],https://github.com/navit-gps/navit/pull/996,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/996#issuecomment-621824487,Why doesn't the CI workflow complete as it should.,closed duplicate for CI testing,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,997,2020-05-01T10:44:19Z,2020-05-01T15:24:51Z,2020-05-01T16:40:31Z,MERGED,True,226,16,5,https://github.com/metalstrolch,add:layout:add textures for quarry and scrub.,1,[],https://github.com/navit-gps/navit/pull/997,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/997,"Add textures for quarry and scrub.
Use mapnik carto style colors for quarry and scrub for car layout.
Use smaller more repetitive textures overall that greatly improve
drawing performance. Difference is hardly noticeable visually.","Add textures for quarry and scrub.
Use mapnik carto style colors for quarry and scrub for car layout.
Use smaller more repetitive textures overall that greatly improve
drawing performance. Difference is hardly noticeable visually.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,998,2020-05-01T15:06:22Z,2020-05-01T16:40:06Z,2020-05-01T16:40:14Z,CLOSED,False,49,5,1,https://github.com/metalstrolch,add:graphics:gtk_drawing_area:textured polygons,2,"['enhancement', 'gtk']",https://github.com/navit-gps/navit/pull/998,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/998,This adds the support for textured polygons on gtk_drawing_area.,This adds the support for textured polygons on gtk_drawing_area.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,998,2020-05-01T15:06:22Z,2020-05-01T16:40:06Z,2020-05-01T16:40:14Z,CLOSED,False,49,5,1,https://github.com/metalstrolch,add:graphics:gtk_drawing_area:textured polygons,2,"['enhancement', 'gtk']",https://github.com/navit-gps/navit/pull/998,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/998#issuecomment-622429456,This adds the support for textured polygons on gtk_drawing_area.,Then it may look like that.,True,{'THUMBS_UP': ['https://github.com/jfitie']}
navit-gps/navit,https://github.com/navit-gps/navit,999,2020-05-01T18:33:55Z,2020-05-21T07:05:06Z,2020-05-21T07:05:06Z,MERGED,True,7,6,3,https://github.com/metalstrolch,fix:build:android: Don't sign apk if no valid keyring is available,1,[],https://github.com/navit-gps/navit/pull/999,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/999,"This happens usually if building with CI on fork repository
may fix #994","This happens usually if building with CI on fork repository
may fix #994",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1000,2020-05-01T18:35:33Z,2020-05-15T05:46:31Z,2020-06-01T08:47:30Z,CLOSED,False,7,6,3,https://github.com/metalstrolch,"donotmerge! This should pass CI, as it was pushed to navit-gps",1,[],https://github.com/navit-gps/navit/pull/1000,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/1000,This is a positive check. It is the same code as on #999 but on navit-gps not on fork,This is a positive check. It is the same code as on #999 but on navit-gps not on fork,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1001,2020-05-01T18:36:56Z,2020-05-15T05:46:31Z,2020-06-01T08:47:28Z,CLOSED,False,7,6,3,https://github.com/metalstrolch,donotmerge fail - this should hang CI unconditionally even on navit-gps,1,[],https://github.com/navit-gps/navit/pull/1001,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/1001,"this is a negative test. It builds the same as #999 but on navit-gps branch.
This should get the same CI problems as the one on fork.","this is a negative test. It builds the same as #999 but on navit-gps branch.
This should get the same CI problems as the one on fork.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1002,2020-05-02T19:07:25Z,2020-05-03T18:41:40Z,2020-05-05T18:02:29Z,MERGED,True,48,43,2,https://github.com/jfitie,Improve layout,23,"['enhancement', 'osd']",https://github.com/navit-gps/navit/pull/1002,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/1002,"Visual improvements to navit_layout_car_shipped.xml layout, mainly tweaked colors for some polygons. Also applied the same (tinted) changes to navit_layout_car_dark_shipped.xml for consistency.","Visual improvements to navit_layout_car_shipped.xml layout, mainly tweaked colors for some polygons. Also applied the same (tinted) changes to navit_layout_car_dark_shipped.xml for consistency.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1002,2020-05-02T19:07:25Z,2020-05-03T18:41:40Z,2020-05-05T18:02:29Z,MERGED,True,48,43,2,https://github.com/jfitie,Improve layout,23,"['enhancement', 'osd']",https://github.com/navit-gps/navit/pull/1002,https://github.com/jfitie,2,https://github.com/navit-gps/navit/pull/1002#issuecomment-623059996,"Visual improvements to navit_layout_car_shipped.xml layout, mainly tweaked colors for some polygons. Also applied the same (tinted) changes to navit_layout_car_dark_shipped.xml for consistency.","Thanks for the review and info, @metalstrolch. Please review these changes.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1002,2020-05-02T19:07:25Z,2020-05-03T18:41:40Z,2020-05-05T18:02:29Z,MERGED,True,48,43,2,https://github.com/jfitie,Improve layout,23,"['enhancement', 'osd']",https://github.com/navit-gps/navit/pull/1002,https://github.com/jfitie,3,https://github.com/navit-gps/navit/pull/1002#issuecomment-623066550,"Visual improvements to navit_layout_car_shipped.xml layout, mainly tweaked colors for some polygons. Also applied the same (tinted) changes to navit_layout_car_dark_shipped.xml for consistency.","Screenshots: https://imgur.com/a/pEQXWjc
fyi @metalstrolch
Edit: URL",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1002,2020-05-02T19:07:25Z,2020-05-03T18:41:40Z,2020-05-05T18:02:29Z,MERGED,True,48,43,2,https://github.com/jfitie,Improve layout,23,"['enhancement', 'osd']",https://github.com/navit-gps/navit/pull/1002,https://github.com/metalstrolch,4,https://github.com/navit-gps/navit/pull/1002#issuecomment-623159219,"Visual improvements to navit_layout_car_shipped.xml layout, mainly tweaked colors for some polygons. Also applied the same (tinted) changes to navit_layout_car_dark_shipped.xml for consistency.",leisure=track ambiguity can be resolved after merge of #1005,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1003,2020-05-02T21:29:32Z,2020-05-03T17:15:24Z,2020-05-03T17:50:32Z,MERGED,True,1,0,1,https://github.com/metalstrolch,add:maptool:add waterway=weir as poly_dam to map,1,[],https://github.com/navit-gps/navit/pull/1003,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/1003,"As a lot of big water dams are mapped as waterway=weir, add this tag to Navit as well.","As a lot of big water dams are mapped as waterway=weir, add this tag to Navit as well.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1004,2020-05-03T18:31:06Z,2020-05-28T21:39:30Z,2020-06-01T08:47:27Z,MERGED,True,49,5,1,https://github.com/metalstrolch,add:graphics:gtk_drawing_area:textured polygons,3,[],https://github.com/navit-gps/navit/pull/1004,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/1004,This adds the support for testured polygons on gtk_drawing_area.,This adds the support for testured polygons on gtk_drawing_area.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1004,2020-05-03T18:31:06Z,2020-05-28T21:39:30Z,2020-06-01T08:47:27Z,MERGED,True,49,5,1,https://github.com/metalstrolch,add:graphics:gtk_drawing_area:textured polygons,3,[],https://github.com/navit-gps/navit/pull/1004,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/1004#issuecomment-635622838,This adds the support for testured polygons on gtk_drawing_area.,And off we go. Gtk can have textures as well.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1005,2020-05-03T18:35:30Z,2020-05-28T22:17:10Z,2020-06-01T08:47:19Z,MERGED,True,29,2,4,https://github.com/metalstrolch,add:maptool:enhance leisure=track handling and add poi_archeaological_site,5,[],https://github.com/navit-gps/navit/pull/1005,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/1005,"This pull request does two things:


It enhances maptools handling for leisure=track. Because OSM folks are unsure on how to use this tag, it is used as polygon or as way depending on either area=yes tag or on about coming from multipolygon.


Add archaeological site as poi as well, if given on node.","This pull request does two things:


It enhances maptools handling for leisure=track. Because OSM folks are unsure on how to use this tag, it is used as polygon or as way depending on either area=yes tag or on about coming from multipolygon.


Add archaeological site as poi as well, if given on node.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1006,2020-05-21T12:02:08Z,2020-05-21T12:50:13Z,2020-05-21T12:50:27Z,MERGED,True,32,32,3,https://github.com/okias,Refactoring:GTK: use GDK_KEY for keys instead of GDK_,1,[],https://github.com/navit-gps/navit/pull/1006,https://github.com/okias,1,https://github.com/navit-gps/navit/pull/1006,"https://developer.gnome.org/gtk3/stable/gtk-migrating-2-to-3.html
Signed-off-by: David Heidelberg david@ixit.cz
Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://navit.readthedocs.io/en/trunk/development/commit_guidelines.html
and that your code is compliant with out coding style guidelines:
https://navit.readthedocs.io/en/trunk/development/programming_guidelines.html","https://developer.gnome.org/gtk3/stable/gtk-migrating-2-to-3.html
Signed-off-by: David Heidelberg david@ixit.cz
Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://navit.readthedocs.io/en/trunk/development/commit_guidelines.html
and that your code is compliant with out coding style guidelines:
https://navit.readthedocs.io/en/trunk/development/programming_guidelines.html",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1006,2020-05-21T12:02:08Z,2020-05-21T12:50:13Z,2020-05-21T12:50:27Z,MERGED,True,32,32,3,https://github.com/okias,Refactoring:GTK: use GDK_KEY for keys instead of GDK_,1,[],https://github.com/navit-gps/navit/pull/1006,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/1006#issuecomment-632067860,"https://developer.gnome.org/gtk3/stable/gtk-migrating-2-to-3.html
Signed-off-by: David Heidelberg david@ixit.cz
Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://navit.readthedocs.io/en/trunk/development/commit_guidelines.html
and that your code is compliant with out coding style guidelines:
https://navit.readthedocs.io/en/trunk/development/programming_guidelines.html",Thx for the contribution :-),True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1007,2020-05-21T12:47:19Z,2020-08-08T12:06:44Z,2020-08-08T12:06:44Z,MERGED,True,312,313,58,https://github.com/jkoan,attr_search remove unused arg,2,['core'],https://github.com/navit-gps/navit/pull/1007,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/1007,"This PR removes the unused argument from attr_search which can be confusing for new users and is totally unnecessary .
Merge: Dont Squash -> Rebase and Merge because it contains individual commits for multiple things but those are required because of the ci sanity check. See individual commits if in doubt.","This PR removes the unused argument from attr_search which can be confusing for new users and is totally unnecessary .
Merge: Dont Squash -> Rebase and Merge because it contains individual commits for multiple things but those are required because of the ci sanity check. See individual commits if in doubt.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1007,2020-05-21T12:47:19Z,2020-08-08T12:06:44Z,2020-08-08T12:06:44Z,MERGED,True,312,313,58,https://github.com/jkoan,attr_search remove unused arg,2,['core'],https://github.com/navit-gps/navit/pull/1007,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/1007#issuecomment-635364477,"This PR removes the unused argument from attr_search which can be confusing for new users and is totally unnecessary .
Merge: Dont Squash -> Rebase and Merge because it contains individual commits for multiple things but those are required because of the ci sanity check. See individual commits if in doubt.",Cherry-Picked 9f85b14 and aff19d0 info trunk because those where unrelated to the change discussed within this PR,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1007,2020-05-21T12:47:19Z,2020-08-08T12:06:44Z,2020-08-08T12:06:44Z,MERGED,True,312,313,58,https://github.com/jkoan,attr_search remove unused arg,2,['core'],https://github.com/navit-gps/navit/pull/1007,https://github.com/jkoan,3,https://github.com/navit-gps/navit/pull/1007#issuecomment-670921351,"This PR removes the unused argument from attr_search which can be confusing for new users and is totally unnecessary .
Merge: Dont Squash -> Rebase and Merge because it contains individual commits for multiple things but those are required because of the ci sanity check. See individual commits if in doubt.",Merging this because nobody is concerned. CI also passed here: https://app.circleci.com/pipelines/github/jkoan/navit/13/workflows/1795a523-7b96-478b-b2f5-579c980932fb,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1008,2020-05-21T13:20:48Z,,2021-05-22T16:07:24Z,OPEN,False,92,65,10,https://github.com/okias,WIP: Refactor:GTK: switch to GTK3,7,['gtk'],https://github.com/navit-gps/navit/pull/1008,https://github.com/okias,1,https://github.com/navit-gps/navit/pull/1008,"Compiles, open window and also shows menu with some warnings.","Compiles, open window and also shows menu with some warnings.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1008,2020-05-21T13:20:48Z,,2021-05-22T16:07:24Z,OPEN,False,92,65,10,https://github.com/okias,WIP: Refactor:GTK: switch to GTK3,7,['gtk'],https://github.com/navit-gps/navit/pull/1008,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/1008#issuecomment-647187816,"Compiles, open window and also shows menu with some warnings.","Continued this a little bit: Porting the now missing expose_event callback to the newer draw callback fixes the crash and allows drawing. Refactor some deprecated things and add mouse wheel to event list.
Now draws using gtk3. Menu unchecked and still compiling with warnings.",True,{'THUMBS_UP': ['https://github.com/okias']}
navit-gps/navit,https://github.com/navit-gps/navit,1008,2020-05-21T13:20:48Z,,2021-05-22T16:07:24Z,OPEN,False,92,65,10,https://github.com/okias,WIP: Refactor:GTK: switch to GTK3,7,['gtk'],https://github.com/navit-gps/navit/pull/1008,https://github.com/metalstrolch,3,https://github.com/navit-gps/navit/pull/1008#issuecomment-647790374,"Compiles, open window and also shows menu with some warnings.","OK, somehow the GUI shows up now. But a lot of it seems not to work. It quite often segfaults.
A lot of deprecation warnings during build.
Will leave this alone for some time.",True,{'EYES': ['https://github.com/jkoan']}
navit-gps/navit,https://github.com/navit-gps/navit,1008,2020-05-21T13:20:48Z,,2021-05-22T16:07:24Z,OPEN,False,92,65,10,https://github.com/okias,WIP: Refactor:GTK: switch to GTK3,7,['gtk'],https://github.com/navit-gps/navit/pull/1008,https://github.com/okias,4,https://github.com/navit-gps/navit/pull/1008#issuecomment-846393084,"Compiles, open window and also shows menu with some warnings.","rebased a top of current git and didn't crashed yet.
EDIT: also tested on Mobian + wayland based Phosh (phone OnePlus 6T), also somehow work. I'll try -Werror for GTK subsystem.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1008,2020-05-21T13:20:48Z,,2021-05-22T16:07:24Z,OPEN,False,92,65,10,https://github.com/okias,WIP: Refactor:GTK: switch to GTK3,7,['gtk'],https://github.com/navit-gps/navit/pull/1008,https://github.com/metalstrolch,5,https://github.com/navit-gps/navit/pull/1008#issuecomment-846394468,"Compiles, open window and also shows menu with some warnings.",Glad to see somebody finally continues this. Concentrate on the build warnings first. The segfaults may be connected to the warnings.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1008,2020-05-21T13:20:48Z,,2021-05-22T16:07:24Z,OPEN,False,92,65,10,https://github.com/okias,WIP: Refactor:GTK: switch to GTK3,7,['gtk'],https://github.com/navit-gps/navit/pull/1008,https://github.com/okias,6,https://github.com/navit-gps/navit/pull/1008#issuecomment-846428864,"Compiles, open window and also shows menu with some warnings.","more I looking at it, it look to me it would make sense to do complete rewrite [1] to GTK 3 (or directly to GTK 4, since devices and phones can benefit from 3D accelerated view).
[1] rewrite I mean redesign the interface again, not just migrate from GTK 2 to 3.
With my current pace and inability to get even maps in compatible format [http://maps9.navit-project.org/ doesn't work for me], I'm kinda losing hope I'll be able to do the whole job.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1011,2020-05-31T22:22:58Z,2020-06-01T06:31:31Z,2020-06-01T08:47:15Z,MERGED,True,25,3,7,https://github.com/metalstrolch,add:maptool/layouts: add poly_swimming_pool,2,[],https://github.com/navit-gps/navit/pull/1011,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/1011,"This PR adds poly_swimming_pool to map leisure=swimming_pool to instead just to poly_sports.
This way it allows to color the swimming pools blue instead of green for poly_sports. Looks way better. Additionally it causes leisure=sports_centre to map to poly_building if building=yes is given.","This PR adds poly_swimming_pool to map leisure=swimming_pool to instead just to poly_sports.
This way it allows to color the swimming pools blue instead of green for poly_sports. Looks way better. Additionally it causes leisure=sports_centre to map to poly_building if building=yes is given.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1014,2020-06-10T09:19:49Z,2020-06-10T09:20:46Z,2020-06-10T09:20:46Z,CLOSED,False,258,0,2,https://github.com/jkoan,add:ci:Add github action workflows for tests,1,[],https://github.com/navit-gps/navit/pull/1014,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/1014,"Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://navit.readthedocs.io/en/trunk/development/commit_guidelines.html
and that your code is compliant with out coding style guidelines:
https://navit.readthedocs.io/en/trunk/development/programming_guidelines.html","Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://navit.readthedocs.io/en/trunk/development/commit_guidelines.html
and that your code is compliant with out coding style guidelines:
https://navit.readthedocs.io/en/trunk/development/programming_guidelines.html",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1015,2020-06-10T09:21:10Z,2020-06-10T09:21:35Z,2020-06-10T09:21:35Z,CLOSED,False,258,0,2,https://github.com/jkoan,add:ci:Add github action workflows for tests,1,[],https://github.com/navit-gps/navit/pull/1015,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/1015,"Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://navit.readthedocs.io/en/trunk/development/commit_guidelines.html
and that your code is compliant with out coding style guidelines:
https://navit.readthedocs.io/en/trunk/development/programming_guidelines.html","Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://navit.readthedocs.io/en/trunk/development/commit_guidelines.html
and that your code is compliant with out coding style guidelines:
https://navit.readthedocs.io/en/trunk/development/programming_guidelines.html",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1017,2020-06-12T07:45:49Z,2020-06-12T08:52:56Z,2020-06-12T20:05:04Z,MERGED,True,12,12,2,https://github.com/jfitie,"Make sure park, meadow, scrub, and wood render in correct order",1,[],https://github.com/navit-gps/navit/pull/1017,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/1017,"Improve rendering order involving park, meadow, scrub, and wood polygons.
Please see before and after below:
Before:

After:

Before:

After:

Before:

After:

Before:

After:","Improve rendering order involving park, meadow, scrub, and wood polygons.
Please see before and after below:
Before:

After:

Before:

After:

Before:

After:

Before:

After:",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1017,2020-06-12T07:45:49Z,2020-06-12T08:52:56Z,2020-06-12T20:05:04Z,MERGED,True,12,12,2,https://github.com/jfitie,"Make sure park, meadow, scrub, and wood render in correct order",1,[],https://github.com/navit-gps/navit/pull/1017,https://github.com/jfitie,2,https://github.com/navit-gps/navit/pull/1017#issuecomment-643156542,"Improve rendering order involving park, meadow, scrub, and wood polygons.
Please see before and after below:
Before:

After:

Before:

After:

Before:

After:

Before:

After:",@jkoan: Welcome to merge if OK.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1017,2020-06-12T07:45:49Z,2020-06-12T08:52:56Z,2020-06-12T20:05:04Z,MERGED,True,12,12,2,https://github.com/jfitie,"Make sure park, meadow, scrub, and wood render in correct order",1,[],https://github.com/navit-gps/navit/pull/1017,https://github.com/jfitie,3,https://github.com/navit-gps/navit/pull/1017#issuecomment-643156580,"Improve rendering order involving park, meadow, scrub, and wood polygons.
Please see before and after below:
Before:

After:

Before:

After:

Before:

After:

Before:

After:",@jkoan: Welcome to merge if OK.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1019,2020-06-14T19:19:03Z,2020-06-18T20:45:37Z,2020-06-18T20:47:43Z,MERGED,True,39,17,2,https://github.com/metalstrolch,Fix:maptool:Duplicate multipolygons if required,6,[],https://github.com/navit-gps/navit/pull/1019,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/1019,"In order to support (multi)polygons that are tagged with more than one
set of tags resulting it to require two navit items to be represented on
map, affected elements are duplicated and added with every item type
decoded. This is already done for ways and points. This fix makes
maptool do this for multipolygons as well.

fixes some valgrind findings","In order to support (multi)polygons that are tagged with more than one
set of tags resulting it to require two navit items to be represented on
map, affected elements are duplicated and added with every item type
decoded. This is already done for ways and points. This fix makes
maptool do this for multipolygons as well.

fixes some valgrind findings",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1020,2020-06-14T19:22:10Z,2020-06-15T12:16:56Z,2020-06-15T12:17:06Z,MERGED,True,75,4,2,https://github.com/metalstrolch,Enhancement:layout_car:Add stripes to danger_area,2,[],https://github.com/navit-gps/navit/pull/1020,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/1020,"This pull request adds a red stripe texture that is used for poly_danger_area on car layout.
Additionally to that, a lightly transparent red border is added to it.
To see the diagonal stripes one needs to use either gtk_drawing_area or qt5 graphics as only those currently support textured polygons.","This pull request adds a red stripe texture that is used for poly_danger_area on car layout.
Additionally to that, a lightly transparent red border is added to it.
To see the diagonal stripes one needs to use either gtk_drawing_area or qt5 graphics as only those currently support textured polygons.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1020,2020-06-14T19:22:10Z,2020-06-15T12:16:56Z,2020-06-15T12:17:06Z,MERGED,True,75,4,2,https://github.com/metalstrolch,Enhancement:layout_car:Add stripes to danger_area,2,[],https://github.com/navit-gps/navit/pull/1020,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/1020#issuecomment-643811771,"This pull request adds a red stripe texture that is used for poly_danger_area on car layout.
Additionally to that, a lightly transparent red border is added to it.
To see the diagonal stripes one needs to use either gtk_drawing_area or qt5 graphics as only those currently support textured polygons.","poly_danger_area can now look the following under supporting graphics

On non supporting graphics it will look like

Position is: 49°7'27""N 10°52'47""E Former Ammunition Depot Langlau",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1021,2020-06-15T05:40:26Z,2020-06-15T08:05:20Z,2020-06-15T08:05:42Z,MERGED,True,18,18,2,https://github.com/jfitie,"Make sure industry, sport, meadow, scrub, and cemetery render in correct order",2,[],https://github.com/navit-gps/navit/pull/1021,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/1021,"Improve rendering order involving industry, sport, meadow, scrub, and cemetery polygons.
Please see before and after below:
Before:

After:

Before:

After:

Before:

After:

Before:

After:

Before:

After:","Improve rendering order involving industry, sport, meadow, scrub, and cemetery polygons.
Please see before and after below:
Before:

After:

Before:

After:

Before:

After:

Before:

After:

Before:

After:",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1021,2020-06-15T05:40:26Z,2020-06-15T08:05:20Z,2020-06-15T08:05:42Z,MERGED,True,18,18,2,https://github.com/jfitie,"Make sure industry, sport, meadow, scrub, and cemetery render in correct order",2,[],https://github.com/navit-gps/navit/pull/1021,https://github.com/jfitie,2,https://github.com/navit-gps/navit/pull/1021#issuecomment-643914219,"Improve rendering order involving industry, sport, meadow, scrub, and cemetery polygons.
Please see before and after below:
Before:

After:

Before:

After:

Before:

After:

Before:

After:

Before:

After:","@jkoan, @metalstrolch: Welcome to merge if OK.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1022,2020-06-15T12:21:12Z,2020-06-21T20:48:54Z,2020-06-21T20:48:58Z,MERGED,True,106,6,5,https://github.com/metalstrolch,fix:maptool:better map aerodroms and military areas,8,[],https://github.com/navit-gps/navit/pull/1022,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/1022,"his commit uses more complex rule set to map aerodromes and military
landuses depending on tag combination avoiding duplication of the area
in binfile.
For example military airports are quite often tagged:
landuse=military
military=airfield
aeroway=aerodrome
which caused the airport to be tripled in map. This is now resolved.
Add grey stripes to military areas for supporting graphics.","his commit uses more complex rule set to map aerodromes and military
landuses depending on tag combination avoiding duplication of the area
in binfile.
For example military airports are quite often tagged:
landuse=military
military=airfield
aeroway=aerodrome
which caused the airport to be tripled in map. This is now resolved.
Add grey stripes to military areas for supporting graphics.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1023,2020-06-16T15:37:41Z,2020-06-16T21:02:31Z,2020-06-16T21:02:37Z,MERGED,True,14,14,2,https://github.com/jfitie,"Order Parking (can be covered by Meadow, Wood) and Playground (can cover Meadow)",4,[],https://github.com/navit-gps/navit/pull/1023,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/1023,"Order Parking (can be covered by Meadow, Wood) and Playground (can cover Meadow)","Order Parking (can be covered by Meadow, Wood) and Playground (can cover Meadow)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1024,2020-06-17T07:44:20Z,2020-06-17T11:33:35Z,2020-06-17T11:33:45Z,MERGED,True,48,13,3,https://github.com/jfitie,Small color tweaks and added polylines,6,[],https://github.com/navit-gps/navit/pull/1024,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/1024,Small color tweaks and added polylines,Small color tweaks and added polylines,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1024,2020-06-17T07:44:20Z,2020-06-17T11:33:35Z,2020-06-17T11:33:45Z,MERGED,True,48,13,3,https://github.com/jfitie,Small color tweaks and added polylines,6,[],https://github.com/navit-gps/navit/pull/1024,https://github.com/jfitie,2,https://github.com/navit-gps/navit/pull/1024#issuecomment-645278303,Small color tweaks and added polylines,"@metalstrolch Then again, there currently already are polylines around building, meadow, farm, and more. Except for probably wood, most polylines added in this PR are on polygons not occuring very frequently in comparison. Please let me know how to proceed.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1024,2020-06-17T07:44:20Z,2020-06-17T11:33:35Z,2020-06-17T11:33:45Z,MERGED,True,48,13,3,https://github.com/jfitie,Small color tweaks and added polylines,6,[],https://github.com/navit-gps/navit/pull/1024,https://github.com/metalstrolch,3,https://github.com/navit-gps/navit/pull/1024#issuecomment-645316379,Small color tweaks and added polylines,"My notice is more or less about two things:
Please keep in mind and check your self if (and how much) performance impact a layout change has.
And of course to:
Wake up the users of low end devices to check and complain early.
So don't stop making the default layouts more beautiful. Just be aware that there could come a point making some of the users complain about decreased performance. But after all everybody can use his private layout.
Despite this, I'm thinking of adding a ""outline"" property to the polygon itemgra, to allow drawing a polygon with outline in one step by the graphics. All modern graphic systems could do so. even windows (except CE) This would be really simple for flat view, but fail badly for 3d view because of the scaling of the outline. Let's see.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1025,2020-06-18T10:36:22Z,2020-06-18T20:09:28Z,2020-06-19T07:21:27Z,MERGED,True,360,225,4,https://github.com/jfitie,"Improve Car Dark layout polygon colors, bring up to date with Car Light polys, automate changes with script",8,[],https://github.com/navit-gps/navit/pull/1025,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/1025,"Improve Car Dark layout polygon colors, bring up to date with Car Light polys, automate changes with script","Improve Car Dark layout polygon colors, bring up to date with Car Light polys, automate changes with script",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1025,2020-06-18T10:36:22Z,2020-06-18T20:09:28Z,2020-06-19T07:21:27Z,MERGED,True,360,225,4,https://github.com/jfitie,"Improve Car Dark layout polygon colors, bring up to date with Car Light polys, automate changes with script",8,[],https://github.com/navit-gps/navit/pull/1025,https://github.com/jfitie,2,https://github.com/navit-gps/navit/pull/1025#issuecomment-645946491,"Improve Car Dark layout polygon colors, bring up to date with Car Light polys, automate changes with script","Before: https://imgur.com/a/qPnkMkR

After: https://imgur.com/a/ilJ1574",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1025,2020-06-18T10:36:22Z,2020-06-18T20:09:28Z,2020-06-19T07:21:27Z,MERGED,True,360,225,4,https://github.com/jfitie,"Improve Car Dark layout polygon colors, bring up to date with Car Light polys, automate changes with script",8,[],https://github.com/navit-gps/navit/pull/1025,https://github.com/jfitie,3,https://github.com/navit-gps/navit/pull/1025#issuecomment-646180411,"Improve Car Dark layout polygon colors, bring up to date with Car Light polys, automate changes with script","@jkoan, @metalstrolch: Welcome to merge if OK.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1026,2020-06-19T07:21:08Z,2020-06-21T19:30:55Z,2020-06-21T19:31:00Z,MERGED,True,719,424,3,https://github.com/jfitie,"Improve Car Dark layout colors, bring all layers up to date with Car Light, automate changes in all layers with script",4,[],https://github.com/navit-gps/navit/pull/1026,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/1026,"Improve Car Dark layout colors, bring all layers up to date with Car Light, automate changes in all layers with script
@metalstrolch OK, let's do the other layers as well...","Improve Car Dark layout colors, bring all layers up to date with Car Light, automate changes in all layers with script
@metalstrolch OK, let's do the other layers as well...",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1027,2020-06-20T08:08:12Z,2020-07-02T13:41:40Z,2020-07-02T13:41:40Z,MERGED,True,2,0,1,https://github.com/jfitie,Android: Activate downloaded maps automatically,3,"['enhancement', 'android']",https://github.com/navit-gps/navit/pull/1027,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/1027,"Activate downloaded maps automatically on Android by including the /sdcard/Download directory.
This is done so that maps downloaded in the browser, f.ex. using the Planet Extractor, which go to /sdcard/Download by default, are activated automatically without having to change the map location in de UI. This way, maps can be downloaded in the app using the UI, and maps can also be downloaded through the browser. Both will just work™.","Activate downloaded maps automatically on Android by including the /sdcard/Download directory.
This is done so that maps downloaded in the browser, f.ex. using the Planet Extractor, which go to /sdcard/Download by default, are activated automatically without having to change the map location in de UI. This way, maps can be downloaded in the app using the UI, and maps can also be downloaded through the browser. Both will just work™.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1027,2020-06-20T08:08:12Z,2020-07-02T13:41:40Z,2020-07-02T13:41:40Z,MERGED,True,2,0,1,https://github.com/jfitie,Android: Activate downloaded maps automatically,3,"['enhancement', 'android']",https://github.com/navit-gps/navit/pull/1027,https://github.com/lains,2,https://github.com/navit-gps/navit/pull/1027#issuecomment-647081627,"Activate downloaded maps automatically on Android by including the /sdcard/Download directory.
This is done so that maps downloaded in the browser, f.ex. using the Planet Extractor, which go to /sdcard/Download by default, are activated automatically without having to change the map location in de UI. This way, maps can be downloaded in the app using the UI, and maps can also be downloaded through the browser. Both will just work™.","Hello. Thanks for this Pull Request.
Just a thought...
Have you tested what happens if a bin file is downloaded (but is not at all a map)?
I hope navit does ignore the file properly without crashing or ignoring all further maps.
Thanks",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1027,2020-06-20T08:08:12Z,2020-07-02T13:41:40Z,2020-07-02T13:41:40Z,MERGED,True,2,0,1,https://github.com/jfitie,Android: Activate downloaded maps automatically,3,"['enhancement', 'android']",https://github.com/navit-gps/navit/pull/1027,https://github.com/jfitie,3,https://github.com/navit-gps/navit/pull/1027#issuecomment-647085562,"Activate downloaded maps automatically on Android by including the /sdcard/Download directory.
This is done so that maps downloaded in the browser, f.ex. using the Planet Extractor, which go to /sdcard/Download by default, are activated automatically without having to change the map location in de UI. This way, maps can be downloaded in the app using the UI, and maps can also be downloaded through the browser. Both will just work™.","@lains Thanks for your comment. Please see the last commit. I think this should solve that possible issue.
See also https://github.com/navit-gps/navit/blob/trunk/navit/script/map_index.php#L15-L18",True,{'THUMBS_UP': ['https://github.com/lains']}
navit-gps/navit,https://github.com/navit-gps/navit,1028,2020-06-23T17:51:14Z,2020-06-24T13:44:41Z,2020-06-24T13:44:41Z,MERGED,True,619,597,2,https://github.com/jfitie,Improve Car-Dark layout colors,5,[],https://github.com/navit-gps/navit/pull/1028,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/1028,"Improve Car-Dark layout colors auto-generated by the script.
Examples:





Compare to before this PR and see the improvement:","Improve Car-Dark layout colors auto-generated by the script.
Examples:





Compare to before this PR and see the improvement:",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1028,2020-06-23T17:51:14Z,2020-06-24T13:44:41Z,2020-06-24T13:44:41Z,MERGED,True,619,597,2,https://github.com/jfitie,Improve Car-Dark layout colors,5,[],https://github.com/navit-gps/navit/pull/1028,https://github.com/jfitie,2,https://github.com/navit-gps/navit/pull/1028#issuecomment-648319952,"Improve Car-Dark layout colors auto-generated by the script.
Examples:





Compare to before this PR and see the improvement:",@metalstrolch: Welcome to merge if OK.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1029,2020-06-24T07:40:19Z,2020-08-09T15:07:46Z,2020-08-09T15:07:46Z,MERGED,True,4,1,1,https://github.com/jfitie,Android: Remove map download size limit on modern Android versions,26,"['enhancement', 'android']",https://github.com/navit-gps/navit/pull/1029,https://github.com/jfitie,1,https://github.com/navit-gps/navit/pull/1029,Android: Remove map download size limit on modern Android versions,Android: Remove map download size limit on modern Android versions,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1029,2020-06-24T07:40:19Z,2020-08-09T15:07:46Z,2020-08-09T15:07:46Z,MERGED,True,4,1,1,https://github.com/jfitie,Android: Remove map download size limit on modern Android versions,26,"['enhancement', 'android']",https://github.com/navit-gps/navit/pull/1029,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/1029#issuecomment-648675578,Android: Remove map download size limit on modern Android versions,We cant do this as it a limitation of the underlying file system on old android devices. The right solution would be to implement something that splits up a map on the fly into chunks that are smaller than 1 Gig so so to be save on all devices and store them info separate files.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1029,2020-06-24T07:40:19Z,2020-08-09T15:07:46Z,2020-08-09T15:07:46Z,MERGED,True,4,1,1,https://github.com/jfitie,Android: Remove map download size limit on modern Android versions,26,"['enhancement', 'android']",https://github.com/navit-gps/navit/pull/1029,https://github.com/jfitie,3,https://github.com/navit-gps/navit/pull/1029#issuecomment-648713739,Android: Remove map download size limit on modern Android versions,@jkoan Please re-review. What do you think of this solution?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1029,2020-06-24T07:40:19Z,2020-08-09T15:07:46Z,2020-08-09T15:07:46Z,MERGED,True,4,1,1,https://github.com/jfitie,Android: Remove map download size limit on modern Android versions,26,"['enhancement', 'android']",https://github.com/navit-gps/navit/pull/1029,https://github.com/mvglasow,4,https://github.com/navit-gps/navit/pull/1029#issuecomment-649091505,Android: Remove map download size limit on modern Android versions,"On a side note, we used to have a test instance of the map server which could split maps into smaller files. Maybe that would help here.
The server’s been in test mode for a couple years (I think it went live in 2012/13), now it is just telling me Access forbidden. Maps downloaded from that server worked with no issues, though (I have had Europe maps from that server on my phone since it was set up). Maybe we could finally move that feature on the production server, then have Navit specify the size limit of the file system in its request. “Please select a smaller map” isn’t really helpful when I simply need that big one…",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1029,2020-06-24T07:40:19Z,2020-08-09T15:07:46Z,2020-08-09T15:07:46Z,MERGED,True,4,1,1,https://github.com/jfitie,Android: Remove map download size limit on modern Android versions,26,"['enhancement', 'android']",https://github.com/navit-gps/navit/pull/1029,https://github.com/jfitie,5,https://github.com/navit-gps/navit/pull/1029#issuecomment-649199757,Android: Remove map download size limit on modern Android versions,"This PR was meant as a quick fix to allow larger map downloads on modern Android versions supporting files larger than 3.8GiB. This would solve this issue for me personally since I currently cannot download some of the maps I require. If this is an acceptabele (temporary) solution, go ahead and merge this. If instead infrastructural changes are required, please close this PR, as I don't have enough knowledge of Navit to work on that.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1029,2020-06-24T07:40:19Z,2020-08-09T15:07:46Z,2020-08-09T15:07:46Z,MERGED,True,4,1,1,https://github.com/jfitie,Android: Remove map download size limit on modern Android versions,26,"['enhancement', 'android']",https://github.com/navit-gps/navit/pull/1029,https://github.com/jfitie,6,https://github.com/navit-gps/navit/pull/1029#issuecomment-650491793,Android: Remove map download size limit on modern Android versions,"OK, let's make this PR even simpler and just remove the map download size limit on modern Android versions. Even downloading the whole world (at ~36GiB) is not an issue on these devices anymore.
I would like to keep in the improved expression for checking map size (mEstSizeBytes >= Math.pow(2, 32) * 0.95), as the old method (mEstSizeBytes / 1024 / 1024 / 950 >= 4) seems a bit hacky and uses an arbitrary number (950).
So, in short, let's consider doing
if (Build.VERSION.SDK_INT < Build.VERSION_CODES.N
    && NavitMapDownloader.osm_maps[mi].mEstSizeBytes >= Math.pow(2, 32) * 0.95) {
 ...

@jkoan @mvglasow Please advise.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1029,2020-06-24T07:40:19Z,2020-08-09T15:07:46Z,2020-08-09T15:07:46Z,MERGED,True,4,1,1,https://github.com/jfitie,Android: Remove map download size limit on modern Android versions,26,"['enhancement', 'android']",https://github.com/navit-gps/navit/pull/1029,https://github.com/jandegr,7,https://github.com/navit-gps/navit/pull/1029#issuecomment-668078821,Android: Remove map download size limit on modern Android versions,"Hi,
I think you can verify that the map location still corresponds to the default path, it is the only way I can think of to make sure maps will not be stored on a fat32 sd card.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1029,2020-06-24T07:40:19Z,2020-08-09T15:07:46Z,2020-08-09T15:07:46Z,MERGED,True,4,1,1,https://github.com/jfitie,Android: Remove map download size limit on modern Android versions,26,"['enhancement', 'android']",https://github.com/navit-gps/navit/pull/1029,https://github.com/jkoan,8,https://github.com/navit-gps/navit/pull/1029#issuecomment-671063217,Android: Remove map download size limit on modern Android versions,"Mergein now, as the solution seems good enough with what we have so far. But we should look into solutions where we can store one map into chunks smaller than 2GB on the fly.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1031,2020-08-03T20:18:44Z,2020-08-08T07:25:57Z,2020-08-08T07:25:57Z,MERGED,True,1,1,1,https://github.com/Benjamin-Davies,Fix:readme:Fixed broken link #914,1,[],https://github.com/navit-gps/navit/pull/1031,https://github.com/Benjamin-Davies,1,https://github.com/navit-gps/navit/pull/1031,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1037,2020-08-08T20:15:09Z,2020-08-08T20:44:38Z,2020-08-08T20:44:38Z,MERGED,True,1,41,2,https://github.com/jkoan,Fix android update for issue #1035,2,[],https://github.com/navit-gps/navit/pull/1037,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/1037,This PR is aimed to fix #1035,This PR is aimed to fix #1035,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1037,2020-08-08T20:15:09Z,2020-08-08T20:44:38Z,2020-08-08T20:44:38Z,MERGED,True,1,41,2,https://github.com/jkoan,Fix android update for issue #1035,2,[],https://github.com/navit-gps/navit/pull/1037,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/1037#issuecomment-670970726,This PR is aimed to fix #1035,"@jandegr apk is ready: https://21653-30791823-gh.circle-artifacts.com/0/apk/release/android-release.apk
For me it actually works without problems not (updateing from 1804161521):
jan@jan-pc:~$ adb shell pm uninstall org.navitproject.navit
Success
jan@jan-pc:~$ cd Downloads/
jan@jan-pc:~/Downloads$ adb install 1804161521.apk
Performing Streamed Install
Success
jan@jan-pc:~/Downloads$ adb install pr_1037.apk
Performing Streamed Install
Success
jan@jan-pc:~/Downloads$",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1037,2020-08-08T20:15:09Z,2020-08-08T20:44:38Z,2020-08-08T20:44:38Z,MERGED,True,1,41,2,https://github.com/jkoan,Fix android update for issue #1035,2,[],https://github.com/navit-gps/navit/pull/1037,https://github.com/jkoan,3,https://github.com/navit-gps/navit/pull/1037#issuecomment-670972025,This PR is aimed to fix #1035,"Merging this as its the only way to let users update again, see #1035 (comment)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1039,2020-08-10T08:01:15Z,2020-08-17T13:29:56Z,2020-08-17T13:29:56Z,MERGED,True,5,1,1,https://github.com/jkoan,fix:vehicle:gpsd:Add Support for Gpsd 3.21,2,[],https://github.com/navit-gps/navit/pull/1039,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/1039,"This PR fixes the Build against Gpsd 3.21 which had introduced another api change.
Today its the status which went from gps_data_t->status to gps_data_t->fix.status
Changelog for this is here: https://gitlab.com/gpsd/gpsd/-/blob/00c66ad6f44f6283cdddc5f48f334216daf78f12/gps.h#L82","This PR fixes the Build against Gpsd 3.21 which had introduced another api change.
Today its the status which went from gps_data_t->status to gps_data_t->fix.status
Changelog for this is here: https://gitlab.com/gpsd/gpsd/-/blob/00c66ad6f44f6283cdddc5f48f334216daf78f12/gps.h#L82",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1040,2020-08-10T08:26:35Z,2020-08-12T13:39:30Z,2020-08-12T13:39:30Z,MERGED,True,3,2,1,https://github.com/jkoan,fix:core:Optimize log message for required vehicle attributes,1,[],https://github.com/navit-gps/navit/pull/1040,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/1040,"This PR fixes a little log message which hopefully a normal user should never see, and is Probably only relevant for Developers which develop a vehicle Plugin. It just tells which attribute-date is missing.","This PR fixes a little log message which hopefully a normal user should never see, and is Probably only relevant for Developers which develop a vehicle Plugin. It just tells which attribute-date is missing.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1046,2020-08-20T13:20:20Z,2020-09-07T09:05:22Z,2020-09-07T09:05:22Z,MERGED,True,1,1,1,https://github.com/jkoan,fix:graphics:win32:Fix build with newer libpng versions.,4,[],https://github.com/navit-gps/navit/pull/1046,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/1046,This fixes the issue with newer libpng versions. As mentioned at #984,This fixes the issue with newer libpng versions. As mentioned at #984,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1049,2020-08-21T14:35:47Z,2020-08-21T15:00:19Z,2020-08-21T15:04:20Z,MERGED,True,1,0,1,https://github.com/barbeque-squared,fix:graphics/qt5:Add missing include,1,[],https://github.com/navit-gps/navit/pull/1049,https://github.com/barbeque-squared,1,https://github.com/navit-gps/navit/pull/1049,"When running make or more specifically make graphics_qt5, compilation fails with this error:
/home/bbq/gits/navit-gps/navit/navit/graphics/qt5/graphics_qt5.cpp: In function ‘void draw_polygon_with_holes(graphics_priv*, graphics_gc_priv*, point*, int, int, int*, point**)’:
/home/bbq/gits/navit-gps/navit/navit/graphics/qt5/graphics_qt5.cpp:439:18: error: aggregate ‘QPainterPath path’ has incomplete type and cannot be defined
  439 |     QPainterPath path;
      |                  ^~~~
/home/bbq/gits/navit-gps/navit/navit/graphics/qt5/graphics_qt5.cpp:440:18: error: aggregate ‘QPainterPath inner’ has incomplete type and cannot be defined
  440 |     QPainterPath inner;
      |                  ^~~~~

Adding the #include fixes that error.
(I don't actually run the qt5 GUI; on my distro's package qt5 is also explicitly disabled. But the documentation has cmake ... ; make as the development workflow)","When running make or more specifically make graphics_qt5, compilation fails with this error:
/home/bbq/gits/navit-gps/navit/navit/graphics/qt5/graphics_qt5.cpp: In function ‘void draw_polygon_with_holes(graphics_priv*, graphics_gc_priv*, point*, int, int, int*, point**)’:
/home/bbq/gits/navit-gps/navit/navit/graphics/qt5/graphics_qt5.cpp:439:18: error: aggregate ‘QPainterPath path’ has incomplete type and cannot be defined
  439 |     QPainterPath path;
      |                  ^~~~
/home/bbq/gits/navit-gps/navit/navit/graphics/qt5/graphics_qt5.cpp:440:18: error: aggregate ‘QPainterPath inner’ has incomplete type and cannot be defined
  440 |     QPainterPath inner;
      |                  ^~~~~

Adding the #include fixes that error.
(I don't actually run the qt5 GUI; on my distro's package qt5 is also explicitly disabled. But the documentation has cmake ... ; make as the development workflow)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1050,2020-08-21T14:46:04Z,2020-08-21T16:02:21Z,2020-08-21T16:57:29Z,MERGED,True,1,1,1,https://github.com/barbeque-squared,"fix:maptool:Add missing external, fixes #1045",2,[],https://github.com/navit-gps/navit/pull/1050,https://github.com/barbeque-squared,1,https://github.com/navit-gps/navit/pull/1050,"Fixes #1045
Thanks pini-gh for the hint!","Fixes #1045
Thanks pini-gh for the hint!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1051,2020-08-22T01:43:30Z,2020-09-06T16:55:18Z,2020-09-06T16:55:18Z,CLOSED,False,1,1,1,https://github.com/lufv,Inkscape svg2png,1,[],https://github.com/navit-gps/navit/pull/1051,https://github.com/lufv,1,https://github.com/navit-gps/navit/pull/1051,"Inkscape doesn't use --without-gui argument anymore
Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://navit.readthedocs.io/en/trunk/development/commit_guidelines.html
and that your code is compliant with out coding style guidelines:
https://navit.readthedocs.io/en/trunk/development/programming_guidelines.html","Inkscape doesn't use --without-gui argument anymore
Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://navit.readthedocs.io/en/trunk/development/commit_guidelines.html
and that your code is compliant with out coding style guidelines:
https://navit.readthedocs.io/en/trunk/development/programming_guidelines.html",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1051,2020-08-22T01:43:30Z,2020-09-06T16:55:18Z,2020-09-06T16:55:18Z,CLOSED,False,1,1,1,https://github.com/lufv,Inkscape svg2png,1,[],https://github.com/navit-gps/navit/pull/1051,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/1051#issuecomment-679060536,"Inkscape doesn't use --without-gui argument anymore
Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://navit.readthedocs.io/en/trunk/development/commit_guidelines.html
and that your code is compliant with out coding style guidelines:
https://navit.readthedocs.io/en/trunk/development/programming_guidelines.html","Hi @lufv
Thank you for your work.
I saw the patch of Debian here: https://salsa.debian.org/debian/navit/-/blob/master/debian/patches/inkscape-1.0.patch
I think the Debian one would be more compleat, right?
Also, for me its more readable then your Solution.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1051,2020-08-22T01:43:30Z,2020-09-06T16:55:18Z,2020-09-06T16:55:18Z,CLOSED,False,1,1,1,https://github.com/lufv,Inkscape svg2png,1,[],https://github.com/navit-gps/navit/pull/1051,https://github.com/lufv,3,https://github.com/navit-gps/navit/pull/1051#issuecomment-683062303,"Inkscape doesn't use --without-gui argument anymore
Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://navit.readthedocs.io/en/trunk/development/commit_guidelines.html
and that your code is compliant with out coding style guidelines:
https://navit.readthedocs.io/en/trunk/development/programming_guidelines.html","Hi @lufv
Thank you for your work.
I saw the patch of Debian here: https://salsa.debian.org/debian/navit/-/blob/master/debian/patches/inkscape-1.0.patch
I think the Debian one would be more compleat, right?
Also, for me its more readable then your Solution.

Yes, I think it looks okay!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1051,2020-08-22T01:43:30Z,2020-09-06T16:55:18Z,2020-09-06T16:55:18Z,CLOSED,False,1,1,1,https://github.com/lufv,Inkscape svg2png,1,[],https://github.com/navit-gps/navit/pull/1051,https://github.com/lufv,4,https://github.com/navit-gps/navit/pull/1051#issuecomment-683065447,"Inkscape doesn't use --without-gui argument anymore
Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://navit.readthedocs.io/en/trunk/development/commit_guidelines.html
and that your code is compliant with out coding style guidelines:
https://navit.readthedocs.io/en/trunk/development/programming_guidelines.html",I guess it also explains why I didn't get any PNG files after my patch. Will check if after this one it'll work,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1051,2020-08-22T01:43:30Z,2020-09-06T16:55:18Z,2020-09-06T16:55:18Z,CLOSED,False,1,1,1,https://github.com/lufv,Inkscape svg2png,1,[],https://github.com/navit-gps/navit/pull/1051,https://github.com/jkoan,5,https://github.com/navit-gps/navit/pull/1051#issuecomment-687840703,"Inkscape doesn't use --without-gui argument anymore
Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://navit.readthedocs.io/en/trunk/development/commit_guidelines.html
and that your code is compliant with out coding style guidelines:
https://navit.readthedocs.io/en/trunk/development/programming_guidelines.html",Obsolete as of #1056,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1052,2020-08-22T01:44:35Z,2020-08-22T07:31:30Z,2020-08-22T07:31:39Z,CLOSED,False,1,1,1,https://github.com/lufv,Inkscape svg2png,1,[],https://github.com/navit-gps/navit/pull/1052,https://github.com/lufv,1,https://github.com/navit-gps/navit/pull/1052,"Inkscape doesn't use --without-gui argument anymore
Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://navit.readthedocs.io/en/trunk/development/commit_guidelines.html
and that your code is compliant with out coding style guidelines:
https://navit.readthedocs.io/en/trunk/development/programming_guidelines.html","Inkscape doesn't use --without-gui argument anymore
Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://navit.readthedocs.io/en/trunk/development/commit_guidelines.html
and that your code is compliant with out coding style guidelines:
https://navit.readthedocs.io/en/trunk/development/programming_guidelines.html",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1052,2020-08-22T01:44:35Z,2020-08-22T07:31:30Z,2020-08-22T07:31:39Z,CLOSED,False,1,1,1,https://github.com/lufv,Inkscape svg2png,1,[],https://github.com/navit-gps/navit/pull/1052,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/1052#issuecomment-678608431,"Inkscape doesn't use --without-gui argument anymore
Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://navit.readthedocs.io/en/trunk/development/commit_guidelines.html
and that your code is compliant with out coding style guidelines:
https://navit.readthedocs.io/en/trunk/development/programming_guidelines.html","You opened two RPs, #1051 is still open",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1056,2020-09-06T16:53:40Z,2020-09-06T17:48:14Z,2020-09-06T17:48:15Z,MERGED,True,3,3,3,https://github.com/jkoan,fix:build:Fix usage of inkscape 1.0 commandline usage,1,[],https://github.com/navit-gps/navit/pull/1056,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/1056,This is the new Version of #1051 with the patch from @pini-gh (Debian),This is the new Version of #1051 with the patch from @pini-gh (Debian),True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1060,2020-10-12T21:28:52Z,2020-10-13T19:55:59Z,2020-10-13T19:56:12Z,MERGED,True,99,0,9,https://github.com/hoehnp,added license information to fix #1048,2,['hacktoberfest-accepted'],https://github.com/navit-gps/navit/pull/1060,https://github.com/hoehnp,1,https://github.com/navit-gps/navit/pull/1060,"ändrad:        navit/icons/archaeological_site.svg
ändrad:        navit/icons/cave.svg
ändrad:        navit/textures/cemetery.svg
ändrad:        navit/textures/diagonal-stripes-gray.svg
ändrad:        navit/textures/diagonal-stripes.svg
ändrad:        navit/textures/quarry.svg
ändrad:        navit/textures/scrub.svg
ändrad:        navit/textures/wetland.svg
ändrad:        navit/textures/wood.svg

Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://navit.readthedocs.io/en/trunk/development/commit_guidelines.html
and that your code is compliant with out coding style guidelines:
https://navit.readthedocs.io/en/trunk/development/programming_guidelines.html","ändrad:        navit/icons/archaeological_site.svg
ändrad:        navit/icons/cave.svg
ändrad:        navit/textures/cemetery.svg
ändrad:        navit/textures/diagonal-stripes-gray.svg
ändrad:        navit/textures/diagonal-stripes.svg
ändrad:        navit/textures/quarry.svg
ändrad:        navit/textures/scrub.svg
ändrad:        navit/textures/wetland.svg
ändrad:        navit/textures/wood.svg

Thanks for contributing to Navit!
Before opening a pull request on navit, make sure your commit message follows our guidelines:
https://navit.readthedocs.io/en/trunk/development/commit_guidelines.html
and that your code is compliant with out coding style guidelines:
https://navit.readthedocs.io/en/trunk/development/programming_guidelines.html",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1061,2020-10-14T12:08:01Z,2020-12-19T19:28:09Z,2020-12-19T19:28:09Z,MERGED,True,805,1,5,https://github.com/jkoan,add:graphics:svg_debug:Add svg_debugging plugin,8,['hacktoberfest-accepted'],https://github.com/navit-gps/navit/pull/1061,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/1061,"This Pull request adds a graphic plugin to debug other graphics plugins. It acts as a proxy between the graphic plugin under test and the navit core.
It can be configured via the attibutes name and outputdir. The name is the name of the Plugin which should be proxied, and outputdir is the part where the svg images should be saved to.
TODOs for later are mainly:

overlay support
improved font support (currently only none rotated text is supported)

here's a svg from the Plugin (Github don't like raw svg...):
svg_debug_frame_5.zip","This Pull request adds a graphic plugin to debug other graphics plugins. It acts as a proxy between the graphic plugin under test and the navit core.
It can be configured via the attibutes name and outputdir. The name is the name of the Plugin which should be proxied, and outputdir is the part where the svg images should be saved to.
TODOs for later are mainly:

overlay support
improved font support (currently only none rotated text is supported)

here's a svg from the Plugin (Github don't like raw svg...):
svg_debug_frame_5.zip",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1063,2020-10-24T07:24:06Z,2020-11-18T14:57:10Z,2020-11-18T14:57:10Z,MERGED,True,246,0,3,https://github.com/jkoan,add:vehicle:vehicle_geoclue:Add Vehicle geoclue,4,['hacktoberfest-accepted'],https://github.com/navit-gps/navit/pull/1063,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/1063,"This PR adds the new Geoclue vehicle.
Geoclue is a Position Libary which is available for at least Gnome based Desktops and also more importantly upcoming Linux Phones like the PinePhone or Librem 5 include it as well (with phosh distro).
Geoclue also has an fallback to GeoIP or CellID (when supported) so the user should be presented with a location roughly in the neighborhood any time, even on PCs.
This is also important since i don't happen to have such a device around to test, but i have a PineTab which can be used for WiFi based location. In my around area we dont have much geotaged WiFis, but some, so i was able to see Navit jumping around. When the coverage would be better i really think this vehicle can be fluid.
Some things are not perfect however:

geoclue needs an Internet connection for WiFi based location
geoclue falls back to GeoIP when no WiFi based location could be found. In my case (because of my mobilephone hotspot) this was about 150km off. But with DSL (House internet) the GeoIP is much more accurate.
In #1032 @Baggypants reported a crash, but i wasn't able to reproduce it at all

Tested:

on x86 PC (AMD Ryzen with Manjaro Linux Gnome, Linux 5.8.16, geoclue 2.5.6 )
PineTab","This PR adds the new Geoclue vehicle.
Geoclue is a Position Libary which is available for at least Gnome based Desktops and also more importantly upcoming Linux Phones like the PinePhone or Librem 5 include it as well (with phosh distro).
Geoclue also has an fallback to GeoIP or CellID (when supported) so the user should be presented with a location roughly in the neighborhood any time, even on PCs.
This is also important since i don't happen to have such a device around to test, but i have a PineTab which can be used for WiFi based location. In my around area we dont have much geotaged WiFis, but some, so i was able to see Navit jumping around. When the coverage would be better i really think this vehicle can be fluid.
Some things are not perfect however:

geoclue needs an Internet connection for WiFi based location
geoclue falls back to GeoIP when no WiFi based location could be found. In my case (because of my mobilephone hotspot) this was about 150km off. But with DSL (House internet) the GeoIP is much more accurate.
In #1032 @Baggypants reported a crash, but i wasn't able to reproduce it at all

Tested:

on x86 PC (AMD Ryzen with Manjaro Linux Gnome, Linux 5.8.16, geoclue 2.5.6 )
PineTab",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1063,2020-10-24T07:24:06Z,2020-11-18T14:57:10Z,2020-11-18T14:57:10Z,MERGED,True,246,0,3,https://github.com/jkoan,add:vehicle:vehicle_geoclue:Add Vehicle geoclue,4,['hacktoberfest-accepted'],https://github.com/navit-gps/navit/pull/1063,https://github.com/fortysixandtwo,2,https://github.com/navit-gps/navit/pull/1063#issuecomment-716137542,"This PR adds the new Geoclue vehicle.
Geoclue is a Position Libary which is available for at least Gnome based Desktops and also more importantly upcoming Linux Phones like the PinePhone or Librem 5 include it as well (with phosh distro).
Geoclue also has an fallback to GeoIP or CellID (when supported) so the user should be presented with a location roughly in the neighborhood any time, even on PCs.
This is also important since i don't happen to have such a device around to test, but i have a PineTab which can be used for WiFi based location. In my around area we dont have much geotaged WiFis, but some, so i was able to see Navit jumping around. When the coverage would be better i really think this vehicle can be fluid.
Some things are not perfect however:

geoclue needs an Internet connection for WiFi based location
geoclue falls back to GeoIP when no WiFi based location could be found. In my case (because of my mobilephone hotspot) this was about 150km off. But with DSL (House internet) the GeoIP is much more accurate.
In #1032 @Baggypants reported a crash, but i wasn't able to reproduce it at all

Tested:

on x86 PC (AMD Ryzen with Manjaro Linux Gnome, Linux 5.8.16, geoclue 2.5.6 )
PineTab","Hey, I'm currently trying to build this on my pinephone (running mobian/debian).
And I'm having trouble generating the pngs with the convert provided by imagemagick-6q.16.
Since you tested this on the PineTab (which essentially runs the same software)
I was wondering which imagemagick you are using/how you got it to build on debian (see #1065)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1063,2020-10-24T07:24:06Z,2020-11-18T14:57:10Z,2020-11-18T14:57:10Z,MERGED,True,246,0,3,https://github.com/jkoan,add:vehicle:vehicle_geoclue:Add Vehicle geoclue,4,['hacktoberfest-accepted'],https://github.com/navit-gps/navit/pull/1063,https://github.com/fortysixandtwo,3,https://github.com/navit-gps/navit/pull/1063#issuecomment-716595577,"This PR adds the new Geoclue vehicle.
Geoclue is a Position Libary which is available for at least Gnome based Desktops and also more importantly upcoming Linux Phones like the PinePhone or Librem 5 include it as well (with phosh distro).
Geoclue also has an fallback to GeoIP or CellID (when supported) so the user should be presented with a location roughly in the neighborhood any time, even on PCs.
This is also important since i don't happen to have such a device around to test, but i have a PineTab which can be used for WiFi based location. In my around area we dont have much geotaged WiFis, but some, so i was able to see Navit jumping around. When the coverage would be better i really think this vehicle can be fluid.
Some things are not perfect however:

geoclue needs an Internet connection for WiFi based location
geoclue falls back to GeoIP when no WiFi based location could be found. In my case (because of my mobilephone hotspot) this was about 150km off. But with DSL (House internet) the GeoIP is much more accurate.
In #1032 @Baggypants reported a crash, but i wasn't able to reproduce it at all

Tested:

on x86 PC (AMD Ryzen with Manjaro Linux Gnome, Linux 5.8.16, geoclue 2.5.6 )
PineTab","For the people who want to build this:
I had to rebase on the trunk in order to get the fixes for inkscape 1.0 usage (otherwise I would be calling inkscape with --export-png).
I guess I need to somehow configure the geoclue vehicle?
Because currently I'm getting no indication that navit has any location information.
Running DISPLAY=:0 G_MESSAGES_DEBUG=all ~/install/bin/navit -d 3 2>&1 | tee navit.log and then grepping for geoclue
I only get a single line:
50:info:navit:plugin_new:found plugin module file [19]: '/home/mobian/install/lib64/navit/vehicle/libvehicle_geoclue.so'",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1063,2020-10-24T07:24:06Z,2020-11-18T14:57:10Z,2020-11-18T14:57:10Z,MERGED,True,246,0,3,https://github.com/jkoan,add:vehicle:vehicle_geoclue:Add Vehicle geoclue,4,['hacktoberfest-accepted'],https://github.com/navit-gps/navit/pull/1063,https://github.com/fortysixandtwo,4,https://github.com/navit-gps/navit/pull/1063#issuecomment-716639779,"This PR adds the new Geoclue vehicle.
Geoclue is a Position Libary which is available for at least Gnome based Desktops and also more importantly upcoming Linux Phones like the PinePhone or Librem 5 include it as well (with phosh distro).
Geoclue also has an fallback to GeoIP or CellID (when supported) so the user should be presented with a location roughly in the neighborhood any time, even on PCs.
This is also important since i don't happen to have such a device around to test, but i have a PineTab which can be used for WiFi based location. In my around area we dont have much geotaged WiFis, but some, so i was able to see Navit jumping around. When the coverage would be better i really think this vehicle can be fluid.
Some things are not perfect however:

geoclue needs an Internet connection for WiFi based location
geoclue falls back to GeoIP when no WiFi based location could be found. In my case (because of my mobilephone hotspot) this was about 150km off. But with DSL (House internet) the GeoIP is much more accurate.
In #1032 @Baggypants reported a crash, but i wasn't able to reproduce it at all

Tested:

on x86 PC (AMD Ryzen with Manjaro Linux Gnome, Linux 5.8.16, geoclue 2.5.6 )
PineTab","Ok, I'm very happy to report that it actually works after adding
<vehicle name=""Geoclue"" profilename=""car"" enabled=""yes"" source=""geoclue://"" active=""1""/>
to my configuration!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1063,2020-10-24T07:24:06Z,2020-11-18T14:57:10Z,2020-11-18T14:57:10Z,MERGED,True,246,0,3,https://github.com/jkoan,add:vehicle:vehicle_geoclue:Add Vehicle geoclue,4,['hacktoberfest-accepted'],https://github.com/navit-gps/navit/pull/1063,https://github.com/jkoan,5,https://github.com/navit-gps/navit/pull/1063#issuecomment-716640427,"This PR adds the new Geoclue vehicle.
Geoclue is a Position Libary which is available for at least Gnome based Desktops and also more importantly upcoming Linux Phones like the PinePhone or Librem 5 include it as well (with phosh distro).
Geoclue also has an fallback to GeoIP or CellID (when supported) so the user should be presented with a location roughly in the neighborhood any time, even on PCs.
This is also important since i don't happen to have such a device around to test, but i have a PineTab which can be used for WiFi based location. In my around area we dont have much geotaged WiFis, but some, so i was able to see Navit jumping around. When the coverage would be better i really think this vehicle can be fluid.
Some things are not perfect however:

geoclue needs an Internet connection for WiFi based location
geoclue falls back to GeoIP when no WiFi based location could be found. In my case (because of my mobilephone hotspot) this was about 150km off. But with DSL (House internet) the GeoIP is much more accurate.
In #1032 @Baggypants reported a crash, but i wasn't able to reproduce it at all

Tested:

on x86 PC (AMD Ryzen with Manjaro Linux Gnome, Linux 5.8.16, geoclue 2.5.6 )
PineTab","For the people who want to build this:
I had to rebase on the trunk in order to get the fixes for inkscape 1.0 usage (otherwise I would be calling inkscape with --export-png).
I guess I need to somehow configure the geoclue vehicle?
Because currently I'm getting no indication that navit has any location information.
Running DISPLAY=:0 G_MESSAGES_DEBUG=all ~/install/bin/navit -d 3 2>&1 | tee navit.log and then grepping for geoclue
I only get a single line:
50:info:navit:plugin_new:found plugin module file [19]: '/home/mobian/install/lib64/navit/vehicle/libvehicle_geoclue.so'


yes, sorry, i forgot to rebase before uploading. For a full config look into the issue #1032, i uploaded my config there",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1063,2020-10-24T07:24:06Z,2020-11-18T14:57:10Z,2020-11-18T14:57:10Z,MERGED,True,246,0,3,https://github.com/jkoan,add:vehicle:vehicle_geoclue:Add Vehicle geoclue,4,['hacktoberfest-accepted'],https://github.com/navit-gps/navit/pull/1063,https://github.com/fortysixandtwo,6,https://github.com/navit-gps/navit/pull/1063#issuecomment-719987671,"This PR adds the new Geoclue vehicle.
Geoclue is a Position Libary which is available for at least Gnome based Desktops and also more importantly upcoming Linux Phones like the PinePhone or Librem 5 include it as well (with phosh distro).
Geoclue also has an fallback to GeoIP or CellID (when supported) so the user should be presented with a location roughly in the neighborhood any time, even on PCs.
This is also important since i don't happen to have such a device around to test, but i have a PineTab which can be used for WiFi based location. In my around area we dont have much geotaged WiFis, but some, so i was able to see Navit jumping around. When the coverage would be better i really think this vehicle can be fluid.
Some things are not perfect however:

geoclue needs an Internet connection for WiFi based location
geoclue falls back to GeoIP when no WiFi based location could be found. In my case (because of my mobilephone hotspot) this was about 150km off. But with DSL (House internet) the GeoIP is much more accurate.
In #1032 @Baggypants reported a crash, but i wasn't able to reproduce it at all

Tested:

on x86 PC (AMD Ryzen with Manjaro Linux Gnome, Linux 5.8.16, geoclue 2.5.6 )
PineTab","Last time I tried, my position was not actually updating (and the first time I was stationary).
Will test again soon and report my findings.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1064,2020-10-25T11:41:45Z,2020-11-17T13:43:02Z,2020-11-17T13:43:02Z,MERGED,True,7,2,1,https://github.com/jkoan,fix:android:Add possibility to use background position usage,2,"['android', 'hacktoberfest-accepted']",https://github.com/navit-gps/navit/pull/1064,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/1064,This PR should fix the issue that android won't ask for Background GPS usage and ask again when restarting navit because ACCESS_BACKGROUND_LOCATION is not checked in verifyPermissions.,This PR should fix the issue that android won't ask for Background GPS usage and ask again when restarting navit because ACCESS_BACKGROUND_LOCATION is not checked in verifyPermissions.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1064,2020-10-25T11:41:45Z,2020-11-17T13:43:02Z,2020-11-17T13:43:02Z,MERGED,True,7,2,1,https://github.com/jkoan,fix:android:Add possibility to use background position usage,2,"['android', 'hacktoberfest-accepted']",https://github.com/navit-gps/navit/pull/1064,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/1064#issuecomment-719934258,This PR should fix the issue that android won't ask for Background GPS usage and ask again when restarting navit because ACCESS_BACKGROUND_LOCATION is not checked in verifyPermissions.,@jandegr could you take a look?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1066,2020-10-25T16:14:18Z,2020-10-31T13:26:46Z,2020-10-31T13:26:46Z,MERGED,True,2,2,2,https://github.com/jkoan,fix:build:core:Fix two issues where the wrong enum type is used,1,['hacktoberfest-accepted'],https://github.com/navit-gps/navit/pull/1066,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/1066,"Fix two issues where the wrong enum type is used, but both have the same value of 0","Fix two issues where the wrong enum type is used, but both have the same value of 0",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1066,2020-10-25T16:14:18Z,2020-10-31T13:26:46Z,2020-10-31T13:26:46Z,MERGED,True,2,2,2,https://github.com/jkoan,fix:build:core:Fix two issues where the wrong enum type is used,1,['hacktoberfest-accepted'],https://github.com/navit-gps/navit/pull/1066,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/1066#issuecomment-719933770,"Fix two issues where the wrong enum type is used, but both have the same value of 0",as its a nobrainer in my eyes i merge it now,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1067,2020-10-30T07:16:30Z,2020-10-30T07:40:14Z,2020-10-30T07:43:01Z,MERGED,True,1,0,1,https://github.com/jkoan,fix:build:android:Add extra security check for gradle.,1,[],https://github.com/navit-gps/navit/pull/1067,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/1067,"Just add the security check as mentioned in https://gitlab.com/fdroid/fdroiddata/-/issues/1843
see also #792","Just add the security check as mentioned in https://gitlab.com/fdroid/fdroiddata/-/issues/1843
see also #792",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1068,2020-10-31T00:39:37Z,2020-10-31T12:41:52Z,2020-11-01T09:47:20Z,MERGED,True,35,22,1,https://github.com/hoehnp,cleaned version of the patch by 1036,2,['hacktoberfest-accepted'],https://github.com/navit-gps/navit/pull/1068,https://github.com/hoehnp,1,https://github.com/navit-gps/navit/pull/1068,Thank you @JohnK-sljkrr  for providing this patch in #1036.  I cleaned up the patch. For some whitespaces I was not completely sure.,Thank you @JohnK-sljkrr  for providing this patch in #1036.  I cleaned up the patch. For some whitespaces I was not completely sure.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1069,2020-11-03T21:11:02Z,2020-11-04T04:53:35Z,2020-11-04T04:53:35Z,MERGED,True,1,1,1,https://github.com/jameshilliard,Fix:plugin/j1850: Replace graphic_fg_white with graphic_fg.,1,[],https://github.com/navit-gps/navit/pull/1069,https://github.com/jameshilliard,1,https://github.com/navit-gps/navit/pull/1069,"Looks like this was missed in:
46f67d8
Fixes:
j1850.c:319:46: error: ‘struct osd_item’ has no member named ‘graphic_fg_white’","Looks like this was missed in:
46f67d8
Fixes:
j1850.c:319:46: error: ‘struct osd_item’ has no member named ‘graphic_fg_white’",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1070,2020-11-08T17:02:57Z,2020-11-08T17:40:35Z,2020-11-08T18:48:39Z,MERGED,True,1,1,1,https://github.com/mvglasow,Fix:build:Prevent try_compile() from choking on CXX,1,[],https://github.com/navit-gps/navit/pull/1070,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/1070,Necessary for build to succeed on Ubuntu 18.04 (possibly others).,Necessary for build to succeed on Ubuntu 18.04 (possibly others).,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1070,2020-11-08T17:02:57Z,2020-11-08T17:40:35Z,2020-11-08T18:48:39Z,MERGED,True,1,1,1,https://github.com/mvglasow,Fix:build:Prevent try_compile() from choking on CXX,1,[],https://github.com/navit-gps/navit/pull/1070,https://github.com/mvglasow,2,https://github.com/navit-gps/navit/pull/1070#issuecomment-723639721,Necessary for build to succeed on Ubuntu 18.04 (possibly others).,"CircleCI finished successfully, but somehow Github isn’t picking it up, preventing me from merging this… any clues?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1070,2020-11-08T17:02:57Z,2020-11-08T17:40:35Z,2020-11-08T18:48:39Z,MERGED,True,1,1,1,https://github.com/mvglasow,Fix:build:Prevent try_compile() from choking on CXX,1,[],https://github.com/navit-gps/navit/pull/1070,https://github.com/jkoan,3,https://github.com/navit-gps/navit/pull/1070#issuecomment-723650115,Necessary for build to succeed on Ubuntu 18.04 (possibly others).,"CircleCI finished successfully, but somehow Github isn’t picking it up, preventing me from merging this… any clues?

Yes, this is known and has the open issue #1010",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1071,2020-11-08T18:49:14Z,2020-11-08T18:53:43Z,2020-11-08T18:53:50Z,MERGED,True,286,1,19,https://github.com/mvglasow,Add:port/android:Adaptive app icon,1,[],https://github.com/navit-gps/navit/pull/1071,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/1071,"Starting with Android 10 (or 9, which I skipped), Android requires that each app supply an adaptive icon.
An adaptive icon consists of a background and a foreground. The background can be a single color or an image and is clipped to the user-selected icon shape. The foreground is an image (usually transparent) which is displayed on top of the background. Assembly is done by the OS, which may include visual effects such as a parallax effect (foreground and background moving against each other as the device is moved).
Non-adaptive icons are scaled down to fit inside the clip area and placed on top of a white background, which looks bad for our icon.
The design size for an adaptive icon is 108×108 px; the foreground may be clipped to a radius of 33 px around the center (how much exactly is shown depends on the selected icon shape).
I have used the orange gradient from the familiar Navit logo as the background and the Navit compass logo as the foreground. When resizing the chiclet icon to 66×66, the logo itself is about 62×62 in size, so I used that for the logo, leaving the familiar margin around the logo also for adaptive icons.
Here is how it looks when selecting round icons:

The non-adaptive version of the icon still needs to be provided for Android versions prior to 8; I have left it unchanged.","Starting with Android 10 (or 9, which I skipped), Android requires that each app supply an adaptive icon.
An adaptive icon consists of a background and a foreground. The background can be a single color or an image and is clipped to the user-selected icon shape. The foreground is an image (usually transparent) which is displayed on top of the background. Assembly is done by the OS, which may include visual effects such as a parallax effect (foreground and background moving against each other as the device is moved).
Non-adaptive icons are scaled down to fit inside the clip area and placed on top of a white background, which looks bad for our icon.
The design size for an adaptive icon is 108×108 px; the foreground may be clipped to a radius of 33 px around the center (how much exactly is shown depends on the selected icon shape).
I have used the orange gradient from the familiar Navit logo as the background and the Navit compass logo as the foreground. When resizing the chiclet icon to 66×66, the logo itself is about 62×62 in size, so I used that for the logo, leaving the familiar margin around the logo also for adaptive icons.
Here is how it looks when selecting round icons:

The non-adaptive version of the icon still needs to be provided for Android versions prior to 8; I have left it unchanged.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1077,2020-12-19T12:58:31Z,2020-12-19T13:08:59Z,2020-12-19T13:09:04Z,MERGED,True,4,8,1,https://github.com/mvglasow,Minor TraFF-related fixes,2,[],https://github.com/navit-gps/navit/pull/1077,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/1077,"Fixes a potential crash when route_get_selection() is called before acquiring the first position
Correct documentation for route_graph_build()","Fixes a potential crash when route_get_selection() is called before acquiring the first position
Correct documentation for route_graph_build()",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1078,2020-12-19T22:05:42Z,2020-12-20T14:04:57Z,2020-12-20T14:05:15Z,MERGED,True,1,1,1,https://github.com/timgates42,"docs: fix simple typo, useage -> usage",1,[],https://github.com/navit-gps/navit/pull/1078,https://github.com/timgates42,1,https://github.com/navit-gps/navit/pull/1078,"There is a small typo in navit/support/espeak/readclause.c.
Should read usage rather than useage.
Semi-automated pull request generated by
https://github.com/timgates42/meticulous/blob/master/docs/NOTE.md","There is a small typo in navit/support/espeak/readclause.c.
Should read usage rather than useage.
Semi-automated pull request generated by
https://github.com/timgates42/meticulous/blob/master/docs/NOTE.md",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1078,2020-12-19T22:05:42Z,2020-12-20T14:04:57Z,2020-12-20T14:05:15Z,MERGED,True,1,1,1,https://github.com/timgates42,"docs: fix simple typo, useage -> usage",1,[],https://github.com/navit-gps/navit/pull/1078,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/1078#issuecomment-748612182,"There is a small typo in navit/support/espeak/readclause.c.
Should read usage rather than useage.
Semi-automated pull request generated by
https://github.com/timgates42/meticulous/blob/master/docs/NOTE.md",Thx,True,{'THUMBS_UP': ['https://github.com/timgates42']}
navit-gps/navit,https://github.com/navit-gps/navit,1079,2020-12-20T21:02:49Z,2021-01-06T17:34:58Z,2021-01-06T17:34:58Z,MERGED,True,1,5,1,https://github.com/mvglasow,"Fix:ci:Relax checkstyle rules for Java code, see #1041",1,[],https://github.com/navit-gps/navit/pull/1079,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/1079,"This relaxes some checkstyle rules to be in line with what we require for C code (see #1041):

MemberName: No longer enforce member names à la mFoobar (which is reminiscent of a now-discouraged practice in C and which we don’t enforce or even use there); now the only requirement is that member names must start with a lowercase letter (as identifiers starting with an uppercase letter are for class names) and contain nothing other than letters and numbers. Hence any of mFoobar, foobar or fooBar is now accepted. Foobar or foo_bar would get flagged as before.
NeedBraces: We don’t require braces around single-statement blocks in C (and usually omit them there), so the same now applies to Java code.
VariableDeclarationUsageDistance: No longer enforced—in C we require variable declaration at the very top due to compiler limitation, so it would be consistent to do the same in Java, though not a requirement. If someone really wants to put effort into this, they can design a rule that says “either declare variables at the top, or no more than 3 lines from first usage”, though I am not sure this can be done in checkstyle.","This relaxes some checkstyle rules to be in line with what we require for C code (see #1041):

MemberName: No longer enforce member names à la mFoobar (which is reminiscent of a now-discouraged practice in C and which we don’t enforce or even use there); now the only requirement is that member names must start with a lowercase letter (as identifiers starting with an uppercase letter are for class names) and contain nothing other than letters and numbers. Hence any of mFoobar, foobar or fooBar is now accepted. Foobar or foo_bar would get flagged as before.
NeedBraces: We don’t require braces around single-statement blocks in C (and usually omit them there), so the same now applies to Java code.
VariableDeclarationUsageDistance: No longer enforced—in C we require variable declaration at the very top due to compiler limitation, so it would be consistent to do the same in Java, though not a requirement. If someone really wants to put effort into this, they can design a rule that says “either declare variables at the top, or no more than 3 lines from first usage”, though I am not sure this can be done in checkstyle.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1082,2021-01-09T13:55:08Z,2021-01-15T07:26:59Z,2021-01-15T07:27:00Z,MERGED,True,5,1,1,https://github.com/jkoan,fix:build:android: Fix VersionCode after 31.12.2020,3,[],https://github.com/navit-gps/navit/pull/1082,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/1082,"Currently the VersionCode has the Format yyMMddHHmm
which breaked at 01.01.2021 because the maximum allowed Version by
Google Play is 2100000000 because of the limitation of older Android
Devices.
Out currently highest VersionCode is 2012201504 and we need to keep it
continuous, so the new Format would be yyyyMMddHH.
Of cause this has the limitation that we can ""only"" create one
Versioncode per Hour.
But this is the the best @hoehnp and I came up yesterday.
As a result a PR will follow which will remove the android build from
the master build and instead will add it to a scheduled build (nightly
build)","Currently the VersionCode has the Format yyMMddHHmm
which breaked at 01.01.2021 because the maximum allowed Version by
Google Play is 2100000000 because of the limitation of older Android
Devices.
Out currently highest VersionCode is 2012201504 and we need to keep it
continuous, so the new Format would be yyyyMMddHH.
Of cause this has the limitation that we can ""only"" create one
Versioncode per Hour.
But this is the the best @hoehnp and I came up yesterday.
As a result a PR will follow which will remove the android build from
the master build and instead will add it to a scheduled build (nightly
build)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1082,2021-01-09T13:55:08Z,2021-01-15T07:26:59Z,2021-01-15T07:27:00Z,MERGED,True,5,1,1,https://github.com/jkoan,fix:build:android: Fix VersionCode after 31.12.2020,3,[],https://github.com/navit-gps/navit/pull/1082,https://github.com/mvglasow,2,https://github.com/navit-gps/navit/pull/1082#issuecomment-757364021,"Currently the VersionCode has the Format yyMMddHHmm
which breaked at 01.01.2021 because the maximum allowed Version by
Google Play is 2100000000 because of the limitation of older Android
Devices.
Out currently highest VersionCode is 2012201504 and we need to keep it
continuous, so the new Format would be yyyyMMddHH.
Of cause this has the limitation that we can ""only"" create one
Versioncode per Hour.
But this is the the best @hoehnp and I came up yesterday.
As a result a PR will follow which will remove the android build from
the master build and instead will add it to a scheduled build (nightly
build)","So the highest permissible version code is 21 00 00 00 00, and we are currently at 20 12 20 15 04, i.e. we have some 87 million version codes left. Thank God this came back to bite us early enough, i.e. while the original devs are still around (the more seasoned folks here may still remember the Y2K bug, and we had a similar one hovering around).
Joking aside, there is plenty of “air” in the version codes. Starting at the last used version code and adding one per hour would give us roughly a millennium before we hit the barrier (vs. 79 years for the yyyyMMddHH approach).
First off, where is the issue in two (or more) git commits building with the same version code? For the individual dev it might not be an issue at all—on my other projects I increase the version code once per release, and the time between releases can be long. The only issue I can see is app stores such as Google Play and F-Droid, which might require each version to have a version code higher than the previous one.
That would essentially mean we need to increase the version code only when we are about to publish an update to one of these stores, i.e. when we release a new stable (or testing) version. How often do we do that?
Then we could go for a version code schema of 20 aa bb cc dd, where

aa is the major version plus 13 (because we are already using 12)
bb is the minor version
cc is the release
dd can be a sub-release identifier, e.g. a nightly build between releases

That would allow for 100 nightlies per release, 100 releases per minor version, 100 minor versions per major version, and major versions up to 86. We’d then need a way to determine when a new release has happened, and increase the version code—we can either set the new version code only when we are about to release, or first release and then increase the least significant portion by 1 as a preliminary version code for the next release.
I am somewhat sceptical about limiting builds to once per night and would see that as a last resort when nothing else works. If we stick with time-based version codes, I would throttle builds to one time per version code validity.
In that case, a quick improvement would be yyyyMMddQQ for a scheme, where QQ = HH * 4 + mm / 15, i.e, a quarter of an hour. While HH will always be in the 0–23 range, QQ would be in the 0–97 range (or 0–98, if we round rather than truncate) and allow for one released version every 15 minutes.
We could take this one step further and go with yyyyMMttFF, where tt = dd * 3 + HH / 8, i.e. a third of a day, and FF = (HH % 8) * 12 + mm / 5, i.e. a five-minute period in a third of a day. Not as straightforward to read as a date, but it would allow for a new version every 5 minutes. This is close to what our CI pipeline can handle and should not be much of a limitation any more.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1082,2021-01-09T13:55:08Z,2021-01-15T07:26:59Z,2021-01-15T07:27:00Z,MERGED,True,5,1,1,https://github.com/jkoan,fix:build:android: Fix VersionCode after 31.12.2020,3,[],https://github.com/navit-gps/navit/pull/1082,https://github.com/hoehnp,3,https://github.com/navit-gps/navit/pull/1082#issuecomment-757548189,"Currently the VersionCode has the Format yyMMddHHmm
which breaked at 01.01.2021 because the maximum allowed Version by
Google Play is 2100000000 because of the limitation of older Android
Devices.
Out currently highest VersionCode is 2012201504 and we need to keep it
continuous, so the new Format would be yyyyMMddHH.
Of cause this has the limitation that we can ""only"" create one
Versioncode per Hour.
But this is the the best @hoehnp and I came up yesterday.
As a result a PR will follow which will remove the android build from
the master build and instead will add it to a scheduled build (nightly
build)","@mvglasow, interesting suggestion I couldnt come up with such a ""complicated"" calculations :-)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1082,2021-01-09T13:55:08Z,2021-01-15T07:26:59Z,2021-01-15T07:27:00Z,MERGED,True,5,1,1,https://github.com/jkoan,fix:build:android: Fix VersionCode after 31.12.2020,3,[],https://github.com/navit-gps/navit/pull/1082,https://github.com/jkoan,4,https://github.com/navit-gps/navit/pull/1082#issuecomment-758154184,"Currently the VersionCode has the Format yyMMddHHmm
which breaked at 01.01.2021 because the maximum allowed Version by
Google Play is 2100000000 because of the limitation of older Android
Devices.
Out currently highest VersionCode is 2012201504 and we need to keep it
continuous, so the new Format would be yyyyMMddHH.
Of cause this has the limitation that we can ""only"" create one
Versioncode per Hour.
But this is the the best @hoehnp and I came up yesterday.
As a result a PR will follow which will remove the android build from
the master build and instead will add it to a scheduled build (nightly
build)","Now I Implemented the a VersionCode every 15min's Version as it seems to be a good compromise between Readability and usability. For dc7d582:
jan@jan-pc:~/git/navit-new$ ./gradlew printVersion

> Configure project :navit:android
Version Name: v0.5.5-34-gdc7d582
Version Code: 2021011180

> Task :navit:android:printVersion UP-TO-DATE

BUILD SUCCESSFUL in 599ms
jan@jan-pc:~/git/navit-new$",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1082,2021-01-09T13:55:08Z,2021-01-15T07:26:59Z,2021-01-15T07:27:00Z,MERGED,True,5,1,1,https://github.com/jkoan,fix:build:android: Fix VersionCode after 31.12.2020,3,[],https://github.com/navit-gps/navit/pull/1082,https://github.com/jkoan,5,https://github.com/navit-gps/navit/pull/1082#issuecomment-758156679,"Currently the VersionCode has the Format yyMMddHHmm
which breaked at 01.01.2021 because the maximum allowed Version by
Google Play is 2100000000 because of the limitation of older Android
Devices.
Out currently highest VersionCode is 2012201504 and we need to keep it
continuous, so the new Format would be yyyyMMddHH.
Of cause this has the limitation that we can ""only"" create one
Versioncode per Hour.
But this is the the best @hoehnp and I came up yesterday.
As a result a PR will follow which will remove the android build from
the master build and instead will add it to a scheduled build (nightly
build)","How often do we do that?

We push on the beta branch on every commit to master. So for we don't have any intelligence in this.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1082,2021-01-09T13:55:08Z,2021-01-15T07:26:59Z,2021-01-15T07:27:00Z,MERGED,True,5,1,1,https://github.com/jkoan,fix:build:android: Fix VersionCode after 31.12.2020,3,[],https://github.com/navit-gps/navit/pull/1082,https://github.com/jkoan,6,https://github.com/navit-gps/navit/pull/1082#issuecomment-760169404,"Currently the VersionCode has the Format yyMMddHHmm
which breaked at 01.01.2021 because the maximum allowed Version by
Google Play is 2100000000 because of the limitation of older Android
Devices.
Out currently highest VersionCode is 2012201504 and we need to keep it
continuous, so the new Format would be yyyyMMddHH.
Of cause this has the limitation that we can ""only"" create one
Versioncode per Hour.
But this is the the best @hoehnp and I came up yesterday.
As a result a PR will follow which will remove the android build from
the master build and instead will add it to a scheduled build (nightly
build)","@mvglasow , @jandegr any concerns about merging?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1083,2021-01-24T15:14:52Z,2021-01-31T14:32:53Z,2021-01-31T14:32:53Z,MERGED,True,672,42,12,https://github.com/mvglasow,Add TraFF 0.8 support,26,[],https://github.com/navit-gps/navit/pull/1083,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/1083,"This PR adds support for TraFF 0.8. Unlike its predecessor, TraFF 0.8 allows consumers to subscribe to an area (and optionally a set of road classes) they are interested in. Navit subscribes to a certain area around the current position, as well as those which correspond to the map areas considered for routing.
TraFF 0.7 sources continue to be supported as before (i.e. they will push all the messages they have to Navit, although Navit will defer full location parsing until the message is actually needed). Navit can detect which TraFF version a source supports, and will select the most recent version.
So far Android is the only platform for which a plugin is available. However, as TraFF 0.8 now specifies HTTP[S] as a transport channel, this opens up the possibility for a cross-platform plugin.
So far, none of the new events introduced with TraFF 0.8 are supported (even before, Navit supported only a subset of the messages, namely those from which an impact on travel times could be inferred). This may still need to be revisited and extended.","This PR adds support for TraFF 0.8. Unlike its predecessor, TraFF 0.8 allows consumers to subscribe to an area (and optionally a set of road classes) they are interested in. Navit subscribes to a certain area around the current position, as well as those which correspond to the map areas considered for routing.
TraFF 0.7 sources continue to be supported as before (i.e. they will push all the messages they have to Navit, although Navit will defer full location parsing until the message is actually needed). Navit can detect which TraFF version a source supports, and will select the most recent version.
So far Android is the only platform for which a plugin is available. However, as TraFF 0.8 now specifies HTTP[S] as a transport channel, this opens up the possibility for a cross-platform plugin.
So far, none of the new events introduced with TraFF 0.8 are supported (even before, Navit supported only a subset of the messages, namely those from which an impact on travel times could be inferred). This may still need to be revisited and extended.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1087,2021-02-07T16:17:15Z,2021-02-13T20:06:42Z,2021-06-01T19:01:53Z,MERGED,True,1,1,1,https://github.com/mvglasow,Fix:build/android:do not double-define getcwd on recent NDK versions,1,[],https://github.com/navit-gps/navit/pull/1087,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/1087,"Fixes #1043
Holding this back while jkoan is still investigating the build issues on F-Droid.
I have successfully built this locally on NDK 21, then after downgrading to NDK 18 (which had not experienced the issue this commit intends to fix).
@jandegr I can’t officially add you as a reviewer here, but your input would be appreciated (e.g. if I’ve overlooked something).","Fixes #1043
Holding this back while jkoan is still investigating the build issues on F-Droid.
I have successfully built this locally on NDK 21, then after downgrading to NDK 18 (which had not experienced the issue this commit intends to fix).
@jandegr I can’t officially add you as a reviewer here, but your input would be appreciated (e.g. if I’ve overlooked something).",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1089,2021-02-14T10:51:08Z,2021-04-03T06:11:52Z,2021-04-03T06:11:52Z,MERGED,True,79,7,6,https://github.com/OLFDB,make it switch to nightlayout when we are in a tunnel,21,[],https://github.com/navit-gps/navit/pull/1089,https://github.com/OLFDB,1,https://github.com/navit-gps/navit/pull/1089,Nightlayout is enabled when available and streetflags & AF_UNDERGROUND is true,Nightlayout is enabled when available and streetflags & AF_UNDERGROUND is true,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1089,2021-02-14T10:51:08Z,2021-04-03T06:11:52Z,2021-04-03T06:11:52Z,MERGED,True,79,7,6,https://github.com/OLFDB,make it switch to nightlayout when we are in a tunnel,21,[],https://github.com/navit-gps/navit/pull/1089,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/1089#issuecomment-779046480,Nightlayout is enabled when available and streetflags & AF_UNDERGROUND is true,"Due to problems with configuration, it seems that circle ci build check is not run on your branch. In order to inforce the ci run, I pushed your branch directly to navit-gps repo as well. Please proceed as usual.
Btw: Please check coding style by applying
astyle --indent=spaces=4 --style=attach -n --max-code-length=120 -xf -xh
to changed files. Otherwise your changes will not pass ci's sanity check step.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1089,2021-02-14T10:51:08Z,2021-04-03T06:11:52Z,2021-04-03T06:11:52Z,MERGED,True,79,7,6,https://github.com/OLFDB,make it switch to nightlayout when we are in a tunnel,21,[],https://github.com/navit-gps/navit/pull/1089,https://github.com/metalstrolch,3,https://github.com/navit-gps/navit/pull/1089#issuecomment-779047636,Nightlayout is enabled when available and streetflags & AF_UNDERGROUND is true,"Once CI gives me a image, I'll check it on my sailfish device. If that is OK. I'll merge this.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1089,2021-02-14T10:51:08Z,2021-04-03T06:11:52Z,2021-04-03T06:11:52Z,MERGED,True,79,7,6,https://github.com/OLFDB,make it switch to nightlayout when we are in a tunnel,21,[],https://github.com/navit-gps/navit/pull/1089,https://github.com/mvglasow,4,https://github.com/navit-gps/navit/pull/1089#issuecomment-779395151,Nightlayout is enabled when available and streetflags & AF_UNDERGROUND is true,"I am not really familiar with this section of the code, but as far as I know, we have (or had?) a kludge of swapping day/night layouts in the southern hemisphere. Unless that’s been considered here, driving into a tunnel in Australia at night will make Navit switch to day layout. You might want to set up a test case for this (demo vehicle, route through a tunnel in the southern hemisphere, run during night hours). If that misbehaves, the day/night layout switch logic would need to be fixed.
The other one: how do we know we are in a tunnel? Usually, our location source is GPS, which doesn’t work in tunnels. There’s been a tunnel extrapolation feature for a while, but that has never worked for me (my production platform being Android). However, I expect the only impact of that issue would be making this change pointless, without this change breaking anything.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1089,2021-02-14T10:51:08Z,2021-04-03T06:11:52Z,2021-04-03T06:11:52Z,MERGED,True,79,7,6,https://github.com/OLFDB,make it switch to nightlayout when we are in a tunnel,21,[],https://github.com/navit-gps/navit/pull/1089,https://github.com/OLFDB,5,https://github.com/navit-gps/navit/pull/1089#issuecomment-790862721,Nightlayout is enabled when available and streetflags & AF_UNDERGROUND is true,"There’s been a tunnel extrapolation feature for a while, but that has never worked for me (my production platform being Android).

I have investigated the code around tunnel extrapolation and the reason why it's not working is in vehicle_gpsd.c line 210:
    // If data->fix.speed is NAN, then the drawing gets jumpy.
    if (! isnan(data->fix.speed) && priv->fix_type > 0) {
        callback_list_call_attr_0(priv->cbl, attr_position_coord_geo);
    }
tracking_update never gets notified of a lost GPS fix because of the check for NAN. If there is no fix, it is NAN.
I was finally able to create a NMEA file with a route through a tunnel and to simulate the lost fix.
The missing update is the reason for tracking->tunnel always being 0 as well.
The tunnel extrapolation feature is working. You have to set tunnel_extrapolation=""10"" in the navit.xml file to have the extrapolation done with the last recorded speed.
So far I didn't see ""jumpy drawings"", but that should be tested more detailed.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1091,2021-02-15T16:34:49Z,2021-02-19T11:54:03Z,2021-02-19T11:55:17Z,MERGED,True,4,0,1,https://github.com/hoehnp,Update macos_development.rst,1,[],https://github.com/navit-gps/navit/pull/1091,https://github.com/hoehnp,1,https://github.com/navit-gps/navit/pull/1091,"As discussed in #1088, it seems that building on Mac OSX is not functional right now. Therefore, I would suggest to include this warning. If someone is willing to resolve #767  I would suggest to remove the warning again. Any thoughts?","As discussed in #1088, it seems that building on Mac OSX is not functional right now. Therefore, I would suggest to include this warning. If someone is willing to resolve #767  I would suggest to remove the warning again. Any thoughts?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1092,2021-02-19T17:59:56Z,2021-02-19T18:27:14Z,2021-02-19T18:27:15Z,MERGED,True,5,1,1,https://github.com/mvglasow,Fix:build:do not request CXX if explicitly disabled,1,[],https://github.com/navit-gps/navit/pull/1092,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/1092,"This fixes issues with builds failing because of CMake not finding a suitable C++ compiler although CXX was explicitly disabled.
Sample output from an Android build, which this PR fixes:
-- The C compiler identification is GNU 6.3.0
-- The CXX compiler identification is unknown
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
CMake Error at CMakeLists.txt:10 (project):
  No CMAKE_CXX_COMPILER could be found.
  Tell CMake where to find the compiler by setting either the environment
  variable ""CXX"" or the CMake cache entry CMAKE_CXX_COMPILER to the full path
  to the compiler, or to the compiler name if it is in the PATH.
-- Configuring incomplete, errors occurred!","This fixes issues with builds failing because of CMake not finding a suitable C++ compiler although CXX was explicitly disabled.
Sample output from an Android build, which this PR fixes:
-- The C compiler identification is GNU 6.3.0
-- The CXX compiler identification is unknown
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
CMake Error at CMakeLists.txt:10 (project):
  No CMAKE_CXX_COMPILER could be found.
  Tell CMake where to find the compiler by setting either the environment
  variable ""CXX"" or the CMake cache entry CMAKE_CXX_COMPILER to the full path
  to the compiler, or to the compiler name if it is in the PATH.
-- Configuring incomplete, errors occurred!",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1093,2021-02-19T18:18:53Z,2021-02-19T18:26:55Z,2021-02-19T18:26:55Z,MERGED,True,108,109,3,https://github.com/mvglasow,Refactor:build:merge into one single build.gradle,1,[],https://github.com/navit-gps/navit/pull/1093,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/1093,"This consolidates the two-level build.gradle for Android into one single file. Other platforms are not affected by this change.
Benefits:

simplifies things in general and makes the file structure easier to overlook
enables F-Droid to retrieve the package name from the source (which it couldn't do before because the manifest was not referenced in the top-level build file)","This consolidates the two-level build.gradle for Android into one single file. Other platforms are not affected by this change.
Benefits:

simplifies things in general and makes the file structure easier to overlook
enables F-Droid to retrieve the package name from the source (which it couldn't do before because the manifest was not referenced in the top-level build file)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1094,2021-02-20T12:38:10Z,2021-02-21T10:38:50Z,2021-02-21T10:38:50Z,MERGED,True,20,13,2,https://github.com/mvglasow,Fix:build:Reduce source tree pollution by Android build,2,[],https://github.com/navit-gps/navit/pull/1094,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/1094,"As described in #762, this now moves all CMake output from the Android build to a subdir named android-builddir.
For now, generated XML, PNG and translation files still get copied into the source tree. However, each gets written to an otherwise unused subdir (no mixing of code and generated files within the same dir), making cleanup much easier than before.
With this change, the Android build leaves five elements in the source tree:

android-builddir/ (the build dir)
cmake_plugin_settings.txt
navit/android/assets/ (XML config files, entire dir)
navit/android/res/drawable-nodpi/ (PNG bitmaps, entire dir)
navit/android/res/raw/(translations, entire dir)

@jkoan For now, this does not change anything about the use of build_android.sh or the double CMake. See if you can use this for your Android build efforts—if you have already solved the Android source tree pollution issue otherwise, feel free to close this.","As described in #762, this now moves all CMake output from the Android build to a subdir named android-builddir.
For now, generated XML, PNG and translation files still get copied into the source tree. However, each gets written to an otherwise unused subdir (no mixing of code and generated files within the same dir), making cleanup much easier than before.
With this change, the Android build leaves five elements in the source tree:

android-builddir/ (the build dir)
cmake_plugin_settings.txt
navit/android/assets/ (XML config files, entire dir)
navit/android/res/drawable-nodpi/ (PNG bitmaps, entire dir)
navit/android/res/raw/(translations, entire dir)

@jkoan For now, this does not change anything about the use of build_android.sh or the double CMake. See if you can use this for your Android build efforts—if you have already solved the Android source tree pollution issue otherwise, feel free to close this.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1094,2021-02-20T12:38:10Z,2021-02-21T10:38:50Z,2021-02-21T10:38:50Z,MERGED,True,20,13,2,https://github.com/mvglasow,Fix:build:Reduce source tree pollution by Android build,2,[],https://github.com/navit-gps/navit/pull/1094,https://github.com/mvglasow,2,https://github.com/navit-gps/navit/pull/1094#issuecomment-782690482,"As described in #762, this now moves all CMake output from the Android build to a subdir named android-builddir.
For now, generated XML, PNG and translation files still get copied into the source tree. However, each gets written to an otherwise unused subdir (no mixing of code and generated files within the same dir), making cleanup much easier than before.
With this change, the Android build leaves five elements in the source tree:

android-builddir/ (the build dir)
cmake_plugin_settings.txt
navit/android/assets/ (XML config files, entire dir)
navit/android/res/drawable-nodpi/ (PNG bitmaps, entire dir)
navit/android/res/raw/(translations, entire dir)

@jkoan For now, this does not change anything about the use of build_android.sh or the double CMake. See if you can use this for your Android build efforts—if you have already solved the Android source tree pollution issue otherwise, feel free to close this.","With the additional commit, all build artifacts stay in android-builddir. I’ve tested the resulting APK and the multiple resource paths in build.gradle seem to work; both DPI-specific resources (such as the app icon on Android 4.4.4) and non-DPI resources (such as all cross-platform images, e.g. menu icons) are present.
That limits source tree additions to two items:

android-builddir/ (the build dir)
cmake_plugin_settings.txt (file with local settings which we could add to .gitignore)",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1095,2021-02-28T11:56:40Z,2021-02-28T12:27:09Z,2021-02-28T12:27:14Z,MERGED,True,109,55,9,https://github.com/mvglasow,Refactor:core:Documentation update,10,[],https://github.com/navit-gps/navit/pull/1095,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/1095,Some documentation improvements,Some documentation improvements,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1096,2021-02-28T13:11:45Z,,2021-10-09T10:12:58Z,OPEN,False,1784,967,64,https://github.com/OLFDB,Fix for  #1088 Macos build issues,67,[],https://github.com/navit-gps/navit/pull/1096,https://github.com/OLFDB,1,https://github.com/navit-gps/navit/pull/1096,"Here are changes needed to build on macos. Tested on a clean install of Big Sur 11.0.1.
Instruction on how to build are contained in the doc/development/macos_development.rst file.","Here are changes needed to build on macos. Tested on a clean install of Big Sur 11.0.1.
Instruction on how to build are contained in the doc/development/macos_development.rst file.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1096,2021-02-28T13:11:45Z,,2021-10-09T10:12:58Z,OPEN,False,1784,967,64,https://github.com/OLFDB,Fix for  #1088 Macos build issues,67,[],https://github.com/navit-gps/navit/pull/1096,https://github.com/OLFDB,2,https://github.com/navit-gps/navit/pull/1096#issuecomment-830786009,"Here are changes needed to build on macos. Tested on a clean install of Big Sur 11.0.1.
Instruction on how to build are contained in the doc/development/macos_development.rst file.",Do I need to change anything for this PR to get merged?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1096,2021-02-28T13:11:45Z,,2021-10-09T10:12:58Z,OPEN,False,1784,967,64,https://github.com/OLFDB,Fix for  #1088 Macos build issues,67,[],https://github.com/navit-gps/navit/pull/1096,https://github.com/jkoan,3,https://github.com/navit-gps/navit/pull/1096#issuecomment-929072709,"Here are changes needed to build on macos. Tested on a clean install of Big Sur 11.0.1.
Instruction on how to build are contained in the doc/development/macos_development.rst file.","diff --git a/navit/xslt/speech_macos.xslt b/navit/xslt/speech_macos.xslt
new file mode 100644
--- /dev/null
+++ b/navit/xslt/speech_macos.xslt
@@ -0,0 +1,6 @@
+<?xml version=""1.0""?>
+<xsl:transform version=""2.0"" xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xi=""http://www.w3.org/2001/XInclude"">
+        <xsl:template match=""/config/navit/speech"">
+                <speech type=""cmdline"" data=""say '%s'""/>
+        </xsl:template>
+</xsl:transform>
+diff --git a/scripts/prepare_navit_macos.sh b/scripts/prepare_navit_macos.sh
deleted file mode 100644
--- a/scripts/prepare_navit_macos.sh
+++ /dev/null
@@ -1,19 +0,0 @@
-# Use this script to build navit on a Mac
-/bin/bash -c ""$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)""
-brew install glib gtk+ gettext libpng protobuf-c cmake librsvg imagemagick gpsd
-brew services start gpsd
-
-#TODO: this needs to be adapted for the PR: git clone https://github.com/navit/navit.git
-git clone https://github.com/OLFDB/navit.git
-cd navit
-
-#TODO: this needs to be adapted for the PR: remove
-git checkout macosbuild
-git fetch
-#remove end
-
-mkdir build
-cd build
-cmake ../contrib/macos/
-make install
-open /usr/local/bin/navit.app
-diff --git a/scripts/build_macos.sh b/scripts/build_macos.sh
new file mode 100644
--- /dev/null
+++ b/scripts/build_macos.sh
@@ -0,0 +1,8 @@
+#!/usr/bin/env bash
+set -e
+
+mkdir build_macos
+pushd build_macos
+cmake ../contrib/macos/ -DXSLTS=""gui_gtk;speech_macos""
+cmake --build
+popd
+diff --git a/scripts/setup_macos.sh b/scripts/setup_macos.sh
new file mode 100644
--- /dev/null
+++ b/scripts/setup_macos.sh
@@ -0,0 +1,6 @@
+#!/usr/bin/env bash
+set -e
+
+/bin/bash -c ""$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)""
+brew install glib gtk+ gettext libpng protobuf-c cmake librsvg imagemagick gpsd
+brew services start gpsd
+diff --git a/navit/navit_shipped_gtkgui.xml b/navit/navit_shipped_gtkgui.xml
deleted file mode 100644
--- a/navit/navit_shipped_gtkgui.xml
+++ /dev/null
@@ -1,468 +0,0 @@
-<?xml version=""1.0"" encoding=""UTF-8""?><!--
-	For configuration options used in this file, please read
-	http://wiki.navit-project.org/index.php/Configuration
-	Do not edit /usr/share/navit/navit.xml or /etc/navit/navit.xml :
-	changes would be lost on upgrade. Rather copy it to ~/.navit/.
--->
-<!DOCTYPE config
-  SYSTEM ""navit.dtd"">
-<config xmlns:xi=""http://www.w3.org/2001/XInclude"">
-	<plugins>
-		<plugin path=""$NAVIT_LIBDIR/*/${NAVIT_LIBPREFIX}lib*.so"" ondemand=""yes""/>
-		<plugin path=""$NAVIT_LIBDIR/autoload/${NAVIT_LIBPREFIX}lib*.so""/>
-		<plugin path=""$NAVIT_LIBDIR/*/${NAVIT_LIBPREFIX}libbinding_dbus.so"" active=""no""/>
-		<plugin path=""$NAVIT_LIBDIR/*/${NAVIT_LIBPREFIX}libgraphics_null.so"" active=""no""/>
-	</plugins>
-
-	<!-- The global debug level (like using command line option ""-d""). Ignored if option -d is used. -->
-	<!-- Possible debug levels: error, warning, info, debug. -->
-	<debug name=""global"" dbg_level=""error""/>
-	<!-- Example of setting the debug level for a single function.  -->
-	<debug name=""navit:do_draw"" dbg_level=""error""/>
-	<!-- Example for logging timing/profiling information. Note the prefix ""profile:"".
-	<debug name=""profile:navit:do_draw"" dbg_level=""debug""/>
-	-->
-	<!-- segv: 1 - show backtrace with gdb and exit, 2 - stay in gdb -->
-	<debug name=""segv"" level=""1""/>
-	<!-- timestamps 0/1 - prefix log messages with a timestamp -->
-	<debug name=""timestamps"" level=""0""/>
-
-	<!--
-	center= defines which map location Navit will show after first start.
-	It will only be used for the first start; subsequent starts will remember the
-	last position (in center.txt).
-	Center coordinates format: ""Long Lat"" in decimal degrees (WGS 84).
-	For other formats see http://wiki.navit-project.org/index.php/Coordinate_format.
-	-->
-	<navit center=""11.5666 48.1333"" zoom=""256"" tracking=""1"" orientation=""-1"" recent_dest=""250"" drag_bitmap=""0"" default_layout=""Car"">
-		<!-- Use one of gtk_drawing_area, qt_qpainter or sdl. On windows systems, use win32 -->
-		<graphics type=""gtk_drawing_area""/>
-
-		<!--
-		To debug the graphics plugin in question it is possible to proxy it with svg_debug
-		This way every frame will be written as a svg file. In addition to this the real graphics plugin will
-		be called. To configure this, set type to svg_debug and the name attribute to the proxied plugin.
-		Parameters are past to the proxied plugin as well. But resize callbacks currently only passed to the proxied
-		plugin, and not handled by svg_debug, so resizing the window will not update the width and height of the resulting
-		scg file. But all calls will still be recorded and written to the file, so you will see those drawing when opening
-		the svg in an editor like inkscape.
-		Example:
-		-->
-		<!--
-		<graphics type=""svg_debug"" name=""sdl2"" window_title=""Alternative attributes as passed to proxied plugin"" w=""1000"" h=""1000"" />
-		 -->
-
-		<!--
-		The following line let you select which graphical user interface you'd like to use.
-		Options include internal (optimized for touch screen devices), gtk (useful for desktop computers).
-		If you don't like the internal gui, set enabled=yes for the following tag and enabled=no for the gui internal tag
-		-->
-		<gui type=""gtk"" enabled=""yes"" menubar=""1"" toolbar=""1"" statusbar=""1""/>
-		<!--
-		In case of the internal GUI, you can even influence the size of the text and of the icons in the toolbar and the viewport.
-		Here's an example for a freerunner:
-		<gui type=""internal"" font_size=""350"" icon_xs=""32"" icon_s=""96"" icon_l=""96""/>
-		-->
-
-		<!--
-		The action that appears on map click is configurable with the attribute ""on_map_click"".
-		To get the previous behaviour of showing the map point menu use on_map_click='menu(""#Map Point"")'
-		-->
-		<gui type=""internal"" enabled=""no""><![CDATA[
-			<html>
-				<a name='Main Menu'><text>Main menu</text>
-					<a href='#Actions'><img src='gui_actions'>Actions</img></a>
-					<img cond='flags&amp;2' src='gui_map' onclick='back_to_map()'><text>Show
-Map</text></img>
-					<a href='#Settings'><img src='gui_settings'><text>Settings</text></img></a>
-				<a href='#Tools'><img src='gui_tools'><text>Tools</text></img></a>
-				<a href='#Route'><img src='gui_settings'><text>Route</text></img></a>
-				<img src='gui_about' onclick='about()'><text>About</text></img>
-				<img src='gui_quit' onclick='quit()'><text>Quit</text></img>
-				</a>
-			<a name='Actions'><text>Actions</text>
-				<img src='gui_bookmark' onclick='bookmarks()'><text>Bookmarks</text></img>
-				<img src='gui_formerdests' onclick='formerdests()'><text>Former
-Destinations</text></img>
-				<img cond='click_coord_geo' src='gui_map' onclick='position(click_coord_geo,_(""Map Point""),8|16|32|64|256)'><script>write(click_coord_geo)</script></img>
-				<img cond='position_coord_geo' src='gui_vehicle' onclick='position(position_coord_geo,_(""Vehicle Position""),8|32|64|128|256)'><script>write(position_coord_geo)</script></img>
-				<img src='gui_town' onclick='town()'><text>Town</text></img>
-				<img src='gui_map' onclick='enter_coord()'><text>Coordinates</text></img>
-				<img cond='navit.route.route_status&amp;1' src='gui_stop' onclick='abort_navigation();refresh()'><text>Stop
-Navigation</text></img>
-			</a>
-			<a name='Settings'><text>Settings</text>
-				<a href='#Settings Display'><img src='gui_display'><text>Display</text></img></a>
-				<img src='gui_maps' onclick='setting_maps()'><text>Maps</text></img>
-				<!-- <a href='#Settings Maps'><img src='gui_maps'><text>Maps</text></img></a> -->
-				<img src='gui_vehicle' onclick='setting_vehicle()'><text>Vehicle</text></img>
-				<!-- <a href='#Settings Vehicles'><img src='gui_vehicle'><text>Vehicle</text></img></a> -->
-				<img src='gui_rules' onclick='setting_rules()'><text>Rules</text></img>
-			</a>
-			<a name='Settings Display'><text>Display</text>
-				<!-- <img src='gui_display' onclick='setting_layout()'><text>Layout</text></img> -->
-				<a href='#Settings Layouts'><img src='gui_display'><text>Layout</text></img></a>
-				<img cond='fullscreen==0' src='gui_fullscreen' onclick='fullscreen=1'><text>Fullscreen</text></img>
-				<img cond='fullscreen==1' src='gui_leave_fullscreen' onclick='fullscreen=0'><text>Window Mode</text></img>
-				<img cond='navit.pitch==0' src='gui_map' onclick='navit.pitch=pitch;redraw_map();back_to_map()'><text>3D</text></img>
-				<img cond='navit.pitch!=0' src='gui_map' onclick='navit.pitch=0;redraw_map();back_to_map()'><text>2D</text></img>
-				<img cond='navit.autozoom_active==0' src='gui_zoom_auto' onclick='navit.autozoom_active=1;redraw_map();back_to_map()'><text>Auto zoom</text></img>
-				<img cond='navit.autozoom_active==1' src='gui_zoom_manual' onclick='navit.autozoom_active=0;redraw_map();back_to_map()'><text>Manual zoom</text></img>
-  				<a href='#Settings Layers'><img src='gui_layers'><text>Layers</text></img></a>
-			</a>
-			<a name='Tools'><text>Tools</text>
-				<img src='gui_actions' onclick='locale()'><text>Show Locale</text></img>
-				<img src='gui_tools' onclick='network_info()'><text>Network info</text></img>
-			</a>
-			<a name='Route'><text>Route</text>
-				<img cond='navit.route.route_status&amp;1' src='gui_zoom_route' onclick='navit.zoom_to_route();redraw_map();back_to_map()'><text>Zoom to route</text></img>
-				<img src='gui_actions' onclick='route_description()'><text>Description</text></img>
-				<img src='gui_heightprofile' onclick='route_height_profile()'><text>Height Profile</text></img>
-				<img cond='navit.waypoints_flag &amp;&amp; (navit.route.route_status&amp;1)' src='cursor_still' onclick='waypoints()'><text>Waypoints</text></img>
-				<img cond='navit.waypoints_flag &amp;&amp; (navit.route.route_status&amp;1)' src='gui_stop' onclick='navit.route_remove_last_waypoint()'><text>Drop last
-Waypoint</text></img>
-				<img cond='navit.waypoints_flag &amp;&amp; (navit.route.route_status&amp;1)' src='gui_stop' onclick='navit.route_remove_next_waypoint()'><text>Drop next
-Waypoint</text></img>
-			</a>
-			<a name='Map Point'><text>Map Point</text>
-				<script>position(click_coord_geo,_(""Map Point""),8|16|32|64|256)</script>
-			</a>
-			<a name='Settings Layouts' class='clist' refresh_cond='navit.layout'><text>Layout</text>
-				<script>
-					foreach(layout;navit.layout)
-						img(""centry"", navit.layout==layout?""gui_active"":""gui_inactive"", layout.name,
-							"""", ""navit.layout=navit.layout[@name==%{se}*]"", layout.name);
-				</script>
-			</a>
-			<a name='Settings Maps' class='clist'><text>Maps</text>
-				<script>
-					foreach(map;navit.mapset.map)
-						if (map.description)
-							img(""centry"",map.active?""gui_active"":""gui_inactive"", map.description,
-							"""",""navit.mapset.map[@description==%{se}].active=%{d}*"",map.description,!map.active,""redraw_map();refresh();"");
-						else
-							img(""centry"",map.active?""gui_active"":""gui_inactive"", map.type+"":""+map.data,
-								"""",""navit.mapset.map[@data==%{se}].active=%{d}*"",map.data,!map.active,""redraw_map();refresh();"");
-				</script>
-			</a>
-			<a name='Settings Layers' class='clist'><text>Layers</text>
-				<script>
-					foreach(layer;navit.layout.layer)
-						if (layer.name)
-							img(""centry"",layer.active?""gui_active"":""gui_inactive"",layer.name,
-							"""",""navit.layout.layer[@name==%{se}].active=%{d}*"",layer.name,!layer.active,""redraw_map();refresh();"");
-						else
-							img(""centry"",layer.active?""gui_active"":""gui_inactive"",
-								"""",""navit.layout.layer[@name==%{se}].active=%{d}*"",layer.name,!layer.active,""redraw_map();refresh();"");
-				</script>
-			</a>
-			<a name='Settings Vehicles' class='clist'><text>Vehicle</text>
-				<script>
-					foreach(vehicle;navit.vehicle)
-						img(""centry"",navit.vehicle==vehicle?""gui_active"":""gui_inactive"",vehicle.name,
-							""name=%{se};menu(\""#Settings Vehicle\"")"",vehicle.name);
-				</script>
-			</a>
-			<a name='Settings Vehicle' class='clist'><script>write(name)</script>
-				<script>
-					foreach(vehicle;navit.vehicle)
-						if (vehicle.name == name) {
-							if (vehicle!=navit.vehicle)
-								img(""centry"",""gui_active"",""Set as active"",
-									"""",""navit.vehicle=navit.vehicle[@name==%{se}*]"",name);
-							foreach(vehicleprofile;navit.vehicleprofile)
-								img(""centry"",vehicle.profilename==vehicleprofile.name?""gui_active"":""gui_inactive"",vehicleprofile.name,
-									"""",""navit.vehicle[@name=%{se}].profilename=%{se}*"",name,vehicleprofile.name,""refresh()"");
-						}
-				</script>
-			</a>
-			<a name='Satellite Status' class='clist'><text>Satellite Status</text>
-				<script>satellite_status_page()</script>
-			</a>
-			<a name='NMEA Data' class='clist'><text>NMEA Data</text>
-				<script>nmea_data_page()</script>
-			</a>
-			</html>
-		]]></gui>
-		<!-- for a debug log -->
-		<log enabled=""no"" type=""textfile_debug"" data=""debug_%Y%m%d-%i.txt"" flush_size=""1000"" flush_time=""30""/>
-		<!-- osd items allow to position display and control items directly on top of the map.
-		You can find a list of all the available OSDs items here:
-		http://wiki.navit-project.org/index.php/OSD -->
-		<osd enabled=""no"" type=""compass""/>
-		<osd enabled=""no"" type=""navigation_next_turn""/>
-
-		<!-- Commands include gui_internal_menu, gui_internal_fullscreen, zoom_in and zoom_out.
-			Usage of negative values change the button origins. x=""0"" y=""0"" specifies the top left, x=""-0"" y=""-0"" the bottom right corner.
-			It's always the top left corner of the icon, so you need to consider the icon's size when you enter the values. -->
-		<osd enabled=""no"" type=""button"" x=""0"" y=""0"" command=""gui.fullscreen=!gui.fullscreen"" src=""toggle_fullscreen.png""/>
-		<osd enabled=""no"" type=""button"" x=""-96"" y=""0"" command=""gui.menu(1)"" src=""menu.png""/>
-		<osd enabled=""no"" type=""button"" x=""-96"" y=""-96"" command=""zoom_in()"" src=""zoom_in.png""/>
-		<osd enabled=""no"" type=""button"" x=""0"" y=""-96"" command=""zoom_out()"" src=""zoom_out.png""/>
-
-		<!-- Traffic -->
-		<traffic type=""null""/>
-
-		<!-- Vehicle with GPS enabled for gpsd on unix -->
-		<vehicle name=""Local GPS"" profilename=""car"" enabled=""yes"" active=""1"" source=""gpsd://localhost"" gpsd_query=""w+xj"">
-		<!-- Vehicle with GPS enabled for direct communication on windows. Remove the line above if you use this. -->
-		<!-- <vehicle name=""Local GPS"" profilename=""car"" follow=""1"" enabled=""yes"" active=""1""
-				source=""serial:COM4 baudrate=4800 parity=N data=8 stop=1"" > -->
-
-			<!-- Navit can write a tracklog in several formats (gpx, nmea or textfile): -->
-			<log enabled=""no"" type=""gpx"" attr_types=""position_time_iso8601,position_direction,position_speed,profilename,position_radius"" data=""track_%Y%m%d-%%i.gpx"" flush_size=""1000"" flush_time=""30""/>
-		</vehicle>
-
-		<!-- For SDL, you should add follow=""1"" to have the view centered on your position -->
-		<!-- <vehicle name=""Meins"" enabled=""yes"" source=""gpsd://localhost"" color=""#0000ff"" follow=""1""/> -->
-
-		<vehicle name=""Demo"" profilename=""car"" enabled=""no"" source=""demo://""/>
-
-		<!-- For the cumulative displacement filter to be enabled, set cdf_histsize=""x"" here, with x being an integer somewhere around 4 -->
-		<tracking cdf_histsize=""0""/>
-
-		<vehicleprofile name=""car"" route_depth=""4:25%,8:40000,18:10000"" flags=""0x4000000"" flags_forward_mask=""0x4040002"" flags_reverse_mask=""0x4040001"" maxspeed_handling=""0"" route_mode=""0"" static_speed=""5"" static_distance=""25"">
-			<roadprofile item_types=""street_0,street_1_city,living_street,street_service,track_gravelled,track_unpaved,street_parking_lane"" speed=""10"" route_weight=""10"" />
-			<roadprofile item_types=""street_2_city,track_paved"" speed=""30"" route_weight=""30"" />
-			<roadprofile item_types=""street_3_city"" speed=""40"" route_weight=""40"" />
-			<roadprofile item_types=""street_4_city"" speed=""50"" route_weight=""50"" />
-			<roadprofile item_types=""highway_city"" speed=""80"" route_weight=""80"" />
-			<roadprofile item_types=""street_1_land"" speed=""60"" route_weight=""60"" />
-			<roadprofile item_types=""street_2_land"" speed=""65"" route_weight=""65"" />
-			<roadprofile item_types=""street_3_land"" speed=""70"" route_weight=""70"" />
-			<roadprofile item_types=""street_4_land"" speed=""80"" route_weight=""80"" />
-			<roadprofile item_types=""street_n_lanes"" speed=""120"" route_weight=""120"" />
-			<roadprofile item_types=""highway_land"" speed=""120"" route_weight=""120"" />
-			<roadprofile item_types=""ramp"" speed=""40"" route_weight=""40"" />
-			<!--roundabout does not apply to OSMaps -->
-			<roadprofile item_types=""roundabout"" speed=""10"" route_weight=""10""/>
-			<roadprofile item_types=""ferry"" speed=""40"" route_weight=""40""/>
-		</vehicleprofile>
-
-		<vehicleprofile name=""car_shortest"" flags=""0x4000000"" flags_forward_mask=""0x4000002"" flags_reverse_mask=""0x4000001"" maxspeed_handling=""0"" route_mode=""0"" static_speed=""5"" static_distance=""25"">
-			<roadprofile item_types=""street_0,street_1_city,living_street,street_service,track_gravelled,track_unpaved,street_parking_lane"" speed=""10"" route_weight=""60"" />
-			<roadprofile item_types=""street_2_city,track_paved"" speed=""30"" route_weight=""60"" />
-			<roadprofile item_types=""street_3_city"" speed=""40"" route_weight=""60"" />
-			<roadprofile item_types=""street_4_city"" speed=""50"" route_weight=""60"" />
-			<roadprofile item_types=""highway_city"" speed=""80"" route_weight=""60"" />
-			<roadprofile item_types=""street_1_land"" speed=""60"" route_weight=""60"" />
-			<roadprofile item_types=""street_2_land"" speed=""65"" route_weight=""60"" />
-			<roadprofile item_types=""street_3_land"" speed=""70"" route_weight=""60"" />
-			<roadprofile item_types=""street_4_land"" speed=""80"" route_weight=""60"" />
-			<roadprofile item_types=""street_n_lanes"" speed=""120"" route_weight=""60"" />
-			<roadprofile item_types=""highway_land"" speed=""120"" route_weight=""60"" />
-			<roadprofile item_types=""ramp"" speed=""40"" route_weight=""60"" />
-			<!--roundabout does not apply to OSMaps -->
-			<roadprofile item_types=""roundabout"" speed=""10"" route_weight=""60""/>
-			<roadprofile item_types=""ferry"" speed=""40"" route_weight=""60""/>
-		</vehicleprofile>
-
-		<vehicleprofile name=""car_avoid_tolls"" flags=""0x4000000"" flags_forward_mask=""0x4000402"" flags_reverse_mask=""0x4000001"" maxspeed_handling=""0"" route_mode=""0"" static_speed=""5"" static_distance=""25"">
-			<roadprofile item_types=""street_0,street_1_city,living_street,street_service,track_gravelled,track_unpaved,street_parking_lane"" speed=""10"" route_weight=""10""/>
-			<roadprofile item_types=""street_2_city,track_paved"" speed=""30"" route_weight=""30""/>
-			<roadprofile item_types=""street_3_city"" speed=""40"" route_weight=""40""/>
-			<roadprofile item_types=""street_4_city"" speed=""50"" route_weight=""50""/>
-			<roadprofile item_types=""highway_city"" speed=""80"" route_weight=""80""/>
-			<roadprofile item_types=""street_1_land"" speed=""60"" route_weight=""60""/>
-			<roadprofile item_types=""street_2_land"" speed=""65"" route_weight=""65""/>
-			<roadprofile item_types=""street_3_land"" speed=""70"" route_weight=""70""/>
-			<roadprofile item_types=""street_4_land"" speed=""80"" route_weight=""80""/>
-			<roadprofile item_types=""street_n_lanes"" speed=""120"" route_weight=""120""/>
-			<roadprofile item_types=""highway_land"" speed=""120"" route_weight=""120""/>
-			<roadprofile item_types=""ramp"" speed=""40"" route_weight=""40""/>
-			<!--roundabout does not apply to OSMaps -->
-			<roadprofile item_types=""roundabout"" speed=""10"" route_weight=""10""/>
-			<roadprofile item_types=""ferry"" speed=""40"" route_weight=""40""/>
-		</vehicleprofile>
-		<vehicleprofile name=""car_pedantic"" route_depth=""18:25%,18:40000"" flags=""0x4000000"" flags_forward_mask=""0x4000002"" flags_reverse_mask=""0x4000001"" maxspeed_handling=""0"" route_mode=""0"" static_speed=""5"" static_distance=""25"">
-			<roadprofile item_types=""street_0,street_1_city,living_street,street_service,track_gravelled,track_unpaved,street_parking_lane"" speed=""10"" route_weight=""10""/>
-			<roadprofile item_types=""street_2_city,track_paved"" speed=""30"" route_weight=""30""/>
-			<roadprofile item_types=""street_3_city"" speed=""40"" route_weight=""40""/>
-			<roadprofile item_types=""street_4_city"" speed=""50"" route_weight=""50""/>
-			<roadprofile item_types=""highway_city"" speed=""80"" route_weight=""80""/>
-			<roadprofile item_types=""street_1_land"" speed=""60"" route_weight=""60""/>
-			<roadprofile item_types=""street_2_land"" speed=""65"" route_weight=""65""/>
-			<roadprofile item_types=""street_3_land"" speed=""70"" route_weight=""70""/>
-			<roadprofile item_types=""street_4_land"" speed=""80"" route_weight=""80""/>
-			<roadprofile item_types=""street_n_lanes"" speed=""120"" route_weight=""120""/>
-			<roadprofile item_types=""highway_land"" speed=""120"" route_weight=""120""/>
-			<roadprofile item_types=""ramp"" speed=""40"" route_weight=""40""/>
-			<!--roundabout does not apply to OSMaps -->
-			<roadprofile item_types=""roundabout"" speed=""10"" route_weight=""10""/>
-			<roadprofile item_types=""ferry"" speed=""40"" route_weight=""40""/>
-		</vehicleprofile>
-		<vehicleprofile name=""bike"" route_depth=""18:25%,18:40000"" flags=""0x40000000"" flags_forward_mask=""0x40000002"" flags_reverse_mask=""0x40000001"" maxspeed_handling=""1"" route_mode=""0"" static_speed=""5"" static_distance=""25"">
-			<!-- cycleways and paved tracks are the favourite ways (caveat: can be next to a main road) -->
-			<roadprofile item_types=""track_paved,cycleway"" speed=""20"" route_weight=""20"" />
-			<!-- residential, unclassified, living street etc. -->
-			<roadprofile item_types=""street_0,street_1_city,street_1_land,living_street"" speed=""20"" route_weight=""20"" />
-			<!-- ways shared with pedestrians are OK if access flags permit, but lower preference (caveat: may or may not be segregated) -->
-			<roadprofile item_types=""street_pedestrian,footway"" speed=""17"" route_weight=""17"" />
-			<!-- serviceways etc. are OK but lower preference -->
-			<roadprofile item_types=""street_service,street_parking_lane"" speed=""17"" route_weight=""15"" />
-			<!-- tertiary roads are acceptable, but should be avoided in favour of tracks and cycleways -->
-			<roadprofile item_types=""street_2_city,street_2_land"" speed=""20"" route_weight=""15"" />
-			<!-- secondary, primary and trunk are acceptable when necessary, but give preference to lower tiers -->
-			<roadprofile item_types=""street_3_city,street_3_land"" speed=""20"" route_weight=""15"" />
-			<roadprofile item_types=""street_4_land,street_4_city"" speed=""20"" route_weight=""12"" />
-			<roadprofile item_types=""street_n_lanes,ramp"" speed=""20"" route_weight=""10"" />
-			<!-- low preference for rough terrain -->
-			<roadprofile item_types=""path,track_ground"" speed=""7"" route_weight=""7"" />
-			<roadprofile item_types=""track_gravelled"" speed=""17"" route_weight=""12"" />
-			<!-- avoid steps unless that means a huge detour -->
-			<roadprofile item_types=""steps"" speed=""2"" route_weight=""2"" />
-			<!--roundabout does not apply to OSM maps -->
-			<roadprofile item_types=""roundabout"" speed=""20"" route_weight=""10""/>
-			<roadprofile item_types=""ferry"" speed=""40"" route_weight=""40""/>
-		</vehicleprofile>
-
-		<vehicleprofile name=""pedestrian"" route_depth=""18:25%,18:10000"" flags=""0x80000000"" flags_forward_mask=""0x80000000"" flags_reverse_mask=""0x80000000"" maxspeed_handling=""1"" route_mode=""0"" static_speed=""3"" static_distance=""10"">
-			<roadprofile item_types=""footway,bridleway,path,steps"" speed=""5"" route_weight=""5""/>
-			<roadprofile item_types=""hiking_mountain"" speed=""4"" route_weight=""4""/>
-			<roadprofile item_types=""living_street,street_pedestrian"" speed=""5"" route_weight=""5""/>
-			<roadprofile item_types=""track_gravelled,track_unpaved,track_grass,track_ground,hiking"" speed=""5"" route_weight=""5""/>
-			<roadprofile item_types=""track_paved"" speed=""5"" route_weight=""5""/>
-			<roadprofile item_types=""cycleway"" speed=""5"" route_weight=""5""/>
-			<roadprofile item_types=""street_0,street_1_city,street_2_city"" speed=""5"" route_weight=""5""/>
-			<roadprofile item_types=""street_3_city,street_4_city,street_service,street_parking_lane"" speed=""5"" route_weight=""5""/>
-			<roadprofile item_types=""street_1_land,street_2_land"" speed=""5"" route_weight=""5""/>
-			<roadprofile item_types=""street_3_land,street_4_land"" speed=""5"" route_weight=""5""/>
-			<!--roundabout does not apply to OSMaps -->
-			<roadprofile item_types=""roundabout"" speed=""5"" route_weight=""5""/>
-			<roadprofile item_types=""ferry"" speed=""40"" route_weight=""40""/>
-		</vehicleprofile>
-		<vehicleprofile name=""horse"" route_depth=""18:25%,18:40000"" flags=""0x20000000"" flags_forward_mask=""0x20000000"" flags_reverse_mask=""0x20000000"" maxspeed_handling=""1"" route_mode=""0"" static_speed=""3"" static_distance=""10"">
-			<roadprofile item_types=""bridleway"" speed=""10"" route_weight=""10""/>
-			<roadprofile item_types=""footway,path,steps"" speed=""5"" route_weight=""5""/>
-			<roadprofile item_types=""living_street,street_pedestrian"" speed=""5"" route_weight=""4""/>
-			<roadprofile item_types=""track_gravelled"" speed=""5"" route_weight=""5""/>
-			<roadprofile item_types=""track_paved"" speed=""5"" route_weight=""5""/>
-			<roadprofile item_types=""cycleway"" speed=""5"" route_weight=""5""/>
-			<roadprofile item_types=""street_0,street_1_city,street_2_city"" speed=""5"" route_weight=""2""/>
-			<roadprofile item_types=""street_3_city,street_4_city,street_service,street_parking_lane"" speed=""5"" route_weight=""4""/>
-			<roadprofile item_types=""street_1_land,street_2_land"" speed=""5"" route_weight=""2""/>
-			<roadprofile item_types=""street_3_land,street_4_land"" speed=""5"" route_weight=""4""/>
-			<!--roundabout does not apply to OSMaps -->
-			<roadprofile item_types=""roundabout"" speed=""5"" route_weight=""2""/>
-			<roadprofile item_types=""ferry"" speed=""40"" route_weight=""40""/>
-		</vehicleprofile>
-                <!-- chr:
-                     flags used for a truck: (first flag number is 0)
-                                 8: SIZE_OR_WEIGHT_LIMIT
-                                21: TRANSPORT_TRUCK
-                  speed setup:
-                     'speed' data of the vehicleprofile for a car is
-                        reduced about 10 km/h. When the speed was at
-                        10 km/h, I reduced it to 5 km/h.
-                     'route_weight' data has been treated in the same way.
-                        If you want to discourage the use of small roads,
-                        just reduce this value.
-                  size and weight setup:
-                     This is an example, you have to use the data of your truck.
-                     bobshaffer's standard truck:
-                       (1 lb = 453.59237 g, 1 foot = .3048 m)
-                       (data has to be in [cm] and [kg] according to 'vehicleprofile.h')
-                                vehicle_width=  9    feet,   274 cm
-                               vehicle_height= 13.5  feet,   411 cm
-                               vehicle_length= 70    feet,  2134 cm
-                               vehicle_weight= 80000 lbs,  36287 kg
-                          vehicle_axle_weight= 34000 lbs,  15422 kg
-                -->
-
-                <vehicleprofile name=""Truck"" flags=""0x200000"" flags_forward_mask=""0x200002"" flags_reverse_mask=""0x200001"" maxspeed_handling=""1"" route_mode=""0"" static_speed=""5""
- static_distance=""25""
-                                vehicle_width=""274"" vehicle_height=""411"" vehicle_length=""2134""
-                                vehicle_weight=""36287"" vehicle_axle_weight=""15422"">
-                        <roadprofile item_types=""street_0,street_1_city,living_street,street_service,track_gravelled,track_unpaved,street_parking_lane"" speed=""10"" route_weight=""5"" />
-                        <roadprofile item_types=""street_2_city,track_paved"" speed=""20"" route_weight=""20""/>
-                        <roadprofile item_types=""street_3_city"" speed=""30"" route_weight=""30""/>
-                       	<roadprofile item_types=""street_4_city"" speed=""40"" route_weight=""40""/>
-                        <roadprofile item_types=""highway_city"" speed=""70"" route_weight=""70""/>
-                        <roadprofile item_types=""street_1_land"" speed=""50"" route_weight=""50""/>
-                        <roadprofile item_types=""street_2_land"" speed=""55"" route_weight=""55""/>
-                        <roadprofile item_types=""street_3_land"" speed=""60"" route_weight=""60""/>
-                        <roadprofile item_types=""street_4_land"" speed=""70"" route_weight=""70""/>
-                        <roadprofile item_types=""street_n_lanes"" speed=""80"" route_weight=""80""/>
-                        <roadprofile item_types=""highway_land"" speed=""80"" route_weight=""80""/>
-                        <roadprofile item_types=""ramp"" speed=""30"" route_weight=""30""/>
-                        <!--roundabout does not apply to OSMaps -->
-                        <roadprofile item_types=""roundabout"" speed=""5"" route_weight=""5""/>
-                        <roadprofile item_types=""ferry"" speed=""40"" route_weight=""40""/>
-                </vehicleprofile>
-
-
-		<route destination_distance=""50""/>
-
-		<navigation>
-			<announce type=""street_0,street_1_city,street_parking_lane,living_street,street_service"" level0=""25"" level1=""100"" level2=""200"" unit=""m""/>
-			<announce type=""street_2_city,street_3_city,street_4_city,ramp"" level0=""50"" level1=""200"" level2=""500"" unit=""m""/>
-			<announce type=""highway_city,street_1_land,street_2_land,street_3_land,street_4_land"" level0=""100"" level1=""400"" level2=""1000"" unit=""m""/>
-			<announce type=""street_n_lanes,highway_land"" level0=""300"" level1=""1000"" level2=""2000"" unit=""m""/>
-		</navigation>
-
-		<!--
-		Navit provides speech output in text format.
-		If you have a speech synthesizer like festival lite installed, you can get turn by turn directions out of navit. Please set the ""cps""-value to how many characters your tts engine approximately speaks per second.
-		The default is text output to the shell
-		-->
-		<speech type=""cmdline"" data=""say '%s'""/>
-		<!--
-		Instead of using a speech synthesizer, navit can also play pre-recorded samples for each word.
-		See http://wiki.navit-project.org/index.php/Configuration for details.
-
-		<speech type=""cmdline"" data=""aplay -q %s""
-		sample_dir=""/path/to/sampledir"" sample_suffix="".wav"" flags=""1""
-		vocabulary_name=""0"" vocabulary_name_systematic=""0"" vocabulary_distances=""0""/>
-		-->
-
-		<!-- You can only have enabled only one mapset at time, but with as much maps enabled as you want -->
-
-		<!-- If you have the reiseplaner maps installed, set enabled=""yes"" in the next line and set the path correctly -->
-		<mapset enabled=""no"">
-			<map type=""mg"" enabled=""yes"" data=""/opt/reiseplaner/travel/DE.map""/>
-			<map type=""mg"" enabled=""yes"" data=""/opt/reiseplaner/travel/DE.map/smp1.smp""/>
-			<map type=""mg"" enabled=""yes"" data=""/opt/reiseplaner/travel/DE.map/smp2.smp""/>
-			<map type=""mg"" enabled=""yes"" data=""/opt/reiseplaner/travel/DE.map/smp3.smp""/>
-			<map type=""mg"" enabled=""yes"" data=""/opt/reiseplaner/travel/DE.map/smp4.smp""/>
-			<map type=""mg"" enabled=""yes"" data=""/opt/reiseplaner/travel/DE.map/smp5.smp""/>
-		</mapset>
-
-		<!-- If you dont want to use the sample map, either set enabled=""no"" in the next line or remove the xml file from the maps directory -->
-		<mapset enabled=""yes"">
-			<xi:include href=""$NAVIT_SHAREDIR/maps/*.xml""/>
-		</mapset>
-
-		<!-- Mapset template for OpenStreetMap -->
-		<mapset enabled=""no"">
-			<map type=""binfile"" enabled=""yes"" data=""/media/mmc2/MapsNavit/osm_europe.bin""/>
-		</mapset>
-
-		<!-- Mapset template for garmin maps -->
-		<mapset enabled=""no"">
-			<map type=""garmin"" enabled=""yes"" data=""/path/to/img"" debug=""4""/>
-		</mapset>
-
-		<layer name=""Found items"" order=""0-"">
-			<itemgra item_types=""found_item"">
-				<circle color=""#008080"" radius=""24"" width=""2"" text_size=""12""/>
-			</itemgra>
-		</layer>
-
-		<!--
-		Layouts are defined in their own specific XML files and are included below (one file per layout, all files matching the wildcard expression below will be used)
-		The layout files describe the appearance of maps on the screen (colors, width, text fonts and sizes for each type of element to draw)
-		One layout is a specifid theme. At runtime, the user can select only one layout at a time (by choosing the corresponding theme from its name tag defined in the layout XML file).
-		If two layouts with the same name are included, the first one takes precedence.
-		In the list below, we use the user-defined layouts first (in $NAVIT_USER_DATADIR), they take precedence. Being next in the list, the default layouts (in $NAVIT_SHAREDIR) will only be used if there is no user-defined layout that was already defined with the same name.
-		-->
-		<xi:include href=""$NAVIT_USER_DATADIR/navit_layout_*.xml""/>
-		<xi:include href=""$NAVIT_SHAREDIR/navit_layout_*.xml""/>
-		<layout name=""Route"">
-			<layer name=""streets"">
-				<itemgra item_types=""street_route_occluded"" order=""0-"">
-					<polyline color=""#0000a0"" width=""20""/>
-				</itemgra>
-			</layer>
-		</layout>
-	</navit>
-</config>
-",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1097,2021-02-28T16:04:01Z,2021-02-28T16:37:48Z,2021-02-28T16:43:58Z,MERGED,True,8,2,3,https://github.com/mvglasow,Fix:build:Fix F-Droid build,2,[],https://github.com/navit-gps/navit/pull/1097,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/1097,"As discussed with @jkoan on IRC, this fixes the build issues we had on F-Droid (see #1085).
The issues were caused by the toolchain trying to build against host libraries, which doesn’t work when cross-compiling, as is the case for Android. Oddly, this only happened on some build environments, not on others; we never quite figured out why. On those that worked, our bundled support libraries were used. These are essentially stripped-down versions of upstream libraries which aren’t getting a lot of maintenance—a kludge we’d rather avoid having to use and are hoping to get rid of one day.
This fix ensures the correct directories are passed to CMake and pkg-config. A test run of the F-Droid build (on the F-Droid CI setup) has passed.
The changes require NDK when running sanity_check, therefore I had to change the CI config to use the Android image for that step. As a side effect, the navit/sanity_check image might no longer be needed (at least the CI config does not use it any more).","As discussed with @jkoan on IRC, this fixes the build issues we had on F-Droid (see #1085).
The issues were caused by the toolchain trying to build against host libraries, which doesn’t work when cross-compiling, as is the case for Android. Oddly, this only happened on some build environments, not on others; we never quite figured out why. On those that worked, our bundled support libraries were used. These are essentially stripped-down versions of upstream libraries which aren’t getting a lot of maintenance—a kludge we’d rather avoid having to use and are hoping to get rid of one day.
This fix ensures the correct directories are passed to CMake and pkg-config. A test run of the F-Droid build (on the F-Droid CI setup) has passed.
The changes require NDK when running sanity_check, therefore I had to change the CI config to use the Android image for that step. As a side effect, the navit/sanity_check image might no longer be needed (at least the CI config does not use it any more).",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1098,2021-02-28T21:12:55Z,2021-03-01T05:36:51Z,2021-03-01T05:36:51Z,MERGED,True,91,0,2,https://github.com/mvglasow,Add:CI:Add job for F-Droid build,1,[],https://github.com/navit-gps/navit/pull/1098,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/1098,"This adds a new CircleCI job which will build Navit in an F-Droid build environment.
The environment is identical to what F-Droid currently uses for CI. Some changes to the build recipe were necessary (see comments) as the CI image does not fully correspond to the live build server. Therefore, passing CI is no guarantee that this version will build on F-Droid (and vice versa), but it is as close as reasonably possible right now.
On the long run, we could consider dropping the Android build job and instead just signing the output of this job with our key and uploading it to Google Play. However, that is beyond the scope of the present PR.","This adds a new CircleCI job which will build Navit in an F-Droid build environment.
The environment is identical to what F-Droid currently uses for CI. Some changes to the build recipe were necessary (see comments) as the CI image does not fully correspond to the live build server. Therefore, passing CI is no guarantee that this version will build on F-Droid (and vice versa), but it is as close as reasonably possible right now.
On the long run, we could consider dropping the Android build job and instead just signing the output of this job with our key and uploading it to Google Play. However, that is beyond the scope of the present PR.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1099,2021-03-06T06:52:18Z,2021-03-10T07:51:44Z,2021-03-10T07:51:44Z,MERGED,True,6,4,1,https://github.com/OLFDB,FIX: Retry connect after 10 seconds not performed,4,[],https://github.com/navit-gps/navit/pull/1099,https://github.com/OLFDB,1,https://github.com/navit-gps/navit/pull/1099,Set priv->cbt before starting the timer.,Set priv->cbt before starting the timer.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1100,2021-03-06T11:08:14Z,2021-03-06T11:40:28Z,2021-03-06T14:43:09Z,MERGED,True,0,1,1,https://github.com/mvglasow,Refactor:fdroid:Remove build.xml generation,1,[],https://github.com/navit-gps/navit/pull/1100,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/1100,"Replicating a change requested by the F-Droid team, to keep our in-repo recipe in sync with the one on fdroiddata (as far as possible). Turns out build.xml is no longer needed, seems to be an ant leftover.","Replicating a change requested by the F-Droid team, to keep our in-repo recipe in sync with the one on fdroiddata (as far as possible). Turns out build.xml is no longer needed, seems to be an ant leftover.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1106,2021-04-03T06:53:03Z,,2021-07-23T06:21:47Z,OPEN,False,5396,2452,41,https://github.com/OLFDB,Trucknavigation,137,[],https://github.com/navit-gps/navit/pull/1106,https://github.com/OLFDB,1,https://github.com/navit-gps/navit/pull/1106,"The navit routing engine is capable of truck navigation, taking into account sizes and weights (including axle weights) already.
This PR will enable maptool to provide the data needed by the routing engine in the map binfiles.
The truck profile in navit.xml was enhanced by supplying values for turn_around_penalty and turn_around_penalty2 to prevent uturns during routing.","The navit routing engine is capable of truck navigation, taking into account sizes and weights (including axle weights) already.
This PR will enable maptool to provide the data needed by the routing engine in the map binfiles.
The truck profile in navit.xml was enhanced by supplying values for turn_around_penalty and turn_around_penalty2 to prevent uturns during routing.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1106,2021-04-03T06:53:03Z,,2021-07-23T06:21:47Z,OPEN,False,5396,2452,41,https://github.com/OLFDB,Trucknavigation,137,[],https://github.com/navit-gps/navit/pull/1106,https://github.com/OLFDB,2,https://github.com/navit-gps/navit/pull/1106#issuecomment-813013472,"The navit routing engine is capable of truck navigation, taking into account sizes and weights (including axle weights) already.
This PR will enable maptool to provide the data needed by the routing engine in the map binfiles.
The truck profile in navit.xml was enhanced by supplying values for turn_around_penalty and turn_around_penalty2 to prevent uturns during routing.","After converting some maps using maptool: how to handle e.g. below_default for the height? If we convert this height to 0 the way gets not flagged, but it will definitely lead to issues for trucks. We could use a default value of 250 so the way is excluded in truck routing.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1106,2021-04-03T06:53:03Z,,2021-07-23T06:21:47Z,OPEN,False,5396,2452,41,https://github.com/OLFDB,Trucknavigation,137,[],https://github.com/navit-gps/navit/pull/1106,https://github.com/OLFDB,3,https://github.com/navit-gps/navit/pull/1106#issuecomment-817153051,"The navit routing engine is capable of truck navigation, taking into account sizes and weights (including axle weights) already.
This PR will enable maptool to provide the data needed by the routing engine in the map binfiles.
The truck profile in navit.xml was enhanced by supplying values for turn_around_penalty and turn_around_penalty2 to prevent uturns during routing.","Added conditional speed limits. WIP. As for truck routing conditional speed limits are quite common, I added them to maptool and routing. It's still WIP for the parser of conditions, but they are shown at least using a second speed warner.
<osd enabled=""yes"" background_color=""#FFFFFF00"" type=""cond_speed_warner"" w=""110"" h=""110"" x=""78%"" y=""-100%"" font_size=""350"" speed_exceed_limit_offset=""15"" speed_exceed_limit_percent=""10"" announce_on=""1"" label=""txt_only"" name=""cond_speed_warner"" />",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1106,2021-04-03T06:53:03Z,,2021-07-23T06:21:47Z,OPEN,False,5396,2452,41,https://github.com/OLFDB,Trucknavigation,137,[],https://github.com/navit-gps/navit/pull/1106,https://github.com/OLFDB,4,https://github.com/navit-gps/navit/pull/1106#issuecomment-835844410,"The navit routing engine is capable of truck navigation, taking into account sizes and weights (including axle weights) already.
This PR will enable maptool to provide the data needed by the routing engine in the map binfiles.
The truck profile in navit.xml was enhanced by supplying values for turn_around_penalty and turn_around_penalty2 to prevent uturns during routing.","Added vertical meters to the heightline widget in internal gui as that might be of interest planning a route with a truck, or bike, or pedestrian.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1106,2021-04-03T06:53:03Z,,2021-07-23T06:21:47Z,OPEN,False,5396,2452,41,https://github.com/OLFDB,Trucknavigation,137,[],https://github.com/navit-gps/navit/pull/1106,https://github.com/OLFDB,5,https://github.com/navit-gps/navit/pull/1106#issuecomment-840317251,"The navit routing engine is capable of truck navigation, taking into account sizes and weights (including axle weights) already.
This PR will enable maptool to provide the data needed by the routing engine in the map binfiles.
The truck profile in navit.xml was enhanced by supplying values for turn_around_penalty and turn_around_penalty2 to prevent uturns during routing.","Improvements for conditional speed limits. Backward limits are supported as well. Improved gui, now showing icons for danger, hazmat and wet condition. Hazmat conditions shown only if vehicle has hazmat set in it's profile.

<osd enabled=""yes"" background_color=""#FFFFFF00"" color=""#FFFFFFFF""
    type=""cond_speed_warner""
   w=""130"" h=""130"" x=""78%"" y=""-100%"" font_size=""250""
   speed_exceed_limit_offset=""5"" speed_exceed_limit_percent=""10""              
   announce_on=""1"" label=""images:maxspeed_48_48.png:maxspeed_48_48.png:empty.png:stvo_1040_30.png:stvo_1052_30.png:stvo_1053_35.png:stvo_1006_31:"" name=""cond_speed_warner"" />
   <!--										 CONDITION        HAZARD	   WET		    DANGER         -->




Routing recognizing low emission zones
Thanks to mvglasow for his proposals for the algorithms to find intersections of a line with a polygon. I'm still trying to get routing to recognize the low emission zones. route value for segments in lez is INT_MAX which should result in blocked route if route ends in a lez. I have tested with a small map of Berlin only, so there is only one lez in the map.
I'm reading the lez polygon in route_graph_add_street and searching intersection with current segment in route_graph_add_segment. For detection I took the line_intersection function from gui_internal.c. It detects intersections, but a route is still calculated.
Any hint would be appreciated.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1106,2021-04-03T06:53:03Z,,2021-07-23T06:21:47Z,OPEN,False,5396,2452,41,https://github.com/OLFDB,Trucknavigation,137,[],https://github.com/navit-gps/navit/pull/1106,https://github.com/OLFDB,6,https://github.com/navit-gps/navit/pull/1106#issuecomment-846548856,"The navit routing engine is capable of truck navigation, taking into account sizes and weights (including axle weights) already.
This PR will enable maptool to provide the data needed by the routing engine in the map binfiles.
The truck profile in navit.xml was enhanced by supplying values for turn_around_penalty and turn_around_penalty2 to prevent uturns during routing.","Finally the routing taking into account the low emissions zones is working.
I think the PR is finished now.

  
    
    

    Bildschirmaufnahme.mov",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1106,2021-04-03T06:53:03Z,,2021-07-23T06:21:47Z,OPEN,False,5396,2452,41,https://github.com/OLFDB,Trucknavigation,137,[],https://github.com/navit-gps/navit/pull/1106,https://github.com/OLFDB,7,https://github.com/navit-gps/navit/pull/1106#issuecomment-885419868,"The navit routing engine is capable of truck navigation, taking into account sizes and weights (including axle weights) already.
This PR will enable maptool to provide the data needed by the routing engine in the map binfiles.
The truck profile in navit.xml was enhanced by supplying values for turn_around_penalty and turn_around_penalty2 to prevent uturns during routing.","Good work. I'm looking forward for the low emmission zones, as those can be very interesting on map.

@metalstrolch: When testing with larger maps having more than one low emission zone, the detection of the lezs is not working properly. I think I need somehow to have a reference to the tiles containing the lez to be able to select the correct polygon to test against during route calculation. Could you help me with that? Maybe it would also be a good idea to flag each street if it is in an lez in maptool. That would improve performance during route calculation later.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1107,2021-04-03T15:33:45Z,2021-04-03T15:34:01Z,2021-04-03T19:06:02Z,MERGED,True,1,1,1,https://github.com/mvglasow,Fix:ci:Fix fdroidserver download path,1,[],https://github.com/navit-gps/navit/pull/1107,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/1107,Fixes #1105,Fixes #1105,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1107,2021-04-03T15:33:45Z,2021-04-03T15:34:01Z,2021-04-03T19:06:02Z,MERGED,True,1,1,1,https://github.com/mvglasow,Fix:ci:Fix fdroidserver download path,1,[],https://github.com/navit-gps/navit/pull/1107,https://github.com/mvglasow,2,https://github.com/navit-gps/navit/pull/1107#issuecomment-812912006,Fixes #1105,"btw, I just saw F-Droid has done the same thing, see https://gitlab.com/fdroid/fdroiddata/-/commit/c4c446b98dfa8806d48acc9d2323322017dc3ae0",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1109,2021-04-11T18:16:52Z,2021-04-11T18:35:30Z,2021-04-11T18:59:11Z,MERGED,True,2,1,1,https://github.com/metalstrolch,Fix:vehicle:geoclue Fix cmake usage,1,[],https://github.com/navit-gps/navit/pull/1109,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/1109,The cmake statement for geoclue vehicle wrongly passes the header paths to the add library statement. It should pass the library paths instead.,The cmake statement for geoclue vehicle wrongly passes the header paths to the add library statement. It should pass the library paths instead.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1111,2021-04-17T05:38:18Z,2021-04-26T19:05:08Z,2021-04-26T19:05:08Z,MERGED,True,9,0,1,https://github.com/OLFDB, Added minimum dependencies for Raspberry Pi OS,3,[],https://github.com/navit-gps/navit/pull/1111,https://github.com/OLFDB,1,https://github.com/navit-gps/navit/pull/1111,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1114,2021-04-24T21:22:39Z,2021-04-24T21:49:19Z,2021-04-24T21:49:25Z,MERGED,True,1,1,1,https://github.com/mvglasow,Fix:core:Fix read after free in traffic_message_restore_segments,1,[],https://github.com/navit-gps/navit/pull/1114,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/1114,"Found while investigating #1113, though it was not the cause of the issue","Found while investigating #1113, though it was not the cause of the issue",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1115,2021-04-26T20:19:04Z,2021-04-26T21:29:57Z,2021-04-26T21:30:02Z,MERGED,True,35,9,3,https://github.com/mvglasow,Fix issues resulting in ignored traffic messages,6,[],https://github.com/navit-gps/navit/pull/1115,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/1115,Fixes #1113.,Fixes #1113.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1116,2021-04-27T18:15:40Z,2021-04-27T18:28:13Z,2021-04-27T18:28:22Z,MERGED,True,5,11,1,https://github.com/mvglasow,Fix:core:Do not recalculate delay when restoring traffic distortion items,1,[],https://github.com/navit-gps/navit/pull/1116,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/1116,"Currently, Navit attempts to recalculate delays per segment when restoring them from traffic.xml. This is both unnecessary (as the stored delay can be used for all purposes) and buggy (for some reason length calculations, which are used to distribute the total delay across segments, are inaccurate, and there are further issues when delays are bidirectional).
In short, simply taking the stored delay fixes any issues with delays changing when restoring items, and decreases the complexity of the code.","Currently, Navit attempts to recalculate delays per segment when restoring them from traffic.xml. This is both unnecessary (as the stored delay can be used for all purposes) and buggy (for some reason length calculations, which are used to distribute the total delay across segments, are inaccurate, and there are further issues when delays are bidirectional).
In short, simply taking the stored delay fixes any issues with delays changing when restoring items, and decreases the complexity of the code.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1121,2021-05-08T05:17:56Z,2021-08-28T18:35:46Z,2021-08-28T18:35:46Z,MERGED,True,5,2,1,https://github.com/OLFDB,Fix #1119,4,[],https://github.com/navit-gps/navit/pull/1121,https://github.com/OLFDB,1,https://github.com/navit-gps/navit/pull/1121,"Address #1119. Use the default icons when no icon_src is provided, or the user icons can't be found. Update wiki describtion.
Can somebody update the OSD wiki page as the toggle announcer is not described on ReadTheDocs yet?
==toggle_announcer==
[[File:toggle_announcer.png]] Displays a button to enable/disable speech output.



You can specify custom bitmaps for the icon: Create two bitmap files named '''gui_sound_on.png''' and '''gui_sound_off.png'''. Then modify your OSD entry like this:
<source lang=""xml"">
<osd enabled=""yes"" type=""toggle_announcer"" x=""-65"" y=""95"" w=""60"" h=""60"" icon_src=""/path/to/gui_%s.png""/>
</source>

(replacing /path/to with the path to the two files).
Other filenames will also work, as long as both filenames follow a common format, distinguished only by ''sound_on'' vs. ''sound_off'' at the end of the filename. The part ""%s"" will be replaced with one of these two strings when loading the images.","Address #1119. Use the default icons when no icon_src is provided, or the user icons can't be found. Update wiki describtion.
Can somebody update the OSD wiki page as the toggle announcer is not described on ReadTheDocs yet?
==toggle_announcer==
[[File:toggle_announcer.png]] Displays a button to enable/disable speech output.



You can specify custom bitmaps for the icon: Create two bitmap files named '''gui_sound_on.png''' and '''gui_sound_off.png'''. Then modify your OSD entry like this:
<source lang=""xml"">
<osd enabled=""yes"" type=""toggle_announcer"" x=""-65"" y=""95"" w=""60"" h=""60"" icon_src=""/path/to/gui_%s.png""/>
</source>

(replacing /path/to with the path to the two files).
Other filenames will also work, as long as both filenames follow a common format, distinguished only by ''sound_on'' vs. ''sound_off'' at the end of the filename. The part ""%s"" will be replaced with one of these two strings when loading the images.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1122,2021-05-22T13:03:53Z,2021-05-23T18:38:44Z,2021-05-24T06:30:55Z,MERGED,True,4,0,2,https://github.com/okias,cmake: fix in-tree cmake build circular dependency warnings ,1,[],https://github.com/navit-gps/navit/pull/1122,https://github.com/okias,1,https://github.com/navit-gps/navit/pull/1122,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1122,2021-05-22T13:03:53Z,2021-05-23T18:38:44Z,2021-05-24T06:30:55Z,MERGED,True,4,0,2,https://github.com/okias,cmake: fix in-tree cmake build circular dependency warnings ,1,[],https://github.com/navit-gps/navit/pull/1122,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/1122#issuecomment-846606457,,thx a lot :-),True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1124,2021-05-29T14:00:12Z,,2022-03-20T05:50:15Z,OPEN,False,4219,1251,65,https://github.com/OLFDB,iOS build,170,[],https://github.com/navit-gps/navit/pull/1124,https://github.com/OLFDB,1,https://github.com/navit-gps/navit/pull/1124,"This PR is to get a working iOS build.
Tested on iPhone 6 Plus, iPhone 8 with iOS 14.6. Fullscreen is not working yet, but app is fully usable.
Tested with iPad2 and iPhone 4S for armv7 architecture using SDK 10.3. Fullscreen working, but resizing issues when rotating.
Issue with speech rate (too fast).
Tested with simulator
Pan/pinch/tap is supported.
New Xcode buildsystem is now supported.
The method to draw text needed to be changed from CGContextShowTextAtPoint to drawAtPoint to have UTF-8 characters being displayed. Before the Cyrillic and Greek keyboard were not usable at all. Unfortunately I have not been able to figure out how to apply the transformation to this kind of drawing text. I have opened a question on stackoverflow.com on that.
Currently all labels are drawn horizontally on the map. In favor of having a fully functional keyboard, I decided to keep the current solution until there is an answer.
Speech is using either HFP, or A2DP. When playing background music on the phone it uses A2DP, when no background music is playing it uses HFP, assuming that the user is listening to some other audio source on the radio. This will allow navigation announcements to mute the radio playback and being heard.
There is a new attribute for navit.xml that can be used to force HFP to be used always, or never:
Always use HFP:
<speech type=""iphone"" speech_use_hfp=""1"">
Never use HFP:
<speech type=""iphone"" speech_use_hfp=""0"">
How to build
Have Xcode installed (tested with 12.5).
clone repo
cd navit
mkdir build
cd build

As HFP needs time to setup the connection and this is highly depending on the used hardware there is a new attribute to configure the delay in ms in the speech tag in navit.xml
speech_hfp_delay
The graphics support scaling of images now.
Background processing is now supported with very low CPU load. Routing announcements are spoken as usual.
CMake Commands
iOS with current SDK
cmake -G Xcode ../ -DCMAKE_TOOLCHAIN_FILE=../Toolchain/xcode-iphone_new.cmake -DUSE_PLUGINS=0 -DBUILD_MAPTOOL=0 -DSAMPLE_MAP=0 -DXSLTS=iphone -DUSE_UIKIT=1 -DDEVELOPMENT_TEAM_ID=""<enter your team id>"" -DCODE_SIGN_IDENTITY=""iPhone Developer"" 

iOS9.2 with SDK 10.3
For older devices with arm7 (e.g. iPad2) download https://download.developer.apple.com/Developer_Tools/Xcode_8.3.3/Xcode_8.3.3.xip
Unzip the file and provide the path to Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer in the cmake command line as CMAKE_IOS_DEVELOPER_ROOT.
cmake -G Xcode ../ -DCMAKE_TOOLCHAIN_FILE=../Toolchain/xcode-iphone_new.cmake -DUSE_PLUGINS=0 -DBUILD_MAPTOOL=0 -DSAMPLE_MAP=0 -DXSLTS=iphone -DUSE_UIKIT=1 -DDEVELOPMENT_TEAM_ID=""<enter your team id>"" -DCODE_SIGN_IDENTITY=""iPhone Developer"" -DCMAKE_IOS_DEVELOPER_ROOT=""/Volumes/Data/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer"" -IOS_ARCH=""armv7"" -DIPHONEOS_DEPLOYMENT_TARGET=""9.2"" 

Simulator
cmake -G Xcode ../ -DCMAKE_TOOLCHAIN_FILE=../Toolchain/xcode-iphone_new.cmake -DUSE_PLUGINS=0 -DBUILD_MAPTOOL=0 -DSAMPLE_MAP=0 -DXSLTS=iphone -DUSE_UIKIT=1 -DDEVELOPMENT_TEAM_ID=""<enter your team id>"" -DCODE_SIGN_IDENTITY=""iPhone Developer"" -DIOS_PLATFORM=SIMULATOR 


Open navit.xcodeproj in build directory with Xcode.
Build in Xcode.

  
    
    

    navitiOS.mov","This PR is to get a working iOS build.
Tested on iPhone 6 Plus, iPhone 8 with iOS 14.6. Fullscreen is not working yet, but app is fully usable.
Tested with iPad2 and iPhone 4S for armv7 architecture using SDK 10.3. Fullscreen working, but resizing issues when rotating.
Issue with speech rate (too fast).
Tested with simulator
Pan/pinch/tap is supported.
New Xcode buildsystem is now supported.
The method to draw text needed to be changed from CGContextShowTextAtPoint to drawAtPoint to have UTF-8 characters being displayed. Before the Cyrillic and Greek keyboard were not usable at all. Unfortunately I have not been able to figure out how to apply the transformation to this kind of drawing text. I have opened a question on stackoverflow.com on that.
Currently all labels are drawn horizontally on the map. In favor of having a fully functional keyboard, I decided to keep the current solution until there is an answer.
Speech is using either HFP, or A2DP. When playing background music on the phone it uses A2DP, when no background music is playing it uses HFP, assuming that the user is listening to some other audio source on the radio. This will allow navigation announcements to mute the radio playback and being heard.
There is a new attribute for navit.xml that can be used to force HFP to be used always, or never:
Always use HFP:
<speech type=""iphone"" speech_use_hfp=""1"">
Never use HFP:
<speech type=""iphone"" speech_use_hfp=""0"">
How to build
Have Xcode installed (tested with 12.5).
clone repo
cd navit
mkdir build
cd build

As HFP needs time to setup the connection and this is highly depending on the used hardware there is a new attribute to configure the delay in ms in the speech tag in navit.xml
speech_hfp_delay
The graphics support scaling of images now.
Background processing is now supported with very low CPU load. Routing announcements are spoken as usual.
CMake Commands
iOS with current SDK
cmake -G Xcode ../ -DCMAKE_TOOLCHAIN_FILE=../Toolchain/xcode-iphone_new.cmake -DUSE_PLUGINS=0 -DBUILD_MAPTOOL=0 -DSAMPLE_MAP=0 -DXSLTS=iphone -DUSE_UIKIT=1 -DDEVELOPMENT_TEAM_ID=""<enter your team id>"" -DCODE_SIGN_IDENTITY=""iPhone Developer"" 

iOS9.2 with SDK 10.3
For older devices with arm7 (e.g. iPad2) download https://download.developer.apple.com/Developer_Tools/Xcode_8.3.3/Xcode_8.3.3.xip
Unzip the file and provide the path to Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer in the cmake command line as CMAKE_IOS_DEVELOPER_ROOT.
cmake -G Xcode ../ -DCMAKE_TOOLCHAIN_FILE=../Toolchain/xcode-iphone_new.cmake -DUSE_PLUGINS=0 -DBUILD_MAPTOOL=0 -DSAMPLE_MAP=0 -DXSLTS=iphone -DUSE_UIKIT=1 -DDEVELOPMENT_TEAM_ID=""<enter your team id>"" -DCODE_SIGN_IDENTITY=""iPhone Developer"" -DCMAKE_IOS_DEVELOPER_ROOT=""/Volumes/Data/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer"" -IOS_ARCH=""armv7"" -DIPHONEOS_DEPLOYMENT_TARGET=""9.2"" 

Simulator
cmake -G Xcode ../ -DCMAKE_TOOLCHAIN_FILE=../Toolchain/xcode-iphone_new.cmake -DUSE_PLUGINS=0 -DBUILD_MAPTOOL=0 -DSAMPLE_MAP=0 -DXSLTS=iphone -DUSE_UIKIT=1 -DDEVELOPMENT_TEAM_ID=""<enter your team id>"" -DCODE_SIGN_IDENTITY=""iPhone Developer"" -DIOS_PLATFORM=SIMULATOR 


Open navit.xcodeproj in build directory with Xcode.
Build in Xcode.

  
    
    

    navitiOS.mov",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1124,2021-05-29T14:00:12Z,,2022-03-20T05:50:15Z,OPEN,False,4219,1251,65,https://github.com/OLFDB,iOS build,170,[],https://github.com/navit-gps/navit/pull/1124,https://github.com/lains,2,https://github.com/navit-gps/navit/pull/1124#issuecomment-851649494,"This PR is to get a working iOS build.
Tested on iPhone 6 Plus, iPhone 8 with iOS 14.6. Fullscreen is not working yet, but app is fully usable.
Tested with iPad2 and iPhone 4S for armv7 architecture using SDK 10.3. Fullscreen working, but resizing issues when rotating.
Issue with speech rate (too fast).
Tested with simulator
Pan/pinch/tap is supported.
New Xcode buildsystem is now supported.
The method to draw text needed to be changed from CGContextShowTextAtPoint to drawAtPoint to have UTF-8 characters being displayed. Before the Cyrillic and Greek keyboard were not usable at all. Unfortunately I have not been able to figure out how to apply the transformation to this kind of drawing text. I have opened a question on stackoverflow.com on that.
Currently all labels are drawn horizontally on the map. In favor of having a fully functional keyboard, I decided to keep the current solution until there is an answer.
Speech is using either HFP, or A2DP. When playing background music on the phone it uses A2DP, when no background music is playing it uses HFP, assuming that the user is listening to some other audio source on the radio. This will allow navigation announcements to mute the radio playback and being heard.
There is a new attribute for navit.xml that can be used to force HFP to be used always, or never:
Always use HFP:
<speech type=""iphone"" speech_use_hfp=""1"">
Never use HFP:
<speech type=""iphone"" speech_use_hfp=""0"">
How to build
Have Xcode installed (tested with 12.5).
clone repo
cd navit
mkdir build
cd build

As HFP needs time to setup the connection and this is highly depending on the used hardware there is a new attribute to configure the delay in ms in the speech tag in navit.xml
speech_hfp_delay
The graphics support scaling of images now.
Background processing is now supported with very low CPU load. Routing announcements are spoken as usual.
CMake Commands
iOS with current SDK
cmake -G Xcode ../ -DCMAKE_TOOLCHAIN_FILE=../Toolchain/xcode-iphone_new.cmake -DUSE_PLUGINS=0 -DBUILD_MAPTOOL=0 -DSAMPLE_MAP=0 -DXSLTS=iphone -DUSE_UIKIT=1 -DDEVELOPMENT_TEAM_ID=""<enter your team id>"" -DCODE_SIGN_IDENTITY=""iPhone Developer"" 

iOS9.2 with SDK 10.3
For older devices with arm7 (e.g. iPad2) download https://download.developer.apple.com/Developer_Tools/Xcode_8.3.3/Xcode_8.3.3.xip
Unzip the file and provide the path to Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer in the cmake command line as CMAKE_IOS_DEVELOPER_ROOT.
cmake -G Xcode ../ -DCMAKE_TOOLCHAIN_FILE=../Toolchain/xcode-iphone_new.cmake -DUSE_PLUGINS=0 -DBUILD_MAPTOOL=0 -DSAMPLE_MAP=0 -DXSLTS=iphone -DUSE_UIKIT=1 -DDEVELOPMENT_TEAM_ID=""<enter your team id>"" -DCODE_SIGN_IDENTITY=""iPhone Developer"" -DCMAKE_IOS_DEVELOPER_ROOT=""/Volumes/Data/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer"" -IOS_ARCH=""armv7"" -DIPHONEOS_DEPLOYMENT_TARGET=""9.2"" 

Simulator
cmake -G Xcode ../ -DCMAKE_TOOLCHAIN_FILE=../Toolchain/xcode-iphone_new.cmake -DUSE_PLUGINS=0 -DBUILD_MAPTOOL=0 -DSAMPLE_MAP=0 -DXSLTS=iphone -DUSE_UIKIT=1 -DDEVELOPMENT_TEAM_ID=""<enter your team id>"" -DCODE_SIGN_IDENTITY=""iPhone Developer"" -DIOS_PLATFORM=SIMULATOR 


Open navit.xcodeproj in build directory with Xcode.
Build in Xcode.

  
    
    

    navitiOS.mov","Great job. Thanks. I'm looking forward to testing this.
It would even be great to get a compilation job for iOS in CircleCI.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1124,2021-05-29T14:00:12Z,,2022-03-20T05:50:15Z,OPEN,False,4219,1251,65,https://github.com/OLFDB,iOS build,170,[],https://github.com/navit-gps/navit/pull/1124,https://github.com/jkoan,3,https://github.com/navit-gps/navit/pull/1124#issuecomment-851668416,"This PR is to get a working iOS build.
Tested on iPhone 6 Plus, iPhone 8 with iOS 14.6. Fullscreen is not working yet, but app is fully usable.
Tested with iPad2 and iPhone 4S for armv7 architecture using SDK 10.3. Fullscreen working, but resizing issues when rotating.
Issue with speech rate (too fast).
Tested with simulator
Pan/pinch/tap is supported.
New Xcode buildsystem is now supported.
The method to draw text needed to be changed from CGContextShowTextAtPoint to drawAtPoint to have UTF-8 characters being displayed. Before the Cyrillic and Greek keyboard were not usable at all. Unfortunately I have not been able to figure out how to apply the transformation to this kind of drawing text. I have opened a question on stackoverflow.com on that.
Currently all labels are drawn horizontally on the map. In favor of having a fully functional keyboard, I decided to keep the current solution until there is an answer.
Speech is using either HFP, or A2DP. When playing background music on the phone it uses A2DP, when no background music is playing it uses HFP, assuming that the user is listening to some other audio source on the radio. This will allow navigation announcements to mute the radio playback and being heard.
There is a new attribute for navit.xml that can be used to force HFP to be used always, or never:
Always use HFP:
<speech type=""iphone"" speech_use_hfp=""1"">
Never use HFP:
<speech type=""iphone"" speech_use_hfp=""0"">
How to build
Have Xcode installed (tested with 12.5).
clone repo
cd navit
mkdir build
cd build

As HFP needs time to setup the connection and this is highly depending on the used hardware there is a new attribute to configure the delay in ms in the speech tag in navit.xml
speech_hfp_delay
The graphics support scaling of images now.
Background processing is now supported with very low CPU load. Routing announcements are spoken as usual.
CMake Commands
iOS with current SDK
cmake -G Xcode ../ -DCMAKE_TOOLCHAIN_FILE=../Toolchain/xcode-iphone_new.cmake -DUSE_PLUGINS=0 -DBUILD_MAPTOOL=0 -DSAMPLE_MAP=0 -DXSLTS=iphone -DUSE_UIKIT=1 -DDEVELOPMENT_TEAM_ID=""<enter your team id>"" -DCODE_SIGN_IDENTITY=""iPhone Developer"" 

iOS9.2 with SDK 10.3
For older devices with arm7 (e.g. iPad2) download https://download.developer.apple.com/Developer_Tools/Xcode_8.3.3/Xcode_8.3.3.xip
Unzip the file and provide the path to Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer in the cmake command line as CMAKE_IOS_DEVELOPER_ROOT.
cmake -G Xcode ../ -DCMAKE_TOOLCHAIN_FILE=../Toolchain/xcode-iphone_new.cmake -DUSE_PLUGINS=0 -DBUILD_MAPTOOL=0 -DSAMPLE_MAP=0 -DXSLTS=iphone -DUSE_UIKIT=1 -DDEVELOPMENT_TEAM_ID=""<enter your team id>"" -DCODE_SIGN_IDENTITY=""iPhone Developer"" -DCMAKE_IOS_DEVELOPER_ROOT=""/Volumes/Data/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer"" -IOS_ARCH=""armv7"" -DIPHONEOS_DEPLOYMENT_TARGET=""9.2"" 

Simulator
cmake -G Xcode ../ -DCMAKE_TOOLCHAIN_FILE=../Toolchain/xcode-iphone_new.cmake -DUSE_PLUGINS=0 -DBUILD_MAPTOOL=0 -DSAMPLE_MAP=0 -DXSLTS=iphone -DUSE_UIKIT=1 -DDEVELOPMENT_TEAM_ID=""<enter your team id>"" -DCODE_SIGN_IDENTITY=""iPhone Developer"" -DIOS_PLATFORM=SIMULATOR 


Open navit.xcodeproj in build directory with Xcode.
Build in Xcode.

  
    
    

    navitiOS.mov","It would even be great to get a compilation job for iOS in CircleCI.

Yep, this is planned from me for macos and iOS, but with GitHub actions. The main question is what developer ID we can use/ how to handle it/if it's possible to generate an own one. So mostly infrastructure for the ci build",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1125,2021-06-20T17:56:39Z,2021-06-20T18:51:04Z,2021-06-21T05:27:00Z,MERGED,True,4,3,2,https://github.com/mvglasow,Make file picker compatible with Android 11,2,[],https://github.com/navit-gps/navit/pull/1125,https://github.com/mvglasow,1,https://github.com/navit-gps/navit/pull/1125,"As mentioned in #1117:

Default location for file picker is Navit’s private shared storage dir (/sdcard/Android/data/org.navitproject.navit/files), which is not affected by restrictions introduced with Android 11
When the selected path contains Navit’s package ID, it is applied as-is (rather than appending /navit) – this is the same behavior as for paths including /navit, the assumption being that we are already in a Navit-specific part of the filesystem","As mentioned in #1117:

Default location for file picker is Navit’s private shared storage dir (/sdcard/Android/data/org.navitproject.navit/files), which is not affected by restrictions introduced with Android 11
When the selected path contains Navit’s package ID, it is applied as-is (rather than appending /navit) – this is the same behavior as for paths including /navit, the assumption being that we are already in a Navit-specific part of the filesystem",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1125,2021-06-20T17:56:39Z,2021-06-20T18:51:04Z,2021-06-21T05:27:00Z,MERGED,True,4,3,2,https://github.com/mvglasow,Make file picker compatible with Android 11,2,[],https://github.com/navit-gps/navit/pull/1125,https://github.com/mvglasow,2,https://github.com/navit-gps/navit/pull/1125#issuecomment-864607496,"As mentioned in #1117:

Default location for file picker is Navit’s private shared storage dir (/sdcard/Android/data/org.navitproject.navit/files), which is not affected by restrictions introduced with Android 11
When the selected path contains Navit’s package ID, it is applied as-is (rather than appending /navit) – this is the same behavior as for paths including /navit, the assumption being that we are already in a Navit-specific part of the filesystem","Thanks for merging! Seems something failed on CircleCI though, as the wince build failed, thus the changes didn’t make it into trunk yet. Any ideas?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1125,2021-06-20T17:56:39Z,2021-06-20T18:51:04Z,2021-06-21T05:27:00Z,MERGED,True,4,3,2,https://github.com/mvglasow,Make file picker compatible with Android 11,2,[],https://github.com/navit-gps/navit/pull/1125,https://github.com/jkoan,3,https://github.com/navit-gps/navit/pull/1125#issuecomment-864738242,"As mentioned in #1117:

Default location for file picker is Navit’s private shared storage dir (/sdcard/Android/data/org.navitproject.navit/files), which is not affected by restrictions introduced with Android 11
When the selected path contains Navit’s package ID, it is applied as-is (rather than appending /navit) – this is the same behavior as for paths including /navit, the assumption being that we are already in a Navit-specific part of the filesystem","I have seen this as well, but so far no clue",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1125,2021-06-20T17:56:39Z,2021-06-20T18:51:04Z,2021-06-21T05:27:00Z,MERGED,True,4,3,2,https://github.com/mvglasow,Make file picker compatible with Android 11,2,[],https://github.com/navit-gps/navit/pull/1125,https://github.com/jkoan,4,https://github.com/navit-gps/navit/pull/1125#issuecomment-864739097,"As mentioned in #1117:

Default location for file picker is Navit’s private shared storage dir (/sdcard/Android/data/org.navitproject.navit/files), which is not affected by restrictions introduced with Android 11
When the selected path contains Navit’s package ID, it is applied as-is (rather than appending /navit) – this is the same behavior as for paths including /navit, the assumption being that we are already in a Navit-specific part of the filesystem","Ah got it, SSL error because the wince image has really old dependency's:
Unable to establish SSL connection.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1129,2021-07-14T23:10:26Z,2021-07-15T04:15:59Z,2021-07-15T07:17:33Z,MERGED,True,11,0,1,https://github.com/metalstrolch,fix:maptool: filter out unknown multipolygons before processing,1,[],https://github.com/navit-gps/navit/pull/1129,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/1129,"This commit causes maptool to filter out multipolygon relations
whose tags result in unknown binfile type before processing them
if -n is given on command line. May save a lot of processing time.","This commit causes maptool to filter out multipolygon relations
whose tags result in unknown binfile type before processing them
if -n is given on command line. May save a lot of processing time.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1134,2021-08-11T16:39:30Z,,2021-10-22T08:18:45Z,OPEN,False,548,70,20,https://github.com/hoehnp,"WiP, trying to work again on the cURL based download from pgrandin",38,[],https://github.com/navit-gps/navit/pull/1134,https://github.com/hoehnp,1,https://github.com/navit-gps/navit/pull/1134,"When looking at #1112, I discussed with @jkoan and decided maybe best way would be to try to finally get this code to a mergable state. Hopefully then we can download all maps on all our platforms without much hastle.","When looking at #1112, I discussed with @jkoan and decided maybe best way would be to try to finally get this code to a mergable state. Hopefully then we can download all maps on all our platforms without much hastle.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1136,2021-08-28T11:32:36Z,2021-08-31T10:15:10Z,2021-08-31T10:15:10Z,MERGED,True,22,0,1,https://github.com/OLFDB,Fix #1135,4,[],https://github.com/navit-gps/navit/pull/1136,https://github.com/OLFDB,1,https://github.com/navit-gps/navit/pull/1136,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1137,2021-08-28T11:46:25Z,2021-08-28T18:34:24Z,2021-09-21T20:08:20Z,MERGED,True,4,0,1,https://github.com/OLFDB,Add position_valid attribute to gpsd,3,[],https://github.com/navit-gps/navit/pull/1137,https://github.com/OLFDB,1,https://github.com/navit-gps/navit/pull/1137,,,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1140,2021-08-31T15:59:06Z,2021-08-31T22:57:49Z,2021-08-31T22:58:02Z,MERGED,True,22,712,4,https://github.com/jkoan,rework:graphics:win32:Rework win32 drawing,1,[],https://github.com/navit-gps/navit/pull/1140,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/1140,"This PR resolves #575
In order to remove the Unicode Sourcecode the used function was replaced by the Windows Function MultiByteToWideChar","This PR resolves #575
In order to remove the Unicode Sourcecode the used function was replaced by the Windows Function MultiByteToWideChar",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1140,2021-08-31T15:59:06Z,2021-08-31T22:57:49Z,2021-08-31T22:58:02Z,MERGED,True,22,712,4,https://github.com/jkoan,rework:graphics:win32:Rework win32 drawing,1,[],https://github.com/navit-gps/navit/pull/1140,https://github.com/aerostitch,2,https://github.com/navit-gps/navit/pull/1140#issuecomment-909709261,"This PR resolves #575
In order to remove the Unicode Sourcecode the used function was replaced by the Windows Function MultiByteToWideChar",Thanks!,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1142,2021-09-01T19:57:10Z,2021-09-13T09:36:51Z,2022-05-24T11:37:38Z,MERGED,True,7,13,3,https://github.com/metalstrolch,Fix:core: cancel drawing on resize request,4,[],https://github.com/navit-gps/navit/pull/1142,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/1142,"This commit causes navit to cancel async drawing in case of resize
request. Drawing is started again after that. this should effectively
cause a redraw on subsequent calls to resize. Some graphics like qt5
call resize for both dimension changes if the widget gets resized.","This commit causes navit to cancel async drawing in case of resize
request. Drawing is started again after that. this should effectively
cause a redraw on subsequent calls to resize. Some graphics like qt5
call resize for both dimension changes if the widget gets resized.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1142,2021-09-01T19:57:10Z,2021-09-13T09:36:51Z,2022-05-24T11:37:38Z,MERGED,True,7,13,3,https://github.com/metalstrolch,Fix:core: cancel drawing on resize request,4,[],https://github.com/navit-gps/navit/pull/1142,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/1142#issuecomment-910734803,"This commit causes navit to cancel async drawing in case of resize
request. Drawing is started again after that. this should effectively
cause a redraw on subsequent calls to resize. Some graphics like qt5
call resize for both dimension changes if the widget gets resized.","Added a fix to remove garbage displaying on qt5 after resize until navit finally finishes the redraw. This has nothing to do with the initial fix, except removing the garbage.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1142,2021-09-01T19:57:10Z,2021-09-13T09:36:51Z,2022-05-24T11:37:38Z,MERGED,True,7,13,3,https://github.com/metalstrolch,Fix:core: cancel drawing on resize request,4,[],https://github.com/navit-gps/navit/pull/1142,https://github.com/metalstrolch,3,https://github.com/navit-gps/navit/pull/1142#issuecomment-910743333,"This commit causes navit to cancel async drawing in case of resize
request. Drawing is started again after that. this should effectively
cause a redraw on subsequent calls to resize. Some graphics like qt5
call resize for both dimension changes if the widget gets resized.",Fixes at least the oddities on screen rotation on sailfish os.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1142,2021-09-01T19:57:10Z,2021-09-13T09:36:51Z,2022-05-24T11:37:38Z,MERGED,True,7,13,3,https://github.com/metalstrolch,Fix:core: cancel drawing on resize request,4,[],https://github.com/navit-gps/navit/pull/1142,https://github.com/jkoan,4,https://github.com/navit-gps/navit/pull/1142#issuecomment-910747074,"This commit causes navit to cancel async drawing in case of resize
request. Drawing is started again after that. this should effectively
cause a redraw on subsequent calls to resize. Some graphics like qt5
call resize for both dimension changes if the widget gets resized.",I recently developed some things related to graphics as well and I think this could fix the biggest problem I encountered. Will test this soon. Thanks for the great work,True,{'HEART': ['https://github.com/metalstrolch']}
navit-gps/navit,https://github.com/navit-gps/navit,1142,2021-09-01T19:57:10Z,2021-09-13T09:36:51Z,2022-05-24T11:37:38Z,MERGED,True,7,13,3,https://github.com/metalstrolch,Fix:core: cancel drawing on resize request,4,[],https://github.com/navit-gps/navit/pull/1142,https://github.com/jkoan,5,https://github.com/navit-gps/navit/pull/1142#issuecomment-914534825,"This commit causes navit to cancel async drawing in case of resize
request. Drawing is started again after that. this should effectively
cause a redraw on subsequent calls to resize. Some graphics like qt5
call resize for both dimension changes if the widget gets resized.","I couldn't actually reproduce any wrong behavior. Could you help me with reproducing the error on graphics other than qt5, or at least how to trigger it generally?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1142,2021-09-01T19:57:10Z,2021-09-13T09:36:51Z,2022-05-24T11:37:38Z,MERGED,True,7,13,3,https://github.com/metalstrolch,Fix:core: cancel drawing on resize request,4,[],https://github.com/navit-gps/navit/pull/1142,https://github.com/metalstrolch,6,https://github.com/navit-gps/navit/pull/1142#issuecomment-914614983,"This commit causes navit to cancel async drawing in case of resize
request. Drawing is started again after that. this should effectively
cause a redraw on subsequent calls to resize. Some graphics like qt5
call resize for both dimension changes if the widget gets resized.",Simplest way on desktop machines is to resize the window using by dragging the window border while showing a big city where rendering the screen takes some time. Try Munich for example. You see the window then sometimes not being completely filled and vehicle cursor being at the wrong position compared to what the window shows. You need to generate a resize request as long as the screen renders in background.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1142,2021-09-01T19:57:10Z,2021-09-13T09:36:51Z,2022-05-24T11:37:38Z,MERGED,True,7,13,3,https://github.com/metalstrolch,Fix:core: cancel drawing on resize request,4,[],https://github.com/navit-gps/navit/pull/1142,https://github.com/metalstrolch,7,https://github.com/navit-gps/navit/pull/1142#issuecomment-918010224,"This commit causes navit to cancel async drawing in case of resize
request. Drawing is started again after that. this should effectively
cause a redraw on subsequent calls to resize. Some graphics like qt5
call resize for both dimension changes if the widget gets resized.",Any objections? This one helps for Sailfish screen rotation at least,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1143,2021-09-01T21:38:38Z,2021-09-06T09:03:57Z,2021-09-08T09:01:23Z,MERGED,True,1,1,1,https://github.com/metalstrolch,Fix:maptool:osm fix multipolygon filter.,2,[],https://github.com/navit-gps/navit/pull/1143,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/1143,"Change done at #1129 causes maptool to filter out all multipolygons
if -n is given due to not correctly initializing item_bin buffer
prior check. Sorry my fault.","Change done at #1129 causes maptool to filter out all multipolygons
if -n is given due to not correctly initializing item_bin buffer
prior check. Sorry my fault.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1143,2021-09-01T21:38:38Z,2021-09-06T09:03:57Z,2021-09-08T09:01:23Z,MERGED,True,1,1,1,https://github.com/metalstrolch,Fix:maptool:osm fix multipolygon filter.,2,[],https://github.com/navit-gps/navit/pull/1143,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/1143#issuecomment-910796163,"Change done at #1129 causes maptool to filter out all multipolygons
if -n is given due to not correctly initializing item_bin buffer
prior check. Sorry my fault.",Seems nobody is processing maps these days as nobody cried out.,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1143,2021-09-01T21:38:38Z,2021-09-06T09:03:57Z,2021-09-08T09:01:23Z,MERGED,True,1,1,1,https://github.com/metalstrolch,Fix:maptool:osm fix multipolygon filter.,2,[],https://github.com/navit-gps/navit/pull/1143,https://github.com/mvglasow,3,https://github.com/navit-gps/navit/pull/1143#issuecomment-914622494,"Change done at #1129 causes maptool to filter out all multipolygons
if -n is given due to not correctly initializing item_bin buffer
prior check. Sorry my fault.","I just tried to process a map (with this PR merged) and got the error
PROGRESS9: Processed 21793 nodes (21708 out) 0 ways 74044 relations 0 tiles 2:14 27 MB
PROGRESS9: Processed 21793 nodes (21708 out) 0 ways 0 relations 0 tiles 2:14 27 MB
process_multipolygons:process (thread 0)
process_multipolygons:finish (thread 0)
maptool: /home/michael/src/navit/navit/maptool/itembin.c:93: item_bin_copy_attr: Assertion `attr == attr_osm_wayid' failed.

both with OSM and Protobuf input (same map in both cases). Is this related or is it a different issue?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1143,2021-09-01T21:38:38Z,2021-09-06T09:03:57Z,2021-09-08T09:01:23Z,MERGED,True,1,1,1,https://github.com/metalstrolch,Fix:maptool:osm fix multipolygon filter.,2,[],https://github.com/navit-gps/navit/pull/1143,https://github.com/mvglasow,4,https://github.com/navit-gps/navit/pull/1143#issuecomment-914628346,"Change done at #1129 causes maptool to filter out all multipolygons
if -n is given due to not correctly initializing item_bin buffer
prior check. Sorry my fault.","Just checked out ea5a86b (the last before #1129), same error. Apparently it’s not related.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1144,2021-09-05T10:45:24Z,2021-09-05T11:21:21Z,2021-09-05T11:21:21Z,MERGED,True,6,5,1,https://github.com/Poussinou,Update README.md,1,[],https://github.com/navit-gps/navit/pull/1144,https://github.com/Poussinou,1,https://github.com/navit-gps/navit/pull/1144,"Hi,
This small PR replaces the old F-Droid and Google Play buttons with the new ones 👍","Hi,
This small PR replaces the old F-Droid and Google Play buttons with the new ones 👍",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1145,2021-09-07T19:32:48Z,2021-09-26T17:55:24Z,2021-09-26T17:55:24Z,MERGED,True,0,2349,14,https://github.com/hoehnp,"removed files from unsupported ports, i.e. Maemo and WebOS",5,[],https://github.com/navit-gps/navit/pull/1145,https://github.com/hoehnp,1,https://github.com/navit-gps/navit/pull/1145,"When working on implementing a new download mechanism for maps, I noticed that we still have code for the currently unsupported and outdated platforms Maemo and WebOS in our repository. In order to clean up code, I suggest to remove this probably unmaintained code.","When working on implementing a new download mechanism for maps, I noticed that we still have code for the currently unsupported and outdated platforms Maemo and WebOS in our repository. In order to clean up code, I suggest to remove this probably unmaintained code.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1145,2021-09-07T19:32:48Z,2021-09-26T17:55:24Z,2021-09-26T17:55:24Z,MERGED,True,0,2349,14,https://github.com/hoehnp,"removed files from unsupported ports, i.e. Maemo and WebOS",5,[],https://github.com/navit-gps/navit/pull/1145,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/1145#issuecomment-914617277,"When working on implementing a new download mechanism for maps, I noticed that we still have code for the currently unsupported and outdated platforms Maemo and WebOS in our repository. In order to clean up code, I suggest to remove this probably unmaintained code.","From my side good to go, I don't need those and as you stated they are probably unmaintained. Vote for delete.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1145,2021-09-07T19:32:48Z,2021-09-26T17:55:24Z,2021-09-26T17:55:24Z,MERGED,True,0,2349,14,https://github.com/hoehnp,"removed files from unsupported ports, i.e. Maemo and WebOS",5,[],https://github.com/navit-gps/navit/pull/1145,https://github.com/hoehnp,3,https://github.com/navit-gps/navit/pull/1145#issuecomment-918005305,"When working on implementing a new download mechanism for maps, I noticed that we still have code for the currently unsupported and outdated platforms Maemo and WebOS in our repository. In order to clean up code, I suggest to remove this probably unmaintained code.",Additionally I would also suggest to update the wiki to reflect that some of the platforms mentioned there are actually no longer actively maintained.,True,{'THUMBS_UP': ['https://github.com/jkoan']}
navit-gps/navit,https://github.com/navit-gps/navit,1149,2021-09-08T08:44:21Z,2021-09-08T09:00:47Z,2021-09-08T09:01:07Z,MERGED,True,0,3,1,https://github.com/metalstrolch,FIX:maptool: remove assertion from item_bin_copy_attr,1,[],https://github.com/navit-gps/navit/pull/1149,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/1149,"The removed assertion disallowed the use of item_bin_copy_attr for
anything else than attr_osm_wayid when debug build was enabled. This
used to work prior the introduction of multipolygon support. There
item_bin_copy_attr is used to copy all kinds of attrs not knowing about
the assert.
So remove the assert as it seems to have been never correct.
Fixes #1147","The removed assertion disallowed the use of item_bin_copy_attr for
anything else than attr_osm_wayid when debug build was enabled. This
used to work prior the introduction of multipolygon support. There
item_bin_copy_attr is used to copy all kinds of attrs not knowing about
the assert.
So remove the assert as it seems to have been never correct.
Fixes #1147",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1149,2021-09-08T08:44:21Z,2021-09-08T09:00:47Z,2021-09-08T09:01:07Z,MERGED,True,0,3,1,https://github.com/metalstrolch,FIX:maptool: remove assertion from item_bin_copy_attr,1,[],https://github.com/navit-gps/navit/pull/1149,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/1149#issuecomment-915051908,"The removed assertion disallowed the use of item_bin_copy_attr for
anything else than attr_osm_wayid when debug build was enabled. This
used to work prior the introduction of multipolygon support. There
item_bin_copy_attr is used to copy all kinds of attrs not knowing about
the assert.
So remove the assert as it seems to have been never correct.
Fixes #1147",And off we go...,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1154,2021-09-19T05:55:34Z,2021-09-20T04:52:18Z,2021-10-09T07:07:07Z,MERGED,True,1,2,1,https://github.com/OLFDB,Unique icon for POI dialog,1,[],https://github.com/navit-gps/navit/pull/1154,https://github.com/OLFDB,1,https://github.com/navit-gps/navit/pull/1154,"GTK gui uses the same icon for destination and poi dialog.
Use GTK_STOCK_INFO icon for poi dialog.","GTK gui uses the same icon for destination and poi dialog.
Use GTK_STOCK_INFO icon for poi dialog.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1155,2021-09-19T05:58:41Z,2021-09-20T04:53:26Z,2021-10-09T07:06:54Z,MERGED,True,10,1,1,https://github.com/OLFDB,GTKGUI -- Enable housenumbers in destination dialog,1,[],https://github.com/navit-gps/navit/pull/1155,https://github.com/OLFDB,1,https://github.com/navit-gps/navit/pull/1155,Destination.mov,Destination.mov,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1156,2021-09-19T07:12:04Z,2021-09-20T04:56:53Z,2021-10-09T07:07:15Z,MERGED,True,17,2,4,https://github.com/OLFDB,Switch to disable ZIP-Code search,9,[],https://github.com/navit-gps/navit/pull/1156,https://github.com/OLFDB,1,https://github.com/navit-gps/navit/pull/1156,"New attribute for gui tag town_use_postal. If set to 0 navit will use the old town search method which will speed up the search on low performance hardware. Available only with gui_internal.
<gui type=""internal"" enabled=""yes"" town_use_postal=""0"">","New attribute for gui tag town_use_postal. If set to 0 navit will use the old town search method which will speed up the search on low performance hardware. Available only with gui_internal.
<gui type=""internal"" enabled=""yes"" town_use_postal=""0"">",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1161,2021-10-04T18:28:47Z,2021-10-05T02:03:19Z,2021-10-05T02:03:19Z,MERGED,True,0,130,3,https://github.com/jkoan,delete:build:Delete old tooling from android (now fastlane is used),1,[],https://github.com/navit-gps/navit/pull/1161,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/1161,"This removes old files priviusly used to build and upload android on circleci v1
Now we use fastlane for a long time with circleci v2","This removes old files priviusly used to build and upload android on circleci v1
Now we use fastlane for a long time with circleci v2",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1162,2021-10-04T19:13:51Z,,2022-05-24T12:20:37Z,OPEN,False,247,9,6,https://github.com/jkoan,Introduce GitHub actions,19,[],https://github.com/navit-gps/navit/pull/1162,https://github.com/jkoan,1,https://github.com/navit-gps/navit/pull/1162,"This is the first take on Github Actions. The goal is to migrate all our builds to it as CircleCI has issues for a long time.
The most prominent is that when opening a PR no Builds are done, or those are not reported back to Github Checks.
On the other Hand Github Actions is obviously perfectly integrated and therefor has additional advantages, like allowing to start workfows, suggestins and many more.
Some of those will be integrated into this PR. The first and most notable one will be that the Build Sanity Check will now post Formatting errors back to the Contributor (within the PR) so that they can be applied with a single click.","This is the first take on Github Actions. The goal is to migrate all our builds to it as CircleCI has issues for a long time.
The most prominent is that when opening a PR no Builds are done, or those are not reported back to Github Checks.
On the other Hand Github Actions is obviously perfectly integrated and therefor has additional advantages, like allowing to start workfows, suggestins and many more.
Some of those will be integrated into this PR. The first and most notable one will be that the Build Sanity Check will now post Formatting errors back to the Contributor (within the PR) so that they can be applied with a single click.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1162,2021-10-04T19:13:51Z,,2022-05-24T12:20:37Z,OPEN,False,247,9,6,https://github.com/jkoan,Introduce GitHub actions,19,[],https://github.com/navit-gps/navit/pull/1162,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/1162#issuecomment-935753921,"This is the first take on Github Actions. The goal is to migrate all our builds to it as CircleCI has issues for a long time.
The most prominent is that when opening a PR no Builds are done, or those are not reported back to Github Checks.
On the other Hand Github Actions is obviously perfectly integrated and therefor has additional advantages, like allowing to start workfows, suggestins and many more.
Some of those will be integrated into this PR. The first and most notable one will be that the Build Sanity Check will now post Formatting errors back to the Contributor (within the PR) so that they can be applied with a single click.","@mvglasow @jandegr could you make sense of this Lint Error? https://github.com/navit-gps/navit/pull/1162/checks?check_run_id=3802624465 i looked it up, but its apparently a error in the Linter with some Versions. But i don't see any config where we directly define the Linter Version used.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1162,2021-10-04T19:13:51Z,,2022-05-24T12:20:37Z,OPEN,False,247,9,6,https://github.com/jkoan,Introduce GitHub actions,19,[],https://github.com/navit-gps/navit/pull/1162,https://github.com/mvglasow,3,https://github.com/navit-gps/navit/pull/1162#issuecomment-935778124,"This is the first take on Github Actions. The goal is to migrate all our builds to it as CircleCI has issues for a long time.
The most prominent is that when opening a PR no Builds are done, or those are not reported back to Github Checks.
On the other Hand Github Actions is obviously perfectly integrated and therefor has additional advantages, like allowing to start workfows, suggestins and many more.
Some of those will be integrated into this PR. The first and most notable one will be that the Build Sanity Check will now post Formatting errors back to the Contributor (within the PR) so that they can be applied with a single click.","Error:   /home/runner/work/navit/navit/navit/android/src/org/navitproject/navit/NavitTraff.java:360: Error: Value must be ≥ 0 [Range]
                  builder.append(cursor.getString(cursor.getColumnIndex(COLUMN_DATA))).append(""\n"");
                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Lint apparently complains because it expects to see a non-negative argument for cursor.getString(). Instead of a numeric argument, we are using the return value of cursor.getColumnIndex() with a String constant argument. In practice, this works well as long as the cursor has a column named data (which is the value of COLUMN_DATA).
This might not be the most elegant way of coding it. A way to get rid of the lint warning would be something like:
int columnDataIndex = cursor.getColumnIndex(COLUMN_DATA);
if (columnDataIndex < 0) {
    // some error handling here
} else {
    builder.append(cursor.getString(columnDataIndex)).append(""\n"");
}

If someone wants to take a stab a this, feel free – I can’t currently dedicate much time to Navit (unfortunately).",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1170,2021-12-06T14:12:22Z,2021-12-23T19:32:56Z,2021-12-23T19:32:56Z,MERGED,True,54,21,5,https://github.com/bkoppelmann,Fix buffer overflow for ticket #1167,3,[],https://github.com/navit-gps/navit/pull/1170,https://github.com/bkoppelmann,1,https://github.com/navit-gps/navit/pull/1170,"Hi,
I came up with a proper fix for this buffer overflow. We calculate if we can fit a repetition of one point into our result buffer. If we cannot we bail from the function.
Cheers,
Bastian","Hi,
I came up with a proper fix for this buffer overflow. We calculate if we can fit a repetition of one point into our result buffer. If we cannot we bail from the function.
Cheers,
Bastian",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1170,2021-12-06T14:12:22Z,2021-12-23T19:32:56Z,2021-12-23T19:32:56Z,MERGED,True,54,21,5,https://github.com/bkoppelmann,Fix buffer overflow for ticket #1167,3,[],https://github.com/navit-gps/navit/pull/1170,https://github.com/bkoppelmann,2,https://github.com/navit-gps/navit/pull/1170#issuecomment-998812736,"Hi,
I came up with a proper fix for this buffer overflow. We calculate if we can fit a repetition of one point into our result buffer. If we cannot we bail from the function.
Cheers,
Bastian","Hi metalstrolch,
I pushed a new version, which addresses you comments. Thanks for the review!
Cheers,
Bastian",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1172,2021-12-17T10:13:53Z,2021-12-17T12:19:36Z,2022-05-24T11:37:32Z,MERGED,True,6,2,2,https://github.com/metalstrolch,Fix:graphics_qt5: allow building without qml again,1,[],https://github.com/navit-gps/navit/pull/1172,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/1172,"As building qithout QML is rarely done, a ifdefing mistake was made in graphics qt5. This change requests fixes this.
Additionally gui_qt5_qml is disabled when QML support is disabled on graphics_qt5 as this is mandatory.","As building qithout QML is rarely done, a ifdefing mistake was made in graphics qt5. This change requests fixes this.
Additionally gui_qt5_qml is disabled when QML support is disabled on graphics_qt5 as this is mandatory.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1174,2021-12-23T21:00:21Z,2022-01-01T13:12:45Z,2022-01-01T13:12:50Z,MERGED,True,132,4,10,https://github.com/metalstrolch,feature: graphics: allow spiked lines for cliff and embarkments,2,[],https://github.com/navit-gps/navit/pull/1174,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/1174,"This adds another drawing element to graphics system. It can produce
lines with spikes as used for cliffs on maps.
Additionally this adds embarkment support for map.","This adds another drawing element to graphics system. It can produce
lines with spikes as used for cliffs on maps.
Additionally this adds embarkment support for map.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1174,2021-12-23T21:00:21Z,2022-01-01T13:12:45Z,2022-01-01T13:12:50Z,MERGED,True,132,4,10,https://github.com/metalstrolch,feature: graphics: allow spiked lines for cliff and embarkments,2,[],https://github.com/navit-gps/navit/pull/1174,https://github.com/metalstrolch,2,https://github.com/navit-gps/navit/pull/1174#issuecomment-1000522750,"This adds another drawing element to graphics system. It can produce
lines with spikes as used for cliffs on maps.
Additionally this adds embarkment support for map.",Can do lines like that. Usually used for cliffs.,True,{'LAUGH': ['https://github.com/jkoan']}
navit-gps/navit,https://github.com/navit-gps/navit,1176,2022-01-01T12:08:39Z,2022-01-12T06:05:58Z,2022-01-12T06:05:58Z,MERGED,True,1,1,1,https://github.com/trldp,fix:speech/speech_dispacher:use spd_say instead of spd_sayf,2,[],https://github.com/navit-gps/navit/pull/1176,https://github.com/trldp,1,https://github.com/navit-gps/navit/pull/1176,"The use of spd_sayf with a string literal causes the following error when building on Ubuntu Jammy.
/<<PKGBUILDDIR>>/navit/speech/speech_dispatcher/speech_speech_dispatcher.c: In function ‘speechd_say’: /<<PKGBUILDDIR>>/navit/speech/speech_dispatcher/speech_speech_dispatcher.c:41:5: error: format not a string literal and no format arguments [-Werror=format-security]
The solution in this commit is to use spd_say instead of spd_sayf.","The use of spd_sayf with a string literal causes the following error when building on Ubuntu Jammy.
/<<PKGBUILDDIR>>/navit/speech/speech_dispatcher/speech_speech_dispatcher.c: In function ‘speechd_say’: /<<PKGBUILDDIR>>/navit/speech/speech_dispatcher/speech_speech_dispatcher.c:41:5: error: format not a string literal and no format arguments [-Werror=format-security]
The solution in this commit is to use spd_say instead of spd_sayf.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1176,2022-01-01T12:08:39Z,2022-01-12T06:05:58Z,2022-01-12T06:05:58Z,MERGED,True,1,1,1,https://github.com/trldp,fix:speech/speech_dispacher:use spd_say instead of spd_sayf,2,[],https://github.com/navit-gps/navit/pull/1176,https://github.com/bkoppelmann,2,https://github.com/navit-gps/navit/pull/1176#issuecomment-1010302240,"The use of spd_sayf with a string literal causes the following error when building on Ubuntu Jammy.
/<<PKGBUILDDIR>>/navit/speech/speech_dispatcher/speech_speech_dispatcher.c: In function ‘speechd_say’: /<<PKGBUILDDIR>>/navit/speech/speech_dispatcher/speech_speech_dispatcher.c:41:5: error: format not a string literal and no format arguments [-Werror=format-security]
The solution in this commit is to use spd_say instead of spd_sayf.","LGTM. I was checking the API in speechd and spd_sayf expects a format string similar to printf which we were not giving. spd_say does not require that. So this looks reasonable.
Cheers,
Bastian",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1182,2022-05-19T22:47:15Z,2022-05-23T12:01:57Z,2022-05-23T12:01:57Z,MERGED,True,26,14,13,https://github.com/metalstrolch,fix:sailfish: enable sandboxing for sailfish OS.,6,[],https://github.com/navit-gps/navit/pull/1182,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/1182,"This pull request adds proper sandboxing support for recent Sailfish OS releases featuring sandboxing. In order to do this some changes need to be done:

use proper object path for Qt5 components (org.navitproject.navit)
allow the ~/.navit location to be changed on build time. HOMECONFIG_DIR variable added to build. Sailfish requires ~/.config/org.navitproject/navit
create user config path with sub directories if not existing.
add Sailfish sandbox config to .desktop file
Change sailfish default config to have maps in ~/Documents instead of ~/Maps as the latter won't exist in sandbox.","This pull request adds proper sandboxing support for recent Sailfish OS releases featuring sandboxing. In order to do this some changes need to be done:

use proper object path for Qt5 components (org.navitproject.navit)
allow the ~/.navit location to be changed on build time. HOMECONFIG_DIR variable added to build. Sailfish requires ~/.config/org.navitproject/navit
create user config path with sub directories if not existing.
add Sailfish sandbox config to .desktop file
Change sailfish default config to have maps in ~/Documents instead of ~/Maps as the latter won't exist in sandbox.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1183,2022-05-24T11:36:39Z,2022-05-24T12:13:03Z,2022-05-24T12:13:03Z,MERGED,True,5,2,2,https://github.com/metalstrolch,fix:ci: update sailfish os SDK version to 3.4.0.24,1,[],https://github.com/navit-gps/navit/pull/1183,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/1183,"Sailfish SDK 3.4.0.24 is the newest version known to run on
Jolla1 devices therefore this version is chosen. As it allows
to build aarch64 binaries as well building those is enabled
on ci. SDK images are fetched from coderus, thanks for providing.
Images are known to be good on Jolla1(3.4.0.24) and Xperia XA2
(4.4.0.64, latest as of writing). Aarch64 rpm is completely untested.","Sailfish SDK 3.4.0.24 is the newest version known to run on
Jolla1 devices therefore this version is chosen. As it allows
to build aarch64 binaries as well building those is enabled
on ci. SDK images are fetched from coderus, thanks for providing.
Images are known to be good on Jolla1(3.4.0.24) and Xperia XA2
(4.4.0.64, latest as of writing). Aarch64 rpm is completely untested.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1184,2022-05-24T11:55:08Z,2022-05-24T13:10:43Z,2022-05-24T13:13:10Z,MERGED,True,1,1,1,https://github.com/metalstrolch,fix:maptool: Don't drop unrecognized relations to borders temp file,1,[],https://github.com/navit-gps/navit/pull/1184,https://github.com/metalstrolch,1,https://github.com/navit-gps/navit/pull/1184,Cleans up place to area processing,Cleans up place to area processing,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1184,2022-05-24T11:55:08Z,2022-05-24T13:10:43Z,2022-05-24T13:13:10Z,MERGED,True,1,1,1,https://github.com/metalstrolch,fix:maptool: Don't drop unrecognized relations to borders temp file,1,[],https://github.com/navit-gps/navit/pull/1184,https://github.com/jkoan,2,https://github.com/navit-gps/navit/pull/1184#issuecomment-1135844059,Cleans up place to area processing,Can you explain whats the current problem is about filtering out type_none?,True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1184,2022-05-24T11:55:08Z,2022-05-24T13:10:43Z,2022-05-24T13:13:10Z,MERGED,True,1,1,1,https://github.com/metalstrolch,fix:maptool: Don't drop unrecognized relations to borders temp file,1,[],https://github.com/navit-gps/navit/pull/1184,https://github.com/metalstrolch,3,https://github.com/navit-gps/navit/pull/1184#issuecomment-1135875270,Cleans up place to area processing,"We're currently not filtering out type_none. Instead, we drop everything NOT type_none into the boundaries file. Regardless if it is actually a boundary according to our needs. This has the effect that boundary processing takes far longer than required.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1184,2022-05-24T11:55:08Z,2022-05-24T13:10:43Z,2022-05-24T13:13:10Z,MERGED,True,1,1,1,https://github.com/metalstrolch,fix:maptool: Don't drop unrecognized relations to borders temp file,1,[],https://github.com/navit-gps/navit/pull/1184,https://github.com/jkoan,4,https://github.com/navit-gps/navit/pull/1184#issuecomment-1135884400,Cleans up place to area processing,"We're currently not filtering out type_none. Instead, we drop everything NOT type_none into the boundaries file. Regardless if it is actually a boundary according to our needs. This has the effect that boundary processing takes far longer than required.

Got it! Now i also see the logic error.",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1184,2022-05-24T11:55:08Z,2022-05-24T13:10:43Z,2022-05-24T13:13:10Z,MERGED,True,1,1,1,https://github.com/metalstrolch,fix:maptool: Don't drop unrecognized relations to borders temp file,1,[],https://github.com/navit-gps/navit/pull/1184,https://github.com/metalstrolch,5,https://github.com/navit-gps/navit/pull/1184#issuecomment-1135894379,Cleans up place to area processing,"@jkoan , do you know why ci fails on ""trunk"" for linux_build during updating of the translation files to/from launchpad? Or do you think I should open a ticket about this?",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1184,2022-05-24T11:55:08Z,2022-05-24T13:10:43Z,2022-05-24T13:13:10Z,MERGED,True,1,1,1,https://github.com/metalstrolch,fix:maptool: Don't drop unrecognized relations to borders temp file,1,[],https://github.com/navit-gps/navit/pull/1184,https://github.com/jkoan,6,https://github.com/navit-gps/navit/pull/1184#issuecomment-1135904234,Cleans up place to area processing,"@jkoan , do you know why ci fails on ""trunk"" for linux_build during updating of the translation files to/from launchpad? Or do you think I should open a ticket about this?

i know more or less what its about. You don't need to open up a ticket, i will take care of it",True,{}
navit-gps/navit,https://github.com/navit-gps/navit,1184,2022-05-24T11:55:08Z,2022-05-24T13:10:43Z,2022-05-24T13:13:10Z,MERGED,True,1,1,1,https://github.com/metalstrolch,fix:maptool: Don't drop unrecognized relations to borders temp file,1,[],https://github.com/navit-gps/navit/pull/1184,https://github.com/metalstrolch,7,https://github.com/navit-gps/navit/pull/1184#issuecomment-1135908122,Cleans up place to area processing,Thanks.,True,{}
