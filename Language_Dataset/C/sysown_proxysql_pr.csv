sysown/proxysql,https://github.com/sysown/proxysql,514,2016-03-08T15:28:46Z,2016-03-17T01:08:10Z,2016-03-17T01:48:36Z,MERGED,True,405,11,17,https://github.com/iprunache,T99 Implement alert pushing to alert services - OpsGenie,28,[],https://github.com/sysown/proxysql/pull/514,https://github.com/iprunache,1,https://github.com/sysown/proxysql/pull/514,Implement a prototype that pushes critical alerts to OpsGenie,Implement a prototype that pushes critical alerts to OpsGenie,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,514,2016-03-08T15:28:46Z,2016-03-17T01:08:10Z,2016-03-17T01:48:36Z,MERGED,True,405,11,17,https://github.com/iprunache,T99 Implement alert pushing to alert services - OpsGenie,28,[],https://github.com/sysown/proxysql/pull/514,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/514#issuecomment-197632134,Implement a prototype that pushes critical alerts to OpsGenie,Integration with OpsGenie,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,516,2016-03-11T15:33:02Z,2016-03-11T15:33:28Z,2016-03-11T15:33:28Z,MERGED,True,88086,44174,86,https://github.com/renecannao,Merging v1.1.1-beta7,141,[],https://github.com/sysown/proxysql/pull/516,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/516,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,517,2016-03-11T15:45:16Z,2016-03-11T15:45:45Z,2016-08-05T22:13:58Z,MERGED,True,174,40,9,https://github.com/renecannao,Add SET commands,43,[],https://github.com/sysown/proxysql/pull/517,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/517,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,518,2016-03-14T14:56:24Z,2016-03-14T15:00:38Z,2016-03-14T15:00:38Z,CLOSED,False,1176,46,16,https://github.com/renecannao,Merge 1.1.2 into 1.2.0,48,[],https://github.com/sysown/proxysql/pull/518,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/518,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,519,2016-03-16T12:02:37Z,2016-03-17T01:26:15Z,2016-03-17T01:48:42Z,MERGED,True,521,11,19,https://github.com/iprunache,T112 pager duty integration,34,[],https://github.com/sysown/proxysql/pull/519,https://github.com/iprunache,1,https://github.com/sysown/proxysql/pull/519,Integration with pagerduty for alert pushing.,Integration with pagerduty for alert pushing.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,519,2016-03-16T12:02:37Z,2016-03-17T01:26:15Z,2016-03-17T01:48:42Z,MERGED,True,521,11,19,https://github.com/iprunache,T112 pager duty integration,34,[],https://github.com/sysown/proxysql/pull/519,https://github.com/iprunache,2,https://github.com/sysown/proxysql/pull/519#issuecomment-197373732,Integration with pagerduty for alert pushing.,I should have create this PR against the T99_push_notifications_prototype which is the parent branch of T112_pager_duty_integration. Please review it after T99_push_notifications_prototype was merged into lab-1.2.0,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,520,2016-03-16T15:33:00Z,2016-03-17T01:31:44Z,2016-03-17T01:48:45Z,MERGED,True,1,0,1,https://github.com/iprunache,Clean mongoose too with make cleanall,1,[],https://github.com/sysown/proxysql/pull/520,https://github.com/iprunache,1,https://github.com/sysown/proxysql/pull/520,"Why
mongoose.o is a dependency and we want it cleaned when cleaning all dependencies.
What
Delete deps/mongoose/mongoose/*.o on make cleanall.","Why
mongoose.o is a dependency and we want it cleaned when cleaning all dependencies.
What
Delete deps/mongoose/mongoose/*.o on make cleanall.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,521,2016-03-16T17:25:45Z,2016-03-17T01:42:50Z,2016-03-17T01:48:50Z,CLOSED,False,30,2,4,https://github.com/iprunache,T113 Detect when daemon is restarted an push alert,2,[],https://github.com/sysown/proxysql/pull/521,https://github.com/iprunache,1,https://github.com/sysown/proxysql/pull/521,"Set flags in the angel process that the daemon can read so the daemon
can learn that it was restarted because of a failure. Pus an alert in
case the daemon detects it has been restarted.","Set flags in the angel process that the daemon can read so the daemon
can learn that it was restarted because of a failure. Pus an alert in
case the daemon detects it has been restarted.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,521,2016-03-16T17:25:45Z,2016-03-17T01:42:50Z,2016-03-17T01:48:50Z,CLOSED,False,30,2,4,https://github.com/iprunache,T113 Detect when daemon is restarted an push alert,2,[],https://github.com/sysown/proxysql/pull/521,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/521#issuecomment-197643275,"Set flags in the angel process that the daemon can read so the daemon
can learn that it was restarted because of a failure. Pus an alert in
case the daemon detects it has been restarted.",Created a new pull request to merge directly into lab-1.2.0,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,522,2016-03-17T01:33:16Z,2016-03-17T01:33:26Z,2016-03-17T01:48:48Z,MERGED,True,0,1,1,https://github.com/renecannao,"Revert ""Clean mongoose too with make cleanall""",1,[],https://github.com/sysown/proxysql/pull/522,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/522,Reverts #520,Reverts #520,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,523,2016-03-17T01:35:48Z,2016-03-17T01:36:14Z,2016-03-17T01:48:45Z,CLOSED,False,1981,119,26,https://github.com/renecannao,Makefile cleanall mongoose,59,[],https://github.com/sysown/proxysql/pull/523,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/523,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,524,2016-03-17T01:40:14Z,2016-03-17T01:42:38Z,2016-03-17T01:48:50Z,MERGED,True,30,2,4,https://github.com/renecannao,T113 alert on daemon restart,2,[],https://github.com/sysown/proxysql/pull/524,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/524,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,525,2016-03-17T01:45:34Z,2016-03-17T01:45:58Z,2016-03-17T01:45:58Z,MERGED,True,22,21,1,https://github.com/renecannao,Update mirroring.md,1,[],https://github.com/sysown/proxysql/pull/525,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/525,I have some more changes but need to save this for now.,I have some more changes but need to save this for now.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,548,2016-04-25T03:16:19Z,2016-04-25T03:17:50Z,2016-04-25T03:18:09Z,MERGED,True,15,12,1,https://github.com/dtest,apt-get cleanup for smaller docker image,1,[],https://github.com/sysown/proxysql/pull/548,https://github.com/dtest,1,https://github.com/sysown/proxysql/pull/548,"apt-get layer cleanup results in 21MB savings. Not huge for a test image, but every little bit helps.","apt-get layer cleanup results in 21MB savings. Not huge for a test image, but every little bit helps.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,548,2016-04-25T03:16:19Z,2016-04-25T03:17:50Z,2016-04-25T03:18:09Z,MERGED,True,15,12,1,https://github.com/dtest,apt-get cleanup for smaller docker image,1,[],https://github.com/sysown/proxysql/pull/548,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/548#issuecomment-214106774,"apt-get layer cleanup results in 21MB savings. Not huge for a test image, but every little bit helps.",Thank you Derek!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,570,2016-05-18T05:06:47Z,2019-02-28T06:24:31Z,2019-02-28T06:24:31Z,CLOSED,False,26,8,3,https://github.com/martinarrieta,Added systemd support,2,[],https://github.com/sysown/proxysql/pull/570,https://github.com/martinarrieta,1,https://github.com/sysown/proxysql/pull/570,"Hello Rene,
I was testing ProxySQL and when I ran ""make install"" in a CentOS 7 vm I was getting errors because of systemd so I decided to modify the make file.
Also I have added the default parameters in the options (configfile and datadir) based on ezOptionParser configuration.
As you can see this is not a big help for the project but it can help other that use systemd.
Regards,
Martin.","Hello Rene,
I was testing ProxySQL and when I ran ""make install"" in a CentOS 7 vm I was getting errors because of systemd so I decided to modify the make file.
Also I have added the default parameters in the options (configfile and datadir) based on ezOptionParser configuration.
As you can see this is not a big help for the project but it can help other that use systemd.
Regards,
Martin.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,570,2016-05-18T05:06:47Z,2019-02-28T06:24:31Z,2019-02-28T06:24:31Z,CLOSED,False,26,8,3,https://github.com/martinarrieta,Added systemd support,2,[],https://github.com/sysown/proxysql/pull/570,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/570#issuecomment-219982751,"Hello Rene,
I was testing ProxySQL and when I ran ""make install"" in a CentOS 7 vm I was getting errors because of systemd so I decided to modify the make file.
Also I have added the default parameters in the options (configfile and datadir) based on ezOptionParser configuration.
As you can see this is not a big help for the project but it can help other that use systemd.
Regards,
Martin.","Hi Martin.
Thank you very much for the pull request!
I added some inline notes explaining the reasons behind these defaults. What do you think?
For future pull requests, can you create them against v1.2.0 ? master branch is in a sort of code freeze, and all the bug fixes and enhancements are going into v1.2.0 .
Thank you!
Ren√©",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,570,2016-05-18T05:06:47Z,2019-02-28T06:24:31Z,2019-02-28T06:24:31Z,CLOSED,False,26,8,3,https://github.com/martinarrieta,Added systemd support,2,[],https://github.com/sysown/proxysql/pull/570,https://github.com/tanji,3,https://github.com/sysown/proxysql/pull/570#issuecomment-283938357,"Hello Rene,
I was testing ProxySQL and when I ran ""make install"" in a CentOS 7 vm I was getting errors because of systemd so I decided to modify the make file.
Also I have added the default parameters in the options (configfile and datadir) based on ezOptionParser configuration.
As you can see this is not a big help for the project but it can help other that use systemd.
Regards,
Martin.","Hi! Any plans to merge that? Almost all new distributions don't use init.d anymore, that would be a must for compatibility. If you need any help just let me know.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,570,2016-05-18T05:06:47Z,2019-02-28T06:24:31Z,2019-02-28T06:24:31Z,CLOSED,False,26,8,3,https://github.com/martinarrieta,Added systemd support,2,[],https://github.com/sysown/proxysql/pull/570,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/570#issuecomment-468153442,"Hello Rene,
I was testing ProxySQL and when I ran ""make install"" in a CentOS 7 vm I was getting errors because of systemd so I decided to modify the make file.
Also I have added the default parameters in the options (configfile and datadir) based on ezOptionParser configuration.
As you can see this is not a big help for the project but it can help other that use systemd.
Regards,
Martin.","Closing this, as now systemd is well supported.
Thanks",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,585,2016-06-12T06:55:26Z,2016-08-02T23:14:56Z,2016-08-02T23:15:07Z,MERGED,True,24,11,1,https://github.com/3manuek,Update configuration_howto.md,1,[],https://github.com/sysown/proxysql/pull/585,https://github.com/3manuek,1,https://github.com/sysown/proxysql/pull/585,Some small fixes to sysbench commands and a couple of cosmetic changes.,Some small fixes to sysbench commands and a couple of cosmetic changes.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,585,2016-06-12T06:55:26Z,2016-08-02T23:14:56Z,2016-08-02T23:15:07Z,MERGED,True,24,11,1,https://github.com/3manuek,Update configuration_howto.md,1,[],https://github.com/sysown/proxysql/pull/585,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/585#issuecomment-237078367,Some small fixes to sysbench commands and a couple of cosmetic changes.,Thanks,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,625,2016-07-22T09:35:00Z,2016-07-22T09:40:54Z,2016-07-22T09:40:54Z,MERGED,True,5556,41131,111,https://github.com/renecannao,Merge from V1.2.0 to master,192,[],https://github.com/sysown/proxysql/pull/625,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/625,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,631,2016-07-29T15:02:49Z,2016-07-29T16:07:18Z,2016-07-29T16:28:54Z,MERGED,True,1,1,1,https://github.com/hrvojem,Fixed the wrong table name in docs,1,[],https://github.com/sysown/proxysql/pull/631,https://github.com/hrvojem,1,https://github.com/sysown/proxysql/pull/631,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,631,2016-07-29T15:02:49Z,2016-07-29T16:07:18Z,2016-07-29T16:28:54Z,MERGED,True,1,1,1,https://github.com/hrvojem,Fixed the wrong table name in docs,1,[],https://github.com/sysown/proxysql/pull/631,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/631#issuecomment-236227644,,Thanks!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,637,2016-08-02T12:19:28Z,2016-08-02T12:23:00Z,2016-08-02T12:23:11Z,MERGED,True,1,1,1,https://github.com/hrvojem,Fixed issue #636 by reversing the order_by to get the correct,1,[],https://github.com/sysown/proxysql/pull/637,https://github.com/hrvojem,1,https://github.com/sysown/proxysql/pull/637,"credentials:
mysql> SELECT variable_name FROM global_variables WHERE variable_name IN
('mysql-monitor_username','mysql-monitor_password') ORDER BY
variable_name DESC;
+------------------------+
| variable_name          |
+------------------------+
| mysql-monitor_username |
| mysql-monitor_password |
+------------------------+
2 rows in set (0.01 sec)","credentials:
mysql> SELECT variable_name FROM global_variables WHERE variable_name IN
('mysql-monitor_username','mysql-monitor_password') ORDER BY
variable_name DESC;
+------------------------+
| variable_name          |
+------------------------+
| mysql-monitor_username |
| mysql-monitor_password |
+------------------------+
2 rows in set (0.01 sec)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,637,2016-08-02T12:19:28Z,2016-08-02T12:23:00Z,2016-08-02T12:23:11Z,MERGED,True,1,1,1,https://github.com/hrvojem,Fixed issue #636 by reversing the order_by to get the correct,1,[],https://github.com/sysown/proxysql/pull/637,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/637#issuecomment-236887905,"credentials:
mysql> SELECT variable_name FROM global_variables WHERE variable_name IN
('mysql-monitor_username','mysql-monitor_password') ORDER BY
variable_name DESC;
+------------------------+
| variable_name          |
+------------------------+
| mysql-monitor_username |
| mysql-monitor_password |
+------------------------+
2 rows in set (0.01 sec)",Thank you!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,639,2016-08-02T23:18:05Z,2016-08-02T23:18:18Z,2016-08-02T23:18:25Z,MERGED,True,2,2,1,https://github.com/renecannao,Deps should be built before src and lib,1,[],https://github.com/sysown/proxysql/pull/639,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/639,"Building with more than one thread tries to build all targets
at once and results in failed compilation.
Signed-off-by: Maciej Naruszewicz maciej.naruszewicz@intel.com","Building with more than one thread tries to build all targets
at once and results in failed compilation.
Signed-off-by: Maciej Naruszewicz maciej.naruszewicz@intel.com",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,639,2016-08-02T23:18:05Z,2016-08-02T23:18:18Z,2016-08-02T23:18:25Z,MERGED,True,2,2,1,https://github.com/renecannao,Deps should be built before src and lib,1,[],https://github.com/sysown/proxysql/pull/639,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/639#issuecomment-237079092,"Building with more than one thread tries to build all targets
at once and results in failed compilation.
Signed-off-by: Maciej Naruszewicz maciej.naruszewicz@intel.com",Thank you Maciej!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,642,2016-08-07T10:05:02Z,2016-08-07T13:26:23Z,2016-12-30T09:46:19Z,MERGED,True,3281,27,29,https://github.com/renecannao,Merge incomplete PrepStmt support into future v1.3.0,13,"['PROTOCOL', 'ROUTING', 'GLOBAL', 'MYSQL']",https://github.com/sysown/proxysql/pull/642,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/642,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,651,2016-08-22T13:54:38Z,2016-08-23T07:47:27Z,2016-08-23T07:47:27Z,MERGED,True,76,18,1,https://github.com/fmbiete,"Add writer, reader hostgroup functionality to proxysql_galera_checker.sh",3,[],https://github.com/sysown/proxysql/pull/651,https://github.com/fmbiete,1,https://github.com/sysown/proxysql/pull/651,"There are 2 different scripts to work with Galera clusters:

proxysql_galera_checker.sh checks the health of the nodes
proxysql_galera_writer.pl sets the number of write nodes, but doesn't check health

With this modification only 1 script is needed: proxysql_galera_checker.sh
It will check node health for a maximum of 2 hosgroups (writers and readers), set the number of writers and disable reads in writers (only if at least 1 reader node is online).
Usage of the script has changed:
proxysql_galera_checker.sh <hostgroup_id write> [hostgroup_id read] [number writers] [writers are readers 0|1} [log_file]

Only the first parameter is required, rest is optional","There are 2 different scripts to work with Galera clusters:

proxysql_galera_checker.sh checks the health of the nodes
proxysql_galera_writer.pl sets the number of write nodes, but doesn't check health

With this modification only 1 script is needed: proxysql_galera_checker.sh
It will check node health for a maximum of 2 hosgroups (writers and readers), set the number of writers and disable reads in writers (only if at least 1 reader node is online).
Usage of the script has changed:
proxysql_galera_checker.sh <hostgroup_id write> [hostgroup_id read] [number writers] [writers are readers 0|1} [log_file]

Only the first parameter is required, rest is optional",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,651,2016-08-22T13:54:38Z,2016-08-23T07:47:27Z,2016-08-23T07:47:27Z,MERGED,True,76,18,1,https://github.com/fmbiete,"Add writer, reader hostgroup functionality to proxysql_galera_checker.sh",3,[],https://github.com/sysown/proxysql/pull/651,https://github.com/fmbiete,2,https://github.com/sysown/proxysql/pull/651#issuecomment-241653264,"There are 2 different scripts to work with Galera clusters:

proxysql_galera_checker.sh checks the health of the nodes
proxysql_galera_writer.pl sets the number of write nodes, but doesn't check health

With this modification only 1 script is needed: proxysql_galera_checker.sh
It will check node health for a maximum of 2 hosgroups (writers and readers), set the number of writers and disable reads in writers (only if at least 1 reader node is online).
Usage of the script has changed:
proxysql_galera_checker.sh <hostgroup_id write> [hostgroup_id read] [number writers] [writers are readers 0|1} [log_file]

Only the first parameter is required, rest is optional","Sorry, moved to the correct position.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,651,2016-08-22T13:54:38Z,2016-08-23T07:47:27Z,2016-08-23T07:47:27Z,MERGED,True,76,18,1,https://github.com/fmbiete,"Add writer, reader hostgroup functionality to proxysql_galera_checker.sh",3,[],https://github.com/sysown/proxysql/pull/651,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/651#issuecomment-241653650,"There are 2 different scripts to work with Galera clusters:

proxysql_galera_checker.sh checks the health of the nodes
proxysql_galera_writer.pl sets the number of write nodes, but doesn't check health

With this modification only 1 script is needed: proxysql_galera_checker.sh
It will check node health for a maximum of 2 hosgroups (writers and readers), set the number of writers and disable reads in writers (only if at least 1 reader node is online).
Usage of the script has changed:
proxysql_galera_checker.sh <hostgroup_id write> [hostgroup_id read] [number writers] [writers are readers 0|1} [log_file]

Only the first parameter is required, rest is optional",Thank you @fmbiete and @krzysztof-ksiazek,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,652,2016-08-23T11:07:59Z,2016-08-23T11:26:18Z,2016-08-23T11:26:18Z,MERGED,True,4,3,2,https://github.com/VoroOnestic,"Assign hostgroup_id to Monitor_State_Data, fixes laggy backends not being shunned.",1,[],https://github.com/sysown/proxysql/pull/652,https://github.com/VoroOnestic,1,https://github.com/sysown/proxysql/pull/652,"MySQL_HostGroups_Manager::replication_lag_action expects a hostgroup_id in _hid but MySQL_Monitor::monitor_replication_lag doesn't set the field in MySQL_Monitor_State_Data, so this check if (_hid >= 0 && _hid!=(int)myhgc->hid) continue always fails.","MySQL_HostGroups_Manager::replication_lag_action expects a hostgroup_id in _hid but MySQL_Monitor::monitor_replication_lag doesn't set the field in MySQL_Monitor_State_Data, so this check if (_hid >= 0 && _hid!=(int)myhgc->hid) continue always fails.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,652,2016-08-23T11:07:59Z,2016-08-23T11:26:18Z,2016-08-23T11:26:18Z,MERGED,True,4,3,2,https://github.com/VoroOnestic,"Assign hostgroup_id to Monitor_State_Data, fixes laggy backends not being shunned.",1,[],https://github.com/sysown/proxysql/pull/652,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/652#issuecomment-241702125,"MySQL_HostGroups_Manager::replication_lag_action expects a hostgroup_id in _hid but MySQL_Monitor::monitor_replication_lag doesn't set the field in MySQL_Monitor_State_Data, so this check if (_hid >= 0 && _hid!=(int)myhgc->hid) continue always fails.",Good catch! Thank you!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,656,2016-08-24T10:12:22Z,2016-08-24T10:38:43Z,2016-08-24T10:41:39Z,CLOSED,False,0,1,1,https://github.com/fmbiete,"Extra memcpy, 2 lines below we overwrite that position with strcpy",1,[],https://github.com/sysown/proxysql/pull/656,https://github.com/fmbiete,1,https://github.com/sysown/proxysql/pull/656,We copy 1 byte in position 5 of pkt_2. In line 568 we will overwrite that position without the value being used.,We copy 1 byte in position 5 of pkt_2. In line 568 we will overwrite that position without the value being used.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,656,2016-08-24T10:12:22Z,2016-08-24T10:38:43Z,2016-08-24T10:41:39Z,CLOSED,False,0,1,1,https://github.com/fmbiete,"Extra memcpy, 2 lines below we overwrite that position with strcpy",1,[],https://github.com/sysown/proxysql/pull/656,https://github.com/fmbiete,2,https://github.com/sysown/proxysql/pull/656#issuecomment-242022630,We copy 1 byte in position 5 of pkt_2. In line 568 we will overwrite that position without the value being used.,That makes sense. Discarding the request then.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,656,2016-08-24T10:12:22Z,2016-08-24T10:38:43Z,2016-08-24T10:41:39Z,CLOSED,False,0,1,1,https://github.com/fmbiete,"Extra memcpy, 2 lines below we overwrite that position with strcpy",1,[],https://github.com/sysown/proxysql/pull/656,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/656#issuecomment-242023178,We copy 1 byte in position 5 of pkt_2. In line 568 we will overwrite that position without the value being used.,Corrected in commit 71d1d8f . Thank you for the report,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,657,2016-08-24T10:13:10Z,2016-08-24T10:21:16Z,2016-08-24T10:40:35Z,MERGED,True,1,1,1,https://github.com/fmbiete,Default server_version is 5.5.30,1,[],https://github.com/sysown/proxysql/pull/657,https://github.com/fmbiete,1,https://github.com/sysown/proxysql/pull/657,Update default value in documentation,Update default value in documentation,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,657,2016-08-24T10:13:10Z,2016-08-24T10:21:16Z,2016-08-24T10:40:35Z,MERGED,True,1,1,1,https://github.com/fmbiete,Default server_version is 5.5.30,1,[],https://github.com/sysown/proxysql/pull/657,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/657#issuecomment-242019016,Update default value in documentation,Thanks,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,660,2016-08-24T23:52:29Z,2016-08-24T23:57:10Z,2016-08-24T23:57:15Z,MERGED,True,1,1,1,https://github.com/aydancoskun,Fixed typo,1,[],https://github.com/sysown/proxysql/pull/660,https://github.com/aydancoskun,1,https://github.com/sysown/proxysql/pull/660,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,660,2016-08-24T23:52:29Z,2016-08-24T23:57:10Z,2016-08-24T23:57:15Z,MERGED,True,1,1,1,https://github.com/aydancoskun,Fixed typo,1,[],https://github.com/sysown/proxysql/pull/660,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/660#issuecomment-242244107,,Thank you!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,661,2016-08-25T00:02:40Z,2016-08-25T00:22:12Z,2016-08-25T00:22:12Z,MERGED,True,2,2,1,https://github.com/aydancoskun,fixed typo and added some semantic clarity,1,[],https://github.com/sysown/proxysql/pull/661,https://github.com/aydancoskun,1,https://github.com/sysown/proxysql/pull/661,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,661,2016-08-25T00:02:40Z,2016-08-25T00:22:12Z,2016-08-25T00:22:12Z,MERGED,True,2,2,1,https://github.com/aydancoskun,fixed typo and added some semantic clarity,1,[],https://github.com/sysown/proxysql/pull/661,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/661#issuecomment-242247971,,"Thank you for the fixes.
This page is very outdated and should be updated. Hopefully for v1.2.2",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,662,2016-08-25T12:07:41Z,2016-08-25T12:17:00Z,2016-08-25T12:17:00Z,MERGED,True,24,0,1,https://github.com/krzysztof-ksiazek,Add support for handling case where only available nodes are in Donor/Desync state,1,[],https://github.com/sysown/proxysql/pull/662,https://github.com/krzysztof-ksiazek,1,https://github.com/sysown/proxysql/pull/662,It's preferred to use Desync/Donor node as reader and writer than to have all nodes in OFFLINE_SOFT,It's preferred to use Desync/Donor node as reader and writer than to have all nodes in OFFLINE_SOFT,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,672,2016-08-30T20:18:59Z,2016-08-30T21:57:44Z,2016-08-30T22:00:15Z,MERGED,True,3,0,3,https://github.com/dveeden,Add connection attributes for proxysql‚Üímysql connections,1,[],https://github.com/sysown/proxysql/pull/672,https://github.com/dveeden,1,https://github.com/sysown/proxysql/pull/672,"Set program_name connection attribute
Related issue: #670","Set program_name connection attribute
Related issue: #670",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,672,2016-08-30T20:18:59Z,2016-08-30T21:57:44Z,2016-08-30T22:00:15Z,MERGED,True,3,0,3,https://github.com/dveeden,Add connection attributes for proxysql‚Üímysql connections,1,[],https://github.com/sysown/proxysql/pull/672,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/672#issuecomment-243595282,"Set program_name connection attribute
Related issue: #670",Thank you!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,674,2016-08-31T09:45:16Z,2016-08-31T09:57:47Z,2016-08-31T09:57:52Z,MERGED,True,1,0,1,https://github.com/dveeden,Add missing vector include,1,[],https://github.com/sysown/proxysql/pull/674,https://github.com/dveeden,1,https://github.com/sysown/proxysql/pull/674,Related issue: #671,Related issue: #671,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,674,2016-08-31T09:45:16Z,2016-08-31T09:57:47Z,2016-08-31T09:57:52Z,MERGED,True,1,0,1,https://github.com/dveeden,Add missing vector include,1,[],https://github.com/sysown/proxysql/pull/674,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/674#issuecomment-243716908,Related issue: #671,Thanks,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,675,2016-08-31T13:40:32Z,2016-08-31T13:43:48Z,2016-08-31T13:43:56Z,MERGED,True,22,3,1,https://github.com/krzysztof-ksiazek,Add support for chkconfig in RHEL and CentOS,1,[],https://github.com/sysown/proxysql/pull/675,https://github.com/krzysztof-ksiazek,1,https://github.com/sysown/proxysql/pull/675,Added support for chkconfig. I haven't tested anything docker-related so please verify it is not affected. Shouldn't.,Added support for chkconfig. I haven't tested anything docker-related so please verify it is not affected. Shouldn't.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,675,2016-08-31T13:40:32Z,2016-08-31T13:43:48Z,2016-08-31T13:43:56Z,MERGED,True,22,3,1,https://github.com/krzysztof-ksiazek,Add support for chkconfig in RHEL and CentOS,1,[],https://github.com/sysown/proxysql/pull/675,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/675#issuecomment-243768115,Added support for chkconfig. I haven't tested anything docker-related so please verify it is not affected. Shouldn't.,"Looks good.
Thanks",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,679,2016-09-01T13:56:42Z,2016-09-02T19:48:02Z,2016-12-30T09:46:50Z,CLOSED,False,1694,377,48,https://github.com/renecannao,Write changeset for v1.2.2,87,[],https://github.com/sysown/proxysql/pull/679,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/679,DO NOT MERGE!,DO NOT MERGE!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,683,2016-09-05T13:32:27Z,2016-09-05T15:44:41Z,2016-09-05T15:44:41Z,MERGED,True,1042,201,36,https://github.com/renecannao,Merge master into 1.3.0-alpha,71,[],https://github.com/sysown/proxysql/pull/683,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/683,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,685,2016-09-05T21:37:25Z,2016-09-05T21:52:22Z,2016-09-05T21:52:49Z,MERGED,True,29,1,2,https://github.com/dveeden,Systemd support,1,[],https://github.com/sysown/proxysql/pull/685,https://github.com/dveeden,1,https://github.com/sysown/proxysql/pull/685,Related Issue: #425,Related Issue: #425,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,685,2016-09-05T21:37:25Z,2016-09-05T21:52:22Z,2016-09-05T21:52:49Z,MERGED,True,29,1,2,https://github.com/dveeden,Systemd support,1,[],https://github.com/sysown/proxysql/pull/685,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/685#issuecomment-244814972,Related Issue: #425,Thanks Dani√´l!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,689,2016-09-06T11:27:19Z,2016-09-06T11:51:56Z,2016-09-06T11:51:56Z,CLOSED,False,9,5,1,https://github.com/pondix,Update INSTALL.md,1,[],https://github.com/sysown/proxysql/pull/689,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/689,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,710,2016-09-29T22:46:47Z,2016-09-29T22:47:04Z,2016-12-30T09:47:27Z,MERGED,True,432,38894,29,https://github.com/renecannao,Merge V1.2.4 into master,20,[],https://github.com/sysown/proxysql/pull/710,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/710,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,726,2016-10-09T18:14:54Z,2016-10-17T07:30:51Z,2016-10-18T06:55:12Z,MERGED,True,176,87,4,https://github.com/ton31337,Add IPv6 support,1,[],https://github.com/sysown/proxysql/pull/726,https://github.com/ton31337,1,https://github.com/sysown/proxysql/pull/726,"Add IPv6 support. Please take a look, just tested in my testbed, everything works, but maybe you have more tests cases to cover. Related #460
With IPv4:
mysql> show full processlist;
+----------+-----------+------+--------------------+-----------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
| ThreadID | SessionID | user | db                 | cli_host  | cli_port | hostgroup | l_srv_host | l_srv_port | srv_host | srv_port | command | time_ms | info |
+----------+-----------+------+--------------------+-----------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
| 0        | 3         | root | information_schema | 127.0.0.1 | 51227    | 0         |            |            |          |          | Sleep   | 0       |      |
+----------+-----------+------+--------------------+-----------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
1 row in set (0.00 sec)

With IPv6:
mysql> show full processlist;
+----------+-----------+------+--------------------+-------------------------------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
| ThreadID | SessionID | user | db                 | cli_host                      | cli_port | hostgroup | l_srv_host | l_srv_port | srv_host | srv_port | command | time_ms | info |
+----------+-----------+------+--------------------+-------------------------------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
| 2        | 1         | root | information_schema | 2001:778:802:0:fa:ecbd:ac7f:0 | 39556    | 0         |            |            |          |          | Sleep   | 0       |      |
+----------+-----------+------+--------------------+-------------------------------+----------+-----------+------------+------------+----------+----------+---------+---------+------+

Backend IPv6 support is working too:
mysql> select * from mysql_servers;
+--------------+-------------------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+-------------+
| hostgroup_id | hostname          | port | status | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment     |
+--------------+-------------------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+-------------+
| 0            | 2001:abc:802::def | 3306 | ONLINE | 1      | 0           | 200             | 0                   | 0       | 0              | test server |
+--------------+-------------------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+-------------+
1 row in set (0.00 sec)","Add IPv6 support. Please take a look, just tested in my testbed, everything works, but maybe you have more tests cases to cover. Related #460
With IPv4:
mysql> show full processlist;
+----------+-----------+------+--------------------+-----------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
| ThreadID | SessionID | user | db                 | cli_host  | cli_port | hostgroup | l_srv_host | l_srv_port | srv_host | srv_port | command | time_ms | info |
+----------+-----------+------+--------------------+-----------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
| 0        | 3         | root | information_schema | 127.0.0.1 | 51227    | 0         |            |            |          |          | Sleep   | 0       |      |
+----------+-----------+------+--------------------+-----------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
1 row in set (0.00 sec)

With IPv6:
mysql> show full processlist;
+----------+-----------+------+--------------------+-------------------------------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
| ThreadID | SessionID | user | db                 | cli_host                      | cli_port | hostgroup | l_srv_host | l_srv_port | srv_host | srv_port | command | time_ms | info |
+----------+-----------+------+--------------------+-------------------------------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
| 2        | 1         | root | information_schema | 2001:778:802:0:fa:ecbd:ac7f:0 | 39556    | 0         |            |            |          |          | Sleep   | 0       |      |
+----------+-----------+------+--------------------+-------------------------------+----------+-----------+------------+------------+----------+----------+---------+---------+------+

Backend IPv6 support is working too:
mysql> select * from mysql_servers;
+--------------+-------------------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+-------------+
| hostgroup_id | hostname          | port | status | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment     |
+--------------+-------------------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+-------------+
| 0            | 2001:abc:802::def | 3306 | ONLINE | 1      | 0           | 200             | 0                   | 0       | 0              | test server |
+--------------+-------------------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+-------------+
1 row in set (0.00 sec)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,726,2016-10-09T18:14:54Z,2016-10-17T07:30:51Z,2016-10-18T06:55:12Z,MERGED,True,176,87,4,https://github.com/ton31337,Add IPv6 support,1,[],https://github.com/sysown/proxysql/pull/726,https://github.com/ton31337,2,https://github.com/sysown/proxysql/pull/726#issuecomment-253992057,"Add IPv6 support. Please take a look, just tested in my testbed, everything works, but maybe you have more tests cases to cover. Related #460
With IPv4:
mysql> show full processlist;
+----------+-----------+------+--------------------+-----------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
| ThreadID | SessionID | user | db                 | cli_host  | cli_port | hostgroup | l_srv_host | l_srv_port | srv_host | srv_port | command | time_ms | info |
+----------+-----------+------+--------------------+-----------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
| 0        | 3         | root | information_schema | 127.0.0.1 | 51227    | 0         |            |            |          |          | Sleep   | 0       |      |
+----------+-----------+------+--------------------+-----------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
1 row in set (0.00 sec)

With IPv6:
mysql> show full processlist;
+----------+-----------+------+--------------------+-------------------------------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
| ThreadID | SessionID | user | db                 | cli_host                      | cli_port | hostgroup | l_srv_host | l_srv_port | srv_host | srv_port | command | time_ms | info |
+----------+-----------+------+--------------------+-------------------------------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
| 2        | 1         | root | information_schema | 2001:778:802:0:fa:ecbd:ac7f:0 | 39556    | 0         |            |            |          |          | Sleep   | 0       |      |
+----------+-----------+------+--------------------+-------------------------------+----------+-----------+------------+------------+----------+----------+---------+---------+------+

Backend IPv6 support is working too:
mysql> select * from mysql_servers;
+--------------+-------------------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+-------------+
| hostgroup_id | hostname          | port | status | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment     |
+--------------+-------------------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+-------------+
| 0            | 2001:abc:802::def | 3306 | ONLINE | 1      | 0           | 200             | 0                   | 0       | 0              | test server |
+--------------+-------------------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+-------------+
1 row in set (0.00 sec)",@renecannao anything is missing here? could you run some tests you usually do before releasing new version?,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,726,2016-10-09T18:14:54Z,2016-10-17T07:30:51Z,2016-10-18T06:55:12Z,MERGED,True,176,87,4,https://github.com/ton31337,Add IPv6 support,1,[],https://github.com/sysown/proxysql/pull/726,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/726#issuecomment-253997713,"Add IPv6 support. Please take a look, just tested in my testbed, everything works, but maybe you have more tests cases to cover. Related #460
With IPv4:
mysql> show full processlist;
+----------+-----------+------+--------------------+-----------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
| ThreadID | SessionID | user | db                 | cli_host  | cli_port | hostgroup | l_srv_host | l_srv_port | srv_host | srv_port | command | time_ms | info |
+----------+-----------+------+--------------------+-----------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
| 0        | 3         | root | information_schema | 127.0.0.1 | 51227    | 0         |            |            |          |          | Sleep   | 0       |      |
+----------+-----------+------+--------------------+-----------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
1 row in set (0.00 sec)

With IPv6:
mysql> show full processlist;
+----------+-----------+------+--------------------+-------------------------------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
| ThreadID | SessionID | user | db                 | cli_host                      | cli_port | hostgroup | l_srv_host | l_srv_port | srv_host | srv_port | command | time_ms | info |
+----------+-----------+------+--------------------+-------------------------------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
| 2        | 1         | root | information_schema | 2001:778:802:0:fa:ecbd:ac7f:0 | 39556    | 0         |            |            |          |          | Sleep   | 0       |      |
+----------+-----------+------+--------------------+-------------------------------+----------+-----------+------------+------------+----------+----------+---------+---------+------+

Backend IPv6 support is working too:
mysql> select * from mysql_servers;
+--------------+-------------------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+-------------+
| hostgroup_id | hostname          | port | status | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment     |
+--------------+-------------------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+-------------+
| 0            | 2001:abc:802::def | 3306 | ONLINE | 1      | 0           | 200             | 0                   | 0       | 0              | test server |
+--------------+-------------------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+-------------+
1 row in set (0.00 sec)","@ton31337 :
Sorry for the delay in merging this. I need to check doesn't conflict with the new change related to SO_REUSEPORT in the development branch.
I should be able to merge within Monday. Thanks!",True,{'THUMBS_UP': ['https://github.com/ton31337']}
sysown/proxysql,https://github.com/sysown/proxysql,726,2016-10-09T18:14:54Z,2016-10-17T07:30:51Z,2016-10-18T06:55:12Z,MERGED,True,176,87,4,https://github.com/ton31337,Add IPv6 support,1,[],https://github.com/sysown/proxysql/pull/726,https://github.com/ton31337,4,https://github.com/sysown/proxysql/pull/726#issuecomment-254122506,"Add IPv6 support. Please take a look, just tested in my testbed, everything works, but maybe you have more tests cases to cover. Related #460
With IPv4:
mysql> show full processlist;
+----------+-----------+------+--------------------+-----------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
| ThreadID | SessionID | user | db                 | cli_host  | cli_port | hostgroup | l_srv_host | l_srv_port | srv_host | srv_port | command | time_ms | info |
+----------+-----------+------+--------------------+-----------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
| 0        | 3         | root | information_schema | 127.0.0.1 | 51227    | 0         |            |            |          |          | Sleep   | 0       |      |
+----------+-----------+------+--------------------+-----------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
1 row in set (0.00 sec)

With IPv6:
mysql> show full processlist;
+----------+-----------+------+--------------------+-------------------------------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
| ThreadID | SessionID | user | db                 | cli_host                      | cli_port | hostgroup | l_srv_host | l_srv_port | srv_host | srv_port | command | time_ms | info |
+----------+-----------+------+--------------------+-------------------------------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
| 2        | 1         | root | information_schema | 2001:778:802:0:fa:ecbd:ac7f:0 | 39556    | 0         |            |            |          |          | Sleep   | 0       |      |
+----------+-----------+------+--------------------+-------------------------------+----------+-----------+------------+------------+----------+----------+---------+---------+------+

Backend IPv6 support is working too:
mysql> select * from mysql_servers;
+--------------+-------------------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+-------------+
| hostgroup_id | hostname          | port | status | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment     |
+--------------+-------------------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+-------------+
| 0            | 2001:abc:802::def | 3306 | ONLINE | 1      | 0           | 200             | 0                   | 0       | 0              | test server |
+--------------+-------------------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+-------------+
1 row in set (0.00 sec)",@renecannao can I rebase this with master or have to wait for some other changes still?,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,726,2016-10-09T18:14:54Z,2016-10-17T07:30:51Z,2016-10-18T06:55:12Z,MERGED,True,176,87,4,https://github.com/ton31337,Add IPv6 support,1,[],https://github.com/sysown/proxysql/pull/726,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/726#issuecomment-254123440,"Add IPv6 support. Please take a look, just tested in my testbed, everything works, but maybe you have more tests cases to cover. Related #460
With IPv4:
mysql> show full processlist;
+----------+-----------+------+--------------------+-----------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
| ThreadID | SessionID | user | db                 | cli_host  | cli_port | hostgroup | l_srv_host | l_srv_port | srv_host | srv_port | command | time_ms | info |
+----------+-----------+------+--------------------+-----------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
| 0        | 3         | root | information_schema | 127.0.0.1 | 51227    | 0         |            |            |          |          | Sleep   | 0       |      |
+----------+-----------+------+--------------------+-----------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
1 row in set (0.00 sec)

With IPv6:
mysql> show full processlist;
+----------+-----------+------+--------------------+-------------------------------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
| ThreadID | SessionID | user | db                 | cli_host                      | cli_port | hostgroup | l_srv_host | l_srv_port | srv_host | srv_port | command | time_ms | info |
+----------+-----------+------+--------------------+-------------------------------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
| 2        | 1         | root | information_schema | 2001:778:802:0:fa:ecbd:ac7f:0 | 39556    | 0         |            |            |          |          | Sleep   | 0       |      |
+----------+-----------+------+--------------------+-------------------------------+----------+-----------+------------+------------+----------+----------+---------+---------+------+

Backend IPv6 support is working too:
mysql> select * from mysql_servers;
+--------------+-------------------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+-------------+
| hostgroup_id | hostname          | port | status | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment     |
+--------------+-------------------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+-------------+
| 0            | 2001:abc:802::def | 3306 | ONLINE | 1      | 0           | 200             | 0                   | 0       | 0              | test server |
+--------------+-------------------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+-------------+
1 row in set (0.00 sec)","Hi @ton31337 : as I was suspecting, there are some conflicts with the changes I was working with.
Either I fix them in 4 hours (going AFK now), or please can you have a look at these conflicts?
Thank you!",True,{'THUMBS_UP': ['https://github.com/ton31337']}
sysown/proxysql,https://github.com/sysown/proxysql,726,2016-10-09T18:14:54Z,2016-10-17T07:30:51Z,2016-10-18T06:55:12Z,MERGED,True,176,87,4,https://github.com/ton31337,Add IPv6 support,1,[],https://github.com/sysown/proxysql/pull/726,https://github.com/ton31337,6,https://github.com/sysown/proxysql/pull/726#issuecomment-254124074,"Add IPv6 support. Please take a look, just tested in my testbed, everything works, but maybe you have more tests cases to cover. Related #460
With IPv4:
mysql> show full processlist;
+----------+-----------+------+--------------------+-----------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
| ThreadID | SessionID | user | db                 | cli_host  | cli_port | hostgroup | l_srv_host | l_srv_port | srv_host | srv_port | command | time_ms | info |
+----------+-----------+------+--------------------+-----------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
| 0        | 3         | root | information_schema | 127.0.0.1 | 51227    | 0         |            |            |          |          | Sleep   | 0       |      |
+----------+-----------+------+--------------------+-----------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
1 row in set (0.00 sec)

With IPv6:
mysql> show full processlist;
+----------+-----------+------+--------------------+-------------------------------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
| ThreadID | SessionID | user | db                 | cli_host                      | cli_port | hostgroup | l_srv_host | l_srv_port | srv_host | srv_port | command | time_ms | info |
+----------+-----------+------+--------------------+-------------------------------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
| 2        | 1         | root | information_schema | 2001:778:802:0:fa:ecbd:ac7f:0 | 39556    | 0         |            |            |          |          | Sleep   | 0       |      |
+----------+-----------+------+--------------------+-------------------------------+----------+-----------+------------+------------+----------+----------+---------+---------+------+

Backend IPv6 support is working too:
mysql> select * from mysql_servers;
+--------------+-------------------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+-------------+
| hostgroup_id | hostname          | port | status | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment     |
+--------------+-------------------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+-------------+
| 0            | 2001:abc:802::def | 3306 | ONLINE | 1      | 0           | 200             | 0                   | 0       | 0              | test server |
+--------------+-------------------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+-------------+
1 row in set (0.00 sec)","don't worry, already fixing these conflicts",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,726,2016-10-09T18:14:54Z,2016-10-17T07:30:51Z,2016-10-18T06:55:12Z,MERGED,True,176,87,4,https://github.com/ton31337,Add IPv6 support,1,[],https://github.com/sysown/proxysql/pull/726,https://github.com/renecannao,7,https://github.com/sysown/proxysql/pull/726#issuecomment-254125658,"Add IPv6 support. Please take a look, just tested in my testbed, everything works, but maybe you have more tests cases to cover. Related #460
With IPv4:
mysql> show full processlist;
+----------+-----------+------+--------------------+-----------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
| ThreadID | SessionID | user | db                 | cli_host  | cli_port | hostgroup | l_srv_host | l_srv_port | srv_host | srv_port | command | time_ms | info |
+----------+-----------+------+--------------------+-----------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
| 0        | 3         | root | information_schema | 127.0.0.1 | 51227    | 0         |            |            |          |          | Sleep   | 0       |      |
+----------+-----------+------+--------------------+-----------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
1 row in set (0.00 sec)

With IPv6:
mysql> show full processlist;
+----------+-----------+------+--------------------+-------------------------------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
| ThreadID | SessionID | user | db                 | cli_host                      | cli_port | hostgroup | l_srv_host | l_srv_port | srv_host | srv_port | command | time_ms | info |
+----------+-----------+------+--------------------+-------------------------------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
| 2        | 1         | root | information_schema | 2001:778:802:0:fa:ecbd:ac7f:0 | 39556    | 0         |            |            |          |          | Sleep   | 0       |      |
+----------+-----------+------+--------------------+-------------------------------+----------+-----------+------------+------------+----------+----------+---------+---------+------+

Backend IPv6 support is working too:
mysql> select * from mysql_servers;
+--------------+-------------------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+-------------+
| hostgroup_id | hostname          | port | status | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment     |
+--------------+-------------------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+-------------+
| 0            | 2001:abc:802::def | 3306 | ONLINE | 1      | 0           | 200             | 0                   | 0       | 0              | test server |
+--------------+-------------------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+-------------+
1 row in set (0.00 sec)",Thanks!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,726,2016-10-09T18:14:54Z,2016-10-17T07:30:51Z,2016-10-18T06:55:12Z,MERGED,True,176,87,4,https://github.com/ton31337,Add IPv6 support,1,[],https://github.com/sysown/proxysql/pull/726,https://github.com/ton31337,8,https://github.com/sysown/proxysql/pull/726#issuecomment-254130253,"Add IPv6 support. Please take a look, just tested in my testbed, everything works, but maybe you have more tests cases to cover. Related #460
With IPv4:
mysql> show full processlist;
+----------+-----------+------+--------------------+-----------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
| ThreadID | SessionID | user | db                 | cli_host  | cli_port | hostgroup | l_srv_host | l_srv_port | srv_host | srv_port | command | time_ms | info |
+----------+-----------+------+--------------------+-----------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
| 0        | 3         | root | information_schema | 127.0.0.1 | 51227    | 0         |            |            |          |          | Sleep   | 0       |      |
+----------+-----------+------+--------------------+-----------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
1 row in set (0.00 sec)

With IPv6:
mysql> show full processlist;
+----------+-----------+------+--------------------+-------------------------------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
| ThreadID | SessionID | user | db                 | cli_host                      | cli_port | hostgroup | l_srv_host | l_srv_port | srv_host | srv_port | command | time_ms | info |
+----------+-----------+------+--------------------+-------------------------------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
| 2        | 1         | root | information_schema | 2001:778:802:0:fa:ecbd:ac7f:0 | 39556    | 0         |            |            |          |          | Sleep   | 0       |      |
+----------+-----------+------+--------------------+-------------------------------+----------+-----------+------------+------------+----------+----------+---------+---------+------+

Backend IPv6 support is working too:
mysql> select * from mysql_servers;
+--------------+-------------------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+-------------+
| hostgroup_id | hostname          | port | status | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment     |
+--------------+-------------------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+-------------+
| 0            | 2001:abc:802::def | 3306 | ONLINE | 1      | 0           | 200             | 0                   | 0       | 0              | test server |
+--------------+-------------------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+-------------+
1 row in set (0.00 sec)",rebased,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,726,2016-10-09T18:14:54Z,2016-10-17T07:30:51Z,2016-10-18T06:55:12Z,MERGED,True,176,87,4,https://github.com/ton31337,Add IPv6 support,1,[],https://github.com/sysown/proxysql/pull/726,https://github.com/renecannao,9,https://github.com/sysown/proxysql/pull/726#issuecomment-254132756,"Add IPv6 support. Please take a look, just tested in my testbed, everything works, but maybe you have more tests cases to cover. Related #460
With IPv4:
mysql> show full processlist;
+----------+-----------+------+--------------------+-----------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
| ThreadID | SessionID | user | db                 | cli_host  | cli_port | hostgroup | l_srv_host | l_srv_port | srv_host | srv_port | command | time_ms | info |
+----------+-----------+------+--------------------+-----------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
| 0        | 3         | root | information_schema | 127.0.0.1 | 51227    | 0         |            |            |          |          | Sleep   | 0       |      |
+----------+-----------+------+--------------------+-----------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
1 row in set (0.00 sec)

With IPv6:
mysql> show full processlist;
+----------+-----------+------+--------------------+-------------------------------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
| ThreadID | SessionID | user | db                 | cli_host                      | cli_port | hostgroup | l_srv_host | l_srv_port | srv_host | srv_port | command | time_ms | info |
+----------+-----------+------+--------------------+-------------------------------+----------+-----------+------------+------------+----------+----------+---------+---------+------+
| 2        | 1         | root | information_schema | 2001:778:802:0:fa:ecbd:ac7f:0 | 39556    | 0         |            |            |          |          | Sleep   | 0       |      |
+----------+-----------+------+--------------------+-------------------------------+----------+-----------+------------+------------+----------+----------+---------+---------+------+

Backend IPv6 support is working too:
mysql> select * from mysql_servers;
+--------------+-------------------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+-------------+
| hostgroup_id | hostname          | port | status | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment     |
+--------------+-------------------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+-------------+
| 0            | 2001:abc:802::def | 3306 | ONLINE | 1      | 0           | 200             | 0                   | 0       | 0              | test server |
+--------------+-------------------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+-------------+
1 row in set (0.00 sec)",Thank you @ton31337 !!!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,727,2016-10-10T12:57:43Z,2016-10-17T12:16:10Z,2016-10-17T12:16:16Z,MERGED,True,1,1,1,https://github.com/bzed,Fix typo in README.md,1,[],https://github.com/sysown/proxysql/pull/727,https://github.com/bzed,1,https://github.com/sysown/proxysql/pull/727,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,727,2016-10-10T12:57:43Z,2016-10-17T12:16:10Z,2016-10-17T12:16:16Z,MERGED,True,1,1,1,https://github.com/bzed,Fix typo in README.md,1,[],https://github.com/sysown/proxysql/pull/727,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/727#issuecomment-254190927,,Thanks!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,734,2016-10-12T21:33:28Z,2016-10-17T06:19:29Z,2016-10-17T06:19:37Z,MERGED,True,4,4,1,https://github.com/shadyan,"Fixed a couple of distracting typos from the ""Multi-layer configuration system"" page in the docs",1,[],https://github.com/sysown/proxysql/pull/734,https://github.com/shadyan,1,https://github.com/sysown/proxysql/pull/734,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,734,2016-10-12T21:33:28Z,2016-10-17T06:19:29Z,2016-10-17T06:19:37Z,MERGED,True,4,4,1,https://github.com/shadyan,"Fixed a couple of distracting typos from the ""Multi-layer configuration system"" page in the docs",1,[],https://github.com/sysown/proxysql/pull/734,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/734#issuecomment-254121521,,Thank you!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,737,2016-10-15T17:47:12Z,2016-10-17T06:20:17Z,2016-10-17T06:26:38Z,MERGED,True,1,0,1,https://github.com/ton31337,Do not shunt the server if max_user_connections is reached for user,1,[],https://github.com/sysown/proxysql/pull/737,https://github.com/ton31337,1,https://github.com/sysown/proxysql/pull/737,"Do not shunt the server if max_user_connections is reached for user.
I see the situation when we have limits for every user like:
Oct 15 17:25:45 us-imm-proxysql1.xxx.io proxysql[924]: 2016-10-15 17:25:45 mysql_connection.cpp:495:handler(): [ERROR] Failed to mysql_real_connect() on v6.us-imm-sql1.xxx.io:3306 , FD (Conn:38 , MyDS:38) , 1226: User 'id37680_wp_94591388bdb77a428ed7ffaa2c63f641' has exceeded the 'max_user_connections' resource (current value: 3).

This is the problem, because this always calls NEXT_IMMEDIATE(ASYNC_CONNECT_FAILED);, which in turn increases connect_ERR_at_time_last_detected_error and sets status=MYSQL_SERVER_STATUS_SHUNNED;. This means, that we have this ERROR almost all the time:
Oct 15 17:26:51 us-imm-proxysql1.000webhost.io proxysql[924]: 2016-10-15 17:26:51 MySQL_HostGroups_Manager.cpp:166:connect_error(): [ERROR] Shunning server v6.us-imm-sql1.xxx.io:3306 with 5 errors/sec. Shunning for 10 seconds

@renecannao","Do not shunt the server if max_user_connections is reached for user.
I see the situation when we have limits for every user like:
Oct 15 17:25:45 us-imm-proxysql1.xxx.io proxysql[924]: 2016-10-15 17:25:45 mysql_connection.cpp:495:handler(): [ERROR] Failed to mysql_real_connect() on v6.us-imm-sql1.xxx.io:3306 , FD (Conn:38 , MyDS:38) , 1226: User 'id37680_wp_94591388bdb77a428ed7ffaa2c63f641' has exceeded the 'max_user_connections' resource (current value: 3).

This is the problem, because this always calls NEXT_IMMEDIATE(ASYNC_CONNECT_FAILED);, which in turn increases connect_ERR_at_time_last_detected_error and sets status=MYSQL_SERVER_STATUS_SHUNNED;. This means, that we have this ERROR almost all the time:
Oct 15 17:26:51 us-imm-proxysql1.000webhost.io proxysql[924]: 2016-10-15 17:26:51 MySQL_HostGroups_Manager.cpp:166:connect_error(): [ERROR] Shunning server v6.us-imm-sql1.xxx.io:3306 with 5 errors/sec. Shunning for 10 seconds

@renecannao",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,737,2016-10-15T17:47:12Z,2016-10-17T06:20:17Z,2016-10-17T06:26:38Z,MERGED,True,1,0,1,https://github.com/ton31337,Do not shunt the server if max_user_connections is reached for user,1,[],https://github.com/sysown/proxysql/pull/737,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/737#issuecomment-254004224,"Do not shunt the server if max_user_connections is reached for user.
I see the situation when we have limits for every user like:
Oct 15 17:25:45 us-imm-proxysql1.xxx.io proxysql[924]: 2016-10-15 17:25:45 mysql_connection.cpp:495:handler(): [ERROR] Failed to mysql_real_connect() on v6.us-imm-sql1.xxx.io:3306 , FD (Conn:38 , MyDS:38) , 1226: User 'id37680_wp_94591388bdb77a428ed7ffaa2c63f641' has exceeded the 'max_user_connections' resource (current value: 3).

This is the problem, because this always calls NEXT_IMMEDIATE(ASYNC_CONNECT_FAILED);, which in turn increases connect_ERR_at_time_last_detected_error and sets status=MYSQL_SERVER_STATUS_SHUNNED;. This means, that we have this ERROR almost all the time:
Oct 15 17:26:51 us-imm-proxysql1.000webhost.io proxysql[924]: 2016-10-15 17:26:51 MySQL_HostGroups_Manager.cpp:166:connect_error(): [ERROR] Shunning server v6.us-imm-sql1.xxx.io:3306 with 5 errors/sec. Shunning for 10 seconds

@renecannao","Hi Donatas,
In general, if a database server is reporting an error, it is a red flag.
Although, there are a list of errors that are filtered out: 1044 , 1045 and 1049.
The reason why they are filtered is that a misconfiguration (1044 and 1045) or user can intentionally (1049) shun the database server.
Error 1226 (has exceeded the 'max_user_connections' resource) is somehow tricky: if a database server has reached a limit because of that user, maybe there is a problem.
I think the issue should be solved in a different way: ProxySQL should limit the number of connections to backend per user (right now, it is only per server).
A solution, already possible, is to create a hostgroup per user, and in this way is easy to define a maximum number of connection per user.
I will merge this pull request, as right now seems an efficient way to solve the issue.
But to reiterated, I think ProxySQL should prevent this error to happen, limiting the number of connections at database level.
Thanks,
Ren√©",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,737,2016-10-15T17:47:12Z,2016-10-17T06:20:17Z,2016-10-17T06:26:38Z,MERGED,True,1,0,1,https://github.com/ton31337,Do not shunt the server if max_user_connections is reached for user,1,[],https://github.com/sysown/proxysql/pull/737,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/737#issuecomment-254121617,"Do not shunt the server if max_user_connections is reached for user.
I see the situation when we have limits for every user like:
Oct 15 17:25:45 us-imm-proxysql1.xxx.io proxysql[924]: 2016-10-15 17:25:45 mysql_connection.cpp:495:handler(): [ERROR] Failed to mysql_real_connect() on v6.us-imm-sql1.xxx.io:3306 , FD (Conn:38 , MyDS:38) , 1226: User 'id37680_wp_94591388bdb77a428ed7ffaa2c63f641' has exceeded the 'max_user_connections' resource (current value: 3).

This is the problem, because this always calls NEXT_IMMEDIATE(ASYNC_CONNECT_FAILED);, which in turn increases connect_ERR_at_time_last_detected_error and sets status=MYSQL_SERVER_STATUS_SHUNNED;. This means, that we have this ERROR almost all the time:
Oct 15 17:26:51 us-imm-proxysql1.000webhost.io proxysql[924]: 2016-10-15 17:26:51 MySQL_HostGroups_Manager.cpp:166:connect_error(): [ERROR] Shunning server v6.us-imm-sql1.xxx.io:3306 with 5 errors/sec. Shunning for 10 seconds

@renecannao",Thank you!,True,{'THUMBS_UP': ['https://github.com/ton31337']}
sysown/proxysql,https://github.com/sysown/proxysql,738,2016-10-16T15:36:26Z,2016-10-16T22:52:10Z,2016-12-30T09:48:39Z,MERGED,True,832,83,13,https://github.com/renecannao,V1.3.0 exp2,47,[],https://github.com/sysown/proxysql/pull/738,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/738,"Merging the experimental v1.3.0-exp2 into v1.3.0.
ProxySQL in this branch can easily accept one million connections.
It is also able to handle workloads with hundreds thousands client connections, but only few connections are active.
For example, 100k total connections, but only 100 active connections.
This merge includes:

support for SO_REUSEPORT , that can be only enabled on the command line with -r or --reuseport
at startup, limit the number of Monitor thread to 16
each MySQL_Thread now has a pair thread: therefore the number of threads executed are mysql-threads x 2
the second set of MySQL_Threads are responsible to only handle idle connections
two new variables:

mysql-session_idle_ms (default 1000) : when a session is idle for that long, it is moved to a thread responsible to handle idle connections
mysql-session_idle_show_processlist (default false) : specifies if idle connections are displayed on SHOW PROCESSLIST or on any query against stats_mysql_processlist


one new status variable:
Client_Connections_non_idle : returns the number of client connections that are not idle, therefore handled by the main MySQL_Threads and not moved to the second set of MySQL_Threads responsible to only handle idle connections","Merging the experimental v1.3.0-exp2 into v1.3.0.
ProxySQL in this branch can easily accept one million connections.
It is also able to handle workloads with hundreds thousands client connections, but only few connections are active.
For example, 100k total connections, but only 100 active connections.
This merge includes:

support for SO_REUSEPORT , that can be only enabled on the command line with -r or --reuseport
at startup, limit the number of Monitor thread to 16
each MySQL_Thread now has a pair thread: therefore the number of threads executed are mysql-threads x 2
the second set of MySQL_Threads are responsible to only handle idle connections
two new variables:

mysql-session_idle_ms (default 1000) : when a session is idle for that long, it is moved to a thread responsible to handle idle connections
mysql-session_idle_show_processlist (default false) : specifies if idle connections are displayed on SHOW PROCESSLIST or on any query against stats_mysql_processlist


one new status variable:
Client_Connections_non_idle : returns the number of client connections that are not idle, therefore handled by the main MySQL_Threads and not moved to the second set of MySQL_Threads responsible to only handle idle connections",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,739,2016-10-16T22:52:55Z,2016-10-17T06:18:26Z,2016-10-17T06:18:26Z,MERGED,True,5853,753,49,https://github.com/renecannao,V1.3.0,117,[],https://github.com/sysown/proxysql/pull/739,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/739,"Merging  v1.3.0 into master. This pull requests includes all the changes in v1.3.0-exp2 , listed in #738 .
Additionally, it includes:

A lot of code refactoring
Support for prepared statements
reduced memory allocation overhead
upgrade from mariadb-connector-c 2.1.0 to 2.3.1
several performance improvements
use of pthread_mutex for connection pool","Merging  v1.3.0 into master. This pull requests includes all the changes in v1.3.0-exp2 , listed in #738 .
Additionally, it includes:

A lot of code refactoring
Support for prepared statements
reduced memory allocation overhead
upgrade from mariadb-connector-c 2.1.0 to 2.3.1
several performance improvements
use of pthread_mutex for connection pool",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,762,2016-10-28T13:59:21Z,2016-10-28T14:07:11Z,2017-06-20T20:02:07Z,CLOSED,False,4,0,1,https://github.com/ton31337,Do not `assert()` on `COM_SLEEP`,1,[],https://github.com/sysown/proxysql/pull/762,https://github.com/ton31337,1,https://github.com/sysown/proxysql/pull/762,"Do not assert() on COM_SLEEP.
(gdb) bt
#0  0x00007f3601ee75f7 in raise () from /lib64/libc.so.6
#1  0x00007f3601ee8ce8 in abort () from /lib64/libc.so.6
#2  0x00007f3601ee0566 in __assert_fail_base () from /lib64/libc.so.6
#3  0x00007f3601ee0612 in __assert_fail () from /lib64/libc.so.6
#4  0x0000000000466242 in MySQL_Session::handler (this=this@entry=0x7f35f8631000) at MySQL_Session.cpp:1745
#5  0x0000000000454dc4 in MySQL_Thread::process_all_sessions (this=this@entry=0x7f35f860d000) at MySQL_Thread.cpp:2678
#6  0x000000000045cfd1 in MySQL_Thread::run (this=this@entry=0x7f35f860d000) at MySQL_Thread.cpp:2518
#7  0x0000000000438f24 in mysql_worker_thread_func (arg=0x7f360043c9b0) at main.cpp:165
#8  0x00007f3603712dc5 in start_thread () from /lib64/libpthread.so.0
#9  0x00007f3601fa8ced in clone () from /lib64/libc.so.6

(gdb) p (enum_mysql_command)c
$2 = _MYSQL_COM_SLEEP

(gdb) p pkt
$2 = {ptr = 0x7f35f8617940, size = 28}

(gdb) x/28b pkt->ptr
0x7f35f8617940:    24    0    0    0    24    1    0    0
0x7f35f8617948:    0    0    0    97    58    49    58    123
0x7f35f8617950:    105    58    48    59    115    58    48    58
0x7f35f8617958:    34    34    59    125

Quick workaround around to do not crash ProxySQL instance..
@renecannao","Do not assert() on COM_SLEEP.
(gdb) bt
#0  0x00007f3601ee75f7 in raise () from /lib64/libc.so.6
#1  0x00007f3601ee8ce8 in abort () from /lib64/libc.so.6
#2  0x00007f3601ee0566 in __assert_fail_base () from /lib64/libc.so.6
#3  0x00007f3601ee0612 in __assert_fail () from /lib64/libc.so.6
#4  0x0000000000466242 in MySQL_Session::handler (this=this@entry=0x7f35f8631000) at MySQL_Session.cpp:1745
#5  0x0000000000454dc4 in MySQL_Thread::process_all_sessions (this=this@entry=0x7f35f860d000) at MySQL_Thread.cpp:2678
#6  0x000000000045cfd1 in MySQL_Thread::run (this=this@entry=0x7f35f860d000) at MySQL_Thread.cpp:2518
#7  0x0000000000438f24 in mysql_worker_thread_func (arg=0x7f360043c9b0) at main.cpp:165
#8  0x00007f3603712dc5 in start_thread () from /lib64/libpthread.so.0
#9  0x00007f3601fa8ced in clone () from /lib64/libc.so.6

(gdb) p (enum_mysql_command)c
$2 = _MYSQL_COM_SLEEP

(gdb) p pkt
$2 = {ptr = 0x7f35f8617940, size = 28}

(gdb) x/28b pkt->ptr
0x7f35f8617940:    24    0    0    0    24    1    0    0
0x7f35f8617948:    0    0    0    97    58    49    58    123
0x7f35f8617950:    105    58    48    59    115    58    48    58
0x7f35f8617958:    34    34    59    125

Quick workaround around to do not crash ProxySQL instance..
@renecannao",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,762,2016-10-28T13:59:21Z,2016-10-28T14:07:11Z,2017-06-20T20:02:07Z,CLOSED,False,4,0,1,https://github.com/ton31337,Do not `assert()` on `COM_SLEEP`,1,[],https://github.com/sysown/proxysql/pull/762,https://github.com/ton31337,2,https://github.com/sysown/proxysql/pull/762#issuecomment-256929198,"Do not assert() on COM_SLEEP.
(gdb) bt
#0  0x00007f3601ee75f7 in raise () from /lib64/libc.so.6
#1  0x00007f3601ee8ce8 in abort () from /lib64/libc.so.6
#2  0x00007f3601ee0566 in __assert_fail_base () from /lib64/libc.so.6
#3  0x00007f3601ee0612 in __assert_fail () from /lib64/libc.so.6
#4  0x0000000000466242 in MySQL_Session::handler (this=this@entry=0x7f35f8631000) at MySQL_Session.cpp:1745
#5  0x0000000000454dc4 in MySQL_Thread::process_all_sessions (this=this@entry=0x7f35f860d000) at MySQL_Thread.cpp:2678
#6  0x000000000045cfd1 in MySQL_Thread::run (this=this@entry=0x7f35f860d000) at MySQL_Thread.cpp:2518
#7  0x0000000000438f24 in mysql_worker_thread_func (arg=0x7f360043c9b0) at main.cpp:165
#8  0x00007f3603712dc5 in start_thread () from /lib64/libpthread.so.0
#9  0x00007f3601fa8ced in clone () from /lib64/libc.so.6

(gdb) p (enum_mysql_command)c
$2 = _MYSQL_COM_SLEEP

(gdb) p pkt
$2 = {ptr = 0x7f35f8617940, size = 28}

(gdb) x/28b pkt->ptr
0x7f35f8617940:    24    0    0    0    24    1    0    0
0x7f35f8617948:    0    0    0    97    58    49    58    123
0x7f35f8617950:    105    58    48    59    115    58    48    58
0x7f35f8617958:    34    34    59    125

Quick workaround around to do not crash ProxySQL instance..
@renecannao",will try to catch tcpdump,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,781,2016-11-04T11:48:53Z,2016-11-07T09:10:12Z,2016-11-07T09:34:14Z,MERGED,True,22,21,2,https://github.com/ton31337,Add custom union for handling both sockaddr_in/sockaddr_in6 structures,1,[],https://github.com/sysown/proxysql/pull/781,https://github.com/ton31337,1,https://github.com/sysown/proxysql/pull/781,"In addition use two MACROs for allocating buffers to store IP addresses, thus saving some space.
(gdb) bt
#0  0x00007f6b1a22cfb3 in inet_ntop () from /lib64/libc.so.6
#1  0x0000000000456189 in MySQL_Thread::listener_handle_new_connection (this=0x7f6b1100d000, myds=0x7f6b1101a200, n=<optimized out>) at MySQL_Thread.cpp:2910
#2  0x000000000045d16e in MySQL_Thread::run (this=this@entry=0x7f6b1100d000) at MySQL_Thread.cpp:2452
#3  0x00000000004390d4 in mysql_worker_thread_func (arg=0x7f6b1863c990) at main.cpp:165
#4  0x00007f6b1b988dc5 in start_thread () from /lib64/libpthread.so.0
#5  0x00007f6b1a21eced in clone () from /lib64/libc.so.6

(gdb) x/16b &(*(struct sockaddr_in6 *)sess->client_myds->client_addr)->sin6_addr
0x7f6b021ffff8:	0x2a	0x02	0x47	0x80	0x0b	0xad	0xf0	0x0d
0x7f6b02200000:	Cannot access memory at address 0x7f6b02200000","In addition use two MACROs for allocating buffers to store IP addresses, thus saving some space.
(gdb) bt
#0  0x00007f6b1a22cfb3 in inet_ntop () from /lib64/libc.so.6
#1  0x0000000000456189 in MySQL_Thread::listener_handle_new_connection (this=0x7f6b1100d000, myds=0x7f6b1101a200, n=<optimized out>) at MySQL_Thread.cpp:2910
#2  0x000000000045d16e in MySQL_Thread::run (this=this@entry=0x7f6b1100d000) at MySQL_Thread.cpp:2452
#3  0x00000000004390d4 in mysql_worker_thread_func (arg=0x7f6b1863c990) at main.cpp:165
#4  0x00007f6b1b988dc5 in start_thread () from /lib64/libpthread.so.0
#5  0x00007f6b1a21eced in clone () from /lib64/libc.so.6

(gdb) x/16b &(*(struct sockaddr_in6 *)sess->client_myds->client_addr)->sin6_addr
0x7f6b021ffff8:	0x2a	0x02	0x47	0x80	0x0b	0xad	0xf0	0x0d
0x7f6b02200000:	Cannot access memory at address 0x7f6b02200000",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,781,2016-11-04T11:48:53Z,2016-11-07T09:10:12Z,2016-11-07T09:34:14Z,MERGED,True,22,21,2,https://github.com/ton31337,Add custom union for handling both sockaddr_in/sockaddr_in6 structures,1,[],https://github.com/sysown/proxysql/pull/781,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/781#issuecomment-258784554,"In addition use two MACROs for allocating buffers to store IP addresses, thus saving some space.
(gdb) bt
#0  0x00007f6b1a22cfb3 in inet_ntop () from /lib64/libc.so.6
#1  0x0000000000456189 in MySQL_Thread::listener_handle_new_connection (this=0x7f6b1100d000, myds=0x7f6b1101a200, n=<optimized out>) at MySQL_Thread.cpp:2910
#2  0x000000000045d16e in MySQL_Thread::run (this=this@entry=0x7f6b1100d000) at MySQL_Thread.cpp:2452
#3  0x00000000004390d4 in mysql_worker_thread_func (arg=0x7f6b1863c990) at main.cpp:165
#4  0x00007f6b1b988dc5 in start_thread () from /lib64/libpthread.so.0
#5  0x00007f6b1a21eced in clone () from /lib64/libc.so.6

(gdb) x/16b &(*(struct sockaddr_in6 *)sess->client_myds->client_addr)->sin6_addr
0x7f6b021ffff8:	0x2a	0x02	0x47	0x80	0x0b	0xad	0xf0	0x0d
0x7f6b02200000:	Cannot access memory at address 0x7f6b02200000",Thanks! Merged in master and v1.3.0,True,{'THUMBS_UP': ['https://github.com/ton31337']}
sysown/proxysql,https://github.com/sysown/proxysql,791,2016-11-09T13:08:44Z,2016-11-09T13:12:55Z,2016-11-09T13:13:02Z,MERGED,True,2,2,1,https://github.com/grypyrg,galera_checker: prefer nodes with higher weight when number_writers>1,1,[],https://github.com/sysown/proxysql/pull/791,https://github.com/grypyrg,1,https://github.com/sysown/proxysql/pull/791,"When using the proxysql_galera_checker.sh scheduler script, and limiting the number of writers, prefer nodes with highest weight to remain ONLINE","When using the proxysql_galera_checker.sh scheduler script, and limiting the number of writers, prefer nodes with highest weight to remain ONLINE",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,791,2016-11-09T13:08:44Z,2016-11-09T13:12:55Z,2016-11-09T13:13:02Z,MERGED,True,2,2,1,https://github.com/grypyrg,galera_checker: prefer nodes with higher weight when number_writers>1,1,[],https://github.com/sysown/proxysql/pull/791,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/791#issuecomment-259411471,"When using the proxysql_galera_checker.sh scheduler script, and limiting the number of writers, prefer nodes with highest weight to remain ONLINE",Thank you!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,800,2016-11-16T11:33:44Z,2016-12-13T18:35:22Z,2016-12-13T18:35:50Z,MERGED,True,241,62,1,https://github.com/grypyrg,semi-rewrite of proxysql_galera_checker.sh,2,[],https://github.com/sysown/proxysql/pull/800,https://github.com/grypyrg,1,https://github.com/sysown/proxysql/pull/800,"I had several issues with proxysql_galera_checker.sh so I semi-rewrote it.
Notable Changes:

Nodes were first marked ONLINE then OFFLINE_SOFT depending on readers_are_writers and number_of_writers settings.
This is not a problem if you only have one scheduler job running. but if you manage more than 1 cluster, you need to run more than one scheduler. As LOAD MYSQL SERVERS INTO RUNTIME loads all configs, often runtime configuration would end up with those intermediate statusses, as reported in #790
This new version does not change a status more than once, except when all nodes are down
Argument validation
Documentation: Included a more extensive usage
The error log is more readdable
Got rid of the Warnings: that were printed
STDOUT will not output anything anymore, all goes to the error log
Nodes with higher weight get first pick on becoming ONLINE

This version is not perfect. Bash is not the right tool for this, but this version works a lot better than the previous version.","I had several issues with proxysql_galera_checker.sh so I semi-rewrote it.
Notable Changes:

Nodes were first marked ONLINE then OFFLINE_SOFT depending on readers_are_writers and number_of_writers settings.
This is not a problem if you only have one scheduler job running. but if you manage more than 1 cluster, you need to run more than one scheduler. As LOAD MYSQL SERVERS INTO RUNTIME loads all configs, often runtime configuration would end up with those intermediate statusses, as reported in #790
This new version does not change a status more than once, except when all nodes are down
Argument validation
Documentation: Included a more extensive usage
The error log is more readdable
Got rid of the Warnings: that were printed
STDOUT will not output anything anymore, all goes to the error log
Nodes with higher weight get first pick on becoming ONLINE

This version is not perfect. Bash is not the right tool for this, but this version works a lot better than the previous version.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,800,2016-11-16T11:33:44Z,2016-12-13T18:35:22Z,2016-12-13T18:35:50Z,MERGED,True,241,62,1,https://github.com/grypyrg,semi-rewrite of proxysql_galera_checker.sh,2,[],https://github.com/sysown/proxysql/pull/800,https://github.com/grypyrg,2,https://github.com/sysown/proxysql/pull/800#issuecomment-266821789,"I had several issues with proxysql_galera_checker.sh so I semi-rewrote it.
Notable Changes:

Nodes were first marked ONLINE then OFFLINE_SOFT depending on readers_are_writers and number_of_writers settings.
This is not a problem if you only have one scheduler job running. but if you manage more than 1 cluster, you need to run more than one scheduler. As LOAD MYSQL SERVERS INTO RUNTIME loads all configs, often runtime configuration would end up with those intermediate statusses, as reported in #790
This new version does not change a status more than once, except when all nodes are down
Argument validation
Documentation: Included a more extensive usage
The error log is more readdable
Got rid of the Warnings: that were printed
STDOUT will not output anything anymore, all goes to the error log
Nodes with higher weight get first pick on becoming ONLINE

This version is not perfect. Bash is not the right tool for this, but this version works a lot better than the previous version.",@renecannao : Any feedback on this PR?,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,800,2016-11-16T11:33:44Z,2016-12-13T18:35:22Z,2016-12-13T18:35:50Z,MERGED,True,241,62,1,https://github.com/grypyrg,semi-rewrite of proxysql_galera_checker.sh,2,[],https://github.com/sysown/proxysql/pull/800,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/800#issuecomment-266822559,"I had several issues with proxysql_galera_checker.sh so I semi-rewrote it.
Notable Changes:

Nodes were first marked ONLINE then OFFLINE_SOFT depending on readers_are_writers and number_of_writers settings.
This is not a problem if you only have one scheduler job running. but if you manage more than 1 cluster, you need to run more than one scheduler. As LOAD MYSQL SERVERS INTO RUNTIME loads all configs, often runtime configuration would end up with those intermediate statusses, as reported in #790
This new version does not change a status more than once, except when all nodes are down
Argument validation
Documentation: Included a more extensive usage
The error log is more readdable
Got rid of the Warnings: that were printed
STDOUT will not output anything anymore, all goes to the error log
Nodes with higher weight get first pick on becoming ONLINE

This version is not perfect. Bash is not the right tool for this, but this version works a lot better than the previous version.","@grypyrg : Merged, thanks.
It will be merged also in 1.3.2",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,808,2016-11-27T15:57:23Z,2017-01-16T13:06:21Z,2017-01-16T13:20:00Z,MERGED,True,0,1,1,https://github.com/iredmail,Don't exit with non-zero code if proxysql was stopped,1,[],https://github.com/sysown/proxysql/pull/808,https://github.com/iredmail,1,https://github.com/sysown/proxysql/pull/808,"If proxysql is stopped, function stop() should return exit code 0 instead of a non-zero code. This also fixes restart action cannot start (a already stopped) proxysql service.","If proxysql is stopped, function stop() should return exit code 0 instead of a non-zero code. This also fixes restart action cannot start (a already stopped) proxysql service.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,808,2016-11-27T15:57:23Z,2017-01-16T13:06:21Z,2017-01-16T13:20:00Z,MERGED,True,0,1,1,https://github.com/iredmail,Don't exit with non-zero code if proxysql was stopped,1,[],https://github.com/sysown/proxysql/pull/808,https://github.com/iredmail,2,https://github.com/sysown/proxysql/pull/808#issuecomment-272700596,"If proxysql is stopped, function stop() should return exit code 0 instead of a non-zero code. This also fixes restart action cannot start (a already stopped) proxysql service.","Dear Rene,
Please merge this pull request ... Just one line changed, not that hard to review. :)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,808,2016-11-27T15:57:23Z,2017-01-16T13:06:21Z,2017-01-16T13:20:00Z,MERGED,True,0,1,1,https://github.com/iredmail,Don't exit with non-zero code if proxysql was stopped,1,[],https://github.com/sysown/proxysql/pull/808,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/808#issuecomment-272860091,"If proxysql is stopped, function stop() should return exit code 0 instead of a non-zero code. This also fixes restart action cannot start (a already stopped) proxysql service.","Merged and pushed also into v1.3.3-dev and v1.4.0.
Thank you!",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,812,2016-12-01T12:28:08Z,2019-03-16T11:10:16Z,2019-03-16T11:10:17Z,CLOSED,False,59,98,16,https://github.com/26fe,simple cleanup,5,[],https://github.com/sysown/proxysql/pull/812,https://github.com/26fe,1,https://github.com/sysown/proxysql/pull/812,"I have done very simple cleanup. Removed some binary file from test directory, and moved some python files used for test from  root source into test directory. It is a naive commit.","I have done very simple cleanup. Removed some binary file from test directory, and moved some python files used for test from  root source into test directory. It is a naive commit.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,812,2016-12-01T12:28:08Z,2019-03-16T11:10:16Z,2019-03-16T11:10:17Z,CLOSED,False,59,98,16,https://github.com/26fe,simple cleanup,5,[],https://github.com/sysown/proxysql/pull/812,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/812#issuecomment-473521057,"I have done very simple cleanup. Removed some binary file from test directory, and moved some python files used for test from  root source into test directory. It is a naive commit.","Very outdated.
Closing",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,825,2016-12-07T10:54:44Z,2016-12-29T21:20:29Z,2016-12-29T21:30:19Z,MERGED,True,76,38,5,https://github.com/klinometr,Added sticky flag realization,4,[],https://github.com/sysown/proxysql/pull/825,https://github.com/klinometr,1,https://github.com/sysown/proxysql/pull/825,"Hello Rene,
We've just moved to cloud, and started using XtraDB cluster. We've experienced some troubles with highload, so we opened couple of servers for read and write. But it also cause us some troubles like deadlocks. The possible solution for this was making one Cluster Node for write and others for readonly.
We've searching for solutions and found yours, which is great.
But for now we can't use it due to transactions. For example:
BEGIN; ## Starting transaction
INSERT INTO testTable (value) (10); ## Inserting some value, for example deposit amount
SELECT SUM(value) FROM testTable; ## Finding sum of deposits
INSERT INTO testTableRelation (maxValue) (10); ##Saving sum of deposits for client.
COMMIT; ##Commiting transaction

If I have rules, like:
select rule_id,match_pattern,destination_hostgroup from mysql_query_rules; 
+---------+------------------------+-----------------------+
| rule_id | match_pattern          | destination_hostgroup |
+---------+------------------------+-----------------------+
| 1       | ^SELECT                | 2                     |
| 2       | .*                     | 1                     |
+---------+------------------------+-----------------------+

Select will go through destination hostgroup, which includes readonly servers, which don't know about transaction yet, so I wouldn't get actual sum of deposits. And flagIN, flagOUT works only for each query separately.
So I've come up with an idea:
select rule_id,match_pattern,flagIN,flagOUT,destination_hostgroup,sticky_flag from mysql_query_rules; 
+---------+------------------------+--------+---------+-----------------------+-------------+
| rule_id | match_pattern          | flagIN | flagOUT | destination_hostgroup | sticky_flag |
+---------+------------------------+--------+---------+-----------------------+-------------+
| 1       | ^SELECT .* FOR UPDATE$ | 0      | 1       | 1                     | 1           |
| 2       | ^START TRANSACTION     | 0      | 1       | 1                     | 1           |
| 3       | ^BEGIN                 | 0      | 1       | 1                     | 1           |
| 5       | ^ROLLBACK              | 1      | NULL    | 1                     | 0           |
| 6       | ^COMMIT                | 1      | NULL    | 1                     | 0           |
| 7       | .*                     | 1      | 1       | 1                     | 1           |
| 100     | ^SELECT                | 0      | NULL    | 2                     | 0           |
| 1000    | .*                     | 0      | NULL    | 1                     | 0           |
+---------+------------------------+--------+---------+-----------------------+-------------+

I added new parameter - sticky_flag, which means that if the sticky_flag is true, we will begin next query with current flagOUT
For example:
SELECT * FROM testTableRelation; ## Getting sum of deposits for client
## rule_id = 100, flagIN = 0, flagOUT = 0, sticky_flag = 0, hostgroup = 2,
## Works like earlier (hostgroup = 2, readonly Node)

BEGIN; ## Starting transaction
## rule_id = 3, flagIN = 0, flagOUT = 1, sticky_flag = 1, hostgroup = 1
## Saves flagOUT = 1 to session, so it will be flagIn starting value on next query
## Works like earlier, hostgroup = 1, write Node

INSERT INTO testTable (value) (10); ## Inserting some value, for example deposit amount
## rule_id = 7, flagIN = 1, flagOUT = 1, sticky_flag = 1, hostgroup = 1
## Saves flagOUT = 1 to session, so it will be flagIn starting value on next query
## Works like earlier, hostgroup = 1, write Node

SELECT SUM(value) FROM testTable; ## Finding sum of deposits
## rule_id = 7, flagIN = 1, flagOUT = 1, sticky_flag = 1, hostgroup = 1
## Saves flagOUT = 1 to session, so it will be flagIn starting value on next query
## New working flow, select query went to write Node, cause it's the only node, that knows about transaction, so it will get correct result

INSERT INTO testTableRelation (maxValue) (10); ##Saving sum of deposits for client.
## rule_id = 7, flagIN = 1, flagOUT = 1, sticky_flag = 1, hostgroup = 1
## Saves flagOUT = 1 to session, so it will be flagIn starting value on next query
## Works like earlier, hostgroup = 1, write Node

COMMIT; ##Commiting transaction
## rule_id = 6, flagIN = 1, flagOUT = NULL, sticky_flag = 0, hostgroup = 1
## Resets sticky_flag to false in session, so next time starting value for flagIN will be 0.

SELECT SUM(value) FROM testTable; ## Finding sum of deposits
## rule_id = 100,  flagIN = 0, flagOUT = NULL, sticky_flag = 0, hostgroup = 2
## Works like earlier (hostgroup = 2, readonly Node)

My version is not perfect, also I don't use C++ much, but we've tested it, and it is working like it supposed to.","Hello Rene,
We've just moved to cloud, and started using XtraDB cluster. We've experienced some troubles with highload, so we opened couple of servers for read and write. But it also cause us some troubles like deadlocks. The possible solution for this was making one Cluster Node for write and others for readonly.
We've searching for solutions and found yours, which is great.
But for now we can't use it due to transactions. For example:
BEGIN; ## Starting transaction
INSERT INTO testTable (value) (10); ## Inserting some value, for example deposit amount
SELECT SUM(value) FROM testTable; ## Finding sum of deposits
INSERT INTO testTableRelation (maxValue) (10); ##Saving sum of deposits for client.
COMMIT; ##Commiting transaction

If I have rules, like:
select rule_id,match_pattern,destination_hostgroup from mysql_query_rules; 
+---------+------------------------+-----------------------+
| rule_id | match_pattern          | destination_hostgroup |
+---------+------------------------+-----------------------+
| 1       | ^SELECT                | 2                     |
| 2       | .*                     | 1                     |
+---------+------------------------+-----------------------+

Select will go through destination hostgroup, which includes readonly servers, which don't know about transaction yet, so I wouldn't get actual sum of deposits. And flagIN, flagOUT works only for each query separately.
So I've come up with an idea:
select rule_id,match_pattern,flagIN,flagOUT,destination_hostgroup,sticky_flag from mysql_query_rules; 
+---------+------------------------+--------+---------+-----------------------+-------------+
| rule_id | match_pattern          | flagIN | flagOUT | destination_hostgroup | sticky_flag |
+---------+------------------------+--------+---------+-----------------------+-------------+
| 1       | ^SELECT .* FOR UPDATE$ | 0      | 1       | 1                     | 1           |
| 2       | ^START TRANSACTION     | 0      | 1       | 1                     | 1           |
| 3       | ^BEGIN                 | 0      | 1       | 1                     | 1           |
| 5       | ^ROLLBACK              | 1      | NULL    | 1                     | 0           |
| 6       | ^COMMIT                | 1      | NULL    | 1                     | 0           |
| 7       | .*                     | 1      | 1       | 1                     | 1           |
| 100     | ^SELECT                | 0      | NULL    | 2                     | 0           |
| 1000    | .*                     | 0      | NULL    | 1                     | 0           |
+---------+------------------------+--------+---------+-----------------------+-------------+

I added new parameter - sticky_flag, which means that if the sticky_flag is true, we will begin next query with current flagOUT
For example:
SELECT * FROM testTableRelation; ## Getting sum of deposits for client
## rule_id = 100, flagIN = 0, flagOUT = 0, sticky_flag = 0, hostgroup = 2,
## Works like earlier (hostgroup = 2, readonly Node)

BEGIN; ## Starting transaction
## rule_id = 3, flagIN = 0, flagOUT = 1, sticky_flag = 1, hostgroup = 1
## Saves flagOUT = 1 to session, so it will be flagIn starting value on next query
## Works like earlier, hostgroup = 1, write Node

INSERT INTO testTable (value) (10); ## Inserting some value, for example deposit amount
## rule_id = 7, flagIN = 1, flagOUT = 1, sticky_flag = 1, hostgroup = 1
## Saves flagOUT = 1 to session, so it will be flagIn starting value on next query
## Works like earlier, hostgroup = 1, write Node

SELECT SUM(value) FROM testTable; ## Finding sum of deposits
## rule_id = 7, flagIN = 1, flagOUT = 1, sticky_flag = 1, hostgroup = 1
## Saves flagOUT = 1 to session, so it will be flagIn starting value on next query
## New working flow, select query went to write Node, cause it's the only node, that knows about transaction, so it will get correct result

INSERT INTO testTableRelation (maxValue) (10); ##Saving sum of deposits for client.
## rule_id = 7, flagIN = 1, flagOUT = 1, sticky_flag = 1, hostgroup = 1
## Saves flagOUT = 1 to session, so it will be flagIn starting value on next query
## Works like earlier, hostgroup = 1, write Node

COMMIT; ##Commiting transaction
## rule_id = 6, flagIN = 1, flagOUT = NULL, sticky_flag = 0, hostgroup = 1
## Resets sticky_flag to false in session, so next time starting value for flagIN will be 0.

SELECT SUM(value) FROM testTable; ## Finding sum of deposits
## rule_id = 100,  flagIN = 0, flagOUT = NULL, sticky_flag = 0, hostgroup = 2
## Works like earlier (hostgroup = 2, readonly Node)

My version is not perfect, also I don't use C++ much, but we've tested it, and it is working like it supposed to.",True,{'THUMBS_UP': ['https://github.com/Am6puk']}
sysown/proxysql,https://github.com/sysown/proxysql,825,2016-12-07T10:54:44Z,2016-12-29T21:20:29Z,2016-12-29T21:30:19Z,MERGED,True,76,38,5,https://github.com/klinometr,Added sticky flag realization,4,[],https://github.com/sysown/proxysql/pull/825,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/825#issuecomment-265425781,"Hello Rene,
We've just moved to cloud, and started using XtraDB cluster. We've experienced some troubles with highload, so we opened couple of servers for read and write. But it also cause us some troubles like deadlocks. The possible solution for this was making one Cluster Node for write and others for readonly.
We've searching for solutions and found yours, which is great.
But for now we can't use it due to transactions. For example:
BEGIN; ## Starting transaction
INSERT INTO testTable (value) (10); ## Inserting some value, for example deposit amount
SELECT SUM(value) FROM testTable; ## Finding sum of deposits
INSERT INTO testTableRelation (maxValue) (10); ##Saving sum of deposits for client.
COMMIT; ##Commiting transaction

If I have rules, like:
select rule_id,match_pattern,destination_hostgroup from mysql_query_rules; 
+---------+------------------------+-----------------------+
| rule_id | match_pattern          | destination_hostgroup |
+---------+------------------------+-----------------------+
| 1       | ^SELECT                | 2                     |
| 2       | .*                     | 1                     |
+---------+------------------------+-----------------------+

Select will go through destination hostgroup, which includes readonly servers, which don't know about transaction yet, so I wouldn't get actual sum of deposits. And flagIN, flagOUT works only for each query separately.
So I've come up with an idea:
select rule_id,match_pattern,flagIN,flagOUT,destination_hostgroup,sticky_flag from mysql_query_rules; 
+---------+------------------------+--------+---------+-----------------------+-------------+
| rule_id | match_pattern          | flagIN | flagOUT | destination_hostgroup | sticky_flag |
+---------+------------------------+--------+---------+-----------------------+-------------+
| 1       | ^SELECT .* FOR UPDATE$ | 0      | 1       | 1                     | 1           |
| 2       | ^START TRANSACTION     | 0      | 1       | 1                     | 1           |
| 3       | ^BEGIN                 | 0      | 1       | 1                     | 1           |
| 5       | ^ROLLBACK              | 1      | NULL    | 1                     | 0           |
| 6       | ^COMMIT                | 1      | NULL    | 1                     | 0           |
| 7       | .*                     | 1      | 1       | 1                     | 1           |
| 100     | ^SELECT                | 0      | NULL    | 2                     | 0           |
| 1000    | .*                     | 0      | NULL    | 1                     | 0           |
+---------+------------------------+--------+---------+-----------------------+-------------+

I added new parameter - sticky_flag, which means that if the sticky_flag is true, we will begin next query with current flagOUT
For example:
SELECT * FROM testTableRelation; ## Getting sum of deposits for client
## rule_id = 100, flagIN = 0, flagOUT = 0, sticky_flag = 0, hostgroup = 2,
## Works like earlier (hostgroup = 2, readonly Node)

BEGIN; ## Starting transaction
## rule_id = 3, flagIN = 0, flagOUT = 1, sticky_flag = 1, hostgroup = 1
## Saves flagOUT = 1 to session, so it will be flagIn starting value on next query
## Works like earlier, hostgroup = 1, write Node

INSERT INTO testTable (value) (10); ## Inserting some value, for example deposit amount
## rule_id = 7, flagIN = 1, flagOUT = 1, sticky_flag = 1, hostgroup = 1
## Saves flagOUT = 1 to session, so it will be flagIn starting value on next query
## Works like earlier, hostgroup = 1, write Node

SELECT SUM(value) FROM testTable; ## Finding sum of deposits
## rule_id = 7, flagIN = 1, flagOUT = 1, sticky_flag = 1, hostgroup = 1
## Saves flagOUT = 1 to session, so it will be flagIn starting value on next query
## New working flow, select query went to write Node, cause it's the only node, that knows about transaction, so it will get correct result

INSERT INTO testTableRelation (maxValue) (10); ##Saving sum of deposits for client.
## rule_id = 7, flagIN = 1, flagOUT = 1, sticky_flag = 1, hostgroup = 1
## Saves flagOUT = 1 to session, so it will be flagIn starting value on next query
## Works like earlier, hostgroup = 1, write Node

COMMIT; ##Commiting transaction
## rule_id = 6, flagIN = 1, flagOUT = NULL, sticky_flag = 0, hostgroup = 1
## Resets sticky_flag to false in session, so next time starting value for flagIN will be 0.

SELECT SUM(value) FROM testTable; ## Finding sum of deposits
## rule_id = 100,  flagIN = 0, flagOUT = NULL, sticky_flag = 0, hostgroup = 2
## Works like earlier (hostgroup = 2, readonly Node)

My version is not perfect, also I don't use C++ much, but we've tested it, and it is working like it supposed to.","@klinometr : thank you very much for the pull request!
I assume you were already familiar with mysql_users.transaction_persistent .
I must say the way you described how to solve this issue is really interesting!
I was already working on a different solution: I am sure you noticed fields sticky_conn and multiplex in mysql_query_rules, but isn't ready yet.
The way sticky_conn will work (isn't implemented yet) is that it will be possible to make a hostgroup/connection sticky based on a query rules.
I think the main difference between the two approaches are:

sticky_flag : it applies to the next query only
sticky_conn : it applies to all the query until sticky_conn is disabled again

I think the two approaches can live together, as they aren't mutually exclusive.
I will review the code later today: thank you again!
Few comments I have are:

flagOUT is used for current query: making it dual purposes can be confusing
related to point 1, instead of adding a flag (sticky_flag) I think will be less confusing and more efficient to have a column named next_query_flagOUT , so that the current query roles chaining is not affected (similar to mirror_flagOUT).
Thoughts?

Thanks,
Ren√©",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,825,2016-12-07T10:54:44Z,2016-12-29T21:20:29Z,2016-12-29T21:30:19Z,MERGED,True,76,38,5,https://github.com/klinometr,Added sticky flag realization,4,[],https://github.com/sysown/proxysql/pull/825,https://github.com/klinometr,3,https://github.com/sysown/proxysql/pull/825#issuecomment-265430449,"Hello Rene,
We've just moved to cloud, and started using XtraDB cluster. We've experienced some troubles with highload, so we opened couple of servers for read and write. But it also cause us some troubles like deadlocks. The possible solution for this was making one Cluster Node for write and others for readonly.
We've searching for solutions and found yours, which is great.
But for now we can't use it due to transactions. For example:
BEGIN; ## Starting transaction
INSERT INTO testTable (value) (10); ## Inserting some value, for example deposit amount
SELECT SUM(value) FROM testTable; ## Finding sum of deposits
INSERT INTO testTableRelation (maxValue) (10); ##Saving sum of deposits for client.
COMMIT; ##Commiting transaction

If I have rules, like:
select rule_id,match_pattern,destination_hostgroup from mysql_query_rules; 
+---------+------------------------+-----------------------+
| rule_id | match_pattern          | destination_hostgroup |
+---------+------------------------+-----------------------+
| 1       | ^SELECT                | 2                     |
| 2       | .*                     | 1                     |
+---------+------------------------+-----------------------+

Select will go through destination hostgroup, which includes readonly servers, which don't know about transaction yet, so I wouldn't get actual sum of deposits. And flagIN, flagOUT works only for each query separately.
So I've come up with an idea:
select rule_id,match_pattern,flagIN,flagOUT,destination_hostgroup,sticky_flag from mysql_query_rules; 
+---------+------------------------+--------+---------+-----------------------+-------------+
| rule_id | match_pattern          | flagIN | flagOUT | destination_hostgroup | sticky_flag |
+---------+------------------------+--------+---------+-----------------------+-------------+
| 1       | ^SELECT .* FOR UPDATE$ | 0      | 1       | 1                     | 1           |
| 2       | ^START TRANSACTION     | 0      | 1       | 1                     | 1           |
| 3       | ^BEGIN                 | 0      | 1       | 1                     | 1           |
| 5       | ^ROLLBACK              | 1      | NULL    | 1                     | 0           |
| 6       | ^COMMIT                | 1      | NULL    | 1                     | 0           |
| 7       | .*                     | 1      | 1       | 1                     | 1           |
| 100     | ^SELECT                | 0      | NULL    | 2                     | 0           |
| 1000    | .*                     | 0      | NULL    | 1                     | 0           |
+---------+------------------------+--------+---------+-----------------------+-------------+

I added new parameter - sticky_flag, which means that if the sticky_flag is true, we will begin next query with current flagOUT
For example:
SELECT * FROM testTableRelation; ## Getting sum of deposits for client
## rule_id = 100, flagIN = 0, flagOUT = 0, sticky_flag = 0, hostgroup = 2,
## Works like earlier (hostgroup = 2, readonly Node)

BEGIN; ## Starting transaction
## rule_id = 3, flagIN = 0, flagOUT = 1, sticky_flag = 1, hostgroup = 1
## Saves flagOUT = 1 to session, so it will be flagIn starting value on next query
## Works like earlier, hostgroup = 1, write Node

INSERT INTO testTable (value) (10); ## Inserting some value, for example deposit amount
## rule_id = 7, flagIN = 1, flagOUT = 1, sticky_flag = 1, hostgroup = 1
## Saves flagOUT = 1 to session, so it will be flagIn starting value on next query
## Works like earlier, hostgroup = 1, write Node

SELECT SUM(value) FROM testTable; ## Finding sum of deposits
## rule_id = 7, flagIN = 1, flagOUT = 1, sticky_flag = 1, hostgroup = 1
## Saves flagOUT = 1 to session, so it will be flagIn starting value on next query
## New working flow, select query went to write Node, cause it's the only node, that knows about transaction, so it will get correct result

INSERT INTO testTableRelation (maxValue) (10); ##Saving sum of deposits for client.
## rule_id = 7, flagIN = 1, flagOUT = 1, sticky_flag = 1, hostgroup = 1
## Saves flagOUT = 1 to session, so it will be flagIn starting value on next query
## Works like earlier, hostgroup = 1, write Node

COMMIT; ##Commiting transaction
## rule_id = 6, flagIN = 1, flagOUT = NULL, sticky_flag = 0, hostgroup = 1
## Resets sticky_flag to false in session, so next time starting value for flagIN will be 0.

SELECT SUM(value) FROM testTable; ## Finding sum of deposits
## rule_id = 100,  flagIN = 0, flagOUT = NULL, sticky_flag = 0, hostgroup = 2
## Works like earlier (hostgroup = 2, readonly Node)

My version is not perfect, also I don't use C++ much, but we've tested it, and it is working like it supposed to.","@renecannao

About flagOUT - I think you're right
How about next_query_flagIN? Because it is next query flagIN, so it won't confuse anyone.

Thanks,
Maxim",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,825,2016-12-07T10:54:44Z,2016-12-29T21:20:29Z,2016-12-29T21:30:19Z,MERGED,True,76,38,5,https://github.com/klinometr,Added sticky flag realization,4,[],https://github.com/sysown/proxysql/pull/825,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/825#issuecomment-265431259,"Hello Rene,
We've just moved to cloud, and started using XtraDB cluster. We've experienced some troubles with highload, so we opened couple of servers for read and write. But it also cause us some troubles like deadlocks. The possible solution for this was making one Cluster Node for write and others for readonly.
We've searching for solutions and found yours, which is great.
But for now we can't use it due to transactions. For example:
BEGIN; ## Starting transaction
INSERT INTO testTable (value) (10); ## Inserting some value, for example deposit amount
SELECT SUM(value) FROM testTable; ## Finding sum of deposits
INSERT INTO testTableRelation (maxValue) (10); ##Saving sum of deposits for client.
COMMIT; ##Commiting transaction

If I have rules, like:
select rule_id,match_pattern,destination_hostgroup from mysql_query_rules; 
+---------+------------------------+-----------------------+
| rule_id | match_pattern          | destination_hostgroup |
+---------+------------------------+-----------------------+
| 1       | ^SELECT                | 2                     |
| 2       | .*                     | 1                     |
+---------+------------------------+-----------------------+

Select will go through destination hostgroup, which includes readonly servers, which don't know about transaction yet, so I wouldn't get actual sum of deposits. And flagIN, flagOUT works only for each query separately.
So I've come up with an idea:
select rule_id,match_pattern,flagIN,flagOUT,destination_hostgroup,sticky_flag from mysql_query_rules; 
+---------+------------------------+--------+---------+-----------------------+-------------+
| rule_id | match_pattern          | flagIN | flagOUT | destination_hostgroup | sticky_flag |
+---------+------------------------+--------+---------+-----------------------+-------------+
| 1       | ^SELECT .* FOR UPDATE$ | 0      | 1       | 1                     | 1           |
| 2       | ^START TRANSACTION     | 0      | 1       | 1                     | 1           |
| 3       | ^BEGIN                 | 0      | 1       | 1                     | 1           |
| 5       | ^ROLLBACK              | 1      | NULL    | 1                     | 0           |
| 6       | ^COMMIT                | 1      | NULL    | 1                     | 0           |
| 7       | .*                     | 1      | 1       | 1                     | 1           |
| 100     | ^SELECT                | 0      | NULL    | 2                     | 0           |
| 1000    | .*                     | 0      | NULL    | 1                     | 0           |
+---------+------------------------+--------+---------+-----------------------+-------------+

I added new parameter - sticky_flag, which means that if the sticky_flag is true, we will begin next query with current flagOUT
For example:
SELECT * FROM testTableRelation; ## Getting sum of deposits for client
## rule_id = 100, flagIN = 0, flagOUT = 0, sticky_flag = 0, hostgroup = 2,
## Works like earlier (hostgroup = 2, readonly Node)

BEGIN; ## Starting transaction
## rule_id = 3, flagIN = 0, flagOUT = 1, sticky_flag = 1, hostgroup = 1
## Saves flagOUT = 1 to session, so it will be flagIn starting value on next query
## Works like earlier, hostgroup = 1, write Node

INSERT INTO testTable (value) (10); ## Inserting some value, for example deposit amount
## rule_id = 7, flagIN = 1, flagOUT = 1, sticky_flag = 1, hostgroup = 1
## Saves flagOUT = 1 to session, so it will be flagIn starting value on next query
## Works like earlier, hostgroup = 1, write Node

SELECT SUM(value) FROM testTable; ## Finding sum of deposits
## rule_id = 7, flagIN = 1, flagOUT = 1, sticky_flag = 1, hostgroup = 1
## Saves flagOUT = 1 to session, so it will be flagIn starting value on next query
## New working flow, select query went to write Node, cause it's the only node, that knows about transaction, so it will get correct result

INSERT INTO testTableRelation (maxValue) (10); ##Saving sum of deposits for client.
## rule_id = 7, flagIN = 1, flagOUT = 1, sticky_flag = 1, hostgroup = 1
## Saves flagOUT = 1 to session, so it will be flagIn starting value on next query
## Works like earlier, hostgroup = 1, write Node

COMMIT; ##Commiting transaction
## rule_id = 6, flagIN = 1, flagOUT = NULL, sticky_flag = 0, hostgroup = 1
## Resets sticky_flag to false in session, so next time starting value for flagIN will be 0.

SELECT SUM(value) FROM testTable; ## Finding sum of deposits
## rule_id = 100,  flagIN = 0, flagOUT = NULL, sticky_flag = 0, hostgroup = 2
## Works like earlier (hostgroup = 2, readonly Node)

My version is not perfect, also I don't use C++ much, but we've tested it, and it is working like it supposed to.","Hi Maxim,


How about next_query_flagIN ?


I like that too!
Thanks,
Ren√©",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,825,2016-12-07T10:54:44Z,2016-12-29T21:20:29Z,2016-12-29T21:30:19Z,MERGED,True,76,38,5,https://github.com/klinometr,Added sticky flag realization,4,[],https://github.com/sysown/proxysql/pull/825,https://github.com/klinometr,5,https://github.com/sysown/proxysql/pull/825#issuecomment-265451118,"Hello Rene,
We've just moved to cloud, and started using XtraDB cluster. We've experienced some troubles with highload, so we opened couple of servers for read and write. But it also cause us some troubles like deadlocks. The possible solution for this was making one Cluster Node for write and others for readonly.
We've searching for solutions and found yours, which is great.
But for now we can't use it due to transactions. For example:
BEGIN; ## Starting transaction
INSERT INTO testTable (value) (10); ## Inserting some value, for example deposit amount
SELECT SUM(value) FROM testTable; ## Finding sum of deposits
INSERT INTO testTableRelation (maxValue) (10); ##Saving sum of deposits for client.
COMMIT; ##Commiting transaction

If I have rules, like:
select rule_id,match_pattern,destination_hostgroup from mysql_query_rules; 
+---------+------------------------+-----------------------+
| rule_id | match_pattern          | destination_hostgroup |
+---------+------------------------+-----------------------+
| 1       | ^SELECT                | 2                     |
| 2       | .*                     | 1                     |
+---------+------------------------+-----------------------+

Select will go through destination hostgroup, which includes readonly servers, which don't know about transaction yet, so I wouldn't get actual sum of deposits. And flagIN, flagOUT works only for each query separately.
So I've come up with an idea:
select rule_id,match_pattern,flagIN,flagOUT,destination_hostgroup,sticky_flag from mysql_query_rules; 
+---------+------------------------+--------+---------+-----------------------+-------------+
| rule_id | match_pattern          | flagIN | flagOUT | destination_hostgroup | sticky_flag |
+---------+------------------------+--------+---------+-----------------------+-------------+
| 1       | ^SELECT .* FOR UPDATE$ | 0      | 1       | 1                     | 1           |
| 2       | ^START TRANSACTION     | 0      | 1       | 1                     | 1           |
| 3       | ^BEGIN                 | 0      | 1       | 1                     | 1           |
| 5       | ^ROLLBACK              | 1      | NULL    | 1                     | 0           |
| 6       | ^COMMIT                | 1      | NULL    | 1                     | 0           |
| 7       | .*                     | 1      | 1       | 1                     | 1           |
| 100     | ^SELECT                | 0      | NULL    | 2                     | 0           |
| 1000    | .*                     | 0      | NULL    | 1                     | 0           |
+---------+------------------------+--------+---------+-----------------------+-------------+

I added new parameter - sticky_flag, which means that if the sticky_flag is true, we will begin next query with current flagOUT
For example:
SELECT * FROM testTableRelation; ## Getting sum of deposits for client
## rule_id = 100, flagIN = 0, flagOUT = 0, sticky_flag = 0, hostgroup = 2,
## Works like earlier (hostgroup = 2, readonly Node)

BEGIN; ## Starting transaction
## rule_id = 3, flagIN = 0, flagOUT = 1, sticky_flag = 1, hostgroup = 1
## Saves flagOUT = 1 to session, so it will be flagIn starting value on next query
## Works like earlier, hostgroup = 1, write Node

INSERT INTO testTable (value) (10); ## Inserting some value, for example deposit amount
## rule_id = 7, flagIN = 1, flagOUT = 1, sticky_flag = 1, hostgroup = 1
## Saves flagOUT = 1 to session, so it will be flagIn starting value on next query
## Works like earlier, hostgroup = 1, write Node

SELECT SUM(value) FROM testTable; ## Finding sum of deposits
## rule_id = 7, flagIN = 1, flagOUT = 1, sticky_flag = 1, hostgroup = 1
## Saves flagOUT = 1 to session, so it will be flagIn starting value on next query
## New working flow, select query went to write Node, cause it's the only node, that knows about transaction, so it will get correct result

INSERT INTO testTableRelation (maxValue) (10); ##Saving sum of deposits for client.
## rule_id = 7, flagIN = 1, flagOUT = 1, sticky_flag = 1, hostgroup = 1
## Saves flagOUT = 1 to session, so it will be flagIn starting value on next query
## Works like earlier, hostgroup = 1, write Node

COMMIT; ##Commiting transaction
## rule_id = 6, flagIN = 1, flagOUT = NULL, sticky_flag = 0, hostgroup = 1
## Resets sticky_flag to false in session, so next time starting value for flagIN will be 0.

SELECT SUM(value) FROM testTable; ## Finding sum of deposits
## rule_id = 100,  flagIN = 0, flagOUT = NULL, sticky_flag = 0, hostgroup = 2
## Works like earlier (hostgroup = 2, readonly Node)

My version is not perfect, also I don't use C++ much, but we've tested it, and it is working like it supposed to.","@renecannao
Changed field according to our discussion. Changed a logic slightly.
select rule_id,match_pattern,flagIN,flagOUT,destination_hostgroup,next_query_flagIN from mysql_query_rules;
+---------+------------------------+--------+---------+-----------------------+-------------------+
| rule_id | match_pattern          | flagIN | flagOUT | destination_hostgroup | next_query_flagIN |
+---------+------------------------+--------+---------+-----------------------+-------------------+
| 1       | ^SELECT .* FOR UPDATE$ | 0      | NULL    | 1                     | 1                 |
| 2       | ^START TRANSACTION     | 0      | NULL    | 1                     | 1                 |
| 3       | ^BEGIN                 | 0      | NULL    | 1                     | 1                 |
| 5       | ^ROLLBACK              | 1      | NULL    | 1                     | 0                 |
| 6       | ^COMMIT                | 1      | NULL    | 1                     | 0                 |
| 7       | .*                     | 1      | NULL    | 1                     | NULL              |
| 100     | ^SELECT                | 0      | NULL    | 2                     | NULL              |
| 1000    | .*                     | 0      | NULL    | 1                     | NULL              |
+---------+------------------------+--------+---------+-----------------------+-------------------+

New field next_query_flagIN sets flagIN starting value for next query, this starting value changes, if only next_query_flagIN >= 0  (like mirror_flagOUT works)
It appears that I don't need flagOUT at all, but it still works
Example:
SELECT * FROM testTableRelation; ## Getting sum of deposits for client
## rule_id = 100, flagIN = 0, next_query_flagIN = -1, hostgroup = 2,
## Works like earlier (hostgroup = 2, readonly Node)

BEGIN; ## Starting transaction
## rule_id = 3, flagIN = 0, next_query_flagIN = 1, hostgroup = 1
## Sets next_query_flagIN = 1 to session, so it will be flagIN starting value on next query
## Works like earlier, hostgroup = 1, write Node

INSERT INTO testTable (value) (10); ## Inserting some value, for example deposit amount
## rule_id = 7, flagIN = 1, next_query_flagIN = 1, hostgroup = 1
## Doesn't change next_query_flagIN, so it stays equals 1
## Works like earlier, hostgroup = 1, write Node

SELECT SUM(value) FROM testTable; ## Finding sum of deposits
## rule_id = 7, flagIN = 1, next_query_flagIN = 1, hostgroup = 1
## Doesn't change next_query_flagIN, so it stays equals 1
## New working flow, select query went to write Node, cause it's the only node, that knows about transaction, so it will get correct result

INSERT INTO testTableRelation (maxValue) (10); ##Saving sum of deposits for client.
## rule_id = 7, flagIN = 1, next_query_flagIN = 1, hostgroup = 1
## Doesn't change next_query_flagIN, so it stays equals 1
## Works like earlier, hostgroup = 1, write Node

COMMIT; ##Commiting transaction
## rule_id = 6, flagIN = 1, next_query_flagIN = 0, hostgroup = 1
## Sets next_query_flagIN = 0 to session, so it will be flagIN starting value on next query

SELECT SUM(value) FROM testTable; ## Finding sum of deposits
## rule_id = 100,  flagIN = 0, next_query_flagIN = 0, hostgroup = 2
## Works like earlier (hostgroup = 2, readonly Node)
## Doesn't change next_query_flagIN, so it stays equals 0

Thanks,
Maxim",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,825,2016-12-07T10:54:44Z,2016-12-29T21:20:29Z,2016-12-29T21:30:19Z,MERGED,True,76,38,5,https://github.com/klinometr,Added sticky flag realization,4,[],https://github.com/sysown/proxysql/pull/825,https://github.com/klinometr,6,https://github.com/sysown/proxysql/pull/825#issuecomment-267810322,"Hello Rene,
We've just moved to cloud, and started using XtraDB cluster. We've experienced some troubles with highload, so we opened couple of servers for read and write. But it also cause us some troubles like deadlocks. The possible solution for this was making one Cluster Node for write and others for readonly.
We've searching for solutions and found yours, which is great.
But for now we can't use it due to transactions. For example:
BEGIN; ## Starting transaction
INSERT INTO testTable (value) (10); ## Inserting some value, for example deposit amount
SELECT SUM(value) FROM testTable; ## Finding sum of deposits
INSERT INTO testTableRelation (maxValue) (10); ##Saving sum of deposits for client.
COMMIT; ##Commiting transaction

If I have rules, like:
select rule_id,match_pattern,destination_hostgroup from mysql_query_rules; 
+---------+------------------------+-----------------------+
| rule_id | match_pattern          | destination_hostgroup |
+---------+------------------------+-----------------------+
| 1       | ^SELECT                | 2                     |
| 2       | .*                     | 1                     |
+---------+------------------------+-----------------------+

Select will go through destination hostgroup, which includes readonly servers, which don't know about transaction yet, so I wouldn't get actual sum of deposits. And flagIN, flagOUT works only for each query separately.
So I've come up with an idea:
select rule_id,match_pattern,flagIN,flagOUT,destination_hostgroup,sticky_flag from mysql_query_rules; 
+---------+------------------------+--------+---------+-----------------------+-------------+
| rule_id | match_pattern          | flagIN | flagOUT | destination_hostgroup | sticky_flag |
+---------+------------------------+--------+---------+-----------------------+-------------+
| 1       | ^SELECT .* FOR UPDATE$ | 0      | 1       | 1                     | 1           |
| 2       | ^START TRANSACTION     | 0      | 1       | 1                     | 1           |
| 3       | ^BEGIN                 | 0      | 1       | 1                     | 1           |
| 5       | ^ROLLBACK              | 1      | NULL    | 1                     | 0           |
| 6       | ^COMMIT                | 1      | NULL    | 1                     | 0           |
| 7       | .*                     | 1      | 1       | 1                     | 1           |
| 100     | ^SELECT                | 0      | NULL    | 2                     | 0           |
| 1000    | .*                     | 0      | NULL    | 1                     | 0           |
+---------+------------------------+--------+---------+-----------------------+-------------+

I added new parameter - sticky_flag, which means that if the sticky_flag is true, we will begin next query with current flagOUT
For example:
SELECT * FROM testTableRelation; ## Getting sum of deposits for client
## rule_id = 100, flagIN = 0, flagOUT = 0, sticky_flag = 0, hostgroup = 2,
## Works like earlier (hostgroup = 2, readonly Node)

BEGIN; ## Starting transaction
## rule_id = 3, flagIN = 0, flagOUT = 1, sticky_flag = 1, hostgroup = 1
## Saves flagOUT = 1 to session, so it will be flagIn starting value on next query
## Works like earlier, hostgroup = 1, write Node

INSERT INTO testTable (value) (10); ## Inserting some value, for example deposit amount
## rule_id = 7, flagIN = 1, flagOUT = 1, sticky_flag = 1, hostgroup = 1
## Saves flagOUT = 1 to session, so it will be flagIn starting value on next query
## Works like earlier, hostgroup = 1, write Node

SELECT SUM(value) FROM testTable; ## Finding sum of deposits
## rule_id = 7, flagIN = 1, flagOUT = 1, sticky_flag = 1, hostgroup = 1
## Saves flagOUT = 1 to session, so it will be flagIn starting value on next query
## New working flow, select query went to write Node, cause it's the only node, that knows about transaction, so it will get correct result

INSERT INTO testTableRelation (maxValue) (10); ##Saving sum of deposits for client.
## rule_id = 7, flagIN = 1, flagOUT = 1, sticky_flag = 1, hostgroup = 1
## Saves flagOUT = 1 to session, so it will be flagIn starting value on next query
## Works like earlier, hostgroup = 1, write Node

COMMIT; ##Commiting transaction
## rule_id = 6, flagIN = 1, flagOUT = NULL, sticky_flag = 0, hostgroup = 1
## Resets sticky_flag to false in session, so next time starting value for flagIN will be 0.

SELECT SUM(value) FROM testTable; ## Finding sum of deposits
## rule_id = 100,  flagIN = 0, flagOUT = NULL, sticky_flag = 0, hostgroup = 2
## Works like earlier (hostgroup = 2, readonly Node)

My version is not perfect, also I don't use C++ much, but we've tested it, and it is working like it supposed to.","Hi @renecannao,
Have you watched the code yet? Or have you finished your sticky_conn?
Thanks,
Maxim",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,825,2016-12-07T10:54:44Z,2016-12-29T21:20:29Z,2016-12-29T21:30:19Z,MERGED,True,76,38,5,https://github.com/klinometr,Added sticky flag realization,4,[],https://github.com/sysown/proxysql/pull/825,https://github.com/renecannao,7,https://github.com/sysown/proxysql/pull/825#issuecomment-269696459,"Hello Rene,
We've just moved to cloud, and started using XtraDB cluster. We've experienced some troubles with highload, so we opened couple of servers for read and write. But it also cause us some troubles like deadlocks. The possible solution for this was making one Cluster Node for write and others for readonly.
We've searching for solutions and found yours, which is great.
But for now we can't use it due to transactions. For example:
BEGIN; ## Starting transaction
INSERT INTO testTable (value) (10); ## Inserting some value, for example deposit amount
SELECT SUM(value) FROM testTable; ## Finding sum of deposits
INSERT INTO testTableRelation (maxValue) (10); ##Saving sum of deposits for client.
COMMIT; ##Commiting transaction

If I have rules, like:
select rule_id,match_pattern,destination_hostgroup from mysql_query_rules; 
+---------+------------------------+-----------------------+
| rule_id | match_pattern          | destination_hostgroup |
+---------+------------------------+-----------------------+
| 1       | ^SELECT                | 2                     |
| 2       | .*                     | 1                     |
+---------+------------------------+-----------------------+

Select will go through destination hostgroup, which includes readonly servers, which don't know about transaction yet, so I wouldn't get actual sum of deposits. And flagIN, flagOUT works only for each query separately.
So I've come up with an idea:
select rule_id,match_pattern,flagIN,flagOUT,destination_hostgroup,sticky_flag from mysql_query_rules; 
+---------+------------------------+--------+---------+-----------------------+-------------+
| rule_id | match_pattern          | flagIN | flagOUT | destination_hostgroup | sticky_flag |
+---------+------------------------+--------+---------+-----------------------+-------------+
| 1       | ^SELECT .* FOR UPDATE$ | 0      | 1       | 1                     | 1           |
| 2       | ^START TRANSACTION     | 0      | 1       | 1                     | 1           |
| 3       | ^BEGIN                 | 0      | 1       | 1                     | 1           |
| 5       | ^ROLLBACK              | 1      | NULL    | 1                     | 0           |
| 6       | ^COMMIT                | 1      | NULL    | 1                     | 0           |
| 7       | .*                     | 1      | 1       | 1                     | 1           |
| 100     | ^SELECT                | 0      | NULL    | 2                     | 0           |
| 1000    | .*                     | 0      | NULL    | 1                     | 0           |
+---------+------------------------+--------+---------+-----------------------+-------------+

I added new parameter - sticky_flag, which means that if the sticky_flag is true, we will begin next query with current flagOUT
For example:
SELECT * FROM testTableRelation; ## Getting sum of deposits for client
## rule_id = 100, flagIN = 0, flagOUT = 0, sticky_flag = 0, hostgroup = 2,
## Works like earlier (hostgroup = 2, readonly Node)

BEGIN; ## Starting transaction
## rule_id = 3, flagIN = 0, flagOUT = 1, sticky_flag = 1, hostgroup = 1
## Saves flagOUT = 1 to session, so it will be flagIn starting value on next query
## Works like earlier, hostgroup = 1, write Node

INSERT INTO testTable (value) (10); ## Inserting some value, for example deposit amount
## rule_id = 7, flagIN = 1, flagOUT = 1, sticky_flag = 1, hostgroup = 1
## Saves flagOUT = 1 to session, so it will be flagIn starting value on next query
## Works like earlier, hostgroup = 1, write Node

SELECT SUM(value) FROM testTable; ## Finding sum of deposits
## rule_id = 7, flagIN = 1, flagOUT = 1, sticky_flag = 1, hostgroup = 1
## Saves flagOUT = 1 to session, so it will be flagIn starting value on next query
## New working flow, select query went to write Node, cause it's the only node, that knows about transaction, so it will get correct result

INSERT INTO testTableRelation (maxValue) (10); ##Saving sum of deposits for client.
## rule_id = 7, flagIN = 1, flagOUT = 1, sticky_flag = 1, hostgroup = 1
## Saves flagOUT = 1 to session, so it will be flagIn starting value on next query
## Works like earlier, hostgroup = 1, write Node

COMMIT; ##Commiting transaction
## rule_id = 6, flagIN = 1, flagOUT = NULL, sticky_flag = 0, hostgroup = 1
## Resets sticky_flag to false in session, so next time starting value for flagIN will be 0.

SELECT SUM(value) FROM testTable; ## Finding sum of deposits
## rule_id = 100,  flagIN = 0, flagOUT = NULL, sticky_flag = 0, hostgroup = 2
## Works like earlier (hostgroup = 2, readonly Node)

My version is not perfect, also I don't use C++ much, but we've tested it, and it is working like it supposed to.","@klinometr : thank you for the pull request. Looks good to me: merged.
I will apply some further tuning to it. For example, this changes a variable in the calling session: I would prefer to set the variable in a Query_Processor_Output structure, and let the calling MySQL_Session decide if the variable need to be changed or not.
This can be useful, for example, if we are inside a transaction and mysql_users.transaction_persistent is set.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,827,2016-12-08T00:09:26Z,2016-12-08T02:08:06Z,2016-12-08T02:08:06Z,CLOSED,False,0,0,0,https://github.com/satori,Refactor auth with C+11 and RAII.,0,[],https://github.com/sysown/proxysql/pull/827,https://github.com/satori,1,https://github.com/sysown/proxysql/pull/827,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,828,2016-12-08T02:13:01Z,2017-12-04T15:25:12Z,2017-12-04T15:25:19Z,CLOSED,False,410,746,13,https://github.com/satori,Refactor auth with C+11 and RAII.,1,[],https://github.com/sysown/proxysql/pull/828,https://github.com/satori,1,https://github.com/sysown/proxysql/pull/828,"With RAII and smart pointers it is easier to argue about memory safety and correctness.
Also it makes less deallocations which should give some speedup in authentication code.","With RAII and smart pointers it is easier to argue about memory safety and correctness.
Also it makes less deallocations which should give some speedup in authentication code.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,828,2016-12-08T02:13:01Z,2017-12-04T15:25:12Z,2017-12-04T15:25:19Z,CLOSED,False,410,746,13,https://github.com/satori,Refactor auth with C+11 and RAII.,1,[],https://github.com/sysown/proxysql/pull/828,https://github.com/satori,2,https://github.com/sysown/proxysql/pull/828#issuecomment-265770395,"With RAII and smart pointers it is easier to argue about memory safety and correctness.
Also it makes less deallocations which should give some speedup in authentication code.",Rebased on top of v1.4.0 branch.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,830,2016-12-08T16:51:40Z,2016-12-12T10:59:04Z,2016-12-12T15:19:11Z,MERGED,True,11,53,3,https://github.com/satori,Use OpenSSL's rand as PRNG,1,[],https://github.com/sysown/proxysql/pull/830,https://github.com/satori,1,https://github.com/sysown/proxysql/pull/830,OpenSSL provides cryptographically strong PRNG which is seeded by /dev/urandom.,OpenSSL provides cryptographically strong PRNG which is seeded by /dev/urandom.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,830,2016-12-08T16:51:40Z,2016-12-12T10:59:04Z,2016-12-12T15:19:11Z,MERGED,True,11,53,3,https://github.com/satori,Use OpenSSL's rand as PRNG,1,[],https://github.com/sysown/proxysql/pull/830,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/830#issuecomment-266399753,OpenSSL provides cryptographically strong PRNG which is seeded by /dev/urandom.,Thanks!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,834,2016-12-12T00:16:09Z,2016-12-12T19:52:50Z,2016-12-13T19:03:27Z,MERGED,True,10,13,1,https://github.com/efirs,Fix crash in purge idle connections,1,[],https://github.com/sysown/proxysql/pull/834,https://github.com/efirs,1,https://github.com/sysown/proxysql/pull/834,"The fix replaces unsafe map/list erase pattern.
Unsafe, undefined behavior:
for(auto it = m.begin(); it != m.end(); it++)
    if(it->first == 1)
        m.erase(it);

Correct version:
for(auto it = m.begin(); it != m.end();)
    if(it->first == 1)
        it = m.erase(it);
     else
        it++","The fix replaces unsafe map/list erase pattern.
Unsafe, undefined behavior:
for(auto it = m.begin(); it != m.end(); it++)
    if(it->first == 1)
        m.erase(it);

Correct version:
for(auto it = m.begin(); it != m.end();)
    if(it->first == 1)
        it = m.erase(it);
     else
        it++",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,834,2016-12-12T00:16:09Z,2016-12-12T19:52:50Z,2016-12-13T19:03:27Z,MERGED,True,10,13,1,https://github.com/efirs,Fix crash in purge idle connections,1,[],https://github.com/sysown/proxysql/pull/834,https://github.com/efirs,2,https://github.com/sysown/proxysql/pull/834#issuecomment-266319427,"The fix replaces unsafe map/list erase pattern.
Unsafe, undefined behavior:
for(auto it = m.begin(); it != m.end(); it++)
    if(it->first == 1)
        m.erase(it);

Correct version:
for(auto it = m.begin(); it != m.end();)
    if(it->first == 1)
        it = m.erase(it);
     else
        it++","Complete test case:
#include <iostream>
#include <ostream>
#include <map>
#include <list>
#include <array>

int main()
{
#if 0
        std::list<int> m;

        m.emplace_back(1);
        m.emplace_back(2);

        for(auto it = m.begin(); it != m.end(); it++) {
                if(*it == 1)
                        m.remove(*it);
        }

        return 0;
#endif

        typedef std::array<char, 16384> map_value_t;
        std::map<int, map_value_t> m;

        m.emplace(1, map_value_t());
        m.emplace(2, map_value_t());

        for(auto it = m.begin(); it != m.end(); it++)
                if(it->first == 1)
                        m.erase(it);

        return 0;
}",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,834,2016-12-12T00:16:09Z,2016-12-12T19:52:50Z,2016-12-13T19:03:27Z,MERGED,True,10,13,1,https://github.com/efirs,Fix crash in purge idle connections,1,[],https://github.com/sysown/proxysql/pull/834,https://github.com/satori,3,https://github.com/sysown/proxysql/pull/834#issuecomment-266445618,"The fix replaces unsafe map/list erase pattern.
Unsafe, undefined behavior:
for(auto it = m.begin(); it != m.end(); it++)
    if(it->first == 1)
        m.erase(it);

Correct version:
for(auto it = m.begin(); it != m.end();)
    if(it->first == 1)
        it = m.erase(it);
     else
        it++","I'd prefer to have pre-increment over post-increment, but besides that this pull request fixes the crash properly without restarting the loop.",True,{'THUMBS_UP': ['https://github.com/undingen']}
sysown/proxysql,https://github.com/sysown/proxysql,834,2016-12-12T00:16:09Z,2016-12-12T19:52:50Z,2016-12-13T19:03:27Z,MERGED,True,10,13,1,https://github.com/efirs,Fix crash in purge idle connections,1,[],https://github.com/sysown/proxysql/pull/834,https://github.com/efirs,4,https://github.com/sysown/proxysql/pull/834#issuecomment-266498506,"The fix replaces unsafe map/list erase pattern.
Unsafe, undefined behavior:
for(auto it = m.begin(); it != m.end(); it++)
    if(it->first == 1)
        m.erase(it);

Correct version:
for(auto it = m.begin(); it != m.end();)
    if(it->first == 1)
        it = m.erase(it);
     else
        it++","@renecannao as @satori mentioned, the fix, you are referring to, restarts iterations from the beginning, but more important, it doesn't fix the crash in the inner loop, where connection is removed from the std::list.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,834,2016-12-12T00:16:09Z,2016-12-12T19:52:50Z,2016-12-13T19:03:27Z,MERGED,True,10,13,1,https://github.com/efirs,Fix crash in purge idle connections,1,[],https://github.com/sysown/proxysql/pull/834,https://github.com/efirs,5,https://github.com/sysown/proxysql/pull/834#issuecomment-266532446,"The fix replaces unsafe map/list erase pattern.
Unsafe, undefined behavior:
for(auto it = m.begin(); it != m.end(); it++)
    if(it->first == 1)
        m.erase(it);

Correct version:
for(auto it = m.begin(); it != m.end();)
    if(it->first == 1)
        it = m.erase(it);
     else
        it++",preincrements,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,834,2016-12-12T00:16:09Z,2016-12-12T19:52:50Z,2016-12-13T19:03:27Z,MERGED,True,10,13,1,https://github.com/efirs,Fix crash in purge idle connections,1,[],https://github.com/sysown/proxysql/pull/834,https://github.com/renecannao,6,https://github.com/sysown/proxysql/pull/834#issuecomment-266535776,"The fix replaces unsafe map/list erase pattern.
Unsafe, undefined behavior:
for(auto it = m.begin(); it != m.end(); it++)
    if(it->first == 1)
        m.erase(it);

Correct version:
for(auto it = m.begin(); it != m.end();)
    if(it->first == 1)
        it = m.erase(it);
     else
        it++",Merged in v1.3.0h and in 1.3.1 . I will slightly modify it to merge it in 1.4.0 (that doesn't use list anymore),True,{}
sysown/proxysql,https://github.com/sysown/proxysql,834,2016-12-12T00:16:09Z,2016-12-12T19:52:50Z,2016-12-13T19:03:27Z,MERGED,True,10,13,1,https://github.com/efirs,Fix crash in purge idle connections,1,[],https://github.com/sysown/proxysql/pull/834,https://github.com/renecannao,7,https://github.com/sysown/proxysql/pull/834#issuecomment-266535847,"The fix replaces unsafe map/list erase pattern.
Unsafe, undefined behavior:
for(auto it = m.begin(); it != m.end(); it++)
    if(it->first == 1)
        m.erase(it);

Correct version:
for(auto it = m.begin(); it != m.end();)
    if(it->first == 1)
        it = m.erase(it);
     else
        it++",Thanks!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,839,2016-12-14T00:22:11Z,2016-12-17T23:12:00Z,2016-12-17T23:12:50Z,MERGED,True,41,101,1,https://github.com/efirs,MySQL_Monitor_Connection_Pool refactored,1,[],https://github.com/sysown/proxysql/pull/839,https://github.com/efirs,1,https://github.com/sysown/proxysql/pull/839,"Please consider merging this version of the MySQL_Monitor_Connection_Pool class.
Advantages:

No explicit memory management
Safe locking
Standard data structures","Please consider merging this version of the MySQL_Monitor_Connection_Pool class.
Advantages:

No explicit memory management
Safe locking
Standard data structures",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,839,2016-12-14T00:22:11Z,2016-12-17T23:12:00Z,2016-12-17T23:12:50Z,MERGED,True,41,101,1,https://github.com/efirs,MySQL_Monitor_Connection_Pool refactored,1,[],https://github.com/sysown/proxysql/pull/839,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/839#issuecomment-267793085,"Please consider merging this version of the MySQL_Monitor_Connection_Pool class.
Advantages:

No explicit memory management
Safe locking
Standard data structures",Thank you for the pull requests,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,842,2016-12-14T15:42:35Z,2016-12-14T15:59:03Z,2016-12-14T16:07:23Z,MERGED,True,9,3309,43,https://github.com/satori,Cleanup legacy codebase.,1,[],https://github.com/sysown/proxysql/pull/842,https://github.com/satori,1,https://github.com/sysown/proxysql/pull/842,"Removes unused and commented out code chunks, making it easier to read and navigate in source code.","Removes unused and commented out code chunks, making it easier to read and navigate in source code.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,842,2016-12-14T15:42:35Z,2016-12-14T15:59:03Z,2016-12-14T16:07:23Z,MERGED,True,9,3309,43,https://github.com/satori,Cleanup legacy codebase.,1,[],https://github.com/sysown/proxysql/pull/842,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/842#issuecomment-267072752,"Removes unused and commented out code chunks, making it easier to read and navigate in source code.",Thank you!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,843,2016-12-14T23:59:05Z,2016-12-21T23:50:11Z,2016-12-21T23:50:11Z,MERGED,True,304,356,52,https://github.com/satori,Refactor header includes.,2,[],https://github.com/sysown/proxysql/pull/843,https://github.com/satori,1,https://github.com/sysown/proxysql/pull/843,"reduce build time by 25%;
remove circular dependency on cpp.h and other headers.
fixes issue with my_global.h from mariadbclient which
redefines __attribute__, that leads to broken STL and GCC
intrinsics if <algorithm> wasn't included prior including this header;
fixes another issue with redefined __attribute__ which leads to
_conn_exchange_t not being aligned to cache line size;
removes pthread_setstacksize calls as my_global.h redefines pthread_setstacksize
to be pthread_dummy(0) which led to stack size being never adjusted;
add missing include guards to some headers;
remove unused proxysql_hash.h header.","reduce build time by 25%;
remove circular dependency on cpp.h and other headers.
fixes issue with my_global.h from mariadbclient which
redefines __attribute__, that leads to broken STL and GCC
intrinsics if <algorithm> wasn't included prior including this header;
fixes another issue with redefined __attribute__ which leads to
_conn_exchange_t not being aligned to cache line size;
removes pthread_setstacksize calls as my_global.h redefines pthread_setstacksize
to be pthread_dummy(0) which led to stack size being never adjusted;
add missing include guards to some headers;
remove unused proxysql_hash.h header.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,846,2016-12-16T06:13:42Z,2016-12-20T22:39:48Z,2016-12-20T22:42:30Z,MERGED,True,2,0,1,https://github.com/efirs,Fix memory leak in purge_idle_connection,1,[],https://github.com/sysown/proxysql/pull/846,https://github.com/efirs,1,https://github.com/sysown/proxysql/pull/846,"An adhoc fix for memory leak.
Proper, implicit, fix is in #839","An adhoc fix for memory leak.
Proper, implicit, fix is in #839",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,846,2016-12-16T06:13:42Z,2016-12-20T22:39:48Z,2016-12-20T22:42:30Z,MERGED,True,2,0,1,https://github.com/efirs,Fix memory leak in purge_idle_connection,1,[],https://github.com/sysown/proxysql/pull/846,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/846#issuecomment-267793163,"An adhoc fix for memory leak.
Proper, implicit, fix is in #839","@efirs : can this pull request be ignored, as #839 fixes the leak too, right?",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,846,2016-12-16T06:13:42Z,2016-12-20T22:39:48Z,2016-12-20T22:42:30Z,MERGED,True,2,0,1,https://github.com/efirs,Fix memory leak in purge_idle_connection,1,[],https://github.com/sysown/proxysql/pull/846,https://github.com/efirs,3,https://github.com/sysown/proxysql/pull/846#issuecomment-267805500,"An adhoc fix for memory leak.
Proper, implicit, fix is in #839","@renecannao you can ignore it, unless you want to support stable v1.3.0h branch.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,846,2016-12-16T06:13:42Z,2016-12-20T22:39:48Z,2016-12-20T22:42:30Z,MERGED,True,2,0,1,https://github.com/efirs,Fix memory leak in purge_idle_connection,1,[],https://github.com/sysown/proxysql/pull/846,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/846#issuecomment-268380540,"An adhoc fix for memory leak.
Proper, implicit, fix is in #839","@efirs : I reopened this pull request, to then merge it into v1.3.2 . Thank you very much!",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,849,2016-12-21T23:51:33Z,2016-12-21T23:51:42Z,2019-10-29T00:02:03Z,MERGED,True,356,304,52,https://github.com/renecannao,"Revert ""Refactor header includes.""",1,[],https://github.com/sysown/proxysql/pull/849,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/849,Reverts #843,Reverts #843,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,851,2016-12-22T15:09:01Z,2017-12-04T15:25:30Z,2017-12-04T15:25:34Z,CLOSED,False,340,393,52,https://github.com/satori,Refactor header includes.,1,[],https://github.com/sysown/proxysql/pull/851,https://github.com/satori,1,https://github.com/sysown/proxysql/pull/851,"reduce build time by 25%;
remove circular dependency on cpp.h and other headers.
fixes issue with my_global.h from mariadbclient which
redefines __attribute__, that leads to broken STL and GCC
intrinsics if <algorithm> wasn't included prior including this header;
fixes another issue with redefined __attribute__ which leads to
_conn_exchange_t not being aligned to cache line size;
removes pthread_setstacksize calls as my_global.h redefines
pthread_setstacksize to be pthread_dummy(0) which led to stack size being never adjusted;
add missing include guards to some headers;
remove unused proxysql_hash.h header.","reduce build time by 25%;
remove circular dependency on cpp.h and other headers.
fixes issue with my_global.h from mariadbclient which
redefines __attribute__, that leads to broken STL and GCC
intrinsics if <algorithm> wasn't included prior including this header;
fixes another issue with redefined __attribute__ which leads to
_conn_exchange_t not being aligned to cache line size;
removes pthread_setstacksize calls as my_global.h redefines
pthread_setstacksize to be pthread_dummy(0) which led to stack size being never adjusted;
add missing include guards to some headers;
remove unused proxysql_hash.h header.",True,"{'THUMBS_UP': ['https://github.com/ip1981', 'https://github.com/minichate']}"
sysown/proxysql,https://github.com/sysown/proxysql,863,2017-01-03T21:38:55Z,2017-01-16T13:09:40Z,2017-01-16T13:20:09Z,MERGED,True,8,8,2,https://github.com/tobioboye,Update minor issues with Admin interface and Query cache docs,1,[],https://github.com/sysown/proxysql/pull/863,https://github.com/tobioboye,1,https://github.com/sysown/proxysql/pull/863,"Hello, this is my first PR for the project. I'm not sure how these things go here but I'll drop these changes with minor fixes to the doc that I ran into as I read up the documentation.","Hello, this is my first PR for the project. I'm not sure how these things go here but I'll drop these changes with minor fixes to the doc that I ran into as I read up the documentation.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,863,2017-01-03T21:38:55Z,2017-01-16T13:09:40Z,2017-01-16T13:20:09Z,MERGED,True,8,8,2,https://github.com/tobioboye,Update minor issues with Admin interface and Query cache docs,1,[],https://github.com/sysown/proxysql/pull/863,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/863#issuecomment-270306942,"Hello, this is my first PR for the project. I'm not sure how these things go here but I'll drop these changes with minor fixes to the doc that I ran into as I read up the documentation.","Help with the documentation is highly appreciated!
Thank you for contributing.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,863,2017-01-03T21:38:55Z,2017-01-16T13:09:40Z,2017-01-16T13:20:09Z,MERGED,True,8,8,2,https://github.com/tobioboye,Update minor issues with Admin interface and Query cache docs,1,[],https://github.com/sysown/proxysql/pull/863,https://github.com/tobioboye,3,https://github.com/sysown/proxysql/pull/863#issuecomment-270382859,"Hello, this is my first PR for the project. I'm not sure how these things go here but I'll drop these changes with minor fixes to the doc that I ran into as I read up the documentation.",Thank you for the warm welcome @renecannao to ProxySQL! You folks have created some awesome software!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,863,2017-01-03T21:38:55Z,2017-01-16T13:09:40Z,2017-01-16T13:20:09Z,MERGED,True,8,8,2,https://github.com/tobioboye,Update minor issues with Admin interface and Query cache docs,1,[],https://github.com/sysown/proxysql/pull/863,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/863#issuecomment-272860120,"Hello, this is my first PR for the project. I'm not sure how these things go here but I'll drop these changes with minor fixes to the doc that I ran into as I read up the documentation.","Merged and pushed also into v1.3.3-dev and v1.4.0.
Thank you!",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,864,2017-01-04T10:43:37Z,2017-01-16T13:10:00Z,2017-01-16T13:20:16Z,MERGED,True,11,5,2,https://github.com/bogdanr,Improvements to the systemd support.,1,[],https://github.com/sysown/proxysql/pull/864,https://github.com/bogdanr,1,https://github.com/sysown/proxysql/pull/864,"We now run as the MySQL user and fix permissions before running.
Since this will be an official package we will put the binary in /usr/bin/","We now run as the MySQL user and fix permissions before running.
Since this will be an official package we will put the binary in /usr/bin/",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,864,2017-01-04T10:43:37Z,2017-01-16T13:10:00Z,2017-01-16T13:20:16Z,MERGED,True,11,5,2,https://github.com/bogdanr,Improvements to the systemd support.,1,[],https://github.com/sysown/proxysql/pull/864,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/864#issuecomment-272860142,"We now run as the MySQL user and fix permissions before running.
Since this will be an official package we will put the binary in /usr/bin/","Merged and pushed also into v1.3.3-dev and v1.4.0.
Thank you!",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,865,2017-01-05T17:32:41Z,2017-01-16T13:08:02Z,2017-01-16T13:20:04Z,MERGED,True,2,1,1,https://github.com/leeclemens,Update return codes for LSB compliance,2,[],https://github.com/sysown/proxysql/pull/865,https://github.com/leeclemens,1,https://github.com/sysown/proxysql/pull/865,start when already running and stop when already stopped should return successful return codes (0),start when already running and stop when already stopped should return successful return codes (0),True,{}
sysown/proxysql,https://github.com/sysown/proxysql,865,2017-01-05T17:32:41Z,2017-01-16T13:08:02Z,2017-01-16T13:20:04Z,MERGED,True,2,1,1,https://github.com/leeclemens,Update return codes for LSB compliance,2,[],https://github.com/sysown/proxysql/pull/865,https://github.com/leeclemens,2,https://github.com/sysown/proxysql/pull/865#issuecomment-270705049,start when already running and stop when already stopped should return successful return codes (0),ref: http://clusterlabs.org/doc/en-US/Pacemaker/1.0/html/Pacemaker_Explained/ap-lsb.html,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,865,2017-01-05T17:32:41Z,2017-01-16T13:08:02Z,2017-01-16T13:20:04Z,MERGED,True,2,1,1,https://github.com/leeclemens,Update return codes for LSB compliance,2,[],https://github.com/sysown/proxysql/pull/865,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/865#issuecomment-272860104,start when already running and stop when already stopped should return successful return codes (0),"Merged and pushed also into v1.3.3-dev and v1.4.0.
Thank you!",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,868,2017-01-06T10:02:30Z,2017-01-06T11:04:15Z,2017-01-06T11:23:18Z,CLOSED,False,241,8,8,https://github.com/taylor840326,merge bug766 fixed codes into v1.2.6 branch.,2,[],https://github.com/sysown/proxysql/pull/868,https://github.com/taylor840326,1,https://github.com/sysown/proxysql/pull/868,"merge bug766 fixed codes

branch:v1.3.2
commit: 8e1aa57

into v1.2.6.","merge bug766 fixed codes

branch:v1.3.2
commit: 8e1aa57

into v1.2.6.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,868,2017-01-06T10:02:30Z,2017-01-06T11:04:15Z,2017-01-06T11:23:18Z,CLOSED,False,241,8,8,https://github.com/taylor840326,merge bug766 fixed codes into v1.2.6 branch.,2,[],https://github.com/sysown/proxysql/pull/868,https://github.com/taylor840326,2,https://github.com/sysown/proxysql/pull/868#issuecomment-270872943,"merge bug766 fixed codes

branch:v1.3.2
commit: 8e1aa57

into v1.2.6.",I just merge your codes into v1.2.6.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,868,2017-01-06T10:02:30Z,2017-01-06T11:04:15Z,2017-01-06T11:23:18Z,CLOSED,False,241,8,8,https://github.com/taylor840326,merge bug766 fixed codes into v1.2.6 branch.,2,[],https://github.com/sysown/proxysql/pull/868,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/868#issuecomment-270885332,"merge bug766 fixed codes

branch:v1.3.2
commit: 8e1aa57

into v1.2.6.","@taylor840326 : what about upgrading to 1.3.2 ? :) I would like to only have bug fixes in 1.2.x , and introduced very small changes in 1.3.x .",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,877,2017-01-13T09:25:12Z,2017-01-13T09:26:00Z,2017-01-13T09:26:00Z,CLOSED,False,225561,1074,83,https://github.com/taylor840326,V1.2.6 telegraf,235,[],https://github.com/sysown/proxysql/pull/877,https://github.com/taylor840326,1,https://github.com/sysown/proxysql/pull/877,"@renecannao  telegraf+influxdb+grafana+defcon ,I can monitor proxysql running status.
Example:","@renecannao  telegraf+influxdb+grafana+defcon ,I can monitor proxysql running status.
Example:",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,878,2017-01-13T09:43:01Z,2017-01-16T14:32:25Z,2017-01-16T14:32:25Z,CLOSED,False,674,8,12,https://github.com/taylor840326,	new file:   tools/defcon,6,[],https://github.com/sysown/proxysql/pull/878,https://github.com/taylor840326,1,https://github.com/sysown/proxysql/pull/878,"defcon is a proxysql metrics collection tool,It can print metrics as influxdb line format.
I can use defcon+telegraf+influxdb+grafana to monitor my proxysql status.
Example:","defcon is a proxysql metrics collection tool,It can print metrics as influxdb line format.
I can use defcon+telegraf+influxdb+grafana to monitor my proxysql status.
Example:",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,879,2017-01-13T14:29:23Z,2017-01-16T13:22:05Z,2017-01-16T13:22:05Z,CLOSED,False,37,2,3,https://github.com/Dan83,Replace the spinlock on ProxySQL_Admin::wrlock with a pthread mutex or wrlock,1,[],https://github.com/sysown/proxysql/pull/879,https://github.com/Dan83,1,https://github.com/sysown/proxysql/pull/879,Replace the spinlock on ProxySQL_Admin::wrlock with a pthread mutex or wrlock,Replace the spinlock on ProxySQL_Admin::wrlock with a pthread mutex or wrlock,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,880,2017-01-13T14:34:00Z,2017-01-16T13:22:35Z,2017-01-16T13:25:21Z,MERGED,True,278,64,4,https://github.com/Dan83,Replace the spinlock on ProxySQL_Admin::wrlock with a pthread mutex or wrlock,4,[],https://github.com/sysown/proxysql/pull/880,https://github.com/Dan83,1,https://github.com/sysown/proxysql/pull/880,Replace the spinlock on ProxySQL_Admin::wrlock with a pthread mutex or wrlock,Replace the spinlock on ProxySQL_Admin::wrlock with a pthread mutex or wrlock,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,880,2017-01-13T14:34:00Z,2017-01-16T13:22:35Z,2017-01-16T13:25:21Z,MERGED,True,278,64,4,https://github.com/Dan83,Replace the spinlock on ProxySQL_Admin::wrlock with a pthread mutex or wrlock,4,[],https://github.com/sysown/proxysql/pull/880,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/880#issuecomment-272861137,Replace the spinlock on ProxySQL_Admin::wrlock with a pthread mutex or wrlock,Thank you.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,881,2017-01-13T16:32:58Z,2017-01-16T13:03:38Z,2017-01-16T14:51:20Z,MERGED,True,7,7,1,https://github.com/Ostico,Updated documentation,1,[],https://github.com/sysown/proxysql/pull/881,https://github.com/Ostico,1,https://github.com/sysown/proxysql/pull/881,"Column time_start does not exists anymore.
Changed to: time_start_us","Column time_start does not exists anymore.
Changed to: time_start_us",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,881,2017-01-13T16:32:58Z,2017-01-16T13:03:38Z,2017-01-16T14:51:20Z,MERGED,True,7,7,1,https://github.com/Ostico,Updated documentation,1,[],https://github.com/sysown/proxysql/pull/881,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/881#issuecomment-272857026,"Column time_start does not exists anymore.
Changed to: time_start_us",Thank you,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,902,2017-02-08T22:59:03Z,2017-02-10T06:40:22Z,2017-02-17T17:14:44Z,MERGED,True,130,2,4,https://github.com/minichate,Add build/support for CentOS 5,1,[],https://github.com/sysown/proxysql/pull/902,https://github.com/minichate,1,https://github.com/sysown/proxysql/pull/902,"CentOS 5 doesn't have support for epoll_create1(), so I've defined a macro to fall back on epoll_create() in that case.
Note that the 1 argument to epoll_create() is actually ignored, and is only there to conform to the requirement that it be larger than 0.
Note that the docker image used to build this is:
FROM centos:5

RUN yum -y install epel-release
RUN yum install -y automake bzip2 make openssl openssl-devel patch tar wget git
RUN wget http://people.centos.org/tru/devtools-2/devtools-2.repo -O /etc/yum.repos.d/devtools-2.repo
RUN yum -y install devtoolset-2-gcc devtoolset-2-binutils devtoolset-2-gcc-c++ openssl-devel patch
RUN ln -s /opt/rh/devtoolset-2/root/usr/bin/gcc /usr/bin/cc
RUN ln -s /opt/rh/devtoolset-2/root/usr/bin/g++ /usr/bin/g++
RUN echo ""export CC=/opt/rh/devtoolset-2/root/usr/bin/gcc"" >> /root/.bashrc
RUN echo ""export CPP=/opt/rh/devtoolset-2/root/usr/bin/cpp"" >> /root/.bashrc
RUN echo ""export CXX=/opt/rh/devtoolset-2/root/usr/bin/c++"" >> /root/.bashrc
RUN yum install -y rpm-build
RUN cd /usr/local/src && \
  wget --no-check-certificate http://www.cmake.org/files/v2.8/cmake-2.8.10.2.tar.gz && \
  tar -xzvf cmake-2.8.10.2.tar.gz && \
  cd cmake-2.8.10.2 && \
  ./bootstrap && make && make install","CentOS 5 doesn't have support for epoll_create1(), so I've defined a macro to fall back on epoll_create() in that case.
Note that the 1 argument to epoll_create() is actually ignored, and is only there to conform to the requirement that it be larger than 0.
Note that the docker image used to build this is:
FROM centos:5

RUN yum -y install epel-release
RUN yum install -y automake bzip2 make openssl openssl-devel patch tar wget git
RUN wget http://people.centos.org/tru/devtools-2/devtools-2.repo -O /etc/yum.repos.d/devtools-2.repo
RUN yum -y install devtoolset-2-gcc devtoolset-2-binutils devtoolset-2-gcc-c++ openssl-devel patch
RUN ln -s /opt/rh/devtoolset-2/root/usr/bin/gcc /usr/bin/cc
RUN ln -s /opt/rh/devtoolset-2/root/usr/bin/g++ /usr/bin/g++
RUN echo ""export CC=/opt/rh/devtoolset-2/root/usr/bin/gcc"" >> /root/.bashrc
RUN echo ""export CPP=/opt/rh/devtoolset-2/root/usr/bin/cpp"" >> /root/.bashrc
RUN echo ""export CXX=/opt/rh/devtoolset-2/root/usr/bin/c++"" >> /root/.bashrc
RUN yum install -y rpm-build
RUN cd /usr/local/src && \
  wget --no-check-certificate http://www.cmake.org/files/v2.8/cmake-2.8.10.2.tar.gz && \
  tar -xzvf cmake-2.8.10.2.tar.gz && \
  cd cmake-2.8.10.2 && \
  ./bootstrap && make && make install",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,902,2017-02-08T22:59:03Z,2017-02-10T06:40:22Z,2017-02-17T17:14:44Z,MERGED,True,130,2,4,https://github.com/minichate,Add build/support for CentOS 5,1,[],https://github.com/sysown/proxysql/pull/902,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/902#issuecomment-278502156,"CentOS 5 doesn't have support for epoll_create1(), so I've defined a macro to fall back on epoll_create() in that case.
Note that the 1 argument to epoll_create() is actually ignored, and is only there to conform to the requirement that it be larger than 0.
Note that the docker image used to build this is:
FROM centos:5

RUN yum -y install epel-release
RUN yum install -y automake bzip2 make openssl openssl-devel patch tar wget git
RUN wget http://people.centos.org/tru/devtools-2/devtools-2.repo -O /etc/yum.repos.d/devtools-2.repo
RUN yum -y install devtoolset-2-gcc devtoolset-2-binutils devtoolset-2-gcc-c++ openssl-devel patch
RUN ln -s /opt/rh/devtoolset-2/root/usr/bin/gcc /usr/bin/cc
RUN ln -s /opt/rh/devtoolset-2/root/usr/bin/g++ /usr/bin/g++
RUN echo ""export CC=/opt/rh/devtoolset-2/root/usr/bin/gcc"" >> /root/.bashrc
RUN echo ""export CPP=/opt/rh/devtoolset-2/root/usr/bin/cpp"" >> /root/.bashrc
RUN echo ""export CXX=/opt/rh/devtoolset-2/root/usr/bin/c++"" >> /root/.bashrc
RUN yum install -y rpm-build
RUN cd /usr/local/src && \
  wget --no-check-certificate http://www.cmake.org/files/v2.8/cmake-2.8.10.2.tar.gz && \
  tar -xzvf cmake-2.8.10.2.tar.gz && \
  cd cmake-2.8.10.2 && \
  ./bootstrap && make && make install","Hi @minichate.
Thank you for the PR! CentOS 5 is very old, I am surprised it is still around (EOL is next month).
With the exception of epoll_create1() , everything else works as expected?",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,902,2017-02-08T22:59:03Z,2017-02-10T06:40:22Z,2017-02-17T17:14:44Z,MERGED,True,130,2,4,https://github.com/minichate,Add build/support for CentOS 5,1,[],https://github.com/sysown/proxysql/pull/902,https://github.com/minichate,3,https://github.com/sysown/proxysql/pull/902#issuecomment-278512543,"CentOS 5 doesn't have support for epoll_create1(), so I've defined a macro to fall back on epoll_create() in that case.
Note that the 1 argument to epoll_create() is actually ignored, and is only there to conform to the requirement that it be larger than 0.
Note that the docker image used to build this is:
FROM centos:5

RUN yum -y install epel-release
RUN yum install -y automake bzip2 make openssl openssl-devel patch tar wget git
RUN wget http://people.centos.org/tru/devtools-2/devtools-2.repo -O /etc/yum.repos.d/devtools-2.repo
RUN yum -y install devtoolset-2-gcc devtoolset-2-binutils devtoolset-2-gcc-c++ openssl-devel patch
RUN ln -s /opt/rh/devtoolset-2/root/usr/bin/gcc /usr/bin/cc
RUN ln -s /opt/rh/devtoolset-2/root/usr/bin/g++ /usr/bin/g++
RUN echo ""export CC=/opt/rh/devtoolset-2/root/usr/bin/gcc"" >> /root/.bashrc
RUN echo ""export CPP=/opt/rh/devtoolset-2/root/usr/bin/cpp"" >> /root/.bashrc
RUN echo ""export CXX=/opt/rh/devtoolset-2/root/usr/bin/c++"" >> /root/.bashrc
RUN yum install -y rpm-build
RUN cd /usr/local/src && \
  wget --no-check-certificate http://www.cmake.org/files/v2.8/cmake-2.8.10.2.tar.gz && \
  tar -xzvf cmake-2.8.10.2.tar.gz && \
  cd cmake-2.8.10.2 && \
  ./bootstrap && make && make install","Hey @renecannao
Agreed, it is old! We have a need for a centos5 build internally, and I figured it might be worth contributing that work back just in case someone else has an old Centos server hanging around too.
Correct, the only defect we've found so far is the lack of epoll_create1 in the glibc that ships with CentOS 5. Given that proxysql is using epoll_create1() in a way that is backwards compatible with the deprecated epoll_create() I thought it was pretty safe.
Thanks!",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,902,2017-02-08T22:59:03Z,2017-02-10T06:40:22Z,2017-02-17T17:14:44Z,MERGED,True,130,2,4,https://github.com/minichate,Add build/support for CentOS 5,1,[],https://github.com/sysown/proxysql/pull/902,https://github.com/minichate,4,https://github.com/sysown/proxysql/pull/902#issuecomment-278514245,"CentOS 5 doesn't have support for epoll_create1(), so I've defined a macro to fall back on epoll_create() in that case.
Note that the 1 argument to epoll_create() is actually ignored, and is only there to conform to the requirement that it be larger than 0.
Note that the docker image used to build this is:
FROM centos:5

RUN yum -y install epel-release
RUN yum install -y automake bzip2 make openssl openssl-devel patch tar wget git
RUN wget http://people.centos.org/tru/devtools-2/devtools-2.repo -O /etc/yum.repos.d/devtools-2.repo
RUN yum -y install devtoolset-2-gcc devtoolset-2-binutils devtoolset-2-gcc-c++ openssl-devel patch
RUN ln -s /opt/rh/devtoolset-2/root/usr/bin/gcc /usr/bin/cc
RUN ln -s /opt/rh/devtoolset-2/root/usr/bin/g++ /usr/bin/g++
RUN echo ""export CC=/opt/rh/devtoolset-2/root/usr/bin/gcc"" >> /root/.bashrc
RUN echo ""export CPP=/opt/rh/devtoolset-2/root/usr/bin/cpp"" >> /root/.bashrc
RUN echo ""export CXX=/opt/rh/devtoolset-2/root/usr/bin/c++"" >> /root/.bashrc
RUN yum install -y rpm-build
RUN cd /usr/local/src && \
  wget --no-check-certificate http://www.cmake.org/files/v2.8/cmake-2.8.10.2.tar.gz && \
  tar -xzvf cmake-2.8.10.2.tar.gz && \
  cd cmake-2.8.10.2 && \
  ./bootstrap && make && make install","This might actually help solve #898 too? FreeBSD may soon have support (according to https://wiki.freebsd.org/linux-kernel) for epoll_create, but doesn't look like they're adding support for epoll_create1
Looks like BSD does have epoll: https://svnweb.freebsd.org/base/head/sys/compat/linux/linux_event.c?revision=305994&view=markup",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,902,2017-02-08T22:59:03Z,2017-02-10T06:40:22Z,2017-02-17T17:14:44Z,MERGED,True,130,2,4,https://github.com/minichate,Add build/support for CentOS 5,1,[],https://github.com/sysown/proxysql/pull/902,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/902#issuecomment-278869775,"CentOS 5 doesn't have support for epoll_create1(), so I've defined a macro to fall back on epoll_create() in that case.
Note that the 1 argument to epoll_create() is actually ignored, and is only there to conform to the requirement that it be larger than 0.
Note that the docker image used to build this is:
FROM centos:5

RUN yum -y install epel-release
RUN yum install -y automake bzip2 make openssl openssl-devel patch tar wget git
RUN wget http://people.centos.org/tru/devtools-2/devtools-2.repo -O /etc/yum.repos.d/devtools-2.repo
RUN yum -y install devtoolset-2-gcc devtoolset-2-binutils devtoolset-2-gcc-c++ openssl-devel patch
RUN ln -s /opt/rh/devtoolset-2/root/usr/bin/gcc /usr/bin/cc
RUN ln -s /opt/rh/devtoolset-2/root/usr/bin/g++ /usr/bin/g++
RUN echo ""export CC=/opt/rh/devtoolset-2/root/usr/bin/gcc"" >> /root/.bashrc
RUN echo ""export CPP=/opt/rh/devtoolset-2/root/usr/bin/cpp"" >> /root/.bashrc
RUN echo ""export CXX=/opt/rh/devtoolset-2/root/usr/bin/c++"" >> /root/.bashrc
RUN yum install -y rpm-build
RUN cd /usr/local/src && \
  wget --no-check-certificate http://www.cmake.org/files/v2.8/cmake-2.8.10.2.tar.gz && \
  tar -xzvf cmake-2.8.10.2.tar.gz && \
  cd cmake-2.8.10.2 && \
  ./bootstrap && make && make install","@minichate : thank you for the PR, merged!
I also commented on FreeBSD on #898 .
Thanks",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,908,2017-02-11T00:59:46Z,2017-02-11T11:03:59Z,2017-02-17T17:14:44Z,MERGED,True,4,0,1,https://github.com/minichate,Add chkconfig support,1,[],https://github.com/sysown/proxysql/pull/908,https://github.com/minichate,1,https://github.com/sysown/proxysql/pull/908,Installing the RPM via rpm -i proxysql-<VERSION>.rpm generates an error on systems that have chkconfig -- it requires special syntax at the top of the init.d script.,Installing the RPM via rpm -i proxysql-<VERSION>.rpm generates an error on systems that have chkconfig -- it requires special syntax at the top of the init.d script.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,908,2017-02-11T00:59:46Z,2017-02-11T11:03:59Z,2017-02-17T17:14:44Z,MERGED,True,4,0,1,https://github.com/minichate,Add chkconfig support,1,[],https://github.com/sysown/proxysql/pull/908,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/908#issuecomment-279137078,Installing the RPM via rpm -i proxysql-<VERSION>.rpm generates an error on systems that have chkconfig -- it requires special syntax at the top of the init.d script.,"Thank you @minichate , really appreciated!
As you seem to know about rpm a lot more than me, can I ask you to have a look at #756 ?
Thanks.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,908,2017-02-11T00:59:46Z,2017-02-11T11:03:59Z,2017-02-17T17:14:44Z,MERGED,True,4,0,1,https://github.com/minichate,Add chkconfig support,1,[],https://github.com/sysown/proxysql/pull/908,https://github.com/minichate,3,https://github.com/sysown/proxysql/pull/908#issuecomment-279164436,Installing the RPM via rpm -i proxysql-<VERSION>.rpm generates an error on systems that have chkconfig -- it requires special syntax at the top of the init.d script.,@renecannao sure!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,909,2017-02-11T01:18:53Z,2017-02-11T11:07:43Z,2017-02-17T17:14:44Z,MERGED,True,12,12,5,https://github.com/minichate,Define version outside the `spec` file for RPM builds,1,[],https://github.com/sysown/proxysql/pull/909,https://github.com/minichate,1,https://github.com/sysown/proxysql/pull/909,"Instead of hardcoding the version number in the RPM spec file, we can pass the version in as part of the rpmbuild process, using the same version as is defined in the Makefile.","Instead of hardcoding the version number in the RPM spec file, we can pass the version in as part of the rpmbuild process, using the same version as is defined in the Makefile.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,909,2017-02-11T01:18:53Z,2017-02-11T11:07:43Z,2017-02-17T17:14:44Z,MERGED,True,12,12,5,https://github.com/minichate,Define version outside the `spec` file for RPM builds,1,[],https://github.com/sysown/proxysql/pull/909,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/909#issuecomment-279137115,"Instead of hardcoding the version number in the RPM spec file, we can pass the version in as part of the rpmbuild process, using the same version as is defined in the Makefile.",Thank you!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,910,2017-02-11T18:22:48Z,2017-02-11T20:00:09Z,2017-02-17T17:14:44Z,MERGED,True,16,4,4,https://github.com/minichate,Post Uninstall hooks for fedora based OS's,1,[],https://github.com/sysown/proxysql/pull/910,https://github.com/minichate,1,https://github.com/sysown/proxysql/pull/910,"Previously the postun hook would try and remove ProxySQL from chkconfig, but that would fail because the package was already uninstalled.
Instead, we can do this in the preun hook, and ensure that ProxySQL is properly shutdown before doing cleanup tasks.
Fixes #756","Previously the postun hook would try and remove ProxySQL from chkconfig, but that would fail because the package was already uninstalled.
Instead, we can do this in the preun hook, and ensure that ProxySQL is properly shutdown before doing cleanup tasks.
Fixes #756",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,910,2017-02-11T18:22:48Z,2017-02-11T20:00:09Z,2017-02-17T17:14:44Z,MERGED,True,16,4,4,https://github.com/minichate,Post Uninstall hooks for fedora based OS's,1,[],https://github.com/sysown/proxysql/pull/910,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/910#issuecomment-279171698,"Previously the postun hook would try and remove ProxySQL from chkconfig, but that would fail because the package was already uninstalled.
Instead, we can do this in the preun hook, and ensure that ProxySQL is properly shutdown before doing cleanup tasks.
Fixes #756",Thank you very much @minichate !!!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,912,2017-02-15T16:48:42Z,2019-05-16T21:37:12Z,2019-05-16T21:37:12Z,CLOSED,False,4,4,4,https://github.com/minichate,Fix RPM errors on upgrade,1,[],https://github.com/sysown/proxysql/pull/912,https://github.com/minichate,1,https://github.com/sysown/proxysql/pull/912,"If the /var/run/proxysql directory already exists -- as it does for upgrades -- the rpm installation errors out. Using mkdir -p ensures that the directory gets created if it doesn't exist, but no-ops if it already does.","If the /var/run/proxysql directory already exists -- as it does for upgrades -- the rpm installation errors out. Using mkdir -p ensures that the directory gets created if it doesn't exist, but no-ops if it already does.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,912,2017-02-15T16:48:42Z,2019-05-16T21:37:12Z,2019-05-16T21:37:12Z,CLOSED,False,4,4,4,https://github.com/minichate,Fix RPM errors on upgrade,1,[],https://github.com/sysown/proxysql/pull/912,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/912#issuecomment-493240763,"If the /var/run/proxysql directory already exists -- as it does for upgrades -- the rpm installation errors out. Using mkdir -p ensures that the directory gets created if it doesn't exist, but no-ops if it already does.","Closing old PR, logic has been moved out of these files",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,931,2017-02-23T22:08:42Z,2017-08-08T19:07:39Z,2017-08-08T19:08:13Z,MERGED,True,1,1,1,https://github.com/tobioboye,Enable custom version numbers for custom-built versions of ProxySQL,1,[],https://github.com/sysown/proxysql/pull/931,https://github.com/tobioboye,1,https://github.com/sysown/proxysql/pull/931,"CURVER is always set to the value specified in the Makefile, as a result, the version number of a custom RPM, might not be accurate.
The change adds support for using an environment variable if it exists, otherwise, we default to the value specified in the Makefile.","CURVER is always set to the value specified in the Makefile, as a result, the version number of a custom RPM, might not be accurate.
The change adds support for using an environment variable if it exists, otherwise, we default to the value specified in the Makefile.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,931,2017-02-23T22:08:42Z,2017-08-08T19:07:39Z,2017-08-08T19:08:13Z,MERGED,True,1,1,1,https://github.com/tobioboye,Enable custom version numbers for custom-built versions of ProxySQL,1,[],https://github.com/sysown/proxysql/pull/931,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/931#issuecomment-321052317,"CURVER is always set to the value specified in the Makefile, as a result, the version number of a custom RPM, might not be accurate.
The change adds support for using an environment variable if it exists, otherwise, we default to the value specified in the Makefile.",Change applied to 1.4.2 too. Thanks,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,933,2017-02-25T04:59:37Z,2019-05-16T21:34:40Z,2019-05-16T21:34:40Z,CLOSED,False,1703,302,11,https://github.com/rameshvs02,Contribute proxysql admin scripts,4,[],https://github.com/sysown/proxysql/pull/933,https://github.com/rameshvs02,1,https://github.com/sysown/proxysql/pull/933,Added proxysql-admin scripts,Added proxysql-admin scripts,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,934,2017-02-28T22:25:39Z,2020-08-20T12:55:41Z,2020-08-20T12:55:42Z,CLOSED,False,10,0,1,https://github.com/minichate,Add a --configtest target,1,[],https://github.com/sysown/proxysql/pull/934,https://github.com/minichate,1,https://github.com/sysown/proxysql/pull/934,"Users can do something like proxysql -c /etc/proxysql.cfg --configtest to verify that the configuration file validates.
This is useful to guard against reloading an invalid configuration.
Example:
[user@proxysql]$ ./src/proxysql -c /opt/proxysql/src/proxysql.cfgs -t
INVALID configuration file at /opt/proxysql/src/proxysql.cfgs
[user@proxysql]$ ./src/proxysql -c /opt/proxysql/src/proxysql.cfg -t
Configuration file at /opt/proxysql/src/proxysql.cfg file is valid
[user@proxysql]$ vi src/proxysql.cfg
[user@proxysql]$ ./src/proxysql -c /opt/proxysql/src/proxysql.cfg -t
Parse error at /opt/proxysql/src/proxysql.cfg:17 - syntax error","Users can do something like proxysql -c /etc/proxysql.cfg --configtest to verify that the configuration file validates.
This is useful to guard against reloading an invalid configuration.
Example:
[user@proxysql]$ ./src/proxysql -c /opt/proxysql/src/proxysql.cfgs -t
INVALID configuration file at /opt/proxysql/src/proxysql.cfgs
[user@proxysql]$ ./src/proxysql -c /opt/proxysql/src/proxysql.cfg -t
Configuration file at /opt/proxysql/src/proxysql.cfg file is valid
[user@proxysql]$ vi src/proxysql.cfg
[user@proxysql]$ ./src/proxysql -c /opt/proxysql/src/proxysql.cfg -t
Parse error at /opt/proxysql/src/proxysql.cfg:17 - syntax error",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,934,2017-02-28T22:25:39Z,2020-08-20T12:55:41Z,2020-08-20T12:55:42Z,CLOSED,False,10,0,1,https://github.com/minichate,Add a --configtest target,1,[],https://github.com/sysown/proxysql/pull/934,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/934#issuecomment-283183375,"Users can do something like proxysql -c /etc/proxysql.cfg --configtest to verify that the configuration file validates.
This is useful to guard against reloading an invalid configuration.
Example:
[user@proxysql]$ ./src/proxysql -c /opt/proxysql/src/proxysql.cfgs -t
INVALID configuration file at /opt/proxysql/src/proxysql.cfgs
[user@proxysql]$ ./src/proxysql -c /opt/proxysql/src/proxysql.cfg -t
Configuration file at /opt/proxysql/src/proxysql.cfg file is valid
[user@proxysql]$ vi src/proxysql.cfg
[user@proxysql]$ ./src/proxysql -c /opt/proxysql/src/proxysql.cfg -t
Parse error at /opt/proxysql/src/proxysql.cfg:17 - syntax error","@minichate : thank you for the pull request.
But I have a concern about this implementation. It will only check that the config file has a valid syntax, but won't perform any input validation.
(and this is another reason why I do not like config files, and I think that config db is more efficient)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,934,2017-02-28T22:25:39Z,2020-08-20T12:55:41Z,2020-08-20T12:55:42Z,CLOSED,False,10,0,1,https://github.com/minichate,Add a --configtest target,1,[],https://github.com/sysown/proxysql/pull/934,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/934#issuecomment-556069968,"Users can do something like proxysql -c /etc/proxysql.cfg --configtest to verify that the configuration file validates.
This is useful to guard against reloading an invalid configuration.
Example:
[user@proxysql]$ ./src/proxysql -c /opt/proxysql/src/proxysql.cfgs -t
INVALID configuration file at /opt/proxysql/src/proxysql.cfgs
[user@proxysql]$ ./src/proxysql -c /opt/proxysql/src/proxysql.cfg -t
Configuration file at /opt/proxysql/src/proxysql.cfg file is valid
[user@proxysql]$ vi src/proxysql.cfg
[user@proxysql]$ ./src/proxysql -c /opt/proxysql/src/proxysql.cfg -t
Parse error at /opt/proxysql/src/proxysql.cfg:17 - syntax error",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,942,2017-03-06T22:11:16Z,2017-03-06T22:21:45Z,2017-03-06T22:34:16Z,MERGED,True,5,3,2,https://github.com/minichate,Ensure that users num_connections_used doesn't get incremented if connection rejected,1,[],https://github.com/sysown/proxysql/pull/942,https://github.com/minichate,1,https://github.com/sysown/proxysql/pull/942,"If the users connection is rejected we shouldn't be incrementing num_connections_used on the account_details object. This leads to free_users dropping below zero and all subsequent requests getting rejected for that user.
Refs #940","If the users connection is rejected we shouldn't be incrementing num_connections_used on the account_details object. This leads to free_users dropping below zero and all subsequent requests getting rejected for that user.
Refs #940",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,942,2017-03-06T22:11:16Z,2017-03-06T22:21:45Z,2017-03-06T22:34:16Z,MERGED,True,5,3,2,https://github.com/minichate,Ensure that users num_connections_used doesn't get incremented if connection rejected,1,[],https://github.com/sysown/proxysql/pull/942,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/942#issuecomment-284553290,"If the users connection is rejected we shouldn't be incrementing num_connections_used on the account_details object. This leads to free_users dropping below zero and all subsequent requests getting rejected for that user.
Refs #940","Thank you for the PR.
This need to be ported also to 1.3 branch",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,942,2017-03-06T22:11:16Z,2017-03-06T22:21:45Z,2017-03-06T22:34:16Z,MERGED,True,5,3,2,https://github.com/minichate,Ensure that users num_connections_used doesn't get incremented if connection rejected,1,[],https://github.com/sysown/proxysql/pull/942,https://github.com/minichate,3,https://github.com/sysown/proxysql/pull/942#issuecomment-284554028,"If the users connection is rejected we shouldn't be incrementing num_connections_used on the account_details object. This leads to free_users dropping below zero and all subsequent requests getting rejected for that user.
Refs #940","Will do! Thanks
‚Ä¶
On Mon, Mar 6, 2017, 17:22 Ren√© Canna√≤ ***@***.***> wrote:
 Thank you for the PR.
 This need to be ported also to 1.3 branch

 ‚Äî
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#942 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AAAttlq-iEz6ezn02i99TkcDhjzfKF0Jks5rjIcfgaJpZM4MUw77>
 .",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,942,2017-03-06T22:11:16Z,2017-03-06T22:21:45Z,2017-03-06T22:34:16Z,MERGED,True,5,3,2,https://github.com/minichate,Ensure that users num_connections_used doesn't get incremented if connection rejected,1,[],https://github.com/sysown/proxysql/pull/942,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/942#issuecomment-284554230,"If the users connection is rejected we shouldn't be incrementing num_connections_used on the account_details object. This leads to free_users dropping below zero and all subsequent requests getting rejected for that user.
Refs #940","I can just cherry-pick it into 1.3 :)
Thank you",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,942,2017-03-06T22:11:16Z,2017-03-06T22:21:45Z,2017-03-06T22:34:16Z,MERGED,True,5,3,2,https://github.com/minichate,Ensure that users num_connections_used doesn't get incremented if connection rejected,1,[],https://github.com/sysown/proxysql/pull/942,https://github.com/minichate,5,https://github.com/sysown/proxysql/pull/942#issuecomment-284556402,"If the users connection is rejected we shouldn't be incrementing num_connections_used on the account_details object. This leads to free_users dropping below zero and all subsequent requests getting rejected for that user.
Refs #940","Thanks!
‚Ä¶
On Mon, 6 Mar 2017 at 17:26 Ren√© Canna√≤ ***@***.***> wrote:
 I can just cherry-pick it into 1.3 :)
 Thank you

 ‚Äî
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#942 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AAAtth73voSNc1_-OuiQDLF5t6AHig4Dks5rjIf3gaJpZM4MUw77>
 .",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,943,2017-03-06T22:40:56Z,2017-03-06T22:42:22Z,2017-03-06T22:46:04Z,MERGED,True,5,3,2,https://github.com/minichate,Ensure that users num_connections_used doesn't get incremented if connection rejected,1,[],https://github.com/sysown/proxysql/pull/943,https://github.com/minichate,1,https://github.com/sysown/proxysql/pull/943,"Backport #942 to 1.3.5
If the users connection is rejected we shouldn't be incrementing num_connections_used on the account_details object. This leads to free_users dropping below zero and all subsequent requests getting rejected for that user.","Backport #942 to 1.3.5
If the users connection is rejected we shouldn't be incrementing num_connections_used on the account_details object. This leads to free_users dropping below zero and all subsequent requests getting rejected for that user.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,943,2017-03-06T22:40:56Z,2017-03-06T22:42:22Z,2017-03-06T22:46:04Z,MERGED,True,5,3,2,https://github.com/minichate,Ensure that users num_connections_used doesn't get incremented if connection rejected,1,[],https://github.com/sysown/proxysql/pull/943,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/943#issuecomment-284558517,"Backport #942 to 1.3.5
If the users connection is rejected we shouldn't be incrementing num_connections_used on the account_details object. This leads to free_users dropping below zero and all subsequent requests getting rejected for that user.",Thank you very much @minichate !,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,943,2017-03-06T22:40:56Z,2017-03-06T22:42:22Z,2017-03-06T22:46:04Z,MERGED,True,5,3,2,https://github.com/minichate,Ensure that users num_connections_used doesn't get incremented if connection rejected,1,[],https://github.com/sysown/proxysql/pull/943,https://github.com/minichate,3,https://github.com/sysown/proxysql/pull/943#issuecomment-284559383,"Backport #942 to 1.3.5
If the users connection is rejected we shouldn't be incrementing num_connections_used on the account_details object. This leads to free_users dropping below zero and all subsequent requests getting rejected for that user.",Shoot -- this breaks the admin interface. I'll put up a fix ASAP,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,944,2017-03-06T22:50:49Z,2017-03-06T22:53:40Z,2017-03-06T22:53:40Z,MERGED,True,2,0,1,https://github.com/minichate,Ensure admin user can always connect,1,[],https://github.com/sysown/proxysql/pull/944,https://github.com/minichate,1,https://github.com/sysown/proxysql/pull/944,Refs #940,Refs #940,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,945,2017-03-06T22:53:11Z,2017-03-06T22:53:54Z,2017-03-06T22:53:59Z,MERGED,True,2,0,1,https://github.com/minichate,Ensure admin users can always connect,1,[],https://github.com/sysown/proxysql/pull/945,https://github.com/minichate,1,https://github.com/sysown/proxysql/pull/945,Refs #940,Refs #940,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,945,2017-03-06T22:53:11Z,2017-03-06T22:53:54Z,2017-03-06T22:53:59Z,MERGED,True,2,0,1,https://github.com/minichate,Ensure admin users can always connect,1,[],https://github.com/sysown/proxysql/pull/945,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/945#issuecomment-284561295,Refs #940,"PR day! :)
Thanks",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,947,2017-03-09T06:50:04Z,2017-03-09T11:27:59Z,2017-03-09T11:27:59Z,CLOSED,False,9,0,2,https://github.com/taylor840326,add ProxySQL_Uptime status. It is ProxySQL running time (unit: seconds),1,[],https://github.com/sysown/proxysql/pull/947,https://github.com/taylor840326,1,https://github.com/sysown/proxysql/pull/947,"Sometimes I want to get some metrics:
for example:

the number of Client_Connections_created per second
the number of Client_Connections_aborted per second
, etc.

But ""show mysql status"" command only output total number.
So. I add this ‚ÄúProxySQL_Uptime‚Äù metrics.","Sometimes I want to get some metrics:
for example:

the number of Client_Connections_created per second
the number of Client_Connections_aborted per second
, etc.

But ""show mysql status"" command only output total number.
So. I add this ‚ÄúProxySQL_Uptime‚Äù metrics.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,947,2017-03-09T06:50:04Z,2017-03-09T11:27:59Z,2017-03-09T11:27:59Z,CLOSED,False,9,0,2,https://github.com/taylor840326,add ProxySQL_Uptime status. It is ProxySQL running time (unit: seconds),1,[],https://github.com/sysown/proxysql/pull/947,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/947#issuecomment-285280741,"Sometimes I want to get some metrics:
for example:

the number of Client_Connections_created per second
the number of Client_Connections_aborted per second
, etc.

But ""show mysql status"" command only output total number.
So. I add this ‚ÄúProxySQL_Uptime‚Äù metrics.","Lei,
Thank you for the PR.
Although, I will close this PR and implement it in a different way.
A bit more context on why I will implement differently:

the information is already available here : it only needs to be made available in SHOW MYSQL STATUS
time() is not safe: if someone change the clock of the system, the result will be incorrect. This is why the current solution already uses monotonic time.

Thanks",True,{'THUMBS_UP': ['https://github.com/taylor840326']}
sysown/proxysql,https://github.com/sysown/proxysql,947,2017-03-09T06:50:04Z,2017-03-09T11:27:59Z,2017-03-09T11:27:59Z,CLOSED,False,9,0,2,https://github.com/taylor840326,add ProxySQL_Uptime status. It is ProxySQL running time (unit: seconds),1,[],https://github.com/sysown/proxysql/pull/947,https://github.com/taylor840326,3,https://github.com/sysown/proxysql/pull/947#issuecomment-285284022,"Sometimes I want to get some metrics:
for example:

the number of Client_Connections_created per second
the number of Client_Connections_aborted per second
, etc.

But ""show mysql status"" command only output total number.
So. I add this ‚ÄúProxySQL_Uptime‚Äù metrics.","@renecannao
üëç OK! üåπ",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,947,2017-03-09T06:50:04Z,2017-03-09T11:27:59Z,2017-03-09T11:27:59Z,CLOSED,False,9,0,2,https://github.com/taylor840326,add ProxySQL_Uptime status. It is ProxySQL running time (unit: seconds),1,[],https://github.com/sysown/proxysql/pull/947,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/947#issuecomment-285327033,"Sometimes I want to get some metrics:
for example:

the number of Client_Connections_created per second
the number of Client_Connections_aborted per second
, etc.

But ""show mysql status"" command only output total number.
So. I add this ‚ÄúProxySQL_Uptime‚Äù metrics.","Feature introduce in both 1.3.5 and 1.4.0 , both to be released",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,952,2017-03-10T10:46:37Z,2017-03-10T10:48:37Z,2017-03-10T10:48:42Z,MERGED,True,5,5,1,https://github.com/matthiaz,Fixing dead links to binary files,1,[],https://github.com/sysown/proxysql/pull/952,https://github.com/matthiaz,1,https://github.com/sysown/proxysql/pull/952,Fixing dead links,Fixing dead links,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,952,2017-03-10T10:46:37Z,2017-03-10T10:48:37Z,2017-03-10T10:48:42Z,MERGED,True,5,5,1,https://github.com/matthiaz,Fixing dead links to binary files,1,[],https://github.com/sysown/proxysql/pull/952,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/952#issuecomment-285638224,Fixing dead links,Thank you!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,972,2017-03-28T18:02:33Z,2017-03-28T20:34:25Z,2017-04-25T02:12:27Z,MERGED,True,675,1,7,https://github.com/minichate,Backport sql_mode and time_zone to 1.3.x,1,[],https://github.com/sysown/proxysql/pull/972,https://github.com/minichate,1,https://github.com/sysown/proxysql/pull/972,I believe this brings #816 to the 1.3.x branch.,I believe this brings #816 to the 1.3.x branch.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,972,2017-03-28T18:02:33Z,2017-03-28T20:34:25Z,2017-04-25T02:12:27Z,MERGED,True,675,1,7,https://github.com/minichate,Backport sql_mode and time_zone to 1.3.x,1,[],https://github.com/sysown/proxysql/pull/972,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/972#issuecomment-289896133,I believe this brings #816 to the 1.3.x branch.,"Almost identical to 902e9d6 , so seems OK to merge.
Thanks",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,972,2017-03-28T18:02:33Z,2017-03-28T20:34:25Z,2017-04-25T02:12:27Z,MERGED,True,675,1,7,https://github.com/minichate,Backport sql_mode and time_zone to 1.3.x,1,[],https://github.com/sysown/proxysql/pull/972,https://github.com/jkklee,3,https://github.com/sysown/proxysql/pull/972#issuecomment-296585926,I believe this brings #816 to the 1.3.x branch.,"@renecannao As far as i test, 1.3.6 can't process
# from wireshark
Command: Prepare Statement (22)
Statement: set session sql_mode=''

correctly.
1.3.4 and 1.3.5 seems ok.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,972,2017-03-28T18:02:33Z,2017-03-28T20:34:25Z,2017-04-25T02:12:27Z,MERGED,True,675,1,7,https://github.com/minichate,Backport sql_mode and time_zone to 1.3.x,1,[],https://github.com/sysown/proxysql/pull/972,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/972#issuecomment-296753386,I believe this brings #816 to the 1.3.x branch.,"@jkklee : yeah ... prepared statements.
This commit doesn't probably work with PS",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,972,2017-03-28T18:02:33Z,2017-03-28T20:34:25Z,2017-04-25T02:12:27Z,MERGED,True,675,1,7,https://github.com/minichate,Backport sql_mode and time_zone to 1.3.x,1,[],https://github.com/sysown/proxysql/pull/972,https://github.com/jkklee,5,https://github.com/sysown/proxysql/pull/972#issuecomment-296871710,I believe this brings #816 to the 1.3.x branch.,"@renecannao
You mean, before 1.3.6, proxysql didn't track set sql_mode (or do nothing about sql_mode) at all?",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,976,2017-03-31T01:24:44Z,2017-08-08T19:19:50Z,2017-08-08T19:21:31Z,MERGED,True,2,1,1,https://github.com/DrTyrell,updated insert for mysql_replication_hostgroups,1,[],https://github.com/sysown/proxysql/pull/976,https://github.com/DrTyrell,1,https://github.com/sysown/proxysql/pull/976,"new column ""comment VARCHAR"" , and resulting insert.","new column ""comment VARCHAR"" , and resulting insert.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,976,2017-03-31T01:24:44Z,2017-08-08T19:19:50Z,2017-08-08T19:21:31Z,MERGED,True,2,1,1,https://github.com/DrTyrell,updated insert for mysql_replication_hostgroups,1,[],https://github.com/sysown/proxysql/pull/976,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/976#issuecomment-321055639,"new column ""comment VARCHAR"" , and resulting insert.","Applied also to 1.4.2
Thanks",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,981,2017-04-07T14:55:04Z,2017-08-08T19:10:38Z,2017-08-08T19:10:38Z,MERGED,True,24,6,1,https://github.com/krzysztof-ksiazek,Changes in DONOR/DESYNC logic,5,[],https://github.com/sysown/proxysql/pull/981,https://github.com/krzysztof-ksiazek,1,https://github.com/sysown/proxysql/pull/981,"s/HOSTGROUP_WRITER_ID/HOSTGROUP_READER_ID/ for ""TRYING TO FIX MISSING READERS"".
Use only Synced nodes while building list of writers, pick one DONOR/DESYNC node later if no SYNCED hosts.","s/HOSTGROUP_WRITER_ID/HOSTGROUP_READER_ID/ for ""TRYING TO FIX MISSING READERS"".
Use only Synced nodes while building list of writers, pick one DONOR/DESYNC node later if no SYNCED hosts.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1002,2017-04-19T23:55:00Z,,2019-11-20T15:55:08Z,OPEN,False,7,45,4,https://github.com/sodabrew,Remove most #ifdef SO_REUSEPORT conditionals,1,[],https://github.com/sysown/proxysql/pull/1002,https://github.com/sodabrew,1,https://github.com/sysown/proxysql/pull/1002,"The option to enable SO_REUSEPORT should always be available, and only gated at runtime if the current kernel supports it.
Note that BSDs support this flag, too. Code to check Linux kernel at runtime is not advisable for this reason, and because changing the default behavior after the user upgrades kernels is unusual.","The option to enable SO_REUSEPORT should always be available, and only gated at runtime if the current kernel supports it.
Note that BSDs support this flag, too. Code to check Linux kernel at runtime is not advisable for this reason, and because changing the default behavior after the user upgrades kernels is unusual.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1002,2017-04-19T23:55:00Z,,2019-11-20T15:55:08Z,OPEN,False,7,45,4,https://github.com/sodabrew,Remove most #ifdef SO_REUSEPORT conditionals,1,[],https://github.com/sysown/proxysql/pull/1002,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1002#issuecomment-295505350,"The option to enable SO_REUSEPORT should always be available, and only gated at runtime if the current kernel supports it.
Note that BSDs support this flag, too. Code to check Linux kernel at runtime is not advisable for this reason, and because changing the default behavior after the user upgrades kernels is unusual.","Thank you for the feedback.
I moved some of the code around (not pushed yet) so I will merge the two.
Re BSD , I am not an expert of BSD at all, but looking around ti seems that FreeBSD doesn't support it, see here.
Re ""default behavior after the user upgrades kernels"" : my idea is have REUSEPORT enabled by default in new version, and disabled only if not supported.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1002,2017-04-19T23:55:00Z,,2019-11-20T15:55:08Z,OPEN,False,7,45,4,https://github.com/sodabrew,Remove most #ifdef SO_REUSEPORT conditionals,1,[],https://github.com/sysown/proxysql/pull/1002,https://github.com/sodabrew,3,https://github.com/sysown/proxysql/pull/1002#issuecomment-295509247,"The option to enable SO_REUSEPORT should always be available, and only gated at runtime if the current kernel supports it.
Note that BSDs support this flag, too. Code to check Linux kernel at runtime is not advisable for this reason, and because changing the default behavior after the user upgrades kernels is unusual.","SO_REUSEPORT is available on FreeBSD but does something a little different.
https://www.freebsd.org/cgi/man.cgi?query=setsockopt&sektion=2
Linux added quite a bit of magic behind this option for the kernel to do its own round-robin assignment of incoming connections to file descriptors listening on that port, and only wake up one process instead of all of them.
I agree with default on in the future, but in this revision the flag is set up for disabled-by-default.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1002,2017-04-19T23:55:00Z,,2019-11-20T15:55:08Z,OPEN,False,7,45,4,https://github.com/sodabrew,Remove most #ifdef SO_REUSEPORT conditionals,1,[],https://github.com/sysown/proxysql/pull/1002,https://github.com/pondix,4,https://github.com/sysown/proxysql/pull/1002#issuecomment-493241143,"The option to enable SO_REUSEPORT should always be available, and only gated at runtime if the current kernel supports it.
Note that BSDs support this flag, too. Code to check Linux kernel at runtime is not advisable for this reason, and because changing the default behavior after the user upgrades kernels is unusual.","@renecannao seems outdated, is this still relevant to push to the latest branch?",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1002,2017-04-19T23:55:00Z,,2019-11-20T15:55:08Z,OPEN,False,7,45,4,https://github.com/sodabrew,Remove most #ifdef SO_REUSEPORT conditionals,1,[],https://github.com/sysown/proxysql/pull/1002,https://github.com/sodabrew,5,https://github.com/sysown/proxysql/pull/1002#issuecomment-494635785,"The option to enable SO_REUSEPORT should always be available, and only gated at runtime if the current kernel supports it.
Note that BSDs support this flag, too. Code to check Linux kernel at runtime is not advisable for this reason, and because changing the default behavior after the user upgrades kernels is unusual.",I'd be glad to rebase this PR if you're interested in the change.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1002,2017-04-19T23:55:00Z,,2019-11-20T15:55:08Z,OPEN,False,7,45,4,https://github.com/sodabrew,Remove most #ifdef SO_REUSEPORT conditionals,1,[],https://github.com/sysown/proxysql/pull/1002,https://github.com/pondix,6,https://github.com/sysown/proxysql/pull/1002#issuecomment-556069939,"The option to enable SO_REUSEPORT should always be available, and only gated at runtime if the current kernel supports it.
Note that BSDs support this flag, too. Code to check Linux kernel at runtime is not advisable for this reason, and because changing the default behavior after the user upgrades kernels is unusual.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1010,2017-04-27T13:42:42Z,,2019-11-20T15:55:05Z,OPEN,False,71,38,4,https://github.com/seanlook,Add query text sample & wrap ? to one,2,[],https://github.com/sysown/proxysql/pull/1010,https://github.com/seanlook,1,https://github.com/sysown/proxysql/pull/1010,"Add query_text column to stats_mysql_query_digest to log the whole sql text sample for sql preview or developer's usage as descripted in topic Add query sample for digest.
Known issue: in some random situation, query text will contaion unexpected characters at its tail:

*************************** 22. row ***************************
  hostgroup: 110
 schemaname: information_schema
   username: xxxx
     digest: 0x1940FED1ABE8D6BC
digest_text: SHOW KEYS FROM `t_mytest1` FROM `mydb`
 count_star: 1
 first_seen: 1493294924
  last_seen: 1493294924
   sum_time: 912
   min_time: 912
   max_time: 912
 query_text: SHOW KEYS FROM `t_mytest1` FROM `mydb`m    <=

Or like this:
insert into user (id, name, pwd\n      )\n    values (null, 'zzz', '3333'\n      )√é^?    <=


Wrap two more question mark(?) to one (?,), like

select * from t where id in (1, 2, 3)
‚Üì
select * from t where id in (?,)

There is also some exceptions in c_tokenizer.c :
select * from t where f_waste_id id ( 1 ,2)
‚Üì
select * from t where f_waste_id id ( ??)

But I really don't mind that.","Add query_text column to stats_mysql_query_digest to log the whole sql text sample for sql preview or developer's usage as descripted in topic Add query sample for digest.
Known issue: in some random situation, query text will contaion unexpected characters at its tail:

*************************** 22. row ***************************
  hostgroup: 110
 schemaname: information_schema
   username: xxxx
     digest: 0x1940FED1ABE8D6BC
digest_text: SHOW KEYS FROM `t_mytest1` FROM `mydb`
 count_star: 1
 first_seen: 1493294924
  last_seen: 1493294924
   sum_time: 912
   min_time: 912
   max_time: 912
 query_text: SHOW KEYS FROM `t_mytest1` FROM `mydb`m    <=

Or like this:
insert into user (id, name, pwd\n      )\n    values (null, 'zzz', '3333'\n      )√é^?    <=


Wrap two more question mark(?) to one (?,), like

select * from t where id in (1, 2, 3)
‚Üì
select * from t where id in (?,)

There is also some exceptions in c_tokenizer.c :
select * from t where f_waste_id id ( 1 ,2)
‚Üì
select * from t where f_waste_id id ( ??)

But I really don't mind that.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1010,2017-04-27T13:42:42Z,,2019-11-20T15:55:05Z,OPEN,False,71,38,4,https://github.com/seanlook,Add query text sample & wrap ? to one,2,[],https://github.com/sysown/proxysql/pull/1010,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1010#issuecomment-298259395,"Add query_text column to stats_mysql_query_digest to log the whole sql text sample for sql preview or developer's usage as descripted in topic Add query sample for digest.
Known issue: in some random situation, query text will contaion unexpected characters at its tail:

*************************** 22. row ***************************
  hostgroup: 110
 schemaname: information_schema
   username: xxxx
     digest: 0x1940FED1ABE8D6BC
digest_text: SHOW KEYS FROM `t_mytest1` FROM `mydb`
 count_star: 1
 first_seen: 1493294924
  last_seen: 1493294924
   sum_time: 912
   min_time: 912
   max_time: 912
 query_text: SHOW KEYS FROM `t_mytest1` FROM `mydb`m    <=

Or like this:
insert into user (id, name, pwd\n      )\n    values (null, 'zzz', '3333'\n      )√é^?    <=


Wrap two more question mark(?) to one (?,), like

select * from t where id in (1, 2, 3)
‚Üì
select * from t where id in (?,)

There is also some exceptions in c_tokenizer.c :
select * from t where f_waste_id id ( 1 ,2)
‚Üì
select * from t where f_waste_id id ( ??)

But I really don't mind that.","Hi Sean,
Thank you for the pull request.
I have some concern about implementing this feature:

users with stats credentials shouldn't be allowed to read query_text, as it may contain sensitive information
should be interesting to collect the last N (configurable) queries for a specific digest, and not just one

Thoughts?",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1010,2017-04-27T13:42:42Z,,2019-11-20T15:55:05Z,OPEN,False,71,38,4,https://github.com/seanlook,Add query text sample & wrap ? to one,2,[],https://github.com/sysown/proxysql/pull/1010,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/1010#issuecomment-298259463,"Add query_text column to stats_mysql_query_digest to log the whole sql text sample for sql preview or developer's usage as descripted in topic Add query sample for digest.
Known issue: in some random situation, query text will contaion unexpected characters at its tail:

*************************** 22. row ***************************
  hostgroup: 110
 schemaname: information_schema
   username: xxxx
     digest: 0x1940FED1ABE8D6BC
digest_text: SHOW KEYS FROM `t_mytest1` FROM `mydb`
 count_star: 1
 first_seen: 1493294924
  last_seen: 1493294924
   sum_time: 912
   min_time: 912
   max_time: 912
 query_text: SHOW KEYS FROM `t_mytest1` FROM `mydb`m    <=

Or like this:
insert into user (id, name, pwd\n      )\n    values (null, 'zzz', '3333'\n      )√é^?    <=


Wrap two more question mark(?) to one (?,), like

select * from t where id in (1, 2, 3)
‚Üì
select * from t where id in (?,)

There is also some exceptions in c_tokenizer.c :
select * from t where f_waste_id id ( 1 ,2)
‚Üì
select * from t where f_waste_id id ( ??)

But I really don't mind that.","Also, new functionalities should go in 1.4.x .
1.3.x should only include bug fixes.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1010,2017-04-27T13:42:42Z,,2019-11-20T15:55:05Z,OPEN,False,71,38,4,https://github.com/seanlook,Add query text sample & wrap ? to one,2,[],https://github.com/sysown/proxysql/pull/1010,https://github.com/seanlook,4,https://github.com/sysown/proxysql/pull/1010#issuecomment-298804838,"Add query_text column to stats_mysql_query_digest to log the whole sql text sample for sql preview or developer's usage as descripted in topic Add query sample for digest.
Known issue: in some random situation, query text will contaion unexpected characters at its tail:

*************************** 22. row ***************************
  hostgroup: 110
 schemaname: information_schema
   username: xxxx
     digest: 0x1940FED1ABE8D6BC
digest_text: SHOW KEYS FROM `t_mytest1` FROM `mydb`
 count_star: 1
 first_seen: 1493294924
  last_seen: 1493294924
   sum_time: 912
   min_time: 912
   max_time: 912
 query_text: SHOW KEYS FROM `t_mytest1` FROM `mydb`m    <=

Or like this:
insert into user (id, name, pwd\n      )\n    values (null, 'zzz', '3333'\n      )√é^?    <=


Wrap two more question mark(?) to one (?,), like

select * from t where id in (1, 2, 3)
‚Üì
select * from t where id in (?,)

There is also some exceptions in c_tokenizer.c :
select * from t where f_waste_id id ( 1 ,2)
‚Üì
select * from t where f_waste_id id ( ??)

But I really don't mind that.","Hi Rene,

Maybe adding a new table for admin user to manage query_text
As a DBA, we should always consider the performance impact when add a new feature. Collecting the last N queries is useless for me because of the thousands of requests. I guess logging this every queries and rotating the last N may have the performance impact.
In fact I one query text sample is enough. It's really awesome if collecting queries according to the ratio of count_star",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1010,2017-04-27T13:42:42Z,,2019-11-20T15:55:05Z,OPEN,False,71,38,4,https://github.com/seanlook,Add query text sample & wrap ? to one,2,[],https://github.com/sysown/proxysql/pull/1010,https://github.com/pondix,5,https://github.com/sysown/proxysql/pull/1010#issuecomment-556069907,"Add query_text column to stats_mysql_query_digest to log the whole sql text sample for sql preview or developer's usage as descripted in topic Add query sample for digest.
Known issue: in some random situation, query text will contaion unexpected characters at its tail:

*************************** 22. row ***************************
  hostgroup: 110
 schemaname: information_schema
   username: xxxx
     digest: 0x1940FED1ABE8D6BC
digest_text: SHOW KEYS FROM `t_mytest1` FROM `mydb`
 count_star: 1
 first_seen: 1493294924
  last_seen: 1493294924
   sum_time: 912
   min_time: 912
   max_time: 912
 query_text: SHOW KEYS FROM `t_mytest1` FROM `mydb`m    <=

Or like this:
insert into user (id, name, pwd\n      )\n    values (null, 'zzz', '3333'\n      )√é^?    <=


Wrap two more question mark(?) to one (?,), like

select * from t where id in (1, 2, 3)
‚Üì
select * from t where id in (?,)

There is also some exceptions in c_tokenizer.c :
select * from t where f_waste_id id ( 1 ,2)
‚Üì
select * from t where f_waste_id id ( ??)

But I really don't mind that.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1021,2017-05-16T17:45:25Z,2017-05-21T10:41:30Z,2017-05-21T10:48:02Z,MERGED,True,1,1,1,https://github.com/minichate,Make sure we're not hitting uninitialized memory that happens to match prefix,1,[],https://github.com/sysown/proxysql/pull/1021,https://github.com/minichate,1,https://github.com/sysown/proxysql/pull/1021,Refs #1016,Refs #1016,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1021,2017-05-16T17:45:25Z,2017-05-21T10:41:30Z,2017-05-21T10:48:02Z,MERGED,True,1,1,1,https://github.com/minichate,Make sure we're not hitting uninitialized memory that happens to match prefix,1,[],https://github.com/sysown/proxysql/pull/1021,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1021#issuecomment-301863785,Refs #1016,"@minichate : thank you for the pull request and for investigating issue #1016 .
I will review it today.
Thanks again!",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1021,2017-05-16T17:45:25Z,2017-05-21T10:41:30Z,2017-05-21T10:48:02Z,MERGED,True,1,1,1,https://github.com/minichate,Make sure we're not hitting uninitialized memory that happens to match prefix,1,[],https://github.com/sysown/proxysql/pull/1021,https://github.com/minichate,3,https://github.com/sysown/proxysql/pull/1021#issuecomment-301881949,Refs #1016,"Actually, we could probably drop strncmp altogether now:
diff --git a/lib/mysql_connection.cpp b/lib/mysql_connection.cpp
index 62c8418..625fdfd 100644
--- a/lib/mysql_connection.cpp
+++ b/lib/mysql_connection.cpp
@@ -119,16 +119,11 @@ void MySQL_Connection_userinfo::set(MySQL_Connection_userinfo *ui) {
 
 
 bool MySQL_Connection_userinfo::set_schemaname(char *_new, int l) {
-	int _l=0;
 	char *new_schemaname=(char *)malloc(l+1);
 	memcpy(new_schemaname,_new,l);
 	new_schemaname[l]=0;
 
-	if (schemaname) {
-		_l=strlen(schemaname); // bug fix for #609
-	}
-
-	if ((schemaname==NULL) || (strncmp(new_schemaname,schemaname, (l > _l ? l : _l) ))) {
+	if ((schemaname==NULL) || (strcmp(new_schemaname,schemaname))) {
 		if (schemaname) {
 			free(schemaname);
 			schemaname=NULL;",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1021,2017-05-16T17:45:25Z,2017-05-21T10:41:30Z,2017-05-21T10:48:02Z,MERGED,True,1,1,1,https://github.com/minichate,Make sure we're not hitting uninitialized memory that happens to match prefix,1,[],https://github.com/sysown/proxysql/pull/1021,https://github.com/minichate,4,https://github.com/sysown/proxysql/pull/1021#issuecomment-302408835,Refs #1016,@renecannao Do you want me to adjust the pull request to account for your comment? Or are you ok leaving it as-is?,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1021,2017-05-16T17:45:25Z,2017-05-21T10:41:30Z,2017-05-21T10:48:02Z,MERGED,True,1,1,1,https://github.com/minichate,Make sure we're not hitting uninitialized memory that happens to match prefix,1,[],https://github.com/sysown/proxysql/pull/1021,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/1021#issuecomment-302543236,Refs #1016,"@minichate , sorry for slow reply.
I think that checking the string length is correct (if two strings don't have the same length they are surely different) and efficient (no need to make any call to the memory allocator, and strncmp (or strcmp) won't be called at all.
The current bug is here: (l > _l ? l : _l)
The 3rd argument of strncmp is the length of the new schemaname if that is longer than the length of the current schemaname, otherwise the old schemaname.
This fixed the issue in #609 (new schemaname longer than old schemaname), but what you reported in #1016 is exactly the opposite (old schemaname longer than new schemaname).
But the truth is that strncmp shouldn't be called at all if old/new schemaname have different lengths: surely they can't be the same!
Therefore the final fix should be something like:
if ((schemaname==NULL) || (l != _l) || (strncmp(_new,schemaname, l ))) {

Schemaname is set if any of these is true:

is currently NULL
new/old schemaname have different length
if they have same length, they differ

Thoughts?",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1021,2017-05-16T17:45:25Z,2017-05-21T10:41:30Z,2017-05-21T10:48:02Z,MERGED,True,1,1,1,https://github.com/minichate,Make sure we're not hitting uninitialized memory that happens to match prefix,1,[],https://github.com/sysown/proxysql/pull/1021,https://github.com/minichate,6,https://github.com/sysown/proxysql/pull/1021#issuecomment-302700872,Refs #1016,@renecannao That sounds reasonable! I'll adjust this PR and create a new one against master as well? (or do you want me to port it against the 1.4.0 branch directly?),True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1021,2017-05-16T17:45:25Z,2017-05-21T10:41:30Z,2017-05-21T10:48:02Z,MERGED,True,1,1,1,https://github.com/minichate,Make sure we're not hitting uninitialized memory that happens to match prefix,1,[],https://github.com/sysown/proxysql/pull/1021,https://github.com/renecannao,7,https://github.com/sysown/proxysql/pull/1021#issuecomment-302928969,Refs #1016,Thank you @minichate !,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1023,2017-05-19T13:30:52Z,2017-05-21T10:41:51Z,2017-05-21T10:41:51Z,MERGED,True,1,1,1,https://github.com/minichate,Make sure we're not hitting uninitialized memory that happens to match prefix,1,[],https://github.com/sysown/proxysql/pull/1023,https://github.com/minichate,1,https://github.com/sysown/proxysql/pull/1023,Fixes #1016 on master,Fixes #1016 on master,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1028,2017-05-24T19:19:35Z,2019-03-16T11:09:24Z,2019-03-16T11:09:24Z,CLOSED,False,38031,34605,85,https://github.com/mhahnenberg,Format source files using clang-format,1,[],https://github.com/sysown/proxysql/pull/1028,https://github.com/mhahnenberg,1,https://github.com/sysown/proxysql/pull/1028,"This should make the code more readable/accessible to others in an automatic,
efficient, reproducible fashion without imposing personal stylistic preferences.","This should make the code more readable/accessible to others in an automatic,
efficient, reproducible fashion without imposing personal stylistic preferences.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1028,2017-05-24T19:19:35Z,2019-03-16T11:09:24Z,2019-03-16T11:09:24Z,CLOSED,False,38031,34605,85,https://github.com/mhahnenberg,Format source files using clang-format,1,[],https://github.com/sysown/proxysql/pull/1028,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1028#issuecomment-473521007,"This should make the code more readable/accessible to others in an automatic,
efficient, reproducible fashion without imposing personal stylistic preferences.","Hi @mhahnenberg .
Closing this as very old.
Nonetheless, I agree we need to better format the source files.
Thanks",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1035,2017-06-01T11:08:24Z,2017-08-08T19:04:03Z,2017-08-08T19:04:03Z,MERGED,True,1,1,1,https://github.com/AlekSi,Fix typo,1,[],https://github.com/sysown/proxysql/pull/1035,https://github.com/AlekSi,1,https://github.com/sysown/proxysql/pull/1035,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1036,2017-06-01T11:17:04Z,2017-08-08T19:06:18Z,2017-08-08T19:06:18Z,CLOSED,False,1,1,1,https://github.com/AlekSi,"Latency_ms is microseconds, not milliseconds",1,[],https://github.com/sysown/proxysql/pull/1036,https://github.com/AlekSi,1,https://github.com/sysown/proxysql/pull/1036,"#882
Please correct me if I'm wrong.","#882
Please correct me if I'm wrong.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1036,2017-06-01T11:17:04Z,2017-08-08T19:06:18Z,2017-08-08T19:06:18Z,CLOSED,False,1,1,1,https://github.com/AlekSi,"Latency_ms is microseconds, not milliseconds",1,[],https://github.com/sysown/proxysql/pull/1036,https://github.com/AlekSi,2,https://github.com/sysown/proxysql/pull/1036#issuecomment-308109396,"#882
Please correct me if I'm wrong.",@renecannao poke. Did I send this PR to correct branch? Should this documentation be in both source code repository and wiki?,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1036,2017-06-01T11:17:04Z,2017-08-08T19:06:18Z,2017-08-08T19:06:18Z,CLOSED,False,1,1,1,https://github.com/AlekSi,"Latency_ms is microseconds, not milliseconds",1,[],https://github.com/sysown/proxysql/pull/1036,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/1036#issuecomment-321051829,"#882
Please correct me if I'm wrong.",This is already fixed in 1.4. Thanks,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1052,2017-06-16T14:25:19Z,2017-06-16T14:29:50Z,2017-06-16T14:38:21Z,MERGED,True,12,12,2,https://github.com/caringi,Renamed CPP to CXX in Makefiles,1,[],https://github.com/sysown/proxysql/pull/1052,https://github.com/caringi,1,https://github.com/sysown/proxysql/pull/1052,"Renamed all variables in Makefiles that have 'CPP' in the name to 'CXX':
""CFLAGS enables the addition of switches for the C compiler, while
CXXFLAGS is meant to be used when invoking a C++ compiler. Similarly, a
variable CPPFLAGS exists with switches to be passed to the C or C++
preprocessor."" (https://en.wikipedia.org/wiki/CFLAGS)
This change facilitates the building with customized CXXFLAGS (rpmbuild
exports a customized CXXFLAGS with hardening flags).
More 2 links:
https://stackoverflow.com/questions/495598/difference-between-cppflags-and-cxxflags-in-gnu-make
https://stackoverflow.com/questions/5541946/cflags-ccflags-cxxflags-what-exactly-do-these-variables-control","Renamed all variables in Makefiles that have 'CPP' in the name to 'CXX':
""CFLAGS enables the addition of switches for the C compiler, while
CXXFLAGS is meant to be used when invoking a C++ compiler. Similarly, a
variable CPPFLAGS exists with switches to be passed to the C or C++
preprocessor."" (https://en.wikipedia.org/wiki/CFLAGS)
This change facilitates the building with customized CXXFLAGS (rpmbuild
exports a customized CXXFLAGS with hardening flags).
More 2 links:
https://stackoverflow.com/questions/495598/difference-between-cppflags-and-cxxflags-in-gnu-make
https://stackoverflow.com/questions/5541946/cflags-ccflags-cxxflags-what-exactly-do-these-variables-control",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1052,2017-06-16T14:25:19Z,2017-06-16T14:29:50Z,2017-06-16T14:38:21Z,MERGED,True,12,12,2,https://github.com/caringi,Renamed CPP to CXX in Makefiles,1,[],https://github.com/sysown/proxysql/pull/1052,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1052#issuecomment-309043434,"Renamed all variables in Makefiles that have 'CPP' in the name to 'CXX':
""CFLAGS enables the addition of switches for the C compiler, while
CXXFLAGS is meant to be used when invoking a C++ compiler. Similarly, a
variable CPPFLAGS exists with switches to be passed to the C or C++
preprocessor."" (https://en.wikipedia.org/wiki/CFLAGS)
This change facilitates the building with customized CXXFLAGS (rpmbuild
exports a customized CXXFLAGS with hardening flags).
More 2 links:
https://stackoverflow.com/questions/495598/difference-between-cppflags-and-cxxflags-in-gnu-make
https://stackoverflow.com/questions/5541946/cflags-ccflags-cxxflags-what-exactly-do-these-variables-control","Thank you Augusto. I created #1053 to remind myself to apply this to future 1.3.8 and 1.41 . current master branch is not updated.
Actually, I am going to change the default branch to 1.4.1",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1056,2017-06-19T00:02:14Z,2017-11-20T05:55:30Z,2019-10-29T00:02:30Z,CLOSED,False,108,4,7,https://github.com/renecannao,Per connection rate limit,4,[],https://github.com/sysown/proxysql/pull/1056,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/1056,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1056,2017-06-19T00:02:14Z,2017-11-20T05:55:30Z,2019-10-29T00:02:30Z,CLOSED,False,108,4,7,https://github.com/renecannao,Per connection rate limit,4,[],https://github.com/sysown/proxysql/pull/1056,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1056#issuecomment-345598705,,This was already merged,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1057,2017-06-19T07:55:04Z,2019-03-16T11:08:08Z,2019-03-16T11:08:08Z,CLOSED,False,18,0,1,https://github.com/mohsenSy,add issue templates to help contributors,1,[],https://github.com/sysown/proxysql/pull/1057,https://github.com/mohsenSy,1,https://github.com/sysown/proxysql/pull/1057,This template enables the issue reporters to add exactly all the data we need to solve any issue created.,This template enables the issue reporters to add exactly all the data we need to solve any issue created.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1057,2017-06-19T07:55:04Z,2019-03-16T11:08:08Z,2019-03-16T11:08:08Z,CLOSED,False,18,0,1,https://github.com/mohsenSy,add issue templates to help contributors,1,[],https://github.com/sysown/proxysql/pull/1057,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1057#issuecomment-473520942,This template enables the issue reporters to add exactly all the data we need to solve any issue created.,"@mohsenSy : thank you.
We have a new issue template from some time, therefore I am closing this.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1058,2017-06-19T09:38:35Z,,2019-11-20T15:55:00Z,OPEN,False,84,0,2,https://github.com/caringi,Add manpage,1,[],https://github.com/sysown/proxysql/pull/1058,https://github.com/caringi,1,https://github.com/sysown/proxysql/pull/1058,Added basic manpage,Added basic manpage,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1058,2017-06-19T09:38:35Z,,2019-11-20T15:55:00Z,OPEN,False,84,0,2,https://github.com/caringi,Add manpage,1,[],https://github.com/sysown/proxysql/pull/1058,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1058#issuecomment-556069888,Added basic manpage,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1064,2017-06-20T20:10:44Z,2017-06-22T06:40:42Z,2017-06-26T13:21:58Z,CLOSED,False,29,20,5,https://github.com/ton31337,Add `SO_LINGER` option to avoid many `TIME_WAIT`,1,[],https://github.com/sysown/proxysql/pull/1064,https://github.com/ton31337,1,https://github.com/sysown/proxysql/pull/1064,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1064,2017-06-20T20:10:44Z,2017-06-22T06:40:42Z,2017-06-26T13:21:58Z,CLOSED,False,29,20,5,https://github.com/ton31337,Add `SO_LINGER` option to avoid many `TIME_WAIT`,1,[],https://github.com/sysown/proxysql/pull/1064,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1064#issuecomment-309880071,,"I don't think this patch will solve any specific issue.
If we set SO_LINGER on proxy port, this won't stop the client from disconnecting as soon as it send the QUIT command. Actually, this is a knows issue in mysql client library: the client sends QUIT and disconnect immediately.
So setting on proxy port has no use.
Setting it on the the backend side it has more drawback than benefits.
All communication with backends is supposed to be non blocking: if close() or shutdown() wait until it successfully sends all the data, the calls become blocking and if the backend has issues (or is not reachable) this will cause stalls.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1064,2017-06-20T20:10:44Z,2017-06-22T06:40:42Z,2017-06-26T13:21:58Z,CLOSED,False,29,20,5,https://github.com/ton31337,Add `SO_LINGER` option to avoid many `TIME_WAIT`,1,[],https://github.com/sysown/proxysql/pull/1064,https://github.com/ton31337,3,https://github.com/sysown/proxysql/pull/1064#issuecomment-309964879,,"With zero lingering close()/shutdown() wouldn't wait, afaik.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1064,2017-06-20T20:10:44Z,2017-06-22T06:40:42Z,2017-06-26T13:21:58Z,CLOSED,False,29,20,5,https://github.com/ton31337,Add `SO_LINGER` option to avoid many `TIME_WAIT`,1,[],https://github.com/sysown/proxysql/pull/1064,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/1064#issuecomment-309993629,,"With zero lingering close()/shutdown() wouldn't wait, afaik.

So what is the use?
I would rather set tcp_tw_recycle and tcp_tw_reuse",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1064,2017-06-20T20:10:44Z,2017-06-22T06:40:42Z,2017-06-26T13:21:58Z,CLOSED,False,29,20,5,https://github.com/ton31337,Add `SO_LINGER` option to avoid many `TIME_WAIT`,1,[],https://github.com/sysown/proxysql/pull/1064,https://github.com/ton31337,5,https://github.com/sysown/proxysql/pull/1064#issuecomment-311057437,,"Hm, what if we use HAProxy in front of ProxySQLs and they are generating huge number of connections?",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1130,2017-08-04T18:41:38Z,2017-08-08T19:01:12Z,2017-08-08T19:03:11Z,MERGED,True,3,0,1,https://github.com/johnpupu,Fix FreeBSD Compilation error,1,[],https://github.com/sysown/proxysql/pull/1130,https://github.com/johnpupu,1,https://github.com/sysown/proxysql/pull/1130,"Fix these errors
main.cpp:26:32: error: use of undeclared identifier 'O_WRONLY' outfd=open(GloVars.errorlog, O_WRONLY | O_APPEND | O_CREAT , S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP); ^ main.cpp:26:43: error: use of undeclared identifier 'O_APPEND' outfd=open(GloVars.errorlog, O_WRONLY | O_APPEND | O_CREAT , S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP); ^ main.cpp:26:54: error: use of undeclared identifier 'O_CREAT' outfd=open(GloVars.errorlog, O_WRONLY | O_APPEND | O_CREAT , S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP); ^ main.cpp:33:32: error: use of undeclared identifier 'O_WRONLY' errfd=open(GloVars.errorlog, O_WRONLY | O_APPEND | O_CREAT , S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP); ^ main.cpp:33:43: error: use of undeclared identifier 'O_APPEND' errfd=open(GloVars.errorlog, O_WRONLY | O_APPEND | O_CREAT , S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP); ^ main.cpp:33:54: error: use of undeclared identifier 'O_CREAT' errfd=open(GloVars.errorlog, O_WRONLY | O_APPEND | O_CREAT , S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP);","Fix these errors
main.cpp:26:32: error: use of undeclared identifier 'O_WRONLY' outfd=open(GloVars.errorlog, O_WRONLY | O_APPEND | O_CREAT , S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP); ^ main.cpp:26:43: error: use of undeclared identifier 'O_APPEND' outfd=open(GloVars.errorlog, O_WRONLY | O_APPEND | O_CREAT , S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP); ^ main.cpp:26:54: error: use of undeclared identifier 'O_CREAT' outfd=open(GloVars.errorlog, O_WRONLY | O_APPEND | O_CREAT , S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP); ^ main.cpp:33:32: error: use of undeclared identifier 'O_WRONLY' errfd=open(GloVars.errorlog, O_WRONLY | O_APPEND | O_CREAT , S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP); ^ main.cpp:33:43: error: use of undeclared identifier 'O_APPEND' errfd=open(GloVars.errorlog, O_WRONLY | O_APPEND | O_CREAT , S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP); ^ main.cpp:33:54: error: use of undeclared identifier 'O_CREAT' errfd=open(GloVars.errorlog, O_WRONLY | O_APPEND | O_CREAT , S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP);",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1130,2017-08-04T18:41:38Z,2017-08-08T19:01:12Z,2017-08-08T19:03:11Z,MERGED,True,3,0,1,https://github.com/johnpupu,Fix FreeBSD Compilation error,1,[],https://github.com/sysown/proxysql/pull/1130,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1130#issuecomment-321051077,"Fix these errors
main.cpp:26:32: error: use of undeclared identifier 'O_WRONLY' outfd=open(GloVars.errorlog, O_WRONLY | O_APPEND | O_CREAT , S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP); ^ main.cpp:26:43: error: use of undeclared identifier 'O_APPEND' outfd=open(GloVars.errorlog, O_WRONLY | O_APPEND | O_CREAT , S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP); ^ main.cpp:26:54: error: use of undeclared identifier 'O_CREAT' outfd=open(GloVars.errorlog, O_WRONLY | O_APPEND | O_CREAT , S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP); ^ main.cpp:33:32: error: use of undeclared identifier 'O_WRONLY' errfd=open(GloVars.errorlog, O_WRONLY | O_APPEND | O_CREAT , S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP); ^ main.cpp:33:43: error: use of undeclared identifier 'O_APPEND' errfd=open(GloVars.errorlog, O_WRONLY | O_APPEND | O_CREAT , S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP); ^ main.cpp:33:54: error: use of undeclared identifier 'O_CREAT' errfd=open(GloVars.errorlog, O_WRONLY | O_APPEND | O_CREAT , S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP);","@johnpupu : thanks!
Cherry-picked in 1.4.2 too.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1144,2017-08-18T10:38:12Z,2017-08-18T10:58:34Z,2017-08-18T11:01:10Z,MERGED,True,37,2,5,https://github.com/everpcpc,add option autocommit_false_not_reusable,1,[],https://github.com/sysown/proxysql/pull/1144,https://github.com/everpcpc,1,https://github.com/sysown/proxysql/pull/1144,"another way to handle #1044
cc @MOON-CLJ","another way to handle #1044
cc @MOON-CLJ",True,{'THUMBS_UP': ['https://github.com/MOON-CLJ']}
sysown/proxysql,https://github.com/sysown/proxysql,1144,2017-08-18T10:38:12Z,2017-08-18T10:58:34Z,2017-08-18T11:01:10Z,MERGED,True,37,2,5,https://github.com/everpcpc,add option autocommit_false_not_reusable,1,[],https://github.com/sysown/proxysql/pull/1144,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1144#issuecomment-323324390,"another way to handle #1044
cc @MOON-CLJ","Thank you @everpcpc !
The commit looks good to me. Merging it.
Nonetheless, I think there are too many variables to control and a lot of  edge cases: this is not intuitive for regular users.
A more elegant solution is needed, and I think the idea behind #955 is the correct one.
Thanks",True,{'THUMBS_UP': ['https://github.com/everpcpc']}
sysown/proxysql,https://github.com/sysown/proxysql,1152,2017-08-28T09:34:15Z,2017-09-01T19:34:05Z,2017-09-02T01:56:05Z,MERGED,True,2,2,1,https://github.com/everpcpc,fix check autocommit false mistaken to true,1,[],https://github.com/sysown/proxysql/pull/1152,https://github.com/everpcpc,1,https://github.com/sysown/proxysql/pull/1152,Sorry for that mistake. >_<,Sorry for that mistake. >_<,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1152,2017-08-28T09:34:15Z,2017-09-01T19:34:05Z,2017-09-02T01:56:05Z,MERGED,True,2,2,1,https://github.com/everpcpc,fix check autocommit false mistaken to true,1,[],https://github.com/sysown/proxysql/pull/1152,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1152#issuecomment-326666275,Sorry for that mistake. >_<,Thanks!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1154,2017-08-30T14:24:37Z,2017-09-01T19:16:17Z,2017-09-01T19:16:17Z,MERGED,True,9,1,1,https://github.com/i1tech,Add reload command to init.d script.,2,[],https://github.com/sysown/proxysql/pull/1154,https://github.com/i1tech,1,https://github.com/sysown/proxysql/pull/1154,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1158,2017-08-31T11:04:36Z,2017-09-01T19:13:09Z,2017-09-01T19:13:15Z,MERGED,True,24,8,1,https://github.com/krzysztof-ksiazek,Further improvements to reduce config reloading,1,[],https://github.com/sysown/proxysql/pull/1158,https://github.com/krzysztof-ksiazek,1,https://github.com/sysown/proxysql/pull/1158,Some fixes to avoid running LOAD MYSQL SERVERS TO RUNTIME when no change is needed,Some fixes to avoid running LOAD MYSQL SERVERS TO RUNTIME when no change is needed,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1158,2017-08-31T11:04:36Z,2017-09-01T19:13:09Z,2017-09-01T19:13:15Z,MERGED,True,24,8,1,https://github.com/krzysztof-ksiazek,Further improvements to reduce config reloading,1,[],https://github.com/sysown/proxysql/pull/1158,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1158#issuecomment-326662172,Some fixes to avoid running LOAD MYSQL SERVERS TO RUNTIME when no change is needed,Thanks,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1169,2017-09-08T11:10:26Z,2017-09-08T11:29:09Z,2017-09-08T11:29:45Z,MERGED,True,1,0,1,https://github.com/ananthakumaran,initialize the filler byte to 0,1,[],https://github.com/sysown/proxysql/pull/1169,https://github.com/ananthakumaran,1,https://github.com/sysown/proxysql/pull/1169,"COM_STMT_PREPARE OK
  OK response to a COM_STMT_PREPARE packet

  direction: server -> client

  payload:
    1              [00] OK
    4              statement-id
    2              num-columns
    2              num-params
    1              [00] filler
    2              warning count

According to the protocol 10th byte (filler) of the response should be
0. introduced by 02432b2.
We recently upgraded from 1.3.5 to 1.4.1 and started to get errors randomly. I was able to reduce it to the prepare statement query.
Application.ensure_all_started(:mariaex)
{:ok, conn} = Mariaex.start_link(username: ""root"", password: ""sqlsecret"", database: ""pato_dev"", port: ""6033"")
for i <- 1..100 do
  Mariaex.prepare(conn, ""by_kind"", ""select id FROM sidekiq_jobs WHERE kind='$1'"")
end
IO.puts ""OK""
timestamp=2017-09-08T10:43:21.112Z level=error  message= GenServer #PID<0.747.0> terminating
** (DBConnection.ConnectionError) client #PID<0.73.0> stopped: ** (MatchError) no match of right hand side value: <<0, 1, 0, 0, 0, 1, 0, 0, 0, 7, 0, 0>>
    (mariaex) lib/mariaex/messages.ex:149: Mariaex.Messages.decode_stmt_prepare_ok/1
    (mariaex) lib/mariaex/messages.ex:219: Mariaex.Messages.decode/2

The client library we use make assertion on the structure of response from mysql. Because the filler byte is not always zero, the assertion fails randomly. Initializing it to zero fixes the problem.","COM_STMT_PREPARE OK
  OK response to a COM_STMT_PREPARE packet

  direction: server -> client

  payload:
    1              [00] OK
    4              statement-id
    2              num-columns
    2              num-params
    1              [00] filler
    2              warning count

According to the protocol 10th byte (filler) of the response should be
0. introduced by 02432b2.
We recently upgraded from 1.3.5 to 1.4.1 and started to get errors randomly. I was able to reduce it to the prepare statement query.
Application.ensure_all_started(:mariaex)
{:ok, conn} = Mariaex.start_link(username: ""root"", password: ""sqlsecret"", database: ""pato_dev"", port: ""6033"")
for i <- 1..100 do
  Mariaex.prepare(conn, ""by_kind"", ""select id FROM sidekiq_jobs WHERE kind='$1'"")
end
IO.puts ""OK""
timestamp=2017-09-08T10:43:21.112Z level=error  message= GenServer #PID<0.747.0> terminating
** (DBConnection.ConnectionError) client #PID<0.73.0> stopped: ** (MatchError) no match of right hand side value: <<0, 1, 0, 0, 0, 1, 0, 0, 0, 7, 0, 0>>
    (mariaex) lib/mariaex/messages.ex:149: Mariaex.Messages.decode_stmt_prepare_ok/1
    (mariaex) lib/mariaex/messages.ex:219: Mariaex.Messages.decode/2

The client library we use make assertion on the structure of response from mysql. Because the filler byte is not always zero, the assertion fails randomly. Initializing it to zero fixes the problem.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1169,2017-09-08T11:10:26Z,2017-09-08T11:29:09Z,2017-09-08T11:29:45Z,MERGED,True,1,0,1,https://github.com/ananthakumaran,initialize the filler byte to 0,1,[],https://github.com/sysown/proxysql/pull/1169,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1169#issuecomment-328076274,"COM_STMT_PREPARE OK
  OK response to a COM_STMT_PREPARE packet

  direction: server -> client

  payload:
    1              [00] OK
    4              statement-id
    2              num-columns
    2              num-params
    1              [00] filler
    2              warning count

According to the protocol 10th byte (filler) of the response should be
0. introduced by 02432b2.
We recently upgraded from 1.3.5 to 1.4.1 and started to get errors randomly. I was able to reduce it to the prepare statement query.
Application.ensure_all_started(:mariaex)
{:ok, conn} = Mariaex.start_link(username: ""root"", password: ""sqlsecret"", database: ""pato_dev"", port: ""6033"")
for i <- 1..100 do
  Mariaex.prepare(conn, ""by_kind"", ""select id FROM sidekiq_jobs WHERE kind='$1'"")
end
IO.puts ""OK""
timestamp=2017-09-08T10:43:21.112Z level=error  message= GenServer #PID<0.747.0> terminating
** (DBConnection.ConnectionError) client #PID<0.73.0> stopped: ** (MatchError) no match of right hand side value: <<0, 1, 0, 0, 0, 1, 0, 0, 0, 7, 0, 0>>
    (mariaex) lib/mariaex/messages.ex:149: Mariaex.Messages.decode_stmt_prepare_ok/1
    (mariaex) lib/mariaex/messages.ex:219: Mariaex.Messages.decode/2

The client library we use make assertion on the structure of response from mysql. Because the filler byte is not always zero, the assertion fails randomly. Initializing it to zero fixes the problem.","Thank you for catching this!
Merging.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1169,2017-09-08T11:10:26Z,2017-09-08T11:29:09Z,2017-09-08T11:29:45Z,MERGED,True,1,0,1,https://github.com/ananthakumaran,initialize the filler byte to 0,1,[],https://github.com/sysown/proxysql/pull/1169,https://github.com/ananthakumaran,3,https://github.com/sysown/proxysql/pull/1169#issuecomment-328078079,"COM_STMT_PREPARE OK
  OK response to a COM_STMT_PREPARE packet

  direction: server -> client

  payload:
    1              [00] OK
    4              statement-id
    2              num-columns
    2              num-params
    1              [00] filler
    2              warning count

According to the protocol 10th byte (filler) of the response should be
0. introduced by 02432b2.
We recently upgraded from 1.3.5 to 1.4.1 and started to get errors randomly. I was able to reduce it to the prepare statement query.
Application.ensure_all_started(:mariaex)
{:ok, conn} = Mariaex.start_link(username: ""root"", password: ""sqlsecret"", database: ""pato_dev"", port: ""6033"")
for i <- 1..100 do
  Mariaex.prepare(conn, ""by_kind"", ""select id FROM sidekiq_jobs WHERE kind='$1'"")
end
IO.puts ""OK""
timestamp=2017-09-08T10:43:21.112Z level=error  message= GenServer #PID<0.747.0> terminating
** (DBConnection.ConnectionError) client #PID<0.73.0> stopped: ** (MatchError) no match of right hand side value: <<0, 1, 0, 0, 0, 1, 0, 0, 0, 7, 0, 0>>
    (mariaex) lib/mariaex/messages.ex:149: Mariaex.Messages.decode_stmt_prepare_ok/1
    (mariaex) lib/mariaex/messages.ex:219: Mariaex.Messages.decode/2

The client library we use make assertion on the structure of response from mysql. Because the filler byte is not always zero, the assertion fails randomly. Initializing it to zero fixes the problem.",did you click the wrong button?,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1169,2017-09-08T11:10:26Z,2017-09-08T11:29:09Z,2017-09-08T11:29:45Z,MERGED,True,1,0,1,https://github.com/ananthakumaran,initialize the filler byte to 0,1,[],https://github.com/sysown/proxysql/pull/1169,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/1169#issuecomment-328079289,"COM_STMT_PREPARE OK
  OK response to a COM_STMT_PREPARE packet

  direction: server -> client

  payload:
    1              [00] OK
    4              statement-id
    2              num-columns
    2              num-params
    1              [00] filler
    2              warning count

According to the protocol 10th byte (filler) of the response should be
0. introduced by 02432b2.
We recently upgraded from 1.3.5 to 1.4.1 and started to get errors randomly. I was able to reduce it to the prepare statement query.
Application.ensure_all_started(:mariaex)
{:ok, conn} = Mariaex.start_link(username: ""root"", password: ""sqlsecret"", database: ""pato_dev"", port: ""6033"")
for i <- 1..100 do
  Mariaex.prepare(conn, ""by_kind"", ""select id FROM sidekiq_jobs WHERE kind='$1'"")
end
IO.puts ""OK""
timestamp=2017-09-08T10:43:21.112Z level=error  message= GenServer #PID<0.747.0> terminating
** (DBConnection.ConnectionError) client #PID<0.73.0> stopped: ** (MatchError) no match of right hand side value: <<0, 1, 0, 0, 0, 1, 0, 0, 0, 7, 0, 0>>
    (mariaex) lib/mariaex/messages.ex:149: Mariaex.Messages.decode_stmt_prepare_ok/1
    (mariaex) lib/mariaex/messages.ex:219: Mariaex.Messages.decode/2

The client library we use make assertion on the structure of response from mysql. Because the filler byte is not always zero, the assertion fails randomly. Initializing it to zero fixes the problem.","yes, wrong button üëé
Merged now",True,"{'HOORAY': ['https://github.com/ismailfaruqi', 'https://github.com/shinderuman', 'https://github.com/ananthakumaran', 'https://github.com/dwiyanrr']}"
sysown/proxysql,https://github.com/sysown/proxysql,1175,2017-09-13T15:04:52Z,2017-09-13T15:09:31Z,2017-09-13T15:09:31Z,MERGED,True,1,1,1,https://github.com/hornetmadness,Noted that multiple admin users can be specified.,1,[],https://github.com/sysown/proxysql/pull/1175,https://github.com/hornetmadness,1,https://github.com/sysown/proxysql/pull/1175,https://groups.google.com/d/msg/proxysql/Di6szGG76wk/xoTbjUmQAgAJ,https://groups.google.com/d/msg/proxysql/Di6szGG76wk/xoTbjUmQAgAJ,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1190,2017-09-28T17:10:54Z,2017-09-28T22:39:27Z,2017-09-28T22:39:27Z,CLOSED,False,34,15,3,https://github.com/insom,Make CPU-time monitoring optional,1,[],https://github.com/sysown/proxysql/pull/1190,https://github.com/insom,1,https://github.com/sysown/proxysql/pull/1190,"In deploying ProxySQL we see very high levels of system CPU time -- a lot of what it's doing is recving from one socket and sending to another, so this make sense, and a great deal of time is spent in poll -- but checking production nodes with strace -fp $pid -cc -e trace=!poll,nanosleep shows that up to a third of our system calls are to clock_gettime, specifically the CLOCK_THREAD_CPUTIME_ID variant.
This is a reasonably expensive variant of clock_gettime, because it's so accurate, but I'm not doing anything with the statistics being collected into query_processor_time and backend_query_time and I'd like to be able to turn them off.
This patch turns collecting these statistics off by default, and adds a -p param to enable collecting them. You may prefer to make this tuneable via the admin SQL interface but this seemed to be the smallest change to the code, so I went this route.

I tested on a 4 socket, 32 core, 64bit Ubuntu 14.04 machine with sysbench 1.0.2 and Linux kernel 3.19. I used this ProxySQL fork both collecting the time stats and not with this sysbench config:
sysbench --time=60 --mysql-port=6033 --mysql-host=127.0.0.1 \
--oltp-table-size=214748364800 --oltp-test-mode=complex \
--mysql-db=sysbench --mysql-user=root --mysql-password=root \
--oltp-read-only=off --threads=32 --report-interval=5 \
--events=10000000 --rate=1000 \
/usr/share/sysbench/tests/include/oltp_legacy/select.lua run
While this was running I collected stats using strace again, with this command line:
strace -fp $PID -cc -e trace'!=poll,nanosleep' & (sleep 10 && killall -INT strace)
The ProxySQL config was the default proxysql.cfg that ships with the source code.
The top six syscalls while collecting query stats:
% time     seconds  usecs/call     calls    errors syscall
------ ----------- ----------- --------- --------- ----------------
 42.75    0.006170           0     40972           sendto
 35.95    0.005188           0    119854           clock_gettime
 21.31    0.003075           0     59991     19051 recvfrom
  0.00    0.000000           0        32           ioctl
  0.00    0.000000           0         7           madvise
  0.00    0.000000           0        32           accept

The top six syscalls while not collecting query stats:
% time     seconds  usecs/call     calls    errors syscall
------ ----------- ----------- --------- --------- ----------------
 76.69    0.006001           0     42400           sendto
 23.18    0.001814           0     61542     19155 recvfrom
  0.13    0.000010           0       385       123 futex
  0.00    0.000000           0         6           read
  0.00    0.000000           0        21        16 open
  0.00    0.000000           0         7           close

While in normal operation each thread is spending a lot of time in nanosleep and poll, I think that this is enough of a saving that other people would want the option to disable stats in production.
If you're happy with the concept I'm happy to work on changes to the code to fit your design principles or coding standards.","In deploying ProxySQL we see very high levels of system CPU time -- a lot of what it's doing is recving from one socket and sending to another, so this make sense, and a great deal of time is spent in poll -- but checking production nodes with strace -fp $pid -cc -e trace=!poll,nanosleep shows that up to a third of our system calls are to clock_gettime, specifically the CLOCK_THREAD_CPUTIME_ID variant.
This is a reasonably expensive variant of clock_gettime, because it's so accurate, but I'm not doing anything with the statistics being collected into query_processor_time and backend_query_time and I'd like to be able to turn them off.
This patch turns collecting these statistics off by default, and adds a -p param to enable collecting them. You may prefer to make this tuneable via the admin SQL interface but this seemed to be the smallest change to the code, so I went this route.

I tested on a 4 socket, 32 core, 64bit Ubuntu 14.04 machine with sysbench 1.0.2 and Linux kernel 3.19. I used this ProxySQL fork both collecting the time stats and not with this sysbench config:
sysbench --time=60 --mysql-port=6033 --mysql-host=127.0.0.1 \
--oltp-table-size=214748364800 --oltp-test-mode=complex \
--mysql-db=sysbench --mysql-user=root --mysql-password=root \
--oltp-read-only=off --threads=32 --report-interval=5 \
--events=10000000 --rate=1000 \
/usr/share/sysbench/tests/include/oltp_legacy/select.lua run
While this was running I collected stats using strace again, with this command line:
strace -fp $PID -cc -e trace'!=poll,nanosleep' & (sleep 10 && killall -INT strace)
The ProxySQL config was the default proxysql.cfg that ships with the source code.
The top six syscalls while collecting query stats:
% time     seconds  usecs/call     calls    errors syscall
------ ----------- ----------- --------- --------- ----------------
 42.75    0.006170           0     40972           sendto
 35.95    0.005188           0    119854           clock_gettime
 21.31    0.003075           0     59991     19051 recvfrom
  0.00    0.000000           0        32           ioctl
  0.00    0.000000           0         7           madvise
  0.00    0.000000           0        32           accept

The top six syscalls while not collecting query stats:
% time     seconds  usecs/call     calls    errors syscall
------ ----------- ----------- --------- --------- ----------------
 76.69    0.006001           0     42400           sendto
 23.18    0.001814           0     61542     19155 recvfrom
  0.13    0.000010           0       385       123 futex
  0.00    0.000000           0         6           read
  0.00    0.000000           0        21        16 open
  0.00    0.000000           0         7           close

While in normal operation each thread is spending a lot of time in nanosleep and poll, I think that this is enough of a saving that other people would want the option to disable stats in production.
If you're happy with the concept I'm happy to work on changes to the code to fit your design principles or coding standards.",True,{'THUMBS_UP': ['https://github.com/jordanwheeler']}
sysown/proxysql,https://github.com/sysown/proxysql,1190,2017-09-28T17:10:54Z,2017-09-28T22:39:27Z,2017-09-28T22:39:27Z,CLOSED,False,34,15,3,https://github.com/insom,Make CPU-time monitoring optional,1,[],https://github.com/sysown/proxysql/pull/1190,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1190#issuecomment-332975862,"In deploying ProxySQL we see very high levels of system CPU time -- a lot of what it's doing is recving from one socket and sending to another, so this make sense, and a great deal of time is spent in poll -- but checking production nodes with strace -fp $pid -cc -e trace=!poll,nanosleep shows that up to a third of our system calls are to clock_gettime, specifically the CLOCK_THREAD_CPUTIME_ID variant.
This is a reasonably expensive variant of clock_gettime, because it's so accurate, but I'm not doing anything with the statistics being collected into query_processor_time and backend_query_time and I'd like to be able to turn them off.
This patch turns collecting these statistics off by default, and adds a -p param to enable collecting them. You may prefer to make this tuneable via the admin SQL interface but this seemed to be the smallest change to the code, so I went this route.

I tested on a 4 socket, 32 core, 64bit Ubuntu 14.04 machine with sysbench 1.0.2 and Linux kernel 3.19. I used this ProxySQL fork both collecting the time stats and not with this sysbench config:
sysbench --time=60 --mysql-port=6033 --mysql-host=127.0.0.1 \
--oltp-table-size=214748364800 --oltp-test-mode=complex \
--mysql-db=sysbench --mysql-user=root --mysql-password=root \
--oltp-read-only=off --threads=32 --report-interval=5 \
--events=10000000 --rate=1000 \
/usr/share/sysbench/tests/include/oltp_legacy/select.lua run
While this was running I collected stats using strace again, with this command line:
strace -fp $PID -cc -e trace'!=poll,nanosleep' & (sleep 10 && killall -INT strace)
The ProxySQL config was the default proxysql.cfg that ships with the source code.
The top six syscalls while collecting query stats:
% time     seconds  usecs/call     calls    errors syscall
------ ----------- ----------- --------- --------- ----------------
 42.75    0.006170           0     40972           sendto
 35.95    0.005188           0    119854           clock_gettime
 21.31    0.003075           0     59991     19051 recvfrom
  0.00    0.000000           0        32           ioctl
  0.00    0.000000           0         7           madvise
  0.00    0.000000           0        32           accept

The top six syscalls while not collecting query stats:
% time     seconds  usecs/call     calls    errors syscall
------ ----------- ----------- --------- --------- ----------------
 76.69    0.006001           0     42400           sendto
 23.18    0.001814           0     61542     19155 recvfrom
  0.13    0.000010           0       385       123 futex
  0.00    0.000000           0         6           read
  0.00    0.000000           0        21        16 open
  0.00    0.000000           0         7           close

While in normal operation each thread is spending a lot of time in nanosleep and poll, I think that this is enough of a saving that other people would want the option to disable stats in production.
If you're happy with the concept I'm happy to work on changes to the code to fit your design principles or coding standards.","Hi Aaron,
Thank you for the patch!
The timing for this PR is very interesting: I was chatting with someone about the performance implication of clock_gettime() right when you submitted the PR.
Indeed, I think the best solution is to make it a global variable and not a cmdline option.
I will work on it and get it ready in the next few hours.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1190,2017-09-28T17:10:54Z,2017-09-28T22:39:27Z,2017-09-28T22:39:27Z,CLOSED,False,34,15,3,https://github.com/insom,Make CPU-time monitoring optional,1,[],https://github.com/sysown/proxysql/pull/1190,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/1190#issuecomment-332983155,"In deploying ProxySQL we see very high levels of system CPU time -- a lot of what it's doing is recving from one socket and sending to another, so this make sense, and a great deal of time is spent in poll -- but checking production nodes with strace -fp $pid -cc -e trace=!poll,nanosleep shows that up to a third of our system calls are to clock_gettime, specifically the CLOCK_THREAD_CPUTIME_ID variant.
This is a reasonably expensive variant of clock_gettime, because it's so accurate, but I'm not doing anything with the statistics being collected into query_processor_time and backend_query_time and I'd like to be able to turn them off.
This patch turns collecting these statistics off by default, and adds a -p param to enable collecting them. You may prefer to make this tuneable via the admin SQL interface but this seemed to be the smallest change to the code, so I went this route.

I tested on a 4 socket, 32 core, 64bit Ubuntu 14.04 machine with sysbench 1.0.2 and Linux kernel 3.19. I used this ProxySQL fork both collecting the time stats and not with this sysbench config:
sysbench --time=60 --mysql-port=6033 --mysql-host=127.0.0.1 \
--oltp-table-size=214748364800 --oltp-test-mode=complex \
--mysql-db=sysbench --mysql-user=root --mysql-password=root \
--oltp-read-only=off --threads=32 --report-interval=5 \
--events=10000000 --rate=1000 \
/usr/share/sysbench/tests/include/oltp_legacy/select.lua run
While this was running I collected stats using strace again, with this command line:
strace -fp $PID -cc -e trace'!=poll,nanosleep' & (sleep 10 && killall -INT strace)
The ProxySQL config was the default proxysql.cfg that ships with the source code.
The top six syscalls while collecting query stats:
% time     seconds  usecs/call     calls    errors syscall
------ ----------- ----------- --------- --------- ----------------
 42.75    0.006170           0     40972           sendto
 35.95    0.005188           0    119854           clock_gettime
 21.31    0.003075           0     59991     19051 recvfrom
  0.00    0.000000           0        32           ioctl
  0.00    0.000000           0         7           madvise
  0.00    0.000000           0        32           accept

The top six syscalls while not collecting query stats:
% time     seconds  usecs/call     calls    errors syscall
------ ----------- ----------- --------- --------- ----------------
 76.69    0.006001           0     42400           sendto
 23.18    0.001814           0     61542     19155 recvfrom
  0.13    0.000010           0       385       123 futex
  0.00    0.000000           0         6           read
  0.00    0.000000           0        21        16 open
  0.00    0.000000           0         7           close

While in normal operation each thread is spending a lot of time in nanosleep and poll, I think that this is enough of a saving that other people would want the option to disable stats in production.
If you're happy with the concept I'm happy to work on changes to the code to fit your design principles or coding standards.","Aaron, cpu metrics are now optional and controlled by 2 new global variables:

mysql-stats_time_backend_query (default true)
mysql-stats_time_query_processor (default true)

For backward compatibility, they are both enabled by default.
Closing this issue.
Once again: thanks",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1209,2017-10-16T18:07:32Z,2017-10-26T21:37:17Z,2017-10-26T21:37:27Z,MERGED,True,2,0,1,https://github.com/pondix,Adding IPv6 localhost support,1,[],https://github.com/sysown/proxysql/pull/1209,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/1209,"Fixes:
root@vpn-web-dev:~# mysql -uadmin -p -h::1 -P6032
Enter password: 
ERROR 1040 (42000): User 'admin' can only connect locally","Fixes:
root@vpn-web-dev:~# mysql -uadmin -p -h::1 -P6032
Enter password: 
ERROR 1040 (42000): User 'admin' can only connect locally",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1209,2017-10-16T18:07:32Z,2017-10-26T21:37:17Z,2017-10-26T21:37:27Z,MERGED,True,2,0,1,https://github.com/pondix,Adding IPv6 localhost support,1,[],https://github.com/sysown/proxysql/pull/1209,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1209#issuecomment-336978763,"Fixes:
root@vpn-web-dev:~# mysql -uadmin -p -h::1 -P6032
Enter password: 
ERROR 1040 (42000): User 'admin' can only connect locally","Tested new code and ready to ship:
nvyzas@ubuntu-vm-nv:~/Develop/proxysql/src$ mysql -uadmin -padmin -h::1 -P6032
mysql: [Warning] Using a password on the command line interface can be insecure.
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 1
Server version: 5.5.30 (ProxySQL Admin Module)

Copyright (c) 2009-2016 Percona LLC and/or its affiliates
Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> show databases;
+-----+---------+-------------------------------+
| seq | name    | file                          |
+-----+---------+-------------------------------+
| 0   | main    |                               |
| 2   | disk    | /var/lib/proxysql/proxysql.db |
| 3   | stats   |                               |
| 4   | monitor |                               |
+-----+---------+-------------------------------+
4 rows in set (0.00 sec)

mysql>",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1209,2017-10-16T18:07:32Z,2017-10-26T21:37:17Z,2017-10-26T21:37:27Z,MERGED,True,2,0,1,https://github.com/pondix,Adding IPv6 localhost support,1,[],https://github.com/sysown/proxysql/pull/1209,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/1209#issuecomment-337191624,"Fixes:
root@vpn-web-dev:~# mysql -uadmin -p -h::1 -P6032
Enter password: 
ERROR 1040 (42000): User 'admin' can only connect locally","IPv6 localhost should be set as mysql_ifaces=""[::1]:6032""",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1209,2017-10-16T18:07:32Z,2017-10-26T21:37:17Z,2017-10-26T21:37:27Z,MERGED,True,2,0,1,https://github.com/pondix,Adding IPv6 localhost support,1,[],https://github.com/sysown/proxysql/pull/1209,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/1209#issuecomment-339808404,"Fixes:
root@vpn-web-dev:~# mysql -uadmin -p -h::1 -P6032
Enter password: 
ERROR 1040 (42000): User 'admin' can only connect locally",Thank you!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1217,2017-10-26T03:17:02Z,2017-10-26T21:36:43Z,2017-10-26T21:36:49Z,MERGED,True,0,1,1,https://github.com/xginn8,"when dropping a new unit file to disk, daemon-reload isn't necessary",1,[],https://github.com/sysown/proxysql/pull/1217,https://github.com/xginn8,1,https://github.com/sysown/proxysql/pull/1217,"and is actually a bad practice, since it's a blocking call in systemd","and is actually a bad practice, since it's a blocking call in systemd",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1217,2017-10-26T03:17:02Z,2017-10-26T21:36:43Z,2017-10-26T21:36:49Z,MERGED,True,0,1,1,https://github.com/xginn8,"when dropping a new unit file to disk, daemon-reload isn't necessary",1,[],https://github.com/sysown/proxysql/pull/1217,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1217#issuecomment-339808270,"and is actually a bad practice, since it's a blocking call in systemd",Thank you!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1220,2017-10-26T16:55:20Z,2017-10-26T21:35:56Z,2017-10-26T21:36:03Z,MERGED,True,2,2,1,https://github.com/jermlinden,"When parsing configfile, default mysql_server port to 3306",1,[],https://github.com/sysown/proxysql/pull/1220,https://github.com/jermlinden,1,https://github.com/sysown/proxysql/pull/1220,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1220,2017-10-26T16:55:20Z,2017-10-26T21:35:56Z,2017-10-26T21:36:03Z,MERGED,True,2,2,1,https://github.com/jermlinden,"When parsing configfile, default mysql_server port to 3306",1,[],https://github.com/sysown/proxysql/pull/1220,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1220#issuecomment-339808079,,Thank you for the patch!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1238,2017-11-11T06:21:04Z,2017-11-25T21:52:12Z,2017-11-25T21:52:19Z,MERGED,True,3,3,1,https://github.com/pepijnblom,fix some version numbers in the compile examples,1,[],https://github.com/sysown/proxysql/pull/1238,https://github.com/pepijnblom,1,https://github.com/sysown/proxysql/pull/1238,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1238,2017-11-11T06:21:04Z,2017-11-25T21:52:12Z,2017-11-25T21:52:19Z,MERGED,True,3,3,1,https://github.com/pepijnblom,fix some version numbers in the compile examples,1,[],https://github.com/sysown/proxysql/pull/1238,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1238#issuecomment-346968573,,Thanks,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1239,2017-11-11T06:32:40Z,2017-11-20T05:54:36Z,2017-11-20T05:54:52Z,MERGED,True,13,0,1,https://github.com/pepijnblom,Fix for building on Alpinelinux,1,[],https://github.com/sysown/proxysql/pull/1239,https://github.com/pepijnblom,1,https://github.com/sysown/proxysql/pull/1239,"You can't assume that the user is running Debian/Ubuntu and try to run update-rc.d
Combining the new if statements into one would be nicer, but my bash is weak ;)","You can't assume that the user is running Debian/Ubuntu and try to run update-rc.d
Combining the new if statements into one would be nicer, but my bash is weak ;)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1239,2017-11-11T06:32:40Z,2017-11-20T05:54:36Z,2017-11-20T05:54:52Z,MERGED,True,13,0,1,https://github.com/pepijnblom,Fix for building on Alpinelinux,1,[],https://github.com/sysown/proxysql/pull/1239,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1239#issuecomment-345598619,"You can't assume that the user is running Debian/Ubuntu and try to run update-rc.d
Combining the new if statements into one would be nicer, but my bash is weak ;)",Thank you for PR!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1243,2017-11-15T22:25:04Z,2017-11-15T22:27:24Z,2017-11-15T22:30:06Z,MERGED,True,4,4,1,https://github.com/pondix,Default false for mysql-stats_time_backend_XXX vars,1,[],https://github.com/sysown/proxysql/pull/1243,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/1243,Changes mysql-stats_time_backend_query and mysql-mysql-stats_time_query_processor default values to false,Changes mysql-stats_time_backend_query and mysql-mysql-stats_time_query_processor default values to false,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1243,2017-11-15T22:25:04Z,2017-11-15T22:27:24Z,2017-11-15T22:30:06Z,MERGED,True,4,4,1,https://github.com/pondix,Default false for mysql-stats_time_backend_XXX vars,1,[],https://github.com/sysown/proxysql/pull/1243,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1243#issuecomment-344750706,Changes mysql-stats_time_backend_query and mysql-mysql-stats_time_query_processor default values to false,Related to issue #1190,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1269,2017-11-30T18:46:15Z,2017-11-30T19:25:03Z,2017-11-30T19:25:03Z,MERGED,True,61,21,2,https://github.com/pondix,Persist eventlog file across restarts,1,[],https://github.com/sysown/proxysql/pull/1269,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/1269,"Fixes - ""Event log file is overwritten on ProxySQL service restart"" #1201","Fixes - ""Event log file is overwritten on ProxySQL service restart"" #1201",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1269,2017-11-30T18:46:15Z,2017-11-30T19:25:03Z,2017-11-30T19:25:03Z,MERGED,True,61,21,2,https://github.com/pondix,Persist eventlog file across restarts,1,[],https://github.com/sysown/proxysql/pull/1269,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1269#issuecomment-348293728,"Fixes - ""Event log file is overwritten on ProxySQL service restart"" #1201",This commit also introduces some input validation for variable mysql-eventslog_filename,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1270,2017-12-01T01:45:39Z,2017-12-04T20:47:25Z,2017-12-04T20:47:25Z,MERGED,True,28,13,1,https://github.com/pondix, Adding constraint for hostgroup_id >= 0 in mysql_servers,10,[],https://github.com/sysown/proxysql/pull/1270,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/1270,"Resolves issue ""mysql_servers.hostgroup_id must be >= 0"" #1244
Verified migration of existing table:
2017-12-01 03:38:35 [INFO] Starting ProxySQL
2017-12-01 03:38:35 [INFO] Sucessfully started
2017-12-01 03:38:35 [INFO] Angel process started ProxySQL process 55585
Standard ProxySQL Cluster rev. 0.1.0702 -- ProxySQL_Cluster.cpp -- Thu Nov 30 23:48:56 2017
Standard ProxySQL Statistics rev. 1.4.1027 -- ProxySQL_Statistics.cpp -- Fri Dec  1 02:27:57 2017
Standard ProxySQL HTTP Server Handler rev. 1.4.1031 -- ProxySQL_HTTP_Server.cpp -- Fri Dec  1 02:27:57 2017
2017-12-01 03:38:35 ProxySQL_Admin.cpp:7726:disk_upgrade_mysql_servers(): [WARNING] Detected version v1.3.0 of table mysql_servers
2017-12-01 03:38:35 ProxySQL_Admin.cpp:7727:disk_upgrade_mysql_servers(): [WARNING] ONLINE UPGRADE of table mysql_servers in progress
Standard ProxySQL Admin rev. 0.2.0902 -- ProxySQL_Admin.cpp -- Fri Dec  1 03:37:21 2017
Standard MySQL Threads Handler rev. 0.2.0902 -- MySQL_Thread.cpp -- Thu Nov 30 23:48:56 2017
...

Verified data integrity and new table structure:
mysql> show create table mysql_servers\G
*************************** 1. row ***************************
       table: mysql_servers
Create Table: CREATE TABLE mysql_servers (
    hostgroup_id INT CHECK (hostgroup_id>=0) NOT NULL DEFAULT 0,
    hostname VARCHAR NOT NULL,
    port INT NOT NULL DEFAULT 3306,
    status VARCHAR CHECK (UPPER(status) IN ('ONLINE','SHUNNED','OFFLINE_SOFT', 'OFFLINE_HARD')) NOT NULL DEFAULT 'ONLINE',
    weight INT CHECK (weight >= 0) NOT NULL DEFAULT 1,
    compression INT CHECK (compression >=0 AND compression <= 102400) NOT NULL DEFAULT 0,
    max_connections INT CHECK (max_connections >=0) NOT NULL DEFAULT 1000,
    max_replication_lag INT CHECK (max_replication_lag >= 0 AND max_replication_lag <= 126144000) NOT NULL DEFAULT 0,
    use_ssl INT CHECK (use_ssl IN(0,1)) NOT NULL DEFAULT 0,
    max_latency_ms INT UNSIGNED CHECK (max_latency_ms>=0) NOT NULL DEFAULT 0,
    comment VARCHAR NOT NULL DEFAULT '',
    PRIMARY KEY (hostgroup_id, hostname, port) )
1 row in set (0.00 sec)

mysql> select * from mysql_servers;
+--------------+-----------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| hostgroup_id | hostname  | port | status | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |
+--------------+-----------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| 10           | 127.0.0.1 | 3306 | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
+--------------+-----------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
1 row in set (0.00 sec)","Resolves issue ""mysql_servers.hostgroup_id must be >= 0"" #1244
Verified migration of existing table:
2017-12-01 03:38:35 [INFO] Starting ProxySQL
2017-12-01 03:38:35 [INFO] Sucessfully started
2017-12-01 03:38:35 [INFO] Angel process started ProxySQL process 55585
Standard ProxySQL Cluster rev. 0.1.0702 -- ProxySQL_Cluster.cpp -- Thu Nov 30 23:48:56 2017
Standard ProxySQL Statistics rev. 1.4.1027 -- ProxySQL_Statistics.cpp -- Fri Dec  1 02:27:57 2017
Standard ProxySQL HTTP Server Handler rev. 1.4.1031 -- ProxySQL_HTTP_Server.cpp -- Fri Dec  1 02:27:57 2017
2017-12-01 03:38:35 ProxySQL_Admin.cpp:7726:disk_upgrade_mysql_servers(): [WARNING] Detected version v1.3.0 of table mysql_servers
2017-12-01 03:38:35 ProxySQL_Admin.cpp:7727:disk_upgrade_mysql_servers(): [WARNING] ONLINE UPGRADE of table mysql_servers in progress
Standard ProxySQL Admin rev. 0.2.0902 -- ProxySQL_Admin.cpp -- Fri Dec  1 03:37:21 2017
Standard MySQL Threads Handler rev. 0.2.0902 -- MySQL_Thread.cpp -- Thu Nov 30 23:48:56 2017
...

Verified data integrity and new table structure:
mysql> show create table mysql_servers\G
*************************** 1. row ***************************
       table: mysql_servers
Create Table: CREATE TABLE mysql_servers (
    hostgroup_id INT CHECK (hostgroup_id>=0) NOT NULL DEFAULT 0,
    hostname VARCHAR NOT NULL,
    port INT NOT NULL DEFAULT 3306,
    status VARCHAR CHECK (UPPER(status) IN ('ONLINE','SHUNNED','OFFLINE_SOFT', 'OFFLINE_HARD')) NOT NULL DEFAULT 'ONLINE',
    weight INT CHECK (weight >= 0) NOT NULL DEFAULT 1,
    compression INT CHECK (compression >=0 AND compression <= 102400) NOT NULL DEFAULT 0,
    max_connections INT CHECK (max_connections >=0) NOT NULL DEFAULT 1000,
    max_replication_lag INT CHECK (max_replication_lag >= 0 AND max_replication_lag <= 126144000) NOT NULL DEFAULT 0,
    use_ssl INT CHECK (use_ssl IN(0,1)) NOT NULL DEFAULT 0,
    max_latency_ms INT UNSIGNED CHECK (max_latency_ms>=0) NOT NULL DEFAULT 0,
    comment VARCHAR NOT NULL DEFAULT '',
    PRIMARY KEY (hostgroup_id, hostname, port) )
1 row in set (0.00 sec)

mysql> select * from mysql_servers;
+--------------+-----------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| hostgroup_id | hostname  | port | status | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |
+--------------+-----------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| 10           | 127.0.0.1 | 3306 | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
+--------------+-----------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
1 row in set (0.00 sec)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1287,2017-12-14T17:38:26Z,2017-12-16T11:46:29Z,2019-10-29T00:03:09Z,MERGED,True,1,1,1,https://github.com/pondix,Fix validation on query_processor_regex,1,[],https://github.com/sysown/proxysql/pull/1287,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/1287,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1289,2017-12-15T14:17:39Z,2017-12-16T11:50:55Z,2017-12-16T11:50:55Z,MERGED,True,51,113,2,https://github.com/pondix,Layout changes and HTML fix,1,[],https://github.com/sysown/proxysql/pull/1289,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/1289,Fixes a crash due to a missing metric and provides several UI layout improvements,Fixes a crash due to a missing metric and provides several UI layout improvements,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1290,2017-12-18T12:18:34Z,2017-12-19T20:09:18Z,2017-12-19T20:09:31Z,MERGED,True,16,7,1,https://github.com/pondix,Disable multiplexing for specific vars,6,[],https://github.com/sysown/proxysql/pull/1290,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/1290,Added a list of session variables for which to disable multiplexing,Added a list of session variables for which to disable multiplexing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1290,2017-12-18T12:18:34Z,2017-12-19T20:09:18Z,2017-12-19T20:09:31Z,MERGED,True,16,7,1,https://github.com/pondix,Disable multiplexing for specific vars,6,[],https://github.com/sysown/proxysql/pull/1290,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1290#issuecomment-352872305,Added a list of session variables for which to disable multiplexing,Thanks,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1291,2017-12-19T07:29:30Z,2017-12-19T07:31:12Z,2017-12-19T07:34:51Z,MERGED,True,11,10,2,https://github.com/everpcpc,Typo fixes,2,[],https://github.com/sysown/proxysql/pull/1291,https://github.com/everpcpc,1,https://github.com/sysown/proxysql/pull/1291,little fixes for typo,little fixes for typo,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1291,2017-12-19T07:29:30Z,2017-12-19T07:31:12Z,2017-12-19T07:34:51Z,MERGED,True,11,10,2,https://github.com/everpcpc,Typo fixes,2,[],https://github.com/sysown/proxysql/pull/1291,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1291#issuecomment-352662184,little fixes for typo,Thank you @everpcpc,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1292,2017-12-20T07:41:22Z,2017-12-20T08:48:44Z,2017-12-20T09:26:42Z,MERGED,True,1,1,1,https://github.com/everpcpc,build curl without nghttp2 and libidn2,1,[],https://github.com/sysown/proxysql/pull/1292,https://github.com/everpcpc,1,https://github.com/sysown/proxysql/pull/1292,avoid undefined reference error while building curl,avoid undefined reference error while building curl,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1292,2017-12-20T07:41:22Z,2017-12-20T08:48:44Z,2017-12-20T09:26:42Z,MERGED,True,1,1,1,https://github.com/everpcpc,build curl without nghttp2 and libidn2,1,[],https://github.com/sysown/proxysql/pull/1292,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1292#issuecomment-352997106,avoid undefined reference error while building curl,"On what Linux distro are you compiling?
I didn't got any error on Fedora, CentOS 5/6/7, Debian 7/8/9, and Ubuntu 12/14/16",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1292,2017-12-20T07:41:22Z,2017-12-20T08:48:44Z,2017-12-20T09:26:42Z,MERGED,True,1,1,1,https://github.com/everpcpc,build curl without nghttp2 and libidn2,1,[],https://github.com/sysown/proxysql/pull/1292,https://github.com/everpcpc,3,https://github.com/sysown/proxysql/pull/1292#issuecomment-353009668,avoid undefined reference error while building curl,"Oh, I was compiling on Gentoo with latest stable net-libs/nghttp2-1.19.0 & net-dns/libidn2-2.0.4 installed which seems not working.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1292,2017-12-20T07:41:22Z,2017-12-20T08:48:44Z,2017-12-20T09:26:42Z,MERGED,True,1,1,1,https://github.com/everpcpc,build curl without nghttp2 and libidn2,1,[],https://github.com/sysown/proxysql/pull/1292,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/1292#issuecomment-353010616,avoid undefined reference error while building curl,"ah! Thank you for letting me know. Indeed nghttp2 and libidn2 are not needed, so no need to be enabled.
Thanks again",True,{'LAUGH': ['https://github.com/everpcpc']}
sysown/proxysql,https://github.com/sysown/proxysql,1295,2017-12-21T00:48:16Z,2018-06-11T14:17:48Z,2018-06-11T14:17:48Z,CLOSED,False,1,0,1,https://github.com/xginn8,adding error message for inaccessible sqlite,1,[],https://github.com/sysown/proxysql/pull/1295,https://github.com/xginn8,1,https://github.com/sysown/proxysql/pull/1295,fixes #721,fixes #721,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1295,2017-12-21T00:48:16Z,2018-06-11T14:17:48Z,2018-06-11T14:17:48Z,CLOSED,False,1,0,1,https://github.com/xginn8,adding error message for inaccessible sqlite,1,[],https://github.com/sysown/proxysql/pull/1295,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1295#issuecomment-353226270,fixes #721,"Hi @xginn8 . Thank you for the PR.
I think I will make a small change, like adding the error reported by sqlite3_errmsg(db).
Thanks",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1295,2017-12-21T00:48:16Z,2018-06-11T14:17:48Z,2018-06-11T14:17:48Z,CLOSED,False,1,0,1,https://github.com/xginn8,adding error message for inaccessible sqlite,1,[],https://github.com/sysown/proxysql/pull/1295,https://github.com/xginn8,3,https://github.com/sysown/proxysql/pull/1295#issuecomment-353226549,fixes #721,"ah, even better. thanks!",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1295,2017-12-21T00:48:16Z,2018-06-11T14:17:48Z,2018-06-11T14:17:48Z,CLOSED,False,1,0,1,https://github.com/xginn8,adding error message for inaccessible sqlite,1,[],https://github.com/sysown/proxysql/pull/1295,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/1295#issuecomment-396259546,fixes #721,"Closing PR due to fixes in #1431
Thank you",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1336,2018-01-15T19:19:32Z,2018-01-16T17:32:58Z,2018-01-16T17:32:58Z,MERGED,True,1,1,1,https://github.com/pondix,Updated 'hits' to uint64 to prevent overflow,1,[],https://github.com/sysown/proxysql/pull/1336,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/1336,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1343,2018-01-19T18:02:40Z,2018-06-20T14:00:59Z,2021-06-21T20:08:24Z,CLOSED,False,45,22,3,https://github.com/csoulios,Added MaxConnUsed column to the stats.stats_mysql_connection_pool,2,[],https://github.com/sysown/proxysql/pull/1343,https://github.com/csoulios,1,https://github.com/sysown/proxysql/pull/1343,"Added MaxConnUsed column to the stats.stats_mysql_connection_pool.
Fixes #1207","Added MaxConnUsed column to the stats.stats_mysql_connection_pool.
Fixes #1207",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1343,2018-01-19T18:02:40Z,2018-06-20T14:00:59Z,2021-06-21T20:08:24Z,CLOSED,False,45,22,3,https://github.com/csoulios,Added MaxConnUsed column to the stats.stats_mysql_connection_pool,2,[],https://github.com/sysown/proxysql/pull/1343,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1343#issuecomment-360524245,"Added MaxConnUsed column to the stats.stats_mysql_connection_pool.
Fixes #1207","@csoulios : thank you very much for the pull request: it looks good to me!
I am putting this on hold, because it may make more sense to merge it into 2.0 .
Thanks",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1343,2018-01-19T18:02:40Z,2018-06-20T14:00:59Z,2021-06-21T20:08:24Z,CLOSED,False,45,22,3,https://github.com/csoulios,Added MaxConnUsed column to the stats.stats_mysql_connection_pool,2,[],https://github.com/sysown/proxysql/pull/1343,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/1343#issuecomment-398748832,"Added MaxConnUsed column to the stats.stats_mysql_connection_pool.
Fixes #1207",Can one of the admins verify this patch?,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1343,2018-01-19T18:02:40Z,2018-06-20T14:00:59Z,2021-06-21T20:08:24Z,CLOSED,False,45,22,3,https://github.com/csoulios,Added MaxConnUsed column to the stats.stats_mysql_connection_pool,2,[],https://github.com/sysown/proxysql/pull/1343,https://github.com/csoulios,4,https://github.com/sysown/proxysql/pull/1343#issuecomment-398751053,"Added MaxConnUsed column to the stats.stats_mysql_connection_pool.
Fixes #1207","@pondix If I remember correctly, this has been manually merged by @renecannao , so I think it's safe to close this PR.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1343,2018-01-19T18:02:40Z,2018-06-20T14:00:59Z,2021-06-21T20:08:24Z,CLOSED,False,45,22,3,https://github.com/csoulios,Added MaxConnUsed column to the stats.stats_mysql_connection_pool,2,[],https://github.com/sysown/proxysql/pull/1343,https://github.com/pondix,5,https://github.com/sysown/proxysql/pull/1343#issuecomment-398760162,"Added MaxConnUsed column to the stats.stats_mysql_connection_pool.
Fixes #1207","Thanks @csoulios - this was an automated message from Jenkins, I'll go ahead and close the pull request since its been merged already.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1345,2018-01-22T14:58:11Z,2018-02-01T01:48:41Z,2018-02-01T01:48:49Z,MERGED,True,1,1,1,https://github.com/AshwiniAhire,Fix for bug 1342,1,[],https://github.com/sysown/proxysql/pull/1345,https://github.com/AshwiniAhire,1,https://github.com/sysown/proxysql/pull/1345,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1345,2018-01-22T14:58:11Z,2018-02-01T01:48:41Z,2018-02-01T01:48:49Z,MERGED,True,1,1,1,https://github.com/AshwiniAhire,Fix for bug 1342,1,[],https://github.com/sysown/proxysql/pull/1345,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1345#issuecomment-362131743,,Merged into 1.4.6 . Thanks!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1349,2018-01-25T13:41:49Z,2018-02-01T01:40:47Z,2018-02-12T13:57:19Z,MERGED,True,92,41,6,https://github.com/pondix,Removing SQLLite lock assertion,1,[],https://github.com/sysown/proxysql/pull/1349,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/1349,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1349,2018-01-25T13:41:49Z,2018-02-01T01:40:47Z,2018-02-12T13:57:19Z,MERGED,True,92,41,6,https://github.com/pondix,Removing SQLLite lock assertion,1,[],https://github.com/sysown/proxysql/pull/1349,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1349#issuecomment-362130406,,Thanks. Merged in 1.4.6,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1369,2018-02-07T21:16:22Z,2018-08-04T12:39:38Z,2018-08-04T12:39:43Z,MERGED,True,1,1,1,https://github.com/saidramirez,improved pgrep usage,1,[],https://github.com/sysown/proxysql/pull/1369,https://github.com/saidramirez,1,https://github.com/sysown/proxysql/pull/1369,"When the init.d script searches for process to kill using pgrep, it can incorrectly also choose other processes which have proxysql in their name. For example, if I run a test script in one terminal
$ cat proxysql_do 
#!/bin/bash
echo ""my pid is $$""
sleep 120;

pgrep proxysql will return the pid of proxysql_do and also all other proxysql processes running on the host:
$ ./proxysql_do 
my pid is 15998

while in another terminal:
$ pgrep proxysql
6565
6566
15998
$ pgrep  -x proxysql
6565
6566","When the init.d script searches for process to kill using pgrep, it can incorrectly also choose other processes which have proxysql in their name. For example, if I run a test script in one terminal
$ cat proxysql_do 
#!/bin/bash
echo ""my pid is $$""
sleep 120;

pgrep proxysql will return the pid of proxysql_do and also all other proxysql processes running on the host:
$ ./proxysql_do 
my pid is 15998

while in another terminal:
$ pgrep proxysql
6565
6566
15998
$ pgrep  -x proxysql
6565
6566",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1369,2018-02-07T21:16:22Z,2018-08-04T12:39:38Z,2018-08-04T12:39:43Z,MERGED,True,1,1,1,https://github.com/saidramirez,improved pgrep usage,1,[],https://github.com/sysown/proxysql/pull/1369,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1369#issuecomment-410446719,"When the init.d script searches for process to kill using pgrep, it can incorrectly also choose other processes which have proxysql in their name. For example, if I run a test script in one terminal
$ cat proxysql_do 
#!/bin/bash
echo ""my pid is $$""
sleep 120;

pgrep proxysql will return the pid of proxysql_do and also all other proxysql processes running on the host:
$ ./proxysql_do 
my pid is 15998

while in another terminal:
$ pgrep proxysql
6565
6566
15998
$ pgrep  -x proxysql
6565
6566",Thanks,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1372,2018-02-08T21:01:50Z,,2022-03-10T21:50:56Z,OPEN,False,12,2,1,https://github.com/pondix,Update compile_examples.txt for BSD,1,[],https://github.com/sysown/proxysql/pull/1372,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/1372,Adding clearer instructions for building on a default install of FreeBSD 11.1,Adding clearer instructions for building on a default install of FreeBSD 11.1,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1372,2018-02-08T21:01:50Z,,2022-03-10T21:50:56Z,OPEN,False,12,2,1,https://github.com/pondix,Update compile_examples.txt for BSD,1,[],https://github.com/sysown/proxysql/pull/1372,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1372#issuecomment-473520909,Adding clearer instructions for building on a default install of FreeBSD 11.1,@pondix : can this be rebased please?,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1372,2018-02-08T21:01:50Z,,2022-03-10T21:50:56Z,OPEN,False,12,2,1,https://github.com/pondix,Update compile_examples.txt for BSD,1,[],https://github.com/sysown/proxysql/pull/1372,https://github.com/alpes214,3,https://github.com/sysown/proxysql/pull/1372#issuecomment-556385974,Adding clearer instructions for building on a default install of FreeBSD 11.1,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1372,2018-02-08T21:01:50Z,,2022-03-10T21:50:56Z,OPEN,False,12,2,1,https://github.com/pondix,Update compile_examples.txt for BSD,1,[],https://github.com/sysown/proxysql/pull/1372,https://github.com/pondix,4,https://github.com/sysown/proxysql/pull/1372#issuecomment-1064537556,Adding clearer instructions for building on a default install of FreeBSD 11.1,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1404,2018-03-02T18:31:01Z,2018-03-06T14:36:12Z,2018-03-06T14:36:12Z,CLOSED,False,378,66,28,https://github.com/pondix,V2.0 lab merge of 1.4.x commits after fork,57,[],https://github.com/sysown/proxysql/pull/1404,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/1404,This PR contains the set of commits which occurred after the initial 2.0-lab fork (for discussion / review purposes),This PR contains the set of commits which occurred after the initial 2.0-lab fork (for discussion / review purposes),True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1404,2018-03-02T18:31:01Z,2018-03-06T14:36:12Z,2018-03-06T14:36:12Z,CLOSED,False,378,66,28,https://github.com/pondix,V2.0 lab merge of 1.4.x commits after fork,57,[],https://github.com/sysown/proxysql/pull/1404,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1404#issuecomment-370800911,This PR contains the set of commits which occurred after the initial 2.0-lab fork (for discussion / review purposes),As per discussion closing to cleanup and cherry pick directly from 1.4.7,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1409,2018-03-07T21:28:29Z,2018-03-13T12:30:14Z,2018-03-13T12:30:14Z,MERGED,True,509,264,34,https://github.com/pondix,Merging pre-V2.0 lab commits since fork,77,[],https://github.com/sysown/proxysql/pull/1409,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/1409,This PR includes all commits made after the initial fork branch as well as some code cleanup and conflict resolution changes.,This PR includes all commits made after the initial fork branch as well as some code cleanup and conflict resolution changes.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1433,2018-03-26T14:09:52Z,2018-03-26T14:21:42Z,2018-03-26T14:28:24Z,MERGED,True,2,1,1,https://github.com/pondix,Increasing RW Lock in PROCESSING_STMT_PREPARE,1,[],https://github.com/sysown/proxysql/pull/1433,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/1433,Potentially affecting #1430,Potentially affecting #1430,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1434,2018-03-26T14:28:59Z,2018-03-26T14:29:23Z,2018-03-26T15:17:20Z,MERGED,True,2,1,1,https://github.com/pondix,Increasing RW Lock in PROCESSING_STMT_PREPARE,1,[],https://github.com/sysown/proxysql/pull/1434,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/1434,Same as #1433 - applying to branch 2.0-lab manually,Same as #1433 - applying to branch 2.0-lab manually,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1447,2018-04-02T17:05:41Z,2018-04-03T11:49:44Z,2018-04-03T11:49:44Z,MERGED,True,42,24,1,https://github.com/pondix,This patch handles any type of quoting on MySQL variables,1,[],https://github.com/sysown/proxysql/pull/1447,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/1447,Bug fix for #1429,Bug fix for #1429,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1448,2018-04-02T17:07:39Z,2018-04-02T17:25:00Z,2018-04-02T17:25:14Z,MERGED,True,1,1,1,https://github.com/dveeden,Disable libssh2 support in curl to fix building on Fedora 27,1,[],https://github.com/sysown/proxysql/pull/1448,https://github.com/dveeden,1,https://github.com/sysown/proxysql/pull/1448,"Without this building failed with undefined references to libssh2:
g++ -o proxysql obj/main.o obj/proxysql_global.o ../lib/libproxysql.a -std=c++11 -I../include -I../deps/jemalloc/jemalloc/include/jemalloc -I../deps/mariadb-client-library/mariadb_client/include -I../deps/libconfig/libconfig-1.4.9/lib -I../deps/libdaemon/libdaemon -I../deps/sqlite3/sqlite3 -I../deps/clickhouse-cpp/clickhouse-cpp -I../deps/libmicrohttpd/libmicrohttpd/src/include -I../deps/curl/curl//include -O2 -ggdb    -L../lib -L../deps/jemalloc/jemalloc/lib -L../deps/libconfig/libconfig-1.4.9/lib/.libs -L../deps/re2/re2/obj -L../deps/mariadb-client-library/mariadb_client/libmariadb -L../deps/libdaemon/libdaemon/libdaemon/.libs -L../deps/pcre/pcre/.libs -L../deps/libmicrohttpd/libmicrohttpd/src/microhttpd/.libs -L../deps/curl/curl//lib/.libs   -Wl,--export-dynamic -Wl,-Bstatic -lconfig -lproxysql -ldaemon -ljemalloc -lconfig++ -lre2 -lpcrecpp -lpcre -lmariadbclient -lmicrohttpd -lcurl -Wl,-Bdynamic -lpthread -lm -lz -lrt -lcrypto -lssl  -ldl
../deps/curl/curl//lib/.libs/libcurl.a(libcurl_la-easy.o): In function `global_init':
easy.c:(.text+0x7d): undefined reference to `libssh2_init'
../deps/curl/curl//lib/.libs/libcurl.a(libcurl_la-easy.o): In function `curl_global_cleanup':
easy.c:(.text+0x2c8): undefined reference to `libssh2_exit'

I don't think libssh2 support is needed and this fixes the build.
The other option would be to add -lssh2.","Without this building failed with undefined references to libssh2:
g++ -o proxysql obj/main.o obj/proxysql_global.o ../lib/libproxysql.a -std=c++11 -I../include -I../deps/jemalloc/jemalloc/include/jemalloc -I../deps/mariadb-client-library/mariadb_client/include -I../deps/libconfig/libconfig-1.4.9/lib -I../deps/libdaemon/libdaemon -I../deps/sqlite3/sqlite3 -I../deps/clickhouse-cpp/clickhouse-cpp -I../deps/libmicrohttpd/libmicrohttpd/src/include -I../deps/curl/curl//include -O2 -ggdb    -L../lib -L../deps/jemalloc/jemalloc/lib -L../deps/libconfig/libconfig-1.4.9/lib/.libs -L../deps/re2/re2/obj -L../deps/mariadb-client-library/mariadb_client/libmariadb -L../deps/libdaemon/libdaemon/libdaemon/.libs -L../deps/pcre/pcre/.libs -L../deps/libmicrohttpd/libmicrohttpd/src/microhttpd/.libs -L../deps/curl/curl//lib/.libs   -Wl,--export-dynamic -Wl,-Bstatic -lconfig -lproxysql -ldaemon -ljemalloc -lconfig++ -lre2 -lpcrecpp -lpcre -lmariadbclient -lmicrohttpd -lcurl -Wl,-Bdynamic -lpthread -lm -lz -lrt -lcrypto -lssl  -ldl
../deps/curl/curl//lib/.libs/libcurl.a(libcurl_la-easy.o): In function `global_init':
easy.c:(.text+0x7d): undefined reference to `libssh2_init'
../deps/curl/curl//lib/.libs/libcurl.a(libcurl_la-easy.o): In function `curl_global_cleanup':
easy.c:(.text+0x2c8): undefined reference to `libssh2_exit'

I don't think libssh2 support is needed and this fixes the build.
The other option would be to add -lssh2.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1448,2018-04-02T17:07:39Z,2018-04-02T17:25:00Z,2018-04-02T17:25:14Z,MERGED,True,1,1,1,https://github.com/dveeden,Disable libssh2 support in curl to fix building on Fedora 27,1,[],https://github.com/sysown/proxysql/pull/1448,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1448#issuecomment-377985183,"Without this building failed with undefined references to libssh2:
g++ -o proxysql obj/main.o obj/proxysql_global.o ../lib/libproxysql.a -std=c++11 -I../include -I../deps/jemalloc/jemalloc/include/jemalloc -I../deps/mariadb-client-library/mariadb_client/include -I../deps/libconfig/libconfig-1.4.9/lib -I../deps/libdaemon/libdaemon -I../deps/sqlite3/sqlite3 -I../deps/clickhouse-cpp/clickhouse-cpp -I../deps/libmicrohttpd/libmicrohttpd/src/include -I../deps/curl/curl//include -O2 -ggdb    -L../lib -L../deps/jemalloc/jemalloc/lib -L../deps/libconfig/libconfig-1.4.9/lib/.libs -L../deps/re2/re2/obj -L../deps/mariadb-client-library/mariadb_client/libmariadb -L../deps/libdaemon/libdaemon/libdaemon/.libs -L../deps/pcre/pcre/.libs -L../deps/libmicrohttpd/libmicrohttpd/src/microhttpd/.libs -L../deps/curl/curl//lib/.libs   -Wl,--export-dynamic -Wl,-Bstatic -lconfig -lproxysql -ldaemon -ljemalloc -lconfig++ -lre2 -lpcrecpp -lpcre -lmariadbclient -lmicrohttpd -lcurl -Wl,-Bdynamic -lpthread -lm -lz -lrt -lcrypto -lssl  -ldl
../deps/curl/curl//lib/.libs/libcurl.a(libcurl_la-easy.o): In function `global_init':
easy.c:(.text+0x7d): undefined reference to `libssh2_init'
../deps/curl/curl//lib/.libs/libcurl.a(libcurl_la-easy.o): In function `curl_global_cleanup':
easy.c:(.text+0x2c8): undefined reference to `libssh2_exit'

I don't think libssh2 support is needed and this fixes the build.
The other option would be to add -lssh2.",Thanks,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1449,2018-04-02T19:39:26Z,,2019-11-20T15:54:55Z,OPEN,False,1,0,1,https://github.com/mhess-connectify,Added pkg-config to make docker build work,3,[],https://github.com/sysown/proxysql/pull/1449,https://github.com/mhess-connectify,1,https://github.com/sysown/proxysql/pull/1449,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1449,2018-04-02T19:39:26Z,,2019-11-20T15:54:55Z,OPEN,False,1,0,1,https://github.com/mhess-connectify,Added pkg-config to make docker build work,3,[],https://github.com/sysown/proxysql/pull/1449,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1449#issuecomment-378642625,,"Hi @mhess-connectify . Thank you for your pull request.
A lot of files in docker/ directory aren't in use for very long time, and recently we were discussing about removing them.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1449,2018-04-02T19:39:26Z,,2019-11-20T15:54:55Z,OPEN,False,1,0,1,https://github.com/mhess-connectify,Added pkg-config to make docker build work,3,[],https://github.com/sysown/proxysql/pull/1449,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/1449#issuecomment-556069844,,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1450,2018-04-03T18:43:01Z,2018-08-02T16:23:53Z,2018-08-02T16:23:53Z,CLOSED,False,23,4,1,https://github.com/y-trudeau,Network for client addr,3,[],https://github.com/sysown/proxysql/pull/1450,https://github.com/y-trudeau,1,https://github.com/sysown/proxysql/pull/1450,"A simple patch to support networks like in mysql.user.host in client_addr.  With this patch, a query rule can be defined with a client_addr formatted like '10.0.%' which will match all the IPs starting with '10.0.'.  The patch compiles fine and does the intended job but since I am not a professional developer, I am not sure everything is thread safe.","A simple patch to support networks like in mysql.user.host in client_addr.  With this patch, a query rule can be defined with a client_addr formatted like '10.0.%' which will match all the IPs starting with '10.0.'.  The patch compiles fine and does the intended job but since I am not a professional developer, I am not sure everything is thread safe.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1450,2018-04-03T18:43:01Z,2018-08-02T16:23:53Z,2018-08-02T16:23:53Z,CLOSED,False,23,4,1,https://github.com/y-trudeau,Network for client addr,3,[],https://github.com/sysown/proxysql/pull/1450,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1450#issuecomment-378628212,"A simple patch to support networks like in mysql.user.host in client_addr.  With this patch, a query rule can be defined with a client_addr formatted like '10.0.%' which will match all the IPs starting with '10.0.'.  The patch compiles fine and does the intended job but since I am not a professional developer, I am not sure everything is thread safe.","Hi Yves,
thank you for the PR!
The if statements assumes that clients use only IPv4 , while also IPv6 is supported.
I think should become:
if (strlen(qr->client_addr) >= INET6_ADDRSTRLEN) {
	proxy_error(""query rule %d has an invalid client_addr\n"", qr->rule_id);
	continue;
}
char net[INET6_ADDRSTRLEN];

What do you think?
Other than that, everything else makes sense to me.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1450,2018-04-03T18:43:01Z,2018-08-02T16:23:53Z,2018-08-02T16:23:53Z,CLOSED,False,23,4,1,https://github.com/y-trudeau,Network for client addr,3,[],https://github.com/sysown/proxysql/pull/1450,https://github.com/y-trudeau,3,https://github.com/sysown/proxysql/pull/1450#issuecomment-378633707,"A simple patch to support networks like in mysql.user.host in client_addr.  With this patch, a query rule can be defined with a client_addr formatted like '10.0.%' which will match all the IPs starting with '10.0.'.  The patch compiles fine and does the intended job but since I am not a professional developer, I am not sure everything is thread safe.","Hi Ren√©, looks good to me, I forgot about ipv6.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1450,2018-04-03T18:43:01Z,2018-08-02T16:23:53Z,2018-08-02T16:23:53Z,CLOSED,False,23,4,1,https://github.com/y-trudeau,Network for client addr,3,[],https://github.com/sysown/proxysql/pull/1450,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/1450#issuecomment-378641181,"A simple patch to support networks like in mysql.user.host in client_addr.  With this patch, a query rule can be defined with a client_addr formatted like '10.0.%' which will match all the IPs starting with '10.0.'.  The patch compiles fine and does the intended job but since I am not a professional developer, I am not sure everything is thread safe.","Some extra thoughts on this, performance optimizations:
a) input validation ( if (strlen(qr->client_addr) > ) should be done only once, when the rule is loaded
b) QP_rule_t should remember if there is a wildcard in client_addr and its position if present, so to avoid strchr and few strlen, and start strncmp as soon as possible.
I will use this PR as a baseline for a new commit.
Thank you!",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1450,2018-04-03T18:43:01Z,2018-08-02T16:23:53Z,2018-08-02T16:23:53Z,CLOSED,False,23,4,1,https://github.com/y-trudeau,Network for client addr,3,[],https://github.com/sysown/proxysql/pull/1450,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/1450#issuecomment-379157452,"A simple patch to support networks like in mysql.user.host in client_addr.  With this patch, a query rule can be defined with a client_addr formatted like '10.0.%' which will match all the IPs starting with '10.0.'.  The patch compiles fine and does the intended job but since I am not a professional developer, I am not sure everything is thread safe.","New check implemented in d1a14e6
Input validation:

client_addr not longer than INET6_ADDRSTRLEN
% allowed only at the end of client_addr

Query rule itself remembers if there is a wildcard or not.
If there is a wildcard compares string till the wildcard.
If client_addr=='%' , it is a match all.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1456,2018-04-04T14:23:03Z,2018-04-04T15:27:04Z,2018-04-04T15:27:05Z,MERGED,True,4,1,1,https://github.com/pondix,Adding support for utf8mb4_unicode_520_ci,1,[],https://github.com/sysown/proxysql/pull/1456,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/1456,MariaDB library patch update to address #1453,MariaDB library patch update to address #1453,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1457,2018-04-04T15:45:05Z,2018-04-04T15:45:41Z,2018-04-04T15:45:50Z,MERGED,True,3,2,1,https://github.com/pondix,Fix to return OK packet for SET WAIT_TIMEOUT in ClickHouse,1,[],https://github.com/sysown/proxysql/pull/1457,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/1457,Addresses #1445,Addresses #1445,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1464,2018-04-11T15:26:35Z,2018-04-25T10:37:17Z,2018-04-25T10:37:17Z,MERGED,True,137,11,10,https://github.com/pondix,Applying 1.4.8 fixes to 2.0-lab,9,[],https://github.com/sysown/proxysql/pull/1464,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/1464,"This pull request contains fixes from v1.4.8 not yet added to 2.0-lab branch
Monitor: do not consider unhealthy ProxySQL's as backends if monitor - a3ffb6a
Missing flag SERVER_STATUS_NO_BACKSLASH_ESCAPES for SQLite3 backends # - d941a1b
Remember if the current connection has an unknown transaction status - 94ad7b7
Remember if the current connection has an unknown transaction status - 18109c6
Disable libssh2 support in curl to fix building on Fedora 27 - 3b74e1c
Fix to return OK packet for SET WAIT_TIMEOUT - 2cb7088
Add support for wildcard in mysql_query_rules.client_addr #1450 - d1a14e6
Disable brotli from curl #1458 - 669c149","This pull request contains fixes from v1.4.8 not yet added to 2.0-lab branch
Monitor: do not consider unhealthy ProxySQL's as backends if monitor - a3ffb6a
Missing flag SERVER_STATUS_NO_BACKSLASH_ESCAPES for SQLite3 backends # - d941a1b
Remember if the current connection has an unknown transaction status - 94ad7b7
Remember if the current connection has an unknown transaction status - 18109c6
Disable libssh2 support in curl to fix building on Fedora 27 - 3b74e1c
Fix to return OK packet for SET WAIT_TIMEOUT - 2cb7088
Add support for wildcard in mysql_query_rules.client_addr #1450 - d1a14e6
Disable brotli from curl #1458 - 669c149",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1468,2018-04-12T14:49:24Z,2019-03-16T11:06:52Z,2019-03-16T11:06:52Z,CLOSED,False,9,0,2,https://github.com/dveeden,Allow TLSv1.1 and TLSv1.2 backend connections with OpenSSL 1.0.x,1,[],https://github.com/sysown/proxysql/pull/1468,https://github.com/dveeden,1,https://github.com/sysown/proxysql/pull/1468,"Use SSLv23_client_method() instead TLSv1_client_method().
Then restrict to TLSv1.0 and newer by setting SSL_OP_NO_SSLv2 and SSL_OP_NO_SSLv3.
The long term fix is to upgrade to MariaDB Connector/C 3.x or newer.
This is for building and deploying on CentOS 7.","Use SSLv23_client_method() instead TLSv1_client_method().
Then restrict to TLSv1.0 and newer by setting SSL_OP_NO_SSLv2 and SSL_OP_NO_SSLv3.
The long term fix is to upgrade to MariaDB Connector/C 3.x or newer.
This is for building and deploying on CentOS 7.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1468,2018-04-12T14:49:24Z,2019-03-16T11:06:52Z,2019-03-16T11:06:52Z,CLOSED,False,9,0,2,https://github.com/dveeden,Allow TLSv1.1 and TLSv1.2 backend connections with OpenSSL 1.0.x,1,[],https://github.com/sysown/proxysql/pull/1468,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1468#issuecomment-381126182,"Use SSLv23_client_method() instead TLSv1_client_method().
Then restrict to TLSv1.0 and newer by setting SSL_OP_NO_SSLv2 and SSL_OP_NO_SSLv3.
The long term fix is to upgrade to MariaDB Connector/C 3.x or newer.
This is for building and deploying on CentOS 7.","Thank you @dveeden .
We need to verify it this will work on old systems still supported (CentOS 5, Debian 7, Ubuntu 12, etc).
Related: why not trying ProxySQL 2.0 ? It has better support for SSL.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1468,2018-04-12T14:49:24Z,2019-03-16T11:06:52Z,2019-03-16T11:06:52Z,CLOSED,False,9,0,2,https://github.com/dveeden,Allow TLSv1.1 and TLSv1.2 backend connections with OpenSSL 1.0.x,1,[],https://github.com/sysown/proxysql/pull/1468,https://github.com/dveeden,3,https://github.com/sysown/proxysql/pull/1468#issuecomment-381518941,"Use SSLv23_client_method() instead TLSv1_client_method().
Then restrict to TLSv1.0 and newer by setting SSL_OP_NO_SSLv2 and SSL_OP_NO_SSLv3.
The long term fix is to upgrade to MariaDB Connector/C 3.x or newer.
This is for building and deploying on CentOS 7.",This change should be fine on all old platforms. SSLv23_client_method() has been around for ages.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1468,2018-04-12T14:49:24Z,2019-03-16T11:06:52Z,2019-03-16T11:06:52Z,CLOSED,False,9,0,2,https://github.com/dveeden,Allow TLSv1.1 and TLSv1.2 backend connections with OpenSSL 1.0.x,1,[],https://github.com/sysown/proxysql/pull/1468,https://github.com/dveeden,4,https://github.com/sysown/proxysql/pull/1468#issuecomment-381519506,"Use SSLv23_client_method() instead TLSv1_client_method().
Then restrict to TLSv1.0 and newer by setting SSL_OP_NO_SSLv2 and SSL_OP_NO_SSLv3.
The long term fix is to upgrade to MariaDB Connector/C 3.x or newer.
This is for building and deploying on CentOS 7.",I'm not (yet) using ProxySQL 2.0 as I thought it wasn't stable / released yet.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1468,2018-04-12T14:49:24Z,2019-03-16T11:06:52Z,2019-03-16T11:06:52Z,CLOSED,False,9,0,2,https://github.com/dveeden,Allow TLSv1.1 and TLSv1.2 backend connections with OpenSSL 1.0.x,1,[],https://github.com/sysown/proxysql/pull/1468,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/1468#issuecomment-473520872,"Use SSLv23_client_method() instead TLSv1_client_method().
Then restrict to TLSv1.0 and newer by setting SSL_OP_NO_SSLv2 and SSL_OP_NO_SSLv3.
The long term fix is to upgrade to MariaDB Connector/C 3.x or newer.
This is for building and deploying on CentOS 7.","@dveeden : as 2.0 is out, I am closing this PR.
Thanks!",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1475,2018-04-19T11:56:12Z,2018-04-25T10:38:10Z,2018-04-25T10:38:18Z,MERGED,True,2,2,1,https://github.com/cjwright83,amend to allow compilation to work on Darwin,1,[],https://github.com/sysown/proxysql/pull/1475,https://github.com/cjwright83,1,https://github.com/sysown/proxysql/pull/1475,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1475,2018-04-19T11:56:12Z,2018-04-25T10:38:10Z,2018-04-25T10:38:18Z,MERGED,True,2,2,1,https://github.com/cjwright83,amend to allow compilation to work on Darwin,1,[],https://github.com/sysown/proxysql/pull/1475,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1475#issuecomment-384242688,,Thank you!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1477,2018-04-24T13:51:40Z,2018-04-25T10:39:14Z,2018-04-25T10:39:50Z,MERGED,True,48,0,2,https://github.com/aminet,support load mysql_group_replication_hostgroups from the config file,1,[],https://github.com/sysown/proxysql/pull/1477,https://github.com/aminet,1,https://github.com/sysown/proxysql/pull/1477,"see #1050
(sample config file updated to reflect the new possibility)","see #1050
(sample config file updated to reflect the new possibility)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1477,2018-04-24T13:51:40Z,2018-04-25T10:39:14Z,2018-04-25T10:39:50Z,MERGED,True,48,0,2,https://github.com/aminet,support load mysql_group_replication_hostgroups from the config file,1,[],https://github.com/sysown/proxysql/pull/1477,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1477#issuecomment-384243038,"see #1050
(sample config file updated to reflect the new possibility)",Thank you!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1479,2018-04-24T23:13:24Z,2018-04-25T10:37:47Z,2018-04-25T10:37:53Z,MERGED,True,23,1,4,https://github.com/stantona,Add variable client_multi_statements to address #1074,1,[],https://github.com/sysown/proxysql/pull/1479,https://github.com/stantona,1,https://github.com/sysown/proxysql/pull/1479,"See comments in Github issue. Once applied, this change
allows the user to toggle the 'client_multi_statements'
flag as a global variable.","See comments in Github issue. Once applied, this change
allows the user to toggle the 'client_multi_statements'
flag as a global variable.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1479,2018-04-24T23:13:24Z,2018-04-25T10:37:47Z,2018-04-25T10:37:53Z,MERGED,True,23,1,4,https://github.com/stantona,Add variable client_multi_statements to address #1074,1,[],https://github.com/sysown/proxysql/pull/1479,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1479#issuecomment-384242593,"See comments in Github issue. Once applied, this change
allows the user to toggle the 'client_multi_statements'
flag as a global variable.",Thank you!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1481,2018-04-25T13:45:03Z,2019-01-14T14:54:31Z,2019-01-14T14:54:31Z,CLOSED,False,36,20,3,https://github.com/aminet,Debian 9 package with systemd service (instead of init.d),3,[],https://github.com/sysown/proxysql/pull/1481,https://github.com/aminet,1,https://github.com/sysown/proxysql/pull/1481,"Debian 9 package still use /etc/init.d and for distribution using systemd it would be more logical to use the service file. This is an update for the debian-9 controlfile and an  update of the service file. Dedicated user for proxysql for isaolation as mysql could be running too.
Changes:
proxysql.service moves to systemd/system to reflect the final destination while installed.
proxysql.service has been updated to start proxysql with proxysql user and to start proxysql with security options provided by systemd.
proxysql.ctl now handle directory creation and set the owner instead of the service file (with ExecStartPre), if necessary it create the user proxysql.
(same changes can apply to other recent distributions)","Debian 9 package still use /etc/init.d and for distribution using systemd it would be more logical to use the service file. This is an update for the debian-9 controlfile and an  update of the service file. Dedicated user for proxysql for isaolation as mysql could be running too.
Changes:
proxysql.service moves to systemd/system to reflect the final destination while installed.
proxysql.service has been updated to start proxysql with proxysql user and to start proxysql with security options provided by systemd.
proxysql.ctl now handle directory creation and set the owner instead of the service file (with ExecStartPre), if necessary it create the user proxysql.
(same changes can apply to other recent distributions)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1481,2018-04-25T13:45:03Z,2019-01-14T14:54:31Z,2019-01-14T14:54:31Z,CLOSED,False,36,20,3,https://github.com/aminet,Debian 9 package with systemd service (instead of init.d),3,[],https://github.com/sysown/proxysql/pull/1481,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1481#issuecomment-385236755,"Debian 9 package still use /etc/init.d and for distribution using systemd it would be more logical to use the service file. This is an update for the debian-9 controlfile and an  update of the service file. Dedicated user for proxysql for isaolation as mysql could be running too.
Changes:
proxysql.service moves to systemd/system to reflect the final destination while installed.
proxysql.service has been updated to start proxysql with proxysql user and to start proxysql with security options provided by systemd.
proxysql.ctl now handle directory creation and set the owner instead of the service file (with ExecStartPre), if necessary it create the user proxysql.
(same changes can apply to other recent distributions)","@aminet : thanks!
@pondix : can you please review?",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1481,2018-04-25T13:45:03Z,2019-01-14T14:54:31Z,2019-01-14T14:54:31Z,CLOSED,False,36,20,3,https://github.com/aminet,Debian 9 package with systemd service (instead of init.d),3,[],https://github.com/sysown/proxysql/pull/1481,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/1481#issuecomment-385435809,"Debian 9 package still use /etc/init.d and for distribution using systemd it would be more logical to use the service file. This is an update for the debian-9 controlfile and an  update of the service file. Dedicated user for proxysql for isaolation as mysql could be running too.
Changes:
proxysql.service moves to systemd/system to reflect the final destination while installed.
proxysql.service has been updated to start proxysql with proxysql user and to start proxysql with security options provided by systemd.
proxysql.ctl now handle directory creation and set the owner instead of the service file (with ExecStartPre), if necessary it create the user proxysql.
(same changes can apply to other recent distributions)",@renecannao I'll test on the next package builds,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1481,2018-04-25T13:45:03Z,2019-01-14T14:54:31Z,2019-01-14T14:54:31Z,CLOSED,False,36,20,3,https://github.com/aminet,Debian 9 package with systemd service (instead of init.d),3,[],https://github.com/sysown/proxysql/pull/1481,https://github.com/pondix,4,https://github.com/sysown/proxysql/pull/1481#issuecomment-387854308,"Debian 9 package still use /etc/init.d and for distribution using systemd it would be more logical to use the service file. This is an update for the debian-9 controlfile and an  update of the service file. Dedicated user for proxysql for isaolation as mysql could be running too.
Changes:
proxysql.service moves to systemd/system to reflect the final destination while installed.
proxysql.service has been updated to start proxysql with proxysql user and to start proxysql with security options provided by systemd.
proxysql.ctl now handle directory creation and set the owner instead of the service file (with ExecStartPre), if necessary it create the user proxysql.
(same changes can apply to other recent distributions)","Works well and as expected üëç

The service will run under the proxysql user and log to syslog rather than the log file, on package post-install /var/run/proxysql & /var/lib/proxysql will be chown to proxysql

Regarding the RestrictAddressFamilies=AF_INET AF_INET6 AF_UNIX variable, limiting to IPv4/IPv6/Unix socket only address families: I'm not sure this is enough or if we need to also explicitly define AF_LOCAL / AF_UNSPEC and perhaps maybe AF_ALG for things that might be part of the dependancies (e.g. libssl) in future version as I see references to these in the code (including v2.0.0). A detailed reference reviewed can be found here: http://man7.org/linux/man-pages/man2/socket.2.html
I think these should be added to be on the safe side üòÑ",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1481,2018-04-25T13:45:03Z,2019-01-14T14:54:31Z,2019-01-14T14:54:31Z,CLOSED,False,36,20,3,https://github.com/aminet,Debian 9 package with systemd service (instead of init.d),3,[],https://github.com/sysown/proxysql/pull/1481,https://github.com/aminet,5,https://github.com/sysown/proxysql/pull/1481#issuecomment-399920898,"Debian 9 package still use /etc/init.d and for distribution using systemd it would be more logical to use the service file. This is an update for the debian-9 controlfile and an  update of the service file. Dedicated user for proxysql for isaolation as mysql could be running too.
Changes:
proxysql.service moves to systemd/system to reflect the final destination while installed.
proxysql.service has been updated to start proxysql with proxysql user and to start proxysql with security options provided by systemd.
proxysql.ctl now handle directory creation and set the owner instead of the service file (with ExecStartPre), if necessary it create the user proxysql.
(same changes can apply to other recent distributions)","(I'm back on my project using proxy, sorry for the delay)
@renecannao: you are welcome
@pondix :  AF_UNIX and AF_LOCAL are the same (on Linux /usr/src/linux/include/linux/socket.h )
and yes AF_ALG might be used when using kernel crypto api.
I have rebooted a node and /var/run (/run) is cleaned so systemd service need to check if /var/run/proxysql exist at startup. Since systemd 211, RuntimeDirectory helps to do thats.
Regards",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1481,2018-04-25T13:45:03Z,2019-01-14T14:54:31Z,2019-01-14T14:54:31Z,CLOSED,False,36,20,3,https://github.com/aminet,Debian 9 package with systemd service (instead of init.d),3,[],https://github.com/sysown/proxysql/pull/1481,https://github.com/pondix,6,https://github.com/sysown/proxysql/pull/1481#issuecomment-416571252,"Debian 9 package still use /etc/init.d and for distribution using systemd it would be more logical to use the service file. This is an update for the debian-9 controlfile and an  update of the service file. Dedicated user for proxysql for isaolation as mysql could be running too.
Changes:
proxysql.service moves to systemd/system to reflect the final destination while installed.
proxysql.service has been updated to start proxysql with proxysql user and to start proxysql with security options provided by systemd.
proxysql.ctl now handle directory creation and set the owner instead of the service file (with ExecStartPre), if necessary it create the user proxysql.
(same changes can apply to other recent distributions)","hi @aminet - sorry for the delay, its been a busy patch :)
Can you please make this PR against the 2.0 branch and also include AF_ALG?",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1481,2018-04-25T13:45:03Z,2019-01-14T14:54:31Z,2019-01-14T14:54:31Z,CLOSED,False,36,20,3,https://github.com/aminet,Debian 9 package with systemd service (instead of init.d),3,[],https://github.com/sysown/proxysql/pull/1481,https://github.com/aminet,7,https://github.com/sysown/proxysql/pull/1481#issuecomment-419133773,"Debian 9 package still use /etc/init.d and for distribution using systemd it would be more logical to use the service file. This is an update for the debian-9 controlfile and an  update of the service file. Dedicated user for proxysql for isaolation as mysql could be running too.
Changes:
proxysql.service moves to systemd/system to reflect the final destination while installed.
proxysql.service has been updated to start proxysql with proxysql user and to start proxysql with security options provided by systemd.
proxysql.ctl now handle directory creation and set the owner instead of the service file (with ExecStartPre), if necessary it create the user proxysql.
(same changes can apply to other recent distributions)","Hi @pondix ,
I'll take some time to do it at the beginning of the next week (I was offline last week and this one is very busy for me)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1481,2018-04-25T13:45:03Z,2019-01-14T14:54:31Z,2019-01-14T14:54:31Z,CLOSED,False,36,20,3,https://github.com/aminet,Debian 9 package with systemd service (instead of init.d),3,[],https://github.com/sysown/proxysql/pull/1481,https://github.com/aminet,8,https://github.com/sysown/proxysql/pull/1481#issuecomment-420627541,"Debian 9 package still use /etc/init.d and for distribution using systemd it would be more logical to use the service file. This is an update for the debian-9 controlfile and an  update of the service file. Dedicated user for proxysql for isaolation as mysql could be running too.
Changes:
proxysql.service moves to systemd/system to reflect the final destination while installed.
proxysql.service has been updated to start proxysql with proxysql user and to start proxysql with security options provided by systemd.
proxysql.ctl now handle directory creation and set the owner instead of the service file (with ExecStartPre), if necessary it create the user proxysql.
(same changes can apply to other recent distributions)","Hi @pondix
It's done with PR #1686 on branch v2.0.0
Regards",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1484,2018-04-27T18:10:01Z,2018-04-28T05:38:03Z,2018-04-30T14:04:01Z,MERGED,True,16,3,1,https://github.com/amcmanus,Add support for check_type to proxysql.cnf for mysql_replication_hostgroups,1,[],https://github.com/sysown/proxysql/pull/1484,https://github.com/amcmanus,1,https://github.com/sysown/proxysql/pull/1484,We'd love the ability to manage check_type via proxysql.cnf for automation purposes. This appears to satisfy the need.,We'd love the ability to manage check_type via proxysql.cnf for automation purposes. This appears to satisfy the need.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1484,2018-04-27T18:10:01Z,2018-04-28T05:38:03Z,2018-04-30T14:04:01Z,MERGED,True,16,3,1,https://github.com/amcmanus,Add support for check_type to proxysql.cnf for mysql_replication_hostgroups,1,[],https://github.com/sysown/proxysql/pull/1484,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1484#issuecomment-385142508,We'd love the ability to manage check_type via proxysql.cnf for automation purposes. This appears to satisfy the need.,"It looks good to me.
Thank you",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1495,2018-05-07T15:01:02Z,2018-06-07T10:48:54Z,2018-06-07T10:48:54Z,MERGED,True,88,3,8,https://github.com/pondix,Merging changes from v1.4.9 to 2.0.0,7,[],https://github.com/sysown/proxysql/pull/1495,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/1495,"This PR includes commit from v1.4.9 not yet committed to v2.0.0

Basic build and testing performed successfully on Ubuntu 16.04.03","This PR includes commit from v1.4.9 not yet committed to v2.0.0

Basic build and testing performed successfully on Ubuntu 16.04.03",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1498,2018-05-08T03:00:05Z,2018-05-30T10:05:04Z,2018-05-30T10:05:18Z,MERGED,True,9,0,1,None,Prevent duplicate execution of proxysql_galera_checker.sh,1,[],https://github.com/sysown/proxysql/pull/1498,None,1,https://github.com/sysown/proxysql/pull/1498,"If for some reason the MySQL server is unreachable, proxysql_galera_checker.sh may be duplicated. If it occurs, RELOAD_CHECK_FILE will not work properly. So, I think that it is better for proxysql_galera_checker.sh to have duplicate execution prevention function.","If for some reason the MySQL server is unreachable, proxysql_galera_checker.sh may be duplicated. If it occurs, RELOAD_CHECK_FILE will not work properly. So, I think that it is better for proxysql_galera_checker.sh to have duplicate execution prevention function.",True,{'THUMBS_UP': ['https://github.com/omattsson']}
sysown/proxysql,https://github.com/sysown/proxysql,1498,2018-05-08T03:00:05Z,2018-05-30T10:05:04Z,2018-05-30T10:05:18Z,MERGED,True,9,0,1,None,Prevent duplicate execution of proxysql_galera_checker.sh,1,[],https://github.com/sysown/proxysql/pull/1498,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1498#issuecomment-393105358,"If for some reason the MySQL server is unreachable, proxysql_galera_checker.sh may be duplicated. If it occurs, RELOAD_CHECK_FILE will not work properly. So, I think that it is better for proxysql_galera_checker.sh to have duplicate execution prevention function.",Thank you for the contribution!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1499,2018-05-09T15:37:42Z,2018-05-15T16:08:53Z,2019-10-29T00:03:54Z,MERGED,True,40,1,1,https://github.com/pondix,Added all session status values v2.0.0,1,[],https://github.com/sysown/proxysql/pull/1499,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/1499,"#1496 - Added descriptions for the following status constants:
CONNECTING_CLIENT
PINGING_SERVER
WAITING_SERVER_DATA
CHANGING_CHARSET
CHANGING_AUTOCOMMIT
CHANGING_USER_CLIENT
SETTING_INIT_CONNECT
SETTING_SQL_LOG_BIN
SETTING_SQL_MODE
SETTING_TIME_ZONE
FAST_FORWARD
NONE","#1496 - Added descriptions for the following status constants:
CONNECTING_CLIENT
PINGING_SERVER
WAITING_SERVER_DATA
CHANGING_CHARSET
CHANGING_AUTOCOMMIT
CHANGING_USER_CLIENT
SETTING_INIT_CONNECT
SETTING_SQL_LOG_BIN
SETTING_SQL_MODE
SETTING_TIME_ZONE
FAST_FORWARD
NONE",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1500,2018-05-09T16:57:47Z,2018-05-15T16:07:04Z,2018-05-30T13:14:00Z,MERGED,True,36,0,1,https://github.com/pondix,Added all session status values v1.4.9,1,[],https://github.com/sysown/proxysql/pull/1500,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/1500,"#1496 - Added descriptions for the following status constants:
CONNECTING_CLIENT
PINGING_SERVER
WAITING_SERVER_DATA
CHANGING_CHARSET
CHANGING_AUTOCOMMIT
CHANGING_USER_CLIENT
SETTING_INIT_CONNECT
SETTING_SQL_LOG_BIN
SETTING_SQL_MODE
SETTING_TIME_ZONE
FAST_FORWARD
NONE","#1496 - Added descriptions for the following status constants:
CONNECTING_CLIENT
PINGING_SERVER
WAITING_SERVER_DATA
CHANGING_CHARSET
CHANGING_AUTOCOMMIT
CHANGING_USER_CLIENT
SETTING_INIT_CONNECT
SETTING_SQL_LOG_BIN
SETTING_SQL_MODE
SETTING_TIME_ZONE
FAST_FORWARD
NONE",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1501,2018-05-10T14:26:37Z,2018-05-15T16:05:48Z,2018-05-15T16:05:48Z,MERGED,True,1,0,1,https://github.com/pondix,Added default_schema to checksum criteria 1.4.9,1,[],https://github.com/sysown/proxysql/pull/1501,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/1501,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1501,2018-05-10T14:26:37Z,2018-05-15T16:05:48Z,2018-05-15T16:05:48Z,MERGED,True,1,0,1,https://github.com/pondix,Added default_schema to checksum criteria 1.4.9,1,[],https://github.com/sysown/proxysql/pull/1501,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1501#issuecomment-388070568,,Related to #1491,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1502,2018-05-10T14:27:08Z,2018-05-15T16:08:15Z,2019-10-29T00:03:52Z,MERGED,True,1,0,1,https://github.com/pondix,Added default_schema to checksum criteria 2.0.0,1,[],https://github.com/sysown/proxysql/pull/1502,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/1502,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1502,2018-05-10T14:27:08Z,2018-05-15T16:08:15Z,2019-10-29T00:03:52Z,MERGED,True,1,0,1,https://github.com/pondix,Added default_schema to checksum criteria 2.0.0,1,[],https://github.com/sysown/proxysql/pull/1502,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1502#issuecomment-388070658,,Related to #1491,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1509,2018-05-16T19:32:26Z,2018-05-18T12:40:48Z,2018-05-18T16:44:25Z,MERGED,True,6,3,2,https://github.com/aevernon,Use correct package for g++ with RHEL and CentOS,3,[],https://github.com/sysown/proxysql/pull/1509,https://github.com/aevernon,1,https://github.com/sysown/proxysql/pull/1509,"As of CentOS 7.4 and Fedora 28, the correct package name to install g++ is gcc-c++.","As of CentOS 7.4 and Fedora 28, the correct package name to install g++ is gcc-c++.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1509,2018-05-16T19:32:26Z,2018-05-18T12:40:48Z,2018-05-18T16:44:25Z,MERGED,True,6,3,2,https://github.com/aevernon,Use correct package for g++ with RHEL and CentOS,3,[],https://github.com/sysown/proxysql/pull/1509,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1509#issuecomment-389869734,"As of CentOS 7.4 and Fedora 28, the correct package name to install g++ is gcc-c++.","Correct, thanks for the submission! Can you please add this to a different line with a version specific comment?
E.g.:
#RHEL / CentOS < 7
...

# CentOS 7.4 / Fedora 28
...

In this way the instructions are available for users on older OS versions.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1509,2018-05-16T19:32:26Z,2018-05-18T12:40:48Z,2018-05-18T16:44:25Z,MERGED,True,6,3,2,https://github.com/aevernon,Use correct package for g++ with RHEL and CentOS,3,[],https://github.com/sysown/proxysql/pull/1509,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/1509#issuecomment-390194277,"As of CentOS 7.4 and Fedora 28, the correct package name to install g++ is gcc-c++.",Thanks!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1510,2018-05-17T13:36:38Z,2018-05-20T14:58:21Z,2018-05-20T14:58:21Z,MERGED,True,6,0,1,https://github.com/pondix,Added fix for mysqldump error related to information_schema,1,[],https://github.com/sysown/proxysql/pull/1510,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/1510,"Addresses: mysqldump: Couldn't execute 'SELECT COUNT(*) FROM INFORMATION_SCHEMA.TABLES WHERE table_schema = 'performance_schema' AND table_name = 'session_variables'': no such table: INFORMATION_SCHEMA.TABLES (1045)
Reported in #1382","Addresses: mysqldump: Couldn't execute 'SELECT COUNT(*) FROM INFORMATION_SCHEMA.TABLES WHERE table_schema = 'performance_schema' AND table_name = 'session_variables'': no such table: INFORMATION_SCHEMA.TABLES (1045)
Reported in #1382",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1514,2018-05-18T12:27:43Z,2018-05-20T14:56:56Z,2018-05-25T16:59:20Z,MERGED,True,17,4,1,https://github.com/pondix,Fixes crash on shutdown when connection is null,3,[],https://github.com/sysown/proxysql/pull/1514,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/1514,Addresses #1511,Addresses #1511,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1518,2018-05-21T16:16:02Z,2018-05-22T06:36:19Z,2018-05-22T06:36:19Z,MERGED,True,4,4,1,https://github.com/dontub,Don't try to detach and cancel a joined thread,2,[],https://github.com/sysown/proxysql/pull/1518,https://github.com/dontub,1,https://github.com/sysown/proxysql/pull/1518,Fixes #1512.,Fixes #1512.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1521,2018-05-23T13:44:48Z,2019-02-28T06:23:13Z,2019-03-26T08:40:47Z,CLOSED,False,16,16,1,https://github.com/jkrcma,Fix syntax and styling of sample config,1,[],https://github.com/sysown/proxysql/pull/1521,https://github.com/jkrcma,1,https://github.com/sysown/proxysql/pull/1521,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1521,2018-05-23T13:44:48Z,2019-02-28T06:23:13Z,2019-03-26T08:40:47Z,CLOSED,False,16,16,1,https://github.com/jkrcma,Fix syntax and styling of sample config,1,[],https://github.com/sysown/proxysql/pull/1521,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1521#issuecomment-468153168,,"hi @jkrcma .
Closing this because not needed. The syntax is correct.
Thanks",True,{'LAUGH': ['https://github.com/jkrcma']}
sysown/proxysql,https://github.com/sysown/proxysql,1525,2018-05-25T12:59:50Z,2018-06-07T06:54:21Z,2019-10-29T00:03:48Z,MERGED,True,17,4,1,https://github.com/pondix,Fixes crash on shutdown when connection is null,3,[],https://github.com/sysown/proxysql/pull/1525,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/1525,Applying patch for #1511 to v2.0.0,Applying patch for #1511 to v2.0.0,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1528,2018-05-28T14:38:44Z,2019-01-10T06:08:06Z,2019-01-10T06:08:06Z,CLOSED,False,409,210,10,https://github.com/masterzen,#1492 - improved set parser,2,[],https://github.com/sysown/proxysql/pull/1528,https://github.com/masterzen,1,https://github.com/sysown/proxysql/pull/1528,"Hi,
Here is a partial fix to #1492 implementing a re2 based parser of SET commands with multiple variables allowing proxysql to parse requests like:
SET @@sql_mode='TRADITIONAL', @@time_zone='Europe/Berlin', NAMES utf8 COLLATE unicode_ci
at once.
I left the code for the other SET requests (for instance #1373) as a fallback. I also added a few unit tests for the SetParser (don't know if that compile outside of my osx machine).
I know this isn't a full SET parser, but at least it solved my immediate issue :) so feel free to reject.
Also, I haven't been programming in C++ since the end of the previous century so bear with my non-idiomatic (and probably sub-optimal or buggy) code :)
Thanks,","Hi,
Here is a partial fix to #1492 implementing a re2 based parser of SET commands with multiple variables allowing proxysql to parse requests like:
SET @@sql_mode='TRADITIONAL', @@time_zone='Europe/Berlin', NAMES utf8 COLLATE unicode_ci
at once.
I left the code for the other SET requests (for instance #1373) as a fallback. I also added a few unit tests for the SetParser (don't know if that compile outside of my osx machine).
I know this isn't a full SET parser, but at least it solved my immediate issue :) so feel free to reject.
Also, I haven't been programming in C++ since the end of the previous century so bear with my non-idiomatic (and probably sub-optimal or buggy) code :)
Thanks,",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1528,2018-05-28T14:38:44Z,2019-01-10T06:08:06Z,2019-01-10T06:08:06Z,CLOSED,False,409,210,10,https://github.com/masterzen,#1492 - improved set parser,2,[],https://github.com/sysown/proxysql/pull/1528,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1528#issuecomment-394723028,"Hi,
Here is a partial fix to #1492 implementing a re2 based parser of SET commands with multiple variables allowing proxysql to parse requests like:
SET @@sql_mode='TRADITIONAL', @@time_zone='Europe/Berlin', NAMES utf8 COLLATE unicode_ci
at once.
I left the code for the other SET requests (for instance #1373) as a fallback. I also added a few unit tests for the SetParser (don't know if that compile outside of my osx machine).
I know this isn't a full SET parser, but at least it solved my immediate issue :) so feel free to reject.
Also, I haven't been programming in C++ since the end of the previous century so bear with my non-idiomatic (and probably sub-optimal or buggy) code :)
Thanks,","@masterzen , thank you for the PR.
I didn't review it before releasing 1.4.9 .
I just changed the base branch from v1.4.9 to v1.4.10 .
I will review and get back to you.
Thanks.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1528,2018-05-28T14:38:44Z,2019-01-10T06:08:06Z,2019-01-10T06:08:06Z,CLOSED,False,409,210,10,https://github.com/masterzen,#1492 - improved set parser,2,[],https://github.com/sysown/proxysql/pull/1528,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/1528#issuecomment-422836140,"Hi,
Here is a partial fix to #1492 implementing a re2 based parser of SET commands with multiple variables allowing proxysql to parse requests like:
SET @@sql_mode='TRADITIONAL', @@time_zone='Europe/Berlin', NAMES utf8 COLLATE unicode_ci
at once.
I left the code for the other SET requests (for instance #1373) as a fallback. I also added a few unit tests for the SetParser (don't know if that compile outside of my osx machine).
I know this isn't a full SET parser, but at least it solved my immediate issue :) so feel free to reject.
Also, I haven't been programming in C++ since the end of the previous century so bear with my non-idiomatic (and probably sub-optimal or buggy) code :)
Thanks,","Trying to merge it into v2.0.0 .
Temporarily in https://github.com/sysown/proxysql/tree/v2.0.0-1528 , but it needs a bit more work.
For example, SET time_zone needs to support values like '+00:00'",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1528,2018-05-28T14:38:44Z,2019-01-10T06:08:06Z,2019-01-10T06:08:06Z,CLOSED,False,409,210,10,https://github.com/masterzen,#1492 - improved set parser,2,[],https://github.com/sysown/proxysql/pull/1528,https://github.com/masterzen,4,https://github.com/sysown/proxysql/pull/1528#issuecomment-424322503,"Hi,
Here is a partial fix to #1492 implementing a re2 based parser of SET commands with multiple variables allowing proxysql to parse requests like:
SET @@sql_mode='TRADITIONAL', @@time_zone='Europe/Berlin', NAMES utf8 COLLATE unicode_ci
at once.
I left the code for the other SET requests (for instance #1373) as a fallback. I also added a few unit tests for the SetParser (don't know if that compile outside of my osx machine).
I know this isn't a full SET parser, but at least it solved my immediate issue :) so feel free to reject.
Also, I haven't been programming in C++ since the end of the previous century so bear with my non-idiomatic (and probably sub-optimal or buggy) code :)
Thanks,","@renecannao, do you want me to help with this ?",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1528,2018-05-28T14:38:44Z,2019-01-10T06:08:06Z,2019-01-10T06:08:06Z,CLOSED,False,409,210,10,https://github.com/masterzen,#1492 - improved set parser,2,[],https://github.com/sysown/proxysql/pull/1528,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/1528#issuecomment-452981902,"Hi,
Here is a partial fix to #1492 implementing a re2 based parser of SET commands with multiple variables allowing proxysql to parse requests like:
SET @@sql_mode='TRADITIONAL', @@time_zone='Europe/Berlin', NAMES utf8 COLLATE unicode_ci
at once.
I left the code for the other SET requests (for instance #1373) as a fallback. I also added a few unit tests for the SetParser (don't know if that compile outside of my osx machine).
I know this isn't a full SET parser, but at least it solved my immediate issue :) so feel free to reject.
Also, I haven't been programming in C++ since the end of the previous century so bear with my non-idiomatic (and probably sub-optimal or buggy) code :)
Thanks,","@masterzen : I am closing this PR because this code was used and further improved.
Once again, thank you for your help!",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1537,2018-06-05T11:53:31Z,2018-06-05T14:28:12Z,2018-06-05T14:28:20Z,MERGED,True,1736,574,32,https://github.com/pondix,Adding Ubuntu 18 (Bionic) and Fedora 28 for 2.0.0,6,[],https://github.com/sysown/proxysql/pull/1537,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/1537,"Includes new package building process with docker-compose
Uses automated builds from https://hub.docker.com/r/proxysql/packaging/

sudo make <package_name> to build using one of the following package_names:
centos6.7 centos7 centos6.7-dbg centos7-dbg ubuntu14 debian7 debian8 ubuntu14-dbg debian7-dbg debian8-dbg ubuntu16 ubuntu16-dbg fedora24 fedora24-dbg debian9 debian9-dbg ubuntu16-clickhouse debian9-clickhouse centos7-clickhouse fedora24-clickhouse fedora27 fedora27-dbg fedora27-clickhouse ubuntu18 ubuntu18-dbg ubuntu18-clickhouse

Additionally requires docker-compose to be installed on the system where packages are built.","Includes new package building process with docker-compose
Uses automated builds from https://hub.docker.com/r/proxysql/packaging/

sudo make <package_name> to build using one of the following package_names:
centos6.7 centos7 centos6.7-dbg centos7-dbg ubuntu14 debian7 debian8 ubuntu14-dbg debian7-dbg debian8-dbg ubuntu16 ubuntu16-dbg fedora24 fedora24-dbg debian9 debian9-dbg ubuntu16-clickhouse debian9-clickhouse centos7-clickhouse fedora24-clickhouse fedora27 fedora27-dbg fedora27-clickhouse ubuntu18 ubuntu18-dbg ubuntu18-clickhouse

Additionally requires docker-compose to be installed on the system where packages are built.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1543,2018-06-07T11:45:35Z,2018-06-11T09:02:53Z,2019-10-29T00:03:44Z,MERGED,True,80,11,7,https://github.com/pondix,Merging commits from 1.4.9,11,[],https://github.com/sysown/proxysql/pull/1543,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/1543,"The full list can be found below (all which were not included in this merge were already handled in 2.0.0):
https://github.com/sysown/proxysql/commit/2c4a29f65b9ca61742dbc003035d86c46f2a4eee
https://github.com/sysown/proxysql/commit/8b3c54e0275566f551301ecef2efa930384b144f
https://github.com/sysown/proxysql/commit/4cde850d14bb135a63244882ace80ce4408ee64f
https://github.com/sysown/proxysql/commit/ce5b13a6fb3d452e038bc1d1bf9856f12a3301d1
https://github.com/sysown/proxysql/commit/986958a4f6f7ef742ac730abca6a0c6eac2e7ae7
https://github.com/sysown/proxysql/commit/68e6aeca4334018c94426a12fe7d377ae08eeece
https://github.com/sysown/proxysql/commit/1c18da4ca1df26f05ae8e2d84131cae023bdef7c
https://github.com/sysown/proxysql/commit/d8b17ff5923e42e536c161459b2d30ad38744a26
https://github.com/sysown/proxysql/commit/4a79890c2c6c1bfa2ae825a9cdd038c4de8394f1
https://github.com/sysown/proxysql/commit/3819fb2f0605bf19b5616aa4015ea600358681b6
https://github.com/sysown/proxysql/commit/2a873563b844cce2b3ff8e1aed7b42091d0a1f58
https://github.com/sysown/proxysql/commit/0719ea369b14e0938a5f5f05b82cad6194bd3373
https://github.com/sysown/proxysql/commit/a45d36d23957f8340de1f7f48b861ee4af90d8a4
https://github.com/sysown/proxysql/commit/d741d467d42cf812a3230e851005520d3da8892d
https://github.com/sysown/proxysql/commit/f5670ff3c5d9858795a529ba807f98229c22862b
https://github.com/sysown/proxysql/commit/522362423f022c760d2a039f0fac7f7c65f138a4","The full list can be found below (all which were not included in this merge were already handled in 2.0.0):
https://github.com/sysown/proxysql/commit/2c4a29f65b9ca61742dbc003035d86c46f2a4eee
https://github.com/sysown/proxysql/commit/8b3c54e0275566f551301ecef2efa930384b144f
https://github.com/sysown/proxysql/commit/4cde850d14bb135a63244882ace80ce4408ee64f
https://github.com/sysown/proxysql/commit/ce5b13a6fb3d452e038bc1d1bf9856f12a3301d1
https://github.com/sysown/proxysql/commit/986958a4f6f7ef742ac730abca6a0c6eac2e7ae7
https://github.com/sysown/proxysql/commit/68e6aeca4334018c94426a12fe7d377ae08eeece
https://github.com/sysown/proxysql/commit/1c18da4ca1df26f05ae8e2d84131cae023bdef7c
https://github.com/sysown/proxysql/commit/d8b17ff5923e42e536c161459b2d30ad38744a26
https://github.com/sysown/proxysql/commit/4a79890c2c6c1bfa2ae825a9cdd038c4de8394f1
https://github.com/sysown/proxysql/commit/3819fb2f0605bf19b5616aa4015ea600358681b6
https://github.com/sysown/proxysql/commit/2a873563b844cce2b3ff8e1aed7b42091d0a1f58
https://github.com/sysown/proxysql/commit/0719ea369b14e0938a5f5f05b82cad6194bd3373
https://github.com/sysown/proxysql/commit/a45d36d23957f8340de1f7f48b861ee4af90d8a4
https://github.com/sysown/proxysql/commit/d741d467d42cf812a3230e851005520d3da8892d
https://github.com/sysown/proxysql/commit/f5670ff3c5d9858795a529ba807f98229c22862b
https://github.com/sysown/proxysql/commit/522362423f022c760d2a039f0fac7f7c65f138a4",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1547,2018-06-11T04:09:30Z,2018-06-11T05:37:52Z,2018-10-01T00:42:38Z,MERGED,True,13,0,3,https://github.com/yuta-oxo,Fix memory leaks,1,[],https://github.com/sysown/proxysql/pull/1547,https://github.com/yuta-oxo,1,https://github.com/sysown/proxysql/pull/1547,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1547,2018-06-11T04:09:30Z,2018-06-11T05:37:52Z,2018-10-01T00:42:38Z,MERGED,True,13,0,3,https://github.com/yuta-oxo,Fix memory leaks,1,[],https://github.com/sysown/proxysql/pull/1547,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1547#issuecomment-396119105,,"hi @yuta-oxo .
Thank you for the pull request, I already reviewed it and it seems all correct.
I will apply it.
Since they seem very small and rare leaks, I am curious: how did you detect them?
Did you experience a noticeable memory leak?
Thanks",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1547,2018-06-11T04:09:30Z,2018-06-11T05:37:52Z,2018-10-01T00:42:38Z,MERGED,True,13,0,3,https://github.com/yuta-oxo,Fix memory leaks,1,[],https://github.com/sysown/proxysql/pull/1547,https://github.com/yuta-oxo,3,https://github.com/sysown/proxysql/pull/1547#issuecomment-396126517,,"how did you detect them?

Because I could not detect them by using jemalloc profiling, I found them visually at the source code level.

Did you experience a noticeable memory leak?

Yes, I did. I used the ProxySQL released by Percona with the Percona XtraDB Cluster.
The ProxySQL's memory usase incleased with time.
The period surrounded by the red line of the attached file shows the memory leak. The period surrounded by the blue line is this patched version.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1547,2018-06-11T04:09:30Z,2018-06-11T05:37:52Z,2018-10-01T00:42:38Z,MERGED,True,13,0,3,https://github.com/yuta-oxo,Fix memory leaks,1,[],https://github.com/sysown/proxysql/pull/1547,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/1547#issuecomment-396127433,,"Because I could not detect them by using jemalloc profiling, I found them visually at the source code level.

Great job!

The period surrounded by the red line of the attached file shows the memory leak. The period surrounded by the blue line is this patched version.

Yes, it is visible. Seems like it was leaking around 10MB per day.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1547,2018-06-11T04:09:30Z,2018-06-11T05:37:52Z,2018-10-01T00:42:38Z,MERGED,True,13,0,3,https://github.com/yuta-oxo,Fix memory leaks,1,[],https://github.com/sysown/proxysql/pull/1547,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/1547#issuecomment-396127485,,Thank you for the PR. Merged,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1547,2018-06-11T04:09:30Z,2018-06-11T05:37:52Z,2018-10-01T00:42:38Z,MERGED,True,13,0,3,https://github.com/yuta-oxo,Fix memory leaks,1,[],https://github.com/sysown/proxysql/pull/1547,https://github.com/ycg,6,https://github.com/sysown/proxysql/pull/1547#issuecomment-413397815,,"this problem has solve?
: Error in realloc(): out of memory
Error: signal 6:
/data1/env/proxysql/bin/proxysql(_Z13crash_handleri+0x1a)[0x44c6aa]
/lib64/libc.so.6(+0x32510)[0x7f15ef086510]
/lib64/libc.so.6(gsignal+0x35)[0x7f15ef086495]
/lib64/libc.so.6(abort+0x175)[0x7f15ef087c75]
/data1/env/proxysql/bin/proxysql(realloc+0x327)[0x561af7]
/data1/env/proxysql/bin/proxysql(my_realloc+0x23)[0x626c93]
/data1/env/proxysql/bin/proxysql(mysql_stmt_execute_generate_request+0x3c7)[0x6135b7]
/data1/env/proxysql/bin/proxysql(mysql_stmt_execute+0xa3)[0x614973]
/data1/env/proxysql/bin/proxysql[0x60d8c8]
/data1/env/proxysql/bin/proxysql(my_context_spawn+0x41)[0x60c911]
2018-08-15 14:57:57 main.cpp:905:ProxySQL_daemonize_phase3(): [ERROR] ProxySQL crashed. Restarting!
2018-08-15 14:57:57 [INFO] Angel process started ProxySQL process 43555
Standard ProxySQL Cluster rev. 0.1.0702 -- ProxySQL_Cluster.cpp -- Wed May 30 10:27:22 2018
Standard ProxySQL Statistics rev. 1.4.1027 -- ProxySQL_Statistics.cpp -- Wed May 30 10:27:22 2018
Standard ProxySQL HTTP Server Handler rev. 1.4.1031 -- ProxySQL_HTTP_Server.cpp -- Wed May 30 10:27:22 2018
Standard ProxySQL Admin rev. 0.2.0902 -- ProxySQL_Admin.cpp -- Wed May 30 10:27:22 2018
Standard MySQL Threads Handler rev. 0.2.0902 -- MySQL_Thread.cpp -- Wed May 30 10:27:22 2018
Standard MySQL Authentication rev. 0.2.0902 -- MySQL_Authentication.cpp -- Wed May 30 10:27:22 2018
2018-08-15 14:57:57 [INFO] Dumping current MySQL Servers structures for hostgroup ALL
2018-08-15 14:57:57 [INFO] Dumping mysql_servers",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1547,2018-06-11T04:09:30Z,2018-06-11T05:37:52Z,2018-10-01T00:42:38Z,MERGED,True,13,0,3,https://github.com/yuta-oxo,Fix memory leaks,1,[],https://github.com/sysown/proxysql/pull/1547,https://github.com/yuta-oxo,7,https://github.com/sysown/proxysql/pull/1547#issuecomment-413408617,,"Hi @ycg .
I do not think this fix has solve the problem (out of memory). Because at MySQL_Connection::~MySQL_Connection(), the following code exists.
if (query.stmt) {
    query.stmt=NULL;
}
This code will generate a resource leak. I think the code must be the following.
if (query.stmt) {
    mysql_stmt_close(query.stmt);
    query.stmt=NULL;
}
Ref: https://dev.mysql.com/doc/refman/5.6/en/mysql-stmt-init.html",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1547,2018-06-11T04:09:30Z,2018-06-11T05:37:52Z,2018-10-01T00:42:38Z,MERGED,True,13,0,3,https://github.com/yuta-oxo,Fix memory leaks,1,[],https://github.com/sysown/proxysql/pull/1547,https://github.com/renecannao,8,https://github.com/sysown/proxysql/pull/1547#issuecomment-413414301,,"@ycg : the issue you are reporting is unrelated here.
It seems a bug inside mariadb client library (that proxysql relies on).
@yuta-oxo : proxysql never calls mysql_stmt_close because sending an STMT_CLOSE is  waste of time (network round trip). Instead, it either resets or closes the connection, and when the mysql handler is reset or closed all the resources associated to all prepared statements are released.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1547,2018-06-11T04:09:30Z,2018-06-11T05:37:52Z,2018-10-01T00:42:38Z,MERGED,True,13,0,3,https://github.com/yuta-oxo,Fix memory leaks,1,[],https://github.com/sysown/proxysql/pull/1547,https://github.com/yuta-oxo,9,https://github.com/sysown/proxysql/pull/1547#issuecomment-413415517,,"Hi @renecannao .
Thanks for your quick reply. I get the point.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1547,2018-06-11T04:09:30Z,2018-06-11T05:37:52Z,2018-10-01T00:42:38Z,MERGED,True,13,0,3,https://github.com/yuta-oxo,Fix memory leaks,1,[],https://github.com/sysown/proxysql/pull/1547,https://github.com/ycg,10,https://github.com/sysown/proxysql/pull/1547#issuecomment-425687518,,"@yuta-oxo
Proxysql online has been used for one month, and memory has been fast 6G.
Do you have any good idea?",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1547,2018-06-11T04:09:30Z,2018-06-11T05:37:52Z,2018-10-01T00:42:38Z,MERGED,True,13,0,3,https://github.com/yuta-oxo,Fix memory leaks,1,[],https://github.com/sysown/proxysql/pull/1547,https://github.com/yuta-oxo,11,https://github.com/sysown/proxysql/pull/1547#issuecomment-425764653,,"@ycg
I am sorry, I have no idea.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1563,2018-06-19T21:36:05Z,2018-07-25T16:08:07Z,2018-07-25T16:08:07Z,CLOSED,False,2,2,1,https://github.com/xginn8,Exclude libpsl from curl compilation,1,[],https://github.com/sysown/proxysql/pull/1563,https://github.com/xginn8,1,https://github.com/sysown/proxysql/pull/1563,fixes #1562,fixes #1562,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1563,2018-06-19T21:36:05Z,2018-07-25T16:08:07Z,2018-07-25T16:08:07Z,CLOSED,False,2,2,1,https://github.com/xginn8,Exclude libpsl from curl compilation,1,[],https://github.com/sysown/proxysql/pull/1563,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1563#issuecomment-407808982,fixes #1562,"@xginn8 . Thank you for the PR. It conflicts with another recent commit, so I added --without-libpsl on a different commit.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1564,2018-06-19T21:49:43Z,2018-08-02T15:22:40Z,2018-08-02T21:25:38Z,MERGED,True,342,48,14,https://github.com/zbentley,Fix #1560,18,[],https://github.com/sysown/proxysql/pull/1564,https://github.com/zbentley,1,https://github.com/sysown/proxysql/pull/1564,"This addresses #1560
This takes a bit of a shotgun approach and suggests the use of Homebrew-installed openssl and curl. In my experience, that is the least brittle approach as things change in the future. However, it is definitely possible to get a working build that uses the Homebrew headers, but links against the system libraries; that feels a bit less stable to me, however.
Happy to make changes etc!
Thanks!","This addresses #1560
This takes a bit of a shotgun approach and suggests the use of Homebrew-installed openssl and curl. In my experience, that is the least brittle approach as things change in the future. However, it is definitely possible to get a working build that uses the Homebrew headers, but links against the system libraries; that feels a bit less stable to me, however.
Happy to make changes etc!
Thanks!",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1564,2018-06-19T21:49:43Z,2018-08-02T15:22:40Z,2018-08-02T21:25:38Z,MERGED,True,342,48,14,https://github.com/zbentley,Fix #1560,18,[],https://github.com/sysown/proxysql/pull/1564,https://github.com/zbentley,2,https://github.com/sysown/proxysql/pull/1564#issuecomment-408537676,"This addresses #1560
This takes a bit of a shotgun approach and suggests the use of Homebrew-installed openssl and curl. In my experience, that is the least brittle approach as things change in the future. However, it is definitely possible to get a working build that uses the Homebrew headers, but links against the system libraries; that feels a bit less stable to me, however.
Happy to make changes etc!
Thanks!",Any update on this?,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1564,2018-06-19T21:49:43Z,2018-08-02T15:22:40Z,2018-08-02T21:25:38Z,MERGED,True,342,48,14,https://github.com/zbentley,Fix #1560,18,[],https://github.com/sysown/proxysql/pull/1564,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/1564#issuecomment-409965349,"This addresses #1560
This takes a bit of a shotgun approach and suggests the use of Homebrew-installed openssl and curl. In my experience, that is the least brittle approach as things change in the future. However, it is definitely possible to get a working build that uses the Homebrew headers, but links against the system libraries; that feels a bit less stable to me, however.
Happy to make changes etc!
Thanks!","@zbentley : thak you for this PR.
It uses installed curl , but this isn't the ideal goal, as it should use curl in deps dir.
I will merge this PR as is, and apply further changes.
Thanks",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1564,2018-06-19T21:49:43Z,2018-08-02T15:22:40Z,2018-08-02T21:25:38Z,MERGED,True,342,48,14,https://github.com/zbentley,Fix #1560,18,[],https://github.com/sysown/proxysql/pull/1564,https://github.com/zbentley,4,https://github.com/sysown/proxysql/pull/1564#issuecomment-410072611,"This addresses #1560
This takes a bit of a shotgun approach and suggests the use of Homebrew-installed openssl and curl. In my experience, that is the least brittle approach as things change in the future. However, it is definitely possible to get a working build that uses the Homebrew headers, but links against the system libraries; that feels a bit less stable to me, however.
Happy to make changes etc!
Thanks!","Thanks for all your hard work!!
I agree that using the bundled curl is ideal. OSX makes that very difficult . (see discussion: #1560), but if there is a way to get it statically linking reliably I am happy to help/test/document, please let me know.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1564,2018-06-19T21:49:43Z,2018-08-02T15:22:40Z,2018-08-02T21:25:38Z,MERGED,True,342,48,14,https://github.com/zbentley,Fix #1560,18,[],https://github.com/sysown/proxysql/pull/1564,https://github.com/zbentley,5,https://github.com/sysown/proxysql/pull/1564#issuecomment-410072824,"This addresses #1560
This takes a bit of a shotgun approach and suggests the use of Homebrew-installed openssl and curl. In my experience, that is the least brittle approach as things change in the future. However, it is definitely possible to get a working build that uses the Homebrew headers, but links against the system libraries; that feels a bit less stable to me, however.
Happy to make changes etc!
Thanks!","Whoops, just saw 850ac57
Thanks again!!",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1566,2018-06-20T13:12:35Z,2018-06-20T14:06:47Z,2018-06-20T14:10:40Z,CLOSED,False,1,0,1,https://github.com/pondix,Jenkins test,2,[],https://github.com/sysown/proxysql/pull/1566,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/1566,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1566,2018-06-20T13:12:35Z,2018-06-20T14:06:47Z,2018-06-20T14:10:40Z,CLOSED,False,1,0,1,https://github.com/pondix,Jenkins test,2,[],https://github.com/sysown/proxysql/pull/1566,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1566#issuecomment-398748669,,Can one of the admins verify this patch?,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1566,2018-06-20T13:12:35Z,2018-06-20T14:06:47Z,2018-06-20T14:10:40Z,CLOSED,False,1,0,1,https://github.com/pondix,Jenkins test,2,[],https://github.com/sysown/proxysql/pull/1566,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/1566#issuecomment-398756630,,ok to test,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1566,2018-06-20T13:12:35Z,2018-06-20T14:06:47Z,2018-06-20T14:10:40Z,CLOSED,False,1,0,1,https://github.com/pondix,Jenkins test,2,[],https://github.com/sysown/proxysql/pull/1566,https://github.com/pondix,4,https://github.com/sysown/proxysql/pull/1566#issuecomment-398761791,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1567,2018-06-20T14:07:23Z,2018-06-20T14:10:36Z,2018-06-20T14:10:40Z,CLOSED,False,1154,135,44,https://github.com/pondix,Jenkins test,83,[],https://github.com/sysown/proxysql/pull/1567,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/1567,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1568,2018-06-20T14:30:58Z,,2022-03-10T21:50:53Z,OPEN,False,0,0,1,https://github.com/pondix,Jenkins test,1,[],https://github.com/sysown/proxysql/pull/1568,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/1568,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1568,2018-06-20T14:30:58Z,,2022-03-10T21:50:53Z,OPEN,False,0,0,1,https://github.com/pondix,Jenkins test,1,[],https://github.com/sysown/proxysql/pull/1568,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1568#issuecomment-398771809,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1568,2018-06-20T14:30:58Z,,2022-03-10T21:50:53Z,OPEN,False,0,0,1,https://github.com/pondix,Jenkins test,1,[],https://github.com/sysown/proxysql/pull/1568,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/1568#issuecomment-399044820,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1568,2018-06-20T14:30:58Z,,2022-03-10T21:50:53Z,OPEN,False,0,0,1,https://github.com/pondix,Jenkins test,1,[],https://github.com/sysown/proxysql/pull/1568,https://github.com/pondix,4,https://github.com/sysown/proxysql/pull/1568#issuecomment-399062228,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1568,2018-06-20T14:30:58Z,,2022-03-10T21:50:53Z,OPEN,False,0,0,1,https://github.com/pondix,Jenkins test,1,[],https://github.com/sysown/proxysql/pull/1568,https://github.com/pondix,5,https://github.com/sysown/proxysql/pull/1568#issuecomment-399065850,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1568,2018-06-20T14:30:58Z,,2022-03-10T21:50:53Z,OPEN,False,0,0,1,https://github.com/pondix,Jenkins test,1,[],https://github.com/sysown/proxysql/pull/1568,https://github.com/pondix,6,https://github.com/sysown/proxysql/pull/1568#issuecomment-399148777,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1568,2018-06-20T14:30:58Z,,2022-03-10T21:50:53Z,OPEN,False,0,0,1,https://github.com/pondix,Jenkins test,1,[],https://github.com/sysown/proxysql/pull/1568,https://github.com/pondix,7,https://github.com/sysown/proxysql/pull/1568#issuecomment-399151556,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1568,2018-06-20T14:30:58Z,,2022-03-10T21:50:53Z,OPEN,False,0,0,1,https://github.com/pondix,Jenkins test,1,[],https://github.com/sysown/proxysql/pull/1568,https://github.com/pondix,8,https://github.com/sysown/proxysql/pull/1568#issuecomment-399154040,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1568,2018-06-20T14:30:58Z,,2022-03-10T21:50:53Z,OPEN,False,0,0,1,https://github.com/pondix,Jenkins test,1,[],https://github.com/sysown/proxysql/pull/1568,https://github.com/pondix,9,https://github.com/sysown/proxysql/pull/1568#issuecomment-399155672,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1568,2018-06-20T14:30:58Z,,2022-03-10T21:50:53Z,OPEN,False,0,0,1,https://github.com/pondix,Jenkins test,1,[],https://github.com/sysown/proxysql/pull/1568,https://github.com/pondix,10,https://github.com/sysown/proxysql/pull/1568#issuecomment-399159562,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1568,2018-06-20T14:30:58Z,,2022-03-10T21:50:53Z,OPEN,False,0,0,1,https://github.com/pondix,Jenkins test,1,[],https://github.com/sysown/proxysql/pull/1568,https://github.com/pondix,11,https://github.com/sysown/proxysql/pull/1568#issuecomment-399163750,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1568,2018-06-20T14:30:58Z,,2022-03-10T21:50:53Z,OPEN,False,0,0,1,https://github.com/pondix,Jenkins test,1,[],https://github.com/sysown/proxysql/pull/1568,https://github.com/pondix,12,https://github.com/sysown/proxysql/pull/1568#issuecomment-399168229,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1568,2018-06-20T14:30:58Z,,2022-03-10T21:50:53Z,OPEN,False,0,0,1,https://github.com/pondix,Jenkins test,1,[],https://github.com/sysown/proxysql/pull/1568,https://github.com/pondix,13,https://github.com/sysown/proxysql/pull/1568#issuecomment-399175828,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1568,2018-06-20T14:30:58Z,,2022-03-10T21:50:53Z,OPEN,False,0,0,1,https://github.com/pondix,Jenkins test,1,[],https://github.com/sysown/proxysql/pull/1568,https://github.com/pondix,14,https://github.com/sysown/proxysql/pull/1568#issuecomment-399239884,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1568,2018-06-20T14:30:58Z,,2022-03-10T21:50:53Z,OPEN,False,0,0,1,https://github.com/pondix,Jenkins test,1,[],https://github.com/sysown/proxysql/pull/1568,https://github.com/pondix,15,https://github.com/sysown/proxysql/pull/1568#issuecomment-399244476,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1568,2018-06-20T14:30:58Z,,2022-03-10T21:50:53Z,OPEN,False,0,0,1,https://github.com/pondix,Jenkins test,1,[],https://github.com/sysown/proxysql/pull/1568,https://github.com/pondix,16,https://github.com/sysown/proxysql/pull/1568#issuecomment-399249327,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1568,2018-06-20T14:30:58Z,,2022-03-10T21:50:53Z,OPEN,False,0,0,1,https://github.com/pondix,Jenkins test,1,[],https://github.com/sysown/proxysql/pull/1568,https://github.com/pondix,17,https://github.com/sysown/proxysql/pull/1568#issuecomment-399389434,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1568,2018-06-20T14:30:58Z,,2022-03-10T21:50:53Z,OPEN,False,0,0,1,https://github.com/pondix,Jenkins test,1,[],https://github.com/sysown/proxysql/pull/1568,https://github.com/pondix,18,https://github.com/sysown/proxysql/pull/1568#issuecomment-399423146,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1568,2018-06-20T14:30:58Z,,2022-03-10T21:50:53Z,OPEN,False,0,0,1,https://github.com/pondix,Jenkins test,1,[],https://github.com/sysown/proxysql/pull/1568,https://github.com/pondix,19,https://github.com/sysown/proxysql/pull/1568#issuecomment-399425177,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1568,2018-06-20T14:30:58Z,,2022-03-10T21:50:53Z,OPEN,False,0,0,1,https://github.com/pondix,Jenkins test,1,[],https://github.com/sysown/proxysql/pull/1568,https://github.com/pondix,20,https://github.com/sysown/proxysql/pull/1568#issuecomment-399431766,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1568,2018-06-20T14:30:58Z,,2022-03-10T21:50:53Z,OPEN,False,0,0,1,https://github.com/pondix,Jenkins test,1,[],https://github.com/sysown/proxysql/pull/1568,https://github.com/pondix,21,https://github.com/sysown/proxysql/pull/1568#issuecomment-399435454,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1568,2018-06-20T14:30:58Z,,2022-03-10T21:50:53Z,OPEN,False,0,0,1,https://github.com/pondix,Jenkins test,1,[],https://github.com/sysown/proxysql/pull/1568,https://github.com/pondix,22,https://github.com/sysown/proxysql/pull/1568#issuecomment-399438361,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1568,2018-06-20T14:30:58Z,,2022-03-10T21:50:53Z,OPEN,False,0,0,1,https://github.com/pondix,Jenkins test,1,[],https://github.com/sysown/proxysql/pull/1568,https://github.com/pondix,23,https://github.com/sysown/proxysql/pull/1568#issuecomment-399459919,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1568,2018-06-20T14:30:58Z,,2022-03-10T21:50:53Z,OPEN,False,0,0,1,https://github.com/pondix,Jenkins test,1,[],https://github.com/sysown/proxysql/pull/1568,https://github.com/pondix,24,https://github.com/sysown/proxysql/pull/1568#issuecomment-399502458,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1568,2018-06-20T14:30:58Z,,2022-03-10T21:50:53Z,OPEN,False,0,0,1,https://github.com/pondix,Jenkins test,1,[],https://github.com/sysown/proxysql/pull/1568,https://github.com/pondix,25,https://github.com/sysown/proxysql/pull/1568#issuecomment-409672144,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1568,2018-06-20T14:30:58Z,,2022-03-10T21:50:53Z,OPEN,False,0,0,1,https://github.com/pondix,Jenkins test,1,[],https://github.com/sysown/proxysql/pull/1568,https://github.com/pondix,26,https://github.com/sysown/proxysql/pull/1568#issuecomment-409673162,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1568,2018-06-20T14:30:58Z,,2022-03-10T21:50:53Z,OPEN,False,0,0,1,https://github.com/pondix,Jenkins test,1,[],https://github.com/sysown/proxysql/pull/1568,https://github.com/pondix,27,https://github.com/sysown/proxysql/pull/1568#issuecomment-409685437,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1568,2018-06-20T14:30:58Z,,2022-03-10T21:50:53Z,OPEN,False,0,0,1,https://github.com/pondix,Jenkins test,1,[],https://github.com/sysown/proxysql/pull/1568,https://github.com/pondix,28,https://github.com/sysown/proxysql/pull/1568#issuecomment-489039553,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1568,2018-06-20T14:30:58Z,,2022-03-10T21:50:53Z,OPEN,False,0,0,1,https://github.com/pondix,Jenkins test,1,[],https://github.com/sysown/proxysql/pull/1568,https://github.com/pondix,29,https://github.com/sysown/proxysql/pull/1568#issuecomment-489045456,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1568,2018-06-20T14:30:58Z,,2022-03-10T21:50:53Z,OPEN,False,0,0,1,https://github.com/pondix,Jenkins test,1,[],https://github.com/sysown/proxysql/pull/1568,https://github.com/pondix,30,https://github.com/sysown/proxysql/pull/1568#issuecomment-489061143,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1568,2018-06-20T14:30:58Z,,2022-03-10T21:50:53Z,OPEN,False,0,0,1,https://github.com/pondix,Jenkins test,1,[],https://github.com/sysown/proxysql/pull/1568,https://github.com/pondix,31,https://github.com/sysown/proxysql/pull/1568#issuecomment-489063676,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1568,2018-06-20T14:30:58Z,,2022-03-10T21:50:53Z,OPEN,False,0,0,1,https://github.com/pondix,Jenkins test,1,[],https://github.com/sysown/proxysql/pull/1568,https://github.com/alpes214,32,https://github.com/sysown/proxysql/pull/1568#issuecomment-556388582,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1568,2018-06-20T14:30:58Z,,2022-03-10T21:50:53Z,OPEN,False,0,0,1,https://github.com/pondix,Jenkins test,1,[],https://github.com/sysown/proxysql/pull/1568,https://github.com/pondix,33,https://github.com/sysown/proxysql/pull/1568#issuecomment-1064537518,,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1575,2018-06-23T22:11:33Z,2020-01-31T18:31:22Z,2020-01-31T18:31:22Z,CLOSED,False,25,5,4,https://github.com/xginn8,Add systemd readiness notification when applicable,1,[],https://github.com/sysown/proxysql/pull/1575,https://github.com/xginn8,1,https://github.com/sysown/proxysql/pull/1575,"In order to properly order units, let systemd know when ProxySQL is
ready to accept connections.","In order to properly order units, let systemd know when ProxySQL is
ready to accept connections.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1575,2018-06-23T22:11:33Z,2020-01-31T18:31:22Z,2020-01-31T18:31:22Z,CLOSED,False,25,5,4,https://github.com/xginn8,Add systemd readiness notification when applicable,1,[],https://github.com/sysown/proxysql/pull/1575,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1575#issuecomment-399713969,"In order to properly order units, let systemd know when ProxySQL is
ready to accept connections.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1575,2018-06-23T22:11:33Z,2020-01-31T18:31:22Z,2020-01-31T18:31:22Z,CLOSED,False,25,5,4,https://github.com/xginn8,Add systemd readiness notification when applicable,1,[],https://github.com/sysown/proxysql/pull/1575,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/1575#issuecomment-405010561,"In order to properly order units, let systemd know when ProxySQL is
ready to accept connections.","I suspect this will break on FreeBSD (that, afaik, will never implement systemd), or in general in systems that do not support systemd, like Alpine, Devuan (Debian without systemd), etc.
We should make sure this PR do no affect these systems.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1575,2018-06-23T22:11:33Z,2020-01-31T18:31:22Z,2020-01-31T18:31:22Z,CLOSED,False,25,5,4,https://github.com/xginn8,Add systemd readiness notification when applicable,1,[],https://github.com/sysown/proxysql/pull/1575,https://github.com/xginn8,4,https://github.com/sysown/proxysql/pull/1575#issuecomment-405285628,"In order to properly order units, let systemd know when ProxySQL is
ready to accept connections.","@renecannao I think all of the systemd-specific code segments should be gated with #ifdef SYSTEMD or similar, does that not work on some of the platforms you've listed?",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1575,2018-06-23T22:11:33Z,2020-01-31T18:31:22Z,2020-01-31T18:31:22Z,CLOSED,False,25,5,4,https://github.com/xginn8,Add systemd readiness notification when applicable,1,[],https://github.com/sysown/proxysql/pull/1575,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/1575#issuecomment-409985444,"In order to properly order units, let systemd know when ProxySQL is
ready to accept connections.","@xginn8 : in which circumstance support for systemd is enabled?
SYSTEMD seems always undefined / 0",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1575,2018-06-23T22:11:33Z,2020-01-31T18:31:22Z,2020-01-31T18:31:22Z,CLOSED,False,25,5,4,https://github.com/xginn8,Add systemd readiness notification when applicable,1,[],https://github.com/sysown/proxysql/pull/1575,https://github.com/xginn8,6,https://github.com/sysown/proxysql/pull/1575#issuecomment-410470513,"In order to properly order units, let systemd know when ProxySQL is
ready to accept connections.","The SYSTEMD variable is passed directly along from the ifeq here: https://github.com/sysown/proxysql/blob/v1.4.10/Makefile#L16, which also controls installing the service file.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1575,2018-06-23T22:11:33Z,2020-01-31T18:31:22Z,2020-01-31T18:31:22Z,CLOSED,False,25,5,4,https://github.com/xginn8,Add systemd readiness notification when applicable,1,[],https://github.com/sysown/proxysql/pull/1575,https://github.com/pondix,7,https://github.com/sysown/proxysql/pull/1575#issuecomment-474830464,"In order to properly order units, let systemd know when ProxySQL is
ready to accept connections.",Again sorry for the delay @xginn8 - can you please PR against 1.4.16 / 2.0.x?,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1576,2018-06-24T14:59:51Z,2020-01-31T18:30:50Z,2020-01-31T18:31:03Z,CLOSED,False,9,3,3,https://github.com/xginn8,Move config creation from systemd unit to tmpfiles.d,1,[],https://github.com/sysown/proxysql/pull/1576,https://github.com/xginn8,1,https://github.com/sysown/proxysql/pull/1576,Properly stop & disable proxysql.service on uninstall,Properly stop & disable proxysql.service on uninstall,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1576,2018-06-24T14:59:51Z,2020-01-31T18:30:50Z,2020-01-31T18:31:03Z,CLOSED,False,9,3,3,https://github.com/xginn8,Move config creation from systemd unit to tmpfiles.d,1,[],https://github.com/sysown/proxysql/pull/1576,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1576#issuecomment-399763219,Properly stop & disable proxysql.service on uninstall,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1576,2018-06-24T14:59:51Z,2020-01-31T18:30:50Z,2020-01-31T18:31:03Z,CLOSED,False,9,3,3,https://github.com/xginn8,Move config creation from systemd unit to tmpfiles.d,1,[],https://github.com/sysown/proxysql/pull/1576,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/1576#issuecomment-405010219,Properly stop & disable proxysql.service on uninstall,Assigning to @pondix for review,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1576,2018-06-24T14:59:51Z,2020-01-31T18:30:50Z,2020-01-31T18:31:03Z,CLOSED,False,9,3,3,https://github.com/xginn8,Move config creation from systemd unit to tmpfiles.d,1,[],https://github.com/sysown/proxysql/pull/1576,https://github.com/pondix,4,https://github.com/sysown/proxysql/pull/1576#issuecomment-474829929,Properly stop & disable proxysql.service on uninstall,"Sorry for the delay I only just saw this commit now, it is for 1.4.10 and we are on 1.4.15 (1.4.16 would be the next release in the 1.4.x series and the 2.0.x series has been released).

In 1.4.x files belong to ""root:root"", in 2.0.x files belong to ""proxysql:proxysql"" - this PR sets the files to be owned by ""mysql:mysql"" - this should be fixed.
Please check the 2.0.x release which has been updated - maybe it would be more relevant to include there.

We can possibly consider this for the 1.4.16 release, please make a PR against that branch.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1577,2018-06-25T09:06:39Z,2018-07-20T14:18:39Z,2018-07-20T14:18:39Z,CLOSED,False,40,1,1,https://github.com/banpei-dbart,Prevents the ProxySQL galera checker from running multiple times,1,[],https://github.com/sysown/proxysql/pull/1577,https://github.com/banpei-dbart,1,https://github.com/sysown/proxysql/pull/1577,"The ProxySQL Galera Checker now sets a lock if it's running. This will prevent it from running multiple times, for instance if the admin port becomes unresponsive. It also detects stale lockfiles and removes these if applicable.","The ProxySQL Galera Checker now sets a lock if it's running. This will prevent it from running multiple times, for instance if the admin port becomes unresponsive. It also detects stale lockfiles and removes these if applicable.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1577,2018-06-25T09:06:39Z,2018-07-20T14:18:39Z,2018-07-20T14:18:39Z,CLOSED,False,40,1,1,https://github.com/banpei-dbart,Prevents the ProxySQL galera checker from running multiple times,1,[],https://github.com/sysown/proxysql/pull/1577,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1577#issuecomment-399883827,"The ProxySQL Galera Checker now sets a lock if it's running. This will prevent it from running multiple times, for instance if the admin port becomes unresponsive. It also detects stale lockfiles and removes these if applicable.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1577,2018-06-25T09:06:39Z,2018-07-20T14:18:39Z,2018-07-20T14:18:39Z,CLOSED,False,40,1,1,https://github.com/banpei-dbart,Prevents the ProxySQL galera checker from running multiple times,1,[],https://github.com/sysown/proxysql/pull/1577,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/1577#issuecomment-400378819,"The ProxySQL Galera Checker now sets a lock if it's running. This will prevent it from running multiple times, for instance if the admin port becomes unresponsive. It also detects stale lockfiles and removes these if applicable.",We have a prevention mechanism (simpler) already in 1.4.9 986958a,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1577,2018-06-25T09:06:39Z,2018-07-20T14:18:39Z,2018-07-20T14:18:39Z,CLOSED,False,40,1,1,https://github.com/banpei-dbart,Prevents the ProxySQL galera checker from running multiple times,1,[],https://github.com/sysown/proxysql/pull/1577,https://github.com/banpei-dbart,4,https://github.com/sysown/proxysql/pull/1577#issuecomment-400972320,"The ProxySQL Galera Checker now sets a lock if it's running. This will prevent it from running multiple times, for instance if the admin port becomes unresponsive. It also detects stale lockfiles and removes these if applicable.","Thanks! I just spotted that in the release notes of 1.4.9.
Maybe a good thing to backport that fix to the 1.4.10 branch that I based my fix upon?",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1582,2018-06-29T10:48:03Z,2018-10-08T11:42:15Z,2018-10-08T11:42:15Z,CLOSED,False,44,2,1,https://github.com/pondix,Adding constraints for port/flagXXX/compression types,4,[],https://github.com/sysown/proxysql/pull/1582,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/1582,"Addresses #962 by adding constraints to ensure port, gtid_port, flagin and flagout are positive and within range - if the ports are out of range or the flags are negative this data will not be added on upgrade.

Should this possibly just add the rows with null / default values? Seems more risky than not adding at all.

Patch also ensures compression has a value of 0 / 1 (this is corrected on upgrade if the value is greater than one).","Addresses #962 by adding constraints to ensure port, gtid_port, flagin and flagout are positive and within range - if the ports are out of range or the flags are negative this data will not be added on upgrade.

Should this possibly just add the rows with null / default values? Seems more risky than not adding at all.

Patch also ensures compression has a value of 0 / 1 (this is corrected on upgrade if the value is greater than one).",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1582,2018-06-29T10:48:03Z,2018-10-08T11:42:15Z,2018-10-08T11:42:15Z,CLOSED,False,44,2,1,https://github.com/pondix,Adding constraints for port/flagXXX/compression types,4,[],https://github.com/sysown/proxysql/pull/1582,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1582#issuecomment-401774701,"Addresses #962 by adding constraints to ensure port, gtid_port, flagin and flagout are positive and within range - if the ports are out of range or the flags are negative this data will not be added on upgrade.

Should this possibly just add the rows with null / default values? Seems more risky than not adding at all.

Patch also ensures compression has a value of 0 / 1 (this is corrected on upgrade if the value is greater than one).",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1582,2018-06-29T10:48:03Z,2018-10-08T11:42:15Z,2018-10-08T11:42:15Z,CLOSED,False,44,2,1,https://github.com/pondix,Adding constraints for port/flagXXX/compression types,4,[],https://github.com/sysown/proxysql/pull/1582,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/1582#issuecomment-401787478,"Addresses #962 by adding constraints to ensure port, gtid_port, flagin and flagout are positive and within range - if the ports are out of range or the flags are negative this data will not be added on upgrade.

Should this possibly just add the rows with null / default values? Seems more risky than not adding at all.

Patch also ensures compression has a value of 0 / 1 (this is corrected on upgrade if the value is greater than one).","Code is correct but automated build tests are failing since gtid_port DEFAULT 0 violates the constraint gtid_port > 0.
What should we set the default gtid_port to instead?",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1582,2018-06-29T10:48:03Z,2018-10-08T11:42:15Z,2018-10-08T11:42:15Z,CLOSED,False,44,2,1,https://github.com/pondix,Adding constraints for port/flagXXX/compression types,4,[],https://github.com/sysown/proxysql/pull/1582,https://github.com/pondix,4,https://github.com/sysown/proxysql/pull/1582#issuecomment-401846176,"Addresses #962 by adding constraints to ensure port, gtid_port, flagin and flagout are positive and within range - if the ports are out of range or the flags are negative this data will not be added on upgrade.

Should this possibly just add the rows with null / default values? Seems more risky than not adding at all.

Patch also ensures compression has a value of 0 / 1 (this is corrected on upgrade if the value is greater than one).",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1582,2018-06-29T10:48:03Z,2018-10-08T11:42:15Z,2018-10-08T11:42:15Z,CLOSED,False,44,2,1,https://github.com/pondix,Adding constraints for port/flagXXX/compression types,4,[],https://github.com/sysown/proxysql/pull/1582,https://github.com/pondix,5,https://github.com/sysown/proxysql/pull/1582#issuecomment-427797002,"Addresses #962 by adding constraints to ensure port, gtid_port, flagin and flagout are positive and within range - if the ports are out of range or the flags are negative this data will not be added on upgrade.

Should this possibly just add the rows with null / default values? Seems more risky than not adding at all.

Patch also ensures compression has a value of 0 / 1 (this is corrected on upgrade if the value is greater than one).",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1587,2018-07-02T11:11:28Z,2018-09-21T14:48:44Z,2019-10-29T00:04:50Z,MERGED,True,1,0,1,https://github.com/pondix,Fix to persist mysql_group_replication_hostgroups v2.0,1,[],https://github.com/sysown/proxysql/pull/1587,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/1587,After a restart mysql_group_replication_hostgroups was empty as configuration was not saved to disk,After a restart mysql_group_replication_hostgroups was empty as configuration was not saved to disk,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1604,2018-07-11T14:14:01Z,2018-07-14T08:26:00Z,2018-07-14T08:26:07Z,MERGED,True,2,2,1,https://github.com/hfm,Fix typo,1,[],https://github.com/sysown/proxysql/pull/1604,https://github.com/hfm,1,https://github.com/sysown/proxysql/pull/1604,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1604,2018-07-11T14:14:01Z,2018-07-14T08:26:00Z,2018-07-14T08:26:07Z,MERGED,True,2,2,1,https://github.com/hfm,Fix typo,1,[],https://github.com/sysown/proxysql/pull/1604,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1604#issuecomment-404185847,,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1604,2018-07-11T14:14:01Z,2018-07-14T08:26:00Z,2018-07-14T08:26:07Z,MERGED,True,2,2,1,https://github.com/hfm,Fix typo,1,[],https://github.com/sysown/proxysql/pull/1604,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/1604#issuecomment-405008406,,Thank you,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1612,2018-07-15T20:52:41Z,2018-07-19T08:03:42Z,2018-07-19T08:05:36Z,MERGED,True,14,15,2,https://github.com/stevenh,Fixed STMT_SEND_LONG_DATA processing,1,[],https://github.com/sysown/proxysql/pull/1612,https://github.com/stevenh,1,https://github.com/sysown/proxysql/pull/1612,"Fixed STMT_SEND_LONG_DATA processing which was incorrectly reading data from the STMT_EXECUTE packet, causing corruption of any subsequent parameters.
Also:

Corrected some comment indentation.

Fixes: #1283","Fixed STMT_SEND_LONG_DATA processing which was incorrectly reading data from the STMT_EXECUTE packet, causing corruption of any subsequent parameters.
Also:

Corrected some comment indentation.

Fixes: #1283",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1612,2018-07-15T20:52:41Z,2018-07-19T08:03:42Z,2018-07-19T08:05:36Z,MERGED,True,14,15,2,https://github.com/stevenh,Fixed STMT_SEND_LONG_DATA processing,1,[],https://github.com/sysown/proxysql/pull/1612,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1612#issuecomment-405117756,"Fixed STMT_SEND_LONG_DATA processing which was incorrectly reading data from the STMT_EXECUTE packet, causing corruption of any subsequent parameters.
Also:

Corrected some comment indentation.

Fixes: #1283",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1612,2018-07-15T20:52:41Z,2018-07-19T08:03:42Z,2018-07-19T08:05:36Z,MERGED,True,14,15,2,https://github.com/stevenh,Fixed STMT_SEND_LONG_DATA processing,1,[],https://github.com/sysown/proxysql/pull/1612,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/1612#issuecomment-405981210,"Fixed STMT_SEND_LONG_DATA processing which was incorrectly reading data from the STMT_EXECUTE packet, causing corruption of any subsequent parameters.
Also:

Corrected some comment indentation.

Fixes: #1283","@stevenh: the commit looks good.
The current implementation works only if there is no more parameters after the one sent with STMT_SEND_LONG_DATA
The only change I would apply to this commit is that the declaration of MySQL_Protocol::get_binds_from_pkt() doesn't need to be changed. Instead, in the function this can be used:
StmtLongDataHandler *sldh = myds->sess->SLDH;",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1612,2018-07-15T20:52:41Z,2018-07-19T08:03:42Z,2018-07-19T08:05:36Z,MERGED,True,14,15,2,https://github.com/stevenh,Fixed STMT_SEND_LONG_DATA processing,1,[],https://github.com/sysown/proxysql/pull/1612,https://github.com/stevenh,4,https://github.com/sysown/proxysql/pull/1612#issuecomment-406048191,"Fixed STMT_SEND_LONG_DATA processing which was incorrectly reading data from the STMT_EXECUTE packet, causing corruption of any subsequent parameters.
Also:

Corrected some comment indentation.

Fixes: #1283",Cool thanks for the review @renecannao updated to eliminate the extra param.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1612,2018-07-15T20:52:41Z,2018-07-19T08:03:42Z,2018-07-19T08:05:36Z,MERGED,True,14,15,2,https://github.com/stevenh,Fixed STMT_SEND_LONG_DATA processing,1,[],https://github.com/sysown/proxysql/pull/1612,https://github.com/pondix,5,https://github.com/sysown/proxysql/pull/1612#issuecomment-406063912,"Fixed STMT_SEND_LONG_DATA processing which was incorrectly reading data from the STMT_EXECUTE packet, causing corruption of any subsequent parameters.
Also:

Corrected some comment indentation.

Fixes: #1283",ok to test,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1612,2018-07-15T20:52:41Z,2018-07-19T08:03:42Z,2018-07-19T08:05:36Z,MERGED,True,14,15,2,https://github.com/stevenh,Fixed STMT_SEND_LONG_DATA processing,1,[],https://github.com/sysown/proxysql/pull/1612,https://github.com/renecannao,6,https://github.com/sysown/proxysql/pull/1612#issuecomment-406191429,"Fixed STMT_SEND_LONG_DATA processing which was incorrectly reading data from the STMT_EXECUTE packet, causing corruption of any subsequent parameters.
Also:

Corrected some comment indentation.

Fixes: #1283",Thank you @stevenh,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1617,2018-07-24T05:22:30Z,2018-07-25T12:37:11Z,2018-07-25T12:37:22Z,MERGED,True,10,6,3,https://github.com/steven200796,"cache purging request on query rule basis, issue #1013",1,[],https://github.com/sysown/proxysql/pull/1617,https://github.com/steven200796,1,https://github.com/sysown/proxysql/pull/1617,"Addresses issue 1013, tested
#1013","Addresses issue 1013, tested
#1013",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1617,2018-07-24T05:22:30Z,2018-07-25T12:37:11Z,2018-07-25T12:37:22Z,MERGED,True,10,6,3,https://github.com/steven200796,"cache purging request on query rule basis, issue #1013",1,[],https://github.com/sysown/proxysql/pull/1617,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1617#issuecomment-407285479,"Addresses issue 1013, tested
#1013",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1617,2018-07-24T05:22:30Z,2018-07-25T12:37:11Z,2018-07-25T12:37:22Z,MERGED,True,10,6,3,https://github.com/steven200796,"cache purging request on query rule basis, issue #1013",1,[],https://github.com/sysown/proxysql/pull/1617,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/1617#issuecomment-407739735,"Addresses issue 1013, tested
#1013",Thank you for the PR!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1619,2018-07-25T05:18:56Z,2018-10-28T22:08:51Z,2018-10-28T22:09:01Z,CLOSED,False,31,4,2,https://github.com/steven200796,Support 'PROXYSQL FLUSH CACHE',1,[],https://github.com/sysown/proxysql/pull/1619,https://github.com/steven200796,1,https://github.com/sysown/proxysql/pull/1619,"Support flushing cache, correctly maintains stats.","Support flushing cache, correctly maintains stats.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1619,2018-07-25T05:18:56Z,2018-10-28T22:08:51Z,2018-10-28T22:09:01Z,CLOSED,False,31,4,2,https://github.com/steven200796,Support 'PROXYSQL FLUSH CACHE',1,[],https://github.com/sysown/proxysql/pull/1619,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1619#issuecomment-407636699,"Support flushing cache, correctly maintains stats.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1619,2018-07-25T05:18:56Z,2018-10-28T22:08:51Z,2018-10-28T22:09:01Z,CLOSED,False,31,4,2,https://github.com/steven200796,Support 'PROXYSQL FLUSH CACHE',1,[],https://github.com/sysown/proxysql/pull/1619,https://github.com/steven200796,3,https://github.com/sysown/proxysql/pull/1619#issuecomment-413974642,"Support flushing cache, correctly maintains stats.",Bump!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1619,2018-07-25T05:18:56Z,2018-10-28T22:08:51Z,2018-10-28T22:09:01Z,CLOSED,False,31,4,2,https://github.com/steven200796,Support 'PROXYSQL FLUSH CACHE',1,[],https://github.com/sysown/proxysql/pull/1619,https://github.com/pondix,4,https://github.com/sysown/proxysql/pull/1619#issuecomment-419078244,"Support flushing cache, correctly maintains stats.",ok to test,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1619,2018-07-25T05:18:56Z,2018-10-28T22:08:51Z,2018-10-28T22:09:01Z,CLOSED,False,31,4,2,https://github.com/steven200796,Support 'PROXYSQL FLUSH CACHE',1,[],https://github.com/sysown/proxysql/pull/1619,https://github.com/steven200796,5,https://github.com/sysown/proxysql/pull/1619#issuecomment-429381228,"Support flushing cache, correctly maintains stats.",One more bump lol,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1619,2018-07-25T05:18:56Z,2018-10-28T22:08:51Z,2018-10-28T22:09:01Z,CLOSED,False,31,4,2,https://github.com/steven200796,Support 'PROXYSQL FLUSH CACHE',1,[],https://github.com/sysown/proxysql/pull/1619,https://github.com/renecannao,6,https://github.com/sysown/proxysql/pull/1619#issuecomment-433746055,"Support flushing cache, correctly maintains stats.","@steven200796 : from this pull request, I think only the change in ProxySQL_Admin.cpp is valid.
Reducing the ref_count on KV_BtreeArray::empty() is not right, because it is possible that the entry is currently in use by another thread.
Furthermore, by design KV_BtreeArray::empty() doesn't free the entry because this is delegated to the garbage collector, Query_Cache::purgeHash_thread() .
I created a new PR replacing this one: #1761 .
Once again, thank you for the PR.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1643,2018-08-13T15:24:14Z,2018-08-13T15:27:19Z,2018-08-13T15:27:47Z,MERGED,True,35,0,1,https://github.com/vixns,read mysql_galera_hostgroups from config file,1,[],https://github.com/sysown/proxysql/pull/1643,https://github.com/vixns,1,https://github.com/sysown/proxysql/pull/1643,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1643,2018-08-13T15:24:14Z,2018-08-13T15:27:19Z,2018-08-13T15:27:47Z,MERGED,True,35,0,1,https://github.com/vixns,read mysql_galera_hostgroups from config file,1,[],https://github.com/sysown/proxysql/pull/1643,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1643#issuecomment-412558329,,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1643,2018-08-13T15:24:14Z,2018-08-13T15:27:19Z,2018-08-13T15:27:47Z,MERGED,True,35,0,1,https://github.com/vixns,read mysql_galera_hostgroups from config file,1,[],https://github.com/sysown/proxysql/pull/1643,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/1643#issuecomment-412558588,,Thank you @vixns !,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1657,2018-08-24T05:53:33Z,2018-08-28T09:20:31Z,2018-08-28T09:20:35Z,MERGED,True,4,7,1,https://github.com/pondix,Fixes RO check for Aurora,1,[],https://github.com/sysown/proxysql/pull/1657,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/1657,Addresses a bug where the innodb_read_only check is not processed while monitoring an Aurora instance - #1641,Addresses a bug where the innodb_read_only check is not processed while monitoring an Aurora instance - #1641,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1657,2018-08-24T05:53:33Z,2018-08-28T09:20:31Z,2018-08-28T09:20:35Z,MERGED,True,4,7,1,https://github.com/pondix,Fixes RO check for Aurora,1,[],https://github.com/sysown/proxysql/pull/1657,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1657#issuecomment-415662847,Addresses a bug where the innodb_read_only check is not processed while monitoring an Aurora instance - #1641,retest this please,True,{'HEART': ['https://github.com/srikiraju']}
sysown/proxysql,https://github.com/sysown/proxysql,1657,2018-08-24T05:53:33Z,2018-08-28T09:20:31Z,2018-08-28T09:20:35Z,MERGED,True,4,7,1,https://github.com/pondix,Fixes RO check for Aurora,1,[],https://github.com/sysown/proxysql/pull/1657,https://github.com/srikiraju,3,https://github.com/sysown/proxysql/pull/1657#issuecomment-416393622,Addresses a bug where the innodb_read_only check is not processed while monitoring an Aurora instance - #1641,This fixed it for me,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1657,2018-08-24T05:53:33Z,2018-08-28T09:20:31Z,2018-08-28T09:20:35Z,MERGED,True,4,7,1,https://github.com/pondix,Fixes RO check for Aurora,1,[],https://github.com/sysown/proxysql/pull/1657,https://github.com/srikiraju,4,https://github.com/sysown/proxysql/pull/1657#issuecomment-416460274,Addresses a bug where the innodb_read_only check is not processed while monitoring an Aurora instance - #1641,?,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1660,2018-08-28T14:08:47Z,2018-08-28T14:12:03Z,2018-08-28T14:12:13Z,MERGED,True,1,1,1,https://github.com/mrosata,fixed broken link,1,[],https://github.com/sysown/proxysql/pull/1660,https://github.com/mrosata,1,https://github.com/sysown/proxysql/pull/1660,"The google forums link points at Google Groups, but not at any particular forum. It was missing part of the uri path","The google forums link points at Google Groups, but not at any particular forum. It was missing part of the uri path",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1660,2018-08-28T14:08:47Z,2018-08-28T14:12:03Z,2018-08-28T14:12:13Z,MERGED,True,1,1,1,https://github.com/mrosata,fixed broken link,1,[],https://github.com/sysown/proxysql/pull/1660,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1660#issuecomment-416599507,"The google forums link points at Google Groups, but not at any particular forum. It was missing part of the uri path",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1660,2018-08-28T14:08:47Z,2018-08-28T14:12:03Z,2018-08-28T14:12:13Z,MERGED,True,1,1,1,https://github.com/mrosata,fixed broken link,1,[],https://github.com/sysown/proxysql/pull/1660,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/1660#issuecomment-416599568,"The google forums link points at Google Groups, but not at any particular forum. It was missing part of the uri path",Thanks,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1676,2018-09-06T19:15:34Z,2018-09-06T19:41:50Z,2018-09-06T19:41:53Z,MERGED,True,105,53,2,https://github.com/renecannao,Enable mysql_query_rules_fast_routing in ProxySQL Cluster #1674,1,[],https://github.com/sysown/proxysql/pull/1676,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/1676,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1676,2018-09-06T19:15:34Z,2018-09-06T19:41:50Z,2018-09-06T19:41:53Z,MERGED,True,105,53,2,https://github.com/renecannao,Enable mysql_query_rules_fast_routing in ProxySQL Cluster #1674,1,[],https://github.com/sysown/proxysql/pull/1676,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1676#issuecomment-419213964,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1677,2018-09-06T19:30:54Z,2018-09-06T19:39:53Z,2018-09-06T19:40:21Z,MERGED,True,27,19,1,https://github.com/renecannao,Bug fix for crash related to binding on IPv6 #1646,1,[],https://github.com/sysown/proxysql/pull/1677,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/1677,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1680,2018-09-08T20:22:43Z,2018-09-09T15:13:13Z,2018-09-09T15:13:13Z,MERGED,True,1,1,1,https://github.com/mcrauwel,fix Debian8 package,1,[],https://github.com/sysown/proxysql/pull/1680,https://github.com/mcrauwel,1,https://github.com/sysown/proxysql/pull/1680,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1680,2018-09-08T20:22:43Z,2018-09-09T15:13:13Z,2018-09-09T15:13:13Z,MERGED,True,1,1,1,https://github.com/mcrauwel,fix Debian8 package,1,[],https://github.com/sysown/proxysql/pull/1680,https://github.com/mcrauwel,2,https://github.com/sysown/proxysql/pull/1680#issuecomment-419670474,,this fixes #1679,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1680,2018-09-08T20:22:43Z,2018-09-09T15:13:13Z,2018-09-09T15:13:13Z,MERGED,True,1,1,1,https://github.com/mcrauwel,fix Debian8 package,1,[],https://github.com/sysown/proxysql/pull/1680,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/1680#issuecomment-419670644,,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1682,2018-09-10T15:55:37Z,2018-09-10T16:44:49Z,2018-09-10T16:44:53Z,MERGED,True,50,51,3,https://github.com/renecannao,Support for Clickhouse in 2.0,1,[],https://github.com/sysown/proxysql/pull/1682,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/1682,"Support for Clickhouse wasn't able to compile due to conflicting definition
after the introduction of mysql_users.comment column","Support for Clickhouse wasn't able to compile due to conflicting definition
after the introduction of mysql_users.comment column",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1682,2018-09-10T15:55:37Z,2018-09-10T16:44:49Z,2018-09-10T16:44:53Z,MERGED,True,50,51,3,https://github.com/renecannao,Support for Clickhouse in 2.0,1,[],https://github.com/sysown/proxysql/pull/1682,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1682#issuecomment-419968507,"Support for Clickhouse wasn't able to compile due to conflicting definition
after the introduction of mysql_users.comment column",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1682,2018-09-10T15:55:37Z,2018-09-10T16:44:49Z,2018-09-10T16:44:53Z,MERGED,True,50,51,3,https://github.com/renecannao,Support for Clickhouse in 2.0,1,[],https://github.com/sysown/proxysql/pull/1682,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/1682#issuecomment-419974771,"Support for Clickhouse wasn't able to compile due to conflicting definition
after the introduction of mysql_users.comment column",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1686,2018-09-12T12:18:23Z,2019-01-14T14:54:58Z,2019-01-14T14:54:58Z,MERGED,True,40,3,2,https://github.com/aminet,Debian controlfile and systemd's service update. ,1,[],https://github.com/sysown/proxysql/pull/1686,https://github.com/aminet,1,https://github.com/sysown/proxysql/pull/1686,"Package ctl file uses service file and not /etc/init.d and service file has more systemd's parameters.
Both have changes to make proxysql running under a non root user (arbitrary named proxysql).
(same PR #1481 but for v2.0.0 branch with little improvements: AF_ALG and RuntimeDirectory)","Package ctl file uses service file and not /etc/init.d and service file has more systemd's parameters.
Both have changes to make proxysql running under a non root user (arbitrary named proxysql).
(same PR #1481 but for v2.0.0 branch with little improvements: AF_ALG and RuntimeDirectory)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1686,2018-09-12T12:18:23Z,2019-01-14T14:54:58Z,2019-01-14T14:54:58Z,MERGED,True,40,3,2,https://github.com/aminet,Debian controlfile and systemd's service update. ,1,[],https://github.com/sysown/proxysql/pull/1686,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1686#issuecomment-420628084,"Package ctl file uses service file and not /etc/init.d and service file has more systemd's parameters.
Both have changes to make proxysql running under a non root user (arbitrary named proxysql).
(same PR #1481 but for v2.0.0 branch with little improvements: AF_ALG and RuntimeDirectory)",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1698,2018-09-18T14:58:57Z,2018-09-21T14:44:29Z,2018-09-21T14:44:29Z,MERGED,True,38,15,3,https://github.com/renecannao,Add new variable mysql-query_cache_stores_empty_result #1693,1,[],https://github.com/sysown/proxysql/pull/1698,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/1698,The variable controls if resultset withour rows will be cached or not,The variable controls if resultset withour rows will be cached or not,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1698,2018-09-18T14:58:57Z,2018-09-21T14:44:29Z,2018-09-21T14:44:29Z,MERGED,True,38,15,3,https://github.com/renecannao,Add new variable mysql-query_cache_stores_empty_result #1693,1,[],https://github.com/sysown/proxysql/pull/1698,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1698#issuecomment-422471021,The variable controls if resultset withour rows will be cached or not,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1699,2018-09-18T14:59:11Z,2018-09-21T14:44:41Z,2019-10-29T00:04:45Z,MERGED,True,39,16,3,https://github.com/renecannao, Add new variable mysql-query_cache_stores_empty_result #1693,1,[],https://github.com/sysown/proxysql/pull/1699,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/1699,The variable controls if resultset withour rows will be cached or not,The variable controls if resultset withour rows will be cached or not,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1699,2018-09-18T14:59:11Z,2018-09-21T14:44:41Z,2019-10-29T00:04:45Z,MERGED,True,39,16,3,https://github.com/renecannao, Add new variable mysql-query_cache_stores_empty_result #1693,1,[],https://github.com/sysown/proxysql/pull/1699,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1699#issuecomment-422470930,The variable controls if resultset withour rows will be cached or not,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1699,2018-09-18T14:59:11Z,2018-09-21T14:44:41Z,2019-10-29T00:04:45Z,MERGED,True,39,16,3,https://github.com/renecannao, Add new variable mysql-query_cache_stores_empty_result #1693,1,[],https://github.com/sysown/proxysql/pull/1699,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/1699#issuecomment-422476933,The variable controls if resultset withour rows will be cached or not,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1702,2018-09-21T06:10:14Z,2018-09-21T14:42:41Z,2018-09-21T14:42:41Z,MERGED,True,69,0,2,https://github.com/renecannao,V1.4.11 names tz,4,[],https://github.com/sysown/proxysql/pull/1702,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/1702,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1704,2018-09-21T19:11:28Z,2018-09-28T13:24:00Z,2019-10-29T00:04:41Z,MERGED,True,129,64,3,https://github.com/pondix,Enable mysql_query_rules_fast_routing in ProxySQL Cluster,4,[],https://github.com/sysown/proxysql/pull/1704,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/1704,#1675,#1675,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1704,2018-09-21T19:11:28Z,2018-09-28T13:24:00Z,2019-10-29T00:04:41Z,MERGED,True,129,64,3,https://github.com/pondix,Enable mysql_query_rules_fast_routing in ProxySQL Cluster,4,[],https://github.com/sysown/proxysql/pull/1704,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/1704#issuecomment-423821877,#1675,"This PR is also depending from #1696 , because #1696 will add yet another column",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1704,2018-09-21T19:11:28Z,2018-09-28T13:24:00Z,2019-10-29T00:04:41Z,MERGED,True,129,64,3,https://github.com/pondix,Enable mysql_query_rules_fast_routing in ProxySQL Cluster,4,[],https://github.com/sysown/proxysql/pull/1704,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/1704#issuecomment-425420867,#1675,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1713,2018-09-26T12:23:06Z,2018-09-28T00:24:38Z,2018-09-28T00:24:43Z,MERGED,True,103,62,4,https://github.com/renecannao,"Do not cache empty resultset, rule setting #1696",1,[],https://github.com/sysown/proxysql/pull/1713,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/1713,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1713,2018-09-26T12:23:06Z,2018-09-28T00:24:38Z,2018-09-28T00:24:43Z,MERGED,True,103,62,4,https://github.com/renecannao,"Do not cache empty resultset, rule setting #1696",1,[],https://github.com/sysown/proxysql/pull/1713,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1713#issuecomment-424910831,,"build failed due to maintenance work in progress, needs to be re-run",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1713,2018-09-26T12:23:06Z,2018-09-28T00:24:38Z,2018-09-28T00:24:43Z,MERGED,True,103,62,4,https://github.com/renecannao,"Do not cache empty resultset, rule setting #1696",1,[],https://github.com/sysown/proxysql/pull/1713,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/1713#issuecomment-424910838,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1721,2018-09-29T14:07:39Z,2018-09-29T20:30:28Z,2019-10-29T00:04:34Z,MERGED,True,402,197,6,https://github.com/renecannao,V2.0.0 1528,3,[],https://github.com/sysown/proxysql/pull/1721,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/1721,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1741,2018-10-17T15:06:44Z,2018-10-18T11:12:43Z,2019-10-29T00:04:30Z,MERGED,True,52,6,1,https://github.com/pondix,Adding constraints for port/flagXXX/compression types,3,[],https://github.com/sysown/proxysql/pull/1741,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/1741,#962,#962,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1743,2018-10-17T23:29:19Z,2018-10-25T15:19:50Z,2019-10-29T00:04:28Z,MERGED,True,1,1,1,https://github.com/pondix,Fixes user / schema column order ,1,[],https://github.com/sysown/proxysql/pull/1743,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/1743,#1720,#1720,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1749,2018-10-19T17:11:34Z,2018-10-25T15:18:56Z,2019-10-29T00:04:24Z,MERGED,True,10,2,2,https://github.com/renecannao,Add support for SET sql_mode = CONCAT(...),2,[],https://github.com/sysown/proxysql/pull/1749,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/1749,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1761,2018-10-28T22:04:04Z,2018-10-28T22:33:58Z,2019-10-29T00:04:22Z,MERGED,True,11,0,1,https://github.com/renecannao,Add support for PROXYSQL FLUSH QUERY CACHE,1,[],https://github.com/sysown/proxysql/pull/1761,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/1761,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1764,2018-10-31T15:10:35Z,2019-01-20T22:09:44Z,2019-06-27T11:39:55Z,MERGED,True,41,2,1,https://github.com/bogomips,"""/etc/init.d/proxysql stop"" stops even processes running in docker containers",1,[],https://github.com/sysown/proxysql/pull/1764,https://github.com/bogomips,1,https://github.com/sysown/proxysql/pull/1764,"The current init script kills every process named ""proxysql""
In this way, even instances of proxysql running in a docker container are killed.
My solution works by wrapping the ""kill $i"" command in a ""safe_kill"" function.
""safe_kill"" kills the process id only if it is not running inside a docker container.
Flow:


finding the parent id  of the process we are going to kill
(parent_pid=ps -f $pid | grep proxysql |  awk '{print $3}')


checking if the parent id is a docker instance
(is_pid_child_of_docker $parent_pid)


if the process id has not a docker instance as a parent, then it kills the process","The current init script kills every process named ""proxysql""
In this way, even instances of proxysql running in a docker container are killed.
My solution works by wrapping the ""kill $i"" command in a ""safe_kill"" function.
""safe_kill"" kills the process id only if it is not running inside a docker container.
Flow:


finding the parent id  of the process we are going to kill
(parent_pid=ps -f $pid | grep proxysql |  awk '{print $3}')


checking if the parent id is a docker instance
(is_pid_child_of_docker $parent_pid)


if the process id has not a docker instance as a parent, then it kills the process",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1764,2018-10-31T15:10:35Z,2019-01-20T22:09:44Z,2019-06-27T11:39:55Z,MERGED,True,41,2,1,https://github.com/bogomips,"""/etc/init.d/proxysql stop"" stops even processes running in docker containers",1,[],https://github.com/sysown/proxysql/pull/1764,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1764#issuecomment-434725331,"The current init script kills every process named ""proxysql""
In this way, even instances of proxysql running in a docker container are killed.
My solution works by wrapping the ""kill $i"" command in a ""safe_kill"" function.
""safe_kill"" kills the process id only if it is not running inside a docker container.
Flow:


finding the parent id  of the process we are going to kill
(parent_pid=ps -f $pid | grep proxysql |  awk '{print $3}')


checking if the parent id is a docker instance
(is_pid_child_of_docker $parent_pid)


if the process id has not a docker instance as a parent, then it kills the process",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1764,2018-10-31T15:10:35Z,2019-01-20T22:09:44Z,2019-06-27T11:39:55Z,MERGED,True,41,2,1,https://github.com/bogomips,"""/etc/init.d/proxysql stop"" stops even processes running in docker containers",1,[],https://github.com/sysown/proxysql/pull/1764,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/1764#issuecomment-455907195,"The current init script kills every process named ""proxysql""
In this way, even instances of proxysql running in a docker container are killed.
My solution works by wrapping the ""kill $i"" command in a ""safe_kill"" function.
""safe_kill"" kills the process id only if it is not running inside a docker container.
Flow:


finding the parent id  of the process we are going to kill
(parent_pid=ps -f $pid | grep proxysql |  awk '{print $3}')


checking if the parent id is a docker instance
(is_pid_child_of_docker $parent_pid)


if the process id has not a docker instance as a parent, then it kills the process","Thanks for the PR!
Which distros / versions has this been tested on?",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1764,2018-10-31T15:10:35Z,2019-01-20T22:09:44Z,2019-06-27T11:39:55Z,MERGED,True,41,2,1,https://github.com/bogomips,"""/etc/init.d/proxysql stop"" stops even processes running in docker containers",1,[],https://github.com/sysown/proxysql/pull/1764,https://github.com/bogomips,4,https://github.com/sysown/proxysql/pull/1764#issuecomment-506311020,"The current init script kills every process named ""proxysql""
In this way, even instances of proxysql running in a docker container are killed.
My solution works by wrapping the ""kill $i"" command in a ""safe_kill"" function.
""safe_kill"" kills the process id only if it is not running inside a docker container.
Flow:


finding the parent id  of the process we are going to kill
(parent_pid=ps -f $pid | grep proxysql |  awk '{print $3}')


checking if the parent id is a docker instance
(is_pid_child_of_docker $parent_pid)


if the process id has not a docker instance as a parent, then it kills the process","sorry for the delay, it was tested on centos7",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1765,2018-10-31T16:15:48Z,2018-11-02T01:59:46Z,2019-10-29T00:04:20Z,MERGED,True,148,22,3,https://github.com/renecannao,Add support for writer_is_also_reader=2,1,[],https://github.com/sysown/proxysql/pull/1765,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/1765,"This functionality is enabled for:

mysql_galera_hostgroups
mysql_group_replication_hostgroups

If writer_is_also_reader=2 and there are servers in
backup_writer_hostgroup, only these servers will be used
in reader_hostgroup","This functionality is enabled for:

mysql_galera_hostgroups
mysql_group_replication_hostgroups

If writer_is_also_reader=2 and there are servers in
backup_writer_hostgroup, only these servers will be used
in reader_hostgroup",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1766,2018-10-31T22:55:39Z,2018-11-02T02:00:04Z,2019-10-29T00:05:23Z,MERGED,True,113,78,4,https://github.com/renecannao,Preparing for support of cache_timeout,1,[],https://github.com/sysown/proxysql/pull/1766,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/1766,"Adding column mysql_query_rules.cache_timeout .
Functionality is not implemented yet, only the column is added.","Adding column mysql_query_rules.cache_timeout .
Functionality is not implemented yet, only the column is added.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1771,2018-11-02T18:29:58Z,2018-11-02T21:06:23Z,2018-11-02T21:06:23Z,CLOSED,False,22206,4943,120,https://github.com/ernstae,Load Group Replication Hostgroup Information from Configuration File,462,[],https://github.com/sysown/proxysql/pull/1771,https://github.com/ernstae,1,https://github.com/sysown/proxysql/pull/1771,"Purpose

Fix for #1718
reads values for hard-coded variables into the runtime configuration from the configuration file.

Note
This is my first contribution to this repo, and I attempted to follow the same convention that was used for the Galera hostgroups.  Hopefully this is deemed helpful. (oops, I probably need to rebase against v1.4.0?)","Purpose

Fix for #1718
reads values for hard-coded variables into the runtime configuration from the configuration file.

Note
This is my first contribution to this repo, and I attempted to follow the same convention that was used for the Galera hostgroups.  Hopefully this is deemed helpful. (oops, I probably need to rebase against v1.4.0?)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1771,2018-11-02T18:29:58Z,2018-11-02T21:06:23Z,2018-11-02T21:06:23Z,CLOSED,False,22206,4943,120,https://github.com/ernstae,Load Group Replication Hostgroup Information from Configuration File,462,[],https://github.com/sysown/proxysql/pull/1771,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1771#issuecomment-435469750,"Purpose

Fix for #1718
reads values for hard-coded variables into the runtime configuration from the configuration file.

Note
This is my first contribution to this repo, and I attempted to follow the same convention that was used for the Galera hostgroups.  Hopefully this is deemed helpful. (oops, I probably need to rebase against v1.4.0?)",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1771,2018-11-02T18:29:58Z,2018-11-02T21:06:23Z,2018-11-02T21:06:23Z,CLOSED,False,22206,4943,120,https://github.com/ernstae,Load Group Replication Hostgroup Information from Configuration File,462,[],https://github.com/sysown/proxysql/pull/1771,https://github.com/ernstae,3,https://github.com/sysown/proxysql/pull/1771#issuecomment-435509174,"Purpose

Fix for #1718
reads values for hard-coded variables into the runtime configuration from the configuration file.

Note
This is my first contribution to this repo, and I attempted to follow the same convention that was used for the Galera hostgroups.  Hopefully this is deemed helpful. (oops, I probably need to rebase against v1.4.0?)",Closing this and making the PR against the v1.4.13 branch (which appears to be the active dev branch right now),True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1772,2018-11-02T21:05:47Z,2018-11-08T19:28:22Z,2018-11-08T19:30:50Z,MERGED,True,6,3,1,https://github.com/ernstae,Fix: Read Group Replication Hostgroup Attributes from Configuration File (issue:1718),1,[],https://github.com/sysown/proxysql/pull/1772,https://github.com/ernstae,1,https://github.com/sysown/proxysql/pull/1772,"Purpose

Fix for #1718
reads values for hard-coded variables into the runtime configuration from the configuration file.

Note
This is my first contribution to this repo, and I attempted to follow the same convention that was used for the Galera hostgroups.  Hopefully this is deemed helpful. (oops, I probably need to rebase against v1.4.0?)","Purpose

Fix for #1718
reads values for hard-coded variables into the runtime configuration from the configuration file.

Note
This is my first contribution to this repo, and I attempted to follow the same convention that was used for the Galera hostgroups.  Hopefully this is deemed helpful. (oops, I probably need to rebase against v1.4.0?)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1772,2018-11-02T21:05:47Z,2018-11-08T19:28:22Z,2018-11-08T19:30:50Z,MERGED,True,6,3,1,https://github.com/ernstae,Fix: Read Group Replication Hostgroup Attributes from Configuration File (issue:1718),1,[],https://github.com/sysown/proxysql/pull/1772,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1772#issuecomment-435509338,"Purpose

Fix for #1718
reads values for hard-coded variables into the runtime configuration from the configuration file.

Note
This is my first contribution to this repo, and I attempted to follow the same convention that was used for the Galera hostgroups.  Hopefully this is deemed helpful. (oops, I probably need to rebase against v1.4.0?)",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1772,2018-11-02T21:05:47Z,2018-11-08T19:28:22Z,2018-11-08T19:30:50Z,MERGED,True,6,3,1,https://github.com/ernstae,Fix: Read Group Replication Hostgroup Attributes from Configuration File (issue:1718),1,[],https://github.com/sysown/proxysql/pull/1772,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/1772#issuecomment-437125645,"Purpose

Fix for #1718
reads values for hard-coded variables into the runtime configuration from the configuration file.

Note
This is my first contribution to this repo, and I attempted to follow the same convention that was used for the Galera hostgroups.  Hopefully this is deemed helpful. (oops, I probably need to rebase against v1.4.0?)","Hi @ernstae , and thank you for the contribution.
Good catch!",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1772,2018-11-02T21:05:47Z,2018-11-08T19:28:22Z,2018-11-08T19:30:50Z,MERGED,True,6,3,1,https://github.com/ernstae,Fix: Read Group Replication Hostgroup Attributes from Configuration File (issue:1718),1,[],https://github.com/sysown/proxysql/pull/1772,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/1772#issuecomment-437126462,"Purpose

Fix for #1718
reads values for hard-coded variables into the runtime configuration from the configuration file.

Note
This is my first contribution to this repo, and I attempted to follow the same convention that was used for the Galera hostgroups.  Hopefully this is deemed helpful. (oops, I probably need to rebase against v1.4.0?)",Same commit applied to 2.0.0,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1776,2018-11-07T18:03:19Z,2018-11-08T14:28:25Z,2018-11-08T17:41:36Z,MERGED,True,2,2,1,https://github.com/rkennedy-zendesk,Fix gcc 4.8 vs. 4.9 typos.,1,[],https://github.com/sysown/proxysql/pull/1776,https://github.com/rkennedy-zendesk,1,https://github.com/sysown/proxysql/pull/1776,Appears to be  a bad copy/paste. The instructions for gcc 4.8 appear to be using gcc 4.9 and the instructions for gcc 4.9 appear to be using gcc 4.8.,Appears to be  a bad copy/paste. The instructions for gcc 4.8 appear to be using gcc 4.9 and the instructions for gcc 4.9 appear to be using gcc 4.8.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1776,2018-11-07T18:03:19Z,2018-11-08T14:28:25Z,2018-11-08T17:41:36Z,MERGED,True,2,2,1,https://github.com/rkennedy-zendesk,Fix gcc 4.8 vs. 4.9 typos.,1,[],https://github.com/sysown/proxysql/pull/1776,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1776#issuecomment-436720850,Appears to be  a bad copy/paste. The instructions for gcc 4.8 appear to be using gcc 4.9 and the instructions for gcc 4.9 appear to be using gcc 4.8.,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1776,2018-11-07T18:03:19Z,2018-11-08T14:28:25Z,2018-11-08T17:41:36Z,MERGED,True,2,2,1,https://github.com/rkennedy-zendesk,Fix gcc 4.8 vs. 4.9 typos.,1,[],https://github.com/sysown/proxysql/pull/1776,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/1776#issuecomment-437011970,Appears to be  a bad copy/paste. The instructions for gcc 4.8 appear to be using gcc 4.9 and the instructions for gcc 4.9 appear to be using gcc 4.8.,Thanks @rkennedy-zendesk!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1779,2018-11-08T19:21:18Z,2018-11-22T17:41:11Z,2019-10-29T00:05:21Z,MERGED,True,346,2,9,https://github.com/renecannao,Support for KILL command #860,1,[],https://github.com/sysown/proxysql/pull/1779,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/1779,"Both KILL QUERY and KILL CONNECTION work
The only security check enforced is that the user sending the KILL
is the same user of the connection/query being killed.","Both KILL QUERY and KILL CONNECTION work
The only security check enforced is that the user sending the KILL
is the same user of the connection/query being killed.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1781,2018-11-10T14:10:40Z,2018-11-22T17:41:31Z,2018-11-22T17:41:48Z,MERGED,True,324,0,9,https://github.com/angrygreenfrogs,Support for KILL command sysown#860 (in v1.4.x),1,[],https://github.com/sysown/proxysql/pull/1781,https://github.com/angrygreenfrogs,1,https://github.com/sysown/proxysql/pull/1781,"This is the exact same set of code changes from #1779, just applied to the v1.4.13 branch, which appears compatible (it compiles, the feature works as expected in initial testing).
Rene, thoughts, any issues with implementing this feature in 1.4.x as well?","This is the exact same set of code changes from #1779, just applied to the v1.4.13 branch, which appears compatible (it compiles, the feature works as expected in initial testing).
Rene, thoughts, any issues with implementing this feature in 1.4.x as well?",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1781,2018-11-10T14:10:40Z,2018-11-22T17:41:31Z,2018-11-22T17:41:48Z,MERGED,True,324,0,9,https://github.com/angrygreenfrogs,Support for KILL command sysown#860 (in v1.4.x),1,[],https://github.com/sysown/proxysql/pull/1781,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1781#issuecomment-437586606,"This is the exact same set of code changes from #1779, just applied to the v1.4.13 branch, which appears compatible (it compiles, the feature works as expected in initial testing).
Rene, thoughts, any issues with implementing this feature in 1.4.x as well?",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1781,2018-11-10T14:10:40Z,2018-11-22T17:41:31Z,2018-11-22T17:41:48Z,MERGED,True,324,0,9,https://github.com/angrygreenfrogs,Support for KILL command sysown#860 (in v1.4.x),1,[],https://github.com/sysown/proxysql/pull/1781,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/1781#issuecomment-439072033,"This is the exact same set of code changes from #1779, just applied to the v1.4.13 branch, which appears compatible (it compiles, the feature works as expected in initial testing).
Rene, thoughts, any issues with implementing this feature in 1.4.x as well?",test this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1781,2018-11-10T14:10:40Z,2018-11-22T17:41:31Z,2018-11-22T17:41:48Z,MERGED,True,324,0,9,https://github.com/angrygreenfrogs,Support for KILL command sysown#860 (in v1.4.x),1,[],https://github.com/sysown/proxysql/pull/1781,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/1781#issuecomment-441093058,"This is the exact same set of code changes from #1779, just applied to the v1.4.13 branch, which appears compatible (it compiles, the feature works as expected in initial testing).
Rene, thoughts, any issues with implementing this feature in 1.4.x as well?",Thanks @angrygreenfrogs,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1784,2018-11-12T16:57:27Z,2018-11-15T15:00:16Z,2018-11-15T15:00:22Z,MERGED,True,1,0,1,https://github.com/rkennedy-zendesk,Add cleaning libconfig-1.7.2 to the `cleanall` target.,1,[],https://github.com/sysown/proxysql/pull/1784,https://github.com/rkennedy-zendesk,1,https://github.com/sysown/proxysql/pull/1784,"Previously cleanall wasn't cleaning up the previous compilation of
libconfig, leading to some situations where linking would mysteriously
fail.","Previously cleanall wasn't cleaning up the previous compilation of
libconfig, leading to some situations where linking would mysteriously
fail.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1784,2018-11-12T16:57:27Z,2018-11-15T15:00:16Z,2018-11-15T15:00:22Z,MERGED,True,1,0,1,https://github.com/rkennedy-zendesk,Add cleaning libconfig-1.7.2 to the `cleanall` target.,1,[],https://github.com/sysown/proxysql/pull/1784,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1784#issuecomment-437955929,"Previously cleanall wasn't cleaning up the previous compilation of
libconfig, leading to some situations where linking would mysteriously
fail.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1784,2018-11-12T16:57:27Z,2018-11-15T15:00:16Z,2018-11-15T15:00:22Z,MERGED,True,1,0,1,https://github.com/rkennedy-zendesk,Add cleaning libconfig-1.7.2 to the `cleanall` target.,1,[],https://github.com/sysown/proxysql/pull/1784,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/1784#issuecomment-439069531,"Previously cleanall wasn't cleaning up the previous compilation of
libconfig, leading to some situations where linking would mysteriously
fail.",Thanks,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1786,2018-11-14T10:01:41Z,2018-12-14T10:10:22Z,2018-12-18T11:02:02Z,MERGED,True,1,1,1,https://github.com/acampoh,Fixed shun recovery time calculation,1,[],https://github.com/sysown/proxysql/pull/1786,https://github.com/acampoh,1,https://github.com/sysown/proxysql/pull/1786,"If shun recovery time >= max_connection timeout, the desperate attempt
of recovering a node currently gets multiplied by 9 instead of reduced
to a 10%","If shun recovery time >= max_connection timeout, the desperate attempt
of recovering a node currently gets multiplied by 9 instead of reduced
to a 10%",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1786,2018-11-14T10:01:41Z,2018-12-14T10:10:22Z,2018-12-18T11:02:02Z,MERGED,True,1,1,1,https://github.com/acampoh,Fixed shun recovery time calculation,1,[],https://github.com/sysown/proxysql/pull/1786,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1786#issuecomment-438606175,"If shun recovery time >= max_connection timeout, the desperate attempt
of recovering a node currently gets multiplied by 9 instead of reduced
to a 10%",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1786,2018-11-14T10:01:41Z,2018-12-14T10:10:22Z,2018-12-18T11:02:02Z,MERGED,True,1,1,1,https://github.com/acampoh,Fixed shun recovery time calculation,1,[],https://github.com/sysown/proxysql/pull/1786,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/1786#issuecomment-447279204,"If shun recovery time >= max_connection timeout, the desperate attempt
of recovering a node currently gets multiplied by 9 instead of reduced
to a 10%",Thanks. Applied also to 1.4.14 and 2.0.0,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1786,2018-11-14T10:01:41Z,2018-12-14T10:10:22Z,2018-12-18T11:02:02Z,MERGED,True,1,1,1,https://github.com/acampoh,Fixed shun recovery time calculation,1,[],https://github.com/sysown/proxysql/pull/1786,https://github.com/acampoh,4,https://github.com/sysown/proxysql/pull/1786#issuecomment-448182473,"If shun recovery time >= max_connection timeout, the desperate attempt
of recovering a node currently gets multiplied by 9 instead of reduced
to a 10%",thanks!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1809,2018-12-04T18:20:56Z,2018-12-05T10:28:25Z,2018-12-06T10:46:39Z,MERGED,True,2,2,1,https://github.com/timorunge,Fixing issue #1808.,1,[],https://github.com/sysown/proxysql/pull/1809,https://github.com/timorunge,1,https://github.com/sysown/proxysql/pull/1809,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1809,2018-12-04T18:20:56Z,2018-12-05T10:28:25Z,2018-12-06T10:46:39Z,MERGED,True,2,2,1,https://github.com/timorunge,Fixing issue #1808.,1,[],https://github.com/sysown/proxysql/pull/1809,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1809#issuecomment-444203790,,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1809,2018-12-04T18:20:56Z,2018-12-05T10:28:25Z,2018-12-06T10:46:39Z,MERGED,True,2,2,1,https://github.com/timorunge,Fixing issue #1808.,1,[],https://github.com/sysown/proxysql/pull/1809,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/1809#issuecomment-444436737,,Thank you @timorunge !,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1818,2018-12-11T07:38:26Z,2019-01-10T05:47:20Z,2019-01-10T05:47:20Z,CLOSED,False,5,0,1,https://github.com/Mount565,Using variable: web_enabled to enable/disable collecting system/proxysql metrics,1,[],https://github.com/sysown/proxysql/pull/1818,https://github.com/Mount565,1,https://github.com/sysown/proxysql/pull/1818,"using variable: web_enabled to enable/disable collecting system/proxysql metrics
trying to solve issue#1803","using variable: web_enabled to enable/disable collecting system/proxysql metrics
trying to solve issue#1803",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1818,2018-12-11T07:38:26Z,2019-01-10T05:47:20Z,2019-01-10T05:47:20Z,CLOSED,False,5,0,1,https://github.com/Mount565,Using variable: web_enabled to enable/disable collecting system/proxysql metrics,1,[],https://github.com/sysown/proxysql/pull/1818,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1818#issuecomment-446102562,"using variable: web_enabled to enable/disable collecting system/proxysql metrics
trying to solve issue#1803",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1823,2018-12-14T10:02:24Z,2018-12-14T11:34:25Z,2018-12-14T11:34:25Z,MERGED,True,2,139,2,https://github.com/renecannao,V1.4.13 admin deadlock,2,[],https://github.com/sysown/proxysql/pull/1823,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/1823,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1824,2018-12-14T10:03:05Z,2018-12-14T11:34:41Z,2018-12-14T11:34:41Z,MERGED,True,43,1,2,https://github.com/renecannao,V1.4.13 autocommit revert,5,[],https://github.com/sysown/proxysql/pull/1824,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/1824,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1825,2018-12-14T11:14:47Z,2018-12-14T11:54:32Z,2019-10-29T00:05:12Z,MERGED,True,45,62,3,https://github.com/renecannao,V2.0.0 144 merge,6,[],https://github.com/sysown/proxysql/pull/1825,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/1825,Various cherry-picks from v1.4,Various cherry-picks from v1.4,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1834,2018-12-19T07:16:41Z,2019-01-10T11:49:48Z,2019-01-10T11:49:49Z,MERGED,True,30,0,6,https://github.com/renecannao,Added mysql-auto_increment_delay_multiplex #1828,1,[],https://github.com/sysown/proxysql/pull/1834,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/1834,"Temporary disable multiplexing when last_insert_id is returned in OK packet.
Multiplexing is disabled for mysql-auto_increment_delay_multiplex queries.
mysql-auto_increment_delay_multiplex ranges from 0 to 1000000 .
Default value is 5","Temporary disable multiplexing when last_insert_id is returned in OK packet.
Multiplexing is disabled for mysql-auto_increment_delay_multiplex queries.
mysql-auto_increment_delay_multiplex ranges from 0 to 1000000 .
Default value is 5",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1834,2018-12-19T07:16:41Z,2019-01-10T11:49:48Z,2019-01-10T11:49:49Z,MERGED,True,30,0,6,https://github.com/renecannao,Added mysql-auto_increment_delay_multiplex #1828,1,[],https://github.com/sysown/proxysql/pull/1834,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1834#issuecomment-449096834,"Temporary disable multiplexing when last_insert_id is returned in OK packet.
Multiplexing is disabled for mysql-auto_increment_delay_multiplex queries.
mysql-auto_increment_delay_multiplex ranges from 0 to 1000000 .
Default value is 5",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1835,2018-12-19T07:16:59Z,2019-01-10T05:53:56Z,2019-01-10T05:55:55Z,MERGED,True,21,3,2,https://github.com/renecannao,Tune shun time if ping interval is too low #1833,1,[],https://github.com/sysown/proxysql/pull/1835,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/1835,"When shunning a node, evaluate the different between
mysql-monitor_ping_interval and mysql-shun_recovery_time_sec, and postpone
in the future when the server needs to be recovered","When shunning a node, evaluate the different between
mysql-monitor_ping_interval and mysql-shun_recovery_time_sec, and postpone
in the future when the server needs to be recovered",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1835,2018-12-19T07:16:59Z,2019-01-10T05:53:56Z,2019-01-10T05:55:55Z,MERGED,True,21,3,2,https://github.com/renecannao,Tune shun time if ping interval is too low #1833,1,[],https://github.com/sysown/proxysql/pull/1835,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1835#issuecomment-449096891,"When shunning a node, evaluate the different between
mysql-monitor_ping_interval and mysql-shun_recovery_time_sec, and postpone
in the future when the server needs to be recovered",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1838,2018-12-21T10:14:59Z,2019-01-10T05:50:11Z,2019-01-10T05:50:17Z,MERGED,True,10,10,1,https://github.com/acampoh,Fixing sql states in many error messages from admin console.,1,[],https://github.com/sysown/proxysql/pull/1838,https://github.com/acampoh,1,https://github.com/sysown/proxysql/pull/1838,"As the # is already included when generating the message, is not needed here, making the output in mysql show a wrong one","As the # is already included when generating the message, is not needed here, making the output in mysql show a wrong one",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1838,2018-12-21T10:14:59Z,2019-01-10T05:50:11Z,2019-01-10T05:50:17Z,MERGED,True,10,10,1,https://github.com/acampoh,Fixing sql states in many error messages from admin console.,1,[],https://github.com/sysown/proxysql/pull/1838,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1838#issuecomment-449347053,"As the # is already included when generating the message, is not needed here, making the output in mysql show a wrong one",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1838,2018-12-21T10:14:59Z,2019-01-10T05:50:11Z,2019-01-10T05:50:17Z,MERGED,True,10,10,1,https://github.com/acampoh,Fixing sql states in many error messages from admin console.,1,[],https://github.com/sysown/proxysql/pull/1838,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/1838#issuecomment-452978831,"As the # is already included when generating the message, is not needed here, making the output in mysql show a wrong one",Thanks,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1840,2018-12-27T15:42:24Z,2019-01-10T05:49:18Z,2019-01-10T05:49:27Z,MERGED,True,2,2,1,https://github.com/acampoh,Fixed query to get available galera nodes in a hostgroup,1,[],https://github.com/sysown/proxysql/pull/1840,https://github.com/acampoh,1,https://github.com/sysown/proxysql/pull/1840,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1840,2018-12-27T15:42:24Z,2019-01-10T05:49:18Z,2019-01-10T05:49:27Z,MERGED,True,2,2,1,https://github.com/acampoh,Fixed query to get available galera nodes in a hostgroup,1,[],https://github.com/sysown/proxysql/pull/1840,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1840#issuecomment-450175819,,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1840,2018-12-27T15:42:24Z,2019-01-10T05:49:18Z,2019-01-10T05:49:27Z,MERGED,True,2,2,1,https://github.com/acampoh,Fixed query to get available galera nodes in a hostgroup,1,[],https://github.com/sysown/proxysql/pull/1840,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/1840#issuecomment-452978702,,Thank you,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1847,2019-01-07T16:07:30Z,2019-01-10T11:49:17Z,2019-10-29T00:05:05Z,MERGED,True,1153,103,28,https://github.com/renecannao,V2.0.0 merge ldap,13,[],https://github.com/sysown/proxysql/pull/1847,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/1847,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1847,2019-01-07T16:07:30Z,2019-01-10T11:49:17Z,2019-10-29T00:05:05Z,MERGED,True,1153,103,28,https://github.com/renecannao,V2.0.0 merge ldap,13,[],https://github.com/sysown/proxysql/pull/1847,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1847#issuecomment-452275574,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1847,2019-01-07T16:07:30Z,2019-01-10T11:49:17Z,2019-10-29T00:05:05Z,MERGED,True,1153,103,28,https://github.com/renecannao,V2.0.0 merge ldap,13,[],https://github.com/sysown/proxysql/pull/1847,https://github.com/yakirgb,3,https://github.com/sysown/proxysql/pull/1847#issuecomment-496586666,,"Hi @renecannao, few ideas.

Add LDAP plugin into rpm or github.
Convert ldap_auth_plugin to global_variables instead parameter in proxysql.cnf, after minor upgrade don't need to restore proxysql.cnf
Add wiki for LDAP parameters",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1854,2019-01-09T14:23:18Z,2019-01-28T07:11:24Z,2019-01-28T07:11:24Z,CLOSED,False,5,0,1,https://github.com/Mount565,Using variable: web_enabled to enable/disable collecting system/proxysql metrics,1,[],https://github.com/sysown/proxysql/pull/1854,https://github.com/Mount565,1,https://github.com/sysown/proxysql/pull/1854,"Generally, we can't directly connect to the database server in production. We usually use a jumper server for the sake of safety.  The embedded Http server can not be accessed directly.  So if mysql-web_enabled is false, do not collect statistic data. This can save a lot I/O operations.","Generally, we can't directly connect to the database server in production. We usually use a jumper server for the sake of safety.  The embedded Http server can not be accessed directly.  So if mysql-web_enabled is false, do not collect statistic data. This can save a lot I/O operations.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1854,2019-01-09T14:23:18Z,2019-01-28T07:11:24Z,2019-01-28T07:11:24Z,CLOSED,False,5,0,1,https://github.com/Mount565,Using variable: web_enabled to enable/disable collecting system/proxysql metrics,1,[],https://github.com/sysown/proxysql/pull/1854,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1854#issuecomment-452714582,"Generally, we can't directly connect to the database server in production. We usually use a jumper server for the sake of safety.  The embedded Http server can not be accessed directly.  So if mysql-web_enabled is false, do not collect statistic data. This can save a lot I/O operations.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1854,2019-01-09T14:23:18Z,2019-01-28T07:11:24Z,2019-01-28T07:11:24Z,CLOSED,False,5,0,1,https://github.com/Mount565,Using variable: web_enabled to enable/disable collecting system/proxysql metrics,1,[],https://github.com/sysown/proxysql/pull/1854,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/1854#issuecomment-452715777,"Generally, we can't directly connect to the database server in production. We usually use a jumper server for the sake of safety.  The embedded Http server can not be accessed directly.  So if mysql-web_enabled is false, do not collect statistic data. This can save a lot I/O operations.","I think this is a logical error.
If mysql-web_enabled is enabled, ProxySQL allows to display historical data using a web interface.
Nonetheless, even if the web interface is disabled, historical data can be accessed through the Admin interface, or the history database can be copied elsewhere for inspection and understand behaviors of the past.
Therefore not collecting metrics just because one way of displaying them (the web interface) is not enabled seems incorrect.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1854,2019-01-09T14:23:18Z,2019-01-28T07:11:24Z,2019-01-28T07:11:24Z,CLOSED,False,5,0,1,https://github.com/Mount565,Using variable: web_enabled to enable/disable collecting system/proxysql metrics,1,[],https://github.com/sysown/proxysql/pull/1854,https://github.com/Mount565,4,https://github.com/sysown/proxysql/pull/1854#issuecomment-452917523,"Generally, we can't directly connect to the database server in production. We usually use a jumper server for the sake of safety.  The embedded Http server can not be accessed directly.  So if mysql-web_enabled is false, do not collect statistic data. This can save a lot I/O operations.","Well, there's another thing, when multiple ProxySQL share the same data dir, collecting metrics could cause conflicts when saving these data to disk. and in this case, the metrics collected is not so much useful. please see #1803 .

historical data can be accessed through the Admin interface, or the history database can be copied elsewhere for inspection and understand behaviors of the past

This can still be done by set mysql-web_enabled ='true'. The function is still there, not removed. Adding an option to turn it off will make ProxySQL more tolerant",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1854,2019-01-09T14:23:18Z,2019-01-28T07:11:24Z,2019-01-28T07:11:24Z,CLOSED,False,5,0,1,https://github.com/Mount565,Using variable: web_enabled to enable/disable collecting system/proxysql metrics,1,[],https://github.com/sysown/proxysql/pull/1854,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/1854#issuecomment-452937353,"Generally, we can't directly connect to the database server in production. We usually use a jumper server for the sake of safety.  The embedded Http server can not be accessed directly.  So if mysql-web_enabled is false, do not collect statistic data. This can save a lot I/O operations.","I agree on having a switch to enable/disable collecting statistics (#1803) , but using mysql-web_enabled for two features is not right. It should be a new switch.

when multiple ProxySQL share the same data dir

You shouldn't do that, that is why datadir is configurable",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1854,2019-01-09T14:23:18Z,2019-01-28T07:11:24Z,2019-01-28T07:11:24Z,CLOSED,False,5,0,1,https://github.com/Mount565,Using variable: web_enabled to enable/disable collecting system/proxysql metrics,1,[],https://github.com/sysown/proxysql/pull/1854,https://github.com/Mount565,6,https://github.com/sysown/proxysql/pull/1854#issuecomment-452959849,"Generally, we can't directly connect to the database server in production. We usually use a jumper server for the sake of safety.  The embedded Http server can not be accessed directly.  So if mysql-web_enabled is false, do not collect statistic data. This can save a lot I/O operations.","Yes, introducing a new variable maybe a good solution, actually, that's what I thought at first.
However if metrics collecting is disabled, enable mysql-web_enabled will get no data result. So I think maybe, to be simple, using  mysql-web_enabled  to control this behavior is ok. After all , the two features are related!
You decide!
Thanks.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1856,2019-01-10T11:26:48Z,2019-01-10T11:52:43Z,2019-10-29T00:05:17Z,CLOSED,False,462,97,11,https://github.com/renecannao,V2.0.0 tb,14,[],https://github.com/sysown/proxysql/pull/1856,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/1856,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1857,2019-01-10T11:50:25Z,2019-01-10T11:50:40Z,2019-10-29T00:05:10Z,MERGED,True,162,11,7,https://github.com/renecannao,V2.0.0 digest split,3,[],https://github.com/sysown/proxysql/pull/1857,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/1857,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1858,2019-01-10T14:59:30Z,2019-01-13T00:44:07Z,2019-10-29T00:05:06Z,MERGED,True,413,93,10,https://github.com/renecannao,V2.0.0 merge tb,15,[],https://github.com/sysown/proxysql/pull/1858,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/1858,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1865,2019-01-14T21:10:49Z,2019-01-20T22:07:43Z,2021-04-12T16:46:52Z,MERGED,True,89,61,8,https://github.com/pondix,"Fixes for systemd & ""proxysql"" user service",2,[],https://github.com/sysown/proxysql/pull/1865,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/1865,"Fixes package build for ""systemd"" releases (currently implemented for Debian9 & Ubuntu18) and introduces the ""proxysql"" for all Debian family distros.

do not merge yet, this potentially breaks RHEL releases (testing in progress)","Fixes package build for ""systemd"" releases (currently implemented for Debian9 & Ubuntu18) and introduces the ""proxysql"" for all Debian family distros.

do not merge yet, this potentially breaks RHEL releases (testing in progress)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1865,2019-01-14T21:10:49Z,2019-01-20T22:07:43Z,2021-04-12T16:46:52Z,MERGED,True,89,61,8,https://github.com/pondix,"Fixes for systemd & ""proxysql"" user service",2,[],https://github.com/sysown/proxysql/pull/1865,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1865#issuecomment-454162713,"Fixes package build for ""systemd"" releases (currently implemented for Debian9 & Ubuntu18) and introduces the ""proxysql"" for all Debian family distros.

do not merge yet, this potentially breaks RHEL releases (testing in progress)",Fixes #1789,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1865,2019-01-14T21:10:49Z,2019-01-20T22:07:43Z,2021-04-12T16:46:52Z,MERGED,True,89,61,8,https://github.com/pondix,"Fixes for systemd & ""proxysql"" user service",2,[],https://github.com/sysown/proxysql/pull/1865,https://github.com/yakirgb,3,https://github.com/sysown/proxysql/pull/1865#issuecomment-496593606,"Fixes package build for ""systemd"" releases (currently implemented for Debian9 & Ubuntu18) and introduces the ""proxysql"" for all Debian family distros.

do not merge yet, this potentially breaks RHEL releases (testing in progress)","@pondix CentOS 7 rpm without systemd:
[root@tim001 ~]# rpm -qlp https://github.com/sysown/proxysql/releases/download/v2.0.4/proxysql-2.0.4-1-centos7.x86_64.rpm
/etc/init.d/proxysql
/etc/logrotate.d/proxysql
/etc/proxysql.cnf
/usr/bin/proxysql
/usr/share/proxysql/tools/proxysql_galera_checker.sh
/usr/share/proxysql/tools/proxysql_galera_writer.pl",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1865,2019-01-14T21:10:49Z,2019-01-20T22:07:43Z,2021-04-12T16:46:52Z,MERGED,True,89,61,8,https://github.com/pondix,"Fixes for systemd & ""proxysql"" user service",2,[],https://github.com/sysown/proxysql/pull/1865,https://github.com/pondix,4,https://github.com/sysown/proxysql/pull/1865#issuecomment-537040904,"Fixes package build for ""systemd"" releases (currently implemented for Debian9 & Ubuntu18) and introduces the ""proxysql"" for all Debian family distros.

do not merge yet, this potentially breaks RHEL releases (testing in progress)","@yakirgb sorry for the long delay in responding, this has now been implemented and will be part of 2.0.7: 732586a",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1865,2019-01-14T21:10:49Z,2019-01-20T22:07:43Z,2021-04-12T16:46:52Z,MERGED,True,89,61,8,https://github.com/pondix,"Fixes for systemd & ""proxysql"" user service",2,[],https://github.com/sysown/proxysql/pull/1865,https://github.com/yakirgb,5,https://github.com/sysown/proxysql/pull/1865#issuecomment-537186437,"Fixes package build for ""systemd"" releases (currently implemented for Debian9 & Ubuntu18) and introduces the ""proxysql"" for all Debian family distros.

do not merge yet, this potentially breaks RHEL releases (testing in progress)",Great! Thank you @pondix,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1867,2019-01-15T13:11:45Z,2019-01-21T03:52:07Z,2019-10-29T00:05:03Z,MERGED,True,8,5,2,https://github.com/renecannao,Optimize connection pool to find matching username,1,[],https://github.com/sysown/proxysql/pull/1867,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/1867,"Try to get from connection pool and connections cache, a connection with the same schemaname","Try to get from connection pool and connections cache, a connection with the same schemaname",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1867,2019-01-15T13:11:45Z,2019-01-21T03:52:07Z,2019-10-29T00:05:03Z,MERGED,True,8,5,2,https://github.com/renecannao,Optimize connection pool to find matching username,1,[],https://github.com/sysown/proxysql/pull/1867,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1867#issuecomment-455907640,"Try to get from connection pool and connections cache, a connection with the same schemaname",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1868,2019-01-15T18:42:33Z,2019-01-16T07:58:45Z,2019-10-29T00:05:00Z,MERGED,True,17,0,2,https://github.com/renecannao,Support for MYSQL_TYPE_VARCHAR in PS #1770,1,[],https://github.com/sysown/proxysql/pull/1868,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/1868,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1875,2019-01-21T03:42:48Z,2019-01-21T04:08:26Z,2019-10-29T00:04:58Z,MERGED,True,100,0,5,https://github.com/renecannao,Collect memory statistics about query rules,1,[],https://github.com/sysown/proxysql/pull/1875,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/1875,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1876,2019-01-22T14:56:40Z,,2019-11-20T21:03:44Z,OPEN,False,21,17,4,https://github.com/acampoh,Fixed client connection errors when nodes have high weight and a cras‚Ä¶,1,[],https://github.com/sysown/proxysql/pull/1876,https://github.com/acampoh,1,https://github.com/sysown/proxysql/pull/1876,"‚Ä¶h when 'WSREP has not yet prepared node for application use'
If you use have nodes with high weights, you can have an overflow when calculating the
load in the nodes in a HG.
When a 'WSREP has not yet prepared node for application use' arises, proxysql deleted
the connection and tried to use it later","‚Ä¶h when 'WSREP has not yet prepared node for application use'
If you use have nodes with high weights, you can have an overflow when calculating the
load in the nodes in a HG.
When a 'WSREP has not yet prepared node for application use' arises, proxysql deleted
the connection and tried to use it later",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1876,2019-01-22T14:56:40Z,,2019-11-20T21:03:44Z,OPEN,False,21,17,4,https://github.com/acampoh,Fixed client connection errors when nodes have high weight and a cras‚Ä¶,1,[],https://github.com/sysown/proxysql/pull/1876,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1876#issuecomment-456429202,"‚Ä¶h when 'WSREP has not yet prepared node for application use'
If you use have nodes with high weights, you can have an overflow when calculating the
load in the nodes in a HG.
When a 'WSREP has not yet prepared node for application use' arises, proxysql deleted
the connection and tried to use it later",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1876,2019-01-22T14:56:40Z,,2019-11-20T21:03:44Z,OPEN,False,21,17,4,https://github.com/acampoh,Fixed client connection errors when nodes have high weight and a cras‚Ä¶,1,[],https://github.com/sysown/proxysql/pull/1876,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/1876#issuecomment-465433802,"‚Ä¶h when 'WSREP has not yet prepared node for application use'
If you use have nodes with high weights, you can have an overflow when calculating the
load in the nodes in a HG.
When a 'WSREP has not yet prepared node for application use' arises, proxysql deleted
the connection and tried to use it later","Hi @acampoh .
Do you have a reproducible test case?
I am curious to know if this issue is still present in v2.0 , where mysql_servers.weight is capped to 10M:
weight INT CHECK (weight >= 0 AND weight <=10000000) NOT NULL DEFAULT 1

See #1224 for more background on this.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1876,2019-01-22T14:56:40Z,,2019-11-20T21:03:44Z,OPEN,False,21,17,4,https://github.com/acampoh,Fixed client connection errors when nodes have high weight and a cras‚Ä¶,1,[],https://github.com/sysown/proxysql/pull/1876,https://github.com/acampoh,4,https://github.com/sysown/proxysql/pull/1876#issuecomment-465547314,"‚Ä¶h when 'WSREP has not yet prepared node for application use'
If you use have nodes with high weights, you can have an overflow when calculating the
load in the nodes in a HG.
When a 'WSREP has not yet prepared node for application use' arises, proxysql deleted
the connection and tried to use it later","I think we didn't hit this issue in the test i did with 2.0, but on the other hand having a limit in 10M doesn't fit in our needs very well.
We currently have a set up of 3 galera nodes per HG (using 3 writers) and weights of (1000M, 1000, 1) so we can assure almost all the writes go to the proper node and we can avoid deadlocks. Reducing the max weight to 10M will imply for us a much bigger chance of having deadlocks on writes.
Changing those weights to uint_64 shouldn't have a big performance hit and also can allow you to increase the max weight for the cases (like this) where having a big difference of weights is needed.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1876,2019-01-22T14:56:40Z,,2019-11-20T21:03:44Z,OPEN,False,21,17,4,https://github.com/acampoh,Fixed client connection errors when nodes have high weight and a cras‚Ä¶,1,[],https://github.com/sysown/proxysql/pull/1876,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/1876#issuecomment-465552903,"‚Ä¶h when 'WSREP has not yet prepared node for application use'
If you use have nodes with high weights, you can have an overflow when calculating the
load in the nodes in a HG.
When a 'WSREP has not yet prepared node for application use' arises, proxysql deleted
the connection and tried to use it later","I agree that uint64_t had no performance impact.
But RAND_MAX is 2^31-1 , so you should really not have the sum the weights over that value.
With regards to Galera, you should consider native support for Galera or external script.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1876,2019-01-22T14:56:40Z,,2019-11-20T21:03:44Z,OPEN,False,21,17,4,https://github.com/acampoh,Fixed client connection errors when nodes have high weight and a cras‚Ä¶,1,[],https://github.com/sysown/proxysql/pull/1876,https://github.com/alpes214,6,https://github.com/sysown/proxysql/pull/1876#issuecomment-556392607,"‚Ä¶h when 'WSREP has not yet prepared node for application use'
If you use have nodes with high weights, you can have an overflow when calculating the
load in the nodes in a HG.
When a 'WSREP has not yet prepared node for application use' arises, proxysql deleted
the connection and tried to use it later",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1885,2019-01-31T16:20:19Z,2019-02-10T13:29:12Z,2019-10-29T00:06:31Z,MERGED,True,6,2,4,https://github.com/renecannao,Fixed parsing of SET with double quote,1,[],https://github.com/sysown/proxysql/pull/1885,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/1885,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1900,2019-02-12T14:26:03Z,2019-03-05T02:24:10Z,2019-03-05T18:26:21Z,MERGED,True,11,5,2,https://github.com/insom,Add backend connection status flags to stats_mysql_processlist,1,[],https://github.com/sysown/proxysql/pull/1900,https://github.com/insom,1,https://github.com/sysown/proxysql/pull/1900,"I recently needed to debug why some connections weren't multiplexing in production.
Being able to see the status_flags bitfield from the backend connection is useful for this -- you can see if we're not multiplexing because of local variable use vs. GET_LOCK etc. It does pass the raw integer values back -- it might be better to expand out the bit field into text strings? If you think so, I don't mind doing the work to make it more use friendly.
I thought this would be something generally useful to send upstream. Please let me know if there's some style I should be following or a process around creating improvement requests.

In MySQL:
mysql> select GET_LOCK('foo', 'bar');
+------------------------+
| GET_LOCK('foo', 'bar') |
+------------------------+
|                      1 |
+------------------------+
1 row in set (0.00 sec)

In the Admin console:
mysql> select status_flags from stats_mysql_processlist;
+--------------+
| status_flags |
+--------------+
| 64           |
+--------------+
1 row in set (0.00 sec)","I recently needed to debug why some connections weren't multiplexing in production.
Being able to see the status_flags bitfield from the backend connection is useful for this -- you can see if we're not multiplexing because of local variable use vs. GET_LOCK etc. It does pass the raw integer values back -- it might be better to expand out the bit field into text strings? If you think so, I don't mind doing the work to make it more use friendly.
I thought this would be something generally useful to send upstream. Please let me know if there's some style I should be following or a process around creating improvement requests.

In MySQL:
mysql> select GET_LOCK('foo', 'bar');
+------------------------+
| GET_LOCK('foo', 'bar') |
+------------------------+
|                      1 |
+------------------------+
1 row in set (0.00 sec)

In the Admin console:
mysql> select status_flags from stats_mysql_processlist;
+--------------+
| status_flags |
+--------------+
| 64           |
+--------------+
1 row in set (0.00 sec)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1900,2019-02-12T14:26:03Z,2019-03-05T02:24:10Z,2019-03-05T18:26:21Z,MERGED,True,11,5,2,https://github.com/insom,Add backend connection status flags to stats_mysql_processlist,1,[],https://github.com/sysown/proxysql/pull/1900,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1900#issuecomment-464504824,"I recently needed to debug why some connections weren't multiplexing in production.
Being able to see the status_flags bitfield from the backend connection is useful for this -- you can see if we're not multiplexing because of local variable use vs. GET_LOCK etc. It does pass the raw integer values back -- it might be better to expand out the bit field into text strings? If you think so, I don't mind doing the work to make it more use friendly.
I thought this would be something generally useful to send upstream. Please let me know if there's some style I should be following or a process around creating improvement requests.

In MySQL:
mysql> select GET_LOCK('foo', 'bar');
+------------------------+
| GET_LOCK('foo', 'bar') |
+------------------------+
|                      1 |
+------------------------+
1 row in set (0.00 sec)

In the Admin console:
mysql> select status_flags from stats_mysql_processlist;
+--------------+
| status_flags |
+--------------+
| 64           |
+--------------+
1 row in set (0.00 sec)",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1900,2019-02-12T14:26:03Z,2019-03-05T02:24:10Z,2019-03-05T18:26:21Z,MERGED,True,11,5,2,https://github.com/insom,Add backend connection status flags to stats_mysql_processlist,1,[],https://github.com/sysown/proxysql/pull/1900,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/1900#issuecomment-468152498,"I recently needed to debug why some connections weren't multiplexing in production.
Being able to see the status_flags bitfield from the backend connection is useful for this -- you can see if we're not multiplexing because of local variable use vs. GET_LOCK etc. It does pass the raw integer values back -- it might be better to expand out the bit field into text strings? If you think so, I don't mind doing the work to make it more use friendly.
I thought this would be something generally useful to send upstream. Please let me know if there's some style I should be following or a process around creating improvement requests.

In MySQL:
mysql> select GET_LOCK('foo', 'bar');
+------------------------+
| GET_LOCK('foo', 'bar') |
+------------------------+
|                      1 |
+------------------------+
1 row in set (0.00 sec)

In the Admin console:
mysql> select status_flags from stats_mysql_processlist;
+--------------+
| status_flags |
+--------------+
| 64           |
+--------------+
1 row in set (0.00 sec)","@insom: this pull request was gone against master branch.
Can you please use 2.0.3 as base?
Thanks",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1900,2019-02-12T14:26:03Z,2019-03-05T02:24:10Z,2019-03-05T18:26:21Z,MERGED,True,11,5,2,https://github.com/insom,Add backend connection status flags to stats_mysql_processlist,1,[],https://github.com/sysown/proxysql/pull/1900,https://github.com/insom,4,https://github.com/sysown/proxysql/pull/1900#issuecomment-468687690,"I recently needed to debug why some connections weren't multiplexing in production.
Being able to see the status_flags bitfield from the backend connection is useful for this -- you can see if we're not multiplexing because of local variable use vs. GET_LOCK etc. It does pass the raw integer values back -- it might be better to expand out the bit field into text strings? If you think so, I don't mind doing the work to make it more use friendly.
I thought this would be something generally useful to send upstream. Please let me know if there's some style I should be following or a process around creating improvement requests.

In MySQL:
mysql> select GET_LOCK('foo', 'bar');
+------------------------+
| GET_LOCK('foo', 'bar') |
+------------------------+
|                      1 |
+------------------------+
1 row in set (0.00 sec)

In the Admin console:
mysql> select status_flags from stats_mysql_processlist;
+--------------+
| status_flags |
+--------------+
| 64           |
+--------------+
1 row in set (0.00 sec)",Rebased onto v2.0.3 -- is the master branch no longer where development is done for the project?,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1900,2019-02-12T14:26:03Z,2019-03-05T02:24:10Z,2019-03-05T18:26:21Z,MERGED,True,11,5,2,https://github.com/insom,Add backend connection status flags to stats_mysql_processlist,1,[],https://github.com/sysown/proxysql/pull/1900,https://github.com/pondix,5,https://github.com/sysown/proxysql/pull/1900#issuecomment-468827118,"I recently needed to debug why some connections weren't multiplexing in production.
Being able to see the status_flags bitfield from the backend connection is useful for this -- you can see if we're not multiplexing because of local variable use vs. GET_LOCK etc. It does pass the raw integer values back -- it might be better to expand out the bit field into text strings? If you think so, I don't mind doing the work to make it more use friendly.
I thought this would be something generally useful to send upstream. Please let me know if there's some style I should be following or a process around creating improvement requests.

In MySQL:
mysql> select GET_LOCK('foo', 'bar');
+------------------------+
| GET_LOCK('foo', 'bar') |
+------------------------+
|                      1 |
+------------------------+
1 row in set (0.00 sec)

In the Admin console:
mysql> select status_flags from stats_mysql_processlist;
+--------------+
| status_flags |
+--------------+
| 64           |
+--------------+
1 row in set (0.00 sec)",test this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1900,2019-02-12T14:26:03Z,2019-03-05T02:24:10Z,2019-03-05T18:26:21Z,MERGED,True,11,5,2,https://github.com/insom,Add backend connection status flags to stats_mysql_processlist,1,[],https://github.com/sysown/proxysql/pull/1900,https://github.com/pondix,6,https://github.com/sysown/proxysql/pull/1900#issuecomment-468827427,"I recently needed to debug why some connections weren't multiplexing in production.
Being able to see the status_flags bitfield from the backend connection is useful for this -- you can see if we're not multiplexing because of local variable use vs. GET_LOCK etc. It does pass the raw integer values back -- it might be better to expand out the bit field into text strings? If you think so, I don't mind doing the work to make it more use friendly.
I thought this would be something generally useful to send upstream. Please let me know if there's some style I should be following or a process around creating improvement requests.

In MySQL:
mysql> select GET_LOCK('foo', 'bar');
+------------------------+
| GET_LOCK('foo', 'bar') |
+------------------------+
|                      1 |
+------------------------+
1 row in set (0.00 sec)

In the Admin console:
mysql> select status_flags from stats_mysql_processlist;
+--------------+
| status_flags |
+--------------+
| 64           |
+--------------+
1 row in set (0.00 sec)","@insom - the previous message was an instruction to the automated build testing since you aren't a member :)
For the ProxySQL project commits should always be made to the latest release version (currently v2.0.3) not master",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1900,2019-02-12T14:26:03Z,2019-03-05T02:24:10Z,2019-03-05T18:26:21Z,MERGED,True,11,5,2,https://github.com/insom,Add backend connection status flags to stats_mysql_processlist,1,[],https://github.com/sysown/proxysql/pull/1900,https://github.com/renecannao,7,https://github.com/sysown/proxysql/pull/1900#issuecomment-469509315,"I recently needed to debug why some connections weren't multiplexing in production.
Being able to see the status_flags bitfield from the backend connection is useful for this -- you can see if we're not multiplexing because of local variable use vs. GET_LOCK etc. It does pass the raw integer values back -- it might be better to expand out the bit field into text strings? If you think so, I don't mind doing the work to make it more use friendly.
I thought this would be something generally useful to send upstream. Please let me know if there's some style I should be following or a process around creating improvement requests.

In MySQL:
mysql> select GET_LOCK('foo', 'bar');
+------------------------+
| GET_LOCK('foo', 'bar') |
+------------------------+
|                      1 |
+------------------------+
1 row in set (0.00 sec)

In the Admin console:
mysql> select status_flags from stats_mysql_processlist;
+--------------+
| status_flags |
+--------------+
| 64           |
+--------------+
1 row in set (0.00 sec)",Thank you @insom,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1905,2019-02-15T07:08:26Z,2019-03-22T14:32:47Z,2019-03-25T02:40:22Z,CLOSED,False,1,1,1,https://github.com/cahlchang,Fix set_parser RE2 Pattern for sql_mode,1,[],https://github.com/sysown/proxysql/pull/1905,https://github.com/cahlchang,1,https://github.com/sysown/proxysql/pull/1905,"I added the CONCAT function to the nested parsing pattern.
see
#1904
As per the issue, I found a problem when parsing sql_mode.
When parsing the SESSION variable, it seems that interpretation becomes impossible if CONCAT function is nested.
SQL to be parsed.
SET @@SESSION.sql_mode = CONCAT(CONCAT(@@sql_mode, ', STRICT_ALL_TABLES'), ', NO_AUTO_VALUE_ON_ZERO');

This session variable is commonly used in RoR.
Expected results.
key = sql_mode
value = CONCAT(CONCAT(@@sql_mode, ',STRICT_ALL_TABLES'), ',NO_AUTO_VALUE_ON_ZERO')

Actual results.
key = sql_mode
value = CONCAT

error log
# cat proxysql.log | grep sql_mode | head -n1
2019-02-14 10:47:29 MySQL_Session.cpp:1610:handler_again___status_SETTING_SQL_MODE(): [WARNING] Error while setting SQL_MODE: 1231, Variable 'sql_mode' can't be set to the value of 'CONCAT'

#1519
If the CONCAT function is nested like this issue, there is a possibility that a SQL error has occurred.
I solved my environmental problem with this fix.
Please let me know if I need to add test code.
Thanks!!","I added the CONCAT function to the nested parsing pattern.
see
#1904
As per the issue, I found a problem when parsing sql_mode.
When parsing the SESSION variable, it seems that interpretation becomes impossible if CONCAT function is nested.
SQL to be parsed.
SET @@SESSION.sql_mode = CONCAT(CONCAT(@@sql_mode, ', STRICT_ALL_TABLES'), ', NO_AUTO_VALUE_ON_ZERO');

This session variable is commonly used in RoR.
Expected results.
key = sql_mode
value = CONCAT(CONCAT(@@sql_mode, ',STRICT_ALL_TABLES'), ',NO_AUTO_VALUE_ON_ZERO')

Actual results.
key = sql_mode
value = CONCAT

error log
# cat proxysql.log | grep sql_mode | head -n1
2019-02-14 10:47:29 MySQL_Session.cpp:1610:handler_again___status_SETTING_SQL_MODE(): [WARNING] Error while setting SQL_MODE: 1231, Variable 'sql_mode' can't be set to the value of 'CONCAT'

#1519
If the CONCAT function is nested like this issue, there is a possibility that a SQL error has occurred.
I solved my environmental problem with this fix.
Please let me know if I need to add test code.
Thanks!!",True,"{'THUMBS_UP': ['https://github.com/supercaracal', 'https://github.com/mimuret', 'https://github.com/maxkochubey', 'https://github.com/gondaz']}"
sysown/proxysql,https://github.com/sysown/proxysql,1905,2019-02-15T07:08:26Z,2019-03-22T14:32:47Z,2019-03-25T02:40:22Z,CLOSED,False,1,1,1,https://github.com/cahlchang,Fix set_parser RE2 Pattern for sql_mode,1,[],https://github.com/sysown/proxysql/pull/1905,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1905#issuecomment-464504820,"I added the CONCAT function to the nested parsing pattern.
see
#1904
As per the issue, I found a problem when parsing sql_mode.
When parsing the SESSION variable, it seems that interpretation becomes impossible if CONCAT function is nested.
SQL to be parsed.
SET @@SESSION.sql_mode = CONCAT(CONCAT(@@sql_mode, ', STRICT_ALL_TABLES'), ', NO_AUTO_VALUE_ON_ZERO');

This session variable is commonly used in RoR.
Expected results.
key = sql_mode
value = CONCAT(CONCAT(@@sql_mode, ',STRICT_ALL_TABLES'), ',NO_AUTO_VALUE_ON_ZERO')

Actual results.
key = sql_mode
value = CONCAT

error log
# cat proxysql.log | grep sql_mode | head -n1
2019-02-14 10:47:29 MySQL_Session.cpp:1610:handler_again___status_SETTING_SQL_MODE(): [WARNING] Error while setting SQL_MODE: 1231, Variable 'sql_mode' can't be set to the value of 'CONCAT'

#1519
If the CONCAT function is nested like this issue, there is a possibility that a SQL error has occurred.
I solved my environmental problem with this fix.
Please let me know if I need to add test code.
Thanks!!",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1905,2019-02-15T07:08:26Z,2019-03-22T14:32:47Z,2019-03-25T02:40:22Z,CLOSED,False,1,1,1,https://github.com/cahlchang,Fix set_parser RE2 Pattern for sql_mode,1,[],https://github.com/sysown/proxysql/pull/1905,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/1905#issuecomment-475643639,"I added the CONCAT function to the nested parsing pattern.
see
#1904
As per the issue, I found a problem when parsing sql_mode.
When parsing the SESSION variable, it seems that interpretation becomes impossible if CONCAT function is nested.
SQL to be parsed.
SET @@SESSION.sql_mode = CONCAT(CONCAT(@@sql_mode, ', STRICT_ALL_TABLES'), ', NO_AUTO_VALUE_ON_ZERO');

This session variable is commonly used in RoR.
Expected results.
key = sql_mode
value = CONCAT(CONCAT(@@sql_mode, ',STRICT_ALL_TABLES'), ',NO_AUTO_VALUE_ON_ZERO')

Actual results.
key = sql_mode
value = CONCAT

error log
# cat proxysql.log | grep sql_mode | head -n1
2019-02-14 10:47:29 MySQL_Session.cpp:1610:handler_again___status_SETTING_SQL_MODE(): [WARNING] Error while setting SQL_MODE: 1231, Variable 'sql_mode' can't be set to the value of 'CONCAT'

#1519
If the CONCAT function is nested like this issue, there is a possibility that a SQL error has occurred.
I solved my environmental problem with this fix.
Please let me know if I need to add test code.
Thanks!!","@cahlchang : thank you very much for the PR.
I am closing this PR because commit 71977d6 solves it, and few more cases.
Thank you again!",True,{'THUMBS_UP': ['https://github.com/cahlchang']}
sysown/proxysql,https://github.com/sysown/proxysql,1907,2019-02-16T11:42:19Z,2019-02-18T14:04:40Z,2019-10-29T00:06:24Z,MERGED,True,4,2,1,https://github.com/renecannao,Fix crash if login without password #1893,1,[],https://github.com/sysown/proxysql/pull/1907,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/1907,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1907,2019-02-16T11:42:19Z,2019-02-18T14:04:40Z,2019-10-29T00:06:24Z,MERGED,True,4,2,1,https://github.com/renecannao,Fix crash if login without password #1893,1,[],https://github.com/sysown/proxysql/pull/1907,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1907#issuecomment-464524469,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1908,2019-02-16T11:43:12Z,2019-02-18T14:05:00Z,2019-10-29T00:06:22Z,MERGED,True,214,2,7,https://github.com/renecannao,V2.0.2 ldap variable,2,[],https://github.com/sysown/proxysql/pull/1908,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/1908,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1908,2019-02-16T11:43:12Z,2019-02-18T14:05:00Z,2019-10-29T00:06:22Z,MERGED,True,214,2,7,https://github.com/renecannao,V2.0.2 ldap variable,2,[],https://github.com/sysown/proxysql/pull/1908,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1908#issuecomment-464526231,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1910,2019-02-16T13:45:53Z,2019-02-18T14:05:16Z,2019-10-29T00:06:21Z,MERGED,True,1,1,1,https://github.com/renecannao,Bug fix for #1901,1,[],https://github.com/sysown/proxysql/pull/1910,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/1910,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1910,2019-02-16T13:45:53Z,2019-02-18T14:05:16Z,2019-10-29T00:06:21Z,MERGED,True,1,1,1,https://github.com/renecannao,Bug fix for #1901,1,[],https://github.com/sysown/proxysql/pull/1910,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1910#issuecomment-464526249,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1912,2019-02-17T04:17:34Z,2019-02-18T14:04:22Z,2019-10-29T00:06:19Z,MERGED,True,28,20,4,https://github.com/renecannao,V2.0.2 1891,2,[],https://github.com/sysown/proxysql/pull/1912,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/1912,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1912,2019-02-17T04:17:34Z,2019-02-18T14:04:22Z,2019-10-29T00:06:19Z,MERGED,True,28,20,4,https://github.com/renecannao,V2.0.2 1891,2,[],https://github.com/sysown/proxysql/pull/1912,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1912#issuecomment-464526276,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1917,2019-02-20T03:52:23Z,2019-02-20T05:34:46Z,2019-02-20T05:34:49Z,MERGED,True,2,2,2,https://github.com/carsonip,Fix minor typo,1,[],https://github.com/sysown/proxysql/pull/1917,https://github.com/carsonip,1,https://github.com/sysown/proxysql/pull/1917,Fix minor typo in README and command line interface.,Fix minor typo in README and command line interface.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1917,2019-02-20T03:52:23Z,2019-02-20T05:34:46Z,2019-02-20T05:34:49Z,MERGED,True,2,2,2,https://github.com/carsonip,Fix minor typo,1,[],https://github.com/sysown/proxysql/pull/1917,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1917#issuecomment-465412171,Fix minor typo in README and command line interface.,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1917,2019-02-20T03:52:23Z,2019-02-20T05:34:46Z,2019-02-20T05:34:49Z,MERGED,True,2,2,2,https://github.com/carsonip,Fix minor typo,1,[],https://github.com/sysown/proxysql/pull/1917,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/1917#issuecomment-465431540,Fix minor typo in README and command line interface.,Thank you.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1919,2019-02-20T09:25:34Z,2019-02-25T11:57:07Z,2019-02-25T11:57:07Z,MERGED,True,27,11,1,https://github.com/lorenzocipriani,Fixed path of proxysql.service file,2,[],https://github.com/sysown/proxysql/pull/1919,https://github.com/lorenzocipriani,1,https://github.com/sysown/proxysql/pull/1919,"Given that the proxysql.service file has been moved to the subfolder systemd/system, the path in the Makefile had to be updated as well.","Given that the proxysql.service file has been moved to the subfolder systemd/system, the path in the Makefile had to be updated as well.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1919,2019-02-20T09:25:34Z,2019-02-25T11:57:07Z,2019-02-25T11:57:07Z,MERGED,True,27,11,1,https://github.com/lorenzocipriani,Fixed path of proxysql.service file,2,[],https://github.com/sysown/proxysql/pull/1919,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1919#issuecomment-465494712,"Given that the proxysql.service file has been moved to the subfolder systemd/system, the path in the Makefile had to be updated as well.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1922,2019-02-22T07:46:45Z,2019-03-22T08:47:19Z,2019-03-25T07:02:16Z,MERGED,True,141,5,7,https://github.com/ahaha-zhang,support more mysql system variables to keep mulitplexing enabled,7,[],https://github.com/sysown/proxysql/pull/1922,https://github.com/ahaha-zhang,1,https://github.com/sysown/proxysql/pull/1922,"Hi, Rene:
I recently ÔøΩdebug why some connections were not multiplexing. I find that there are too many types of query digests, such as ""select @@session.xxxx/select @@xxxx as yyy/select @@A,@b,@c"", kinds of connector init-SQL and creative developers:).
I notice that there are only 2 exceptions hardcoded ""select @@version/tx_isolation"" that don't disable multiplexing. The other way is to configure a query rule. However, I have to configure too many kinds of query digests. Being able to configure more variables and support more kinds of queries is definitely preferred.
A new global variable in proxysql, default ""tx_isolation,version"":
mysql> show variables like 'mysql-keep_multiplexing_variables';
+-----------------------------------+----------------------+
| Variable_name                     | Value                |
+-----------------------------------+----------------------+
| mysql-keep_multiplexing_variables | tx_isolation,version |
+-----------------------------------+----------------------+
1 row in set (0.00 sec)
A new function
bool MySQL_Connection::IsKeepMultiplexEnabledVariables(char *query_digest_text)
Support more kinds of query_digest_text:
select @@Version,@@tx_isolation;
select @@Version as aaa,@@tx_isolation as bbb,......;","Hi, Rene:
I recently ÔøΩdebug why some connections were not multiplexing. I find that there are too many types of query digests, such as ""select @@session.xxxx/select @@xxxx as yyy/select @@A,@b,@c"", kinds of connector init-SQL and creative developers:).
I notice that there are only 2 exceptions hardcoded ""select @@version/tx_isolation"" that don't disable multiplexing. The other way is to configure a query rule. However, I have to configure too many kinds of query digests. Being able to configure more variables and support more kinds of queries is definitely preferred.
A new global variable in proxysql, default ""tx_isolation,version"":
mysql> show variables like 'mysql-keep_multiplexing_variables';
+-----------------------------------+----------------------+
| Variable_name                     | Value                |
+-----------------------------------+----------------------+
| mysql-keep_multiplexing_variables | tx_isolation,version |
+-----------------------------------+----------------------+
1 row in set (0.00 sec)
A new function
bool MySQL_Connection::IsKeepMultiplexEnabledVariables(char *query_digest_text)
Support more kinds of query_digest_text:
select @@Version,@@tx_isolation;
select @@Version as aaa,@@tx_isolation as bbb,......;",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1922,2019-02-22T07:46:45Z,2019-03-22T08:47:19Z,2019-03-25T07:02:16Z,MERGED,True,141,5,7,https://github.com/ahaha-zhang,support more mysql system variables to keep mulitplexing enabled,7,[],https://github.com/sysown/proxysql/pull/1922,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1922#issuecomment-466305594,"Hi, Rene:
I recently ÔøΩdebug why some connections were not multiplexing. I find that there are too many types of query digests, such as ""select @@session.xxxx/select @@xxxx as yyy/select @@A,@b,@c"", kinds of connector init-SQL and creative developers:).
I notice that there are only 2 exceptions hardcoded ""select @@version/tx_isolation"" that don't disable multiplexing. The other way is to configure a query rule. However, I have to configure too many kinds of query digests. Being able to configure more variables and support more kinds of queries is definitely preferred.
A new global variable in proxysql, default ""tx_isolation,version"":
mysql> show variables like 'mysql-keep_multiplexing_variables';
+-----------------------------------+----------------------+
| Variable_name                     | Value                |
+-----------------------------------+----------------------+
| mysql-keep_multiplexing_variables | tx_isolation,version |
+-----------------------------------+----------------------+
1 row in set (0.00 sec)
A new function
bool MySQL_Connection::IsKeepMultiplexEnabledVariables(char *query_digest_text)
Support more kinds of query_digest_text:
select @@Version,@@tx_isolation;
select @@Version as aaa,@@tx_isolation as bbb,......;",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1922,2019-02-22T07:46:45Z,2019-03-22T08:47:19Z,2019-03-25T07:02:16Z,MERGED,True,141,5,7,https://github.com/ahaha-zhang,support more mysql system variables to keep mulitplexing enabled,7,[],https://github.com/sysown/proxysql/pull/1922,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/1922#issuecomment-469503328,"Hi, Rene:
I recently ÔøΩdebug why some connections were not multiplexing. I find that there are too many types of query digests, such as ""select @@session.xxxx/select @@xxxx as yyy/select @@A,@b,@c"", kinds of connector init-SQL and creative developers:).
I notice that there are only 2 exceptions hardcoded ""select @@version/tx_isolation"" that don't disable multiplexing. The other way is to configure a query rule. However, I have to configure too many kinds of query digests. Being able to configure more variables and support more kinds of queries is definitely preferred.
A new global variable in proxysql, default ""tx_isolation,version"":
mysql> show variables like 'mysql-keep_multiplexing_variables';
+-----------------------------------+----------------------+
| Variable_name                     | Value                |
+-----------------------------------+----------------------+
| mysql-keep_multiplexing_variables | tx_isolation,version |
+-----------------------------------+----------------------+
1 row in set (0.00 sec)
A new function
bool MySQL_Connection::IsKeepMultiplexEnabledVariables(char *query_digest_text)
Support more kinds of query_digest_text:
select @@Version,@@tx_isolation;
select @@Version as aaa,@@tx_isolation as bbb,......;","@ahaha-zhang : would it be possible to have some unit test for the code in this PR?
Thank you",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1922,2019-02-22T07:46:45Z,2019-03-22T08:47:19Z,2019-03-25T07:02:16Z,MERGED,True,141,5,7,https://github.com/ahaha-zhang,support more mysql system variables to keep mulitplexing enabled,7,[],https://github.com/sysown/proxysql/pull/1922,https://github.com/ahaha-zhang,4,https://github.com/sysown/proxysql/pull/1922#issuecomment-470253320,"Hi, Rene:
I recently ÔøΩdebug why some connections were not multiplexing. I find that there are too many types of query digests, such as ""select @@session.xxxx/select @@xxxx as yyy/select @@A,@b,@c"", kinds of connector init-SQL and creative developers:).
I notice that there are only 2 exceptions hardcoded ""select @@version/tx_isolation"" that don't disable multiplexing. The other way is to configure a query rule. However, I have to configure too many kinds of query digests. Being able to configure more variables and support more kinds of queries is definitely preferred.
A new global variable in proxysql, default ""tx_isolation,version"":
mysql> show variables like 'mysql-keep_multiplexing_variables';
+-----------------------------------+----------------------+
| Variable_name                     | Value                |
+-----------------------------------+----------------------+
| mysql-keep_multiplexing_variables | tx_isolation,version |
+-----------------------------------+----------------------+
1 row in set (0.00 sec)
A new function
bool MySQL_Connection::IsKeepMultiplexEnabledVariables(char *query_digest_text)
Support more kinds of query_digest_text:
select @@Version,@@tx_isolation;
select @@Version as aaa,@@tx_isolation as bbb,......;","@renecannao, I've added the unit test code for this PR. Thank you for your review :)
file location:test/keepmultiplexingvariables/client1.cpp
commit:e05fe558073032d9cad177f7d6de658d443f9478",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1922,2019-02-22T07:46:45Z,2019-03-22T08:47:19Z,2019-03-25T07:02:16Z,MERGED,True,141,5,7,https://github.com/ahaha-zhang,support more mysql system variables to keep mulitplexing enabled,7,[],https://github.com/sysown/proxysql/pull/1922,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/1922#issuecomment-475538932,"Hi, Rene:
I recently ÔøΩdebug why some connections were not multiplexing. I find that there are too many types of query digests, such as ""select @@session.xxxx/select @@xxxx as yyy/select @@A,@b,@c"", kinds of connector init-SQL and creative developers:).
I notice that there are only 2 exceptions hardcoded ""select @@version/tx_isolation"" that don't disable multiplexing. The other way is to configure a query rule. However, I have to configure too many kinds of query digests. Being able to configure more variables and support more kinds of queries is definitely preferred.
A new global variable in proxysql, default ""tx_isolation,version"":
mysql> show variables like 'mysql-keep_multiplexing_variables';
+-----------------------------------+----------------------+
| Variable_name                     | Value                |
+-----------------------------------+----------------------+
| mysql-keep_multiplexing_variables | tx_isolation,version |
+-----------------------------------+----------------------+
1 row in set (0.00 sec)
A new function
bool MySQL_Connection::IsKeepMultiplexEnabledVariables(char *query_digest_text)
Support more kinds of query_digest_text:
select @@Version,@@tx_isolation;
select @@Version as aaa,@@tx_isolation as bbb,......;","Thank you for the PR.
I will revert the last commit (81ea265) because fixed differently in f4d3d6b , and port it to 2.0 .
Thanks!",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1922,2019-02-22T07:46:45Z,2019-03-22T08:47:19Z,2019-03-25T07:02:16Z,MERGED,True,141,5,7,https://github.com/ahaha-zhang,support more mysql system variables to keep mulitplexing enabled,7,[],https://github.com/sysown/proxysql/pull/1922,https://github.com/ahaha-zhang,6,https://github.com/sysown/proxysql/pull/1922#issuecomment-476077881,"Hi, Rene:
I recently ÔøΩdebug why some connections were not multiplexing. I find that there are too many types of query digests, such as ""select @@session.xxxx/select @@xxxx as yyy/select @@A,@b,@c"", kinds of connector init-SQL and creative developers:).
I notice that there are only 2 exceptions hardcoded ""select @@version/tx_isolation"" that don't disable multiplexing. The other way is to configure a query rule. However, I have to configure too many kinds of query digests. Being able to configure more variables and support more kinds of queries is definitely preferred.
A new global variable in proxysql, default ""tx_isolation,version"":
mysql> show variables like 'mysql-keep_multiplexing_variables';
+-----------------------------------+----------------------+
| Variable_name                     | Value                |
+-----------------------------------+----------------------+
| mysql-keep_multiplexing_variables | tx_isolation,version |
+-----------------------------------+----------------------+
1 row in set (0.00 sec)
A new function
bool MySQL_Connection::IsKeepMultiplexEnabledVariables(char *query_digest_text)
Support more kinds of query_digest_text:
select @@Version,@@tx_isolation;
select @@Version as aaa,@@tx_isolation as bbb,......;","OK, My pleasure:)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1925,2019-02-25T11:22:38Z,2019-02-25T11:56:22Z,2019-02-25T11:56:22Z,MERGED,True,1,1,1,https://github.com/ShiroDN,Fixed systemd service parse error,1,[],https://github.com/sysown/proxysql/pull/1925,https://github.com/ShiroDN,1,https://github.com/sysown/proxysql/pull/1925,"Fixed systemd service restart specifier parse error. Restart value should be ""no"", ""never"" is not acceptable value according to systemd.service man page.
[/lib/systemd/system/proxysql.service:15] Failed to parse service restart specifier, ignoring: never","Fixed systemd service restart specifier parse error. Restart value should be ""no"", ""never"" is not acceptable value according to systemd.service man page.
[/lib/systemd/system/proxysql.service:15] Failed to parse service restart specifier, ignoring: never",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1925,2019-02-25T11:22:38Z,2019-02-25T11:56:22Z,2019-02-25T11:56:22Z,MERGED,True,1,1,1,https://github.com/ShiroDN,Fixed systemd service parse error,1,[],https://github.com/sysown/proxysql/pull/1925,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1925#issuecomment-466976549,"Fixed systemd service restart specifier parse error. Restart value should be ""no"", ""never"" is not acceptable value according to systemd.service man page.
[/lib/systemd/system/proxysql.service:15] Failed to parse service restart specifier, ignoring: never",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1925,2019-02-25T11:22:38Z,2019-02-25T11:56:22Z,2019-02-25T11:56:22Z,MERGED,True,1,1,1,https://github.com/ShiroDN,Fixed systemd service parse error,1,[],https://github.com/sysown/proxysql/pull/1925,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/1925#issuecomment-466984755,"Fixed systemd service restart specifier parse error. Restart value should be ""no"", ""never"" is not acceptable value according to systemd.service man page.
[/lib/systemd/system/proxysql.service:15] Failed to parse service restart specifier, ignoring: never",Thanks for the correction,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1926,2019-02-25T19:13:55Z,2019-03-16T11:05:25Z,2019-03-16T11:05:25Z,CLOSED,False,90,44,11,https://github.com/Werri,V2.0.3,24,[],https://github.com/sysown/proxysql/pull/1926,https://github.com/Werri,1,https://github.com/sysown/proxysql/pull/1926,fix issues,fix issues,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1926,2019-02-25T19:13:55Z,2019-03-16T11:05:25Z,2019-03-16T11:05:25Z,CLOSED,False,90,44,11,https://github.com/Werri,V2.0.3,24,[],https://github.com/sysown/proxysql/pull/1926,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1926#issuecomment-467143623,fix issues,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1926,2019-02-25T19:13:55Z,2019-03-16T11:05:25Z,2019-03-16T11:05:25Z,CLOSED,False,90,44,11,https://github.com/Werri,V2.0.3,24,[],https://github.com/sysown/proxysql/pull/1926,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/1926#issuecomment-467158446,fix issues,"hi @Werri - these are fixes from v2.0.3, why are you trying to merge them into v2.0.2?

v2.0.2 is final and has been released, anything new must go into v2.0.3",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1926,2019-02-25T19:13:55Z,2019-03-16T11:05:25Z,2019-03-16T11:05:25Z,CLOSED,False,90,44,11,https://github.com/Werri,V2.0.3,24,[],https://github.com/sysown/proxysql/pull/1926,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/1926#issuecomment-473520780,fix issues,Closing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1932,2019-02-28T07:16:37Z,2019-03-05T01:52:24Z,2019-10-29T00:06:08Z,MERGED,True,4,4,1,https://github.com/renecannao,Fix bug #1927,1,[],https://github.com/sysown/proxysql/pull/1932,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/1932,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1932,2019-02-28T07:16:37Z,2019-03-05T01:52:24Z,2019-10-29T00:06:08Z,MERGED,True,4,4,1,https://github.com/renecannao,Fix bug #1927,1,[],https://github.com/sysown/proxysql/pull/1932,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1932#issuecomment-468310751,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1945,2019-03-11T09:40:33Z,2019-03-13T10:42:40Z,2019-03-13T10:42:40Z,MERGED,True,1,4,1,https://github.com/carsonip,Fix skipped mypoll processing,1,[],https://github.com/sysown/proxysql/pull/1945,https://github.com/carsonip,1,https://github.com/sysown/proxysql/pull/1945,I reviewed the code casually and I realize a missing line. mypolls.remove_index_fast(n) moves the last item to index n. But continue will run n++ such that that entry in mypolls is skipped. Not sure if this even fixes anything. Also I have yet to compile / test this change.,I reviewed the code casually and I realize a missing line. mypolls.remove_index_fast(n) moves the last item to index n. But continue will run n++ such that that entry in mypolls is skipped. Not sure if this even fixes anything. Also I have yet to compile / test this change.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1945,2019-03-11T09:40:33Z,2019-03-13T10:42:40Z,2019-03-13T10:42:40Z,MERGED,True,1,4,1,https://github.com/carsonip,Fix skipped mypoll processing,1,[],https://github.com/sysown/proxysql/pull/1945,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1945#issuecomment-471469545,I reviewed the code casually and I realize a missing line. mypolls.remove_index_fast(n) moves the last item to index n. But continue will run n++ such that that entry in mypolls is skipped. Not sure if this even fixes anything. Also I have yet to compile / test this change.,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1945,2019-03-11T09:40:33Z,2019-03-13T10:42:40Z,2019-03-13T10:42:40Z,MERGED,True,1,4,1,https://github.com/carsonip,Fix skipped mypoll processing,1,[],https://github.com/sysown/proxysql/pull/1945,https://github.com/carsonip,3,https://github.com/sysown/proxysql/pull/1945#issuecomment-472065741,I reviewed the code casually and I realize a missing line. mypolls.remove_index_fast(n) moves the last item to index n. But continue will run n++ such that that entry in mypolls is skipped. Not sure if this even fixes anything. Also I have yet to compile / test this change.,There is a problem with the current commit. mypolls.remove_index_fast(n); will run even if exit_cond is false. Will fix soon.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1945,2019-03-11T09:40:33Z,2019-03-13T10:42:40Z,2019-03-13T10:42:40Z,MERGED,True,1,4,1,https://github.com/carsonip,Fix skipped mypoll processing,1,[],https://github.com/sysown/proxysql/pull/1945,https://github.com/carsonip,4,https://github.com/sysown/proxysql/pull/1945#issuecomment-472115791,I reviewed the code casually and I realize a missing line. mypolls.remove_index_fast(n) moves the last item to index n. But continue will run n++ such that that entry in mypolls is skipped. Not sure if this even fixes anything. Also I have yet to compile / test this change.,Did a force push. Make sure it doesn't move on after mypolls.remove_index_fast(n);. Please let me know whether this makes sense.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1945,2019-03-11T09:40:33Z,2019-03-13T10:42:40Z,2019-03-13T10:42:40Z,MERGED,True,1,4,1,https://github.com/carsonip,Fix skipped mypoll processing,1,[],https://github.com/sysown/proxysql/pull/1945,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/1945#issuecomment-472370629,I reviewed the code casually and I realize a missing line. mypolls.remove_index_fast(n) moves the last item to index n. But continue will run n++ such that that entry in mypolls is skipped. Not sure if this even fixes anything. Also I have yet to compile / test this change.,"It makes sense to me.
Thank you",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1948,2019-03-13T03:22:33Z,2019-03-13T10:43:00Z,2019-03-13T10:43:09Z,MERGED,True,2,4,1,https://github.com/carsonip,Fix skipping sessions in idle threads iteration,1,[],https://github.com/sysown/proxysql/pull/1948,https://github.com/carsonip,1,https://github.com/sysown/proxysql/pull/1948,I noticed these weird looking loops which are always skipping half of the elements in the array. It should be fixed unless this behavior is intended.,I noticed these weird looking loops which are always skipping half of the elements in the array. It should be fixed unless this behavior is intended.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1948,2019-03-13T03:22:33Z,2019-03-13T10:43:00Z,2019-03-13T10:43:09Z,MERGED,True,2,4,1,https://github.com/carsonip,Fix skipping sessions in idle threads iteration,1,[],https://github.com/sysown/proxysql/pull/1948,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1948#issuecomment-472265288,I noticed these weird looking loops which are always skipping half of the elements in the array. It should be fixed unless this behavior is intended.,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1948,2019-03-13T03:22:33Z,2019-03-13T10:43:00Z,2019-03-13T10:43:09Z,MERGED,True,2,4,1,https://github.com/carsonip,Fix skipping sessions in idle threads iteration,1,[],https://github.com/sysown/proxysql/pull/1948,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/1948#issuecomment-472300075,I noticed these weird looking loops which are always skipping half of the elements in the array. It should be fixed unless this behavior is intended.,"Very good catch!
Do you think #1939 is related to this?",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1948,2019-03-13T03:22:33Z,2019-03-13T10:43:00Z,2019-03-13T10:43:09Z,MERGED,True,2,4,1,https://github.com/carsonip,Fix skipping sessions in idle threads iteration,1,[],https://github.com/sysown/proxysql/pull/1948,https://github.com/carsonip,4,https://github.com/sysown/proxysql/pull/1948#issuecomment-472302148,I noticed these weird looking loops which are always skipping half of the elements in the array. It should be fixed unless this behavior is intended.,"Not very sure. Some sessions will stay in idle_mysql_sessions and resume_mysql_sessions. They are of index 1, 2, 3, etc, and not in the later half of the array. If a session has to stuck indefinitely in this array, the session has to stay in the early half of the array and the array->len must not be too low (which is possible for busy servers). It is hard to say.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1948,2019-03-13T03:22:33Z,2019-03-13T10:43:00Z,2019-03-13T10:43:09Z,MERGED,True,2,4,1,https://github.com/carsonip,Fix skipping sessions in idle threads iteration,1,[],https://github.com/sysown/proxysql/pull/1948,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/1948#issuecomment-472308500,I noticed these weird looking loops which are always skipping half of the elements in the array. It should be fixed unless this behavior is intended.,"In the current code (absolutely bugged), the session with index 0 and all the sessions in the second half of the array are processed, because remove_index_fast(0) removes the element in index 0 and move in the same position (0) the element with highest index.
Although very difficult, it is possible that a session stays in the array forever:

its index position should be in the first half of the array
new elements are added and removed to the array in such a way that its index position should always be in the first half of the array.

This to happen is very unlikely, but no impossible.
So probably this is related to #1939",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1948,2019-03-13T03:22:33Z,2019-03-13T10:43:00Z,2019-03-13T10:43:09Z,MERGED,True,2,4,1,https://github.com/carsonip,Fix skipping sessions in idle threads iteration,1,[],https://github.com/sysown/proxysql/pull/1948,https://github.com/carsonip,6,https://github.com/sysown/proxysql/pull/1948#issuecomment-472309857,I noticed these weird looking loops which are always skipping half of the elements in the array. It should be fixed unless this behavior is intended.,"That is also how I understand the bugged code. I can check if this fixes my hang issue. My issue usually can be reproduced in a few hours. If it does not happen in 1 day, it should be fixed.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1948,2019-03-13T03:22:33Z,2019-03-13T10:43:00Z,2019-03-13T10:43:09Z,MERGED,True,2,4,1,https://github.com/carsonip,Fix skipping sessions in idle threads iteration,1,[],https://github.com/sysown/proxysql/pull/1948,https://github.com/renecannao,7,https://github.com/sysown/proxysql/pull/1948#issuecomment-472310239,I noticed these weird looking loops which are always skipping half of the elements in the array. It should be fixed unless this behavior is intended.,"Please let me know.
Thank you!",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1948,2019-03-13T03:22:33Z,2019-03-13T10:43:00Z,2019-03-13T10:43:09Z,MERGED,True,2,4,1,https://github.com/carsonip,Fix skipping sessions in idle threads iteration,1,[],https://github.com/sysown/proxysql/pull/1948,https://github.com/carsonip,8,https://github.com/sysown/proxysql/pull/1948#issuecomment-472332166,I noticed these weird looking loops which are always skipping half of the elements in the array. It should be fixed unless this behavior is intended.,No it does not fix #1939.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1948,2019-03-13T03:22:33Z,2019-03-13T10:43:00Z,2019-03-13T10:43:09Z,MERGED,True,2,4,1,https://github.com/carsonip,Fix skipping sessions in idle threads iteration,1,[],https://github.com/sysown/proxysql/pull/1948,https://github.com/renecannao,9,https://github.com/sysown/proxysql/pull/1948#issuecomment-472370828,I noticed these weird looking loops which are always skipping half of the elements in the array. It should be fixed unless this behavior is intended.,"Merged.
Thanks",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1951,2019-03-14T10:38:29Z,2019-03-14T13:05:38Z,2019-03-14T13:05:38Z,CLOSED,False,5,2,1,https://github.com/carsonip,[WIP] Make epoll thread listen to POLLOUT conditionally,1,[],https://github.com/sysown/proxysql/pull/1951,https://github.com/carsonip,1,https://github.com/sysown/proxysql/pull/1951,"Should fix #1939. WIP, waiting to confirm whether this is the right fix.","Should fix #1939. WIP, waiting to confirm whether this is the right fix.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1951,2019-03-14T10:38:29Z,2019-03-14T13:05:38Z,2019-03-14T13:05:38Z,CLOSED,False,5,2,1,https://github.com/carsonip,[WIP] Make epoll thread listen to POLLOUT conditionally,1,[],https://github.com/sysown/proxysql/pull/1951,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1951#issuecomment-472797248,"Should fix #1939. WIP, waiting to confirm whether this is the right fix.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1951,2019-03-14T10:38:29Z,2019-03-14T13:05:38Z,2019-03-14T13:05:38Z,CLOSED,False,5,2,1,https://github.com/carsonip,[WIP] Make epoll thread listen to POLLOUT conditionally,1,[],https://github.com/sysown/proxysql/pull/1951,https://github.com/carsonip,3,https://github.com/sysown/proxysql/pull/1951#issuecomment-472844482,"Should fix #1939. WIP, waiting to confirm whether this is the right fix.",Closing this PR in favor of a better fix.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1952,2019-03-14T14:39:37Z,2019-03-16T11:01:02Z,2019-03-16T11:01:09Z,MERGED,True,3,1,1,https://github.com/carsonip,Do not move throttled session to epoll,1,[],https://github.com/sysown/proxysql/pull/1952,https://github.com/carsonip,1,https://github.com/sysown/proxysql/pull/1952,"Epoll thread does not poll for EPOLLOUT. If a throttled session with
pending data out is moved to epoll thread, the session will stay in
epoll thread indefinitely, causing a hang observed by client. Fix by not
moving throttled session to epoll thread.
Fix #1939","Epoll thread does not poll for EPOLLOUT. If a throttled session with
pending data out is moved to epoll thread, the session will stay in
epoll thread indefinitely, causing a hang observed by client. Fix by not
moving throttled session to epoll thread.
Fix #1939",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1952,2019-03-14T14:39:37Z,2019-03-16T11:01:02Z,2019-03-16T11:01:09Z,MERGED,True,3,1,1,https://github.com/carsonip,Do not move throttled session to epoll,1,[],https://github.com/sysown/proxysql/pull/1952,https://github.com/carsonip,2,https://github.com/sysown/proxysql/pull/1952#issuecomment-472892268,"Epoll thread does not poll for EPOLLOUT. If a throttled session with
pending data out is moved to epoll thread, the session will stay in
epoll thread indefinitely, causing a hang observed by client. Fix by not
moving throttled session to epoll thread.
Fix #1939",Don't merge first. I'll confirm whether this fixes #1939.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1952,2019-03-14T14:39:37Z,2019-03-16T11:01:02Z,2019-03-16T11:01:09Z,MERGED,True,3,1,1,https://github.com/carsonip,Do not move throttled session to epoll,1,[],https://github.com/sysown/proxysql/pull/1952,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/1952#issuecomment-472893487,"Epoll thread does not poll for EPOLLOUT. If a throttled session with
pending data out is moved to epoll thread, the session will stay in
epoll thread indefinitely, causing a hang observed by client. Fix by not
moving throttled session to epoll thread.
Fix #1939",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1952,2019-03-14T14:39:37Z,2019-03-16T11:01:02Z,2019-03-16T11:01:09Z,MERGED,True,3,1,1,https://github.com/carsonip,Do not move throttled session to epoll,1,[],https://github.com/sysown/proxysql/pull/1952,https://github.com/carsonip,4,https://github.com/sysown/proxysql/pull/1952#issuecomment-473265007,"Epoll thread does not poll for EPOLLOUT. If a throttled session with
pending data out is moved to epoll thread, the session will stay in
epoll thread indefinitely, causing a hang observed by client. Fix by not
moving throttled session to epoll thread.
Fix #1939",@renecannao The fix works well. Please merge.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1952,2019-03-14T14:39:37Z,2019-03-16T11:01:02Z,2019-03-16T11:01:09Z,MERGED,True,3,1,1,https://github.com/carsonip,Do not move throttled session to epoll,1,[],https://github.com/sysown/proxysql/pull/1952,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/1952#issuecomment-473520535,"Epoll thread does not poll for EPOLLOUT. If a throttled session with
pending data out is moved to epoll thread, the session will stay in
epoll thread indefinitely, causing a hang observed by client. Fix by not
moving throttled session to epoll thread.
Fix #1939",Thank you @carsonip !,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1953,2019-03-14T15:21:51Z,2019-03-16T11:04:01Z,2019-03-16T11:04:07Z,MERGED,True,6,5,3,https://github.com/carsonip,No throttle when throttle_max_bytes_per_second_to_client == 0,1,[],https://github.com/sysown/proxysql/pull/1953,https://github.com/carsonip,1,https://github.com/sysown/proxysql/pull/1953,"If throttle_max_bytes_per_second_to_client == 0, disable throttling.
This matches the mysql convention of 0 == no limit.","If throttle_max_bytes_per_second_to_client == 0, disable throttling.
This matches the mysql convention of 0 == no limit.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1953,2019-03-14T15:21:51Z,2019-03-16T11:04:01Z,2019-03-16T11:04:07Z,MERGED,True,6,5,3,https://github.com/carsonip,No throttle when throttle_max_bytes_per_second_to_client == 0,1,[],https://github.com/sysown/proxysql/pull/1953,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1953#issuecomment-472915613,"If throttle_max_bytes_per_second_to_client == 0, disable throttling.
This matches the mysql convention of 0 == no limit.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1953,2019-03-14T15:21:51Z,2019-03-16T11:04:01Z,2019-03-16T11:04:07Z,MERGED,True,6,5,3,https://github.com/carsonip,No throttle when throttle_max_bytes_per_second_to_client == 0,1,[],https://github.com/sysown/proxysql/pull/1953,https://github.com/carsonip,3,https://github.com/sysown/proxysql/pull/1953#issuecomment-472918080,"If throttle_max_bytes_per_second_to_client == 0, disable throttling.
This matches the mysql convention of 0 == no limit.","@renecannao

Should we change the default to 0? Although I think the current default is OK.
Should we change total_written in https://github.com/sysown/proxysql/pull/1953/files#diff-6535427570d12b480d5c0d5f83c0641eR468 to unsigned long long? It looks possible that this int may overflow. But it will not affect anything if throttle_max_bytes_per_second_to_client is 0.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1953,2019-03-14T15:21:51Z,2019-03-16T11:04:01Z,2019-03-16T11:04:07Z,MERGED,True,6,5,3,https://github.com/carsonip,No throttle when throttle_max_bytes_per_second_to_client == 0,1,[],https://github.com/sysown/proxysql/pull/1953,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/1953#issuecomment-473090534,"If throttle_max_bytes_per_second_to_client == 0, disable throttling.
This matches the mysql convention of 0 == no limit.","@carsonip:

I like the idea of changing default to 0
I don't think is needed. Because of this , total_written shouldn't be able to exceed INT_MAX/10 + a network buffer. Thoughts?",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1953,2019-03-14T15:21:51Z,2019-03-16T11:04:01Z,2019-03-16T11:04:07Z,MERGED,True,6,5,3,https://github.com/carsonip,No throttle when throttle_max_bytes_per_second_to_client == 0,1,[],https://github.com/sysown/proxysql/pull/1953,https://github.com/carsonip,5,https://github.com/sysown/proxysql/pull/1953#issuecomment-473267443,"If throttle_max_bytes_per_second_to_client == 0, disable throttling.
This matches the mysql convention of 0 == no limit.","2. I don't think is needed. Because of [this](https://github.com/sysown/proxysql/pull/1953/files#diff-6535427570d12b480d5c0d5f83c0641eR496) , `total_written` shouldn't be able to exceed INT_MAX/10 + a network buffer. Thoughts?


Right. It will only overflow when throttling is disabled, but it doesn't matter.
The next thing to do is to update the wiki: https://github.com/sysown/proxysql/wiki/Global-variables#mysql-throttle_max_bytes_per_second_to_client
Also I have changed the default of the variable. Please merge this PR if it looks good to you.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1953,2019-03-14T15:21:51Z,2019-03-16T11:04:01Z,2019-03-16T11:04:07Z,MERGED,True,6,5,3,https://github.com/carsonip,No throttle when throttle_max_bytes_per_second_to_client == 0,1,[],https://github.com/sysown/proxysql/pull/1953,https://github.com/renecannao,6,https://github.com/sysown/proxysql/pull/1953#issuecomment-473520705,"If throttle_max_bytes_per_second_to_client == 0, disable throttling.
This matches the mysql convention of 0 == no limit.",Thank you!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1954,2019-03-14T17:51:30Z,2019-03-16T11:04:23Z,2019-10-29T00:06:10Z,MERGED,True,6,2,1,https://github.com/renecannao,Fix bug in authentication after AuthSwitch,1,[],https://github.com/sysown/proxysql/pull/1954,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/1954,"If AuthSwitchResponse has a NULL char, parsing fails.
This is likely the root cause of #1944 , but also #1934","If AuthSwitchResponse has a NULL char, parsing fails.
This is likely the root cause of #1944 , but also #1934",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1954,2019-03-14T17:51:30Z,2019-03-16T11:04:23Z,2019-10-29T00:06:10Z,MERGED,True,6,2,1,https://github.com/renecannao,Fix bug in authentication after AuthSwitch,1,[],https://github.com/sysown/proxysql/pull/1954,https://github.com/himanshutecstub,2,https://github.com/sysown/proxysql/pull/1954#issuecomment-501682805,"If AuthSwitchResponse has a NULL char, parsing fails.
This is likely the root cause of #1944 , but also #1934",Fetch this issue in proxysql v2.0.4 & v2.0.5,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1958,2019-03-19T08:20:08Z,2019-03-20T00:17:42Z,2019-03-20T00:17:46Z,MERGED,True,13,13,10,https://github.com/carsonip,Fix minor typos,1,[],https://github.com/sysown/proxysql/pull/1958,https://github.com/carsonip,1,https://github.com/sysown/proxysql/pull/1958,Might as well fix some typos as I go through the code.,Might as well fix some typos as I go through the code.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1958,2019-03-19T08:20:08Z,2019-03-20T00:17:42Z,2019-03-20T00:17:46Z,MERGED,True,13,13,10,https://github.com/carsonip,Fix minor typos,1,[],https://github.com/sysown/proxysql/pull/1958,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1958#issuecomment-474241689,Might as well fix some typos as I go through the code.,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1958,2019-03-19T08:20:08Z,2019-03-20T00:17:42Z,2019-03-20T00:17:46Z,MERGED,True,13,13,10,https://github.com/carsonip,Fix minor typos,1,[],https://github.com/sysown/proxysql/pull/1958,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/1958#issuecomment-474634242,Might as well fix some typos as I go through the code.,Thanks!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1961,2019-03-20T02:33:46Z,2019-03-20T13:18:01Z,2019-03-20T13:18:08Z,MERGED,True,4,2,1,https://github.com/renecannao,Handle mysql_users.use_ssl from config file #1960,1,[],https://github.com/sysown/proxysql/pull/1961,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/1961,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1961,2019-03-20T02:33:46Z,2019-03-20T13:18:01Z,2019-03-20T13:18:08Z,MERGED,True,4,2,1,https://github.com/renecannao,Handle mysql_users.use_ssl from config file #1960,1,[],https://github.com/sysown/proxysql/pull/1961,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1961#issuecomment-474824327,,üëç,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1963,2019-03-20T05:52:37Z,2019-03-20T13:36:58Z,2019-04-01T11:08:06Z,MERGED,True,10,1,6,https://github.com/alexjurkiewicz,feat: Add logrotate script and update log location,1,[],https://github.com/sysown/proxysql/pull/1963,https://github.com/alexjurkiewicz,1,https://github.com/sysown/proxysql/pull/1963,"Write to /var/log/proxysql.log by default, and add a logrotate script
which manages this path.
Unfortunately, the logrotate script can't use PROXYSQL FLUSH LOGS; to
tell ProxySQL to rotate file handles*, so we use copytruncate instead.
It would be nice if ProxySQL could rotate file handles following a
signal in future...
* For two reasons:

There's no safe / standard way to find admin credentials
mysql(1) client may not be installed","Write to /var/log/proxysql.log by default, and add a logrotate script
which manages this path.
Unfortunately, the logrotate script can't use PROXYSQL FLUSH LOGS; to
tell ProxySQL to rotate file handles*, so we use copytruncate instead.
It would be nice if ProxySQL could rotate file handles following a
signal in future...
* For two reasons:

There's no safe / standard way to find admin credentials
mysql(1) client may not be installed",True,"{'THUMBS_UP': ['https://github.com/renecannao', 'https://github.com/gondaz']}"
sysown/proxysql,https://github.com/sysown/proxysql,1963,2019-03-20T05:52:37Z,2019-03-20T13:36:58Z,2019-04-01T11:08:06Z,MERGED,True,10,1,6,https://github.com/alexjurkiewicz,feat: Add logrotate script and update log location,1,[],https://github.com/sysown/proxysql/pull/1963,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1963#issuecomment-474695393,"Write to /var/log/proxysql.log by default, and add a logrotate script
which manages this path.
Unfortunately, the logrotate script can't use PROXYSQL FLUSH LOGS; to
tell ProxySQL to rotate file handles*, so we use copytruncate instead.
It would be nice if ProxySQL could rotate file handles following a
signal in future...
* For two reasons:

There's no safe / standard way to find admin credentials
mysql(1) client may not be installed",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1963,2019-03-20T05:52:37Z,2019-03-20T13:36:58Z,2019-04-01T11:08:06Z,MERGED,True,10,1,6,https://github.com/alexjurkiewicz,feat: Add logrotate script and update log location,1,[],https://github.com/sysown/proxysql/pull/1963,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/1963#issuecomment-474696016,"Write to /var/log/proxysql.log by default, and add a logrotate script
which manages this path.
Unfortunately, the logrotate script can't use PROXYSQL FLUSH LOGS; to
tell ProxySQL to rotate file handles*, so we use copytruncate instead.
It would be nice if ProxySQL could rotate file handles following a
signal in future...
* For two reasons:

There's no safe / standard way to find admin credentials
mysql(1) client may not be installed","I like it, thanks!
Assigning to @pondix that normally takes care of packaging.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1963,2019-03-20T05:52:37Z,2019-03-20T13:36:58Z,2019-04-01T11:08:06Z,MERGED,True,10,1,6,https://github.com/alexjurkiewicz,feat: Add logrotate script and update log location,1,[],https://github.com/sysown/proxysql/pull/1963,https://github.com/BhuviTheDataGuy,4,https://github.com/sysown/proxysql/pull/1963#issuecomment-477515776,"Write to /var/log/proxysql.log by default, and add a logrotate script
which manages this path.
Unfortunately, the logrotate script can't use PROXYSQL FLUSH LOGS; to
tell ProxySQL to rotate file handles*, so we use copytruncate instead.
It would be nice if ProxySQL could rotate file handles following a
signal in future...
* For two reasons:

There's no safe / standard way to find admin credentials
mysql(1) client may not be installed","I have installed Proxysql 2.0.3 on Ubuntu 18.04. But after installation, the log file was not generated.
I checked at /var/lib/proxysql/(previous version location) and /var/log.
But Im not able to find the log file. Tried to manually created with chown proxysql:proxysql /var/log/proxysql.log , but thats not working.
Workaroud: (Im using the old log file location)
vi /etc/proxysql.cnf
errorlog=""/var/lib/proxysql/proxysql.log""

Save
Edit log rotate file:
vi /etc/logrotate.d/proxysql/proxysql
/var/lib/proxysql/proxysql.log {
    compress
    daily
    rotate 10
    missingok
    notifempty
    copytruncate
}

restart proxysql",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1963,2019-03-20T05:52:37Z,2019-03-20T13:36:58Z,2019-04-01T11:08:06Z,MERGED,True,10,1,6,https://github.com/alexjurkiewicz,feat: Add logrotate script and update log location,1,[],https://github.com/sysown/proxysql/pull/1963,https://github.com/alexjurkiewicz,5,https://github.com/sysown/proxysql/pull/1963#issuecomment-477527022,"Write to /var/log/proxysql.log by default, and add a logrotate script
which manages this path.
Unfortunately, the logrotate script can't use PROXYSQL FLUSH LOGS; to
tell ProxySQL to rotate file handles*, so we use copytruncate instead.
It would be nice if ProxySQL could rotate file handles following a
signal in future...
* For two reasons:

There's no safe / standard way to find admin credentials
mysql(1) client may not be installed","Just to be sure are you specifying the log path in your config file? Can
you check /process/$pid/fd and see if there is a link to the file in there?
‚Ä¶
On Thu., 28 Mar. 2019, 20:27 BhuviTheDataGuy, ***@***.***> wrote:
 I have installed Proxysql 2.0.3 on Ubuntu 18.04. But after installation,
 the log file was not generated.
 I checked at /var/lib/proxysql/(previous version location) and /var/log.

 But Im not able to find the log file. Tried to manually created with chown
 proxysql:proxysql /var/log/proxysql.log , but thats not working.

 ‚Äî
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#1963 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AAXKdXV0Kk6ldNni3ZG_7iCuK4BI0ZYpks5vbIr-gaJpZM4b-h71>
 .",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1963,2019-03-20T05:52:37Z,2019-03-20T13:36:58Z,2019-04-01T11:08:06Z,MERGED,True,10,1,6,https://github.com/alexjurkiewicz,feat: Add logrotate script and update log location,1,[],https://github.com/sysown/proxysql/pull/1963,https://github.com/BhuviTheDataGuy,6,https://github.com/sysown/proxysql/pull/1963#issuecomment-477535947,"Write to /var/log/proxysql.log by default, and add a logrotate script
which manages this path.
Unfortunately, the logrotate script can't use PROXYSQL FLUSH LOGS; to
tell ProxySQL to rotate file handles*, so we use copytruncate instead.
It would be nice if ProxySQL could rotate file handles following a
signal in future...
* For two reasons:

There's no safe / standard way to find admin credentials
mysql(1) client may not be installed","Manually added the log file location as /var/lib/proxysql/proxysql.log
Then
lsof -u proxysql | grep log
(sd-pam 5773 proxysql mem REG 8,1 14432 2073 /lib/x86_64-linux-gnu/security/pam_loginuid.so
proxysql 5799 proxysql 1w REG 8,1 4554 258360 /var/lib/proxysql/proxysql.log
proxysql 5799 proxysql 2w REG 8,1 4554 258360 /var/lib/proxysql/proxysql.log


Default config (/var/log/proxysql.log)
root@proxysql-01:/home/pankaj_kumar# service proxysql restart
root@proxysql-01:/home/pankaj_kumar# lsof -u proxysql | grep log
(sd-pam 6547 proxysql mem REG 8,1 14432 2073 /lib/x86_64-linux-gnu/security/pam_loginuid.so
root@proxysql-01:/home/pankaj_kumar#",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1963,2019-03-20T05:52:37Z,2019-03-20T13:36:58Z,2019-04-01T11:08:06Z,MERGED,True,10,1,6,https://github.com/alexjurkiewicz,feat: Add logrotate script and update log location,1,[],https://github.com/sysown/proxysql/pull/1963,https://github.com/alexjurkiewicz,7,https://github.com/sysown/proxysql/pull/1963#issuecomment-477805903,"Write to /var/log/proxysql.log by default, and add a logrotate script
which manages this path.
Unfortunately, the logrotate script can't use PROXYSQL FLUSH LOGS; to
tell ProxySQL to rotate file handles*, so we use copytruncate instead.
It would be nice if ProxySQL could rotate file handles following a
signal in future...
* For two reasons:

There's no safe / standard way to find admin credentials
mysql(1) client may not be installed","I understand the issue(s):

Log file is not pre-created, and proxysql has no permission to create it
Logrotate is deployed to incorrect directory (/etc/logrotate.d/proxysql/proxysql.conf)

I'm not sure why it failed once you created the log file by hand. I performed the same test and things worked.
I'm testing a fix locally now...",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1963,2019-03-20T05:52:37Z,2019-03-20T13:36:58Z,2019-04-01T11:08:06Z,MERGED,True,10,1,6,https://github.com/alexjurkiewicz,feat: Add logrotate script and update log location,1,[],https://github.com/sysown/proxysql/pull/1963,https://github.com/BhuviTheDataGuy,8,https://github.com/sysown/proxysql/pull/1963#issuecomment-477872910,"Write to /var/log/proxysql.log by default, and add a logrotate script
which manages this path.
Unfortunately, the logrotate script can't use PROXYSQL FLUSH LOGS; to
tell ProxySQL to rotate file handles*, so we use copytruncate instead.
It would be nice if ProxySQL could rotate file handles following a
signal in future...
* For two reasons:

There's no safe / standard way to find admin credentials
mysql(1) client may not be installed","Hey @alexjurkiewicz
Thanks for your effort. I tried to reproduce one more time on a fresh VM.
OS Version:
cat /etc/*-release
DISTRIB_ID=Ubuntu
DISTRIB_RELEASE=18.10
DISTRIB_CODENAME=cosmic
DISTRIB_DESCRIPTION=""Ubuntu 18.10""
NAME=""Ubuntu""
VERSION=""18.10 (Cosmic Cuttlefish)""
ID=ubuntu
ID_LIKE=debian
PRETTY_NAME=""Ubuntu 18.10""
VERSION_ID=""18.10""
HOME_URL=""https://www.ubuntu.com/""
SUPPORT_URL=""https://help.ubuntu.com/""
BUG_REPORT_URL=""https://bugs.launchpad.net/ubuntu/""
PRIVACY_POLICY_URL=""https://www.ubuntu.com/legal/terms-and-policies/privacy-policy""
VERSION_CODENAME=cosmic
UBUNTU_CODENAME=cosmic

Below are the steps I have done.
apt-get update
apt-get upgrade
wget https://github.com/sysown/proxysql/releases/download/v2.0.3/proxysql_2.0.3-ubuntu18_amd64.deb
dpkg -i proxysql_2.0.3-ubuntu18_amd64.deb 
wget https://dev.mysql.com/get/mysql-apt-config_0.8.12-1_all.deb
dpkg -i mysql-apt-config_0.8.12-1_all.deb 
apt-get update
apt-get install mysql-client
service proxysql start

But Im not able to find the log file. Then manually creating the log file.
service proxysql stop
touch proxysql.log
chown proxysql:proxysql proxysql.log 
usermod -a -G syslog proxysql
service proxysql start

But still the log file is empty.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1963,2019-03-20T05:52:37Z,2019-03-20T13:36:58Z,2019-04-01T11:08:06Z,MERGED,True,10,1,6,https://github.com/alexjurkiewicz,feat: Add logrotate script and update log location,1,[],https://github.com/sysown/proxysql/pull/1963,https://github.com/alexjurkiewicz,9,https://github.com/sysown/proxysql/pull/1963#issuecomment-477874852,"Write to /var/log/proxysql.log by default, and add a logrotate script
which manages this path.
Unfortunately, the logrotate script can't use PROXYSQL FLUSH LOGS; to
tell ProxySQL to rotate file handles*, so we use copytruncate instead.
It would be nice if ProxySQL could rotate file handles following a
signal in future...
* For two reasons:

There's no safe / standard way to find admin credentials
mysql(1) client may not be installed","I've pushed a branch fix-logs-deb to my fork which should fix the issue.
Unfortunately I'm getting a build error which doesn't seem related and I'll
be away this weekend, so haven't been able to completely test it:
Build error log snippet from make ubuntu18 MAKE=make
ubuntu18_build_1       | [ 99%] Built target view
ubuntu18_build_1       | [100%] Linking C executable result
ubuntu18_build_1       | make[4]: Leaving directory
'/opt/proxysql/deps/mariadb-client-library/mariadb-connector-c-3.0.2-src'
ubuntu18_build_1       | [100%] Built target result
ubuntu18_build_1       | make[3]: Leaving directory
'/opt/proxysql/deps/mariadb-client-library/mariadb-connector-c-3.0.2-src'
ubuntu18_build_1       | make[2]: Leaving directory
'/opt/proxysql/deps/mariadb-client-library/mariadb-connector-c-3.0.2-src'
ubuntu18_build_1       | make[1]: Leaving directory '/opt/proxysql/deps'
ubuntu18_build_1       | make: *** empty string invalid as file name.  Stop.
proxysql_ubuntu18_build_1 exited with code 2",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1963,2019-03-20T05:52:37Z,2019-03-20T13:36:58Z,2019-04-01T11:08:06Z,MERGED,True,10,1,6,https://github.com/alexjurkiewicz,feat: Add logrotate script and update log location,1,[],https://github.com/sysown/proxysql/pull/1963,https://github.com/BhuviTheDataGuy,10,https://github.com/sysown/proxysql/pull/1963#issuecomment-477919633,"Write to /var/log/proxysql.log by default, and add a logrotate script
which manages this path.
Unfortunately, the logrotate script can't use PROXYSQL FLUSH LOGS; to
tell ProxySQL to rotate file handles*, so we use copytruncate instead.
It would be nice if ProxySQL could rotate file handles following a
signal in future...
* For two reasons:

There's no safe / standard way to find admin credentials
mysql(1) client may not be installed","One more update:
Same issue found on CentOs7. But we can run this to fix it.
Fix:
touch /var/log/proxysql.log
chown proxysql:proxysql proxysql.log 
service proxysql restart",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1963,2019-03-20T05:52:37Z,2019-03-20T13:36:58Z,2019-04-01T11:08:06Z,MERGED,True,10,1,6,https://github.com/alexjurkiewicz,feat: Add logrotate script and update log location,1,[],https://github.com/sysown/proxysql/pull/1963,https://github.com/pondix,11,https://github.com/sysown/proxysql/pull/1963#issuecomment-478531862,"Write to /var/log/proxysql.log by default, and add a logrotate script
which manages this path.
Unfortunately, the logrotate script can't use PROXYSQL FLUSH LOGS; to
tell ProxySQL to rotate file handles*, so we use copytruncate instead.
It would be nice if ProxySQL could rotate file handles following a
signal in future...
* For two reasons:

There's no safe / standard way to find admin credentials
mysql(1) client may not be installed","@BhuviTheDataGuy / @alexjurkiewicz
We've discussed internally and decided to move the default path back to /var/lib/proxysql/proxysql.log in the default config file. Feel free to customise as you wish in your local installations making sure that ""proxysql"" has suitable permissions to write to the file (as @BhuviTheDataGuy pointed out).
I've also added some additional fixes for the logrotate location in this PR: #1991",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1963,2019-03-20T05:52:37Z,2019-03-20T13:36:58Z,2019-04-01T11:08:06Z,MERGED,True,10,1,6,https://github.com/alexjurkiewicz,feat: Add logrotate script and update log location,1,[],https://github.com/sysown/proxysql/pull/1963,https://github.com/BhuviTheDataGuy,12,https://github.com/sysown/proxysql/pull/1963#issuecomment-478535937,"Write to /var/log/proxysql.log by default, and add a logrotate script
which manages this path.
Unfortunately, the logrotate script can't use PROXYSQL FLUSH LOGS; to
tell ProxySQL to rotate file handles*, so we use copytruncate instead.
It would be nice if ProxySQL could rotate file handles following a
signal in future...
* For two reasons:

There's no safe / standard way to find admin credentials
mysql(1) client may not be installed","Hey @pondix
Thanks for the fix.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1964,2019-03-20T06:54:11Z,2019-03-20T13:40:09Z,2019-03-21T13:19:57Z,MERGED,True,114,137,8,https://github.com/alexjurkiewicz,Simpler build scripts,8,[],https://github.com/sysown/proxysql/pull/1964,https://github.com/alexjurkiewicz,1,https://github.com/sysown/proxysql/pull/1964,"This is a pretty invasive change to the build system, but I didn't see a good way to split it up.
There are two major improvements:

Single build script for each package type (rpm, deb), rather than three
Simplified and hardened the build script

There are also a few minor fixes I found along the way:

Add error logging for make install and make uninstall on unsupported OS (eg macOS)
Fix RPM build warning
Delete extra directory during deb builder pre-cleanup for consistency with rpm builder","This is a pretty invasive change to the build system, but I didn't see a good way to split it up.
There are two major improvements:

Single build script for each package type (rpm, deb), rather than three
Simplified and hardened the build script

There are also a few minor fixes I found along the way:

Add error logging for make install and make uninstall on unsupported OS (eg macOS)
Fix RPM build warning
Delete extra directory during deb builder pre-cleanup for consistency with rpm builder",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1964,2019-03-20T06:54:11Z,2019-03-20T13:40:09Z,2019-03-21T13:19:57Z,MERGED,True,114,137,8,https://github.com/alexjurkiewicz,Simpler build scripts,8,[],https://github.com/sysown/proxysql/pull/1964,https://github.com/alexjurkiewicz,2,https://github.com/sysown/proxysql/pull/1964#issuecomment-474709388,"This is a pretty invasive change to the build system, but I didn't see a good way to split it up.
There are two major improvements:

Single build script for each package type (rpm, deb), rather than three
Simplified and hardened the build script

There are also a few minor fixes I found along the way:

Add error logging for make install and make uninstall on unsupported OS (eg macOS)
Fix RPM build warning
Delete extra directory during deb builder pre-cleanup for consistency with rpm builder","Also, I based this on top of #1963, so it includes that change",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1964,2019-03-20T06:54:11Z,2019-03-20T13:40:09Z,2019-03-21T13:19:57Z,MERGED,True,114,137,8,https://github.com/alexjurkiewicz,Simpler build scripts,8,[],https://github.com/sysown/proxysql/pull/1964,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/1964#issuecomment-474709841,"This is a pretty invasive change to the build system, but I didn't see a good way to split it up.
There are two major improvements:

Single build script for each package type (rpm, deb), rather than three
Simplified and hardened the build script

There are also a few minor fixes I found along the way:

Add error logging for make install and make uninstall on unsupported OS (eg macOS)
Fix RPM build warning
Delete extra directory during deb builder pre-cleanup for consistency with rpm builder",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1964,2019-03-20T06:54:11Z,2019-03-20T13:40:09Z,2019-03-21T13:19:57Z,MERGED,True,114,137,8,https://github.com/alexjurkiewicz,Simpler build scripts,8,[],https://github.com/sysown/proxysql/pull/1964,https://github.com/pondix,4,https://github.com/sysown/proxysql/pull/1964#issuecomment-474832841,"This is a pretty invasive change to the build system, but I didn't see a good way to split it up.
There are two major improvements:

Single build script for each package type (rpm, deb), rather than three
Simplified and hardened the build script

There are also a few minor fixes I found along the way:

Add error logging for make install and make uninstall on unsupported OS (eg macOS)
Fix RPM build warning
Delete extra directory during deb builder pre-cleanup for consistency with rpm builder","This is really great @alexjurkiewicz thank you very much! It was on the todo list :) and it really does simplify making changes, I'm going to merge it into 2.0.3 and build the new release with the upgraded scripts.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1964,2019-03-20T06:54:11Z,2019-03-20T13:40:09Z,2019-03-21T13:19:57Z,MERGED,True,114,137,8,https://github.com/alexjurkiewicz,Simpler build scripts,8,[],https://github.com/sysown/proxysql/pull/1964,https://github.com/pondix,5,https://github.com/sysown/proxysql/pull/1964#issuecomment-474939891,"This is a pretty invasive change to the build system, but I didn't see a good way to split it up.
There are two major improvements:

Single build script for each package type (rpm, deb), rather than three
Simplified and hardened the build script

There are also a few minor fixes I found along the way:

Add error logging for make install and make uninstall on unsupported OS (eg macOS)
Fix RPM build warning
Delete extra directory during deb builder pre-cleanup for consistency with rpm builder","There is an issue with the script @alexjurkiewicz
centos67_build_1       | /opt/entrypoint/entrypoint.bash: line 25: build_target[@]: unbound variable",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1964,2019-03-20T06:54:11Z,2019-03-20T13:40:09Z,2019-03-21T13:19:57Z,MERGED,True,114,137,8,https://github.com/alexjurkiewicz,Simpler build scripts,8,[],https://github.com/sysown/proxysql/pull/1964,https://github.com/alexjurkiewicz,6,https://github.com/sysown/proxysql/pull/1964#issuecomment-475021059,"This is a pretty invasive change to the build system, but I didn't see a good way to split it up.
There are two major improvements:

Single build script for each package type (rpm, deb), rather than three
Simplified and hardened the build script

There are also a few minor fixes I found along the way:

Add error logging for make install and make uninstall on unsupported OS (eg macOS)
Fix RPM build warning
Delete extra directory during deb builder pre-cleanup for consistency with rpm builder",Sorry! I built the latest rhel/Deb scripts to test. I will investigate today.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1964,2019-03-20T06:54:11Z,2019-03-20T13:40:09Z,2019-03-21T13:19:57Z,MERGED,True,114,137,8,https://github.com/alexjurkiewicz,Simpler build scripts,8,[],https://github.com/sysown/proxysql/pull/1964,https://github.com/pondix,7,https://github.com/sysown/proxysql/pull/1964#issuecomment-475021569,"This is a pretty invasive change to the build system, but I didn't see a good way to split it up.
There are two major improvements:

Single build script for each package type (rpm, deb), rather than three
Simplified and hardened the build script

There are also a few minor fixes I found along the way:

Add error logging for make install and make uninstall on unsupported OS (eg macOS)
Fix RPM build warning
Delete extra directory during deb builder pre-cleanup for consistency with rpm builder","No problem, please make a PR against 2.0.4 since 2.0.3 is now released :) thanks again @alexjurkiewicz for your contribution!",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1964,2019-03-20T06:54:11Z,2019-03-20T13:40:09Z,2019-03-21T13:19:57Z,MERGED,True,114,137,8,https://github.com/alexjurkiewicz,Simpler build scripts,8,[],https://github.com/sysown/proxysql/pull/1964,https://github.com/alexjurkiewicz,8,https://github.com/sysown/proxysql/pull/1964#issuecomment-475052704,"This is a pretty invasive change to the build system, but I didn't see a good way to split it up.
There are two major improvements:

Single build script for each package type (rpm, deb), rather than three
Simplified and hardened the build script

There are also a few minor fixes I found along the way:

Add error logging for make install and make uninstall on unsupported OS (eg macOS)
Fix RPM build warning
Delete extra directory during deb builder pre-cleanup for consistency with rpm builder",What branch name should I use? There isn't a v2.0.4 branch,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1964,2019-03-20T06:54:11Z,2019-03-20T13:40:09Z,2019-03-21T13:19:57Z,MERGED,True,114,137,8,https://github.com/alexjurkiewicz,Simpler build scripts,8,[],https://github.com/sysown/proxysql/pull/1964,https://github.com/pondix,9,https://github.com/sysown/proxysql/pull/1964#issuecomment-475225330,"This is a pretty invasive change to the build system, but I didn't see a good way to split it up.
There are two major improvements:

Single build script for each package type (rpm, deb), rather than three
Simplified and hardened the build script

There are also a few minor fixes I found along the way:

Add error logging for make install and make uninstall on unsupported OS (eg macOS)
Fix RPM build warning
Delete extra directory during deb builder pre-cleanup for consistency with rpm builder",hi @alexjurkiewicz - I've pushed branch + tag for 2.0.4,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1966,2019-03-20T17:30:25Z,2019-03-20T17:30:33Z,2019-03-20T17:30:38Z,MERGED,True,137,114,8,https://github.com/pondix,"Revert ""Simpler build scripts""",1,[],https://github.com/sysown/proxysql/pull/1966,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/1966,Reverts #1964,Reverts #1964,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1968,2019-03-20T22:34:06Z,2019-03-26T19:14:53Z,2019-03-26T21:57:57Z,MERGED,True,114,137,8,https://github.com/alexjurkiewicz,Simpler build scripts attempt #2,1,[],https://github.com/sysown/proxysql/pull/1968,https://github.com/alexjurkiewicz,1,https://github.com/sysown/proxysql/pull/1968,"Fix #1964.
The problem was in this construction in both entrypoint.bash scripts:
if [[ -z ${PROXYSQL_BUILD_TYPE:-} ]] ; then
  deps_target=""build_deps""
  build_target=()
else
  deps_target=""build_deps_$PROXYSQL_BUILD_TYPE""
  build_target=(""$PROXYSQL_BUILD_TYPE"")
fi
${MAKE} cleanbuild
${MAKE} ${MAKEOPT} ""$deps_target""
${MAKE} ${MAKEOPT} ""${build_target[@]}""
Using an array for build_target was unnecessarily clever. I've removed it in favour of plain strings.
[...]
  build_target=""""
[...]
  build_target=""$PROXYSQL_BUILD_TYPE""
[...]
${MAKE} ${MAKEOPT} ""${build_target}""","Fix #1964.
The problem was in this construction in both entrypoint.bash scripts:
if [[ -z ${PROXYSQL_BUILD_TYPE:-} ]] ; then
  deps_target=""build_deps""
  build_target=()
else
  deps_target=""build_deps_$PROXYSQL_BUILD_TYPE""
  build_target=(""$PROXYSQL_BUILD_TYPE"")
fi
${MAKE} cleanbuild
${MAKE} ${MAKEOPT} ""$deps_target""
${MAKE} ${MAKEOPT} ""${build_target[@]}""
Using an array for build_target was unnecessarily clever. I've removed it in favour of plain strings.
[...]
  build_target=""""
[...]
  build_target=""$PROXYSQL_BUILD_TYPE""
[...]
${MAKE} ${MAKEOPT} ""${build_target}""",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1968,2019-03-20T22:34:06Z,2019-03-26T19:14:53Z,2019-03-26T21:57:57Z,MERGED,True,114,137,8,https://github.com/alexjurkiewicz,Simpler build scripts attempt #2,1,[],https://github.com/sysown/proxysql/pull/1968,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1968#issuecomment-475055979,"Fix #1964.
The problem was in this construction in both entrypoint.bash scripts:
if [[ -z ${PROXYSQL_BUILD_TYPE:-} ]] ; then
  deps_target=""build_deps""
  build_target=()
else
  deps_target=""build_deps_$PROXYSQL_BUILD_TYPE""
  build_target=(""$PROXYSQL_BUILD_TYPE"")
fi
${MAKE} cleanbuild
${MAKE} ${MAKEOPT} ""$deps_target""
${MAKE} ${MAKEOPT} ""${build_target[@]}""
Using an array for build_target was unnecessarily clever. I've removed it in favour of plain strings.
[...]
  build_target=""""
[...]
  build_target=""$PROXYSQL_BUILD_TYPE""
[...]
${MAKE} ${MAKEOPT} ""${build_target}""",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1968,2019-03-20T22:34:06Z,2019-03-26T19:14:53Z,2019-03-26T21:57:57Z,MERGED,True,114,137,8,https://github.com/alexjurkiewicz,Simpler build scripts attempt #2,1,[],https://github.com/sysown/proxysql/pull/1968,https://github.com/alexjurkiewicz,3,https://github.com/sysown/proxysql/pull/1968#issuecomment-475421591,"Fix #1964.
The problem was in this construction in both entrypoint.bash scripts:
if [[ -z ${PROXYSQL_BUILD_TYPE:-} ]] ; then
  deps_target=""build_deps""
  build_target=()
else
  deps_target=""build_deps_$PROXYSQL_BUILD_TYPE""
  build_target=(""$PROXYSQL_BUILD_TYPE"")
fi
${MAKE} cleanbuild
${MAKE} ${MAKEOPT} ""$deps_target""
${MAKE} ${MAKEOPT} ""${build_target[@]}""
Using an array for build_target was unnecessarily clever. I've removed it in favour of plain strings.
[...]
  build_target=""""
[...]
  build_target=""$PROXYSQL_BUILD_TYPE""
[...]
${MAKE} ${MAKEOPT} ""${build_target}""",Updated base to v2.0.4,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1968,2019-03-20T22:34:06Z,2019-03-26T19:14:53Z,2019-03-26T21:57:57Z,MERGED,True,114,137,8,https://github.com/alexjurkiewicz,Simpler build scripts attempt #2,1,[],https://github.com/sysown/proxysql/pull/1968,https://github.com/pondix,4,https://github.com/sysown/proxysql/pull/1968#issuecomment-476806319,"Fix #1964.
The problem was in this construction in both entrypoint.bash scripts:
if [[ -z ${PROXYSQL_BUILD_TYPE:-} ]] ; then
  deps_target=""build_deps""
  build_target=()
else
  deps_target=""build_deps_$PROXYSQL_BUILD_TYPE""
  build_target=(""$PROXYSQL_BUILD_TYPE"")
fi
${MAKE} cleanbuild
${MAKE} ${MAKEOPT} ""$deps_target""
${MAKE} ${MAKEOPT} ""${build_target[@]}""
Using an array for build_target was unnecessarily clever. I've removed it in favour of plain strings.
[...]
  build_target=""""
[...]
  build_target=""$PROXYSQL_BUILD_TYPE""
[...]
${MAKE} ${MAKEOPT} ""${build_target}""",Thank you @alexjurkiewicz !,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1968,2019-03-20T22:34:06Z,2019-03-26T19:14:53Z,2019-03-26T21:57:57Z,MERGED,True,114,137,8,https://github.com/alexjurkiewicz,Simpler build scripts attempt #2,1,[],https://github.com/sysown/proxysql/pull/1968,https://github.com/alexjurkiewicz,5,https://github.com/sysown/proxysql/pull/1968#issuecomment-476869123,"Fix #1964.
The problem was in this construction in both entrypoint.bash scripts:
if [[ -z ${PROXYSQL_BUILD_TYPE:-} ]] ; then
  deps_target=""build_deps""
  build_target=()
else
  deps_target=""build_deps_$PROXYSQL_BUILD_TYPE""
  build_target=(""$PROXYSQL_BUILD_TYPE"")
fi
${MAKE} cleanbuild
${MAKE} ${MAKEOPT} ""$deps_target""
${MAKE} ${MAKEOPT} ""${build_target[@]}""
Using an array for build_target was unnecessarily clever. I've removed it in favour of plain strings.
[...]
  build_target=""""
[...]
  build_target=""$PROXYSQL_BUILD_TYPE""
[...]
${MAKE} ${MAKEOPT} ""${build_target}""",Hopefully no bugs this time üôè  üòÑ,True,{'THUMBS_UP': ['https://github.com/pondix']}
sysown/proxysql,https://github.com/sysown/proxysql,1969,2019-03-20T22:37:18Z,,2019-03-21T22:10:57Z,OPEN,False,13,0,1,https://github.com/alexjurkiewicz,Add basic Travis CI script,1,[],https://github.com/sysown/proxysql/pull/1969,https://github.com/alexjurkiewicz,1,https://github.com/sysown/proxysql/pull/1969,"Build all three variants (standard, debug, clickhouse) of ProxySQL for
Centos 7 & Debian 9.4 (eg the newest OSes that use RPM & DEB packaging).","Build all three variants (standard, debug, clickhouse) of ProxySQL for
Centos 7 & Debian 9.4 (eg the newest OSes that use RPM & DEB packaging).",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1969,2019-03-20T22:37:18Z,,2019-03-21T22:10:57Z,OPEN,False,13,0,1,https://github.com/alexjurkiewicz,Add basic Travis CI script,1,[],https://github.com/sysown/proxysql/pull/1969,https://github.com/alexjurkiewicz,2,https://github.com/sysown/proxysql/pull/1969#issuecomment-475056066,"Build all three variants (standard, debug, clickhouse) of ProxySQL for
Centos 7 & Debian 9.4 (eg the newest OSes that use RPM & DEB packaging).",Example build: https://travis-ci.com/alexjurkiewicz/proxysql/builds/105210458,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1969,2019-03-20T22:37:18Z,,2019-03-21T22:10:57Z,OPEN,False,13,0,1,https://github.com/alexjurkiewicz,Add basic Travis CI script,1,[],https://github.com/sysown/proxysql/pull/1969,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/1969#issuecomment-475057144,"Build all three variants (standard, debug, clickhouse) of ProxySQL for
Centos 7 & Debian 9.4 (eg the newest OSes that use RPM & DEB packaging).",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1969,2019-03-20T22:37:18Z,,2019-03-21T22:10:57Z,OPEN,False,13,0,1,https://github.com/alexjurkiewicz,Add basic Travis CI script,1,[],https://github.com/sysown/proxysql/pull/1969,https://github.com/pondix,4,https://github.com/sysown/proxysql/pull/1969#issuecomment-475229192,"Build all three variants (standard, debug, clickhouse) of ProxySQL for
Centos 7 & Debian 9.4 (eg the newest OSes that use RPM & DEB packaging).","Thanks for this PR!
We are actually using Jenkins on our internal infrastructure for this kind of testing. The code is not part of the mainline ProxySQL release but rather in private repositories at the moment.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1969,2019-03-20T22:37:18Z,,2019-03-21T22:10:57Z,OPEN,False,13,0,1,https://github.com/alexjurkiewicz,Add basic Travis CI script,1,[],https://github.com/sysown/proxysql/pull/1969,https://github.com/alexjurkiewicz,5,https://github.com/sysown/proxysql/pull/1969#issuecomment-475390399,"Build all three variants (standard, debug, clickhouse) of ProxySQL for
Centos 7 & Debian 9.4 (eg the newest OSes that use RPM & DEB packaging).","That's alright. This will give PR authors some ability to be sure their
changes have worked. Since it is visible to us üòÄ

‚Ä¶
On Fri., 22 Mar. 2019, 00:31 Nick Vyzas, ***@***.***> wrote:
 Thanks for this PR!

 We are actually using Jenkins on our internal infrastructure for this kind
 of testing. The code is not part of the mainline ProxySQL release but
 rather in private repositories at the moment.

 ‚Äî
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#1969 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AAXKdYANScdBBnX07JDRlWkjsEDfhN-xks5vY4mqgaJpZM4cAZ2M>
 .",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1969,2019-03-20T22:37:18Z,,2019-03-21T22:10:57Z,OPEN,False,13,0,1,https://github.com/alexjurkiewicz,Add basic Travis CI script,1,[],https://github.com/sysown/proxysql/pull/1969,https://github.com/alexjurkiewicz,6,https://github.com/sysown/proxysql/pull/1969#issuecomment-475421610,"Build all three variants (standard, debug, clickhouse) of ProxySQL for
Centos 7 & Debian 9.4 (eg the newest OSes that use RPM & DEB packaging).",Updated base to v2.0.4,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1969,2019-03-20T22:37:18Z,,2019-03-21T22:10:57Z,OPEN,False,13,0,1,https://github.com/alexjurkiewicz,Add basic Travis CI script,1,[],https://github.com/sysown/proxysql/pull/1969,https://github.com/alexjurkiewicz,7,https://github.com/sysown/proxysql/pull/1969#issuecomment-475422534,"Build all three variants (standard, debug, clickhouse) of ProxySQL for
Centos 7 & Debian 9.4 (eg the newest OSes that use RPM & DEB packaging).",Updated base,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1970,2019-03-20T23:08:01Z,2019-03-28T13:26:08Z,2019-03-28T13:26:09Z,MERGED,True,12,2,1,https://github.com/alexjurkiewicz,feat: Auto-detect number of processors,1,[],https://github.com/sysown/proxysql/pull/1970,https://github.com/alexjurkiewicz,1,https://github.com/sysown/proxysql/pull/1970,"In case anyone is building on FreeBSD or another unsupported OS, leave
the default at four.","In case anyone is building on FreeBSD or another unsupported OS, leave
the default at four.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1970,2019-03-20T23:08:01Z,2019-03-28T13:26:08Z,2019-03-28T13:26:09Z,MERGED,True,12,2,1,https://github.com/alexjurkiewicz,feat: Auto-detect number of processors,1,[],https://github.com/sysown/proxysql/pull/1970,https://github.com/alexjurkiewicz,2,https://github.com/sysown/proxysql/pull/1970#issuecomment-475063074,"In case anyone is building on FreeBSD or another unsupported OS, leave
the default at four.","OK, this is the last of my PRs for now :)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1970,2019-03-20T23:08:01Z,2019-03-28T13:26:08Z,2019-03-28T13:26:09Z,MERGED,True,12,2,1,https://github.com/alexjurkiewicz,feat: Auto-detect number of processors,1,[],https://github.com/sysown/proxysql/pull/1970,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/1970#issuecomment-475063871,"In case anyone is building on FreeBSD or another unsupported OS, leave
the default at four.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1970,2019-03-20T23:08:01Z,2019-03-28T13:26:08Z,2019-03-28T13:26:09Z,MERGED,True,12,2,1,https://github.com/alexjurkiewicz,feat: Auto-detect number of processors,1,[],https://github.com/sysown/proxysql/pull/1970,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/1970#issuecomment-475076224,"In case anyone is building on FreeBSD or another unsupported OS, leave
the default at four.",Thank you @alexjurkiewicz !,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1970,2019-03-20T23:08:01Z,2019-03-28T13:26:08Z,2019-03-28T13:26:09Z,MERGED,True,12,2,1,https://github.com/alexjurkiewicz,feat: Auto-detect number of processors,1,[],https://github.com/sysown/proxysql/pull/1970,https://github.com/alexjurkiewicz,5,https://github.com/sysown/proxysql/pull/1970#issuecomment-475421672,"In case anyone is building on FreeBSD or another unsupported OS, leave
the default at four.",Updated base to v2.0.4,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1970,2019-03-20T23:08:01Z,2019-03-28T13:26:08Z,2019-03-28T13:26:09Z,MERGED,True,12,2,1,https://github.com/alexjurkiewicz,feat: Auto-detect number of processors,1,[],https://github.com/sysown/proxysql/pull/1970,https://github.com/alexjurkiewicz,6,https://github.com/sysown/proxysql/pull/1970#issuecomment-475422485,"In case anyone is building on FreeBSD or another unsupported OS, leave
the default at four.",Fixed conflicts,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1970,2019-03-20T23:08:01Z,2019-03-28T13:26:08Z,2019-03-28T13:26:09Z,MERGED,True,12,2,1,https://github.com/alexjurkiewicz,feat: Auto-detect number of processors,1,[],https://github.com/sysown/proxysql/pull/1970,https://github.com/pondix,7,https://github.com/sysown/proxysql/pull/1970#issuecomment-476807090,"In case anyone is building on FreeBSD or another unsupported OS, leave
the default at four.","hmm... conflicts, will need to check later",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1970,2019-03-20T23:08:01Z,2019-03-28T13:26:08Z,2019-03-28T13:26:09Z,MERGED,True,12,2,1,https://github.com/alexjurkiewicz,feat: Auto-detect number of processors,1,[],https://github.com/sysown/proxysql/pull/1970,https://github.com/alexjurkiewicz,8,https://github.com/sysown/proxysql/pull/1970#issuecomment-476870081,"In case anyone is building on FreeBSD or another unsupported OS, leave
the default at four.",Fixed conflicts,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1977,2019-03-24T09:49:39Z,2019-04-08T05:58:00Z,2019-04-08T06:56:16Z,MERGED,True,12,13,1,https://github.com/Dieken,fix integer overflow on selecting backend server with weight,1,[],https://github.com/sysown/proxysql/pull/1977,https://github.com/Dieken,1,https://github.com/sysown/proxysql/pull/1977,"if ((len * sum) <= (TotalUsedConn * mysrvc->weight * 1.5 + 1)) {

len, sum, TotalUsedConn and weight are all unsigned int, the
products easily exceed range of unsigned int which is often 2^32-1.
This fixes issue #1975.","if ((len * sum) <= (TotalUsedConn * mysrvc->weight * 1.5 + 1)) {

len, sum, TotalUsedConn and weight are all unsigned int, the
products easily exceed range of unsigned int which is often 2^32-1.
This fixes issue #1975.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1977,2019-03-24T09:49:39Z,2019-04-08T05:58:00Z,2019-04-08T06:56:16Z,MERGED,True,12,13,1,https://github.com/Dieken,fix integer overflow on selecting backend server with weight,1,[],https://github.com/sysown/proxysql/pull/1977,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1977#issuecomment-475943768,"if ((len * sum) <= (TotalUsedConn * mysrvc->weight * 1.5 + 1)) {

len, sum, TotalUsedConn and weight are all unsigned int, the
products easily exceed range of unsigned int which is often 2^32-1.
This fixes issue #1975.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1977,2019-03-24T09:49:39Z,2019-04-08T05:58:00Z,2019-04-08T06:56:16Z,MERGED,True,12,13,1,https://github.com/Dieken,fix integer overflow on selecting backend server with weight,1,[],https://github.com/sysown/proxysql/pull/1977,https://github.com/Dieken,3,https://github.com/sysown/proxysql/pull/1977#issuecomment-475944034,"if ((len * sum) <= (TotalUsedConn * mysrvc->weight * 1.5 + 1)) {

len, sum, TotalUsedConn and weight are all unsigned int, the
products easily exceed range of unsigned int which is often 2^32-1.
This fixes issue #1975.","This is how to recur #1975.
I have three mysql servers in hostgroup 3034,   their weights and usedConns are:
stg-db-11  weight=99999999 usedConns=22
stg-db-12  weight=99999999 usedConns=20
stg-db-13  weight=1        usedConns=1

a.cpp to simulates the behaviour of lib/MySQL_HostGroups_Manager.cpp:MyHGC::get_random_MySrvC().
#include <cstdio>
#include <cstdlib>

__thread unsigned int g_seed;

inline int fastrand() {
    g_seed = (214013*g_seed+2531011);
    return (g_seed>>16)&0x7FFF;
}

int main(int argc, char** argv) {
    unsigned int usedConns[] = { 22,       20,       1};
    unsigned int weights[]   = { 99999999, 99999999, 1};

    unsigned int sum = 0;
    unsigned int TotalUsedConn = 0;
    unsigned int l = 3;
    unsigned int j;

    for (j = 0; j < l; j++) {
        sum += weights[j];
        TotalUsedConn += usedConns[j];
        printf(""j=%u weight=%u usedConn=%u sum=%u TotalUsedConn=%u\n"", j, weights[j], usedConns[j], sum, TotalUsedConn);
    }
    printf(""\n"");

    unsigned int New_sum=0;
    unsigned int New_TotalUsedConn=0;

    for (j = 0; j < l; j++) {
        unsigned int len = usedConns[j];
        unsigned int weight = weights[j];
        printf(""\nj=%u len=%u weight=%u TotalUsedConn=%u sum=%u\n"", j, len, weight, TotalUsedConn, sum);
        printf(""        len*sum=%u TotalUsedConn*weight=%u TotalUsedConn*weight*1.5+1=%lf\n"",
                len * sum, TotalUsedConn * weight, TotalUsedConn * weight * 1.5 + 1);

        if ((len * sum) <= (TotalUsedConn * weight * 1.5 + 1)) {
            printf(""j=%u old New_sum=%u New_TotalUsedConn=%u\n"", j, New_sum, New_TotalUsedConn);
            New_sum += weight;
            New_TotalUsedConn += len;
            printf(""j=%u now New_sum=%u New_TotalUsedConn=%u\n"", j, New_sum, New_TotalUsedConn);
        } else {
            printf("" !!! NOT\n"");
        }
    }

    printf(""\nNew_sum=%u New_TotalUsedConn=%u\n"", New_sum, New_TotalUsedConn);
    if (New_sum == 0) {
        printf(""ERROR\n"");
        return 0;
    }

    unsigned int k;
    if (New_sum > 32768) {
        k = rand() % New_sum;
    } else {
        k = fastrand() % New_sum;
    }

    New_sum = 0;
    for (j = 0; j < l; j++) {
        unsigned int len = usedConns[j];
        unsigned int weight = weights[j];

        printf(""\nj=%u len=%u weight=%u k=%u\n"", j, len, weight, k);
        if ((len * sum) <= (TotalUsedConn * weight * 1.5 + 1)) {
            New_sum += weight;
            if (k <= New_sum) {
                printf(""got %u\n because k(%u) < New_sum(%u)!!!"", j, k, New_sum);
                break;
            } else {
                printf("" !!! NOT ENOUGH\n"");
            }
        } else {
            printf("" !!! NOT\n"");
        }
    }

    return 0;
}
No server will be selected despite they are health.
$ g++ -o a a.cpp
$ ./a
j=0 weight=99999999 usedConn=22 sum=99999999 TotalUsedConn=22
j=1 weight=99999999 usedConn=20 sum=199999998 TotalUsedConn=42
j=2 weight=1 usedConn=1 sum=199999999 TotalUsedConn=43


j=0 len=22 weight=99999999 TotalUsedConn=43 sum=199999999
        len*sum=105032682 TotalUsedConn*weight=5032661 TotalUsedConn*weight*1.5+1=7548992.500000
 !!! NOT

j=1 len=20 weight=99999999 TotalUsedConn=43 sum=199999999
        len*sum=3999999980 TotalUsedConn*weight=5032661 TotalUsedConn*weight*1.5+1=7548992.500000
 !!! NOT

j=2 len=1 weight=1 TotalUsedConn=43 sum=199999999
        len*sum=199999999 TotalUsedConn*weight=43 TotalUsedConn*weight*1.5+1=65.500000
 !!! NOT

New_sum=0 New_TotalUsedConn=0
ERROR",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1977,2019-03-24T09:49:39Z,2019-04-08T05:58:00Z,2019-04-08T06:56:16Z,MERGED,True,12,13,1,https://github.com/Dieken,fix integer overflow on selecting backend server with weight,1,[],https://github.com/sysown/proxysql/pull/1977,https://github.com/Dieken,4,https://github.com/sysown/proxysql/pull/1977#issuecomment-475944243,"if ((len * sum) <= (TotalUsedConn * mysrvc->weight * 1.5 + 1)) {

len, sum, TotalUsedConn and weight are all unsigned int, the
products easily exceed range of unsigned int which is often 2^32-1.
This fixes issue #1975.","This bug exists in v2.0.4 too, this patch can be applied there.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1977,2019-03-24T09:49:39Z,2019-04-08T05:58:00Z,2019-04-08T06:56:16Z,MERGED,True,12,13,1,https://github.com/Dieken,fix integer overflow on selecting backend server with weight,1,[],https://github.com/sysown/proxysql/pull/1977,https://github.com/Dieken,5,https://github.com/sysown/proxysql/pull/1977#issuecomment-477669344,"if ((len * sum) <= (TotalUsedConn * mysrvc->weight * 1.5 + 1)) {

len, sum, TotalUsedConn and weight are all unsigned int, the
products easily exceed range of unsigned int which is often 2^32-1.
This fixes issue #1975.","@pondix  @renecannao   any comment?  I see similar report #1876,  not sure whether it's enough to just limit maximum weight.
Suppose maximum connUsed per backend server is C,  maximum weight per backend server is W,  and I have N backend servers,  this means C*W*N <= 2^32-1 due to ""(len * sum) <= (TotalUsedConn * weight * 1.5 + 1)"".
N=100,  C=10000,  then W=4294
N=100,  C=1000,  then W=42940
N=10,    C=10000,  then W=42940
N=10,    C=1000,  then W=429400
You can see the limit 10000000 set in #1224 isn't perfect,  it will still lead to overflow.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1977,2019-03-24T09:49:39Z,2019-04-08T05:58:00Z,2019-04-08T06:56:16Z,MERGED,True,12,13,1,https://github.com/Dieken,fix integer overflow on selecting backend server with weight,1,[],https://github.com/sysown/proxysql/pull/1977,https://github.com/renecannao,6,https://github.com/sysown/proxysql/pull/1977#issuecomment-479110751,"if ((len * sum) <= (TotalUsedConn * mysrvc->weight * 1.5 + 1)) {

len, sum, TotalUsedConn and weight are all unsigned int, the
products easily exceed range of unsigned int which is often 2^32-1.
This fixes issue #1975.","@Dieken : thank you for the PR and for troubleshooting this.
The fix is probably a lot easier.
This:
((len * sum) <= (TotalUsedConn * mysrvc->weight * 1.5 + 1))

can be replaced with:
(((double) len * sum) <= ( (double) TotalUsedConn * weight * 1.5 + 1))",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1977,2019-03-24T09:49:39Z,2019-04-08T05:58:00Z,2019-04-08T06:56:16Z,MERGED,True,12,13,1,https://github.com/Dieken,fix integer overflow on selecting backend server with weight,1,[],https://github.com/sysown/proxysql/pull/1977,https://github.com/Dieken,7,https://github.com/sysown/proxysql/pull/1977#issuecomment-480582671,"if ((len * sum) <= (TotalUsedConn * mysrvc->weight * 1.5 + 1)) {

len, sum, TotalUsedConn and weight are all unsigned int, the
products easily exceed range of unsigned int which is often 2^32-1.
This fixes issue #1975.","@renecannao  Not only the expression may overflow,  but also the sum and New_sum variables may overflow,  thus k = rand()%New_sum will go wrong.  My patch is a little verbose, just to be as safe as possible.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1977,2019-03-24T09:49:39Z,2019-04-08T05:58:00Z,2019-04-08T06:56:16Z,MERGED,True,12,13,1,https://github.com/Dieken,fix integer overflow on selecting backend server with weight,1,[],https://github.com/sysown/proxysql/pull/1977,https://github.com/renecannao,8,https://github.com/sysown/proxysql/pull/1977#issuecomment-480707520,"if ((len * sum) <= (TotalUsedConn * mysrvc->weight * 1.5 + 1)) {

len, sum, TotalUsedConn and weight are all unsigned int, the
products easily exceed range of unsigned int which is often 2^32-1.
This fixes issue #1975.","Thank you.
Merged in 1.4.16 .
In 2.0 , the max value for weight is 10M .
Assuming the standard header defines RAND_MAX as 2147483647 (2^31-1), you needs 215 servers in the same hostgroup with max weight to trigger an overflow: unlikely, but still not ideal.
In commit d1ac946 I added a microbenchmark related to this PR.
It seems that the use of double causes performance overhead between 20-30% , but this can be ignored since the difference is in the order of 10ns .",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1979,2019-03-25T05:55:56Z,2019-05-16T21:28:14Z,2019-05-16T21:28:14Z,CLOSED,False,1,1,1,https://github.com/benjamin-lim,Adjust proxysql init.d ,1,[],https://github.com/sysown/proxysql/pull/1979,https://github.com/benjamin-lim,1,https://github.com/sysown/proxysql/pull/1979,"How about return instead of exit?
Most of users expect that restart command will start the process, even though the process was not running","How about return instead of exit?
Most of users expect that restart command will start the process, even though the process was not running",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1979,2019-03-25T05:55:56Z,2019-05-16T21:28:14Z,2019-05-16T21:28:14Z,CLOSED,False,1,1,1,https://github.com/benjamin-lim,Adjust proxysql init.d ,1,[],https://github.com/sysown/proxysql/pull/1979,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/1979#issuecomment-476064534,"How about return instead of exit?
Most of users expect that restart command will start the process, even though the process was not running",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1979,2019-03-25T05:55:56Z,2019-05-16T21:28:14Z,2019-05-16T21:28:14Z,CLOSED,False,1,1,1,https://github.com/benjamin-lim,Adjust proxysql init.d ,1,[],https://github.com/sysown/proxysql/pull/1979,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/1979#issuecomment-480710836,"How about return instead of exit?
Most of users expect that restart command will start the process, even though the process was not running",@pondix : any feedback on this?,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1979,2019-03-25T05:55:56Z,2019-05-16T21:28:14Z,2019-05-16T21:28:14Z,CLOSED,False,1,1,1,https://github.com/benjamin-lim,Adjust proxysql init.d ,1,[],https://github.com/sysown/proxysql/pull/1979,https://github.com/pondix,4,https://github.com/sysown/proxysql/pull/1979#issuecomment-493238297,"How about return instead of exit?
Most of users expect that restart command will start the process, even though the process was not running","This makes sense, thanks @benjamin-lim!
I'm closing this PR and adding to the 2.0.5 release",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1984,2019-03-28T10:33:25Z,2019-03-28T12:43:17Z,2019-10-29T00:06:13Z,MERGED,True,23,18,5,https://github.com/renecannao,V2.0.4 tb1,4,[],https://github.com/sysown/proxysql/pull/1984,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/1984,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1991,2019-04-01T10:41:27Z,2019-04-01T12:07:23Z,2019-04-01T14:30:41Z,MERGED,True,4,4,4,https://github.com/pondix,Fix for error log issue,1,[],https://github.com/sysown/proxysql/pull/1991,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/1991,"Move default errorlog path back to /var/lib/proxysql
Modified logrotate to point to /var/lib/proxysql/proxysql.log
Includes fix for #1973","Move default errorlog path back to /var/lib/proxysql
Modified logrotate to point to /var/lib/proxysql/proxysql.log
Includes fix for #1973",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1993,2019-04-01T20:17:03Z,2019-04-02T17:25:52Z,2019-10-29T00:05:55Z,MERGED,True,173,165,3,https://github.com/renecannao,V2.0.4 tb2,7,[],https://github.com/sysown/proxysql/pull/1993,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/1993,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,1995,2019-04-02T17:26:08Z,2019-04-08T07:06:22Z,2019-10-29T00:05:53Z,MERGED,True,14,6,1,https://github.com/renecannao,V2.0.4 tb3,4,[],https://github.com/sysown/proxysql/pull/1995,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/1995,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2000,2019-04-05T09:35:52Z,2019-04-08T07:19:43Z,2019-04-08T07:19:54Z,MERGED,True,7,7,1,https://github.com/hydeperion,Implement retries in case of SQLite3 database is locked,1,[],https://github.com/sysown/proxysql/pull/2000,https://github.com/hydeperion,1,https://github.com/sysown/proxysql/pull/2000,"In order to fix the following issue.
#1866
https://groups.google.com/forum/#!topic/proxysql/UoN8T38QLAc
We are getting the following error sometimes.
2019-03-07 12:38:42 sqlite3db.cpp:61:execute(): [ERROR] SQLITE error: database is locked --- DELETE FROM system_cpu WHERE timestamp < 1551325122
2019-03-07 12:42:42 sqlite3db.cpp:61:execute(): [ERROR] SQLITE error: database is locked --- INSERT INTO system_memory_hour SELECT timestamp/3600*3600 , AVG(allocated), AVG(resident), AVG(active), AVG(mapped), AVG(metadata), AVG(retained) FROM system_memory WHERE timestamp >= 1551927600 AND timestamp < 1551927600 GROUP BY timestamp/3600
2019-03-07 12:42:42 sqlite3db.cpp:61:execute(): [ERROR] SQLITE error: database is locked --- DELETE FROM system_memory WHERE timestamp < 1551325362
2019-03-07 12:44:42 sqlite3db.cpp:61:execute(): [ERROR] SQLITE error: database is locked --- DELETE FROM system_cpu WHERE timestamp < 1551325482
2019-03-07 12:44:42 sqlite3db.cpp:61:execute(): [ERROR] SQLITE error: database is locked --- DELETE FROM system_cpu_hour WHERE timestamp < 1520394282
 .
 .

These errors seems to correspond to SQLITE_BUSY error of SQLite.
https://www.sqlite.org/c3ref/c_abort.html
#define SQLITE_BUSY         5   /* The database file is locked */
#define SQLITE_LOCKED       6   /* A table in the database is locked */

#549
84606e2
As you avoided it by sleeping when SQLITE_LOCKED occurs previously,
I think we can avoid it by sleeping even when SQLITE_BUSY occurs.
I was able to compile proxysql by this modification.
I have done test in my Proxysql servers which are in updated module to 5 servers and non-updated module to 1 server.
As a result, I confirmed that these error was occured only on a server which was working the non-updated module.","In order to fix the following issue.
#1866
https://groups.google.com/forum/#!topic/proxysql/UoN8T38QLAc
We are getting the following error sometimes.
2019-03-07 12:38:42 sqlite3db.cpp:61:execute(): [ERROR] SQLITE error: database is locked --- DELETE FROM system_cpu WHERE timestamp < 1551325122
2019-03-07 12:42:42 sqlite3db.cpp:61:execute(): [ERROR] SQLITE error: database is locked --- INSERT INTO system_memory_hour SELECT timestamp/3600*3600 , AVG(allocated), AVG(resident), AVG(active), AVG(mapped), AVG(metadata), AVG(retained) FROM system_memory WHERE timestamp >= 1551927600 AND timestamp < 1551927600 GROUP BY timestamp/3600
2019-03-07 12:42:42 sqlite3db.cpp:61:execute(): [ERROR] SQLITE error: database is locked --- DELETE FROM system_memory WHERE timestamp < 1551325362
2019-03-07 12:44:42 sqlite3db.cpp:61:execute(): [ERROR] SQLITE error: database is locked --- DELETE FROM system_cpu WHERE timestamp < 1551325482
2019-03-07 12:44:42 sqlite3db.cpp:61:execute(): [ERROR] SQLITE error: database is locked --- DELETE FROM system_cpu_hour WHERE timestamp < 1520394282
 .
 .

These errors seems to correspond to SQLITE_BUSY error of SQLite.
https://www.sqlite.org/c3ref/c_abort.html
#define SQLITE_BUSY         5   /* The database file is locked */
#define SQLITE_LOCKED       6   /* A table in the database is locked */

#549
84606e2
As you avoided it by sleeping when SQLITE_LOCKED occurs previously,
I think we can avoid it by sleeping even when SQLITE_BUSY occurs.
I was able to compile proxysql by this modification.
I have done test in my Proxysql servers which are in updated module to 5 servers and non-updated module to 1 server.
As a result, I confirmed that these error was occured only on a server which was working the non-updated module.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2000,2019-04-05T09:35:52Z,2019-04-08T07:19:43Z,2019-04-08T07:19:54Z,MERGED,True,7,7,1,https://github.com/hydeperion,Implement retries in case of SQLite3 database is locked,1,[],https://github.com/sysown/proxysql/pull/2000,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2000#issuecomment-480212771,"In order to fix the following issue.
#1866
https://groups.google.com/forum/#!topic/proxysql/UoN8T38QLAc
We are getting the following error sometimes.
2019-03-07 12:38:42 sqlite3db.cpp:61:execute(): [ERROR] SQLITE error: database is locked --- DELETE FROM system_cpu WHERE timestamp < 1551325122
2019-03-07 12:42:42 sqlite3db.cpp:61:execute(): [ERROR] SQLITE error: database is locked --- INSERT INTO system_memory_hour SELECT timestamp/3600*3600 , AVG(allocated), AVG(resident), AVG(active), AVG(mapped), AVG(metadata), AVG(retained) FROM system_memory WHERE timestamp >= 1551927600 AND timestamp < 1551927600 GROUP BY timestamp/3600
2019-03-07 12:42:42 sqlite3db.cpp:61:execute(): [ERROR] SQLITE error: database is locked --- DELETE FROM system_memory WHERE timestamp < 1551325362
2019-03-07 12:44:42 sqlite3db.cpp:61:execute(): [ERROR] SQLITE error: database is locked --- DELETE FROM system_cpu WHERE timestamp < 1551325482
2019-03-07 12:44:42 sqlite3db.cpp:61:execute(): [ERROR] SQLITE error: database is locked --- DELETE FROM system_cpu_hour WHERE timestamp < 1520394282
 .
 .

These errors seems to correspond to SQLITE_BUSY error of SQLite.
https://www.sqlite.org/c3ref/c_abort.html
#define SQLITE_BUSY         5   /* The database file is locked */
#define SQLITE_LOCKED       6   /* A table in the database is locked */

#549
84606e2
As you avoided it by sleeping when SQLITE_LOCKED occurs previously,
I think we can avoid it by sleeping even when SQLITE_BUSY occurs.
I was able to compile proxysql by this modification.
I have done test in my Proxysql servers which are in updated module to 5 servers and non-updated module to 1 server.
As a result, I confirmed that these error was occured only on a server which was working the non-updated module.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2000,2019-04-05T09:35:52Z,2019-04-08T07:19:43Z,2019-04-08T07:19:54Z,MERGED,True,7,7,1,https://github.com/hydeperion,Implement retries in case of SQLite3 database is locked,1,[],https://github.com/sysown/proxysql/pull/2000,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2000#issuecomment-480713876,"In order to fix the following issue.
#1866
https://groups.google.com/forum/#!topic/proxysql/UoN8T38QLAc
We are getting the following error sometimes.
2019-03-07 12:38:42 sqlite3db.cpp:61:execute(): [ERROR] SQLITE error: database is locked --- DELETE FROM system_cpu WHERE timestamp < 1551325122
2019-03-07 12:42:42 sqlite3db.cpp:61:execute(): [ERROR] SQLITE error: database is locked --- INSERT INTO system_memory_hour SELECT timestamp/3600*3600 , AVG(allocated), AVG(resident), AVG(active), AVG(mapped), AVG(metadata), AVG(retained) FROM system_memory WHERE timestamp >= 1551927600 AND timestamp < 1551927600 GROUP BY timestamp/3600
2019-03-07 12:42:42 sqlite3db.cpp:61:execute(): [ERROR] SQLITE error: database is locked --- DELETE FROM system_memory WHERE timestamp < 1551325362
2019-03-07 12:44:42 sqlite3db.cpp:61:execute(): [ERROR] SQLITE error: database is locked --- DELETE FROM system_cpu WHERE timestamp < 1551325482
2019-03-07 12:44:42 sqlite3db.cpp:61:execute(): [ERROR] SQLITE error: database is locked --- DELETE FROM system_cpu_hour WHERE timestamp < 1520394282
 .
 .

These errors seems to correspond to SQLITE_BUSY error of SQLite.
https://www.sqlite.org/c3ref/c_abort.html
#define SQLITE_BUSY         5   /* The database file is locked */
#define SQLITE_LOCKED       6   /* A table in the database is locked */

#549
84606e2
As you avoided it by sleeping when SQLITE_LOCKED occurs previously,
I think we can avoid it by sleeping even when SQLITE_BUSY occurs.
I was able to compile proxysql by this modification.
I have done test in my Proxysql servers which are in updated module to 5 servers and non-updated module to 1 server.
As a result, I confirmed that these error was occured only on a server which was working the non-updated module.",Thank you @hydeperion !,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2002,2019-04-08T05:07:35Z,,2019-04-08T05:12:02Z,OPEN,False,474,246,1,https://github.com/unki,rework tools/proxysql_galera_checker.sh,1,[],https://github.com/sysown/proxysql/pull/2002,https://github.com/unki,1,https://github.com/sysown/proxysql/pull/2002,"while trying hunting down an issue with all backend-servers are getting removed from the readers-hostgroup, I've cleaned up proxysql_galera_checker.sh a bit.

make shellcheck more happy about the shellscript code
do some sanity-checks on info we retrieve from ProxySQL or backend MySQL-servers
reduce some duplicate code-lines by introducing new functions

log()
flag_to_reload() and clear_reload_flag()
is_in_sync(), is_online() is_offline_soft(), and
is_writer_also_reader()
get_galera_state()
proxysql_cmd()
mysql_cmd()","while trying hunting down an issue with all backend-servers are getting removed from the readers-hostgroup, I've cleaned up proxysql_galera_checker.sh a bit.

make shellcheck more happy about the shellscript code
do some sanity-checks on info we retrieve from ProxySQL or backend MySQL-servers
reduce some duplicate code-lines by introducing new functions

log()
flag_to_reload() and clear_reload_flag()
is_in_sync(), is_online() is_offline_soft(), and
is_writer_also_reader()
get_galera_state()
proxysql_cmd()
mysql_cmd()",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2002,2019-04-08T05:07:35Z,,2019-04-08T05:12:02Z,OPEN,False,474,246,1,https://github.com/unki,rework tools/proxysql_galera_checker.sh,1,[],https://github.com/sysown/proxysql/pull/2002,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2002#issuecomment-480685847,"while trying hunting down an issue with all backend-servers are getting removed from the readers-hostgroup, I've cleaned up proxysql_galera_checker.sh a bit.

make shellcheck more happy about the shellscript code
do some sanity-checks on info we retrieve from ProxySQL or backend MySQL-servers
reduce some duplicate code-lines by introducing new functions

log()
flag_to_reload() and clear_reload_flag()
is_in_sync(), is_online() is_offline_soft(), and
is_writer_also_reader()
get_galera_state()
proxysql_cmd()
mysql_cmd()",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2006,2019-04-08T14:49:03Z,2019-04-09T01:02:46Z,2019-04-09T01:02:46Z,MERGED,True,7,1,1,https://github.com/renecannao,V2.0.4 tb4,2,[],https://github.com/sysown/proxysql/pull/2006,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2006,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2007,2019-04-09T01:26:25Z,2019-04-09T01:38:40Z,2019-10-29T00:07:48Z,MERGED,True,13,7,1,https://github.com/renecannao,LDAP comment added after the first word in query,1,[],https://github.com/sysown/proxysql/pull/2007,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2007,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2016,2019-04-16T10:58:31Z,2019-04-18T23:20:07Z,2019-04-18T23:20:30Z,MERGED,True,18,4,1,https://github.com/ahaha-zhang,Support last insert id variable @@identity like function LAST_INSERT_ID(),5,[],https://github.com/sysown/proxysql/pull/2016,https://github.com/ahaha-zhang,1,https://github.com/sysown/proxysql/pull/2016,"Hi Rene:
I noticed that proxysql has supported to return the correct last_insert_id directly when clients execute built-in function last_insert_id() .#1421.
Thus, there is a consistent behavior between ""select @@identity"" and ""select last_insert_is()"" in MySQL. Supporting last-insert-id variable @@identity like function LAST_INSERT_ID() is more applicable and consistent for connection drivers.","Hi Rene:
I noticed that proxysql has supported to return the correct last_insert_id directly when clients execute built-in function last_insert_id() .#1421.
Thus, there is a consistent behavior between ""select @@identity"" and ""select last_insert_is()"" in MySQL. Supporting last-insert-id variable @@identity like function LAST_INSERT_ID() is more applicable and consistent for connection drivers.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2016,2019-04-16T10:58:31Z,2019-04-18T23:20:07Z,2019-04-18T23:20:30Z,MERGED,True,18,4,1,https://github.com/ahaha-zhang,Support last insert id variable @@identity like function LAST_INSERT_ID(),5,[],https://github.com/sysown/proxysql/pull/2016,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2016#issuecomment-484293947,"Hi Rene:
I noticed that proxysql has supported to return the correct last_insert_id directly when clients execute built-in function last_insert_id() .#1421.
Thus, there is a consistent behavior between ""select @@identity"" and ""select last_insert_is()"" in MySQL. Supporting last-insert-id variable @@identity like function LAST_INSERT_ID() is more applicable and consistent for connection drivers.",test this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2016,2019-04-16T10:58:31Z,2019-04-18T23:20:07Z,2019-04-18T23:20:30Z,MERGED,True,18,4,1,https://github.com/ahaha-zhang,Support last insert id variable @@identity like function LAST_INSERT_ID(),5,[],https://github.com/sysown/proxysql/pull/2016,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/2016#issuecomment-484297769,"Hi Rene:
I noticed that proxysql has supported to return the correct last_insert_id directly when clients execute built-in function last_insert_id() .#1421.
Thus, there is a consistent behavior between ""select @@identity"" and ""select last_insert_is()"" in MySQL. Supporting last-insert-id variable @@identity like function LAST_INSERT_ID() is more applicable and consistent for connection drivers.",ok to test,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2016,2019-04-16T10:58:31Z,2019-04-18T23:20:07Z,2019-04-18T23:20:30Z,MERGED,True,18,4,1,https://github.com/ahaha-zhang,Support last insert id variable @@identity like function LAST_INSERT_ID(),5,[],https://github.com/sysown/proxysql/pull/2016,https://github.com/pondix,4,https://github.com/sysown/proxysql/pull/2016#issuecomment-484303385,"Hi Rene:
I noticed that proxysql has supported to return the correct last_insert_id directly when clients execute built-in function last_insert_id() .#1421.
Thus, there is a consistent behavior between ""select @@identity"" and ""select last_insert_is()"" in MySQL. Supporting last-insert-id variable @@identity like function LAST_INSERT_ID() is more applicable and consistent for connection drivers.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2016,2019-04-16T10:58:31Z,2019-04-18T23:20:07Z,2019-04-18T23:20:30Z,MERGED,True,18,4,1,https://github.com/ahaha-zhang,Support last insert id variable @@identity like function LAST_INSERT_ID(),5,[],https://github.com/sysown/proxysql/pull/2016,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/2016#issuecomment-484720595,"Hi Rene:
I noticed that proxysql has supported to return the correct last_insert_id directly when clients execute built-in function last_insert_id() .#1421.
Thus, there is a consistent behavior between ""select @@identity"" and ""select last_insert_is()"" in MySQL. Supporting last-insert-id variable @@identity like function LAST_INSERT_ID() is more applicable and consistent for connection drivers.",Thank you @ahaha-zhang,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2017,2019-04-16T13:47:15Z,,2019-11-20T21:04:38Z,OPEN,False,11,3,1,https://github.com/Dieken,support BIT/JSON/ENUM/SET/GEOMETRY field types in prepared statement,1,[],https://github.com/sysown/proxysql/pull/2017,https://github.com/Dieken,1,https://github.com/sysown/proxysql/pull/2017,"NodeJS mysql2 module uses JSON type for object value in prepared
statement's parameters.
The order of types is changed to be consistent with MySQL
include/mysql/binary_log_types.h.
Fixes second crash case in #2011.
Reference:
https://dev.mysql.com/doc/internals/en/binary-protocol-value.html","NodeJS mysql2 module uses JSON type for object value in prepared
statement's parameters.
The order of types is changed to be consistent with MySQL
include/mysql/binary_log_types.h.
Fixes second crash case in #2011.
Reference:
https://dev.mysql.com/doc/internals/en/binary-protocol-value.html",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2017,2019-04-16T13:47:15Z,,2019-11-20T21:04:38Z,OPEN,False,11,3,1,https://github.com/Dieken,support BIT/JSON/ENUM/SET/GEOMETRY field types in prepared statement,1,[],https://github.com/sysown/proxysql/pull/2017,https://github.com/Dieken,2,https://github.com/sysown/proxysql/pull/2017#issuecomment-483668340,"NodeJS mysql2 module uses JSON type for object value in prepared
statement's parameters.
The order of types is changed to be consistent with MySQL
include/mysql/binary_log_types.h.
Fixes second crash case in #2011.
Reference:
https://dev.mysql.com/doc/internals/en/binary-protocol-value.html","Example NodeJS program to recur the ProxySQL crash:
//  npm install mysql2
//  CREATE DATABASE test;
//  CREATE TABLE test.t (a JSON);

const mysql = require('mysql2');
const conn = mysql.createConnection({
  host: '127.0.0.1',
  user: 'root',
  database: 'test',
});

conn.execute('INSERT INTO t VALUES (?)', [ {""a"": 1} ], function (err, results, fields) {
  console.log(err);
  console.log(results);
  console.log(fields);
});
Notice MySQL >= 8.0.13 doesn't accept MYSQL_TYPE_JSON field any more for prepared statement, I don't understand the reason: mysql/mysql-server@69e990f",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2017,2019-04-16T13:47:15Z,,2019-11-20T21:04:38Z,OPEN,False,11,3,1,https://github.com/Dieken,support BIT/JSON/ENUM/SET/GEOMETRY field types in prepared statement,1,[],https://github.com/sysown/proxysql/pull/2017,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2017#issuecomment-484293884,"NodeJS mysql2 module uses JSON type for object value in prepared
statement's parameters.
The order of types is changed to be consistent with MySQL
include/mysql/binary_log_types.h.
Fixes second crash case in #2011.
Reference:
https://dev.mysql.com/doc/internals/en/binary-protocol-value.html",test this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2017,2019-04-16T13:47:15Z,,2019-11-20T21:04:38Z,OPEN,False,11,3,1,https://github.com/Dieken,support BIT/JSON/ENUM/SET/GEOMETRY field types in prepared statement,1,[],https://github.com/sysown/proxysql/pull/2017,https://github.com/pondix,4,https://github.com/sysown/proxysql/pull/2017#issuecomment-484297587,"NodeJS mysql2 module uses JSON type for object value in prepared
statement's parameters.
The order of types is changed to be consistent with MySQL
include/mysql/binary_log_types.h.
Fixes second crash case in #2011.
Reference:
https://dev.mysql.com/doc/internals/en/binary-protocol-value.html",ok to test,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2017,2019-04-16T13:47:15Z,,2019-11-20T21:04:38Z,OPEN,False,11,3,1,https://github.com/Dieken,support BIT/JSON/ENUM/SET/GEOMETRY field types in prepared statement,1,[],https://github.com/sysown/proxysql/pull/2017,https://github.com/pondix,5,https://github.com/sysown/proxysql/pull/2017#issuecomment-484303368,"NodeJS mysql2 module uses JSON type for object value in prepared
statement's parameters.
The order of types is changed to be consistent with MySQL
include/mysql/binary_log_types.h.
Fixes second crash case in #2011.
Reference:
https://dev.mysql.com/doc/internals/en/binary-protocol-value.html",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2017,2019-04-16T13:47:15Z,,2019-11-20T21:04:38Z,OPEN,False,11,3,1,https://github.com/Dieken,support BIT/JSON/ENUM/SET/GEOMETRY field types in prepared statement,1,[],https://github.com/sysown/proxysql/pull/2017,https://github.com/pondix,6,https://github.com/sysown/proxysql/pull/2017#issuecomment-484305543,"NodeJS mysql2 module uses JSON type for object value in prepared
statement's parameters.
The order of types is changed to be consistent with MySQL
include/mysql/binary_log_types.h.
Fixes second crash case in #2011.
Reference:
https://dev.mysql.com/doc/internals/en/binary-protocol-value.html",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2017,2019-04-16T13:47:15Z,,2019-11-20T21:04:38Z,OPEN,False,11,3,1,https://github.com/Dieken,support BIT/JSON/ENUM/SET/GEOMETRY field types in prepared statement,1,[],https://github.com/sysown/proxysql/pull/2017,https://github.com/Dieken,7,https://github.com/sysown/proxysql/pull/2017#issuecomment-484356213,"NodeJS mysql2 module uses JSON type for object value in prepared
statement's parameters.
The order of types is changed to be consistent with MySQL
include/mysql/binary_log_types.h.
Fixes second crash case in #2011.
Reference:
https://dev.mysql.com/doc/internals/en/binary-protocol-value.html","No idea why it failed, the details are at localhost.
I have already deployed it to our production environment, so far so good.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2017,2019-04-16T13:47:15Z,,2019-11-20T21:04:38Z,OPEN,False,11,3,1,https://github.com/Dieken,support BIT/JSON/ENUM/SET/GEOMETRY field types in prepared statement,1,[],https://github.com/sysown/proxysql/pull/2017,https://github.com/renecannao,8,https://github.com/sysown/proxysql/pull/2017#issuecomment-484388282,"NodeJS mysql2 module uses JSON type for object value in prepared
statement's parameters.
The order of types is changed to be consistent with MySQL
include/mysql/binary_log_types.h.
Fixes second crash case in #2011.
Reference:
https://dev.mysql.com/doc/internals/en/binary-protocol-value.html","@Dieken , I haven't check why it is failing, but you shouldn't make this sort of PR against 1.4.x , as doesn't support JSON in prepared statements.
Support was introduced in 2.0.0",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2017,2019-04-16T13:47:15Z,,2019-11-20T21:04:38Z,OPEN,False,11,3,1,https://github.com/Dieken,support BIT/JSON/ENUM/SET/GEOMETRY field types in prepared statement,1,[],https://github.com/sysown/proxysql/pull/2017,https://github.com/Dieken,9,https://github.com/sysown/proxysql/pull/2017#issuecomment-484594091,"NodeJS mysql2 module uses JSON type for object value in prepared
statement's parameters.
The order of types is changed to be consistent with MySQL
include/mysql/binary_log_types.h.
Fixes second crash case in #2011.
Reference:
https://dev.mysql.com/doc/internals/en/binary-protocol-value.html","@renecannao
I searched v2.0.4, seems it doesn't properly handle MYSQL_TYPE_JSON too.
$ git grep TYPE_JSON
deps/mariadb-client-library/mariadb_stmt.c.patch:       case MYSQL_TYPE_JSON:

v2.0.4:lib/MySQL_Protocol.cpp doesn't handle MYSQL_TYPE_JSON.
The patch is very simple and it works,  v1.4.x really shouldn't crash for these data types, I guess most users still stay at v1.4.x.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2017,2019-04-16T13:47:15Z,,2019-11-20T21:04:38Z,OPEN,False,11,3,1,https://github.com/Dieken,support BIT/JSON/ENUM/SET/GEOMETRY field types in prepared statement,1,[],https://github.com/sysown/proxysql/pull/2017,https://github.com/pondix,10,https://github.com/sysown/proxysql/pull/2017#issuecomment-484729956,"NodeJS mysql2 module uses JSON type for object value in prepared
statement's parameters.
The order of types is changed to be consistent with MySQL
include/mysql/binary_log_types.h.
Fixes second crash case in #2011.
Reference:
https://dev.mysql.com/doc/internals/en/binary-protocol-value.html",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2017,2019-04-16T13:47:15Z,,2019-11-20T21:04:38Z,OPEN,False,11,3,1,https://github.com/Dieken,support BIT/JSON/ENUM/SET/GEOMETRY field types in prepared statement,1,[],https://github.com/sysown/proxysql/pull/2017,https://github.com/pondix,11,https://github.com/sysown/proxysql/pull/2017#issuecomment-484732850,"NodeJS mysql2 module uses JSON type for object value in prepared
statement's parameters.
The order of types is changed to be consistent with MySQL
include/mysql/binary_log_types.h.
Fixes second crash case in #2011.
Reference:
https://dev.mysql.com/doc/internals/en/binary-protocol-value.html","It seems ProxySQL isn't accessible at the time it is configured for testing (this is the point where the test servers / users / etc. are loaded via the admin CLI:
[Fri Apr 19 00:29:00 UTC 2019] Configuring ProxySQL...
mysql: [Warning] Using a password on the command line interface can be insecure.
ERROR 2003 (HY000): Can't connect to MySQL server on '127.0.0.1' (111)

Will need to test this manually to verify..",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2017,2019-04-16T13:47:15Z,,2019-11-20T21:04:38Z,OPEN,False,11,3,1,https://github.com/Dieken,support BIT/JSON/ENUM/SET/GEOMETRY field types in prepared statement,1,[],https://github.com/sysown/proxysql/pull/2017,https://github.com/Dieken,12,https://github.com/sysown/proxysql/pull/2017#issuecomment-489398300,"NodeJS mysql2 module uses JSON type for object value in prepared
statement's parameters.
The order of types is changed to be consistent with MySQL
include/mysql/binary_log_types.h.
Fixes second crash case in #2011.
Reference:
https://dev.mysql.com/doc/internals/en/binary-protocol-value.html",@renecannao  @pondix any progress about the test environment?,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2017,2019-04-16T13:47:15Z,,2019-11-20T21:04:38Z,OPEN,False,11,3,1,https://github.com/Dieken,support BIT/JSON/ENUM/SET/GEOMETRY field types in prepared statement,1,[],https://github.com/sysown/proxysql/pull/2017,https://github.com/alpes214,13,https://github.com/sysown/proxysql/pull/2017#issuecomment-556393647,"NodeJS mysql2 module uses JSON type for object value in prepared
statement's parameters.
The order of types is changed to be consistent with MySQL
include/mysql/binary_log_types.h.
Fixes second crash case in #2011.
Reference:
https://dev.mysql.com/doc/internals/en/binary-protocol-value.html",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2019,2019-04-17T10:23:18Z,,2020-06-05T10:49:06Z,OPEN,False,26,0,1,https://github.com/Mount565,Let proxysql makes sure that only one server in the writer group,1,[],https://github.com/sysown/proxysql/pull/2019,https://github.com/Mount565,1,https://github.com/sysown/proxysql/pull/2019,"ProxySQL determine Write/Read role by the variable read_only.
if read_only=0|OFF, the server is writable, proxysql make sure it is in the writer's group
if read_only=1|ON, the server is only readable, proxysql put it in the reader's group
Well, the side effect of this design is that, if a server  is a slave , it's read_only variable is changed to 0|OFF by mistake, it will be put in the writer's group by proxysql.
It's very dangerous and will cause data inconsistent between master and slave.
How about this ?  Let proxysql makes sure that there 's at most one server in the writer's group.
If proxysql detect a server with read_only=0|OFF, and not in the writer's group, it should judge if there's already one server in the corresponding writer's group, if so, instead of performing a swap, it print a warning log and break out.","ProxySQL determine Write/Read role by the variable read_only.
if read_only=0|OFF, the server is writable, proxysql make sure it is in the writer's group
if read_only=1|ON, the server is only readable, proxysql put it in the reader's group
Well, the side effect of this design is that, if a server  is a slave , it's read_only variable is changed to 0|OFF by mistake, it will be put in the writer's group by proxysql.
It's very dangerous and will cause data inconsistent between master and slave.
How about this ?  Let proxysql makes sure that there 's at most one server in the writer's group.
If proxysql detect a server with read_only=0|OFF, and not in the writer's group, it should judge if there's already one server in the corresponding writer's group, if so, instead of performing a swap, it print a warning log and break out.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2019,2019-04-17T10:23:18Z,,2020-06-05T10:49:06Z,OPEN,False,26,0,1,https://github.com/Mount565,Let proxysql makes sure that only one server in the writer group,1,[],https://github.com/sysown/proxysql/pull/2019,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2019#issuecomment-484044790,"ProxySQL determine Write/Read role by the variable read_only.
if read_only=0|OFF, the server is writable, proxysql make sure it is in the writer's group
if read_only=1|ON, the server is only readable, proxysql put it in the reader's group
Well, the side effect of this design is that, if a server  is a slave , it's read_only variable is changed to 0|OFF by mistake, it will be put in the writer's group by proxysql.
It's very dangerous and will cause data inconsistent between master and slave.
How about this ?  Let proxysql makes sure that there 's at most one server in the writer's group.
If proxysql detect a server with read_only=0|OFF, and not in the writer's group, it should judge if there's already one server in the corresponding writer's group, if so, instead of performing a swap, it print a warning log and break out.","Hi @Mount565 .
What if the server in the current writer hostgroups it is not the right writer?
ProxySQL doesn't have enough information to make the right decision.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2019,2019-04-17T10:23:18Z,,2020-06-05T10:49:06Z,OPEN,False,26,0,1,https://github.com/Mount565,Let proxysql makes sure that only one server in the writer group,1,[],https://github.com/sysown/proxysql/pull/2019,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/2019#issuecomment-484303356,"ProxySQL determine Write/Read role by the variable read_only.
if read_only=0|OFF, the server is writable, proxysql make sure it is in the writer's group
if read_only=1|ON, the server is only readable, proxysql put it in the reader's group
Well, the side effect of this design is that, if a server  is a slave , it's read_only variable is changed to 0|OFF by mistake, it will be put in the writer's group by proxysql.
It's very dangerous and will cause data inconsistent between master and slave.
How about this ?  Let proxysql makes sure that there 's at most one server in the writer's group.
If proxysql detect a server with read_only=0|OFF, and not in the writer's group, it should judge if there's already one server in the corresponding writer's group, if so, instead of performing a swap, it print a warning log and break out.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2019,2019-04-17T10:23:18Z,,2020-06-05T10:49:06Z,OPEN,False,26,0,1,https://github.com/Mount565,Let proxysql makes sure that only one server in the writer group,1,[],https://github.com/sysown/proxysql/pull/2019,https://github.com/Mount565,4,https://github.com/sysown/proxysql/pull/2019#issuecomment-484324818,"ProxySQL determine Write/Read role by the variable read_only.
if read_only=0|OFF, the server is writable, proxysql make sure it is in the writer's group
if read_only=1|ON, the server is only readable, proxysql put it in the reader's group
Well, the side effect of this design is that, if a server  is a slave , it's read_only variable is changed to 0|OFF by mistake, it will be put in the writer's group by proxysql.
It's very dangerous and will cause data inconsistent between master and slave.
How about this ?  Let proxysql makes sure that there 's at most one server in the writer's group.
If proxysql detect a server with read_only=0|OFF, and not in the writer's group, it should judge if there's already one server in the corresponding writer's group, if so, instead of performing a swap, it print a warning log and break out.","Hi @renecannao,
You're right. proxysql cannot determine which writer is right. At most, It can only make sure the first writer it found is in the writer group. The first must be the right.
let's explore it a little deeper.
In what situation does proxysql needs to determine the right writer?
On proxysql start(or proxysql crash and restart) and there are multiple servers with read_only =0.
In this case,the configuration in mysql_servers must explicitly indicate a server is writer,and saved to disk, this is the initial right writer. proxysql can make sure this writer is in the writer group on start.
So, there is a writer in writer group online, all other writers later detected will be banned.
Suppose a slave's read_only is changed to 0 by mistake. proxysql will prevent this server from being moved into the writer group, and print warning logs like:
2019-04-16 10:53:47 MySQL_HostGroups_Manager.cpp:1886:read_only_action(): [WARNING] host:192.168.216.201:3306 with read_only=0 doesn't seem to be right. Please pay attention!!!
2019-04-16 10:53:49 MySQL_HostGroups_Manager.cpp:1886:read_only_action(): [WARNING] host:192.168.216.201:3306 with read_only=0 doesn't seem to be right. Please pay attention!!!
2019-04-16 10:53:50 MySQL_HostGroups_Manager.cpp:1886:read_only_action(): [WARNING] host:192.168.216.201:3306 with read_only=0 doesn't seem to be right. Please pay attention!!!
2019-04-16 10:53:52 MySQL_HostGroups_Manager.cpp:1886:read_only_action(): [WARNING] host:192.168.216.201:3306 with read_only=0 doesn't seem to be right. Please pay attention!!!
2019-04-16 10:53:53 MySQL_HostGroups_Manager.cpp:1886:read_only_action(): [WARNING] host:192.168.216.201:3306 with read_only=0 doesn't seem to be right. Please pay attention!!!
2019-04-16 10:53:55 MySQL_HostGroups_Manager.cpp:1886:read_only_action(): [WARNING] host:192.168.216.201:3306 with read_only=0 doesn't seem to be right. Please pay attention!!!

If DBA find this situation in time and correct the read_only on slave, data inconsistency can be avoided.
If not,  some day,the original writer in the writer group down for some reason,  this slave will be moved into the writer group. However, this slave may not be ready for writing because of replication lag. So there is still a little chance of causing data problem. But it is caused by misconfiguration, and proxysql has tried hard to point it out.
So there is still  the risk of writing to slave . but it is under control now. We got time to correct the mistake before writing to slave really happens.
In practice, we can monitor the warning log using Zabbix to find the mistake timely.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2019,2019-04-17T10:23:18Z,,2020-06-05T10:49:06Z,OPEN,False,26,0,1,https://github.com/Mount565,Let proxysql makes sure that only one server in the writer group,1,[],https://github.com/sysown/proxysql/pull/2019,https://github.com/lenovore,5,https://github.com/sysown/proxysql/pull/2019#issuecomment-489870033,"ProxySQL determine Write/Read role by the variable read_only.
if read_only=0|OFF, the server is writable, proxysql make sure it is in the writer's group
if read_only=1|ON, the server is only readable, proxysql put it in the reader's group
Well, the side effect of this design is that, if a server  is a slave , it's read_only variable is changed to 0|OFF by mistake, it will be put in the writer's group by proxysql.
It's very dangerous and will cause data inconsistent between master and slave.
How about this ?  Let proxysql makes sure that there 's at most one server in the writer's group.
If proxysql detect a server with read_only=0|OFF, and not in the writer's group, it should judge if there's already one server in the corresponding writer's group, if so, instead of performing a swap, it print a warning log and break out.",it's a good and important recommendation,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2019,2019-04-17T10:23:18Z,,2020-06-05T10:49:06Z,OPEN,False,26,0,1,https://github.com/Mount565,Let proxysql makes sure that only one server in the writer group,1,[],https://github.com/sysown/proxysql/pull/2019,https://github.com/hackman,6,https://github.com/sysown/proxysql/pull/2019#issuecomment-639406220,"ProxySQL determine Write/Read role by the variable read_only.
if read_only=0|OFF, the server is writable, proxysql make sure it is in the writer's group
if read_only=1|ON, the server is only readable, proxysql put it in the reader's group
Well, the side effect of this design is that, if a server  is a slave , it's read_only variable is changed to 0|OFF by mistake, it will be put in the writer's group by proxysql.
It's very dangerous and will cause data inconsistent between master and slave.
How about this ?  Let proxysql makes sure that there 's at most one server in the writer's group.
If proxysql detect a server with read_only=0|OFF, and not in the writer's group, it should judge if there's already one server in the corresponding writer's group, if so, instead of performing a swap, it print a warning log and break out.","I'm going to use the proposed solution in a live environment, because I need it.
But with a little change... if there are more then one read_only=0 servers, I'll clear the writer group of all servers. As if there are no writers. This will prevent inconsistancies.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2025,2019-04-18T23:32:51Z,2019-04-19T04:00:51Z,2019-10-29T00:07:43Z,MERGED,True,473,94,2,https://github.com/renecannao,V2.0.4 1994 pool2,9,[],https://github.com/sysown/proxysql/pull/2025,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2025,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2026,2019-04-19T05:49:56Z,2019-04-19T16:54:30Z,2019-10-29T00:07:39Z,MERGED,True,113,47,5,https://github.com/renecannao,V2.0.4 1738,3,[],https://github.com/sysown/proxysql/pull/2026,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2026,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2028,2019-04-22T07:23:32Z,2019-06-27T11:11:21Z,2019-06-27T11:57:26Z,MERGED,True,87,62,5,https://github.com/acampoh,V2.0.3 tuenti,6,[],https://github.com/sysown/proxysql/pull/2028,https://github.com/acampoh,1,https://github.com/sysown/proxysql/pull/2028,"This PR tries to fix the galera HG management when you have multiple nodes shared between different galera HGs. Also it fixes the management of shunned nodes that were deleted from runtime, and now are moved properly to the offline HG so they can be recovered when they are back online automatically.
Also a couple of changes that i found useful for debugging, such as having the runtime sqlite db on file on debug compilations so you can check the contents in real time, and also allow any amount of monitor threads also in debug, so the behaviour of them can be debugged in a easier way.","This PR tries to fix the galera HG management when you have multiple nodes shared between different galera HGs. Also it fixes the management of shunned nodes that were deleted from runtime, and now are moved properly to the offline HG so they can be recovered when they are back online automatically.
Also a couple of changes that i found useful for debugging, such as having the runtime sqlite db on file on debug compilations so you can check the contents in real time, and also allow any amount of monitor threads also in debug, so the behaviour of them can be debugged in a easier way.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2028,2019-04-22T07:23:32Z,2019-06-27T11:11:21Z,2019-06-27T11:57:26Z,MERGED,True,87,62,5,https://github.com/acampoh,V2.0.3 tuenti,6,[],https://github.com/sysown/proxysql/pull/2028,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2028#issuecomment-485350240,"This PR tries to fix the galera HG management when you have multiple nodes shared between different galera HGs. Also it fixes the management of shunned nodes that were deleted from runtime, and now are moved properly to the offline HG so they can be recovered when they are back online automatically.
Also a couple of changes that i found useful for debugging, such as having the runtime sqlite db on file on debug compilations so you can check the contents in real time, and also allow any amount of monitor threads also in debug, so the behaviour of them can be debugged in a easier way.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2028,2019-04-22T07:23:32Z,2019-06-27T11:11:21Z,2019-06-27T11:57:26Z,MERGED,True,87,62,5,https://github.com/acampoh,V2.0.3 tuenti,6,[],https://github.com/sysown/proxysql/pull/2028,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2028#issuecomment-486146100,"This PR tries to fix the galera HG management when you have multiple nodes shared between different galera HGs. Also it fixes the management of shunned nodes that were deleted from runtime, and now are moved properly to the offline HG so they can be recovered when they are back online automatically.
Also a couple of changes that i found useful for debugging, such as having the runtime sqlite db on file on debug compilations so you can check the contents in real time, and also allow any amount of monitor threads also in debug, so the behaviour of them can be debugged in a easier way.","Hi @acampoh , thank you for the PR!

This PR tries to fix the galera HG management when you have multiple nodes shared between different galera HGs. Also it fixes the management of shunned nodes that were deleted from runtime, and now are moved properly to the offline HG so they can be recovered when they are back online automatically.

Can you please describe what was the original issue, and how it is fixed?

Also a couple of changes that i found useful for debugging, such as having the runtime sqlite db on file on debug compilations so you can check the contents in real time

That was not needed. When compiled in debug mode, you can access the database from Admin, schema myhgm. Run this to confirm:
SHOW DATABASES;
SHOW TABLES FROM myhgm;

By the way, to be honest I am not completely happy with the design of Galera checks, because each node is checked independently and then Monitor takes action immediately while trying to not conflict with other checks.
For Aurora I am working on a different approach: for each cluster, a dedicated thread will check all the nodes of the cluster. This avoids conflicts.
The module isn't ready yet, work in progress, but I am mentioning because maybe you want to have a look at it.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2028,2019-04-22T07:23:32Z,2019-06-27T11:11:21Z,2019-06-27T11:57:26Z,MERGED,True,87,62,5,https://github.com/acampoh,V2.0.3 tuenti,6,[],https://github.com/sysown/proxysql/pull/2028,https://github.com/acampoh,4,https://github.com/sysown/proxysql/pull/2028#issuecomment-486170261,"This PR tries to fix the galera HG management when you have multiple nodes shared between different galera HGs. Also it fixes the management of shunned nodes that were deleted from runtime, and now are moved properly to the offline HG so they can be recovered when they are back online automatically.
Also a couple of changes that i found useful for debugging, such as having the runtime sqlite db on file on debug compilations so you can check the contents in real time, and also allow any amount of monitor threads also in debug, so the behaviour of them can be debugged in a easier way.","Hello!
The issue we were having with the packaged version was that we found that we our setup (having 3 nodes shared between 3 HGs)  as sown below, proxysql was generating a bad runtime_mysql_servers setup while having all the nodes setup.
mysql_servers =
(
	{
		address=""127.0.0.1""
		port=3310
		hostgroup=3307
		max_connections=200
		weight=10000000
		comment=""test server""
	},
	{
		address=""127.0.0.2""
		port=3311
		hostgroup=3307
		max_connections=200
		weight=1000
		comment=""test server""
	},
	{
		address=""127.0.0.3""
		port=3312
		hostgroup=3307
		max_connections=200
		weight=1
		comment=""test server""
	},
	{
		address=""127.0.0.2""
		port=3311
		hostgroup=3308
		max_connections=200
		weight=10000000
		comment=""test server""
	},
	{
		address=""127.0.0.3""
		port=3312
		hostgroup=3308
		max_connections=200
		weight=1000
		comment=""test server""
	},
	{
		address=""127.0.0.1""
		port=3310
		hostgroup=3308
		max_connections=200
		weight=1
		comment=""test server""
	},
	{
		address=""127.0.0.3""
		port=3312
		hostgroup=3309
		max_connections=200
		weight=10000000
		comment=""test server""
	},
	{
		address=""127.0.0.1""
		port=3310
		hostgroup=3309
		max_connections=200
		weight=1000
		comment=""test server""
	},
	{
		address=""127.0.0.2""
		port=3311
		hostgroup=3309
		max_connections=200
		weight=1
		comment=""test server""
	}
)

mysql_galera_hostgroups =
(
    {
	writer_hostgroup=3307
        backup_writer_hostgroup=13307
        reader_hostgroup=23307
        offline_hostgroup=33307
        active=1
        max_writers=1
        writer_is_also_reader=1
        comment=""group1"" 
    },
    {
	writer_hostgroup=3308
        backup_writer_hostgroup=13308
        reader_hostgroup=23308
        offline_hostgroup=33308
        active=1
        max_writers=1
        writer_is_also_reader=1
        comment=""group2"" 
    },
    {
	writer_hostgroup=3309
        backup_writer_hostgroup=13309
        reader_hostgroup=23309
        offline_hostgroup=33309
        active=1
        max_writers=1
        writer_is_also_reader=1
        comment=""group3"" 
    }
)

as proxysql was looking for a host:port in a HG != writer_hg that was including all HGs setup and not only the ones related with that galera HG.
Also once the happy case was working for us we saw that for desync / shunned nodes, they were deleted from runtime_mysql_servers instead of moving them to the offline HG so it was unable to recover the nodes after recovering the node. Now shunned / offline_soft nodes will be moved to offline_hg so when they are up again they will be moved to the corresponding HG (writer / reader / backup) as set up.
About moving the db from inmemory to file i tried to connect to it several times but i wasn't able to explore the content. I'll try again and remove that part in case of success.
I'll check the Aurora part so i can have a good idea of how that will work (sounds great what you said) but currently this the best approach i found without modifying the behaviour of the monitor",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2028,2019-04-22T07:23:32Z,2019-06-27T11:11:21Z,2019-06-27T11:57:26Z,MERGED,True,87,62,5,https://github.com/acampoh,V2.0.3 tuenti,6,[],https://github.com/sysown/proxysql/pull/2028,https://github.com/acampoh,5,https://github.com/sysown/proxysql/pull/2028#issuecomment-486674102,"This PR tries to fix the galera HG management when you have multiple nodes shared between different galera HGs. Also it fixes the management of shunned nodes that were deleted from runtime, and now are moved properly to the offline HG so they can be recovered when they are back online automatically.
Also a couple of changes that i found useful for debugging, such as having the runtime sqlite db on file on debug compilations so you can check the contents in real time, and also allow any amount of monitor threads also in debug, so the behaviour of them can be debugged in a easier way.",After some testing in a real environment with traffic and playing with it a bit with the node status i have found some corner cases not covered in this PR. I'll find them and update this,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2028,2019-04-22T07:23:32Z,2019-06-27T11:11:21Z,2019-06-27T11:57:26Z,MERGED,True,87,62,5,https://github.com/acampoh,V2.0.3 tuenti,6,[],https://github.com/sysown/proxysql/pull/2028,https://github.com/renecannao,6,https://github.com/sysown/proxysql/pull/2028#issuecomment-486721406,"This PR tries to fix the galera HG management when you have multiple nodes shared between different galera HGs. Also it fixes the management of shunned nodes that were deleted from runtime, and now are moved properly to the offline HG so they can be recovered when they are back online automatically.
Also a couple of changes that i found useful for debugging, such as having the runtime sqlite db on file on debug compilations so you can check the contents in real time, and also allow any amount of monitor threads also in debug, so the behaviour of them can be debugged in a easier way.","I have some feedback from my end too.
In the context of Galera, a writer_hostgroup represent a cluster.
Although it is technically possible for a server to be part of multiple hostgroups (and this is quite common), the Galera module wasn't designed to have a server part of multiple clusters. Thus i understand why your case doesn't work.
But I want to to ask: why do you have such setup? Why do you have a single server part of multiple clusters? Am I missing something?",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2028,2019-04-22T07:23:32Z,2019-06-27T11:11:21Z,2019-06-27T11:57:26Z,MERGED,True,87,62,5,https://github.com/acampoh,V2.0.3 tuenti,6,[],https://github.com/sysown/proxysql/pull/2028,https://github.com/emottola,7,https://github.com/sysown/proxysql/pull/2028#issuecomment-486853869,"This PR tries to fix the galera HG management when you have multiple nodes shared between different galera HGs. Also it fixes the management of shunned nodes that were deleted from runtime, and now are moved properly to the offline HG so they can be recovered when they are back online automatically.
Also a couple of changes that i found useful for debugging, such as having the runtime sqlite db on file on debug compilations so you can check the contents in real time, and also allow any amount of monitor threads also in debug, so the behaviour of them can be debugged in a easier way.","Hi Ren√©, I'll answer your question about our setup.
First I need to thank you and the Proxysql team for having developed a such powerful and helpful tool. We're really enjoying it and using it on production since some months in our large multi-DCs Galera-based MySQL installation.
Since we're widely using and testing it we found some limitation that we need to address for moving to Proxysql 2.0 with its native galera support.
In our setup we split the load (read+write traffic together) by software configuration across all the nodes in the clusters, that allows use to not over/under use any of the nodes.
We archive this in two ways:

A schema-level configuration: all traffic for one schemas goes on the same node, taking into account we manage big boxes with multiple database schemas deployed.
A table-level configuration using logical sharding: for the target PK values our internal software library calculates the right table numeric suffix (so the tables are like table1 or table2 or tableX)  and then check/use the appropriate database configuration for that specific [range of] table.

Each Galera Cluster has its own Proxysql deployment (multiple pods) that manage the traffic in front of it with multiple HGs configured.
Each Host Group has one of the server configured as ""primary"", the remaining ones as ""secondary"".
When all the nodes are online, each of them takes only its own specific set of traffic (schemas+tables), that's why I called ""primary"", despite the technical definition should be ""preferred node"".
If this node goes down the traffic is routed to one of the remaining available nodes.
This is the reason why every single server is part of multiple HGs, because each server is the preferred one in one HGs and takes almost all the traffic, in the remaining HGs the same server it's configured to be used only in case of loss of the preferred.
In order to define the preferred node in a given HG where we have 3 ONLINE nodes, using proxysql 1.4.x we're playing with server weights like assigning value of 1000000 to the 1st node, 1000 for 2nd node and 1 for 3rd node.
This is because we don't like/adopt the logic of the existing galera checker script and don't want to wait for scheduler/checker script actions when a node goes down.
So in every HG we always have 3 or more available nodes but we send traffic ""mostly"" to only one of them, since the weight-ratio traffic distribution it's not super precise, but we don't care.
Our goal is to have proxysql 2.0 fully natively capable of managing all the Galera cluster possible server/node status while having the same server in multiple HGs if needed.
As a context information, we have a 1:1 ration between read and write traffic, so we don't need to use one node for writes and multiple ones for reads, we ""only"" need extremely high availability and fast traffic switching.
Once a server has a problem (goes down or become desync or whatever) we need to move traffic as soon as possible in terms of sub-seconds, and IMHO using proxysql internal monitor is the best solution for this job, so let's improve it!
Please let me know if our uses case and our way of using proxysql makes sense to you and please do not hesitate to ask, comment or suggest anything.
I'm of course open to any deeper discussion about it, you can poke me on Slack directly  :)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2028,2019-04-22T07:23:32Z,2019-06-27T11:11:21Z,2019-06-27T11:57:26Z,MERGED,True,87,62,5,https://github.com/acampoh,V2.0.3 tuenti,6,[],https://github.com/sysown/proxysql/pull/2028,https://github.com/acampoh,8,https://github.com/sysown/proxysql/pull/2028#issuecomment-489041897,"This PR tries to fix the galera HG management when you have multiple nodes shared between different galera HGs. Also it fixes the management of shunned nodes that were deleted from runtime, and now are moved properly to the offline HG so they can be recovered when they are back online automatically.
Also a couple of changes that i found useful for debugging, such as having the runtime sqlite db on file on debug compilations so you can check the contents in real time, and also allow any amount of monitor threads also in debug, so the behaviour of them can be debugged in a easier way.","Hello Rene,
I have found the reason of the weird flapping of the nodes when proxysql has load. in MySQL_Monitor.cpp::monitor_galera_thread() sometimes the query you make for getting the state of nodes, sometimes is getting partial results (3 columns instead of 7), so after that is making decissions of which nodes to put offline without the proper info.
I'm not sure of the reason of this, maybe a bug in that mariadb lib version, or a dangling pointer... I checked the network packaged with wireshark and everything looked ok to me. I tried changing the goto by a return, and it's working fine, but i think that's not a fix, just a workaround.
I'll try to findout what happens and let you know.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2028,2019-04-22T07:23:32Z,2019-06-27T11:11:21Z,2019-06-27T11:57:26Z,MERGED,True,87,62,5,https://github.com/acampoh,V2.0.3 tuenti,6,[],https://github.com/sysown/proxysql/pull/2028,https://github.com/renecannao,9,https://github.com/sysown/proxysql/pull/2028#issuecomment-489043799,"This PR tries to fix the galera HG management when you have multiple nodes shared between different galera HGs. Also it fixes the management of shunned nodes that were deleted from runtime, and now are moved properly to the offline HG so they can be recovered when they are back online automatically.
Also a couple of changes that i found useful for debugging, such as having the runtime sqlite db on file on debug compilations so you can check the contents in real time, and also allow any amount of monitor threads also in debug, so the behaviour of them can be debugged in a easier way.","I'm not sure of the reason of this, maybe a bug in that mariadb lib version, or a dangling pointer...

I literally spent 2 weeks on this! :-)
Fixed in 2.0.4",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2028,2019-04-22T07:23:32Z,2019-06-27T11:11:21Z,2019-06-27T11:57:26Z,MERGED,True,87,62,5,https://github.com/acampoh,V2.0.3 tuenti,6,[],https://github.com/sysown/proxysql/pull/2028,https://github.com/renecannao,10,https://github.com/sysown/proxysql/pull/2028#issuecomment-489045696,"This PR tries to fix the galera HG management when you have multiple nodes shared between different galera HGs. Also it fixes the management of shunned nodes that were deleted from runtime, and now are moved properly to the offline HG so they can be recovered when they are back online automatically.
Also a couple of changes that i found useful for debugging, such as having the runtime sqlite db on file on debug compilations so you can check the contents in real time, and also allow any amount of monitor threads also in debug, so the behaviour of them can be debugged in a easier way.","To give more context, I spent a lot of time thinking the same: ""maybe a bug in that mariadb lib version, or a dangling pointer"" .
At the end, it turned out that on some circumstances (mostly due to timeouts) connections were incorrectly returning into Monitor's connection pool, and the next thread using them were performing dirty reads",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2028,2019-04-22T07:23:32Z,2019-06-27T11:11:21Z,2019-06-27T11:57:26Z,MERGED,True,87,62,5,https://github.com/acampoh,V2.0.3 tuenti,6,[],https://github.com/sysown/proxysql/pull/2028,https://github.com/acampoh,11,https://github.com/sysown/proxysql/pull/2028#issuecomment-489046718,"This PR tries to fix the galera HG management when you have multiple nodes shared between different galera HGs. Also it fixes the management of shunned nodes that were deleted from runtime, and now are moved properly to the offline HG so they can be recovered when they are back online automatically.
Also a couple of changes that i found useful for debugging, such as having the runtime sqlite db on file on debug compilations so you can check the contents in real time, and also allow any amount of monitor threads also in debug, so the behaviour of them can be debugged in a easier way.","that's great! I'll rebase my changes and test this again.
Thanks a lot for your quick response",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2028,2019-04-22T07:23:32Z,2019-06-27T11:11:21Z,2019-06-27T11:57:26Z,MERGED,True,87,62,5,https://github.com/acampoh,V2.0.3 tuenti,6,[],https://github.com/sysown/proxysql/pull/2028,https://github.com/acampoh,12,https://github.com/sysown/proxysql/pull/2028#issuecomment-489621665,"This PR tries to fix the galera HG management when you have multiple nodes shared between different galera HGs. Also it fixes the management of shunned nodes that were deleted from runtime, and now are moved properly to the offline HG so they can be recovered when they are back online automatically.
Also a couple of changes that i found useful for debugging, such as having the runtime sqlite db on file on debug compilations so you can check the contents in real time, and also allow any amount of monitor threads also in debug, so the behaviour of them can be debugged in a easier way.",Just tested and it's working for me as expected. There is no more flapping with the node status. \o/,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2028,2019-04-22T07:23:32Z,2019-06-27T11:11:21Z,2019-06-27T11:57:26Z,MERGED,True,87,62,5,https://github.com/acampoh,V2.0.3 tuenti,6,[],https://github.com/sysown/proxysql/pull/2028,https://github.com/renecannao,13,https://github.com/sysown/proxysql/pull/2028#issuecomment-490410716,"This PR tries to fix the galera HG management when you have multiple nodes shared between different galera HGs. Also it fixes the management of shunned nodes that were deleted from runtime, and now are moved properly to the offline HG so they can be recovered when they are back online automatically.
Also a couple of changes that i found useful for debugging, such as having the runtime sqlite db on file on debug compilations so you can check the contents in real time, and also allow any amount of monitor threads also in debug, so the behaviour of them can be debugged in a easier way.","Just tested and it's working for me as expected. There is no more flapping with the node status. \o/

Good news! :)
We didn't have the time to formally test it against 2.0.4 (to be released today), thus we will review the PR for the next version.
Thanks",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2028,2019-04-22T07:23:32Z,2019-06-27T11:11:21Z,2019-06-27T11:57:26Z,MERGED,True,87,62,5,https://github.com/acampoh,V2.0.3 tuenti,6,[],https://github.com/sysown/proxysql/pull/2028,https://github.com/pondix,14,https://github.com/sysown/proxysql/pull/2028#issuecomment-493239336,"This PR tries to fix the galera HG management when you have multiple nodes shared between different galera HGs. Also it fixes the management of shunned nodes that were deleted from runtime, and now are moved properly to the offline HG so they can be recovered when they are back online automatically.
Also a couple of changes that i found useful for debugging, such as having the runtime sqlite db on file on debug compilations so you can check the contents in real time, and also allow any amount of monitor threads also in debug, so the behaviour of them can be debugged in a easier way.",Hi @acampoh - would it be possible to please make a PR for this patch against 2.0.5? I'll then run the automated build tests to verify,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2028,2019-04-22T07:23:32Z,2019-06-27T11:11:21Z,2019-06-27T11:57:26Z,MERGED,True,87,62,5,https://github.com/acampoh,V2.0.3 tuenti,6,[],https://github.com/sysown/proxysql/pull/2028,https://github.com/acampoh,15,https://github.com/sysown/proxysql/pull/2028#issuecomment-493247451,"This PR tries to fix the galera HG management when you have multiple nodes shared between different galera HGs. Also it fixes the management of shunned nodes that were deleted from runtime, and now are moved properly to the offline HG so they can be recovered when they are back online automatically.
Also a couple of changes that i found useful for debugging, such as having the runtime sqlite db on file on debug compilations so you can check the contents in real time, and also allow any amount of monitor threads also in debug, so the behaviour of them can be debugged in a easier way.",Sure! I'll do it tomorrow morning,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2028,2019-04-22T07:23:32Z,2019-06-27T11:11:21Z,2019-06-27T11:57:26Z,MERGED,True,87,62,5,https://github.com/acampoh,V2.0.3 tuenti,6,[],https://github.com/sysown/proxysql/pull/2028,https://github.com/acampoh,16,https://github.com/sysown/proxysql/pull/2028#issuecomment-493360342,"This PR tries to fix the galera HG management when you have multiple nodes shared between different galera HGs. Also it fixes the management of shunned nodes that were deleted from runtime, and now are moved properly to the offline HG so they can be recovered when they are back online automatically.
Also a couple of changes that i found useful for debugging, such as having the runtime sqlite db on file on debug compilations so you can check the contents in real time, and also allow any amount of monitor threads also in debug, so the behaviour of them can be debugged in a easier way.",Done! It seems the patch still goes clean with v2.0.5,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2028,2019-04-22T07:23:32Z,2019-06-27T11:11:21Z,2019-06-27T11:57:26Z,MERGED,True,87,62,5,https://github.com/acampoh,V2.0.3 tuenti,6,[],https://github.com/sysown/proxysql/pull/2028,https://github.com/pondix,17,https://github.com/sysown/proxysql/pull/2028#issuecomment-493415004,"This PR tries to fix the galera HG management when you have multiple nodes shared between different galera HGs. Also it fixes the management of shunned nodes that were deleted from runtime, and now are moved properly to the offline HG so they can be recovered when they are back online automatically.
Also a couple of changes that i found useful for debugging, such as having the runtime sqlite db on file on debug compilations so you can check the contents in real time, and also allow any amount of monitor threads also in debug, so the behaviour of them can be debugged in a easier way.",Thanks!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2028,2019-04-22T07:23:32Z,2019-06-27T11:11:21Z,2019-06-27T11:57:26Z,MERGED,True,87,62,5,https://github.com/acampoh,V2.0.3 tuenti,6,[],https://github.com/sysown/proxysql/pull/2028,https://github.com/pondix,18,https://github.com/sysown/proxysql/pull/2028#issuecomment-493415025,"This PR tries to fix the galera HG management when you have multiple nodes shared between different galera HGs. Also it fixes the management of shunned nodes that were deleted from runtime, and now are moved properly to the offline HG so they can be recovered when they are back online automatically.
Also a couple of changes that i found useful for debugging, such as having the runtime sqlite db on file on debug compilations so you can check the contents in real time, and also allow any amount of monitor threads also in debug, so the behaviour of them can be debugged in a easier way.",test this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2028,2019-04-22T07:23:32Z,2019-06-27T11:11:21Z,2019-06-27T11:57:26Z,MERGED,True,87,62,5,https://github.com/acampoh,V2.0.3 tuenti,6,[],https://github.com/sysown/proxysql/pull/2028,https://github.com/acampoh,19,https://github.com/sysown/proxysql/pull/2028#issuecomment-503969492,"This PR tries to fix the galera HG management when you have multiple nodes shared between different galera HGs. Also it fixes the management of shunned nodes that were deleted from runtime, and now are moved properly to the offline HG so they can be recovered when they are back online automatically.
Also a couple of changes that i found useful for debugging, such as having the runtime sqlite db on file on debug compilations so you can check the contents in real time, and also allow any amount of monitor threads also in debug, so the behaviour of them can be debugged in a easier way.","Hello, i was reviewing the state of this and i'm not sure if i still have to do something to get it approved or it's ok as it is. Let me know if there is something else i can do :)
Just as a side note, we have been using this version in production (without galera_cluster config) for several weeks and with the proper config since this morning.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2028,2019-04-22T07:23:32Z,2019-06-27T11:11:21Z,2019-06-27T11:57:26Z,MERGED,True,87,62,5,https://github.com/acampoh,V2.0.3 tuenti,6,[],https://github.com/sysown/proxysql/pull/2028,https://github.com/acampoh,20,https://github.com/sysown/proxysql/pull/2028#issuecomment-504927015,"This PR tries to fix the galera HG management when you have multiple nodes shared between different galera HGs. Also it fixes the management of shunned nodes that were deleted from runtime, and now are moved properly to the offline HG so they can be recovered when they are back online automatically.
Also a couple of changes that i found useful for debugging, such as having the runtime sqlite db on file on debug compilations so you can check the contents in real time, and also allow any amount of monitor threads also in debug, so the behaviour of them can be debugged in a easier way.",Also after applying galera cluster config and removing the old checker from the scheduler we have reduced by 3 the cpu usage (i suppose due to having 3 nodes and a scheduler for each node),True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2028,2019-04-22T07:23:32Z,2019-06-27T11:11:21Z,2019-06-27T11:57:26Z,MERGED,True,87,62,5,https://github.com/acampoh,V2.0.3 tuenti,6,[],https://github.com/sysown/proxysql/pull/2028,https://github.com/renecannao,21,https://github.com/sysown/proxysql/pull/2028#issuecomment-505232960,"This PR tries to fix the galera HG management when you have multiple nodes shared between different galera HGs. Also it fixes the management of shunned nodes that were deleted from runtime, and now are moved properly to the offline HG so they can be recovered when they are back online automatically.
Also a couple of changes that i found useful for debugging, such as having the runtime sqlite db on file on debug compilations so you can check the contents in real time, and also allow any amount of monitor threads also in debug, so the behaviour of them can be debugged in a easier way.","Hi @acampoh .
Thank you for the update.
This is blocked on our end, and we are trying to prioritize it.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2028,2019-04-22T07:23:32Z,2019-06-27T11:11:21Z,2019-06-27T11:57:26Z,MERGED,True,87,62,5,https://github.com/acampoh,V2.0.3 tuenti,6,[],https://github.com/sysown/proxysql/pull/2028,https://github.com/acampoh,22,https://github.com/sysown/proxysql/pull/2028#issuecomment-505369463,"This PR tries to fix the galera HG management when you have multiple nodes shared between different galera HGs. Also it fixes the management of shunned nodes that were deleted from runtime, and now are moved properly to the offline HG so they can be recovered when they are back online automatically.
Also a couple of changes that i found useful for debugging, such as having the runtime sqlite db on file on debug compilations so you can check the contents in real time, and also allow any amount of monitor threads also in debug, so the behaviour of them can be debugged in a easier way.","thanks a lot for your update, there is no rush from our side. If you need us to change something related, let us know and we'll update the PR.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2030,2019-04-24T13:35:15Z,2019-04-25T00:58:35Z,2019-10-29T00:07:34Z,MERGED,True,21424,44,16,https://github.com/renecannao,V2.0.4 internal json,3,[],https://github.com/sysown/proxysql/pull/2030,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2030,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2035,2019-04-29T12:10:56Z,2019-04-29T12:30:12Z,2019-10-29T00:07:31Z,MERGED,True,38,5,7,https://github.com/renecannao,V2.0.4 ps mem,2,[],https://github.com/sysown/proxysql/pull/2035,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2035,"This includes:

a performance enhancement in Prepared Statements
upgrade to jemalloc 5.2.0","This includes:

a performance enhancement in Prepared Statements
upgrade to jemalloc 5.2.0",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2038,2019-04-30T15:37:46Z,2019-04-30T16:16:32Z,2019-10-29T00:07:27Z,MERGED,True,6,3,5,https://github.com/renecannao,Upgrade OpenSSL to 1.1.1b,1,[],https://github.com/sysown/proxysql/pull/2038,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2038,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2039,2019-04-30T16:58:16Z,2019-04-30T17:28:22Z,2019-10-29T00:01:00Z,MERGED,True,8,1,1,https://github.com/renecannao,Solve locking issue on SQLite3,1,[],https://github.com/sysown/proxysql/pull/2039,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2039,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2042,2019-05-01T14:05:18Z,2019-05-06T22:17:26Z,2019-05-07T06:00:26Z,MERGED,True,12,2,2,https://github.com/edgarasg,Check if build_target var is defined in entrypoint.bash,1,[],https://github.com/sysown/proxysql/pull/2042,https://github.com/edgarasg,1,https://github.com/sysown/proxysql/pull/2042,"Currently make fails if build_target is null:
make: *** empty string invalid as file name.  Stop.","Currently make fails if build_target is null:
make: *** empty string invalid as file name.  Stop.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2042,2019-05-01T14:05:18Z,2019-05-06T22:17:26Z,2019-05-07T06:00:26Z,MERGED,True,12,2,2,https://github.com/edgarasg,Check if build_target var is defined in entrypoint.bash,1,[],https://github.com/sysown/proxysql/pull/2042,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2042#issuecomment-488291506,"Currently make fails if build_target is null:
make: *** empty string invalid as file name.  Stop.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2042,2019-05-01T14:05:18Z,2019-05-06T22:17:26Z,2019-05-07T06:00:26Z,MERGED,True,12,2,2,https://github.com/edgarasg,Check if build_target var is defined in entrypoint.bash,1,[],https://github.com/sysown/proxysql/pull/2042,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/2042#issuecomment-489803657,"Currently make fails if build_target is null:
make: *** empty string invalid as file name.  Stop.",Thanks @edgarasg!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2044,2019-05-03T12:36:36Z,2019-05-05T10:09:23Z,2019-10-29T00:01:02Z,MERGED,True,3273,47,18,https://github.com/renecannao,V2.0.1 aurora,24,[],https://github.com/sysown/proxysql/pull/2044,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2044,"Merge into v2.0.4 a lot of code related to Aurora, and also to Galera.
Prepared also a framework for automated testing of Aurora, and Galera.
The current code for Aurora is enabled only for testing, thus not usable (yet) in production.","Merge into v2.0.4 a lot of code related to Aurora, and also to Galera.
Prepared also a framework for automated testing of Aurora, and Galera.
The current code for Aurora is enabled only for testing, thus not usable (yet) in production.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2044,2019-05-03T12:36:36Z,2019-05-05T10:09:23Z,2019-10-29T00:01:02Z,MERGED,True,3273,47,18,https://github.com/renecannao,V2.0.1 aurora,24,[],https://github.com/sysown/proxysql/pull/2044,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2044#issuecomment-489116567,"Merge into v2.0.4 a lot of code related to Aurora, and also to Galera.
Prepared also a framework for automated testing of Aurora, and Galera.
The current code for Aurora is enabled only for testing, thus not usable (yet) in production.",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2052,2019-05-13T09:36:41Z,,2019-11-21T04:21:35Z,OPEN,False,170,142,10,https://github.com/Dieken,cherry pick some important fixes from v2.0.4 to avoid crashes,21,[],https://github.com/sysown/proxysql/pull/2052,https://github.com/Dieken,1,https://github.com/sysown/proxysql/pull/2052,"Most are about ProxySQL crashes,  this supersedes PR #2017 which also fixed a crash.
You may not have enough energy to maintain v1.4.x, but at least keep it crash as less as possible :-(","Most are about ProxySQL crashes,  this supersedes PR #2017 which also fixed a crash.
You may not have enough energy to maintain v1.4.x, but at least keep it crash as less as possible :-(",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2052,2019-05-13T09:36:41Z,,2019-11-21T04:21:35Z,OPEN,False,170,142,10,https://github.com/Dieken,cherry pick some important fixes from v2.0.4 to avoid crashes,21,[],https://github.com/sysown/proxysql/pull/2052,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2052#issuecomment-491750892,"Most are about ProxySQL crashes,  this supersedes PR #2017 which also fixed a crash.
You may not have enough energy to maintain v1.4.x, but at least keep it crash as less as possible :-(",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2052,2019-05-13T09:36:41Z,,2019-11-21T04:21:35Z,OPEN,False,170,142,10,https://github.com/Dieken,cherry pick some important fixes from v2.0.4 to avoid crashes,21,[],https://github.com/sysown/proxysql/pull/2052,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/2052#issuecomment-493238570,"Most are about ProxySQL crashes,  this supersedes PR #2017 which also fixed a crash.
You may not have enough energy to maintain v1.4.x, but at least keep it crash as less as possible :-(",Scheduling automated test,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2052,2019-05-13T09:36:41Z,,2019-11-21T04:21:35Z,OPEN,False,170,142,10,https://github.com/Dieken,cherry pick some important fixes from v2.0.4 to avoid crashes,21,[],https://github.com/sysown/proxysql/pull/2052,https://github.com/pondix,4,https://github.com/sysown/proxysql/pull/2052#issuecomment-493238593,"Most are about ProxySQL crashes,  this supersedes PR #2017 which also fixed a crash.
You may not have enough energy to maintain v1.4.x, but at least keep it crash as less as possible :-(",test this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2052,2019-05-13T09:36:41Z,,2019-11-21T04:21:35Z,OPEN,False,170,142,10,https://github.com/Dieken,cherry pick some important fixes from v2.0.4 to avoid crashes,21,[],https://github.com/sysown/proxysql/pull/2052,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/2052#issuecomment-493430244,"Most are about ProxySQL crashes,  this supersedes PR #2017 which also fixed a crash.
You may not have enough energy to maintain v1.4.x, but at least keep it crash as less as possible :-(","@Dieken : can I please have your email address?
I would like to discuss few possible options to maintain 1.4 .
Thanks",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2052,2019-05-13T09:36:41Z,,2019-11-21T04:21:35Z,OPEN,False,170,142,10,https://github.com/Dieken,cherry pick some important fixes from v2.0.4 to avoid crashes,21,[],https://github.com/sysown/proxysql/pull/2052,https://github.com/Dieken,6,https://github.com/sysown/proxysql/pull/2052#issuecomment-493486584,"Most are about ProxySQL crashes,  this supersedes PR #2017 which also fixed a crash.
You may not have enough energy to maintain v1.4.x, but at least keep it crash as less as possible :-(","@renecannao   sure, you can reach me at yubao.liu at gmail dot com.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2052,2019-05-13T09:36:41Z,,2019-11-21T04:21:35Z,OPEN,False,170,142,10,https://github.com/Dieken,cherry pick some important fixes from v2.0.4 to avoid crashes,21,[],https://github.com/sysown/proxysql/pull/2052,https://github.com/Dieken,7,https://github.com/sysown/proxysql/pull/2052#issuecomment-497284629,"Most are about ProxySQL crashes,  this supersedes PR #2017 which also fixed a crash.
You may not have enough energy to maintain v1.4.x, but at least keep it crash as less as possible :-(","more issues that I don't have enough time to investigate,  code at https://github.com/Dieken/proxysql/tree/37f76c7c14714359e42009018b508411b951fbfe
=================================================================
==4041==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602002e84cf4 at pc 0x0000005cea40 bp 0x7f25dcef97e0 sp 0x7f25dcef97d0
READ of size 4 at 0x602002e84cf4 thread T6
    #0 0x5cea3f in MySQL_Protocol::process_pkt_handshake_response(unsigned char*, unsigned int) /opt/proxysql/lib/MySQL_Protocol.cpp:1355
    #1 0x5a1806 in MySQL_Session::handler___status_CONNECTING_CLIENT___STATE_SERVER_HANDSHAKE(_PtrSize_t*, bool*) /opt/proxysql/lib/MySQL_Session.cpp:3316
    #2 0x59398d in MySQL_Session::handler() /opt/proxysql/lib/MySQL_Session.cpp:2036
    #3 0x567d7b in MySQL_Thread::process_all_sessions() /opt/proxysql/lib/MySQL_Thread.cpp:3283
    #4 0x5655be in MySQL_Thread::run() /opt/proxysql/lib/MySQL_Thread.cpp:3070
    #5 0x4ddf02 in mysql_worker_thread_func(void*) /opt/proxysql/src/main.cpp:243
    #6 0x7f25e1cef6b9 in start_thread (/lib/x86_64-linux-gnu/libpthread.so.0+0x76b9)
    #7 0x7f25e08d341c in clone (/lib/x86_64-linux-gnu/libc.so.6+0x10741c)

0x602002e84cf5 is located 0 bytes to the right of 5-byte region [0x602002e84cf0,0x602002e84cf5)
allocated by thread T6 here:
    #0 0x7f25e1f9d602 in malloc (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x98602)
    #1 0x73b1e2 in MySQL_Data_Stream::buffer2array() /opt/proxysql/lib/mysql_data_stream.cpp:466
    #2 0x739e97 in MySQL_Data_Stream::read_pkts() /opt/proxysql/lib/mysql_data_stream.cpp:418
    #3 0x5667ba in MySQL_Thread::process_data_on_data_stream(MySQL_Data_Stream*, unsigned int) /opt/proxysql/lib/MySQL_Thread.cpp:3143
    #4 0x564ddd in MySQL_Thread::run() /opt/proxysql/lib/MySQL_Thread.cpp:3023
    #5 0x4ddf02 in mysql_worker_thread_func(void*) /opt/proxysql/src/main.cpp:243
    #6 0x7f25e1cef6b9 in start_thread (/lib/x86_64-linux-gnu/libpthread.so.0+0x76b9)

Thread T6 created by T0 here:
    #0 0x7f25e1f3b253 in pthread_create (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x36253)
    #1 0x55a18f in MySQL_Threads_Handler::create_thread(unsigned int, void* (*)(void*), bool) /opt/proxysql/lib/MySQL_Thread.cpp:2143
    #2 0x4df549 in ProxySQL_Main_init_MySQL_Threads_Handler_module() /opt/proxysql/src/main.cpp:444
    #3 0x4e0491 in ProxySQL_Main_init_phase3___start_all() /opt/proxysql/src/main.cpp:702
    #4 0x4e1e09 in main /opt/proxysql/src/main.cpp:1030
    #5 0x7f25e07ec82f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)

SUMMARY: AddressSanitizer: heap-buffer-overflow /opt/proxysql/lib/MySQL_Protocol.cpp:1355 MySQL_Protocol::process_pkt_handshake_response(unsigned char*, unsigned int)
Shadow bytes around the buggy address:
  0x0c04805c8940: fa fa 00 05 fa fa 00 05 fa fa 00 05 fa fa 00 05
  0x0c04805c8950: fa fa 00 05 fa fa 00 05 fa fa 00 05 fa fa 00 05
  0x0c04805c8960: fa fa 00 05 fa fa 00 05 fa fa fa fa fa fa 00 05
  0x0c04805c8970: fa fa 00 05 fa fa fd fd fa fa fd fd fa fa 00 05
  0x0c04805c8980: fa fa fd fa fa fa fa fa fa fa 00 05 fa fa 07 fa
=>0x0c04805c8990: fa fa 00 05 fa fa 00 05 fa fa 00 05 fa fa[05]fa
  0x0c04805c89a0: fa fa fd fa fa fa 00 05 fa fa 00 05 fa fa fa fa
  0x0c04805c89b0: fa fa 00 05 fa fa 00 05 fa fa 00 05 fa fa 00 05
  0x0c04805c89c0: fa fa 00 05 fa fa 00 05 fa fa 00 05 fa fa 00 05
  0x0c04805c89d0: fa fa 00 05 fa fa 00 05 fa fa 00 05 fa fa 00 05
  0x0c04805c89e0: fa fa 00 05 fa fa 00 05 fa fa 00 05 fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Heap right redzone:      fb
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack partial redzone:   f4
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
==4041==ABORTING",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2052,2019-05-13T09:36:41Z,,2019-11-21T04:21:35Z,OPEN,False,170,142,10,https://github.com/Dieken,cherry pick some important fixes from v2.0.4 to avoid crashes,21,[],https://github.com/sysown/proxysql/pull/2052,https://github.com/Dieken,8,https://github.com/sysown/proxysql/pull/2052#issuecomment-497284945,"Most are about ProxySQL crashes,  this supersedes PR #2017 which also fixed a crash.
You may not have enough energy to maintain v1.4.x, but at least keep it crash as less as possible :-(","=================================================================
==12010==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020007e7131 at pc 0x0000005c2de7 bp 0x7fd9b8cdb620 sp 0x7fd9b8cdb610
READ of size 1 at 0x6020007e7131 thread T3
    #0 0x5c2de6 in proxy_my_crypt(char*, unsigned char const*, unsigned char const*, unsigned int) /opt/proxysql/lib/MySQL_Protocol.cpp:127
    #1 0x5c34d7 in proxy_scramble_sha1(char*, char const*, char const*, char*) /opt/proxysql/lib/MySQL_Protocol.cpp:175
    #2 0x5cfb80 in MySQL_Protocol::process_pkt_handshake_response(unsigned char*, unsigned int) /opt/proxysql/lib/MySQL_Protocol.cpp:1449
    #3 0x5a1806 in MySQL_Session::handler___status_CONNECTING_CLIENT___STATE_SERVER_HANDSHAKE(_PtrSize_t*, bool*) /opt/proxysql/lib/MySQL_Session.cpp:3316
    #4 0x59398d in MySQL_Session::handler() /opt/proxysql/lib/MySQL_Session.cpp:2036
    #5 0x567d7b in MySQL_Thread::process_all_sessions() /opt/proxysql/lib/MySQL_Thread.cpp:3283
    #6 0x5655be in MySQL_Thread::run() /opt/proxysql/lib/MySQL_Thread.cpp:3070
    #7 0x4ddf02 in mysql_worker_thread_func(void*) /opt/proxysql/src/main.cpp:243
    #8 0x7fd9b7a206b9 in start_thread (/lib/x86_64-linux-gnu/libpthread.so.0+0x76b9)
    #9 0x7fd9b660441c in clone (/lib/x86_64-linux-gnu/libc.so.6+0x10741c)

0x6020007e7131 is located 0 bytes to the right of 1-byte region [0x6020007e7130,0x6020007e7131)
allocated by thread T3 here:
    #0 0x7fd9b7cce602 in malloc (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x98602)
    #1 0x5cecae in MySQL_Protocol::process_pkt_handshake_response(unsigned char*, unsigned int) /opt/proxysql/lib/MySQL_Protocol.cpp:1377
    #2 0x5a1806 in MySQL_Session::handler___status_CONNECTING_CLIENT___STATE_SERVER_HANDSHAKE(_PtrSize_t*, bool*) /opt/proxysql/lib/MySQL_Session.cpp:3316
    #3 0x59398d in MySQL_Session::handler() /opt/proxysql/lib/MySQL_Session.cpp:2036
    #4 0x567d7b in MySQL_Thread::process_all_sessions() /opt/proxysql/lib/MySQL_Thread.cpp:3283
    #5 0x5655be in MySQL_Thread::run() /opt/proxysql/lib/MySQL_Thread.cpp:3070
    #6 0x4ddf02 in mysql_worker_thread_func(void*) /opt/proxysql/src/main.cpp:243
    #7 0x7fd9b7a206b9 in start_thread (/lib/x86_64-linux-gnu/libpthread.so.0+0x76b9)

Thread T3 created by T0 here:
    #0 0x7fd9b7c6c253 in pthread_create (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x36253)
    #1 0x55a18f in MySQL_Threads_Handler::create_thread(unsigned int, void* (*)(void*), bool) /opt/proxysql/lib/MySQL_Thread.cpp:2143
    #2 0x4df549 in ProxySQL_Main_init_MySQL_Threads_Handler_module() /opt/proxysql/src/main.cpp:444
    #3 0x4e0491 in ProxySQL_Main_init_phase3___start_all() /opt/proxysql/src/main.cpp:702
    #4 0x4e1e09 in main /opt/proxysql/src/main.cpp:1030
    #5 0x7fd9b651d82f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)

SUMMARY: AddressSanitizer: heap-buffer-overflow /opt/proxysql/lib/MySQL_Protocol.cpp:127 proxy_my_crypt(char*, unsigned char const*, unsigned char const*, unsigned int)
Shadow bytes around the buggy address:
  0x0c04800f4dd0: fa fa fa fa fa fa fa fa fa fa fd fa fa fa fd fd
  0x0c04800f4de0: fa fa fa fa fa fa fd fd fa fa fd fa fa fa fd fd
  0x0c04800f4df0: fa fa fa fa fa fa fd fd fa fa fa fa fa fa fa fa
  0x0c04800f4e00: fa fa fa fa fa fa fd fa fa fa 00 00 fa fa fa fa
  0x0c04800f4e10: fa fa 04 fa fa fa 00 05 fa fa fa fa fa fa 00 05
=>0x0c04800f4e20: fa fa fd fa fa fa[01]fa fa fa 00 05 fa fa fd fd
  0x0c04800f4e30: fa fa 00 00 fa fa 00 00 fa fa fa fa fa fa 02 fa
  0x0c04800f4e40: fa fa fa fa fa fa fa fa fa fa 00 07 fa fa fa fa
  0x0c04800f4e50: fa fa 05 fa fa fa 00 05 fa fa fa fa fa fa fa fa
  0x0c04800f4e60: fa fa 00 05 fa fa 00 05 fa fa fa fa fa fa fa fa
  0x0c04800f4e70: fa fa fa fa fa fa fd fd fa fa fd fa fa fa fd fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Heap right redzone:      fb
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack partial redzone:   f4
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
==12010==ABORTING",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2052,2019-05-13T09:36:41Z,,2019-11-21T04:21:35Z,OPEN,False,170,142,10,https://github.com/Dieken,cherry pick some important fixes from v2.0.4 to avoid crashes,21,[],https://github.com/sysown/proxysql/pull/2052,https://github.com/Dieken,9,https://github.com/sysown/proxysql/pull/2052#issuecomment-497285036,"Most are about ProxySQL crashes,  this supersedes PR #2017 which also fixed a crash.
You may not have enough energy to maintain v1.4.x, but at least keep it crash as less as possible :-(","=================================================================
==31445==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000d79635 at pc 0x000000581b4b bp 0x7f6b449b7cb0 sp 0x7f6b449b7ca0
READ of size 1 at 0x602000d79635 thread T3
    #0 0x581b4a in MySQL_Session::handler_CommitRollback(_PtrSize_t*) /opt/proxysql/lib/MySQL_Session.cpp:531
    #1 0x58283b in MySQL_Session::handler_special_queries(_PtrSize_t*) /opt/proxysql/lib/MySQL_Session.cpp:660
    #2 0x594d5a in MySQL_Session::handler() /opt/proxysql/lib/MySQL_Session.cpp:2154
    #3 0x567d7b in MySQL_Thread::process_all_sessions() /opt/proxysql/lib/MySQL_Thread.cpp:3283
    #4 0x5655be in MySQL_Thread::run() /opt/proxysql/lib/MySQL_Thread.cpp:3070
    #5 0x4ddf02 in mysql_worker_thread_func(void*) /opt/proxysql/src/main.cpp:243
    #6 0x7f6b436fc6b9 in start_thread (/lib/x86_64-linux-gnu/libpthread.so.0+0x76b9)
    #7 0x7f6b422e041c in clone (/lib/x86_64-linux-gnu/libc.so.6+0x10741c)

0x602000d79635 is located 0 bytes to the right of 5-byte region [0x602000d79630,0x602000d79635)
allocated by thread T3 here:
    #0 0x7f6b439aa602 in malloc (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x98602)
    #1 0x73bf16 in MySQL_Data_Stream::buffer2array() /opt/proxysql/lib/mysql_data_stream.cpp:542
    #2 0x739e97 in MySQL_Data_Stream::read_pkts() /opt/proxysql/lib/mysql_data_stream.cpp:418
    #3 0x5667ba in MySQL_Thread::process_data_on_data_stream(MySQL_Data_Stream*, unsigned int) /opt/proxysql/lib/MySQL_Thread.cpp:3143
    #4 0x564ddd in MySQL_Thread::run() /opt/proxysql/lib/MySQL_Thread.cpp:3023
    #5 0x4ddf02 in mysql_worker_thread_func(void*) /opt/proxysql/src/main.cpp:243
    #6 0x7f6b436fc6b9 in start_thread (/lib/x86_64-linux-gnu/libpthread.so.0+0x76b9)

Thread T3 created by T0 here:
    #0 0x7f6b43948253 in pthread_create (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x36253)
    #1 0x55a18f in MySQL_Threads_Handler::create_thread(unsigned int, void* (*)(void*), bool) /opt/proxysql/lib/MySQL_Thread.cpp:2143
    #2 0x4df549 in ProxySQL_Main_init_MySQL_Threads_Handler_module() /opt/proxysql/src/main.cpp:444
    #3 0x4e0491 in ProxySQL_Main_init_phase3___start_all() /opt/proxysql/src/main.cpp:702
    #4 0x4e1e09 in main /opt/proxysql/src/main.cpp:1030
    #5 0x7f6b421f982f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)

SUMMARY: AddressSanitizer: heap-buffer-overflow /opt/proxysql/lib/MySQL_Session.cpp:531 MySQL_Session::handler_CommitRollback(_PtrSize_t*)
Shadow bytes around the buggy address:
  0x0c04801a7270: fa fa 00 05 fa fa 00 05 fa fa 00 05 fa fa 00 05
  0x0c04801a7280: fa fa 00 05 fa fa 00 05 fa fa 00 05 fa fa 00 05
  0x0c04801a7290: fa fa 00 05 fa fa 00 05 fa fa 00 05 fa fa 00 05
  0x0c04801a72a0: fa fa 00 05 fa fa 00 05 fa fa 00 05 fa fa 00 05
  0x0c04801a72b0: fa fa 00 05 fa fa 00 05 fa fa 00 05 fa fa 00 05
=>0x0c04801a72c0: fa fa 00 05 fa fa[05]fa fa fa 00 05 fa fa 00 05
  0x0c04801a72d0: fa fa 00 05 fa fa 00 05 fa fa 00 05 fa fa fd fd
  0x0c04801a72e0: fa fa 00 05 fa fa 00 05 fa fa 00 05 fa fa 00 05
  0x0c04801a72f0: fa fa 00 05 fa fa 00 05 fa fa 00 05 fa fa 00 05
  0x0c04801a7300: fa fa 00 05 fa fa 00 05 fa fa 00 05 fa fa 00 05
  0x0c04801a7310: fa fa 00 05 fa fa 00 05 fa fa 00 05 fa fa 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Heap right redzone:      fb
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack partial redzone:   f4
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
==31445==ABORTING",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2052,2019-05-13T09:36:41Z,,2019-11-21T04:21:35Z,OPEN,False,170,142,10,https://github.com/Dieken,cherry pick some important fixes from v2.0.4 to avoid crashes,21,[],https://github.com/sysown/proxysql/pull/2052,https://github.com/Dieken,10,https://github.com/sysown/proxysql/pull/2052#issuecomment-497285114,"Most are about ProxySQL crashes,  this supersedes PR #2017 which also fixed a crash.
You may not have enough energy to maintain v1.4.x, but at least keep it crash as less as possible :-(","=================================================================
==29472==ERROR: AddressSanitizer: heap-use-after-free on address 0x60c0000280c0 at pc 0x00000050d551 bp 0x7f310b5fc190 sp 0x7f310b5fc180
READ of size 8 at 0x60c0000280c0 thread T4
    #0 0x50d550 in PtrArray::index(unsigned int) ../include/gen_utils.h:61
    #1 0x54a603 in MySQL_Listeners_Manager::find_iface_from_fd(int) /opt/proxysql/lib/MySQL_Thread.cpp:179
    #2 0x5785ab in MySQL_Threads_Handler::MLM_find_iface_from_fd(int) ../include/MySQL_Thread.h:490
    #3 0x56b8df in MySQL_Thread::listener_handle_new_connection(MySQL_Data_Stream*, unsigned int) /opt/proxysql/lib/MySQL_Thread.cpp:3568
    #4 0x564e12 in MySQL_Thread::run() /opt/proxysql/lib/MySQL_Thread.cpp:3016
    #5 0x4ddf02 in mysql_worker_thread_func(void*) /opt/proxysql/src/main.cpp:243
    #6 0x7f31102456b9 in start_thread (/lib/x86_64-linux-gnu/libpthread.so.0+0x76b9)
    #7 0x7f310ee2941c in clone (/lib/x86_64-linux-gnu/libc.so.6+0x10741c)

0x60c0000280c0 is located 0 bytes inside of 128-byte region [0x60c0000280c0,0x60c000028140)
freed by thread T0 here:
    #0 0x7f31104f32ca in __interceptor_free (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x982ca)
    #1 0x50d2e4 in PtrArray::expand(unsigned int) ../include/gen_utils.h:32
    #2 0x50d5f7 in PtrArray::add(void*) ../include/gen_utils.h:65
    #3 0x54a230 in MySQL_Listeners_Manager::add(char const*, unsigned int, int**) /opt/proxysql/lib/MySQL_Thread.cpp:148
    #4 0x54c738 in MySQL_Threads_Handler::listener_add(char const*) /opt/proxysql/lib/MySQL_Thread.cpp:460
    #5 0x55ab5c in MySQL_Threads_Handler::start_listeners() /opt/proxysql/lib/MySQL_Thread.cpp:2200
    #6 0x4e050f in ProxySQL_Main_init_phase3___start_all() /opt/proxysql/src/main.cpp:720
    #7 0x4e1e09 in main /opt/proxysql/src/main.cpp:1030
    #8 0x7f310ed4282f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)

previously allocated by thread T0 here:
    #0 0x7f31104f3602 in malloc (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x98602)
    #1 0x50d226 in PtrArray::expand(unsigned int) ../include/gen_utils.h:28
    #2 0x50d5f7 in PtrArray::add(void*) ../include/gen_utils.h:65
    #3 0x54a230 in MySQL_Listeners_Manager::add(char const*, unsigned int, int**) /opt/proxysql/lib/MySQL_Thread.cpp:148
    #4 0x54c738 in MySQL_Threads_Handler::listener_add(char const*) /opt/proxysql/lib/MySQL_Thread.cpp:460
    #5 0x55ab5c in MySQL_Threads_Handler::start_listeners() /opt/proxysql/lib/MySQL_Thread.cpp:2200
    #6 0x4e050f in ProxySQL_Main_init_phase3___start_all() /opt/proxysql/src/main.cpp:720
    #7 0x4e1e09 in main /opt/proxysql/src/main.cpp:1030
    #8 0x7f310ed4282f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)

Thread T4 created by T0 here:
    #0 0x7f3110491253 in pthread_create (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x36253)
    #1 0x55a18f in MySQL_Threads_Handler::create_thread(unsigned int, void* (*)(void*), bool) /opt/proxysql/lib/MySQL_Thread.cpp:2143
    #2 0x4df549 in ProxySQL_Main_init_MySQL_Threads_Handler_module() /opt/proxysql/src/main.cpp:444
    #3 0x4e0491 in ProxySQL_Main_init_phase3___start_all() /opt/proxysql/src/main.cpp:702
    #4 0x4e1e09 in main /opt/proxysql/src/main.cpp:1030
    #5 0x7f310ed4282f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)

SUMMARY: AddressSanitizer: heap-use-after-free ../include/gen_utils.h:61 PtrArray::index(unsigned int)
Shadow bytes around the buggy address:
  0x0c187fffcfc0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c187fffcfd0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c187fffcfe0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c187fffcff0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c187fffd000: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
=>0x0c187fffd010: fa fa fa fa fa fa fa fa[fd]fd fd fd fd fd fd fd
  0x0c187fffd020: fd fd fd fd fd fd fd fd fa fa fa fa fa fa fa fa
  0x0c187fffd030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c187fffd040: fa fa fa fa fa fa fa fa fd fd fd fd fd fd fd fd
  0x0c187fffd050: fd fd fd fd fd fd fd fa fa fa fa fa fa fa fa fa
  0x0c187fffd060: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Heap right redzone:      fb
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack partial redzone:   f4
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
==29472==ABORTING",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2052,2019-05-13T09:36:41Z,,2019-11-21T04:21:35Z,OPEN,False,170,142,10,https://github.com/Dieken,cherry pick some important fixes from v2.0.4 to avoid crashes,21,[],https://github.com/sysown/proxysql/pull/2052,https://github.com/Dieken,11,https://github.com/sysown/proxysql/pull/2052#issuecomment-497285180,"Most are about ProxySQL crashes,  this supersedes PR #2017 which also fixed a crash.
You may not have enough energy to maintain v1.4.x, but at least keep it crash as less as possible :-(","=================================================================
==29495==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020006ca5d1 at pc 0x0000005c2de7 bp 0x7f9bf77fa620 sp 0x7f9bf77fa610
READ of size 1 at 0x6020006ca5d1 thread T5
    #0 0x5c2de6 in proxy_my_crypt(char*, unsigned char const*, unsigned char const*, unsigned int) /opt/proxysql/lib/MySQL_Protocol.cpp:127
    #1 0x5c34d7 in proxy_scramble_sha1(char*, char const*, char const*, char*) /opt/proxysql/lib/MySQL_Protocol.cpp:175
    #2 0x5cfb80 in MySQL_Protocol::process_pkt_handshake_response(unsigned char*, unsigned int) /opt/proxysql/lib/MySQL_Protocol.cpp:1449
    #3 0x5a1806 in MySQL_Session::handler___status_CONNECTING_CLIENT___STATE_SERVER_HANDSHAKE(_PtrSize_t*, bool*) /opt/proxysql/lib/MySQL_Session.cpp:3316
    #4 0x59398d in MySQL_Session::handler() /opt/proxysql/lib/MySQL_Session.cpp:2036
    #5 0x567d7b in MySQL_Thread::process_all_sessions() /opt/proxysql/lib/MySQL_Thread.cpp:3283
    #6 0x5655be in MySQL_Thread::run() /opt/proxysql/lib/MySQL_Thread.cpp:3070
    #7 0x4ddf02 in mysql_worker_thread_func(void*) /opt/proxysql/src/main.cpp:243
    #8 0x7f9bfc4b26b9 in start_thread (/lib/x86_64-linux-gnu/libpthread.so.0+0x76b9)
    #9 0x7f9bfb09641c in clone (/lib/x86_64-linux-gnu/libc.so.6+0x10741c)

0x6020006ca5d1 is located 0 bytes to the right of 1-byte region [0x6020006ca5d0,0x6020006ca5d1)
allocated by thread T5 here:
    #0 0x7f9bfc760602 in malloc (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x98602)
    #1 0x5cecae in MySQL_Protocol::process_pkt_handshake_response(unsigned char*, unsigned int) /opt/proxysql/lib/MySQL_Protocol.cpp:1377
    #2 0x5a1806 in MySQL_Session::handler___status_CONNECTING_CLIENT___STATE_SERVER_HANDSHAKE(_PtrSize_t*, bool*) /opt/proxysql/lib/MySQL_Session.cpp:3316
    #3 0x59398d in MySQL_Session::handler() /opt/proxysql/lib/MySQL_Session.cpp:2036
    #4 0x567d7b in MySQL_Thread::process_all_sessions() /opt/proxysql/lib/MySQL_Thread.cpp:3283
    #5 0x5655be in MySQL_Thread::run() /opt/proxysql/lib/MySQL_Thread.cpp:3070
    #6 0x4ddf02 in mysql_worker_thread_func(void*) /opt/proxysql/src/main.cpp:243
    #7 0x7f9bfc4b26b9 in start_thread (/lib/x86_64-linux-gnu/libpthread.so.0+0x76b9)

Thread T5 created by T0 here:
    #0 0x7f9bfc6fe253 in pthread_create (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x36253)
    #1 0x55a18f in MySQL_Threads_Handler::create_thread(unsigned int, void* (*)(void*), bool) /opt/proxysql/lib/MySQL_Thread.cpp:2143
    #2 0x4df549 in ProxySQL_Main_init_MySQL_Threads_Handler_module() /opt/proxysql/src/main.cpp:444
    #3 0x4e0491 in ProxySQL_Main_init_phase3___start_all() /opt/proxysql/src/main.cpp:702
    #4 0x4e1e09 in main /opt/proxysql/src/main.cpp:1030
    #5 0x7f9bfafaf82f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)

SUMMARY: AddressSanitizer: heap-buffer-overflow /opt/proxysql/lib/MySQL_Protocol.cpp:127 proxy_my_crypt(char*, unsigned char const*, unsigned char const*, unsigned int)
Shadow bytes around the buggy address:
  0x0c04800d1460: fa fa 00 05 fa fa fa fa fa fa fd fd fa fa fd fd
  0x0c04800d1470: fa fa 00 07 fa fa fa fa fa fa fd fa fa fa fa fa
  0x0c04800d1480: fa fa fa fa fa fa 00 05 fa fa fd fd fa fa fa fa
  0x0c04800d1490: fa fa fd fd fa fa fd fd fa fa fd fa fa fa fa fa
  0x0c04800d14a0: fa fa 00 05 fa fa fd fa fa fa 00 00 fa fa fd fd
=>0x0c04800d14b0: fa fa 00 05 fa fa fa fa fa fa[01]fa fa fa fd fa
  0x0c04800d14c0: fa fa fd fa fa fa fd fa fa fa fa fa fa fa fd fa
  0x0c04800d14d0: fa fa fa fa fa fa fa fa fa fa 00 05 fa fa fa fa
  0x0c04800d14e0: fa fa fd fa fa fa fd fa fa fa 00 07 fa fa fd fa
  0x0c04800d14f0: fa fa 00 05 fa fa fa fa fa fa fd fa fa fa fd fd
  0x0c04800d1500: fa fa fd fd fa fa fa fa fa fa fd fd fa fa 00 05
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Heap right redzone:      fb
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack partial redzone:   f4
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
==29495==ABORTING",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2052,2019-05-13T09:36:41Z,,2019-11-21T04:21:35Z,OPEN,False,170,142,10,https://github.com/Dieken,cherry pick some important fixes from v2.0.4 to avoid crashes,21,[],https://github.com/sysown/proxysql/pull/2052,https://github.com/alpes214,12,https://github.com/sysown/proxysql/pull/2052#issuecomment-556394686,"Most are about ProxySQL crashes,  this supersedes PR #2017 which also fixed a crash.
You may not have enough energy to maintain v1.4.x, but at least keep it crash as less as possible :-(",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2052,2019-05-13T09:36:41Z,,2019-11-21T04:21:35Z,OPEN,False,170,142,10,https://github.com/Dieken,cherry pick some important fixes from v2.0.4 to avoid crashes,21,[],https://github.com/sysown/proxysql/pull/2052,https://github.com/alpes214,13,https://github.com/sysown/proxysql/pull/2052#issuecomment-556913550,"Most are about ProxySQL crashes,  this supersedes PR #2017 which also fixed a crash.
You may not have enough energy to maintain v1.4.x, but at least keep it crash as less as possible :-(",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2053,2019-05-13T09:38:53Z,2019-05-16T21:20:51Z,2019-05-16T21:20:51Z,MERGED,True,1,1,1,https://github.com/yakirgb,Fix schemaname output in eventslog_reader_sample,1,[],https://github.com/sysown/proxysql/pull/2053,https://github.com/yakirgb,1,https://github.com/sysown/proxysql/pull/2053,"Right now ""schemaname"" without one apostrophes, before:
ProxySQL LOG QUERY: thread_id=""378394"" username=""cs_rw"" schemaname=trc"" client=""10.101.10.101:48485"" HID=10 server=""bdb:3306"" starttime=""2019-05-13 09:09:25.274582"" endtime=""2019-05-13 09:09:25.275245"" duration=663us digest=""0x3C82E0201EA10A7B""
After fix:
ProxySQL LOG QUERY: thread_id=""378394"" username=""cs_rw"" schemaname=""trc"" client=""10.101.10.101:48485"" HID=10 server=""bdb:3306"" starttime=""2019-05-13 09:09:25.274582"" endtime=""2019-05-13 09:09:25.275245"" duration=663us digest=""0x3C82E0201EA10A7B""","Right now ""schemaname"" without one apostrophes, before:
ProxySQL LOG QUERY: thread_id=""378394"" username=""cs_rw"" schemaname=trc"" client=""10.101.10.101:48485"" HID=10 server=""bdb:3306"" starttime=""2019-05-13 09:09:25.274582"" endtime=""2019-05-13 09:09:25.275245"" duration=663us digest=""0x3C82E0201EA10A7B""
After fix:
ProxySQL LOG QUERY: thread_id=""378394"" username=""cs_rw"" schemaname=""trc"" client=""10.101.10.101:48485"" HID=10 server=""bdb:3306"" starttime=""2019-05-13 09:09:25.274582"" endtime=""2019-05-13 09:09:25.275245"" duration=663us digest=""0x3C82E0201EA10A7B""",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2053,2019-05-13T09:38:53Z,2019-05-16T21:20:51Z,2019-05-16T21:20:51Z,MERGED,True,1,1,1,https://github.com/yakirgb,Fix schemaname output in eventslog_reader_sample,1,[],https://github.com/sysown/proxysql/pull/2053,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2053#issuecomment-491752511,"Right now ""schemaname"" without one apostrophes, before:
ProxySQL LOG QUERY: thread_id=""378394"" username=""cs_rw"" schemaname=trc"" client=""10.101.10.101:48485"" HID=10 server=""bdb:3306"" starttime=""2019-05-13 09:09:25.274582"" endtime=""2019-05-13 09:09:25.275245"" duration=663us digest=""0x3C82E0201EA10A7B""
After fix:
ProxySQL LOG QUERY: thread_id=""378394"" username=""cs_rw"" schemaname=""trc"" client=""10.101.10.101:48485"" HID=10 server=""bdb:3306"" starttime=""2019-05-13 09:09:25.274582"" endtime=""2019-05-13 09:09:25.275245"" duration=663us digest=""0x3C82E0201EA10A7B""",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2053,2019-05-13T09:38:53Z,2019-05-16T21:20:51Z,2019-05-16T21:20:51Z,MERGED,True,1,1,1,https://github.com/yakirgb,Fix schemaname output in eventslog_reader_sample,1,[],https://github.com/sysown/proxysql/pull/2053,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/2053#issuecomment-491794841,"Right now ""schemaname"" without one apostrophes, before:
ProxySQL LOG QUERY: thread_id=""378394"" username=""cs_rw"" schemaname=trc"" client=""10.101.10.101:48485"" HID=10 server=""bdb:3306"" starttime=""2019-05-13 09:09:25.274582"" endtime=""2019-05-13 09:09:25.275245"" duration=663us digest=""0x3C82E0201EA10A7B""
After fix:
ProxySQL LOG QUERY: thread_id=""378394"" username=""cs_rw"" schemaname=""trc"" client=""10.101.10.101:48485"" HID=10 server=""bdb:3306"" starttime=""2019-05-13 09:09:25.274582"" endtime=""2019-05-13 09:09:25.275245"" duration=663us digest=""0x3C82E0201EA10A7B""",Thanks I will instruct our build server to test this,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2053,2019-05-13T09:38:53Z,2019-05-16T21:20:51Z,2019-05-16T21:20:51Z,MERGED,True,1,1,1,https://github.com/yakirgb,Fix schemaname output in eventslog_reader_sample,1,[],https://github.com/sysown/proxysql/pull/2053,https://github.com/pondix,4,https://github.com/sysown/proxysql/pull/2053#issuecomment-491794874,"Right now ""schemaname"" without one apostrophes, before:
ProxySQL LOG QUERY: thread_id=""378394"" username=""cs_rw"" schemaname=trc"" client=""10.101.10.101:48485"" HID=10 server=""bdb:3306"" starttime=""2019-05-13 09:09:25.274582"" endtime=""2019-05-13 09:09:25.275245"" duration=663us digest=""0x3C82E0201EA10A7B""
After fix:
ProxySQL LOG QUERY: thread_id=""378394"" username=""cs_rw"" schemaname=""trc"" client=""10.101.10.101:48485"" HID=10 server=""bdb:3306"" starttime=""2019-05-13 09:09:25.274582"" endtime=""2019-05-13 09:09:25.275245"" duration=663us digest=""0x3C82E0201EA10A7B""",test this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2053,2019-05-13T09:38:53Z,2019-05-16T21:20:51Z,2019-05-16T21:20:51Z,MERGED,True,1,1,1,https://github.com/yakirgb,Fix schemaname output in eventslog_reader_sample,1,[],https://github.com/sysown/proxysql/pull/2053,https://github.com/pondix,5,https://github.com/sysown/proxysql/pull/2053#issuecomment-493231319,"Right now ""schemaname"" without one apostrophes, before:
ProxySQL LOG QUERY: thread_id=""378394"" username=""cs_rw"" schemaname=trc"" client=""10.101.10.101:48485"" HID=10 server=""bdb:3306"" starttime=""2019-05-13 09:09:25.274582"" endtime=""2019-05-13 09:09:25.275245"" duration=663us digest=""0x3C82E0201EA10A7B""
After fix:
ProxySQL LOG QUERY: thread_id=""378394"" username=""cs_rw"" schemaname=""trc"" client=""10.101.10.101:48485"" HID=10 server=""bdb:3306"" starttime=""2019-05-13 09:09:25.274582"" endtime=""2019-05-13 09:09:25.275245"" duration=663us digest=""0x3C82E0201EA10A7B""",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2060,2019-05-15T11:40:00Z,2019-05-18T09:02:05Z,2019-10-29T00:00:51Z,MERGED,True,17,7,4,https://github.com/renecannao,Fix bug with stored procedures,2,[],https://github.com/sysown/proxysql/pull/2060,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2060,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2060,2019-05-15T11:40:00Z,2019-05-18T09:02:05Z,2019-10-29T00:00:51Z,MERGED,True,17,7,4,https://github.com/renecannao,Fix bug with stored procedures,2,[],https://github.com/sysown/proxysql/pull/2060,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2060#issuecomment-493019046,,test this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2060,2019-05-15T11:40:00Z,2019-05-18T09:02:05Z,2019-10-29T00:00:51Z,MERGED,True,17,7,4,https://github.com/renecannao,Fix bug with stored procedures,2,[],https://github.com/sysown/proxysql/pull/2060,https://github.com/arthurmartins,3,https://github.com/sysown/proxysql/pull/2060#issuecomment-495843894,,"Hey @renecannao,
There's a simple problem with the v2.0.5: the release https://github.com/sysown/proxysql/releases/tag/2.0.5 is pointing to commit db03ba2, althought the latest commit is 786bac6.
We were having this same issue on v2.0.4, I've tried to update to v2.0.5 based on release and the problem was still there. After update to the latest commit on v2.0.5, the problem with procedures was fixed.
I think you could just update the tag and re-generate the release.
Thanks for the fix and for the great tool!",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2063,2019-05-16T21:27:11Z,2019-05-18T09:02:55Z,2019-10-29T00:00:53Z,MERGED,True,1,1,1,https://github.com/pondix,Allows init.d restart to start process if stopped,1,[],https://github.com/sysown/proxysql/pull/2063,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/2063,As per #1979 PR against 2.0.4 from @benjamin-lim,As per #1979 PR against 2.0.4 from @benjamin-lim,True,{'THUMBS_UP': ['https://github.com/benjamin-lim']}
sysown/proxysql,https://github.com/sysown/proxysql,2066,2019-05-18T10:05:35Z,2019-05-20T02:53:20Z,2019-10-29T00:00:55Z,MERGED,True,14,3,1,https://github.com/renecannao, Do not try to gracefully close a not fully established connection ,2,[],https://github.com/sysown/proxysql/pull/2066,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2066,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2067,2019-05-20T02:46:26Z,2019-05-20T11:57:15Z,2019-10-29T00:00:43Z,MERGED,True,720,125,8,https://github.com/renecannao,Implementation of audit log,3,[],https://github.com/sysown/proxysql/pull/2067,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2067,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2068,2019-05-20T02:47:36Z,2019-05-20T11:58:44Z,2019-10-29T00:00:49Z,MERGED,True,1,1,1,https://github.com/renecannao,Fix stall in changing autocommit on slow backend,1,[],https://github.com/sysown/proxysql/pull/2068,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2068,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2068,2019-05-20T02:47:36Z,2019-05-20T11:58:44Z,2019-10-29T00:00:49Z,MERGED,True,1,1,1,https://github.com/renecannao,Fix stall in changing autocommit on slow backend,1,[],https://github.com/sysown/proxysql/pull/2068,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2068#issuecomment-493916459,,test this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2069,2019-05-20T05:44:32Z,2019-05-20T11:58:58Z,2019-10-29T00:00:41Z,MERGED,True,47,7,1,https://github.com/renecannao,Improvement in query digest to remove unnecessary plus and minus signs,2,[],https://github.com/sysown/proxysql/pull/2069,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2069,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2069,2019-05-20T05:44:32Z,2019-05-20T11:58:58Z,2019-10-29T00:00:41Z,MERGED,True,47,7,1,https://github.com/renecannao,Improvement in query digest to remove unnecessary plus and minus signs,2,[],https://github.com/sysown/proxysql/pull/2069,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2069#issuecomment-493916535,,test this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2070,2019-05-20T06:42:54Z,2019-05-20T11:58:29Z,2019-10-28T23:58:52Z,MERGED,True,24,1,2,https://github.com/renecannao,Adding more internal info in JSON format #2055,2,[],https://github.com/sysown/proxysql/pull/2070,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2070,"In stats_mysql_free_connections, exported:

address of connection
address of mysql struct
mysql thread_id

In stats_mysql_processlist, exported:

address of session
address of data stream
address of connection
address of mysql struct
mysql thread_id
removed password from non-debug built","In stats_mysql_free_connections, exported:

address of connection
address of mysql struct
mysql thread_id

In stats_mysql_processlist, exported:

address of session
address of data stream
address of connection
address of mysql struct
mysql thread_id
removed password from non-debug built",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2070,2019-05-20T06:42:54Z,2019-05-20T11:58:29Z,2019-10-28T23:58:52Z,MERGED,True,24,1,2,https://github.com/renecannao,Adding more internal info in JSON format #2055,2,[],https://github.com/sysown/proxysql/pull/2070,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2070#issuecomment-493916602,"In stats_mysql_free_connections, exported:

address of connection
address of mysql struct
mysql thread_id

In stats_mysql_processlist, exported:

address of session
address of data stream
address of connection
address of mysql struct
mysql thread_id
removed password from non-debug built",test this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2077,2019-05-30T11:05:36Z,,2019-06-25T00:39:01Z,OPEN,False,46,34,4,https://github.com/Dieken,fix some crash issues,8,[],https://github.com/sysown/proxysql/pull/2077,https://github.com/Dieken,1,https://github.com/sysown/proxysql/pull/2077,"These are picked from new fixes at #2052,  those cherry-picked from v2.0.4 are dropped, and another two commits are dropped too:


37f76c7  Makefile in v2.0.x changed a lot,  don't bother to apply, anyway it's mainly about debug mode.


5ac082d   too many conflicts :-(


Commit 447f17f in v2.0.x is reverted becaust that's not root cause, the issue was fixed at commit 80252e5.","These are picked from new fixes at #2052,  those cherry-picked from v2.0.4 are dropped, and another two commits are dropped too:


37f76c7  Makefile in v2.0.x changed a lot,  don't bother to apply, anyway it's mainly about debug mode.


5ac082d   too many conflicts :-(


Commit 447f17f in v2.0.x is reverted becaust that's not root cause, the issue was fixed at commit 80252e5.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2077,2019-05-30T11:05:36Z,,2019-06-25T00:39:01Z,OPEN,False,46,34,4,https://github.com/Dieken,fix some crash issues,8,[],https://github.com/sysown/proxysql/pull/2077,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2077#issuecomment-497293746,"These are picked from new fixes at #2052,  those cherry-picked from v2.0.4 are dropped, and another two commits are dropped too:


37f76c7  Makefile in v2.0.x changed a lot,  don't bother to apply, anyway it's mainly about debug mode.


5ac082d   too many conflicts :-(


Commit 447f17f in v2.0.x is reverted becaust that's not root cause, the issue was fixed at commit 80252e5.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2077,2019-05-30T11:05:36Z,,2019-06-25T00:39:01Z,OPEN,False,46,34,4,https://github.com/Dieken,fix some crash issues,8,[],https://github.com/sysown/proxysql/pull/2077,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2077#issuecomment-505231517,"These are picked from new fixes at #2052,  those cherry-picked from v2.0.4 are dropped, and another two commits are dropped too:


37f76c7  Makefile in v2.0.x changed a lot,  don't bother to apply, anyway it's mainly about debug mode.


5ac082d   too many conflicts :-(


Commit 447f17f in v2.0.x is reverted becaust that's not root cause, the issue was fixed at commit 80252e5.","These commits were reviewed and cherry-picked:

858dd22
de20f93
eb80754
fd81ea6
41cf11c
7ba2015

Commits not reviewed yet:

f6d6606
508259c

Thank you @Dieken !!",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2077,2019-05-30T11:05:36Z,,2019-06-25T00:39:01Z,OPEN,False,46,34,4,https://github.com/Dieken,fix some crash issues,8,[],https://github.com/sysown/proxysql/pull/2077,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/2077#issuecomment-505231986,"These are picked from new fixes at #2052,  those cherry-picked from v2.0.4 are dropped, and another two commits are dropped too:


37f76c7  Makefile in v2.0.x changed a lot,  don't bother to apply, anyway it's mainly about debug mode.


5ac082d   too many conflicts :-(


Commit 447f17f in v2.0.x is reverted becaust that's not root cause, the issue was fixed at commit 80252e5.","Cherry-picked also f6d6606 .
Only commit missing: 508259c",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2078,2019-05-30T15:08:58Z,2019-05-31T19:05:25Z,2019-10-29T00:07:36Z,MERGED,True,79,12,2,https://github.com/renecannao,Parse set autocommit if used with other variables #1886,1,[],https://github.com/sysown/proxysql/pull/2078,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2078,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2111,2019-06-27T12:08:58Z,2019-10-29T00:00:26Z,2019-10-29T00:00:31Z,CLOSED,False,63,47,5,https://github.com/renecannao,V2.0.3 tuenti PR2028,10,[],https://github.com/sysown/proxysql/pull/2111,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2111,"This is the same PR from #2028 , after reverting back to wait_to_mysql() instead of usleep() and some minor changes","This is the same PR from #2028 , after reverting back to wait_to_mysql() instead of usleep() and some minor changes",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2111,2019-06-27T12:08:58Z,2019-10-29T00:00:26Z,2019-10-29T00:00:31Z,CLOSED,False,63,47,5,https://github.com/renecannao,V2.0.3 tuenti PR2028,10,[],https://github.com/sysown/proxysql/pull/2111,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2111#issuecomment-506319236,"This is the same PR from #2028 , after reverting back to wait_to_mysql() instead of usleep() and some minor changes",@acampoh : FYI,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2111,2019-06-27T12:08:58Z,2019-10-29T00:00:26Z,2019-10-29T00:00:31Z,CLOSED,False,63,47,5,https://github.com/renecannao,V2.0.3 tuenti PR2028,10,[],https://github.com/sysown/proxysql/pull/2111,https://github.com/acampoh,3,https://github.com/sysown/proxysql/pull/2111#issuecomment-506367997,"This is the same PR from #2028 , after reverting back to wait_to_mysql() instead of usleep() and some minor changes","Not sure about the change of wait_for_mysql.
This change is related to unexpected timeouts we were having that derivated in node shunning. After a lot of debugging we saw that the cause of those timeouts came from this function.
The main problem was that if wait_for_mysql set the status as timed_out, the loop will never check again with mysql_query_cont or mysql_ping_cont which from my perspective looks to be in charge of managing this variable. If this happened, the code will be looping until the timer mysql_thread___monitor_read_only_timeout or the ping one expired without checking if there is an answer from mysql (which i saw that sometimes having wait_for_mysql reporting timeout i got a proper answer from mysql).
After seeing this the idea of my change was to add a sleep of the size of mysql_get_timeout_value_ms() which is the timeout you are doing in the poll and report a timeout only when our timer expired or mysql_query/ping_cont reports as timeout.
I think this shouldn't be against using the async api, as can be as responsive as the other aproach using the proper sleep times.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2111,2019-06-27T12:08:58Z,2019-10-29T00:00:26Z,2019-10-29T00:00:31Z,CLOSED,False,63,47,5,https://github.com/renecannao,V2.0.3 tuenti PR2028,10,[],https://github.com/sysown/proxysql/pull/2111,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/2111#issuecomment-506375399,"This is the same PR from #2028 , after reverting back to wait_to_mysql() instead of usleep() and some minor changes","Thank you for the comment on wait_for_mysql()!
I will review this further, but I believe the issue you are describing is fixed in 2.0.4 . See #1978 and #1994 for reference.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2111,2019-06-27T12:08:58Z,2019-10-29T00:00:26Z,2019-10-29T00:00:31Z,CLOSED,False,63,47,5,https://github.com/renecannao,V2.0.3 tuenti PR2028,10,[],https://github.com/sysown/proxysql/pull/2111,https://github.com/acampoh,5,https://github.com/sysown/proxysql/pull/2111#issuecomment-506379554,"This is the same PR from #2028 , after reverting back to wait_to_mysql() instead of usleep() and some minor changes","Uhmm i think is something different in this case. In that case (i think i also reported it) there was an issue receiving partial state of the nodes which made proxysql behave bad in several cases.
In this case the only thing is that a timeout is reported when there isn't a ""real"" timeout (i mean real timeout taking into account the values set up in proxysql config) as it's checking against mysql_get_timeout_value_ms() and never checking the query / ping answer between that first timeout and the one you have setup in proxysql's config",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2111,2019-06-27T12:08:58Z,2019-10-29T00:00:26Z,2019-10-29T00:00:31Z,CLOSED,False,63,47,5,https://github.com/renecannao,V2.0.3 tuenti PR2028,10,[],https://github.com/sysown/proxysql/pull/2111,https://github.com/renecannao,6,https://github.com/sysown/proxysql/pull/2111#issuecomment-547197342,"This is the same PR from #2028 , after reverting back to wait_to_mysql() instead of usleep() and some minor changes",Closing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2143,2019-07-17T07:41:56Z,2019-07-17T10:46:01Z,2019-07-17T10:46:04Z,MERGED,True,8,2,1,https://github.com/Mount565,Fix a possible memory leak,2,[],https://github.com/sysown/proxysql/pull/2143,https://github.com/Mount565,1,https://github.com/sysown/proxysql/pull/2143,Variables client and server are not freed,Variables client and server are not freed,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2143,2019-07-17T07:41:56Z,2019-07-17T10:46:01Z,2019-07-17T10:46:04Z,MERGED,True,8,2,1,https://github.com/Mount565,Fix a possible memory leak,2,[],https://github.com/sysown/proxysql/pull/2143,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2143#issuecomment-512155213,Variables client and server are not freed,Thank you for the PR. Please see my comment,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2143,2019-07-17T07:41:56Z,2019-07-17T10:46:01Z,2019-07-17T10:46:04Z,MERGED,True,8,2,1,https://github.com/Mount565,Fix a possible memory leak,2,[],https://github.com/sysown/proxysql/pull/2143,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2143#issuecomment-512202755,Variables client and server are not freed,Thank you!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2148,2019-07-21T16:36:15Z,2019-07-26T04:52:09Z,2019-10-28T23:59:06Z,MERGED,True,3,0,1,https://github.com/renecannao,Disable throttling for any client other than SESSION_MYSQL #2147,1,[],https://github.com/sysown/proxysql/pull/2148,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2148,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2148,2019-07-21T16:36:15Z,2019-07-26T04:52:09Z,2019-10-28T23:59:06Z,MERGED,True,3,0,1,https://github.com/renecannao,Disable throttling for any client other than SESSION_MYSQL #2147,1,[],https://github.com/sysown/proxysql/pull/2148,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2148#issuecomment-514599700,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2148,2019-07-21T16:36:15Z,2019-07-26T04:52:09Z,2019-10-28T23:59:06Z,MERGED,True,3,0,1,https://github.com/renecannao,Disable throttling for any client other than SESSION_MYSQL #2147,1,[],https://github.com/sysown/proxysql/pull/2148,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2148#issuecomment-515300632,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2149,2019-07-21T16:37:32Z,2019-07-26T11:16:39Z,2019-10-28T23:59:04Z,MERGED,True,226,63,10,https://github.com/renecannao,V2.0.6 capability tracking,9,[],https://github.com/sysown/proxysql/pull/2149,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2149,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2149,2019-07-21T16:37:32Z,2019-07-26T11:16:39Z,2019-10-28T23:59:04Z,MERGED,True,226,63,10,https://github.com/renecannao,V2.0.6 capability tracking,9,[],https://github.com/sysown/proxysql/pull/2149,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2149#issuecomment-514599632,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2149,2019-07-21T16:37:32Z,2019-07-26T11:16:39Z,2019-10-28T23:59:04Z,MERGED,True,226,63,10,https://github.com/renecannao,V2.0.6 capability tracking,9,[],https://github.com/sysown/proxysql/pull/2149,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2149#issuecomment-515300663,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2149,2019-07-21T16:37:32Z,2019-07-26T11:16:39Z,2019-10-28T23:59:04Z,MERGED,True,226,63,10,https://github.com/renecannao,V2.0.6 capability tracking,9,[],https://github.com/sysown/proxysql/pull/2149,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/2149#issuecomment-515309734,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2149,2019-07-21T16:37:32Z,2019-07-26T11:16:39Z,2019-10-28T23:59:04Z,MERGED,True,226,63,10,https://github.com/renecannao,V2.0.6 capability tracking,9,[],https://github.com/sysown/proxysql/pull/2149,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/2149#issuecomment-515324401,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2149,2019-07-21T16:37:32Z,2019-07-26T11:16:39Z,2019-10-28T23:59:04Z,MERGED,True,226,63,10,https://github.com/renecannao,V2.0.6 capability tracking,9,[],https://github.com/sysown/proxysql/pull/2149,https://github.com/renecannao,6,https://github.com/sysown/proxysql/pull/2149#issuecomment-515332636,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2149,2019-07-21T16:37:32Z,2019-07-26T11:16:39Z,2019-10-28T23:59:04Z,MERGED,True,226,63,10,https://github.com/renecannao,V2.0.6 capability tracking,9,[],https://github.com/sysown/proxysql/pull/2149,https://github.com/renecannao,7,https://github.com/sysown/proxysql/pull/2149#issuecomment-515410252,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2156,2019-07-24T12:18:08Z,2019-07-26T16:12:25Z,2022-05-10T02:17:55Z,MERGED,True,493,67,12,https://github.com/renecannao,V2.0.6 hg locked,7,[],https://github.com/sysown/proxysql/pull/2156,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2156,"This should fix a lot of issues related to failed parsing of SET statement.
Introduced several status variables, and a new configuration variable:
mysql-set_query_lock_on_hostgroup
Possible values for mysql-set_query_lock_on_hostgroup:

0 : legacy behavior , before 2.0.6
1 : (default) . SET statements that cannot be parsed correctly disable
both multiplexing AND routing. Attempting to route traffic while a
connection is linked to a specific backend connection will trigger
an error to be returned to the client","This should fix a lot of issues related to failed parsing of SET statement.
Introduced several status variables, and a new configuration variable:
mysql-set_query_lock_on_hostgroup
Possible values for mysql-set_query_lock_on_hostgroup:

0 : legacy behavior , before 2.0.6
1 : (default) . SET statements that cannot be parsed correctly disable
both multiplexing AND routing. Attempting to route traffic while a
connection is linked to a specific backend connection will trigger
an error to be returned to the client",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2156,2019-07-24T12:18:08Z,2019-07-26T16:12:25Z,2022-05-10T02:17:55Z,MERGED,True,493,67,12,https://github.com/renecannao,V2.0.6 hg locked,7,[],https://github.com/sysown/proxysql/pull/2156,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2156#issuecomment-515264102,"This should fix a lot of issues related to failed parsing of SET statement.
Introduced several status variables, and a new configuration variable:
mysql-set_query_lock_on_hostgroup
Possible values for mysql-set_query_lock_on_hostgroup:

0 : legacy behavior , before 2.0.6
1 : (default) . SET statements that cannot be parsed correctly disable
both multiplexing AND routing. Attempting to route traffic while a
connection is linked to a specific backend connection will trigger
an error to be returned to the client",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2156,2019-07-24T12:18:08Z,2019-07-26T16:12:25Z,2022-05-10T02:17:55Z,MERGED,True,493,67,12,https://github.com/renecannao,V2.0.6 hg locked,7,[],https://github.com/sysown/proxysql/pull/2156,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2156#issuecomment-515300563,"This should fix a lot of issues related to failed parsing of SET statement.
Introduced several status variables, and a new configuration variable:
mysql-set_query_lock_on_hostgroup
Possible values for mysql-set_query_lock_on_hostgroup:

0 : legacy behavior , before 2.0.6
1 : (default) . SET statements that cannot be parsed correctly disable
both multiplexing AND routing. Attempting to route traffic while a
connection is linked to a specific backend connection will trigger
an error to be returned to the client",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2156,2019-07-24T12:18:08Z,2019-07-26T16:12:25Z,2022-05-10T02:17:55Z,MERGED,True,493,67,12,https://github.com/renecannao,V2.0.6 hg locked,7,[],https://github.com/sysown/proxysql/pull/2156,https://github.com/Gannalyo,4,https://github.com/sysown/proxysql/pull/2156#issuecomment-1121798152,"This should fix a lot of issues related to failed parsing of SET statement.
Introduced several status variables, and a new configuration variable:
mysql-set_query_lock_on_hostgroup
Possible values for mysql-set_query_lock_on_hostgroup:

0 : legacy behavior , before 2.0.6
1 : (default) . SET statements that cannot be parsed correctly disable
both multiplexing AND routing. Attempting to route traffic while a
connection is linked to a specific backend connection will trigger
an error to be returned to the client","This should fix a lot of issues related to failed parsing of SET statement.
Introduced several status variables, and a new configuration variable: mysql-set_query_lock_on_hostgroup
Possible values for mysql-set_query_lock_on_hostgroup:

0 : legacy behavior , before 2.0.6
1 : (default) . SET statements that cannot be parsed correctly disable
both multiplexing AND routing. Attempting to route traffic while a
connection is linked to a specific backend connection will trigger
an error to be returned to the client


It still doesn't work whether I set 0 or 1",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2161,2019-07-26T16:38:21Z,2019-07-28T05:02:00Z,2019-07-28T05:02:00Z,MERGED,True,2,2,1,https://github.com/markgergely,Fix query digest prepared statement,1,[],https://github.com/sysown/proxysql/pull/2161,https://github.com/markgergely,1,https://github.com/sysown/proxysql/pull/2161,There was a typo in the prepared query statement which caused proxysql branch v2.0.6 to crash if there were more than 32 query digests recorded.,There was a typo in the prepared query statement which caused proxysql branch v2.0.6 to crash if there were more than 32 query digests recorded.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2161,2019-07-26T16:38:21Z,2019-07-28T05:02:00Z,2019-07-28T05:02:00Z,MERGED,True,2,2,1,https://github.com/markgergely,Fix query digest prepared statement,1,[],https://github.com/sysown/proxysql/pull/2161,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2161#issuecomment-515521800,There was a typo in the prepared query statement which caused proxysql branch v2.0.6 to crash if there were more than 32 query digests recorded.,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2161,2019-07-26T16:38:21Z,2019-07-28T05:02:00Z,2019-07-28T05:02:00Z,MERGED,True,2,2,1,https://github.com/markgergely,Fix query digest prepared statement,1,[],https://github.com/sysown/proxysql/pull/2161,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2161#issuecomment-515732148,There was a typo in the prepared query statement which caused proxysql branch v2.0.6 to crash if there were more than 32 query digests recorded.,"Hi @markgergely . Thank you for the pull request.
I think your PR came shortly after the bug was already fixed in a37f771 . Do you agree?
If yes, I will proceed closing this PR.
Thanks",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2161,2019-07-26T16:38:21Z,2019-07-28T05:02:00Z,2019-07-28T05:02:00Z,MERGED,True,2,2,1,https://github.com/markgergely,Fix query digest prepared statement,1,[],https://github.com/sysown/proxysql/pull/2161,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/2161#issuecomment-515732238,There was a typo in the prepared query statement which caused proxysql branch v2.0.6 to crash if there were more than 32 query digests recorded.,"Ignore my previous comment, I just noticed a mistake in my own commit.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2161,2019-07-26T16:38:21Z,2019-07-28T05:02:00Z,2019-07-28T05:02:00Z,MERGED,True,2,2,1,https://github.com/markgergely,Fix query digest prepared statement,1,[],https://github.com/sysown/proxysql/pull/2161,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/2161#issuecomment-515732264,There was a typo in the prepared query statement which caused proxysql branch v2.0.6 to crash if there were more than 32 query digests recorded.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2162,2019-07-28T06:13:54Z,2019-07-28T06:33:25Z,2019-10-28T23:59:00Z,MERGED,True,79,10,6,https://github.com/renecannao,Enhancements on AWS Aurora module,1,[],https://github.com/sysown/proxysql/pull/2162,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2162,"Enhancements on AWS Aurora module
Added 2 new status variables:

queries_with_max_lag_ms__delayed
queries_with_max_lag_ms__total_wait_time_us

Do not get replication lag from replicas if the value is 0
Fixed an error in the computation of max_lag_ms","Enhancements on AWS Aurora module
Added 2 new status variables:

queries_with_max_lag_ms__delayed
queries_with_max_lag_ms__total_wait_time_us

Do not get replication lag from replicas if the value is 0
Fixed an error in the computation of max_lag_ms",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2162,2019-07-28T06:13:54Z,2019-07-28T06:33:25Z,2019-10-28T23:59:00Z,MERGED,True,79,10,6,https://github.com/renecannao,Enhancements on AWS Aurora module,1,[],https://github.com/sysown/proxysql/pull/2162,https://github.com/yakirgb,2,https://github.com/sysown/proxysql/pull/2162#issuecomment-515739719,"Enhancements on AWS Aurora module
Added 2 new status variables:

queries_with_max_lag_ms__delayed
queries_with_max_lag_ms__total_wait_time_us

Do not get replication lag from replicas if the value is 0
Fixed an error in the computation of max_lag_ms",Why double underscore in variables?,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2162,2019-07-28T06:13:54Z,2019-07-28T06:33:25Z,2019-10-28T23:59:00Z,MERGED,True,79,10,6,https://github.com/renecannao,Enhancements on AWS Aurora module,1,[],https://github.com/sysown/proxysql/pull/2162,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2162#issuecomment-515740908,"Enhancements on AWS Aurora module
Added 2 new status variables:

queries_with_max_lag_ms__delayed
queries_with_max_lag_ms__total_wait_time_us

Do not get replication lag from replicas if the value is 0
Fixed an error in the computation of max_lag_ms","@yakirgb : I was in a doubt about this for a while.
I wanted to separate max_lag_ms and total_wait_time_us in a way that is visually more efficient.
I am open to recommendation.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2163,2019-07-28T12:42:29Z,2019-07-31T12:08:03Z,2019-10-28T23:59:18Z,MERGED,True,15,1,1,https://github.com/renecannao,2.0.6 aurora epoch,1,[],https://github.com/sysown/proxysql/pull/2163,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2163,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2164,2019-07-28T12:43:07Z,2019-07-31T12:08:16Z,2019-10-28T23:59:20Z,MERGED,True,13,8,3,https://github.com/renecannao,Fix bug #2096,1,[],https://github.com/sysown/proxysql/pull/2164,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2164,ProxySQL was incorrectly not sending COM_PING when multiplexing is disabled,ProxySQL was incorrectly not sending COM_PING when multiplexing is disabled,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2165,2019-07-29T10:12:46Z,,2019-11-20T21:05:58Z,OPEN,False,10,3,3,https://github.com/dbussink,Add client tracking for CLIENT_PS_MULTI_STATEMENTS,1,[],https://github.com/sysown/proxysql/pull/2165,https://github.com/dbussink,1,https://github.com/sysown/proxysql/pull/2165,This way we track this option as well for connections and send the same option to be backend and don't multiplex connections with different options.,This way we track this option as well for connections and send the same option to be backend and don't multiplex connections with different options.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2165,2019-07-29T10:12:46Z,,2019-11-20T21:05:58Z,OPEN,False,10,3,3,https://github.com/dbussink,Add client tracking for CLIENT_PS_MULTI_STATEMENTS,1,[],https://github.com/sysown/proxysql/pull/2165,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2165#issuecomment-515934020,This way we track this option as well for connections and send the same option to be backend and don't multiplex connections with different options.,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2165,2019-07-29T10:12:46Z,,2019-11-20T21:05:58Z,OPEN,False,10,3,3,https://github.com/dbussink,Add client tracking for CLIENT_PS_MULTI_STATEMENTS,1,[],https://github.com/sysown/proxysql/pull/2165,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2165#issuecomment-516820311,This way we track this option as well for connections and send the same option to be backend and don't multiplex connections with different options.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2165,2019-07-29T10:12:46Z,,2019-11-20T21:05:58Z,OPEN,False,10,3,3,https://github.com/dbussink,Add client tracking for CLIENT_PS_MULTI_STATEMENTS,1,[],https://github.com/sysown/proxysql/pull/2165,https://github.com/pondix,4,https://github.com/sysown/proxysql/pull/2165#issuecomment-516837426,This way we track this option as well for connections and send the same option to be backend and don't multiplex connections with different options.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2165,2019-07-29T10:12:46Z,,2019-11-20T21:05:58Z,OPEN,False,10,3,3,https://github.com/dbussink,Add client tracking for CLIENT_PS_MULTI_STATEMENTS,1,[],https://github.com/sysown/proxysql/pull/2165,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/2165#issuecomment-516845591,This way we track this option as well for connections and send the same option to be backend and don't multiplex connections with different options.,"@dbussink , I will summarize here what spoken already.
According to documentation , CLIENT_PS_MULTI_RESULTS cannot be set in mysql_real_connect() .
Although, this seems to contradict the code in MySQL client library, that uses the flags as they are passed to mysql_real_connect() (a documentation bug?)
Multi resultsets are automatically enabled either setting CLIENT_MULTI_RESULTS or CLIENT_PS_MULTI_RESULTS. And to make things more interesting, CLIENT_MULTI_RESULTS is automatically enabled when CLIENT_MULTI_STATEMENTS is enabled.
So I think the check should be a more more complex:

if CLIENT_MULTI_STATEMENTS is enabled on both frontend and backend, no further check is needed
if CLIENT_MULTI_STATEMENTS is not enabled (of course, on both frontend and backend), if the client has CLIENT_MULTI_RESULTS or CLIENT_PS_MULTI_RESULTS enabled, we need to verify that the backend connection has CLIENT_MULTI_RESULTS or CLIENT_PS_MULTI_RESULTS enabled. And when creating a backend connection, we would match whichever of these 2 flags the client has set.
Seems reasonable?",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2165,2019-07-29T10:12:46Z,,2019-11-20T21:05:58Z,OPEN,False,10,3,3,https://github.com/dbussink,Add client tracking for CLIENT_PS_MULTI_STATEMENTS,1,[],https://github.com/sysown/proxysql/pull/2165,https://github.com/dbussink,6,https://github.com/sysown/proxysql/pull/2165#issuecomment-518150912,This way we track this option as well for connections and send the same option to be backend and don't multiplex connections with different options.,"we need to verify that the backend connection has CLIENT_MULTI_RESULTS or CLIENT_PS_MULTI_RESULTS enabled. And when creating a backend connection, we would match whichever of these 2 flags the client has set.


Yeah, and also handle it appropriately if these flags are not set. That makes sense to me as an approach here then.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2165,2019-07-29T10:12:46Z,,2019-11-20T21:05:58Z,OPEN,False,10,3,3,https://github.com/dbussink,Add client tracking for CLIENT_PS_MULTI_STATEMENTS,1,[],https://github.com/sysown/proxysql/pull/2165,https://github.com/alpes214,7,https://github.com/sysown/proxysql/pull/2165#issuecomment-556395220,This way we track this option as well for connections and send the same option to be backend and don't multiplex connections with different options.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2170,2019-07-31T08:10:24Z,2019-07-31T12:07:07Z,2019-10-28T23:58:22Z,MERGED,True,32,2,3,https://github.com/renecannao,V2.0.6 2169,1,[],https://github.com/sysown/proxysql/pull/2170,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2170,"Disable SSLv3 #2169

switched from SSLv23_server_method() to TLS_server_method()
enforced min proto version to TLS1_VERSION using SSL_CTX_set_min_proto_version()
when inspecting session status, cipher used is exported","Disable SSLv3 #2169

switched from SSLv23_server_method() to TLS_server_method()
enforced min proto version to TLS1_VERSION using SSL_CTX_set_min_proto_version()
when inspecting session status, cipher used is exported",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2173,2019-08-02T15:39:37Z,2019-08-02T16:02:08Z,2019-10-28T23:58:24Z,MERGED,True,27,0,1,https://github.com/renecannao,Query digest uses ? for NULL values #2171,1,[],https://github.com/sysown/proxysql/pull/2173,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2173,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2174,2019-08-02T16:15:28Z,2019-08-02T22:15:20Z,2019-10-28T23:58:26Z,MERGED,True,27,0,4,https://github.com/renecannao,Adding variable mysql-query_digests_replace_null #2171,1,[],https://github.com/sysown/proxysql/pull/2174,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2174,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2181,2019-08-07T05:18:39Z,2019-08-07T11:34:39Z,2019-10-28T23:58:16Z,MERGED,True,181,107,7,https://github.com/renecannao,Create a wrapper around sqlite3_prepare_v2,1,[],https://github.com/sysown/proxysql/pull/2181,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2181,This should fix several crashes if the internal db is locked or busy,This should fix several crashes if the internal db is locked or busy,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2182,2019-08-07T05:19:24Z,2019-08-07T11:34:49Z,2019-10-28T23:58:20Z,MERGED,True,890,47,5,https://github.com/renecannao,V2.0.6 perfbench1,2,[],https://github.com/sysown/proxysql/pull/2182,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2182,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2185,2019-08-09T03:39:55Z,2019-08-11T05:22:58Z,2019-09-10T22:47:17Z,MERGED,True,3,0,3,https://github.com/YYJiangLoveU,Let ProxySQL support Azure MySQL,8,[],https://github.com/sysown/proxysql/pull/2185,https://github.com/YYJiangLoveU,1,https://github.com/sysown/proxysql/pull/2185,"The username of the monitor account in ProxySQL can only be one name, so is the proxysql account username of a set of master-slave servers. However, when connecting to Azure MySQL database, it requires the user name in the format of 'user@server' or 'server%user' which causes the monitor/proxysql account to be logged into only one Azure MySQL server. Therefore ProxySQL cannot be used in the read-write split on Azure MySQL databases.
Now Azure MySQL R&Ds are doing the work of removing the ‚Äò@' + 'server' in the username information, which will be online soon. However, a new connection attribute '_server_host' which contains the hostname information is added. This attribute has been already added in driver MariaDB Connector C and MariaDB Connector J (reference: MariaDB/mariadb-connector-j@de8883b).
So some code is added to make sure ProxySQL can be applied to the read-write split on Azure MySQL Servers in the future.","The username of the monitor account in ProxySQL can only be one name, so is the proxysql account username of a set of master-slave servers. However, when connecting to Azure MySQL database, it requires the user name in the format of 'user@server' or 'server%user' which causes the monitor/proxysql account to be logged into only one Azure MySQL server. Therefore ProxySQL cannot be used in the read-write split on Azure MySQL databases.
Now Azure MySQL R&Ds are doing the work of removing the ‚Äò@' + 'server' in the username information, which will be online soon. However, a new connection attribute '_server_host' which contains the hostname information is added. This attribute has been already added in driver MariaDB Connector C and MariaDB Connector J (reference: MariaDB/mariadb-connector-j@de8883b).
So some code is added to make sure ProxySQL can be applied to the read-write split on Azure MySQL Servers in the future.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2185,2019-08-09T03:39:55Z,2019-08-11T05:22:58Z,2019-09-10T22:47:17Z,MERGED,True,3,0,3,https://github.com/YYJiangLoveU,Let ProxySQL support Azure MySQL,8,[],https://github.com/sysown/proxysql/pull/2185,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2185#issuecomment-519765521,"The username of the monitor account in ProxySQL can only be one name, so is the proxysql account username of a set of master-slave servers. However, when connecting to Azure MySQL database, it requires the user name in the format of 'user@server' or 'server%user' which causes the monitor/proxysql account to be logged into only one Azure MySQL server. Therefore ProxySQL cannot be used in the read-write split on Azure MySQL databases.
Now Azure MySQL R&Ds are doing the work of removing the ‚Äò@' + 'server' in the username information, which will be online soon. However, a new connection attribute '_server_host' which contains the hostname information is added. This attribute has been already added in driver MariaDB Connector C and MariaDB Connector J (reference: MariaDB/mariadb-connector-j@de8883b).
So some code is added to make sure ProxySQL can be applied to the read-write split on Azure MySQL Servers in the future.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2185,2019-08-09T03:39:55Z,2019-08-11T05:22:58Z,2019-09-10T22:47:17Z,MERGED,True,3,0,3,https://github.com/YYJiangLoveU,Let ProxySQL support Azure MySQL,8,[],https://github.com/sysown/proxysql/pull/2185,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2185#issuecomment-520118758,"The username of the monitor account in ProxySQL can only be one name, so is the proxysql account username of a set of master-slave servers. However, when connecting to Azure MySQL database, it requires the user name in the format of 'user@server' or 'server%user' which causes the monitor/proxysql account to be logged into only one Azure MySQL server. Therefore ProxySQL cannot be used in the read-write split on Azure MySQL databases.
Now Azure MySQL R&Ds are doing the work of removing the ‚Äò@' + 'server' in the username information, which will be online soon. However, a new connection attribute '_server_host' which contains the hostname information is added. This attribute has been already added in driver MariaDB Connector C and MariaDB Connector J (reference: MariaDB/mariadb-connector-j@de8883b).
So some code is added to make sure ProxySQL can be applied to the read-write split on Azure MySQL Servers in the future.",ok to test,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2185,2019-08-09T03:39:55Z,2019-08-11T05:22:58Z,2019-09-10T22:47:17Z,MERGED,True,3,0,3,https://github.com/YYJiangLoveU,Let ProxySQL support Azure MySQL,8,[],https://github.com/sysown/proxysql/pull/2185,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/2185#issuecomment-520118848,"The username of the monitor account in ProxySQL can only be one name, so is the proxysql account username of a set of master-slave servers. However, when connecting to Azure MySQL database, it requires the user name in the format of 'user@server' or 'server%user' which causes the monitor/proxysql account to be logged into only one Azure MySQL server. Therefore ProxySQL cannot be used in the read-write split on Azure MySQL databases.
Now Azure MySQL R&Ds are doing the work of removing the ‚Äò@' + 'server' in the username information, which will be online soon. However, a new connection attribute '_server_host' which contains the hostname information is added. This attribute has been already added in driver MariaDB Connector C and MariaDB Connector J (reference: MariaDB/mariadb-connector-j@de8883b).
So some code is added to make sure ProxySQL can be applied to the read-write split on Azure MySQL Servers in the future.","@YYJiangLoveU : thank you for the pull request.
I started the automated testing against this PR, and will verify it.
As I never used Azure, do you have some links that describe Azure behavior?
Thanks",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2185,2019-08-09T03:39:55Z,2019-08-11T05:22:58Z,2019-09-10T22:47:17Z,MERGED,True,3,0,3,https://github.com/YYJiangLoveU,Let ProxySQL support Azure MySQL,8,[],https://github.com/sysown/proxysql/pull/2185,https://github.com/YYJiangLoveU,5,https://github.com/sysown/proxysql/pull/2185#issuecomment-520131892,"The username of the monitor account in ProxySQL can only be one name, so is the proxysql account username of a set of master-slave servers. However, when connecting to Azure MySQL database, it requires the user name in the format of 'user@server' or 'server%user' which causes the monitor/proxysql account to be logged into only one Azure MySQL server. Therefore ProxySQL cannot be used in the read-write split on Azure MySQL databases.
Now Azure MySQL R&Ds are doing the work of removing the ‚Äò@' + 'server' in the username information, which will be online soon. However, a new connection attribute '_server_host' which contains the hostname information is added. This attribute has been already added in driver MariaDB Connector C and MariaDB Connector J (reference: MariaDB/mariadb-connector-j@de8883b).
So some code is added to make sure ProxySQL can be applied to the read-write split on Azure MySQL Servers in the future.","@renecannao : here are some links: Create an Azure MySQL Database, Create Read Replicas in Azure MySQL and Azure Database for MySQL Documentation

Are these what you need? If not, please let me know.
Thanks.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2185,2019-08-09T03:39:55Z,2019-08-11T05:22:58Z,2019-09-10T22:47:17Z,MERGED,True,3,0,3,https://github.com/YYJiangLoveU,Let ProxySQL support Azure MySQL,8,[],https://github.com/sysown/proxysql/pull/2185,https://github.com/renecannao,6,https://github.com/sysown/proxysql/pull/2185#issuecomment-520135924,"The username of the monitor account in ProxySQL can only be one name, so is the proxysql account username of a set of master-slave servers. However, when connecting to Azure MySQL database, it requires the user name in the format of 'user@server' or 'server%user' which causes the monitor/proxysql account to be logged into only one Azure MySQL server. Therefore ProxySQL cannot be used in the read-write split on Azure MySQL databases.
Now Azure MySQL R&Ds are doing the work of removing the ‚Äò@' + 'server' in the username information, which will be online soon. However, a new connection attribute '_server_host' which contains the hostname information is added. This attribute has been already added in driver MariaDB Connector C and MariaDB Connector J (reference: MariaDB/mariadb-connector-j@de8883b).
So some code is added to make sure ProxySQL can be applied to the read-write split on Azure MySQL Servers in the future.","@YYJiangLoveU : thank you for the links!
I think this is relevant to me, I didn't know Azure has this bizarre username setting.
I reviewed the changes, it seems pretty straightforward. Although, can you please revert the changes to ProxySQL_Cluster.cpp ? This module only connects to other ProxySQL instances, not to any backend.
Thanks",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2185,2019-08-09T03:39:55Z,2019-08-11T05:22:58Z,2019-09-10T22:47:17Z,MERGED,True,3,0,3,https://github.com/YYJiangLoveU,Let ProxySQL support Azure MySQL,8,[],https://github.com/sysown/proxysql/pull/2185,https://github.com/YYJiangLoveU,7,https://github.com/sysown/proxysql/pull/2185#issuecomment-520146818,"The username of the monitor account in ProxySQL can only be one name, so is the proxysql account username of a set of master-slave servers. However, when connecting to Azure MySQL database, it requires the user name in the format of 'user@server' or 'server%user' which causes the monitor/proxysql account to be logged into only one Azure MySQL server. Therefore ProxySQL cannot be used in the read-write split on Azure MySQL databases.
Now Azure MySQL R&Ds are doing the work of removing the ‚Äò@' + 'server' in the username information, which will be online soon. However, a new connection attribute '_server_host' which contains the hostname information is added. This attribute has been already added in driver MariaDB Connector C and MariaDB Connector J (reference: MariaDB/mariadb-connector-j@de8883b).
So some code is added to make sure ProxySQL can be applied to the read-write split on Azure MySQL Servers in the future.","@renecannao : sorry for the late reply!
Thank you for telling me that ProxySQL_Cluster.cpp does not need to be changed. I didn't fully understand this before and I removed the code added.
Thanks",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2185,2019-08-09T03:39:55Z,2019-08-11T05:22:58Z,2019-09-10T22:47:17Z,MERGED,True,3,0,3,https://github.com/YYJiangLoveU,Let ProxySQL support Azure MySQL,8,[],https://github.com/sysown/proxysql/pull/2185,https://github.com/renecannao,8,https://github.com/sysown/proxysql/pull/2185#issuecomment-520201282,"The username of the monitor account in ProxySQL can only be one name, so is the proxysql account username of a set of master-slave servers. However, when connecting to Azure MySQL database, it requires the user name in the format of 'user@server' or 'server%user' which causes the monitor/proxysql account to be logged into only one Azure MySQL server. Therefore ProxySQL cannot be used in the read-write split on Azure MySQL databases.
Now Azure MySQL R&Ds are doing the work of removing the ‚Äò@' + 'server' in the username information, which will be online soon. However, a new connection attribute '_server_host' which contains the hostname information is added. This attribute has been already added in driver MariaDB Connector C and MariaDB Connector J (reference: MariaDB/mariadb-connector-j@de8883b).
So some code is added to make sure ProxySQL can be applied to the read-write split on Azure MySQL Servers in the future.",Thank you @YYJiangLoveU !,True,"{'LAUGH': ['https://github.com/YYJiangLoveU'], 'THUMBS_UP': ['https://github.com/ernstae']}"
sysown/proxysql,https://github.com/sysown/proxysql,2185,2019-08-09T03:39:55Z,2019-08-11T05:22:58Z,2019-09-10T22:47:17Z,MERGED,True,3,0,3,https://github.com/YYJiangLoveU,Let ProxySQL support Azure MySQL,8,[],https://github.com/sysown/proxysql/pull/2185,https://github.com/funkyfundev,9,https://github.com/sysown/proxysql/pull/2185#issuecomment-529852867,"The username of the monitor account in ProxySQL can only be one name, so is the proxysql account username of a set of master-slave servers. However, when connecting to Azure MySQL database, it requires the user name in the format of 'user@server' or 'server%user' which causes the monitor/proxysql account to be logged into only one Azure MySQL server. Therefore ProxySQL cannot be used in the read-write split on Azure MySQL databases.
Now Azure MySQL R&Ds are doing the work of removing the ‚Äò@' + 'server' in the username information, which will be online soon. However, a new connection attribute '_server_host' which contains the hostname information is added. This attribute has been already added in driver MariaDB Connector C and MariaDB Connector J (reference: MariaDB/mariadb-connector-j@de8883b).
So some code is added to make sure ProxySQL can be applied to the read-write split on Azure MySQL Servers in the future.","@renecannao I installed proxysql_2.0.6-ubuntu18_amd64.deb v2.0.6 today and I can't find this option in global variables:  (ProxySQL version 2.0.6-73-gc746bf7f, codename Truls)

mysql-azure_enabled

@YYJiangLoveU can you also help how to enable it?
thank you guys. :)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2185,2019-08-09T03:39:55Z,2019-08-11T05:22:58Z,2019-09-10T22:47:17Z,MERGED,True,3,0,3,https://github.com/YYJiangLoveU,Let ProxySQL support Azure MySQL,8,[],https://github.com/sysown/proxysql/pull/2185,https://github.com/renecannao,10,https://github.com/sysown/proxysql/pull/2185#issuecomment-529877020,"The username of the monitor account in ProxySQL can only be one name, so is the proxysql account username of a set of master-slave servers. However, when connecting to Azure MySQL database, it requires the user name in the format of 'user@server' or 'server%user' which causes the monitor/proxysql account to be logged into only one Azure MySQL server. Therefore ProxySQL cannot be used in the read-write split on Azure MySQL databases.
Now Azure MySQL R&Ds are doing the work of removing the ‚Äò@' + 'server' in the username information, which will be online soon. However, a new connection attribute '_server_host' which contains the hostname information is added. This attribute has been already added in driver MariaDB Connector C and MariaDB Connector J (reference: MariaDB/mariadb-connector-j@de8883b).
So some code is added to make sure ProxySQL can be applied to the read-write split on Azure MySQL Servers in the future.","hi @funkyfundev .
@YYJiangLoveU removed the flag, because there is indeed no reason for it.
Thanks",True,{'THUMBS_UP': ['https://github.com/funkyfundev']}
sysown/proxysql,https://github.com/sysown/proxysql,2185,2019-08-09T03:39:55Z,2019-08-11T05:22:58Z,2019-09-10T22:47:17Z,MERGED,True,3,0,3,https://github.com/YYJiangLoveU,Let ProxySQL support Azure MySQL,8,[],https://github.com/sysown/proxysql/pull/2185,https://github.com/YYJiangLoveU,11,https://github.com/sysown/proxysql/pull/2185#issuecomment-529877513,"The username of the monitor account in ProxySQL can only be one name, so is the proxysql account username of a set of master-slave servers. However, when connecting to Azure MySQL database, it requires the user name in the format of 'user@server' or 'server%user' which causes the monitor/proxysql account to be logged into only one Azure MySQL server. Therefore ProxySQL cannot be used in the read-write split on Azure MySQL databases.
Now Azure MySQL R&Ds are doing the work of removing the ‚Äò@' + 'server' in the username information, which will be online soon. However, a new connection attribute '_server_host' which contains the hostname information is added. This attribute has been already added in driver MariaDB Connector C and MariaDB Connector J (reference: MariaDB/mariadb-connector-j@de8883b).
So some code is added to make sure ProxySQL can be applied to the read-write split on Azure MySQL Servers in the future.","@funkyfundev : the mysql_azure_enabled has been removed (link) after discussion with my colleagues because the new connection attribute _server_host has no effect on the connection with non-azure databases. In other words, this attribute is transmitted by default when ProxySQL connecting database. You don't need extra configuration.
However, besides the change on ProxySQL, it also needs fix support on Azure (as I said above). The fix has just been deployed in the servers in some certain regions, and is not available in a production environment yet. So, you cannot use ProxySQL on Azure databases now. But I believe it will be online soon.
If you need more help, please let me know.
Thanks :)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2185,2019-08-09T03:39:55Z,2019-08-11T05:22:58Z,2019-09-10T22:47:17Z,MERGED,True,3,0,3,https://github.com/YYJiangLoveU,Let ProxySQL support Azure MySQL,8,[],https://github.com/sysown/proxysql/pull/2185,https://github.com/funkyfundev,12,https://github.com/sysown/proxysql/pull/2185#issuecomment-530149571,"The username of the monitor account in ProxySQL can only be one name, so is the proxysql account username of a set of master-slave servers. However, when connecting to Azure MySQL database, it requires the user name in the format of 'user@server' or 'server%user' which causes the monitor/proxysql account to be logged into only one Azure MySQL server. Therefore ProxySQL cannot be used in the read-write split on Azure MySQL databases.
Now Azure MySQL R&Ds are doing the work of removing the ‚Äò@' + 'server' in the username information, which will be online soon. However, a new connection attribute '_server_host' which contains the hostname information is added. This attribute has been already added in driver MariaDB Connector C and MariaDB Connector J (reference: MariaDB/mariadb-connector-j@de8883b).
So some code is added to make sure ProxySQL can be applied to the read-write split on Azure MySQL Servers in the future.","@funkyfundev : the mysql_azure_enabled has been removed (link) after discussion with my colleagues because the new connection attribute _server_host has no effect on the connection with non-azure databases. In other words, this attribute is transmitted by default when ProxySQL connecting database. You don't need extra configuration.
However, besides the change on ProxySQL, it also needs fix support on Azure (as I said above). The fix has just been deployed in the servers in some certain regions, and is not available in a production environment yet. So, you cannot use ProxySQL on Azure databases now. But I believe it will be online soon.
If you need more help, please let me know.
Thanks :)
thank you for the explanation.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2188,2019-08-10T05:40:33Z,2020-01-20T02:53:21Z,2020-01-20T02:53:21Z,MERGED,True,8,3,2,https://github.com/renecannao,Final fixes from PR #1922,1,[],https://github.com/sysown/proxysql/pull/2188,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2188,Port to 1.4.x of commit 58d77e4,Port to 1.4.x of commit 58d77e4,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2188,2019-08-10T05:40:33Z,2020-01-20T02:53:21Z,2020-01-20T02:53:21Z,MERGED,True,8,3,2,https://github.com/renecannao,Final fixes from PR #1922,1,[],https://github.com/sysown/proxysql/pull/2188,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2188#issuecomment-521185359,Port to 1.4.x of commit 58d77e4,test this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2188,2019-08-10T05:40:33Z,2020-01-20T02:53:21Z,2020-01-20T02:53:21Z,MERGED,True,8,3,2,https://github.com/renecannao,Final fixes from PR #1922,1,[],https://github.com/sysown/proxysql/pull/2188,https://github.com/alpes214,3,https://github.com/sysown/proxysql/pull/2188#issuecomment-556396138,Port to 1.4.x of commit 58d77e4,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2189,2019-08-10T07:34:58Z,2019-08-10T09:44:48Z,2019-10-28T23:58:33Z,MERGED,True,139,11,7,https://github.com/renecannao,Implementation of COM_FIELD_LIST,1,[],https://github.com/sysown/proxysql/pull/2189,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2189,Port from 1.4.16 to 2.0.6,Port from 1.4.16 to 2.0.6,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2190,2019-08-10T10:15:57Z,2019-08-11T05:23:27Z,2019-10-28T23:58:30Z,MERGED,True,58,58,3,https://github.com/renecannao,Replace endpoint_address with domain_name,2,[],https://github.com/sysown/proxysql/pull/2190,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2190,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2194,2019-08-16T08:43:01Z,2019-09-30T19:24:01Z,2019-09-30T19:25:09Z,CLOSED,False,1,1,1,https://github.com/ernstae,Add a start for ProxySQL on CentOS/RHEL,1,[],https://github.com/sysown/proxysql/pull/2194,https://github.com/ernstae,1,https://github.com/sysown/proxysql/pull/2194,"This would address #2192
I'm not entirely sure the motivation for removing the service start, but in an environment where patching is performed with yum update being run across a class of hosts, I've had to run patches for hosts with ProxySQL updates with yum update proxysql -y && service restart proxysql
This bakes the restart into the %post section of the spec file and suppresses the output of the service restart.","This would address #2192
I'm not entirely sure the motivation for removing the service start, but in an environment where patching is performed with yum update being run across a class of hosts, I've had to run patches for hosts with ProxySQL updates with yum update proxysql -y && service restart proxysql
This bakes the restart into the %post section of the spec file and suppresses the output of the service restart.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2194,2019-08-16T08:43:01Z,2019-09-30T19:24:01Z,2019-09-30T19:25:09Z,CLOSED,False,1,1,1,https://github.com/ernstae,Add a start for ProxySQL on CentOS/RHEL,1,[],https://github.com/sysown/proxysql/pull/2194,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2194#issuecomment-521936659,"This would address #2192
I'm not entirely sure the motivation for removing the service start, but in an environment where patching is performed with yum update being run across a class of hosts, I've had to run patches for hosts with ProxySQL updates with yum update proxysql -y && service restart proxysql
This bakes the restart into the %post section of the spec file and suppresses the output of the service restart.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2194,2019-08-16T08:43:01Z,2019-09-30T19:24:01Z,2019-09-30T19:25:09Z,CLOSED,False,1,1,1,https://github.com/ernstae,Add a start for ProxySQL on CentOS/RHEL,1,[],https://github.com/sysown/proxysql/pull/2194,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2194#issuecomment-529754017,"This would address #2192
I'm not entirely sure the motivation for removing the service start, but in an environment where patching is performed with yum update being run across a class of hosts, I've had to run patches for hosts with ProxySQL updates with yum update proxysql -y && service restart proxysql
This bakes the restart into the %post section of the spec file and suppresses the output of the service restart.","Thank you @ernstae !
@pondix : can you please review and give your input?",True,{'HEART': ['https://github.com/ernstae']}
sysown/proxysql,https://github.com/sysown/proxysql,2194,2019-08-16T08:43:01Z,2019-09-30T19:24:01Z,2019-09-30T19:25:09Z,CLOSED,False,1,1,1,https://github.com/ernstae,Add a start for ProxySQL on CentOS/RHEL,1,[],https://github.com/sysown/proxysql/pull/2194,https://github.com/pondix,4,https://github.com/sysown/proxysql/pull/2194#issuecomment-536670047,"This would address #2192
I'm not entirely sure the motivation for removing the service start, but in an environment where patching is performed with yum update being run across a class of hosts, I've had to run patches for hosts with ProxySQL updates with yum update proxysql -y && service restart proxysql
This bakes the restart into the %post section of the spec file and suppresses the output of the service restart.","This will not work, you are trying to restart the process in the ""post"" stage which executes before the ""preun"" stage of the old package which executes /etc/init.d/proxysql stop, in other words even if the ProxySQL service is restarted at this stage - later in the update process the service will be stopped based on the old package's ""preun"" logic which will then try to stop the old package being uninstalled: https://github.com/sysown/proxysql/blob/v2.0.6/docker/images/proxysql/rhel-compliant/rpmmacros/rpmbuild/SPECS/proxysql.spec#L49
I understand the need however and I'm evaluating other ways of getting around this since we need something idempotent i.e. it should work no matter which version of a package the upgrade is being done from.
Also, we don't want a generic method where ProxySQL is started after a package install since this will generate the ProxySQL database based on the default proxysql.cnf file and users should have the opportunity to modify the file before the service is initially started.
I will reply on this PR once a solution is in place, the goal is to include this in v2.0.7",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2194,2019-08-16T08:43:01Z,2019-09-30T19:24:01Z,2019-09-30T19:25:09Z,CLOSED,False,1,1,1,https://github.com/ernstae,Add a start for ProxySQL on CentOS/RHEL,1,[],https://github.com/sysown/proxysql/pull/2194,https://github.com/pondix,5,https://github.com/sysown/proxysql/pull/2194#issuecomment-536713546,"This would address #2192
I'm not entirely sure the motivation for removing the service start, but in an environment where patching is performed with yum update being run across a class of hosts, I've had to run patches for hosts with ProxySQL updates with yum update proxysql -y && service restart proxysql
This bakes the restart into the %post section of the spec file and suppresses the output of the service restart.",Included in 732586a,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2196,2019-08-16T12:13:22Z,2019-08-16T14:44:40Z,2019-08-16T14:44:40Z,MERGED,True,12,0,2,https://github.com/dbussink,Remove hardcoded capabilities that the client uses,1,[],https://github.com/sysown/proxysql/pull/2196,https://github.com/dbussink,1,https://github.com/sysown/proxysql/pull/2196,"These hardcoded capabilities end up being set on all backend connections ProxySQL makes. We don't want CLIENT_MULTI_RESULTS & CLIENT_PS_MULTI_RESULTS to be enabled hardcoded, but they should be dependent on the client connecting to ProxySQL.
Having this mismatch meant that any connection that was not setting these flags would not be multiplexed with subsequent connections as the client of client flags would not match.
cc @renecannao & @shlomi-noach as we have been debugging this problem trying to find what was the cause of the connection churn we were seeing.","These hardcoded capabilities end up being set on all backend connections ProxySQL makes. We don't want CLIENT_MULTI_RESULTS & CLIENT_PS_MULTI_RESULTS to be enabled hardcoded, but they should be dependent on the client connecting to ProxySQL.
Having this mismatch meant that any connection that was not setting these flags would not be multiplexed with subsequent connections as the client of client flags would not match.
cc @renecannao & @shlomi-noach as we have been debugging this problem trying to find what was the cause of the connection churn we were seeing.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2196,2019-08-16T12:13:22Z,2019-08-16T14:44:40Z,2019-08-16T14:44:40Z,MERGED,True,12,0,2,https://github.com/dbussink,Remove hardcoded capabilities that the client uses,1,[],https://github.com/sysown/proxysql/pull/2196,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2196#issuecomment-521989375,"These hardcoded capabilities end up being set on all backend connections ProxySQL makes. We don't want CLIENT_MULTI_RESULTS & CLIENT_PS_MULTI_RESULTS to be enabled hardcoded, but they should be dependent on the client connecting to ProxySQL.
Having this mismatch meant that any connection that was not setting these flags would not be multiplexed with subsequent connections as the client of client flags would not match.
cc @renecannao & @shlomi-noach as we have been debugging this problem trying to find what was the cause of the connection churn we were seeing.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2196,2019-08-16T12:13:22Z,2019-08-16T14:44:40Z,2019-08-16T14:44:40Z,MERGED,True,12,0,2,https://github.com/dbussink,Remove hardcoded capabilities that the client uses,1,[],https://github.com/sysown/proxysql/pull/2196,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2196#issuecomment-521989512,"These hardcoded capabilities end up being set on all backend connections ProxySQL makes. We don't want CLIENT_MULTI_RESULTS & CLIENT_PS_MULTI_RESULTS to be enabled hardcoded, but they should be dependent on the client connecting to ProxySQL.
Having this mismatch meant that any connection that was not setting these flags would not be multiplexed with subsequent connections as the client of client flags would not match.
cc @renecannao & @shlomi-noach as we have been debugging this problem trying to find what was the cause of the connection churn we were seeing.",add to whitelist,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2196,2019-08-16T12:13:22Z,2019-08-16T14:44:40Z,2019-08-16T14:44:40Z,MERGED,True,12,0,2,https://github.com/dbussink,Remove hardcoded capabilities that the client uses,1,[],https://github.com/sysown/proxysql/pull/2196,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/2196#issuecomment-521989599,"These hardcoded capabilities end up being set on all backend connections ProxySQL makes. We don't want CLIENT_MULTI_RESULTS & CLIENT_PS_MULTI_RESULTS to be enabled hardcoded, but they should be dependent on the client connecting to ProxySQL.
Having this mismatch meant that any connection that was not setting these flags would not be multiplexed with subsequent connections as the client of client flags would not match.
cc @renecannao & @shlomi-noach as we have been debugging this problem trying to find what was the cause of the connection churn we were seeing.",ok to test,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2198,2019-08-16T13:45:13Z,2019-09-10T03:31:47Z,2019-09-10T06:38:25Z,MERGED,True,1,1,1,https://github.com/pirDOL,Remove unnecessary build targets of mariadb client,1,[],https://github.com/sysown/proxysql/pull/2198,https://github.com/pirDOL,1,https://github.com/sysown/proxysql/pull/2198,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2198,2019-08-16T13:45:13Z,2019-09-10T03:31:47Z,2019-09-10T06:38:25Z,MERGED,True,1,1,1,https://github.com/pirDOL,Remove unnecessary build targets of mariadb client,1,[],https://github.com/sysown/proxysql/pull/2198,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2198#issuecomment-522014603,,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2198,2019-08-16T13:45:13Z,2019-09-10T03:31:47Z,2019-09-10T06:38:25Z,MERGED,True,1,1,1,https://github.com/pirDOL,Remove unnecessary build targets of mariadb client,1,[],https://github.com/sysown/proxysql/pull/2198,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2198#issuecomment-529726233,,add to whitelist,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2198,2019-08-16T13:45:13Z,2019-09-10T03:31:47Z,2019-09-10T06:38:25Z,MERGED,True,1,1,1,https://github.com/pirDOL,Remove unnecessary build targets of mariadb client,1,[],https://github.com/sysown/proxysql/pull/2198,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/2198#issuecomment-529726306,,ok to test,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2198,2019-08-16T13:45:13Z,2019-09-10T03:31:47Z,2019-09-10T06:38:25Z,MERGED,True,1,1,1,https://github.com/pirDOL,Remove unnecessary build targets of mariadb client,1,[],https://github.com/sysown/proxysql/pull/2198,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/2198#issuecomment-529753822,,Thank you!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2198,2019-08-16T13:45:13Z,2019-09-10T03:31:47Z,2019-09-10T06:38:25Z,MERGED,True,1,1,1,https://github.com/pirDOL,Remove unnecessary build targets of mariadb client,1,[],https://github.com/sysown/proxysql/pull/2198,https://github.com/pirDOL,6,https://github.com/sysown/proxysql/pull/2198#issuecomment-529793695,,it's glad to participate this project,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2199,2019-08-16T14:47:53Z,2019-08-16T14:48:03Z,2019-10-28T23:57:44Z,MERGED,True,25,2,2,https://github.com/renecannao,V2.0.7.1,5,[],https://github.com/sysown/proxysql/pull/2199,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2199,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2209,2019-08-21T09:35:31Z,2019-08-21T16:09:37Z,2019-10-28T23:57:46Z,MERGED,True,130,9,3,https://github.com/renecannao,V2.0.7.3,8,[],https://github.com/sysown/proxysql/pull/2209,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2209,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2212,2019-08-21T23:19:58Z,2019-08-21T23:42:29Z,2019-08-21T23:46:42Z,CLOSED,False,8,6,1,https://github.com/toumin,replication lag in multichannel environment #2210,2,[],https://github.com/sysown/proxysql/pull/2212,https://github.com/toumin,1,https://github.com/sysown/proxysql/pull/2212,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2212,2019-08-21T23:19:58Z,2019-08-21T23:42:29Z,2019-08-21T23:46:42Z,CLOSED,False,8,6,1,https://github.com/toumin,replication lag in multichannel environment #2210,2,[],https://github.com/sysown/proxysql/pull/2212,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2212#issuecomment-523686062,,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2213,2019-08-21T23:45:49Z,2019-10-28T23:57:30Z,2019-10-28T23:57:30Z,CLOSED,False,8,6,1,https://github.com/toumin,replication lag in multichannel environment #2210,1,[],https://github.com/sysown/proxysql/pull/2213,https://github.com/toumin,1,https://github.com/sysown/proxysql/pull/2213,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2213,2019-08-21T23:45:49Z,2019-10-28T23:57:30Z,2019-10-28T23:57:30Z,CLOSED,False,8,6,1,https://github.com/toumin,replication lag in multichannel environment #2210,1,[],https://github.com/sysown/proxysql/pull/2213,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2213#issuecomment-523691058,,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2228,2019-08-29T15:21:11Z,2019-08-29T16:55:43Z,2019-10-28T23:57:49Z,MERGED,True,245,21,6,https://github.com/renecannao,V2.0.7.4,11,[],https://github.com/sysown/proxysql/pull/2228,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2228,Further improvement for Aurora,Further improvement for Aurora,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2238,2019-09-05T22:00:08Z,,2019-12-04T21:19:12Z,OPEN,False,239,25,8,https://github.com/markgergely,Implements pre-postrun hooks for the query rule engine,1,[],https://github.com/sysown/proxysql/pull/2238,https://github.com/markgergely,1,https://github.com/sysown/proxysql/pull/2238,"This PR implements pre and post run hooks for the query rule engine. Once a query is matched through the usual mechanism, it's able to execute custom queries before and after the main query. The additional queries are being executed in the same session.
One use-case would be encapsulating write DB operations into transactions and introspect the amount of rows being touched by the main query.
C++ is not my preferred language, so any feedback is welcomed.
I wasn't able to get a test working with the current test suite, but we have been testing this extensively in-house and have not run into any issues yet.","This PR implements pre and post run hooks for the query rule engine. Once a query is matched through the usual mechanism, it's able to execute custom queries before and after the main query. The additional queries are being executed in the same session.
One use-case would be encapsulating write DB operations into transactions and introspect the amount of rows being touched by the main query.
C++ is not my preferred language, so any feedback is welcomed.
I wasn't able to get a test working with the current test suite, but we have been testing this extensively in-house and have not run into any issues yet.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2238,2019-09-05T22:00:08Z,,2019-12-04T21:19:12Z,OPEN,False,239,25,8,https://github.com/markgergely,Implements pre-postrun hooks for the query rule engine,1,[],https://github.com/sysown/proxysql/pull/2238,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2238#issuecomment-528607607,"This PR implements pre and post run hooks for the query rule engine. Once a query is matched through the usual mechanism, it's able to execute custom queries before and after the main query. The additional queries are being executed in the same session.
One use-case would be encapsulating write DB operations into transactions and introspect the amount of rows being touched by the main query.
C++ is not my preferred language, so any feedback is welcomed.
I wasn't able to get a test working with the current test suite, but we have been testing this extensively in-house and have not run into any issues yet.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2238,2019-09-05T22:00:08Z,,2019-12-04T21:19:12Z,OPEN,False,239,25,8,https://github.com/markgergely,Implements pre-postrun hooks for the query rule engine,1,[],https://github.com/sysown/proxysql/pull/2238,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2238#issuecomment-529753733,"This PR implements pre and post run hooks for the query rule engine. Once a query is matched through the usual mechanism, it's able to execute custom queries before and after the main query. The additional queries are being executed in the same session.
One use-case would be encapsulating write DB operations into transactions and introspect the amount of rows being touched by the main query.
C++ is not my preferred language, so any feedback is welcomed.
I wasn't able to get a test working with the current test suite, but we have been testing this extensively in-house and have not run into any issues yet.","@markgergely : thank you very much for the PR!
I really like the idea!
Unfortunately it is unlikely that this will be merged into 2.0.x , because it changes the number of columns in mysql_query_rules , and we try really hard to not change the tables definitions of the tables involved in ProxySQL Cluster in 2.0.x.
This is for compatibility reasons: a ProxySQL instance 2.0.x should be able to sync with an instance 2.0.y .
For this reason, this PR will be on hold until 2.1 . Does it make sense?
Another option would be to merge it into 2.0 , but our release note should be extremely clear that it breaks compatibility with previous releases: this is not an easy decision.
On the same topic, this PR doesn't handle sync using ProxySQL Cluster: this is expected, because it cannot sync for the reason listed above. Yet, it needs to be addressed.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2238,2019-09-05T22:00:08Z,,2019-12-04T21:19:12Z,OPEN,False,239,25,8,https://github.com/markgergely,Implements pre-postrun hooks for the query rule engine,1,[],https://github.com/sysown/proxysql/pull/2238,https://github.com/markgergely,4,https://github.com/sysown/proxysql/pull/2238#issuecomment-540130411,"This PR implements pre and post run hooks for the query rule engine. Once a query is matched through the usual mechanism, it's able to execute custom queries before and after the main query. The additional queries are being executed in the same session.
One use-case would be encapsulating write DB operations into transactions and introspect the amount of rows being touched by the main query.
C++ is not my preferred language, so any feedback is welcomed.
I wasn't able to get a test working with the current test suite, but we have been testing this extensively in-house and have not run into any issues yet.","@renecannao totally understood, 2.1 version it is. I also fixed the clustering setting propogation so that should be good to go",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2238,2019-09-05T22:00:08Z,,2019-12-04T21:19:12Z,OPEN,False,239,25,8,https://github.com/markgergely,Implements pre-postrun hooks for the query rule engine,1,[],https://github.com/sysown/proxysql/pull/2238,https://github.com/secularrealist,5,https://github.com/sysown/proxysql/pull/2238#issuecomment-561814439,"This PR implements pre and post run hooks for the query rule engine. Once a query is matched through the usual mechanism, it's able to execute custom queries before and after the main query. The additional queries are being executed in the same session.
One use-case would be encapsulating write DB operations into transactions and introspect the amount of rows being touched by the main query.
C++ is not my preferred language, so any feedback is welcomed.
I wasn't able to get a test working with the current test suite, but we have been testing this extensively in-house and have not run into any issues yet.",@renecannao is this being merged into 2.1? I couldn't find any notes. Thanks.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2238,2019-09-05T22:00:08Z,,2019-12-04T21:19:12Z,OPEN,False,239,25,8,https://github.com/markgergely,Implements pre-postrun hooks for the query rule engine,1,[],https://github.com/sysown/proxysql/pull/2238,https://github.com/renecannao,6,https://github.com/sysown/proxysql/pull/2238#issuecomment-561843118,"This PR implements pre and post run hooks for the query rule engine. Once a query is matched through the usual mechanism, it's able to execute custom queries before and after the main query. The additional queries are being executed in the same session.
One use-case would be encapsulating write DB operations into transactions and introspect the amount of rows being touched by the main query.
C++ is not my preferred language, so any feedback is welcomed.
I wasn't able to get a test working with the current test suite, but we have been testing this extensively in-house and have not run into any issues yet.","No, it wasn't. I think it was closed erroneously. Reopening",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2243,2019-09-09T04:44:43Z,2019-09-10T03:21:50Z,2019-10-28T23:57:54Z,MERGED,True,1666,184,13,https://github.com/renecannao,V2.0.7.2,14,[],https://github.com/sysown/proxysql/pull/2243,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2243,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2248,2019-09-09T17:02:48Z,2019-09-10T01:11:41Z,2019-09-10T01:11:41Z,MERGED,True,53,1,3,https://github.com/acampoh,Added support for tcp_keepalives in proxysql client conns,1,[],https://github.com/sysown/proxysql/pull/2248,https://github.com/acampoh,1,https://github.com/sysown/proxysql/pull/2248,"We have found an issue while running proxysql inside kubernetes. We have been seeing that idle connections without activity in around 15 minutes were closed automatically by kubernetes without notifying the client, which when tried to use the connection again received a ""gone away"" error.
We have added support for TCP keep alive in client connections, so we can keep open idle connections  in these environments.
As this is a feature, we have added config variables for it, leaving the current behaviour as the default one.","We have found an issue while running proxysql inside kubernetes. We have been seeing that idle connections without activity in around 15 minutes were closed automatically by kubernetes without notifying the client, which when tried to use the connection again received a ""gone away"" error.
We have added support for TCP keep alive in client connections, so we can keep open idle connections  in these environments.
As this is a feature, we have added config variables for it, leaving the current behaviour as the default one.",True,{'THUMBS_UP': ['https://github.com/yakirgb']}
sysown/proxysql,https://github.com/sysown/proxysql,2248,2019-09-09T17:02:48Z,2019-09-10T01:11:41Z,2019-09-10T01:11:41Z,MERGED,True,53,1,3,https://github.com/acampoh,Added support for tcp_keepalives in proxysql client conns,1,[],https://github.com/sysown/proxysql/pull/2248,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2248#issuecomment-529575603,"We have found an issue while running proxysql inside kubernetes. We have been seeing that idle connections without activity in around 15 minutes were closed automatically by kubernetes without notifying the client, which when tried to use the connection again received a ""gone away"" error.
We have added support for TCP keep alive in client connections, so we can keep open idle connections  in these environments.
As this is a feature, we have added config variables for it, leaving the current behaviour as the default one.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2248,2019-09-09T17:02:48Z,2019-09-10T01:11:41Z,2019-09-10T01:11:41Z,MERGED,True,53,1,3,https://github.com/acampoh,Added support for tcp_keepalives in proxysql client conns,1,[],https://github.com/sysown/proxysql/pull/2248,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2248#issuecomment-529725886,"We have found an issue while running proxysql inside kubernetes. We have been seeing that idle connections without activity in around 15 minutes were closed automatically by kubernetes without notifying the client, which when tried to use the connection again received a ""gone away"" error.
We have added support for TCP keep alive in client connections, so we can keep open idle connections  in these environments.
As this is a feature, we have added config variables for it, leaving the current behaviour as the default one.",Thank you @acampoh !,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2250,2019-09-10T03:21:17Z,2019-09-10T03:43:37Z,2019-10-28T23:57:35Z,MERGED,True,8,3,5,https://github.com/renecannao,Downgraded openssl back to 1.1.0h #2244,1,[],https://github.com/sysown/proxysql/pull/2250,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2250,Due to high CPU usage,Due to high CPU usage,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2251,2019-09-10T15:51:32Z,2019-09-11T05:27:13Z,2019-10-28T23:57:37Z,MERGED,True,2,2,2,https://github.com/renecannao,Fix bug #2208,1,[],https://github.com/sysown/proxysql/pull/2251,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2251,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2254,2019-09-11T09:58:55Z,2019-09-14T05:56:12Z,2019-10-28T23:57:39Z,MERGED,True,35,13,3,https://github.com/renecannao,Improved the parsing of user variables,1,[],https://github.com/sysown/proxysql/pull/2254,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2254,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2260,2019-09-17T07:15:08Z,2019-09-18T20:37:37Z,2019-09-18T20:37:37Z,MERGED,True,261,48,11,https://github.com/alpes214,[FR] Group Replication Timeout count,1,[],https://github.com/sysown/proxysql/pull/2260,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2260,"Description:
This PR implements feature requested in #2187. The implementation is done similar to aurora and galera timeout counting.
Testing:
Testing is implemented with two approaches: 1) random delay generator; 2) predefined pattern of timeouts.","Description:
This PR implements feature requested in #2187. The implementation is done similar to aurora and galera timeout counting.
Testing:
Testing is implemented with two approaches: 1) random delay generator; 2) predefined pattern of timeouts.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2260,2019-09-17T07:15:08Z,2019-09-18T20:37:37Z,2019-09-18T20:37:37Z,MERGED,True,261,48,11,https://github.com/alpes214,[FR] Group Replication Timeout count,1,[],https://github.com/sysown/proxysql/pull/2260,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2260#issuecomment-532094071,"Description:
This PR implements feature requested in #2187. The implementation is done similar to aurora and galera timeout counting.
Testing:
Testing is implemented with two approaches: 1) random delay generator; 2) predefined pattern of timeouts.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2260,2019-09-17T07:15:08Z,2019-09-18T20:37:37Z,2019-09-18T20:37:37Z,MERGED,True,261,48,11,https://github.com/alpes214,[FR] Group Replication Timeout count,1,[],https://github.com/sysown/proxysql/pull/2260,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2260#issuecomment-532341723,"Description:
This PR implements feature requested in #2187. The implementation is done similar to aurora and galera timeout counting.
Testing:
Testing is implemented with two approaches: 1) random delay generator; 2) predefined pattern of timeouts.",add to whitelist,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2260,2019-09-17T07:15:08Z,2019-09-18T20:37:37Z,2019-09-18T20:37:37Z,MERGED,True,261,48,11,https://github.com/alpes214,[FR] Group Replication Timeout count,1,[],https://github.com/sysown/proxysql/pull/2260,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/2260#issuecomment-532341806,"Description:
This PR implements feature requested in #2187. The implementation is done similar to aurora and galera timeout counting.
Testing:
Testing is implemented with two approaches: 1) random delay generator; 2) predefined pattern of timeouts.",ok to test,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2267,2019-09-18T07:06:36Z,2019-10-28T23:57:30Z,2019-10-28T23:57:30Z,CLOSED,False,3,9,1,https://github.com/chipitsine,lib/c_tokenizer.c: remove dead code found by cppcheck,1,[],https://github.com/sysown/proxysql/pull/2267,https://github.com/chipitsine,1,https://github.com/sysown/proxysql/pull/2267,[lib/c_tokenizer.c:282] -> [lib/c_tokenizer.c:288]: (warning) Opposite inner 'if' condition leads to a dead code block.,[lib/c_tokenizer.c:282] -> [lib/c_tokenizer.c:288]: (warning) Opposite inner 'if' condition leads to a dead code block.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2267,2019-09-18T07:06:36Z,2019-10-28T23:57:30Z,2019-10-28T23:57:30Z,CLOSED,False,3,9,1,https://github.com/chipitsine,lib/c_tokenizer.c: remove dead code found by cppcheck,1,[],https://github.com/sysown/proxysql/pull/2267,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2267#issuecomment-532550907,[lib/c_tokenizer.c:282] -> [lib/c_tokenizer.c:288]: (warning) Opposite inner 'if' condition leads to a dead code block.,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2274,2019-09-25T08:06:10Z,2019-09-26T13:54:43Z,2019-09-26T13:54:48Z,MERGED,True,127,2,7,https://github.com/alpes214,set tx_isolation implementation,3,[],https://github.com/sysown/proxysql/pull/2274,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2274,"Description:
this feature introduce tx_isolation variable into proxysql. The tx_isolation duplicates isolation level set by set transaction isolation level
Testing:
tested with set_testing app. test cases included both set tx_isolation ans set transaction isolation level","Description:
this feature introduce tx_isolation variable into proxysql. The tx_isolation duplicates isolation level set by set transaction isolation level
Testing:
tested with set_testing app. test cases included both set tx_isolation ans set transaction isolation level",True,{'HEART': ['https://github.com/ernstae']}
sysown/proxysql,https://github.com/sysown/proxysql,2274,2019-09-25T08:06:10Z,2019-09-26T13:54:43Z,2019-09-26T13:54:48Z,MERGED,True,127,2,7,https://github.com/alpes214,set tx_isolation implementation,3,[],https://github.com/sysown/proxysql/pull/2274,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2274#issuecomment-535512875,"Description:
this feature introduce tx_isolation variable into proxysql. The tx_isolation duplicates isolation level set by set transaction isolation level
Testing:
tested with set_testing app. test cases included both set tx_isolation ans set transaction isolation level",Thanks,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2276,2019-09-26T13:55:18Z,2019-09-26T14:14:26Z,2019-10-28T23:57:20Z,MERGED,True,5,0,1,https://github.com/renecannao,Apply mysql_query_rules.destination_hostgroup also when unable to parse SET statement.,1,[],https://github.com/sysown/proxysql/pull/2276,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2276,"If a SET statement wasn't parsed correctly, hostgroup was locked
on current hostgroup and not on the hostgroup specified in
mysql_query_rules.destination_hostgroup","If a SET statement wasn't parsed correctly, hostgroup was locked
on current hostgroup and not on the hostgroup specified in
mysql_query_rules.destination_hostgroup",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2277,2019-09-27T06:09:54Z,2019-09-27T13:40:18Z,2019-09-27T13:40:18Z,MERGED,True,47,3,4,https://github.com/alpes214,digests number: converting numbers to ? for digest calculation,2,[],https://github.com/sysown/proxysql/pull/2277,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2277,"Description:
Add optional functionality to replace all numbers in the query to '?' signs for generating digest. This functionality can be controlled by mysql-query_digests_no_digits global variable.
Testing:
Testing was done with queries like this:
CALL `76_char_14`.gen_v67_chr_camp_item_upsert_5();

Expected result:
MySQL [(none)]> SELECT schemaname,count_star calls, digest,digest_text FROM stats_mysql_query_digest GROUP BY digest order by calls limit 1000;
+--------------------+-------+--------------------+-------------------------------------------------+
| schemaname         | calls | digest             | digest_text                                     |
+--------------------+-------+--------------------+-------------------------------------------------+
| information_schema | 1     | 0x6EBE62214161EAB5 | CALL `?_char_?`.gen_v?_chr_camp_item_upsert_?() |
+--------------------+-------+--------------------+-------------------------------------------------+
1 row in set (0.00 sec)","Description:
Add optional functionality to replace all numbers in the query to '?' signs for generating digest. This functionality can be controlled by mysql-query_digests_no_digits global variable.
Testing:
Testing was done with queries like this:
CALL `76_char_14`.gen_v67_chr_camp_item_upsert_5();

Expected result:
MySQL [(none)]> SELECT schemaname,count_star calls, digest,digest_text FROM stats_mysql_query_digest GROUP BY digest order by calls limit 1000;
+--------------------+-------+--------------------+-------------------------------------------------+
| schemaname         | calls | digest             | digest_text                                     |
+--------------------+-------+--------------------+-------------------------------------------------+
| information_schema | 1     | 0x6EBE62214161EAB5 | CALL `?_char_?`.gen_v?_chr_camp_item_upsert_?() |
+--------------------+-------+--------------------+-------------------------------------------------+
1 row in set (0.00 sec)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2280,2019-09-28T08:12:52Z,2019-10-19T23:09:30Z,2019-10-28T23:57:27Z,MERGED,True,1,0,1,https://github.com/renecannao,More verbose output for error 2019 #2273,1,[],https://github.com/sysown/proxysql/pull/2280,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2280,"If the backend doesn't support the charset required by the client, an error is returned.
This commit adds more verbosity.","If the backend doesn't support the charset required by the client, an error is returned.
This commit adds more verbosity.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2280,2019-09-28T08:12:52Z,2019-10-19T23:09:30Z,2019-10-28T23:57:27Z,MERGED,True,1,0,1,https://github.com/renecannao,More verbose output for error 2019 #2273,1,[],https://github.com/sysown/proxysql/pull/2280,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2280#issuecomment-539546454,"If the backend doesn't support the charset required by the client, an error is returned.
This commit adds more verbosity.",test this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2281,2019-09-28T08:13:13Z,2019-10-19T23:11:51Z,2019-10-28T23:57:25Z,MERGED,True,36,11,4,https://github.com/renecannao,More mysql_replication_hostgroups.check_type #2186,2,[],https://github.com/sysown/proxysql/pull/2281,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2281,"Added support for:

read_only|innodb_read_only
read_only&innodb_read_only","Added support for:

read_only|innodb_read_only
read_only&innodb_read_only",True,"{'HEART': ['https://github.com/srikiraju', 'https://github.com/markuman']}"
sysown/proxysql,https://github.com/sysown/proxysql,2281,2019-09-28T08:13:13Z,2019-10-19T23:11:51Z,2019-10-28T23:57:25Z,MERGED,True,36,11,4,https://github.com/renecannao,More mysql_replication_hostgroups.check_type #2186,2,[],https://github.com/sysown/proxysql/pull/2281,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2281#issuecomment-539546567,"Added support for:

read_only|innodb_read_only
read_only&innodb_read_only",test this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2290,2019-10-03T14:47:09Z,2019-10-28T05:18:06Z,2019-10-28T08:56:06Z,MERGED,True,257,40,10,https://github.com/acampoh,V2.0.8 fix galera support,3,[],https://github.com/sysown/proxysql/pull/2290,https://github.com/acampoh,1,https://github.com/sysown/proxysql/pull/2290,I have ported again my changes fixing the support for galera nodes having the same nodes repeated in multiple galera HGs.,I have ported again my changes fixing the support for galera nodes having the same nodes repeated in multiple galera HGs.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2290,2019-10-03T14:47:09Z,2019-10-28T05:18:06Z,2019-10-28T08:56:06Z,MERGED,True,257,40,10,https://github.com/acampoh,V2.0.8 fix galera support,3,[],https://github.com/sysown/proxysql/pull/2290,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2290#issuecomment-539691547,I have ported again my changes fixing the support for galera nodes having the same nodes repeated in multiple galera HGs.,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2290,2019-10-03T14:47:09Z,2019-10-28T05:18:06Z,2019-10-28T08:56:06Z,MERGED,True,257,40,10,https://github.com/acampoh,V2.0.8 fix galera support,3,[],https://github.com/sysown/proxysql/pull/2290,https://github.com/jonathanhartley,3,https://github.com/sysown/proxysql/pull/2290#issuecomment-541392351,I have ported again my changes fixing the support for galera nodes having the same nodes repeated in multiple galera HGs.,"Please can this be merged, galera support on 3 node clusters is currently broken, hoping this will fix it",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2290,2019-10-03T14:47:09Z,2019-10-28T05:18:06Z,2019-10-28T08:56:06Z,MERGED,True,257,40,10,https://github.com/acampoh,V2.0.8 fix galera support,3,[],https://github.com/sysown/proxysql/pull/2290,https://github.com/acampoh,4,https://github.com/sysown/proxysql/pull/2290#issuecomment-544532105,I have ported again my changes fixing the support for galera nodes having the same nodes repeated in multiple galera HGs.,Any news on this??,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2290,2019-10-03T14:47:09Z,2019-10-28T05:18:06Z,2019-10-28T08:56:06Z,MERGED,True,257,40,10,https://github.com/acampoh,V2.0.8 fix galera support,3,[],https://github.com/sysown/proxysql/pull/2290,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/2290#issuecomment-546785881,I have ported again my changes fixing the support for galera nodes having the same nodes repeated in multiple galera HGs.,add to whitelist,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2290,2019-10-03T14:47:09Z,2019-10-28T05:18:06Z,2019-10-28T08:56:06Z,MERGED,True,257,40,10,https://github.com/acampoh,V2.0.8 fix galera support,3,[],https://github.com/sysown/proxysql/pull/2290,https://github.com/renecannao,6,https://github.com/sysown/proxysql/pull/2290#issuecomment-546794486,I have ported again my changes fixing the support for galera nodes having the same nodes repeated in multiple galera HGs.,"Hi @acampoh .
Thank you for the PR.
Merged!",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2290,2019-10-03T14:47:09Z,2019-10-28T05:18:06Z,2019-10-28T08:56:06Z,MERGED,True,257,40,10,https://github.com/acampoh,V2.0.8 fix galera support,3,[],https://github.com/sysown/proxysql/pull/2290,https://github.com/acampoh,7,https://github.com/sysown/proxysql/pull/2290#issuecomment-546851193,I have ported again my changes fixing the support for galera nodes having the same nodes repeated in multiple galera HGs.,thanks a lot!! :),True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2291,2019-10-03T19:46:51Z,,2020-07-13T17:54:08Z,OPEN,False,6160,2062,84,https://github.com/alpes214,[WIP] Issue 841 mem leak,147,[],https://github.com/sysown/proxysql/pull/2291,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2291,"Description:
This PR fixes memory leak described in issue #841
Testing:
Tested with valgrind.
Before fix vagrind reports:
==7131== LEAK SUMMARY:
==7131==    definitely lost: 16,183 bytes in 51 blocks
==7131==    indirectly lost: 137,203 bytes in 163 blocks
==7131==      possibly lost: 1,196,088 bytes in 291 blocks
==7131==    still reachable: 4,057,530 bytes in 12,447 blocks
==7131==                       of which reachable via heuristic:
==7131==                         length64           : 1,712,584 bytes in 5,268 blocks
==7131==         suppressed: 0 bytes in 0 blocks
==7131== Reachable blocks (those to which a pointer was found) are not shown.

After this fix valgrind reports
==20479== LEAK SUMMARY:
==20479==    definitely lost: 1,567 bytes in 31 blocks
==20479==    indirectly lost: 4,083 bytes in 99 blocks
==20479==      possibly lost: 1,196,088 bytes in 291 blocks
==20479==    still reachable: 3,467,679 bytes in 12,231 blocks
==20479==                       of which reachable via heuristic:
==20479==                         length64           : 1,712,584 bytes in 5,268 blocks
==20479==         suppressed: 0 bytes in 0 blocks
==20479== Reachable blocks (those to which a pointer was found) are not shown.

Indirectly lost bytes are reduced","Description:
This PR fixes memory leak described in issue #841
Testing:
Tested with valgrind.
Before fix vagrind reports:
==7131== LEAK SUMMARY:
==7131==    definitely lost: 16,183 bytes in 51 blocks
==7131==    indirectly lost: 137,203 bytes in 163 blocks
==7131==      possibly lost: 1,196,088 bytes in 291 blocks
==7131==    still reachable: 4,057,530 bytes in 12,447 blocks
==7131==                       of which reachable via heuristic:
==7131==                         length64           : 1,712,584 bytes in 5,268 blocks
==7131==         suppressed: 0 bytes in 0 blocks
==7131== Reachable blocks (those to which a pointer was found) are not shown.

After this fix valgrind reports
==20479== LEAK SUMMARY:
==20479==    definitely lost: 1,567 bytes in 31 blocks
==20479==    indirectly lost: 4,083 bytes in 99 blocks
==20479==      possibly lost: 1,196,088 bytes in 291 blocks
==20479==    still reachable: 3,467,679 bytes in 12,231 blocks
==20479==                       of which reachable via heuristic:
==20479==                         length64           : 1,712,584 bytes in 5,268 blocks
==20479==         suppressed: 0 bytes in 0 blocks
==20479== Reachable blocks (those to which a pointer was found) are not shown.

Indirectly lost bytes are reduced",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2291,2019-10-03T19:46:51Z,,2020-07-13T17:54:08Z,OPEN,False,6160,2062,84,https://github.com/alpes214,[WIP] Issue 841 mem leak,147,[],https://github.com/sysown/proxysql/pull/2291,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2291#issuecomment-539546679,"Description:
This PR fixes memory leak described in issue #841
Testing:
Tested with valgrind.
Before fix vagrind reports:
==7131== LEAK SUMMARY:
==7131==    definitely lost: 16,183 bytes in 51 blocks
==7131==    indirectly lost: 137,203 bytes in 163 blocks
==7131==      possibly lost: 1,196,088 bytes in 291 blocks
==7131==    still reachable: 4,057,530 bytes in 12,447 blocks
==7131==                       of which reachable via heuristic:
==7131==                         length64           : 1,712,584 bytes in 5,268 blocks
==7131==         suppressed: 0 bytes in 0 blocks
==7131== Reachable blocks (those to which a pointer was found) are not shown.

After this fix valgrind reports
==20479== LEAK SUMMARY:
==20479==    definitely lost: 1,567 bytes in 31 blocks
==20479==    indirectly lost: 4,083 bytes in 99 blocks
==20479==      possibly lost: 1,196,088 bytes in 291 blocks
==20479==    still reachable: 3,467,679 bytes in 12,231 blocks
==20479==                       of which reachable via heuristic:
==20479==                         length64           : 1,712,584 bytes in 5,268 blocks
==20479==         suppressed: 0 bytes in 0 blocks
==20479== Reachable blocks (those to which a pointer was found) are not shown.

Indirectly lost bytes are reduced",test this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2291,2019-10-03T19:46:51Z,,2020-07-13T17:54:08Z,OPEN,False,6160,2062,84,https://github.com/alpes214,[WIP] Issue 841 mem leak,147,[],https://github.com/sysown/proxysql/pull/2291,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/2291#issuecomment-540556425,"Description:
This PR fixes memory leak described in issue #841
Testing:
Tested with valgrind.
Before fix vagrind reports:
==7131== LEAK SUMMARY:
==7131==    definitely lost: 16,183 bytes in 51 blocks
==7131==    indirectly lost: 137,203 bytes in 163 blocks
==7131==      possibly lost: 1,196,088 bytes in 291 blocks
==7131==    still reachable: 4,057,530 bytes in 12,447 blocks
==7131==                       of which reachable via heuristic:
==7131==                         length64           : 1,712,584 bytes in 5,268 blocks
==7131==         suppressed: 0 bytes in 0 blocks
==7131== Reachable blocks (those to which a pointer was found) are not shown.

After this fix valgrind reports
==20479== LEAK SUMMARY:
==20479==    definitely lost: 1,567 bytes in 31 blocks
==20479==    indirectly lost: 4,083 bytes in 99 blocks
==20479==      possibly lost: 1,196,088 bytes in 291 blocks
==20479==    still reachable: 3,467,679 bytes in 12,231 blocks
==20479==                       of which reachable via heuristic:
==20479==                         length64           : 1,712,584 bytes in 5,268 blocks
==20479==         suppressed: 0 bytes in 0 blocks
==20479== Reachable blocks (those to which a pointer was found) are not shown.

Indirectly lost bytes are reduced",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2291,2019-10-03T19:46:51Z,,2020-07-13T17:54:08Z,OPEN,False,6160,2062,84,https://github.com/alpes214,[WIP] Issue 841 mem leak,147,[],https://github.com/sysown/proxysql/pull/2291,https://github.com/alpes214,4,https://github.com/sysown/proxysql/pull/2291#issuecomment-556380499,"Description:
This PR fixes memory leak described in issue #841
Testing:
Tested with valgrind.
Before fix vagrind reports:
==7131== LEAK SUMMARY:
==7131==    definitely lost: 16,183 bytes in 51 blocks
==7131==    indirectly lost: 137,203 bytes in 163 blocks
==7131==      possibly lost: 1,196,088 bytes in 291 blocks
==7131==    still reachable: 4,057,530 bytes in 12,447 blocks
==7131==                       of which reachable via heuristic:
==7131==                         length64           : 1,712,584 bytes in 5,268 blocks
==7131==         suppressed: 0 bytes in 0 blocks
==7131== Reachable blocks (those to which a pointer was found) are not shown.

After this fix valgrind reports
==20479== LEAK SUMMARY:
==20479==    definitely lost: 1,567 bytes in 31 blocks
==20479==    indirectly lost: 4,083 bytes in 99 blocks
==20479==      possibly lost: 1,196,088 bytes in 291 blocks
==20479==    still reachable: 3,467,679 bytes in 12,231 blocks
==20479==                       of which reachable via heuristic:
==20479==                         length64           : 1,712,584 bytes in 5,268 blocks
==20479==         suppressed: 0 bytes in 0 blocks
==20479== Reachable blocks (those to which a pointer was found) are not shown.

Indirectly lost bytes are reduced",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2291,2019-10-03T19:46:51Z,,2020-07-13T17:54:08Z,OPEN,False,6160,2062,84,https://github.com/alpes214,[WIP] Issue 841 mem leak,147,[],https://github.com/sysown/proxysql/pull/2291,https://github.com/alpes214,5,https://github.com/sysown/proxysql/pull/2291#issuecomment-570464563,"Description:
This PR fixes memory leak described in issue #841
Testing:
Tested with valgrind.
Before fix vagrind reports:
==7131== LEAK SUMMARY:
==7131==    definitely lost: 16,183 bytes in 51 blocks
==7131==    indirectly lost: 137,203 bytes in 163 blocks
==7131==      possibly lost: 1,196,088 bytes in 291 blocks
==7131==    still reachable: 4,057,530 bytes in 12,447 blocks
==7131==                       of which reachable via heuristic:
==7131==                         length64           : 1,712,584 bytes in 5,268 blocks
==7131==         suppressed: 0 bytes in 0 blocks
==7131== Reachable blocks (those to which a pointer was found) are not shown.

After this fix valgrind reports
==20479== LEAK SUMMARY:
==20479==    definitely lost: 1,567 bytes in 31 blocks
==20479==    indirectly lost: 4,083 bytes in 99 blocks
==20479==      possibly lost: 1,196,088 bytes in 291 blocks
==20479==    still reachable: 3,467,679 bytes in 12,231 blocks
==20479==                       of which reachable via heuristic:
==20479==                         length64           : 1,712,584 bytes in 5,268 blocks
==20479==         suppressed: 0 bytes in 0 blocks
==20479== Reachable blocks (those to which a pointer was found) are not shown.

Indirectly lost bytes are reduced",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2291,2019-10-03T19:46:51Z,,2020-07-13T17:54:08Z,OPEN,False,6160,2062,84,https://github.com/alpes214,[WIP] Issue 841 mem leak,147,[],https://github.com/sysown/proxysql/pull/2291,https://github.com/alpes214,6,https://github.com/sysown/proxysql/pull/2291#issuecomment-570490606,"Description:
This PR fixes memory leak described in issue #841
Testing:
Tested with valgrind.
Before fix vagrind reports:
==7131== LEAK SUMMARY:
==7131==    definitely lost: 16,183 bytes in 51 blocks
==7131==    indirectly lost: 137,203 bytes in 163 blocks
==7131==      possibly lost: 1,196,088 bytes in 291 blocks
==7131==    still reachable: 4,057,530 bytes in 12,447 blocks
==7131==                       of which reachable via heuristic:
==7131==                         length64           : 1,712,584 bytes in 5,268 blocks
==7131==         suppressed: 0 bytes in 0 blocks
==7131== Reachable blocks (those to which a pointer was found) are not shown.

After this fix valgrind reports
==20479== LEAK SUMMARY:
==20479==    definitely lost: 1,567 bytes in 31 blocks
==20479==    indirectly lost: 4,083 bytes in 99 blocks
==20479==      possibly lost: 1,196,088 bytes in 291 blocks
==20479==    still reachable: 3,467,679 bytes in 12,231 blocks
==20479==                       of which reachable via heuristic:
==20479==                         length64           : 1,712,584 bytes in 5,268 blocks
==20479==         suppressed: 0 bytes in 0 blocks
==20479== Reachable blocks (those to which a pointer was found) are not shown.

Indirectly lost bytes are reduced","Retested this PR with valgrind and drmemory. Proposed fix reduces memory leaks.
This PR can be related to issue #2467
Drmemory v2.0.9
~~Dr.M~~ ERRORS FOUND:
~~Dr.M~~       0 unique,     0 total unaddressable access(es)
~~Dr.M~~       0 unique,     0 total invalid heap argument(s)
~~Dr.M~~       0 unique,     0 total warning(s)
~~Dr.M~~      15 unique,    19 total, 106493 byte(s) of leak(s)
~~Dr.M~~      20 unique,    85 total, 370752 byte(s) of possible leak(s)
~~Dr.M~~ ERRORS IGNORED:
~~Dr.M~~     306 unique,   985 total, 435950 byte(s) of still-reachable allocation(s)
~~Dr.M~~          (re-run with ""-show_reachable"" for details)
~~Dr.M~~ Details: /home/val/workspace/drmemory/build/logs/DrMemory-proxysql.1204.000/results.txt

Drmemory issue_841_mem_leak
~~Dr.M~~ ERRORS FOUND:
~~Dr.M~~       0 unique,     0 total unaddressable access(es)
~~Dr.M~~       0 unique,     0 total invalid heap argument(s)
~~Dr.M~~       0 unique,     0 total warning(s)
~~Dr.M~~      13 unique,    17 total,  97253 byte(s) of leak(s)
~~Dr.M~~      19 unique,    84 total, 366384 byte(s) of possible leak(s)
~~Dr.M~~ ERRORS IGNORED:
~~Dr.M~~     306 unique,   985 total, 435950 byte(s) of still-reachable allocation(s)
~~Dr.M~~          (re-run with ""-show_reachable"" for details)
~~Dr.M~~ Details: /home/val/workspace/drmemory/build/logs/DrMemory-proxysql.1297.000/results.txt

Valgrind v2.0.9
==1084== LEAK SUMMARY:
==1084==    definitely lost: 2,740 bytes in 19 blocks
==1084==    indirectly lost: 105,209 bytes in 46 blocks
==1084==      possibly lost: 344,544 bytes in 79 blocks
==1084==    still reachable: 420,426 bytes in 1,671 blocks
==1084==                       of which reachable via heuristic:
==1084==                         length64           : 301,168 bytes in 626 blocks
==1084==         suppressed: 0 bytes in 0 blocks
==1084== Reachable blocks (those to which a pointer was found) are not shown.
==1084== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1084==
==1084== For counts of detected and suppressed errors, rerun with: -v
==1084== Use --track-origins=yes to see where uninitialised values come from
==1084== ERROR SUMMARY: 36 errors from 36 contexts (suppressed: 0 from 0)

Valgrind issue_841_mem_leak
==1000== LEAK SUMMARY:
==1000==    definitely lost: 1,820 bytes in 18 blocks
==1000==    indirectly lost: 97,049 bytes in 42 blocks
==1000==      possibly lost: 410,064 bytes in 94 blocks
==1000==    still reachable: 420,426 bytes in 1,671 blocks
==1000==                       of which reachable via heuristic:
==1000==                         length64           : 301,168 bytes in 626 blocks
==1000==         suppressed: 0 bytes in 0 blocks
==1000== Reachable blocks (those to which a pointer was found) are not shown.
==1000== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1000==
==1000== For counts of detected and suppressed errors, rerun with: -v
==1000== Use --track-origins=yes to see where uninitialised values come from
==1000== ERROR SUMMARY: 36 errors from 36 contexts (suppressed: 0 from 0)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2291,2019-10-03T19:46:51Z,,2020-07-13T17:54:08Z,OPEN,False,6160,2062,84,https://github.com/alpes214,[WIP] Issue 841 mem leak,147,[],https://github.com/sysown/proxysql/pull/2291,https://github.com/alpes214,7,https://github.com/sysown/proxysql/pull/2291#issuecomment-574144084,"Description:
This PR fixes memory leak described in issue #841
Testing:
Tested with valgrind.
Before fix vagrind reports:
==7131== LEAK SUMMARY:
==7131==    definitely lost: 16,183 bytes in 51 blocks
==7131==    indirectly lost: 137,203 bytes in 163 blocks
==7131==      possibly lost: 1,196,088 bytes in 291 blocks
==7131==    still reachable: 4,057,530 bytes in 12,447 blocks
==7131==                       of which reachable via heuristic:
==7131==                         length64           : 1,712,584 bytes in 5,268 blocks
==7131==         suppressed: 0 bytes in 0 blocks
==7131== Reachable blocks (those to which a pointer was found) are not shown.

After this fix valgrind reports
==20479== LEAK SUMMARY:
==20479==    definitely lost: 1,567 bytes in 31 blocks
==20479==    indirectly lost: 4,083 bytes in 99 blocks
==20479==      possibly lost: 1,196,088 bytes in 291 blocks
==20479==    still reachable: 3,467,679 bytes in 12,231 blocks
==20479==                       of which reachable via heuristic:
==20479==                         length64           : 1,712,584 bytes in 5,268 blocks
==20479==         suppressed: 0 bytes in 0 blocks
==20479== Reachable blocks (those to which a pointer was found) are not shown.

Indirectly lost bytes are reduced",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2291,2019-10-03T19:46:51Z,,2020-07-13T17:54:08Z,OPEN,False,6160,2062,84,https://github.com/alpes214,[WIP] Issue 841 mem leak,147,[],https://github.com/sysown/proxysql/pull/2291,https://github.com/pondix,8,https://github.com/sysown/proxysql/pull/2291#issuecomment-657702910,"Description:
This PR fixes memory leak described in issue #841
Testing:
Tested with valgrind.
Before fix vagrind reports:
==7131== LEAK SUMMARY:
==7131==    definitely lost: 16,183 bytes in 51 blocks
==7131==    indirectly lost: 137,203 bytes in 163 blocks
==7131==      possibly lost: 1,196,088 bytes in 291 blocks
==7131==    still reachable: 4,057,530 bytes in 12,447 blocks
==7131==                       of which reachable via heuristic:
==7131==                         length64           : 1,712,584 bytes in 5,268 blocks
==7131==         suppressed: 0 bytes in 0 blocks
==7131== Reachable blocks (those to which a pointer was found) are not shown.

After this fix valgrind reports
==20479== LEAK SUMMARY:
==20479==    definitely lost: 1,567 bytes in 31 blocks
==20479==    indirectly lost: 4,083 bytes in 99 blocks
==20479==      possibly lost: 1,196,088 bytes in 291 blocks
==20479==    still reachable: 3,467,679 bytes in 12,231 blocks
==20479==                       of which reachable via heuristic:
==20479==                         length64           : 1,712,584 bytes in 5,268 blocks
==20479==         suppressed: 0 bytes in 0 blocks
==20479== Reachable blocks (those to which a pointer was found) are not shown.

Indirectly lost bytes are reduced",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2297,2019-10-08T18:31:10Z,2022-05-05T19:41:49Z,2022-05-05T19:41:51Z,CLOSED,False,1,0,1,https://github.com/markgergely,install signal handlers for the foreground process,1,[],https://github.com/sysown/proxysql/pull/2297,https://github.com/markgergely,1,https://github.com/sysown/proxysql/pull/2297,"When proxysql is running in the foreground, the signal handlers are not getting installed. This issue makes it difficult, to run proxysql in a k8s/docker based environment, as it prevents proxysql to shut down gracefully. When proxysql runs in a docker container, it gets PID 1, thus the OS default signal handlers are not getting installed, makes proxysql to ignore SIGTERM.
This change installs the same signal handlers being used for background operation to the foreground process.","When proxysql is running in the foreground, the signal handlers are not getting installed. This issue makes it difficult, to run proxysql in a k8s/docker based environment, as it prevents proxysql to shut down gracefully. When proxysql runs in a docker container, it gets PID 1, thus the OS default signal handlers are not getting installed, makes proxysql to ignore SIGTERM.
This change installs the same signal handlers being used for background operation to the foreground process.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2297,2019-10-08T18:31:10Z,2022-05-05T19:41:49Z,2022-05-05T19:41:51Z,CLOSED,False,1,0,1,https://github.com/markgergely,install signal handlers for the foreground process,1,[],https://github.com/sysown/proxysql/pull/2297,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2297#issuecomment-539691524,"When proxysql is running in the foreground, the signal handlers are not getting installed. This issue makes it difficult, to run proxysql in a k8s/docker based environment, as it prevents proxysql to shut down gracefully. When proxysql runs in a docker container, it gets PID 1, thus the OS default signal handlers are not getting installed, makes proxysql to ignore SIGTERM.
This change installs the same signal handlers being used for background operation to the foreground process.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2297,2019-10-08T18:31:10Z,2022-05-05T19:41:49Z,2022-05-05T19:41:51Z,CLOSED,False,1,0,1,https://github.com/markgergely,install signal handlers for the foreground process,1,[],https://github.com/sysown/proxysql/pull/2297,https://github.com/nvtkaszpir,3,https://github.com/sysown/proxysql/pull/2297#issuecomment-590880659,"When proxysql is running in the foreground, the signal handlers are not getting installed. This issue makes it difficult, to run proxysql in a k8s/docker based environment, as it prevents proxysql to shut down gracefully. When proxysql runs in a docker container, it gets PID 1, thus the OS default signal handlers are not getting installed, makes proxysql to ignore SIGTERM.
This change installs the same signal handlers being used for background operation to the foreground process.",Issue #2560,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2297,2019-10-08T18:31:10Z,2022-05-05T19:41:49Z,2022-05-05T19:41:51Z,CLOSED,False,1,0,1,https://github.com/markgergely,install signal handlers for the foreground process,1,[],https://github.com/sysown/proxysql/pull/2297,https://github.com/w32-blaster,4,https://github.com/sysown/proxysql/pull/2297#issuecomment-1118948924,"When proxysql is running in the foreground, the signal handlers are not getting installed. This issue makes it difficult, to run proxysql in a k8s/docker based environment, as it prevents proxysql to shut down gracefully. When proxysql runs in a docker container, it gets PID 1, thus the OS default signal handlers are not getting installed, makes proxysql to ignore SIGTERM.
This change installs the same signal handlers being used for background operation to the foreground process.",any chance this gets merged?,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2297,2019-10-08T18:31:10Z,2022-05-05T19:41:49Z,2022-05-05T19:41:51Z,CLOSED,False,1,0,1,https://github.com/markgergely,install signal handlers for the foreground process,1,[],https://github.com/sysown/proxysql/pull/2297,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/2297#issuecomment-1118979629,"When proxysql is running in the foreground, the signal handlers are not getting installed. This issue makes it difficult, to run proxysql in a k8s/docker based environment, as it prevents proxysql to shut down gracefully. When proxysql runs in a docker container, it gets PID 1, thus the OS default signal handlers are not getting installed, makes proxysql to ignore SIGTERM.
This change installs the same signal handlers being used for background operation to the foreground process.","This was actually done in commit e21998f , PR #2636 , available since 2.0.11",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2308,2019-10-13T12:52:30Z,2019-10-14T00:03:06Z,2019-10-14T00:03:06Z,CLOSED,False,989,6,8,https://github.com/renecannao,V2.0.8 fast routing,8,[],https://github.com/sysown/proxysql/pull/2308,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2308,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2308,2019-10-13T12:52:30Z,2019-10-14T00:03:06Z,2019-10-14T00:03:06Z,CLOSED,False,989,6,8,https://github.com/renecannao,V2.0.8 fast routing,8,[],https://github.com/sysown/proxysql/pull/2308,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2308#issuecomment-541418562,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2309,2019-10-13T12:52:42Z,2019-10-15T17:03:19Z,2019-10-28T23:57:05Z,MERGED,True,969,2,5,https://github.com/renecannao,V2.0.8 fast routing,3,[],https://github.com/sysown/proxysql/pull/2309,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2309,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2309,2019-10-13T12:52:42Z,2019-10-15T17:03:19Z,2019-10-28T23:57:05Z,MERGED,True,969,2,5,https://github.com/renecannao,V2.0.8 fast routing,3,[],https://github.com/sysown/proxysql/pull/2309,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2309#issuecomment-541418543,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2309,2019-10-13T12:52:42Z,2019-10-15T17:03:19Z,2019-10-28T23:57:05Z,MERGED,True,969,2,5,https://github.com/renecannao,V2.0.8 fast routing,3,[],https://github.com/sysown/proxysql/pull/2309,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/2309#issuecomment-541472266,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2309,2019-10-13T12:52:42Z,2019-10-15T17:03:19Z,2019-10-28T23:57:05Z,MERGED,True,969,2,5,https://github.com/renecannao,V2.0.8 fast routing,3,[],https://github.com/sysown/proxysql/pull/2309,https://github.com/pondix,4,https://github.com/sysown/proxysql/pull/2309#issuecomment-541527878,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2310,2019-10-14T03:32:45Z,2019-10-14T03:36:18Z,2019-10-28T23:55:53Z,MERGED,True,9,0,1,https://github.com/renecannao,Further enhancement of parsing comments,1,[],https://github.com/sysown/proxysql/pull/2310,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2310,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2315,2019-10-15T08:42:22Z,2019-10-29T10:38:11Z,2019-10-29T10:38:11Z,CLOSED,False,171,57,9,https://github.com/alpes214,SET CHARACTER SET implementation,2,[],https://github.com/sysown/proxysql/pull/2315,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2315,"Description: Related to issue #1692 This PR implements SET CHARACTER SET statement along with SET NAMES
Testing:
$ mysql -uutest -pptest -h127.0.0.1 -P6033  --default-character-set=utf8

mysql> drop database if exists t1;
Query OK, 0 rows affected (0.06 sec)

mysql> create database t1 charset utf8;
Query OK, 1 row affected (0.07 sec)

mysql> use t1;
Database changed

mysql> show variables like 'character%';
+--------------------------+----------------------------+
| Variable_name            | Value                      |
+--------------------------+----------------------------+
| character_set_client     | utf8                       |
| character_set_connection | utf8                       |
| character_set_database   | utf8                       |
| character_set_filesystem | binary                     |
| character_set_results    | utf8                       |
| character_set_server     | latin1                     |
| character_set_system     | utf8                       |
| character_sets_dir       | /usr/share/mysql/charsets/ |
+--------------------------+----------------------------+
8 rows in set (0.00 sec)

mysql> set names latin1;
Query OK, 0 rows affected (0.00 sec)

mysql> show variables like 'character%';
+--------------------------+----------------------------+
| Variable_name            | Value                      |
+--------------------------+----------------------------+
| character_set_client     | latin1                     |
| character_set_connection | latin1                     |
| character_set_database   | utf8                       |
| character_set_filesystem | binary                     |
| character_set_results    | latin1                     |
| character_set_server     | latin1                     |
| character_set_system     | utf8                       |
| character_sets_dir       | /usr/share/mysql/charsets/ |
+--------------------------+----------------------------+
8 rows in set (0.01 sec)

mysql> set character set latin1;
Query OK, 0 rows affected (0.00 sec)

mysql> show variables like 'character%';
+--------------------------+----------------------------+
| Variable_name            | Value                      |
+--------------------------+----------------------------+
| character_set_client     | latin1                     |
| character_set_connection | utf8                       |
| character_set_database   | utf8                       |
| character_set_filesystem | binary                     |
| character_set_results    | latin1                     |
| character_set_server     | latin1                     |
| character_set_system     | utf8                       |
| character_sets_dir       | /usr/share/mysql/charsets/ |
+--------------------------+----------------------------+
8 rows in set (0.00 sec)

The last statement set character set latin1 does not change character_set_client and character_set_results but the character_set_connection is set to the value of the character_set_database. This is expected.","Description: Related to issue #1692 This PR implements SET CHARACTER SET statement along with SET NAMES
Testing:
$ mysql -uutest -pptest -h127.0.0.1 -P6033  --default-character-set=utf8

mysql> drop database if exists t1;
Query OK, 0 rows affected (0.06 sec)

mysql> create database t1 charset utf8;
Query OK, 1 row affected (0.07 sec)

mysql> use t1;
Database changed

mysql> show variables like 'character%';
+--------------------------+----------------------------+
| Variable_name            | Value                      |
+--------------------------+----------------------------+
| character_set_client     | utf8                       |
| character_set_connection | utf8                       |
| character_set_database   | utf8                       |
| character_set_filesystem | binary                     |
| character_set_results    | utf8                       |
| character_set_server     | latin1                     |
| character_set_system     | utf8                       |
| character_sets_dir       | /usr/share/mysql/charsets/ |
+--------------------------+----------------------------+
8 rows in set (0.00 sec)

mysql> set names latin1;
Query OK, 0 rows affected (0.00 sec)

mysql> show variables like 'character%';
+--------------------------+----------------------------+
| Variable_name            | Value                      |
+--------------------------+----------------------------+
| character_set_client     | latin1                     |
| character_set_connection | latin1                     |
| character_set_database   | utf8                       |
| character_set_filesystem | binary                     |
| character_set_results    | latin1                     |
| character_set_server     | latin1                     |
| character_set_system     | utf8                       |
| character_sets_dir       | /usr/share/mysql/charsets/ |
+--------------------------+----------------------------+
8 rows in set (0.01 sec)

mysql> set character set latin1;
Query OK, 0 rows affected (0.00 sec)

mysql> show variables like 'character%';
+--------------------------+----------------------------+
| Variable_name            | Value                      |
+--------------------------+----------------------------+
| character_set_client     | latin1                     |
| character_set_connection | utf8                       |
| character_set_database   | utf8                       |
| character_set_filesystem | binary                     |
| character_set_results    | latin1                     |
| character_set_server     | latin1                     |
| character_set_system     | utf8                       |
| character_sets_dir       | /usr/share/mysql/charsets/ |
+--------------------------+----------------------------+
8 rows in set (0.00 sec)

The last statement set character set latin1 does not change character_set_client and character_set_results but the character_set_connection is set to the value of the character_set_database. This is expected.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2315,2019-10-15T08:42:22Z,2019-10-29T10:38:11Z,2019-10-29T10:38:11Z,CLOSED,False,171,57,9,https://github.com/alpes214,SET CHARACTER SET implementation,2,[],https://github.com/sysown/proxysql/pull/2315,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2315#issuecomment-547358369,"Description: Related to issue #1692 This PR implements SET CHARACTER SET statement along with SET NAMES
Testing:
$ mysql -uutest -pptest -h127.0.0.1 -P6033  --default-character-set=utf8

mysql> drop database if exists t1;
Query OK, 0 rows affected (0.06 sec)

mysql> create database t1 charset utf8;
Query OK, 1 row affected (0.07 sec)

mysql> use t1;
Database changed

mysql> show variables like 'character%';
+--------------------------+----------------------------+
| Variable_name            | Value                      |
+--------------------------+----------------------------+
| character_set_client     | utf8                       |
| character_set_connection | utf8                       |
| character_set_database   | utf8                       |
| character_set_filesystem | binary                     |
| character_set_results    | utf8                       |
| character_set_server     | latin1                     |
| character_set_system     | utf8                       |
| character_sets_dir       | /usr/share/mysql/charsets/ |
+--------------------------+----------------------------+
8 rows in set (0.00 sec)

mysql> set names latin1;
Query OK, 0 rows affected (0.00 sec)

mysql> show variables like 'character%';
+--------------------------+----------------------------+
| Variable_name            | Value                      |
+--------------------------+----------------------------+
| character_set_client     | latin1                     |
| character_set_connection | latin1                     |
| character_set_database   | utf8                       |
| character_set_filesystem | binary                     |
| character_set_results    | latin1                     |
| character_set_server     | latin1                     |
| character_set_system     | utf8                       |
| character_sets_dir       | /usr/share/mysql/charsets/ |
+--------------------------+----------------------------+
8 rows in set (0.01 sec)

mysql> set character set latin1;
Query OK, 0 rows affected (0.00 sec)

mysql> show variables like 'character%';
+--------------------------+----------------------------+
| Variable_name            | Value                      |
+--------------------------+----------------------------+
| character_set_client     | latin1                     |
| character_set_connection | utf8                       |
| character_set_database   | utf8                       |
| character_set_filesystem | binary                     |
| character_set_results    | latin1                     |
| character_set_server     | latin1                     |
| character_set_system     | utf8                       |
| character_sets_dir       | /usr/share/mysql/charsets/ |
+--------------------------+----------------------------+
8 rows in set (0.00 sec)

The last statement set character set latin1 does not change character_set_client and character_set_results but the character_set_connection is set to the value of the character_set_database. This is expected.",Closing this,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2319,2019-10-16T13:08:03Z,2019-10-18T10:52:00Z,2019-10-28T23:54:49Z,MERGED,True,7,0,1,https://github.com/renecannao,"If a connection is reset, assume autocommit=1",1,[],https://github.com/sysown/proxysql/pull/2319,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2319,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2322,2019-10-18T04:00:26Z,2019-10-18T10:51:26Z,2020-03-11T15:38:11Z,MERGED,True,26,2,3,https://github.com/renecannao,Add variable mysql-log_unhealthy_connections,1,[],https://github.com/sysown/proxysql/pull/2322,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2322,"Added new variable mysql-log_unhealthy_connections.
Enabled by default.
If disabled, warnings Closing unhealthy client connection are suppressed.","Added new variable mysql-log_unhealthy_connections.
Enabled by default.
If disabled, warnings Closing unhealthy client connection are suppressed.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2322,2019-10-18T04:00:26Z,2019-10-18T10:51:26Z,2020-03-11T15:38:11Z,MERGED,True,26,2,3,https://github.com/renecannao,Add variable mysql-log_unhealthy_connections,1,[],https://github.com/sysown/proxysql/pull/2322,https://github.com/srikiraju,2,https://github.com/sysown/proxysql/pull/2322#issuecomment-545204340,"Added new variable mysql-log_unhealthy_connections.
Enabled by default.
If disabled, warnings Closing unhealthy client connection are suppressed.",@renecannao we're seeing a lot of this error on our 2.0.7 cluster. why does it happen?,True,{'THUMBS_UP': ['https://github.com/hopewise']}
sysown/proxysql,https://github.com/sysown/proxysql,2322,2019-10-18T04:00:26Z,2019-10-18T10:51:26Z,2020-03-11T15:38:11Z,MERGED,True,26,2,3,https://github.com/renecannao,Add variable mysql-log_unhealthy_connections,1,[],https://github.com/sysown/proxysql/pull/2322,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2322#issuecomment-545206187,"Added new variable mysql-log_unhealthy_connections.
Enabled by default.
If disabled, warnings Closing unhealthy client connection are suppressed.","@srikiraju : this is a client problem.
Common cases: client disconnecting not gracefully, a load balancer with small timeout, a not authenticated client (for example a monitor tool that only checks if the TCP port is open).
The new warning added in 2.0.7 should help identifying misbehaving clients.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2322,2019-10-18T04:00:26Z,2019-10-18T10:51:26Z,2020-03-11T15:38:11Z,MERGED,True,26,2,3,https://github.com/renecannao,Add variable mysql-log_unhealthy_connections,1,[],https://github.com/sysown/proxysql/pull/2322,https://github.com/hopewise,4,https://github.com/sysown/proxysql/pull/2322#issuecomment-597705395,"Added new variable mysql-log_unhealthy_connections.
Enabled by default.
If disabled, warnings Closing unhealthy client connection are suppressed.",@renecannao what that  new warning added in 2.0.7 ? how can we access it please?,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2329,2019-10-18T19:12:47Z,2019-10-28T13:04:14Z,2019-10-28T13:04:14Z,MERGED,True,54,0,4,https://github.com/alpes214,handle unknown character set,2,[],https://github.com/sysown/proxysql/pull/2329,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2329,"Description:
Mysql client version 8.0 uses utf8mb4_0900_ai_ci by default. When it connects to the MySQL server <= 5.7 which does not have utf8mb4, proxysql handles unknown character set with one of the three possible cases:

disconnect client;
replace with default character set and log this case;
replace with default character set silently (without logging);

The case is configured with new variable: mysql-handle_unknown_charset
Testing:
Manually tested all three cases with mysql cli 8.0.17 and mysql server 5.7","Description:
Mysql client version 8.0 uses utf8mb4_0900_ai_ci by default. When it connects to the MySQL server <= 5.7 which does not have utf8mb4, proxysql handles unknown character set with one of the three possible cases:

disconnect client;
replace with default character set and log this case;
replace with default character set silently (without logging);

The case is configured with new variable: mysql-handle_unknown_charset
Testing:
Manually tested all three cases with mysql cli 8.0.17 and mysql server 5.7",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2332,2019-10-19T19:24:21Z,2019-10-23T00:44:01Z,2019-10-23T01:16:30Z,MERGED,True,822,816,7,https://github.com/alpes214,First commit for sqlite3 assertions,3,[],https://github.com/sysown/proxysql/pull/2332,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2332,"Description:
Initial commit of the sqlite3 assertion. Should be changed in all places.
Testing:
Used make testgrouprep with changes and without changes and compared logs.","Description:
Initial commit of the sqlite3 assertion. Should be changed in all places.
Testing:
Used make testgrouprep with changes and without changes and compared logs.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2332,2019-10-19T19:24:21Z,2019-10-23T00:44:01Z,2019-10-23T01:16:30Z,MERGED,True,822,816,7,https://github.com/alpes214,First commit for sqlite3 assertions,3,[],https://github.com/sysown/proxysql/pull/2332,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2332#issuecomment-545220600,"Description:
Initial commit of the sqlite3 assertion. Should be changed in all places.
Testing:
Used make testgrouprep with changes and without changes and compared logs.","For reference, this is how an assertion will look like:
2019-10-23 12:13:42 ProxySQL_Admin.cpp:6235:stats___mysql_processlist(): [ERROR] SQLite3 error with return corde 1. Error message: table stats_mysql_processlist has 16 columns but 17 values were supplied. Shutting down.

This error was induced introducing a typo in the code.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2333,2019-10-19T19:39:38Z,2019-10-19T23:02:59Z,2019-10-19T23:02:59Z,MERGED,True,4,3,1,https://github.com/alpes214,adding prerequisites to compile lib .c/.cpp files,1,[],https://github.com/sysown/proxysql/pull/2333,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2333,"Adding prerequisites for making .c/.cpp files in lib
Testing:

make clean && make
saved header file and then make","Adding prerequisites for making .c/.cpp files in lib
Testing:

make clean && make
saved header file and then make",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2335,2019-10-21T14:36:43Z,2019-10-29T10:37:54Z,2020-09-17T09:59:52Z,MERGED,True,168,57,9,https://github.com/renecannao,SET CHARACTER SET implementation 2,6,[],https://github.com/sysown/proxysql/pull/2335,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2335,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2335,2019-10-21T14:36:43Z,2019-10-29T10:37:54Z,2020-09-17T09:59:52Z,MERGED,True,168,57,9,https://github.com/renecannao,SET CHARACTER SET implementation 2,6,[],https://github.com/sysown/proxysql/pull/2335,https://github.com/alpes214,2,https://github.com/sysown/proxysql/pull/2335#issuecomment-544634571,,"@renecannao , I have tested these changes with same tests as for PR #2315. All tests are PASSED.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2335,2019-10-21T14:36:43Z,2019-10-29T10:37:54Z,2020-09-17T09:59:52Z,MERGED,True,168,57,9,https://github.com/renecannao,SET CHARACTER SET implementation 2,6,[],https://github.com/sysown/proxysql/pull/2335,https://github.com/alpes214,3,https://github.com/sysown/proxysql/pull/2335#issuecomment-547354741,,"@renecannao , after resolving conflicts tests are PASSED.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2336,2019-10-21T21:18:23Z,2019-10-27T09:01:06Z,2019-10-31T17:21:25Z,MERGED,True,1,1,1,https://github.com/wjordan,Filter deleted Aurora replicas from auto-discovery,1,[],https://github.com/sysown/proxysql/pull/2336,https://github.com/wjordan,1,https://github.com/sysown/proxysql/pull/2336,"Aurora instances that have been deleted still exist in the INFORMATION_SCHEMA.REPLICA_HOST_STATUS table, but with a REPLICA_LAG_IN_MILLISECONDS set to 900000. This causes the current autodiscovery query to continue to add entries to runtime_mysql_servers for deleted instances, adding unnecessary connection-failure errors to the log as it continues to try to connect to an instance that no longer exists.
To allow auto discovery to remove these deleted instances from the server list, this PR adds AND REPLICA_LAG_IN_MILLISECONDS != 900000 to the monitor query, which removes it from the query results.
I haven't tested this code change through the existing Aurora automated testing, but I have manually run the new query on an existing Aurora cluster (version 5.7.mysql_aurora.2.04.6) with a deleted replica instance to verify the correct results:
Old query:
mysql> SELECT SERVER_ID, SESSION_ID, LAST_UPDATE_TIMESTAMP, REPLICA_LAG_IN_MILLISECONDS, CPU FROM INFORMATION_SCHEMA.REPLICA_HOST_STATUS WHERE REPLICA_LAG_IN_MILLISECONDS > 0 OR SESSION_ID = 'MASTER_SESSION_ID' ORDER BY SERVER_ID;
+----------------+--------------------------------------+----------------------------+-----------------------------+--------------------+
| SERVER_ID      | SESSION_ID                           | LAST_UPDATE_TIMESTAMP      | REPLICA_LAG_IN_MILLISECONDS | CPU                |
+----------------+--------------------------------------+----------------------------+-----------------------------+--------------------+
| staging-0      | MASTER_SESSION_ID                    | 2019-10-21 21:12:31.836369 |                           0 |                0.5 |
| staging-1      | [id]                                 | 2019-10-21 21:12:31.855021 |          19.878999710083008 | 1.8181818723678589 |
| staging-master | [id]                                 | 2019-10-21 19:39:56.000000 |                      900000 | 12.087912559509277 |
+----------------+--------------------------------------+----------------------------+-----------------------------+--------------------+
3 rows in set (0.00 sec)


New query:
mysql> SELECT SERVER_ID, SESSION_ID, LAST_UPDATE_TIMESTAMP, REPLICA_LAG_IN_MILLISECONDS, CPU FROM INFORMATION_SCHEMA.REPLICA_HOST_STATUS WHERE (REPLICA_LAG_IN_MILLISECONDS > 0 AND REPLICA_LAG_IN_MILLISECONDS != 900000) OR SESSION_ID = 'MASTER_SESSION_ID' ORDER BY SERVER_ID;
+-----------+--------------------------------------+----------------------------+-----------------------------+--------------------+
| SERVER_ID | SESSION_ID                           | LAST_UPDATE_TIMESTAMP      | REPLICA_LAG_IN_MILLISECONDS | CPU                |
+-----------+--------------------------------------+----------------------------+-----------------------------+--------------------+
| staging-0 | MASTER_SESSION_ID                    | 2019-10-21 21:14:00.018776 |                           0 | 2.6315789222717285 |
| staging-1 | [id]                                 | 2019-10-21 21:13:59.197106 |          19.409000396728516 |  4.142011642456055 |
+-----------+--------------------------------------+----------------------------+-----------------------------+--------------------+
2 rows in set (0.00 sec)","Aurora instances that have been deleted still exist in the INFORMATION_SCHEMA.REPLICA_HOST_STATUS table, but with a REPLICA_LAG_IN_MILLISECONDS set to 900000. This causes the current autodiscovery query to continue to add entries to runtime_mysql_servers for deleted instances, adding unnecessary connection-failure errors to the log as it continues to try to connect to an instance that no longer exists.
To allow auto discovery to remove these deleted instances from the server list, this PR adds AND REPLICA_LAG_IN_MILLISECONDS != 900000 to the monitor query, which removes it from the query results.
I haven't tested this code change through the existing Aurora automated testing, but I have manually run the new query on an existing Aurora cluster (version 5.7.mysql_aurora.2.04.6) with a deleted replica instance to verify the correct results:
Old query:
mysql> SELECT SERVER_ID, SESSION_ID, LAST_UPDATE_TIMESTAMP, REPLICA_LAG_IN_MILLISECONDS, CPU FROM INFORMATION_SCHEMA.REPLICA_HOST_STATUS WHERE REPLICA_LAG_IN_MILLISECONDS > 0 OR SESSION_ID = 'MASTER_SESSION_ID' ORDER BY SERVER_ID;
+----------------+--------------------------------------+----------------------------+-----------------------------+--------------------+
| SERVER_ID      | SESSION_ID                           | LAST_UPDATE_TIMESTAMP      | REPLICA_LAG_IN_MILLISECONDS | CPU                |
+----------------+--------------------------------------+----------------------------+-----------------------------+--------------------+
| staging-0      | MASTER_SESSION_ID                    | 2019-10-21 21:12:31.836369 |                           0 |                0.5 |
| staging-1      | [id]                                 | 2019-10-21 21:12:31.855021 |          19.878999710083008 | 1.8181818723678589 |
| staging-master | [id]                                 | 2019-10-21 19:39:56.000000 |                      900000 | 12.087912559509277 |
+----------------+--------------------------------------+----------------------------+-----------------------------+--------------------+
3 rows in set (0.00 sec)


New query:
mysql> SELECT SERVER_ID, SESSION_ID, LAST_UPDATE_TIMESTAMP, REPLICA_LAG_IN_MILLISECONDS, CPU FROM INFORMATION_SCHEMA.REPLICA_HOST_STATUS WHERE (REPLICA_LAG_IN_MILLISECONDS > 0 AND REPLICA_LAG_IN_MILLISECONDS != 900000) OR SESSION_ID = 'MASTER_SESSION_ID' ORDER BY SERVER_ID;
+-----------+--------------------------------------+----------------------------+-----------------------------+--------------------+
| SERVER_ID | SESSION_ID                           | LAST_UPDATE_TIMESTAMP      | REPLICA_LAG_IN_MILLISECONDS | CPU                |
+-----------+--------------------------------------+----------------------------+-----------------------------+--------------------+
| staging-0 | MASTER_SESSION_ID                    | 2019-10-21 21:14:00.018776 |                           0 | 2.6315789222717285 |
| staging-1 | [id]                                 | 2019-10-21 21:13:59.197106 |          19.409000396728516 |  4.142011642456055 |
+-----------+--------------------------------------+----------------------------+-----------------------------+--------------------+
2 rows in set (0.00 sec)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2336,2019-10-21T21:18:23Z,2019-10-27T09:01:06Z,2019-10-31T17:21:25Z,MERGED,True,1,1,1,https://github.com/wjordan,Filter deleted Aurora replicas from auto-discovery,1,[],https://github.com/sysown/proxysql/pull/2336,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2336#issuecomment-544713387,"Aurora instances that have been deleted still exist in the INFORMATION_SCHEMA.REPLICA_HOST_STATUS table, but with a REPLICA_LAG_IN_MILLISECONDS set to 900000. This causes the current autodiscovery query to continue to add entries to runtime_mysql_servers for deleted instances, adding unnecessary connection-failure errors to the log as it continues to try to connect to an instance that no longer exists.
To allow auto discovery to remove these deleted instances from the server list, this PR adds AND REPLICA_LAG_IN_MILLISECONDS != 900000 to the monitor query, which removes it from the query results.
I haven't tested this code change through the existing Aurora automated testing, but I have manually run the new query on an existing Aurora cluster (version 5.7.mysql_aurora.2.04.6) with a deleted replica instance to verify the correct results:
Old query:
mysql> SELECT SERVER_ID, SESSION_ID, LAST_UPDATE_TIMESTAMP, REPLICA_LAG_IN_MILLISECONDS, CPU FROM INFORMATION_SCHEMA.REPLICA_HOST_STATUS WHERE REPLICA_LAG_IN_MILLISECONDS > 0 OR SESSION_ID = 'MASTER_SESSION_ID' ORDER BY SERVER_ID;
+----------------+--------------------------------------+----------------------------+-----------------------------+--------------------+
| SERVER_ID      | SESSION_ID                           | LAST_UPDATE_TIMESTAMP      | REPLICA_LAG_IN_MILLISECONDS | CPU                |
+----------------+--------------------------------------+----------------------------+-----------------------------+--------------------+
| staging-0      | MASTER_SESSION_ID                    | 2019-10-21 21:12:31.836369 |                           0 |                0.5 |
| staging-1      | [id]                                 | 2019-10-21 21:12:31.855021 |          19.878999710083008 | 1.8181818723678589 |
| staging-master | [id]                                 | 2019-10-21 19:39:56.000000 |                      900000 | 12.087912559509277 |
+----------------+--------------------------------------+----------------------------+-----------------------------+--------------------+
3 rows in set (0.00 sec)


New query:
mysql> SELECT SERVER_ID, SESSION_ID, LAST_UPDATE_TIMESTAMP, REPLICA_LAG_IN_MILLISECONDS, CPU FROM INFORMATION_SCHEMA.REPLICA_HOST_STATUS WHERE (REPLICA_LAG_IN_MILLISECONDS > 0 AND REPLICA_LAG_IN_MILLISECONDS != 900000) OR SESSION_ID = 'MASTER_SESSION_ID' ORDER BY SERVER_ID;
+-----------+--------------------------------------+----------------------------+-----------------------------+--------------------+
| SERVER_ID | SESSION_ID                           | LAST_UPDATE_TIMESTAMP      | REPLICA_LAG_IN_MILLISECONDS | CPU                |
+-----------+--------------------------------------+----------------------------+-----------------------------+--------------------+
| staging-0 | MASTER_SESSION_ID                    | 2019-10-21 21:14:00.018776 |                           0 | 2.6315789222717285 |
| staging-1 | [id]                                 | 2019-10-21 21:13:59.197106 |          19.409000396728516 |  4.142011642456055 |
+-----------+--------------------------------------+----------------------------+-----------------------------+--------------------+
2 rows in set (0.00 sec)",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2336,2019-10-21T21:18:23Z,2019-10-27T09:01:06Z,2019-10-31T17:21:25Z,MERGED,True,1,1,1,https://github.com/wjordan,Filter deleted Aurora replicas from auto-discovery,1,[],https://github.com/sysown/proxysql/pull/2336,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2336#issuecomment-545245520,"Aurora instances that have been deleted still exist in the INFORMATION_SCHEMA.REPLICA_HOST_STATUS table, but with a REPLICA_LAG_IN_MILLISECONDS set to 900000. This causes the current autodiscovery query to continue to add entries to runtime_mysql_servers for deleted instances, adding unnecessary connection-failure errors to the log as it continues to try to connect to an instance that no longer exists.
To allow auto discovery to remove these deleted instances from the server list, this PR adds AND REPLICA_LAG_IN_MILLISECONDS != 900000 to the monitor query, which removes it from the query results.
I haven't tested this code change through the existing Aurora automated testing, but I have manually run the new query on an existing Aurora cluster (version 5.7.mysql_aurora.2.04.6) with a deleted replica instance to verify the correct results:
Old query:
mysql> SELECT SERVER_ID, SESSION_ID, LAST_UPDATE_TIMESTAMP, REPLICA_LAG_IN_MILLISECONDS, CPU FROM INFORMATION_SCHEMA.REPLICA_HOST_STATUS WHERE REPLICA_LAG_IN_MILLISECONDS > 0 OR SESSION_ID = 'MASTER_SESSION_ID' ORDER BY SERVER_ID;
+----------------+--------------------------------------+----------------------------+-----------------------------+--------------------+
| SERVER_ID      | SESSION_ID                           | LAST_UPDATE_TIMESTAMP      | REPLICA_LAG_IN_MILLISECONDS | CPU                |
+----------------+--------------------------------------+----------------------------+-----------------------------+--------------------+
| staging-0      | MASTER_SESSION_ID                    | 2019-10-21 21:12:31.836369 |                           0 |                0.5 |
| staging-1      | [id]                                 | 2019-10-21 21:12:31.855021 |          19.878999710083008 | 1.8181818723678589 |
| staging-master | [id]                                 | 2019-10-21 19:39:56.000000 |                      900000 | 12.087912559509277 |
+----------------+--------------------------------------+----------------------------+-----------------------------+--------------------+
3 rows in set (0.00 sec)


New query:
mysql> SELECT SERVER_ID, SESSION_ID, LAST_UPDATE_TIMESTAMP, REPLICA_LAG_IN_MILLISECONDS, CPU FROM INFORMATION_SCHEMA.REPLICA_HOST_STATUS WHERE (REPLICA_LAG_IN_MILLISECONDS > 0 AND REPLICA_LAG_IN_MILLISECONDS != 900000) OR SESSION_ID = 'MASTER_SESSION_ID' ORDER BY SERVER_ID;
+-----------+--------------------------------------+----------------------------+-----------------------------+--------------------+
| SERVER_ID | SESSION_ID                           | LAST_UPDATE_TIMESTAMP      | REPLICA_LAG_IN_MILLISECONDS | CPU                |
+-----------+--------------------------------------+----------------------------+-----------------------------+--------------------+
| staging-0 | MASTER_SESSION_ID                    | 2019-10-21 21:14:00.018776 |                           0 | 2.6315789222717285 |
| staging-1 | [id]                                 | 2019-10-21 21:13:59.197106 |          19.409000396728516 |  4.142011642456055 |
+-----------+--------------------------------------+----------------------------+-----------------------------+--------------------+
2 rows in set (0.00 sec)","Hi @wjordan .
Thank you for the PR!
I couldn't find this detail in AWS documentation:

Aurora instances that have been deleted still exist in the INFORMATION_SCHEMA.REPLICA_HOST_STATUS table, but with a REPLICA_LAG_IN_MILLISECONDS set to 900000.

Instead of filtering the specific value 900000, does it sound reasonable to filter any value greater than a specific one?
Because mysql_aws_aurora_hostgroups has:
max_lag_ms INT NOT NULL CHECK (max_lag_ms>= 10 AND max_lag_ms <= 600000) DEFAULT 600000

instead of adding AND REPLICA_LAG_IN_MILLISECONDS != 900000 we could add AND REPLICA_LAG_IN_MILLISECONDS <= 600000.
Thoughts?",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2336,2019-10-21T21:18:23Z,2019-10-27T09:01:06Z,2019-10-31T17:21:25Z,MERGED,True,1,1,1,https://github.com/wjordan,Filter deleted Aurora replicas from auto-discovery,1,[],https://github.com/sysown/proxysql/pull/2336,https://github.com/wjordan,4,https://github.com/sysown/proxysql/pull/2336#issuecomment-545624048,"Aurora instances that have been deleted still exist in the INFORMATION_SCHEMA.REPLICA_HOST_STATUS table, but with a REPLICA_LAG_IN_MILLISECONDS set to 900000. This causes the current autodiscovery query to continue to add entries to runtime_mysql_servers for deleted instances, adding unnecessary connection-failure errors to the log as it continues to try to connect to an instance that no longer exists.
To allow auto discovery to remove these deleted instances from the server list, this PR adds AND REPLICA_LAG_IN_MILLISECONDS != 900000 to the monitor query, which removes it from the query results.
I haven't tested this code change through the existing Aurora automated testing, but I have manually run the new query on an existing Aurora cluster (version 5.7.mysql_aurora.2.04.6) with a deleted replica instance to verify the correct results:
Old query:
mysql> SELECT SERVER_ID, SESSION_ID, LAST_UPDATE_TIMESTAMP, REPLICA_LAG_IN_MILLISECONDS, CPU FROM INFORMATION_SCHEMA.REPLICA_HOST_STATUS WHERE REPLICA_LAG_IN_MILLISECONDS > 0 OR SESSION_ID = 'MASTER_SESSION_ID' ORDER BY SERVER_ID;
+----------------+--------------------------------------+----------------------------+-----------------------------+--------------------+
| SERVER_ID      | SESSION_ID                           | LAST_UPDATE_TIMESTAMP      | REPLICA_LAG_IN_MILLISECONDS | CPU                |
+----------------+--------------------------------------+----------------------------+-----------------------------+--------------------+
| staging-0      | MASTER_SESSION_ID                    | 2019-10-21 21:12:31.836369 |                           0 |                0.5 |
| staging-1      | [id]                                 | 2019-10-21 21:12:31.855021 |          19.878999710083008 | 1.8181818723678589 |
| staging-master | [id]                                 | 2019-10-21 19:39:56.000000 |                      900000 | 12.087912559509277 |
+----------------+--------------------------------------+----------------------------+-----------------------------+--------------------+
3 rows in set (0.00 sec)


New query:
mysql> SELECT SERVER_ID, SESSION_ID, LAST_UPDATE_TIMESTAMP, REPLICA_LAG_IN_MILLISECONDS, CPU FROM INFORMATION_SCHEMA.REPLICA_HOST_STATUS WHERE (REPLICA_LAG_IN_MILLISECONDS > 0 AND REPLICA_LAG_IN_MILLISECONDS != 900000) OR SESSION_ID = 'MASTER_SESSION_ID' ORDER BY SERVER_ID;
+-----------+--------------------------------------+----------------------------+-----------------------------+--------------------+
| SERVER_ID | SESSION_ID                           | LAST_UPDATE_TIMESTAMP      | REPLICA_LAG_IN_MILLISECONDS | CPU                |
+-----------+--------------------------------------+----------------------------+-----------------------------+--------------------+
| staging-0 | MASTER_SESSION_ID                    | 2019-10-21 21:14:00.018776 |                           0 | 2.6315789222717285 |
| staging-1 | [id]                                 | 2019-10-21 21:13:59.197106 |          19.409000396728516 |  4.142011642456055 |
+-----------+--------------------------------------+----------------------------+-----------------------------+--------------------+
2 rows in set (0.00 sec)","I couldn't find this detail in AWS documentation:

Neither could I- it was only a guess that the 900000 is a special value to mean 'deleted instance'. Since the product is closed-source I've submitted a support request to clarify the expected behavior around this edge-case, and I'll update when I hear back. Probably safer to get some official, stable word on this rather than make guesses about an undocumented API based on current observation!",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2336,2019-10-21T21:18:23Z,2019-10-27T09:01:06Z,2019-10-31T17:21:25Z,MERGED,True,1,1,1,https://github.com/wjordan,Filter deleted Aurora replicas from auto-discovery,1,[],https://github.com/sysown/proxysql/pull/2336,https://github.com/wjordan,5,https://github.com/sysown/proxysql/pull/2336#issuecomment-545625425,"Aurora instances that have been deleted still exist in the INFORMATION_SCHEMA.REPLICA_HOST_STATUS table, but with a REPLICA_LAG_IN_MILLISECONDS set to 900000. This causes the current autodiscovery query to continue to add entries to runtime_mysql_servers for deleted instances, adding unnecessary connection-failure errors to the log as it continues to try to connect to an instance that no longer exists.
To allow auto discovery to remove these deleted instances from the server list, this PR adds AND REPLICA_LAG_IN_MILLISECONDS != 900000 to the monitor query, which removes it from the query results.
I haven't tested this code change through the existing Aurora automated testing, but I have manually run the new query on an existing Aurora cluster (version 5.7.mysql_aurora.2.04.6) with a deleted replica instance to verify the correct results:
Old query:
mysql> SELECT SERVER_ID, SESSION_ID, LAST_UPDATE_TIMESTAMP, REPLICA_LAG_IN_MILLISECONDS, CPU FROM INFORMATION_SCHEMA.REPLICA_HOST_STATUS WHERE REPLICA_LAG_IN_MILLISECONDS > 0 OR SESSION_ID = 'MASTER_SESSION_ID' ORDER BY SERVER_ID;
+----------------+--------------------------------------+----------------------------+-----------------------------+--------------------+
| SERVER_ID      | SESSION_ID                           | LAST_UPDATE_TIMESTAMP      | REPLICA_LAG_IN_MILLISECONDS | CPU                |
+----------------+--------------------------------------+----------------------------+-----------------------------+--------------------+
| staging-0      | MASTER_SESSION_ID                    | 2019-10-21 21:12:31.836369 |                           0 |                0.5 |
| staging-1      | [id]                                 | 2019-10-21 21:12:31.855021 |          19.878999710083008 | 1.8181818723678589 |
| staging-master | [id]                                 | 2019-10-21 19:39:56.000000 |                      900000 | 12.087912559509277 |
+----------------+--------------------------------------+----------------------------+-----------------------------+--------------------+
3 rows in set (0.00 sec)


New query:
mysql> SELECT SERVER_ID, SESSION_ID, LAST_UPDATE_TIMESTAMP, REPLICA_LAG_IN_MILLISECONDS, CPU FROM INFORMATION_SCHEMA.REPLICA_HOST_STATUS WHERE (REPLICA_LAG_IN_MILLISECONDS > 0 AND REPLICA_LAG_IN_MILLISECONDS != 900000) OR SESSION_ID = 'MASTER_SESSION_ID' ORDER BY SERVER_ID;
+-----------+--------------------------------------+----------------------------+-----------------------------+--------------------+
| SERVER_ID | SESSION_ID                           | LAST_UPDATE_TIMESTAMP      | REPLICA_LAG_IN_MILLISECONDS | CPU                |
+-----------+--------------------------------------+----------------------------+-----------------------------+--------------------+
| staging-0 | MASTER_SESSION_ID                    | 2019-10-21 21:14:00.018776 |                           0 | 2.6315789222717285 |
| staging-1 | [id]                                 | 2019-10-21 21:13:59.197106 |          19.409000396728516 |  4.142011642456055 |
+-----------+--------------------------------------+----------------------------+-----------------------------+--------------------+
2 rows in set (0.00 sec)","That said- AND REPLICA_LAG_IN_MILLISECONDS <= 600000 sounds reasonable based on the existing CHECK constraint you mentioned, so it would be fine by me if you wanted to make that change right away üëç",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2336,2019-10-21T21:18:23Z,2019-10-27T09:01:06Z,2019-10-31T17:21:25Z,MERGED,True,1,1,1,https://github.com/wjordan,Filter deleted Aurora replicas from auto-discovery,1,[],https://github.com/sysown/proxysql/pull/2336,https://github.com/renecannao,6,https://github.com/sysown/proxysql/pull/2336#issuecomment-546675090,"Aurora instances that have been deleted still exist in the INFORMATION_SCHEMA.REPLICA_HOST_STATUS table, but with a REPLICA_LAG_IN_MILLISECONDS set to 900000. This causes the current autodiscovery query to continue to add entries to runtime_mysql_servers for deleted instances, adding unnecessary connection-failure errors to the log as it continues to try to connect to an instance that no longer exists.
To allow auto discovery to remove these deleted instances from the server list, this PR adds AND REPLICA_LAG_IN_MILLISECONDS != 900000 to the monitor query, which removes it from the query results.
I haven't tested this code change through the existing Aurora automated testing, but I have manually run the new query on an existing Aurora cluster (version 5.7.mysql_aurora.2.04.6) with a deleted replica instance to verify the correct results:
Old query:
mysql> SELECT SERVER_ID, SESSION_ID, LAST_UPDATE_TIMESTAMP, REPLICA_LAG_IN_MILLISECONDS, CPU FROM INFORMATION_SCHEMA.REPLICA_HOST_STATUS WHERE REPLICA_LAG_IN_MILLISECONDS > 0 OR SESSION_ID = 'MASTER_SESSION_ID' ORDER BY SERVER_ID;
+----------------+--------------------------------------+----------------------------+-----------------------------+--------------------+
| SERVER_ID      | SESSION_ID                           | LAST_UPDATE_TIMESTAMP      | REPLICA_LAG_IN_MILLISECONDS | CPU                |
+----------------+--------------------------------------+----------------------------+-----------------------------+--------------------+
| staging-0      | MASTER_SESSION_ID                    | 2019-10-21 21:12:31.836369 |                           0 |                0.5 |
| staging-1      | [id]                                 | 2019-10-21 21:12:31.855021 |          19.878999710083008 | 1.8181818723678589 |
| staging-master | [id]                                 | 2019-10-21 19:39:56.000000 |                      900000 | 12.087912559509277 |
+----------------+--------------------------------------+----------------------------+-----------------------------+--------------------+
3 rows in set (0.00 sec)


New query:
mysql> SELECT SERVER_ID, SESSION_ID, LAST_UPDATE_TIMESTAMP, REPLICA_LAG_IN_MILLISECONDS, CPU FROM INFORMATION_SCHEMA.REPLICA_HOST_STATUS WHERE (REPLICA_LAG_IN_MILLISECONDS > 0 AND REPLICA_LAG_IN_MILLISECONDS != 900000) OR SESSION_ID = 'MASTER_SESSION_ID' ORDER BY SERVER_ID;
+-----------+--------------------------------------+----------------------------+-----------------------------+--------------------+
| SERVER_ID | SESSION_ID                           | LAST_UPDATE_TIMESTAMP      | REPLICA_LAG_IN_MILLISECONDS | CPU                |
+-----------+--------------------------------------+----------------------------+-----------------------------+--------------------+
| staging-0 | MASTER_SESSION_ID                    | 2019-10-21 21:14:00.018776 |                           0 | 2.6315789222717285 |
| staging-1 | [id]                                 | 2019-10-21 21:13:59.197106 |          19.409000396728516 |  4.142011642456055 |
+-----------+--------------------------------------+----------------------------+-----------------------------+--------------------+
2 rows in set (0.00 sec)","Hi @wjordan .
I merged your PR and made the minor change mentioned previously.
Thank you!",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2336,2019-10-21T21:18:23Z,2019-10-27T09:01:06Z,2019-10-31T17:21:25Z,MERGED,True,1,1,1,https://github.com/wjordan,Filter deleted Aurora replicas from auto-discovery,1,[],https://github.com/sysown/proxysql/pull/2336,https://github.com/wjordan,7,https://github.com/sysown/proxysql/pull/2336#issuecomment-548481505,"Aurora instances that have been deleted still exist in the INFORMATION_SCHEMA.REPLICA_HOST_STATUS table, but with a REPLICA_LAG_IN_MILLISECONDS set to 900000. This causes the current autodiscovery query to continue to add entries to runtime_mysql_servers for deleted instances, adding unnecessary connection-failure errors to the log as it continues to try to connect to an instance that no longer exists.
To allow auto discovery to remove these deleted instances from the server list, this PR adds AND REPLICA_LAG_IN_MILLISECONDS != 900000 to the monitor query, which removes it from the query results.
I haven't tested this code change through the existing Aurora automated testing, but I have manually run the new query on an existing Aurora cluster (version 5.7.mysql_aurora.2.04.6) with a deleted replica instance to verify the correct results:
Old query:
mysql> SELECT SERVER_ID, SESSION_ID, LAST_UPDATE_TIMESTAMP, REPLICA_LAG_IN_MILLISECONDS, CPU FROM INFORMATION_SCHEMA.REPLICA_HOST_STATUS WHERE REPLICA_LAG_IN_MILLISECONDS > 0 OR SESSION_ID = 'MASTER_SESSION_ID' ORDER BY SERVER_ID;
+----------------+--------------------------------------+----------------------------+-----------------------------+--------------------+
| SERVER_ID      | SESSION_ID                           | LAST_UPDATE_TIMESTAMP      | REPLICA_LAG_IN_MILLISECONDS | CPU                |
+----------------+--------------------------------------+----------------------------+-----------------------------+--------------------+
| staging-0      | MASTER_SESSION_ID                    | 2019-10-21 21:12:31.836369 |                           0 |                0.5 |
| staging-1      | [id]                                 | 2019-10-21 21:12:31.855021 |          19.878999710083008 | 1.8181818723678589 |
| staging-master | [id]                                 | 2019-10-21 19:39:56.000000 |                      900000 | 12.087912559509277 |
+----------------+--------------------------------------+----------------------------+-----------------------------+--------------------+
3 rows in set (0.00 sec)


New query:
mysql> SELECT SERVER_ID, SESSION_ID, LAST_UPDATE_TIMESTAMP, REPLICA_LAG_IN_MILLISECONDS, CPU FROM INFORMATION_SCHEMA.REPLICA_HOST_STATUS WHERE (REPLICA_LAG_IN_MILLISECONDS > 0 AND REPLICA_LAG_IN_MILLISECONDS != 900000) OR SESSION_ID = 'MASTER_SESSION_ID' ORDER BY SERVER_ID;
+-----------+--------------------------------------+----------------------------+-----------------------------+--------------------+
| SERVER_ID | SESSION_ID                           | LAST_UPDATE_TIMESTAMP      | REPLICA_LAG_IN_MILLISECONDS | CPU                |
+-----------+--------------------------------------+----------------------------+-----------------------------+--------------------+
| staging-0 | MASTER_SESSION_ID                    | 2019-10-21 21:14:00.018776 |                           0 | 2.6315789222717285 |
| staging-1 | [id]                                 | 2019-10-21 21:13:59.197106 |          19.409000396728516 |  4.142011642456055 |
+-----------+--------------------------------------+----------------------------+-----------------------------+--------------------+
2 rows in set (0.00 sec)","@renecannao just following up with the response I received from AWS support on the current Aurora-MySQL behavior. They said that the current behavior with deleted replicas is confirmed as a bug and not intentional, which means the behavior described above is not stable/reliable and could change in the future when the bug is fixed in a future release. I think the PR you merged should be safe enough as a workaround until the bug is eventually fixed, however.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2337,2019-10-21T22:00:18Z,2019-10-23T01:08:30Z,2019-10-23T01:08:34Z,MERGED,True,1,1,1,https://github.com/wjordan,Default mysql_aws_aurora_hostgroups new_reader_weight to 1 in config,1,[],https://github.com/sysown/proxysql/pull/2337,https://github.com/wjordan,1,https://github.com/sysown/proxysql/pull/2337,Set the default for new_reader_weight to 1 (matching the database-table default) when loading mysql_aws_aurora_hostgroups from config file.,Set the default for new_reader_weight to 1 (matching the database-table default) when loading mysql_aws_aurora_hostgroups from config file.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2337,2019-10-21T22:00:18Z,2019-10-23T01:08:30Z,2019-10-23T01:08:34Z,MERGED,True,1,1,1,https://github.com/wjordan,Default mysql_aws_aurora_hostgroups new_reader_weight to 1 in config,1,[],https://github.com/sysown/proxysql/pull/2337,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2337#issuecomment-544726908,Set the default for new_reader_weight to 1 (matching the database-table default) when loading mysql_aws_aurora_hostgroups from config file.,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2337,2019-10-21T22:00:18Z,2019-10-23T01:08:30Z,2019-10-23T01:08:34Z,MERGED,True,1,1,1,https://github.com/wjordan,Default mysql_aws_aurora_hostgroups new_reader_weight to 1 in config,1,[],https://github.com/sysown/proxysql/pull/2337,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2337#issuecomment-545213529,Set the default for new_reader_weight to 1 (matching the database-table default) when loading mysql_aws_aurora_hostgroups from config file.,add to whitelist,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2337,2019-10-21T22:00:18Z,2019-10-23T01:08:30Z,2019-10-23T01:08:34Z,MERGED,True,1,1,1,https://github.com/wjordan,Default mysql_aws_aurora_hostgroups new_reader_weight to 1 in config,1,[],https://github.com/sysown/proxysql/pull/2337,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/2337#issuecomment-545218946,Set the default for new_reader_weight to 1 (matching the database-table default) when loading mysql_aws_aurora_hostgroups from config file.,"Hi @wjordan .
Thank you for the PR!",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2341,2019-10-23T08:23:10Z,2019-10-27T08:59:49Z,2019-10-27T08:59:49Z,MERGED,True,19757,0,62,https://github.com/alpes214,tap tests automation,3,[],https://github.com/sysown/proxysql/pull/2341,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2341,"Description:

Test automation initial commit
set character set test

Testing:
To run tests the prove application has to be downloaded, compiled and installed
https://github.com/theory/tap-parser-sourcehandler-mytap

Prepare database for testing with install.sh
./install.sh -u root -p a -t
run tests (both C++ and MyTAP)
TAP_USERNAME=root TAP_PASSWORD=*** TAP_PORT=6033 TAP_HOST=127.0.0.1 ./run.sh","Description:

Test automation initial commit
set character set test

Testing:
To run tests the prove application has to be downloaded, compiled and installed
https://github.com/theory/tap-parser-sourcehandler-mytap

Prepare database for testing with install.sh
./install.sh -u root -p a -t
run tests (both C++ and MyTAP)
TAP_USERNAME=root TAP_PASSWORD=*** TAP_PORT=6033 TAP_HOST=127.0.0.1 ./run.sh",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2343,2019-10-25T07:40:09Z,2019-10-27T08:58:38Z,2019-10-27T08:58:38Z,MERGED,True,20,19,8,https://github.com/alpes214,unit8_t conversion,1,[],https://github.com/sysown/proxysql/pull/2343,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2343,"Description:
converted charset/default_charset data type to unsigned int. according to typedef struct ma_charset_info_st
Testing:

SET NAMES


Use set names utf8mb4 collate utf8mb4_croatian_ci through proxy.
Check show variables like 'collation_connection'. Collation is set to utf8mb4_croatian_ci with


Setting charset in admin


Use admin and set update global_variables set variable_value='latin1' where variable_name='mysql-default_charset' and update runtime;
Use admin and set update global_variables set variable_value='utf8mb4' where variable_name='mysql-default_charset' and update runtime.
Login to proxysql and check collation show variables like 'collation_connection'. Collation is set to utf8mb4_general_ci because proxysql changed it. (for mysql version < 8.0)
Login to proxysql and check collation show variables like 'collation_connection'. Collation is set to utf8mb4_0900_ai_ci.  (for mysql version >= 8.0)


Start client with --default_character_set=utf8mb4


Connecting to mysqld version < 8.0

mysql> show variables like 'collation_connection';
+----------------------+--------------------+
| Variable_name        | Value              |
+----------------------+--------------------+
| collation_connection | utf8mb4_general_ci |
+----------------------+--------------------+
3 rows in set (0.00 sec)


Connecting to mysqld version >= 8.0

mysql> show variables like 'collation_connection';
+-------------------------------+--------------------+
| Variable_name                 | Value              |
+-------------------------------+--------------------+
| collation_connection          | utf8mb4_0900_ai_ci |
+-------------------------------+--------------------+
4 rows in set (0.00 sec)","Description:
converted charset/default_charset data type to unsigned int. according to typedef struct ma_charset_info_st
Testing:

SET NAMES


Use set names utf8mb4 collate utf8mb4_croatian_ci through proxy.
Check show variables like 'collation_connection'. Collation is set to utf8mb4_croatian_ci with


Setting charset in admin


Use admin and set update global_variables set variable_value='latin1' where variable_name='mysql-default_charset' and update runtime;
Use admin and set update global_variables set variable_value='utf8mb4' where variable_name='mysql-default_charset' and update runtime.
Login to proxysql and check collation show variables like 'collation_connection'. Collation is set to utf8mb4_general_ci because proxysql changed it. (for mysql version < 8.0)
Login to proxysql and check collation show variables like 'collation_connection'. Collation is set to utf8mb4_0900_ai_ci.  (for mysql version >= 8.0)


Start client with --default_character_set=utf8mb4


Connecting to mysqld version < 8.0

mysql> show variables like 'collation_connection';
+----------------------+--------------------+
| Variable_name        | Value              |
+----------------------+--------------------+
| collation_connection | utf8mb4_general_ci |
+----------------------+--------------------+
3 rows in set (0.00 sec)


Connecting to mysqld version >= 8.0

mysql> show variables like 'collation_connection';
+-------------------------------+--------------------+
| Variable_name                 | Value              |
+-------------------------------+--------------------+
| collation_connection          | utf8mb4_0900_ai_ci |
+-------------------------------+--------------------+
4 rows in set (0.00 sec)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2347,2019-10-28T01:28:32Z,2019-10-28T03:58:39Z,2020-06-15T18:58:00Z,MERGED,True,304,232,6,https://github.com/renecannao,V2.0.8 aur repli,5,[],https://github.com/sysown/proxysql/pull/2347,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2347,"Implement a logic to only send read to Aurora replicas (and no writer) if at least N replicas are good candidates).
Also improved the speed of refreshing MySQL variables","Implement a logic to only send read to Aurora replicas (and no writer) if at least N replicas are good candidates).
Also improved the speed of refreshing MySQL variables",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2350,2019-10-28T23:40:09Z,2019-10-29T02:07:55Z,2020-06-15T18:58:02Z,MERGED,True,27,3,3,https://github.com/renecannao,Handle large queries with SSL enabled,1,[],https://github.com/sysown/proxysql/pull/2350,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2350,"This commit fixes the following bug:
if a client connection uses SSL and sends a query larger than 32KB, the query is never executed and the connection hang","This commit fixes the following bug:
if a client connection uses SSL and sends a query larger than 32KB, the query is never executed and the connection hang",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2354,2019-10-30T08:53:28Z,2019-11-01T07:19:16Z,2019-11-01T07:19:16Z,MERGED,True,29,24,3,https://github.com/alpes214,V2.0.8 tests,2,[],https://github.com/sysown/proxysql/pull/2354,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2354,"Description:
update for tap tests automation: cleanup and configuration","Description:
update for tap tests automation: cleanup and configuration",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2360,2019-11-02T21:16:10Z,2019-11-06T02:05:45Z,2019-11-06T02:05:45Z,MERGED,True,22,0,1,https://github.com/alpes214,fix charset testcase. handle_unknown_charset=1,1,[],https://github.com/sysown/proxysql/pull/2360,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2360,Updated test case for unknown character set handling. Preset handle_unknown_charset=1 for this test.,Updated test case for unknown character set handling. Preset handle_unknown_charset=1 for this test.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2364,2019-11-06T02:00:03Z,2019-11-07T05:45:54Z,2020-06-15T18:59:27Z,MERGED,True,2,0,2,https://github.com/renecannao,V2.0.9 memleaks,2,[],https://github.com/sysown/proxysql/pull/2364,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2364,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2366,2019-11-06T06:32:08Z,2019-11-07T05:48:57Z,2019-11-07T05:48:57Z,MERGED,True,131,45,9,https://github.com/alpes214,[FR] Group replication monitoring: count transactions behind events,1,[],https://github.com/sysown/proxysql/pull/2366,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2366,"Description:
Implementation of the feature request #2326
Testing:
Automated testing implemented and submitted in this PR","Description:
Implementation of the feature request #2326
Testing:
Automated testing implemented and submitted in this PR",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2370,2019-11-06T08:58:51Z,2019-11-07T05:44:19Z,2020-06-15T18:59:29Z,MERGED,True,494,240,6,https://github.com/renecannao,stats_history.history_mysql_query_digest #2368,1,[],https://github.com/sysown/proxysql/pull/2370,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2370,"Implementation of new table stats_history.history_mysql_query_digest #2368
Implemented command SAVE MYSQL DIGEST TO DISK.
Save to disk with really minimal memory footprint compared to querying stats_mysql_query_digest or stats_mysql_query_digest_reset .
Implemented new admin variable admin-stats_mysql_query_digest_to_disk to automatically save to disk.","Implementation of new table stats_history.history_mysql_query_digest #2368
Implemented command SAVE MYSQL DIGEST TO DISK.
Save to disk with really minimal memory footprint compared to querying stats_mysql_query_digest or stats_mysql_query_digest_reset .
Implemented new admin variable admin-stats_mysql_query_digest_to_disk to automatically save to disk.",True,{'THUMBS_UP': ['https://github.com/yakirgb']}
sysown/proxysql,https://github.com/sysown/proxysql,2373,2019-11-06T22:10:53Z,2019-11-07T05:44:35Z,2019-11-07T05:44:35Z,MERGED,True,1,1,1,https://github.com/alpes214,Use assert(0) for better debugging,1,[],https://github.com/sysown/proxysql/pull/2373,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2373,Changed macro to have better possibilities for debugging in case of assertion. Tested with fake assertions.,Changed macro to have better possibilities for debugging in case of assertion. Tested with fake assertions.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2376,2019-11-07T13:17:22Z,2019-11-07T14:54:18Z,2019-11-07T14:54:18Z,MERGED,True,4,0,1,https://github.com/alpes214,Fix memory leaks in set parser,1,[],https://github.com/sysown/proxysql/pull/2376,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2376,"Tested with valgrind. These reported memory leaks are fixed:



==19152== 48 bytes in 2 blocks are definitely lost in loss record 188 of 420
==19152==    at 0x4C2C21F: operator new(unsigned long) (vg_replace_malloc.c:334)
==19152==    by 0x2DBE80: SetParser::parse_character_setabi:cxx11 (set_parser.cpp:126)
==19152==    by 0x249B5D: MySQL_Session::handler___status_WAITING_CLIENT_DATA___STATE_SLEEP___MYSQL_COM_QUERY_qpo(_PtrSize_t*, bool*, bool) (MySQL_Session.cpp:6023)
==19152==    by 0x255EDB: MySQL_Session::handler() (MySQL_Session.cpp:3290)
==19152==    by 0x232439: MySQL_Thread::process_all_sessions() (MySQL_Thread.cpp:4392)
==19152==    by 0x23C347: MySQL_Thread::run() (MySQL_Thread.cpp:4125)
==19152==    by 0x1EFFFB: mysql_worker_thread_func(void*) (main.cpp:648)
==19152==    by 0x4E3F4A3: start_thread (pthread_create.c:456)
==19152==    by 0x6000D0E: clone (clone.S:97)
==19152==



==19459== 24 bytes in 1 blocks are definitely lost in loss record 127 of 443
==19459==    at 0x4C2C21F: operator new(unsigned long) (vg_replace_malloc.c:334)
==19459==    by 0x2DC495: SetParser::parse2abi:cxx11 (set_parser.cpp:77)
==19459==    by 0x24943F: MySQL_Session::handler___status_WAITING_CLIENT_DATA___STATE_SLEEP___MYSQL_COM_QUERY_qpo(_PtrSize_t*, bool*, bool) (MySQL_Session.cpp:5972)
==19459==    by 0x255EDB: MySQL_Session::handler() (MySQL_Session.cpp:3290)
==19459==    by 0x232439: MySQL_Thread::process_all_sessions() (MySQL_Thread.cpp:4392)
==19459==    by 0x23C347: MySQL_Thread::run() (MySQL_Thread.cpp:4125)
==19459==    by 0x1EFFFB: mysql_worker_thread_func(void*) (main.cpp:648)
==19459==    by 0x4E3F4A3: start_thread (pthread_create.c:456)
==19459==    by 0x6000D0E: clone (clone.S:97)","Tested with valgrind. These reported memory leaks are fixed:



==19152== 48 bytes in 2 blocks are definitely lost in loss record 188 of 420
==19152==    at 0x4C2C21F: operator new(unsigned long) (vg_replace_malloc.c:334)
==19152==    by 0x2DBE80: SetParser::parse_character_setabi:cxx11 (set_parser.cpp:126)
==19152==    by 0x249B5D: MySQL_Session::handler___status_WAITING_CLIENT_DATA___STATE_SLEEP___MYSQL_COM_QUERY_qpo(_PtrSize_t*, bool*, bool) (MySQL_Session.cpp:6023)
==19152==    by 0x255EDB: MySQL_Session::handler() (MySQL_Session.cpp:3290)
==19152==    by 0x232439: MySQL_Thread::process_all_sessions() (MySQL_Thread.cpp:4392)
==19152==    by 0x23C347: MySQL_Thread::run() (MySQL_Thread.cpp:4125)
==19152==    by 0x1EFFFB: mysql_worker_thread_func(void*) (main.cpp:648)
==19152==    by 0x4E3F4A3: start_thread (pthread_create.c:456)
==19152==    by 0x6000D0E: clone (clone.S:97)
==19152==



==19459== 24 bytes in 1 blocks are definitely lost in loss record 127 of 443
==19459==    at 0x4C2C21F: operator new(unsigned long) (vg_replace_malloc.c:334)
==19459==    by 0x2DC495: SetParser::parse2abi:cxx11 (set_parser.cpp:77)
==19459==    by 0x24943F: MySQL_Session::handler___status_WAITING_CLIENT_DATA___STATE_SLEEP___MYSQL_COM_QUERY_qpo(_PtrSize_t*, bool*, bool) (MySQL_Session.cpp:5972)
==19459==    by 0x255EDB: MySQL_Session::handler() (MySQL_Session.cpp:3290)
==19459==    by 0x232439: MySQL_Thread::process_all_sessions() (MySQL_Thread.cpp:4392)
==19459==    by 0x23C347: MySQL_Thread::run() (MySQL_Thread.cpp:4125)
==19459==    by 0x1EFFFB: mysql_worker_thread_func(void*) (main.cpp:648)
==19459==    by 0x4E3F4A3: start_thread (pthread_create.c:456)
==19459==    by 0x6000D0E: clone (clone.S:97)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2377,2019-11-07T14:02:15Z,2019-11-07T14:53:33Z,2019-11-07T14:53:33Z,MERGED,True,11,9,1,https://github.com/alpes214,Fix memory leaks of idle threads,1,[],https://github.com/sysown/proxysql/pull/2377,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2377,"Description:
Idle threads variables are deleted when IDLE_THREADS macro is defined and proxysql is started with command line option --idle-threads. However, these variables are allocated only when IDLE_THREADS is defined. When proxysql is started w/o --idle-threads option valgrind reports memory leaks:
==19459== 64 bytes in 4 blocks are definitely lost in loss record 233 of 443
==19459==    at 0x4C2C21F: operator new(unsigned long) (vg_replace_malloc.c:334)
==19459==    by 0x23406D: MySQL_Thread::init() (MySQL_Thread.cpp:3458)
==19459==    by 0x1EFFD3: mysql_worker_thread_func(void*) (main.cpp:642)
==19459==    by 0x4E3F4A3: start_thread (pthread_create.c:456)
==19459==    by 0x6000D0E: clone (clone.S:97)
==19459==
==19459== 64 bytes in 4 blocks are definitely lost in loss record 234 of 443
==19459==    at 0x4C2C21F: operator new(unsigned long) (vg_replace_malloc.c:334)
==19459==    by 0x234093: MySQL_Thread::init() (MySQL_Thread.cpp:3459)
==19459==    by 0x1EFFD3: mysql_worker_thread_func(void*) (main.cpp:642)
==19459==    by 0x4E3F4A3: start_thread (pthread_create.c:456)
==19459==    by 0x6000D0E: clone (clone.S:97)
==19459==
==19459== 64 bytes in 4 blocks are definitely lost in loss record 235 of 443
==19459==    at 0x4C2C21F: operator new(unsigned long) (vg_replace_malloc.c:334)
==19459==    by 0x2340B9: MySQL_Thread::init() (MySQL_Thread.cpp:3461)
==19459==    by 0x1EFFD3: mysql_worker_thread_func(void*) (main.cpp:642)
==19459==    by 0x4E3F4A3: start_thread (pthread_create.c:456)
==19459==    by 0x6000D0E: clone (clone.S:97)
==19459==
==19459== 64 bytes in 4 blocks are definitely lost in loss record 236 of 443
==19459==    at 0x4C2C21F: operator new(unsigned long) (vg_replace_malloc.c:334)
==19459==    by 0x2340DF: MySQL_Thread::init() (MySQL_Thread.cpp:3462)
==19459==    by 0x1EFFD3: mysql_worker_thread_func(void*) (main.cpp:642)
==19459==    by 0x4E3F4A3: start_thread (pthread_create.c:456)
==19459==    by 0x6000D0E: clone (clone.S:97)
==19459==

Tests:

tested with and without --idle-threads and checked memory reports in valgrind.","Description:
Idle threads variables are deleted when IDLE_THREADS macro is defined and proxysql is started with command line option --idle-threads. However, these variables are allocated only when IDLE_THREADS is defined. When proxysql is started w/o --idle-threads option valgrind reports memory leaks:
==19459== 64 bytes in 4 blocks are definitely lost in loss record 233 of 443
==19459==    at 0x4C2C21F: operator new(unsigned long) (vg_replace_malloc.c:334)
==19459==    by 0x23406D: MySQL_Thread::init() (MySQL_Thread.cpp:3458)
==19459==    by 0x1EFFD3: mysql_worker_thread_func(void*) (main.cpp:642)
==19459==    by 0x4E3F4A3: start_thread (pthread_create.c:456)
==19459==    by 0x6000D0E: clone (clone.S:97)
==19459==
==19459== 64 bytes in 4 blocks are definitely lost in loss record 234 of 443
==19459==    at 0x4C2C21F: operator new(unsigned long) (vg_replace_malloc.c:334)
==19459==    by 0x234093: MySQL_Thread::init() (MySQL_Thread.cpp:3459)
==19459==    by 0x1EFFD3: mysql_worker_thread_func(void*) (main.cpp:642)
==19459==    by 0x4E3F4A3: start_thread (pthread_create.c:456)
==19459==    by 0x6000D0E: clone (clone.S:97)
==19459==
==19459== 64 bytes in 4 blocks are definitely lost in loss record 235 of 443
==19459==    at 0x4C2C21F: operator new(unsigned long) (vg_replace_malloc.c:334)
==19459==    by 0x2340B9: MySQL_Thread::init() (MySQL_Thread.cpp:3461)
==19459==    by 0x1EFFD3: mysql_worker_thread_func(void*) (main.cpp:642)
==19459==    by 0x4E3F4A3: start_thread (pthread_create.c:456)
==19459==    by 0x6000D0E: clone (clone.S:97)
==19459==
==19459== 64 bytes in 4 blocks are definitely lost in loss record 236 of 443
==19459==    at 0x4C2C21F: operator new(unsigned long) (vg_replace_malloc.c:334)
==19459==    by 0x2340DF: MySQL_Thread::init() (MySQL_Thread.cpp:3462)
==19459==    by 0x1EFFD3: mysql_worker_thread_func(void*) (main.cpp:642)
==19459==    by 0x4E3F4A3: start_thread (pthread_create.c:456)
==19459==    by 0x6000D0E: clone (clone.S:97)
==19459==

Tests:

tested with and without --idle-threads and checked memory reports in valgrind.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2378,2019-11-07T14:27:54Z,2019-11-07T14:54:51Z,2019-11-07T14:54:51Z,MERGED,True,0,1,1,https://github.com/alpes214,Undo error reporting when group replication hosts result set is empty,1,[],https://github.com/sysown/proxysql/pull/2378,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2378,Wrong error logging. When group replication hostgroups table is empty then erroneous message appears in the log.,Wrong error logging. When group replication hostgroups table is empty then erroneous message appears in the log.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2379,2019-11-07T20:57:17Z,2019-11-07T22:57:37Z,2019-11-07T22:57:37Z,MERGED,True,9,1,1,https://github.com/alpes214,V2.0.9 fix hgm leaks,3,[],https://github.com/sysown/proxysql/pull/2379,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2379,"Several non-critical memory leaks are fixed.
1)
==17674== 8 bytes in 1 blocks are definitely lost in loss record 33 of 441
==17674==    at 0x4C2C21F: operator new(unsigned long) (vg_replace_malloc.c:334)
==17674==    by 0x2071B8: MySQL_HostGroups_Manager::init() (MySQL_HostGroups_Manager.cpp:1019)
==17674==    by 0x1F1F44: ProxySQL_Main_init_main_modules() (main.cpp:835)
==17674==    by 0x1F28AA: ProxySQL_Main_init_phase2___not_started() (main.cpp:1127)
==17674==    by 0x1EEF99: main (main.cpp:1587)
==17674==
==17674== 8 bytes in 1 blocks are definitely lost in loss record 34 of 441
==17674==    at 0x4C2C21F: operator new(unsigned long) (vg_replace_malloc.c:334)
==17674==    by 0x207225: MySQL_HostGroups_Manager::init() (MySQL_HostGroups_Manager.cpp:1023)
==17674==    by 0x1F1F44: ProxySQL_Main_init_main_modules() (main.cpp:835)
==17674==    by 0x1F28AA: ProxySQL_Main_init_phase2___not_started() (main.cpp:1127)
==17674==    by 0x1EEF99: main (main.cpp:1587)
==17674==

2)
==17674== 16 bytes in 1 blocks are definitely lost in loss record 86 of 441
==17674==    at 0x4C2C21F: operator new(unsigned long) (vg_replace_malloc.c:334)
==17674==    by 0x20CA17: HGCU_thread_run() (MySQL_HostGroups_Manager.cpp:637)
==17674==    by 0x5734E6E: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==17674==    by 0x4E3F4A3: start_thread (pthread_create.c:456)
==17674==    by 0x6000D0E: clone (clone.S:97)
==17674==

These memory leaks appears only on server shutdown, but we need to remove definitely lost record in the valgrind memory report.","Several non-critical memory leaks are fixed.
1)
==17674== 8 bytes in 1 blocks are definitely lost in loss record 33 of 441
==17674==    at 0x4C2C21F: operator new(unsigned long) (vg_replace_malloc.c:334)
==17674==    by 0x2071B8: MySQL_HostGroups_Manager::init() (MySQL_HostGroups_Manager.cpp:1019)
==17674==    by 0x1F1F44: ProxySQL_Main_init_main_modules() (main.cpp:835)
==17674==    by 0x1F28AA: ProxySQL_Main_init_phase2___not_started() (main.cpp:1127)
==17674==    by 0x1EEF99: main (main.cpp:1587)
==17674==
==17674== 8 bytes in 1 blocks are definitely lost in loss record 34 of 441
==17674==    at 0x4C2C21F: operator new(unsigned long) (vg_replace_malloc.c:334)
==17674==    by 0x207225: MySQL_HostGroups_Manager::init() (MySQL_HostGroups_Manager.cpp:1023)
==17674==    by 0x1F1F44: ProxySQL_Main_init_main_modules() (main.cpp:835)
==17674==    by 0x1F28AA: ProxySQL_Main_init_phase2___not_started() (main.cpp:1127)
==17674==    by 0x1EEF99: main (main.cpp:1587)
==17674==

2)
==17674== 16 bytes in 1 blocks are definitely lost in loss record 86 of 441
==17674==    at 0x4C2C21F: operator new(unsigned long) (vg_replace_malloc.c:334)
==17674==    by 0x20CA17: HGCU_thread_run() (MySQL_HostGroups_Manager.cpp:637)
==17674==    by 0x5734E6E: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==17674==    by 0x4E3F4A3: start_thread (pthread_create.c:456)
==17674==    by 0x6000D0E: clone (clone.S:97)
==17674==

These memory leaks appears only on server shutdown, but we need to remove definitely lost record in the valgrind memory report.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2380,2019-11-07T21:30:23Z,2019-11-07T22:54:50Z,2019-11-07T22:54:50Z,MERGED,True,1,3,2,https://github.com/alpes214,Fix mem leak in admin init,2,[],https://github.com/sysown/proxysql/pull/2380,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2380,Memory leak in ProxySQL_Admin. Variable's memory release on shutdown.,Memory leak in ProxySQL_Admin. Variable's memory release on shutdown.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2383,2019-11-08T21:27:36Z,2019-11-12T00:21:21Z,2019-11-12T00:21:21Z,MERGED,True,37,69,6,https://github.com/alpes214,Fix memory leak of queue in monitor,3,[],https://github.com/sysown/proxysql/pull/2383,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2383,"Fix for memory leak in monitor. Used std::unique_ptr for this fix.
Testing:

Run grouprep test --sqlite3-server with and without fix. Behavior has not been changed.
Used --initial and --reload command line options to test that config file is read.","Fix for memory leak in monitor. Used std::unique_ptr for this fix.
Testing:

Run grouprep test --sqlite3-server with and without fix. Behavior has not been changed.
Used --initial and --reload command line options to test that config file is read.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2384,2019-11-11T04:44:39Z,2019-11-12T00:21:37Z,2020-06-15T18:59:31Z,MERGED,True,5,3,2,https://github.com/renecannao,Fix race condition on KILL CONNECTION,1,[],https://github.com/sysown/proxysql/pull/2384,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2384,"Fixed a race condition that could possible lead to a leak of file descriptors
when running KILL CONNECTION on backend","Fixed a race condition that could possible lead to a leak of file descriptors
when running KILL CONNECTION on backend",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2385,2019-11-11T05:44:33Z,2019-11-12T00:21:55Z,2020-06-15T18:59:32Z,MERGED,True,36,33,3,https://github.com/renecannao,Add dump_time to history_mysql_query_digest #2368,1,[],https://github.com/sysown/proxysql/pull/2385,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2385,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2387,2019-11-11T21:10:47Z,2019-11-14T00:43:21Z,2019-11-14T00:43:21Z,MERGED,True,130,43,5,https://github.com/alpes214,V2.0.9 aurora lag,4,[],https://github.com/sysown/proxysql/pull/2387,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2387,"Description:
Implements add_lag_ms, min_lag_ms, lag_num_checks in mysql_aws_aurora_hostgroups.
Implements usage of add_lag_ms and min_lag_ms for current replica lag calculation.
Testing:
SQLite3_Server with additional traces used for testing. If log is greped for a single server then it is seen that status of the server is changing along with current replica lag. (curr_lag > max_lag_ms - shunning server, curr_lag < max_lag_ms - re-enabling server)","Description:
Implements add_lag_ms, min_lag_ms, lag_num_checks in mysql_aws_aurora_hostgroups.
Implements usage of add_lag_ms and min_lag_ms for current replica lag calculation.
Testing:
SQLite3_Server with additional traces used for testing. If log is greped for a single server then it is seen that status of the server is changing along with current replica lag. (curr_lag > max_lag_ms - shunning server, curr_lag < max_lag_ms - re-enabling server)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2388,2019-11-12T00:20:58Z,2019-11-21T06:16:37Z,2020-06-15T18:59:34Z,MERGED,True,69,48,14,https://github.com/renecannao,Upgrade to MariaDB Connector C 3.1.4,3,[],https://github.com/sysown/proxysql/pull/2388,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2388,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2388,2019-11-12T00:20:58Z,2019-11-21T06:16:37Z,2020-06-15T18:59:34Z,MERGED,True,69,48,14,https://github.com/renecannao,Upgrade to MariaDB Connector C 3.1.4,3,[],https://github.com/sysown/proxysql/pull/2388,https://github.com/alpes214,2,https://github.com/sysown/proxysql/pull/2388#issuecomment-556396870,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2392,2019-11-13T11:20:21Z,2019-11-13T12:17:30Z,2020-06-15T18:59:36Z,MERGED,True,3,0,2,https://github.com/renecannao,V2.0.9 kill2,3,[],https://github.com/sysown/proxysql/pull/2392,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2392,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2394,2019-11-13T15:36:56Z,2019-11-14T00:42:57Z,2019-11-14T00:42:57Z,MERGED,True,4,4,1,https://github.com/acampoh,Fixed issues generating some queries for galera support,1,[],https://github.com/sysown/proxysql/pull/2394,https://github.com/acampoh,1,https://github.com/sysown/proxysql/pull/2394,Fixed errors on the queries managing galera nodes,Fixed errors on the queries managing galera nodes,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2394,2019-11-13T15:36:56Z,2019-11-14T00:42:57Z,2019-11-14T00:42:57Z,MERGED,True,4,4,1,https://github.com/acampoh,Fixed issues generating some queries for galera support,1,[],https://github.com/sysown/proxysql/pull/2394,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2394#issuecomment-553671195,Fixed errors on the queries managing galera nodes,Thank you @acampoh,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2399,2019-11-15T20:18:01Z,2020-02-01T05:34:28Z,2020-02-01T05:34:28Z,MERGED,True,53,11,7,https://github.com/alpes214,[WIP] V2.0.9 mem leaks fixes,9,[],https://github.com/sysown/proxysql/pull/2399,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2399,Fixes for different memory leaks.,Fixes for different memory leaks.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2399,2019-11-15T20:18:01Z,2020-02-01T05:34:28Z,2020-02-01T05:34:28Z,MERGED,True,53,11,7,https://github.com/alpes214,[WIP] V2.0.9 mem leaks fixes,9,[],https://github.com/sysown/proxysql/pull/2399,https://github.com/alpes214,2,https://github.com/sysown/proxysql/pull/2399#issuecomment-556397278,Fixes for different memory leaks.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2400,2019-11-17T09:08:22Z,2019-11-20T13:03:53Z,2019-11-20T13:03:53Z,MERGED,True,91,54,5,https://github.com/alpes214,"Aurora replication lag: fix issues, adjust window size",3,[],https://github.com/sysown/proxysql/pull/2400,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2400,"Fixes:

table definition bug
window size increased up to 16 log entries

Implements:

upgrade functionality for mysql_aws_aurora_hostgroups table
add new column estimated_lag_ms to mysql_server_aws_aurora_log`

Tested with SQLite3_Server, with different window sizes (1, 5, 16)
Values in the estimated_lag_ms column tested with the query:
mysql> select hostname, port, time_start_us, success_time_us, server_id, session_id, last_update_timestamp, server_id, session_id, replica_lag_in_milliseconds, max((replica_lag_in_milliseconds + 10),20) lag, estimated_lag_ms, cpu from mysql_server_aws_aurora_log where server_id like '%2.12%' order by time_start_us limit 20;
+-----------------------------+------+------------------+-----------------+-----------+-------------------------+-----------------------+-----------+-------------------------+-----------------------------+------------------+------------------+------------------+
| hostname                    | port | time_start_us    | success_time_us | SERVER_ID | SESSION_ID              | LAST_UPDATE_TIMESTAMP | SERVER_ID | SESSION_ID              | replica_lag_in_milliseconds | lag              | estimated_lag_ms | CPU              |
+-----------------------------+------+------------------+-----------------+-----------+-------------------------+-----------------------+-----------+-------------------------+-----------------------------+------------------+------------------+------------------+
| host.2.15.cluster2.aws.test | 3306 | 1574235326446687 | 334             | host.2.12 | b80ef4b4-host.2.12-aa01 | 2019-11-20 07:35:26   | host.2.12 | b80ef4b4-host.2.12-aa01 | 21.3600006103516            | 31.3600006103516 | 39               | 84.9700012207031 |
| host.2.15.cluster2.aws.test | 3306 | 1574235328031183 | 497             | host.2.12 | b80ef4b4-host.2.12-aa01 | 2019-11-20 07:35:28   | host.2.12 | b80ef4b4-host.2.12-aa01 | 29.8999996185303            | 39.8999996185303 | 39               | 61.1199989318848 |
| host.2.15.cluster2.aws.test | 3306 | 1574235330538279 | 352             | host.2.12 | b80ef4b4-host.2.12-aa01 | 2019-11-20 07:35:30   | host.2.12 | b80ef4b4-host.2.12-aa01 | 26.4799995422363            | 36.4799995422363 | 36               | 92.7799987792969 |
| host.2.15.cluster2.aws.test | 3306 | 1574235331493715 | 352             | host.2.12 | b80ef4b4-host.2.12-aa01 | 2019-11-20 07:35:31   | host.2.12 | b80ef4b4-host.2.12-aa01 | 26.7600002288818            | 36.7600002288818 | 37               | 54.939998626709  |
| host.2.15.cluster2.aws.test | 3306 | 1574235332090273 | 347             | host.2.12 | b80ef4b4-host.2.12-aa01 | 2019-11-20 07:35:32   | host.2.12 | b80ef4b4-host.2.12-aa01 | 17.2800006866455            | 27.2800006866455 | 31               | 84.25            |
| host.2.15.cluster2.aws.test | 3306 | 1574235332806557 | 365             | host.2.12 | b80ef4b4-host.2.12-aa01 | 2019-11-20 07:35:32   | host.2.12 | b80ef4b4-host.2.12-aa01 | 22.6000003814697            | 32.6000003814697 | 39               | 86.8000030517578 |
| host.2.11.cluster2.aws.test | 3306 | 1574235333045533 | 412             | host.2.12 | b80ef4b4-host.2.12-aa01 | 2019-11-20 07:35:33   | host.2.12 | b80ef4b4-host.2.12-aa01 | 23.3699989318848            | 33.3699989318848 | 37               | 74.9499969482422 |
| host.2.11.cluster2.aws.test | 3306 | 1574235333404018 | 457             | host.2.12 | b80ef4b4-host.2.12-aa01 | 2019-11-20 07:35:33   | host.2.12 | b80ef4b4-host.2.12-aa01 | 17.1199989318848            | 27.1199989318848 | 37               | 21.2900009155273 |
| host.2.15.cluster2.aws.test | 3306 | 1574235333523514 | 348             | host.2.12 | b80ef4b4-host.2.12-aa01 | 2019-11-20 07:35:33   | host.2.12 | b80ef4b4-host.2.12-aa01 | 13.8900003433228            | 23.8900003433228 | 35               | 24.0900001525879 |
| host.2.11.cluster2.aws.test | 3306 | 1574235333762610 | 412             | host.2.12 | b80ef4b4-host.2.12-aa01 | 2019-11-20 07:35:33   | host.2.12 | b80ef4b4-host.2.12-aa01 | 13.6099996566772            | 23.6099996566772 | 30               | 87.8099975585938 |
| host.2.15.cluster2.aws.test | 3306 | 1574235334121157 | 418             | host.2.12 | b80ef4b4-host.2.12-aa01 | 2019-11-20 07:35:34   | host.2.12 | b80ef4b4-host.2.12-aa01 | 18.9799995422363            | 28.9799995422363 | 30               | 49.4700012207031 |
| host.2.11.cluster2.aws.test | 3306 | 1574235334479235 | 433             | host.2.12 | b80ef4b4-host.2.12-aa01 | 2019-11-20 07:35:34   | host.2.12 | b80ef4b4-host.2.12-aa01 | 18.6100006103516            | 28.6100006103516 | 28               | 55.8600006103516 |
| host.2.11.cluster2.aws.test | 3306 | 1574235334718749 | 414             | host.2.12 | b80ef4b4-host.2.12-aa01 | 2019-11-20 07:35:34   | host.2.12 | b80ef4b4-host.2.12-aa01 | 14.4099998474121            | 24.4099998474121 | 28               | 8.10999965667725 |
| host.2.15.cluster2.aws.test | 3306 | 1574235334957082 | 352             | host.2.12 | b80ef4b4-host.2.12-aa01 | 2019-11-20 07:35:34   | host.2.12 | b80ef4b4-host.2.12-aa01 | 21.6199989318848            | 31.6199989318848 | 31               | 53.6199989318848 |
| host.2.11.cluster2.aws.test | 3306 | 1574235335196209 | 439             | host.2.12 | b80ef4b4-host.2.12-aa01 | 2019-11-20 07:35:35   | host.2.12 | b80ef4b4-host.2.12-aa01 | 16.6199989318848            | 26.6199989318848 | 31               | 92.870002746582  |
| host.2.15.cluster2.aws.test | 3306 | 1574235335434588 | 367             | host.2.12 | b80ef4b4-host.2.12-aa01 | 2019-11-20 07:35:35   | host.2.12 | b80ef4b4-host.2.12-aa01 | 29.6200008392334            | 39.6200008392334 | 39               | 79.4599990844727 |
| host.2.11.cluster2.aws.test | 3306 | 1574235335554172 | 415             | host.2.12 | b80ef4b4-host.2.12-aa01 | 2019-11-20 07:35:35   | host.2.12 | b80ef4b4-host.2.12-aa01 | 15.6800003051758            | 25.6800003051758 | 39               | 34.7700004577637 |
| host.2.12.cluster2.aws.test | 3306 | 1574235335673638 | 417             | host.2.12 | b80ef4b4-host.2.12-aa01 | 2019-11-20 07:35:35   | host.2.12 | b80ef4b4-host.2.12-aa01 | 17.7399997711182            | 27.7399997711182 | 39               | 38.9199981689453 |
| host.2.11.cluster2.aws.test | 3306 | 1574235335793167 | 414             | host.2.12 | b80ef4b4-host.2.12-aa01 | 2019-11-20 07:35:35   | host.2.12 | b80ef4b4-host.2.12-aa01 | 28.5599994659424            | 38.5599994659424 | 39               | 53.2599983215332 |
| host.2.12.cluster2.aws.test | 3306 | 1574235335912704 | 458             | host.2.12 | b80ef4b4-host.2.12-aa01 | 2019-11-20 07:35:35   | host.2.12 | b80ef4b4-host.2.12-aa01 | 14.8800001144409            | 24.8800001144409 | 39               | 13.7200002670288 |
+-----------------------------+------+------------------+-----------------+-----------+-------------------------+-----------------------+-----------+-------------------------+-----------------------------+------------------+------------------+------------------+
20 rows in set (0.05 sec)

Used aurora configuration:
mysql> select * from mysql_aws_aurora_hostgroups;
+------------------+------------------+--------+-------------+--------------------+------------+-------------------+------------------+-----------------------+-------------------+------------+------------+----------------+------------------------------------+
| writer_hostgroup | reader_hostgroup | active | aurora_port | domain_name        | max_lag_ms | check_interval_ms | check_timeout_ms | writer_is_also_reader | new_reader_weight | add_lag_ms | min_lag_ms | lag_num_checks | comment                            |
+------------------+------------------+--------+-------------+--------------------+------------+-------------------+------------------+-----------------------+-------------------+------------+------------+----------------+------------------------------------+
| 1271             | 1272             | 1      | 3306        | .aws-test.com      | 25         | 120               | 90               | 1                     | 1                 | 10         | 20         | 5              | Automated Aurora Testing Cluster 1 |
| 1273             | 1274             | 1      | 3306        | .cluster2.aws.test | 25         | 120               | 90               | 0                     | 1                 | 10         | 20         | 5              | Automated Aurora Testing Cluster 2 |
| 1275             | 1276             | 1      | 3306        | .aws.3.test.com    | 25         | 120               | 90               | 0                     | 2                 | 10         | 20         | 5              | Automated Aurora Testing Cluster 3 |
+------------------+------------------+--------+-------------+--------------------+------------+-------------------+------------------+-----------------------+-------------------+------------+------------+----------------+------------------------------------+
3 rows in set (0.00 sec)","Fixes:

table definition bug
window size increased up to 16 log entries

Implements:

upgrade functionality for mysql_aws_aurora_hostgroups table
add new column estimated_lag_ms to mysql_server_aws_aurora_log`

Tested with SQLite3_Server, with different window sizes (1, 5, 16)
Values in the estimated_lag_ms column tested with the query:
mysql> select hostname, port, time_start_us, success_time_us, server_id, session_id, last_update_timestamp, server_id, session_id, replica_lag_in_milliseconds, max((replica_lag_in_milliseconds + 10),20) lag, estimated_lag_ms, cpu from mysql_server_aws_aurora_log where server_id like '%2.12%' order by time_start_us limit 20;
+-----------------------------+------+------------------+-----------------+-----------+-------------------------+-----------------------+-----------+-------------------------+-----------------------------+------------------+------------------+------------------+
| hostname                    | port | time_start_us    | success_time_us | SERVER_ID | SESSION_ID              | LAST_UPDATE_TIMESTAMP | SERVER_ID | SESSION_ID              | replica_lag_in_milliseconds | lag              | estimated_lag_ms | CPU              |
+-----------------------------+------+------------------+-----------------+-----------+-------------------------+-----------------------+-----------+-------------------------+-----------------------------+------------------+------------------+------------------+
| host.2.15.cluster2.aws.test | 3306 | 1574235326446687 | 334             | host.2.12 | b80ef4b4-host.2.12-aa01 | 2019-11-20 07:35:26   | host.2.12 | b80ef4b4-host.2.12-aa01 | 21.3600006103516            | 31.3600006103516 | 39               | 84.9700012207031 |
| host.2.15.cluster2.aws.test | 3306 | 1574235328031183 | 497             | host.2.12 | b80ef4b4-host.2.12-aa01 | 2019-11-20 07:35:28   | host.2.12 | b80ef4b4-host.2.12-aa01 | 29.8999996185303            | 39.8999996185303 | 39               | 61.1199989318848 |
| host.2.15.cluster2.aws.test | 3306 | 1574235330538279 | 352             | host.2.12 | b80ef4b4-host.2.12-aa01 | 2019-11-20 07:35:30   | host.2.12 | b80ef4b4-host.2.12-aa01 | 26.4799995422363            | 36.4799995422363 | 36               | 92.7799987792969 |
| host.2.15.cluster2.aws.test | 3306 | 1574235331493715 | 352             | host.2.12 | b80ef4b4-host.2.12-aa01 | 2019-11-20 07:35:31   | host.2.12 | b80ef4b4-host.2.12-aa01 | 26.7600002288818            | 36.7600002288818 | 37               | 54.939998626709  |
| host.2.15.cluster2.aws.test | 3306 | 1574235332090273 | 347             | host.2.12 | b80ef4b4-host.2.12-aa01 | 2019-11-20 07:35:32   | host.2.12 | b80ef4b4-host.2.12-aa01 | 17.2800006866455            | 27.2800006866455 | 31               | 84.25            |
| host.2.15.cluster2.aws.test | 3306 | 1574235332806557 | 365             | host.2.12 | b80ef4b4-host.2.12-aa01 | 2019-11-20 07:35:32   | host.2.12 | b80ef4b4-host.2.12-aa01 | 22.6000003814697            | 32.6000003814697 | 39               | 86.8000030517578 |
| host.2.11.cluster2.aws.test | 3306 | 1574235333045533 | 412             | host.2.12 | b80ef4b4-host.2.12-aa01 | 2019-11-20 07:35:33   | host.2.12 | b80ef4b4-host.2.12-aa01 | 23.3699989318848            | 33.3699989318848 | 37               | 74.9499969482422 |
| host.2.11.cluster2.aws.test | 3306 | 1574235333404018 | 457             | host.2.12 | b80ef4b4-host.2.12-aa01 | 2019-11-20 07:35:33   | host.2.12 | b80ef4b4-host.2.12-aa01 | 17.1199989318848            | 27.1199989318848 | 37               | 21.2900009155273 |
| host.2.15.cluster2.aws.test | 3306 | 1574235333523514 | 348             | host.2.12 | b80ef4b4-host.2.12-aa01 | 2019-11-20 07:35:33   | host.2.12 | b80ef4b4-host.2.12-aa01 | 13.8900003433228            | 23.8900003433228 | 35               | 24.0900001525879 |
| host.2.11.cluster2.aws.test | 3306 | 1574235333762610 | 412             | host.2.12 | b80ef4b4-host.2.12-aa01 | 2019-11-20 07:35:33   | host.2.12 | b80ef4b4-host.2.12-aa01 | 13.6099996566772            | 23.6099996566772 | 30               | 87.8099975585938 |
| host.2.15.cluster2.aws.test | 3306 | 1574235334121157 | 418             | host.2.12 | b80ef4b4-host.2.12-aa01 | 2019-11-20 07:35:34   | host.2.12 | b80ef4b4-host.2.12-aa01 | 18.9799995422363            | 28.9799995422363 | 30               | 49.4700012207031 |
| host.2.11.cluster2.aws.test | 3306 | 1574235334479235 | 433             | host.2.12 | b80ef4b4-host.2.12-aa01 | 2019-11-20 07:35:34   | host.2.12 | b80ef4b4-host.2.12-aa01 | 18.6100006103516            | 28.6100006103516 | 28               | 55.8600006103516 |
| host.2.11.cluster2.aws.test | 3306 | 1574235334718749 | 414             | host.2.12 | b80ef4b4-host.2.12-aa01 | 2019-11-20 07:35:34   | host.2.12 | b80ef4b4-host.2.12-aa01 | 14.4099998474121            | 24.4099998474121 | 28               | 8.10999965667725 |
| host.2.15.cluster2.aws.test | 3306 | 1574235334957082 | 352             | host.2.12 | b80ef4b4-host.2.12-aa01 | 2019-11-20 07:35:34   | host.2.12 | b80ef4b4-host.2.12-aa01 | 21.6199989318848            | 31.6199989318848 | 31               | 53.6199989318848 |
| host.2.11.cluster2.aws.test | 3306 | 1574235335196209 | 439             | host.2.12 | b80ef4b4-host.2.12-aa01 | 2019-11-20 07:35:35   | host.2.12 | b80ef4b4-host.2.12-aa01 | 16.6199989318848            | 26.6199989318848 | 31               | 92.870002746582  |
| host.2.15.cluster2.aws.test | 3306 | 1574235335434588 | 367             | host.2.12 | b80ef4b4-host.2.12-aa01 | 2019-11-20 07:35:35   | host.2.12 | b80ef4b4-host.2.12-aa01 | 29.6200008392334            | 39.6200008392334 | 39               | 79.4599990844727 |
| host.2.11.cluster2.aws.test | 3306 | 1574235335554172 | 415             | host.2.12 | b80ef4b4-host.2.12-aa01 | 2019-11-20 07:35:35   | host.2.12 | b80ef4b4-host.2.12-aa01 | 15.6800003051758            | 25.6800003051758 | 39               | 34.7700004577637 |
| host.2.12.cluster2.aws.test | 3306 | 1574235335673638 | 417             | host.2.12 | b80ef4b4-host.2.12-aa01 | 2019-11-20 07:35:35   | host.2.12 | b80ef4b4-host.2.12-aa01 | 17.7399997711182            | 27.7399997711182 | 39               | 38.9199981689453 |
| host.2.11.cluster2.aws.test | 3306 | 1574235335793167 | 414             | host.2.12 | b80ef4b4-host.2.12-aa01 | 2019-11-20 07:35:35   | host.2.12 | b80ef4b4-host.2.12-aa01 | 28.5599994659424            | 38.5599994659424 | 39               | 53.2599983215332 |
| host.2.12.cluster2.aws.test | 3306 | 1574235335912704 | 458             | host.2.12 | b80ef4b4-host.2.12-aa01 | 2019-11-20 07:35:35   | host.2.12 | b80ef4b4-host.2.12-aa01 | 14.8800001144409            | 24.8800001144409 | 39               | 13.7200002670288 |
+-----------------------------+------+------------------+-----------------+-----------+-------------------------+-----------------------+-----------+-------------------------+-----------------------------+------------------+------------------+------------------+
20 rows in set (0.05 sec)

Used aurora configuration:
mysql> select * from mysql_aws_aurora_hostgroups;
+------------------+------------------+--------+-------------+--------------------+------------+-------------------+------------------+-----------------------+-------------------+------------+------------+----------------+------------------------------------+
| writer_hostgroup | reader_hostgroup | active | aurora_port | domain_name        | max_lag_ms | check_interval_ms | check_timeout_ms | writer_is_also_reader | new_reader_weight | add_lag_ms | min_lag_ms | lag_num_checks | comment                            |
+------------------+------------------+--------+-------------+--------------------+------------+-------------------+------------------+-----------------------+-------------------+------------+------------+----------------+------------------------------------+
| 1271             | 1272             | 1      | 3306        | .aws-test.com      | 25         | 120               | 90               | 1                     | 1                 | 10         | 20         | 5              | Automated Aurora Testing Cluster 1 |
| 1273             | 1274             | 1      | 3306        | .cluster2.aws.test | 25         | 120               | 90               | 0                     | 1                 | 10         | 20         | 5              | Automated Aurora Testing Cluster 2 |
| 1275             | 1276             | 1      | 3306        | .aws.3.test.com    | 25         | 120               | 90               | 0                     | 2                 | 10         | 20         | 5              | Automated Aurora Testing Cluster 3 |
+------------------+------------------+--------+-------------+--------------------+------------+-------------------+------------------+-----------------------+-------------------+------------+------------+----------------+------------------------------------+
3 rows in set (0.00 sec)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2401,2019-11-17T22:45:23Z,2019-11-21T06:14:30Z,2020-06-15T18:59:38Z,MERGED,True,3,0,1,https://github.com/renecannao,Fix buffer overflow for long GTID set #2395,1,[],https://github.com/sysown/proxysql/pull/2401,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2401,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2401,2019-11-17T22:45:23Z,2019-11-21T06:14:30Z,2020-06-15T18:59:38Z,MERGED,True,3,0,1,https://github.com/renecannao,Fix buffer overflow for long GTID set #2395,1,[],https://github.com/sysown/proxysql/pull/2401,https://github.com/alpes214,2,https://github.com/sysown/proxysql/pull/2401#issuecomment-556397675,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2402,2019-11-18T11:36:58Z,2019-11-21T06:14:48Z,2019-11-21T06:14:48Z,MERGED,True,24,15,2,https://github.com/alpes214,Fix for charset_unsigned_int test,2,[],https://github.com/sysown/proxysql/pull/2402,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2402,Updated charset_unsigned_int_t testcase,Updated charset_unsigned_int_t testcase,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2402,2019-11-18T11:36:58Z,2019-11-21T06:14:48Z,2019-11-21T06:14:48Z,MERGED,True,24,15,2,https://github.com/alpes214,Fix for charset_unsigned_int test,2,[],https://github.com/sysown/proxysql/pull/2402,https://github.com/alpes214,2,https://github.com/sysown/proxysql/pull/2402#issuecomment-556384915,Updated charset_unsigned_int_t testcase,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2403,2019-11-18T14:05:11Z,2019-11-27T00:41:57Z,2020-06-15T18:59:42Z,MERGED,True,1508,711,32,https://github.com/renecannao,V2.0.9 whitelist,12,[],https://github.com/sysown/proxysql/pull/2403,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2403,Draft of the implementation of whitelist firewall,Draft of the implementation of whitelist firewall,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2403,2019-11-18T14:05:11Z,2019-11-27T00:41:57Z,2020-06-15T18:59:42Z,MERGED,True,1508,711,32,https://github.com/renecannao,V2.0.9 whitelist,12,[],https://github.com/sysown/proxysql/pull/2403,https://github.com/alpes214,2,https://github.com/sysown/proxysql/pull/2403#issuecomment-556398601,Draft of the implementation of whitelist firewall,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2407,2019-11-20T14:40:24Z,2019-11-27T00:42:17Z,2020-06-15T18:59:40Z,MERGED,True,995,50,26,https://github.com/renecannao,V2.0.9 libmicrohttpd 0.9.68,7,[],https://github.com/sysown/proxysql/pull/2407,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2407,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2407,2019-11-20T14:40:24Z,2019-11-27T00:42:17Z,2020-06-15T18:59:40Z,MERGED,True,995,50,26,https://github.com/renecannao,V2.0.9 libmicrohttpd 0.9.68,7,[],https://github.com/sysown/proxysql/pull/2407,https://github.com/alpes214,2,https://github.com/sysown/proxysql/pull/2407#issuecomment-556398960,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2407,2019-11-20T14:40:24Z,2019-11-27T00:42:17Z,2020-06-15T18:59:40Z,MERGED,True,995,50,26,https://github.com/renecannao,V2.0.9 libmicrohttpd 0.9.68,7,[],https://github.com/sysown/proxysql/pull/2407,https://github.com/alpes214,3,https://github.com/sysown/proxysql/pull/2407#issuecomment-558069414,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2407,2019-11-20T14:40:24Z,2019-11-27T00:42:17Z,2020-06-15T18:59:40Z,MERGED,True,995,50,26,https://github.com/renecannao,V2.0.9 libmicrohttpd 0.9.68,7,[],https://github.com/sysown/proxysql/pull/2407,https://github.com/alpes214,4,https://github.com/sysown/proxysql/pull/2407#issuecomment-558612961,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2407,2019-11-20T14:40:24Z,2019-11-27T00:42:17Z,2020-06-15T18:59:40Z,MERGED,True,995,50,26,https://github.com/renecannao,V2.0.9 libmicrohttpd 0.9.68,7,[],https://github.com/sysown/proxysql/pull/2407,https://github.com/alpes214,5,https://github.com/sysown/proxysql/pull/2407#issuecomment-558620220,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2410,2019-11-21T17:50:27Z,2019-11-22T13:14:37Z,2019-11-22T13:14:37Z,MERGED,True,6,33,6,https://github.com/alpes214,ARM compilation error: remove google-coredumper from project deps. #,1,[],https://github.com/sysown/proxysql/pull/2410,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2410,"Description:
resolves issue #2406
gcore [-a] [-o prefix] pid1 [pid2...pidN]
Generate core dumps of one or more running programs with process IDs pid1, pid2, etc. A core file produced by gcore is equivalent to one produced by the kernel when the process crashes (and when ulimit -c was used to set up an appropriate core dump limit). However, unlike after a crash, after gcore finishes its job the program remains running without any change.","Description:
resolves issue #2406
gcore [-a] [-o prefix] pid1 [pid2...pidN]
Generate core dumps of one or more running programs with process IDs pid1, pid2, etc. A core file produced by gcore is equivalent to one produced by the kernel when the process crashes (and when ulimit -c was used to set up an appropriate core dump limit). However, unlike after a crash, after gcore finishes its job the program remains running without any change.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2412,2019-11-22T10:47:02Z,2019-11-22T13:15:02Z,2019-11-22T13:15:02Z,MERGED,True,1,1,1,https://github.com/alpes214,Aurora replication lag: fix for master replication lag,1,[],https://github.com/sysown/proxysql/pull/2412,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2412,"Description:
This PR handles master replication lag. If the replication lag is equal to 0 then padding/minimum and windowing is not applied.
Testing:
Tested with --sqlite3-server. The mysql_server_aws_aurora_log shows estimated lag 0 for replication masters.
mysql> select hostname, port, time_start_us, SERVER_ID, SESSION_ID, LAST_UPDATE_TIMESTAMP, replica_lag_in_milliseconds rl, estimated_lag_ms el, cpu from mysql_server_aws_aurora_log limit 10;
+------------------------+------+------------------+-----------+-------------------------+-----------------------+------------------+----+------------------+
| hostname               | port | time_start_us    | SERVER_ID | SESSION_ID              | LAST_UPDATE_TIMESTAMP | rl               | el | CPU              |
+------------------------+------+------------------+-----------+-------------------------+-----------------------+------------------+----+------------------+
| host.1.11.aws-test.com | 3306 | 1574419600651913 | host.1.11 | MASTER_SESSION_ID       | 2019-11-22 10:46:40   | 0                | 0  | 96.1600036621094 |
| host.1.11.aws-test.com | 3306 | 1574419600651913 | host.1.12 | b80ef4b4-host.1.12-aa01 | 2019-11-22 10:46:40   | 15.25            | 39 | 64.4100036621094 |
| host.1.11.aws-test.com | 3306 | 1574419600651913 | host.1.13 | b80ef4b4-host.1.13-aa01 | 2019-11-22 10:46:40   | 24.3999996185303 | 36 | 13.3100004196167 |
| host.1.11.aws-test.com | 3306 | 1574419600651913 | host.1.14 | b80ef4b4-host.1.14-aa01 | 2019-11-22 10:46:40   | 18.6199989318848 | 29 | 47.9599990844727 |
| host.1.11.aws-test.com | 3306 | 1574419600651913 | host.1.15 | b80ef4b4-host.1.15-aa01 | 2019-11-22 10:46:40   | 20.2000007629395 | 36 | 73.9899978637695 |
| host.1.11.aws-test.com | 3306 | 1574419600651913 | host.1.16 | b80ef4b4-host.1.16-aa01 | 2019-11-22 10:46:40   | 19.8800010681152 | 36 | 8.34000015258789 |
| host.1.11.aws-test.com | 3306 | 1574419601010364 | host.1.11 | MASTER_SESSION_ID       | 2019-11-22 10:46:41   | 0                | 0  | 80.7300033569336 |
| host.1.11.aws-test.com | 3306 | 1574419601010364 | host.1.12 | b80ef4b4-host.1.12-aa01 | 2019-11-22 10:46:41   | 14.5500001907349 | 39 | 68.5299987792969 |
| host.1.11.aws-test.com | 3306 | 1574419601010364 | host.1.13 | b80ef4b4-host.1.13-aa01 | 2019-11-22 10:46:41   | 19.2700004577637 | 34 | 17.9699993133545 |
| host.1.11.aws-test.com | 3306 | 1574419601010364 | host.1.14 | b80ef4b4-host.1.14-aa01 | 2019-11-22 10:46:41   | 19.8899993896484 | 34 | 28.6000003814697 |
+------------------------+------+------------------+-----------+-------------------------+-----------------------+------------------+----+------------------+
10 rows in set (0.07 sec)","Description:
This PR handles master replication lag. If the replication lag is equal to 0 then padding/minimum and windowing is not applied.
Testing:
Tested with --sqlite3-server. The mysql_server_aws_aurora_log shows estimated lag 0 for replication masters.
mysql> select hostname, port, time_start_us, SERVER_ID, SESSION_ID, LAST_UPDATE_TIMESTAMP, replica_lag_in_milliseconds rl, estimated_lag_ms el, cpu from mysql_server_aws_aurora_log limit 10;
+------------------------+------+------------------+-----------+-------------------------+-----------------------+------------------+----+------------------+
| hostname               | port | time_start_us    | SERVER_ID | SESSION_ID              | LAST_UPDATE_TIMESTAMP | rl               | el | CPU              |
+------------------------+------+------------------+-----------+-------------------------+-----------------------+------------------+----+------------------+
| host.1.11.aws-test.com | 3306 | 1574419600651913 | host.1.11 | MASTER_SESSION_ID       | 2019-11-22 10:46:40   | 0                | 0  | 96.1600036621094 |
| host.1.11.aws-test.com | 3306 | 1574419600651913 | host.1.12 | b80ef4b4-host.1.12-aa01 | 2019-11-22 10:46:40   | 15.25            | 39 | 64.4100036621094 |
| host.1.11.aws-test.com | 3306 | 1574419600651913 | host.1.13 | b80ef4b4-host.1.13-aa01 | 2019-11-22 10:46:40   | 24.3999996185303 | 36 | 13.3100004196167 |
| host.1.11.aws-test.com | 3306 | 1574419600651913 | host.1.14 | b80ef4b4-host.1.14-aa01 | 2019-11-22 10:46:40   | 18.6199989318848 | 29 | 47.9599990844727 |
| host.1.11.aws-test.com | 3306 | 1574419600651913 | host.1.15 | b80ef4b4-host.1.15-aa01 | 2019-11-22 10:46:40   | 20.2000007629395 | 36 | 73.9899978637695 |
| host.1.11.aws-test.com | 3306 | 1574419600651913 | host.1.16 | b80ef4b4-host.1.16-aa01 | 2019-11-22 10:46:40   | 19.8800010681152 | 36 | 8.34000015258789 |
| host.1.11.aws-test.com | 3306 | 1574419601010364 | host.1.11 | MASTER_SESSION_ID       | 2019-11-22 10:46:41   | 0                | 0  | 80.7300033569336 |
| host.1.11.aws-test.com | 3306 | 1574419601010364 | host.1.12 | b80ef4b4-host.1.12-aa01 | 2019-11-22 10:46:41   | 14.5500001907349 | 39 | 68.5299987792969 |
| host.1.11.aws-test.com | 3306 | 1574419601010364 | host.1.13 | b80ef4b4-host.1.13-aa01 | 2019-11-22 10:46:41   | 19.2700004577637 | 34 | 17.9699993133545 |
| host.1.11.aws-test.com | 3306 | 1574419601010364 | host.1.14 | b80ef4b4-host.1.14-aa01 | 2019-11-22 10:46:41   | 19.8899993896484 | 34 | 28.6000003814697 |
+------------------------+------+------------------+-----------+-------------------------+-----------------------+------------------+----+------------------+
10 rows in set (0.07 sec)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2413,2019-11-22T11:27:19Z,2019-12-12T08:14:34Z,2019-12-12T08:14:34Z,MERGED,True,1930,744,10,https://github.com/alpes214,V2.0.9 select config file [FR],9,[],https://github.com/sysown/proxysql/pull/2413,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2413,"Description:
Implements new proxysql command select config to file. Exports proxysql configuration tables into the configuration file. The file format similar to the one used for /etc/proxysql.cnf therefor exported file can be used to configure another instance of the proxysql.
Testing:

select config to /tmp/file;
mysql -uadmin -padmin -h127.0.0.1 -P6032 -e 'select config file';
Automated tests are created for testing separate fields.","Description:
Implements new proxysql command select config to file. Exports proxysql configuration tables into the configuration file. The file format similar to the one used for /etc/proxysql.cnf therefor exported file can be used to configure another instance of the proxysql.
Testing:

select config to /tmp/file;
mysql -uadmin -padmin -h127.0.0.1 -P6032 -e 'select config file';
Automated tests are created for testing separate fields.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2415,2019-11-22T18:15:55Z,2019-12-02T19:53:00Z,2019-12-02T19:53:00Z,CLOSED,False,26,17,4,https://github.com/alpes214,V2.0.9 unsigned charset,2,[],https://github.com/sysown/proxysql/pull/2415,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2415,"Description:

the expected values have to be adjusted according to version of the client library.
small change in the log message: logging collation name with collation id.","Description:

the expected values have to be adjusted according to version of the client library.
small change in the log message: logging collation name with collation id.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2419,2019-11-27T02:25:16Z,2019-11-27T03:17:29Z,2020-06-15T18:59:03Z,MERGED,True,4,4,1,https://github.com/renecannao,Fixed issues generating some queries for galera support,1,[],https://github.com/sysown/proxysql/pull/2419,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2419,Apply #2394 to 2.0.9,Apply #2394 to 2.0.9,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2420,2019-11-27T02:25:42Z,2019-11-27T02:52:56Z,2020-06-15T18:59:05Z,MERGED,True,126,7,11,https://github.com/renecannao,Detect SQL injection,2,[],https://github.com/sysown/proxysql/pull/2420,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2420,,,True,{'HOORAY': ['https://github.com/Stanback']}
sysown/proxysql,https://github.com/sysown/proxysql,2422,2019-11-28T09:07:27Z,2019-12-05T11:32:33Z,2019-12-05T11:32:33Z,MERGED,True,1,1,1,https://github.com/alpes214,Fix generation of the group replication hostgroups table,1,[],https://github.com/sysown/proxysql/pull/2422,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2422,"Description:
Fixing bug in the query. Rolled back to original one. Related to #2414
Testing:
The --sqlite3-server mode for testgrouprep did not work before fix. After fix group replication simulation works as expected.","Description:
Fixing bug in the query. Rolled back to original one. Related to #2414
Testing:
The --sqlite3-server mode for testgrouprep did not work before fix. After fix group replication simulation works as expected.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2422,2019-11-28T09:07:27Z,2019-12-05T11:32:33Z,2019-12-05T11:32:33Z,MERGED,True,1,1,1,https://github.com/alpes214,Fix generation of the group replication hostgroups table,1,[],https://github.com/sysown/proxysql/pull/2422,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2422#issuecomment-562091165,"Description:
Fixing bug in the query. Rolled back to original one. Related to #2414
Testing:
The --sqlite3-server mode for testgrouprep did not work before fix. After fix group replication simulation works as expected.",ping @acampoh,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2423,2019-11-28T13:17:59Z,2019-12-01T10:44:51Z,2020-06-15T18:59:02Z,MERGED,True,8,1,2,https://github.com/renecannao,Set variables before setting lock_hostgroup,1,[],https://github.com/sysown/proxysql/pull/2423,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2423,"This commit fix the following bug:
If some session variables were set by the client before proxysql turned on
lock_hostgroup, these variables were not set.
This commit also makes proxysql aware that this query causes lock_hostgroup:
SET SESSION information_schema_stats_expiry=0","This commit fix the following bug:
If some session variables were set by the client before proxysql turned on
lock_hostgroup, these variables were not set.
This commit also makes proxysql aware that this query causes lock_hostgroup:
SET SESSION information_schema_stats_expiry=0",True,{'THUMBS_UP': ['https://github.com/yakirgb']}
sysown/proxysql,https://github.com/sysown/proxysql,2425,2019-11-29T06:48:55Z,2019-11-29T17:13:38Z,2019-11-29T17:13:38Z,CLOSED,False,0,13,1,https://github.com/alpes214,[WIP] Fix for load mysql servers to runtime,1,[],https://github.com/sysown/proxysql/pull/2425,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2425,"Description:
Fix bug of dropping connections when load mysql servers to runtime is called.
Testing:
Tested with aurora testing mode --sqlite3-server","Description:
Fix bug of dropping connections when load mysql servers to runtime is called.
Testing:
Tested with aurora testing mode --sqlite3-server",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2427,2019-12-02T02:57:56Z,2019-12-02T08:25:44Z,2019-12-02T08:25:45Z,MERGED,True,9,2,1,https://github.com/bskllzh,Fix write event log and audit log  coredump(the events.logfile&audit.‚Ä¶,1,[],https://github.com/sysown/proxysql/pull/2427,https://github.com/bskllzh,1,https://github.com/sysown/proxysql/pull/2427,"‚Ä¶logfile null pointer)
Bug description:
When i make a benchmark test with a sysbench(version: 1.0.17) in proxysql 2.0.8   + mysql 5.7.26, i get the follow error info:
Error: signal 11:
proxysql(_Z13crash_handleri+0x25)[0x5b607c]
/lib64/libc.so.6(+0x35270)[0x2b673de34270]
/lib64/libstdc++.so.6(_ZNSo6sentryC2ERSo+0xf)[0x2b673d67521f]
/lib64/libstdc++.so.6(_ZNSo5writeEPKcl+0x31)[0x2b673d675621]
proxysql(_ZN11MySQL_Event20write_query_format_1EPSt13basic_fstreamIcSt11char_traitsIcEE+0x27d)[0x6e2d81]
proxysql(_ZN11MySQL_Event5writeEPSt13basic_fstreamIcSt11char_traitsIcEEP13MySQL_Session+0x79)[0x6e19e9]
proxysql(_ZN12MySQL_Logger11log_requestEP13MySQL_SessionP17MySQL_Data_Stream+0x710)[0x6e5416]
proxysql(_ZN13MySQL_Session8LogQueryEP17MySQL_Data_Stream+0x6d)[0x654055]
proxysql(_ZN13MySQL_Session10RequestEndEP17MySQL_Data_Stream+0x35)[0x6540d7]
proxysql(_ZN13MySQL_Session7handlerEv+0x4397)[0x6459ed]
proxysql(_ZN12MySQL_Thread20process_all_sessionsEv+0x830)[0x623180]
proxysql(_ZN12MySQL_Thread3runEv+0x2cbe)[0x62208a]
proxysql(_Z24mysql_worker_thread_funcPv+0xbb)[0x5afb05]
/lib64/libpthread.so.0(+0x7e25)[0x2b673cda8e25]
/lib64/libc.so.6(clone+0x6d)[0x2b673def734d]
2019-12-02 09:52:26 main.cpp:1396:ProxySQL_daemonize_phase3(): [ERROR] ProxySQL crashed. Restarting!
I analyze the coredump with proxysql 2.0.8 debug version  very carefully, and  i found the variable of events.logfile  is null pointer in log_request  function when it call write function(me.write(events.logfile, sess)). The following is the coredumpÔºàwrite (this=0x2b67402fd1f0, f=0x0, sess=0x2b67414a8c00)Ôºâ:
(gdb) bt
#0  0x00002b673d67521f in std::ostream::sentry::sentry(std::ostream&) () from /lib64/libstdc++.so.6
#1  0x00002b673d675621 in std::ostream::write(char const*, long) () from /lib64/libstdc++.so.6
#2  0x00000000006e2d81 in MySQL_Event::write_query_format_1 (this=0x2b67402fd1f0, f=0x0) at MySQL_Logger.cpp:265
#3  0x00000000006e19e9 in MySQL_Event::write (this=0x2b67402fd1f0, f=0x0, sess=0x2b67414a8c00) at MySQL_Logger.cpp:89
#4  0x00000000006e5416 in MySQL_Logger::log_request (this=0x2b673e419680, sess=0x2b67414a8c00, myds=0x2b6741346480)
at MySQL_Logger.cpp:717
#5  0x0000000000654055 in MySQL_Session::LogQuery (this=0x2b67414a8c00, myds=0x2b6741346480) at MySQL_Session.cpp:6691
#6  0x00000000006540d7 in MySQL_Session::RequestEnd (this=0x2b67414a8c00, myds=0x2b6741346480) at MySQL_Session.cpp:6711
#7  0x00000000006459ed in MySQL_Session::handler (this=0x2b67414a8c00) at MySQL_Session.cpp:4086
#8  0x0000000000623180 in MySQL_Thread::process_all_sessions (this=0x2b6741301000) at MySQL_Thread.cpp:4392
#9  0x000000000062208a in MySQL_Thread::run (this=0x2b6741301000) at MySQL_Thread.cpp:4125
#10 0x00000000005afb05 in mysql_worker_thread_func (arg=0x2b673e461f30) at main.cpp:648
#11 0x00002b673cda8e25 in start_thread () from /lib64/libpthread.so.0
#12 0x00002b673def734d in clone () from /lib64/libc.so.6
And then i add a line of code in log_request function of MySQL_Logger.cpp file to check up whether events.logfile is null pointer Ôºåas follow:
void MySQL_Logger::log_request(MySQL_Session *sess, MySQL_Data_Stream *myds) {
if (events.enabled==false) return;
if (events.logfile==NULL) return;
proxy_info(""log_request: First: events.logfile is null %d\n"", (events.logfile == NULL) ? 1 : 0);
MySQL_Connection_userinfo *ui=sess->client_myds->myconn->userinfo;

And i make a benchmark test  again with proxysql 2.0.8 debug version, the coredump of proxysql happen again, then i get the follow print info from proxysql.log
[root@XXXXX proxysql]# grep -n -w 'log_request: First: events.logfile is null 1' proxysql.log
7358447:2019-12-02 09:52:26 MySQL_Logger.cpp:617:log_request(): [INFO] log_request: First: events.logfile is null 1
7358448:2019-12-02 09:52:26 MySQL_Logger.cpp:617:log_request(): [INFO] log_request: First: events.logfile is null 1
Bux fix:
Fix write event log and audit log  coredump, because  the proxysql get the null pointer variable of events.logfileÔºàaudit.logfileÔºâin a multithreaded environment.","‚Ä¶logfile null pointer)
Bug description:
When i make a benchmark test with a sysbench(version: 1.0.17) in proxysql 2.0.8   + mysql 5.7.26, i get the follow error info:
Error: signal 11:
proxysql(_Z13crash_handleri+0x25)[0x5b607c]
/lib64/libc.so.6(+0x35270)[0x2b673de34270]
/lib64/libstdc++.so.6(_ZNSo6sentryC2ERSo+0xf)[0x2b673d67521f]
/lib64/libstdc++.so.6(_ZNSo5writeEPKcl+0x31)[0x2b673d675621]
proxysql(_ZN11MySQL_Event20write_query_format_1EPSt13basic_fstreamIcSt11char_traitsIcEE+0x27d)[0x6e2d81]
proxysql(_ZN11MySQL_Event5writeEPSt13basic_fstreamIcSt11char_traitsIcEEP13MySQL_Session+0x79)[0x6e19e9]
proxysql(_ZN12MySQL_Logger11log_requestEP13MySQL_SessionP17MySQL_Data_Stream+0x710)[0x6e5416]
proxysql(_ZN13MySQL_Session8LogQueryEP17MySQL_Data_Stream+0x6d)[0x654055]
proxysql(_ZN13MySQL_Session10RequestEndEP17MySQL_Data_Stream+0x35)[0x6540d7]
proxysql(_ZN13MySQL_Session7handlerEv+0x4397)[0x6459ed]
proxysql(_ZN12MySQL_Thread20process_all_sessionsEv+0x830)[0x623180]
proxysql(_ZN12MySQL_Thread3runEv+0x2cbe)[0x62208a]
proxysql(_Z24mysql_worker_thread_funcPv+0xbb)[0x5afb05]
/lib64/libpthread.so.0(+0x7e25)[0x2b673cda8e25]
/lib64/libc.so.6(clone+0x6d)[0x2b673def734d]
2019-12-02 09:52:26 main.cpp:1396:ProxySQL_daemonize_phase3(): [ERROR] ProxySQL crashed. Restarting!
I analyze the coredump with proxysql 2.0.8 debug version  very carefully, and  i found the variable of events.logfile  is null pointer in log_request  function when it call write function(me.write(events.logfile, sess)). The following is the coredumpÔºàwrite (this=0x2b67402fd1f0, f=0x0, sess=0x2b67414a8c00)Ôºâ:
(gdb) bt
#0  0x00002b673d67521f in std::ostream::sentry::sentry(std::ostream&) () from /lib64/libstdc++.so.6
#1  0x00002b673d675621 in std::ostream::write(char const*, long) () from /lib64/libstdc++.so.6
#2  0x00000000006e2d81 in MySQL_Event::write_query_format_1 (this=0x2b67402fd1f0, f=0x0) at MySQL_Logger.cpp:265
#3  0x00000000006e19e9 in MySQL_Event::write (this=0x2b67402fd1f0, f=0x0, sess=0x2b67414a8c00) at MySQL_Logger.cpp:89
#4  0x00000000006e5416 in MySQL_Logger::log_request (this=0x2b673e419680, sess=0x2b67414a8c00, myds=0x2b6741346480)
at MySQL_Logger.cpp:717
#5  0x0000000000654055 in MySQL_Session::LogQuery (this=0x2b67414a8c00, myds=0x2b6741346480) at MySQL_Session.cpp:6691
#6  0x00000000006540d7 in MySQL_Session::RequestEnd (this=0x2b67414a8c00, myds=0x2b6741346480) at MySQL_Session.cpp:6711
#7  0x00000000006459ed in MySQL_Session::handler (this=0x2b67414a8c00) at MySQL_Session.cpp:4086
#8  0x0000000000623180 in MySQL_Thread::process_all_sessions (this=0x2b6741301000) at MySQL_Thread.cpp:4392
#9  0x000000000062208a in MySQL_Thread::run (this=0x2b6741301000) at MySQL_Thread.cpp:4125
#10 0x00000000005afb05 in mysql_worker_thread_func (arg=0x2b673e461f30) at main.cpp:648
#11 0x00002b673cda8e25 in start_thread () from /lib64/libpthread.so.0
#12 0x00002b673def734d in clone () from /lib64/libc.so.6
And then i add a line of code in log_request function of MySQL_Logger.cpp file to check up whether events.logfile is null pointer Ôºåas follow:
void MySQL_Logger::log_request(MySQL_Session *sess, MySQL_Data_Stream *myds) {
if (events.enabled==false) return;
if (events.logfile==NULL) return;
proxy_info(""log_request: First: events.logfile is null %d\n"", (events.logfile == NULL) ? 1 : 0);
MySQL_Connection_userinfo *ui=sess->client_myds->myconn->userinfo;

And i make a benchmark test  again with proxysql 2.0.8 debug version, the coredump of proxysql happen again, then i get the follow print info from proxysql.log
[root@XXXXX proxysql]# grep -n -w 'log_request: First: events.logfile is null 1' proxysql.log
7358447:2019-12-02 09:52:26 MySQL_Logger.cpp:617:log_request(): [INFO] log_request: First: events.logfile is null 1
7358448:2019-12-02 09:52:26 MySQL_Logger.cpp:617:log_request(): [INFO] log_request: First: events.logfile is null 1
Bux fix:
Fix write event log and audit log  coredump, because  the proxysql get the null pointer variable of events.logfileÔºàaudit.logfileÔºâin a multithreaded environment.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2427,2019-12-02T02:57:56Z,2019-12-02T08:25:44Z,2019-12-02T08:25:45Z,MERGED,True,9,2,1,https://github.com/bskllzh,Fix write event log and audit log  coredump(the events.logfile&audit.‚Ä¶,1,[],https://github.com/sysown/proxysql/pull/2427,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2427#issuecomment-560207554,"‚Ä¶logfile null pointer)
Bug description:
When i make a benchmark test with a sysbench(version: 1.0.17) in proxysql 2.0.8   + mysql 5.7.26, i get the follow error info:
Error: signal 11:
proxysql(_Z13crash_handleri+0x25)[0x5b607c]
/lib64/libc.so.6(+0x35270)[0x2b673de34270]
/lib64/libstdc++.so.6(_ZNSo6sentryC2ERSo+0xf)[0x2b673d67521f]
/lib64/libstdc++.so.6(_ZNSo5writeEPKcl+0x31)[0x2b673d675621]
proxysql(_ZN11MySQL_Event20write_query_format_1EPSt13basic_fstreamIcSt11char_traitsIcEE+0x27d)[0x6e2d81]
proxysql(_ZN11MySQL_Event5writeEPSt13basic_fstreamIcSt11char_traitsIcEEP13MySQL_Session+0x79)[0x6e19e9]
proxysql(_ZN12MySQL_Logger11log_requestEP13MySQL_SessionP17MySQL_Data_Stream+0x710)[0x6e5416]
proxysql(_ZN13MySQL_Session8LogQueryEP17MySQL_Data_Stream+0x6d)[0x654055]
proxysql(_ZN13MySQL_Session10RequestEndEP17MySQL_Data_Stream+0x35)[0x6540d7]
proxysql(_ZN13MySQL_Session7handlerEv+0x4397)[0x6459ed]
proxysql(_ZN12MySQL_Thread20process_all_sessionsEv+0x830)[0x623180]
proxysql(_ZN12MySQL_Thread3runEv+0x2cbe)[0x62208a]
proxysql(_Z24mysql_worker_thread_funcPv+0xbb)[0x5afb05]
/lib64/libpthread.so.0(+0x7e25)[0x2b673cda8e25]
/lib64/libc.so.6(clone+0x6d)[0x2b673def734d]
2019-12-02 09:52:26 main.cpp:1396:ProxySQL_daemonize_phase3(): [ERROR] ProxySQL crashed. Restarting!
I analyze the coredump with proxysql 2.0.8 debug version  very carefully, and  i found the variable of events.logfile  is null pointer in log_request  function when it call write function(me.write(events.logfile, sess)). The following is the coredumpÔºàwrite (this=0x2b67402fd1f0, f=0x0, sess=0x2b67414a8c00)Ôºâ:
(gdb) bt
#0  0x00002b673d67521f in std::ostream::sentry::sentry(std::ostream&) () from /lib64/libstdc++.so.6
#1  0x00002b673d675621 in std::ostream::write(char const*, long) () from /lib64/libstdc++.so.6
#2  0x00000000006e2d81 in MySQL_Event::write_query_format_1 (this=0x2b67402fd1f0, f=0x0) at MySQL_Logger.cpp:265
#3  0x00000000006e19e9 in MySQL_Event::write (this=0x2b67402fd1f0, f=0x0, sess=0x2b67414a8c00) at MySQL_Logger.cpp:89
#4  0x00000000006e5416 in MySQL_Logger::log_request (this=0x2b673e419680, sess=0x2b67414a8c00, myds=0x2b6741346480)
at MySQL_Logger.cpp:717
#5  0x0000000000654055 in MySQL_Session::LogQuery (this=0x2b67414a8c00, myds=0x2b6741346480) at MySQL_Session.cpp:6691
#6  0x00000000006540d7 in MySQL_Session::RequestEnd (this=0x2b67414a8c00, myds=0x2b6741346480) at MySQL_Session.cpp:6711
#7  0x00000000006459ed in MySQL_Session::handler (this=0x2b67414a8c00) at MySQL_Session.cpp:4086
#8  0x0000000000623180 in MySQL_Thread::process_all_sessions (this=0x2b6741301000) at MySQL_Thread.cpp:4392
#9  0x000000000062208a in MySQL_Thread::run (this=0x2b6741301000) at MySQL_Thread.cpp:4125
#10 0x00000000005afb05 in mysql_worker_thread_func (arg=0x2b673e461f30) at main.cpp:648
#11 0x00002b673cda8e25 in start_thread () from /lib64/libpthread.so.0
#12 0x00002b673def734d in clone () from /lib64/libc.so.6
And then i add a line of code in log_request function of MySQL_Logger.cpp file to check up whether events.logfile is null pointer Ôºåas follow:
void MySQL_Logger::log_request(MySQL_Session *sess, MySQL_Data_Stream *myds) {
if (events.enabled==false) return;
if (events.logfile==NULL) return;
proxy_info(""log_request: First: events.logfile is null %d\n"", (events.logfile == NULL) ? 1 : 0);
MySQL_Connection_userinfo *ui=sess->client_myds->myconn->userinfo;

And i make a benchmark test  again with proxysql 2.0.8 debug version, the coredump of proxysql happen again, then i get the follow print info from proxysql.log
[root@XXXXX proxysql]# grep -n -w 'log_request: First: events.logfile is null 1' proxysql.log
7358447:2019-12-02 09:52:26 MySQL_Logger.cpp:617:log_request(): [INFO] log_request: First: events.logfile is null 1
7358448:2019-12-02 09:52:26 MySQL_Logger.cpp:617:log_request(): [INFO] log_request: First: events.logfile is null 1
Bux fix:
Fix write event log and audit log  coredump, because  the proxysql get the null pointer variable of events.logfileÔºàaudit.logfileÔºâin a multithreaded environment.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2427,2019-12-02T02:57:56Z,2019-12-02T08:25:44Z,2019-12-02T08:25:45Z,MERGED,True,9,2,1,https://github.com/bskllzh,Fix write event log and audit log  coredump(the events.logfile&audit.‚Ä¶,1,[],https://github.com/sysown/proxysql/pull/2427,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2427#issuecomment-560277061,"‚Ä¶logfile null pointer)
Bug description:
When i make a benchmark test with a sysbench(version: 1.0.17) in proxysql 2.0.8   + mysql 5.7.26, i get the follow error info:
Error: signal 11:
proxysql(_Z13crash_handleri+0x25)[0x5b607c]
/lib64/libc.so.6(+0x35270)[0x2b673de34270]
/lib64/libstdc++.so.6(_ZNSo6sentryC2ERSo+0xf)[0x2b673d67521f]
/lib64/libstdc++.so.6(_ZNSo5writeEPKcl+0x31)[0x2b673d675621]
proxysql(_ZN11MySQL_Event20write_query_format_1EPSt13basic_fstreamIcSt11char_traitsIcEE+0x27d)[0x6e2d81]
proxysql(_ZN11MySQL_Event5writeEPSt13basic_fstreamIcSt11char_traitsIcEEP13MySQL_Session+0x79)[0x6e19e9]
proxysql(_ZN12MySQL_Logger11log_requestEP13MySQL_SessionP17MySQL_Data_Stream+0x710)[0x6e5416]
proxysql(_ZN13MySQL_Session8LogQueryEP17MySQL_Data_Stream+0x6d)[0x654055]
proxysql(_ZN13MySQL_Session10RequestEndEP17MySQL_Data_Stream+0x35)[0x6540d7]
proxysql(_ZN13MySQL_Session7handlerEv+0x4397)[0x6459ed]
proxysql(_ZN12MySQL_Thread20process_all_sessionsEv+0x830)[0x623180]
proxysql(_ZN12MySQL_Thread3runEv+0x2cbe)[0x62208a]
proxysql(_Z24mysql_worker_thread_funcPv+0xbb)[0x5afb05]
/lib64/libpthread.so.0(+0x7e25)[0x2b673cda8e25]
/lib64/libc.so.6(clone+0x6d)[0x2b673def734d]
2019-12-02 09:52:26 main.cpp:1396:ProxySQL_daemonize_phase3(): [ERROR] ProxySQL crashed. Restarting!
I analyze the coredump with proxysql 2.0.8 debug version  very carefully, and  i found the variable of events.logfile  is null pointer in log_request  function when it call write function(me.write(events.logfile, sess)). The following is the coredumpÔºàwrite (this=0x2b67402fd1f0, f=0x0, sess=0x2b67414a8c00)Ôºâ:
(gdb) bt
#0  0x00002b673d67521f in std::ostream::sentry::sentry(std::ostream&) () from /lib64/libstdc++.so.6
#1  0x00002b673d675621 in std::ostream::write(char const*, long) () from /lib64/libstdc++.so.6
#2  0x00000000006e2d81 in MySQL_Event::write_query_format_1 (this=0x2b67402fd1f0, f=0x0) at MySQL_Logger.cpp:265
#3  0x00000000006e19e9 in MySQL_Event::write (this=0x2b67402fd1f0, f=0x0, sess=0x2b67414a8c00) at MySQL_Logger.cpp:89
#4  0x00000000006e5416 in MySQL_Logger::log_request (this=0x2b673e419680, sess=0x2b67414a8c00, myds=0x2b6741346480)
at MySQL_Logger.cpp:717
#5  0x0000000000654055 in MySQL_Session::LogQuery (this=0x2b67414a8c00, myds=0x2b6741346480) at MySQL_Session.cpp:6691
#6  0x00000000006540d7 in MySQL_Session::RequestEnd (this=0x2b67414a8c00, myds=0x2b6741346480) at MySQL_Session.cpp:6711
#7  0x00000000006459ed in MySQL_Session::handler (this=0x2b67414a8c00) at MySQL_Session.cpp:4086
#8  0x0000000000623180 in MySQL_Thread::process_all_sessions (this=0x2b6741301000) at MySQL_Thread.cpp:4392
#9  0x000000000062208a in MySQL_Thread::run (this=0x2b6741301000) at MySQL_Thread.cpp:4125
#10 0x00000000005afb05 in mysql_worker_thread_func (arg=0x2b673e461f30) at main.cpp:648
#11 0x00002b673cda8e25 in start_thread () from /lib64/libpthread.so.0
#12 0x00002b673def734d in clone () from /lib64/libc.so.6
And then i add a line of code in log_request function of MySQL_Logger.cpp file to check up whether events.logfile is null pointer Ôºåas follow:
void MySQL_Logger::log_request(MySQL_Session *sess, MySQL_Data_Stream *myds) {
if (events.enabled==false) return;
if (events.logfile==NULL) return;
proxy_info(""log_request: First: events.logfile is null %d\n"", (events.logfile == NULL) ? 1 : 0);
MySQL_Connection_userinfo *ui=sess->client_myds->myconn->userinfo;

And i make a benchmark test  again with proxysql 2.0.8 debug version, the coredump of proxysql happen again, then i get the follow print info from proxysql.log
[root@XXXXX proxysql]# grep -n -w 'log_request: First: events.logfile is null 1' proxysql.log
7358447:2019-12-02 09:52:26 MySQL_Logger.cpp:617:log_request(): [INFO] log_request: First: events.logfile is null 1
7358448:2019-12-02 09:52:26 MySQL_Logger.cpp:617:log_request(): [INFO] log_request: First: events.logfile is null 1
Bux fix:
Fix write event log and audit log  coredump, because  the proxysql get the null pointer variable of events.logfileÔºàaudit.logfileÔºâin a multithreaded environment.",add to whitelist,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2427,2019-12-02T02:57:56Z,2019-12-02T08:25:44Z,2019-12-02T08:25:45Z,MERGED,True,9,2,1,https://github.com/bskllzh,Fix write event log and audit log  coredump(the events.logfile&audit.‚Ä¶,1,[],https://github.com/sysown/proxysql/pull/2427,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/2427#issuecomment-560278280,"‚Ä¶logfile null pointer)
Bug description:
When i make a benchmark test with a sysbench(version: 1.0.17) in proxysql 2.0.8   + mysql 5.7.26, i get the follow error info:
Error: signal 11:
proxysql(_Z13crash_handleri+0x25)[0x5b607c]
/lib64/libc.so.6(+0x35270)[0x2b673de34270]
/lib64/libstdc++.so.6(_ZNSo6sentryC2ERSo+0xf)[0x2b673d67521f]
/lib64/libstdc++.so.6(_ZNSo5writeEPKcl+0x31)[0x2b673d675621]
proxysql(_ZN11MySQL_Event20write_query_format_1EPSt13basic_fstreamIcSt11char_traitsIcEE+0x27d)[0x6e2d81]
proxysql(_ZN11MySQL_Event5writeEPSt13basic_fstreamIcSt11char_traitsIcEEP13MySQL_Session+0x79)[0x6e19e9]
proxysql(_ZN12MySQL_Logger11log_requestEP13MySQL_SessionP17MySQL_Data_Stream+0x710)[0x6e5416]
proxysql(_ZN13MySQL_Session8LogQueryEP17MySQL_Data_Stream+0x6d)[0x654055]
proxysql(_ZN13MySQL_Session10RequestEndEP17MySQL_Data_Stream+0x35)[0x6540d7]
proxysql(_ZN13MySQL_Session7handlerEv+0x4397)[0x6459ed]
proxysql(_ZN12MySQL_Thread20process_all_sessionsEv+0x830)[0x623180]
proxysql(_ZN12MySQL_Thread3runEv+0x2cbe)[0x62208a]
proxysql(_Z24mysql_worker_thread_funcPv+0xbb)[0x5afb05]
/lib64/libpthread.so.0(+0x7e25)[0x2b673cda8e25]
/lib64/libc.so.6(clone+0x6d)[0x2b673def734d]
2019-12-02 09:52:26 main.cpp:1396:ProxySQL_daemonize_phase3(): [ERROR] ProxySQL crashed. Restarting!
I analyze the coredump with proxysql 2.0.8 debug version  very carefully, and  i found the variable of events.logfile  is null pointer in log_request  function when it call write function(me.write(events.logfile, sess)). The following is the coredumpÔºàwrite (this=0x2b67402fd1f0, f=0x0, sess=0x2b67414a8c00)Ôºâ:
(gdb) bt
#0  0x00002b673d67521f in std::ostream::sentry::sentry(std::ostream&) () from /lib64/libstdc++.so.6
#1  0x00002b673d675621 in std::ostream::write(char const*, long) () from /lib64/libstdc++.so.6
#2  0x00000000006e2d81 in MySQL_Event::write_query_format_1 (this=0x2b67402fd1f0, f=0x0) at MySQL_Logger.cpp:265
#3  0x00000000006e19e9 in MySQL_Event::write (this=0x2b67402fd1f0, f=0x0, sess=0x2b67414a8c00) at MySQL_Logger.cpp:89
#4  0x00000000006e5416 in MySQL_Logger::log_request (this=0x2b673e419680, sess=0x2b67414a8c00, myds=0x2b6741346480)
at MySQL_Logger.cpp:717
#5  0x0000000000654055 in MySQL_Session::LogQuery (this=0x2b67414a8c00, myds=0x2b6741346480) at MySQL_Session.cpp:6691
#6  0x00000000006540d7 in MySQL_Session::RequestEnd (this=0x2b67414a8c00, myds=0x2b6741346480) at MySQL_Session.cpp:6711
#7  0x00000000006459ed in MySQL_Session::handler (this=0x2b67414a8c00) at MySQL_Session.cpp:4086
#8  0x0000000000623180 in MySQL_Thread::process_all_sessions (this=0x2b6741301000) at MySQL_Thread.cpp:4392
#9  0x000000000062208a in MySQL_Thread::run (this=0x2b6741301000) at MySQL_Thread.cpp:4125
#10 0x00000000005afb05 in mysql_worker_thread_func (arg=0x2b673e461f30) at main.cpp:648
#11 0x00002b673cda8e25 in start_thread () from /lib64/libpthread.so.0
#12 0x00002b673def734d in clone () from /lib64/libc.so.6
And then i add a line of code in log_request function of MySQL_Logger.cpp file to check up whether events.logfile is null pointer Ôºåas follow:
void MySQL_Logger::log_request(MySQL_Session *sess, MySQL_Data_Stream *myds) {
if (events.enabled==false) return;
if (events.logfile==NULL) return;
proxy_info(""log_request: First: events.logfile is null %d\n"", (events.logfile == NULL) ? 1 : 0);
MySQL_Connection_userinfo *ui=sess->client_myds->myconn->userinfo;

And i make a benchmark test  again with proxysql 2.0.8 debug version, the coredump of proxysql happen again, then i get the follow print info from proxysql.log
[root@XXXXX proxysql]# grep -n -w 'log_request: First: events.logfile is null 1' proxysql.log
7358447:2019-12-02 09:52:26 MySQL_Logger.cpp:617:log_request(): [INFO] log_request: First: events.logfile is null 1
7358448:2019-12-02 09:52:26 MySQL_Logger.cpp:617:log_request(): [INFO] log_request: First: events.logfile is null 1
Bux fix:
Fix write event log and audit log  coredump, because  the proxysql get the null pointer variable of events.logfileÔºàaudit.logfileÔºâin a multithreaded environment.","@bskllzh : I think you spot an interesting bug, thank you for the bug fix",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2431,2019-12-02T19:52:46Z,2019-12-05T11:32:53Z,2019-12-05T11:32:53Z,MERGED,True,28,19,4,https://github.com/alpes214,V2.0.9 unsigned charset,3,[],https://github.com/sysown/proxysql/pull/2431,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2431,"Description:

Log message contains client host:port.
Test automation expected values changed after static linking to mariadb client library.

Tests:

Automation tests
Tested with local client, tested with remote client","Description:

Log message contains client host:port.
Test automation expected values changed after static linking to mariadb client library.

Tests:

Automation tests
Tested with local client, tested with remote client",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2435,2019-12-04T13:44:51Z,2019-12-04T14:33:44Z,2020-06-15T18:58:58Z,MERGED,True,6,0,2,https://github.com/renecannao,Upgrade clickhouse-cpp and support for Enums,1,[],https://github.com/sysown/proxysql/pull/2435,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2435,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2437,2019-12-05T03:56:40Z,2019-12-05T11:33:18Z,2020-06-15T18:58:57Z,MERGED,True,14,2,2,https://github.com/renecannao,Fix issue with LOAD MYSQL SERVERS TO RUNTIME and Aurora,1,[],https://github.com/sysown/proxysql/pull/2437,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2437,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2438,2019-12-07T09:30:38Z,2019-12-12T08:14:01Z,2019-12-12T08:14:01Z,MERGED,True,2,1,1,https://github.com/bskllzh,Fix add a mutex lock twice in the process of function call(log_audit_‚Ä¶,1,[],https://github.com/sysown/proxysql/pull/2438,https://github.com/bskllzh,1,https://github.com/sysown/proxysql/pull/2438,"‚Ä¶entry() -> write() -> write_auth())
Bug description:
Since fix write event log and audit log coredump(#2427)Ôºå i think i left out a code that was not processed, resulting in coredump again in the program of proxysql , when i confige these parameters of auditlog_filename and auditlog_filesize in proxysql.cnf file  or  i set these parameters in proxysql-admin command line.
the coredump contest:
(gdb) bt
#0  0x00002b224e9981f7 in raise () from /lib64/libc.so.6
#1  0x00002b224e9998e8 in abort () from /lib64/libc.so.6
#2  0x00002b224e991266 in __assert_fail_base () from /lib64/libc.so.6
#3  0x00002b224e991312 in __assert_fail () from /lib64/libc.so.6
#4  0x00000000005b2dc3 in main (argc=5, argv=0x7ffea714fd48) at main.cpp:1664
the proxysql.log contest:
2019-12-06 11:03:07 main.cpp:1659:main(): [ERROR] Watchdog: 8 threads missed a heartbeat
2019-12-06 11:03:10 main.cpp:1659:main(): [ERROR] Watchdog: 8 threads missed a heartbeat
2019-12-06 11:03:13 main.cpp:1659:main(): [ERROR] Watchdog: 8 threads missed a heartbeat
2019-12-06 11:03:16 main.cpp:1659:main(): [ERROR] Watchdog: 8 threads missed a heartbeat
2019-12-06 11:03:19 main.cpp:1659:main(): [ERROR] Watchdog: 8 threads missed a heartbeat
2019-12-06 11:03:22 main.cpp:1659:main(): [ERROR] Watchdog: 8 threads missed a heartbeat
2019-12-06 11:03:25 main.cpp:1659:main(): [ERROR] Watchdog: 8 threads missed a heartbeat
2019-12-06 11:03:28 main.cpp:1659:main(): [ERROR] Watchdog: 8 threads missed a heartbeat
2019-12-06 11:03:31 main.cpp:1659:main(): [ERROR] Watchdog: 8 threads missed a heartbeat
2019-12-06 11:03:34 main.cpp:1659:main(): [ERROR] Watchdog: 8 threads missed a heartbeat
2019-12-06 11:03:34 main.cpp:1663:main(): [ERROR] Watchdog: reached 10 missed heartbeats. Aborting!
proxysql: main.cpp:1664: int main(int, const char**): Assertion `0' failed.
Error: signal 6:
proxysql(_Z13crash_handleri+0x25)[0x5b607c]
/lib64/libc.so.6(+0x35270)[0x2b224e998270]
/lib64/libc.so.6(gsignal+0x37)[0x2b224e9981f7]
/lib64/libc.so.6(abort+0x148)[0x2b224e9998e8]
/lib64/libc.so.6(+0x2e266)[0x2b224e991266]
/lib64/libc.so.6(+0x2e312)[0x2b224e991312]
proxysql(main+0xe3a)[0x5b2dc3]
/lib64/libc.so.6(__libc_start_main+0xf5)[0x2b224e984c05]
proxysql[0x5adaa5]
2019-12-06 11:03:34 main.cpp:1396:ProxySQL_daemonize_phase3(): [ERROR] ProxySQL crashed. Restarting!
2019-12-06 11:03:34 main.cpp:1397:ProxySQL_daemonize_phase3(): [INFO] ProxySQL version _DEBUG
Impact of this fixÔºö
I analyzed the call relationship of write_auth function of MySQL_Logger.cpp file  in the whole project of proxysql with the source insight ide. I found write_auth function  that was only called by the write function of MySQL_Logger.cpp file in the whole project of proxysql,  and this write function was only called by log_audit_entry function or log_request function of  MySQL_Logger.cpp file in the whole project of proxysql. However, i've added a mutex lock separately in log_audit_entry function and log_request function. And so i think it should delete the code for the wrlock function call in write_auth function, and it doesn't have impact for this time fix.
Bux fix:
Fix add a mutex lock twice in the process of function call(log_audit_entry() -> write() -> write_auth())","‚Ä¶entry() -> write() -> write_auth())
Bug description:
Since fix write event log and audit log coredump(#2427)Ôºå i think i left out a code that was not processed, resulting in coredump again in the program of proxysql , when i confige these parameters of auditlog_filename and auditlog_filesize in proxysql.cnf file  or  i set these parameters in proxysql-admin command line.
the coredump contest:
(gdb) bt
#0  0x00002b224e9981f7 in raise () from /lib64/libc.so.6
#1  0x00002b224e9998e8 in abort () from /lib64/libc.so.6
#2  0x00002b224e991266 in __assert_fail_base () from /lib64/libc.so.6
#3  0x00002b224e991312 in __assert_fail () from /lib64/libc.so.6
#4  0x00000000005b2dc3 in main (argc=5, argv=0x7ffea714fd48) at main.cpp:1664
the proxysql.log contest:
2019-12-06 11:03:07 main.cpp:1659:main(): [ERROR] Watchdog: 8 threads missed a heartbeat
2019-12-06 11:03:10 main.cpp:1659:main(): [ERROR] Watchdog: 8 threads missed a heartbeat
2019-12-06 11:03:13 main.cpp:1659:main(): [ERROR] Watchdog: 8 threads missed a heartbeat
2019-12-06 11:03:16 main.cpp:1659:main(): [ERROR] Watchdog: 8 threads missed a heartbeat
2019-12-06 11:03:19 main.cpp:1659:main(): [ERROR] Watchdog: 8 threads missed a heartbeat
2019-12-06 11:03:22 main.cpp:1659:main(): [ERROR] Watchdog: 8 threads missed a heartbeat
2019-12-06 11:03:25 main.cpp:1659:main(): [ERROR] Watchdog: 8 threads missed a heartbeat
2019-12-06 11:03:28 main.cpp:1659:main(): [ERROR] Watchdog: 8 threads missed a heartbeat
2019-12-06 11:03:31 main.cpp:1659:main(): [ERROR] Watchdog: 8 threads missed a heartbeat
2019-12-06 11:03:34 main.cpp:1659:main(): [ERROR] Watchdog: 8 threads missed a heartbeat
2019-12-06 11:03:34 main.cpp:1663:main(): [ERROR] Watchdog: reached 10 missed heartbeats. Aborting!
proxysql: main.cpp:1664: int main(int, const char**): Assertion `0' failed.
Error: signal 6:
proxysql(_Z13crash_handleri+0x25)[0x5b607c]
/lib64/libc.so.6(+0x35270)[0x2b224e998270]
/lib64/libc.so.6(gsignal+0x37)[0x2b224e9981f7]
/lib64/libc.so.6(abort+0x148)[0x2b224e9998e8]
/lib64/libc.so.6(+0x2e266)[0x2b224e991266]
/lib64/libc.so.6(+0x2e312)[0x2b224e991312]
proxysql(main+0xe3a)[0x5b2dc3]
/lib64/libc.so.6(__libc_start_main+0xf5)[0x2b224e984c05]
proxysql[0x5adaa5]
2019-12-06 11:03:34 main.cpp:1396:ProxySQL_daemonize_phase3(): [ERROR] ProxySQL crashed. Restarting!
2019-12-06 11:03:34 main.cpp:1397:ProxySQL_daemonize_phase3(): [INFO] ProxySQL version _DEBUG
Impact of this fixÔºö
I analyzed the call relationship of write_auth function of MySQL_Logger.cpp file  in the whole project of proxysql with the source insight ide. I found write_auth function  that was only called by the write function of MySQL_Logger.cpp file in the whole project of proxysql,  and this write function was only called by log_audit_entry function or log_request function of  MySQL_Logger.cpp file in the whole project of proxysql. However, i've added a mutex lock separately in log_audit_entry function and log_request function. And so i think it should delete the code for the wrlock function call in write_auth function, and it doesn't have impact for this time fix.
Bux fix:
Fix add a mutex lock twice in the process of function call(log_audit_entry() -> write() -> write_auth())",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2438,2019-12-07T09:30:38Z,2019-12-12T08:14:01Z,2019-12-12T08:14:01Z,MERGED,True,2,1,1,https://github.com/bskllzh,Fix add a mutex lock twice in the process of function call(log_audit_‚Ä¶,1,[],https://github.com/sysown/proxysql/pull/2438,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2438#issuecomment-564898079,"‚Ä¶entry() -> write() -> write_auth())
Bug description:
Since fix write event log and audit log coredump(#2427)Ôºå i think i left out a code that was not processed, resulting in coredump again in the program of proxysql , when i confige these parameters of auditlog_filename and auditlog_filesize in proxysql.cnf file  or  i set these parameters in proxysql-admin command line.
the coredump contest:
(gdb) bt
#0  0x00002b224e9981f7 in raise () from /lib64/libc.so.6
#1  0x00002b224e9998e8 in abort () from /lib64/libc.so.6
#2  0x00002b224e991266 in __assert_fail_base () from /lib64/libc.so.6
#3  0x00002b224e991312 in __assert_fail () from /lib64/libc.so.6
#4  0x00000000005b2dc3 in main (argc=5, argv=0x7ffea714fd48) at main.cpp:1664
the proxysql.log contest:
2019-12-06 11:03:07 main.cpp:1659:main(): [ERROR] Watchdog: 8 threads missed a heartbeat
2019-12-06 11:03:10 main.cpp:1659:main(): [ERROR] Watchdog: 8 threads missed a heartbeat
2019-12-06 11:03:13 main.cpp:1659:main(): [ERROR] Watchdog: 8 threads missed a heartbeat
2019-12-06 11:03:16 main.cpp:1659:main(): [ERROR] Watchdog: 8 threads missed a heartbeat
2019-12-06 11:03:19 main.cpp:1659:main(): [ERROR] Watchdog: 8 threads missed a heartbeat
2019-12-06 11:03:22 main.cpp:1659:main(): [ERROR] Watchdog: 8 threads missed a heartbeat
2019-12-06 11:03:25 main.cpp:1659:main(): [ERROR] Watchdog: 8 threads missed a heartbeat
2019-12-06 11:03:28 main.cpp:1659:main(): [ERROR] Watchdog: 8 threads missed a heartbeat
2019-12-06 11:03:31 main.cpp:1659:main(): [ERROR] Watchdog: 8 threads missed a heartbeat
2019-12-06 11:03:34 main.cpp:1659:main(): [ERROR] Watchdog: 8 threads missed a heartbeat
2019-12-06 11:03:34 main.cpp:1663:main(): [ERROR] Watchdog: reached 10 missed heartbeats. Aborting!
proxysql: main.cpp:1664: int main(int, const char**): Assertion `0' failed.
Error: signal 6:
proxysql(_Z13crash_handleri+0x25)[0x5b607c]
/lib64/libc.so.6(+0x35270)[0x2b224e998270]
/lib64/libc.so.6(gsignal+0x37)[0x2b224e9981f7]
/lib64/libc.so.6(abort+0x148)[0x2b224e9998e8]
/lib64/libc.so.6(+0x2e266)[0x2b224e991266]
/lib64/libc.so.6(+0x2e312)[0x2b224e991312]
proxysql(main+0xe3a)[0x5b2dc3]
/lib64/libc.so.6(__libc_start_main+0xf5)[0x2b224e984c05]
proxysql[0x5adaa5]
2019-12-06 11:03:34 main.cpp:1396:ProxySQL_daemonize_phase3(): [ERROR] ProxySQL crashed. Restarting!
2019-12-06 11:03:34 main.cpp:1397:ProxySQL_daemonize_phase3(): [INFO] ProxySQL version _DEBUG
Impact of this fixÔºö
I analyzed the call relationship of write_auth function of MySQL_Logger.cpp file  in the whole project of proxysql with the source insight ide. I found write_auth function  that was only called by the write function of MySQL_Logger.cpp file in the whole project of proxysql,  and this write function was only called by log_audit_entry function or log_request function of  MySQL_Logger.cpp file in the whole project of proxysql. However, i've added a mutex lock separately in log_audit_entry function and log_request function. And so i think it should delete the code for the wrlock function call in write_auth function, and it doesn't have impact for this time fix.
Bux fix:
Fix add a mutex lock twice in the process of function call(log_audit_entry() -> write() -> write_auth())",Thank you for the new PR and for the fix!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2439,2019-12-09T15:33:07Z,2020-01-23T06:08:27Z,2020-01-23T06:09:07Z,MERGED,True,1935,27,18,https://github.com/alpes214,V2.0.9 monitor tests,12,[],https://github.com/sysown/proxysql/pull/2439,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2439,"Description:
Test automation for Monitor module
Build galera monitoring tests
make clean && make -j 8 testgalera

Build aurora monitoring tests
make clean && make -j 8 testaurora

Run test example:
$ ./test/tap/tests/galera_1_timeout_count --sqlite3-server -f 2>/dev/null
1..6
# Testing GALERA timeout offline
ok 1 - Another timeout processed. Number expected timeouts is equal to number of actual timeouts. Expected [1]. Actual [1]
ok 2 - Another timeout processed. Server is still online. Max count [3], Detected timeouts [1]
ok 3 - Another timeout processed. Number expected timeouts is equal to number of actual timeouts. Expected [2]. Actual [2]
ok 4 - Another timeout processed. Server is still online. Max count [3], Detected timeouts [2]
ok 5 - Another timeout processed. Number expected timeouts is equal to number of actual timeouts. Expected [3]. Actual [3]
ok 6 - Number of max timeouts reached. Host goes offline. Max timeouts count 3, actual number of timeouts 3
Test took 0.00 sec","Description:
Test automation for Monitor module
Build galera monitoring tests
make clean && make -j 8 testgalera

Build aurora monitoring tests
make clean && make -j 8 testaurora

Run test example:
$ ./test/tap/tests/galera_1_timeout_count --sqlite3-server -f 2>/dev/null
1..6
# Testing GALERA timeout offline
ok 1 - Another timeout processed. Number expected timeouts is equal to number of actual timeouts. Expected [1]. Actual [1]
ok 2 - Another timeout processed. Server is still online. Max count [3], Detected timeouts [1]
ok 3 - Another timeout processed. Number expected timeouts is equal to number of actual timeouts. Expected [2]. Actual [2]
ok 4 - Another timeout processed. Server is still online. Max count [3], Detected timeouts [2]
ok 5 - Another timeout processed. Number expected timeouts is equal to number of actual timeouts. Expected [3]. Actual [3]
ok 6 - Number of max timeouts reached. Host goes offline. Max timeouts count 3, actual number of timeouts 3
Test took 0.00 sec",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2442,2019-12-11T23:28:22Z,2019-12-12T08:10:45Z,2020-06-15T18:58:56Z,MERGED,True,213,31,9,https://github.com/renecannao,Implementation of SQLI fingerprints whitelist,2,[],https://github.com/sysown/proxysql/pull/2442,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2442,"libsqlinjection generates a lot of false positives.
This commit introduces a new table: mysql_firewall_whitelist_sqli_fingerprints
This table can list fingerprints generated by libsqlinjection:
if the fingerprint is listed in this table, proxysql will consider it as
a false positive.
This commit also enables SQLi algorithm only if the query is not already
explicitly whitelisted.","libsqlinjection generates a lot of false positives.
This commit introduces a new table: mysql_firewall_whitelist_sqli_fingerprints
This table can list fingerprints generated by libsqlinjection:
if the fingerprint is listed in this table, proxysql will consider it as
a false positive.
This commit also enables SQLi algorithm only if the query is not already
explicitly whitelisted.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2443,2019-12-12T12:55:15Z,2019-12-12T18:04:18Z,2020-02-05T18:12:24Z,MERGED,True,6,2,1,https://github.com/alpes214,Fix flag Active is not correctly working,2,[],https://github.com/sysown/proxysql/pull/2443,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2443,"Description:
This is the fix for issue #1902
This part of documentation is used as requirements for active field: https://github.com/sysown/proxysql/wiki/Main-(runtime)#mysql_galera_hostgroups
Testing:
Tested with --sqlite3-server. Added development logging and checked if monitor_galera_thread is started or not. As expected, when active=1, the monitor thread started for servers in the hostgroup. Otherwise monitoring of the servers is off.","Description:
This is the fix for issue #1902
This part of documentation is used as requirements for active field: https://github.com/sysown/proxysql/wiki/Main-(runtime)#mysql_galera_hostgroups
Testing:
Tested with --sqlite3-server. Added development logging and checked if monitor_galera_thread is started or not. As expected, when active=1, the monitor thread started for servers in the hostgroup. Otherwise monitoring of the servers is off.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2443,2019-12-12T12:55:15Z,2019-12-12T18:04:18Z,2020-02-05T18:12:24Z,MERGED,True,6,2,1,https://github.com/alpes214,Fix flag Active is not correctly working,2,[],https://github.com/sysown/proxysql/pull/2443,https://github.com/utdrmac,2,https://github.com/sysown/proxysql/pull/2443#issuecomment-582539567,"Description:
This is the fix for issue #1902
This part of documentation is used as requirements for active field: https://github.com/sysown/proxysql/wiki/Main-(runtime)#mysql_galera_hostgroups
Testing:
Tested with --sqlite3-server. Added development logging and checked if monitor_galera_thread is started or not. As expected, when active=1, the monitor thread started for servers in the hostgroup. Otherwise monitoring of the servers is off.","This was merged into 2.0.9 AFTER release on Nov 6, 2019. So is this fixed in 2.0.9 or do we wait for 2.0.10?",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2447,2019-12-14T17:41:58Z,2019-12-14T19:10:49Z,2019-12-14T19:10:50Z,MERGED,True,1,1,1,https://github.com/alpes214,Fix digest replace null issue,1,[],https://github.com/sysown/proxysql/pull/2447,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2447,"Description:
Fix for issue #2430
Tests:
Tested with php script and using different queries.
 <?php
 // Connect
 $con=mysqli_connect(""127.0.0.1"",""root"",""a"",""proxysql_test"",6033);
 
 if (!$con)
 {
     die(""Connect Error: "" . mysqli_connect_error());
 }

 // ExcuteMultiSQL
 $stmt = $con->query(""select * from s_user_attributes where userID = NULL and uu = null or aa=NULL"");


 mysqli_close($con);
?>

mysql> select digest_text from stats.stats_mysql_query_digest where digest_text like '%s_user_attributes%';
+---------------------------------------------------------------------------------------------------+
| digest_text                                                                                       |
+---------------------------------------------------------------------------------------------------+
| select * from s_user_attributes where userID = ? and uu = ? or aa=?                               |
+---------------------------------------------------------------------------------------------------+","Description:
Fix for issue #2430
Tests:
Tested with php script and using different queries.
 <?php
 // Connect
 $con=mysqli_connect(""127.0.0.1"",""root"",""a"",""proxysql_test"",6033);
 
 if (!$con)
 {
     die(""Connect Error: "" . mysqli_connect_error());
 }

 // ExcuteMultiSQL
 $stmt = $con->query(""select * from s_user_attributes where userID = NULL and uu = null or aa=NULL"");


 mysqli_close($con);
?>

mysql> select digest_text from stats.stats_mysql_query_digest where digest_text like '%s_user_attributes%';
+---------------------------------------------------------------------------------------------------+
| digest_text                                                                                       |
+---------------------------------------------------------------------------------------------------+
| select * from s_user_attributes where userID = ? and uu = ? or aa=?                               |
+---------------------------------------------------------------------------------------------------+",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2449,2019-12-16T12:06:54Z,2019-12-19T17:47:08Z,2019-12-19T17:47:09Z,MERGED,True,157,0,5,https://github.com/alpes214,MYSQL_SET_OPTION multiplexing [FR],1,[],https://github.com/sysown/proxysql/pull/2449,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2449,"Description:
Implements functionality described in issue #2429
Testing:
Tested with php scripts described in issue #2298","Description:
Implements functionality described in issue #2429
Testing:
Tested with php scripts described in issue #2298",True,"{'HOORAY': ['https://github.com/hhyo', 'https://github.com/yakirgb']}"
sysown/proxysql,https://github.com/sysown/proxysql,2451,2019-12-17T09:26:53Z,2019-12-19T17:39:13Z,2019-12-19T17:39:14Z,MERGED,True,0,1,1,https://github.com/alpes214,Return error 1290,1,[],https://github.com/sysown/proxysql/pull/2451,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2451,"Description:
Fix for issue #2226. Return error code 1290 to client when backend server started with --read-only
Testing:
Before fix when client inserts record to the table proxysql disconnects it and prints warning
Server:
2019-12-17 09:13:58 MySQL_Session.cpp:4272:handler(): [WARNING] Error during query on (0,127.0.0.1,3306): 1290, The MySQL server is running with the --super-read-only option so it cannot execute this statement

CLI:
mysql> insert into t (a) values ('1');
ERROR 2013 (HY000): Lost connection to MySQL server during query

After fix client is not disconnected. Proxysql returns error 1290 and error message to the client. Proxysql also prints same warning into the log.
mysql> insert into t (a) values ('1');
ERROR 1290 (HY000): The MySQL server is running with the --super-read-only option so it cannot execute this statement","Description:
Fix for issue #2226. Return error code 1290 to client when backend server started with --read-only
Testing:
Before fix when client inserts record to the table proxysql disconnects it and prints warning
Server:
2019-12-17 09:13:58 MySQL_Session.cpp:4272:handler(): [WARNING] Error during query on (0,127.0.0.1,3306): 1290, The MySQL server is running with the --super-read-only option so it cannot execute this statement

CLI:
mysql> insert into t (a) values ('1');
ERROR 2013 (HY000): Lost connection to MySQL server during query

After fix client is not disconnected. Proxysql returns error 1290 and error message to the client. Proxysql also prints same warning into the log.
mysql> insert into t (a) values ('1');
ERROR 1290 (HY000): The MySQL server is running with the --super-read-only option so it cannot execute this statement",True,{'HEART': ['https://github.com/yakirgb']}
sysown/proxysql,https://github.com/sysown/proxysql,2457,2019-12-21T17:15:11Z,2020-01-10T15:01:02Z,2020-01-10T15:01:02Z,MERGED,True,32,31,3,https://github.com/alpes214,Cleanup of the proxysql_admin.cpp,1,[],https://github.com/sysown/proxysql/pull/2457,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2457,Small cleanup,Small cleanup,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2458,2019-12-22T19:22:24Z,2020-01-13T15:35:36Z,2020-05-22T17:56:55Z,MERGED,True,3,3,1,https://github.com/kirs,Fix build instructions,1,[],https://github.com/sysown/proxysql/pull/2458,https://github.com/kirs,1,https://github.com/sysown/proxysql/pull/2458,"I've been trying to play with Proxysql's codebase and I found something that breaks make on Ubuntu/Debian.
1673249 introduced libhttpserver dependency, but INSTALL.md wasn't update to include dependencies of that libary:

libgnutls for HTTPS support
libtool for toolize used by libhttpserver's Makefile

I was also surprised that there's no publicly accessible CI integration - would you be open to accepting a PR that would add it?","I've been trying to play with Proxysql's codebase and I found something that breaks make on Ubuntu/Debian.
1673249 introduced libhttpserver dependency, but INSTALL.md wasn't update to include dependencies of that libary:

libgnutls for HTTPS support
libtool for toolize used by libhttpserver's Makefile

I was also surprised that there's no publicly accessible CI integration - would you be open to accepting a PR that would add it?",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2458,2019-12-22T19:22:24Z,2020-01-13T15:35:36Z,2020-05-22T17:56:55Z,MERGED,True,3,3,1,https://github.com/kirs,Fix build instructions,1,[],https://github.com/sysown/proxysql/pull/2458,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2458#issuecomment-568296129,"I've been trying to play with Proxysql's codebase and I found something that breaks make on Ubuntu/Debian.
1673249 introduced libhttpserver dependency, but INSTALL.md wasn't update to include dependencies of that libary:

libgnutls for HTTPS support
libtool for toolize used by libhttpserver's Makefile

I was also surprised that there's no publicly accessible CI integration - would you be open to accepting a PR that would add it?",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2458,2019-12-22T19:22:24Z,2020-01-13T15:35:36Z,2020-05-22T17:56:55Z,MERGED,True,3,3,1,https://github.com/kirs,Fix build instructions,1,[],https://github.com/sysown/proxysql/pull/2458,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2458#issuecomment-573722713,"I've been trying to play with Proxysql's codebase and I found something that breaks make on Ubuntu/Debian.
1673249 introduced libhttpserver dependency, but INSTALL.md wasn't update to include dependencies of that libary:

libgnutls for HTTPS support
libtool for toolize used by libhttpserver's Makefile

I was also surprised that there's no publicly accessible CI integration - would you be open to accepting a PR that would add it?",Thank you,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2458,2019-12-22T19:22:24Z,2020-01-13T15:35:36Z,2020-05-22T17:56:55Z,MERGED,True,3,3,1,https://github.com/kirs,Fix build instructions,1,[],https://github.com/sysown/proxysql/pull/2458,https://github.com/negrusti,4,https://github.com/sysown/proxysql/pull/2458#issuecomment-632830306,"I've been trying to play with Proxysql's codebase and I found something that breaks make on Ubuntu/Debian.
1673249 introduced libhttpserver dependency, but INSTALL.md wasn't update to include dependencies of that libary:

libgnutls for HTTPS support
libtool for toolize used by libhttpserver's Makefile

I was also surprised that there's no publicly accessible CI integration - would you be open to accepting a PR that would add it?","still have this issue with master branch:
cd libhttpserver && rm -rf libhttpserver-master_20191121 || true
cd libhttpserver && tar -zxf libhttpserver-master_20191121.tar.gz
cd libhttpserver/libhttpserver && ./bootstrap && mkdir build
/bin/sh: ./bootstrap: not found
make[1]: *** [Makefile:47: libhttpserver/libhttpserver/build/src/.libs/libhttpserver.a] Error 127
make[1]: Leaving directory '/tmp/proxysql/deps'
make: *** [Makefile:71: build_deps] Error 2",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2461,2019-12-25T08:51:11Z,2020-02-07T04:18:35Z,2020-02-07T04:18:36Z,MERGED,True,677,28,14,https://github.com/alpes214,V2.0.9 restapi [FR],6,[],https://github.com/sysown/proxysql/pull/2461,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2461,"Restapi endpoint
Restapi endpoint feature allows users to create new RESTapi endpoints and execute scripts on behalf of the proxysql. At the moment there are two examples of the scripts that are used for querying memory metrics and exporting users from MySQL database to ProxySQL.
Installing dependencies
The python package mysqlclient must be installed in order export_users package to work. This can be accomplished by the pip command:
$ pip install mysqlclient

or, if proxysql is running under sudo:
$ sudo pip install mysqlclient

Creating new endpoint
In order to create a new RESTapi endpoint, it must be defined in the restapi_routes table.
MySQL [(none)]> select * from restapi_routes;
Empty set (0.00 sec)

MySQL [(none)]> insert into restapi_routes (active, interval_ms, method, uri, script, comment) values (1,1000,'POST','export_users','./scripts/export_users.py','comm');
Query OK, 1 row affected (0.00 sec)

MySQL [(none)]> insert into restapi_routes (active, interval_ms, method, uri, script, comment) values (1,1000,'POST','metrics','./scripts/metrics.py','comm');
Query OK, 1 row affected (0.00 sec)

MySQL [(none)]> insert into restapi_routes (active, interval_ms, method, uri, script, comment) values (1,1000,'GET','metrics','./scripts/metrics.py','comm');
Query OK, 1 row affected (0.00 sec)

MySQL [(none)]> select * from restapi_routes\G
*************************** 1. row ***************************
         id: 1
     active: 1
interval_ms: 1000
     method: POST
        uri: export_users
     script: ./scripts/export_users.py
    comment: comm
*************************** 2. row ***************************
         id: 2
     active: 1
interval_ms: 1000
     method: POST
        uri: metrics
     script: ./scripts/metrics.py
    comment: comm
*************************** 3. row ***************************
         id: 3
     active: 1
interval_ms: 1000
     method: GET
        uri: metrics
     script: ./scripts/metrics.py
    comment: comm
3 rows in set (0.00 sec)


Calling metrics example POST
Parameters to script are passed using json -d '{""user"":""root"", ""password"":""a"", ""host"":""127.0.0.1"", ""port"":""6032‚Äù}'
$ curl -X POST -d '{""user"":""root"", ""password"":""a"", ""host"":""127.0.0.1"", ""port"":""6032""}' http://127.0.0.1:6070/sync/metrics

{""params"":{""user"":""root"", ""password"":""a"", ""host"":""127.0.0.1"", ""port"":""6032""}, ""result"":""Variable_Name\tVariable_Value\nSQLite3_memory_bytes\t3553504\njemalloc_resident\t21569536\njemalloc_active\t14565376\njemalloc_allocated\t10626296\njemalloc_mapped\t84004864\njemalloc_metadata\t5241896\njemalloc_retained\t51785728\nAuth_memory\t4042\nquery_digest_memory\t11832\nmysql_query_rules_memory\t1380\nmysql_firewall_users_table\t0\nmysql_firewall_users_config\t0\nmysql_firewall_rules_table\t0\nmysql_firewall_rules_config\t329\nstack_memory_mysql_threads\t33554432\nstack_memory_admin_threads\t16777216\nstack_memory_cluster_threads\t0\n""}

Calling metrics example using method GET
Parameters to script are passed in the URL
val@s89830:~/workspace/val214_proxysql$ curl -X GET ""http://127.0.0.1:6070/sync/metrics?user=root&password=a&host=127.0.0.1&port=6032""

{""params"":{""host"":""127.0.0.1"",""port"":""6032"",""user"":""root"",""password"":""a""}, ""result"":""Variable_Name\tVariable_Value\nSQLite3_memory_bytes\t3157344\njemalloc_resident\t16977920\njemalloc_active\t12062720\njemalloc_allocated\t9356864\njemalloc_mapped\t67137536\njemalloc_metadata\t4779336\njemalloc_retained\t43487232\nAuth_memory\t2810\nquery_digest_memory\t0\nmysql_query_rules_memory\t1380\nmysql_firewall_users_table\t0\nmysql_firewall_users_config\t0\nmysql_firewall_rules_table\t0\nmysql_firewall_rules_config\t329\nstack_memory_mysql_threads\t33554432\nstack_memory_admin_threads\t16777216\nstack_memory_cluster_threads\t0\n""}

Calling export_user example
The export_users script returns number of records processed in the json response.
$ curl -X POST -d '{""db"":{""user"":""root"", ""password"":""a"", ""port"":""3306"", ""host"":""127.0.0.1""},""admin"":{""user"":""admin"",""password"":""admin"",""port"":""6032"",""host"":""127.0.0.1""}}' http://127.0.0.1:6070/sync/export_users

{""params"":{""db"":{""user"":""root"", ""password"":""a"", ""port"":""3306"", ""host"":""127.0.0.1""},""admin"":{""user"":""admin"",""password"":""admin"",""port"":""6032"",""host"":""127.0.0.1""}}, ""result"":{""num_records"":""8""}}","Restapi endpoint
Restapi endpoint feature allows users to create new RESTapi endpoints and execute scripts on behalf of the proxysql. At the moment there are two examples of the scripts that are used for querying memory metrics and exporting users from MySQL database to ProxySQL.
Installing dependencies
The python package mysqlclient must be installed in order export_users package to work. This can be accomplished by the pip command:
$ pip install mysqlclient

or, if proxysql is running under sudo:
$ sudo pip install mysqlclient

Creating new endpoint
In order to create a new RESTapi endpoint, it must be defined in the restapi_routes table.
MySQL [(none)]> select * from restapi_routes;
Empty set (0.00 sec)

MySQL [(none)]> insert into restapi_routes (active, interval_ms, method, uri, script, comment) values (1,1000,'POST','export_users','./scripts/export_users.py','comm');
Query OK, 1 row affected (0.00 sec)

MySQL [(none)]> insert into restapi_routes (active, interval_ms, method, uri, script, comment) values (1,1000,'POST','metrics','./scripts/metrics.py','comm');
Query OK, 1 row affected (0.00 sec)

MySQL [(none)]> insert into restapi_routes (active, interval_ms, method, uri, script, comment) values (1,1000,'GET','metrics','./scripts/metrics.py','comm');
Query OK, 1 row affected (0.00 sec)

MySQL [(none)]> select * from restapi_routes\G
*************************** 1. row ***************************
         id: 1
     active: 1
interval_ms: 1000
     method: POST
        uri: export_users
     script: ./scripts/export_users.py
    comment: comm
*************************** 2. row ***************************
         id: 2
     active: 1
interval_ms: 1000
     method: POST
        uri: metrics
     script: ./scripts/metrics.py
    comment: comm
*************************** 3. row ***************************
         id: 3
     active: 1
interval_ms: 1000
     method: GET
        uri: metrics
     script: ./scripts/metrics.py
    comment: comm
3 rows in set (0.00 sec)


Calling metrics example POST
Parameters to script are passed using json -d '{""user"":""root"", ""password"":""a"", ""host"":""127.0.0.1"", ""port"":""6032‚Äù}'
$ curl -X POST -d '{""user"":""root"", ""password"":""a"", ""host"":""127.0.0.1"", ""port"":""6032""}' http://127.0.0.1:6070/sync/metrics

{""params"":{""user"":""root"", ""password"":""a"", ""host"":""127.0.0.1"", ""port"":""6032""}, ""result"":""Variable_Name\tVariable_Value\nSQLite3_memory_bytes\t3553504\njemalloc_resident\t21569536\njemalloc_active\t14565376\njemalloc_allocated\t10626296\njemalloc_mapped\t84004864\njemalloc_metadata\t5241896\njemalloc_retained\t51785728\nAuth_memory\t4042\nquery_digest_memory\t11832\nmysql_query_rules_memory\t1380\nmysql_firewall_users_table\t0\nmysql_firewall_users_config\t0\nmysql_firewall_rules_table\t0\nmysql_firewall_rules_config\t329\nstack_memory_mysql_threads\t33554432\nstack_memory_admin_threads\t16777216\nstack_memory_cluster_threads\t0\n""}

Calling metrics example using method GET
Parameters to script are passed in the URL
val@s89830:~/workspace/val214_proxysql$ curl -X GET ""http://127.0.0.1:6070/sync/metrics?user=root&password=a&host=127.0.0.1&port=6032""

{""params"":{""host"":""127.0.0.1"",""port"":""6032"",""user"":""root"",""password"":""a""}, ""result"":""Variable_Name\tVariable_Value\nSQLite3_memory_bytes\t3157344\njemalloc_resident\t16977920\njemalloc_active\t12062720\njemalloc_allocated\t9356864\njemalloc_mapped\t67137536\njemalloc_metadata\t4779336\njemalloc_retained\t43487232\nAuth_memory\t2810\nquery_digest_memory\t0\nmysql_query_rules_memory\t1380\nmysql_firewall_users_table\t0\nmysql_firewall_users_config\t0\nmysql_firewall_rules_table\t0\nmysql_firewall_rules_config\t329\nstack_memory_mysql_threads\t33554432\nstack_memory_admin_threads\t16777216\nstack_memory_cluster_threads\t0\n""}

Calling export_user example
The export_users script returns number of records processed in the json response.
$ curl -X POST -d '{""db"":{""user"":""root"", ""password"":""a"", ""port"":""3306"", ""host"":""127.0.0.1""},""admin"":{""user"":""admin"",""password"":""admin"",""port"":""6032"",""host"":""127.0.0.1""}}' http://127.0.0.1:6070/sync/export_users

{""params"":{""db"":{""user"":""root"", ""password"":""a"", ""port"":""3306"", ""host"":""127.0.0.1""},""admin"":{""user"":""admin"",""password"":""admin"",""port"":""6032"",""host"":""127.0.0.1""}}, ""result"":{""num_records"":""8""}}",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2461,2019-12-25T08:51:11Z,2020-02-07T04:18:35Z,2020-02-07T04:18:36Z,MERGED,True,677,28,14,https://github.com/alpes214,V2.0.9 restapi [FR],6,[],https://github.com/sysown/proxysql/pull/2461,https://github.com/yakirgb,2,https://github.com/sysown/proxysql/pull/2461#issuecomment-568874161,"Restapi endpoint
Restapi endpoint feature allows users to create new RESTapi endpoints and execute scripts on behalf of the proxysql. At the moment there are two examples of the scripts that are used for querying memory metrics and exporting users from MySQL database to ProxySQL.
Installing dependencies
The python package mysqlclient must be installed in order export_users package to work. This can be accomplished by the pip command:
$ pip install mysqlclient

or, if proxysql is running under sudo:
$ sudo pip install mysqlclient

Creating new endpoint
In order to create a new RESTapi endpoint, it must be defined in the restapi_routes table.
MySQL [(none)]> select * from restapi_routes;
Empty set (0.00 sec)

MySQL [(none)]> insert into restapi_routes (active, interval_ms, method, uri, script, comment) values (1,1000,'POST','export_users','./scripts/export_users.py','comm');
Query OK, 1 row affected (0.00 sec)

MySQL [(none)]> insert into restapi_routes (active, interval_ms, method, uri, script, comment) values (1,1000,'POST','metrics','./scripts/metrics.py','comm');
Query OK, 1 row affected (0.00 sec)

MySQL [(none)]> insert into restapi_routes (active, interval_ms, method, uri, script, comment) values (1,1000,'GET','metrics','./scripts/metrics.py','comm');
Query OK, 1 row affected (0.00 sec)

MySQL [(none)]> select * from restapi_routes\G
*************************** 1. row ***************************
         id: 1
     active: 1
interval_ms: 1000
     method: POST
        uri: export_users
     script: ./scripts/export_users.py
    comment: comm
*************************** 2. row ***************************
         id: 2
     active: 1
interval_ms: 1000
     method: POST
        uri: metrics
     script: ./scripts/metrics.py
    comment: comm
*************************** 3. row ***************************
         id: 3
     active: 1
interval_ms: 1000
     method: GET
        uri: metrics
     script: ./scripts/metrics.py
    comment: comm
3 rows in set (0.00 sec)


Calling metrics example POST
Parameters to script are passed using json -d '{""user"":""root"", ""password"":""a"", ""host"":""127.0.0.1"", ""port"":""6032‚Äù}'
$ curl -X POST -d '{""user"":""root"", ""password"":""a"", ""host"":""127.0.0.1"", ""port"":""6032""}' http://127.0.0.1:6070/sync/metrics

{""params"":{""user"":""root"", ""password"":""a"", ""host"":""127.0.0.1"", ""port"":""6032""}, ""result"":""Variable_Name\tVariable_Value\nSQLite3_memory_bytes\t3553504\njemalloc_resident\t21569536\njemalloc_active\t14565376\njemalloc_allocated\t10626296\njemalloc_mapped\t84004864\njemalloc_metadata\t5241896\njemalloc_retained\t51785728\nAuth_memory\t4042\nquery_digest_memory\t11832\nmysql_query_rules_memory\t1380\nmysql_firewall_users_table\t0\nmysql_firewall_users_config\t0\nmysql_firewall_rules_table\t0\nmysql_firewall_rules_config\t329\nstack_memory_mysql_threads\t33554432\nstack_memory_admin_threads\t16777216\nstack_memory_cluster_threads\t0\n""}

Calling metrics example using method GET
Parameters to script are passed in the URL
val@s89830:~/workspace/val214_proxysql$ curl -X GET ""http://127.0.0.1:6070/sync/metrics?user=root&password=a&host=127.0.0.1&port=6032""

{""params"":{""host"":""127.0.0.1"",""port"":""6032"",""user"":""root"",""password"":""a""}, ""result"":""Variable_Name\tVariable_Value\nSQLite3_memory_bytes\t3157344\njemalloc_resident\t16977920\njemalloc_active\t12062720\njemalloc_allocated\t9356864\njemalloc_mapped\t67137536\njemalloc_metadata\t4779336\njemalloc_retained\t43487232\nAuth_memory\t2810\nquery_digest_memory\t0\nmysql_query_rules_memory\t1380\nmysql_firewall_users_table\t0\nmysql_firewall_users_config\t0\nmysql_firewall_rules_table\t0\nmysql_firewall_rules_config\t329\nstack_memory_mysql_threads\t33554432\nstack_memory_admin_threads\t16777216\nstack_memory_cluster_threads\t0\n""}

Calling export_user example
The export_users script returns number of records processed in the json response.
$ curl -X POST -d '{""db"":{""user"":""root"", ""password"":""a"", ""port"":""3306"", ""host"":""127.0.0.1""},""admin"":{""user"":""admin"",""password"":""admin"",""port"":""6032"",""host"":""127.0.0.1""}}' http://127.0.0.1:6070/sync/export_users

{""params"":{""db"":{""user"":""root"", ""password"":""a"", ""port"":""3306"", ""host"":""127.0.0.1""},""admin"":{""user"":""admin"",""password"":""admin"",""port"":""6032"",""host"":""127.0.0.1""}}, ""result"":{""num_records"":""8""}}","Great idea, thank U.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2461,2019-12-25T08:51:11Z,2020-02-07T04:18:35Z,2020-02-07T04:18:36Z,MERGED,True,677,28,14,https://github.com/alpes214,V2.0.9 restapi [FR],6,[],https://github.com/sysown/proxysql/pull/2461,https://github.com/alikrubin,3,https://github.com/sysown/proxysql/pull/2461#issuecomment-573362284,"Restapi endpoint
Restapi endpoint feature allows users to create new RESTapi endpoints and execute scripts on behalf of the proxysql. At the moment there are two examples of the scripts that are used for querying memory metrics and exporting users from MySQL database to ProxySQL.
Installing dependencies
The python package mysqlclient must be installed in order export_users package to work. This can be accomplished by the pip command:
$ pip install mysqlclient

or, if proxysql is running under sudo:
$ sudo pip install mysqlclient

Creating new endpoint
In order to create a new RESTapi endpoint, it must be defined in the restapi_routes table.
MySQL [(none)]> select * from restapi_routes;
Empty set (0.00 sec)

MySQL [(none)]> insert into restapi_routes (active, interval_ms, method, uri, script, comment) values (1,1000,'POST','export_users','./scripts/export_users.py','comm');
Query OK, 1 row affected (0.00 sec)

MySQL [(none)]> insert into restapi_routes (active, interval_ms, method, uri, script, comment) values (1,1000,'POST','metrics','./scripts/metrics.py','comm');
Query OK, 1 row affected (0.00 sec)

MySQL [(none)]> insert into restapi_routes (active, interval_ms, method, uri, script, comment) values (1,1000,'GET','metrics','./scripts/metrics.py','comm');
Query OK, 1 row affected (0.00 sec)

MySQL [(none)]> select * from restapi_routes\G
*************************** 1. row ***************************
         id: 1
     active: 1
interval_ms: 1000
     method: POST
        uri: export_users
     script: ./scripts/export_users.py
    comment: comm
*************************** 2. row ***************************
         id: 2
     active: 1
interval_ms: 1000
     method: POST
        uri: metrics
     script: ./scripts/metrics.py
    comment: comm
*************************** 3. row ***************************
         id: 3
     active: 1
interval_ms: 1000
     method: GET
        uri: metrics
     script: ./scripts/metrics.py
    comment: comm
3 rows in set (0.00 sec)


Calling metrics example POST
Parameters to script are passed using json -d '{""user"":""root"", ""password"":""a"", ""host"":""127.0.0.1"", ""port"":""6032‚Äù}'
$ curl -X POST -d '{""user"":""root"", ""password"":""a"", ""host"":""127.0.0.1"", ""port"":""6032""}' http://127.0.0.1:6070/sync/metrics

{""params"":{""user"":""root"", ""password"":""a"", ""host"":""127.0.0.1"", ""port"":""6032""}, ""result"":""Variable_Name\tVariable_Value\nSQLite3_memory_bytes\t3553504\njemalloc_resident\t21569536\njemalloc_active\t14565376\njemalloc_allocated\t10626296\njemalloc_mapped\t84004864\njemalloc_metadata\t5241896\njemalloc_retained\t51785728\nAuth_memory\t4042\nquery_digest_memory\t11832\nmysql_query_rules_memory\t1380\nmysql_firewall_users_table\t0\nmysql_firewall_users_config\t0\nmysql_firewall_rules_table\t0\nmysql_firewall_rules_config\t329\nstack_memory_mysql_threads\t33554432\nstack_memory_admin_threads\t16777216\nstack_memory_cluster_threads\t0\n""}

Calling metrics example using method GET
Parameters to script are passed in the URL
val@s89830:~/workspace/val214_proxysql$ curl -X GET ""http://127.0.0.1:6070/sync/metrics?user=root&password=a&host=127.0.0.1&port=6032""

{""params"":{""host"":""127.0.0.1"",""port"":""6032"",""user"":""root"",""password"":""a""}, ""result"":""Variable_Name\tVariable_Value\nSQLite3_memory_bytes\t3157344\njemalloc_resident\t16977920\njemalloc_active\t12062720\njemalloc_allocated\t9356864\njemalloc_mapped\t67137536\njemalloc_metadata\t4779336\njemalloc_retained\t43487232\nAuth_memory\t2810\nquery_digest_memory\t0\nmysql_query_rules_memory\t1380\nmysql_firewall_users_table\t0\nmysql_firewall_users_config\t0\nmysql_firewall_rules_table\t0\nmysql_firewall_rules_config\t329\nstack_memory_mysql_threads\t33554432\nstack_memory_admin_threads\t16777216\nstack_memory_cluster_threads\t0\n""}

Calling export_user example
The export_users script returns number of records processed in the json response.
$ curl -X POST -d '{""db"":{""user"":""root"", ""password"":""a"", ""port"":""3306"", ""host"":""127.0.0.1""},""admin"":{""user"":""admin"",""password"":""admin"",""port"":""6032"",""host"":""127.0.0.1""}}' http://127.0.0.1:6070/sync/export_users

{""params"":{""db"":{""user"":""root"", ""password"":""a"", ""port"":""3306"", ""host"":""127.0.0.1""},""admin"":{""user"":""admin"",""password"":""admin"",""port"":""6032"",""host"":""127.0.0.1""}}, ""result"":{""num_records"":""8""}}","Some minor issues:
Formatting error in the table:
1.
Create Table: CREATE TABLE restapi_routes (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    active INT CHECK (active IN (0,1)) NOT NULL DEFAULT 1,
    interval_ms INTEGER CHECK (interval_ms>-100 AND interval_ms<=100000000) NOT NULL,
    method VARCHAR NOT NULL CHECK (UPPER(method) IN ('GET','POST')), uri VARCHAR NOT NULL, script VARCHAR NOT NULL, comment VARCHAR NO NULL DEFAULT '')




proxysql.cnf does not pickup the variable
mysql_variables=
{
    restapi_enabled=""true""
}

MySQL [(none)]> select * from global_variables where variable_name like '%rest%';
+-----------------------+----------------+
| variable_name         | variable_value |
+-----------------------+----------------+
| admin-restapi_enabled | false          |
| admin-restapi_port    | 6070           |
+-----------------------+----------------+
2 rows in set (0.00 sec)


This section of config does not seem to work:

restapi =
(
	{
		id=1
		active=1
		interval_ms=1000
		uri=""test""
		script=""/script.py""
		comment=""comment""
	}
)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2461,2019-12-25T08:51:11Z,2020-02-07T04:18:35Z,2020-02-07T04:18:36Z,MERGED,True,677,28,14,https://github.com/alpes214,V2.0.9 restapi [FR],6,[],https://github.com/sysown/proxysql/pull/2461,https://github.com/alikrubin,4,https://github.com/sysown/proxysql/pull/2461#issuecomment-573362770,"Restapi endpoint
Restapi endpoint feature allows users to create new RESTapi endpoints and execute scripts on behalf of the proxysql. At the moment there are two examples of the scripts that are used for querying memory metrics and exporting users from MySQL database to ProxySQL.
Installing dependencies
The python package mysqlclient must be installed in order export_users package to work. This can be accomplished by the pip command:
$ pip install mysqlclient

or, if proxysql is running under sudo:
$ sudo pip install mysqlclient

Creating new endpoint
In order to create a new RESTapi endpoint, it must be defined in the restapi_routes table.
MySQL [(none)]> select * from restapi_routes;
Empty set (0.00 sec)

MySQL [(none)]> insert into restapi_routes (active, interval_ms, method, uri, script, comment) values (1,1000,'POST','export_users','./scripts/export_users.py','comm');
Query OK, 1 row affected (0.00 sec)

MySQL [(none)]> insert into restapi_routes (active, interval_ms, method, uri, script, comment) values (1,1000,'POST','metrics','./scripts/metrics.py','comm');
Query OK, 1 row affected (0.00 sec)

MySQL [(none)]> insert into restapi_routes (active, interval_ms, method, uri, script, comment) values (1,1000,'GET','metrics','./scripts/metrics.py','comm');
Query OK, 1 row affected (0.00 sec)

MySQL [(none)]> select * from restapi_routes\G
*************************** 1. row ***************************
         id: 1
     active: 1
interval_ms: 1000
     method: POST
        uri: export_users
     script: ./scripts/export_users.py
    comment: comm
*************************** 2. row ***************************
         id: 2
     active: 1
interval_ms: 1000
     method: POST
        uri: metrics
     script: ./scripts/metrics.py
    comment: comm
*************************** 3. row ***************************
         id: 3
     active: 1
interval_ms: 1000
     method: GET
        uri: metrics
     script: ./scripts/metrics.py
    comment: comm
3 rows in set (0.00 sec)


Calling metrics example POST
Parameters to script are passed using json -d '{""user"":""root"", ""password"":""a"", ""host"":""127.0.0.1"", ""port"":""6032‚Äù}'
$ curl -X POST -d '{""user"":""root"", ""password"":""a"", ""host"":""127.0.0.1"", ""port"":""6032""}' http://127.0.0.1:6070/sync/metrics

{""params"":{""user"":""root"", ""password"":""a"", ""host"":""127.0.0.1"", ""port"":""6032""}, ""result"":""Variable_Name\tVariable_Value\nSQLite3_memory_bytes\t3553504\njemalloc_resident\t21569536\njemalloc_active\t14565376\njemalloc_allocated\t10626296\njemalloc_mapped\t84004864\njemalloc_metadata\t5241896\njemalloc_retained\t51785728\nAuth_memory\t4042\nquery_digest_memory\t11832\nmysql_query_rules_memory\t1380\nmysql_firewall_users_table\t0\nmysql_firewall_users_config\t0\nmysql_firewall_rules_table\t0\nmysql_firewall_rules_config\t329\nstack_memory_mysql_threads\t33554432\nstack_memory_admin_threads\t16777216\nstack_memory_cluster_threads\t0\n""}

Calling metrics example using method GET
Parameters to script are passed in the URL
val@s89830:~/workspace/val214_proxysql$ curl -X GET ""http://127.0.0.1:6070/sync/metrics?user=root&password=a&host=127.0.0.1&port=6032""

{""params"":{""host"":""127.0.0.1"",""port"":""6032"",""user"":""root"",""password"":""a""}, ""result"":""Variable_Name\tVariable_Value\nSQLite3_memory_bytes\t3157344\njemalloc_resident\t16977920\njemalloc_active\t12062720\njemalloc_allocated\t9356864\njemalloc_mapped\t67137536\njemalloc_metadata\t4779336\njemalloc_retained\t43487232\nAuth_memory\t2810\nquery_digest_memory\t0\nmysql_query_rules_memory\t1380\nmysql_firewall_users_table\t0\nmysql_firewall_users_config\t0\nmysql_firewall_rules_table\t0\nmysql_firewall_rules_config\t329\nstack_memory_mysql_threads\t33554432\nstack_memory_admin_threads\t16777216\nstack_memory_cluster_threads\t0\n""}

Calling export_user example
The export_users script returns number of records processed in the json response.
$ curl -X POST -d '{""db"":{""user"":""root"", ""password"":""a"", ""port"":""3306"", ""host"":""127.0.0.1""},""admin"":{""user"":""admin"",""password"":""admin"",""port"":""6032"",""host"":""127.0.0.1""}}' http://127.0.0.1:6070/sync/export_users

{""params"":{""db"":{""user"":""root"", ""password"":""a"", ""port"":""3306"", ""host"":""127.0.0.1""},""admin"":{""user"":""admin"",""password"":""admin"",""port"":""6032"",""host"":""127.0.0.1""}}, ""result"":{""num_records"":""8""}}","Another issue:
mysql> insert into restapi_routes (active, interval_ms, method, uri, script, comment) values (1,1000,'POST','export_users','./scripts/export_users.py','comm');
Query OK, 1 row affected (0.00 sec)

mysql> select * from restapi_routes;
+-----+--------+-------------+--------+--------------+---------------------------+---------+
| id  | active | interval_ms | method | uri          | script                    | comment |
+-----+--------+-------------+--------+--------------+---------------------------+---------+
| 101 | 1      | 1000        | POST   | export_users | ./scripts/export_users.py | comm    |
+-----+--------+-------------+--------+--------------+---------------------------+---------+
1 row in set (0.00 sec)

2020-01-11 23:08:21 sqlite3db.cpp:163:execute(): [ERROR] SQLITE error: table runtime_restapi_routes has 7 columns but 6 values were supplied --- INSERT INTO  runtime_restapi_routes  VALUES(1,1,1000,'POST','export_users','./scripts/export_users.py')",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2461,2019-12-25T08:51:11Z,2020-02-07T04:18:35Z,2020-02-07T04:18:36Z,MERGED,True,677,28,14,https://github.com/alpes214,V2.0.9 restapi [FR],6,[],https://github.com/sysown/proxysql/pull/2461,https://github.com/alikrubin,5,https://github.com/sysown/proxysql/pull/2461#issuecomment-573363114,"Restapi endpoint
Restapi endpoint feature allows users to create new RESTapi endpoints and execute scripts on behalf of the proxysql. At the moment there are two examples of the scripts that are used for querying memory metrics and exporting users from MySQL database to ProxySQL.
Installing dependencies
The python package mysqlclient must be installed in order export_users package to work. This can be accomplished by the pip command:
$ pip install mysqlclient

or, if proxysql is running under sudo:
$ sudo pip install mysqlclient

Creating new endpoint
In order to create a new RESTapi endpoint, it must be defined in the restapi_routes table.
MySQL [(none)]> select * from restapi_routes;
Empty set (0.00 sec)

MySQL [(none)]> insert into restapi_routes (active, interval_ms, method, uri, script, comment) values (1,1000,'POST','export_users','./scripts/export_users.py','comm');
Query OK, 1 row affected (0.00 sec)

MySQL [(none)]> insert into restapi_routes (active, interval_ms, method, uri, script, comment) values (1,1000,'POST','metrics','./scripts/metrics.py','comm');
Query OK, 1 row affected (0.00 sec)

MySQL [(none)]> insert into restapi_routes (active, interval_ms, method, uri, script, comment) values (1,1000,'GET','metrics','./scripts/metrics.py','comm');
Query OK, 1 row affected (0.00 sec)

MySQL [(none)]> select * from restapi_routes\G
*************************** 1. row ***************************
         id: 1
     active: 1
interval_ms: 1000
     method: POST
        uri: export_users
     script: ./scripts/export_users.py
    comment: comm
*************************** 2. row ***************************
         id: 2
     active: 1
interval_ms: 1000
     method: POST
        uri: metrics
     script: ./scripts/metrics.py
    comment: comm
*************************** 3. row ***************************
         id: 3
     active: 1
interval_ms: 1000
     method: GET
        uri: metrics
     script: ./scripts/metrics.py
    comment: comm
3 rows in set (0.00 sec)


Calling metrics example POST
Parameters to script are passed using json -d '{""user"":""root"", ""password"":""a"", ""host"":""127.0.0.1"", ""port"":""6032‚Äù}'
$ curl -X POST -d '{""user"":""root"", ""password"":""a"", ""host"":""127.0.0.1"", ""port"":""6032""}' http://127.0.0.1:6070/sync/metrics

{""params"":{""user"":""root"", ""password"":""a"", ""host"":""127.0.0.1"", ""port"":""6032""}, ""result"":""Variable_Name\tVariable_Value\nSQLite3_memory_bytes\t3553504\njemalloc_resident\t21569536\njemalloc_active\t14565376\njemalloc_allocated\t10626296\njemalloc_mapped\t84004864\njemalloc_metadata\t5241896\njemalloc_retained\t51785728\nAuth_memory\t4042\nquery_digest_memory\t11832\nmysql_query_rules_memory\t1380\nmysql_firewall_users_table\t0\nmysql_firewall_users_config\t0\nmysql_firewall_rules_table\t0\nmysql_firewall_rules_config\t329\nstack_memory_mysql_threads\t33554432\nstack_memory_admin_threads\t16777216\nstack_memory_cluster_threads\t0\n""}

Calling metrics example using method GET
Parameters to script are passed in the URL
val@s89830:~/workspace/val214_proxysql$ curl -X GET ""http://127.0.0.1:6070/sync/metrics?user=root&password=a&host=127.0.0.1&port=6032""

{""params"":{""host"":""127.0.0.1"",""port"":""6032"",""user"":""root"",""password"":""a""}, ""result"":""Variable_Name\tVariable_Value\nSQLite3_memory_bytes\t3157344\njemalloc_resident\t16977920\njemalloc_active\t12062720\njemalloc_allocated\t9356864\njemalloc_mapped\t67137536\njemalloc_metadata\t4779336\njemalloc_retained\t43487232\nAuth_memory\t2810\nquery_digest_memory\t0\nmysql_query_rules_memory\t1380\nmysql_firewall_users_table\t0\nmysql_firewall_users_config\t0\nmysql_firewall_rules_table\t0\nmysql_firewall_rules_config\t329\nstack_memory_mysql_threads\t33554432\nstack_memory_admin_threads\t16777216\nstack_memory_cluster_threads\t0\n""}

Calling export_user example
The export_users script returns number of records processed in the json response.
$ curl -X POST -d '{""db"":{""user"":""root"", ""password"":""a"", ""port"":""3306"", ""host"":""127.0.0.1""},""admin"":{""user"":""admin"",""password"":""admin"",""port"":""6032"",""host"":""127.0.0.1""}}' http://127.0.0.1:6070/sync/export_users

{""params"":{""db"":{""user"":""root"", ""password"":""a"", ""port"":""3306"", ""host"":""127.0.0.1""},""admin"":{""user"":""admin"",""password"":""admin"",""port"":""6032"",""host"":""127.0.0.1""}}, ""result"":{""num_records"":""8""}}","Error
2020-01-11 23:14:59 sqlite3db.cpp:163:execute(): [ERROR] SQLITE error: table runtime_restapi_routes has 7 columns but 6 values were supplied --- INSERT INTO  runtime_restapi_routes  VALUES(1,1,1000,'POST','export_users','./scripts/export_users.py')",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2461,2019-12-25T08:51:11Z,2020-02-07T04:18:35Z,2020-02-07T04:18:36Z,MERGED,True,677,28,14,https://github.com/alpes214,V2.0.9 restapi [FR],6,[],https://github.com/sysown/proxysql/pull/2461,https://github.com/alpes214,6,https://github.com/sysown/proxysql/pull/2461#issuecomment-573455971,"Restapi endpoint
Restapi endpoint feature allows users to create new RESTapi endpoints and execute scripts on behalf of the proxysql. At the moment there are two examples of the scripts that are used for querying memory metrics and exporting users from MySQL database to ProxySQL.
Installing dependencies
The python package mysqlclient must be installed in order export_users package to work. This can be accomplished by the pip command:
$ pip install mysqlclient

or, if proxysql is running under sudo:
$ sudo pip install mysqlclient

Creating new endpoint
In order to create a new RESTapi endpoint, it must be defined in the restapi_routes table.
MySQL [(none)]> select * from restapi_routes;
Empty set (0.00 sec)

MySQL [(none)]> insert into restapi_routes (active, interval_ms, method, uri, script, comment) values (1,1000,'POST','export_users','./scripts/export_users.py','comm');
Query OK, 1 row affected (0.00 sec)

MySQL [(none)]> insert into restapi_routes (active, interval_ms, method, uri, script, comment) values (1,1000,'POST','metrics','./scripts/metrics.py','comm');
Query OK, 1 row affected (0.00 sec)

MySQL [(none)]> insert into restapi_routes (active, interval_ms, method, uri, script, comment) values (1,1000,'GET','metrics','./scripts/metrics.py','comm');
Query OK, 1 row affected (0.00 sec)

MySQL [(none)]> select * from restapi_routes\G
*************************** 1. row ***************************
         id: 1
     active: 1
interval_ms: 1000
     method: POST
        uri: export_users
     script: ./scripts/export_users.py
    comment: comm
*************************** 2. row ***************************
         id: 2
     active: 1
interval_ms: 1000
     method: POST
        uri: metrics
     script: ./scripts/metrics.py
    comment: comm
*************************** 3. row ***************************
         id: 3
     active: 1
interval_ms: 1000
     method: GET
        uri: metrics
     script: ./scripts/metrics.py
    comment: comm
3 rows in set (0.00 sec)


Calling metrics example POST
Parameters to script are passed using json -d '{""user"":""root"", ""password"":""a"", ""host"":""127.0.0.1"", ""port"":""6032‚Äù}'
$ curl -X POST -d '{""user"":""root"", ""password"":""a"", ""host"":""127.0.0.1"", ""port"":""6032""}' http://127.0.0.1:6070/sync/metrics

{""params"":{""user"":""root"", ""password"":""a"", ""host"":""127.0.0.1"", ""port"":""6032""}, ""result"":""Variable_Name\tVariable_Value\nSQLite3_memory_bytes\t3553504\njemalloc_resident\t21569536\njemalloc_active\t14565376\njemalloc_allocated\t10626296\njemalloc_mapped\t84004864\njemalloc_metadata\t5241896\njemalloc_retained\t51785728\nAuth_memory\t4042\nquery_digest_memory\t11832\nmysql_query_rules_memory\t1380\nmysql_firewall_users_table\t0\nmysql_firewall_users_config\t0\nmysql_firewall_rules_table\t0\nmysql_firewall_rules_config\t329\nstack_memory_mysql_threads\t33554432\nstack_memory_admin_threads\t16777216\nstack_memory_cluster_threads\t0\n""}

Calling metrics example using method GET
Parameters to script are passed in the URL
val@s89830:~/workspace/val214_proxysql$ curl -X GET ""http://127.0.0.1:6070/sync/metrics?user=root&password=a&host=127.0.0.1&port=6032""

{""params"":{""host"":""127.0.0.1"",""port"":""6032"",""user"":""root"",""password"":""a""}, ""result"":""Variable_Name\tVariable_Value\nSQLite3_memory_bytes\t3157344\njemalloc_resident\t16977920\njemalloc_active\t12062720\njemalloc_allocated\t9356864\njemalloc_mapped\t67137536\njemalloc_metadata\t4779336\njemalloc_retained\t43487232\nAuth_memory\t2810\nquery_digest_memory\t0\nmysql_query_rules_memory\t1380\nmysql_firewall_users_table\t0\nmysql_firewall_users_config\t0\nmysql_firewall_rules_table\t0\nmysql_firewall_rules_config\t329\nstack_memory_mysql_threads\t33554432\nstack_memory_admin_threads\t16777216\nstack_memory_cluster_threads\t0\n""}

Calling export_user example
The export_users script returns number of records processed in the json response.
$ curl -X POST -d '{""db"":{""user"":""root"", ""password"":""a"", ""port"":""3306"", ""host"":""127.0.0.1""},""admin"":{""user"":""admin"",""password"":""admin"",""port"":""6032"",""host"":""127.0.0.1""}}' http://127.0.0.1:6070/sync/export_users

{""params"":{""db"":{""user"":""root"", ""password"":""a"", ""port"":""3306"", ""host"":""127.0.0.1""},""admin"":{""user"":""admin"",""password"":""admin"",""port"":""6032"",""host"":""127.0.0.1""}}, ""result"":{""num_records"":""8""}}","@alikrubin thank you for your feedback.

Some minor issues:
Formatting error in the table:
1.
Create Table: CREATE TABLE restapi_routes (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    active INT CHECK (active IN (0,1)) NOT NULL DEFAULT 1,
    interval_ms INTEGER CHECK (interval_ms>-100 AND interval_ms<=100000000) NOT NULL,
    method VARCHAR NOT NULL CHECK (UPPER(method) IN ('GET','POST')), uri VARCHAR NOT NULL, script VARCHAR NOT NULL, comment VARCHAR NO NULL DEFAULT '')


What do you mean with formatting error?

proxysql.cnf does not pickup the variable
mysql_variables=
{
    restapi_enabled=""true""
}

MySQL [(none)]> select * from global_variables where variable_name like '%rest%';
+-----------------------+----------------+
| variable_name         | variable_value |
+-----------------------+----------------+
| admin-restapi_enabled | false          |
| admin-restapi_port    | 6070           |
+-----------------------+----------------+
2 rows in set (0.00 sec)


admin-restapi_enabled is an admin variable, but you are trying to configure it in the mysql_variables. I tried to configure
admin_variables=
{
    restapi_enabled=true
}

and it worked.

1. This section of config does not seem to work:

restapi =
(
	{
		id=1
		active=1
		interval_ms=1000
		uri=""test""
		script=""/script.py""
		comment=""comment""
	}
)


This is the section for automation tests. This is neither example nor correct configuration. It is used only for testing reading/writing configuration file.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2461,2019-12-25T08:51:11Z,2020-02-07T04:18:35Z,2020-02-07T04:18:36Z,MERGED,True,677,28,14,https://github.com/alpes214,V2.0.9 restapi [FR],6,[],https://github.com/sysown/proxysql/pull/2461,https://github.com/alpes214,7,https://github.com/sysown/proxysql/pull/2461#issuecomment-573456198,"Restapi endpoint
Restapi endpoint feature allows users to create new RESTapi endpoints and execute scripts on behalf of the proxysql. At the moment there are two examples of the scripts that are used for querying memory metrics and exporting users from MySQL database to ProxySQL.
Installing dependencies
The python package mysqlclient must be installed in order export_users package to work. This can be accomplished by the pip command:
$ pip install mysqlclient

or, if proxysql is running under sudo:
$ sudo pip install mysqlclient

Creating new endpoint
In order to create a new RESTapi endpoint, it must be defined in the restapi_routes table.
MySQL [(none)]> select * from restapi_routes;
Empty set (0.00 sec)

MySQL [(none)]> insert into restapi_routes (active, interval_ms, method, uri, script, comment) values (1,1000,'POST','export_users','./scripts/export_users.py','comm');
Query OK, 1 row affected (0.00 sec)

MySQL [(none)]> insert into restapi_routes (active, interval_ms, method, uri, script, comment) values (1,1000,'POST','metrics','./scripts/metrics.py','comm');
Query OK, 1 row affected (0.00 sec)

MySQL [(none)]> insert into restapi_routes (active, interval_ms, method, uri, script, comment) values (1,1000,'GET','metrics','./scripts/metrics.py','comm');
Query OK, 1 row affected (0.00 sec)

MySQL [(none)]> select * from restapi_routes\G
*************************** 1. row ***************************
         id: 1
     active: 1
interval_ms: 1000
     method: POST
        uri: export_users
     script: ./scripts/export_users.py
    comment: comm
*************************** 2. row ***************************
         id: 2
     active: 1
interval_ms: 1000
     method: POST
        uri: metrics
     script: ./scripts/metrics.py
    comment: comm
*************************** 3. row ***************************
         id: 3
     active: 1
interval_ms: 1000
     method: GET
        uri: metrics
     script: ./scripts/metrics.py
    comment: comm
3 rows in set (0.00 sec)


Calling metrics example POST
Parameters to script are passed using json -d '{""user"":""root"", ""password"":""a"", ""host"":""127.0.0.1"", ""port"":""6032‚Äù}'
$ curl -X POST -d '{""user"":""root"", ""password"":""a"", ""host"":""127.0.0.1"", ""port"":""6032""}' http://127.0.0.1:6070/sync/metrics

{""params"":{""user"":""root"", ""password"":""a"", ""host"":""127.0.0.1"", ""port"":""6032""}, ""result"":""Variable_Name\tVariable_Value\nSQLite3_memory_bytes\t3553504\njemalloc_resident\t21569536\njemalloc_active\t14565376\njemalloc_allocated\t10626296\njemalloc_mapped\t84004864\njemalloc_metadata\t5241896\njemalloc_retained\t51785728\nAuth_memory\t4042\nquery_digest_memory\t11832\nmysql_query_rules_memory\t1380\nmysql_firewall_users_table\t0\nmysql_firewall_users_config\t0\nmysql_firewall_rules_table\t0\nmysql_firewall_rules_config\t329\nstack_memory_mysql_threads\t33554432\nstack_memory_admin_threads\t16777216\nstack_memory_cluster_threads\t0\n""}

Calling metrics example using method GET
Parameters to script are passed in the URL
val@s89830:~/workspace/val214_proxysql$ curl -X GET ""http://127.0.0.1:6070/sync/metrics?user=root&password=a&host=127.0.0.1&port=6032""

{""params"":{""host"":""127.0.0.1"",""port"":""6032"",""user"":""root"",""password"":""a""}, ""result"":""Variable_Name\tVariable_Value\nSQLite3_memory_bytes\t3157344\njemalloc_resident\t16977920\njemalloc_active\t12062720\njemalloc_allocated\t9356864\njemalloc_mapped\t67137536\njemalloc_metadata\t4779336\njemalloc_retained\t43487232\nAuth_memory\t2810\nquery_digest_memory\t0\nmysql_query_rules_memory\t1380\nmysql_firewall_users_table\t0\nmysql_firewall_users_config\t0\nmysql_firewall_rules_table\t0\nmysql_firewall_rules_config\t329\nstack_memory_mysql_threads\t33554432\nstack_memory_admin_threads\t16777216\nstack_memory_cluster_threads\t0\n""}

Calling export_user example
The export_users script returns number of records processed in the json response.
$ curl -X POST -d '{""db"":{""user"":""root"", ""password"":""a"", ""port"":""3306"", ""host"":""127.0.0.1""},""admin"":{""user"":""admin"",""password"":""admin"",""port"":""6032"",""host"":""127.0.0.1""}}' http://127.0.0.1:6070/sync/export_users

{""params"":{""db"":{""user"":""root"", ""password"":""a"", ""port"":""3306"", ""host"":""127.0.0.1""},""admin"":{""user"":""admin"",""password"":""admin"",""port"":""6032"",""host"":""127.0.0.1""}}, ""result"":{""num_records"":""8""}}","Another issue:
mysql> insert into restapi_routes (active, interval_ms, method, uri, script, comment) values (1,1000,'POST','export_users','./scripts/export_users.py','comm');
Query OK, 1 row affected (0.00 sec)

mysql> select * from restapi_routes;
+-----+--------+-------------+--------+--------------+---------------------------+---------+
| id  | active | interval_ms | method | uri          | script                    | comment |
+-----+--------+-------------+--------+--------------+---------------------------+---------+
| 101 | 1      | 1000        | POST   | export_users | ./scripts/export_users.py | comm    |
+-----+--------+-------------+--------+--------------+---------------------------+---------+
1 row in set (0.00 sec)

2020-01-11 23:08:21 sqlite3db.cpp:163:execute(): [ERROR] SQLITE error: table runtime_restapi_routes has 7 columns but 6 values were supplied --- INSERT INTO  runtime_restapi_routes  VALUES(1,1,1000,'POST','export_users','./scripts/export_users.py')


This is fixed. My bad.
I found one more problem which exists with runtime_restapi_routes. Currently user can use (call) RESTAPI service without loading configuration to runtime. This is not correct. I will fix it asap.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2461,2019-12-25T08:51:11Z,2020-02-07T04:18:35Z,2020-02-07T04:18:36Z,MERGED,True,677,28,14,https://github.com/alpes214,V2.0.9 restapi [FR],6,[],https://github.com/sysown/proxysql/pull/2461,https://github.com/alikrubin,8,https://github.com/sysown/proxysql/pull/2461#issuecomment-573497806,"Restapi endpoint
Restapi endpoint feature allows users to create new RESTapi endpoints and execute scripts on behalf of the proxysql. At the moment there are two examples of the scripts that are used for querying memory metrics and exporting users from MySQL database to ProxySQL.
Installing dependencies
The python package mysqlclient must be installed in order export_users package to work. This can be accomplished by the pip command:
$ pip install mysqlclient

or, if proxysql is running under sudo:
$ sudo pip install mysqlclient

Creating new endpoint
In order to create a new RESTapi endpoint, it must be defined in the restapi_routes table.
MySQL [(none)]> select * from restapi_routes;
Empty set (0.00 sec)

MySQL [(none)]> insert into restapi_routes (active, interval_ms, method, uri, script, comment) values (1,1000,'POST','export_users','./scripts/export_users.py','comm');
Query OK, 1 row affected (0.00 sec)

MySQL [(none)]> insert into restapi_routes (active, interval_ms, method, uri, script, comment) values (1,1000,'POST','metrics','./scripts/metrics.py','comm');
Query OK, 1 row affected (0.00 sec)

MySQL [(none)]> insert into restapi_routes (active, interval_ms, method, uri, script, comment) values (1,1000,'GET','metrics','./scripts/metrics.py','comm');
Query OK, 1 row affected (0.00 sec)

MySQL [(none)]> select * from restapi_routes\G
*************************** 1. row ***************************
         id: 1
     active: 1
interval_ms: 1000
     method: POST
        uri: export_users
     script: ./scripts/export_users.py
    comment: comm
*************************** 2. row ***************************
         id: 2
     active: 1
interval_ms: 1000
     method: POST
        uri: metrics
     script: ./scripts/metrics.py
    comment: comm
*************************** 3. row ***************************
         id: 3
     active: 1
interval_ms: 1000
     method: GET
        uri: metrics
     script: ./scripts/metrics.py
    comment: comm
3 rows in set (0.00 sec)


Calling metrics example POST
Parameters to script are passed using json -d '{""user"":""root"", ""password"":""a"", ""host"":""127.0.0.1"", ""port"":""6032‚Äù}'
$ curl -X POST -d '{""user"":""root"", ""password"":""a"", ""host"":""127.0.0.1"", ""port"":""6032""}' http://127.0.0.1:6070/sync/metrics

{""params"":{""user"":""root"", ""password"":""a"", ""host"":""127.0.0.1"", ""port"":""6032""}, ""result"":""Variable_Name\tVariable_Value\nSQLite3_memory_bytes\t3553504\njemalloc_resident\t21569536\njemalloc_active\t14565376\njemalloc_allocated\t10626296\njemalloc_mapped\t84004864\njemalloc_metadata\t5241896\njemalloc_retained\t51785728\nAuth_memory\t4042\nquery_digest_memory\t11832\nmysql_query_rules_memory\t1380\nmysql_firewall_users_table\t0\nmysql_firewall_users_config\t0\nmysql_firewall_rules_table\t0\nmysql_firewall_rules_config\t329\nstack_memory_mysql_threads\t33554432\nstack_memory_admin_threads\t16777216\nstack_memory_cluster_threads\t0\n""}

Calling metrics example using method GET
Parameters to script are passed in the URL
val@s89830:~/workspace/val214_proxysql$ curl -X GET ""http://127.0.0.1:6070/sync/metrics?user=root&password=a&host=127.0.0.1&port=6032""

{""params"":{""host"":""127.0.0.1"",""port"":""6032"",""user"":""root"",""password"":""a""}, ""result"":""Variable_Name\tVariable_Value\nSQLite3_memory_bytes\t3157344\njemalloc_resident\t16977920\njemalloc_active\t12062720\njemalloc_allocated\t9356864\njemalloc_mapped\t67137536\njemalloc_metadata\t4779336\njemalloc_retained\t43487232\nAuth_memory\t2810\nquery_digest_memory\t0\nmysql_query_rules_memory\t1380\nmysql_firewall_users_table\t0\nmysql_firewall_users_config\t0\nmysql_firewall_rules_table\t0\nmysql_firewall_rules_config\t329\nstack_memory_mysql_threads\t33554432\nstack_memory_admin_threads\t16777216\nstack_memory_cluster_threads\t0\n""}

Calling export_user example
The export_users script returns number of records processed in the json response.
$ curl -X POST -d '{""db"":{""user"":""root"", ""password"":""a"", ""port"":""3306"", ""host"":""127.0.0.1""},""admin"":{""user"":""admin"",""password"":""admin"",""port"":""6032"",""host"":""127.0.0.1""}}' http://127.0.0.1:6070/sync/export_users

{""params"":{""db"":{""user"":""root"", ""password"":""a"", ""port"":""3306"", ""host"":""127.0.0.1""},""admin"":{""user"":""admin"",""password"":""admin"",""port"":""6032"",""host"":""127.0.0.1""}}, ""result"":{""num_records"":""8""}}","@val214 thank you for the quick fix. I was talking about the different format (no end of lines after method field)  is due to the ""space"" is needed before and after "","" in the table definition. Also there is a typo here:
comment VARCHAR NO NULL DEFAULT '')
Probably needs to be
comment VARCHAR NOT NULL DEFAULT '')
Here is the diff (from the original version):
diff --git a/lib/ProxySQL_Admin.cpp b/lib/ProxySQL_Admin.cpp
index 7a677a3..b0bdb86 100644
--- a/lib/ProxySQL_Admin.cpp
+++ b/lib/ProxySQL_Admin.cpp
@@ -394,9 +394,9 @@ static int http_handler(void *cls, struct MHD_Connection *connection, const char
 
 #define ADMIN_SQLITE_TABLE_MYSQL_COLLATIONS ""CREATE TABLE mysql_collations (Id INTEGER NOT NULL PRIMARY KEY , Collation VARCHAR NOT NULL , Charset VARCHAR NOT NULL , `Default` VARCHAR NOT NULL)""
 
-#define ADMIN_SQLITE_TABLE_RESTAPI_ROUTES ""CREATE TABLE restapi_routes (id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT , active INT CHECK (active IN (0,1)) NOT NULL DEFAULT 1 , interval_ms INTEGER CHECK (interval_ms>-100 AND interval_ms<=100000000) NOT NULL , method VARCHAR NOT NULL CHECK (UPPER(method) IN ('GET','POST')), uri VARCHAR NOT NULL, script VARCHAR NOT NULL, comment VARCHAR NO NULL DEFAULT '')""
+#define ADMIN_SQLITE_TABLE_RESTAPI_ROUTES ""CREATE TABLE restapi_routes (id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT , active INT CHECK (active IN (0,1)) NOT NULL DEFAULT 1 , interval_ms INTEGER CHECK (interval_ms>-100 AND interval_ms<=100000000) NOT NULL , method VARCHAR NOT NULL CHECK (UPPER(method) IN ('GET','POST')) , uri VARCHAR NOT NULL , script VARCHAR NOT NULL , comment VARCHAR NOT NULL DEFAULT '')""
 
-#define ADMIN_SQLITE_TABLE_RUNTIME_RESTAPI_ROUTES ""CREATE TABLE runtime_restapi_routes (id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT , active INT CHECK (active IN (0,1)) NOT NULL DEFAULT 1 , interval_ms INTEGER CHECK (interval_ms>-100 AND interval_ms<=100000000) NOT NULL , method VARCHAR NOT NULL CHECK (UPPER(method) IN ('GET','POST')) , uri VARCHAR NOT NULL, script VARCHAR NOT NULL, comment VARCHAR NO NULL DEFAULT '')""
+#define ADMIN_SQLITE_TABLE_RUNTIME_RESTAPI_ROUTES ""CREATE TABLE runtime_restapi_routes (id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT , active INT CHECK (active IN (0,1)) NOT NULL DEFAULT 1 , interval_ms INTEGER CHECK (interval_ms>-100 AND interval_ms<=100000000) NOT NULL , method VARCHAR NOT NULL CHECK (UPPER(method) IN ('GET','POST')) , uri VARCHAR NOT NULL , script VARCHAR NOT NULL , comment VARCHAR NOT NULL DEFAULT '')""
 
 #define ADMIN_SQLITE_TABLE_SCHEDULER ""CREATE TABLE scheduler (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL , active INT CHECK (active IN (0,1)) NOT NULL DEFAULT 1 , interval_ms INTEGER CHECK (interval_ms>=100 AND interval_ms<=100000000) NOT NULL , filename VARCHAR NOT NULL , arg1 VARCHAR , arg2 VARCHAR , arg3 VARCHAR , arg4 VARCHAR , arg5 VARCHAR , comment VARCHAR NOT NULL DEFAULT '')""",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2461,2019-12-25T08:51:11Z,2020-02-07T04:18:35Z,2020-02-07T04:18:36Z,MERGED,True,677,28,14,https://github.com/alpes214,V2.0.9 restapi [FR],6,[],https://github.com/sysown/proxysql/pull/2461,https://github.com/alikrubin,9,https://github.com/sysown/proxysql/pull/2461#issuecomment-573504874,"Restapi endpoint
Restapi endpoint feature allows users to create new RESTapi endpoints and execute scripts on behalf of the proxysql. At the moment there are two examples of the scripts that are used for querying memory metrics and exporting users from MySQL database to ProxySQL.
Installing dependencies
The python package mysqlclient must be installed in order export_users package to work. This can be accomplished by the pip command:
$ pip install mysqlclient

or, if proxysql is running under sudo:
$ sudo pip install mysqlclient

Creating new endpoint
In order to create a new RESTapi endpoint, it must be defined in the restapi_routes table.
MySQL [(none)]> select * from restapi_routes;
Empty set (0.00 sec)

MySQL [(none)]> insert into restapi_routes (active, interval_ms, method, uri, script, comment) values (1,1000,'POST','export_users','./scripts/export_users.py','comm');
Query OK, 1 row affected (0.00 sec)

MySQL [(none)]> insert into restapi_routes (active, interval_ms, method, uri, script, comment) values (1,1000,'POST','metrics','./scripts/metrics.py','comm');
Query OK, 1 row affected (0.00 sec)

MySQL [(none)]> insert into restapi_routes (active, interval_ms, method, uri, script, comment) values (1,1000,'GET','metrics','./scripts/metrics.py','comm');
Query OK, 1 row affected (0.00 sec)

MySQL [(none)]> select * from restapi_routes\G
*************************** 1. row ***************************
         id: 1
     active: 1
interval_ms: 1000
     method: POST
        uri: export_users
     script: ./scripts/export_users.py
    comment: comm
*************************** 2. row ***************************
         id: 2
     active: 1
interval_ms: 1000
     method: POST
        uri: metrics
     script: ./scripts/metrics.py
    comment: comm
*************************** 3. row ***************************
         id: 3
     active: 1
interval_ms: 1000
     method: GET
        uri: metrics
     script: ./scripts/metrics.py
    comment: comm
3 rows in set (0.00 sec)


Calling metrics example POST
Parameters to script are passed using json -d '{""user"":""root"", ""password"":""a"", ""host"":""127.0.0.1"", ""port"":""6032‚Äù}'
$ curl -X POST -d '{""user"":""root"", ""password"":""a"", ""host"":""127.0.0.1"", ""port"":""6032""}' http://127.0.0.1:6070/sync/metrics

{""params"":{""user"":""root"", ""password"":""a"", ""host"":""127.0.0.1"", ""port"":""6032""}, ""result"":""Variable_Name\tVariable_Value\nSQLite3_memory_bytes\t3553504\njemalloc_resident\t21569536\njemalloc_active\t14565376\njemalloc_allocated\t10626296\njemalloc_mapped\t84004864\njemalloc_metadata\t5241896\njemalloc_retained\t51785728\nAuth_memory\t4042\nquery_digest_memory\t11832\nmysql_query_rules_memory\t1380\nmysql_firewall_users_table\t0\nmysql_firewall_users_config\t0\nmysql_firewall_rules_table\t0\nmysql_firewall_rules_config\t329\nstack_memory_mysql_threads\t33554432\nstack_memory_admin_threads\t16777216\nstack_memory_cluster_threads\t0\n""}

Calling metrics example using method GET
Parameters to script are passed in the URL
val@s89830:~/workspace/val214_proxysql$ curl -X GET ""http://127.0.0.1:6070/sync/metrics?user=root&password=a&host=127.0.0.1&port=6032""

{""params"":{""host"":""127.0.0.1"",""port"":""6032"",""user"":""root"",""password"":""a""}, ""result"":""Variable_Name\tVariable_Value\nSQLite3_memory_bytes\t3157344\njemalloc_resident\t16977920\njemalloc_active\t12062720\njemalloc_allocated\t9356864\njemalloc_mapped\t67137536\njemalloc_metadata\t4779336\njemalloc_retained\t43487232\nAuth_memory\t2810\nquery_digest_memory\t0\nmysql_query_rules_memory\t1380\nmysql_firewall_users_table\t0\nmysql_firewall_users_config\t0\nmysql_firewall_rules_table\t0\nmysql_firewall_rules_config\t329\nstack_memory_mysql_threads\t33554432\nstack_memory_admin_threads\t16777216\nstack_memory_cluster_threads\t0\n""}

Calling export_user example
The export_users script returns number of records processed in the json response.
$ curl -X POST -d '{""db"":{""user"":""root"", ""password"":""a"", ""port"":""3306"", ""host"":""127.0.0.1""},""admin"":{""user"":""admin"",""password"":""admin"",""port"":""6032"",""host"":""127.0.0.1""}}' http://127.0.0.1:6070/sync/export_users

{""params"":{""db"":{""user"":""root"", ""password"":""a"", ""port"":""3306"", ""host"":""127.0.0.1""},""admin"":{""user"":""admin"",""password"":""admin"",""port"":""6032"",""host"":""127.0.0.1""}}, ""result"":{""num_records"":""8""}}","@val214 the new fix works just fine - thank you!
I would suggest also adding CORS headers and change content-type to json
cors header access-control-allow-origin
Access-Control-Allow-Origin: *",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2461,2019-12-25T08:51:11Z,2020-02-07T04:18:35Z,2020-02-07T04:18:36Z,MERGED,True,677,28,14,https://github.com/alpes214,V2.0.9 restapi [FR],6,[],https://github.com/sysown/proxysql/pull/2461,https://github.com/alpes214,10,https://github.com/sysown/proxysql/pull/2461#issuecomment-573532332,"Restapi endpoint
Restapi endpoint feature allows users to create new RESTapi endpoints and execute scripts on behalf of the proxysql. At the moment there are two examples of the scripts that are used for querying memory metrics and exporting users from MySQL database to ProxySQL.
Installing dependencies
The python package mysqlclient must be installed in order export_users package to work. This can be accomplished by the pip command:
$ pip install mysqlclient

or, if proxysql is running under sudo:
$ sudo pip install mysqlclient

Creating new endpoint
In order to create a new RESTapi endpoint, it must be defined in the restapi_routes table.
MySQL [(none)]> select * from restapi_routes;
Empty set (0.00 sec)

MySQL [(none)]> insert into restapi_routes (active, interval_ms, method, uri, script, comment) values (1,1000,'POST','export_users','./scripts/export_users.py','comm');
Query OK, 1 row affected (0.00 sec)

MySQL [(none)]> insert into restapi_routes (active, interval_ms, method, uri, script, comment) values (1,1000,'POST','metrics','./scripts/metrics.py','comm');
Query OK, 1 row affected (0.00 sec)

MySQL [(none)]> insert into restapi_routes (active, interval_ms, method, uri, script, comment) values (1,1000,'GET','metrics','./scripts/metrics.py','comm');
Query OK, 1 row affected (0.00 sec)

MySQL [(none)]> select * from restapi_routes\G
*************************** 1. row ***************************
         id: 1
     active: 1
interval_ms: 1000
     method: POST
        uri: export_users
     script: ./scripts/export_users.py
    comment: comm
*************************** 2. row ***************************
         id: 2
     active: 1
interval_ms: 1000
     method: POST
        uri: metrics
     script: ./scripts/metrics.py
    comment: comm
*************************** 3. row ***************************
         id: 3
     active: 1
interval_ms: 1000
     method: GET
        uri: metrics
     script: ./scripts/metrics.py
    comment: comm
3 rows in set (0.00 sec)


Calling metrics example POST
Parameters to script are passed using json -d '{""user"":""root"", ""password"":""a"", ""host"":""127.0.0.1"", ""port"":""6032‚Äù}'
$ curl -X POST -d '{""user"":""root"", ""password"":""a"", ""host"":""127.0.0.1"", ""port"":""6032""}' http://127.0.0.1:6070/sync/metrics

{""params"":{""user"":""root"", ""password"":""a"", ""host"":""127.0.0.1"", ""port"":""6032""}, ""result"":""Variable_Name\tVariable_Value\nSQLite3_memory_bytes\t3553504\njemalloc_resident\t21569536\njemalloc_active\t14565376\njemalloc_allocated\t10626296\njemalloc_mapped\t84004864\njemalloc_metadata\t5241896\njemalloc_retained\t51785728\nAuth_memory\t4042\nquery_digest_memory\t11832\nmysql_query_rules_memory\t1380\nmysql_firewall_users_table\t0\nmysql_firewall_users_config\t0\nmysql_firewall_rules_table\t0\nmysql_firewall_rules_config\t329\nstack_memory_mysql_threads\t33554432\nstack_memory_admin_threads\t16777216\nstack_memory_cluster_threads\t0\n""}

Calling metrics example using method GET
Parameters to script are passed in the URL
val@s89830:~/workspace/val214_proxysql$ curl -X GET ""http://127.0.0.1:6070/sync/metrics?user=root&password=a&host=127.0.0.1&port=6032""

{""params"":{""host"":""127.0.0.1"",""port"":""6032"",""user"":""root"",""password"":""a""}, ""result"":""Variable_Name\tVariable_Value\nSQLite3_memory_bytes\t3157344\njemalloc_resident\t16977920\njemalloc_active\t12062720\njemalloc_allocated\t9356864\njemalloc_mapped\t67137536\njemalloc_metadata\t4779336\njemalloc_retained\t43487232\nAuth_memory\t2810\nquery_digest_memory\t0\nmysql_query_rules_memory\t1380\nmysql_firewall_users_table\t0\nmysql_firewall_users_config\t0\nmysql_firewall_rules_table\t0\nmysql_firewall_rules_config\t329\nstack_memory_mysql_threads\t33554432\nstack_memory_admin_threads\t16777216\nstack_memory_cluster_threads\t0\n""}

Calling export_user example
The export_users script returns number of records processed in the json response.
$ curl -X POST -d '{""db"":{""user"":""root"", ""password"":""a"", ""port"":""3306"", ""host"":""127.0.0.1""},""admin"":{""user"":""admin"",""password"":""admin"",""port"":""6032"",""host"":""127.0.0.1""}}' http://127.0.0.1:6070/sync/export_users

{""params"":{""db"":{""user"":""root"", ""password"":""a"", ""port"":""3306"", ""host"":""127.0.0.1""},""admin"":{""user"":""admin"",""password"":""admin"",""port"":""6032"",""host"":""127.0.0.1""}}, ""result"":{""num_records"":""8""}}","@alikrubin changed formatting and added two headers.
Also fixed problem with runtime table. Now restapi service will work if corresponding record exists in runtime_restapi_routes table.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2461,2019-12-25T08:51:11Z,2020-02-07T04:18:35Z,2020-02-07T04:18:36Z,MERGED,True,677,28,14,https://github.com/alpes214,V2.0.9 restapi [FR],6,[],https://github.com/sysown/proxysql/pull/2461,https://github.com/alikrubin,11,https://github.com/sysown/proxysql/pull/2461#issuecomment-577163629,"Restapi endpoint
Restapi endpoint feature allows users to create new RESTapi endpoints and execute scripts on behalf of the proxysql. At the moment there are two examples of the scripts that are used for querying memory metrics and exporting users from MySQL database to ProxySQL.
Installing dependencies
The python package mysqlclient must be installed in order export_users package to work. This can be accomplished by the pip command:
$ pip install mysqlclient

or, if proxysql is running under sudo:
$ sudo pip install mysqlclient

Creating new endpoint
In order to create a new RESTapi endpoint, it must be defined in the restapi_routes table.
MySQL [(none)]> select * from restapi_routes;
Empty set (0.00 sec)

MySQL [(none)]> insert into restapi_routes (active, interval_ms, method, uri, script, comment) values (1,1000,'POST','export_users','./scripts/export_users.py','comm');
Query OK, 1 row affected (0.00 sec)

MySQL [(none)]> insert into restapi_routes (active, interval_ms, method, uri, script, comment) values (1,1000,'POST','metrics','./scripts/metrics.py','comm');
Query OK, 1 row affected (0.00 sec)

MySQL [(none)]> insert into restapi_routes (active, interval_ms, method, uri, script, comment) values (1,1000,'GET','metrics','./scripts/metrics.py','comm');
Query OK, 1 row affected (0.00 sec)

MySQL [(none)]> select * from restapi_routes\G
*************************** 1. row ***************************
         id: 1
     active: 1
interval_ms: 1000
     method: POST
        uri: export_users
     script: ./scripts/export_users.py
    comment: comm
*************************** 2. row ***************************
         id: 2
     active: 1
interval_ms: 1000
     method: POST
        uri: metrics
     script: ./scripts/metrics.py
    comment: comm
*************************** 3. row ***************************
         id: 3
     active: 1
interval_ms: 1000
     method: GET
        uri: metrics
     script: ./scripts/metrics.py
    comment: comm
3 rows in set (0.00 sec)


Calling metrics example POST
Parameters to script are passed using json -d '{""user"":""root"", ""password"":""a"", ""host"":""127.0.0.1"", ""port"":""6032‚Äù}'
$ curl -X POST -d '{""user"":""root"", ""password"":""a"", ""host"":""127.0.0.1"", ""port"":""6032""}' http://127.0.0.1:6070/sync/metrics

{""params"":{""user"":""root"", ""password"":""a"", ""host"":""127.0.0.1"", ""port"":""6032""}, ""result"":""Variable_Name\tVariable_Value\nSQLite3_memory_bytes\t3553504\njemalloc_resident\t21569536\njemalloc_active\t14565376\njemalloc_allocated\t10626296\njemalloc_mapped\t84004864\njemalloc_metadata\t5241896\njemalloc_retained\t51785728\nAuth_memory\t4042\nquery_digest_memory\t11832\nmysql_query_rules_memory\t1380\nmysql_firewall_users_table\t0\nmysql_firewall_users_config\t0\nmysql_firewall_rules_table\t0\nmysql_firewall_rules_config\t329\nstack_memory_mysql_threads\t33554432\nstack_memory_admin_threads\t16777216\nstack_memory_cluster_threads\t0\n""}

Calling metrics example using method GET
Parameters to script are passed in the URL
val@s89830:~/workspace/val214_proxysql$ curl -X GET ""http://127.0.0.1:6070/sync/metrics?user=root&password=a&host=127.0.0.1&port=6032""

{""params"":{""host"":""127.0.0.1"",""port"":""6032"",""user"":""root"",""password"":""a""}, ""result"":""Variable_Name\tVariable_Value\nSQLite3_memory_bytes\t3157344\njemalloc_resident\t16977920\njemalloc_active\t12062720\njemalloc_allocated\t9356864\njemalloc_mapped\t67137536\njemalloc_metadata\t4779336\njemalloc_retained\t43487232\nAuth_memory\t2810\nquery_digest_memory\t0\nmysql_query_rules_memory\t1380\nmysql_firewall_users_table\t0\nmysql_firewall_users_config\t0\nmysql_firewall_rules_table\t0\nmysql_firewall_rules_config\t329\nstack_memory_mysql_threads\t33554432\nstack_memory_admin_threads\t16777216\nstack_memory_cluster_threads\t0\n""}

Calling export_user example
The export_users script returns number of records processed in the json response.
$ curl -X POST -d '{""db"":{""user"":""root"", ""password"":""a"", ""port"":""3306"", ""host"":""127.0.0.1""},""admin"":{""user"":""admin"",""password"":""admin"",""port"":""6032"",""host"":""127.0.0.1""}}' http://127.0.0.1:6070/sync/export_users

{""params"":{""db"":{""user"":""root"", ""password"":""a"", ""port"":""3306"", ""host"":""127.0.0.1""},""admin"":{""user"":""admin"",""password"":""admin"",""port"":""6032"",""host"":""127.0.0.1""}}, ""result"":{""num_records"":""8""}}","All is working fine now, thank you!",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2468,2019-12-31T09:02:06Z,2020-01-10T14:52:56Z,2020-01-10T14:52:56Z,MERGED,True,74,5,4,https://github.com/alpes214,V2.0.9 sqlite,2,[],https://github.com/sysown/proxysql/pull/2468,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2468,"Description:
Small enhancement of the SQLite3DB class. Overloading execute_statement method so it returns pointer to result set. Method has default values for parameters which might not be used each time method is called.
sqlite3-t.cpp shows couple of usages.","Description:
Small enhancement of the SQLite3DB class. Overloading execute_statement method so it returns pointer to result set. Method has default values for parameters which might not be used each time method is called.
sqlite3-t.cpp shows couple of usages.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2469,2020-01-01T13:30:58Z,2020-01-13T15:51:47Z,2020-01-13T15:52:12Z,MERGED,True,58,11,3,https://github.com/kirs,Support min_gtid annotation,3,[],https://github.com/sysown/proxysql/pull/2469,https://github.com/kirs,1,https://github.com/sysown/proxysql/pull/2469,"This PR is an attempt to get #2444 done. I'm probably missing a lot, and this is the first time I do C++, so I'd really appreciate the feedback.
How does it work?

This relies on ProxySQL tracking GTID of each backend, using https://github.com/sysown/proxysql_mysqlbinlog. That must be running on each MySQL host.
Each client keeps min_gtid of the data that it has written (maybe even leveraging session_track_gtids): in a cookie/session for web requests, and in Redis for batch jobs.
min_gtid is passed in a comment to ProxySQL, which lets it choose any read replica that satisfies that GTID.

#2444 (comment) has a diagram showing how that can be leveraged by a typical web app.
Questions:

What would be the best way to test this? I'm not sure I'm 100% following how ProxySQL test suite works.

I'm looking forward to your feedback ‚ù§Ô∏è","This PR is an attempt to get #2444 done. I'm probably missing a lot, and this is the first time I do C++, so I'd really appreciate the feedback.
How does it work?

This relies on ProxySQL tracking GTID of each backend, using https://github.com/sysown/proxysql_mysqlbinlog. That must be running on each MySQL host.
Each client keeps min_gtid of the data that it has written (maybe even leveraging session_track_gtids): in a cookie/session for web requests, and in Redis for batch jobs.
min_gtid is passed in a comment to ProxySQL, which lets it choose any read replica that satisfies that GTID.

#2444 (comment) has a diagram showing how that can be leveraged by a typical web app.
Questions:

What would be the best way to test this? I'm not sure I'm 100% following how ProxySQL test suite works.

I'm looking forward to your feedback ‚ù§Ô∏è",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2469,2020-01-01T13:30:58Z,2020-01-13T15:51:47Z,2020-01-13T15:52:12Z,MERGED,True,58,11,3,https://github.com/kirs,Support min_gtid annotation,3,[],https://github.com/sysown/proxysql/pull/2469,https://github.com/kirs,2,https://github.com/sysown/proxysql/pull/2469#issuecomment-571499961,"This PR is an attempt to get #2444 done. I'm probably missing a lot, and this is the first time I do C++, so I'd really appreciate the feedback.
How does it work?

This relies on ProxySQL tracking GTID of each backend, using https://github.com/sysown/proxysql_mysqlbinlog. That must be running on each MySQL host.
Each client keeps min_gtid of the data that it has written (maybe even leveraging session_track_gtids): in a cookie/session for web requests, and in Redis for batch jobs.
min_gtid is passed in a comment to ProxySQL, which lets it choose any read replica that satisfies that GTID.

#2444 (comment) has a diagram showing how that can be leveraged by a typical web app.
Questions:

What would be the best way to test this? I'm not sure I'm 100% following how ProxySQL test suite works.

I'm looking forward to your feedback ‚ù§Ô∏è","Thanks for review @val214! I pushed another commit that adds GTID validation, to make sure that we only set qpo->min_gtid to legit value.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2469,2020-01-01T13:30:58Z,2020-01-13T15:51:47Z,2020-01-13T15:52:12Z,MERGED,True,58,11,3,https://github.com/kirs,Support min_gtid annotation,3,[],https://github.com/sysown/proxysql/pull/2469,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/2469#issuecomment-572447967,"This PR is an attempt to get #2444 done. I'm probably missing a lot, and this is the first time I do C++, so I'd really appreciate the feedback.
How does it work?

This relies on ProxySQL tracking GTID of each backend, using https://github.com/sysown/proxysql_mysqlbinlog. That must be running on each MySQL host.
Each client keeps min_gtid of the data that it has written (maybe even leveraging session_track_gtids): in a cookie/session for web requests, and in Redis for batch jobs.
min_gtid is passed in a comment to ProxySQL, which lets it choose any read replica that satisfies that GTID.

#2444 (comment) has a diagram showing how that can be leveraged by a typical web app.
Questions:

What would be the best way to test this? I'm not sure I'm 100% following how ProxySQL test suite works.

I'm looking forward to your feedback ‚ù§Ô∏è",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2469,2020-01-01T13:30:58Z,2020-01-13T15:51:47Z,2020-01-13T15:52:12Z,MERGED,True,58,11,3,https://github.com/kirs,Support min_gtid annotation,3,[],https://github.com/sysown/proxysql/pull/2469,https://github.com/alpes214,4,https://github.com/sysown/proxysql/pull/2469#issuecomment-572470180,"This PR is an attempt to get #2444 done. I'm probably missing a lot, and this is the first time I do C++, so I'd really appreciate the feedback.
How does it work?

This relies on ProxySQL tracking GTID of each backend, using https://github.com/sysown/proxysql_mysqlbinlog. That must be running on each MySQL host.
Each client keeps min_gtid of the data that it has written (maybe even leveraging session_track_gtids): in a cookie/session for web requests, and in Redis for batch jobs.
min_gtid is passed in a comment to ProxySQL, which lets it choose any read replica that satisfies that GTID.

#2444 (comment) has a diagram showing how that can be leveraged by a typical web app.
Questions:

What would be the best way to test this? I'm not sure I'm 100% following how ProxySQL test suite works.

I'm looking forward to your feedback ‚ù§Ô∏è","@kirs, thank you for your changes but there is an issue that still should be resolved.
The is_valid_gtid() function handles now the situation when ':' is absent, but even in this case two parts of code Query_Processor::is_valid_gtid and MySQL_Session::handler___client_DSS_QUERY_SENT___server_DSS_NOT_INITIALIZED__get_connection can be changed independently in future and cause a crash of the proxysql. The NULL return value of the index() functions must be handled properly.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2469,2020-01-01T13:30:58Z,2020-01-13T15:51:47Z,2020-01-13T15:52:12Z,MERGED,True,58,11,3,https://github.com/kirs,Support min_gtid annotation,3,[],https://github.com/sysown/proxysql/pull/2469,https://github.com/kirs,5,https://github.com/sysown/proxysql/pull/2469#issuecomment-572865587,"This PR is an attempt to get #2444 done. I'm probably missing a lot, and this is the first time I do C++, so I'd really appreciate the feedback.
How does it work?

This relies on ProxySQL tracking GTID of each backend, using https://github.com/sysown/proxysql_mysqlbinlog. That must be running on each MySQL host.
Each client keeps min_gtid of the data that it has written (maybe even leveraging session_track_gtids): in a cookie/session for web requests, and in Redis for batch jobs.
min_gtid is passed in a comment to ProxySQL, which lets it choose any read replica that satisfies that GTID.

#2444 (comment) has a diagram showing how that can be leveraged by a typical web app.
Questions:

What would be the best way to test this? I'm not sure I'm 100% following how ProxySQL test suite works.

I'm looking forward to your feedback ‚ù§Ô∏è","I somehow assumed that index() in handler___client_DSS_QUERY_SENT___server_DSS_NOT_INITIALIZED__get_connection was intentionally ""unsafe"" because at that point it's only supposed to accept valid GTIDs, but it makes sense to make it safe in both places in case it's changed in the future.
I pushed a commit that makes index() usage safe to NULL in that function. I hope I understand you correctly, but if not, I'm happy to follow up.
Thanks again for reviewing this.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2469,2020-01-01T13:30:58Z,2020-01-13T15:51:47Z,2020-01-13T15:52:12Z,MERGED,True,58,11,3,https://github.com/kirs,Support min_gtid annotation,3,[],https://github.com/sysown/proxysql/pull/2469,https://github.com/renecannao,6,https://github.com/sysown/proxysql/pull/2469#issuecomment-573731196,"This PR is an attempt to get #2444 done. I'm probably missing a lot, and this is the first time I do C++, so I'd really appreciate the feedback.
How does it work?

This relies on ProxySQL tracking GTID of each backend, using https://github.com/sysown/proxysql_mysqlbinlog. That must be running on each MySQL host.
Each client keeps min_gtid of the data that it has written (maybe even leveraging session_track_gtids): in a cookie/session for web requests, and in Redis for batch jobs.
min_gtid is passed in a comment to ProxySQL, which lets it choose any read replica that satisfies that GTID.

#2444 (comment) has a diagram showing how that can be leveraged by a typical web app.
Questions:

What would be the best way to test this? I'm not sure I'm 100% following how ProxySQL test suite works.

I'm looking forward to your feedback ‚ù§Ô∏è","LGTM!
Thank you everybody!",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2470,2020-01-01T21:30:12Z,2020-01-23T11:13:32Z,2020-01-23T11:13:37Z,MERGED,True,207,132,8,https://github.com/alpes214,additional test for set_character_set results,2,[],https://github.com/sysown/proxysql/pull/2470,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2470,some more tests after reviewing current variables implementation,some more tests after reviewing current variables implementation,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2473,2020-01-04T09:05:53Z,2020-01-20T06:39:53Z,2020-01-20T06:39:53Z,MERGED,True,901,673,13,https://github.com/alpes214,[WIP] Implementation of the session variables in array,10,[],https://github.com/sysown/proxysql/pull/2473,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2473,"Description:
All currently supported session variables are moved into array
Testing:
Tested with benchmark tools. Additional tests for proxysql internal session are comming.","Description:
All currently supported session variables are moved into array
Testing:
Tested with benchmark tools. Additional tests for proxysql internal session are comming.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2473,2020-01-04T09:05:53Z,2020-01-20T06:39:53Z,2020-01-20T06:39:53Z,MERGED,True,901,673,13,https://github.com/alpes214,[WIP] Implementation of the session variables in array,10,[],https://github.com/sysown/proxysql/pull/2473,https://github.com/alpes214,2,https://github.com/sysown/proxysql/pull/2473#issuecomment-574083064,"Description:
All currently supported session variables are moved into array
Testing:
Tested with benchmark tools. Additional tests for proxysql internal session are comming.",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2485,2020-01-14T18:14:09Z,2022-05-31T09:09:49Z,2022-05-31T09:09:50Z,CLOSED,False,450,4,12,https://github.com/alpes214,V2.0.9 841,12,[],https://github.com/sysown/proxysql/pull/2485,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2485,"Description:
This PR fixes memory leak described in issue #841
Clean PR","Description:
This PR fixes memory leak described in issue #841
Clean PR",True,{'THUMBS_UP': ['https://github.com/noahwilliamsson']}
sysown/proxysql,https://github.com/sysown/proxysql,2485,2020-01-14T18:14:09Z,2022-05-31T09:09:49Z,2022-05-31T09:09:50Z,CLOSED,False,450,4,12,https://github.com/alpes214,V2.0.9 841,12,[],https://github.com/sysown/proxysql/pull/2485,https://github.com/alpes214,2,https://github.com/sysown/proxysql/pull/2485#issuecomment-574501615,"Description:
This PR fixes memory leak described in issue #841
Clean PR","Valgrind Report
==32004== LEAK SUMMARY:
==32004==    definitely lost: 1,969 bytes in 20 blocks
==32004==    indirectly lost: 97,111 bytes in 43 blocks
==32004==      possibly lost: 375,120 bytes in 86 blocks
==32004==    still reachable: 421,578 bytes in 1,719 blocks
==32004==                       of which reachable via heuristic:
==32004==                         length64           : 301,168 bytes in 626 blocks
==32004==         suppressed: 0 bytes in 0 blocks
==32004==
==32004== ERROR SUMMARY: 36 errors from 36 contexts (suppressed: 0 from 0)

DrMemory Report
~~Dr.M~~ ERRORS FOUND:
~~Dr.M~~       0 unique,     0 total unaddressable access(es)
~~Dr.M~~       0 unique,     0 total invalid heap argument(s)
~~Dr.M~~       0 unique,     0 total warning(s)
~~Dr.M~~      14 unique,    20 total,  97464 byte(s) of leak(s)
~~Dr.M~~      19 unique,    84 total, 366384 byte(s) of possible leak(s)
~~Dr.M~~ ERRORS IGNORED:
~~Dr.M~~     306 unique,   985 total, 435950 byte(s) of still-reachable allocation(s)
~~Dr.M~~          (re-run with ""-show_reachable"" for details)
~~Dr.M~~ Details: /home/val/workspace/drmemory/build/logs/DrMemory-proxysql.30605.000/results.txt",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2485,2020-01-14T18:14:09Z,2022-05-31T09:09:49Z,2022-05-31T09:09:50Z,CLOSED,False,450,4,12,https://github.com/alpes214,V2.0.9 841,12,[],https://github.com/sysown/proxysql/pull/2485,https://github.com/alpes214,3,https://github.com/sysown/proxysql/pull/2485#issuecomment-575879117,"Description:
This PR fixes memory leak described in issue #841
Clean PR",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2485,2020-01-14T18:14:09Z,2022-05-31T09:09:49Z,2022-05-31T09:09:50Z,CLOSED,False,450,4,12,https://github.com/alpes214,V2.0.9 841,12,[],https://github.com/sysown/proxysql/pull/2485,https://github.com/alpes214,4,https://github.com/sysown/proxysql/pull/2485#issuecomment-580219122,"Description:
This PR fixes memory leak described in issue #841
Clean PR","These changes was tested with sysbench. Sysbench runs three times for 100s. The jemalloc metrics has been taken before tests and after each test. The memory consumption is not growing.
MySQL [(none)]> select * from stats_memory_metrics where variable_name like '%jemalloc_%';
+--------------------+----------------+
| Variable_Name      | Variable_Value |
+--------------------+----------------+
| jemalloc_resident  | 14737408       |
| jemalloc_active    | 10174464       |
| jemalloc_allocated | 8670408        |
| jemalloc_mapped    | 56700928       |
| jemalloc_metadata  | 4512776        |
| jemalloc_retained  | 37146624       |
+--------------------+----------------+
6 rows in set (0.01 sec)

MySQL [(none)]> select * from stats_memory_metrics where variable_name like '%jemalloc_%';
+--------------------+----------------+
| Variable_Name      | Variable_Value |
+--------------------+----------------+
| jemalloc_resident  | 19685376       |
| jemalloc_active    | 12435456       |
| jemalloc_allocated | 9660984        |
| jemalloc_mapped    | 61620224       |
| jemalloc_metadata  | 4547592        |
| jemalloc_retained  | 37470208       |
+--------------------+----------------+
6 rows in set (0.00 sec)

MySQL [(none)]> select * from stats_memory_metrics where variable_name like '%jemalloc_%';
+--------------------+----------------+
| Variable_Name      | Variable_Value |
+--------------------+----------------+
| jemalloc_resident  | 22179840       |
| jemalloc_active    | 12374016       |
| jemalloc_allocated | 8853984        |
| jemalloc_mapped    | 64090112       |
| jemalloc_metadata  | 4566792        |
| jemalloc_retained  | 37621760       |
+--------------------+----------------+
6 rows in set (0.00 sec)

MySQL [(none)]> select * from stats_memory_metrics where variable_name like '%jemalloc_%';
+--------------------+----------------+
| Variable_Name      | Variable_Value |
+--------------------+----------------+
| jemalloc_resident  | 21131264       |
| jemalloc_active    | 12066816       |
| jemalloc_allocated | 8539376        |
| jemalloc_mapped    | 63037440       |
| jemalloc_metadata  | 4567944        |
| jemalloc_retained  | 38674432       |
+--------------------+----------------+
6 rows in set (0.01 sec)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2485,2020-01-14T18:14:09Z,2022-05-31T09:09:49Z,2022-05-31T09:09:50Z,CLOSED,False,450,4,12,https://github.com/alpes214,V2.0.9 841,12,[],https://github.com/sysown/proxysql/pull/2485,https://github.com/alpes214,5,https://github.com/sysown/proxysql/pull/2485#issuecomment-580387350,"Description:
This PR fixes memory leak described in issue #841
Clean PR","Another test was performed:

Run proxysql

sudo valgrind --tool=memcheck --leak-check=full --trace-children=yes --log-file=valgrind3.log ./src/proxysql -f


Configure proxysql server

SET mysql-max_stmts_per_connection=5;
SET mysql-max_stmts_cache=1024;
LOAD MYSQL VARIABLES TO RUNTIME;


Run test script

for i in `seq 1 100` ; do ( time for i in `seq 1 1000` ; do php -f ps841.php 10 ; done > /dev/null & ) ; done


Actual results

==14194== LEAK SUMMARY:
==14194==    definitely lost: 1,602 bytes in 15 blocks
==14194==    indirectly lost: 96,780 bytes in 36 blocks
==14194==      possibly lost: 396,960 bytes in 91 blocks
==14194==    still reachable: 420,432 bytes in 1,671 blocks
==14194==                       of which reachable via heuristic:
==14194==                         length64           : 301,168 bytes in 626 blocks
==14194==         suppressed: 0 bytes in 0 blocks
==14194== Reachable blocks (those to which a pointer was found) are not shown.
==14194== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==14194==
==14194== For counts of detected and suppressed errors, rerun with: -v
==14194== ERROR SUMMARY: 34 errors from 34 contexts (suppressed: 0 from 0)

Summary: reduction in number of errors from 1049 to 34.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2485,2020-01-14T18:14:09Z,2022-05-31T09:09:49Z,2022-05-31T09:09:50Z,CLOSED,False,450,4,12,https://github.com/alpes214,V2.0.9 841,12,[],https://github.com/sysown/proxysql/pull/2485,https://github.com/renecannao,6,https://github.com/sysown/proxysql/pull/2485#issuecomment-596853690,"Description:
This PR fixes memory leak described in issue #841
Clean PR",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2485,2020-01-14T18:14:09Z,2022-05-31T09:09:49Z,2022-05-31T09:09:50Z,CLOSED,False,450,4,12,https://github.com/alpes214,V2.0.9 841,12,[],https://github.com/sysown/proxysql/pull/2485,https://github.com/JavierJF,7,https://github.com/sysown/proxysql/pull/2485#issuecomment-598895218,"Description:
This PR fixes memory leak described in issue #841
Clean PR","My first try with valgrind reveals different results in the leak summary:
 ==20111== LEAK SUMMARY:
 ==20111==    definitely lost: 596 bytes in 14 blocks
 ==20111==    indirectly lost: 0 bytes in 0 blocks
 ==20111==      possibly lost: 1,343,568 bytes in 333 blocks
 ==20111==    still reachable: 2,654,770 bytes in 13,197 blocks
 ==20111==                       of which reachable via heuristic:
 ==20111==                         length64           : 1,767,808 bytes in 5,959 blocks
 ==20111==         suppressed: 0 bytes in 0 blocks
 ==20111== Reachable blocks (those to which a pointer was found) are not shown.
 ==20111== To see them, rerun with: --leak-check=full --show-leak-kinds=all
 ==20111==
 ==20111== Use --track-origins=yes to see where uninitialised values come from
 ==20111== For lists of detected and suppressed errors, rerun with: -s
 ==20111== ERROR SUMMARY: 61 errors from 61 contexts (suppressed: 0 from 0)

I will investigate it.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2485,2020-01-14T18:14:09Z,2022-05-31T09:09:49Z,2022-05-31T09:09:50Z,CLOSED,False,450,4,12,https://github.com/alpes214,V2.0.9 841,12,[],https://github.com/sysown/proxysql/pull/2485,https://github.com/pondix,8,https://github.com/sysown/proxysql/pull/2485#issuecomment-657702889,"Description:
This PR fixes memory leak described in issue #841
Clean PR",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2488,2020-01-20T03:22:59Z,2020-01-20T03:23:13Z,2020-01-20T03:45:04Z,MERGED,True,24,6,3,https://github.com/renecannao,Fix stalls when backend becomes unhealthy,3,[],https://github.com/sysown/proxysql/pull/2488,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2488,Port from a custom build of v1.4.10 into v1.4.16,Port from a custom build of v1.4.10 into v1.4.16,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2489,2020-01-20T06:40:15Z,,2022-03-10T21:50:36Z,OPEN,False,901,673,13,https://github.com/renecannao,V2.0.9 var array,11,[],https://github.com/sysown/proxysql/pull/2489,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2489,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2489,2020-01-20T06:40:15Z,,2022-03-10T21:50:36Z,OPEN,False,901,673,13,https://github.com/renecannao,V2.0.9 var array,11,[],https://github.com/sysown/proxysql/pull/2489,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2489#issuecomment-1064537288,,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2490,2020-01-20T07:16:19Z,2020-02-10T09:46:42Z,2020-02-10T09:46:42Z,MERGED,True,69,38,3,https://github.com/alpes214,pxc_maint_mode implementation for galera,2,[],https://github.com/sysown/proxysql/pull/2490,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2490,"Description:
Implements pxc_maint_mode
Tests:
Tested with SQLIte3_Server","Description:
Implements pxc_maint_mode
Tests:
Tested with SQLIte3_Server",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2495,2020-01-23T04:40:48Z,,2020-01-23T04:42:03Z,OPEN,False,141,119,6,https://github.com/akshaysuryawanshi,Connection warming support per backend server,1,[],https://github.com/sysown/proxysql/pull/2495,https://github.com/akshaysuryawanshi,1,https://github.com/sysown/proxysql/pull/2495,"This PR adds support for connection warming per backend server. It accomplishes this by adding a new column to mysql_servers table called connection_warming. This column serves as a config option for that backend.
Defaults value is 0 meaning connection warming disabled. When set to 1 for a particular backend, it forces ProxySQL to open new connections until the expected number of warm connections is reached.
The expected number of warm connections is calculated based on mysql-free_connection_pct value. For eg: if max_connections is set to 100 and mysql-free_connection_pct is set to 50, then if connection_warming is enabled for a backend server, then it will open and keep 50 connections warm at all time.
This PR doesn't let ProxySQL open new connections on its own, but uses the incoming MySQL connection requests to do so. This approach should help in creating and maintaining connections that are set to application-specific session information as well hence increasing the utilization of the connection pool.
The addition of a new column to mysql_servers table could very well be a breaking change, hence there are chances that this PR may not get merged in the current versions of ProxySQL.","This PR adds support for connection warming per backend server. It accomplishes this by adding a new column to mysql_servers table called connection_warming. This column serves as a config option for that backend.
Defaults value is 0 meaning connection warming disabled. When set to 1 for a particular backend, it forces ProxySQL to open new connections until the expected number of warm connections is reached.
The expected number of warm connections is calculated based on mysql-free_connection_pct value. For eg: if max_connections is set to 100 and mysql-free_connection_pct is set to 50, then if connection_warming is enabled for a backend server, then it will open and keep 50 connections warm at all time.
This PR doesn't let ProxySQL open new connections on its own, but uses the incoming MySQL connection requests to do so. This approach should help in creating and maintaining connections that are set to application-specific session information as well hence increasing the utilization of the connection pool.
The addition of a new column to mysql_servers table could very well be a breaking change, hence there are chances that this PR may not get merged in the current versions of ProxySQL.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2495,2020-01-23T04:40:48Z,,2020-01-23T04:42:03Z,OPEN,False,141,119,6,https://github.com/akshaysuryawanshi,Connection warming support per backend server,1,[],https://github.com/sysown/proxysql/pull/2495,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2495#issuecomment-577501007,"This PR adds support for connection warming per backend server. It accomplishes this by adding a new column to mysql_servers table called connection_warming. This column serves as a config option for that backend.
Defaults value is 0 meaning connection warming disabled. When set to 1 for a particular backend, it forces ProxySQL to open new connections until the expected number of warm connections is reached.
The expected number of warm connections is calculated based on mysql-free_connection_pct value. For eg: if max_connections is set to 100 and mysql-free_connection_pct is set to 50, then if connection_warming is enabled for a backend server, then it will open and keep 50 connections warm at all time.
This PR doesn't let ProxySQL open new connections on its own, but uses the incoming MySQL connection requests to do so. This approach should help in creating and maintaining connections that are set to application-specific session information as well hence increasing the utilization of the connection pool.
The addition of a new column to mysql_servers table could very well be a breaking change, hence there are chances that this PR may not get merged in the current versions of ProxySQL.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2496,2020-01-24T04:56:22Z,,2020-04-05T22:19:15Z,OPEN,False,28,1,4,https://github.com/akshaysuryawanshi,Global connection warming support,2,[],https://github.com/sysown/proxysql/pull/2496,https://github.com/akshaysuryawanshi,1,https://github.com/sysown/proxysql/pull/2496,"Extending PR, this is a less breaking change. I have introduced a global variable called mysql-connection_warming, which when enabled will warm connections for all backend servers in all hostgroups.
Defaults value is false meaning connection warming disabled. When set to true for a particular backend, it forces ProxySQL to open new connections until the expected number of warm connections is reached.
The expected number of warm connections is calculated based on mysql-free_connection_pct value. For eg: if max_connections is set to 100 and mysql-free_connection_pct is set to 50, then if connection_warming is enabled, then it will open and keep 50 connections warm at all time.","Extending PR, this is a less breaking change. I have introduced a global variable called mysql-connection_warming, which when enabled will warm connections for all backend servers in all hostgroups.
Defaults value is false meaning connection warming disabled. When set to true for a particular backend, it forces ProxySQL to open new connections until the expected number of warm connections is reached.
The expected number of warm connections is calculated based on mysql-free_connection_pct value. For eg: if max_connections is set to 100 and mysql-free_connection_pct is set to 50, then if connection_warming is enabled, then it will open and keep 50 connections warm at all time.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2496,2020-01-24T04:56:22Z,,2020-04-05T22:19:15Z,OPEN,False,28,1,4,https://github.com/akshaysuryawanshi,Global connection warming support,2,[],https://github.com/sysown/proxysql/pull/2496,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2496#issuecomment-577991268,"Extending PR, this is a less breaking change. I have introduced a global variable called mysql-connection_warming, which when enabled will warm connections for all backend servers in all hostgroups.
Defaults value is false meaning connection warming disabled. When set to true for a particular backend, it forces ProxySQL to open new connections until the expected number of warm connections is reached.
The expected number of warm connections is calculated based on mysql-free_connection_pct value. For eg: if max_connections is set to 100 and mysql-free_connection_pct is set to 50, then if connection_warming is enabled, then it will open and keep 50 connections warm at all time.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2496,2020-01-24T04:56:22Z,,2020-04-05T22:19:15Z,OPEN,False,28,1,4,https://github.com/akshaysuryawanshi,Global connection warming support,2,[],https://github.com/sysown/proxysql/pull/2496,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2496#issuecomment-577991643,"Extending PR, this is a less breaking change. I have introduced a global variable called mysql-connection_warming, which when enabled will warm connections for all backend servers in all hostgroups.
Defaults value is false meaning connection warming disabled. When set to true for a particular backend, it forces ProxySQL to open new connections until the expected number of warm connections is reached.
The expected number of warm connections is calculated based on mysql-free_connection_pct value. For eg: if max_connections is set to 100 and mysql-free_connection_pct is set to 50, then if connection_warming is enabled, then it will open and keep 50 connections warm at all time.",add to whitelist,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2496,2020-01-24T04:56:22Z,,2020-04-05T22:19:15Z,OPEN,False,28,1,4,https://github.com/akshaysuryawanshi,Global connection warming support,2,[],https://github.com/sysown/proxysql/pull/2496,https://github.com/JavierJF,4,https://github.com/sysown/proxysql/pull/2496#issuecomment-607711758,"Extending PR, this is a less breaking change. I have introduced a global variable called mysql-connection_warming, which when enabled will warm connections for all backend servers in all hostgroups.
Defaults value is false meaning connection warming disabled. When set to true for a particular backend, it forces ProxySQL to open new connections until the expected number of warm connections is reached.
The expected number of warm connections is calculated based on mysql-free_connection_pct value. For eg: if max_connections is set to 100 and mysql-free_connection_pct is set to 50, then if connection_warming is enabled, then it will open and keep 50 connections warm at all time.",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2496,2020-01-24T04:56:22Z,,2020-04-05T22:19:15Z,OPEN,False,28,1,4,https://github.com/akshaysuryawanshi,Global connection warming support,2,[],https://github.com/sysown/proxysql/pull/2496,https://github.com/JavierJF,5,https://github.com/sysown/proxysql/pull/2496#issuecomment-609433900,"Extending PR, this is a less breaking change. I have introduced a global variable called mysql-connection_warming, which when enabled will warm connections for all backend servers in all hostgroups.
Defaults value is false meaning connection warming disabled. When set to true for a particular backend, it forces ProxySQL to open new connections until the expected number of warm connections is reached.
The expected number of warm connections is calculated based on mysql-free_connection_pct value. For eg: if max_connections is set to 100 and mysql-free_connection_pct is set to 50, then if connection_warming is enabled, then it will open and keep 50 connections warm at all time.","@akshaysuryawanshi Hi there! I haven been reviewing and testing the PR and looks good for me, we are no longer maintaining 1.4.16, we will be moving this PR into this one that is targeting v2.0.11. I will wait for your feedback about #2496 (comment) for making any further changes in that PR. Thanks you!",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2496,2020-01-24T04:56:22Z,,2020-04-05T22:19:15Z,OPEN,False,28,1,4,https://github.com/akshaysuryawanshi,Global connection warming support,2,[],https://github.com/sysown/proxysql/pull/2496,https://github.com/akshaysuryawanshi,6,https://github.com/sysown/proxysql/pull/2496#issuecomment-609493958,"Extending PR, this is a less breaking change. I have introduced a global variable called mysql-connection_warming, which when enabled will warm connections for all backend servers in all hostgroups.
Defaults value is false meaning connection warming disabled. When set to true for a particular backend, it forces ProxySQL to open new connections until the expected number of warm connections is reached.
The expected number of warm connections is calculated based on mysql-free_connection_pct value. For eg: if max_connections is set to 100 and mysql-free_connection_pct is set to 50, then if connection_warming is enabled, then it will open and keep 50 connections warm at all time.","@JavierJF Sounds good about the maintenance of 1.4.16 branch and thank you for porting the changes to 2.0.11. As per the mentioned comment I have pushed a minor cleanup that we run in shopify's patch, which can be easily ported further to the 2.0.x branch as well.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2498,2020-01-27T06:56:25Z,2020-01-27T07:57:48Z,2020-01-27T07:57:48Z,MERGED,True,44,0,3,https://github.com/alpes214,Use terminate handler for C++ exceptions,1,[],https://github.com/sysown/proxysql/pull/2498,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2498,"Description:
STL library is used extensively. Its classes/methods generate exceptions in case of error. The proxysql should print backtrace into the log in case of unhandled exception.","Description:
STL library is used extensively. Its classes/methods generate exceptions in case of error. The proxysql should print backtrace into the log in case of unhandled exception.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2500,2020-01-30T06:27:15Z,2020-02-01T05:30:51Z,2020-06-15T18:58:39Z,MERGED,True,14,8,3,https://github.com/renecannao,Allows the same nodes to be part of multiple Aurora clusters,1,[],https://github.com/sysown/proxysql/pull/2500,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2500,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2501,2020-01-30T13:34:12Z,2020-02-01T05:32:05Z,2020-06-15T18:58:41Z,MERGED,True,102,31,1,https://github.com/renecannao,Several bug fixes for large resultset with PS,1,[],https://github.com/sysown/proxysql/pull/2501,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2501,"Fixed several bugs:

resultset larger than 4GB would cause a crash
rows large than 16MB could cause crash or memory corruption

This commit also:

improves memory usage for large resultset
generates a heartbeat every 256MB of data copied, to avoid crash due to missing heartbeat","Fixed several bugs:

resultset larger than 4GB would cause a crash
rows large than 16MB could cause crash or memory corruption

This commit also:

improves memory usage for large resultset
generates a heartbeat every 256MB of data copied, to avoid crash due to missing heartbeat",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2501,2020-01-30T13:34:12Z,2020-02-01T05:32:05Z,2020-06-15T18:58:41Z,MERGED,True,102,31,1,https://github.com/renecannao,Several bug fixes for large resultset with PS,1,[],https://github.com/sysown/proxysql/pull/2501,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2501#issuecomment-580994809,"Fixed several bugs:

resultset larger than 4GB would cause a crash
rows large than 16MB could cause crash or memory corruption

This commit also:

improves memory usage for large resultset
generates a heartbeat every 256MB of data copied, to avoid crash due to missing heartbeat",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2505,2020-02-01T09:39:46Z,2020-02-07T04:17:32Z,2020-06-15T18:58:43Z,MERGED,True,7,2,1,https://github.com/alpes214,Tap test refers to mariadb client library,1,[],https://github.com/sysown/proxysql/pull/2505,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2505,"Description:
Fix build of the tap library. Now it refers to internal mariadb client library.","Description:
Fix build of the tap library. Now it refers to internal mariadb client library.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2506,2020-02-01T11:31:18Z,2020-02-02T09:52:17Z,2020-06-15T18:58:44Z,MERGED,True,398,3,2,https://github.com/alpes214,Test for large result fix,3,[],https://github.com/sysown/proxysql/pull/2506,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2506,"Description:
This is a test for large result fix
How to execute:
$ make clean && make -j 8 && make build_tap_test
$ export TAP_HOST=127.0.0.1
$ export TAP_USERNAME=root
$ export TAP_PASSWORD=REDACTED
$ export TAP_PORT=6033
$ ./test/tap/tests/test_ps_large_result-t
1..9
# Testing SELECT CONFIG FILE
ok 1 - 10000 row inserted
ok 2 - 100 rows result stored
ok 3 - Fetched 100 rows
ok 4 - 4GB Result stored
ok 5 - Fetch 10000000 rows
ok 6 - Fetched 4GB
ok 7 - 4GB Result stored
ok 8 - Fetch 10 rows
ok 9 - Fetched large rows
Test took 0.00 sec","Description:
This is a test for large result fix
How to execute:
$ make clean && make -j 8 && make build_tap_test
$ export TAP_HOST=127.0.0.1
$ export TAP_USERNAME=root
$ export TAP_PASSWORD=REDACTED
$ export TAP_PORT=6033
$ ./test/tap/tests/test_ps_large_result-t
1..9
# Testing SELECT CONFIG FILE
ok 1 - 10000 row inserted
ok 2 - 100 rows result stored
ok 3 - Fetched 100 rows
ok 4 - 4GB Result stored
ok 5 - Fetch 10000000 rows
ok 6 - Fetched 4GB
ok 7 - 4GB Result stored
ok 8 - Fetch 10 rows
ok 9 - Fetched large rows
Test took 0.00 sec",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2507,2020-02-02T10:45:02Z,2020-02-02T12:52:33Z,2020-06-15T18:58:46Z,MERGED,True,8,8,1,https://github.com/alpes214,More verbose output for failed SET statements,1,[],https://github.com/sysown/proxysql/pull/2507,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2507,"Description:
Add server, port, host group to error messages. (issue #2502 )
Testing:
Tested manually with simulated errors.
2020-02-02 10:38:13 MySQL_Session.cpp:2317:handler_again___status_SETTING_SQL_LOG_BIN(): [WARNING] Error while setting SQL_LOG_BIN: 127.0.0.1:3306 hg 0 : 0,
2020-02-02 10:38:13 MySQL_Session.cpp:134:kill_query_thread(): [WARNING] KILL CONNECTION 60 on 127.0.0.1:3306

2020-02-02 10:33:35 MySQL_Session.cpp:2529:handler_again___status_SETTING_GENERIC_VARIABLE(): [WARNING] Error while setting MAX_JOIN_SIZE to ""100000"" on 127.0.0.1:3306 hg 0 :  1231,
2020-02-02 10:33:35 MySQL_Session.cpp:134:kill_query_thread(): [WARNING] KILL CONNECTION 46 on 127.0.0.1:3306

2020-02-02 10:30:42 MySQL_Session.cpp:2528:handler_again___status_SETTING_GENERIC_VARIABLE(): [WARNING] Error while setting MAX_JOIN_SIZE to ""100000"" on 127.0.0.1:3306 hg 0 :  0,
2020-02-02 10:30:42 MySQL_Session.cpp:134:kill_query_thread(): [WARNING] KILL CONNECTION 35 on 127.0.0.1:3306","Description:
Add server, port, host group to error messages. (issue #2502 )
Testing:
Tested manually with simulated errors.
2020-02-02 10:38:13 MySQL_Session.cpp:2317:handler_again___status_SETTING_SQL_LOG_BIN(): [WARNING] Error while setting SQL_LOG_BIN: 127.0.0.1:3306 hg 0 : 0,
2020-02-02 10:38:13 MySQL_Session.cpp:134:kill_query_thread(): [WARNING] KILL CONNECTION 60 on 127.0.0.1:3306

2020-02-02 10:33:35 MySQL_Session.cpp:2529:handler_again___status_SETTING_GENERIC_VARIABLE(): [WARNING] Error while setting MAX_JOIN_SIZE to ""100000"" on 127.0.0.1:3306 hg 0 :  1231,
2020-02-02 10:33:35 MySQL_Session.cpp:134:kill_query_thread(): [WARNING] KILL CONNECTION 46 on 127.0.0.1:3306

2020-02-02 10:30:42 MySQL_Session.cpp:2528:handler_again___status_SETTING_GENERIC_VARIABLE(): [WARNING] Error while setting MAX_JOIN_SIZE to ""100000"" on 127.0.0.1:3306 hg 0 :  0,
2020-02-02 10:30:42 MySQL_Session.cpp:134:kill_query_thread(): [WARNING] KILL CONNECTION 35 on 127.0.0.1:3306",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2508,2020-02-02T12:02:51Z,2020-02-02T21:48:31Z,2020-06-15T18:58:47Z,MERGED,True,1,1,1,https://github.com/alpes214,Monitor expired password and failed pings,1,[],https://github.com/sysown/proxysql/pull/2508,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2508,"Description:
Do not disable server when password is expired. (issue #2503 )
Test:
MySQL [test]> alter user 'monitor'@'%' password expire;
Query OK, 0 rows affected (0.10 sec)

MySQL [test]> flush privileges;
Query OK, 0 rows affected (0.03 sec)

After restart proxysql monitor connects to server and puts message in mysql_server_ping_log. Server is not shunned after three pings.
MySQL [(none)]> select * from mysql_server_ping_log;
+-----------+------+------------------+----------------------+---------------------------------------------------------------------------------------------------------+
| hostname  | port | time_start_us    | ping_success_time_us | ping_error                                                                                              |
+-----------+------+------------------+----------------------+---------------------------------------------------------------------------------------------------------+
| 127.0.0.1 | 3306 | 1580644622092704 | 0                    | Your password has expired. To log in you must change it using a client that supports expired passwords. |
| 127.0.0.1 | 3306 | 1580644632157394 | 0                    | Your password has expired. To log in you must change it using a client that supports expired passwords. |
| 127.0.0.1 | 3306 | 1580644642161557 | 0                    | Your password has expired. To log in you must change it using a client that supports expired passwords. |
+-----------+------+------------------+----------------------+---------------------------------------------------------------------------------------------------------+
3 rows in set (0.00 sec)","Description:
Do not disable server when password is expired. (issue #2503 )
Test:
MySQL [test]> alter user 'monitor'@'%' password expire;
Query OK, 0 rows affected (0.10 sec)

MySQL [test]> flush privileges;
Query OK, 0 rows affected (0.03 sec)

After restart proxysql monitor connects to server and puts message in mysql_server_ping_log. Server is not shunned after three pings.
MySQL [(none)]> select * from mysql_server_ping_log;
+-----------+------+------------------+----------------------+---------------------------------------------------------------------------------------------------------+
| hostname  | port | time_start_us    | ping_success_time_us | ping_error                                                                                              |
+-----------+------+------------------+----------------------+---------------------------------------------------------------------------------------------------------+
| 127.0.0.1 | 3306 | 1580644622092704 | 0                    | Your password has expired. To log in you must change it using a client that supports expired passwords. |
| 127.0.0.1 | 3306 | 1580644632157394 | 0                    | Your password has expired. To log in you must change it using a client that supports expired passwords. |
| 127.0.0.1 | 3306 | 1580644642161557 | 0                    | Your password has expired. To log in you must change it using a client that supports expired passwords. |
+-----------+------+------------------+----------------------+---------------------------------------------------------------------------------------------------------+
3 rows in set (0.00 sec)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2509,2020-02-02T12:38:54Z,2020-02-02T21:48:41Z,2020-06-15T18:58:49Z,MERGED,True,4,0,1,https://github.com/alpes214,Report expired password error into the monitors error log,1,[],https://github.com/sysown/proxysql/pull/2509,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2509,"Description
Logs expired password error intom Monitor's error log (issue #2504 )
Testing:
Tested with expired monitor password
2020-02-02 12:31:30 MySQL_Monitor.cpp:722:monitor_connect_thread(): [ERROR] Server 127.0.0.1:3306 is returning ""Your password has expired."" for monitoring user
2020-02-02 12:31:51 MySQL_Monitor.cpp:2402:monitor_ping(): [ERROR] Server 127.0.0.1:3306 missed 3 heartbeats, shunning it and killing all the connections. Disabling other checks until the node comes back online.","Description
Logs expired password error intom Monitor's error log (issue #2504 )
Testing:
Tested with expired monitor password
2020-02-02 12:31:30 MySQL_Monitor.cpp:722:monitor_connect_thread(): [ERROR] Server 127.0.0.1:3306 is returning ""Your password has expired."" for monitoring user
2020-02-02 12:31:51 MySQL_Monitor.cpp:2402:monitor_ping(): [ERROR] Server 127.0.0.1:3306 missed 3 heartbeats, shunning it and killing all the connections. Disabling other checks until the node comes back online.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2510,2020-02-02T19:34:40Z,2020-02-10T09:47:05Z,2020-06-15T18:58:51Z,MERGED,True,62,4,2,https://github.com/alpes214,SELECT CONFIG INTO OUTFILE,1,[],https://github.com/sysown/proxysql/pull/2510,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2510,"Description:
Changed command from select config to to select config into outfile. Also alias save config to file is added.
Testing:
MySQL [(none)]> select config into outfile /tmp/f1;
Query OK, 9179 rows affected (0.00 sec)
File /tmp/f1 is saved.

MySQL [(none)]> save config to file /tmp/f3;
Query OK, 0 rows affected (0.00 sec)
File /tmp/f3 is saved.","Description:
Changed command from select config to to select config into outfile. Also alias save config to file is added.
Testing:
MySQL [(none)]> select config into outfile /tmp/f1;
Query OK, 9179 rows affected (0.00 sec)
File /tmp/f1 is saved.

MySQL [(none)]> save config to file /tmp/f3;
Query OK, 0 rows affected (0.00 sec)
File /tmp/f3 is saved.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2510,2020-02-02T19:34:40Z,2020-02-10T09:47:05Z,2020-06-15T18:58:51Z,MERGED,True,62,4,2,https://github.com/alpes214,SELECT CONFIG INTO OUTFILE,1,[],https://github.com/sysown/proxysql/pull/2510,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2510#issuecomment-583226955,"Description:
Changed command from select config to to select config into outfile. Also alias save config to file is added.
Testing:
MySQL [(none)]> select config into outfile /tmp/f1;
Query OK, 9179 rows affected (0.00 sec)
File /tmp/f1 is saved.

MySQL [(none)]> save config to file /tmp/f3;
Query OK, 0 rows affected (0.00 sec)
File /tmp/f3 is saved.","@val214 : please document this.
Thank you",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2521,2020-02-11T01:44:15Z,,2022-03-10T21:50:31Z,OPEN,False,2335,2070,41,https://github.com/renecannao,V2.0.9 var array review,67,[],https://github.com/sysown/proxysql/pull/2521,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2521,Creating a pull request to for review purposes. Not to be merged,Creating a pull request to for review purposes. Not to be merged,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2521,2020-02-11T01:44:15Z,,2022-03-10T21:50:31Z,OPEN,False,2335,2070,41,https://github.com/renecannao,V2.0.9 var array review,67,[],https://github.com/sysown/proxysql/pull/2521,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2521#issuecomment-586731885,Creating a pull request to for review purposes. Not to be merged,This causes the automated test server to crash as ProxySQL just accumulates memory until it crashes :D try avoid submitting for build testing until it works...,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2521,2020-02-11T01:44:15Z,,2022-03-10T21:50:31Z,OPEN,False,2335,2070,41,https://github.com/renecannao,V2.0.9 var array review,67,[],https://github.com/sysown/proxysql/pull/2521,https://github.com/alpes214,3,https://github.com/sysown/proxysql/pull/2521#issuecomment-590179810,Creating a pull request to for review purposes. Not to be merged,"@pondix
Proxysql memory is not growing extremely hight.
Memory before sysbench test
MySQL [(none)]> select * from stats_memory_metrics;
+------------------------------+----------------+
| Variable_Name                | Variable_Value |
+------------------------------+----------------+
| SQLite3_memory_bytes         | 3046192        |
| jemalloc_resident            | 16404480       |
| jemalloc_active              | 11341824       |
| jemalloc_allocated           | 9073136        |
| jemalloc_mapped              | 60407808       |
| jemalloc_metadata            | 4596888        |
| jemalloc_retained            | 37634048       |
| Auth_memory                  | 813            |
| query_digest_memory          | 0              |
| mysql_query_rules_memory     | 1380           |
| mysql_firewall_users_table   | 22             |
| mysql_firewall_users_config  | 0              |
| mysql_firewall_rules_table   | 129            |
| mysql_firewall_rules_config  | 502            |
| stack_memory_mysql_threads   | 262144000      |
| stack_memory_admin_threads   | 131072000      |
| stack_memory_cluster_threads | 0              |
+------------------------------+----------------+
17 rows in set (0.01 sec)

Memory after sysbench test
MySQL [(none)]> select * from stats_memory_metrics;
+------------------------------+----------------+
| Variable_Name                | Variable_Value |
+------------------------------+----------------+
| SQLite3_memory_bytes         | 3018712        |
| jemalloc_resident            | 23732224       |
| jemalloc_active              | 12779520       |
| jemalloc_allocated           | 8983400        |
| jemalloc_mapped              | 71884800       |
| jemalloc_metadata            | 6735784        |
| jemalloc_retained            | 40312832       |
| Auth_memory                  | 833            |
| query_digest_memory          | 14848          |
| mysql_query_rules_memory     | 1380           |
| mysql_firewall_users_table   | 22             |
| mysql_firewall_users_config  | 0              |
| mysql_firewall_rules_table   | 129            |
| mysql_firewall_rules_config  | 502            |
| stack_memory_mysql_threads   | 262144000      |
| stack_memory_admin_threads   | 131072000      |
| stack_memory_cluster_threads | 0              |
+------------------------------+----------------+
17 rows in set (0.01 sec)

The log has additional traces and may cause the issue, but after adding new disk this issue should be solved.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2521,2020-02-11T01:44:15Z,,2022-03-10T21:50:31Z,OPEN,False,2335,2070,41,https://github.com/renecannao,V2.0.9 var array review,67,[],https://github.com/sysown/proxysql/pull/2521,https://github.com/alpes214,4,https://github.com/sysown/proxysql/pull/2521#issuecomment-590180166,Creating a pull request to for review purposes. Not to be merged,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2521,2020-02-11T01:44:15Z,,2022-03-10T21:50:31Z,OPEN,False,2335,2070,41,https://github.com/renecannao,V2.0.9 var array review,67,[],https://github.com/sysown/proxysql/pull/2521,https://github.com/pondix,5,https://github.com/sysown/proxysql/pull/2521#issuecomment-1064537213,Creating a pull request to for review purposes. Not to be merged,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2525,2020-02-12T16:15:53Z,2020-02-12T21:05:31Z,2020-02-12T21:05:52Z,MERGED,True,1,1,1,https://github.com/micah,Include apt-transport-https,1,[],https://github.com/sysown/proxysql/pull/2525,https://github.com/micah,1,https://github.com/sysown/proxysql/pull/2525,"On Debian systems, the package apt-transport-https is not installed by default, and if you follow the instructions as written in the README.md, you will get an error like this:
E: The method driver /usr/lib/apt/methods/https could not be found.
N: Is the package apt-transport-https installed?
E: Failed to fetch https://repo.proxysql.com/ProxySQL/proxysql-2.0.x/stretch/./InRelease  
E: Some index files failed to download. They have been ignored, or old ones used instead.

This simply adds the package to the install instructions for Debian/Ubuntu systems. If it is already installed, it will not produce any additional issue.","On Debian systems, the package apt-transport-https is not installed by default, and if you follow the instructions as written in the README.md, you will get an error like this:
E: The method driver /usr/lib/apt/methods/https could not be found.
N: Is the package apt-transport-https installed?
E: Failed to fetch https://repo.proxysql.com/ProxySQL/proxysql-2.0.x/stretch/./InRelease  
E: Some index files failed to download. They have been ignored, or old ones used instead.

This simply adds the package to the install instructions for Debian/Ubuntu systems. If it is already installed, it will not produce any additional issue.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2525,2020-02-12T16:15:53Z,2020-02-12T21:05:31Z,2020-02-12T21:05:52Z,MERGED,True,1,1,1,https://github.com/micah,Include apt-transport-https,1,[],https://github.com/sysown/proxysql/pull/2525,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2525#issuecomment-585417222,"On Debian systems, the package apt-transport-https is not installed by default, and if you follow the instructions as written in the README.md, you will get an error like this:
E: The method driver /usr/lib/apt/methods/https could not be found.
N: Is the package apt-transport-https installed?
E: Failed to fetch https://repo.proxysql.com/ProxySQL/proxysql-2.0.x/stretch/./InRelease  
E: Some index files failed to download. They have been ignored, or old ones used instead.

This simply adds the package to the install instructions for Debian/Ubuntu systems. If it is already installed, it will not produce any additional issue.","Hi @micah .
Thank you for the PR!",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2531,2020-02-17T14:18:28Z,2020-02-17T23:55:34Z,2020-06-15T18:58:32Z,MERGED,True,111,27,7,https://github.com/renecannao,V2.0.9 web2,5,[],https://github.com/sysown/proxysql/pull/2531,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2531,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2535,2020-02-18T12:14:28Z,,2020-02-20T12:44:54Z,OPEN,False,5,1,1,https://github.com/kirs,Tune logic for waiting on read replicas,1,[],https://github.com/sysown/proxysql/pull/2535,https://github.com/kirs,1,https://github.com/sysown/proxysql/pull/2535,"Passing min_gtid annotation on a query (#2469) without backends being up to date will make ProxySQL wait for connect_timeout_server, and then reply with Max connect timeout reached while reaching hostgroup 1.
connect_timeout_server is a global setting, and if in your setup it's a multiple seconds value, you may not wait to make the client wait that long. We'd rather return ""no replicas caught up"" as early as possible.
I'm looking to make the case of ""waiting for GTID"" treated differently from the case of ""waiting for hostgroup to become available"" (for instance because it's tripped on max_connections).
There's couple things I want to do:

Reply with a custom error message (""Gave up waiting for GTID..."")
Don't wait for as long as connect_timeout_server for replicas to catch up. Maybe introduce another global (or per host group?) setting to configure that?

Thoughts? @renecannao","Passing min_gtid annotation on a query (#2469) without backends being up to date will make ProxySQL wait for connect_timeout_server, and then reply with Max connect timeout reached while reaching hostgroup 1.
connect_timeout_server is a global setting, and if in your setup it's a multiple seconds value, you may not wait to make the client wait that long. We'd rather return ""no replicas caught up"" as early as possible.
I'm looking to make the case of ""waiting for GTID"" treated differently from the case of ""waiting for hostgroup to become available"" (for instance because it's tripped on max_connections).
There's couple things I want to do:

Reply with a custom error message (""Gave up waiting for GTID..."")
Don't wait for as long as connect_timeout_server for replicas to catch up. Maybe introduce another global (or per host group?) setting to configure that?

Thoughts? @renecannao",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2535,2020-02-18T12:14:28Z,,2020-02-20T12:44:54Z,OPEN,False,5,1,1,https://github.com/kirs,Tune logic for waiting on read replicas,1,[],https://github.com/sysown/proxysql/pull/2535,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2535#issuecomment-587432756,"Passing min_gtid annotation on a query (#2469) without backends being up to date will make ProxySQL wait for connect_timeout_server, and then reply with Max connect timeout reached while reaching hostgroup 1.
connect_timeout_server is a global setting, and if in your setup it's a multiple seconds value, you may not wait to make the client wait that long. We'd rather return ""no replicas caught up"" as early as possible.
I'm looking to make the case of ""waiting for GTID"" treated differently from the case of ""waiting for hostgroup to become available"" (for instance because it's tripped on max_connections).
There's couple things I want to do:

Reply with a custom error message (""Gave up waiting for GTID..."")
Don't wait for as long as connect_timeout_server for replicas to catch up. Maybe introduce another global (or per host group?) setting to configure that?

Thoughts? @renecannao",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2535,2020-02-18T12:14:28Z,,2020-02-20T12:44:54Z,OPEN,False,5,1,1,https://github.com/kirs,Tune logic for waiting on read replicas,1,[],https://github.com/sysown/proxysql/pull/2535,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2535#issuecomment-588602740,"Passing min_gtid annotation on a query (#2469) without backends being up to date will make ProxySQL wait for connect_timeout_server, and then reply with Max connect timeout reached while reaching hostgroup 1.
connect_timeout_server is a global setting, and if in your setup it's a multiple seconds value, you may not wait to make the client wait that long. We'd rather return ""no replicas caught up"" as early as possible.
I'm looking to make the case of ""waiting for GTID"" treated differently from the case of ""waiting for hostgroup to become available"" (for instance because it's tripped on max_connections).
There's couple things I want to do:

Reply with a custom error message (""Gave up waiting for GTID..."")
Don't wait for as long as connect_timeout_server for replicas to catch up. Maybe introduce another global (or per host group?) setting to configure that?

Thoughts? @renecannao","Hi @kirs .
This seems a design problem.
The writer should be present in the reader hostgroup too, yet with a small weight.
If none of the replica are in sync, the request should go to the writer instead of giving up.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2535,2020-02-18T12:14:28Z,,2020-02-20T12:44:54Z,OPEN,False,5,1,1,https://github.com/kirs,Tune logic for waiting on read replicas,1,[],https://github.com/sysown/proxysql/pull/2535,https://github.com/kirs,4,https://github.com/sysown/proxysql/pull/2535#issuecomment-589003302,"Passing min_gtid annotation on a query (#2469) without backends being up to date will make ProxySQL wait for connect_timeout_server, and then reply with Max connect timeout reached while reaching hostgroup 1.
connect_timeout_server is a global setting, and if in your setup it's a multiple seconds value, you may not wait to make the client wait that long. We'd rather return ""no replicas caught up"" as early as possible.
I'm looking to make the case of ""waiting for GTID"" treated differently from the case of ""waiting for hostgroup to become available"" (for instance because it's tripped on max_connections).
There's couple things I want to do:

Reply with a custom error message (""Gave up waiting for GTID..."")
Don't wait for as long as connect_timeout_server for replicas to catch up. Maybe introduce another global (or per host group?) setting to configure that?

Thoughts? @renecannao","The writer should be present in the reader hostgroup too, yet with a small weight.
If none of the replica are in sync, the request should go to the writer instead of giving up.

Right, that's what the current design of ProxySQL r/w split assumes.
From my perspective, the behavior you want depends on the workload. If it's online workload (a web request), then you'd rather send it to writer than fail it. If it's a batch processing workload (a background job) that can be processed now or later, then you don't necessarily want to overload writer with something that can get processed later.
In the current scheme, you can implement a r/w split that would do best effort routing to replicas if they are caught up - and if not, send queries to the writer. However, that's a very easy way to crash the writer with even more queries when things are unhealthy.
Maybe the answer is that for batch processing, it shouldn't even hit ProxySQL to check for GTID in the first place, and should somehow else discover that replicas are delayed. But since ProxySQL already does GTID tracking and discovery, I was very eager to [mis]use it to get that data into that app.
Curious to hear what you think!",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2538,2020-02-19T07:23:30Z,2020-02-20T04:21:31Z,2020-06-15T19:00:18Z,MERGED,True,1,2,1,https://github.com/alpes214,Fix LOAD MYSQL SERVERS FROM CONFIG,1,[],https://github.com/sysown/proxysql/pull/2538,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2538,Fix for #2536,Fix for #2536,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2539,2020-02-19T07:40:49Z,2020-02-20T04:21:49Z,2020-06-15T19:00:20Z,MERGED,True,1,1,1,https://github.com/alpes214,Fix galera query in maint_mode,1,[],https://github.com/sysown/proxysql/pull/2539,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2539,"Fix #2537
Tested like this:
MySQL [(none)]> SELECT 1, SELECT 'DISABLED' pxc_maint_mode;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'SELECT 'DISABLED' pxc_maint_mode' at line 1
MySQL [(none)]> SELECT 1, (SELECT 'DISABLED') pxc_maint_mode;
+---+----------------+
| 1 | pxc_maint_mode |
+---+----------------+
| 1 | DISABLED       |
+---+----------------+
1 row in set (0.00 sec)","Fix #2537
Tested like this:
MySQL [(none)]> SELECT 1, SELECT 'DISABLED' pxc_maint_mode;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'SELECT 'DISABLED' pxc_maint_mode' at line 1
MySQL [(none)]> SELECT 1, (SELECT 'DISABLED') pxc_maint_mode;
+---+----------------+
| 1 | pxc_maint_mode |
+---+----------------+
| 1 | DISABLED       |
+---+----------------+
1 row in set (0.00 sec)",True,"{'THUMBS_UP': ['https://github.com/sapisuper', 'https://github.com/gondaz']}"
sysown/proxysql,https://github.com/sysown/proxysql,2542,2020-02-20T04:28:13Z,2020-02-20T04:28:21Z,2020-06-15T19:00:17Z,MERGED,True,13,0,2,https://github.com/renecannao,Better handling of transactions in SQLite3,1,[],https://github.com/sysown/proxysql/pull/2542,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2542,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2545,2020-02-20T08:07:57Z,2020-02-20T08:44:28Z,2020-06-15T19:00:22Z,MERGED,True,4,181,2,https://github.com/alpes214,use DIGEST_STATS_FAST_1 always,1,[],https://github.com/sysown/proxysql/pull/2545,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2545,"Description:

Remove DIGEST_STATS_FAST_1 and use fast stats always.
Cleanup warnings in Query Processor

Testing:

start server and execute several queries
check if stats is generated.

MySQL [(none)]> select * from stats_mysql_query_digest;
+-----------+--------------------+----------+----------------+--------------------+--------------------------+------------+------------+------------+----------+----------+----------+-------------------+---------------+
| hostgroup | schemaname         | username | client_address | digest             | digest_text              | count_star | first_seen | last_seen  | sum_time | min_time | max_time | sum_rows_affected | sum_rows_sent |
+-----------+--------------------+----------+----------------+--------------------+--------------------------+------------+------------+------------+----------+----------+----------+-------------------+---------------+
| 0         | information_schema | root     |                | 0x40B75DE8A4AD05EE | select * from mysql.user | 1          | 1582186033 | 1582186033 | 749      | 749      | 749      | 0                 | 11            |
| 0         | information_schema | root     |                | 0xAE77E0F7B80AFC0B | select @@version         | 1          | 1582186024 | 1582186024 | 347      | 347      | 347      | 0                 | 1             |
| 0         | information_schema | root     |                | 0x99531AEFF718C501 | show tables              | 1          | 1582186022 | 1582186022 | 3941     | 3941     | 3941     | 0                 | 67            |
+-----------+--------------------+----------+----------------+--------------------+--------------------------+------------+------------+------------+----------+----------+----------+-------------------+---------------+
3 rows in set (0.00 sec)","Description:

Remove DIGEST_STATS_FAST_1 and use fast stats always.
Cleanup warnings in Query Processor

Testing:

start server and execute several queries
check if stats is generated.

MySQL [(none)]> select * from stats_mysql_query_digest;
+-----------+--------------------+----------+----------------+--------------------+--------------------------+------------+------------+------------+----------+----------+----------+-------------------+---------------+
| hostgroup | schemaname         | username | client_address | digest             | digest_text              | count_star | first_seen | last_seen  | sum_time | min_time | max_time | sum_rows_affected | sum_rows_sent |
+-----------+--------------------+----------+----------------+--------------------+--------------------------+------------+------------+------------+----------+----------+----------+-------------------+---------------+
| 0         | information_schema | root     |                | 0x40B75DE8A4AD05EE | select * from mysql.user | 1          | 1582186033 | 1582186033 | 749      | 749      | 749      | 0                 | 11            |
| 0         | information_schema | root     |                | 0xAE77E0F7B80AFC0B | select @@version         | 1          | 1582186024 | 1582186024 | 347      | 347      | 347      | 0                 | 1             |
| 0         | information_schema | root     |                | 0x99531AEFF718C501 | show tables              | 1          | 1582186022 | 1582186022 | 3941     | 3941     | 3941     | 0                 | 67            |
+-----------+--------------------+----------+----------------+--------------------+--------------------------+------------+------------+------------+----------+----------+----------+-------------------+---------------+
3 rows in set (0.00 sec)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2545,2020-02-20T08:07:57Z,2020-02-20T08:44:28Z,2020-06-15T19:00:22Z,MERGED,True,4,181,2,https://github.com/alpes214,use DIGEST_STATS_FAST_1 always,1,[],https://github.com/sysown/proxysql/pull/2545,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2545#issuecomment-588777706,"Description:

Remove DIGEST_STATS_FAST_1 and use fast stats always.
Cleanup warnings in Query Processor

Testing:

start server and execute several queries
check if stats is generated.

MySQL [(none)]> select * from stats_mysql_query_digest;
+-----------+--------------------+----------+----------------+--------------------+--------------------------+------------+------------+------------+----------+----------+----------+-------------------+---------------+
| hostgroup | schemaname         | username | client_address | digest             | digest_text              | count_star | first_seen | last_seen  | sum_time | min_time | max_time | sum_rows_affected | sum_rows_sent |
+-----------+--------------------+----------+----------------+--------------------+--------------------------+------------+------------+------------+----------+----------+----------+-------------------+---------------+
| 0         | information_schema | root     |                | 0x40B75DE8A4AD05EE | select * from mysql.user | 1          | 1582186033 | 1582186033 | 749      | 749      | 749      | 0                 | 11            |
| 0         | information_schema | root     |                | 0xAE77E0F7B80AFC0B | select @@version         | 1          | 1582186024 | 1582186024 | 347      | 347      | 347      | 0                 | 1             |
| 0         | information_schema | root     |                | 0x99531AEFF718C501 | show tables              | 1          | 1582186022 | 1582186022 | 3941     | 3941     | 3941     | 0                 | 67            |
+-----------+--------------------+----------+----------------+--------------------+--------------------------+------------+------------+------------+----------+----------+----------+-------------------+---------------+
3 rows in set (0.00 sec)","@val214 : the real test is using commands PROXYSQLTEST [1..5] , that is part of the automated testing",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2549,2020-02-21T05:48:12Z,2020-02-21T23:39:35Z,2020-06-15T19:00:13Z,MERGED,True,58,118,3,https://github.com/renecannao,[WIP] V2.0.10 2533,5,[],https://github.com/sysown/proxysql/pull/2549,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2549,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2553,2020-02-22T12:34:32Z,2020-02-22T22:30:18Z,2020-06-15T19:00:11Z,MERGED,True,1,1,1,https://github.com/renecannao,Crash on mirror traffic #2552,1,[],https://github.com/sysown/proxysql/pull/2553,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2553,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2554,2020-02-22T14:45:04Z,2020-02-24T11:57:12Z,2020-06-15T19:00:09Z,MERGED,True,1,1,1,https://github.com/alpes214,fix firewall whitelist rules,1,[],https://github.com/sysown/proxysql/pull/2554,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2554,"Description:
Fixing issue #2534
Testing:
MySQL [(none)]> select * from runtime_mysql_firewall_whitelist_users;
+--------+----------+----------------+------------+---------+
| active | username | client_address | mode       | comment |
+--------+----------+----------------+------------+---------+
| 1      | root     |                | PROTECTING | comm    |
+--------+----------+----------------+------------+---------+
1 row in set (0.00 sec)

MySQL [(none)]> select * from runtime_mysql_firewall_whitelist_rules;
+--------+----------+----------------+--------------------+--------+--------------------+---------+
| active | username | client_address | schemaname         | flagIN | digest             | comment |
+--------+----------+----------------+--------------------+--------+--------------------+---------+
| 1      | root     |                | information_schema | 0      | 0x37B5362567EE37EF |         |
+--------+----------+----------------+--------------------+--------+--------------------+---------+
1 row in set (0.00 sec)

MySQL [(none)]> Select 2;
+---+
| 2 |
+---+
| 2 |
+---+
1 row in set (0.00 sec)","Description:
Fixing issue #2534
Testing:
MySQL [(none)]> select * from runtime_mysql_firewall_whitelist_users;
+--------+----------+----------------+------------+---------+
| active | username | client_address | mode       | comment |
+--------+----------+----------------+------------+---------+
| 1      | root     |                | PROTECTING | comm    |
+--------+----------+----------------+------------+---------+
1 row in set (0.00 sec)

MySQL [(none)]> select * from runtime_mysql_firewall_whitelist_rules;
+--------+----------+----------------+--------------------+--------+--------------------+---------+
| active | username | client_address | schemaname         | flagIN | digest             | comment |
+--------+----------+----------------+--------------------+--------+--------------------+---------+
| 1      | root     |                | information_schema | 0      | 0x37B5362567EE37EF |         |
+--------+----------+----------------+--------------------+--------+--------------------+---------+
1 row in set (0.00 sec)

MySQL [(none)]> Select 2;
+---+
| 2 |
+---+
| 2 |
+---+
1 row in set (0.00 sec)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2556,2020-02-24T13:21:44Z,2020-02-24T13:47:49Z,2020-06-15T19:00:07Z,MERGED,True,112,3,3,https://github.com/renecannao,"Extending Statistics, only for new Web UI",1,[],https://github.com/sysown/proxysql/pull/2556,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2556,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2557,2020-02-25T09:25:19Z,2020-02-25T10:17:47Z,2020-06-15T19:00:05Z,MERGED,True,152,3,2,https://github.com/alpes214,firewall test,1,[],https://github.com/sysown/proxysql/pull/2557,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2557,"Description:
test automation for basic firewall functionality #2534","Description:
test automation for basic firewall functionality #2534",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2559,2020-02-25T10:17:23Z,2020-02-25T10:27:46Z,2020-02-25T10:27:46Z,MERGED,True,23,0,2,https://github.com/renecannao,Support for CentOS 6.7 in 2.0.10,1,[],https://github.com/sysown/proxysql/pull/2559,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2559,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2562,2020-02-25T19:50:13Z,2020-02-26T05:41:42Z,2020-06-15T19:00:00Z,MERGED,True,5,5,2,https://github.com/alpes214,report mysql thread_id in case of error during query,1,[],https://github.com/sysown/proxysql/pull/2562,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2562,"Description:
this is change for issue #2529
Report back end connection thread_id on query error
Testing:
Tested one case - querying non existing table
2020-02-25 19:40:08 MySQL_Session.cpp:4333:handler(): [WARNING] Error during query on (0,127.0.0.1,3306,19): 1109, Unknown table 'T1' in information_schema","Description:
this is change for issue #2529
Report back end connection thread_id on query error
Testing:
Tested one case - querying non existing table
2020-02-25 19:40:08 MySQL_Session.cpp:4333:handler(): [WARNING] Error during query on (0,127.0.0.1,3306,19): 1109, Unknown table 'T1' in information_schema",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2563,2020-02-26T08:46:10Z,,2020-07-13T17:53:50Z,OPEN,False,23,12,6,https://github.com/alpes214,add mysql thread_id to events log,1,[],https://github.com/sysown/proxysql/pull/2563,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2563,"Description:
Add mysql thread_id to events log. This PR is related to #2526 and #2529
Testing:

Query table that doesn't exist

MySQL [test]> select * from t2;
ERROR 1146 (42S02): Table 'test.t2' doesn't exist

2020-02-26 07:59:25 MySQL_Session.cpp:4333:handler(): [WARNING] Error during query on (0,127.0.0.1,3306,57): 1146, Table 'test.t2' doesn't exist


Execute query that timed out

MySQL [test]> select sleep(100);
+------------+
| sleep(100) |
+------------+
|          1 |
+------------+
1 row in set (1.00 sec)

2020-02-26 07:51:29 MySQL_Session.cpp:128:kill_query_thread(): [WARNING] KILL QUERY 57 on 127.0.0.1:3306

val@s89830:~/workspace/sysown_proxysql/src$ ../tools/eventslog_reader_sample ./events.log.00000013
ProxySQL LOG COM_QUERY: thread_id=""2"" mysql_thread_id=""57"" username=""root"" schemaname=""test"" client=""127.0.0.1:35394"" HID=0 server=""127.0.0.1:3306"" starttime=""2020-02-26 07:51:28.112630"" endtime=""2020-02-26 07:51:29.115235"" duration=1002605us rows_affected=0 rows_sent=1 digest=""0xCA0825C1C5C3C490""
select sleep(100)
ProxySQL LOG COM_QUERY: thread_id=""2"" mysql_thread_id=""57"" username=""root"" schemaname=""test"" client=""127.0.0.1:35394"" HID=0 server=""127.0.0.1:3306"" starttime=""2020-02-26 07:59:25.946665"" endtime=""2020-02-26 07:59:25.947311"" duration=646us rows_affected=0 rows_sent=0 digest=""0x1CA8F88B407B7239""
select * from t2","Description:
Add mysql thread_id to events log. This PR is related to #2526 and #2529
Testing:

Query table that doesn't exist

MySQL [test]> select * from t2;
ERROR 1146 (42S02): Table 'test.t2' doesn't exist

2020-02-26 07:59:25 MySQL_Session.cpp:4333:handler(): [WARNING] Error during query on (0,127.0.0.1,3306,57): 1146, Table 'test.t2' doesn't exist


Execute query that timed out

MySQL [test]> select sleep(100);
+------------+
| sleep(100) |
+------------+
|          1 |
+------------+
1 row in set (1.00 sec)

2020-02-26 07:51:29 MySQL_Session.cpp:128:kill_query_thread(): [WARNING] KILL QUERY 57 on 127.0.0.1:3306

val@s89830:~/workspace/sysown_proxysql/src$ ../tools/eventslog_reader_sample ./events.log.00000013
ProxySQL LOG COM_QUERY: thread_id=""2"" mysql_thread_id=""57"" username=""root"" schemaname=""test"" client=""127.0.0.1:35394"" HID=0 server=""127.0.0.1:3306"" starttime=""2020-02-26 07:51:28.112630"" endtime=""2020-02-26 07:51:29.115235"" duration=1002605us rows_affected=0 rows_sent=1 digest=""0xCA0825C1C5C3C490""
select sleep(100)
ProxySQL LOG COM_QUERY: thread_id=""2"" mysql_thread_id=""57"" username=""root"" schemaname=""test"" client=""127.0.0.1:35394"" HID=0 server=""127.0.0.1:3306"" starttime=""2020-02-26 07:59:25.946665"" endtime=""2020-02-26 07:59:25.947311"" duration=646us rows_affected=0 rows_sent=0 digest=""0x1CA8F88B407B7239""
select * from t2",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2563,2020-02-26T08:46:10Z,,2020-07-13T17:53:50Z,OPEN,False,23,12,6,https://github.com/alpes214,add mysql thread_id to events log,1,[],https://github.com/sysown/proxysql/pull/2563,https://github.com/feiazifeiazi,2,https://github.com/sysown/proxysql/pull/2563#issuecomment-598001537,"Description:
Add mysql thread_id to events log. This PR is related to #2526 and #2529
Testing:

Query table that doesn't exist

MySQL [test]> select * from t2;
ERROR 1146 (42S02): Table 'test.t2' doesn't exist

2020-02-26 07:59:25 MySQL_Session.cpp:4333:handler(): [WARNING] Error during query on (0,127.0.0.1,3306,57): 1146, Table 'test.t2' doesn't exist


Execute query that timed out

MySQL [test]> select sleep(100);
+------------+
| sleep(100) |
+------------+
|          1 |
+------------+
1 row in set (1.00 sec)

2020-02-26 07:51:29 MySQL_Session.cpp:128:kill_query_thread(): [WARNING] KILL QUERY 57 on 127.0.0.1:3306

val@s89830:~/workspace/sysown_proxysql/src$ ../tools/eventslog_reader_sample ./events.log.00000013
ProxySQL LOG COM_QUERY: thread_id=""2"" mysql_thread_id=""57"" username=""root"" schemaname=""test"" client=""127.0.0.1:35394"" HID=0 server=""127.0.0.1:3306"" starttime=""2020-02-26 07:51:28.112630"" endtime=""2020-02-26 07:51:29.115235"" duration=1002605us rows_affected=0 rows_sent=1 digest=""0xCA0825C1C5C3C490""
select sleep(100)
ProxySQL LOG COM_QUERY: thread_id=""2"" mysql_thread_id=""57"" username=""root"" schemaname=""test"" client=""127.0.0.1:35394"" HID=0 server=""127.0.0.1:3306"" starttime=""2020-02-26 07:59:25.946665"" endtime=""2020-02-26 07:59:25.947311"" duration=646us rows_affected=0 rows_sent=0 digest=""0x1CA8F88B407B7239""
select * from t2",Great!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2563,2020-02-26T08:46:10Z,,2020-07-13T17:53:50Z,OPEN,False,23,12,6,https://github.com/alpes214,add mysql thread_id to events log,1,[],https://github.com/sysown/proxysql/pull/2563,https://github.com/alpes214,3,https://github.com/sysown/proxysql/pull/2563#issuecomment-621383156,"Description:
Add mysql thread_id to events log. This PR is related to #2526 and #2529
Testing:

Query table that doesn't exist

MySQL [test]> select * from t2;
ERROR 1146 (42S02): Table 'test.t2' doesn't exist

2020-02-26 07:59:25 MySQL_Session.cpp:4333:handler(): [WARNING] Error during query on (0,127.0.0.1,3306,57): 1146, Table 'test.t2' doesn't exist


Execute query that timed out

MySQL [test]> select sleep(100);
+------------+
| sleep(100) |
+------------+
|          1 |
+------------+
1 row in set (1.00 sec)

2020-02-26 07:51:29 MySQL_Session.cpp:128:kill_query_thread(): [WARNING] KILL QUERY 57 on 127.0.0.1:3306

val@s89830:~/workspace/sysown_proxysql/src$ ../tools/eventslog_reader_sample ./events.log.00000013
ProxySQL LOG COM_QUERY: thread_id=""2"" mysql_thread_id=""57"" username=""root"" schemaname=""test"" client=""127.0.0.1:35394"" HID=0 server=""127.0.0.1:3306"" starttime=""2020-02-26 07:51:28.112630"" endtime=""2020-02-26 07:51:29.115235"" duration=1002605us rows_affected=0 rows_sent=1 digest=""0xCA0825C1C5C3C490""
select sleep(100)
ProxySQL LOG COM_QUERY: thread_id=""2"" mysql_thread_id=""57"" username=""root"" schemaname=""test"" client=""127.0.0.1:35394"" HID=0 server=""127.0.0.1:3306"" starttime=""2020-02-26 07:59:25.946665"" endtime=""2020-02-26 07:59:25.947311"" duration=646us rows_affected=0 rows_sent=0 digest=""0x1CA8F88B407B7239""
select * from t2",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2563,2020-02-26T08:46:10Z,,2020-07-13T17:53:50Z,OPEN,False,23,12,6,https://github.com/alpes214,add mysql thread_id to events log,1,[],https://github.com/sysown/proxysql/pull/2563,https://github.com/pondix,4,https://github.com/sysown/proxysql/pull/2563#issuecomment-657702764,"Description:
Add mysql thread_id to events log. This PR is related to #2526 and #2529
Testing:

Query table that doesn't exist

MySQL [test]> select * from t2;
ERROR 1146 (42S02): Table 'test.t2' doesn't exist

2020-02-26 07:59:25 MySQL_Session.cpp:4333:handler(): [WARNING] Error during query on (0,127.0.0.1,3306,57): 1146, Table 'test.t2' doesn't exist


Execute query that timed out

MySQL [test]> select sleep(100);
+------------+
| sleep(100) |
+------------+
|          1 |
+------------+
1 row in set (1.00 sec)

2020-02-26 07:51:29 MySQL_Session.cpp:128:kill_query_thread(): [WARNING] KILL QUERY 57 on 127.0.0.1:3306

val@s89830:~/workspace/sysown_proxysql/src$ ../tools/eventslog_reader_sample ./events.log.00000013
ProxySQL LOG COM_QUERY: thread_id=""2"" mysql_thread_id=""57"" username=""root"" schemaname=""test"" client=""127.0.0.1:35394"" HID=0 server=""127.0.0.1:3306"" starttime=""2020-02-26 07:51:28.112630"" endtime=""2020-02-26 07:51:29.115235"" duration=1002605us rows_affected=0 rows_sent=1 digest=""0xCA0825C1C5C3C490""
select sleep(100)
ProxySQL LOG COM_QUERY: thread_id=""2"" mysql_thread_id=""57"" username=""root"" schemaname=""test"" client=""127.0.0.1:35394"" HID=0 server=""127.0.0.1:3306"" starttime=""2020-02-26 07:59:25.946665"" endtime=""2020-02-26 07:59:25.947311"" duration=646us rows_affected=0 rows_sent=0 digest=""0x1CA8F88B407B7239""
select * from t2",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2565,2020-02-26T10:07:44Z,,2022-03-10T21:50:26Z,OPEN,False,156,57,4,https://github.com/renecannao,Improvement on collecting status metrics,2,[],https://github.com/sysown/proxysql/pull/2565,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2565,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2565,2020-02-26T10:07:44Z,,2022-03-10T21:50:26Z,OPEN,False,156,57,4,https://github.com/renecannao,Improvement on collecting status metrics,2,[],https://github.com/sysown/proxysql/pull/2565,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2565#issuecomment-1064537145,,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2567,2020-02-27T08:14:21Z,2020-02-28T22:44:28Z,2020-06-15T19:01:18Z,MERGED,True,3,1,1,https://github.com/alpes214,adding MariaDB ConnectorJ test case to set parser tests,1,[],https://github.com/sysown/proxysql/pull/2567,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2567,"Description:
Added a test case to set parser tests
related to issue #2523","Description:
Added a test case to set parser tests
related to issue #2523",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2571,2020-02-27T22:42:16Z,2020-02-28T22:43:29Z,2020-09-17T09:59:40Z,MERGED,True,1,4,1,https://github.com/pondix,Revert to auto configuration of build job num,1,[],https://github.com/sysown/proxysql/pull/2571,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/2571,"Removing patch to force 8x jobs during build, this was needed to build the previous version of the package.","Removing patch to force 8x jobs during build, this was needed to build the previous version of the package.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2573,2020-02-28T12:26:23Z,2020-08-17T15:08:29Z,2020-08-17T15:08:29Z,MERGED,True,4,4,2,https://github.com/EvgeniyPatlan,Improve centos6 detection,1,[],https://github.com/sysown/proxysql/pull/2573,https://github.com/EvgeniyPatlan,1,https://github.com/sysown/proxysql/pull/2573,"Centos6.7 is quite old version and the build can be done on 6.8 6.9 6.10 etc.
Previous code supported only centos6.7 build which is not very useful.
With this change system will detect if it centos6 only.","Centos6.7 is quite old version and the build can be done on 6.8 6.9 6.10 etc.
Previous code supported only centos6.7 build which is not very useful.
With this change system will detect if it centos6 only.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2573,2020-02-28T12:26:23Z,2020-08-17T15:08:29Z,2020-08-17T15:08:29Z,MERGED,True,4,4,2,https://github.com/EvgeniyPatlan,Improve centos6 detection,1,[],https://github.com/sysown/proxysql/pull/2573,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2573#issuecomment-592491657,"Centos6.7 is quite old version and the build can be done on 6.8 6.9 6.10 etc.
Previous code supported only centos6.7 build which is not very useful.
With this change system will detect if it centos6 only.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2573,2020-02-28T12:26:23Z,2020-08-17T15:08:29Z,2020-08-17T15:08:29Z,MERGED,True,4,4,2,https://github.com/EvgeniyPatlan,Improve centos6 detection,1,[],https://github.com/sysown/proxysql/pull/2573,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2573#issuecomment-592763443,"Centos6.7 is quite old version and the build can be done on 6.8 6.9 6.10 etc.
Previous code supported only centos6.7 build which is not very useful.
With this change system will detect if it centos6 only.",add to whitelist,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2573,2020-02-28T12:26:23Z,2020-08-17T15:08:29Z,2020-08-17T15:08:29Z,MERGED,True,4,4,2,https://github.com/EvgeniyPatlan,Improve centos6 detection,1,[],https://github.com/sysown/proxysql/pull/2573,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/2573#issuecomment-674914412,"Centos6.7 is quite old version and the build can be done on 6.8 6.9 6.10 etc.
Previous code supported only centos6.7 build which is not very useful.
With this change system will detect if it centos6 only.",test this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2582,2020-03-03T06:39:19Z,2020-03-26T18:59:54Z,2020-04-06T14:32:04Z,MERGED,True,1853,1930,20,https://github.com/alpes214,V2.0.11 var array,4,[],https://github.com/sysown/proxysql/pull/2582,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2582,"Description:
mysql variables handling (generic approach)
Testing:
The list of test cases located in csv file:
./test/tap/tests/set_testing-t.csv

Tests to be executed
cd test/tap/
make -j 8
export TAP_HOST=127.0.0.1
export TAP_PORT=6033
export TAP_USERNAME=root
export TAP_PASSWORD=a
./tests/set_testing-t
./tests/charset_unsigned_int-t
./tests/test_set_character_results-t
./set_character_set-t","Description:
mysql variables handling (generic approach)
Testing:
The list of test cases located in csv file:
./test/tap/tests/set_testing-t.csv

Tests to be executed
cd test/tap/
make -j 8
export TAP_HOST=127.0.0.1
export TAP_PORT=6033
export TAP_USERNAME=root
export TAP_PASSWORD=a
./tests/set_testing-t
./tests/charset_unsigned_int-t
./tests/test_set_character_results-t
./set_character_set-t",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2582,2020-03-03T06:39:19Z,2020-03-26T18:59:54Z,2020-04-06T14:32:04Z,MERGED,True,1853,1930,20,https://github.com/alpes214,V2.0.11 var array,4,[],https://github.com/sysown/proxysql/pull/2582,https://github.com/alpes214,2,https://github.com/sysown/proxysql/pull/2582#issuecomment-603842382,"Description:
mysql variables handling (generic approach)
Testing:
The list of test cases located in csv file:
./test/tap/tests/set_testing-t.csv

Tests to be executed
cd test/tap/
make -j 8
export TAP_HOST=127.0.0.1
export TAP_PORT=6033
export TAP_USERNAME=root
export TAP_PASSWORD=a
./tests/set_testing-t
./tests/charset_unsigned_int-t
./tests/test_set_character_results-t
./set_character_set-t",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2582,2020-03-03T06:39:19Z,2020-03-26T18:59:54Z,2020-04-06T14:32:04Z,MERGED,True,1853,1930,20,https://github.com/alpes214,V2.0.11 var array,4,[],https://github.com/sysown/proxysql/pull/2582,https://github.com/alpes214,3,https://github.com/sysown/proxysql/pull/2582#issuecomment-604599036,"Description:
mysql variables handling (generic approach)
Testing:
The list of test cases located in csv file:
./test/tap/tests/set_testing-t.csv

Tests to be executed
cd test/tap/
make -j 8
export TAP_HOST=127.0.0.1
export TAP_PORT=6033
export TAP_USERNAME=root
export TAP_PASSWORD=a
./tests/set_testing-t
./tests/charset_unsigned_int-t
./tests/test_set_character_results-t
./set_character_set-t",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2589,2020-03-05T10:02:06Z,2020-03-10T01:36:38Z,2020-06-15T19:01:16Z,MERGED,True,76,7,10,https://github.com/renecannao,V2.0.11 ssl,10,[],https://github.com/sysown/proxysql/pull/2589,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2589,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2601,2020-03-12T19:15:03Z,2020-03-13T08:02:06Z,2020-06-15T19:01:14Z,MERGED,True,13,9,1,https://github.com/alpes214,Immediately kill offline backends for fast forward case,1,[],https://github.com/sysown/proxysql/pull/2601,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2601,"Description:
Fixing the case when offline back end has to be killed. Related to the issue #2590
Testing:
Tested with testcase described in the ticket. V2.0.11 behave similar to v1.4.16","Description:
Fixing the case when offline back end has to be killed. Related to the issue #2590
Testing:
Tested with testcase described in the ticket. V2.0.11 behave similar to v1.4.16",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2605,2020-03-17T15:15:32Z,2020-03-31T15:34:18Z,2020-04-01T08:10:38Z,MERGED,True,12,5,1,https://github.com/pravus,proposed fix: x509: certificate signed by unknown authority,2,[],https://github.com/sysown/proxysql/pull/2605,https://github.com/pravus,1,https://github.com/sysown/proxysql/pull/2605,added loading of intermediate certificate chain into SSL context so clients can verify the server certificate properly,added loading of intermediate certificate chain into SSL context so clients can verify the server certificate properly,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2605,2020-03-17T15:15:32Z,2020-03-31T15:34:18Z,2020-04-01T08:10:38Z,MERGED,True,12,5,1,https://github.com/pravus,proposed fix: x509: certificate signed by unknown authority,2,[],https://github.com/sysown/proxysql/pull/2605,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2605#issuecomment-600127821,added loading of intermediate certificate chain into SSL context so clients can verify the server certificate properly,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2605,2020-03-17T15:15:32Z,2020-03-31T15:34:18Z,2020-04-01T08:10:38Z,MERGED,True,12,5,1,https://github.com/pravus,proposed fix: x509: certificate signed by unknown authority,2,[],https://github.com/sysown/proxysql/pull/2605,https://github.com/JavierJF,3,https://github.com/sysown/proxysql/pull/2605#issuecomment-602072444,added loading of intermediate certificate chain into SSL context so clients can verify the server certificate properly,@pravus Hi! I have been reviewing the PR and I wanted to ask you which is your particular use case for needing to load the root CA certificate into the SSL context. This is an uncommon practice and it's many times contraindicated. Could you please elaborate why is this required for you? Thanks you!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2605,2020-03-17T15:15:32Z,2020-03-31T15:34:18Z,2020-04-01T08:10:38Z,MERGED,True,12,5,1,https://github.com/pravus,proposed fix: x509: certificate signed by unknown authority,2,[],https://github.com/sysown/proxysql/pull/2605,https://github.com/pravus,4,https://github.com/sysown/proxysql/pull/2605#issuecomment-602588294,added loading of intermediate certificate chain into SSL context so clients can verify the server certificate properly,"@JavierJF
Hi!  Our situation is that we are using a Let's Encrypt wildcard certificate that is signed by the X3 intermediary of the ISRG X1 root.  Based on my own personal testing I was not able to get clients to properly connect to a ProxySQL instance with TLS enabled and the standard set of CA certificates.  I was only able to get working connections after either altering the client's CA bundle, altering the client's CA/TLS settings directly, or using the patch I provided.
I am not a TLS expert but it has always been my understanding that while root certificates are installed on the system, intermediate certificates are generally distributed by services during connection negotiation.  The intent of this change was to enable this behavior by providing the SSL context with the certificate chain which includes certificates that are not in the system bundle.
To be a little more generic, what I need is the ability to build a Docker container with a Go program installed along with the standard certificate bundle and have TLS connections work without having to install extra certificates or modifying the source of the Go program.  The changes I have provided make this possible for me but if there is a better way to accomplish this then I am open to suggestions.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2605,2020-03-17T15:15:32Z,2020-03-31T15:34:18Z,2020-04-01T08:10:38Z,MERGED,True,12,5,1,https://github.com/pravus,proposed fix: x509: certificate signed by unknown authority,2,[],https://github.com/sysown/proxysql/pull/2605,https://github.com/JavierJF,5,https://github.com/sysown/proxysql/pull/2605#issuecomment-606687756,added loading of intermediate certificate chain into SSL context so clients can verify the server certificate properly,"@pravus Hi! So, after discussing the current behavior of certificates added to the certificate chain, we have decided that we are going to add the root certificate by default, this is because after further investigation we have found that mysql also adds the root certificate to the certificate chain, so, for honoring that behavior, we are going to do the same. This means that this PR matches this new desired approach for the SSL chain. I'm going to review and merge it. Thanks!",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2605,2020-03-17T15:15:32Z,2020-03-31T15:34:18Z,2020-04-01T08:10:38Z,MERGED,True,12,5,1,https://github.com/pravus,proposed fix: x509: certificate signed by unknown authority,2,[],https://github.com/sysown/proxysql/pull/2605,https://github.com/renecannao,6,https://github.com/sysown/proxysql/pull/2605#issuecomment-607100737,added loading of intermediate certificate chain into SSL context so clients can verify the server certificate properly,Thank you @pravus and @JavierJF,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2611,2020-03-24T07:00:08Z,2020-03-26T12:58:47Z,2020-03-26T12:58:47Z,MERGED,True,1949,1949,20,https://github.com/alpes214,V2.0.11 track session vars,8,[],https://github.com/sysown/proxysql/pull/2611,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2611,"Description:
Server Tracking of Proxysql/Client Session State Changes
This branch is based on v2.0.11-var-array and should be merged to it first","Description:
Server Tracking of Proxysql/Client Session State Changes
This branch is based on v2.0.11-var-array and should be merged to it first",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2611,2020-03-24T07:00:08Z,2020-03-26T12:58:47Z,2020-03-26T12:58:47Z,MERGED,True,1949,1949,20,https://github.com/alpes214,V2.0.11 track session vars,8,[],https://github.com/sysown/proxysql/pull/2611,https://github.com/alpes214,2,https://github.com/sysown/proxysql/pull/2611#issuecomment-603080727,"Description:
Server Tracking of Proxysql/Client Session State Changes
This branch is based on v2.0.11-var-array and should be merged to it first",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2612,2020-03-24T07:23:15Z,2020-03-24T07:27:29Z,2020-06-15T19:01:12Z,MERGED,True,34,6,2,https://github.com/renecannao,Support for LIMIT/OFFSET in SQLite3_result(),1,[],https://github.com/sysown/proxysql/pull/2612,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2612,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2617,2020-03-26T16:25:07Z,,2020-07-13T17:53:43Z,OPEN,False,2340,1795,22,https://github.com/alpes214,V2.0.11 track vars,32,[],https://github.com/sysown/proxysql/pull/2617,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2617,"Description:
use session_track_system_variables for tracking changes over stored procedures/charset","Description:
use session_track_system_variables for tracking changes over stored procedures/charset",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2617,2020-03-26T16:25:07Z,,2020-07-13T17:53:43Z,OPEN,False,2340,1795,22,https://github.com/alpes214,V2.0.11 track vars,32,[],https://github.com/sysown/proxysql/pull/2617,https://github.com/alpes214,2,https://github.com/sysown/proxysql/pull/2617#issuecomment-608238101,"Description:
use session_track_system_variables for tracking changes over stored procedures/charset",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2617,2020-03-26T16:25:07Z,,2020-07-13T17:53:43Z,OPEN,False,2340,1795,22,https://github.com/alpes214,V2.0.11 track vars,32,[],https://github.com/sysown/proxysql/pull/2617,https://github.com/JavierJF,3,https://github.com/sysown/proxysql/pull/2617#issuecomment-608341055,"Description:
use session_track_system_variables for tracking changes over stored procedures/charset",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2617,2020-03-26T16:25:07Z,,2020-07-13T17:53:43Z,OPEN,False,2340,1795,22,https://github.com/alpes214,V2.0.11 track vars,32,[],https://github.com/sysown/proxysql/pull/2617,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/2617#issuecomment-609068373,"Description:
use session_track_system_variables for tracking changes over stored procedures/charset","On mysql client:
mysql> set names utf8;
Query OK, 0 rows affected (0.00 sec)

mysql> select 1;
+---+
| 1 |
+---+
| 1 |
+---+
1 row in set (0.01 sec)

mysql> set names latin1;
Query OK, 0 rows affected (0.00 sec)

mysql> select 1;
+---+
| 1 |
+---+
| 1 |
+---+
1 row in set (0.00 sec)

On backend:
2020-04-04T18:04:48.860217Z	74239 Query	SET character_set_results=utf8
2020-04-04T18:04:48.867003Z	74239 Query	SET character_set_connection=utf8
2020-04-04T18:04:48.867509Z	74239 Query	SET character_set_client=utf8
2020-04-04T18:04:48.867945Z	74239 Query	SET COLLATION_CONNECTION='utf8_general_ci'
2020-04-04T18:04:48.868355Z	74239 Query	select 1
2020-04-04T18:05:15.072059Z	74239 Query	SET character_set_results=latin1
2020-04-04T18:05:15.078589Z	74239 Query	SET character_set_connection=latin1
2020-04-04T18:05:15.079129Z	74239 Query	SET character_set_client=latin1
2020-04-04T18:05:15.079922Z	74239 Query	SET COLLATION_CONNECTION='latin1_swedish_ci'
2020-04-04T18:05:15.080323Z	74239 Query	select 1

@val214 : this is still not ok.
If the client only executes SET NAMES , we shouldn't set 4 variables but run SET NAMES .",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2617,2020-03-26T16:25:07Z,,2020-07-13T17:53:43Z,OPEN,False,2340,1795,22,https://github.com/alpes214,V2.0.11 track vars,32,[],https://github.com/sysown/proxysql/pull/2617,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/2617#issuecomment-609069041,"Description:
use session_track_system_variables for tracking changes over stored procedures/charset","After a clean restart of proxysql:
$ for i in 1 2 ; do mysql -u sbtest -psbtest -h 127.0.0.1 -P6033 test -A -e ""BEGIN"" ; done
mysql: [Warning] Using a password on the command line interface can be insecure.
mysql: [Warning] Using a password on the command line interface can be insecure.

In general log:
2020-04-04T18:17:16.424660Z	74240 Connect	sbtest@localhost on test using TCP/IP
2020-04-04T18:17:16.425744Z	74240 Query	BEGIN
2020-04-04T18:17:16.426399Z	74240 Change user	sbtest@localhost on test using TCP/IP
2020-04-04T18:17:16.432702Z	74240 Query	SET character_set_results=utf8mb4
2020-04-04T18:17:16.432943Z	74240 Query	SET character_set_connection=utf8mb4
2020-04-04T18:17:16.433127Z	74240 Query	SET character_set_client=utf8mb4
2020-04-04T18:17:16.433235Z	74240 Query	SET COLLATION_CONNECTION='utf8mb4_0900_ai_ci'
2020-04-04T18:17:16.433296Z	74240 Query	BEGIN
2020-04-04T18:17:16.433639Z	74240 Change user	sbtest@localhost on test using TCP/IP

This doesn't seem right either. Why those SET statements?",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2617,2020-03-26T16:25:07Z,,2020-07-13T17:53:43Z,OPEN,False,2340,1795,22,https://github.com/alpes214,V2.0.11 track vars,32,[],https://github.com/sysown/proxysql/pull/2617,https://github.com/renecannao,6,https://github.com/sysown/proxysql/pull/2617#issuecomment-614960609,"Description:
use session_track_system_variables for tracking changes over stored procedures/charset",@val214 : can you please work on this again?,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2617,2020-03-26T16:25:07Z,,2020-07-13T17:53:43Z,OPEN,False,2340,1795,22,https://github.com/alpes214,V2.0.11 track vars,32,[],https://github.com/sysown/proxysql/pull/2617,https://github.com/pondix,7,https://github.com/sysown/proxysql/pull/2617#issuecomment-657702710,"Description:
use session_track_system_variables for tracking changes over stored procedures/charset",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2625,2020-03-30T19:02:38Z,2020-04-01T08:05:31Z,2020-06-15T19:01:53Z,MERGED,True,23,7,1,https://github.com/renecannao,Fix 2 memory leaks in libmariadbclient #2623,1,[],https://github.com/sysown/proxysql/pull/2625,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2625,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2627,2020-03-31T11:31:08Z,2020-04-01T15:41:11Z,2020-04-01T15:41:11Z,MERGED,True,7,3,1,https://github.com/JavierJF,Add X509V3 basic constraints required for CA certificate #2622,5,[],https://github.com/sysown/proxysql/pull/2627,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/2627,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2627,2020-03-31T11:31:08Z,2020-04-01T15:41:11Z,2020-04-01T15:41:11Z,MERGED,True,7,3,1,https://github.com/JavierJF,Add X509V3 basic constraints required for CA certificate #2622,5,[],https://github.com/sysown/proxysql/pull/2627,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2627#issuecomment-606571257,,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2627,2020-03-31T11:31:08Z,2020-04-01T15:41:11Z,2020-04-01T15:41:11Z,MERGED,True,7,3,1,https://github.com/JavierJF,Add X509V3 basic constraints required for CA certificate #2622,5,[],https://github.com/sysown/proxysql/pull/2627,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2627#issuecomment-607098171,,add to whitelist,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2627,2020-03-31T11:31:08Z,2020-04-01T15:41:11Z,2020-04-01T15:41:11Z,MERGED,True,7,3,1,https://github.com/JavierJF,Add X509V3 basic constraints required for CA certificate #2622,5,[],https://github.com/sysown/proxysql/pull/2627,https://github.com/alpes214,4,https://github.com/sysown/proxysql/pull/2627#issuecomment-607117804,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2629,2020-03-31T13:32:33Z,2020-04-01T08:09:18Z,2020-06-15T19:01:50Z,MERGED,True,7,2,1,https://github.com/renecannao,Do not close file descriptors on parent #2628,1,[],https://github.com/sysown/proxysql/pull/2629,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2629,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2633,2020-04-02T08:00:56Z,2020-04-03T11:17:30Z,2020-10-30T16:14:27Z,CLOSED,False,2,0,1,https://github.com/alpes214,V2.0.11 processlist,1,[],https://github.com/sysown/proxysql/pull/2633,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2633,"Description:
Fixes issue #2602
Testing:
Added trace into SQL3_Processlist and checked dirty reads for query length greater than 0.
Testing was done with variables automation test.","Description:
Fixes issue #2602
Testing:
Added trace into SQL3_Processlist and checked dirty reads for query length greater than 0.
Testing was done with variables automation test.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2633,2020-04-02T08:00:56Z,2020-04-03T11:17:30Z,2020-10-30T16:14:27Z,CLOSED,False,2,0,1,https://github.com/alpes214,V2.0.11 processlist,1,[],https://github.com/sysown/proxysql/pull/2633,https://github.com/alpes214,2,https://github.com/sysown/proxysql/pull/2633#issuecomment-607725778,"Description:
Fixes issue #2602
Testing:
Added trace into SQL3_Processlist and checked dirty reads for query length greater than 0.
Testing was done with variables automation test.",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2633,2020-04-02T08:00:56Z,2020-04-03T11:17:30Z,2020-10-30T16:14:27Z,CLOSED,False,2,0,1,https://github.com/alpes214,V2.0.11 processlist,1,[],https://github.com/sysown/proxysql/pull/2633,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2633#issuecomment-608377907,"Description:
Fixes issue #2602
Testing:
Added trace into SQL3_Processlist and checked dirty reads for query length greater than 0.
Testing was done with variables automation test.",Thank you @val214 !,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2635,2020-04-03T10:46:42Z,2020-04-03T11:16:22Z,2020-06-15T19:01:46Z,MERGED,True,142,270,5,https://github.com/renecannao,V2.0.11 fast route2,6,[],https://github.com/sysown/proxysql/pull/2635,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2635,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2636,2020-04-03T13:31:25Z,2020-04-27T17:44:03Z,2020-04-27T17:44:03Z,MERGED,True,1,0,1,https://github.com/pravus,Added signal handler installation when running in the foreground,1,[],https://github.com/sysown/proxysql/pull/2636,https://github.com/pravus,1,https://github.com/sysown/proxysql/pull/2636,When running in a Docker container with the foreground option I noticed that container restarts were taking too long.  After a little investigation it seems like the cause is due to the signal handlers not being installed in this mode.  After applying this patch I am able to send signals to the proxysql process inside a Docker container and have it respond as needed.,When running in a Docker container with the foreground option I noticed that container restarts were taking too long.  After a little investigation it seems like the cause is due to the signal handlers not being installed in this mode.  After applying this patch I am able to send signals to the proxysql process inside a Docker container and have it respond as needed.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2636,2020-04-03T13:31:25Z,2020-04-27T17:44:03Z,2020-04-27T17:44:03Z,MERGED,True,1,0,1,https://github.com/pravus,Added signal handler installation when running in the foreground,1,[],https://github.com/sysown/proxysql/pull/2636,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2636#issuecomment-608435350,When running in a Docker container with the foreground option I noticed that container restarts were taking too long.  After a little investigation it seems like the cause is due to the signal handlers not being installed in this mode.  After applying this patch I am able to send signals to the proxysql process inside a Docker container and have it respond as needed.,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2636,2020-04-03T13:31:25Z,2020-04-27T17:44:03Z,2020-04-27T17:44:03Z,MERGED,True,1,0,1,https://github.com/pravus,Added signal handler installation when running in the foreground,1,[],https://github.com/sysown/proxysql/pull/2636,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2636#issuecomment-620133055,When running in a Docker container with the foreground option I noticed that container restarts were taking too long.  After a little investigation it seems like the cause is due to the signal handlers not being installed in this mode.  After applying this patch I am able to send signals to the proxysql process inside a Docker container and have it respond as needed.,"Thank you for the PR.
I don't remember why years ago I decided to install the signal handler only when running in backgroud... maybe because I assumed it would run in foreground only during testing",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2637,2020-04-03T22:44:25Z,2020-04-07T09:38:36Z,2020-06-15T19:01:44Z,MERGED,True,30,1,4,https://github.com/renecannao,V2.0.11 warmup,2,[],https://github.com/sysown/proxysql/pull/2637,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2637,Port of PR #2496 to 2.0.11,Port of PR #2496 to 2.0.11,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2643,2020-04-05T22:01:08Z,2020-04-08T10:38:20Z,2020-06-15T19:01:42Z,MERGED,True,17,2,1,https://github.com/renecannao,Fix bug on gtid_port and unix socket domain #1923,1,[],https://github.com/sysown/proxysql/pull/2643,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2643,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2643,2020-04-05T22:01:08Z,2020-04-08T10:38:20Z,2020-06-15T19:01:42Z,MERGED,True,17,2,1,https://github.com/renecannao,Fix bug on gtid_port and unix socket domain #1923,1,[],https://github.com/sysown/proxysql/pull/2643,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2643#issuecomment-610284789,,test this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2643,2020-04-05T22:01:08Z,2020-04-08T10:38:20Z,2020-06-15T19:01:42Z,MERGED,True,17,2,1,https://github.com/renecannao,Fix bug on gtid_port and unix socket domain #1923,1,[],https://github.com/sysown/proxysql/pull/2643,https://github.com/JavierJF,3,https://github.com/sysown/proxysql/pull/2643#issuecomment-610573902,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2644,2020-04-06T05:46:41Z,2020-04-06T14:33:13Z,2020-10-30T16:14:22Z,CLOSED,False,1956,1879,20,https://github.com/alpes214,Full implementation of the var-array logic,1,[],https://github.com/sysown/proxysql/pull/2644,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2644,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2647,2020-04-06T09:26:18Z,2020-04-07T09:38:20Z,2020-06-15T19:01:35Z,MERGED,True,6,2,1,https://github.com/alpes214,fix multi statement,2,[],https://github.com/sysown/proxysql/pull/2647,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2647,"Description:
Fixes the issue #2631
Testing:
Tested with scripts related #2298 and #2631
single('SELECT @@report_host');
multi('SELECT 1; SELECT 2;');

$ php -f test_2631.php
Run using query: SELECT @@report_host
=> No errors

-----
Run using multi_query: SELECT 1; SELECT 2;
=> No errors
1
2
-----","Description:
Fixes the issue #2631
Testing:
Tested with scripts related #2298 and #2631
single('SELECT @@report_host');
multi('SELECT 1; SELECT 2;');

$ php -f test_2631.php
Run using query: SELECT @@report_host
=> No errors

-----
Run using multi_query: SELECT 1; SELECT 2;
=> No errors
1
2
-----",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2650,2020-04-06T14:54:48Z,2020-04-17T00:02:57Z,2020-06-15T19:01:04Z,MERGED,True,1997,1754,22,https://github.com/alpes214,V2.0.11 var,17,[],https://github.com/sysown/proxysql/pull/2650,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2650,"Description:
This PR tracks changes for variables array after v2.0.11 reverting","Description:
This PR tracks changes for variables array after v2.0.11 reverting",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2651,2020-04-07T09:38:02Z,2020-04-25T18:57:47Z,2020-10-30T16:14:13Z,MERGED,True,421,302,4,https://github.com/renecannao,V2.0.11 aux,6,[],https://github.com/sysown/proxysql/pull/2651,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2651,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2651,2020-04-07T09:38:02Z,2020-04-25T18:57:47Z,2020-10-30T16:14:13Z,MERGED,True,421,302,4,https://github.com/renecannao,V2.0.11 aux,6,[],https://github.com/sysown/proxysql/pull/2651,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/2651#issuecomment-610512229,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2651,2020-04-07T09:38:02Z,2020-04-25T18:57:47Z,2020-10-30T16:14:13Z,MERGED,True,421,302,4,https://github.com/renecannao,V2.0.11 aux,6,[],https://github.com/sysown/proxysql/pull/2651,https://github.com/JavierJF,3,https://github.com/sysown/proxysql/pull/2651#issuecomment-610573664,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2651,2020-04-07T09:38:02Z,2020-04-25T18:57:47Z,2020-10-30T16:14:13Z,MERGED,True,421,302,4,https://github.com/renecannao,V2.0.11 aux,6,[],https://github.com/sysown/proxysql/pull/2651,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/2651#issuecomment-617410345,,Retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2667,2020-04-13T15:30:10Z,2020-04-14T16:46:26Z,2020-04-14T16:46:27Z,CLOSED,False,50,8,3,https://github.com/alpes214,WIP galera-pxc-maint-mode,1,[],https://github.com/sysown/proxysql/pull/2667,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2667,"Description:
This is branch for fix issue #2656","Description:
This is branch for fix issue #2656",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2667,2020-04-13T15:30:10Z,2020-04-14T16:46:26Z,2020-04-14T16:46:27Z,CLOSED,False,50,8,3,https://github.com/alpes214,WIP galera-pxc-maint-mode,1,[],https://github.com/sysown/proxysql/pull/2667,https://github.com/Tusamarco,2,https://github.com/sysown/proxysql/pull/2667#issuecomment-613367821,"Description:
This is branch for fix issue #2656","@val214  there is a reason for  the hostname to be explicit and hardcoded  in MySQL_HostGroups_Manager.cpp line 4683?
				q=(char *)""UPDATE mysql_servers_incoming SET status=1 WHERE hostname='172.18.0.20' AND port=%d AND hostgroup_id=%d"";",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2667,2020-04-13T15:30:10Z,2020-04-14T16:46:26Z,2020-04-14T16:46:27Z,CLOSED,False,50,8,3,https://github.com/alpes214,WIP galera-pxc-maint-mode,1,[],https://github.com/sysown/proxysql/pull/2667,https://github.com/alpes214,3,https://github.com/sysown/proxysql/pull/2667#issuecomment-613528268,"Description:
This is branch for fix issue #2656","@val214 there is a reason for the hostname to be explicit and hardcoded in MySQL_HostGroups_Manager.cpp line 4683?
 q=(char *)""UPDATE mysql_servers_incoming SET status=1 WHERE hostname='172.18.0.20' AND port=%d AND hostgroup_id=%d"";

@Tusamarco This is just a POC. There was no reason for hard coding, just prototyping. I will remove this PR.
Sorry for misleading.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2667,2020-04-13T15:30:10Z,2020-04-14T16:46:26Z,2020-04-14T16:46:27Z,CLOSED,False,50,8,3,https://github.com/alpes214,WIP galera-pxc-maint-mode,1,[],https://github.com/sysown/proxysql/pull/2667,https://github.com/alpes214,4,https://github.com/sysown/proxysql/pull/2667#issuecomment-613554107,"Description:
This is branch for fix issue #2656",Closed as POC.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2669,2020-04-13T22:21:03Z,2020-04-13T22:21:28Z,2020-04-13T22:21:28Z,CLOSED,False,660,1,5,https://github.com/fzipi,Port cmake,2,[],https://github.com/sysown/proxysql/pull/2669,https://github.com/fzipi,1,https://github.com/sysown/proxysql/pull/2669,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2671,2020-04-14T16:43:16Z,2020-04-28T21:15:29Z,2020-06-15T19:00:59Z,MERGED,True,3,1,1,https://github.com/alpes214,Fix pxc_maint_mode failback when writer_is_also_reader=2,1,[],https://github.com/sysown/proxysql/pull/2671,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2671,"Description:
This PR fxies issue #2656
Testing:

Setup mysql_galera_hostgroups

MySQL [(none)]> select * from mysql_galera_hostgroups;
+------------------+-------------------------+------------------+-------------------+--------+-------------+-----------------------+-------------------------+---------+
| writer_hostgroup | backup_writer_hostgroup | reader_hostgroup | offline_hostgroup | active | max_writers | writer_is_also_reader | max_transactions_behind | comment |
+------------------+-------------------------+------------------+-------------------+--------+-------------+-----------------------+-------------------------+---------+
| 1                | 2                       | 3                | 4                 | 1      | 1           | 2                     | 150                     | NULL    |
+------------------+-------------------------+------------------+-------------------+--------+-------------+-----------------------+-------------------------+---------+
1 row in set (0.00 sec)

When server just started, three nodes are distributed like this:
MySQL [(none)]> select * from runtime_mysql_servers;
+--------------+-------------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| hostgroup_id | hostname    | port | gtid_port | status | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |
+--------------+-------------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| 1            | 172.18.0.30 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 2            | 172.18.0.20 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 2            | 172.18.0.10 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3            | 172.18.0.20 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3            | 172.18.0.10 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
+--------------+-------------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
5 rows in set (0.00 sec)


Switch writer node to the pxc MAINTENANCE mode.

MySQL [(none)]> select * from runtime_mysql_servers;
+--------------+-------------+------+-----------+---------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| hostgroup_id | hostname    | port | gtid_port | status  | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |
+--------------+-------------+------+-----------+---------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| 1            | 172.18.0.30 | 3306 | 0         | SHUNNED | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 2            | 172.18.0.10 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3            | 172.18.0.10 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 1            | 172.18.0.20 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
+--------------+-------------+------+-----------+---------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
4 rows in set (0.00 sec)


Switch writer node back to the pxc DISABLED mode.

MySQL [(none)]> select * from runtime_mysql_servers;
+--------------+-------------+------+-----------+---------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| hostgroup_id | hostname    | port | gtid_port | status  | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |
+--------------+-------------+------+-----------+---------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| 1            | 172.18.0.30 | 3306 | 0         | SHUNNED | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 2            | 172.18.0.10 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3            | 172.18.0.10 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 1            | 172.18.0.20 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
+--------------+-------------+------+-----------+---------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
4 rows in set (0.00 sec)","Description:
This PR fxies issue #2656
Testing:

Setup mysql_galera_hostgroups

MySQL [(none)]> select * from mysql_galera_hostgroups;
+------------------+-------------------------+------------------+-------------------+--------+-------------+-----------------------+-------------------------+---------+
| writer_hostgroup | backup_writer_hostgroup | reader_hostgroup | offline_hostgroup | active | max_writers | writer_is_also_reader | max_transactions_behind | comment |
+------------------+-------------------------+------------------+-------------------+--------+-------------+-----------------------+-------------------------+---------+
| 1                | 2                       | 3                | 4                 | 1      | 1           | 2                     | 150                     | NULL    |
+------------------+-------------------------+------------------+-------------------+--------+-------------+-----------------------+-------------------------+---------+
1 row in set (0.00 sec)

When server just started, three nodes are distributed like this:
MySQL [(none)]> select * from runtime_mysql_servers;
+--------------+-------------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| hostgroup_id | hostname    | port | gtid_port | status | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |
+--------------+-------------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| 1            | 172.18.0.30 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 2            | 172.18.0.20 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 2            | 172.18.0.10 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3            | 172.18.0.20 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3            | 172.18.0.10 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
+--------------+-------------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
5 rows in set (0.00 sec)


Switch writer node to the pxc MAINTENANCE mode.

MySQL [(none)]> select * from runtime_mysql_servers;
+--------------+-------------+------+-----------+---------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| hostgroup_id | hostname    | port | gtid_port | status  | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |
+--------------+-------------+------+-----------+---------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| 1            | 172.18.0.30 | 3306 | 0         | SHUNNED | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 2            | 172.18.0.10 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3            | 172.18.0.10 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 1            | 172.18.0.20 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
+--------------+-------------+------+-----------+---------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
4 rows in set (0.00 sec)


Switch writer node back to the pxc DISABLED mode.

MySQL [(none)]> select * from runtime_mysql_servers;
+--------------+-------------+------+-----------+---------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| hostgroup_id | hostname    | port | gtid_port | status  | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |
+--------------+-------------+------+-----------+---------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| 1            | 172.18.0.30 | 3306 | 0         | SHUNNED | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 2            | 172.18.0.10 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3            | 172.18.0.10 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 1            | 172.18.0.20 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
+--------------+-------------+------+-----------+---------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
4 rows in set (0.00 sec)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2671,2020-04-14T16:43:16Z,2020-04-28T21:15:29Z,2020-06-15T19:00:59Z,MERGED,True,3,1,1,https://github.com/alpes214,Fix pxc_maint_mode failback when writer_is_also_reader=2,1,[],https://github.com/sysown/proxysql/pull/2671,https://github.com/alpes214,2,https://github.com/sysown/proxysql/pull/2671#issuecomment-613553633,"Description:
This PR fxies issue #2656
Testing:

Setup mysql_galera_hostgroups

MySQL [(none)]> select * from mysql_galera_hostgroups;
+------------------+-------------------------+------------------+-------------------+--------+-------------+-----------------------+-------------------------+---------+
| writer_hostgroup | backup_writer_hostgroup | reader_hostgroup | offline_hostgroup | active | max_writers | writer_is_also_reader | max_transactions_behind | comment |
+------------------+-------------------------+------------------+-------------------+--------+-------------+-----------------------+-------------------------+---------+
| 1                | 2                       | 3                | 4                 | 1      | 1           | 2                     | 150                     | NULL    |
+------------------+-------------------------+------------------+-------------------+--------+-------------+-----------------------+-------------------------+---------+
1 row in set (0.00 sec)

When server just started, three nodes are distributed like this:
MySQL [(none)]> select * from runtime_mysql_servers;
+--------------+-------------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| hostgroup_id | hostname    | port | gtid_port | status | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |
+--------------+-------------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| 1            | 172.18.0.30 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 2            | 172.18.0.20 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 2            | 172.18.0.10 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3            | 172.18.0.20 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3            | 172.18.0.10 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
+--------------+-------------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
5 rows in set (0.00 sec)


Switch writer node to the pxc MAINTENANCE mode.

MySQL [(none)]> select * from runtime_mysql_servers;
+--------------+-------------+------+-----------+---------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| hostgroup_id | hostname    | port | gtid_port | status  | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |
+--------------+-------------+------+-----------+---------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| 1            | 172.18.0.30 | 3306 | 0         | SHUNNED | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 2            | 172.18.0.10 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3            | 172.18.0.10 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 1            | 172.18.0.20 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
+--------------+-------------+------+-----------+---------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
4 rows in set (0.00 sec)


Switch writer node back to the pxc DISABLED mode.

MySQL [(none)]> select * from runtime_mysql_servers;
+--------------+-------------+------+-----------+---------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| hostgroup_id | hostname    | port | gtid_port | status  | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |
+--------------+-------------+------+-----------+---------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| 1            | 172.18.0.30 | 3306 | 0         | SHUNNED | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 2            | 172.18.0.10 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3            | 172.18.0.10 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 1            | 172.18.0.20 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
+--------------+-------------+------+-----------+---------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
4 rows in set (0.00 sec)",@Tusamarco this is a correct PR which fixes the issue #2656. I will close the previous one #2667,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2671,2020-04-14T16:43:16Z,2020-04-28T21:15:29Z,2020-06-15T19:00:59Z,MERGED,True,3,1,1,https://github.com/alpes214,Fix pxc_maint_mode failback when writer_is_also_reader=2,1,[],https://github.com/sysown/proxysql/pull/2671,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2671#issuecomment-620863344,"Description:
This PR fxies issue #2656
Testing:

Setup mysql_galera_hostgroups

MySQL [(none)]> select * from mysql_galera_hostgroups;
+------------------+-------------------------+------------------+-------------------+--------+-------------+-----------------------+-------------------------+---------+
| writer_hostgroup | backup_writer_hostgroup | reader_hostgroup | offline_hostgroup | active | max_writers | writer_is_also_reader | max_transactions_behind | comment |
+------------------+-------------------------+------------------+-------------------+--------+-------------+-----------------------+-------------------------+---------+
| 1                | 2                       | 3                | 4                 | 1      | 1           | 2                     | 150                     | NULL    |
+------------------+-------------------------+------------------+-------------------+--------+-------------+-----------------------+-------------------------+---------+
1 row in set (0.00 sec)

When server just started, three nodes are distributed like this:
MySQL [(none)]> select * from runtime_mysql_servers;
+--------------+-------------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| hostgroup_id | hostname    | port | gtid_port | status | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |
+--------------+-------------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| 1            | 172.18.0.30 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 2            | 172.18.0.20 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 2            | 172.18.0.10 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3            | 172.18.0.20 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3            | 172.18.0.10 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
+--------------+-------------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
5 rows in set (0.00 sec)


Switch writer node to the pxc MAINTENANCE mode.

MySQL [(none)]> select * from runtime_mysql_servers;
+--------------+-------------+------+-----------+---------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| hostgroup_id | hostname    | port | gtid_port | status  | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |
+--------------+-------------+------+-----------+---------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| 1            | 172.18.0.30 | 3306 | 0         | SHUNNED | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 2            | 172.18.0.10 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3            | 172.18.0.10 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 1            | 172.18.0.20 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
+--------------+-------------+------+-----------+---------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
4 rows in set (0.00 sec)


Switch writer node back to the pxc DISABLED mode.

MySQL [(none)]> select * from runtime_mysql_servers;
+--------------+-------------+------+-----------+---------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| hostgroup_id | hostname    | port | gtid_port | status  | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |
+--------------+-------------+------+-----------+---------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| 1            | 172.18.0.30 | 3306 | 0         | SHUNNED | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 2            | 172.18.0.10 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3            | 172.18.0.10 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 1            | 172.18.0.20 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
+--------------+-------------+------+-----------+---------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
4 rows in set (0.00 sec)",Cherry-picked in 2.1.0,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2671,2020-04-14T16:43:16Z,2020-04-28T21:15:29Z,2020-06-15T19:00:59Z,MERGED,True,3,1,1,https://github.com/alpes214,Fix pxc_maint_mode failback when writer_is_also_reader=2,1,[],https://github.com/sysown/proxysql/pull/2671,https://github.com/rameshvs02,4,https://github.com/sysown/proxysql/pull/2671#issuecomment-627275948,"Description:
This PR fxies issue #2656
Testing:

Setup mysql_galera_hostgroups

MySQL [(none)]> select * from mysql_galera_hostgroups;
+------------------+-------------------------+------------------+-------------------+--------+-------------+-----------------------+-------------------------+---------+
| writer_hostgroup | backup_writer_hostgroup | reader_hostgroup | offline_hostgroup | active | max_writers | writer_is_also_reader | max_transactions_behind | comment |
+------------------+-------------------------+------------------+-------------------+--------+-------------+-----------------------+-------------------------+---------+
| 1                | 2                       | 3                | 4                 | 1      | 1           | 2                     | 150                     | NULL    |
+------------------+-------------------------+------------------+-------------------+--------+-------------+-----------------------+-------------------------+---------+
1 row in set (0.00 sec)

When server just started, three nodes are distributed like this:
MySQL [(none)]> select * from runtime_mysql_servers;
+--------------+-------------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| hostgroup_id | hostname    | port | gtid_port | status | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |
+--------------+-------------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| 1            | 172.18.0.30 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 2            | 172.18.0.20 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 2            | 172.18.0.10 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3            | 172.18.0.20 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3            | 172.18.0.10 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
+--------------+-------------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
5 rows in set (0.00 sec)


Switch writer node to the pxc MAINTENANCE mode.

MySQL [(none)]> select * from runtime_mysql_servers;
+--------------+-------------+------+-----------+---------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| hostgroup_id | hostname    | port | gtid_port | status  | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |
+--------------+-------------+------+-----------+---------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| 1            | 172.18.0.30 | 3306 | 0         | SHUNNED | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 2            | 172.18.0.10 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3            | 172.18.0.10 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 1            | 172.18.0.20 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
+--------------+-------------+------+-----------+---------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
4 rows in set (0.00 sec)


Switch writer node back to the pxc DISABLED mode.

MySQL [(none)]> select * from runtime_mysql_servers;
+--------------+-------------+------+-----------+---------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| hostgroup_id | hostname    | port | gtid_port | status  | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |
+--------------+-------------+------+-----------+---------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| 1            | 172.18.0.30 | 3306 | 0         | SHUNNED | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 2            | 172.18.0.10 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3            | 172.18.0.10 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 1            | 172.18.0.20 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
+--------------+-------------+------+-----------+---------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
4 rows in set (0.00 sec)","@renecannao I think the issue is still not resolved in 2.0.11
mysql> select hostgroup_id,hostname,port,status from runtime_mysql_servers;
+--------------+----------------+------+--------+
| hostgroup_id | hostname       | port | status |
+--------------+----------------+------+--------+
| 10           | 192.168.100.30 | 3306 | ONLINE |
| 11           | 192.168.100.20 | 3306 | ONLINE |
| 11           | 192.168.100.10 | 3306 | ONLINE |
| 12           | 192.168.100.20 | 3306 | ONLINE |
| 12           | 192.168.100.10 | 3306 | ONLINE |
+--------------+----------------+------+--------+
5 rows in set (0.00 sec)

mysql> select writer_hostgroup,backup_writer_hostgroup,reader_hostgroup,offline_hostgroup,writer_is_also_reader from runtime_mysql_galera_hostgroups;
+------------------+-------------------------+------------------+-------------------+-----------------------+
| writer_hostgroup | backup_writer_hostgroup | reader_hostgroup | offline_hostgroup | writer_is_also_reader |
+------------------+-------------------------+------------------+-------------------+-----------------------+
| 10               | 12                      | 11               | 13                | 2                     |
+------------------+-------------------------+------------------+-------------------+-----------------------+
1 row in set (0.00 sec)

mysql>

mysql> set global pxc_maint_mode = MAINTENANCE;
Query OK, 0 rows affected (10.00 sec)

mysql> set global pxc_maint_mode = DISABLED;
Query OK, 0 rows affected (0.00 sec)

mysql> select @@pxc_maint_mode;
+------------------+
| @@pxc_maint_mode |
+------------------+
| DISABLED         |
+------------------+
1 row in set (0.00 sec)

mysql> select @@wsrep_node_address;
+----------------------+
| @@wsrep_node_address |
+----------------------+
| 192.168.100.30       |
+----------------------+
1 row in set (0.00 sec)

mysql>

mysql> select hostgroup_id,hostname,port,status from runtime_mysql_servers;
+--------------+----------------+------+---------+
| hostgroup_id | hostname       | port | status  |
+--------------+----------------+------+---------+
| 10           | 192.168.100.30 | 3306 | SHUNNED |
| 11           | 192.168.100.10 | 3306 | ONLINE  |
| 12           | 192.168.100.10 | 3306 | ONLINE  |
| 10           | 192.168.100.20 | 3306 | ONLINE  |
+--------------+----------------+------+---------+
4 rows in set (0.00 sec)

mysql>

proxysql version
[vagrant@proxysql ~]$ proxysql --version
ProxySQL version 2.0.11-124-g971c15e, codename Truls
[vagrant@proxysql ~]$

ProxySQL Error log
2020-05-12 10:41:04 [INFO] Galera: max_writers=1 , moving 1 nodes from backup HG 12 to writer HG 10
2020-05-12 10:41:04 MySQL_HostGroups_Manager.cpp:4425:update_galera_set_offline(): [WARNING] Galera: setting host 192.168.100.30:3306 offline because: pxc_maint_mode=YES
2020-05-12 10:41:04 [INFO] Dumping current MySQL Servers structures for hostgroup ALL
HID: 10 , address: 192.168.100.30 , port: 3306 , gtid_port: 0 , weight: 1000 , status: ONLINE , max_connections: 1000 , max_replication_lag: 0 , use_ssl: 0 , max_latency_ms: 0 , comment:
HID: 12 , address: 192.168.100.10 , port: 3306 , gtid_port: 0 , weight: 1000 , status: ONLINE , max_connections: 1000 , max_replication_lag: 0 , use_ssl: 0 , max_latency_ms: 0 , comment:
HID: 12 , address: 192.168.100.20 , port: 3306 , gtid_port: 0 , weight: 1000 , status: ONLINE , max_connections: 1000 , max_replication_lag: 0 , use_ssl: 0 , max_latency_ms: 0 , comment:
HID: 11 , address: 192.168.100.10 , port: 3306 , gtid_port: 0 , weight: 1000 , status: ONLINE , max_connections: 1000 , max_replication_lag: 0 , use_ssl: 0 , max_latency_ms: 0 , comment:
HID: 11 , address: 192.168.100.20 , port: 3306 , gtid_port: 0 , weight: 1000 , status: ONLINE , max_connections: 1000 , max_replication_lag: 0 , use_ssl: 0 , max_latency_ms: 0 , comment:
2020-05-12 10:41:04 [INFO] Dumping mysql_servers: ALL
+-----+----------------+------+------+--------+--------+-----+-----------+---------+-----+---------+---------+-----------------+
| hid | hostname       | port | gtid | weight | status | cmp | max_conns | max_lag | ssl | max_lat | comment | mem_pointer     |
+-----+----------------+------+------+--------+--------+-----+-----------+---------+-----+---------+---------+-----------------+
| 10  | 192.168.100.30 | 3306 | 0    | 1000   | 0      | 0   | 1000      | 0       | 0   | 0       |         | 139884047144704 |
| 11  | 192.168.100.20 | 3306 | 0    | 1000   | 0      | 0   | 1000      | 0       | 0   | 0       |         | 139884047144864 |
| 11  | 192.168.100.10 | 3306 | 0    | 1000   | 0      | 0   | 1000      | 0       | 0   | 0       |         | 139884058742720 |
| 12  | 192.168.100.20 | 3306 | 0    | 1000   | 0      | 0   | 1000      | 0       | 0   | 0       |         | 139884033576576 |
| 12  | 192.168.100.10 | 3306 | 0    | 1000   | 0      | 0   | 1000      | 0       | 0   | 0       |         | 139884058742400 |
+-----+----------------+------+------+--------+--------+-----+-----------+---------+-----+---------+---------+-----------------+
2020-05-12 10:41:04 [INFO] Dumping mysql_servers_incoming
+--------------+----------------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| hostgroup_id | hostname       | port | gtid_port | weight | status | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |
+--------------+----------------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| 10           | 192.168.100.30 | 3306 | 0         | 1000   | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 10           | 192.168.100.20 | 3306 | 0         | 1000   | 0      | 0           | 1000            | 0                   | 0       | 0              |         |
| 12           | 192.168.100.10 | 3306 | 0         | 1000   | 0      | 0           | 1000            | 0                   | 0       | 0              |         |
| 11           | 192.168.100.10 | 3306 | 0         | 1000   | 0      | 0           | 1000            | 0                   | 0       | 0              |         |
+--------------+----------------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
2020-05-12 10:41:04 [INFO] Dumping mysql_servers LEFT JOIN mysql_servers_incoming
+-----------------+--------------+----------------+------+
| mem_pointer     | hostgroup_id | hostname       | port |
+-----------------+--------------+----------------+------+
| 139884047144864 | 11           | 192.168.100.20 | 3306 |
| 139884033576576 | 12           | 192.168.100.20 | 3306 |
+-----------------+--------------+----------------+------+
2020-05-12 10:41:04 MySQL_HostGroups_Manager.cpp:1268:commit(): [WARNING] Removed server at address 139884047144864, hostgroup 11, address 192.168.100.20 port 3306. Setting status OFFLINE HARD and immediately dropping all free connections. Used connections will be dropped when trying to use them
2020-05-12 10:41:04 MySQL_HostGroups_Manager.cpp:1268:commit(): [WARNING] Removed server at address 139884033576576, hostgroup 12, address 192.168.100.20 port 3306. Setting status OFFLINE HARD and immediately dropping all free connections. Used connections will be dropped when trying to use them
2020-05-12 10:41:04 [INFO] Dumping mysql_servers JOIN mysql_servers_incoming
+--------------+----------------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+-----------------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| hostgroup_id | hostname       | port | gtid_port | weight | status | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment | mem_pointer     | gtid_port | weight | status | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |
+--------------+----------------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+-----------------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| 10           | 192.168.100.30 | 3306 | 0         | 1000   | 0      | 0           | 1000            | 0                   | 0       | 0              |         | 139884047144704 | 0         | 1000   | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 10           | 192.168.100.20 | 3306 | 0         | 1000   | 0      | 0           | 1000            | 0                   | 0       | 0              |         | 0               | 0         | 1000   | 0      | 0           | 1000            | 0                   | 0       | 0              |         |
+--------------+----------------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+-----------------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
2020-05-12 10:41:04 [INFO] Changing status for server 10:192.168.100.30:3306 (192.168.100.30:3306) from 0 (0) to 1
2020-05-12 10:41:04 [INFO] Creating new server in HG 10 : 192.168.100.20:3306 , gtid_port=0, weight=1000, status=0
2020-05-12 10:41:04 [INFO] Dumping current MySQL Servers structures for hostgroup ALL
HID: 10 , address: 192.168.100.30 , port: 3306 , gtid_port: 0 , weight: 1000 , status: SHUNNED , max_connections: 1000 , max_replication_lag: 0 , use_ssl: 0 , max_latency_ms: 0 , comment:
HID: 10 , address: 192.168.100.20 , port: 3306 , gtid_port: 0 , weight: 1000 , status: ONLINE , max_connections: 1000 , max_replication_lag: 0 , use_ssl: 0 , max_latency_ms: 0 , comment:
HID: 12 , address: 192.168.100.10 , port: 3306 , gtid_port: 0 , weight: 1000 , status: ONLINE , max_connections: 1000 , max_replication_lag: 0 , use_ssl: 0 , max_latency_ms: 0 , comment:
HID: 12 , address: 192.168.100.20 , port: 3306 , gtid_port: 0 , weight: 1000 , status: OFFLINE_HARD , max_connections: 1000 , max_replication_lag: 0 , use_ssl: 0 , max_latency_ms: 0 , comment:
HID: 11 , address: 192.168.100.10 , port: 3306 , gtid_port: 0 , weight: 1000 , status: ONLINE , max_connections: 1000 , max_replication_lag: 0 , use_ssl: 0 , max_latency_ms: 0 , comment:
HID: 11 , address: 192.168.100.20 , port: 3306 , gtid_port: 0 , weight: 1000 , status: OFFLINE_HARD , max_connections: 1000 , max_replication_lag: 0 , use_ssl: 0 , max_latency_ms: 0 , comment:
2020-05-12 10:41:04 [INFO] Dumping mysql_servers: ALL
+-----+----------------+------+------+--------+--------+-----+-----------+---------+-----+---------+---------+-----------------+
| hid | hostname       | port | gtid | weight | status | cmp | max_conns | max_lag | ssl | max_lat | comment | mem_pointer     |
+-----+----------------+------+------+--------+--------+-----+-----------+---------+-----+---------+---------+-----------------+
| 10  | 192.168.100.30 | 3306 | 0    | 1000   | 1      | 0   | 1000      | 0       | 0   | 0       |         | 139884047144704 |
| 11  | 192.168.100.20 | 3306 | 0    | 1000   | 3      | 0   | 1000      | 0       | 0   | 0       |         | 139884047144864 |
| 11  | 192.168.100.10 | 3306 | 0    | 1000   | 0      | 0   | 1000      | 0       | 0   | 0       |         | 139884058742720 |
| 12  | 192.168.100.20 | 3306 | 0    | 1000   | 3      | 0   | 1000      | 0       | 0   | 0       |         | 139884033576576 |
| 12  | 192.168.100.10 | 3306 | 0    | 1000   | 0      | 0   | 1000      | 0       | 0   | 0       |         | 139884058742400 |
| 10  | 192.168.100.20 | 3306 | 0    | 1000   | 0      | 0   | 1000      | 0       | 0   | 0       |         | 139884081843840 |
+-----+----------------+------+------+--------+--------+-----+-----------+---------+-----+---------+---------+-----------------+
2020-05-12 10:41:04 [INFO] MySQL_HostGroups_Manager::commit() locked for 2ms
2020-05-12 10:41:04 [INFO] Dumping current MySQL Servers structures for hostgroup 10
HID: 10 , address: 192.168.100.30 , port: 3306 , gtid_port: 0 , weight: 1000 , status: SHUNNED , max_connections: 1000 , max_replication_lag: 0 , use_ssl: 0 , max_latency_ms: 0 , comment:
HID: 10 , address: 192.168.100.20 , port: 3306 , gtid_port: 0 , weight: 1000 , status: ONLINE , max_connections: 1000 , max_replication_lag: 0 , use_ssl: 0 , max_latency_ms: 0 , comment:
2020-05-12 10:41:04 [INFO] Dumping mysql_servers: HG 10
+-----+----------------+------+------+--------+--------+-----+-----------+---------+-----+---------+---------+-----------------+
| hid | hostname       | port | gtid | weight | status | cmp | max_conns | max_lag | ssl | max_lat | comment | mem_pointer     |
+-----+----------------+------+------+--------+--------+-----+-----------+---------+-----+---------+---------+-----------------+
| 10  | 192.168.100.20 | 3306 | 0    | 1000   | 0      | 0   | 1000      | 0       | 0   | 0       |         | 139884081843840 |
| 10  | 192.168.100.30 | 3306 | 0    | 1000   | 1      | 0   | 1000      | 0       | 0   | 0       |         | 139884047144704 |
+-----+----------------+------+------+--------+--------+-----+-----------+---------+-----+---------+---------+-----------------+
2020-05-12 10:41:04 [INFO] Dumping current MySQL Servers structures for hostgroup 12
HID: 12 , address: 192.168.100.10 , port: 3306 , gtid_port: 0 , weight: 1000 , status: ONLINE , max_connections: 1000 , max_replication_lag: 0 , use_ssl: 0 , max_latency_ms: 0 , comment:
HID: 12 , address: 192.168.100.20 , port: 3306 , gtid_port: 0 , weight: 1000 , status: OFFLINE_HARD , max_connections: 1000 , max_replication_lag: 0 , use_ssl: 0 , max_latency_ms: 0 , comment:
2020-05-12 10:41:04 [INFO] Dumping mysql_servers: HG 12
+-----+----------------+------+------+--------+--------+-----+-----------+---------+-----+---------+---------+-----------------+
| hid | hostname       | port | gtid | weight | status | cmp | max_conns | max_lag | ssl | max_lat | comment | mem_pointer     |
+-----+----------------+------+------+--------+--------+-----+-----------+---------+-----+---------+---------+-----------------+
| 12  | 192.168.100.10 | 3306 | 0    | 1000   | 0      | 0   | 1000      | 0       | 0   | 0       |         | 139884058742400 |
| 12  | 192.168.100.20 | 3306 | 0    | 1000   | 3      | 0   | 1000      | 0       | 0   | 0       |         | 139884033576576 |
+-----+----------------+------+------+--------+--------+-----+-----------+---------+-----+---------+---------+-----------------+
2020-05-12 10:41:04 [INFO] Dumping current MySQL Servers structures for hostgroup 11
HID: 11 , address: 192.168.100.10 , port: 3306 , gtid_port: 0 , weight: 1000 , status: ONLINE , max_connections: 1000 , max_replication_lag: 0 , use_ssl: 0 , max_latency_ms: 0 , comment:
HID: 11 , address: 192.168.100.20 , port: 3306 , gtid_port: 0 , weight: 1000 , status: OFFLINE_HARD , max_connections: 1000 , max_replication_lag: 0 , use_ssl: 0 , max_latency_ms: 0 , comment:
2020-05-12 10:41:04 [INFO] Dumping mysql_servers: HG 11
+-----+----------------+------+------+--------+--------+-----+-----------+---------+-----+---------+---------+-----------------+
| hid | hostname       | port | gtid | weight | status | cmp | max_conns | max_lag | ssl | max_lat | comment | mem_pointer     |
+-----+----------------+------+------+--------+--------+-----+-----------+---------+-----+---------+---------+-----------------+
| 11  | 192.168.100.10 | 3306 | 0    | 1000   | 0      | 0   | 1000      | 0       | 0   | 0       |         | 139884058742720 |
| 11  | 192.168.100.20 | 3306 | 0    | 1000   | 3      | 0   | 1000      | 0       | 0   | 0       |         | 139884047144864 |
+-----+----------------+------+------+--------+--------+-----+-----------+---------+-----+---------+---------+-----------------+
2020-05-12 10:41:04 [INFO] Dumping current MySQL Servers structures for hostgroup 13
2020-05-12 10:41:04 [INFO] Dumping mysql_servers: HG 13
+-----+----------+------+------+--------+--------+-----+-----------+---------+-----+---------+---------+-------------+
| hid | hostname | port | gtid | weight | status | cmp | max_conns | max_lag | ssl | max_lat | comment | mem_pointer |
+-----+----------+------+------+--------+--------+-----+-----------+---------+-----+---------+---------+-------------+
+-----+----------+------+------+--------+--------+-----+-----------+---------+-----+---------+---------+-------------+
2020-05-12 10:41:09 MySQL_HostGroups_Manager.cpp:4455:update_galera_set_offline(): [WARNING] Galera: skipping setting offline node 192.168.100.30:3306 from hostgroup 10 because won't change the list of ONLINE nodes
2020-05-12 10:41:14 MySQL_HostGroups_Manager.cpp:4455:update_galera_set_offline(): [WARNING] Galera: skipping setting offline node 192.168.100.30:3306 from hostgroup 10 because won't change the list of ONLINE nodes
2020-05-12 10:41:19 MySQL_HostGroups_Manager.cpp:4455:update_galera_set_offline(): [WARNING] Galera: skipping setting offline node 192.168.100.30:3306 from hostgroup 10 because won't change the list of ONLINE nodes
2020-05-12 10:41:24 MySQL_HostGroups_Manager.cpp:4455:update_galera_set_offline(): [WARNING] Galera: skipping setting offline node 192.168.100.30:3306 from hostgroup 10 because won't change the list of ONLINE nodes
2020-05-12 10:41:29 MySQL_HostGroups_Manager.cpp:4455:update_galera_set_offline(): [WARNING] Galera: skipping setting offline node 192.168.100.30:3306 from hostgroup 10 because won't change the list of ONLINE nodes",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2673,2020-04-15T06:22:24Z,2020-04-28T21:17:47Z,2020-06-15T19:00:58Z,MERGED,True,1,1,1,https://github.com/alpes214,Fix shunning reader when node goes to MAINTENANCE,1,[],https://github.com/sysown/proxysql/pull/2673,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2673,"Description:
This PR fixes issue #2657
Testing:

Configuring mysql_galera_hostgroups

MySQL [(none)]> select * from mysql_galera_hostgroups\G
*************************** 1. row ***************************
       writer_hostgroup: 1
backup_writer_hostgroup: 2
       reader_hostgroup: 3
      offline_hostgroup: 4
                 active: 1
            max_writers: 1
  writer_is_also_reader: 1
max_transactions_behind: 150
                comment: NULL
1 row in set (0.00 sec)


Initial state of the runtime_mysql_servers

MySQL [(none)]> select * from runtime_mysql_servers;
+--------------+-------------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| hostgroup_id | hostname    | port | gtid_port | status | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |
+--------------+-------------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| 1            | 172.18.0.30 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 2            | 172.18.0.20 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 2            | 172.18.0.10 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3            | 172.18.0.10 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3            | 172.18.0.30 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3            | 172.18.0.20 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
+--------------+-------------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
6 rows in set (0.00 sec)


After setting set global pxc_maint_mode=MAINTENANCE; on a writer's node

MySQL [(none)]> select * from runtime_mysql_servers;
+--------------+-------------+------+-----------+---------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| hostgroup_id | hostname    | port | gtid_port | status  | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |
+--------------+-------------+------+-----------+---------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| 1            | 172.18.0.30 | 3306 | 0         | SHUNNED | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 2            | 172.18.0.10 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3            | 172.18.0.10 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3            | 172.18.0.30 | 3306 | 0         | SHUNNED | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3            | 172.18.0.20 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 1            | 172.18.0.20 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
+--------------+-------------+------+-----------+---------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
6 rows in set (0.00 sec)","Description:
This PR fixes issue #2657
Testing:

Configuring mysql_galera_hostgroups

MySQL [(none)]> select * from mysql_galera_hostgroups\G
*************************** 1. row ***************************
       writer_hostgroup: 1
backup_writer_hostgroup: 2
       reader_hostgroup: 3
      offline_hostgroup: 4
                 active: 1
            max_writers: 1
  writer_is_also_reader: 1
max_transactions_behind: 150
                comment: NULL
1 row in set (0.00 sec)


Initial state of the runtime_mysql_servers

MySQL [(none)]> select * from runtime_mysql_servers;
+--------------+-------------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| hostgroup_id | hostname    | port | gtid_port | status | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |
+--------------+-------------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| 1            | 172.18.0.30 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 2            | 172.18.0.20 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 2            | 172.18.0.10 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3            | 172.18.0.10 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3            | 172.18.0.30 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3            | 172.18.0.20 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
+--------------+-------------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
6 rows in set (0.00 sec)


After setting set global pxc_maint_mode=MAINTENANCE; on a writer's node

MySQL [(none)]> select * from runtime_mysql_servers;
+--------------+-------------+------+-----------+---------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| hostgroup_id | hostname    | port | gtid_port | status  | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |
+--------------+-------------+------+-----------+---------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| 1            | 172.18.0.30 | 3306 | 0         | SHUNNED | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 2            | 172.18.0.10 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3            | 172.18.0.10 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3            | 172.18.0.30 | 3306 | 0         | SHUNNED | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3            | 172.18.0.20 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 1            | 172.18.0.20 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
+--------------+-------------+------+-----------+---------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
6 rows in set (0.00 sec)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2673,2020-04-15T06:22:24Z,2020-04-28T21:17:47Z,2020-06-15T19:00:58Z,MERGED,True,1,1,1,https://github.com/alpes214,Fix shunning reader when node goes to MAINTENANCE,1,[],https://github.com/sysown/proxysql/pull/2673,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2673#issuecomment-620863166,"Description:
This PR fixes issue #2657
Testing:

Configuring mysql_galera_hostgroups

MySQL [(none)]> select * from mysql_galera_hostgroups\G
*************************** 1. row ***************************
       writer_hostgroup: 1
backup_writer_hostgroup: 2
       reader_hostgroup: 3
      offline_hostgroup: 4
                 active: 1
            max_writers: 1
  writer_is_also_reader: 1
max_transactions_behind: 150
                comment: NULL
1 row in set (0.00 sec)


Initial state of the runtime_mysql_servers

MySQL [(none)]> select * from runtime_mysql_servers;
+--------------+-------------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| hostgroup_id | hostname    | port | gtid_port | status | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |
+--------------+-------------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| 1            | 172.18.0.30 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 2            | 172.18.0.20 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 2            | 172.18.0.10 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3            | 172.18.0.10 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3            | 172.18.0.30 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3            | 172.18.0.20 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
+--------------+-------------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
6 rows in set (0.00 sec)


After setting set global pxc_maint_mode=MAINTENANCE; on a writer's node

MySQL [(none)]> select * from runtime_mysql_servers;
+--------------+-------------+------+-----------+---------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| hostgroup_id | hostname    | port | gtid_port | status  | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |
+--------------+-------------+------+-----------+---------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| 1            | 172.18.0.30 | 3306 | 0         | SHUNNED | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 2            | 172.18.0.10 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3            | 172.18.0.10 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3            | 172.18.0.30 | 3306 | 0         | SHUNNED | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3            | 172.18.0.20 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 1            | 172.18.0.20 | 3306 | 0         | ONLINE  | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
+--------------+-------------+------+-----------+---------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
6 rows in set (0.00 sec)",Cherry-picked in 2.1.0,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2675,2020-04-15T08:06:21Z,2020-04-17T00:02:54Z,2020-06-15T19:01:03Z,MERGED,True,2101,1814,23,https://github.com/renecannao,V2.0.11 var2,25,[],https://github.com/sysown/proxysql/pull/2675,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2675,Several changes to PR #2650,Several changes to PR #2650,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2676,2020-04-15T08:08:30Z,2020-05-04T20:24:11Z,2020-10-30T16:14:05Z,MERGED,True,2936,914,31,https://github.com/renecannao,[WIP] V2.0.11 prometheus,64,[],https://github.com/sysown/proxysql/pull/2676,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2676,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2676,2020-04-15T08:08:30Z,2020-05-04T20:24:11Z,2020-10-30T16:14:05Z,MERGED,True,2936,914,31,https://github.com/renecannao,[WIP] V2.0.11 prometheus,64,[],https://github.com/sysown/proxysql/pull/2676,https://github.com/ankitjain28may,2,https://github.com/sysown/proxysql/pull/2676#issuecomment-615079896,,@renecannao Do we have any draft regarding the features added in this PR? Thanks,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2676,2020-04-15T08:08:30Z,2020-05-04T20:24:11Z,2020-10-30T16:14:05Z,MERGED,True,2936,914,31,https://github.com/renecannao,[WIP] V2.0.11 prometheus,64,[],https://github.com/sysown/proxysql/pull/2676,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2676#issuecomment-615094114,,"Hi @ankitjain28may .
Not yet, it is work in progress, and we are still making a lot of changes.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2676,2020-04-15T08:08:30Z,2020-05-04T20:24:11Z,2020-10-30T16:14:05Z,MERGED,True,2936,914,31,https://github.com/renecannao,[WIP] V2.0.11 prometheus,64,[],https://github.com/sysown/proxysql/pull/2676,https://github.com/ankitjain28may,4,https://github.com/sysown/proxysql/pull/2676#issuecomment-615141772,,"Thanks, @renecannao Can you please give a brief overview because we are using proxysql and adding proxysql exporter for metrics. Is this something replacing the same?",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2676,2020-04-15T08:08:30Z,2020-05-04T20:24:11Z,2020-10-30T16:14:05Z,MERGED,True,2936,914,31,https://github.com/renecannao,[WIP] V2.0.11 prometheus,64,[],https://github.com/sysown/proxysql/pull/2676,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/2676#issuecomment-616869372,,"Added few more comments, but overall it looks good to me!",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2676,2020-04-15T08:08:30Z,2020-05-04T20:24:11Z,2020-10-30T16:14:05Z,MERGED,True,2936,914,31,https://github.com/renecannao,[WIP] V2.0.11 prometheus,64,[],https://github.com/sysown/proxysql/pull/2676,https://github.com/JavierJF,6,https://github.com/sysown/proxysql/pull/2676#issuecomment-616883568,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2676,2020-04-15T08:08:30Z,2020-05-04T20:24:11Z,2020-10-30T16:14:05Z,MERGED,True,2936,914,31,https://github.com/renecannao,[WIP] V2.0.11 prometheus,64,[],https://github.com/sysown/proxysql/pull/2676,https://github.com/JavierJF,7,https://github.com/sysown/proxysql/pull/2676#issuecomment-616909415,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2676,2020-04-15T08:08:30Z,2020-05-04T20:24:11Z,2020-10-30T16:14:05Z,MERGED,True,2936,914,31,https://github.com/renecannao,[WIP] V2.0.11 prometheus,64,[],https://github.com/sysown/proxysql/pull/2676,https://github.com/renecannao,8,https://github.com/sysown/proxysql/pull/2676#issuecomment-617410845,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2676,2020-04-15T08:08:30Z,2020-05-04T20:24:11Z,2020-10-30T16:14:05Z,MERGED,True,2936,914,31,https://github.com/renecannao,[WIP] V2.0.11 prometheus,64,[],https://github.com/sysown/proxysql/pull/2676,https://github.com/JavierJF,9,https://github.com/sysown/proxysql/pull/2676#issuecomment-618265143,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2676,2020-04-15T08:08:30Z,2020-05-04T20:24:11Z,2020-10-30T16:14:05Z,MERGED,True,2936,914,31,https://github.com/renecannao,[WIP] V2.0.11 prometheus,64,[],https://github.com/sysown/proxysql/pull/2676,https://github.com/renecannao,10,https://github.com/sysown/proxysql/pull/2676#issuecomment-623681367,,"@JavierJF : please fix the conflicts, and this seems ok to merge.
Thanks",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2678,2020-04-15T12:49:56Z,2020-04-16T05:09:44Z,2020-04-16T05:09:55Z,CLOSED,False,11,0,1,https://github.com/alpes214,Fix Multistatement parsing error,1,[],https://github.com/sysown/proxysql/pull/2678,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2678,"Description:
Fixes issue #2655
Testing:

Tested with modified script

<?php
// Connect
$con=mysqli_connect(""127.0.0.1"",""root"",""root"",""proxysql_test"",6033);

if (!$con)
{
    die(""Connect Error: "" . mysqli_connect_error());
}

$query  = ""set names utf8; SELECT 2 limit 2;"";
if (mysqli_multi_query($con, $query)) {
    echo(""OK"");
}
else {
    printf(""query failed: %s\n"", $con->error);
}
mysqli_close($con);
?>


Tested with automated script in branch v2.0.11-var
Tested with valgrind

The set names query in multi statement processed w/o error. No memory leaks or regressions were detected because of the fix.","Description:
Fixes issue #2655
Testing:

Tested with modified script

<?php
// Connect
$con=mysqli_connect(""127.0.0.1"",""root"",""root"",""proxysql_test"",6033);

if (!$con)
{
    die(""Connect Error: "" . mysqli_connect_error());
}

$query  = ""set names utf8; SELECT 2 limit 2;"";
if (mysqli_multi_query($con, $query)) {
    echo(""OK"");
}
else {
    printf(""query failed: %s\n"", $con->error);
}
mysqli_close($con);
?>


Tested with automated script in branch v2.0.11-var
Tested with valgrind

The set names query in multi statement processed w/o error. No memory leaks or regressions were detected because of the fix.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2680,2020-04-15T14:57:18Z,2020-04-16T07:27:18Z,2020-06-15T19:00:56Z,MERGED,True,11,25,1,https://github.com/renecannao,Fix multistatement error with SET NAMES #2655,1,[],https://github.com/sysown/proxysql/pull/2680,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2680,"Verified with:
<?php
// Connect
$con=mysqli_connect(""127.0.0.1"",""sbtest"",""sbtest"",""test"",6033);

if (!$con)
{
    die(""Connect Error: "" . mysqli_connect_error());
}

$query  = ""set names utf8; SELECT 2 limit 2;"";
$nrows = 0;
if (mysqli_multi_query($con, $query)) {
	do {
	if ($result = $con->store_result()) {
		while ($row = $result->fetch_row()) {
			printf (""%s\n"", $row[0]);
			$nrows++;
		}
		mysqli_free_result($result);
	}
	} while (mysqli_next_result($con));
}
else {
    printf(""query failed: %s\n"", $con->error);
}
if ($nrows == 1) {
	echo(""OK"");
} else {
	echo(""failed"");
}
mysqli_close($con);
?>","Verified with:
<?php
// Connect
$con=mysqli_connect(""127.0.0.1"",""sbtest"",""sbtest"",""test"",6033);

if (!$con)
{
    die(""Connect Error: "" . mysqli_connect_error());
}

$query  = ""set names utf8; SELECT 2 limit 2;"";
$nrows = 0;
if (mysqli_multi_query($con, $query)) {
	do {
	if ($result = $con->store_result()) {
		while ($row = $result->fetch_row()) {
			printf (""%s\n"", $row[0]);
			$nrows++;
		}
		mysqli_free_result($result);
	}
	} while (mysqli_next_result($con));
}
else {
    printf(""query failed: %s\n"", $con->error);
}
if ($nrows == 1) {
	echo(""OK"");
} else {
	echo(""failed"");
}
mysqli_close($con);
?>",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2684,2020-04-16T21:28:43Z,2020-11-02T00:06:54Z,2020-11-02T00:06:54Z,CLOSED,False,174,71,9,https://github.com/bibstha,Add support for CLIENT_DEPRECATE_EOF,7,[],https://github.com/sysown/proxysql/pull/2684,https://github.com/bibstha,1,https://github.com/sysown/proxysql/pull/2684,"Closes #2119
Adds support for CLIENT_DEPRECATE_EOF flag to communicate with clients.
Note:

It only implements this feature for mysql-clients, not yet for ProxySQL Admin, ClickHouseServer and Sqlite3Server. What are ClickHouse and Sqlite3Server used for btw? Curious.

With CLIENT_DEPRECATE_EOF turned on:

For simple MYSQL Queries (Eg: Select * from orders) that return a Resultset

Without FLAG, response looks like
<NumFields><FieldMetadata * n><EOF-1><TextResultSet><EOF-2>
With FLAG
<NumFields><FieldMetadata * n><TextResultSet><OK-EOF>

The EOF packet after FieldMetadata packets are no longer present.
And the EOF packet after ResultSet is replaced by an OK packet with header FE.


For MySQL mysql_stmt_execute Response

Without FLAG, response looks like
<NumFields><FieldMetadata * n><EOF-1><BinaryResultSet><EOF-2>
With FLAG
<NumFields><FieldMetadata * n><BinaryResultSet><OK-EOF>
Note, this is the same as in 1.

For MySQL mysql_stmt_prepare Response

Without FLAG, response looks like
<Ok><Parameter Definition Block><EOF><Column Definition Block><EOF>
With FLAG, response looks like
<Ok><Parameter Definition Block><Column Definition Block>
Just the EOF packets are no longer present.
This PR implements these changes.
More digging can be found here - bibstha/mariadb-connector-c#6
Also worklog for MySQL's implementation on client and server side is explained here: https://dev.mysql.com/worklog/task/?id=7766
Question
I noticed that ProxySQL has issues with following code in client. Seems like stored procedure call with mysql_stmt_execute does not work properly. I'll file a separate issue for that.","Closes #2119
Adds support for CLIENT_DEPRECATE_EOF flag to communicate with clients.
Note:

It only implements this feature for mysql-clients, not yet for ProxySQL Admin, ClickHouseServer and Sqlite3Server. What are ClickHouse and Sqlite3Server used for btw? Curious.

With CLIENT_DEPRECATE_EOF turned on:

For simple MYSQL Queries (Eg: Select * from orders) that return a Resultset

Without FLAG, response looks like
<NumFields><FieldMetadata * n><EOF-1><TextResultSet><EOF-2>
With FLAG
<NumFields><FieldMetadata * n><TextResultSet><OK-EOF>

The EOF packet after FieldMetadata packets are no longer present.
And the EOF packet after ResultSet is replaced by an OK packet with header FE.


For MySQL mysql_stmt_execute Response

Without FLAG, response looks like
<NumFields><FieldMetadata * n><EOF-1><BinaryResultSet><EOF-2>
With FLAG
<NumFields><FieldMetadata * n><BinaryResultSet><OK-EOF>
Note, this is the same as in 1.

For MySQL mysql_stmt_prepare Response

Without FLAG, response looks like
<Ok><Parameter Definition Block><EOF><Column Definition Block><EOF>
With FLAG, response looks like
<Ok><Parameter Definition Block><Column Definition Block>
Just the EOF packets are no longer present.
This PR implements these changes.
More digging can be found here - bibstha/mariadb-connector-c#6
Also worklog for MySQL's implementation on client and server side is explained here: https://dev.mysql.com/worklog/task/?id=7766
Question
I noticed that ProxySQL has issues with following code in client. Seems like stored procedure call with mysql_stmt_execute does not work properly. I'll file a separate issue for that.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2684,2020-04-16T21:28:43Z,2020-11-02T00:06:54Z,2020-11-02T00:06:54Z,CLOSED,False,174,71,9,https://github.com/bibstha,Add support for CLIENT_DEPRECATE_EOF,7,[],https://github.com/sysown/proxysql/pull/2684,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2684#issuecomment-614907557,"Closes #2119
Adds support for CLIENT_DEPRECATE_EOF flag to communicate with clients.
Note:

It only implements this feature for mysql-clients, not yet for ProxySQL Admin, ClickHouseServer and Sqlite3Server. What are ClickHouse and Sqlite3Server used for btw? Curious.

With CLIENT_DEPRECATE_EOF turned on:

For simple MYSQL Queries (Eg: Select * from orders) that return a Resultset

Without FLAG, response looks like
<NumFields><FieldMetadata * n><EOF-1><TextResultSet><EOF-2>
With FLAG
<NumFields><FieldMetadata * n><TextResultSet><OK-EOF>

The EOF packet after FieldMetadata packets are no longer present.
And the EOF packet after ResultSet is replaced by an OK packet with header FE.


For MySQL mysql_stmt_execute Response

Without FLAG, response looks like
<NumFields><FieldMetadata * n><EOF-1><BinaryResultSet><EOF-2>
With FLAG
<NumFields><FieldMetadata * n><BinaryResultSet><OK-EOF>
Note, this is the same as in 1.

For MySQL mysql_stmt_prepare Response

Without FLAG, response looks like
<Ok><Parameter Definition Block><EOF><Column Definition Block><EOF>
With FLAG, response looks like
<Ok><Parameter Definition Block><Column Definition Block>
Just the EOF packets are no longer present.
This PR implements these changes.
More digging can be found here - bibstha/mariadb-connector-c#6
Also worklog for MySQL's implementation on client and server side is explained here: https://dev.mysql.com/worklog/task/?id=7766
Question
I noticed that ProxySQL has issues with following code in client. Seems like stored procedure call with mysql_stmt_execute does not work properly. I'll file a separate issue for that.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2684,2020-04-16T21:28:43Z,2020-11-02T00:06:54Z,2020-11-02T00:06:54Z,CLOSED,False,174,71,9,https://github.com/bibstha,Add support for CLIENT_DEPRECATE_EOF,7,[],https://github.com/sysown/proxysql/pull/2684,https://github.com/bibstha,3,https://github.com/sysown/proxysql/pull/2684#issuecomment-616793934,"Closes #2119
Adds support for CLIENT_DEPRECATE_EOF flag to communicate with clients.
Note:

It only implements this feature for mysql-clients, not yet for ProxySQL Admin, ClickHouseServer and Sqlite3Server. What are ClickHouse and Sqlite3Server used for btw? Curious.

With CLIENT_DEPRECATE_EOF turned on:

For simple MYSQL Queries (Eg: Select * from orders) that return a Resultset

Without FLAG, response looks like
<NumFields><FieldMetadata * n><EOF-1><TextResultSet><EOF-2>
With FLAG
<NumFields><FieldMetadata * n><TextResultSet><OK-EOF>

The EOF packet after FieldMetadata packets are no longer present.
And the EOF packet after ResultSet is replaced by an OK packet with header FE.


For MySQL mysql_stmt_execute Response

Without FLAG, response looks like
<NumFields><FieldMetadata * n><EOF-1><BinaryResultSet><EOF-2>
With FLAG
<NumFields><FieldMetadata * n><BinaryResultSet><OK-EOF>
Note, this is the same as in 1.

For MySQL mysql_stmt_prepare Response

Without FLAG, response looks like
<Ok><Parameter Definition Block><EOF><Column Definition Block><EOF>
With FLAG, response looks like
<Ok><Parameter Definition Block><Column Definition Block>
Just the EOF packets are no longer present.
This PR implements these changes.
More digging can be found here - bibstha/mariadb-connector-c#6
Also worklog for MySQL's implementation on client and server side is explained here: https://dev.mysql.com/worklog/task/?id=7766
Question
I noticed that ProxySQL has issues with following code in client. Seems like stored procedure call with mysql_stmt_execute does not work properly. I'll file a separate issue for that.","@renecannao the change here only affects mysql connection. I'm not sure if the changes are required in ClickHouse, SQLite or other parts of ProxySQL which I'm very less familiar with.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2684,2020-04-16T21:28:43Z,2020-11-02T00:06:54Z,2020-11-02T00:06:54Z,CLOSED,False,174,71,9,https://github.com/bibstha,Add support for CLIENT_DEPRECATE_EOF,7,[],https://github.com/sysown/proxysql/pull/2684,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/2684#issuecomment-624247005,"Closes #2119
Adds support for CLIENT_DEPRECATE_EOF flag to communicate with clients.
Note:

It only implements this feature for mysql-clients, not yet for ProxySQL Admin, ClickHouseServer and Sqlite3Server. What are ClickHouse and Sqlite3Server used for btw? Curious.

With CLIENT_DEPRECATE_EOF turned on:

For simple MYSQL Queries (Eg: Select * from orders) that return a Resultset

Without FLAG, response looks like
<NumFields><FieldMetadata * n><EOF-1><TextResultSet><EOF-2>
With FLAG
<NumFields><FieldMetadata * n><TextResultSet><OK-EOF>

The EOF packet after FieldMetadata packets are no longer present.
And the EOF packet after ResultSet is replaced by an OK packet with header FE.


For MySQL mysql_stmt_execute Response

Without FLAG, response looks like
<NumFields><FieldMetadata * n><EOF-1><BinaryResultSet><EOF-2>
With FLAG
<NumFields><FieldMetadata * n><BinaryResultSet><OK-EOF>
Note, this is the same as in 1.

For MySQL mysql_stmt_prepare Response

Without FLAG, response looks like
<Ok><Parameter Definition Block><EOF><Column Definition Block><EOF>
With FLAG, response looks like
<Ok><Parameter Definition Block><Column Definition Block>
Just the EOF packets are no longer present.
This PR implements these changes.
More digging can be found here - bibstha/mariadb-connector-c#6
Also worklog for MySQL's implementation on client and server side is explained here: https://dev.mysql.com/worklog/task/?id=7766
Question
I noticed that ProxySQL has issues with following code in client. Seems like stored procedure call with mysql_stmt_execute does not work properly. I'll file a separate issue for that.",add to whitelist,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2684,2020-04-16T21:28:43Z,2020-11-02T00:06:54Z,2020-11-02T00:06:54Z,CLOSED,False,174,71,9,https://github.com/bibstha,Add support for CLIENT_DEPRECATE_EOF,7,[],https://github.com/sysown/proxysql/pull/2684,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/2684#issuecomment-624247096,"Closes #2119
Adds support for CLIENT_DEPRECATE_EOF flag to communicate with clients.
Note:

It only implements this feature for mysql-clients, not yet for ProxySQL Admin, ClickHouseServer and Sqlite3Server. What are ClickHouse and Sqlite3Server used for btw? Curious.

With CLIENT_DEPRECATE_EOF turned on:

For simple MYSQL Queries (Eg: Select * from orders) that return a Resultset

Without FLAG, response looks like
<NumFields><FieldMetadata * n><EOF-1><TextResultSet><EOF-2>
With FLAG
<NumFields><FieldMetadata * n><TextResultSet><OK-EOF>

The EOF packet after FieldMetadata packets are no longer present.
And the EOF packet after ResultSet is replaced by an OK packet with header FE.


For MySQL mysql_stmt_execute Response

Without FLAG, response looks like
<NumFields><FieldMetadata * n><EOF-1><BinaryResultSet><EOF-2>
With FLAG
<NumFields><FieldMetadata * n><BinaryResultSet><OK-EOF>
Note, this is the same as in 1.

For MySQL mysql_stmt_prepare Response

Without FLAG, response looks like
<Ok><Parameter Definition Block><EOF><Column Definition Block><EOF>
With FLAG, response looks like
<Ok><Parameter Definition Block><Column Definition Block>
Just the EOF packets are no longer present.
This PR implements these changes.
More digging can be found here - bibstha/mariadb-connector-c#6
Also worklog for MySQL's implementation on client and server side is explained here: https://dev.mysql.com/worklog/task/?id=7766
Question
I noticed that ProxySQL has issues with following code in client. Seems like stored procedure call with mysql_stmt_execute does not work properly. I'll file a separate issue for that.",ok to test,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2684,2020-04-16T21:28:43Z,2020-11-02T00:06:54Z,2020-11-02T00:06:54Z,CLOSED,False,174,71,9,https://github.com/bibstha,Add support for CLIENT_DEPRECATE_EOF,7,[],https://github.com/sysown/proxysql/pull/2684,https://github.com/renecannao,6,https://github.com/sysown/proxysql/pull/2684#issuecomment-624420506,"Closes #2119
Adds support for CLIENT_DEPRECATE_EOF flag to communicate with clients.
Note:

It only implements this feature for mysql-clients, not yet for ProxySQL Admin, ClickHouseServer and Sqlite3Server. What are ClickHouse and Sqlite3Server used for btw? Curious.

With CLIENT_DEPRECATE_EOF turned on:

For simple MYSQL Queries (Eg: Select * from orders) that return a Resultset

Without FLAG, response looks like
<NumFields><FieldMetadata * n><EOF-1><TextResultSet><EOF-2>
With FLAG
<NumFields><FieldMetadata * n><TextResultSet><OK-EOF>

The EOF packet after FieldMetadata packets are no longer present.
And the EOF packet after ResultSet is replaced by an OK packet with header FE.


For MySQL mysql_stmt_execute Response

Without FLAG, response looks like
<NumFields><FieldMetadata * n><EOF-1><BinaryResultSet><EOF-2>
With FLAG
<NumFields><FieldMetadata * n><BinaryResultSet><OK-EOF>
Note, this is the same as in 1.

For MySQL mysql_stmt_prepare Response

Without FLAG, response looks like
<Ok><Parameter Definition Block><EOF><Column Definition Block><EOF>
With FLAG, response looks like
<Ok><Parameter Definition Block><Column Definition Block>
Just the EOF packets are no longer present.
This PR implements these changes.
More digging can be found here - bibstha/mariadb-connector-c#6
Also worklog for MySQL's implementation on client and server side is explained here: https://dev.mysql.com/worklog/task/?id=7766
Question
I noticed that ProxySQL has issues with following code in client. Seems like stored procedure call with mysql_stmt_execute does not work properly. I'll file a separate issue for that.",changed base to 2.0.12,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2684,2020-04-16T21:28:43Z,2020-11-02T00:06:54Z,2020-11-02T00:06:54Z,CLOSED,False,174,71,9,https://github.com/bibstha,Add support for CLIENT_DEPRECATE_EOF,7,[],https://github.com/sysown/proxysql/pull/2684,https://github.com/renecannao,7,https://github.com/sysown/proxysql/pull/2684#issuecomment-624420556,"Closes #2119
Adds support for CLIENT_DEPRECATE_EOF flag to communicate with clients.
Note:

It only implements this feature for mysql-clients, not yet for ProxySQL Admin, ClickHouseServer and Sqlite3Server. What are ClickHouse and Sqlite3Server used for btw? Curious.

With CLIENT_DEPRECATE_EOF turned on:

For simple MYSQL Queries (Eg: Select * from orders) that return a Resultset

Without FLAG, response looks like
<NumFields><FieldMetadata * n><EOF-1><TextResultSet><EOF-2>
With FLAG
<NumFields><FieldMetadata * n><TextResultSet><OK-EOF>

The EOF packet after FieldMetadata packets are no longer present.
And the EOF packet after ResultSet is replaced by an OK packet with header FE.


For MySQL mysql_stmt_execute Response

Without FLAG, response looks like
<NumFields><FieldMetadata * n><EOF-1><BinaryResultSet><EOF-2>
With FLAG
<NumFields><FieldMetadata * n><BinaryResultSet><OK-EOF>
Note, this is the same as in 1.

For MySQL mysql_stmt_prepare Response

Without FLAG, response looks like
<Ok><Parameter Definition Block><EOF><Column Definition Block><EOF>
With FLAG, response looks like
<Ok><Parameter Definition Block><Column Definition Block>
Just the EOF packets are no longer present.
This PR implements these changes.
More digging can be found here - bibstha/mariadb-connector-c#6
Also worklog for MySQL's implementation on client and server side is explained here: https://dev.mysql.com/worklog/task/?id=7766
Question
I noticed that ProxySQL has issues with following code in client. Seems like stored procedure call with mysql_stmt_execute does not work properly. I'll file a separate issue for that.",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2684,2020-04-16T21:28:43Z,2020-11-02T00:06:54Z,2020-11-02T00:06:54Z,CLOSED,False,174,71,9,https://github.com/bibstha,Add support for CLIENT_DEPRECATE_EOF,7,[],https://github.com/sysown/proxysql/pull/2684,https://github.com/renecannao,8,https://github.com/sysown/proxysql/pull/2684#issuecomment-626916106,"Closes #2119
Adds support for CLIENT_DEPRECATE_EOF flag to communicate with clients.
Note:

It only implements this feature for mysql-clients, not yet for ProxySQL Admin, ClickHouseServer and Sqlite3Server. What are ClickHouse and Sqlite3Server used for btw? Curious.

With CLIENT_DEPRECATE_EOF turned on:

For simple MYSQL Queries (Eg: Select * from orders) that return a Resultset

Without FLAG, response looks like
<NumFields><FieldMetadata * n><EOF-1><TextResultSet><EOF-2>
With FLAG
<NumFields><FieldMetadata * n><TextResultSet><OK-EOF>

The EOF packet after FieldMetadata packets are no longer present.
And the EOF packet after ResultSet is replaced by an OK packet with header FE.


For MySQL mysql_stmt_execute Response

Without FLAG, response looks like
<NumFields><FieldMetadata * n><EOF-1><BinaryResultSet><EOF-2>
With FLAG
<NumFields><FieldMetadata * n><BinaryResultSet><OK-EOF>
Note, this is the same as in 1.

For MySQL mysql_stmt_prepare Response

Without FLAG, response looks like
<Ok><Parameter Definition Block><EOF><Column Definition Block><EOF>
With FLAG, response looks like
<Ok><Parameter Definition Block><Column Definition Block>
Just the EOF packets are no longer present.
This PR implements these changes.
More digging can be found here - bibstha/mariadb-connector-c#6
Also worklog for MySQL's implementation on client and server side is explained here: https://dev.mysql.com/worklog/task/?id=7766
Question
I noticed that ProxySQL has issues with following code in client. Seems like stored procedure call with mysql_stmt_execute does not work properly. I'll file a separate issue for that.","Hi @bibstha , thank you again for the PR.
I have few comments and questions:
Why did you made commit 7f5fc68 ? I believe that using the default value seems to be a better approach, especially to minimize the changes.
Hardcoding CLIENT_DEPRECATE_EOF in commit 555ff4c is not the best approach. The feature should be configurable, especially to avoid compatibility issues. A better approach is to have it as a global variable: see the example for CLIENT_SSL in commit 5863d9c.
Although I didn't try it yet, this feature should break query cache if there is a mix of clients using or not using CLIENT_DEPRECATE_EOF , therefore we need to fix that too.
Furthermore, we made the decision to not add any new feature in 2.0 , but only bug fixes.
New features should go into 2.1 .
If this feature didn't have potential compatibility issues, it could have been an exception and be added in 2.0. But I suspect it is an important feature with possible drawbacks: what do you think?",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2684,2020-04-16T21:28:43Z,2020-11-02T00:06:54Z,2020-11-02T00:06:54Z,CLOSED,False,174,71,9,https://github.com/bibstha,Add support for CLIENT_DEPRECATE_EOF,7,[],https://github.com/sysown/proxysql/pull/2684,https://github.com/bibstha,9,https://github.com/sysown/proxysql/pull/2684#issuecomment-628839806,"Closes #2119
Adds support for CLIENT_DEPRECATE_EOF flag to communicate with clients.
Note:

It only implements this feature for mysql-clients, not yet for ProxySQL Admin, ClickHouseServer and Sqlite3Server. What are ClickHouse and Sqlite3Server used for btw? Curious.

With CLIENT_DEPRECATE_EOF turned on:

For simple MYSQL Queries (Eg: Select * from orders) that return a Resultset

Without FLAG, response looks like
<NumFields><FieldMetadata * n><EOF-1><TextResultSet><EOF-2>
With FLAG
<NumFields><FieldMetadata * n><TextResultSet><OK-EOF>

The EOF packet after FieldMetadata packets are no longer present.
And the EOF packet after ResultSet is replaced by an OK packet with header FE.


For MySQL mysql_stmt_execute Response

Without FLAG, response looks like
<NumFields><FieldMetadata * n><EOF-1><BinaryResultSet><EOF-2>
With FLAG
<NumFields><FieldMetadata * n><BinaryResultSet><OK-EOF>
Note, this is the same as in 1.

For MySQL mysql_stmt_prepare Response

Without FLAG, response looks like
<Ok><Parameter Definition Block><EOF><Column Definition Block><EOF>
With FLAG, response looks like
<Ok><Parameter Definition Block><Column Definition Block>
Just the EOF packets are no longer present.
This PR implements these changes.
More digging can be found here - bibstha/mariadb-connector-c#6
Also worklog for MySQL's implementation on client and server side is explained here: https://dev.mysql.com/worklog/task/?id=7766
Question
I noticed that ProxySQL has issues with following code in client. Seems like stored procedure call with mysql_stmt_execute does not work properly. I'll file a separate issue for that.","Hi @renecannao

Why did you made commit 7f5fc68 ? I believe that using the default value seems to be a better approach, especially to minimize the changes.

In an internal review feedback, I was told that the function already takes around ~10 parameters and adding a new one with default parameter makes it harder to look into all the places where the change might be necessary. And that in future, if a new parameter needs to be added, it gets difficult. Which I think is a good feedback.

Hardcoding CLIENT_DEPRECATE_EOF in commit 555ff4c is not the best approach. The feature should be configurable, especially to avoid compatibility issues. A better approach is to have it as a global variable: see the example for CLIENT_SSL in commit 5863d9c.

Hum good point. I can get this fixed.

Although I didn't try it yet, this feature should break query cache if there is a mix of clients using or not using CLIENT_DEPRECATE_EOF , therefore we need to fix that too.

Can you point where in code this might cause problem? I can dig into it too.

Furthermore, we made the decision to not add any new feature in 2.0 , but only bug fixes.
New features should go into 2.1 .
If this feature didn't have potential compatibility issues, it could have been an exception and be added in 2.0. But I suspect it is an important feature with possible drawbacks: what do you think?

Do you have a general idea when you'll get to 2.1? There are really no breaking changes so we can have it in 2.0 as well if 2.1 will take long time.
We've been able to run ProxySQL with these commits locally without any issues so the transition has been pretty smooth but we don't use mixed clients as you mentioned in your feedback.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2684,2020-04-16T21:28:43Z,2020-11-02T00:06:54Z,2020-11-02T00:06:54Z,CLOSED,False,174,71,9,https://github.com/bibstha,Add support for CLIENT_DEPRECATE_EOF,7,[],https://github.com/sysown/proxysql/pull/2684,https://github.com/bibstha,10,https://github.com/sysown/proxysql/pull/2684#issuecomment-655637131,"Closes #2119
Adds support for CLIENT_DEPRECATE_EOF flag to communicate with clients.
Note:

It only implements this feature for mysql-clients, not yet for ProxySQL Admin, ClickHouseServer and Sqlite3Server. What are ClickHouse and Sqlite3Server used for btw? Curious.

With CLIENT_DEPRECATE_EOF turned on:

For simple MYSQL Queries (Eg: Select * from orders) that return a Resultset

Without FLAG, response looks like
<NumFields><FieldMetadata * n><EOF-1><TextResultSet><EOF-2>
With FLAG
<NumFields><FieldMetadata * n><TextResultSet><OK-EOF>

The EOF packet after FieldMetadata packets are no longer present.
And the EOF packet after ResultSet is replaced by an OK packet with header FE.


For MySQL mysql_stmt_execute Response

Without FLAG, response looks like
<NumFields><FieldMetadata * n><EOF-1><BinaryResultSet><EOF-2>
With FLAG
<NumFields><FieldMetadata * n><BinaryResultSet><OK-EOF>
Note, this is the same as in 1.

For MySQL mysql_stmt_prepare Response

Without FLAG, response looks like
<Ok><Parameter Definition Block><EOF><Column Definition Block><EOF>
With FLAG, response looks like
<Ok><Parameter Definition Block><Column Definition Block>
Just the EOF packets are no longer present.
This PR implements these changes.
More digging can be found here - bibstha/mariadb-connector-c#6
Also worklog for MySQL's implementation on client and server side is explained here: https://dev.mysql.com/worklog/task/?id=7766
Question
I noticed that ProxySQL has issues with following code in client. Seems like stored procedure call with mysql_stmt_execute does not work properly. I'll file a separate issue for that.","@renecannao

Hardcoding CLIENT_DEPRECATE_EOF in commit 555ff4c is not the best approach. The feature should be configurable, especially to avoid compatibility issues. A better approach is to have it as a global variable: see the example for CLIENT_SSL in commit 5863d9c.




Client CLIENT_DEPRECATE_EOF
ProxySQL behavior




supported
ProxySQL responds in new way


not supported
ProxySQL responds in existing old way



I want to understand the reason why the feature itself should be made configurable?
mysql server, mysql-client all have it hardcoded and you cannot turn it off.
Is the configuration helpful in case clients face some sort of bugs?
Also I'd love to move this PR forward. What would be the next steps? Please help.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2695,2020-04-23T08:38:33Z,2020-04-30T20:15:47Z,2020-04-30T20:17:33Z,CLOSED,False,597,285,27,https://github.com/renecannao,Do not cache routing metadata for COM_STMT_EXECUTE,20,[],https://github.com/sysown/proxysql/pull/2695,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2695,"From 1.3.0 till 2.0.x , when COM_STMT_PREPARE is executed and Query Processor is executed, metadata are stored in MySQL_STMT_Global_info().
These metadata include routing information.
Is a prepared statement is prepared on a specific hostgroup, it will always be executed on the same hostgroup.
This causes negative consequences, like the one reported in issue #2691 .
This commit:

remove hostgroup_id from MySQL_STMT_Global_info() and other metadata
Query Processor is called also during COM_STMT_EXECUTE
removes hostgroup from table stats_mysql_prepared_statements_info
Query Processor do not perform any query rewrite ruding COM_STMT_EXECUTE","From 1.3.0 till 2.0.x , when COM_STMT_PREPARE is executed and Query Processor is executed, metadata are stored in MySQL_STMT_Global_info().
These metadata include routing information.
Is a prepared statement is prepared on a specific hostgroup, it will always be executed on the same hostgroup.
This causes negative consequences, like the one reported in issue #2691 .
This commit:

remove hostgroup_id from MySQL_STMT_Global_info() and other metadata
Query Processor is called also during COM_STMT_EXECUTE
removes hostgroup from table stats_mysql_prepared_statements_info
Query Processor do not perform any query rewrite ruding COM_STMT_EXECUTE",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2698,2020-04-24T14:42:44Z,,2020-06-08T18:38:15Z,OPEN,False,137,29,10,https://github.com/saunderst,Consistent reads from db replicas using unit-of-work identifiers,1,[],https://github.com/sysown/proxysql/pull/2698,https://github.com/saunderst,1,https://github.com/sysown/proxysql/pull/2698,"This provides a way of ensuring that a series of database requests will be forwarded to one server as long as a user-defined unit-of-work identifier (or a series of such identifiers) remains the same across the series of requests.  This is done by using the identifier(s), received via query comment fields, to generate a numeric hash which is ultimately used to index into the list of configured servers within a hostgroup.
The identifier names are defined by setting the unit_of_work_identifiers global variable to a comma-delimited string containing one or more identifier names, e.g. ""request_id,job_id"".  Any of these names can then be used to declare unique identifiers to consistently route requests to a single server without any need for the application to be aware of the available servers.
Also, the delimiters between comment fields and within key-value pairs have been made configurable for all query comment fields using the global variables query_parser_token_delimiters and query_parser_key_value_delimiters.  If not specified, these variables default to the standard ; and = delimiters.
@renecannao","This provides a way of ensuring that a series of database requests will be forwarded to one server as long as a user-defined unit-of-work identifier (or a series of such identifiers) remains the same across the series of requests.  This is done by using the identifier(s), received via query comment fields, to generate a numeric hash which is ultimately used to index into the list of configured servers within a hostgroup.
The identifier names are defined by setting the unit_of_work_identifiers global variable to a comma-delimited string containing one or more identifier names, e.g. ""request_id,job_id"".  Any of these names can then be used to declare unique identifiers to consistently route requests to a single server without any need for the application to be aware of the available servers.
Also, the delimiters between comment fields and within key-value pairs have been made configurable for all query comment fields using the global variables query_parser_token_delimiters and query_parser_key_value_delimiters.  If not specified, these variables default to the standard ; and = delimiters.
@renecannao",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2698,2020-04-24T14:42:44Z,,2020-06-08T18:38:15Z,OPEN,False,137,29,10,https://github.com/saunderst,Consistent reads from db replicas using unit-of-work identifiers,1,[],https://github.com/sysown/proxysql/pull/2698,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2698#issuecomment-619056183,"This provides a way of ensuring that a series of database requests will be forwarded to one server as long as a user-defined unit-of-work identifier (or a series of such identifiers) remains the same across the series of requests.  This is done by using the identifier(s), received via query comment fields, to generate a numeric hash which is ultimately used to index into the list of configured servers within a hostgroup.
The identifier names are defined by setting the unit_of_work_identifiers global variable to a comma-delimited string containing one or more identifier names, e.g. ""request_id,job_id"".  Any of these names can then be used to declare unique identifiers to consistently route requests to a single server without any need for the application to be aware of the available servers.
Also, the delimiters between comment fields and within key-value pairs have been made configurable for all query comment fields using the global variables query_parser_token_delimiters and query_parser_key_value_delimiters.  If not specified, these variables default to the standard ; and = delimiters.
@renecannao",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2698,2020-04-24T14:42:44Z,,2020-06-08T18:38:15Z,OPEN,False,137,29,10,https://github.com/saunderst,Consistent reads from db replicas using unit-of-work identifiers,1,[],https://github.com/sysown/proxysql/pull/2698,https://github.com/kirs,3,https://github.com/sysown/proxysql/pull/2698#issuecomment-632001191,"This provides a way of ensuring that a series of database requests will be forwarded to one server as long as a user-defined unit-of-work identifier (or a series of such identifiers) remains the same across the series of requests.  This is done by using the identifier(s), received via query comment fields, to generate a numeric hash which is ultimately used to index into the list of configured servers within a hostgroup.
The identifier names are defined by setting the unit_of_work_identifiers global variable to a comma-delimited string containing one or more identifier names, e.g. ""request_id,job_id"".  Any of these names can then be used to declare unique identifiers to consistently route requests to a single server without any need for the application to be aware of the available servers.
Also, the delimiters between comment fields and within key-value pairs have been made configurable for all query comment fields using the global variables query_parser_token_delimiters and query_parser_key_value_delimiters.  If not specified, these variables default to the standard ; and = delimiters.
@renecannao",@renecannao is this something you might take a look? We've been working on this internally on this internally at Shopify and would appreciate your feedback on this patch. Thanks!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2698,2020-04-24T14:42:44Z,,2020-06-08T18:38:15Z,OPEN,False,137,29,10,https://github.com/saunderst,Consistent reads from db replicas using unit-of-work identifiers,1,[],https://github.com/sysown/proxysql/pull/2698,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/2698#issuecomment-633132060,"This provides a way of ensuring that a series of database requests will be forwarded to one server as long as a user-defined unit-of-work identifier (or a series of such identifiers) remains the same across the series of requests.  This is done by using the identifier(s), received via query comment fields, to generate a numeric hash which is ultimately used to index into the list of configured servers within a hostgroup.
The identifier names are defined by setting the unit_of_work_identifiers global variable to a comma-delimited string containing one or more identifier names, e.g. ""request_id,job_id"".  Any of these names can then be used to declare unique identifiers to consistently route requests to a single server without any need for the application to be aware of the available servers.
Also, the delimiters between comment fields and within key-value pairs have been made configurable for all query comment fields using the global variables query_parser_token_delimiters and query_parser_key_value_delimiters.  If not specified, these variables default to the standard ; and = delimiters.
@renecannao",add to whitelist,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2698,2020-04-24T14:42:44Z,,2020-06-08T18:38:15Z,OPEN,False,137,29,10,https://github.com/saunderst,Consistent reads from db replicas using unit-of-work identifiers,1,[],https://github.com/sysown/proxysql/pull/2698,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/2698#issuecomment-633132084,"This provides a way of ensuring that a series of database requests will be forwarded to one server as long as a user-defined unit-of-work identifier (or a series of such identifiers) remains the same across the series of requests.  This is done by using the identifier(s), received via query comment fields, to generate a numeric hash which is ultimately used to index into the list of configured servers within a hostgroup.
The identifier names are defined by setting the unit_of_work_identifiers global variable to a comma-delimited string containing one or more identifier names, e.g. ""request_id,job_id"".  Any of these names can then be used to declare unique identifiers to consistently route requests to a single server without any need for the application to be aware of the available servers.
Also, the delimiters between comment fields and within key-value pairs have been made configurable for all query comment fields using the global variables query_parser_token_delimiters and query_parser_key_value_delimiters.  If not specified, these variables default to the standard ; and = delimiters.
@renecannao",ok to test,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2698,2020-04-24T14:42:44Z,,2020-06-08T18:38:15Z,OPEN,False,137,29,10,https://github.com/saunderst,Consistent reads from db replicas using unit-of-work identifiers,1,[],https://github.com/sysown/proxysql/pull/2698,https://github.com/renecannao,6,https://github.com/sysown/proxysql/pull/2698#issuecomment-633162494,"This provides a way of ensuring that a series of database requests will be forwarded to one server as long as a user-defined unit-of-work identifier (or a series of such identifiers) remains the same across the series of requests.  This is done by using the identifier(s), received via query comment fields, to generate a numeric hash which is ultimately used to index into the list of configured servers within a hostgroup.
The identifier names are defined by setting the unit_of_work_identifiers global variable to a comma-delimited string containing one or more identifier names, e.g. ""request_id,job_id"".  Any of these names can then be used to declare unique identifiers to consistently route requests to a single server without any need for the application to be aware of the available servers.
Also, the delimiters between comment fields and within key-value pairs have been made configurable for all query comment fields using the global variables query_parser_token_delimiters and query_parser_key_value_delimiters.  If not specified, these variables default to the standard ; and = delimiters.
@renecannao","Because the cleanup of get_random_MySrvC() doesn't only remove blocks of dead code but also changes some spacing, reviewing the correctness of it didn't seem trivial.
For example, I see variables related to TEST_AURORA completely removed.
I wrote a new PR for just cleaning up get_random_MySrvC() #2823 .
Can you please make a new PR only related to the new feature?
Something incorrect I noticed in this pull request is that it doesn't perform any change in MySQL_Thread::get_MyConn_local() .
Maybe this is an easy fix tho: if server_hash is not 0, calls to MySQL_Thread::get_MyConn_local() can be skipped.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2698,2020-04-24T14:42:44Z,,2020-06-08T18:38:15Z,OPEN,False,137,29,10,https://github.com/saunderst,Consistent reads from db replicas using unit-of-work identifiers,1,[],https://github.com/sysown/proxysql/pull/2698,https://github.com/saunderst,7,https://github.com/sysown/proxysql/pull/2698#issuecomment-633739008,"This provides a way of ensuring that a series of database requests will be forwarded to one server as long as a user-defined unit-of-work identifier (or a series of such identifiers) remains the same across the series of requests.  This is done by using the identifier(s), received via query comment fields, to generate a numeric hash which is ultimately used to index into the list of configured servers within a hostgroup.
The identifier names are defined by setting the unit_of_work_identifiers global variable to a comma-delimited string containing one or more identifier names, e.g. ""request_id,job_id"".  Any of these names can then be used to declare unique identifiers to consistently route requests to a single server without any need for the application to be aware of the available servers.
Also, the delimiters between comment fields and within key-value pairs have been made configurable for all query comment fields using the global variables query_parser_token_delimiters and query_parser_key_value_delimiters.  If not specified, these variables default to the standard ; and = delimiters.
@renecannao","Because the cleanup of get_random_MySrvC() doesn't only remove blocks of dead code but also changes some spacing, reviewing the correctness of it didn't seem trivial.
For example, I see variables related to TEST_AURORA completely removed.
I wrote a new PR for just cleaning up get_random_MySrvC() #2823 .
Can you please make a new PR only related to the new feature?
Something incorrect I noticed in this pull request is that it doesn't perform any change in MySQL_Thread::get_MyConn_local() .
Maybe this is an easy fix tho: if server_hash is not 0, calls to MySQL_Thread::get_MyConn_local() can be skipped.

@renecannao
Thanks, Ren√©.  I've rebased on your version, so now all the changes are related to the new feature.
It looks as though to change MySQL_Thread::get_MyConn_local() correctly, we'd have to instantiate the MySrvList class and reproduce the hash-based selection logic before checking against the cached connections.  The easy fix you suggested was much easier!  I'm curious, though:  Why did my tests never fail?  Is connection caching disabled by default?",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2698,2020-04-24T14:42:44Z,,2020-06-08T18:38:15Z,OPEN,False,137,29,10,https://github.com/saunderst,Consistent reads from db replicas using unit-of-work identifiers,1,[],https://github.com/sysown/proxysql/pull/2698,https://github.com/renecannao,8,https://github.com/sysown/proxysql/pull/2698#issuecomment-633743266,"This provides a way of ensuring that a series of database requests will be forwarded to one server as long as a user-defined unit-of-work identifier (or a series of such identifiers) remains the same across the series of requests.  This is done by using the identifier(s), received via query comment fields, to generate a numeric hash which is ultimately used to index into the list of configured servers within a hostgroup.
The identifier names are defined by setting the unit_of_work_identifiers global variable to a comma-delimited string containing one or more identifier names, e.g. ""request_id,job_id"".  Any of these names can then be used to declare unique identifiers to consistently route requests to a single server without any need for the application to be aware of the available servers.
Also, the delimiters between comment fields and within key-value pairs have been made configurable for all query comment fields using the global variables query_parser_token_delimiters and query_parser_key_value_delimiters.  If not specified, these variables default to the standard ; and = delimiters.
@renecannao","Hi @saunderst , thank you for rebasing!
I will review.
To answer your questions:

It looks as though to change MySQL_Thread::get_MyConn_local() correctly, we'd have to instantiate the MySrvList class and reproduce the hash-based selection logic before checking against the cached connections.

To instantiate the MySrvList you need to access the global connection pool. Accessing the global connection pool (protected by a mutex) is exactly what per-thread connection caching tries to avoid, therefore accessing MySrvList will void the benefit of per-thread connection caching.

I'm curious, though: Why did my tests never fail? Is connection caching disabled by default?

Connections caching is enabled by default, and there is no way to disable it.
Connections stay in per-thread connection cache for a very short period of time: every MySQL_Thread works returns the connections in the cache back into the global connection pool as soon as it finishes processing sessions in every iteration of the main loop:
https://github.com/sysown/proxysql/blob/v2.0.13/lib/MySQL_Thread.cpp#L4021-L4023
In other words, the per-thread connections cache becomes useful only at very high concurrency and very fast requests: in this scenario it is likely that a backend connection freed is immediately used by another session, within the same iteration of the MySQL_Thread main loop.
You can have a look at these 2 variables:
SELECT * FROM stats_mysql_global WHERE variable_name IN ('ConnPool_get_conn_immediate','ConnPool_get_conn_success');

ConnPool_get_conn_immediate counts how many times a connection was retrieved from the per-thread connection cache.
Depending from your workload, it is possible that per-thread connection cache is never/rarely used.",True,{'THUMBS_UP': ['https://github.com/saunderst']}
sysown/proxysql,https://github.com/sysown/proxysql,2698,2020-04-24T14:42:44Z,,2020-06-08T18:38:15Z,OPEN,False,137,29,10,https://github.com/saunderst,Consistent reads from db replicas using unit-of-work identifiers,1,[],https://github.com/sysown/proxysql/pull/2698,https://github.com/saunderst,9,https://github.com/sysown/proxysql/pull/2698#issuecomment-640801588,"This provides a way of ensuring that a series of database requests will be forwarded to one server as long as a user-defined unit-of-work identifier (or a series of such identifiers) remains the same across the series of requests.  This is done by using the identifier(s), received via query comment fields, to generate a numeric hash which is ultimately used to index into the list of configured servers within a hostgroup.
The identifier names are defined by setting the unit_of_work_identifiers global variable to a comma-delimited string containing one or more identifier names, e.g. ""request_id,job_id"".  Any of these names can then be used to declare unique identifiers to consistently route requests to a single server without any need for the application to be aware of the available servers.
Also, the delimiters between comment fields and within key-value pairs have been made configurable for all query comment fields using the global variables query_parser_token_delimiters and query_parser_key_value_delimiters.  If not specified, these variables default to the standard ; and = delimiters.
@renecannao","Hi @renecannao.  When do you think you might have a chance to look at this?  I'm especially interested to know whether the simple approach to skipping connection caching still seems to make sense, since I have not implemented it in our fork yet.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2699,2020-04-25T11:01:33Z,2020-05-08T09:22:17Z,2020-05-08T09:22:17Z,CLOSED,False,467,130,28,https://github.com/JavierJF,"Implement feature requests: 2660, 2661, 2662, 2663, 1377",27,[],https://github.com/sysown/proxysql/pull/2699,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/2699,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2699,2020-04-25T11:01:33Z,2020-05-08T09:22:17Z,2020-05-08T09:22:17Z,CLOSED,False,467,130,28,https://github.com/JavierJF,"Implement feature requests: 2660, 2661, 2662, 2663, 1377",27,[],https://github.com/sysown/proxysql/pull/2699,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/2699#issuecomment-619408121,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2699,2020-04-25T11:01:33Z,2020-05-08T09:22:17Z,2020-05-08T09:22:17Z,CLOSED,False,467,130,28,https://github.com/JavierJF,"Implement feature requests: 2660, 2661, 2662, 2663, 1377",27,[],https://github.com/sysown/proxysql/pull/2699,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2699#issuecomment-619419446,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2699,2020-04-25T11:01:33Z,2020-05-08T09:22:17Z,2020-05-08T09:22:17Z,CLOSED,False,467,130,28,https://github.com/JavierJF,"Implement feature requests: 2660, 2661, 2662, 2663, 1377",27,[],https://github.com/sysown/proxysql/pull/2699,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/2699#issuecomment-619421822,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2699,2020-04-25T11:01:33Z,2020-05-08T09:22:17Z,2020-05-08T09:22:17Z,CLOSED,False,467,130,28,https://github.com/JavierJF,"Implement feature requests: 2660, 2661, 2662, 2663, 1377",27,[],https://github.com/sysown/proxysql/pull/2699,https://github.com/pondix,5,https://github.com/sysown/proxysql/pull/2699#issuecomment-619436790,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2699,2020-04-25T11:01:33Z,2020-05-08T09:22:17Z,2020-05-08T09:22:17Z,CLOSED,False,467,130,28,https://github.com/JavierJF,"Implement feature requests: 2660, 2661, 2662, 2663, 1377",27,[],https://github.com/sysown/proxysql/pull/2699,https://github.com/alpes214,6,https://github.com/sysown/proxysql/pull/2699#issuecomment-619984629,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2699,2020-04-25T11:01:33Z,2020-05-08T09:22:17Z,2020-05-08T09:22:17Z,CLOSED,False,467,130,28,https://github.com/JavierJF,"Implement feature requests: 2660, 2661, 2662, 2663, 1377",27,[],https://github.com/sysown/proxysql/pull/2699,https://github.com/renecannao,7,https://github.com/sysown/proxysql/pull/2699#issuecomment-623680366,,"@JavierJF : please create a PR with only the commits related to query digest.
Thanks",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2699,2020-04-25T11:01:33Z,2020-05-08T09:22:17Z,2020-05-08T09:22:17Z,CLOSED,False,467,130,28,https://github.com/JavierJF,"Implement feature requests: 2660, 2661, 2662, 2663, 1377",27,[],https://github.com/sysown/proxysql/pull/2699,https://github.com/JavierJF,8,https://github.com/sysown/proxysql/pull/2699#issuecomment-625726232,,I have issued a new pull request against v2.1.0 with just the relevant commits. Closing this one.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2700,2020-04-25T14:48:01Z,,2022-03-10T21:50:22Z,OPEN,False,1301,365,6,https://github.com/renecannao,"Added several function to simplify how tables are written in Admin, especially for statistics",26,[],https://github.com/sysown/proxysql/pull/2700,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2700,"Added several function to simplify how tables are written in Admin, especially for statistics:

generate_sqlite3_prepare_insert_values_query()
proxysql_sqlite3_bind()
proxysql_sqlite3_bind_from_SQLite3_row()","Added several function to simplify how tables are written in Admin, especially for statistics:

generate_sqlite3_prepare_insert_values_query()
proxysql_sqlite3_bind()
proxysql_sqlite3_bind_from_SQLite3_row()",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2700,2020-04-25T14:48:01Z,,2022-03-10T21:50:22Z,OPEN,False,1301,365,6,https://github.com/renecannao,"Added several function to simplify how tables are written in Admin, especially for statistics",26,[],https://github.com/sysown/proxysql/pull/2700,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2700#issuecomment-633474478,"Added several function to simplify how tables are written in Admin, especially for statistics:

generate_sqlite3_prepare_insert_values_query()
proxysql_sqlite3_bind()
proxysql_sqlite3_bind_from_SQLite3_row()",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2700,2020-04-25T14:48:01Z,,2022-03-10T21:50:22Z,OPEN,False,1301,365,6,https://github.com/renecannao,"Added several function to simplify how tables are written in Admin, especially for statistics",26,[],https://github.com/sysown/proxysql/pull/2700,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/2700#issuecomment-1064537059,"Added several function to simplify how tables are written in Admin, especially for statistics:

generate_sqlite3_prepare_insert_values_query()
proxysql_sqlite3_bind()
proxysql_sqlite3_bind_from_SQLite3_row()",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2701,2020-04-26T20:27:42Z,2020-04-28T21:19:33Z,2020-06-15T19:00:46Z,MERGED,True,99,3,3,https://github.com/alpes214,transaction_isolation test,2,[],https://github.com/sysown/proxysql/pull/2701,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2701,"Description:
Automated test for session variables default values. Use transaction_isolation as example.","Description:
Automated test for session variables default values. Use transaction_isolation as example.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2701,2020-04-26T20:27:42Z,2020-04-28T21:19:33Z,2020-06-15T19:00:46Z,MERGED,True,99,3,3,https://github.com/alpes214,transaction_isolation test,2,[],https://github.com/sysown/proxysql/pull/2701,https://github.com/alpes214,2,https://github.com/sysown/proxysql/pull/2701#issuecomment-619750421,"Description:
Automated test for session variables default values. Use transaction_isolation as example.",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2703,2020-04-27T10:05:07Z,2020-04-27T10:05:20Z,2020-04-27T10:05:20Z,CLOSED,False,107,8,3,https://github.com/alpes214,V2.0.11 tap tests,2,[],https://github.com/sysown/proxysql/pull/2703,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2703,"Description:
Prepare TAP tests for CI","Description:
Prepare TAP tests for CI",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2704,2020-04-27T10:26:33Z,2020-04-29T14:29:16Z,2020-06-15T19:00:50Z,MERGED,True,45,19,6,https://github.com/alpes214,tap cleanup,3,[],https://github.com/sysown/proxysql/pull/2704,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2704,"Description:
This PR organizes and cleanups tap tests to run them on CI","Description:
This PR organizes and cleanups tap tests to run them on CI",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2704,2020-04-27T10:26:33Z,2020-04-29T14:29:16Z,2020-06-15T19:00:50Z,MERGED,True,45,19,6,https://github.com/alpes214,tap cleanup,3,[],https://github.com/sysown/proxysql/pull/2704,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2704#issuecomment-620867648,"Description:
This PR organizes and cleanups tap tests to run them on CI",Please port it to 2.1.0 too,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2706,2020-04-28T12:59:59Z,2020-04-28T21:19:17Z,2020-06-15T19:00:48Z,MERGED,True,6,4,3,https://github.com/alpes214,fix for galera set writer,1,[],https://github.com/sysown/proxysql/pull/2706,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2706,"Description:

Fix for #2683
Fixes issue in galera when writer_is_also_reader=2

Tested with script:
#!/bin/bash

mysql -uadmin -padmin -h127.0.0.1 -P6032 -e ""select * from runtime_mysql_servers""
mysql -uadmin -padmin -h127.0.0.1 -P6032 -e ""update mysql_galera_hostgroups set writer_is_also_reader=0""
mysql -uadmin -padmin -h127.0.0.1 -P6032 -e ""load mysql servers to runtime""
mysql -uadmin -padmin -h127.0.0.1 -P6032 -e ""select * from runtime_mysql_servers""
sleep 10
echo ""================""
mysql -uadmin -padmin -h127.0.0.1 -P6032 -e ""select * from runtime_mysql_servers""
mysql -uadmin -padmin -h127.0.0.1 -P6032 -e ""select * from runtime_mysql_servers""
mysql -uadmin -padmin -h127.0.0.1 -P6032 -e ""update mysql_galera_hostgroups set writer_is_also_reader=2""
mysql -uadmin -padmin -h127.0.0.1 -P6032 -e ""load mysql servers to runtime""
sleep 3
mysql -uadmin -padmin -h127.0.0.1 -P6032 -e ""select * from runtime_mysql_servers""
sleep 10
echo ""================""
mysql -uadmin -padmin -h127.0.0.1 -P6032 -e ""select * from runtime_mysql_servers""","Description:

Fix for #2683
Fixes issue in galera when writer_is_also_reader=2

Tested with script:
#!/bin/bash

mysql -uadmin -padmin -h127.0.0.1 -P6032 -e ""select * from runtime_mysql_servers""
mysql -uadmin -padmin -h127.0.0.1 -P6032 -e ""update mysql_galera_hostgroups set writer_is_also_reader=0""
mysql -uadmin -padmin -h127.0.0.1 -P6032 -e ""load mysql servers to runtime""
mysql -uadmin -padmin -h127.0.0.1 -P6032 -e ""select * from runtime_mysql_servers""
sleep 10
echo ""================""
mysql -uadmin -padmin -h127.0.0.1 -P6032 -e ""select * from runtime_mysql_servers""
mysql -uadmin -padmin -h127.0.0.1 -P6032 -e ""select * from runtime_mysql_servers""
mysql -uadmin -padmin -h127.0.0.1 -P6032 -e ""update mysql_galera_hostgroups set writer_is_also_reader=2""
mysql -uadmin -padmin -h127.0.0.1 -P6032 -e ""load mysql servers to runtime""
sleep 3
mysql -uadmin -padmin -h127.0.0.1 -P6032 -e ""select * from runtime_mysql_servers""
sleep 10
echo ""================""
mysql -uadmin -padmin -h127.0.0.1 -P6032 -e ""select * from runtime_mysql_servers""",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2706,2020-04-28T12:59:59Z,2020-04-28T21:19:17Z,2020-06-15T19:00:48Z,MERGED,True,6,4,3,https://github.com/alpes214,fix for galera set writer,1,[],https://github.com/sysown/proxysql/pull/2706,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2706#issuecomment-620863749,"Description:

Fix for #2683
Fixes issue in galera when writer_is_also_reader=2

Tested with script:
#!/bin/bash

mysql -uadmin -padmin -h127.0.0.1 -P6032 -e ""select * from runtime_mysql_servers""
mysql -uadmin -padmin -h127.0.0.1 -P6032 -e ""update mysql_galera_hostgroups set writer_is_also_reader=0""
mysql -uadmin -padmin -h127.0.0.1 -P6032 -e ""load mysql servers to runtime""
mysql -uadmin -padmin -h127.0.0.1 -P6032 -e ""select * from runtime_mysql_servers""
sleep 10
echo ""================""
mysql -uadmin -padmin -h127.0.0.1 -P6032 -e ""select * from runtime_mysql_servers""
mysql -uadmin -padmin -h127.0.0.1 -P6032 -e ""select * from runtime_mysql_servers""
mysql -uadmin -padmin -h127.0.0.1 -P6032 -e ""update mysql_galera_hostgroups set writer_is_also_reader=2""
mysql -uadmin -padmin -h127.0.0.1 -P6032 -e ""load mysql servers to runtime""
sleep 3
mysql -uadmin -padmin -h127.0.0.1 -P6032 -e ""select * from runtime_mysql_servers""
sleep 10
echo ""================""
mysql -uadmin -padmin -h127.0.0.1 -P6032 -e ""select * from runtime_mysql_servers""",Cherry-picked in 2.1.0,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2707,2020-04-28T21:31:45Z,2020-05-04T20:16:00Z,2020-10-30T16:11:43Z,MERGED,True,96,3,3,https://github.com/renecannao,V2.1.0 test tx isolation,2,[],https://github.com/sysown/proxysql/pull/2707,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2707,Port of #2701 to 2.1.0,Port of #2701 to 2.1.0,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2712,2020-04-29T13:50:35Z,2020-04-29T14:29:30Z,2020-10-30T16:11:40Z,MERGED,True,5,4,3,https://github.com/alpes214,V2.1.0 tap cleanup,2,[],https://github.com/sysown/proxysql/pull/2712,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2712,"Port part of tap-cleanup to v2.1.0
(another part of tap-cleanup is already merged into v2.1.0)","Port part of tap-cleanup to v2.1.0
(another part of tap-cleanup is already merged into v2.1.0)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2713,2020-04-29T18:05:42Z,2020-05-04T20:10:00Z,2020-10-30T16:11:38Z,MERGED,True,24,0,2,https://github.com/renecannao,V2.1.0 backtrace,2,[],https://github.com/sysown/proxysql/pull/2713,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2713,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2715,2020-04-29T19:50:19Z,2020-05-04T20:07:37Z,2020-06-15T19:00:42Z,MERGED,True,57,8,5,https://github.com/alpes214,add workdir as environment variable,4,[],https://github.com/sysown/proxysql/pull/2715,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2715,Add workdir for tests environment for configuration,Add workdir for tests environment for configuration,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2715,2020-04-29T19:50:19Z,2020-05-04T20:07:37Z,2020-06-15T19:00:42Z,MERGED,True,57,8,5,https://github.com/alpes214,add workdir as environment variable,4,[],https://github.com/sysown/proxysql/pull/2715,https://github.com/alpes214,2,https://github.com/sysown/proxysql/pull/2715#issuecomment-622972418,Add workdir for tests environment for configuration,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2715,2020-04-29T19:50:19Z,2020-05-04T20:07:37Z,2020-06-15T19:00:42Z,MERGED,True,57,8,5,https://github.com/alpes214,add workdir as environment variable,4,[],https://github.com/sysown/proxysql/pull/2715,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2715#issuecomment-623678295,Add workdir for tests environment for configuration,Changing base to 2.0.12,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2716,2020-04-29T19:54:44Z,2020-05-04T20:09:32Z,2020-10-30T16:11:32Z,MERGED,True,57,8,5,https://github.com/alpes214,V2.1.0 add workdir as environment variable,4,[],https://github.com/sysown/proxysql/pull/2716,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2716,Port of add  workdir as environment variable to 2.1.0,Port of add  workdir as environment variable to 2.1.0,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2719,2020-04-30T07:54:10Z,2020-04-30T08:51:01Z,2020-04-30T08:51:01Z,CLOSED,False,191,2,7,https://github.com/alpes214,track variables,1,[],https://github.com/sysown/proxysql/pull/2719,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2719,"Description:
track variables implementation","Description:
track variables implementation",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2720,2020-04-30T08:45:24Z,2020-04-30T08:45:50Z,2020-04-30T08:45:50Z,CLOSED,False,208,8,11,https://github.com/alpes214,V2.1.0 track variables,4,[],https://github.com/sysown/proxysql/pull/2720,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2720,track variables implementation,track variables implementation,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2721,2020-04-30T08:50:41Z,,2020-07-13T17:53:33Z,OPEN,False,191,2,7,https://github.com/alpes214,V2.1.0 track variables,1,[],https://github.com/sysown/proxysql/pull/2721,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2721,Track variables implementation,Track variables implementation,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2721,2020-04-30T08:50:41Z,,2020-07-13T17:53:33Z,OPEN,False,191,2,7,https://github.com/alpes214,V2.1.0 track variables,1,[],https://github.com/sysown/proxysql/pull/2721,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2721#issuecomment-657702639,Track variables implementation,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2723,2020-04-30T20:19:54Z,2020-05-05T20:17:16Z,2020-10-30T16:14:06Z,MERGED,True,225,165,5,https://github.com/renecannao,Do not cache routing metadata for COM_STMT_EXECUTE,4,[],https://github.com/sysown/proxysql/pull/2723,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2723,"From 1.3.0 till 2.0.x , when COM_STMT_PREPARE is executed and Query Processor is executed, metadata are stored in MySQL_STMT_Global_info().
These metadata include routing information.
Is a prepared statement is prepared on a specific hostgroup, it will always be executed on the same hostgroup.
This causes negative consequences, like the one reported in issue #2691 .
This commit:

remove hostgroup_id from MySQL_STMT_Global_info() and other metadata
Query Processor is called also during COM_STMT_EXECUTE
removes hostgroup from table stats_mysql_prepared_statements_info
Query Processor do not perform any query rewrite ruding COM_STMT_EXECUTE","From 1.3.0 till 2.0.x , when COM_STMT_PREPARE is executed and Query Processor is executed, metadata are stored in MySQL_STMT_Global_info().
These metadata include routing information.
Is a prepared statement is prepared on a specific hostgroup, it will always be executed on the same hostgroup.
This causes negative consequences, like the one reported in issue #2691 .
This commit:

remove hostgroup_id from MySQL_STMT_Global_info() and other metadata
Query Processor is called also during COM_STMT_EXECUTE
removes hostgroup from table stats_mysql_prepared_statements_info
Query Processor do not perform any query rewrite ruding COM_STMT_EXECUTE",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2723,2020-04-30T20:19:54Z,2020-05-05T20:17:16Z,2020-10-30T16:14:06Z,MERGED,True,225,165,5,https://github.com/renecannao,Do not cache routing metadata for COM_STMT_EXECUTE,4,[],https://github.com/sysown/proxysql/pull/2723,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2723#issuecomment-623679753,"From 1.3.0 till 2.0.x , when COM_STMT_PREPARE is executed and Query Processor is executed, metadata are stored in MySQL_STMT_Global_info().
These metadata include routing information.
Is a prepared statement is prepared on a specific hostgroup, it will always be executed on the same hostgroup.
This causes negative consequences, like the one reported in issue #2691 .
This commit:

remove hostgroup_id from MySQL_STMT_Global_info() and other metadata
Query Processor is called also during COM_STMT_EXECUTE
removes hostgroup from table stats_mysql_prepared_statements_info
Query Processor do not perform any query rewrite ruding COM_STMT_EXECUTE",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2723,2020-04-30T20:19:54Z,2020-05-05T20:17:16Z,2020-10-30T16:14:06Z,MERGED,True,225,165,5,https://github.com/renecannao,Do not cache routing metadata for COM_STMT_EXECUTE,4,[],https://github.com/sysown/proxysql/pull/2723,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2723#issuecomment-623735423,"From 1.3.0 till 2.0.x , when COM_STMT_PREPARE is executed and Query Processor is executed, metadata are stored in MySQL_STMT_Global_info().
These metadata include routing information.
Is a prepared statement is prepared on a specific hostgroup, it will always be executed on the same hostgroup.
This causes negative consequences, like the one reported in issue #2691 .
This commit:

remove hostgroup_id from MySQL_STMT_Global_info() and other metadata
Query Processor is called also during COM_STMT_EXECUTE
removes hostgroup from table stats_mysql_prepared_statements_info
Query Processor do not perform any query rewrite ruding COM_STMT_EXECUTE",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2723,2020-04-30T20:19:54Z,2020-05-05T20:17:16Z,2020-10-30T16:14:06Z,MERGED,True,225,165,5,https://github.com/renecannao,Do not cache routing metadata for COM_STMT_EXECUTE,4,[],https://github.com/sysown/proxysql/pull/2723,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/2723#issuecomment-623756023,"From 1.3.0 till 2.0.x , when COM_STMT_PREPARE is executed and Query Processor is executed, metadata are stored in MySQL_STMT_Global_info().
These metadata include routing information.
Is a prepared statement is prepared on a specific hostgroup, it will always be executed on the same hostgroup.
This causes negative consequences, like the one reported in issue #2691 .
This commit:

remove hostgroup_id from MySQL_STMT_Global_info() and other metadata
Query Processor is called also during COM_STMT_EXECUTE
removes hostgroup from table stats_mysql_prepared_statements_info
Query Processor do not perform any query rewrite ruding COM_STMT_EXECUTE",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2723,2020-04-30T20:19:54Z,2020-05-05T20:17:16Z,2020-10-30T16:14:06Z,MERGED,True,225,165,5,https://github.com/renecannao,Do not cache routing metadata for COM_STMT_EXECUTE,4,[],https://github.com/sysown/proxysql/pull/2723,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/2723#issuecomment-623765603,"From 1.3.0 till 2.0.x , when COM_STMT_PREPARE is executed and Query Processor is executed, metadata are stored in MySQL_STMT_Global_info().
These metadata include routing information.
Is a prepared statement is prepared on a specific hostgroup, it will always be executed on the same hostgroup.
This causes negative consequences, like the one reported in issue #2691 .
This commit:

remove hostgroup_id from MySQL_STMT_Global_info() and other metadata
Query Processor is called also during COM_STMT_EXECUTE
removes hostgroup from table stats_mysql_prepared_statements_info
Query Processor do not perform any query rewrite ruding COM_STMT_EXECUTE",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2723,2020-04-30T20:19:54Z,2020-05-05T20:17:16Z,2020-10-30T16:14:06Z,MERGED,True,225,165,5,https://github.com/renecannao,Do not cache routing metadata for COM_STMT_EXECUTE,4,[],https://github.com/sysown/proxysql/pull/2723,https://github.com/renecannao,6,https://github.com/sysown/proxysql/pull/2723#issuecomment-623765846,"From 1.3.0 till 2.0.x , when COM_STMT_PREPARE is executed and Query Processor is executed, metadata are stored in MySQL_STMT_Global_info().
These metadata include routing information.
Is a prepared statement is prepared on a specific hostgroup, it will always be executed on the same hostgroup.
This causes negative consequences, like the one reported in issue #2691 .
This commit:

remove hostgroup_id from MySQL_STMT_Global_info() and other metadata
Query Processor is called also during COM_STMT_EXECUTE
removes hostgroup from table stats_mysql_prepared_statements_info
Query Processor do not perform any query rewrite ruding COM_STMT_EXECUTE",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2723,2020-04-30T20:19:54Z,2020-05-05T20:17:16Z,2020-10-30T16:14:06Z,MERGED,True,225,165,5,https://github.com/renecannao,Do not cache routing metadata for COM_STMT_EXECUTE,4,[],https://github.com/sysown/proxysql/pull/2723,https://github.com/renecannao,7,https://github.com/sysown/proxysql/pull/2723#issuecomment-624249909,"From 1.3.0 till 2.0.x , when COM_STMT_PREPARE is executed and Query Processor is executed, metadata are stored in MySQL_STMT_Global_info().
These metadata include routing information.
Is a prepared statement is prepared on a specific hostgroup, it will always be executed on the same hostgroup.
This causes negative consequences, like the one reported in issue #2691 .
This commit:

remove hostgroup_id from MySQL_STMT_Global_info() and other metadata
Query Processor is called also during COM_STMT_EXECUTE
removes hostgroup from table stats_mysql_prepared_statements_info
Query Processor do not perform any query rewrite ruding COM_STMT_EXECUTE",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2725,2020-04-30T21:03:36Z,2020-05-06T19:06:10Z,2020-10-30T16:12:08Z,MERGED,True,194,2,3,https://github.com/alpes214,V2.1.0 test qp stmt,5,[],https://github.com/sysown/proxysql/pull/2725,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2725,automated test case,automated test case,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2725,2020-04-30T21:03:36Z,2020-05-06T19:06:10Z,2020-10-30T16:12:08Z,MERGED,True,194,2,3,https://github.com/alpes214,V2.1.0 test qp stmt,5,[],https://github.com/sysown/proxysql/pull/2725,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2725#issuecomment-624774673,automated test case,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2734,2020-05-04T14:40:00Z,2020-05-04T15:46:45Z,2020-05-04T15:46:45Z,CLOSED,False,87,9,6,https://github.com/alpes214,Crashing often with strange new error (Error setting MYSQL_OPTION_MUL‚Ä¶,6,[],https://github.com/sysown/proxysql/pull/2734,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2734,"Description:
Report error and close connection","Description:
Report error and close connection",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2735,2020-05-04T15:12:56Z,2020-05-04T20:09:47Z,2020-10-30T16:11:31Z,MERGED,True,87,9,6,https://github.com/alpes214,V2.1.0 fix multi,6,[],https://github.com/sysown/proxysql/pull/2735,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2735,"Description:
Report error and close connection","Description:
Report error and close connection",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2736,2020-05-04T16:46:23Z,2020-05-04T22:08:21Z,2020-06-15T19:00:38Z,MERGED,True,31,2,2,https://github.com/alpes214,Fix issue 2727: Error setting MYSQL_OPTION_MULTI_STATEMENTS,2,[],https://github.com/sysown/proxysql/pull/2736,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2736,"Description:
Report error and close connection
Issue #2727","Description:
Report error and close connection
Issue #2727",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2736,2020-05-04T16:46:23Z,2020-05-04T22:08:21Z,2020-06-15T19:00:38Z,MERGED,True,31,2,2,https://github.com/alpes214,Fix issue 2727: Error setting MYSQL_OPTION_MULTI_STATEMENTS,2,[],https://github.com/sysown/proxysql/pull/2736,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2736#issuecomment-623678600,"Description:
Report error and close connection
Issue #2727",Changing base to 2.0.12,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2736,2020-05-04T16:46:23Z,2020-05-04T22:08:21Z,2020-06-15T19:00:38Z,MERGED,True,31,2,2,https://github.com/alpes214,Fix issue 2727: Error setting MYSQL_OPTION_MULTI_STATEMENTS,2,[],https://github.com/sysown/proxysql/pull/2736,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2736#issuecomment-623678676,"Description:
Report error and close connection
Issue #2727",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2737,2020-05-04T16:53:19Z,2020-05-04T20:09:10Z,2020-05-04T20:09:10Z,CLOSED,False,87,9,6,https://github.com/alpes214,V2.0.11 fix multi 2 ci,6,[],https://github.com/sysown/proxysql/pull/2737,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2737,"Description:
PR for CI
Related to PR #2736","Description:
PR for CI
Related to PR #2736",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2738,2020-05-04T22:48:11Z,2020-05-05T19:03:31Z,2020-10-30T16:11:30Z,MERGED,True,166,198,4,https://github.com/renecannao,V2.1.0 session handler split 2,7,[],https://github.com/sysown/proxysql/pull/2738,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2738,Splitting MySQL_Session:handler() in smaller methods,Splitting MySQL_Session:handler() in smaller methods,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2738,2020-05-04T22:48:11Z,2020-05-05T19:03:31Z,2020-10-30T16:11:30Z,MERGED,True,166,198,4,https://github.com/renecannao,V2.1.0 session handler split 2,7,[],https://github.com/sysown/proxysql/pull/2738,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2738#issuecomment-623762544,Splitting MySQL_Session:handler() in smaller methods,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2738,2020-05-04T22:48:11Z,2020-05-05T19:03:31Z,2020-10-30T16:11:30Z,MERGED,True,166,198,4,https://github.com/renecannao,V2.1.0 session handler split 2,7,[],https://github.com/sysown/proxysql/pull/2738,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2738#issuecomment-623941195,Splitting MySQL_Session:handler() in smaller methods,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2739,2020-05-04T23:08:43Z,2020-05-04T23:12:44Z,2020-10-30T16:11:28Z,MERGED,True,4,4,1,https://github.com/renecannao,Port of v2.0.11-QP_stmt_2 into v2.1.0-QP_stmt_2,1,[],https://github.com/sysown/proxysql/pull/2739,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2739,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2740,2020-05-04T23:33:09Z,2020-05-04T23:33:18Z,2020-10-30T16:11:27Z,MERGED,True,7,3,1,https://github.com/renecannao,Fix prometheus dependencies for TAP tests,1,[],https://github.com/sysown/proxysql/pull/2740,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2740,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2742,2020-05-05T05:35:33Z,2020-05-05T08:55:13Z,2020-10-30T16:11:25Z,MERGED,True,2,1,3,https://github.com/alpes214,V2.1.0 tap clenaup,3,[],https://github.com/sysown/proxysql/pull/2742,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2742,"Description:

(cherry picked from commit a15873e)
fixing proxysql config with new prometheus parameter","Description:

(cherry picked from commit a15873e)
fixing proxysql config with new prometheus parameter",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2743,2020-05-05T05:53:57Z,,2020-07-13T17:53:29Z,OPEN,False,3876,1442,45,https://github.com/alpes214,V2.1.0 qp stmt 3,104,[],https://github.com/sysown/proxysql/pull/2743,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2743,"Description:
this PR is a merge of v2.0.11-QP_stmt_2 and v2.1.0-tap-clenaup
this PR is created for testing only - not for merging","Description:
this PR is a merge of v2.0.11-QP_stmt_2 and v2.1.0-tap-clenaup
this PR is created for testing only - not for merging",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2743,2020-05-05T05:53:57Z,,2020-07-13T17:53:29Z,OPEN,False,3876,1442,45,https://github.com/alpes214,V2.1.0 qp stmt 3,104,[],https://github.com/sysown/proxysql/pull/2743,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2743#issuecomment-657702595,"Description:
this PR is a merge of v2.0.11-QP_stmt_2 and v2.1.0-tap-clenaup
this PR is created for testing only - not for merging",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2744,2020-05-05T07:44:57Z,2020-05-05T07:45:18Z,2020-05-05T07:45:18Z,CLOSED,False,100,16,13,https://github.com/alpes214,V2.0.12 group concat,10,[],https://github.com/sysown/proxysql/pull/2744,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2744,"Description:
Track variable group_concat_max_len
Automated tests are updated.
Manual testing:
mysql> select * from performance_schema.session_variables where variable_name like '%group_concat_%';
+----------------------+----------------+
| VARIABLE_NAME        | VARIABLE_VALUE |
+----------------------+----------------+
| group_concat_max_len | 1024           |
+----------------------+----------------+
1 row in set (0.00 sec)

mysql> set group_concat_max_len=4096;
Query OK, 0 rows affected (0.00 sec)

mysql> select * from performance_schema.session_variables where variable_name like '%group_concat_%';
+----------------------+----------------+
| VARIABLE_NAME        | VARIABLE_VALUE |
+----------------------+----------------+
| group_concat_max_len | 4096           |
+----------------------+----------------+
1 row in set (0.00 sec)","Description:
Track variable group_concat_max_len
Automated tests are updated.
Manual testing:
mysql> select * from performance_schema.session_variables where variable_name like '%group_concat_%';
+----------------------+----------------+
| VARIABLE_NAME        | VARIABLE_VALUE |
+----------------------+----------------+
| group_concat_max_len | 1024           |
+----------------------+----------------+
1 row in set (0.00 sec)

mysql> set group_concat_max_len=4096;
Query OK, 0 rows affected (0.00 sec)

mysql> select * from performance_schema.session_variables where variable_name like '%group_concat_%';
+----------------------+----------------+
| VARIABLE_NAME        | VARIABLE_VALUE |
+----------------------+----------------+
| group_concat_max_len | 4096           |
+----------------------+----------------+
1 row in set (0.00 sec)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2745,2020-05-05T07:47:21Z,2020-05-11T15:57:30Z,2020-06-15T19:02:36Z,MERGED,True,33,30,8,https://github.com/alpes214,V2.0.12 Session variable group_concat_max_len,2,[],https://github.com/sysown/proxysql/pull/2745,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2745,"Description:
Track variable group_concat_max_len
Automated tests are updated.
Manual testing:
mysql> select * from performance_schema.session_variables where variable_name like '%group_concat_%';
+----------------------+----------------+
| VARIABLE_NAME        | VARIABLE_VALUE |
+----------------------+----------------+
| group_concat_max_len | 1024           |
+----------------------+----------------+
1 row in set (0.00 sec)

mysql> set group_concat_max_len=4096;
Query OK, 0 rows affected (0.00 sec)

mysql> select * from performance_schema.session_variables where variable_name like '%group_concat_%';
+----------------------+----------------+
| VARIABLE_NAME        | VARIABLE_VALUE |
+----------------------+----------------+
| group_concat_max_len | 4096           |
+----------------------+----------------+
1 row in set (0.00 sec)","Description:
Track variable group_concat_max_len
Automated tests are updated.
Manual testing:
mysql> select * from performance_schema.session_variables where variable_name like '%group_concat_%';
+----------------------+----------------+
| VARIABLE_NAME        | VARIABLE_VALUE |
+----------------------+----------------+
| group_concat_max_len | 1024           |
+----------------------+----------------+
1 row in set (0.00 sec)

mysql> set group_concat_max_len=4096;
Query OK, 0 rows affected (0.00 sec)

mysql> select * from performance_schema.session_variables where variable_name like '%group_concat_%';
+----------------------+----------------+
| VARIABLE_NAME        | VARIABLE_VALUE |
+----------------------+----------------+
| group_concat_max_len | 4096           |
+----------------------+----------------+
1 row in set (0.00 sec)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2745,2020-05-05T07:47:21Z,2020-05-11T15:57:30Z,2020-06-15T19:02:36Z,MERGED,True,33,30,8,https://github.com/alpes214,V2.0.12 Session variable group_concat_max_len,2,[],https://github.com/sysown/proxysql/pull/2745,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2745#issuecomment-624254126,"Description:
Track variable group_concat_max_len
Automated tests are updated.
Manual testing:
mysql> select * from performance_schema.session_variables where variable_name like '%group_concat_%';
+----------------------+----------------+
| VARIABLE_NAME        | VARIABLE_VALUE |
+----------------------+----------------+
| group_concat_max_len | 1024           |
+----------------------+----------------+
1 row in set (0.00 sec)

mysql> set group_concat_max_len=4096;
Query OK, 0 rows affected (0.00 sec)

mysql> select * from performance_schema.session_variables where variable_name like '%group_concat_%';
+----------------------+----------------+
| VARIABLE_NAME        | VARIABLE_VALUE |
+----------------------+----------------+
| group_concat_max_len | 4096           |
+----------------------+----------------+
1 row in set (0.00 sec)",This also needs to be ported to 2.1.0,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2746,2020-05-05T13:43:17Z,2020-05-05T18:15:31Z,2020-06-15T19:02:40Z,MERGED,True,17,178,3,https://github.com/alpes214,Remove config test from TAP,1,[],https://github.com/sysown/proxysql/pull/2746,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2746,"remove select_config_file-t.cpp. It should be added to PROXYSQLTEST
modify Makefile to reduce merge conflicts
add constants file with environment variable for local testing","remove select_config_file-t.cpp. It should be added to PROXYSQLTEST
modify Makefile to reduce merge conflicts
add constants file with environment variable for local testing",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2749,2020-05-05T21:04:58Z,2020-05-06T00:43:05Z,2020-10-30T16:12:17Z,MERGED,True,17,180,3,https://github.com/alpes214,Remove config test from TAP,1,[],https://github.com/sysown/proxysql/pull/2749,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2749,"remove select_config_file-t.cpp. It should be added to PROXYSQLTEST
modify Makefile to reduce merge conflicts
add constants file with environment variable for local testing

(cherry picked from commit dba0d9b)
related to issue: #2747","remove select_config_file-t.cpp. It should be added to PROXYSQLTEST
modify Makefile to reduce merge conflicts
add constants file with environment variable for local testing

(cherry picked from commit dba0d9b)
related to issue: #2747",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2750,2020-05-05T21:50:58Z,2020-05-06T07:58:21Z,2020-10-30T16:12:14Z,MERGED,True,210,7,4,https://github.com/renecannao,First pull request related to several changes in ProxySQL Cluster,5,[],https://github.com/sysown/proxysql/pull/2750,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2750,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2750,2020-05-05T21:50:58Z,2020-05-06T07:58:21Z,2020-10-30T16:12:14Z,MERGED,True,210,7,4,https://github.com/renecannao,First pull request related to several changes in ProxySQL Cluster,5,[],https://github.com/sysown/proxysql/pull/2750,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2750#issuecomment-624381730,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2751,2020-05-06T04:44:05Z,2020-05-25T21:14:32Z,2020-05-25T21:14:32Z,MERGED,True,72,52,1,https://github.com/renecannao,More test on mysql_replication_hostgroups,2,[],https://github.com/sysown/proxysql/pull/2751,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2751,"This commit extends test_admin_configs-t.cpp .
Instead of running just one test on mysql_replication_hostgroups using one single hardcoded rows:

it generates 200 hostgroups
it sorts them randomly
writes mysql_replication_hostgroups and load to runtime 100 times, each time with a random number of rows between 1 and 100
check_type is randomized as well
comment is generated using the hostgroup number themselves","This commit extends test_admin_configs-t.cpp .
Instead of running just one test on mysql_replication_hostgroups using one single hardcoded rows:

it generates 200 hostgroups
it sorts them randomly
writes mysql_replication_hostgroups and load to runtime 100 times, each time with a random number of rows between 1 and 100
check_type is randomized as well
comment is generated using the hostgroup number themselves",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2752,2020-05-06T08:25:08Z,2020-05-06T08:25:20Z,2020-06-15T19:02:38Z,CLOSED,False,177,188,11,https://github.com/alpes214,V2.0.12 test fast routing,12,[],https://github.com/sysown/proxysql/pull/2752,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2752,Adding test for mysql query rules fast routing,Adding test for mysql query rules fast routing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2753,2020-05-06T08:28:30Z,2020-05-06T09:08:50Z,2020-06-15T19:02:38Z,MERGED,True,72,0,1,https://github.com/alpes214,PROXYSQLTEST automation for query rules fast routing,1,[],https://github.com/sysown/proxysql/pull/2753,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2753,Adding test for query rules fast routing,Adding test for query rules fast routing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2754,2020-05-06T08:40:24Z,2020-05-06T13:23:40Z,2020-10-30T16:12:10Z,MERGED,True,72,0,1,https://github.com/alpes214,V2.1.0 PROXYSQLTEST automation for query rules fast routing,1,[],https://github.com/sysown/proxysql/pull/2754,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2754,"adding query rules fast routing test
(cherry picked from commit 6bca353)","adding query rules fast routing test
(cherry picked from commit 6bca353)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2755,2020-05-06T13:23:21Z,2020-05-06T15:10:57Z,2020-10-30T16:12:05Z,MERGED,True,17,5,1,https://github.com/renecannao,Edits on set_testing-t.cpp,2,[],https://github.com/sysown/proxysql/pull/2755,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2755,"Make it more verbose.
Do not track session variables that cannot be set by not root","Make it more verbose.
Do not track session variables that cannot be set by not root",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2756,2020-05-06T16:08:04Z,2020-05-06T16:48:25Z,2020-10-30T16:12:03Z,MERGED,True,14,9,2,https://github.com/renecannao,V2.1.0 set tests2,2,[],https://github.com/sysown/proxysql/pull/2756,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2756,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2757,2020-05-07T07:08:12Z,2020-05-11T15:57:41Z,2020-10-30T16:12:02Z,MERGED,True,33,30,8,https://github.com/alpes214,V2.1.0 Session variable group_concat_max_len,2,[],https://github.com/sysown/proxysql/pull/2757,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2757,"Port of V2.0.12 Session variable group_concat_max_len
PR #2745","Port of V2.0.12 Session variable group_concat_max_len
PR #2745",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2758,2020-05-07T08:45:02Z,2020-05-11T13:49:55Z,2020-10-30T16:12:00Z,MERGED,True,34,5,1,https://github.com/alpes214,Add comments for documentation purpose,1,[],https://github.com/sysown/proxysql/pull/2758,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2758,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2761,2020-05-08T07:19:11Z,2020-05-11T18:06:50Z,2020-06-15T19:02:28Z,MERGED,True,3,1,1,https://github.com/alpes214,Fix QPO timeout overflow,1,[],https://github.com/sysown/proxysql/pull/2761,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2761,"Description:
Fixes integer overflow for query rules timeout
Verification:

Set query rules with timeout value equals to one hour.

INSERT INTO mysql_query_rules (rule_id,active,match_digest,destination_hostgroup,timeout,apply) VALUES (1,1,'^SELECT.*FOR UPDATE$',0,3600*1000,1), (2,1,'^SELECT',1,3600*1000,1);
load mysql query rules to runtime; save mysql query rules to disk;


Execute query

$ time mysql -uroot -proot -h127.0.0.1 -P6033 -e ""select 1, sleep(3601)""
mysql: [Warning] Using a password on the command line interface can be insecure.
+---+-------------+
| 1 | sleep(3601) |
+---+-------------+
| 1 |           1 |
+---+-------------+

real    60m0.013s
user    0m0.012s
sys     0m0.000s

The query ended as expected after 1 hour.","Description:
Fixes integer overflow for query rules timeout
Verification:

Set query rules with timeout value equals to one hour.

INSERT INTO mysql_query_rules (rule_id,active,match_digest,destination_hostgroup,timeout,apply) VALUES (1,1,'^SELECT.*FOR UPDATE$',0,3600*1000,1), (2,1,'^SELECT',1,3600*1000,1);
load mysql query rules to runtime; save mysql query rules to disk;


Execute query

$ time mysql -uroot -proot -h127.0.0.1 -P6033 -e ""select 1, sleep(3601)""
mysql: [Warning] Using a password on the command line interface can be insecure.
+---+-------------+
| 1 | sleep(3601) |
+---+-------------+
| 1 |           1 |
+---+-------------+

real    60m0.013s
user    0m0.012s
sys     0m0.000s

The query ended as expected after 1 hour.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2762,2020-05-08T09:21:27Z,2020-05-11T15:14:35Z,2020-10-30T16:11:59Z,MERGED,True,315,11,6,https://github.com/JavierJF,"Implement feature requests: 2660, 2661, 2662, 2663, 1377",11,[],https://github.com/sysown/proxysql/pull/2762,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/2762,"Closes #2660 .
Closes #2661 .
Closes #2662  .
Closes #2663 .
Closes #1377 .","Closes #2660 .
Closes #2661 .
Closes #2662  .
Closes #2663 .
Closes #1377 .",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2764,2020-05-08T12:18:33Z,2020-05-11T14:14:15Z,2020-06-15T19:02:32Z,MERGED,True,1,1,1,https://github.com/JavierJF,Fix #2763: Segfault during GTID configuration,1,[],https://github.com/sysown/proxysql/pull/2764,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/2764,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2764,2020-05-08T12:18:33Z,2020-05-11T14:14:15Z,2020-06-15T19:02:32Z,MERGED,True,1,1,1,https://github.com/JavierJF,Fix #2763: Segfault during GTID configuration,1,[],https://github.com/sysown/proxysql/pull/2764,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2764#issuecomment-625811304,,@JavierJF : please create the same for 2.1.0,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2764,2020-05-08T12:18:33Z,2020-05-11T14:14:15Z,2020-06-15T19:02:32Z,MERGED,True,1,1,1,https://github.com/JavierJF,Fix #2763: Segfault during GTID configuration,1,[],https://github.com/sysown/proxysql/pull/2764,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2764#issuecomment-626713687,,Ping?,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2764,2020-05-08T12:18:33Z,2020-05-11T14:14:15Z,2020-06-15T19:02:32Z,MERGED,True,1,1,1,https://github.com/JavierJF,Fix #2763: Segfault during GTID configuration,1,[],https://github.com/sysown/proxysql/pull/2764,https://github.com/JavierJF,4,https://github.com/sysown/proxysql/pull/2764#issuecomment-626725580,,"@renecannao yes, sorry. Here it's #2774",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2764,2020-05-08T12:18:33Z,2020-05-11T14:14:15Z,2020-06-15T19:02:32Z,MERGED,True,1,1,1,https://github.com/JavierJF,Fix #2763: Segfault during GTID configuration,1,[],https://github.com/sysown/proxysql/pull/2764,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/2764#issuecomment-626727576,,Thanks,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2767,2020-05-08T20:46:25Z,2020-05-11T15:02:33Z,2020-06-15T19:02:23Z,MERGED,True,1,1,1,https://github.com/alpes214,V2.0.12 Fix set global variables error,1,[],https://github.com/sysown/proxysql/pull/2767,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2767,"Description:
Fixes the issue #2741
Test:
set statement changes default_% variables as expected without an error.
mysql> select * from global_variables where variable_name like '%character%';
+----------------------------------------+----------------+
| variable_name                          | variable_value |
+----------------------------------------+----------------+
| mysql-default_character_set_results    | utf8mb4        |
| mysql-default_character_set_connection | utf8mb4        |
| mysql-default_character_set_client     | utf8mb4        |
| mysql-default_character_set_database   | utf8mb4        |
+----------------------------------------+----------------+
4 rows in set (0.00 sec)

mysql> set mysql-default_character_set_client='utf8';
Query OK, 1 row affected (0.00 sec)

mysql> set mysql-default_character_set_connection='utf8';
Query OK, 1 row affected (0.00 sec)

mysql> select * from global_variables where variable_name like '%character%';
+----------------------------------------+----------------+
| variable_name                          | variable_value |
+----------------------------------------+----------------+
| mysql-default_character_set_results    | utf8mb4        |
| mysql-default_character_set_connection | utf8           |
| mysql-default_character_set_client     | utf8           |
| mysql-default_character_set_database   | utf8mb4        |
+----------------------------------------+----------------+
4 rows in set (0.00 sec)","Description:
Fixes the issue #2741
Test:
set statement changes default_% variables as expected without an error.
mysql> select * from global_variables where variable_name like '%character%';
+----------------------------------------+----------------+
| variable_name                          | variable_value |
+----------------------------------------+----------------+
| mysql-default_character_set_results    | utf8mb4        |
| mysql-default_character_set_connection | utf8mb4        |
| mysql-default_character_set_client     | utf8mb4        |
| mysql-default_character_set_database   | utf8mb4        |
+----------------------------------------+----------------+
4 rows in set (0.00 sec)

mysql> set mysql-default_character_set_client='utf8';
Query OK, 1 row affected (0.00 sec)

mysql> set mysql-default_character_set_connection='utf8';
Query OK, 1 row affected (0.00 sec)

mysql> select * from global_variables where variable_name like '%character%';
+----------------------------------------+----------------+
| variable_name                          | variable_value |
+----------------------------------------+----------------+
| mysql-default_character_set_results    | utf8mb4        |
| mysql-default_character_set_connection | utf8           |
| mysql-default_character_set_client     | utf8           |
| mysql-default_character_set_database   | utf8mb4        |
+----------------------------------------+----------------+
4 rows in set (0.00 sec)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2767,2020-05-08T20:46:25Z,2020-05-11T15:02:33Z,2020-06-15T19:02:23Z,MERGED,True,1,1,1,https://github.com/alpes214,V2.0.12 Fix set global variables error,1,[],https://github.com/sysown/proxysql/pull/2767,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2767#issuecomment-626691084,"Description:
Fixes the issue #2741
Test:
set statement changes default_% variables as expected without an error.
mysql> select * from global_variables where variable_name like '%character%';
+----------------------------------------+----------------+
| variable_name                          | variable_value |
+----------------------------------------+----------------+
| mysql-default_character_set_results    | utf8mb4        |
| mysql-default_character_set_connection | utf8mb4        |
| mysql-default_character_set_client     | utf8mb4        |
| mysql-default_character_set_database   | utf8mb4        |
+----------------------------------------+----------------+
4 rows in set (0.00 sec)

mysql> set mysql-default_character_set_client='utf8';
Query OK, 1 row affected (0.00 sec)

mysql> set mysql-default_character_set_connection='utf8';
Query OK, 1 row affected (0.00 sec)

mysql> select * from global_variables where variable_name like '%character%';
+----------------------------------------+----------------+
| variable_name                          | variable_value |
+----------------------------------------+----------------+
| mysql-default_character_set_results    | utf8mb4        |
| mysql-default_character_set_connection | utf8           |
| mysql-default_character_set_client     | utf8           |
| mysql-default_character_set_database   | utf8mb4        |
+----------------------------------------+----------------+
4 rows in set (0.00 sec)","It looks good to me.
Please create a similar PR for 2.1",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2770,2020-05-11T06:14:41Z,2020-05-11T15:02:06Z,2020-06-15T19:02:20Z,MERGED,True,8,4,3,https://github.com/alpes214,V2.0.12 Add debug target to TAP tests Makefile,1,[],https://github.com/sysown/proxysql/pull/2770,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2770,"Description:
related to #2769
This PR adds debug target to tap tests Makefile. It is possible now to build TAP tests like this
cd ./test/tap
make debug

Debug goal adds the following compiler options: -O0 -DDEBUG -ggdb","Description:
related to #2769
This PR adds debug target to tap tests Makefile. It is possible now to build TAP tests like this
cd ./test/tap
make debug

Debug goal adds the following compiler options: -O0 -DDEBUG -ggdb",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2770,2020-05-11T06:14:41Z,2020-05-11T15:02:06Z,2020-06-15T19:02:20Z,MERGED,True,8,4,3,https://github.com/alpes214,V2.0.12 Add debug target to TAP tests Makefile,1,[],https://github.com/sysown/proxysql/pull/2770,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2770#issuecomment-626690801,"Description:
related to #2769
This PR adds debug target to tap tests Makefile. It is possible now to build TAP tests like this
cd ./test/tap
make debug

Debug goal adds the following compiler options: -O0 -DDEBUG -ggdb",Please create the same for 2.1,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2771,2020-05-11T06:53:01Z,2020-05-11T15:01:52Z,2020-06-15T19:02:22Z,MERGED,True,17,4,3,https://github.com/alpes214,Check that GIT_VERSION is set in the Makefile,1,[],https://github.com/sysown/proxysql/pull/2771,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2771,"Description:
Related to issue #2768
After applying this PR the proxysql cannot be built if it is located outside of the git, i.e. downloaded as a ZIP archive. To compile porxysql from archive the GIT_VERSION should be set as an environment variable:
GIT_VERSION=2.0.12-14-local make","Description:
Related to issue #2768
After applying this PR the proxysql cannot be built if it is located outside of the git, i.e. downloaded as a ZIP archive. To compile porxysql from archive the GIT_VERSION should be set as an environment variable:
GIT_VERSION=2.0.12-14-local make",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2771,2020-05-11T06:53:01Z,2020-05-11T15:01:52Z,2020-06-15T19:02:22Z,MERGED,True,17,4,3,https://github.com/alpes214,Check that GIT_VERSION is set in the Makefile,1,[],https://github.com/sysown/proxysql/pull/2771,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2771#issuecomment-626688589,"Description:
Related to issue #2768
After applying this PR the proxysql cannot be built if it is located outside of the git, i.e. downloaded as a ZIP archive. To compile porxysql from archive the GIT_VERSION should be set as an environment variable:
GIT_VERSION=2.0.12-14-local make","It looks good to me.
Please create a similar PR for 2.1",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2772,2020-05-11T13:45:33Z,2020-05-11T18:06:41Z,2020-10-30T16:11:57Z,MERGED,True,17,4,3,https://github.com/alpes214,V2.1.0 Check GIT_VERSION,1,[],https://github.com/sysown/proxysql/pull/2772,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2772,"(cherry picked from commit be39aa2)
Description:
related to #2769
This PR adds debug target to tap tests Makefile. It is possible now to build TAP tests like this
cd ./test/tap
make debug
Debug goal adds the following compiler options: -O0 -DDEBUG -ggdb","(cherry picked from commit be39aa2)
Description:
related to #2769
This PR adds debug target to tap tests Makefile. It is possible now to build TAP tests like this
cd ./test/tap
make debug
Debug goal adds the following compiler options: -O0 -DDEBUG -ggdb",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2772,2020-05-11T13:45:33Z,2020-05-11T18:06:41Z,2020-10-30T16:11:57Z,MERGED,True,17,4,3,https://github.com/alpes214,V2.1.0 Check GIT_VERSION,1,[],https://github.com/sysown/proxysql/pull/2772,https://github.com/alpes214,2,https://github.com/sysown/proxysql/pull/2772#issuecomment-626734313,"(cherry picked from commit be39aa2)
Description:
related to #2769
This PR adds debug target to tap tests Makefile. It is possible now to build TAP tests like this
cd ./test/tap
make debug
Debug goal adds the following compiler options: -O0 -DDEBUG -ggdb",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2773,2020-05-11T13:57:15Z,2020-05-11T15:01:44Z,2020-10-30T16:11:55Z,MERGED,True,8,4,3,https://github.com/alpes214,V2.1.0 Add debug target to TAP tests Makefile,1,[],https://github.com/sysown/proxysql/pull/2773,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2773,"(cherry picked from commit e50b7ae)
Description:
related to #2769
This PR adds debug target to tap tests Makefile. It is possible now to build TAP tests like this
cd ./test/tap
make debug
Debug goal adds the following compiler options: -O0 -DDEBUG -ggdb","(cherry picked from commit e50b7ae)
Description:
related to #2769
This PR adds debug target to tap tests Makefile. It is possible now to build TAP tests like this
cd ./test/tap
make debug
Debug goal adds the following compiler options: -O0 -DDEBUG -ggdb",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2774,2020-05-11T14:10:34Z,2020-05-11T15:53:41Z,2020-10-30T16:11:55Z,MERGED,True,1,1,1,https://github.com/JavierJF,Fix #2763: Segfault during GTID configuration,1,[],https://github.com/sysown/proxysql/pull/2774,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/2774,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2775,2020-05-11T14:18:52Z,2020-05-11T18:04:30Z,2020-10-30T16:11:18Z,MERGED,True,1,1,1,https://github.com/alpes214,V2.1.0 Fix set global variables error,1,[],https://github.com/sysown/proxysql/pull/2775,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2775,"Description:
Fixes the issue #2741
Test:
set statement changes default_% variables as expected without an error.
mysql> select * from global_variables where variable_name like '%character%';
+----------------------------------------+----------------+
| variable_name                          | variable_value |
+----------------------------------------+----------------+
| mysql-default_character_set_results    | utf8mb4        |
| mysql-default_character_set_connection | utf8mb4        |
| mysql-default_character_set_client     | utf8mb4        |
| mysql-default_character_set_database   | utf8mb4        |
+----------------------------------------+----------------+
4 rows in set (0.00 sec)

mysql> set mysql-default_character_set_client='utf8';
Query OK, 1 row affected (0.00 sec)

mysql> set mysql-default_character_set_connection='utf8';
Query OK, 1 row affected (0.00 sec)

mysql> select * from global_variables where variable_name like '%character%';
+----------------------------------------+----------------+
| variable_name                          | variable_value |
+----------------------------------------+----------------+
| mysql-default_character_set_results    | utf8mb4        |
| mysql-default_character_set_connection | utf8           |
| mysql-default_character_set_client     | utf8           |
| mysql-default_character_set_database   | utf8mb4        |
+----------------------------------------+----------------+
4 rows in set (0.00 sec)","Description:
Fixes the issue #2741
Test:
set statement changes default_% variables as expected without an error.
mysql> select * from global_variables where variable_name like '%character%';
+----------------------------------------+----------------+
| variable_name                          | variable_value |
+----------------------------------------+----------------+
| mysql-default_character_set_results    | utf8mb4        |
| mysql-default_character_set_connection | utf8mb4        |
| mysql-default_character_set_client     | utf8mb4        |
| mysql-default_character_set_database   | utf8mb4        |
+----------------------------------------+----------------+
4 rows in set (0.00 sec)

mysql> set mysql-default_character_set_client='utf8';
Query OK, 1 row affected (0.00 sec)

mysql> set mysql-default_character_set_connection='utf8';
Query OK, 1 row affected (0.00 sec)

mysql> select * from global_variables where variable_name like '%character%';
+----------------------------------------+----------------+
| variable_name                          | variable_value |
+----------------------------------------+----------------+
| mysql-default_character_set_results    | utf8mb4        |
| mysql-default_character_set_connection | utf8           |
| mysql-default_character_set_client     | utf8           |
| mysql-default_character_set_database   | utf8mb4        |
+----------------------------------------+----------------+
4 rows in set (0.00 sec)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2775,2020-05-11T14:18:52Z,2020-05-11T18:04:30Z,2020-10-30T16:11:18Z,MERGED,True,1,1,1,https://github.com/alpes214,V2.1.0 Fix set global variables error,1,[],https://github.com/sysown/proxysql/pull/2775,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2775#issuecomment-626760997,"Description:
Fixes the issue #2741
Test:
set statement changes default_% variables as expected without an error.
mysql> select * from global_variables where variable_name like '%character%';
+----------------------------------------+----------------+
| variable_name                          | variable_value |
+----------------------------------------+----------------+
| mysql-default_character_set_results    | utf8mb4        |
| mysql-default_character_set_connection | utf8mb4        |
| mysql-default_character_set_client     | utf8mb4        |
| mysql-default_character_set_database   | utf8mb4        |
+----------------------------------------+----------------+
4 rows in set (0.00 sec)

mysql> set mysql-default_character_set_client='utf8';
Query OK, 1 row affected (0.00 sec)

mysql> set mysql-default_character_set_connection='utf8';
Query OK, 1 row affected (0.00 sec)

mysql> select * from global_variables where variable_name like '%character%';
+----------------------------------------+----------------+
| variable_name                          | variable_value |
+----------------------------------------+----------------+
| mysql-default_character_set_results    | utf8mb4        |
| mysql-default_character_set_connection | utf8           |
| mysql-default_character_set_client     | utf8           |
| mysql-default_character_set_database   | utf8mb4        |
+----------------------------------------+----------------+
4 rows in set (0.00 sec)","@val214: can you please create an automated testing?
Just for 2.1 .
Thanks",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2777,2020-05-11T18:26:06Z,2020-05-11T18:27:50Z,2020-05-11T18:27:50Z,MERGED,True,174,71,9,https://github.com/renecannao,"Add client deprecate eof , from PR #2684",7,[],https://github.com/sysown/proxysql/pull/2777,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2777,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2777,2020-05-11T18:26:06Z,2020-05-11T18:27:50Z,2020-05-11T18:27:50Z,MERGED,True,174,71,9,https://github.com/renecannao,"Add client deprecate eof , from PR #2684",7,[],https://github.com/sysown/proxysql/pull/2777,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2777#issuecomment-626875098,,"cc @bibstha .
Creating a new branch, as I am likely to make some change on your PR before merging it into 2.0.12",True,{'THUMBS_UP': ['https://github.com/bibstha']}
sysown/proxysql,https://github.com/sysown/proxysql,2778,2020-05-11T18:59:35Z,,2022-03-10T21:50:17Z,OPEN,False,200,47,11,https://github.com/renecannao,Further commits on Add support for CLIENT_DEPRECATE_EOF #2684,10,[],https://github.com/sysown/proxysql/pull/2778,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2778,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2778,2020-05-11T18:59:35Z,,2022-03-10T21:50:17Z,OPEN,False,200,47,11,https://github.com/renecannao,Further commits on Add support for CLIENT_DEPRECATE_EOF #2684,10,[],https://github.com/sysown/proxysql/pull/2778,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2778#issuecomment-644394872,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2778,2020-05-11T18:59:35Z,,2022-03-10T21:50:17Z,OPEN,False,200,47,11,https://github.com/renecannao,Further commits on Add support for CLIENT_DEPRECATE_EOF #2684,10,[],https://github.com/sysown/proxysql/pull/2778,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/2778#issuecomment-645068020,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2778,2020-05-11T18:59:35Z,,2022-03-10T21:50:17Z,OPEN,False,200,47,11,https://github.com/renecannao,Further commits on Add support for CLIENT_DEPRECATE_EOF #2684,10,[],https://github.com/sysown/proxysql/pull/2778,https://github.com/pondix,4,https://github.com/sysown/proxysql/pull/2778#issuecomment-1064536997,,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2779,2020-05-11T19:16:45Z,2020-05-24T09:43:36Z,2020-10-30T16:11:12Z,MERGED,True,3,56,1,https://github.com/alpes214,TAP: wait until table is replicated,4,[],https://github.com/sysown/proxysql/pull/2779,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2779,"Description:
This PR supposed to fix the test failure happened on jenkins
INFO: TAP test /var/lib/jenkins/workspace/ProxySQL-Automated-Build-Testing/test/tap/tests/test_ps_hg_routing-t returncode 1, output is - 1..10
# Testing PS host groups routing
# 10 tests planned but only 0 executed
 / Query error Table 'test.test1' doesn't exist","Description:
This PR supposed to fix the test failure happened on jenkins
INFO: TAP test /var/lib/jenkins/workspace/ProxySQL-Automated-Build-Testing/test/tap/tests/test_ps_hg_routing-t returncode 1, output is - 1..10
# Testing PS host groups routing
# 10 tests planned but only 0 executed
 / Query error Table 'test.test1' doesn't exist",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2779,2020-05-11T19:16:45Z,2020-05-24T09:43:36Z,2020-10-30T16:11:12Z,MERGED,True,3,56,1,https://github.com/alpes214,TAP: wait until table is replicated,4,[],https://github.com/sysown/proxysql/pull/2779,https://github.com/alpes214,2,https://github.com/sysown/proxysql/pull/2779#issuecomment-629862058,"Description:
This PR supposed to fix the test failure happened on jenkins
INFO: TAP test /var/lib/jenkins/workspace/ProxySQL-Automated-Build-Testing/test/tap/tests/test_ps_hg_routing-t returncode 1, output is - 1..10
# Testing PS host groups routing
# 10 tests planned but only 0 executed
 / Query error Table 'test.test1' doesn't exist",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2780,2020-05-12T07:03:41Z,2022-05-31T09:08:45Z,2022-05-31T09:08:45Z,CLOSED,False,238,14,6,https://github.com/alpes214,V2.0.12 add more session variables,8,[],https://github.com/sysown/proxysql/pull/2780,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2780,"Description:
Add handling of the session variables

foreign_key_checks,
sql_big_selects,
innodb_lock_wait_timeout
long_query_time

Test:
Automation test created/adjusted","Description:
Add handling of the session variables

foreign_key_checks,
sql_big_selects,
innodb_lock_wait_timeout
long_query_time

Test:
Automation test created/adjusted",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2780,2020-05-12T07:03:41Z,2022-05-31T09:08:45Z,2022-05-31T09:08:45Z,CLOSED,False,238,14,6,https://github.com/alpes214,V2.0.12 add more session variables,8,[],https://github.com/sysown/proxysql/pull/2780,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2780#issuecomment-627218268,"Description:
Add handling of the session variables

foreign_key_checks,
sql_big_selects,
innodb_lock_wait_timeout
long_query_time

Test:
Automation test created/adjusted",Closes #2702,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2780,2020-05-12T07:03:41Z,2022-05-31T09:08:45Z,2022-05-31T09:08:45Z,CLOSED,False,238,14,6,https://github.com/alpes214,V2.0.12 add more session variables,8,[],https://github.com/sysown/proxysql/pull/2780,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2780#issuecomment-627219535,"Description:
Add handling of the session variables

foreign_key_checks,
sql_big_selects,
innodb_lock_wait_timeout
long_query_time

Test:
Automation test created/adjusted","Please let's also add the statement in in #2702 : SET foreign_key_checks=1, sql_safe_updates=0 , and a combination of them, setting the variables to 0/1 .",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2780,2020-05-12T07:03:41Z,2022-05-31T09:08:45Z,2022-05-31T09:08:45Z,CLOSED,False,238,14,6,https://github.com/alpes214,V2.0.12 add more session variables,8,[],https://github.com/sysown/proxysql/pull/2780,https://github.com/pondix,4,https://github.com/sysown/proxysql/pull/2780#issuecomment-657702553,"Description:
Add handling of the session variables

foreign_key_checks,
sql_big_selects,
innodb_lock_wait_timeout
long_query_time

Test:
Automation test created/adjusted",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2780,2020-05-12T07:03:41Z,2022-05-31T09:08:45Z,2022-05-31T09:08:45Z,CLOSED,False,238,14,6,https://github.com/alpes214,V2.0.12 add more session variables,8,[],https://github.com/sysown/proxysql/pull/2780,https://github.com/bajrang0789,5,https://github.com/sysown/proxysql/pull/2780#issuecomment-703783338,"Description:
Add handling of the session variables

foreign_key_checks,
sql_big_selects,
innodb_lock_wait_timeout
long_query_time

Test:
Automation test created/adjusted",@pondix / @renecannao  any update when this is going to be pushed to the mainstream.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2781,2020-05-12T07:29:28Z,2022-05-31T09:08:22Z,2022-05-31T09:08:22Z,CLOSED,False,238,14,6,https://github.com/alpes214,V2.1.0 add more session variables,7,[],https://github.com/sysown/proxysql/pull/2781,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2781,"(cherry picked from commit e34a5b1)
Description:
Add handling of the session variables

foreign_key_checks,
sql_big_selects,
innodb_lock_wait_timeout
long_query_time

Test:
Automation test created/adjusted","(cherry picked from commit e34a5b1)
Description:
Add handling of the session variables

foreign_key_checks,
sql_big_selects,
innodb_lock_wait_timeout
long_query_time

Test:
Automation test created/adjusted",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2781,2020-05-12T07:29:28Z,2022-05-31T09:08:22Z,2022-05-31T09:08:22Z,CLOSED,False,238,14,6,https://github.com/alpes214,V2.1.0 add more session variables,7,[],https://github.com/sysown/proxysql/pull/2781,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2781#issuecomment-627219684,"(cherry picked from commit e34a5b1)
Description:
Add handling of the session variables

foreign_key_checks,
sql_big_selects,
innodb_lock_wait_timeout
long_query_time

Test:
Automation test created/adjusted",Same as #2780 (comment),True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2781,2020-05-12T07:29:28Z,2022-05-31T09:08:22Z,2022-05-31T09:08:22Z,CLOSED,False,238,14,6,https://github.com/alpes214,V2.1.0 add more session variables,7,[],https://github.com/sysown/proxysql/pull/2781,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/2781#issuecomment-657702537,"(cherry picked from commit e34a5b1)
Description:
Add handling of the session variables

foreign_key_checks,
sql_big_selects,
innodb_lock_wait_timeout
long_query_time

Test:
Automation test created/adjusted",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2783,2020-05-12T13:14:20Z,,2020-07-13T17:53:19Z,OPEN,False,153,1,3,https://github.com/alpes214,V2.0.12 Do not disable multiplex when setting global variable,4,[],https://github.com/sysown/proxysql/pull/2783,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2783,"Description:
Do not disable multiplexing when global variable is set.
Test:
Automated test has been created.","Description:
Do not disable multiplexing when global variable is set.
Test:
Automated test has been created.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2783,2020-05-12T13:14:20Z,,2020-07-13T17:53:19Z,OPEN,False,153,1,3,https://github.com/alpes214,V2.0.12 Do not disable multiplex when setting global variable,4,[],https://github.com/sysown/proxysql/pull/2783,https://github.com/yakirgb,2,https://github.com/sysown/proxysql/pull/2783#issuecomment-630692780,"Description:
Do not disable multiplexing when global variable is set.
Test:
Automated test has been created.","Great idea!
I hate to add rules for global variables that clients running, every client running other global variables for initial connection.
Thank you.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2783,2020-05-12T13:14:20Z,,2020-07-13T17:53:19Z,OPEN,False,153,1,3,https://github.com/alpes214,V2.0.12 Do not disable multiplex when setting global variable,4,[],https://github.com/sysown/proxysql/pull/2783,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2783#issuecomment-630707699,"Description:
Do not disable multiplexing when global variable is set.
Test:
Automated test has been created.",@yakirgb : why clients are setting global variables?,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2783,2020-05-12T13:14:20Z,,2020-07-13T17:53:19Z,OPEN,False,153,1,3,https://github.com/alpes214,V2.0.12 Do not disable multiplex when setting global variable,4,[],https://github.com/sysown/proxysql/pull/2783,https://github.com/yakirgb,4,https://github.com/sysown/proxysql/pull/2783#issuecomment-630722538,"Description:
Do not disable multiplexing when global variable is set.
Test:
Automated test has been created.","@yakirgb : why clients are setting global variables?

Opps, I thought it was about ""select"" global like:
SELECT @@session.auto_increment_increment AS auto_increment_increment, @@character_set_client AS character_set_client, @@character_set_connection AS character_set_connection, @@character_set_results AS character_set_results, @@character_set_server AS character_set_server, @@collation_server AS collation_server, @@collation_connection AS collation_connection, @@init_connect AS init_connect, @@interactive_timeout AS interactive_timeout, @@license AS license, @@lower_case_table_names AS lower_case_table_names, @@max_allowed_packet AS max_allowed_packet, @@net_write_timeout AS net_write_timeout, @@performance_schema AS performance_schema, @@query_cache_size AS query_cache_size, @@query_cache_type AS query_cache_type, @@sql_mode AS sql_mode, @@system_time_zone AS system_time_zone, @@time_zone AS time_zone, @@tx_isolation AS transaction_isolation, @@wait_timeout AS wait_timeout

or:
SELECT @@session.auto_increment_increment AS auto_increment_increment, @@character_set_client AS character_set_client, @@character_set_connection AS character_set_connection, @@character_set_results AS character_set_results, @@character_set_server AS character_set_server, @@init_connect AS init_connect, @@interactive_timeout AS interactive_timeout, @@license AS license, @@lower_case_table_names AS lower_case_table_names, @@max_allowed_packet AS max_allowed_packet, @@net_buffer_length AS net_buffer_length, @@net_write_timeout AS net_write_timeout, @@query_cache_size AS query_cache_size, @@query_cache_type AS query_cache_type, @@sql_mode AS sql_mode, @@system_time_zone AS system_time_zone, @@time_zone AS time_zone, @@tx_isolation AS tx_isolation, @@wait_timeout AS wait_timeout

We have many types of clients, and every client running other initial connection, i added query rule to solve this issue:
INSERT INTO mysql_query_rules (active,multiplex,match_digest,comment) values (1,2, '^SELECT @@.*@@.*@@',DATA-10108 Enable multiplexing on every initial connection');

In general i think that multiplexing should be enabled  by default on ""initial"" connection of SELECT with many ""@@""",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2783,2020-05-12T13:14:20Z,,2020-07-13T17:53:19Z,OPEN,False,153,1,3,https://github.com/alpes214,V2.0.12 Do not disable multiplex when setting global variable,4,[],https://github.com/sysown/proxysql/pull/2783,https://github.com/pondix,5,https://github.com/sysown/proxysql/pull/2783#issuecomment-657702516,"Description:
Do not disable multiplexing when global variable is set.
Test:
Automated test has been created.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2784,2020-05-12T13:50:50Z,,2020-07-13T17:53:16Z,OPEN,False,153,1,3,https://github.com/alpes214,V2.1.0 Do not disable multiplex when setting global variable,4,[],https://github.com/sysown/proxysql/pull/2784,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2784,"(cherry picked from commit 1c5251b)
Description:
Do not disable multiplexing when global variable is set.
Test:
Automated test has been created.","(cherry picked from commit 1c5251b)
Description:
Do not disable multiplexing when global variable is set.
Test:
Automated test has been created.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2784,2020-05-12T13:50:50Z,,2020-07-13T17:53:16Z,OPEN,False,153,1,3,https://github.com/alpes214,V2.1.0 Do not disable multiplex when setting global variable,4,[],https://github.com/sysown/proxysql/pull/2784,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2784#issuecomment-657702500,"(cherry picked from commit 1c5251b)
Description:
Do not disable multiplexing when global variable is set.
Test:
Automated test has been created.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2789,2020-05-13T18:00:16Z,2020-05-13T18:00:21Z,2020-05-13T18:00:21Z,CLOSED,False,0,6,1,https://github.com/alpes214,WIP V2.0.12 failback from pxc maintenance,1,[],https://github.com/sysown/proxysql/pull/2789,https://github.com/alpes214,1,https://github.com/sysown/proxysql/pull/2789,"Description:
Implements failback from pxc maintenance mode.

shunned node (writer) goes to online
online node (backup_writer) goes to shunned
when all connections are closed shunned node (backup_writer) goes backup_writers with status online","Description:
Implements failback from pxc maintenance mode.

shunned node (writer) goes to online
online node (backup_writer) goes to shunned
when all connections are closed shunned node (backup_writer) goes backup_writers with status online",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2794,2020-05-14T19:22:45Z,2020-05-17T19:02:35Z,2020-06-15T19:02:16Z,MERGED,True,239,1,7,https://github.com/JavierJF,Fixes #2793 and #1493: Connection issues in compressed connections and in mixed compressed/uncompressed connections.,9,[],https://github.com/sysown/proxysql/pull/2794,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/2794,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2797,2020-05-15T04:18:06Z,2020-05-15T15:17:21Z,2020-05-15T15:17:22Z,MERGED,True,2,2,2,https://github.com/techwolf359,sysown/proxysql#2796: Fix systemctl start proxysql-initial,1,[],https://github.com/sysown/proxysql/pull/2797,https://github.com/techwolf359,1,https://github.com/sysown/proxysql/pull/2797,systemctl start proxysql was not correctly accepting the PROXYSQL_OPTS environment variable when set in proxysql-initial.service. Also fixed the proxysql.cnf comment at top to reflect the correct command as service proxysql initial does nothing.,systemctl start proxysql was not correctly accepting the PROXYSQL_OPTS environment variable when set in proxysql-initial.service. Also fixed the proxysql.cnf comment at top to reflect the correct command as service proxysql initial does nothing.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2797,2020-05-15T04:18:06Z,2020-05-15T15:17:21Z,2020-05-15T15:17:22Z,MERGED,True,2,2,2,https://github.com/techwolf359,sysown/proxysql#2796: Fix systemctl start proxysql-initial,1,[],https://github.com/sysown/proxysql/pull/2797,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2797#issuecomment-629017450,systemctl start proxysql was not correctly accepting the PROXYSQL_OPTS environment variable when set in proxysql-initial.service. Also fixed the proxysql.cnf comment at top to reflect the correct command as service proxysql initial does nothing.,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2803,2020-05-15T13:44:55Z,2020-05-20T16:49:35Z,2020-10-30T16:11:16Z,MERGED,True,37,1,2,https://github.com/JavierJF,Fixes #2802 and #2801: Missing entry added to prometheus map and added array init checks,2,[],https://github.com/sysown/proxysql/pull/2803,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/2803,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2803,2020-05-15T13:44:55Z,2020-05-20T16:49:35Z,2020-10-30T16:11:16Z,MERGED,True,37,1,2,https://github.com/JavierJF,Fixes #2802 and #2801: Missing entry added to prometheus map and added array init checks,2,[],https://github.com/sysown/proxysql/pull/2803,https://github.com/alpes214,2,https://github.com/sysown/proxysql/pull/2803#issuecomment-629350665,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2807,2020-05-18T19:34:20Z,2020-05-20T16:51:24Z,2020-10-30T16:11:14Z,MERGED,True,239,1,7,https://github.com/JavierJF,Fixes #2793 and #1493: Connection issues in compressed connections and in mixed compressed/uncompressed connections. ,9,[],https://github.com/sysown/proxysql/pull/2807,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/2807,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2811,2020-05-20T08:35:19Z,2020-05-24T01:19:06Z,2020-05-25T09:45:22Z,MERGED,True,2,1,1,https://github.com/arthurschreiber,Reset data stream status after switching users.,1,[],https://github.com/sysown/proxysql/pull/2811,https://github.com/arthurschreiber,1,https://github.com/sysown/proxysql/pull/2811,"When a backend connection is reused for a different user, the data stream status is set to STATE_MARIADB_QUERY, but was not set back to STATE_MARIADB_GENERIC once the user was switched successfully.
This caused additional connection setup (like executing init_connect) to be skipped on the first query after switching users. If another query using the the same user was executed, this new query would end up performing this additional connection setup.
By setting the data stream status back to STATE_MARIADB_GENERIC, we can ensure connection setup happens correctly after switching users.","When a backend connection is reused for a different user, the data stream status is set to STATE_MARIADB_QUERY, but was not set back to STATE_MARIADB_GENERIC once the user was switched successfully.
This caused additional connection setup (like executing init_connect) to be skipped on the first query after switching users. If another query using the the same user was executed, this new query would end up performing this additional connection setup.
By setting the data stream status back to STATE_MARIADB_GENERIC, we can ensure connection setup happens correctly after switching users.",True,"{'HOORAY': ['https://github.com/timvaillancourt', 'https://github.com/tma']}"
sysown/proxysql,https://github.com/sysown/proxysql,2811,2020-05-20T08:35:19Z,2020-05-24T01:19:06Z,2020-05-25T09:45:22Z,MERGED,True,2,1,1,https://github.com/arthurschreiber,Reset data stream status after switching users.,1,[],https://github.com/sysown/proxysql/pull/2811,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2811#issuecomment-631328624,"When a backend connection is reused for a different user, the data stream status is set to STATE_MARIADB_QUERY, but was not set back to STATE_MARIADB_GENERIC once the user was switched successfully.
This caused additional connection setup (like executing init_connect) to be skipped on the first query after switching users. If another query using the the same user was executed, this new query would end up performing this additional connection setup.
By setting the data stream status back to STATE_MARIADB_GENERIC, we can ensure connection setup happens correctly after switching users.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2811,2020-05-20T08:35:19Z,2020-05-24T01:19:06Z,2020-05-25T09:45:22Z,MERGED,True,2,1,1,https://github.com/arthurschreiber,Reset data stream status after switching users.,1,[],https://github.com/sysown/proxysql/pull/2811,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2811#issuecomment-631330282,"When a backend connection is reused for a different user, the data stream status is set to STATE_MARIADB_QUERY, but was not set back to STATE_MARIADB_GENERIC once the user was switched successfully.
This caused additional connection setup (like executing init_connect) to be skipped on the first query after switching users. If another query using the the same user was executed, this new query would end up performing this additional connection setup.
By setting the data stream status back to STATE_MARIADB_GENERIC, we can ensure connection setup happens correctly after switching users.","hi @arthurschreiber .
Thank you for the description of the problem and a patch.
Do you have a minimal reproducible test case?
If not, we will try to reproduce it first (the description of the problem is clear to me)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2811,2020-05-20T08:35:19Z,2020-05-24T01:19:06Z,2020-05-25T09:45:22Z,MERGED,True,2,1,1,https://github.com/arthurschreiber,Reset data stream status after switching users.,1,[],https://github.com/sysown/proxysql/pull/2811,https://github.com/arthurschreiber,4,https://github.com/sysown/proxysql/pull/2811#issuecomment-631333110,"When a backend connection is reused for a different user, the data stream status is set to STATE_MARIADB_QUERY, but was not set back to STATE_MARIADB_GENERIC once the user was switched successfully.
This caused additional connection setup (like executing init_connect) to be skipped on the first query after switching users. If another query using the the same user was executed, this new query would end up performing this additional connection setup.
By setting the data stream status back to STATE_MARIADB_GENERIC, we can ensure connection setup happens correctly after switching users.",@renecannao I have a test case as well: https://github.com/arthurschreiber/proxysql-issue,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2811,2020-05-20T08:35:19Z,2020-05-24T01:19:06Z,2020-05-25T09:45:22Z,MERGED,True,2,1,1,https://github.com/arthurschreiber,Reset data stream status after switching users.,1,[],https://github.com/sysown/proxysql/pull/2811,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/2811#issuecomment-631337900,"When a backend connection is reused for a different user, the data stream status is set to STATE_MARIADB_QUERY, but was not set back to STATE_MARIADB_GENERIC once the user was switched successfully.
This caused additional connection setup (like executing init_connect) to be skipped on the first query after switching users. If another query using the the same user was executed, this new query would end up performing this additional connection setup.
By setting the data stream status back to STATE_MARIADB_GENERIC, we can ensure connection setup happens correctly after switching users.",Wonderful! Thank you!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2811,2020-05-20T08:35:19Z,2020-05-24T01:19:06Z,2020-05-25T09:45:22Z,MERGED,True,2,1,1,https://github.com/arthurschreiber,Reset data stream status after switching users.,1,[],https://github.com/sysown/proxysql/pull/2811,https://github.com/renecannao,6,https://github.com/sysown/proxysql/pull/2811#issuecomment-631586433,"When a backend connection is reused for a different user, the data stream status is set to STATE_MARIADB_QUERY, but was not set back to STATE_MARIADB_GENERIC once the user was switched successfully.
This caused additional connection setup (like executing init_connect) to be skipped on the first query after switching users. If another query using the the same user was executed, this new query would end up performing this additional connection setup.
By setting the data stream status back to STATE_MARIADB_GENERIC, we can ensure connection setup happens correctly after switching users.",add to whitelist,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2811,2020-05-20T08:35:19Z,2020-05-24T01:19:06Z,2020-05-25T09:45:22Z,MERGED,True,2,1,1,https://github.com/arthurschreiber,Reset data stream status after switching users.,1,[],https://github.com/sysown/proxysql/pull/2811,https://github.com/renecannao,7,https://github.com/sysown/proxysql/pull/2811#issuecomment-631587086,"When a backend connection is reused for a different user, the data stream status is set to STATE_MARIADB_QUERY, but was not set back to STATE_MARIADB_GENERIC once the user was switched successfully.
This caused additional connection setup (like executing init_connect) to be skipped on the first query after switching users. If another query using the the same user was executed, this new query would end up performing this additional connection setup.
By setting the data stream status back to STATE_MARIADB_GENERIC, we can ensure connection setup happens correctly after switching users.",The previous message adds @arthurschreiber to the whitelist of contributors that will trigger automatic testing on PRs,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2811,2020-05-20T08:35:19Z,2020-05-24T01:19:06Z,2020-05-25T09:45:22Z,MERGED,True,2,1,1,https://github.com/arthurschreiber,Reset data stream status after switching users.,1,[],https://github.com/sysown/proxysql/pull/2811,https://github.com/renecannao,8,https://github.com/sysown/proxysql/pull/2811#issuecomment-633162871,"When a backend connection is reused for a different user, the data stream status is set to STATE_MARIADB_QUERY, but was not set back to STATE_MARIADB_GENERIC once the user was switched successfully.
This caused additional connection setup (like executing init_connect) to be skipped on the first query after switching users. If another query using the the same user was executed, this new query would end up performing this additional connection setup.
By setting the data stream status back to STATE_MARIADB_GENERIC, we can ensure connection setup happens correctly after switching users.",Thank you @arthurschreiber,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2813,2020-05-20T10:20:57Z,2020-05-24T01:18:42Z,2020-07-03T15:44:24Z,MERGED,True,17,0,1,https://github.com/arthurschreiber,Fix `default_track_gtids` config value being ignored,1,[],https://github.com/sysown/proxysql/pull/2813,https://github.com/arthurschreiber,1,https://github.com/sysown/proxysql/pull/2813,"When a new backend connection is opened, the session_track_gtids config variable would be set from the default specified in the proxysql configuration, but it was actually never sent to MySQL (via a SET SESSION command).
This changes the code to actually send the expected SET SESSION command.

A reproducible test case can be found here: https://github.com/arthurschreiber/proxysql-issue/tree/default-session-track-gtid-issue","When a new backend connection is opened, the session_track_gtids config variable would be set from the default specified in the proxysql configuration, but it was actually never sent to MySQL (via a SET SESSION command).
This changes the code to actually send the expected SET SESSION command.

A reproducible test case can be found here: https://github.com/arthurschreiber/proxysql-issue/tree/default-session-track-gtid-issue",True,"{'HOORAY': ['https://github.com/tma', 'https://github.com/timvaillancourt']}"
sysown/proxysql,https://github.com/sysown/proxysql,2813,2020-05-20T10:20:57Z,2020-05-24T01:18:42Z,2020-07-03T15:44:24Z,MERGED,True,17,0,1,https://github.com/arthurschreiber,Fix `default_track_gtids` config value being ignored,1,[],https://github.com/sysown/proxysql/pull/2813,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2813#issuecomment-631386409,"When a new backend connection is opened, the session_track_gtids config variable would be set from the default specified in the proxysql configuration, but it was actually never sent to MySQL (via a SET SESSION command).
This changes the code to actually send the expected SET SESSION command.

A reproducible test case can be found here: https://github.com/arthurschreiber/proxysql-issue/tree/default-session-track-gtid-issue",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2813,2020-05-20T10:20:57Z,2020-05-24T01:18:42Z,2020-07-03T15:44:24Z,MERGED,True,17,0,1,https://github.com/arthurschreiber,Fix `default_track_gtids` config value being ignored,1,[],https://github.com/sysown/proxysql/pull/2813,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2813#issuecomment-631588117,"When a new backend connection is opened, the session_track_gtids config variable would be set from the default specified in the proxysql configuration, but it was actually never sent to MySQL (via a SET SESSION command).
This changes the code to actually send the expected SET SESSION command.

A reproducible test case can be found here: https://github.com/arthurschreiber/proxysql-issue/tree/default-session-track-gtid-issue",ok to test,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2813,2020-05-20T10:20:57Z,2020-05-24T01:18:42Z,2020-07-03T15:44:24Z,MERGED,True,17,0,1,https://github.com/arthurschreiber,Fix `default_track_gtids` config value being ignored,1,[],https://github.com/sysown/proxysql/pull/2813,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/2813#issuecomment-632382562,"When a new backend connection is opened, the session_track_gtids config variable would be set from the default specified in the proxysql configuration, but it was actually never sent to MySQL (via a SET SESSION command).
This changes the code to actually send the expected SET SESSION command.

A reproducible test case can be found here: https://github.com/arthurschreiber/proxysql-issue/tree/default-session-track-gtid-issue","@arthurschreiber :

A reproducible test case can be found here: https://github.com/github/proxysql-issues/tree/default-session-track-gtid-issue

The link doesn't work. Is it a private repo?",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2813,2020-05-20T10:20:57Z,2020-05-24T01:18:42Z,2020-07-03T15:44:24Z,MERGED,True,17,0,1,https://github.com/arthurschreiber,Fix `default_track_gtids` config value being ignored,1,[],https://github.com/sysown/proxysql/pull/2813,https://github.com/arthurschreiber,5,https://github.com/sysown/proxysql/pull/2813#issuecomment-632549012,"When a new backend connection is opened, the session_track_gtids config variable would be set from the default specified in the proxysql configuration, but it was actually never sent to MySQL (via a SET SESSION command).
This changes the code to actually send the expected SET SESSION command.

A reproducible test case can be found here: https://github.com/arthurschreiber/proxysql-issue/tree/default-session-track-gtid-issue","The link doesn't work. Is it a private repo?

Ah yes, I linked the wrong repo. I'll get that fixed asap.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2813,2020-05-20T10:20:57Z,2020-05-24T01:18:42Z,2020-07-03T15:44:24Z,MERGED,True,17,0,1,https://github.com/arthurschreiber,Fix `default_track_gtids` config value being ignored,1,[],https://github.com/sysown/proxysql/pull/2813,https://github.com/arthurschreiber,6,https://github.com/sysown/proxysql/pull/2813#issuecomment-632550027,"When a new backend connection is opened, the session_track_gtids config variable would be set from the default specified in the proxysql configuration, but it was actually never sent to MySQL (via a SET SESSION command).
This changes the code to actually send the expected SET SESSION command.

A reproducible test case can be found here: https://github.com/arthurschreiber/proxysql-issue/tree/default-session-track-gtid-issue",Here's a working link: https://github.com/arthurschreiber/proxysql-issue/tree/default-session-track-gtid-issue,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2813,2020-05-20T10:20:57Z,2020-05-24T01:18:42Z,2020-07-03T15:44:24Z,MERGED,True,17,0,1,https://github.com/arthurschreiber,Fix `default_track_gtids` config value being ignored,1,[],https://github.com/sysown/proxysql/pull/2813,https://github.com/renecannao,7,https://github.com/sysown/proxysql/pull/2813#issuecomment-633162843,"When a new backend connection is opened, the session_track_gtids config variable would be set from the default specified in the proxysql configuration, but it was actually never sent to MySQL (via a SET SESSION command).
This changes the code to actually send the expected SET SESSION command.

A reproducible test case can be found here: https://github.com/arthurschreiber/proxysql-issue/tree/default-session-track-gtid-issue",Thank you @arthurschreiber !,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2813,2020-05-20T10:20:57Z,2020-05-24T01:18:42Z,2020-07-03T15:44:24Z,MERGED,True,17,0,1,https://github.com/arthurschreiber,Fix `default_track_gtids` config value being ignored,1,[],https://github.com/sysown/proxysql/pull/2813,https://github.com/renecannao,8,https://github.com/sysown/proxysql/pull/2813#issuecomment-653602513,"When a new backend connection is opened, the session_track_gtids config variable would be set from the default specified in the proxysql configuration, but it was actually never sent to MySQL (via a SET SESSION command).
This changes the code to actually send the expected SET SESSION command.

A reproducible test case can be found here: https://github.com/arthurschreiber/proxysql-issue/tree/default-session-track-gtid-issue","@arthurschreiber : can you please confirm the client are never using session_track_gtids=ALL_GTIDS ?
We need to make some change to the current implementation, because proxysql should track session_track_gtids with value OWN_GTID even if client sets it to OFF.
In other words, we need to decouple client setting from backend setting.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2814,2020-05-20T22:45:50Z,2020-05-24T01:16:29Z,2020-05-24T01:16:29Z,MERGED,True,16,10,1,https://github.com/ggunson,Rewrite and formatting change to issue template,1,[],https://github.com/sysown/proxysql/pull/2814,https://github.com/ggunson,1,https://github.com/sysown/proxysql/pull/2814,"This PR makes some changes to the issue template:

fixed the markdown formatting of the checkbox list
removed ""for paid support and community users"" on the first line because that's ""everyone""?
added the contents of the crashing bug page directly, because the ProxySQL docs on GitHub are deprecated, and there are duplicates listed there

added link to https://proxysql.com/contact-us/ for the ""contact us"" part of that; I'm not sure if that's what you want people to use?


changed the ""remember"" line, as people are likely learning that this isn't the location for support questions as they're reading this
added link to page about support contracts
added default file location for the ProxySQL error log

Ideally the template would be set up where users could fill it in, rather than delete it in its entirety as I've been seeing, but I don't have any suggestions on how to do that.","This PR makes some changes to the issue template:

fixed the markdown formatting of the checkbox list
removed ""for paid support and community users"" on the first line because that's ""everyone""?
added the contents of the crashing bug page directly, because the ProxySQL docs on GitHub are deprecated, and there are duplicates listed there

added link to https://proxysql.com/contact-us/ for the ""contact us"" part of that; I'm not sure if that's what you want people to use?


changed the ""remember"" line, as people are likely learning that this isn't the location for support questions as they're reading this
added link to page about support contracts
added default file location for the ProxySQL error log

Ideally the template would be set up where users could fill it in, rather than delete it in its entirety as I've been seeing, but I don't have any suggestions on how to do that.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2814,2020-05-20T22:45:50Z,2020-05-24T01:16:29Z,2020-05-24T01:16:29Z,MERGED,True,16,10,1,https://github.com/ggunson,Rewrite and formatting change to issue template,1,[],https://github.com/sysown/proxysql/pull/2814,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2814#issuecomment-631768943,"This PR makes some changes to the issue template:

fixed the markdown formatting of the checkbox list
removed ""for paid support and community users"" on the first line because that's ""everyone""?
added the contents of the crashing bug page directly, because the ProxySQL docs on GitHub are deprecated, and there are duplicates listed there

added link to https://proxysql.com/contact-us/ for the ""contact us"" part of that; I'm not sure if that's what you want people to use?


changed the ""remember"" line, as people are likely learning that this isn't the location for support questions as they're reading this
added link to page about support contracts
added default file location for the ProxySQL error log

Ideally the template would be set up where users could fill it in, rather than delete it in its entirety as I've been seeing, but I don't have any suggestions on how to do that.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2814,2020-05-20T22:45:50Z,2020-05-24T01:16:29Z,2020-05-24T01:16:29Z,MERGED,True,16,10,1,https://github.com/ggunson,Rewrite and formatting change to issue template,1,[],https://github.com/sysown/proxysql/pull/2814,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2814#issuecomment-633150019,"This PR makes some changes to the issue template:

fixed the markdown formatting of the checkbox list
removed ""for paid support and community users"" on the first line because that's ""everyone""?
added the contents of the crashing bug page directly, because the ProxySQL docs on GitHub are deprecated, and there are duplicates listed there

added link to https://proxysql.com/contact-us/ for the ""contact us"" part of that; I'm not sure if that's what you want people to use?


changed the ""remember"" line, as people are likely learning that this isn't the location for support questions as they're reading this
added link to page about support contracts
added default file location for the ProxySQL error log

Ideally the template would be set up where users could fill it in, rather than delete it in its entirety as I've been seeing, but I don't have any suggestions on how to do that.",add to whitelist,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2816,2020-05-21T21:20:23Z,2020-05-24T01:17:07Z,2020-05-24T01:17:21Z,MERGED,True,1,1,1,https://github.com/mknapphrt,Fix cache size calculation integer overflow,1,[],https://github.com/sysown/proxysql/pull/2816,https://github.com/mknapphrt,1,https://github.com/sysown/proxysql/pull/2816,"This is to fix the issues outlined in #2815
An int overflow causes the return value to be messed up, falsely reporting exabytes of cache once it hits ~2.1GB and then starts purging entries.
Signed-off-by: Mark Knapp mknapp@hudson-trading.com","This is to fix the issues outlined in #2815
An int overflow causes the return value to be messed up, falsely reporting exabytes of cache once it hits ~2.1GB and then starts purging entries.
Signed-off-by: Mark Knapp mknapp@hudson-trading.com",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2816,2020-05-21T21:20:23Z,2020-05-24T01:17:07Z,2020-05-24T01:17:21Z,MERGED,True,1,1,1,https://github.com/mknapphrt,Fix cache size calculation integer overflow,1,[],https://github.com/sysown/proxysql/pull/2816,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2816#issuecomment-632353111,"This is to fix the issues outlined in #2815
An int overflow causes the return value to be messed up, falsely reporting exabytes of cache once it hits ~2.1GB and then starts purging entries.
Signed-off-by: Mark Knapp mknapp@hudson-trading.com",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2816,2020-05-21T21:20:23Z,2020-05-24T01:17:07Z,2020-05-24T01:17:21Z,MERGED,True,1,1,1,https://github.com/mknapphrt,Fix cache size calculation integer overflow,1,[],https://github.com/sysown/proxysql/pull/2816,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2816#issuecomment-633149948,"This is to fix the issues outlined in #2815
An int overflow causes the return value to be messed up, falsely reporting exabytes of cache once it hits ~2.1GB and then starts purging entries.
Signed-off-by: Mark Knapp mknapp@hudson-trading.com",ok to test,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2816,2020-05-21T21:20:23Z,2020-05-24T01:17:07Z,2020-05-24T01:17:21Z,MERGED,True,1,1,1,https://github.com/mknapphrt,Fix cache size calculation integer overflow,1,[],https://github.com/sysown/proxysql/pull/2816,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/2816#issuecomment-633162648,"This is to fix the issues outlined in #2815
An int overflow causes the return value to be messed up, falsely reporting exabytes of cache once it hits ~2.1GB and then starts purging entries.
Signed-off-by: Mark Knapp mknapp@hudson-trading.com",Thank you!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2821,2020-05-23T20:15:31Z,2020-05-24T11:03:40Z,2020-10-30T16:11:10Z,MERGED,True,1320,1056,17,https://github.com/renecannao,V2.1.0 sqlite3,5,[],https://github.com/sysown/proxysql/pull/2821,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2821,"Support for SQLite3 plugin
This commit prepares proxysql for further development related to SQLite3.
Specifically, it allows to either use built-in SQLite3 library, or to load it from a plugin.","Support for SQLite3 plugin
This commit prepares proxysql for further development related to SQLite3.
Specifically, it allows to either use built-in SQLite3 library, or to load it from a plugin.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2821,2020-05-23T20:15:31Z,2020-05-24T11:03:40Z,2020-10-30T16:11:10Z,MERGED,True,1320,1056,17,https://github.com/renecannao,V2.1.0 sqlite3,5,[],https://github.com/sysown/proxysql/pull/2821,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2821#issuecomment-633205414,"Support for SQLite3 plugin
This commit prepares proxysql for further development related to SQLite3.
Specifically, it allows to either use built-in SQLite3 library, or to load it from a plugin.",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2823,2020-05-23T23:54:50Z,2020-05-25T16:13:29Z,2020-06-15T19:03:06Z,MERGED,True,27,126,1,https://github.com/renecannao,V2.0.13 review2698,6,[],https://github.com/sysown/proxysql/pull/2823,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2823,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2823,2020-05-23T23:54:50Z,2020-05-25T16:13:29Z,2020-06-15T19:03:06Z,MERGED,True,27,126,1,https://github.com/renecannao,V2.0.13 review2698,6,[],https://github.com/sysown/proxysql/pull/2823,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2823#issuecomment-633206083,,Reverting all spacing conventions: this was only making the PR more difficult to analyze.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2823,2020-05-23T23:54:50Z,2020-05-25T16:13:29Z,2020-06-15T19:03:06Z,MERGED,True,27,126,1,https://github.com/renecannao,V2.0.13 review2698,6,[],https://github.com/sysown/proxysql/pull/2823,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2823#issuecomment-633206554,,test this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2824,2020-05-24T00:03:08Z,2020-05-24T01:00:54Z,2020-05-24T01:00:54Z,CLOSED,False,239,259,10,https://github.com/renecannao,V2.0.11 shopify consistent reads into v2.0.13-review2698,2,[],https://github.com/sysown/proxysql/pull/2824,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2824,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2825,2020-05-24T00:55:39Z,2020-05-24T01:00:33Z,2020-05-24T01:00:33Z,CLOSED,False,106,234,1,https://github.com/renecannao,clean up get_random_MySrvC function,1,[],https://github.com/sysown/proxysql/pull/2825,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2825,"This function had a substantial amount of disabled code,
apparently as the result of a successful experiment. For ease of
further development, this removes the obsolete code.","This function had a substantial amount of disabled code,
apparently as the result of a successful experiment. For ease of
further development, this removes the obsolete code.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2826,2020-05-24T01:38:49Z,2020-05-24T11:03:54Z,2020-10-30T16:11:05Z,MERGED,True,36,12,3,https://github.com/renecannao,V2.1.0 from2013 1,4,[],https://github.com/sysown/proxysql/pull/2826,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2826,4 PRs ported from 2.0.13 to 2.1.0,4 PRs ported from 2.0.13 to 2.1.0,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2826,2020-05-24T01:38:49Z,2020-05-24T11:03:54Z,2020-10-30T16:11:05Z,MERGED,True,36,12,3,https://github.com/renecannao,V2.1.0 from2013 1,4,[],https://github.com/sysown/proxysql/pull/2826,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2826#issuecomment-633205448,4 PRs ported from 2.0.13 to 2.1.0,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2828,2020-05-26T09:45:00Z,2020-05-27T01:30:24Z,2020-10-30T16:11:04Z,MERGED,True,27,126,1,https://github.com/JavierJF,V2.1.0 review2698,2,[],https://github.com/sysown/proxysql/pull/2828,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/2828,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2828,2020-05-26T09:45:00Z,2020-05-27T01:30:24Z,2020-10-30T16:11:04Z,MERGED,True,27,126,1,https://github.com/JavierJF,V2.1.0 review2698,2,[],https://github.com/sysown/proxysql/pull/2828,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2828#issuecomment-634355106,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2829,2020-05-26T20:37:47Z,2020-05-29T11:00:00Z,2020-06-15T19:03:05Z,MERGED,True,485,4,7,https://github.com/renecannao,Add support for SAVEPOINT #948,5,[],https://github.com/sysown/proxysql/pull/2829,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2829,,,True,"{'THUMBS_UP': ['https://github.com/yakirgb', 'https://github.com/MaxFedotov'], 'HEART': ['https://github.com/yakirgb']}"
sysown/proxysql,https://github.com/sysown/proxysql,2829,2020-05-26T20:37:47Z,2020-05-29T11:00:00Z,2020-06-15T19:03:05Z,MERGED,True,485,4,7,https://github.com/renecannao,Add support for SAVEPOINT #948,5,[],https://github.com/sysown/proxysql/pull/2829,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2829#issuecomment-634290394,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2829,2020-05-26T20:37:47Z,2020-05-29T11:00:00Z,2020-06-15T19:03:05Z,MERGED,True,485,4,7,https://github.com/renecannao,Add support for SAVEPOINT #948,5,[],https://github.com/sysown/proxysql/pull/2829,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2829#issuecomment-634355352,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2831,2020-05-26T22:38:38Z,2020-05-27T00:33:44Z,2020-10-30T16:10:59Z,MERGED,True,25,11,1,https://github.com/renecannao,More verbose output for test_ps_hg_routing-t,2,[],https://github.com/sysown/proxysql/pull/2831,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2831,"Added LINE in output
Use table ps_hg_routing instead of test1
Use system() to output the current configuration
This PR adds more verbose output, to identify why it randomly fails","Added LINE in output
Use table ps_hg_routing instead of test1
Use system() to output the current configuration
This PR adds more verbose output, to identify why it randomly fails",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2831,2020-05-26T22:38:38Z,2020-05-27T00:33:44Z,2020-10-30T16:10:59Z,MERGED,True,25,11,1,https://github.com/renecannao,More verbose output for test_ps_hg_routing-t,2,[],https://github.com/sysown/proxysql/pull/2831,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2831#issuecomment-634344310,"Added LINE in output
Use table ps_hg_routing instead of test1
Use system() to output the current configuration
This PR adds more verbose output, to identify why it randomly fails",test this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2833,2020-05-27T16:56:10Z,2020-05-29T23:16:38Z,2020-10-30T16:10:57Z,MERGED,True,1900,113,12,https://github.com/JavierJF,"Sync support for 'mysql_galera_hostgroups', 'mysql_group_replication_hostgroups' and 'mysql_aws_aurora_hostgroups' #2687",34,[],https://github.com/sysown/proxysql/pull/2833,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/2833,Closes #2687,Closes #2687,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2833,2020-05-27T16:56:10Z,2020-05-29T23:16:38Z,2020-10-30T16:10:57Z,MERGED,True,1900,113,12,https://github.com/JavierJF,"Sync support for 'mysql_galera_hostgroups', 'mysql_group_replication_hostgroups' and 'mysql_aws_aurora_hostgroups' #2687",34,[],https://github.com/sysown/proxysql/pull/2833,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/2833#issuecomment-636061572,Closes #2687,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2833,2020-05-27T16:56:10Z,2020-05-29T23:16:38Z,2020-10-30T16:10:57Z,MERGED,True,1900,113,12,https://github.com/JavierJF,"Sync support for 'mysql_galera_hostgroups', 'mysql_group_replication_hostgroups' and 'mysql_aws_aurora_hostgroups' #2687",34,[],https://github.com/sysown/proxysql/pull/2833,https://github.com/JavierJF,3,https://github.com/sysown/proxysql/pull/2833#issuecomment-636088375,Closes #2687,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2833,2020-05-27T16:56:10Z,2020-05-29T23:16:38Z,2020-10-30T16:10:57Z,MERGED,True,1900,113,12,https://github.com/JavierJF,"Sync support for 'mysql_galera_hostgroups', 'mysql_group_replication_hostgroups' and 'mysql_aws_aurora_hostgroups' #2687",34,[],https://github.com/sysown/proxysql/pull/2833,https://github.com/JavierJF,4,https://github.com/sysown/proxysql/pull/2833#issuecomment-636179901,Closes #2687,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2833,2020-05-27T16:56:10Z,2020-05-29T23:16:38Z,2020-10-30T16:10:57Z,MERGED,True,1900,113,12,https://github.com/JavierJF,"Sync support for 'mysql_galera_hostgroups', 'mysql_group_replication_hostgroups' and 'mysql_aws_aurora_hostgroups' #2687",34,[],https://github.com/sysown/proxysql/pull/2833,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/2833#issuecomment-636232289,Closes #2687,Thank you Javier!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2836,2020-05-28T14:09:23Z,2020-05-29T20:19:53Z,2020-05-29T20:20:10Z,MERGED,True,1,1,1,https://github.com/noother,fix unquoted table name leading to sql errors,1,[],https://github.com/sysown/proxysql/pull/2836,https://github.com/noother,1,https://github.com/sysown/proxysql/pull/2836,"In lib/MySQL_Protocol.cpp MySQL_Protocol::generate_COM_QUERY_from_COM_FIELD_LIST line 2315 there is a query:
char *qt = (char *)""SELECT * FROM %s WHERE 1=0"";
The table name here is unquoted, leading to SQL errors if the table name is a keyword or somewhat non-normalized, like:
2020-05-28 15:36:16 MySQL_Session.cpp:4333:handler(): [WARNING] Error during query on (1,sql1,3306): 1064, You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'groups WHERE 1=0' at line 1","In lib/MySQL_Protocol.cpp MySQL_Protocol::generate_COM_QUERY_from_COM_FIELD_LIST line 2315 there is a query:
char *qt = (char *)""SELECT * FROM %s WHERE 1=0"";
The table name here is unquoted, leading to SQL errors if the table name is a keyword or somewhat non-normalized, like:
2020-05-28 15:36:16 MySQL_Session.cpp:4333:handler(): [WARNING] Error during query on (1,sql1,3306): 1064, You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'groups WHERE 1=0' at line 1",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2836,2020-05-28T14:09:23Z,2020-05-29T20:19:53Z,2020-05-29T20:20:10Z,MERGED,True,1,1,1,https://github.com/noother,fix unquoted table name leading to sql errors,1,[],https://github.com/sysown/proxysql/pull/2836,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2836#issuecomment-635375069,"In lib/MySQL_Protocol.cpp MySQL_Protocol::generate_COM_QUERY_from_COM_FIELD_LIST line 2315 there is a query:
char *qt = (char *)""SELECT * FROM %s WHERE 1=0"";
The table name here is unquoted, leading to SQL errors if the table name is a keyword or somewhat non-normalized, like:
2020-05-28 15:36:16 MySQL_Session.cpp:4333:handler(): [WARNING] Error during query on (1,sql1,3306): 1064, You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'groups WHERE 1=0' at line 1",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2836,2020-05-28T14:09:23Z,2020-05-29T20:19:53Z,2020-05-29T20:20:10Z,MERGED,True,1,1,1,https://github.com/noother,fix unquoted table name leading to sql errors,1,[],https://github.com/sysown/proxysql/pull/2836,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2836#issuecomment-635911096,"In lib/MySQL_Protocol.cpp MySQL_Protocol::generate_COM_QUERY_from_COM_FIELD_LIST line 2315 there is a query:
char *qt = (char *)""SELECT * FROM %s WHERE 1=0"";
The table name here is unquoted, leading to SQL errors if the table name is a keyword or somewhat non-normalized, like:
2020-05-28 15:36:16 MySQL_Session.cpp:4333:handler(): [WARNING] Error during query on (1,sql1,3306): 1064, You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'groups WHERE 1=0' at line 1",test this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2836,2020-05-28T14:09:23Z,2020-05-29T20:19:53Z,2020-05-29T20:20:10Z,MERGED,True,1,1,1,https://github.com/noother,fix unquoted table name leading to sql errors,1,[],https://github.com/sysown/proxysql/pull/2836,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/2836#issuecomment-635911211,"In lib/MySQL_Protocol.cpp MySQL_Protocol::generate_COM_QUERY_from_COM_FIELD_LIST line 2315 there is a query:
char *qt = (char *)""SELECT * FROM %s WHERE 1=0"";
The table name here is unquoted, leading to SQL errors if the table name is a keyword or somewhat non-normalized, like:
2020-05-28 15:36:16 MySQL_Session.cpp:4333:handler(): [WARNING] Error during query on (1,sql1,3306): 1064, You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'groups WHERE 1=0' at line 1",@noother : thank you for the PR. Automated testing started,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2836,2020-05-28T14:09:23Z,2020-05-29T20:19:53Z,2020-05-29T20:20:10Z,MERGED,True,1,1,1,https://github.com/noother,fix unquoted table name leading to sql errors,1,[],https://github.com/sysown/proxysql/pull/2836,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/2836#issuecomment-636174189,"In lib/MySQL_Protocol.cpp MySQL_Protocol::generate_COM_QUERY_from_COM_FIELD_LIST line 2315 there is a query:
char *qt = (char *)""SELECT * FROM %s WHERE 1=0"";
The table name here is unquoted, leading to SQL errors if the table name is a keyword or somewhat non-normalized, like:
2020-05-28 15:36:16 MySQL_Session.cpp:4333:handler(): [WARNING] Error during query on (1,sql1,3306): 1064, You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'groups WHERE 1=0' at line 1",Thank you,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2839,2020-05-29T12:37:04Z,2020-05-29T20:21:36Z,2020-06-15T19:03:03Z,MERGED,True,1,1,1,https://github.com/renecannao,Ignore last semicolon from SET statements #2838,1,[],https://github.com/sysown/proxysql/pull/2839,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2839,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2841,2020-05-29T20:06:16Z,2020-06-18T21:10:24Z,2020-06-18T21:10:24Z,MERGED,True,111,58,7,https://github.com/renecannao,Change default of exit_after_SetParse,6,[],https://github.com/sysown/proxysql/pull/2841,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2841,WIP to fix an issue with autocommit,WIP to fix an issue with autocommit,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2841,2020-05-29T20:06:16Z,2020-06-18T21:10:24Z,2020-06-18T21:10:24Z,MERGED,True,111,58,7,https://github.com/renecannao,Change default of exit_after_SetParse,6,[],https://github.com/sysown/proxysql/pull/2841,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2841#issuecomment-644752497,WIP to fix an issue with autocommit,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2841,2020-05-29T20:06:16Z,2020-06-18T21:10:24Z,2020-06-18T21:10:24Z,MERGED,True,111,58,7,https://github.com/renecannao,Change default of exit_after_SetParse,6,[],https://github.com/sysown/proxysql/pull/2841,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/2841#issuecomment-644810612,WIP to fix an issue with autocommit,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2841,2020-05-29T20:06:16Z,2020-06-18T21:10:24Z,2020-06-18T21:10:24Z,MERGED,True,111,58,7,https://github.com/renecannao,Change default of exit_after_SetParse,6,[],https://github.com/sysown/proxysql/pull/2841,https://github.com/pondix,4,https://github.com/sysown/proxysql/pull/2841#issuecomment-644841861,WIP to fix an issue with autocommit,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2841,2020-05-29T20:06:16Z,2020-06-18T21:10:24Z,2020-06-18T21:10:24Z,MERGED,True,111,58,7,https://github.com/renecannao,Change default of exit_after_SetParse,6,[],https://github.com/sysown/proxysql/pull/2841,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/2841#issuecomment-646215381,WIP to fix an issue with autocommit,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2841,2020-05-29T20:06:16Z,2020-06-18T21:10:24Z,2020-06-18T21:10:24Z,MERGED,True,111,58,7,https://github.com/renecannao,Change default of exit_after_SetParse,6,[],https://github.com/sysown/proxysql/pull/2841,https://github.com/renecannao,6,https://github.com/sysown/proxysql/pull/2841#issuecomment-646235855,WIP to fix an issue with autocommit,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2842,2020-05-29T20:19:32Z,2020-05-29T23:14:18Z,2020-06-15T19:03:02Z,MERGED,True,29,15,2,https://github.com/renecannao,V2.0.13 changes on SET testing,5,[],https://github.com/sysown/proxysql/pull/2842,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2842,Port of PR #2755 and #2756 from 2.1.0 to 2.0.13,Port of PR #2755 and #2756 from 2.1.0 to 2.0.13,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2844,2020-05-29T23:15:39Z,2020-06-12T10:10:15Z,2020-10-30T16:11:51Z,MERGED,True,8,3,3,https://github.com/renecannao,V2.1.0 cherrypicks 2.0.13,4,[],https://github.com/sysown/proxysql/pull/2844,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2844,Various ports from 2.0.13,Various ports from 2.0.13,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2846,2020-05-31T14:56:11Z,2020-06-07T20:39:47Z,2020-10-30T16:10:56Z,MERGED,True,9,0,3,https://github.com/JavierJF,Fixes #2834: Segfault due to invalid access to threads during startup / shutdown,1,[],https://github.com/sysown/proxysql/pull/2846,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/2846,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2847,2020-05-31T15:23:08Z,2020-06-07T20:39:42Z,2020-06-15T19:02:58Z,MERGED,True,45,0,3,https://github.com/JavierJF,Fixes #2834: Segfault due to invalid access to threads during startup / shutdown,1,[],https://github.com/sysown/proxysql/pull/2847,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/2847,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2851,2020-06-01T07:49:13Z,2020-06-07T20:39:37Z,2020-10-30T16:10:53Z,MERGED,True,4,3,3,https://github.com/JavierJF,Fixes #2850: Segfaults due to access to 'GloMyLogger' and 'GloMTH' when already deinitialized,1,[],https://github.com/sysown/proxysql/pull/2851,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/2851,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2852,2020-06-01T07:54:37Z,2020-06-07T20:39:34Z,2020-06-15T19:02:56Z,MERGED,True,4,3,3,https://github.com/JavierJF,Fixes #2850: Segfaults due to access to 'GloMyLogger' and 'GloMTH' when already deinitialized,1,[],https://github.com/sysown/proxysql/pull/2852,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/2852,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2856,2020-06-03T13:02:59Z,2020-10-21T14:42:18Z,2020-10-21T14:42:18Z,MERGED,True,865,34,8,https://github.com/JavierJF,Add support for syncing 'mysql-variables' and 'admin-variables' #2820,10,[],https://github.com/sysown/proxysql/pull/2856,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/2856,WIP: Do not merge yet. Closes #2820 .,WIP: Do not merge yet. Closes #2820 .,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2856,2020-06-03T13:02:59Z,2020-10-21T14:42:18Z,2020-10-21T14:42:18Z,MERGED,True,865,34,8,https://github.com/JavierJF,Add support for syncing 'mysql-variables' and 'admin-variables' #2820,10,[],https://github.com/sysown/proxysql/pull/2856,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/2856#issuecomment-638298177,WIP: Do not merge yet. Closes #2820 .,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2856,2020-06-03T13:02:59Z,2020-10-21T14:42:18Z,2020-10-21T14:42:18Z,MERGED,True,865,34,8,https://github.com/JavierJF,Add support for syncing 'mysql-variables' and 'admin-variables' #2820,10,[],https://github.com/sysown/proxysql/pull/2856,https://github.com/JavierJF,3,https://github.com/sysown/proxysql/pull/2856#issuecomment-679040872,WIP: Do not merge yet. Closes #2820 .,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2865,2020-06-07T20:36:56Z,2020-06-07T23:02:41Z,2020-06-15T19:03:12Z,MERGED,True,4,1,1,https://github.com/renecannao,Prevent crash if CHARACTER_SET_CONNECTION is not initialized yet #2863,1,[],https://github.com/sysown/proxysql/pull/2865,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2865,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2866,2020-06-08T00:16:20Z,2020-06-15T18:34:37Z,2020-06-16T08:46:58Z,MERGED,True,822,61,7,https://github.com/renecannao,Disabling variables from MySQL_Variables,16,[],https://github.com/sysown/proxysql/pull/2866,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2866,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2866,2020-06-08T00:16:20Z,2020-06-15T18:34:37Z,2020-06-16T08:46:58Z,MERGED,True,822,61,7,https://github.com/renecannao,Disabling variables from MySQL_Variables,16,[],https://github.com/sysown/proxysql/pull/2866,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2866#issuecomment-641537769,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2866,2020-06-08T00:16:20Z,2020-06-15T18:34:37Z,2020-06-16T08:46:58Z,MERGED,True,822,61,7,https://github.com/renecannao,Disabling variables from MySQL_Variables,16,[],https://github.com/sysown/proxysql/pull/2866,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2866#issuecomment-641552695,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2866,2020-06-08T00:16:20Z,2020-06-15T18:34:37Z,2020-06-16T08:46:58Z,MERGED,True,822,61,7,https://github.com/renecannao,Disabling variables from MySQL_Variables,16,[],https://github.com/sysown/proxysql/pull/2866,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/2866#issuecomment-641561787,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2866,2020-06-08T00:16:20Z,2020-06-15T18:34:37Z,2020-06-16T08:46:58Z,MERGED,True,822,61,7,https://github.com/renecannao,Disabling variables from MySQL_Variables,16,[],https://github.com/sysown/proxysql/pull/2866,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/2866#issuecomment-641589477,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2866,2020-06-08T00:16:20Z,2020-06-15T18:34:37Z,2020-06-16T08:46:58Z,MERGED,True,822,61,7,https://github.com/renecannao,Disabling variables from MySQL_Variables,16,[],https://github.com/sysown/proxysql/pull/2866,https://github.com/renecannao,6,https://github.com/sysown/proxysql/pull/2866#issuecomment-641600539,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2866,2020-06-08T00:16:20Z,2020-06-15T18:34:37Z,2020-06-16T08:46:58Z,MERGED,True,822,61,7,https://github.com/renecannao,Disabling variables from MySQL_Variables,16,[],https://github.com/sysown/proxysql/pull/2866,https://github.com/renecannao,7,https://github.com/sysown/proxysql/pull/2866#issuecomment-641669234,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2866,2020-06-08T00:16:20Z,2020-06-15T18:34:37Z,2020-06-16T08:46:58Z,MERGED,True,822,61,7,https://github.com/renecannao,Disabling variables from MySQL_Variables,16,[],https://github.com/sysown/proxysql/pull/2866,https://github.com/pondix,8,https://github.com/sysown/proxysql/pull/2866#issuecomment-643332818,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2866,2020-06-08T00:16:20Z,2020-06-15T18:34:37Z,2020-06-16T08:46:58Z,MERGED,True,822,61,7,https://github.com/renecannao,Disabling variables from MySQL_Variables,16,[],https://github.com/sysown/proxysql/pull/2866,https://github.com/renecannao,9,https://github.com/sysown/proxysql/pull/2866#issuecomment-644208880,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2866,2020-06-08T00:16:20Z,2020-06-15T18:34:37Z,2020-06-16T08:46:58Z,MERGED,True,822,61,7,https://github.com/renecannao,Disabling variables from MySQL_Variables,16,[],https://github.com/sysown/proxysql/pull/2866,https://github.com/renecannao,10,https://github.com/sysown/proxysql/pull/2866#issuecomment-644626723,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2868,2020-06-08T16:18:56Z,2020-06-09T18:24:40Z,2020-06-15T19:03:10Z,MERGED,True,2,0,1,https://github.com/JavierJF,Fixes #2615: Empty Queries_GTID_sync field,1,[],https://github.com/sysown/proxysql/pull/2868,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/2868,Closes #2615 .,Closes #2615 .,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2869,2020-06-08T16:38:13Z,2020-06-09T18:30:19Z,2020-10-30T16:10:49Z,MERGED,True,0,11,3,https://github.com/JavierJF,Closes #2714: Unused variables from MySQL_Connection() ,1,[],https://github.com/sysown/proxysql/pull/2869,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/2869,Closes #2714 .,Closes #2714 .,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2875,2020-06-09T16:21:49Z,2020-06-14T21:19:43Z,2020-09-17T09:58:52Z,MERGED,True,141,3,6,https://github.com/JavierJF,Closes #2874: Supporting annotation for creating a new backend connection,4,[],https://github.com/sysown/proxysql/pull/2875,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/2875,Closes #2874.,Closes #2874.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2876,2020-06-09T23:00:54Z,2020-06-11T09:11:04Z,2020-09-17T09:58:57Z,CLOSED,False,170,81,7,https://github.com/renecannao,V2.0.13 duplicated variables valgrind,7,[],https://github.com/sysown/proxysql/pull/2876,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2876,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2880,2020-06-11T15:31:59Z,2020-06-25T08:59:40Z,2020-06-25T08:59:40Z,CLOSED,False,85,3,8,https://github.com/sfrezefo,sfrezefo hack for Azure Database for MySQL / MariaDB,1,[],https://github.com/sysown/proxysql/pull/2880,https://github.com/sfrezefo,1,https://github.com/sysown/proxysql/pull/2880,"Hello,
A little hack to make proxysql compatible with Azure Database for MySQL / MariaDB.
When connecting to an azure database it requires the  username to embed the database name.
This currently make it impossible to user proxysql when we have multiple backends. The typical case is a master with replicas for read/write splitting. As I am a very occasional developper better review the code ;-)
https://serge.frezefond.com/2020/06/using-proxysql-with-azure-database-for-mysql-mariadb/","Hello,
A little hack to make proxysql compatible with Azure Database for MySQL / MariaDB.
When connecting to an azure database it requires the  username to embed the database name.
This currently make it impossible to user proxysql when we have multiple backends. The typical case is a master with replicas for read/write splitting. As I am a very occasional developper better review the code ;-)
https://serge.frezefond.com/2020/06/using-proxysql-with-azure-database-for-mysql-mariadb/",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2880,2020-06-11T15:31:59Z,2020-06-25T08:59:40Z,2020-06-25T08:59:40Z,CLOSED,False,85,3,8,https://github.com/sfrezefo,sfrezefo hack for Azure Database for MySQL / MariaDB,1,[],https://github.com/sysown/proxysql/pull/2880,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2880#issuecomment-642738943,"Hello,
A little hack to make proxysql compatible with Azure Database for MySQL / MariaDB.
When connecting to an azure database it requires the  username to embed the database name.
This currently make it impossible to user proxysql when we have multiple backends. The typical case is a master with replicas for read/write splitting. As I am a very occasional developper better review the code ;-)
https://serge.frezefond.com/2020/06/using-proxysql-with-azure-database-for-mysql-mariadb/",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2880,2020-06-11T15:31:59Z,2020-06-25T08:59:40Z,2020-06-25T08:59:40Z,CLOSED,False,85,3,8,https://github.com/sfrezefo,sfrezefo hack for Azure Database for MySQL / MariaDB,1,[],https://github.com/sysown/proxysql/pull/2880,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2880#issuecomment-643823854,"Hello,
A little hack to make proxysql compatible with Azure Database for MySQL / MariaDB.
When connecting to an azure database it requires the  username to embed the database name.
This currently make it impossible to user proxysql when we have multiple backends. The typical case is a master with replicas for read/write splitting. As I am a very occasional developper better review the code ;-)
https://serge.frezefond.com/2020/06/using-proxysql-with-azure-database-for-mysql-mariadb/",add to whitelist,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2880,2020-06-11T15:31:59Z,2020-06-25T08:59:40Z,2020-06-25T08:59:40Z,CLOSED,False,85,3,8,https://github.com/sfrezefo,sfrezefo hack for Azure Database for MySQL / MariaDB,1,[],https://github.com/sysown/proxysql/pull/2880,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/2880#issuecomment-643827637,"Hello,
A little hack to make proxysql compatible with Azure Database for MySQL / MariaDB.
When connecting to an azure database it requires the  username to embed the database name.
This currently make it impossible to user proxysql when we have multiple backends. The typical case is a master with replicas for read/write splitting. As I am a very occasional developper better review the code ;-)
https://serge.frezefond.com/2020/06/using-proxysql-with-azure-database-for-mysql-mariadb/",Automated testing started for this PR,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2880,2020-06-11T15:31:59Z,2020-06-25T08:59:40Z,2020-06-25T08:59:40Z,CLOSED,False,85,3,8,https://github.com/sfrezefo,sfrezefo hack for Azure Database for MySQL / MariaDB,1,[],https://github.com/sysown/proxysql/pull/2880,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/2880#issuecomment-643829399,"Hello,
A little hack to make proxysql compatible with Azure Database for MySQL / MariaDB.
When connecting to an azure database it requires the  username to embed the database name.
This currently make it impossible to user proxysql when we have multiple backends. The typical case is a master with replicas for read/write splitting. As I am a very occasional developper better review the code ;-)
https://serge.frezefond.com/2020/06/using-proxysql-with-azure-database-for-mysql-mariadb/","@sfrezefo : thank you for the PR.
This reminds me PR #2185 .
In August 2019 (10 months ago) it was reported:

Now Azure MySQL R&Ds are doing the work of removing the ‚Äò@' + 'server' in the username information, which will be online soon. However, a new connection attribute '_server_host' which contains the hostname information is added

It seems that after 10 months  this isn't true yet?
Ping to @YYJiangLoveU too.
@sfrezefo : I am curious about the use of the variable name, why gen1 in it?
A major issue I see with this implementation is that the use of username@hostname becomes a global setting, therefore it is not possible to mix Azure with any other backend type.
Ideally, this should be a hostgroup attribute , but the implementation of such granularity it is not on short term roadmap ( #955 , 3 years old ) .
Maybe the new global variable (azure_gen1_username or a more appropriate name based on the suggested change) should not be a boolean, but a list of hostgroups where the algorithm must be applied.
Internally the list can be stored as a simple array (not even sorted, it should stay small).
Thoughts?",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2880,2020-06-11T15:31:59Z,2020-06-25T08:59:40Z,2020-06-25T08:59:40Z,CLOSED,False,85,3,8,https://github.com/sfrezefo,sfrezefo hack for Azure Database for MySQL / MariaDB,1,[],https://github.com/sysown/proxysql/pull/2880,https://github.com/sfrezefo,6,https://github.com/sysown/proxysql/pull/2880#issuecomment-643991447,"Hello,
A little hack to make proxysql compatible with Azure Database for MySQL / MariaDB.
When connecting to an azure database it requires the  username to embed the database name.
This currently make it impossible to user proxysql when we have multiple backends. The typical case is a master with replicas for read/write splitting. As I am a very occasional developper better review the code ;-)
https://serge.frezefond.com/2020/06/using-proxysql-with-azure-database-for-mysql-mariadb/","Hi Ren√©,
Thank for looking at the PR.
As you mentioned engineering has plan to offer an alternative architecture without the gateway. This is not yet there and we have  a lot of gen1 user that could benefit from proxySQL .
This explained why I proposed a azure_gen1_username.  But any naming that you think is more appropriate would be ok . Naming stuff is a difficult task in dev ;-)
The point you raised about the granularity of this feature makes a lot of sense. The granularity of the effect of this feature is a real choice and is a compromise between simplicity of usage and support of more diverse configurations.
Currently with Azure Database for MySQL it is possible to replicate from non Paas instance to a Paas instance (including from on premise or hybrid cloud) https://docs.microsoft.com/en-us/azure/mysql/concepts-data-in-replication .
I think a simpler way to achieve the same result as what you proposed without introducing list and per hostgroup feature would be to use a very simple rule :
if azure_gen1_username == 1 and the target hostname contains 'mysql.database.azure.com' or 'mariadb.database.azure.com'
rewrite the username. otherwise do nothing
That would cover all cases as it wont touch username not related to Azure Database for MySQL / MariaDB.  In that case azure_gen1_username semantic would be : rewrite username when target is an azure paas database and for the rest do nothing. This will allow mixing any kind of backend types.
thanks for your help
Serge",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2880,2020-06-11T15:31:59Z,2020-06-25T08:59:40Z,2020-06-25T08:59:40Z,CLOSED,False,85,3,8,https://github.com/sfrezefo,sfrezefo hack for Azure Database for MySQL / MariaDB,1,[],https://github.com/sysown/proxysql/pull/2880,https://github.com/sfrezefo,7,https://github.com/sysown/proxysql/pull/2880#issuecomment-649400125,"Hello,
A little hack to make proxysql compatible with Azure Database for MySQL / MariaDB.
When connecting to an azure database it requires the  username to embed the database name.
This currently make it impossible to user proxysql when we have multiple backends. The typical case is a master with replicas for read/write splitting. As I am a very occasional developper better review the code ;-)
https://serge.frezefond.com/2020/06/using-proxysql-with-azure-database-for-mysql-mariadb/",PR #2185  do perfectly  the job,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2881,2020-06-12T08:27:13Z,2020-06-14T21:20:56Z,2020-10-30T16:10:46Z,MERGED,True,1221,180,9,https://github.com/JavierJF,Refactored MySQL_Connection setter/getter functions functions for 'status_flags' #2717,10,[],https://github.com/sysown/proxysql/pull/2881,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/2881,Closes #2717.,Closes #2717.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2881,2020-06-12T08:27:13Z,2020-06-14T21:20:56Z,2020-10-30T16:10:46Z,MERGED,True,1221,180,9,https://github.com/JavierJF,Refactored MySQL_Connection setter/getter functions functions for 'status_flags' #2717,10,[],https://github.com/sysown/proxysql/pull/2881,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/2881#issuecomment-643421502,Closes #2717.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2881,2020-06-12T08:27:13Z,2020-06-14T21:20:56Z,2020-10-30T16:10:46Z,MERGED,True,1221,180,9,https://github.com/JavierJF,Refactored MySQL_Connection setter/getter functions functions for 'status_flags' #2717,10,[],https://github.com/sysown/proxysql/pull/2881,https://github.com/JavierJF,3,https://github.com/sysown/proxysql/pull/2881#issuecomment-643605535,Closes #2717.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2881,2020-06-12T08:27:13Z,2020-06-14T21:20:56Z,2020-10-30T16:10:46Z,MERGED,True,1221,180,9,https://github.com/JavierJF,Refactored MySQL_Connection setter/getter functions functions for 'status_flags' #2717,10,[],https://github.com/sysown/proxysql/pull/2881,https://github.com/JavierJF,4,https://github.com/sysown/proxysql/pull/2881#issuecomment-643613270,Closes #2717.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2882,2020-06-12T08:32:07Z,2020-06-12T10:09:44Z,2020-10-30T16:10:48Z,MERGED,True,481,2,6,https://github.com/JavierJF,Port PR 2829 to 2.1.0 #2862,4,[],https://github.com/sysown/proxysql/pull/2882,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/2882,Closes #2862 .,Closes #2862 .,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2886,2020-06-14T21:19:34Z,2020-06-19T09:15:43Z,2020-10-30T16:13:01Z,MERGED,True,138,15,6,https://github.com/renecannao,V2.1.0 cherrypicks 2.0.13 2,6,[],https://github.com/sysown/proxysql/pull/2886,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2886,"Cherry pick of various PR in 2.0.13.
#2875","Cherry pick of various PR in 2.0.13.
#2875",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2886,2020-06-14T21:19:34Z,2020-06-19T09:15:43Z,2020-10-30T16:13:01Z,MERGED,True,138,15,6,https://github.com/renecannao,V2.1.0 cherrypicks 2.0.13 2,6,[],https://github.com/sysown/proxysql/pull/2886,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2886#issuecomment-644452789,"Cherry pick of various PR in 2.0.13.
#2875",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2886,2020-06-14T21:19:34Z,2020-06-19T09:15:43Z,2020-10-30T16:13:01Z,MERGED,True,138,15,6,https://github.com/renecannao,V2.1.0 cherrypicks 2.0.13 2,6,[],https://github.com/sysown/proxysql/pull/2886,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2886#issuecomment-646309455,"Cherry pick of various PR in 2.0.13.
#2875",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2886,2020-06-14T21:19:34Z,2020-06-19T09:15:43Z,2020-10-30T16:13:01Z,MERGED,True,138,15,6,https://github.com/renecannao,V2.1.0 cherrypicks 2.0.13 2,6,[],https://github.com/sysown/proxysql/pull/2886,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/2886#issuecomment-646380873,"Cherry pick of various PR in 2.0.13.
#2875",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2888,2020-06-15T15:13:38Z,2020-06-15T19:43:52Z,2020-06-15T19:43:52Z,MERGED,True,44,13,1,https://github.com/renecannao,Re-enable PXC node after pxc_maint_mode is DISABLED #2711,1,[],https://github.com/sysown/proxysql/pull/2888,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2888,This commit also add port in various ORDER BY,This commit also add port in various ORDER BY,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2891,2020-06-15T15:44:20Z,2020-06-18T22:21:25Z,2020-10-30T16:13:05Z,MERGED,True,141,0,3,https://github.com/JavierJF,Allow mysqlsh to connect to Admin #2854 ,4,[],https://github.com/sysown/proxysql/pull/2891,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/2891,Closes #2854.,Closes #2854.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2891,2020-06-15T15:44:20Z,2020-06-18T22:21:25Z,2020-10-30T16:13:05Z,MERGED,True,141,0,3,https://github.com/JavierJF,Allow mysqlsh to connect to Admin #2854 ,4,[],https://github.com/sysown/proxysql/pull/2891,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2891#issuecomment-646311218,Closes #2854.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2893,2020-06-15T17:29:21Z,2021-02-25T15:07:28Z,2021-02-25T15:07:28Z,CLOSED,False,0,0,0,https://github.com/JavierJF,DONOTMERGE: Isolate tap tests execution in CI #2892 ,1,[],https://github.com/sysown/proxysql/pull/2893,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/2893,"DONOTMERGE
PR for testing configuration changes in the CI.","DONOTMERGE
PR for testing configuration changes in the CI.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2893,2020-06-15T17:29:21Z,2021-02-25T15:07:28Z,2021-02-25T15:07:28Z,CLOSED,False,0,0,0,https://github.com/JavierJF,DONOTMERGE: Isolate tap tests execution in CI #2892 ,1,[],https://github.com/sysown/proxysql/pull/2893,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/2893#issuecomment-644289299,"DONOTMERGE
PR for testing configuration changes in the CI.",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2893,2020-06-15T17:29:21Z,2021-02-25T15:07:28Z,2021-02-25T15:07:28Z,CLOSED,False,0,0,0,https://github.com/JavierJF,DONOTMERGE: Isolate tap tests execution in CI #2892 ,1,[],https://github.com/sysown/proxysql/pull/2893,https://github.com/JavierJF,3,https://github.com/sysown/proxysql/pull/2893#issuecomment-644348452,"DONOTMERGE
PR for testing configuration changes in the CI.",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2893,2020-06-15T17:29:21Z,2021-02-25T15:07:28Z,2021-02-25T15:07:28Z,CLOSED,False,0,0,0,https://github.com/JavierJF,DONOTMERGE: Isolate tap tests execution in CI #2892 ,1,[],https://github.com/sysown/proxysql/pull/2893,https://github.com/JavierJF,4,https://github.com/sysown/proxysql/pull/2893#issuecomment-644657773,"DONOTMERGE
PR for testing configuration changes in the CI.",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2893,2020-06-15T17:29:21Z,2021-02-25T15:07:28Z,2021-02-25T15:07:28Z,CLOSED,False,0,0,0,https://github.com/JavierJF,DONOTMERGE: Isolate tap tests execution in CI #2892 ,1,[],https://github.com/sysown/proxysql/pull/2893,https://github.com/JavierJF,5,https://github.com/sysown/proxysql/pull/2893#issuecomment-645314544,"DONOTMERGE
PR for testing configuration changes in the CI.",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2893,2020-06-15T17:29:21Z,2021-02-25T15:07:28Z,2021-02-25T15:07:28Z,CLOSED,False,0,0,0,https://github.com/JavierJF,DONOTMERGE: Isolate tap tests execution in CI #2892 ,1,[],https://github.com/sysown/proxysql/pull/2893,https://github.com/JavierJF,6,https://github.com/sysown/proxysql/pull/2893#issuecomment-645358530,"DONOTMERGE
PR for testing configuration changes in the CI.",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2893,2020-06-15T17:29:21Z,2021-02-25T15:07:28Z,2021-02-25T15:07:28Z,CLOSED,False,0,0,0,https://github.com/JavierJF,DONOTMERGE: Isolate tap tests execution in CI #2892 ,1,[],https://github.com/sysown/proxysql/pull/2893,https://github.com/pondix,7,https://github.com/sysown/proxysql/pull/2893#issuecomment-645663760,"DONOTMERGE
PR for testing configuration changes in the CI.",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2893,2020-06-15T17:29:21Z,2021-02-25T15:07:28Z,2021-02-25T15:07:28Z,CLOSED,False,0,0,0,https://github.com/JavierJF,DONOTMERGE: Isolate tap tests execution in CI #2892 ,1,[],https://github.com/sysown/proxysql/pull/2893,https://github.com/pondix,8,https://github.com/sysown/proxysql/pull/2893#issuecomment-645669688,"DONOTMERGE
PR for testing configuration changes in the CI.",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2893,2020-06-15T17:29:21Z,2021-02-25T15:07:28Z,2021-02-25T15:07:28Z,CLOSED,False,0,0,0,https://github.com/JavierJF,DONOTMERGE: Isolate tap tests execution in CI #2892 ,1,[],https://github.com/sysown/proxysql/pull/2893,https://github.com/JavierJF,9,https://github.com/sysown/proxysql/pull/2893#issuecomment-646703399,"DONOTMERGE
PR for testing configuration changes in the CI.",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2894,2020-06-15T18:10:36Z,2020-06-15T18:11:04Z,2020-06-15T18:11:04Z,CLOSED,False,2103,548,53,https://github.com/renecannao,Disabling variables from MySQL_Variables,115,[],https://github.com/sysown/proxysql/pull/2894,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2894,Port to v2.1.0 of PR #2866,Port to v2.1.0 of PR #2866,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2895,2020-06-15T18:32:54Z,2020-06-15T18:34:09Z,2020-06-15T18:34:09Z,CLOSED,False,9735,3201,78,https://github.com/renecannao,V2.0.13 duplicated variables for 2.1.0 2,263,[],https://github.com/sysown/proxysql/pull/2895,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2895,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2896,2020-06-15T18:33:29Z,2020-06-19T01:10:13Z,2020-10-30T16:13:00Z,MERGED,True,822,61,7,https://github.com/renecannao,V2.0.13 duplicated variables for 2.1.0,17,[],https://github.com/sysown/proxysql/pull/2896,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2896,Port to v2.1.0 of PR #2866,Port to v2.1.0 of PR #2866,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2896,2020-06-15T18:33:29Z,2020-06-19T01:10:13Z,2020-10-30T16:13:00Z,MERGED,True,822,61,7,https://github.com/renecannao,V2.0.13 duplicated variables for 2.1.0,17,[],https://github.com/sysown/proxysql/pull/2896,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2896#issuecomment-646357079,Port to v2.1.0 of PR #2866,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2896,2020-06-15T18:33:29Z,2020-06-19T01:10:13Z,2020-10-30T16:13:00Z,MERGED,True,822,61,7,https://github.com/renecannao,V2.0.13 duplicated variables for 2.1.0,17,[],https://github.com/sysown/proxysql/pull/2896,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2896#issuecomment-646366968,Port to v2.1.0 of PR #2866,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2896,2020-06-15T18:33:29Z,2020-06-19T01:10:13Z,2020-10-30T16:13:00Z,MERGED,True,822,61,7,https://github.com/renecannao,V2.0.13 duplicated variables for 2.1.0,17,[],https://github.com/sysown/proxysql/pull/2896,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/2896#issuecomment-646371885,Port to v2.1.0 of PR #2866,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2898,2020-06-19T01:20:39Z,,2020-07-09T23:56:52Z,OPEN,False,9,3,1,https://github.com/bparli,Fix/crash missing mybe,4,[],https://github.com/sysown/proxysql/pull/2898,https://github.com/bparli,1,https://github.com/sysown/proxysql/pull/2898,"This PR is meant to address #2460
If there is a more appropriate way to fix this condition just let me know and I'm happy to work on it.","This PR is meant to address #2460
If there is a more appropriate way to fix this condition just let me know and I'm happy to work on it.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2898,2020-06-19T01:20:39Z,,2020-07-09T23:56:52Z,OPEN,False,9,3,1,https://github.com/bparli,Fix/crash missing mybe,4,[],https://github.com/sysown/proxysql/pull/2898,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2898#issuecomment-646383826,"This PR is meant to address #2460
If there is a more appropriate way to fix this condition just let me know and I'm happy to work on it.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2898,2020-06-19T01:20:39Z,,2020-07-09T23:56:52Z,OPEN,False,9,3,1,https://github.com/bparli,Fix/crash missing mybe,4,[],https://github.com/sysown/proxysql/pull/2898,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2898#issuecomment-646532188,"This PR is meant to address #2460
If there is a more appropriate way to fix this condition just let me know and I'm happy to work on it.","Hi @bparli .
Do you have a core dump of a crash?
A MySQL_Session without client_myds and without mybe at the same time should never exist, thus the assert()",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2898,2020-06-19T01:20:39Z,,2020-07-09T23:56:52Z,OPEN,False,9,3,1,https://github.com/bparli,Fix/crash missing mybe,4,[],https://github.com/sysown/proxysql/pull/2898,https://github.com/bparli,4,https://github.com/sysown/proxysql/pull/2898#issuecomment-646665680,"This PR is meant to address #2460
If there is a more appropriate way to fix this condition just let me know and I'm happy to work on it.","Hi @renecannao - we're getting bit by the assert(mybe) line.  I probably misunderstood client_myds then
I'll try getting a core dump today and attach to the issue",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2898,2020-06-19T01:20:39Z,,2020-07-09T23:56:52Z,OPEN,False,9,3,1,https://github.com/bparli,Fix/crash missing mybe,4,[],https://github.com/sysown/proxysql/pull/2898,https://github.com/bparli,5,https://github.com/sysown/proxysql/pull/2898#issuecomment-647789806,"This PR is meant to address #2460
If there is a more appropriate way to fix this condition just let me know and I'm happy to work on it.",Hi @renecannao - our Security folks aren't keen on sharing the entire core dump but I've extracted some relevant bits and added to the #2460 issue.  It does appear both client_myds and mybe (and even mybes) are NULL,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2898,2020-06-19T01:20:39Z,,2020-07-09T23:56:52Z,OPEN,False,9,3,1,https://github.com/bparli,Fix/crash missing mybe,4,[],https://github.com/sysown/proxysql/pull/2898,https://github.com/bparli,6,https://github.com/sysown/proxysql/pull/2898#issuecomment-656406633,"This PR is meant to address #2460
If there is a more appropriate way to fix this condition just let me know and I'm happy to work on it.",Updated the PR to the patch we're running.  We've had this for a week in one of our environments and not seen any crashes.  I found I also had to set mysql-reset_connection_algorithm=1 in order to avoid subsequent segfaults,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2899,2020-06-19T11:39:42Z,2020-07-09T22:09:37Z,2020-07-09T22:09:43Z,MERGED,True,1,1,1,https://github.com/fzipi,fix(version): update copyright year,1,[],https://github.com/sysown/proxysql/pull/2899,https://github.com/fzipi,1,https://github.com/sysown/proxysql/pull/2899,Signed-off-by: Felipe Zipitria fzipitria@perceptyx.com,Signed-off-by: Felipe Zipitria fzipitria@perceptyx.com,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2899,2020-06-19T11:39:42Z,2020-07-09T22:09:37Z,2020-07-09T22:09:43Z,MERGED,True,1,1,1,https://github.com/fzipi,fix(version): update copyright year,1,[],https://github.com/sysown/proxysql/pull/2899,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2899#issuecomment-646590581,Signed-off-by: Felipe Zipitria fzipitria@perceptyx.com,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2899,2020-06-19T11:39:42Z,2020-07-09T22:09:37Z,2020-07-09T22:09:43Z,MERGED,True,1,1,1,https://github.com/fzipi,fix(version): update copyright year,1,[],https://github.com/sysown/proxysql/pull/2899,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2899#issuecomment-656375115,Signed-off-by: Felipe Zipitria fzipitria@perceptyx.com,Thank you @fzipi,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2900,2020-06-19T11:54:50Z,2022-01-19T13:37:54Z,2022-01-19T13:37:55Z,CLOSED,False,627,1,5,https://github.com/fzipi,Port build to cmake,2,[],https://github.com/sysown/proxysql/pull/2900,https://github.com/fzipi,1,https://github.com/sysown/proxysql/pull/2900,"Hi all!
This PR is a set of changes we did to port proxysql to FreeBSD. Compilation for version 2.x has been more challenging than previous major release, so I did ported from Makefile to CMake.
Additionally, there are some specific additions to solve compilation in FreeBSD:

added a patch upstream in libhttpserver to fix build in FreeBSD (etr/libhttpserver#192). This implies updating the embedded libhttpserver dependency.
used CMake for including the correct header and libs for backtrace

Feel free to add any comments.
If this is accepted, then I can push our packaged version to FreeBSD ports.","Hi all!
This PR is a set of changes we did to port proxysql to FreeBSD. Compilation for version 2.x has been more challenging than previous major release, so I did ported from Makefile to CMake.
Additionally, there are some specific additions to solve compilation in FreeBSD:

added a patch upstream in libhttpserver to fix build in FreeBSD (etr/libhttpserver#192). This implies updating the embedded libhttpserver dependency.
used CMake for including the correct header and libs for backtrace

Feel free to add any comments.
If this is accepted, then I can push our packaged version to FreeBSD ports.",True,{'THUMBS_UP': ['https://github.com/timele']}
sysown/proxysql,https://github.com/sysown/proxysql,2900,2020-06-19T11:54:50Z,2022-01-19T13:37:54Z,2022-01-19T13:37:55Z,CLOSED,False,627,1,5,https://github.com/fzipi,Port build to cmake,2,[],https://github.com/sysown/proxysql/pull/2900,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2900#issuecomment-646595752,"Hi all!
This PR is a set of changes we did to port proxysql to FreeBSD. Compilation for version 2.x has been more challenging than previous major release, so I did ported from Makefile to CMake.
Additionally, there are some specific additions to solve compilation in FreeBSD:

added a patch upstream in libhttpserver to fix build in FreeBSD (etr/libhttpserver#192). This implies updating the embedded libhttpserver dependency.
used CMake for including the correct header and libs for backtrace

Feel free to add any comments.
If this is accepted, then I can push our packaged version to FreeBSD ports.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2900,2020-06-19T11:54:50Z,2022-01-19T13:37:54Z,2022-01-19T13:37:55Z,CLOSED,False,627,1,5,https://github.com/fzipi,Port build to cmake,2,[],https://github.com/sysown/proxysql/pull/2900,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2900#issuecomment-656383849,"Hi all!
This PR is a set of changes we did to port proxysql to FreeBSD. Compilation for version 2.x has been more challenging than previous major release, so I did ported from Makefile to CMake.
Additionally, there are some specific additions to solve compilation in FreeBSD:

added a patch upstream in libhttpserver to fix build in FreeBSD (etr/libhttpserver#192). This implies updating the embedded libhttpserver dependency.
used CMake for including the correct header and libs for backtrace

Feel free to add any comments.
If this is accepted, then I can push our packaged version to FreeBSD ports.",add to whitelist,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2900,2020-06-19T11:54:50Z,2022-01-19T13:37:54Z,2022-01-19T13:37:55Z,CLOSED,False,627,1,5,https://github.com/fzipi,Port build to cmake,2,[],https://github.com/sysown/proxysql/pull/2900,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/2900#issuecomment-656383885,"Hi all!
This PR is a set of changes we did to port proxysql to FreeBSD. Compilation for version 2.x has been more challenging than previous major release, so I did ported from Makefile to CMake.
Additionally, there are some specific additions to solve compilation in FreeBSD:

added a patch upstream in libhttpserver to fix build in FreeBSD (etr/libhttpserver#192). This implies updating the embedded libhttpserver dependency.
used CMake for including the correct header and libs for backtrace

Feel free to add any comments.
If this is accepted, then I can push our packaged version to FreeBSD ports.",test this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2900,2020-06-19T11:54:50Z,2022-01-19T13:37:54Z,2022-01-19T13:37:55Z,CLOSED,False,627,1,5,https://github.com/fzipi,Port build to cmake,2,[],https://github.com/sysown/proxysql/pull/2900,https://github.com/fzipi,5,https://github.com/sysown/proxysql/pull/2900#issuecomment-1016474125,"Hi all!
This PR is a set of changes we did to port proxysql to FreeBSD. Compilation for version 2.x has been more challenging than previous major release, so I did ported from Makefile to CMake.
Additionally, there are some specific additions to solve compilation in FreeBSD:

added a patch upstream in libhttpserver to fix build in FreeBSD (etr/libhttpserver#192). This implies updating the embedded libhttpserver dependency.
used CMake for including the correct header and libs for backtrace

Feel free to add any comments.
If this is accepted, then I can push our packaged version to FreeBSD ports.",Closing as there was no interest in following this path.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2905,2020-06-22T17:16:02Z,2020-07-03T09:54:36Z,2020-09-17T09:58:36Z,MERGED,True,5,5,1,https://github.com/JavierJF,Fixed ok(...) checks and types for variable printing,1,[],https://github.com/sysown/proxysql/pull/2905,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/2905,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2905,2020-06-22T17:16:02Z,2020-07-03T09:54:36Z,2020-09-17T09:58:36Z,MERGED,True,5,5,1,https://github.com/JavierJF,Fixed ok(...) checks and types for variable printing,1,[],https://github.com/sysown/proxysql/pull/2905,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2905#issuecomment-653461173,,Cherry picked into 2.1.0,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2909,2020-06-25T09:51:28Z,2020-07-03T09:53:49Z,2020-07-03T11:40:06Z,CLOSED,False,2,2,1,https://github.com/BafS,Fix config typos (`:` to `=`),1,[],https://github.com/sysown/proxysql/pull/2909,https://github.com/BafS,1,https://github.com/sysown/proxysql/pull/2909,"Fix the syntax, using = instead of :.","Fix the syntax, using = instead of :.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2909,2020-06-25T09:51:28Z,2020-07-03T09:53:49Z,2020-07-03T11:40:06Z,CLOSED,False,2,2,1,https://github.com/BafS,Fix config typos (`:` to `=`),1,[],https://github.com/sysown/proxysql/pull/2909,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2909#issuecomment-649436497,"Fix the syntax, using = instead of :.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2909,2020-06-25T09:51:28Z,2020-07-03T09:53:49Z,2020-07-03T11:40:06Z,CLOSED,False,2,2,1,https://github.com/BafS,Fix config typos (`:` to `=`),1,[],https://github.com/sysown/proxysql/pull/2909,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2909#issuecomment-653460280,"Fix the syntax, using = instead of :.","Hi @BafS .
Thank you for the PR.
I am going to close this PR, because it is not a typo.
Please check here:
This syntax allow both : and = :
# setting = name ("":"" | ""="") value ("";"" | "","" | empty)

Closing.
Thanks",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2909,2020-06-25T09:51:28Z,2020-07-03T09:53:49Z,2020-07-03T11:40:06Z,CLOSED,False,2,2,1,https://github.com/BafS,Fix config typos (`:` to `=`),1,[],https://github.com/sysown/proxysql/pull/2909,https://github.com/BafS,4,https://github.com/sysown/proxysql/pull/2909#issuecomment-653506099,"Fix the syntax, using = instead of :.",Okay but why not being consistent ? It's a bit confusing imho,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2913,2020-06-30T14:42:36Z,2020-07-09T22:01:37Z,2020-07-09T22:01:37Z,MERGED,True,1,0,1,https://github.com/Gonlo2,Initialize interr variable in Galera monitor,1,[],https://github.com/sysown/proxysql/pull/2913,https://github.com/Gonlo2,1,https://github.com/sysown/proxysql/pull/2913,"This change initialize the variable interr used in the Galera monitor if the node isn't reachable to avoid a undefined behavior bug and, for this reason, this isn't a reproducible bug and it was detected only after using valgrind.
A clear description of the issue
If isn't possible to create a MySQL connection in the Galera monitor the code jump to __exit_monitor_galera_thread label, bypassing the interr initialization.
ProxySQL version
It was detected in the ProxySQL v2.0.12 build.
OS Version
16.04.1-Ubuntu
The steps to reproduce the issue
Shutdown a node in a Galera cluster.
Full ProxySQL error log
This isn't a reproducible bug so I don't think that's necessary.","This change initialize the variable interr used in the Galera monitor if the node isn't reachable to avoid a undefined behavior bug and, for this reason, this isn't a reproducible bug and it was detected only after using valgrind.
A clear description of the issue
If isn't possible to create a MySQL connection in the Galera monitor the code jump to __exit_monitor_galera_thread label, bypassing the interr initialization.
ProxySQL version
It was detected in the ProxySQL v2.0.12 build.
OS Version
16.04.1-Ubuntu
The steps to reproduce the issue
Shutdown a node in a Galera cluster.
Full ProxySQL error log
This isn't a reproducible bug so I don't think that's necessary.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2913,2020-06-30T14:42:36Z,2020-07-09T22:01:37Z,2020-07-09T22:01:37Z,MERGED,True,1,0,1,https://github.com/Gonlo2,Initialize interr variable in Galera monitor,1,[],https://github.com/sysown/proxysql/pull/2913,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2913#issuecomment-651841819,"This change initialize the variable interr used in the Galera monitor if the node isn't reachable to avoid a undefined behavior bug and, for this reason, this isn't a reproducible bug and it was detected only after using valgrind.
A clear description of the issue
If isn't possible to create a MySQL connection in the Galera monitor the code jump to __exit_monitor_galera_thread label, bypassing the interr initialization.
ProxySQL version
It was detected in the ProxySQL v2.0.12 build.
OS Version
16.04.1-Ubuntu
The steps to reproduce the issue
Shutdown a node in a Galera cluster.
Full ProxySQL error log
This isn't a reproducible bug so I don't think that's necessary.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2913,2020-06-30T14:42:36Z,2020-07-09T22:01:37Z,2020-07-09T22:01:37Z,MERGED,True,1,0,1,https://github.com/Gonlo2,Initialize interr variable in Galera monitor,1,[],https://github.com/sysown/proxysql/pull/2913,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2913#issuecomment-653458840,"This change initialize the variable interr used in the Galera monitor if the node isn't reachable to avoid a undefined behavior bug and, for this reason, this isn't a reproducible bug and it was detected only after using valgrind.
A clear description of the issue
If isn't possible to create a MySQL connection in the Galera monitor the code jump to __exit_monitor_galera_thread label, bypassing the interr initialization.
ProxySQL version
It was detected in the ProxySQL v2.0.12 build.
OS Version
16.04.1-Ubuntu
The steps to reproduce the issue
Shutdown a node in a Galera cluster.
Full ProxySQL error log
This isn't a reproducible bug so I don't think that's necessary.",add to whitelist,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2913,2020-06-30T14:42:36Z,2020-07-09T22:01:37Z,2020-07-09T22:01:37Z,MERGED,True,1,0,1,https://github.com/Gonlo2,Initialize interr variable in Galera monitor,1,[],https://github.com/sysown/proxysql/pull/2913,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/2913#issuecomment-653458904,"This change initialize the variable interr used in the Galera monitor if the node isn't reachable to avoid a undefined behavior bug and, for this reason, this isn't a reproducible bug and it was detected only after using valgrind.
A clear description of the issue
If isn't possible to create a MySQL connection in the Galera monitor the code jump to __exit_monitor_galera_thread label, bypassing the interr initialization.
ProxySQL version
It was detected in the ProxySQL v2.0.12 build.
OS Version
16.04.1-Ubuntu
The steps to reproduce the issue
Shutdown a node in a Galera cluster.
Full ProxySQL error log
This isn't a reproducible bug so I don't think that's necessary.",test this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2913,2020-06-30T14:42:36Z,2020-07-09T22:01:37Z,2020-07-09T22:01:37Z,MERGED,True,1,0,1,https://github.com/Gonlo2,Initialize interr variable in Galera monitor,1,[],https://github.com/sysown/proxysql/pull/2913,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/2913#issuecomment-656372245,"This change initialize the variable interr used in the Galera monitor if the node isn't reachable to avoid a undefined behavior bug and, for this reason, this isn't a reproducible bug and it was detected only after using valgrind.
A clear description of the issue
If isn't possible to create a MySQL connection in the Galera monitor the code jump to __exit_monitor_galera_thread label, bypassing the interr initialization.
ProxySQL version
It was detected in the ProxySQL v2.0.12 build.
OS Version
16.04.1-Ubuntu
The steps to reproduce the issue
Shutdown a node in a Galera cluster.
Full ProxySQL error log
This isn't a reproducible bug so I don't think that's necessary.",Thank you for the PR!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2924,2020-07-02T08:54:08Z,2020-07-11T02:25:04Z,2020-09-17T09:58:33Z,MERGED,True,33,2,7,https://github.com/JavierJF,"Fixes #2916, #2918, #2919, #2920 and #2921",6,[],https://github.com/sysown/proxysql/pull/2924,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/2924,"Multiple fixes related to race conditions and memory errors occurred during ""PROXYSQL STOP"" / ""PROXYSQL START"" cycles.","Multiple fixes related to race conditions and memory errors occurred during ""PROXYSQL STOP"" / ""PROXYSQL START"" cycles.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2924,2020-07-02T08:54:08Z,2020-07-11T02:25:04Z,2020-09-17T09:58:33Z,MERGED,True,33,2,7,https://github.com/JavierJF,"Fixes #2916, #2918, #2919, #2920 and #2921",6,[],https://github.com/sysown/proxysql/pull/2924,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/2924#issuecomment-652927833,"Multiple fixes related to race conditions and memory errors occurred during ""PROXYSQL STOP"" / ""PROXYSQL START"" cycles.",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2924,2020-07-02T08:54:08Z,2020-07-11T02:25:04Z,2020-09-17T09:58:33Z,MERGED,True,33,2,7,https://github.com/JavierJF,"Fixes #2916, #2918, #2919, #2920 and #2921",6,[],https://github.com/sysown/proxysql/pull/2924,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2924#issuecomment-656371961,"Multiple fixes related to race conditions and memory errors occurred during ""PROXYSQL STOP"" / ""PROXYSQL START"" cycles.",@JavierJF : is all this ported to 2.1.0 too?,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2924,2020-07-02T08:54:08Z,2020-07-11T02:25:04Z,2020-09-17T09:58:33Z,MERGED,True,33,2,7,https://github.com/JavierJF,"Fixes #2916, #2918, #2919, #2920 and #2921",6,[],https://github.com/sysown/proxysql/pull/2924,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/2924#issuecomment-656372035,"Multiple fixes related to race conditions and memory errors occurred during ""PROXYSQL STOP"" / ""PROXYSQL START"" cycles.",Ported or fixed in a different way,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2925,2020-07-02T11:07:28Z,2020-07-03T09:44:10Z,2020-09-17T09:58:31Z,MERGED,True,44,5,3,https://github.com/JavierJF,Fixes #2872: SET CHARACTER SET 'charset' fails,2,[],https://github.com/sysown/proxysql/pull/2925,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/2925,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2926,2020-07-03T09:59:27Z,2020-07-09T22:07:57Z,2020-10-30T16:12:57Z,MERGED,True,54,4,3,https://github.com/renecannao,V2.1.0 2872,2,[],https://github.com/sysown/proxysql/pull/2926,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2926,Cherry pick from #2925 to fix #2872,Cherry pick from #2925 to fix #2872,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2934,2020-07-08T14:41:00Z,2020-07-09T22:10:32Z,2020-09-17T09:56:53Z,MERGED,True,266,39,6,https://github.com/renecannao,Adding debug_filters,3,[],https://github.com/sysown/proxysql/pull/2934,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2934,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2934,2020-07-08T14:41:00Z,2020-07-09T22:10:32Z,2020-09-17T09:56:53Z,MERGED,True,266,39,6,https://github.com/renecannao,Adding debug_filters,3,[],https://github.com/sysown/proxysql/pull/2934,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2934#issuecomment-655583097,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2934,2020-07-08T14:41:00Z,2020-07-09T22:10:32Z,2020-09-17T09:56:53Z,MERGED,True,266,39,6,https://github.com/renecannao,Adding debug_filters,3,[],https://github.com/sysown/proxysql/pull/2934,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2934#issuecomment-655819395,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2934,2020-07-08T14:41:00Z,2020-07-09T22:10:32Z,2020-09-17T09:56:53Z,MERGED,True,266,39,6,https://github.com/renecannao,Adding debug_filters,3,[],https://github.com/sysown/proxysql/pull/2934,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/2934#issuecomment-655820867,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2935,2020-07-08T18:00:50Z,,2020-07-09T13:39:55Z,OPEN,False,47,1,2,https://github.com/evadnoob,Added session variable tracking for query_cache_type,3,[],https://github.com/sysown/proxysql/pull/2935,https://github.com/evadnoob,1,https://github.com/sysown/proxysql/pull/2935,Adds session variable tracking support for query_cache_type.,Adds session variable tracking support for query_cache_type.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2935,2020-07-08T18:00:50Z,,2020-07-09T13:39:55Z,OPEN,False,47,1,2,https://github.com/evadnoob,Added session variable tracking for query_cache_type,3,[],https://github.com/sysown/proxysql/pull/2935,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2935#issuecomment-655671113,Adds session variable tracking support for query_cache_type.,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2936,2020-07-08T22:08:10Z,2020-07-09T22:07:13Z,2020-09-17T09:56:50Z,MERGED,True,1,0,1,https://github.com/renecannao,Change DSS to STATE_MARIADB_GENERIC after async_change_user(),2,[],https://github.com/sysown/proxysql/pull/2936,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2936,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2936,2020-07-08T22:08:10Z,2020-07-09T22:07:13Z,2020-09-17T09:56:50Z,MERGED,True,1,0,1,https://github.com/renecannao,Change DSS to STATE_MARIADB_GENERIC after async_change_user(),2,[],https://github.com/sysown/proxysql/pull/2936,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2936#issuecomment-655792118,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2936,2020-07-08T22:08:10Z,2020-07-09T22:07:13Z,2020-09-17T09:56:50Z,MERGED,True,1,0,1,https://github.com/renecannao,Change DSS to STATE_MARIADB_GENERIC after async_change_user(),2,[],https://github.com/sysown/proxysql/pull/2936,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2936#issuecomment-656374019,,Base changed from 2.0.12 to 2.0.13,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2940,2020-07-09T21:59:47Z,2020-07-09T22:32:19Z,2020-09-17T09:56:51Z,MERGED,True,358,121,11,https://github.com/renecannao,V2.0.13 debug gtids,4,[],https://github.com/sysown/proxysql/pull/2940,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2940,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2941,2020-07-09T22:33:12Z,2020-07-10T09:56:44Z,2020-10-30T16:12:55Z,MERGED,True,126,83,8,https://github.com/renecannao,V2.1.0 200710,7,[],https://github.com/sysown/proxysql/pull/2941,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2941,Porting of various PRs from 2.0.13 to 2.1.0,Porting of various PRs from 2.0.13 to 2.1.0,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2944,2020-07-10T09:51:34Z,2020-07-10T10:29:14Z,2020-10-30T16:13:03Z,MERGED,True,44,13,1,https://github.com/renecannao,Re-enable PXC node after pxc_maint_mode is DISABLED #2711,1,[],https://github.com/sysown/proxysql/pull/2944,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2944,"Re-enable PXC node after pxc_maint_mode is DISABLED #2711
This commit also add port in various ORDER BY","Re-enable PXC node after pxc_maint_mode is DISABLED #2711
This commit also add port in various ORDER BY",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2945,2020-07-10T14:09:45Z,2020-07-10T17:35:29Z,2020-09-17T09:56:46Z,MERGED,True,32,11,1,https://github.com/renecannao,Version check run daily and not just at startup,1,[],https://github.com/sysown/proxysql/pull/2945,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2945,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2946,2020-07-11T02:21:59Z,2020-07-13T12:54:26Z,2020-09-17T09:56:34Z,MERGED,True,15,0,1,https://github.com/renecannao,Update charset variables from runtime,1,[],https://github.com/sysown/proxysql/pull/2946,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2946,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2946,2020-07-11T02:21:59Z,2020-07-13T12:54:26Z,2020-09-17T09:56:34Z,MERGED,True,15,0,1,https://github.com/renecannao,Update charset variables from runtime,1,[],https://github.com/sysown/proxysql/pull/2946,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2946#issuecomment-657011634,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2946,2020-07-11T02:21:59Z,2020-07-13T12:54:26Z,2020-09-17T09:56:34Z,MERGED,True,15,0,1,https://github.com/renecannao,Update charset variables from runtime,1,[],https://github.com/sysown/proxysql/pull/2946,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2946#issuecomment-657444419,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2946,2020-07-11T02:21:59Z,2020-07-13T12:54:26Z,2020-09-17T09:56:34Z,MERGED,True,15,0,1,https://github.com/renecannao,Update charset variables from runtime,1,[],https://github.com/sysown/proxysql/pull/2946,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/2946#issuecomment-657469283,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2946,2020-07-11T02:21:59Z,2020-07-13T12:54:26Z,2020-09-17T09:56:34Z,MERGED,True,15,0,1,https://github.com/renecannao,Update charset variables from runtime,1,[],https://github.com/sysown/proxysql/pull/2946,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/2946#issuecomment-657495694,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2951,2020-07-14T13:52:47Z,2020-07-14T15:56:04Z,2020-09-17T09:56:37Z,MERGED,True,1,1,1,https://github.com/JavierJF,Fix invalid passing of non-trivial object through variadic function,1,[],https://github.com/sysown/proxysql/pull/2951,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/2951,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2951,2020-07-14T13:52:47Z,2020-07-14T15:56:04Z,2020-09-17T09:56:37Z,MERGED,True,1,1,1,https://github.com/JavierJF,Fix invalid passing of non-trivial object through variadic function,1,[],https://github.com/sysown/proxysql/pull/2951,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/2951#issuecomment-658226045,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2955,2020-07-16T09:41:38Z,2020-08-17T11:40:25Z,2020-08-17T11:40:25Z,MERGED,True,6,5,2,https://github.com/Gonlo2,Fix data race with global variables,1,[],https://github.com/sysown/proxysql/pull/2955,https://github.com/Gonlo2,1,https://github.com/sysown/proxysql/pull/2955,"This change removes some global variables used to store the SQLite return value and creates these variables in a local context.
A clear description of the issue
In some places in the code the global variable rc is used to store the return value of SQLite. Such behavior causes write-write data race conditions due to what is likely to be a leftover.
ProxySQL version
It was detected in the ProxySQL v2.0.10 build.
OS Version
16.04.1-Ubuntu
The steps to reproduce the issue
That methods using the global variable are run in parallel.
Full ProxySQL error log
This isn't a reproducible bug so I don't think that's necessary.","This change removes some global variables used to store the SQLite return value and creates these variables in a local context.
A clear description of the issue
In some places in the code the global variable rc is used to store the return value of SQLite. Such behavior causes write-write data race conditions due to what is likely to be a leftover.
ProxySQL version
It was detected in the ProxySQL v2.0.10 build.
OS Version
16.04.1-Ubuntu
The steps to reproduce the issue
That methods using the global variable are run in parallel.
Full ProxySQL error log
This isn't a reproducible bug so I don't think that's necessary.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2955,2020-07-16T09:41:38Z,2020-08-17T11:40:25Z,2020-08-17T11:40:25Z,MERGED,True,6,5,2,https://github.com/Gonlo2,Fix data race with global variables,1,[],https://github.com/sysown/proxysql/pull/2955,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/2955#issuecomment-660618138,"This change removes some global variables used to store the SQLite return value and creates these variables in a local context.
A clear description of the issue
In some places in the code the global variable rc is used to store the return value of SQLite. Such behavior causes write-write data race conditions due to what is likely to be a leftover.
ProxySQL version
It was detected in the ProxySQL v2.0.10 build.
OS Version
16.04.1-Ubuntu
The steps to reproduce the issue
That methods using the global variable are run in parallel.
Full ProxySQL error log
This isn't a reproducible bug so I don't think that's necessary.",add to whitelist,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2955,2020-07-16T09:41:38Z,2020-08-17T11:40:25Z,2020-08-17T11:40:25Z,MERGED,True,6,5,2,https://github.com/Gonlo2,Fix data race with global variables,1,[],https://github.com/sysown/proxysql/pull/2955,https://github.com/JavierJF,3,https://github.com/sysown/proxysql/pull/2955#issuecomment-660627806,"This change removes some global variables used to store the SQLite return value and creates these variables in a local context.
A clear description of the issue
In some places in the code the global variable rc is used to store the return value of SQLite. Such behavior causes write-write data race conditions due to what is likely to be a leftover.
ProxySQL version
It was detected in the ProxySQL v2.0.10 build.
OS Version
16.04.1-Ubuntu
The steps to reproduce the issue
That methods using the global variable are run in parallel.
Full ProxySQL error log
This isn't a reproducible bug so I don't think that's necessary.",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2955,2020-07-16T09:41:38Z,2020-08-17T11:40:25Z,2020-08-17T11:40:25Z,MERGED,True,6,5,2,https://github.com/Gonlo2,Fix data race with global variables,1,[],https://github.com/sysown/proxysql/pull/2955,https://github.com/pondix,4,https://github.com/sysown/proxysql/pull/2955#issuecomment-669855579,"This change removes some global variables used to store the SQLite return value and creates these variables in a local context.
A clear description of the issue
In some places in the code the global variable rc is used to store the return value of SQLite. Such behavior causes write-write data race conditions due to what is likely to be a leftover.
ProxySQL version
It was detected in the ProxySQL v2.0.10 build.
OS Version
16.04.1-Ubuntu
The steps to reproduce the issue
That methods using the global variable are run in parallel.
Full ProxySQL error log
This isn't a reproducible bug so I don't think that's necessary.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2955,2020-07-16T09:41:38Z,2020-08-17T11:40:25Z,2020-08-17T11:40:25Z,MERGED,True,6,5,2,https://github.com/Gonlo2,Fix data race with global variables,1,[],https://github.com/sysown/proxysql/pull/2955,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/2955#issuecomment-674779844,"This change removes some global variables used to store the SQLite return value and creates these variables in a local context.
A clear description of the issue
In some places in the code the global variable rc is used to store the return value of SQLite. Such behavior causes write-write data race conditions due to what is likely to be a leftover.
ProxySQL version
It was detected in the ProxySQL v2.0.10 build.
OS Version
16.04.1-Ubuntu
The steps to reproduce the issue
That methods using the global variable are run in parallel.
Full ProxySQL error log
This isn't a reproducible bug so I don't think that's necessary.",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2955,2020-07-16T09:41:38Z,2020-08-17T11:40:25Z,2020-08-17T11:40:25Z,MERGED,True,6,5,2,https://github.com/Gonlo2,Fix data race with global variables,1,[],https://github.com/sysown/proxysql/pull/2955,https://github.com/renecannao,6,https://github.com/sysown/proxysql/pull/2955#issuecomment-674830743,"This change removes some global variables used to store the SQLite return value and creates these variables in a local context.
A clear description of the issue
In some places in the code the global variable rc is used to store the return value of SQLite. Such behavior causes write-write data race conditions due to what is likely to be a leftover.
ProxySQL version
It was detected in the ProxySQL v2.0.10 build.
OS Version
16.04.1-Ubuntu
The steps to reproduce the issue
That methods using the global variable are run in parallel.
Full ProxySQL error log
This isn't a reproducible bug so I don't think that's necessary.","@Gonlo2 : thank you for the PR.
The PR fails to compile, I will merge it in a new branch, and push some changes into it.
Thanks",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2956,2020-07-16T10:02:30Z,,2020-07-17T09:24:47Z,OPEN,False,1,1,1,https://github.com/maximumG,Enhance Galera monitor for SST (fix #2953),1,[],https://github.com/sysown/proxysql/pull/2956,https://github.com/maximumG,1,https://github.com/sysown/proxysql/pull/2956,"This simple check avoid putting a Galera Donor server to an offline state in case it is using SST method that is non blocking (e.g: xtrabackup/mariabakup).
This fix the issue #2953","This simple check avoid putting a Galera Donor server to an offline state in case it is using SST method that is non blocking (e.g: xtrabackup/mariabakup).
This fix the issue #2953",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2956,2020-07-16T10:02:30Z,,2020-07-17T09:24:47Z,OPEN,False,1,1,1,https://github.com/maximumG,Enhance Galera monitor for SST (fix #2953),1,[],https://github.com/sysown/proxysql/pull/2956,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2956#issuecomment-659310599,"This simple check avoid putting a Galera Donor server to an offline state in case it is using SST method that is non blocking (e.g: xtrabackup/mariabakup).
This fix the issue #2953",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2957,2020-07-19T09:54:45Z,2020-08-17T14:01:58Z,2020-10-30T16:12:37Z,MERGED,True,33,2,7,https://github.com/JavierJF,"Fixes #2916, #2918, #2919, #2920 and #2921",6,[],https://github.com/sysown/proxysql/pull/2957,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/2957,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2957,2020-07-19T09:54:45Z,2020-08-17T14:01:58Z,2020-10-30T16:12:37Z,MERGED,True,33,2,7,https://github.com/JavierJF,"Fixes #2916, #2918, #2919, #2920 and #2921",6,[],https://github.com/sysown/proxysql/pull/2957,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2957#issuecomment-674864724,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2959,2020-07-19T14:14:20Z,2020-07-20T08:27:37Z,2020-07-20T08:27:38Z,CLOSED,False,5,0,1,https://github.com/JavierJF,Fixes #2958: Fix 'test' name collision between std 'set' header and 'ma_global',1,[],https://github.com/sysown/proxysql/pull/2959,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/2959,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2959,2020-07-19T14:14:20Z,2020-07-20T08:27:37Z,2020-07-20T08:27:38Z,CLOSED,False,5,0,1,https://github.com/JavierJF,Fixes #2958: Fix 'test' name collision between std 'set' header and 'ma_global',1,[],https://github.com/sysown/proxysql/pull/2959,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/2959#issuecomment-660654244,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2959,2020-07-19T14:14:20Z,2020-07-20T08:27:37Z,2020-07-20T08:27:38Z,CLOSED,False,5,0,1,https://github.com/JavierJF,Fixes #2958: Fix 'test' name collision between std 'set' header and 'ma_global',1,[],https://github.com/sysown/proxysql/pull/2959,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2959#issuecomment-660658285,,"Never mind, I misses the linked issue",True,{'THUMBS_UP': ['https://github.com/JavierJF']}
sysown/proxysql,https://github.com/sysown/proxysql,2959,2020-07-19T14:14:20Z,2020-07-20T08:27:37Z,2020-07-20T08:27:38Z,CLOSED,False,5,0,1,https://github.com/JavierJF,Fixes #2958: Fix 'test' name collision between std 'set' header and 'ma_global',1,[],https://github.com/sysown/proxysql/pull/2959,https://github.com/JavierJF,4,https://github.com/sysown/proxysql/pull/2959#issuecomment-660659175,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2959,2020-07-19T14:14:20Z,2020-07-20T08:27:37Z,2020-07-20T08:27:38Z,CLOSED,False,5,0,1,https://github.com/JavierJF,Fixes #2958: Fix 'test' name collision between std 'set' header and 'ma_global',1,[],https://github.com/sysown/proxysql/pull/2959,https://github.com/JavierJF,5,https://github.com/sysown/proxysql/pull/2959#issuecomment-660883047,,This will be fixed in a better way by removing 'ma_global.h' dependency.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2960,2020-07-19T22:03:55Z,2020-07-20T14:08:20Z,2020-09-17T09:58:43Z,MERGED,True,60,126,14,https://github.com/renecannao,"Removed dependency from ma_global.h , and several warnings fixed",3,[],https://github.com/sysown/proxysql/pull/2960,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2960,"Closes #2959
A lot of compiler warnings are fixes.
Dependency from mysql/mysqld_error.h is removed too","Closes #2959
A lot of compiler warnings are fixes.
Dependency from mysql/mysqld_error.h is removed too",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2970,2020-07-20T13:58:25Z,2020-08-06T23:34:00Z,2020-09-17T09:56:08Z,MERGED,True,17,12,1,https://github.com/JavierJF,Fix: Tap test 'test_connection_annotation' shows inconsistent results,2,[],https://github.com/sysown/proxysql/pull/2970,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/2970,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2970,2020-07-20T13:58:25Z,2020-08-06T23:34:00Z,2020-09-17T09:56:08Z,MERGED,True,17,12,1,https://github.com/JavierJF,Fix: Tap test 'test_connection_annotation' shows inconsistent results,2,[],https://github.com/sysown/proxysql/pull/2970,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/2970#issuecomment-661063191,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2970,2020-07-20T13:58:25Z,2020-08-06T23:34:00Z,2020-09-17T09:56:08Z,MERGED,True,17,12,1,https://github.com/JavierJF,Fix: Tap test 'test_connection_annotation' shows inconsistent results,2,[],https://github.com/sysown/proxysql/pull/2970,https://github.com/JavierJF,3,https://github.com/sysown/proxysql/pull/2970#issuecomment-661780420,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2970,2020-07-20T13:58:25Z,2020-08-06T23:34:00Z,2020-09-17T09:56:08Z,MERGED,True,17,12,1,https://github.com/JavierJF,Fix: Tap test 'test_connection_annotation' shows inconsistent results,2,[],https://github.com/sysown/proxysql/pull/2970,https://github.com/JavierJF,4,https://github.com/sysown/proxysql/pull/2970#issuecomment-669042568,,retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2970,2020-07-20T13:58:25Z,2020-08-06T23:34:00Z,2020-09-17T09:56:08Z,MERGED,True,17,12,1,https://github.com/JavierJF,Fix: Tap test 'test_connection_annotation' shows inconsistent results,2,[],https://github.com/sysown/proxysql/pull/2970,https://github.com/JavierJF,5,https://github.com/sysown/proxysql/pull/2970#issuecomment-669064629,,retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2970,2020-07-20T13:58:25Z,2020-08-06T23:34:00Z,2020-09-17T09:56:08Z,MERGED,True,17,12,1,https://github.com/JavierJF,Fix: Tap test 'test_connection_annotation' shows inconsistent results,2,[],https://github.com/sysown/proxysql/pull/2970,https://github.com/renecannao,6,https://github.com/sysown/proxysql/pull/2970#issuecomment-670209755,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2970,2020-07-20T13:58:25Z,2020-08-06T23:34:00Z,2020-09-17T09:56:08Z,MERGED,True,17,12,1,https://github.com/JavierJF,Fix: Tap test 'test_connection_annotation' shows inconsistent results,2,[],https://github.com/sysown/proxysql/pull/2970,https://github.com/renecannao,7,https://github.com/sysown/proxysql/pull/2970#issuecomment-670234470,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2971,2020-07-20T15:53:31Z,,2021-02-28T00:37:37Z,OPEN,False,293,24,10,https://github.com/noahwilliamsson,[RFC] V2.1.1: support HAProxy PROXY protocol V1 on MySQL frontends,1,[],https://github.com/sysown/proxysql/pull/2971,https://github.com/noahwilliamsson,1,https://github.com/sysown/proxysql/pull/2971,"This adds basic support for the HAProxy PROXY protocol V1 on MySQL frontend
client connections.  This allows the true client IP to be seen in the output
of SHOW FULL PROCESSLIST in ProxySQL's admin frontend when the ProxySQL
servers sit behind a load balancer such as HAProxy or AWS classic ELBs with
the PROXY protocol feature enabled.
I believe this should resolve #2497 (Support for proxy_protocol for proxysql behind aws load balancer).
The patch adds a Proxy_Protocol class which handles:

parsing of PROXY protocol headers (only the V1 header supported for now)
matching client IPs against a list of configured network CIDRs

A new option, proxy_protocol_frontend_nets (list of network CIDRs), is
introduced to allow the PROXY protocol feature to be selectively turned on for
specific subnets where e.g. load balancers are running.  This is similar to how
the PROXY protocol is implemented in MariaDB.
This variable can be set either in the config file or via the ProxySQL Admin
interface.  Configuration file example:
mysql_variables=
{
    ...
    proxy_protocol_frontend_nets=""10.42.0.0/28 127.10.0.0/16""
    ...
}

ProxySQL Admin interface example:
UPDATE global_variables
SET variable_value=""192.168.42.0/24""
WHERE variable_name=""mysql-proxy_protocol_frontend_nets"";
LOAD MYSQL VARIABLES TO RUNTIME;

The network CIDRs are stored as a thread-local variable in the MySQL_Thread
class.  It's only updated by MySQL_Thread::refresh_variables().
A new MySQL Data Stream state (DSS), STATE_PROXY_PROTOCOL, is introduced to
handle the initial parsing of the PROXY protocol header.  Once this has
completed, the state is reset back to STATE_SERVER_HANDSHAKE.
The patch hooks into the MySQL_Thread's main loop where accept() is called
to handle incoming connections.  Next, the actual parsing of the PROXY protocol
header is invoked from the MySQL_Data_Stream::read_pkts() method, which is
also called from MySQL_Thread's main loop (where incoming data is handled).
I've only tested this with a HAProxy configuration block like:
listen proxysql-with-proxy
    bind *:6030
    option tcp-check
    mode tcp
    timeout server 6h
    timeout client 6h
    balance roundrobin
    server proxysql-backend-1 127.0.0.1:6033 check send-proxy
listen proxysql-without-proxy
    bind *:6031
    option tcp-check
    mode tcp
    timeout server 6h
    timeout client 6h
    balance roundrobin
    server proxysql-backend-2 192.168.1.123:6033 check

NOTE: I took the liberty to reindent a block of code in MySQL_Thread.cpp
so please review with whitespace changes hidden.","This adds basic support for the HAProxy PROXY protocol V1 on MySQL frontend
client connections.  This allows the true client IP to be seen in the output
of SHOW FULL PROCESSLIST in ProxySQL's admin frontend when the ProxySQL
servers sit behind a load balancer such as HAProxy or AWS classic ELBs with
the PROXY protocol feature enabled.
I believe this should resolve #2497 (Support for proxy_protocol for proxysql behind aws load balancer).
The patch adds a Proxy_Protocol class which handles:

parsing of PROXY protocol headers (only the V1 header supported for now)
matching client IPs against a list of configured network CIDRs

A new option, proxy_protocol_frontend_nets (list of network CIDRs), is
introduced to allow the PROXY protocol feature to be selectively turned on for
specific subnets where e.g. load balancers are running.  This is similar to how
the PROXY protocol is implemented in MariaDB.
This variable can be set either in the config file or via the ProxySQL Admin
interface.  Configuration file example:
mysql_variables=
{
    ...
    proxy_protocol_frontend_nets=""10.42.0.0/28 127.10.0.0/16""
    ...
}

ProxySQL Admin interface example:
UPDATE global_variables
SET variable_value=""192.168.42.0/24""
WHERE variable_name=""mysql-proxy_protocol_frontend_nets"";
LOAD MYSQL VARIABLES TO RUNTIME;

The network CIDRs are stored as a thread-local variable in the MySQL_Thread
class.  It's only updated by MySQL_Thread::refresh_variables().
A new MySQL Data Stream state (DSS), STATE_PROXY_PROTOCOL, is introduced to
handle the initial parsing of the PROXY protocol header.  Once this has
completed, the state is reset back to STATE_SERVER_HANDSHAKE.
The patch hooks into the MySQL_Thread's main loop where accept() is called
to handle incoming connections.  Next, the actual parsing of the PROXY protocol
header is invoked from the MySQL_Data_Stream::read_pkts() method, which is
also called from MySQL_Thread's main loop (where incoming data is handled).
I've only tested this with a HAProxy configuration block like:
listen proxysql-with-proxy
    bind *:6030
    option tcp-check
    mode tcp
    timeout server 6h
    timeout client 6h
    balance roundrobin
    server proxysql-backend-1 127.0.0.1:6033 check send-proxy
listen proxysql-without-proxy
    bind *:6031
    option tcp-check
    mode tcp
    timeout server 6h
    timeout client 6h
    balance roundrobin
    server proxysql-backend-2 192.168.1.123:6033 check

NOTE: I took the liberty to reindent a block of code in MySQL_Thread.cpp
so please review with whitespace changes hidden.",True,{'THUMBS_UP': ['https://github.com/ludgart']}
sysown/proxysql,https://github.com/sysown/proxysql,2971,2020-07-20T15:53:31Z,,2021-02-28T00:37:37Z,OPEN,False,293,24,10,https://github.com/noahwilliamsson,[RFC] V2.1.1: support HAProxy PROXY protocol V1 on MySQL frontends,1,[],https://github.com/sysown/proxysql/pull/2971,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2971#issuecomment-661126001,"This adds basic support for the HAProxy PROXY protocol V1 on MySQL frontend
client connections.  This allows the true client IP to be seen in the output
of SHOW FULL PROCESSLIST in ProxySQL's admin frontend when the ProxySQL
servers sit behind a load balancer such as HAProxy or AWS classic ELBs with
the PROXY protocol feature enabled.
I believe this should resolve #2497 (Support for proxy_protocol for proxysql behind aws load balancer).
The patch adds a Proxy_Protocol class which handles:

parsing of PROXY protocol headers (only the V1 header supported for now)
matching client IPs against a list of configured network CIDRs

A new option, proxy_protocol_frontend_nets (list of network CIDRs), is
introduced to allow the PROXY protocol feature to be selectively turned on for
specific subnets where e.g. load balancers are running.  This is similar to how
the PROXY protocol is implemented in MariaDB.
This variable can be set either in the config file or via the ProxySQL Admin
interface.  Configuration file example:
mysql_variables=
{
    ...
    proxy_protocol_frontend_nets=""10.42.0.0/28 127.10.0.0/16""
    ...
}

ProxySQL Admin interface example:
UPDATE global_variables
SET variable_value=""192.168.42.0/24""
WHERE variable_name=""mysql-proxy_protocol_frontend_nets"";
LOAD MYSQL VARIABLES TO RUNTIME;

The network CIDRs are stored as a thread-local variable in the MySQL_Thread
class.  It's only updated by MySQL_Thread::refresh_variables().
A new MySQL Data Stream state (DSS), STATE_PROXY_PROTOCOL, is introduced to
handle the initial parsing of the PROXY protocol header.  Once this has
completed, the state is reset back to STATE_SERVER_HANDSHAKE.
The patch hooks into the MySQL_Thread's main loop where accept() is called
to handle incoming connections.  Next, the actual parsing of the PROXY protocol
header is invoked from the MySQL_Data_Stream::read_pkts() method, which is
also called from MySQL_Thread's main loop (where incoming data is handled).
I've only tested this with a HAProxy configuration block like:
listen proxysql-with-proxy
    bind *:6030
    option tcp-check
    mode tcp
    timeout server 6h
    timeout client 6h
    balance roundrobin
    server proxysql-backend-1 127.0.0.1:6033 check send-proxy
listen proxysql-without-proxy
    bind *:6031
    option tcp-check
    mode tcp
    timeout server 6h
    timeout client 6h
    balance roundrobin
    server proxysql-backend-2 192.168.1.123:6033 check

NOTE: I took the liberty to reindent a block of code in MySQL_Thread.cpp
so please review with whitespace changes hidden.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2971,2020-07-20T15:53:31Z,,2021-02-28T00:37:37Z,OPEN,False,293,24,10,https://github.com/noahwilliamsson,[RFC] V2.1.1: support HAProxy PROXY protocol V1 on MySQL frontends,1,[],https://github.com/sysown/proxysql/pull/2971,https://github.com/noahwilliamsson,3,https://github.com/sysown/proxysql/pull/2971#issuecomment-787210450,"This adds basic support for the HAProxy PROXY protocol V1 on MySQL frontend
client connections.  This allows the true client IP to be seen in the output
of SHOW FULL PROCESSLIST in ProxySQL's admin frontend when the ProxySQL
servers sit behind a load balancer such as HAProxy or AWS classic ELBs with
the PROXY protocol feature enabled.
I believe this should resolve #2497 (Support for proxy_protocol for proxysql behind aws load balancer).
The patch adds a Proxy_Protocol class which handles:

parsing of PROXY protocol headers (only the V1 header supported for now)
matching client IPs against a list of configured network CIDRs

A new option, proxy_protocol_frontend_nets (list of network CIDRs), is
introduced to allow the PROXY protocol feature to be selectively turned on for
specific subnets where e.g. load balancers are running.  This is similar to how
the PROXY protocol is implemented in MariaDB.
This variable can be set either in the config file or via the ProxySQL Admin
interface.  Configuration file example:
mysql_variables=
{
    ...
    proxy_protocol_frontend_nets=""10.42.0.0/28 127.10.0.0/16""
    ...
}

ProxySQL Admin interface example:
UPDATE global_variables
SET variable_value=""192.168.42.0/24""
WHERE variable_name=""mysql-proxy_protocol_frontend_nets"";
LOAD MYSQL VARIABLES TO RUNTIME;

The network CIDRs are stored as a thread-local variable in the MySQL_Thread
class.  It's only updated by MySQL_Thread::refresh_variables().
A new MySQL Data Stream state (DSS), STATE_PROXY_PROTOCOL, is introduced to
handle the initial parsing of the PROXY protocol header.  Once this has
completed, the state is reset back to STATE_SERVER_HANDSHAKE.
The patch hooks into the MySQL_Thread's main loop where accept() is called
to handle incoming connections.  Next, the actual parsing of the PROXY protocol
header is invoked from the MySQL_Data_Stream::read_pkts() method, which is
also called from MySQL_Thread's main loop (where incoming data is handled).
I've only tested this with a HAProxy configuration block like:
listen proxysql-with-proxy
    bind *:6030
    option tcp-check
    mode tcp
    timeout server 6h
    timeout client 6h
    balance roundrobin
    server proxysql-backend-1 127.0.0.1:6033 check send-proxy
listen proxysql-without-proxy
    bind *:6031
    option tcp-check
    mode tcp
    timeout server 6h
    timeout client 6h
    balance roundrobin
    server proxysql-backend-2 192.168.1.123:6033 check

NOTE: I took the liberty to reindent a block of code in MySQL_Thread.cpp
so please review with whitespace changes hidden.",I assume v2.1 is where new development happens so I rebased the changes on top of v2.1.1.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2972,2020-07-22T08:50:17Z,2020-08-17T16:06:31Z,2020-08-17T16:06:31Z,CLOSED,False,36,31,11,https://github.com/JavierJF,"Fixes #2695, #2694 and #2693: Update multiple library dependencies",5,[],https://github.com/sysown/proxysql/pull/2972,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/2972,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2972,2020-07-22T08:50:17Z,2020-08-17T16:06:31Z,2020-08-17T16:06:31Z,CLOSED,False,36,31,11,https://github.com/JavierJF,"Fixes #2695, #2694 and #2693: Update multiple library dependencies",5,[],https://github.com/sysown/proxysql/pull/2972,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2972#issuecomment-674904782,,"@JavierJF : is this still relevant, or it can be closed?",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2972,2020-07-22T08:50:17Z,2020-08-17T16:06:31Z,2020-08-17T16:06:31Z,CLOSED,False,36,31,11,https://github.com/JavierJF,"Fixes #2695, #2694 and #2693: Update multiple library dependencies",5,[],https://github.com/sysown/proxysql/pull/2972,https://github.com/JavierJF,3,https://github.com/sysown/proxysql/pull/2972#issuecomment-674969552,,"This can be closed, was split into multiple PRs. Thanks you.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2974,2020-07-23T08:10:21Z,2020-08-17T12:52:59Z,2020-09-17T09:56:23Z,MERGED,True,3,2,1,https://github.com/JavierJF,Fixes #2973: Valgrind reports invalid read in 'GTID_Server_Data::read_next_gtid',3,[],https://github.com/sysown/proxysql/pull/2974,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/2974,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2974,2020-07-23T08:10:21Z,2020-08-17T12:52:59Z,2020-09-17T09:56:23Z,MERGED,True,3,2,1,https://github.com/JavierJF,Fixes #2973: Valgrind reports invalid read in 'GTID_Server_Data::read_next_gtid',3,[],https://github.com/sysown/proxysql/pull/2974,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2974#issuecomment-674832011,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2975,2020-07-23T22:55:57Z,2020-08-17T14:47:35Z,2020-10-30T16:12:33Z,MERGED,True,17,5,4,https://github.com/renecannao,V2.1.0 galera ci,2,[],https://github.com/sysown/proxysql/pull/2975,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2975,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2975,2020-07-23T22:55:57Z,2020-08-17T14:47:35Z,2020-10-30T16:12:33Z,MERGED,True,17,5,4,https://github.com/renecannao,V2.1.0 galera ci,2,[],https://github.com/sysown/proxysql/pull/2975,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2975#issuecomment-674907935,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2977,2020-07-24T09:03:02Z,2020-08-06T23:34:11Z,2020-09-17T09:56:15Z,MERGED,True,98,7,3,https://github.com/JavierJF,Fixes #2976: Include new logic in 'session_track_gtids' for 'set_testing' and 'set_testing-multi',3,[],https://github.com/sysown/proxysql/pull/2977,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/2977,Closes #2976.,Closes #2976.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2977,2020-07-24T09:03:02Z,2020-08-06T23:34:11Z,2020-09-17T09:56:15Z,MERGED,True,98,7,3,https://github.com/JavierJF,Fixes #2976: Include new logic in 'session_track_gtids' for 'set_testing' and 'set_testing-multi',3,[],https://github.com/sysown/proxysql/pull/2977,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/2977#issuecomment-664604074,Closes #2976.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2986,2020-08-04T17:21:57Z,2020-09-04T07:43:27Z,2020-09-04T07:43:28Z,MERGED,True,125,3,5,https://github.com/JavierJF,Updated mariadb-client-library to version 3.1.9,3,[],https://github.com/sysown/proxysql/pull/2986,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/2986,Closes #2963: Updated mariadb-client-library and added an automated test to ensure that GTID support is working properly.,Closes #2963: Updated mariadb-client-library and added an automated test to ensure that GTID support is working properly.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2986,2020-08-04T17:21:57Z,2020-09-04T07:43:27Z,2020-09-04T07:43:28Z,MERGED,True,125,3,5,https://github.com/JavierJF,Updated mariadb-client-library to version 3.1.9,3,[],https://github.com/sysown/proxysql/pull/2986,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/2986#issuecomment-675557223,Closes #2963: Updated mariadb-client-library and added an automated test to ensure that GTID support is working properly.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2987,2020-08-04T17:24:25Z,2020-08-17T10:45:31Z,2020-10-30T16:12:34Z,MERGED,True,27,26,7,https://github.com/JavierJF,Updated libraries 're2' to release '2020-07-06' and 'pcre' to version '8.44',3,[],https://github.com/sysown/proxysql/pull/2987,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/2987,Closes #2965.,Closes #2965.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2987,2020-08-04T17:24:25Z,2020-08-17T10:45:31Z,2020-10-30T16:12:34Z,MERGED,True,27,26,7,https://github.com/JavierJF,Updated libraries 're2' to release '2020-07-06' and 'pcre' to version '8.44',3,[],https://github.com/sysown/proxysql/pull/2987,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2987#issuecomment-674752823,Closes #2965.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2988,2020-08-04T17:26:03Z,2020-08-15T23:58:48Z,2020-08-15T23:58:48Z,MERGED,True,4,2,3,https://github.com/JavierJF,Updated libssl to version '1.1.1g',1,[],https://github.com/sysown/proxysql/pull/2988,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/2988,Closes #2964.,Closes #2964.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2988,2020-08-04T17:26:03Z,2020-08-15T23:58:48Z,2020-08-15T23:58:48Z,MERGED,True,4,2,3,https://github.com/JavierJF,Updated libssl to version '1.1.1g',1,[],https://github.com/sysown/proxysql/pull/2988,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2988#issuecomment-670174729,Closes #2964.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2988,2020-08-04T17:26:03Z,2020-08-15T23:58:48Z,2020-08-15T23:58:48Z,MERGED,True,4,2,3,https://github.com/JavierJF,Updated libssl to version '1.1.1g',1,[],https://github.com/sysown/proxysql/pull/2988,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/2988#issuecomment-670176005,Closes #2964.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2988,2020-08-04T17:26:03Z,2020-08-15T23:58:48Z,2020-08-15T23:58:48Z,MERGED,True,4,2,3,https://github.com/JavierJF,Updated libssl to version '1.1.1g',1,[],https://github.com/sysown/proxysql/pull/2988,https://github.com/pondix,4,https://github.com/sysown/proxysql/pull/2988#issuecomment-670177625,Closes #2964.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2988,2020-08-04T17:26:03Z,2020-08-15T23:58:48Z,2020-08-15T23:58:48Z,MERGED,True,4,2,3,https://github.com/JavierJF,Updated libssl to version '1.1.1g',1,[],https://github.com/sysown/proxysql/pull/2988,https://github.com/pondix,5,https://github.com/sysown/proxysql/pull/2988#issuecomment-670180757,Closes #2964.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2988,2020-08-04T17:26:03Z,2020-08-15T23:58:48Z,2020-08-15T23:58:48Z,MERGED,True,4,2,3,https://github.com/JavierJF,Updated libssl to version '1.1.1g',1,[],https://github.com/sysown/proxysql/pull/2988,https://github.com/renecannao,6,https://github.com/sysown/proxysql/pull/2988#issuecomment-670201569,Closes #2964.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2988,2020-08-04T17:26:03Z,2020-08-15T23:58:48Z,2020-08-15T23:58:48Z,MERGED,True,4,2,3,https://github.com/JavierJF,Updated libssl to version '1.1.1g',1,[],https://github.com/sysown/proxysql/pull/2988,https://github.com/renecannao,7,https://github.com/sysown/proxysql/pull/2988#issuecomment-674454097,Closes #2964.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2990,2020-08-04T17:50:17Z,2020-08-06T18:12:03Z,2020-09-17T09:56:12Z,MERGED,True,9,4,1,https://github.com/JavierJF,Fixes #2989: Never reset a connection with client error code,1,[],https://github.com/sysown/proxysql/pull/2990,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/2990,Closes #2989.,Closes #2989.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2990,2020-08-04T17:50:17Z,2020-08-06T18:12:03Z,2020-09-17T09:56:12Z,MERGED,True,9,4,1,https://github.com/JavierJF,Fixes #2989: Never reset a connection with client error code,1,[],https://github.com/sysown/proxysql/pull/2990,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2990#issuecomment-669869215,Closes #2989.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2991,2020-08-06T17:22:06Z,2020-08-17T12:41:58Z,2020-08-17T12:42:08Z,MERGED,True,13,2,4,https://github.com/Hugmeir,OSX: compilation fixes,3,[],https://github.com/sysown/proxysql/pull/2991,https://github.com/Hugmeir,1,https://github.com/sysown/proxysql/pull/2991,"Tried compiling proxysql on a OSX box (Mojave 10.14.2) and ran into a handful of issues:


libmicrohttpd fails to compile due to send() having a different signature.
This is actually patched upstream in 0.9.69 so this pull request is just adding a .patch with that fix and applying it


Statically linking against libev, libinjection, and libhttpserver
There was an OSX codepath statically linking against a chunk of the bundled dependencies, it was just missing those three.


Dynamically linking the proxysql binary against gnutls
The non-OSX codepath includes -lgnutls already; without this linking fails when including libmicrohttpd


TCP_KEEPIDLE is linux-exclusive
This was added in 58b7fec along with much-welcome SO_KEEPALIVE support. Wrapped the one use in an #ifdef


With those changes applied:
~/git_tree/proxysql $ uname
Darwin
~/git_tree/proxysql $ ./src/proxysql --version
ProxySQL version 2.0.14-11-ge9ef83ab, codename Truls","Tried compiling proxysql on a OSX box (Mojave 10.14.2) and ran into a handful of issues:


libmicrohttpd fails to compile due to send() having a different signature.
This is actually patched upstream in 0.9.69 so this pull request is just adding a .patch with that fix and applying it


Statically linking against libev, libinjection, and libhttpserver
There was an OSX codepath statically linking against a chunk of the bundled dependencies, it was just missing those three.


Dynamically linking the proxysql binary against gnutls
The non-OSX codepath includes -lgnutls already; without this linking fails when including libmicrohttpd


TCP_KEEPIDLE is linux-exclusive
This was added in 58b7fec along with much-welcome SO_KEEPALIVE support. Wrapped the one use in an #ifdef


With those changes applied:
~/git_tree/proxysql $ uname
Darwin
~/git_tree/proxysql $ ./src/proxysql --version
ProxySQL version 2.0.14-11-ge9ef83ab, codename Truls",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2991,2020-08-06T17:22:06Z,2020-08-17T12:41:58Z,2020-08-17T12:42:08Z,MERGED,True,13,2,4,https://github.com/Hugmeir,OSX: compilation fixes,3,[],https://github.com/sysown/proxysql/pull/2991,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2991#issuecomment-670066808,"Tried compiling proxysql on a OSX box (Mojave 10.14.2) and ran into a handful of issues:


libmicrohttpd fails to compile due to send() having a different signature.
This is actually patched upstream in 0.9.69 so this pull request is just adding a .patch with that fix and applying it


Statically linking against libev, libinjection, and libhttpserver
There was an OSX codepath statically linking against a chunk of the bundled dependencies, it was just missing those three.


Dynamically linking the proxysql binary against gnutls
The non-OSX codepath includes -lgnutls already; without this linking fails when including libmicrohttpd


TCP_KEEPIDLE is linux-exclusive
This was added in 58b7fec along with much-welcome SO_KEEPALIVE support. Wrapped the one use in an #ifdef


With those changes applied:
~/git_tree/proxysql $ uname
Darwin
~/git_tree/proxysql $ ./src/proxysql --version
ProxySQL version 2.0.14-11-ge9ef83ab, codename Truls",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2991,2020-08-06T17:22:06Z,2020-08-17T12:41:58Z,2020-08-17T12:42:08Z,MERGED,True,13,2,4,https://github.com/Hugmeir,OSX: compilation fixes,3,[],https://github.com/sysown/proxysql/pull/2991,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2991#issuecomment-674779312,"Tried compiling proxysql on a OSX box (Mojave 10.14.2) and ran into a handful of issues:


libmicrohttpd fails to compile due to send() having a different signature.
This is actually patched upstream in 0.9.69 so this pull request is just adding a .patch with that fix and applying it


Statically linking against libev, libinjection, and libhttpserver
There was an OSX codepath statically linking against a chunk of the bundled dependencies, it was just missing those three.


Dynamically linking the proxysql binary against gnutls
The non-OSX codepath includes -lgnutls already; without this linking fails when including libmicrohttpd


TCP_KEEPIDLE is linux-exclusive
This was added in 58b7fec along with much-welcome SO_KEEPALIVE support. Wrapped the one use in an #ifdef


With those changes applied:
~/git_tree/proxysql $ uname
Darwin
~/git_tree/proxysql $ ./src/proxysql --version
ProxySQL version 2.0.14-11-ge9ef83ab, codename Truls",test this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2991,2020-08-06T17:22:06Z,2020-08-17T12:41:58Z,2020-08-17T12:42:08Z,MERGED,True,13,2,4,https://github.com/Hugmeir,OSX: compilation fixes,3,[],https://github.com/sysown/proxysql/pull/2991,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/2991#issuecomment-674857919,"Tried compiling proxysql on a OSX box (Mojave 10.14.2) and ran into a handful of issues:


libmicrohttpd fails to compile due to send() having a different signature.
This is actually patched upstream in 0.9.69 so this pull request is just adding a .patch with that fix and applying it


Statically linking against libev, libinjection, and libhttpserver
There was an OSX codepath statically linking against a chunk of the bundled dependencies, it was just missing those three.


Dynamically linking the proxysql binary against gnutls
The non-OSX codepath includes -lgnutls already; without this linking fails when including libmicrohttpd


TCP_KEEPIDLE is linux-exclusive
This was added in 58b7fec along with much-welcome SO_KEEPALIVE support. Wrapped the one use in an #ifdef


With those changes applied:
~/git_tree/proxysql $ uname
Darwin
~/git_tree/proxysql $ ./src/proxysql --version
ProxySQL version 2.0.14-11-ge9ef83ab, codename Truls",thank you,True,{'THUMBS_UP': ['https://github.com/Hugmeir']}
sysown/proxysql,https://github.com/sysown/proxysql,2992,2020-08-06T17:54:25Z,,2022-03-10T21:50:06Z,OPEN,False,64,0,4,https://github.com/renecannao,DONOTMERGE: Added code to debug ENOTSOCK,1,[],https://github.com/sysown/proxysql/pull/2992,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2992,DO NOT MERGE,DO NOT MERGE,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2992,2020-08-06T17:54:25Z,,2022-03-10T21:50:06Z,OPEN,False,64,0,4,https://github.com/renecannao,DONOTMERGE: Added code to debug ENOTSOCK,1,[],https://github.com/sysown/proxysql/pull/2992,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/2992#issuecomment-670165942,DO NOT MERGE,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2992,2020-08-06T17:54:25Z,,2022-03-10T21:50:06Z,OPEN,False,64,0,4,https://github.com/renecannao,DONOTMERGE: Added code to debug ENOTSOCK,1,[],https://github.com/sysown/proxysql/pull/2992,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/2992#issuecomment-1064536873,DO NOT MERGE,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2993,2020-08-06T18:44:52Z,2020-08-17T14:31:43Z,2020-10-30T16:09:02Z,MERGED,True,386,183,22,https://github.com/renecannao,V2.1.0 from v2.0.14,13,[],https://github.com/sysown/proxysql/pull/2993,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2993,Various ports from 2.0.14,Various ports from 2.0.14,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2993,2020-08-06T18:44:52Z,2020-08-17T14:31:43Z,2020-10-30T16:09:02Z,MERGED,True,386,183,22,https://github.com/renecannao,V2.1.0 from v2.0.14,13,[],https://github.com/sysown/proxysql/pull/2993,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2993#issuecomment-674863869,Various ports from 2.0.14,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2994,2020-08-06T19:47:41Z,2020-08-06T19:47:53Z,2020-10-30T16:12:29Z,MERGED,True,3,0,1,https://github.com/renecannao,Use python2 for libinjection,1,[],https://github.com/sysown/proxysql/pull/2994,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2994,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2995,2020-08-06T21:33:45Z,2020-08-06T22:52:44Z,2020-10-30T16:12:28Z,MERGED,True,11,3,1,https://github.com/renecannao,Adding PROXYSQL SHUTDOWN SLOW,1,[],https://github.com/sysown/proxysql/pull/2995,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2995,"In 2.1 we are mapping the command PROXYSQL SHUTDOWN to PROXYSQL KILL = a very fast shutdown.
The legacy old PROXYSQL SHUTDOWN is now implemented as PROXYSQL SHUTDOWN SLOW","In 2.1 we are mapping the command PROXYSQL SHUTDOWN to PROXYSQL KILL = a very fast shutdown.
The legacy old PROXYSQL SHUTDOWN is now implemented as PROXYSQL SHUTDOWN SLOW",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2996,2020-08-06T23:34:41Z,2020-08-07T01:52:45Z,2020-08-07T01:52:45Z,MERGED,True,115,19,4,https://github.com/renecannao,Combining PR 2970 and 2979,7,[],https://github.com/sysown/proxysql/pull/2996,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/2996,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2996,2020-08-06T23:34:41Z,2020-08-07T01:52:45Z,2020-08-07T01:52:45Z,MERGED,True,115,19,4,https://github.com/renecannao,Combining PR 2970 and 2979,7,[],https://github.com/sysown/proxysql/pull/2996,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/2996#issuecomment-670242221,,test this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2996,2020-08-06T23:34:41Z,2020-08-07T01:52:45Z,2020-08-07T01:52:45Z,MERGED,True,115,19,4,https://github.com/renecannao,Combining PR 2970 and 2979,7,[],https://github.com/sysown/proxysql/pull/2996,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/2996#issuecomment-670246190,,test this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2996,2020-08-06T23:34:41Z,2020-08-07T01:52:45Z,2020-08-07T01:52:45Z,MERGED,True,115,19,4,https://github.com/renecannao,Combining PR 2970 and 2979,7,[],https://github.com/sysown/proxysql/pull/2996,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/2996#issuecomment-670254384,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,2996,2020-08-06T23:34:41Z,2020-08-07T01:52:45Z,2020-08-07T01:52:45Z,MERGED,True,115,19,4,https://github.com/renecannao,Combining PR 2970 and 2979,7,[],https://github.com/sysown/proxysql/pull/2996,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/2996#issuecomment-670257630,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3001,2020-08-12T23:35:27Z,2020-09-03T20:33:47Z,2020-09-03T20:33:47Z,MERGED,True,370,133,16,https://github.com/renecannao,Implemented fix for issue #3000,2,[],https://github.com/sysown/proxysql/pull/3001,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3001,"Issue #3000:
A client connection can use a backend connection with a session variable set by a different client","Issue #3000:
A client connection can use a backend connection with a session variable set by a different client",True,{'THUMBS_UP': ['https://github.com/yakirgb']}
sysown/proxysql,https://github.com/sysown/proxysql,3004,2020-08-14T18:54:32Z,2020-08-17T10:11:03Z,2020-08-17T10:11:04Z,MERGED,True,3,0,1,https://github.com/mojotx,"Add "".vscode/"" to .gitignore",1,[],https://github.com/sysown/proxysql/pull/3004,https://github.com/mojotx,1,https://github.com/sysown/proxysql/pull/3004,This will ignore preferences for the Microsoft VS Code text editor.,This will ignore preferences for the Microsoft VS Code text editor.,True,{'HEART': ['https://github.com/yakirgb']}
sysown/proxysql,https://github.com/sysown/proxysql,3004,2020-08-14T18:54:32Z,2020-08-17T10:11:03Z,2020-08-17T10:11:04Z,MERGED,True,3,0,1,https://github.com/mojotx,"Add "".vscode/"" to .gitignore",1,[],https://github.com/sysown/proxysql/pull/3004,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/3004#issuecomment-674235811,This will ignore preferences for the Microsoft VS Code text editor.,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3004,2020-08-14T18:54:32Z,2020-08-17T10:11:03Z,2020-08-17T10:11:04Z,MERGED,True,3,0,1,https://github.com/mojotx,"Add "".vscode/"" to .gitignore",1,[],https://github.com/sysown/proxysql/pull/3004,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3004#issuecomment-674791667,This will ignore preferences for the Microsoft VS Code text editor.,thank you,True,{'THUMBS_UP': ['https://github.com/mojotx']}
sysown/proxysql,https://github.com/sysown/proxysql,3006,2020-08-17T09:09:43Z,2020-08-17T12:41:47Z,2020-08-17T12:41:47Z,MERGED,True,140,0,10,https://github.com/JavierJF,Fixes #3005: Compilation no longer working for GCC 4.8,1,[],https://github.com/sysown/proxysql/pull/3006,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3006,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3006,2020-08-17T09:09:43Z,2020-08-17T12:41:47Z,2020-08-17T12:41:47Z,MERGED,True,140,0,10,https://github.com/JavierJF,Fixes #3005: Compilation no longer working for GCC 4.8,1,[],https://github.com/sysown/proxysql/pull/3006,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3006#issuecomment-674771372,,test this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3006,2020-08-17T09:09:43Z,2020-08-17T12:41:47Z,2020-08-17T12:41:47Z,MERGED,True,140,0,10,https://github.com/JavierJF,Fixes #3005: Compilation no longer working for GCC 4.8,1,[],https://github.com/sysown/proxysql/pull/3006,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3006#issuecomment-674832169,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3007,2020-08-17T11:51:08Z,2020-08-17T12:49:06Z,2020-08-17T12:49:06Z,MERGED,True,8,5,2,https://github.com/renecannao,V2.0.14 2955,3,[],https://github.com/sysown/proxysql/pull/3007,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3007,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3009,2020-08-17T12:48:40Z,2020-08-17T13:10:56Z,2020-10-30T16:12:26Z,MERGED,True,13,2,4,https://github.com/renecannao,V2.1.0 2991,3,[],https://github.com/sysown/proxysql/pull/3009,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3009,Port of PR 2991 to 2.1.0,Port of PR 2991 to 2.1.0,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3011,2020-08-17T18:58:04Z,2020-08-25T16:13:40Z,2020-08-25T16:13:40Z,MERGED,True,2,0,1,https://github.com/JavierJF,Fixes #3003: Crash during shutdown due to invalid access to 'GloMTH' in 'push_MyConn_to_pool',1,[],https://github.com/sysown/proxysql/pull/3011,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3011,Closes #3003.,Closes #3003.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3012,2020-08-17T18:59:13Z,2020-08-25T16:13:15Z,2020-09-17T09:54:55Z,MERGED,True,1,0,1,https://github.com/JavierJF,Fixes #3010:  Port avoid restarting if an error is detected during shutdown from v2.1.0 to v2.0.x,1,[],https://github.com/sysown/proxysql/pull/3012,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3012,Closes #3010 .,Closes #3010 .,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3014,2020-08-18T12:37:42Z,,2020-08-18T12:38:03Z,OPEN,False,0,22,1,https://github.com/IzzySmith,Remove error message number writers > max writers,1,[],https://github.com/sysown/proxysql/pull/3014,https://github.com/IzzySmith,1,https://github.com/sysown/proxysql/pull/3014,"Due to the fix introduced by this issue: #2950 this error message is redundant and confusing, as all hosts are now in the writer hostgroup. Therefore, I suggest that it is removed.","Due to the fix introduced by this issue: #2950 this error message is redundant and confusing, as all hosts are now in the writer hostgroup. Therefore, I suggest that it is removed.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3014,2020-08-18T12:37:42Z,,2020-08-18T12:38:03Z,OPEN,False,0,22,1,https://github.com/IzzySmith,Remove error message number writers > max writers,1,[],https://github.com/sysown/proxysql/pull/3014,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/3014#issuecomment-675452849,"Due to the fix introduced by this issue: #2950 this error message is redundant and confusing, as all hosts are now in the writer hostgroup. Therefore, I suggest that it is removed.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3015,2020-08-19T13:54:58Z,2020-08-19T13:56:10Z,2020-08-19T13:56:10Z,CLOSED,False,0,0,0,https://github.com/bskllzh,upgrade v2.0.14,1,[],https://github.com/sysown/proxysql/pull/3015,https://github.com/bskllzh,1,https://github.com/sysown/proxysql/pull/3015,update from upstream,update from upstream,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3016,2020-08-19T15:50:58Z,2020-09-03T20:33:08Z,2020-09-03T20:33:08Z,MERGED,True,1,0,1,https://github.com/bskllzh,Fix a mem leak in flush_ldap_variables___database_to_runtime fun,1,[],https://github.com/sysown/proxysql/pull/3016,https://github.com/bskllzh,1,https://github.com/sysown/proxysql/pull/3016,"Fix a mem leak in flush_ldap_variables___database_to_runtime fun of ProxySQL_Admin class  when call admindb->execute_statement function.  Because in the called function(admindb->execute_statement), the strdup--strdup(sqlite3_errmsg(db)) function is used to allocate memory to store the error message of the sqlite database operation failure.","Fix a mem leak in flush_ldap_variables___database_to_runtime fun of ProxySQL_Admin class  when call admindb->execute_statement function.  Because in the called function(admindb->execute_statement), the strdup--strdup(sqlite3_errmsg(db)) function is used to allocate memory to store the error message of the sqlite database operation failure.",True,{'EYES': ['https://github.com/yakirgb']}
sysown/proxysql,https://github.com/sysown/proxysql,3021,2020-08-25T21:16:03Z,2020-09-05T21:31:55Z,2020-09-05T21:31:55Z,MERGED,True,5,0,1,https://github.com/jhriggs,Log emergency check of shunned servers when no servers are available,1,[],https://github.com/sysown/proxysql/pull/3021,https://github.com/jhriggs,1,https://github.com/sysown/proxysql/pull/3021,"ProxySQL version: anything with #531 (‚â• 1.3.0c)
Issue #531 added ""a desperate attempt to bring back online any shunned server"" when no servers are available; however, no indication or notification of this is logged. Add a log message indicating that the hostgroup has no servers available and shunned hosts are being checked before the normal shun recovery time.
This message is logged at most once per second to avoid spamming the logs.
The other day, we had a network hiccup that caused connect failures to our active primary DB, leading it to be shunned. I panicked when I saw that it was being shunned for a full 10 seconds‚Ä¶though it appeared that it actually recovered after just a couple of seconds. I tracked this (desired!) behavior down to #531 and its fix. The only problem is that I wasn't aware that it wasn't actually being shunned for that full 10 seconds. This PR adds a log message to save my rattled nerves!","ProxySQL version: anything with #531 (‚â• 1.3.0c)
Issue #531 added ""a desperate attempt to bring back online any shunned server"" when no servers are available; however, no indication or notification of this is logged. Add a log message indicating that the hostgroup has no servers available and shunned hosts are being checked before the normal shun recovery time.
This message is logged at most once per second to avoid spamming the logs.
The other day, we had a network hiccup that caused connect failures to our active primary DB, leading it to be shunned. I panicked when I saw that it was being shunned for a full 10 seconds‚Ä¶though it appeared that it actually recovered after just a couple of seconds. I tracked this (desired!) behavior down to #531 and its fix. The only problem is that I wasn't aware that it wasn't actually being shunned for that full 10 seconds. This PR adds a log message to save my rattled nerves!",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3021,2020-08-25T21:16:03Z,2020-09-05T21:31:55Z,2020-09-05T21:31:55Z,MERGED,True,5,0,1,https://github.com/jhriggs,Log emergency check of shunned servers when no servers are available,1,[],https://github.com/sysown/proxysql/pull/3021,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/3021#issuecomment-680274903,"ProxySQL version: anything with #531 (‚â• 1.3.0c)
Issue #531 added ""a desperate attempt to bring back online any shunned server"" when no servers are available; however, no indication or notification of this is logged. Add a log message indicating that the hostgroup has no servers available and shunned hosts are being checked before the normal shun recovery time.
This message is logged at most once per second to avoid spamming the logs.
The other day, we had a network hiccup that caused connect failures to our active primary DB, leading it to be shunned. I panicked when I saw that it was being shunned for a full 10 seconds‚Ä¶though it appeared that it actually recovered after just a couple of seconds. I tracked this (desired!) behavior down to #531 and its fix. The only problem is that I wasn't aware that it wasn't actually being shunned for that full 10 seconds. This PR adds a log message to save my rattled nerves!",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3021,2020-08-25T21:16:03Z,2020-09-05T21:31:55Z,2020-09-05T21:31:55Z,MERGED,True,5,0,1,https://github.com/jhriggs,Log emergency check of shunned servers when no servers are available,1,[],https://github.com/sysown/proxysql/pull/3021,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3021#issuecomment-686993639,"ProxySQL version: anything with #531 (‚â• 1.3.0c)
Issue #531 added ""a desperate attempt to bring back online any shunned server"" when no servers are available; however, no indication or notification of this is logged. Add a log message indicating that the hostgroup has no servers available and shunned hosts are being checked before the normal shun recovery time.
This message is logged at most once per second to avoid spamming the logs.
The other day, we had a network hiccup that caused connect failures to our active primary DB, leading it to be shunned. I panicked when I saw that it was being shunned for a full 10 seconds‚Ä¶though it appeared that it actually recovered after just a couple of seconds. I tracked this (desired!) behavior down to #531 and its fix. The only problem is that I wasn't aware that it wasn't actually being shunned for that full 10 seconds. This PR adds a log message to save my rattled nerves!",add to whitelist,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3023,2020-08-26T18:12:09Z,2020-08-27T10:10:50Z,2020-09-17T09:54:57Z,MERGED,True,38,7,4,https://github.com/renecannao,Added variable mysql-connect_timeout_client,1,[],https://github.com/sysown/proxysql/pull/3023,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3023,This also fix bug #1132,This also fix bug #1132,True,{'HEART': ['https://github.com/yakirgb']}
sysown/proxysql,https://github.com/sysown/proxysql,3024,2020-08-26T18:59:46Z,2020-08-27T10:11:05Z,2020-09-17T09:55:31Z,MERGED,True,1,1,1,https://github.com/renecannao,Close killed connection also in idle thread,1,[],https://github.com/sysown/proxysql/pull/3024,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3024,"Bug fix:
if a connection was killed while handled by idle thread, it was not passed to the main worker thread for termination.","Bug fix:
if a connection was killed while handled by idle thread, it was not passed to the main worker thread for termination.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3025,2020-08-27T09:45:07Z,2020-08-27T10:11:17Z,2020-10-30T16:09:04Z,MERGED,True,50,12,6,https://github.com/renecannao,V2.1.0 70061,4,[],https://github.com/sysown/proxysql/pull/3025,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3025,Update of .gitignore and port of PR #3023 and #3024,Update of .gitignore and port of PR #3023 and #3024,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3037,2020-09-01T11:23:08Z,2020-09-03T20:31:46Z,2020-09-03T20:31:46Z,MERGED,True,7,1,1,https://github.com/JavierJF,Fixes #3035: Invalid read reported by valgrind,1,[],https://github.com/sysown/proxysql/pull/3037,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3037,Closes #3035 .,Closes #3035 .,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3038,2020-09-01T11:23:55Z,2020-09-03T20:32:01Z,2020-09-03T20:32:01Z,MERGED,True,23,1,1,https://github.com/JavierJF,Fixes #3036: 'MySQL_Threads_Handler::listener_del' should delegate socket closing into thread themselves ,1,[],https://github.com/sysown/proxysql/pull/3038,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3038,Closes #3036.,Closes #3036.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3038,2020-09-01T11:23:55Z,2020-09-03T20:32:01Z,2020-09-03T20:32:01Z,MERGED,True,23,1,1,https://github.com/JavierJF,Fixes #3036: 'MySQL_Threads_Handler::listener_del' should delegate socket closing into thread themselves ,1,[],https://github.com/sysown/proxysql/pull/3038,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3038#issuecomment-684817948,Closes #3036.,Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3039,2020-09-01T11:25:35Z,2020-09-03T20:30:59Z,2020-09-17T09:55:52Z,MERGED,True,9,2,1,https://github.com/JavierJF,Fixes #3033: Crash due to invalid access to thread object during shutdown,1,[],https://github.com/sysown/proxysql/pull/3039,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3039,Closes #3033.,Closes #3033.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3046,2020-09-05T00:57:43Z,2020-09-05T21:31:20Z,2020-09-17T09:55:37Z,MERGED,True,61,3,6,https://github.com/JavierJF,Closes #3045: Add variable specifying number of retries before shunning servers when replication lag is exceeded,3,[],https://github.com/sysown/proxysql/pull/3046,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3046,Closed #3045.,Closed #3045.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3046,2020-09-05T00:57:43Z,2020-09-05T21:31:20Z,2020-09-17T09:55:37Z,MERGED,True,61,3,6,https://github.com/JavierJF,Closes #3045: Add variable specifying number of retries before shunning servers when replication lag is exceeded,3,[],https://github.com/sysown/proxysql/pull/3046,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3046#issuecomment-687576026,Closed #3045.,Retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3046,2020-09-05T00:57:43Z,2020-09-05T21:31:20Z,2020-09-17T09:55:37Z,MERGED,True,61,3,6,https://github.com/JavierJF,Closes #3045: Add variable specifying number of retries before shunning servers when replication lag is exceeded,3,[],https://github.com/sysown/proxysql/pull/3046,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3046#issuecomment-687596810,Closed #3045.,Retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3046,2020-09-05T00:57:43Z,2020-09-05T21:31:20Z,2020-09-17T09:55:37Z,MERGED,True,61,3,6,https://github.com/JavierJF,Closes #3045: Add variable specifying number of retries before shunning servers when replication lag is exceeded,3,[],https://github.com/sysown/proxysql/pull/3046,https://github.com/JavierJF,4,https://github.com/sysown/proxysql/pull/3046#issuecomment-687612671,Closed #3045.,Retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3048,2020-09-07T17:09:09Z,2020-09-07T17:09:20Z,2020-09-07T17:09:20Z,MERGED,True,63,1,2,https://github.com/pondix,Added support for Ubuntu 20 package,1,[],https://github.com/sysown/proxysql/pull/3048,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/3048,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3050,2020-09-07T19:59:16Z,2020-09-07T20:23:17Z,2020-09-17T09:54:21Z,MERGED,True,2,0,1,https://github.com/JavierJF,Fixes #3049: Compilation no longer working in Centos 6.7,1,[],https://github.com/sysown/proxysql/pull/3050,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3050,Closes #3049.,Closes #3049.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3051,2020-09-07T20:32:07Z,2020-09-07T20:32:14Z,2020-09-17T09:54:14Z,MERGED,True,11,154,1,https://github.com/pondix,Merge ClickHouse support into main packages,1,[],https://github.com/sysown/proxysql/pull/3051,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/3051,This unifies the standard and ClickHouse packages i.e. standard packages will now have ClickHouse support by default,This unifies the standard and ClickHouse packages i.e. standard packages will now have ClickHouse support by default,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3052,2020-09-07T20:54:03Z,2020-09-07T20:54:10Z,2020-09-07T20:54:10Z,MERGED,True,1,78,1,https://github.com/pondix,Removing additional logic for clickhouse builds,1,[],https://github.com/sysown/proxysql/pull/3052,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/3052,Simplifies Makefile and removes more clickhouse specific build logic,Simplifies Makefile and removes more clickhouse specific build logic,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3054,2020-09-08T21:49:13Z,2020-09-16T00:56:39Z,2020-10-30T16:09:07Z,MERGED,True,494,360,33,https://github.com/renecannao,V2.1.0 from2014 2,32,[],https://github.com/sysown/proxysql/pull/3054,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3054,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3063,2020-09-14T14:39:53Z,,2020-12-09T12:34:38Z,OPEN,False,470,397,10,https://github.com/Gonlo2,Fix data races in the MySQL Monitor and HostGroups,11,[],https://github.com/sysown/proxysql/pull/3063,https://github.com/Gonlo2,1,https://github.com/sysown/proxysql/pull/3063,"This change fix some data races in the MySQL Monitor and HostGroups code along with some other minor bug fixes.
A clear description of the issue
The MySQL Monitor and HostGroups code has race conditions that can leave ProxySQL in an inconsistent state, for example removing the main node from the candidate list with no possibility of recovery until another failure is detected.
ProxySQL version
It was detected in the ProxySQL v2.0.10 build.
OS Version
16.04.1-Ubuntu
The steps to reproduce the issue
Usually it is detected a few minutes after several node failures, I have left a commit with two scripts and a docker-compose to reproduce the problem in the folder ""reproduce"", the first one generates load in a Galera cluster through sysbench and the second one restarts one of the nodes until the problem is detected (to do this the script needs that the build is a debug one to have access to the table ""myhgm.mysql_servers""). The steps to execute this are:
$ cd reproduce
$ docker-compose up # In some terminal
$ ./generate-load.sh # In other terminal
$ ./node-error.sh # In another terminal

Full ProxySQL error log
I don't have a complete log of this but I guess it's more flexible to get the log from the script to reproduce the problem, if this is not enough let me know I'll add a log.","This change fix some data races in the MySQL Monitor and HostGroups code along with some other minor bug fixes.
A clear description of the issue
The MySQL Monitor and HostGroups code has race conditions that can leave ProxySQL in an inconsistent state, for example removing the main node from the candidate list with no possibility of recovery until another failure is detected.
ProxySQL version
It was detected in the ProxySQL v2.0.10 build.
OS Version
16.04.1-Ubuntu
The steps to reproduce the issue
Usually it is detected a few minutes after several node failures, I have left a commit with two scripts and a docker-compose to reproduce the problem in the folder ""reproduce"", the first one generates load in a Galera cluster through sysbench and the second one restarts one of the nodes until the problem is detected (to do this the script needs that the build is a debug one to have access to the table ""myhgm.mysql_servers""). The steps to execute this are:
$ cd reproduce
$ docker-compose up # In some terminal
$ ./generate-load.sh # In other terminal
$ ./node-error.sh # In another terminal

Full ProxySQL error log
I don't have a complete log of this but I guess it's more flexible to get the log from the script to reproduce the problem, if this is not enough let me know I'll add a log.",True,{'EYES': ['https://github.com/ajs124']}
sysown/proxysql,https://github.com/sysown/proxysql,3063,2020-09-14T14:39:53Z,,2020-12-09T12:34:38Z,OPEN,False,470,397,10,https://github.com/Gonlo2,Fix data races in the MySQL Monitor and HostGroups,11,[],https://github.com/sysown/proxysql/pull/3063,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/3063#issuecomment-692102589,"This change fix some data races in the MySQL Monitor and HostGroups code along with some other minor bug fixes.
A clear description of the issue
The MySQL Monitor and HostGroups code has race conditions that can leave ProxySQL in an inconsistent state, for example removing the main node from the candidate list with no possibility of recovery until another failure is detected.
ProxySQL version
It was detected in the ProxySQL v2.0.10 build.
OS Version
16.04.1-Ubuntu
The steps to reproduce the issue
Usually it is detected a few minutes after several node failures, I have left a commit with two scripts and a docker-compose to reproduce the problem in the folder ""reproduce"", the first one generates load in a Galera cluster through sysbench and the second one restarts one of the nodes until the problem is detected (to do this the script needs that the build is a debug one to have access to the table ""myhgm.mysql_servers""). The steps to execute this are:
$ cd reproduce
$ docker-compose up # In some terminal
$ ./generate-load.sh # In other terminal
$ ./node-error.sh # In another terminal

Full ProxySQL error log
I don't have a complete log of this but I guess it's more flexible to get the log from the script to reproduce the problem, if this is not enough let me know I'll add a log.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3063,2020-09-14T14:39:53Z,,2020-12-09T12:34:38Z,OPEN,False,470,397,10,https://github.com/Gonlo2,Fix data races in the MySQL Monitor and HostGroups,11,[],https://github.com/sysown/proxysql/pull/3063,https://github.com/JavierJF,3,https://github.com/sysown/proxysql/pull/3063#issuecomment-694229492,"This change fix some data races in the MySQL Monitor and HostGroups code along with some other minor bug fixes.
A clear description of the issue
The MySQL Monitor and HostGroups code has race conditions that can leave ProxySQL in an inconsistent state, for example removing the main node from the candidate list with no possibility of recovery until another failure is detected.
ProxySQL version
It was detected in the ProxySQL v2.0.10 build.
OS Version
16.04.1-Ubuntu
The steps to reproduce the issue
Usually it is detected a few minutes after several node failures, I have left a commit with two scripts and a docker-compose to reproduce the problem in the folder ""reproduce"", the first one generates load in a Galera cluster through sysbench and the second one restarts one of the nodes until the problem is detected (to do this the script needs that the build is a debug one to have access to the table ""myhgm.mysql_servers""). The steps to execute this are:
$ cd reproduce
$ docker-compose up # In some terminal
$ ./generate-load.sh # In other terminal
$ ./node-error.sh # In another terminal

Full ProxySQL error log
I don't have a complete log of this but I guess it's more flexible to get the log from the script to reproduce the problem, if this is not enough let me know I'll add a log.","Hi, thanks for PR, several notes about it:

The pull request doesn't compile:

MySQL_HostGroups_Manager.cpp:2857:8: error: ‚Äòunsafe_set_mysql_servers_table_dirty‚Äô was not declared in this scope; did you mean ‚Äòis_mysql_servers_table_dirty‚Äô?
 2857 |        unsafe_set_mysql_servers_table_dirty();
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |        is_mysql_servers_table_dirty



The configuration used for ProxySQL to reproduce the issue is not supplied. I have tried to deduce it, but I haven't been able to reproduce a similar error of the one you are experiencing. If you could supply the configuration file for ProxySQL, that would be of great help.


The issue was detected in v2.0.10, but this pull request is against v2.0.14, have you been able to reproduce the issue in v2.0.14?


The complete error log from ProxySQL and the state of servers when you detect the inconsistency you are seeing will also help to trace the problem.


Thanks.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3063,2020-09-14T14:39:53Z,,2020-12-09T12:34:38Z,OPEN,False,470,397,10,https://github.com/Gonlo2,Fix data races in the MySQL Monitor and HostGroups,11,[],https://github.com/sysown/proxysql/pull/3063,https://github.com/Gonlo2,4,https://github.com/sysown/proxysql/pull/3063#issuecomment-694344495,"This change fix some data races in the MySQL Monitor and HostGroups code along with some other minor bug fixes.
A clear description of the issue
The MySQL Monitor and HostGroups code has race conditions that can leave ProxySQL in an inconsistent state, for example removing the main node from the candidate list with no possibility of recovery until another failure is detected.
ProxySQL version
It was detected in the ProxySQL v2.0.10 build.
OS Version
16.04.1-Ubuntu
The steps to reproduce the issue
Usually it is detected a few minutes after several node failures, I have left a commit with two scripts and a docker-compose to reproduce the problem in the folder ""reproduce"", the first one generates load in a Galera cluster through sysbench and the second one restarts one of the nodes until the problem is detected (to do this the script needs that the build is a debug one to have access to the table ""myhgm.mysql_servers""). The steps to execute this are:
$ cd reproduce
$ docker-compose up # In some terminal
$ ./generate-load.sh # In other terminal
$ ./node-error.sh # In another terminal

Full ProxySQL error log
I don't have a complete log of this but I guess it's more flexible to get the log from the script to reproduce the problem, if this is not enough let me know I'll add a log.","* The pull request doesn't compile:


It seems that I have made a bad rebase of the changes, I added a commit with the changes that had been left out.

* The configuration used for ProxySQL to reproduce the issue is not supplied. I have tried to deduce it, but I haven't been able to reproduce a similar error of the one you are experiencing. If you could supply the configuration file for ProxySQL, that would be of great help.


About this, it seems that the configuration has been left out by gitignore, so I added it in another commit.

* The issue was detected in v2.0.10, but this pull request is against v2.0.14, have you been able to reproduce the issue in v2.0.14?


The version we use in production and where we detected the bug is 2.0.10, so my changes are from that version. Anyway I reproduced them some time ago in 2.0.13 and seeing the code of 2.0.14 I would say that it has the same race conditions bugs.

* The complete error log from ProxySQL and the state of servers when you detect the inconsistency you are seeing will also help to trace the problem.


I no longer have access to the logs since I detected the bug about a month ago (we had some time validating the new version in the pre-production environment). Is it worth getting the logs of the script to reproduce the changes?",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3063,2020-09-14T14:39:53Z,,2020-12-09T12:34:38Z,OPEN,False,470,397,10,https://github.com/Gonlo2,Fix data races in the MySQL Monitor and HostGroups,11,[],https://github.com/sysown/proxysql/pull/3063,https://github.com/Gonlo2,5,https://github.com/sysown/proxysql/pull/3063#issuecomment-734242234,"This change fix some data races in the MySQL Monitor and HostGroups code along with some other minor bug fixes.
A clear description of the issue
The MySQL Monitor and HostGroups code has race conditions that can leave ProxySQL in an inconsistent state, for example removing the main node from the candidate list with no possibility of recovery until another failure is detected.
ProxySQL version
It was detected in the ProxySQL v2.0.10 build.
OS Version
16.04.1-Ubuntu
The steps to reproduce the issue
Usually it is detected a few minutes after several node failures, I have left a commit with two scripts and a docker-compose to reproduce the problem in the folder ""reproduce"", the first one generates load in a Galera cluster through sysbench and the second one restarts one of the nodes until the problem is detected (to do this the script needs that the build is a debug one to have access to the table ""myhgm.mysql_servers""). The steps to execute this are:
$ cd reproduce
$ docker-compose up # In some terminal
$ ./generate-load.sh # In other terminal
$ ./node-error.sh # In another terminal

Full ProxySQL error log
I don't have a complete log of this but I guess it's more flexible to get the log from the script to reproduce the problem, if this is not enough let me know I'll add a log.",Any update about this @JavierJF ?,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3063,2020-09-14T14:39:53Z,,2020-12-09T12:34:38Z,OPEN,False,470,397,10,https://github.com/Gonlo2,Fix data races in the MySQL Monitor and HostGroups,11,[],https://github.com/sysown/proxysql/pull/3063,https://github.com/JavierJF,6,https://github.com/sysown/proxysql/pull/3063#issuecomment-735236078,"This change fix some data races in the MySQL Monitor and HostGroups code along with some other minor bug fixes.
A clear description of the issue
The MySQL Monitor and HostGroups code has race conditions that can leave ProxySQL in an inconsistent state, for example removing the main node from the candidate list with no possibility of recovery until another failure is detected.
ProxySQL version
It was detected in the ProxySQL v2.0.10 build.
OS Version
16.04.1-Ubuntu
The steps to reproduce the issue
Usually it is detected a few minutes after several node failures, I have left a commit with two scripts and a docker-compose to reproduce the problem in the folder ""reproduce"", the first one generates load in a Galera cluster through sysbench and the second one restarts one of the nodes until the problem is detected (to do this the script needs that the build is a debug one to have access to the table ""myhgm.mysql_servers""). The steps to execute this are:
$ cd reproduce
$ docker-compose up # In some terminal
$ ./generate-load.sh # In other terminal
$ ./node-error.sh # In another terminal

Full ProxySQL error log
I don't have a complete log of this but I guess it's more flexible to get the log from the script to reproduce the problem, if this is not enough let me know I'll add a log.","Hi @Gonlo2, thanks for you PR again,
I have been trying to reproduce the issue you describe with your provided scripts, I have tried with several versions of ProxySQL (including v2.0.16 and v2.0.14), for being sure I left the scripts running 45 min with each version, I haven't had any luck so far.
Secondly, this PR has too many changes in it, typically we stick to one PR, on issue, if the goal of this PR is to fix a data-race, will be much more simpler to analyze it, if only packs the absolute minimum to fix it. Also, because this is for sure a timing issue, and looks like maybe wont be easy to reproduce in our side, If you are sure that the data-race you are experiencing is solved with this PR, could you please describe more deeply which one do you think are the causes of it?, i.e:

Conditions that triggers it.
Section of the code involved in it.

This way, if we understand the exact issue that you are describing, we can also come with a way of reproducing it. Thanks you!",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3063,2020-09-14T14:39:53Z,,2020-12-09T12:34:38Z,OPEN,False,470,397,10,https://github.com/Gonlo2,Fix data races in the MySQL Monitor and HostGroups,11,[],https://github.com/sysown/proxysql/pull/3063,https://github.com/Gonlo2,7,https://github.com/sysown/proxysql/pull/3063#issuecomment-741742859,"This change fix some data races in the MySQL Monitor and HostGroups code along with some other minor bug fixes.
A clear description of the issue
The MySQL Monitor and HostGroups code has race conditions that can leave ProxySQL in an inconsistent state, for example removing the main node from the candidate list with no possibility of recovery until another failure is detected.
ProxySQL version
It was detected in the ProxySQL v2.0.10 build.
OS Version
16.04.1-Ubuntu
The steps to reproduce the issue
Usually it is detected a few minutes after several node failures, I have left a commit with two scripts and a docker-compose to reproduce the problem in the folder ""reproduce"", the first one generates load in a Galera cluster through sysbench and the second one restarts one of the nodes until the problem is detected (to do this the script needs that the build is a debug one to have access to the table ""myhgm.mysql_servers""). The steps to execute this are:
$ cd reproduce
$ docker-compose up # In some terminal
$ ./generate-load.sh # In other terminal
$ ./node-error.sh # In another terminal

Full ProxySQL error log
I don't have a complete log of this but I guess it's more flexible to get the log from the script to reproduce the problem, if this is not enough let me know I'll add a log.","Hi, about the PR we were having several problems using ProxySQL with Galera because it didn't correctly use the priority of the nodes after a fail-over, so after investigating it I narrowed down the problem to race conditions and after reviewing the code I discovered several problems in the code corresponding to the monitoring.
Regarding the code involved I would say that is all that appears in the review and I don't think it's easy to divide even more the review with the time I have available, basically the problems that I found are:

The hostgroups manager code is not atomic since the state may change while a check is running, an example could be the call to the commit function, which acquires a mutex, and the subsequent acquisition of the same again without taking into account that the state may have changed in the meantime. To solve this, I added a commit_locked function and the mutex is acquired during all the check code.
The ProxySQL admin code update and delete several sqlite results without obtaining a mutex so other threads may continue using a nonexistent structure in the meantime. To solve this I change it to obtain the mutex during the process and also I used the commit_locked function.
In some places the administration DB is consulted in the monitoring code instead the internal one, which is incorrect and by not using mutexes it has race conditions. To solve it I changed it with the internal one.
The code used to decide if it is necessary to update the servers does not take into account if the server is offline since it has to continue maintaining the internal DB row until it has no more connections because the only place where the pointer to it is stored is the internal DB. To solve this, I added a special list with all the servers that are offline and a variable to indicate if the mysql_servers table is dirty and it is necessary to reconstruct it.

I understand it's a big review but I think it's necessary to avoid headaches in general and especially for people who use Galera. If you have any questions, please do not hesitate to contact me.
As a note, since we started using this patch in production a couple of months ago we haven't had any more problems with fail-over in production although, unfortunately, I don't have the resources to review in depth the changes that are not Galera related.",True,"{'HEART': ['https://github.com/lots0logs'], 'ROCKET': ['https://github.com/lots0logs']}"
sysown/proxysql,https://github.com/sysown/proxysql,3067,2020-09-16T13:17:25Z,2020-09-16T13:51:46Z,2020-10-30T16:09:21Z,MERGED,True,84,53,17,https://github.com/renecannao,V2.1.0 from2014 3,13,[],https://github.com/sysown/proxysql/pull/3067,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3067,More ports from 2.0 to 2.1,More ports from 2.0 to 2.1,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3070,2020-09-18T16:37:00Z,2020-09-18T17:54:28Z,2020-09-18T17:54:28Z,MERGED,True,72,7,6,https://github.com/renecannao,Implementation of max_transaction_idle_time,1,[],https://github.com/sysown/proxysql/pull/3070,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3070,"Former max_transaction_time is now renamed to max_transaction_idle_time.
mysql-max_transaction_idle_time defines the maximum time a transaction can stay idle.
mysql-max_transaction_time defines the maximum time of a transaction since its start.","Former max_transaction_time is now renamed to max_transaction_idle_time.
mysql-max_transaction_idle_time defines the maximum time a transaction can stay idle.
mysql-max_transaction_time defines the maximum time of a transaction since its start.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3071,2020-09-18T16:37:51Z,2020-09-18T17:54:15Z,2020-10-30T16:09:20Z,MERGED,True,72,6,5,https://github.com/renecannao,Implementation of max_transaction_idle_time,1,[],https://github.com/sysown/proxysql/pull/3071,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3071,"Former max_transaction_time is now renamed to max_transaction_idle_time.
mysql-max_transaction_idle_time defines the maximum time a transaction can stay idle.
mysql-max_transaction_time defines the maximum time of a transaction since its start.","Former max_transaction_time is now renamed to max_transaction_idle_time.
mysql-max_transaction_idle_time defines the maximum time a transaction can stay idle.
mysql-max_transaction_time defines the maximum time of a transaction since its start.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3072,2020-09-20T21:12:49Z,2020-09-21T15:44:37Z,2020-10-30T16:09:19Z,MERGED,True,1931,135,9,https://github.com/renecannao,V2.1.0 3000,5,[],https://github.com/sysown/proxysql/pull/3072,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3072,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3074,2020-09-21T20:31:24Z,2020-09-25T12:39:50Z,2020-09-25T12:39:50Z,MERGED,True,14,6,3,https://github.com/calh,Port diamond collector to RedHat 8,1,[],https://github.com/sysown/proxysql/pull/3074,https://github.com/calh,1,https://github.com/sysown/proxysql/pull/3074,This is just a quick port for the diamond collector to work in RedHat / CentOS 8.  I just thought I'd offer this up if anyone else was interested in this.,This is just a quick port for the diamond collector to work in RedHat / CentOS 8.  I just thought I'd offer this up if anyone else was interested in this.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3074,2020-09-21T20:31:24Z,2020-09-25T12:39:50Z,2020-09-25T12:39:50Z,MERGED,True,14,6,3,https://github.com/calh,Port diamond collector to RedHat 8,1,[],https://github.com/sysown/proxysql/pull/3074,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/3074#issuecomment-696357839,This is just a quick port for the diamond collector to work in RedHat / CentOS 8.  I just thought I'd offer this up if anyone else was interested in this.,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3074,2020-09-21T20:31:24Z,2020-09-25T12:39:50Z,2020-09-25T12:39:50Z,MERGED,True,14,6,3,https://github.com/calh,Port diamond collector to RedHat 8,1,[],https://github.com/sysown/proxysql/pull/3074,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3074#issuecomment-698904941,This is just a quick port for the diamond collector to work in RedHat / CentOS 8.  I just thought I'd offer this up if anyone else was interested in this.,Thank you for the PR,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3084,2020-09-25T12:38:09Z,2020-09-26T17:45:41Z,2020-09-26T17:45:41Z,MERGED,True,21,6,2,https://github.com/renecannao,V2.0.15 sslbug,2,[],https://github.com/sysown/proxysql/pull/3084,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3084,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3086,2020-09-28T11:14:59Z,2020-10-23T09:16:24Z,2020-10-30T16:09:25Z,MERGED,True,60,22,5,https://github.com/renecannao,Added new column 'attributes' to 'mysql_users' table,8,[],https://github.com/sysown/proxysql/pull/3086,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3086,,,True,{'HEART': ['https://github.com/yakirgb']}
sysown/proxysql,https://github.com/sysown/proxysql,3086,2020-09-28T11:14:59Z,2020-10-23T09:16:24Z,2020-10-30T16:09:25Z,MERGED,True,60,22,5,https://github.com/renecannao,Added new column 'attributes' to 'mysql_users' table,8,[],https://github.com/sysown/proxysql/pull/3086,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3086#issuecomment-699943413,,ProxySQL_Config::Write_MySQL_Users_to_configfile() needs to be modified too,True,{'THUMBS_UP': ['https://github.com/JavierJF']}
sysown/proxysql,https://github.com/sysown/proxysql,3086,2020-09-28T11:14:59Z,2020-10-23T09:16:24Z,2020-10-30T16:09:25Z,MERGED,True,60,22,5,https://github.com/renecannao,Added new column 'attributes' to 'mysql_users' table,8,[],https://github.com/sysown/proxysql/pull/3086,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3086#issuecomment-707387611,,"@JavierJF : still WIP ? It looks good to me.
What is missing?",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3086,2020-09-28T11:14:59Z,2020-10-23T09:16:24Z,2020-10-30T16:09:25Z,MERGED,True,60,22,5,https://github.com/renecannao,Added new column 'attributes' to 'mysql_users' table,8,[],https://github.com/sysown/proxysql/pull/3086,https://github.com/JavierJF,4,https://github.com/sysown/proxysql/pull/3086#issuecomment-707796080,,@renecannao I would say this is ready.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3087,2020-09-28T19:15:57Z,2020-09-28T20:39:37Z,2020-10-30T16:09:17Z,MERGED,True,23,0,2,https://github.com/JavierJF,"Added new admin variable 'admin__web_verbosity""",2,[],https://github.com/sysown/proxysql/pull/3087,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3087,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3096,2020-10-06T12:43:59Z,2020-10-08T09:28:17Z,2020-10-08T09:30:19Z,MERGED,True,1,1,1,https://github.com/mcrauwel,fix for #3095,1,[],https://github.com/sysown/proxysql/pull/3096,https://github.com/mcrauwel,1,https://github.com/sysown/proxysql/pull/3096,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3096,2020-10-06T12:43:59Z,2020-10-08T09:28:17Z,2020-10-08T09:30:19Z,MERGED,True,1,1,1,https://github.com/mcrauwel,fix for #3095,1,[],https://github.com/sysown/proxysql/pull/3096,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/3096#issuecomment-704242925,,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3096,2020-10-06T12:43:59Z,2020-10-08T09:28:17Z,2020-10-08T09:30:19Z,MERGED,True,1,1,1,https://github.com/mcrauwel,fix for #3095,1,[],https://github.com/sysown/proxysql/pull/3096,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/3096#issuecomment-705449215,,Thank you!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3099,2020-10-08T09:56:23Z,2020-10-12T23:01:33Z,2020-10-30T16:09:16Z,MERGED,True,639,369,8,https://github.com/JavierJF,Closes #3090: Change 'prometheus' metrics names to better follow official naming conventions,6,[],https://github.com/sysown/proxysql/pull/3099,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3099,"It also includes:

Additional help messages for metrics.
Fixing of invalid metric previously classify as ""counter"".","It also includes:

Additional help messages for metrics.
Fixing of invalid metric previously classify as ""counter"".",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3100,2020-10-08T10:09:47Z,2020-10-23T09:17:02Z,2020-10-30T16:09:13Z,MERGED,True,69,22,5,https://github.com/JavierJF,Closes #3088: Added new json 'attributes' column to 'mysql_query_rules' table,4,[],https://github.com/sysown/proxysql/pull/3100,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3100,Closes #3088.,Closes #3088.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3100,2020-10-08T10:09:47Z,2020-10-23T09:17:02Z,2020-10-30T16:09:13Z,MERGED,True,69,22,5,https://github.com/JavierJF,Closes #3088: Added new json 'attributes' column to 'mysql_query_rules' table,4,[],https://github.com/sysown/proxysql/pull/3100,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3100#issuecomment-707386073,Closes #3088.,"I think we need to ensure that ProxySQL_Config::addField() is escaping strings with have double quotes (that can happens with JSON attributes and comments .
This issue is not specific to this commit, but we should ensure this before merging this PR",True,{'THUMBS_UP': ['https://github.com/JavierJF']}
sysown/proxysql,https://github.com/sysown/proxysql,3103,2020-10-10T19:39:27Z,,2020-10-15T19:59:51Z,OPEN,False,14,4,4,https://github.com/richard-pounder-ck,Fix #3103 miss handling of session reset and sessions list,3,[],https://github.com/sysown/proxysql/pull/3103,https://github.com/richard-pounder-ck,1,https://github.com/sysown/proxysql/pull/3103,"Taking a look at #2460 if mybes and mybe are truly both null you would expect there to be a path where they are assigned to this state. I could not find one apart from when a session is being destroyed.
Turns out that since create_new_session_and_reset_connection assumes that the session at the end of the list is the one it created after running the handler you can end up removing the wrong session from the list and then delete the session still in the list.
This was cased by return_MySQL_Connection_To_Pool calling create_new_session_and_reset_connection if the connection has reached max statements or age while resetting.
Checking if the session is currently resetting the connection stops the loop but it seemed like a good idea to also store the index of the session before running the handler so that future additions/refactors don't cause the session list to get into a bad state.","Taking a look at #2460 if mybes and mybe are truly both null you would expect there to be a path where they are assigned to this state. I could not find one apart from when a session is being destroyed.
Turns out that since create_new_session_and_reset_connection assumes that the session at the end of the list is the one it created after running the handler you can end up removing the wrong session from the list and then delete the session still in the list.
This was cased by return_MySQL_Connection_To_Pool calling create_new_session_and_reset_connection if the connection has reached max statements or age while resetting.
Checking if the session is currently resetting the connection stops the loop but it seemed like a good idea to also store the index of the session before running the handler so that future additions/refactors don't cause the session list to get into a bad state.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3103,2020-10-10T19:39:27Z,,2020-10-15T19:59:51Z,OPEN,False,14,4,4,https://github.com/richard-pounder-ck,Fix #3103 miss handling of session reset and sessions list,3,[],https://github.com/sysown/proxysql/pull/3103,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/3103#issuecomment-706601134,"Taking a look at #2460 if mybes and mybe are truly both null you would expect there to be a path where they are assigned to this state. I could not find one apart from when a session is being destroyed.
Turns out that since create_new_session_and_reset_connection assumes that the session at the end of the list is the one it created after running the handler you can end up removing the wrong session from the list and then delete the session still in the list.
This was cased by return_MySQL_Connection_To_Pool calling create_new_session_and_reset_connection if the connection has reached max statements or age while resetting.
Checking if the session is currently resetting the connection stops the loop but it seemed like a good idea to also store the index of the session before running the handler so that future additions/refactors don't cause the session list to get into a bad state.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3103,2020-10-10T19:39:27Z,,2020-10-15T19:59:51Z,OPEN,False,14,4,4,https://github.com/richard-pounder-ck,Fix #3103 miss handling of session reset and sessions list,3,[],https://github.com/sysown/proxysql/pull/3103,https://github.com/richard-pounder-ck,3,https://github.com/sysown/proxysql/pull/3103#issuecomment-706640453,"Taking a look at #2460 if mybes and mybe are truly both null you would expect there to be a path where they are assigned to this state. I could not find one apart from when a session is being destroyed.
Turns out that since create_new_session_and_reset_connection assumes that the session at the end of the list is the one it created after running the handler you can end up removing the wrong session from the list and then delete the session still in the list.
This was cased by return_MySQL_Connection_To_Pool calling create_new_session_and_reset_connection if the connection has reached max statements or age while resetting.
Checking if the session is currently resetting the connection stops the loop but it seemed like a good idea to also store the index of the session before running the handler so that future additions/refactors don't cause the session list to get into a bad state.",Thinking about this more the unregister_session is still not really as robust as it should be. Will update this pr to add extra checks that the session is the correct one being removed.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3103,2020-10-10T19:39:27Z,,2020-10-15T19:59:51Z,OPEN,False,14,4,4,https://github.com/richard-pounder-ck,Fix #3103 miss handling of session reset and sessions list,3,[],https://github.com/sysown/proxysql/pull/3103,https://github.com/bskllzh,4,https://github.com/sysown/proxysql/pull/3103#issuecomment-706680221,"Taking a look at #2460 if mybes and mybe are truly both null you would expect there to be a path where they are assigned to this state. I could not find one apart from when a session is being destroyed.
Turns out that since create_new_session_and_reset_connection assumes that the session at the end of the list is the one it created after running the handler you can end up removing the wrong session from the list and then delete the session still in the list.
This was cased by return_MySQL_Connection_To_Pool calling create_new_session_and_reset_connection if the connection has reached max statements or age while resetting.
Checking if the session is currently resetting the connection stops the loop but it seemed like a good idea to also store the index of the session before running the handler so that future additions/refactors don't cause the session list to get into a bad state.","@richard-pounder-ck .  About  this unregister_session(int idx) function of MySQL_Thread.cpp file, the main function is to clear the last one every time when it is executed. But this is inappropriate in a multi-threaded environment. Because this can easily cause the wrong session to be deleted.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3103,2020-10-10T19:39:27Z,,2020-10-15T19:59:51Z,OPEN,False,14,4,4,https://github.com/richard-pounder-ck,Fix #3103 miss handling of session reset and sessions list,3,[],https://github.com/sysown/proxysql/pull/3103,https://github.com/richard-pounder-ck,5,https://github.com/sysown/proxysql/pull/3103#issuecomment-706724398,"Taking a look at #2460 if mybes and mybe are truly both null you would expect there to be a path where they are assigned to this state. I could not find one apart from when a session is being destroyed.
Turns out that since create_new_session_and_reset_connection assumes that the session at the end of the list is the one it created after running the handler you can end up removing the wrong session from the list and then delete the session still in the list.
This was cased by return_MySQL_Connection_To_Pool calling create_new_session_and_reset_connection if the connection has reached max statements or age while resetting.
Checking if the session is currently resetting the connection stops the loop but it seemed like a good idea to also store the index of the session before running the handler so that future additions/refactors don't cause the session list to get into a bad state.","@bskllzh If I understood the proxysql design correctly the intention is that normally this is not altered by any thread other than the thread represented by MySQL_Thread. So think of the list of sessions being owned by a single thread. In this case the main issue wasn't multithreaded access but the same thread adding another session to the list and assuming that the one at the end was still the right session.
The change to the unregister code removes this unexpected addition but I don't like the idea of assuming that the right session is being removed by an index. For now I have pushed up a change that verifies it is removing the same session it added.
On the multithreaded access front the only area I spotted (but have not investigated) that might have an impact here is killing sessions from the admin interface but this is out of scope of this PR.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3103,2020-10-10T19:39:27Z,,2020-10-15T19:59:51Z,OPEN,False,14,4,4,https://github.com/richard-pounder-ck,Fix #3103 miss handling of session reset and sessions list,3,[],https://github.com/sysown/proxysql/pull/3103,https://github.com/renecannao,6,https://github.com/sysown/proxysql/pull/3103#issuecomment-707387929,"Taking a look at #2460 if mybes and mybe are truly both null you would expect there to be a path where they are assigned to this state. I could not find one apart from when a session is being destroyed.
Turns out that since create_new_session_and_reset_connection assumes that the session at the end of the list is the one it created after running the handler you can end up removing the wrong session from the list and then delete the session still in the list.
This was cased by return_MySQL_Connection_To_Pool calling create_new_session_and_reset_connection if the connection has reached max statements or age while resetting.
Checking if the session is currently resetting the connection stops the loop but it seemed like a good idea to also store the index of the session before running the handler so that future additions/refactors don't cause the session list to get into a bad state.",add to whitelist,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3105,2020-10-12T19:09:12Z,2020-10-12T22:50:30Z,2020-10-30T16:09:14Z,MERGED,True,12,1,1,https://github.com/JavierJF,Closes #3104: Added new shutdown phase 'UnloadPlugins' to fix GloWebInterface deinitialization,1,[],https://github.com/sysown/proxysql/pull/3105,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3105,Closes #3104 .,Closes #3104 .,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3110,2020-10-20T21:54:26Z,2020-10-29T16:37:14Z,2020-10-30T16:09:30Z,MERGED,True,2831,1038,5,https://github.com/renecannao,Splitting MySQL_Session::handler(),10,[],https://github.com/sysown/proxysql/pull/3110,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3110,"To make it easier to read, MySQL_Session::handler() was split into multiple functions","To make it easier to read, MySQL_Session::handler() was split into multiple functions",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3111,2020-10-22T12:44:29Z,2020-10-22T12:44:54Z,2020-10-22T12:44:54Z,MERGED,True,1846,6,4,https://github.com/pondix,V2.0.15 arm64,3,[],https://github.com/sysown/proxysql/pull/3111,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/3111,Adds arm64 package build & test scripts,Adds arm64 package build & test scripts,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3113,2020-10-23T11:29:08Z,2020-10-29T16:36:51Z,2020-10-30T16:09:33Z,MERGED,True,35,0,1,https://github.com/JavierJF,Closes #3112: Connection pool gauge metrics should only reflect current servers,1,[],https://github.com/sysown/proxysql/pull/3113,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3113,Closes #3112.,Closes #3112.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3116,2020-10-23T16:17:25Z,2020-10-23T16:17:37Z,2020-10-23T16:17:37Z,MERGED,True,41,9,7,https://github.com/pondix,Fixes arm64 packaging for Debian family,2,[],https://github.com/sysown/proxysql/pull/3116,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/3116,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3117,2020-10-23T19:10:55Z,2020-10-29T16:36:25Z,2020-10-30T16:09:31Z,MERGED,True,21,5,2,https://github.com/JavierJF,Closes #3115: Fix removal of spaces before closing parenthesis for query digests,3,[],https://github.com/sysown/proxysql/pull/3117,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3117,Closes #3115.,Closes #3115.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3120,2020-10-26T19:23:44Z,2020-10-26T19:23:52Z,2020-10-26T19:23:56Z,MERGED,True,1,1,1,https://github.com/pondix,Remove comment on CentOS 8 cleanup #2724,1,[],https://github.com/sysown/proxysql/pull/3120,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/3120,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3123,2020-10-28T14:48:34Z,2020-11-02T00:06:54Z,2021-06-04T08:24:02Z,MERGED,True,1223,54,13,https://github.com/JavierJF,Closes #2684: Add support for CLIENT_DEPRECATE_EOF,14,[],https://github.com/sysown/proxysql/pull/3123,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3123,"Closes #2684.
This PR is a follow up on previous work done on branch v2.0.12-deprecate_eof. Finalizing support for CLIENT_DEPRECATE_EOF.","Closes #2684.
This PR is a follow up on previous work done on branch v2.0.12-deprecate_eof. Finalizing support for CLIENT_DEPRECATE_EOF.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3123,2020-10-28T14:48:34Z,2020-11-02T00:06:54Z,2021-06-04T08:24:02Z,MERGED,True,1223,54,13,https://github.com/JavierJF,Closes #2684: Add support for CLIENT_DEPRECATE_EOF,14,[],https://github.com/sysown/proxysql/pull/3123,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3123#issuecomment-719079169,"Closes #2684.
This PR is a follow up on previous work done on branch v2.0.12-deprecate_eof. Finalizing support for CLIENT_DEPRECATE_EOF.",Retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3123,2020-10-28T14:48:34Z,2020-11-02T00:06:54Z,2021-06-04T08:24:02Z,MERGED,True,1223,54,13,https://github.com/JavierJF,Closes #2684: Add support for CLIENT_DEPRECATE_EOF,14,[],https://github.com/sysown/proxysql/pull/3123,https://github.com/JavierJF,3,https://github.com/sysown/proxysql/pull/3123#issuecomment-719097734,"Closes #2684.
This PR is a follow up on previous work done on branch v2.0.12-deprecate_eof. Finalizing support for CLIENT_DEPRECATE_EOF.",Retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3123,2020-10-28T14:48:34Z,2020-11-02T00:06:54Z,2021-06-04T08:24:02Z,MERGED,True,1223,54,13,https://github.com/JavierJF,Closes #2684: Add support for CLIENT_DEPRECATE_EOF,14,[],https://github.com/sysown/proxysql/pull/3123,https://github.com/JavierJF,4,https://github.com/sysown/proxysql/pull/3123#issuecomment-719335887,"Closes #2684.
This PR is a follow up on previous work done on branch v2.0.12-deprecate_eof. Finalizing support for CLIENT_DEPRECATE_EOF.",Retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3124,2020-10-28T19:42:47Z,2020-10-28T19:42:56Z,2020-10-28T19:42:56Z,MERGED,True,34,16,6,https://github.com/pondix,Fixes amd64 packaging after arm changes,1,[],https://github.com/sysown/proxysql/pull/3124,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/3124,"Adds a missing variable required for amd64 builds, simplifies entrypoint code.","Adds a missing variable required for amd64 builds, simplifies entrypoint code.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3126,2020-10-30T12:03:02Z,2020-10-30T16:30:47Z,2020-10-30T16:30:55Z,MERGED,True,46,13,5,https://github.com/JavierJF,Closes #3125: Renamed 'interval_ms' from 'restapi_routes' table into 'timeout_ms',1,[],https://github.com/sysown/proxysql/pull/3126,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3126,Closes #3125.,Closes #3125.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3128,2020-10-30T12:31:08Z,2020-11-02T00:07:11Z,2021-06-04T08:24:03Z,MERGED,True,2,0,1,https://github.com/JavierJF,Closes #3127: Port missing commits from v2.0.15 into v2.1.0,1,[],https://github.com/sysown/proxysql/pull/3128,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3128,Closes #3127.,Closes #3127.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3128,2020-10-30T12:31:08Z,2020-11-02T00:07:11Z,2021-06-04T08:24:03Z,MERGED,True,2,0,1,https://github.com/JavierJF,Closes #3127: Port missing commits from v2.0.15 into v2.1.0,1,[],https://github.com/sysown/proxysql/pull/3128,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3128#issuecomment-719651389,Closes #3127.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3130,2020-10-30T16:08:11Z,2020-10-30T16:27:57Z,2020-10-30T16:28:08Z,CLOSED,False,1,1,1,https://github.com/apps/dependabot,Bump jinja2 from 2.8 to 2.10.1,1,['dependencies'],https://github.com/sysown/proxysql/pull/3130,https://github.com/apps/dependabot,1,https://github.com/sysown/proxysql/pull/3130,"Bumps jinja2 from 2.8 to 2.10.1.

Release notes
Sourced from jinja2's releases.

2.10.1

Changes: https://jinja.palletsprojects.com/en/2.10.x/changelog/#version-2-10-1
Blog: https://palletsprojects.com/blog/jinja-2-10-1-released/
Twitter: https://twitter.com/PalletsTeam/status/1114605127308992513

2.10
Primary changes

A NativeEnvironment that renders Python types instead of strings.
http://jinja.pocoo.org/docs/2.10/nativetypes/
A namespace object that works with {% set %}. This replaces
previous hacks for storing state across iterations or scopes.
http://jinja.pocoo.org/docs/2.10/templates/#assignments
The loop object now has nextitem and previtem attributes, as
well as a changed method, for the common case of outputting
something as a value in the loop changes. More complicated cases can
use the namespace object.
http://jinja.pocoo.org/docs/2.10/templates/#for

Install or upgrade
Install from PyPI with pip:
pip install -U Jinja2

Changelog

Added a new extension node called OverlayScope which can be used to create an unoptimized scope that will look up all variables from a derived context.
Added an in test that works like the in operator.  This can be used in combination with reject and select.
Added previtem and nextitem to loop contexts, providing access to the previous/next item in the loop. If such an item does not exist, the value is undefined.
Added changed(*values) to loop contexts, providing an easy way of checking whether a value has changed since the last iteration (or rather since the last call of the method)
Added a namespace function that creates a special object which allows attribute assignment using the set tag.  This can be used to carry data across scopes, e.g. from a loop body to code that comes after the loop.
Added a trimmed modifier to {% trans %} to strip linebreaks and surrounding whitespace. Also added a new policy to enable this for all trans blocks.
The random filter is no longer incorrectly constant folded and will produce a new random choice each time the template is rendered. (#478)
Added a unique filter. (#469)
Added min and max filters. (#475)
Added tests for all comparison operators: eq, ne, lt, le, gt, ge. (#665)
import statement cannot end with a trailing comma. (#617, #618)
indent filter will not indent blank lines by default. (#685)
Add reverse argument for dictsort filter. (#692)
Add a NativeEnvironment that renders templates to native Python types instead of strings. (#708)
Added filter support to the block set tag. (#489)
tojson filter marks output as safe to match documented behavior. (#718)
Resolved a bug where getting debug locals for tracebacks could modify template context.
Fixed a bug where having many {% elif ... %} blocks resulted in a ""too many levels of indentation"" error.  These blocks now compile to native elif ..: instead of else: if ..: (#759)




Changelog
Sourced from jinja2's changelog.

Version 2.10.1
Released 2019-04-06

SandboxedEnvironment securely handles str.format_map in
order to prevent code execution through untrusted format strings.
The sandbox already handled str.format.

Version 2.10
Released 2017-11-08

Added a new extension node called OverlayScope which can be used
to create an unoptimized scope that will look up all variables from
a derived context.
Added an in test that works like the in operator. This can be
used in combination with reject and select.
Added previtem and nextitem to loop contexts, providing
access to the previous/next item in the loop. If such an item does
not exist, the value is undefined.
Added changed(*values) to loop contexts, providing an easy way
of checking whether a value has changed since the last iteration (or
rather since the last call of the method)
Added a namespace function that creates a special object which
allows attribute assignment using the set tag. This can be used
to carry data across scopes, e.g. from a loop body to code that
comes after the loop.
Added a trimmed modifier to {% trans %} to strip linebreaks
and surrounding whitespace. Also added a new policy to enable this
for all trans blocks.
The random filter is no longer incorrectly constant folded and
will produce a new random choice each time the template is rendered.
:pr:478
Added a unique filter. :pr:469
Added min and max filters. :pr:475
Added tests for all comparison operators: eq, ne, lt,
le, gt, ge. :pr:665
import statement cannot end with a trailing comma. :pr:617,
:pr:618
indent filter will not indent blank lines by default. :pr:685
Add reverse argument for dictsort filter. :pr:692
Add a NativeEnvironment that renders templates to native Python
types instead of strings. :pr:708
Added filter support to the block set tag. :pr:489
tojson filter marks output as safe to match documented behavior.
:pr:718
Resolved a bug where getting debug locals for tracebacks could



... (truncated)


Commits

c4c4088 release 2.10.1
a2a6c93 sandbox str.format_map
78d2f67 Bump version number to 2.10
d9d3fc3 clean up MANIFEST.in
072cdf9 Support filters in set block
d17c7db Merge pull request #708 from jctanner/NATIVE_TYPES
6a7a263 Merge branch 'master' into NATIVE_TYPES
31f92b5 Fix typo in docstring (#779)
c314761 codecov needs argparse on 2.6
4750cf7 Minor docstring grammar fix (#772)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
@dependabot use these labels will set the current labels as the default for future PRs for this repo and language
@dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language
@dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language
@dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the Security Alerts page.","Bumps jinja2 from 2.8 to 2.10.1.

Release notes
Sourced from jinja2's releases.

2.10.1

Changes: https://jinja.palletsprojects.com/en/2.10.x/changelog/#version-2-10-1
Blog: https://palletsprojects.com/blog/jinja-2-10-1-released/
Twitter: https://twitter.com/PalletsTeam/status/1114605127308992513

2.10
Primary changes

A NativeEnvironment that renders Python types instead of strings.
http://jinja.pocoo.org/docs/2.10/nativetypes/
A namespace object that works with {% set %}. This replaces
previous hacks for storing state across iterations or scopes.
http://jinja.pocoo.org/docs/2.10/templates/#assignments
The loop object now has nextitem and previtem attributes, as
well as a changed method, for the common case of outputting
something as a value in the loop changes. More complicated cases can
use the namespace object.
http://jinja.pocoo.org/docs/2.10/templates/#for

Install or upgrade
Install from PyPI with pip:
pip install -U Jinja2

Changelog

Added a new extension node called OverlayScope which can be used to create an unoptimized scope that will look up all variables from a derived context.
Added an in test that works like the in operator.  This can be used in combination with reject and select.
Added previtem and nextitem to loop contexts, providing access to the previous/next item in the loop. If such an item does not exist, the value is undefined.
Added changed(*values) to loop contexts, providing an easy way of checking whether a value has changed since the last iteration (or rather since the last call of the method)
Added a namespace function that creates a special object which allows attribute assignment using the set tag.  This can be used to carry data across scopes, e.g. from a loop body to code that comes after the loop.
Added a trimmed modifier to {% trans %} to strip linebreaks and surrounding whitespace. Also added a new policy to enable this for all trans blocks.
The random filter is no longer incorrectly constant folded and will produce a new random choice each time the template is rendered. (#478)
Added a unique filter. (#469)
Added min and max filters. (#475)
Added tests for all comparison operators: eq, ne, lt, le, gt, ge. (#665)
import statement cannot end with a trailing comma. (#617, #618)
indent filter will not indent blank lines by default. (#685)
Add reverse argument for dictsort filter. (#692)
Add a NativeEnvironment that renders templates to native Python types instead of strings. (#708)
Added filter support to the block set tag. (#489)
tojson filter marks output as safe to match documented behavior. (#718)
Resolved a bug where getting debug locals for tracebacks could modify template context.
Fixed a bug where having many {% elif ... %} blocks resulted in a ""too many levels of indentation"" error.  These blocks now compile to native elif ..: instead of else: if ..: (#759)




Changelog
Sourced from jinja2's changelog.

Version 2.10.1
Released 2019-04-06

SandboxedEnvironment securely handles str.format_map in
order to prevent code execution through untrusted format strings.
The sandbox already handled str.format.

Version 2.10
Released 2017-11-08

Added a new extension node called OverlayScope which can be used
to create an unoptimized scope that will look up all variables from
a derived context.
Added an in test that works like the in operator. This can be
used in combination with reject and select.
Added previtem and nextitem to loop contexts, providing
access to the previous/next item in the loop. If such an item does
not exist, the value is undefined.
Added changed(*values) to loop contexts, providing an easy way
of checking whether a value has changed since the last iteration (or
rather since the last call of the method)
Added a namespace function that creates a special object which
allows attribute assignment using the set tag. This can be used
to carry data across scopes, e.g. from a loop body to code that
comes after the loop.
Added a trimmed modifier to {% trans %} to strip linebreaks
and surrounding whitespace. Also added a new policy to enable this
for all trans blocks.
The random filter is no longer incorrectly constant folded and
will produce a new random choice each time the template is rendered.
:pr:478
Added a unique filter. :pr:469
Added min and max filters. :pr:475
Added tests for all comparison operators: eq, ne, lt,
le, gt, ge. :pr:665
import statement cannot end with a trailing comma. :pr:617,
:pr:618
indent filter will not indent blank lines by default. :pr:685
Add reverse argument for dictsort filter. :pr:692
Add a NativeEnvironment that renders templates to native Python
types instead of strings. :pr:708
Added filter support to the block set tag. :pr:489
tojson filter marks output as safe to match documented behavior.
:pr:718
Resolved a bug where getting debug locals for tracebacks could



... (truncated)


Commits

c4c4088 release 2.10.1
a2a6c93 sandbox str.format_map
78d2f67 Bump version number to 2.10
d9d3fc3 clean up MANIFEST.in
072cdf9 Support filters in set block
d17c7db Merge pull request #708 from jctanner/NATIVE_TYPES
6a7a263 Merge branch 'master' into NATIVE_TYPES
31f92b5 Fix typo in docstring (#779)
c314761 codecov needs argparse on 2.6
4750cf7 Minor docstring grammar fix (#772)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
@dependabot use these labels will set the current labels as the default for future PRs for this repo and language
@dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language
@dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language
@dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the Security Alerts page.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3130,2020-10-30T16:08:11Z,2020-10-30T16:27:57Z,2020-10-30T16:28:08Z,CLOSED,False,1,1,1,https://github.com/apps/dependabot,Bump jinja2 from 2.8 to 2.10.1,1,['dependencies'],https://github.com/sysown/proxysql/pull/3130,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/3130#issuecomment-719645367,"Bumps jinja2 from 2.8 to 2.10.1.

Release notes
Sourced from jinja2's releases.

2.10.1

Changes: https://jinja.palletsprojects.com/en/2.10.x/changelog/#version-2-10-1
Blog: https://palletsprojects.com/blog/jinja-2-10-1-released/
Twitter: https://twitter.com/PalletsTeam/status/1114605127308992513

2.10
Primary changes

A NativeEnvironment that renders Python types instead of strings.
http://jinja.pocoo.org/docs/2.10/nativetypes/
A namespace object that works with {% set %}. This replaces
previous hacks for storing state across iterations or scopes.
http://jinja.pocoo.org/docs/2.10/templates/#assignments
The loop object now has nextitem and previtem attributes, as
well as a changed method, for the common case of outputting
something as a value in the loop changes. More complicated cases can
use the namespace object.
http://jinja.pocoo.org/docs/2.10/templates/#for

Install or upgrade
Install from PyPI with pip:
pip install -U Jinja2

Changelog

Added a new extension node called OverlayScope which can be used to create an unoptimized scope that will look up all variables from a derived context.
Added an in test that works like the in operator.  This can be used in combination with reject and select.
Added previtem and nextitem to loop contexts, providing access to the previous/next item in the loop. If such an item does not exist, the value is undefined.
Added changed(*values) to loop contexts, providing an easy way of checking whether a value has changed since the last iteration (or rather since the last call of the method)
Added a namespace function that creates a special object which allows attribute assignment using the set tag.  This can be used to carry data across scopes, e.g. from a loop body to code that comes after the loop.
Added a trimmed modifier to {% trans %} to strip linebreaks and surrounding whitespace. Also added a new policy to enable this for all trans blocks.
The random filter is no longer incorrectly constant folded and will produce a new random choice each time the template is rendered. (#478)
Added a unique filter. (#469)
Added min and max filters. (#475)
Added tests for all comparison operators: eq, ne, lt, le, gt, ge. (#665)
import statement cannot end with a trailing comma. (#617, #618)
indent filter will not indent blank lines by default. (#685)
Add reverse argument for dictsort filter. (#692)
Add a NativeEnvironment that renders templates to native Python types instead of strings. (#708)
Added filter support to the block set tag. (#489)
tojson filter marks output as safe to match documented behavior. (#718)
Resolved a bug where getting debug locals for tracebacks could modify template context.
Fixed a bug where having many {% elif ... %} blocks resulted in a ""too many levels of indentation"" error.  These blocks now compile to native elif ..: instead of else: if ..: (#759)




Changelog
Sourced from jinja2's changelog.

Version 2.10.1
Released 2019-04-06

SandboxedEnvironment securely handles str.format_map in
order to prevent code execution through untrusted format strings.
The sandbox already handled str.format.

Version 2.10
Released 2017-11-08

Added a new extension node called OverlayScope which can be used
to create an unoptimized scope that will look up all variables from
a derived context.
Added an in test that works like the in operator. This can be
used in combination with reject and select.
Added previtem and nextitem to loop contexts, providing
access to the previous/next item in the loop. If such an item does
not exist, the value is undefined.
Added changed(*values) to loop contexts, providing an easy way
of checking whether a value has changed since the last iteration (or
rather since the last call of the method)
Added a namespace function that creates a special object which
allows attribute assignment using the set tag. This can be used
to carry data across scopes, e.g. from a loop body to code that
comes after the loop.
Added a trimmed modifier to {% trans %} to strip linebreaks
and surrounding whitespace. Also added a new policy to enable this
for all trans blocks.
The random filter is no longer incorrectly constant folded and
will produce a new random choice each time the template is rendered.
:pr:478
Added a unique filter. :pr:469
Added min and max filters. :pr:475
Added tests for all comparison operators: eq, ne, lt,
le, gt, ge. :pr:665
import statement cannot end with a trailing comma. :pr:617,
:pr:618
indent filter will not indent blank lines by default. :pr:685
Add reverse argument for dictsort filter. :pr:692
Add a NativeEnvironment that renders templates to native Python
types instead of strings. :pr:708
Added filter support to the block set tag. :pr:489
tojson filter marks output as safe to match documented behavior.
:pr:718
Resolved a bug where getting debug locals for tracebacks could



... (truncated)


Commits

c4c4088 release 2.10.1
a2a6c93 sandbox str.format_map
78d2f67 Bump version number to 2.10
d9d3fc3 clean up MANIFEST.in
072cdf9 Support filters in set block
d17c7db Merge pull request #708 from jctanner/NATIVE_TYPES
6a7a263 Merge branch 'master' into NATIVE_TYPES
31f92b5 Fix typo in docstring (#779)
c314761 codecov needs argparse on 2.6
4750cf7 Minor docstring grammar fix (#772)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
@dependabot use these labels will set the current labels as the default for future PRs for this repo and language
@dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language
@dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language
@dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the Security Alerts page.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3130,2020-10-30T16:08:11Z,2020-10-30T16:27:57Z,2020-10-30T16:28:08Z,CLOSED,False,1,1,1,https://github.com/apps/dependabot,Bump jinja2 from 2.8 to 2.10.1,1,['dependencies'],https://github.com/sysown/proxysql/pull/3130,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3130#issuecomment-719655449,"Bumps jinja2 from 2.8 to 2.10.1.

Release notes
Sourced from jinja2's releases.

2.10.1

Changes: https://jinja.palletsprojects.com/en/2.10.x/changelog/#version-2-10-1
Blog: https://palletsprojects.com/blog/jinja-2-10-1-released/
Twitter: https://twitter.com/PalletsTeam/status/1114605127308992513

2.10
Primary changes

A NativeEnvironment that renders Python types instead of strings.
http://jinja.pocoo.org/docs/2.10/nativetypes/
A namespace object that works with {% set %}. This replaces
previous hacks for storing state across iterations or scopes.
http://jinja.pocoo.org/docs/2.10/templates/#assignments
The loop object now has nextitem and previtem attributes, as
well as a changed method, for the common case of outputting
something as a value in the loop changes. More complicated cases can
use the namespace object.
http://jinja.pocoo.org/docs/2.10/templates/#for

Install or upgrade
Install from PyPI with pip:
pip install -U Jinja2

Changelog

Added a new extension node called OverlayScope which can be used to create an unoptimized scope that will look up all variables from a derived context.
Added an in test that works like the in operator.  This can be used in combination with reject and select.
Added previtem and nextitem to loop contexts, providing access to the previous/next item in the loop. If such an item does not exist, the value is undefined.
Added changed(*values) to loop contexts, providing an easy way of checking whether a value has changed since the last iteration (or rather since the last call of the method)
Added a namespace function that creates a special object which allows attribute assignment using the set tag.  This can be used to carry data across scopes, e.g. from a loop body to code that comes after the loop.
Added a trimmed modifier to {% trans %} to strip linebreaks and surrounding whitespace. Also added a new policy to enable this for all trans blocks.
The random filter is no longer incorrectly constant folded and will produce a new random choice each time the template is rendered. (#478)
Added a unique filter. (#469)
Added min and max filters. (#475)
Added tests for all comparison operators: eq, ne, lt, le, gt, ge. (#665)
import statement cannot end with a trailing comma. (#617, #618)
indent filter will not indent blank lines by default. (#685)
Add reverse argument for dictsort filter. (#692)
Add a NativeEnvironment that renders templates to native Python types instead of strings. (#708)
Added filter support to the block set tag. (#489)
tojson filter marks output as safe to match documented behavior. (#718)
Resolved a bug where getting debug locals for tracebacks could modify template context.
Fixed a bug where having many {% elif ... %} blocks resulted in a ""too many levels of indentation"" error.  These blocks now compile to native elif ..: instead of else: if ..: (#759)




Changelog
Sourced from jinja2's changelog.

Version 2.10.1
Released 2019-04-06

SandboxedEnvironment securely handles str.format_map in
order to prevent code execution through untrusted format strings.
The sandbox already handled str.format.

Version 2.10
Released 2017-11-08

Added a new extension node called OverlayScope which can be used
to create an unoptimized scope that will look up all variables from
a derived context.
Added an in test that works like the in operator. This can be
used in combination with reject and select.
Added previtem and nextitem to loop contexts, providing
access to the previous/next item in the loop. If such an item does
not exist, the value is undefined.
Added changed(*values) to loop contexts, providing an easy way
of checking whether a value has changed since the last iteration (or
rather since the last call of the method)
Added a namespace function that creates a special object which
allows attribute assignment using the set tag. This can be used
to carry data across scopes, e.g. from a loop body to code that
comes after the loop.
Added a trimmed modifier to {% trans %} to strip linebreaks
and surrounding whitespace. Also added a new policy to enable this
for all trans blocks.
The random filter is no longer incorrectly constant folded and
will produce a new random choice each time the template is rendered.
:pr:478
Added a unique filter. :pr:469
Added min and max filters. :pr:475
Added tests for all comparison operators: eq, ne, lt,
le, gt, ge. :pr:665
import statement cannot end with a trailing comma. :pr:617,
:pr:618
indent filter will not indent blank lines by default. :pr:685
Add reverse argument for dictsort filter. :pr:692
Add a NativeEnvironment that renders templates to native Python
types instead of strings. :pr:708
Added filter support to the block set tag. :pr:489
tojson filter marks output as safe to match documented behavior.
:pr:718
Resolved a bug where getting debug locals for tracebacks could



... (truncated)


Commits

c4c4088 release 2.10.1
a2a6c93 sandbox str.format_map
78d2f67 Bump version number to 2.10
d9d3fc3 clean up MANIFEST.in
072cdf9 Support filters in set block
d17c7db Merge pull request #708 from jctanner/NATIVE_TYPES
6a7a263 Merge branch 'master' into NATIVE_TYPES
31f92b5 Fix typo in docstring (#779)
c314761 codecov needs argparse on 2.6
4750cf7 Minor docstring grammar fix (#772)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
@dependabot use these labels will set the current labels as the default for future PRs for this repo and language
@dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language
@dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language
@dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the Security Alerts page.",requirements.txt removed,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3130,2020-10-30T16:08:11Z,2020-10-30T16:27:57Z,2020-10-30T16:28:08Z,CLOSED,False,1,1,1,https://github.com/apps/dependabot,Bump jinja2 from 2.8 to 2.10.1,1,['dependencies'],https://github.com/sysown/proxysql/pull/3130,https://github.com/apps/dependabot,4,https://github.com/sysown/proxysql/pull/3130#issuecomment-719655464,"Bumps jinja2 from 2.8 to 2.10.1.

Release notes
Sourced from jinja2's releases.

2.10.1

Changes: https://jinja.palletsprojects.com/en/2.10.x/changelog/#version-2-10-1
Blog: https://palletsprojects.com/blog/jinja-2-10-1-released/
Twitter: https://twitter.com/PalletsTeam/status/1114605127308992513

2.10
Primary changes

A NativeEnvironment that renders Python types instead of strings.
http://jinja.pocoo.org/docs/2.10/nativetypes/
A namespace object that works with {% set %}. This replaces
previous hacks for storing state across iterations or scopes.
http://jinja.pocoo.org/docs/2.10/templates/#assignments
The loop object now has nextitem and previtem attributes, as
well as a changed method, for the common case of outputting
something as a value in the loop changes. More complicated cases can
use the namespace object.
http://jinja.pocoo.org/docs/2.10/templates/#for

Install or upgrade
Install from PyPI with pip:
pip install -U Jinja2

Changelog

Added a new extension node called OverlayScope which can be used to create an unoptimized scope that will look up all variables from a derived context.
Added an in test that works like the in operator.  This can be used in combination with reject and select.
Added previtem and nextitem to loop contexts, providing access to the previous/next item in the loop. If such an item does not exist, the value is undefined.
Added changed(*values) to loop contexts, providing an easy way of checking whether a value has changed since the last iteration (or rather since the last call of the method)
Added a namespace function that creates a special object which allows attribute assignment using the set tag.  This can be used to carry data across scopes, e.g. from a loop body to code that comes after the loop.
Added a trimmed modifier to {% trans %} to strip linebreaks and surrounding whitespace. Also added a new policy to enable this for all trans blocks.
The random filter is no longer incorrectly constant folded and will produce a new random choice each time the template is rendered. (#478)
Added a unique filter. (#469)
Added min and max filters. (#475)
Added tests for all comparison operators: eq, ne, lt, le, gt, ge. (#665)
import statement cannot end with a trailing comma. (#617, #618)
indent filter will not indent blank lines by default. (#685)
Add reverse argument for dictsort filter. (#692)
Add a NativeEnvironment that renders templates to native Python types instead of strings. (#708)
Added filter support to the block set tag. (#489)
tojson filter marks output as safe to match documented behavior. (#718)
Resolved a bug where getting debug locals for tracebacks could modify template context.
Fixed a bug where having many {% elif ... %} blocks resulted in a ""too many levels of indentation"" error.  These blocks now compile to native elif ..: instead of else: if ..: (#759)




Changelog
Sourced from jinja2's changelog.

Version 2.10.1
Released 2019-04-06

SandboxedEnvironment securely handles str.format_map in
order to prevent code execution through untrusted format strings.
The sandbox already handled str.format.

Version 2.10
Released 2017-11-08

Added a new extension node called OverlayScope which can be used
to create an unoptimized scope that will look up all variables from
a derived context.
Added an in test that works like the in operator. This can be
used in combination with reject and select.
Added previtem and nextitem to loop contexts, providing
access to the previous/next item in the loop. If such an item does
not exist, the value is undefined.
Added changed(*values) to loop contexts, providing an easy way
of checking whether a value has changed since the last iteration (or
rather since the last call of the method)
Added a namespace function that creates a special object which
allows attribute assignment using the set tag. This can be used
to carry data across scopes, e.g. from a loop body to code that
comes after the loop.
Added a trimmed modifier to {% trans %} to strip linebreaks
and surrounding whitespace. Also added a new policy to enable this
for all trans blocks.
The random filter is no longer incorrectly constant folded and
will produce a new random choice each time the template is rendered.
:pr:478
Added a unique filter. :pr:469
Added min and max filters. :pr:475
Added tests for all comparison operators: eq, ne, lt,
le, gt, ge. :pr:665
import statement cannot end with a trailing comma. :pr:617,
:pr:618
indent filter will not indent blank lines by default. :pr:685
Add reverse argument for dictsort filter. :pr:692
Add a NativeEnvironment that renders templates to native Python
types instead of strings. :pr:708
Added filter support to the block set tag. :pr:489
tojson filter marks output as safe to match documented behavior.
:pr:718
Resolved a bug where getting debug locals for tracebacks could



... (truncated)


Commits

c4c4088 release 2.10.1
a2a6c93 sandbox str.format_map
78d2f67 Bump version number to 2.10
d9d3fc3 clean up MANIFEST.in
072cdf9 Support filters in set block
d17c7db Merge pull request #708 from jctanner/NATIVE_TYPES
6a7a263 Merge branch 'master' into NATIVE_TYPES
31f92b5 Fix typo in docstring (#779)
c314761 codecov needs argparse on 2.6
4750cf7 Minor docstring grammar fix (#772)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
@dependabot use these labels will set the current labels as the default for future PRs for this repo and language
@dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language
@dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language
@dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the Security Alerts page.","OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting @dependabot ignore this major version or @dependabot ignore this minor version.
If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3137,2020-11-06T20:00:58Z,2020-11-09T23:19:37Z,2021-06-04T08:24:01Z,MERGED,True,1,0,1,https://github.com/JavierJF,Closes #3135: Fixed crash due to invalid access to already freed 'MyMon_thread',1,[],https://github.com/sysown/proxysql/pull/3137,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3137,Closes #3135.,Closes #3135.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3139,2020-11-06T22:18:39Z,2020-11-09T23:19:58Z,2021-06-04T08:23:59Z,MERGED,True,26,3,1,https://github.com/JavierJF,Closes #3138: Improve WebInterfacePlugin start error handling,1,[],https://github.com/sysown/proxysql/pull/3139,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3139,"Closes #3138:

Added 'NULL' checks for 'GloWebInterface'.
Added port availability check before starting 'GloWebInterface'.","Closes #3138:

Added 'NULL' checks for 'GloWebInterface'.
Added port availability check before starting 'GloWebInterface'.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3140,2020-11-07T01:40:19Z,2020-11-09T23:19:17Z,2021-06-04T08:23:59Z,MERGED,True,187,28,6,https://github.com/JavierJF,Closes FR #3131: Expose prometheus metrics through the admin interface,3,[],https://github.com/sysown/proxysql/pull/3140,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3140,Closes #3131.,Closes #3131.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3141,2020-11-07T18:30:06Z,2020-11-10T12:31:03Z,2020-11-10T12:31:03Z,MERGED,True,23,1,3,https://github.com/renecannao,Reset client connection when client issues a CHANGE_USER command,3,[],https://github.com/sysown/proxysql/pull/3141,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3141,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3141,2020-11-07T18:30:06Z,2020-11-10T12:31:03Z,2020-11-10T12:31:03Z,MERGED,True,23,1,3,https://github.com/renecannao,Reset client connection when client issues a CHANGE_USER command,3,[],https://github.com/sysown/proxysql/pull/3141,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3141#issuecomment-723933552,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3141,2020-11-07T18:30:06Z,2020-11-10T12:31:03Z,2020-11-10T12:31:03Z,MERGED,True,23,1,3,https://github.com/renecannao,Reset client connection when client issues a CHANGE_USER command,3,[],https://github.com/sysown/proxysql/pull/3141,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3141#issuecomment-724108331,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3141,2020-11-07T18:30:06Z,2020-11-10T12:31:03Z,2020-11-10T12:31:03Z,MERGED,True,23,1,3,https://github.com/renecannao,Reset client connection when client issues a CHANGE_USER command,3,[],https://github.com/sysown/proxysql/pull/3141,https://github.com/JavierJF,4,https://github.com/sysown/proxysql/pull/3141#issuecomment-724163651,,Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3141,2020-11-07T18:30:06Z,2020-11-10T12:31:03Z,2020-11-10T12:31:03Z,MERGED,True,23,1,3,https://github.com/renecannao,Reset client connection when client issues a CHANGE_USER command,3,[],https://github.com/sysown/proxysql/pull/3141,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/3141#issuecomment-724570605,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3142,2020-11-09T05:10:19Z,2021-10-28T06:40:43Z,2021-10-28T06:40:43Z,CLOSED,False,20,11,1,https://github.com/ironbit,Added new functionality for query rules and fast routing,1,[],https://github.com/sysown/proxysql/pull/3142,https://github.com/ironbit,1,https://github.com/sysown/proxysql/pull/3142,"To solve the problem of query rules related to hundreds of shards routed to a specific hostgroup, new functionality is proposed using pattern matching and the 'flagIN/flagOUT' parameters.
The benefit is to create a reduced number of rules (# of shards + 1 rules) and improve the execution time compared with other solutions.
The pattern matching rule will be '/* (\d+)', and when the flagIN and flagOUT parameters are equal to 0 in the rule, the flagIN parameter will be updated with the matching value in the comment. The 'apply' parameter must be 0 in order to process the fast routing rules. Only one rule is required.
It's required one rule per shard in the fast routing rules. It will use the value of the 'flagIN' to apply the correct rule. It's recommended to use 'flagIN' values greater than 0.
Number of Rules:
#shards in fast routing table and 1 rule in query rule.
Benchmark:
With Rules:
Mean: 7.086812000274659
Standard Deviation: 0.22450872217312873
Without Rules:
Mean: 6.930614757537842
Standard Deviation: 0.22890181519137284","To solve the problem of query rules related to hundreds of shards routed to a specific hostgroup, new functionality is proposed using pattern matching and the 'flagIN/flagOUT' parameters.
The benefit is to create a reduced number of rules (# of shards + 1 rules) and improve the execution time compared with other solutions.
The pattern matching rule will be '/* (\d+)', and when the flagIN and flagOUT parameters are equal to 0 in the rule, the flagIN parameter will be updated with the matching value in the comment. The 'apply' parameter must be 0 in order to process the fast routing rules. Only one rule is required.
It's required one rule per shard in the fast routing rules. It will use the value of the 'flagIN' to apply the correct rule. It's recommended to use 'flagIN' values greater than 0.
Number of Rules:
#shards in fast routing table and 1 rule in query rule.
Benchmark:
With Rules:
Mean: 7.086812000274659
Standard Deviation: 0.22450872217312873
Without Rules:
Mean: 6.930614757537842
Standard Deviation: 0.22890181519137284",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3142,2020-11-09T05:10:19Z,2021-10-28T06:40:43Z,2021-10-28T06:40:43Z,CLOSED,False,20,11,1,https://github.com/ironbit,Added new functionality for query rules and fast routing,1,[],https://github.com/sysown/proxysql/pull/3142,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/3142#issuecomment-723758411,"To solve the problem of query rules related to hundreds of shards routed to a specific hostgroup, new functionality is proposed using pattern matching and the 'flagIN/flagOUT' parameters.
The benefit is to create a reduced number of rules (# of shards + 1 rules) and improve the execution time compared with other solutions.
The pattern matching rule will be '/* (\d+)', and when the flagIN and flagOUT parameters are equal to 0 in the rule, the flagIN parameter will be updated with the matching value in the comment. The 'apply' parameter must be 0 in order to process the fast routing rules. Only one rule is required.
It's required one rule per shard in the fast routing rules. It will use the value of the 'flagIN' to apply the correct rule. It's recommended to use 'flagIN' values greater than 0.
Number of Rules:
#shards in fast routing table and 1 rule in query rule.
Benchmark:
With Rules:
Mean: 7.086812000274659
Standard Deviation: 0.22450872217312873
Without Rules:
Mean: 6.930614757537842
Standard Deviation: 0.22890181519137284",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3144,2020-11-10T09:16:29Z,2020-11-10T17:41:37Z,2021-06-04T08:23:57Z,MERGED,True,24,1,3,https://github.com/renecannao,V2.1.0 change user,3,[],https://github.com/sysown/proxysql/pull/3144,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3144,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3144,2020-11-10T09:16:29Z,2020-11-10T17:41:37Z,2021-06-04T08:23:57Z,MERGED,True,24,1,3,https://github.com/renecannao,V2.1.0 change user,3,[],https://github.com/sysown/proxysql/pull/3144,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3144#issuecomment-724723743,,Retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3148,2020-11-11T21:16:51Z,2020-11-18T10:22:23Z,2021-06-04T08:23:56Z,MERGED,True,1,1,1,https://github.com/JavierJF,Closes #3147: Fixed return code for 'MYSQL_QUERY' macro in 'tap/utils.h',1,[],https://github.com/sysown/proxysql/pull/3148,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3148,Closes #3147 .,Closes #3147 .,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3151,2020-11-12T17:49:20Z,2020-11-18T10:21:40Z,2020-11-18T10:21:41Z,MERGED,True,1,0,1,https://github.com/JavierJF,Closes #3150: Fixed memory leak due packet not being freed in 'switching_auth' during 'SERVER_HANDSHAKE',1,[],https://github.com/sysown/proxysql/pull/3151,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3151,Closes #3150.,Closes #3150.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3152,2020-11-12T17:52:35Z,2020-11-18T10:21:57Z,2021-06-04T08:23:55Z,MERGED,True,1,0,1,https://github.com/JavierJF,Closes #3150: Fixed memory leak due packet not being freed in 'switching_auth' during 'SERVER_HANDSHAKE',1,[],https://github.com/sysown/proxysql/pull/3152,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3152,Closes #3150.,Closes #3150.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3152,2020-11-12T17:52:35Z,2020-11-18T10:21:57Z,2021-06-04T08:23:55Z,MERGED,True,1,0,1,https://github.com/JavierJF,Closes #3150: Fixed memory leak due packet not being freed in 'switching_auth' during 'SERVER_HANDSHAKE',1,[],https://github.com/sysown/proxysql/pull/3152,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3152#issuecomment-726345321,Closes #3150.,Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3158,2020-11-17T20:20:50Z,2020-11-18T10:22:59Z,2021-06-04T08:23:44Z,MERGED,True,13,4,1,https://github.com/JavierJF,Closes #3155: Added 'SO_REUSEADDR' option to socket used to test 'web_port' availability,1,[],https://github.com/sysown/proxysql/pull/3158,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3158,Closes #3155.,Closes #3155.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3158,2020-11-17T20:20:50Z,2020-11-18T10:22:59Z,2021-06-04T08:23:44Z,MERGED,True,13,4,1,https://github.com/JavierJF,Closes #3155: Added 'SO_REUSEADDR' option to socket used to test 'web_port' availability,1,[],https://github.com/sysown/proxysql/pull/3158,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3158#issuecomment-729259953,Closes #3155.,Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3158,2020-11-17T20:20:50Z,2020-11-18T10:22:59Z,2021-06-04T08:23:44Z,MERGED,True,13,4,1,https://github.com/JavierJF,Closes #3155: Added 'SO_REUSEADDR' option to socket used to test 'web_port' availability,1,[],https://github.com/sysown/proxysql/pull/3158,https://github.com/JavierJF,3,https://github.com/sysown/proxysql/pull/3158#issuecomment-729270705,Closes #3155.,Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3158,2020-11-17T20:20:50Z,2020-11-18T10:22:59Z,2021-06-04T08:23:44Z,MERGED,True,13,4,1,https://github.com/JavierJF,Closes #3155: Added 'SO_REUSEADDR' option to socket used to test 'web_port' availability,1,[],https://github.com/sysown/proxysql/pull/3158,https://github.com/JavierJF,4,https://github.com/sysown/proxysql/pull/3158#issuecomment-729285547,Closes #3155.,Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3158,2020-11-17T20:20:50Z,2020-11-18T10:22:59Z,2021-06-04T08:23:44Z,MERGED,True,13,4,1,https://github.com/JavierJF,Closes #3155: Added 'SO_REUSEADDR' option to socket used to test 'web_port' availability,1,[],https://github.com/sysown/proxysql/pull/3158,https://github.com/JavierJF,5,https://github.com/sysown/proxysql/pull/3158#issuecomment-729539200,Closes #3155.,Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3160,2020-11-17T20:40:21Z,2020-11-19T10:11:03Z,2021-06-04T08:23:45Z,MERGED,True,153,1,2,https://github.com/JavierJF,Closes #3159: Added patch to replace 'std::regex' in favor of 're2' in libhttpserver for 'GCC' versions under 4.9,1,[],https://github.com/sysown/proxysql/pull/3160,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3160,Closes #3159.,Closes #3159.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3160,2020-11-17T20:40:21Z,2020-11-19T10:11:03Z,2021-06-04T08:23:45Z,MERGED,True,153,1,2,https://github.com/JavierJF,Closes #3159: Added patch to replace 'std::regex' in favor of 're2' in libhttpserver for 'GCC' versions under 4.9,1,[],https://github.com/sysown/proxysql/pull/3160,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3160#issuecomment-729573172,Closes #3159.,Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3162,2020-11-18T01:02:26Z,,2020-11-18T01:04:04Z,OPEN,False,1,6,1,https://github.com/lots0logs,Update MySQL_Monitor.cpp,1,[],https://github.com/sysown/proxysql/pull/3162,https://github.com/lots0logs,1,https://github.com/sysown/proxysql/pull/3162,"Don't set node offline when wsrep_local_state is 2 if wsrep_sst_donor_rejects_queries is false.
Fixes #2953
Fixes #2292","Don't set node offline when wsrep_local_state is 2 if wsrep_sst_donor_rejects_queries is false.
Fixes #2953
Fixes #2292",True,"{'THUMBS_UP': ['https://github.com/dyipon', 'https://github.com/louzbeck', 'https://github.com/Bazze']}"
sysown/proxysql,https://github.com/sysown/proxysql,3162,2020-11-18T01:02:26Z,,2020-11-18T01:04:04Z,OPEN,False,1,6,1,https://github.com/lots0logs,Update MySQL_Monitor.cpp,1,[],https://github.com/sysown/proxysql/pull/3162,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/3162#issuecomment-729308941,"Don't set node offline when wsrep_local_state is 2 if wsrep_sst_donor_rejects_queries is false.
Fixes #2953
Fixes #2292",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3166,2020-11-19T16:25:48Z,2020-12-07T22:30:38Z,2021-06-04T08:23:46Z,MERGED,True,91,1,3,https://github.com/JavierJF,Closes #3161: Added extra logging reporting all galera nodes status when ProxySQL oves a node from hostgroup,1,[],https://github.com/sysown/proxysql/pull/3166,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3166,Closes #3161 .,Closes #3161 .,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3168,2020-11-19T17:07:59Z,2020-11-20T10:18:26Z,2021-06-04T08:23:46Z,MERGED,True,3,0,1,https://github.com/JavierJF,Closes #3167: Fixed memory leak in 'save_mysql_servers_runtime_to_database' due to non-freed resultset,1,[],https://github.com/sysown/proxysql/pull/3168,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3168,"Closes #3167.

 Valgrind clean output.

valgrind_clean.log","Closes #3167.

 Valgrind clean output.

valgrind_clean.log",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3174,2020-11-28T00:22:12Z,2021-03-02T14:51:06Z,2021-03-02T14:51:06Z,CLOSED,False,0,0,1,https://github.com/JavierJF,DONOTMERGE: Dummy PR to verify CI failure,1,[],https://github.com/sysown/proxysql/pull/3174,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3174,DONOTMERGE. This PR is just to confirm a expected CI failure due to recent changes.,DONOTMERGE. This PR is just to confirm a expected CI failure due to recent changes.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3174,2020-11-28T00:22:12Z,2021-03-02T14:51:06Z,2021-03-02T14:51:06Z,CLOSED,False,0,0,1,https://github.com/JavierJF,DONOTMERGE: Dummy PR to verify CI failure,1,[],https://github.com/sysown/proxysql/pull/3174,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3174#issuecomment-735020690,DONOTMERGE. This PR is just to confirm a expected CI failure due to recent changes.,Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3174,2020-11-28T00:22:12Z,2021-03-02T14:51:06Z,2021-03-02T14:51:06Z,CLOSED,False,0,0,1,https://github.com/JavierJF,DONOTMERGE: Dummy PR to verify CI failure,1,[],https://github.com/sysown/proxysql/pull/3174,https://github.com/JavierJF,3,https://github.com/sysown/proxysql/pull/3174#issuecomment-735220418,DONOTMERGE. This PR is just to confirm a expected CI failure due to recent changes.,Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3175,2020-11-28T14:51:53Z,2020-12-02T10:33:47Z,2020-12-02T10:33:47Z,MERGED,True,23,8,1,https://github.com/JavierJF,Closes #3133: Fixes client connection hanging forever when backend is already gone ,2,[],https://github.com/sysown/proxysql/pull/3175,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3175,Closes #3133.,Closes #3133.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3175,2020-11-28T14:51:53Z,2020-12-02T10:33:47Z,2020-12-02T10:33:47Z,MERGED,True,23,8,1,https://github.com/JavierJF,Closes #3133: Fixes client connection hanging forever when backend is already gone ,2,[],https://github.com/sysown/proxysql/pull/3175,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3175#issuecomment-735257115,Closes #3133.,Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3175,2020-11-28T14:51:53Z,2020-12-02T10:33:47Z,2020-12-02T10:33:47Z,MERGED,True,23,8,1,https://github.com/JavierJF,Closes #3133: Fixes client connection hanging forever when backend is already gone ,2,[],https://github.com/sysown/proxysql/pull/3175,https://github.com/JavierJF,3,https://github.com/sysown/proxysql/pull/3175#issuecomment-735259644,Closes #3133.,Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3176,2020-11-28T19:44:51Z,2020-12-02T10:35:31Z,2021-06-04T08:23:49Z,MERGED,True,23,8,1,https://github.com/JavierJF,Closes #3133: Fixes client connection hanging forever when backend is already gone,2,[],https://github.com/sysown/proxysql/pull/3176,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3176,Closes #3133.,Closes #3133.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3183,2020-12-08T00:38:38Z,,2022-03-10T21:49:58Z,OPEN,False,72,12,12,https://github.com/renecannao,[WIP] Try to compress large resultset with LZ4 while in memory,4,[],https://github.com/sysown/proxysql/pull/3183,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3183,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3183,2020-12-08T00:38:38Z,,2022-03-10T21:49:58Z,OPEN,False,72,12,12,https://github.com/renecannao,[WIP] Try to compress large resultset with LZ4 while in memory,4,[],https://github.com/sysown/proxysql/pull/3183,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/3183#issuecomment-1064536761,,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3188,2020-12-10T14:26:54Z,2020-12-20T23:08:32Z,2020-12-20T23:08:32Z,MERGED,True,8,3,1,https://github.com/JavierJF,Closes #3187: Galera nodes permanently dropped from runtime_mysql_servers for writer_is_also_reader=2,1,[],https://github.com/sysown/proxysql/pull/3188,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3188,Closes #3187 .,Closes #3187 .,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3189,2020-12-10T14:30:37Z,2020-12-21T10:24:55Z,2021-06-04T08:23:21Z,MERGED,True,8,3,1,https://github.com/JavierJF,Closes #3187: Galera nodes permanently dropped from runtime_mysql_servers for writer_is_also_reader=2,1,[],https://github.com/sysown/proxysql/pull/3189,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3189,Closes #3187 .,Closes #3187 .,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3189,2020-12-10T14:30:37Z,2020-12-21T10:24:55Z,2021-06-04T08:23:21Z,MERGED,True,8,3,1,https://github.com/JavierJF,Closes #3187: Galera nodes permanently dropped from runtime_mysql_servers for writer_is_also_reader=2,1,[],https://github.com/sysown/proxysql/pull/3189,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3189#issuecomment-748696573,Closes #3187 .,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3191,2020-12-10T15:15:07Z,2020-12-20T23:08:44Z,2020-12-20T23:08:44Z,MERGED,True,35,0,1,https://github.com/JavierJF,Closes #3190: Galera cluster left without readers using 'writer_is_also_reader=2',1,[],https://github.com/sysown/proxysql/pull/3191,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3191,Closes #3190.,Closes #3190.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3192,2020-12-10T15:17:20Z,2020-12-21T09:45:14Z,2021-06-04T08:23:22Z,MERGED,True,35,0,1,https://github.com/JavierJF,Closes #3190: Galera cluster left without readers using 'writer_is_also_reader=2',1,[],https://github.com/sysown/proxysql/pull/3192,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3192,Closes #3190.,Closes #3190.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3192,2020-12-10T15:17:20Z,2020-12-21T09:45:14Z,2021-06-04T08:23:22Z,MERGED,True,35,0,1,https://github.com/JavierJF,Closes #3190: Galera cluster left without readers using 'writer_is_also_reader=2',1,[],https://github.com/sysown/proxysql/pull/3192,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3192#issuecomment-748696794,Closes #3190.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3194,2020-12-11T13:41:01Z,2020-12-20T23:12:42Z,2020-12-20T23:12:42Z,MERGED,True,8,0,1,https://github.com/JavierJF,Closes #2619: ProxySQL is creating more than 'max_connections' connections,1,[],https://github.com/sysown/proxysql/pull/3194,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3194,Closes #2619 .,Closes #2619 .,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3195,2020-12-11T13:42:33Z,2020-12-27T19:46:17Z,2021-06-04T08:23:23Z,MERGED,True,8,0,1,https://github.com/JavierJF,Closes #2619: ProxySQL is creating more than 'max_connections' connections,1,[],https://github.com/sysown/proxysql/pull/3195,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3195,Closes #2619 .,Closes #2619 .,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3195,2020-12-11T13:42:33Z,2020-12-27T19:46:17Z,2021-06-04T08:23:23Z,MERGED,True,8,0,1,https://github.com/JavierJF,Closes #2619: ProxySQL is creating more than 'max_connections' connections,1,[],https://github.com/sysown/proxysql/pull/3195,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3195#issuecomment-748696768,Closes #2619 .,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3195,2020-12-11T13:42:33Z,2020-12-27T19:46:17Z,2021-06-04T08:23:23Z,MERGED,True,8,0,1,https://github.com/JavierJF,Closes #2619: ProxySQL is creating more than 'max_connections' connections,1,[],https://github.com/sysown/proxysql/pull/3195,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3195#issuecomment-751495314,Closes #2619 .,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3198,2020-12-15T15:35:01Z,2020-12-20T23:09:28Z,2020-12-20T23:09:28Z,MERGED,True,157,19,1,https://github.com/JavierJF,Closes #3177: Fixed error log and errors reported to clients when several statements fails,1,[],https://github.com/sysown/proxysql/pull/3198,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3198,Closes #3177.,Closes #3177.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3199,2020-12-15T15:47:57Z,2020-12-27T20:10:15Z,2021-06-04T08:23:19Z,MERGED,True,157,19,1,https://github.com/JavierJF,Closes #3177: Fixed error log and errors reported to clients when several statements fails,1,[],https://github.com/sysown/proxysql/pull/3199,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3199,Closes #3177.,Closes #3177.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3199,2020-12-15T15:47:57Z,2020-12-27T20:10:15Z,2021-06-04T08:23:19Z,MERGED,True,157,19,1,https://github.com/JavierJF,Closes #3177: Fixed error log and errors reported to clients when several statements fails,1,[],https://github.com/sysown/proxysql/pull/3199,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3199#issuecomment-751502239,Closes #3177.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3202,2020-12-15T23:03:05Z,2020-12-27T18:40:59Z,2020-12-27T18:40:59Z,MERGED,True,32,5,1,https://github.com/JavierJF,Closes #3201: Connections not being cleanup in case of 'match_tracked_options' always failing,2,[],https://github.com/sysown/proxysql/pull/3202,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3202,Closes #3201.,Closes #3201.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3203,2020-12-15T23:04:53Z,2021-01-08T09:13:41Z,2021-06-04T08:23:05Z,MERGED,True,32,5,1,https://github.com/JavierJF,Closes #3201: Connections not being cleanup in case of 'match_tracked_options' always failing ,2,[],https://github.com/sysown/proxysql/pull/3203,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3203,Closes #3201.,Closes #3201.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3203,2020-12-15T23:04:53Z,2021-01-08T09:13:41Z,2021-06-04T08:23:05Z,MERGED,True,32,5,1,https://github.com/JavierJF,Closes #3201: Connections not being cleanup in case of 'match_tracked_options' always failing ,2,[],https://github.com/sysown/proxysql/pull/3203,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3203#issuecomment-751501859,Closes #3201.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3203,2020-12-15T23:04:53Z,2021-01-08T09:13:41Z,2021-06-04T08:23:05Z,MERGED,True,32,5,1,https://github.com/JavierJF,Closes #3201: Connections not being cleanup in case of 'match_tracked_options' always failing ,2,[],https://github.com/sysown/proxysql/pull/3203,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3203#issuecomment-751502141,Closes #3201.,In this PR we need to apply the same fixes applied to #3202,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3205,2020-12-16T16:09:05Z,2020-12-20T23:11:38Z,2020-12-20T23:11:38Z,MERGED,True,29,12,2,https://github.com/JavierJF,Closes #3204: Fix several memory leaks detected by valgrind,3,[],https://github.com/sysown/proxysql/pull/3205,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3205,"Closes #3204.
Attached a file containing ProxySQL and Valgrind clean outputs after trying to reproduce the issue.
proxysql_mem_clean.tar.gz","Closes #3204.
Attached a file containing ProxySQL and Valgrind clean outputs after trying to reproduce the issue.
proxysql_mem_clean.tar.gz",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3206,2020-12-16T16:11:17Z,2020-12-27T18:41:14Z,2021-06-04T08:23:18Z,MERGED,True,27,13,1,https://github.com/JavierJF,Closes #3204: Fix several memory leaks detected by valgrind,1,[],https://github.com/sysown/proxysql/pull/3206,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3206,"Closes #3204.
Attached a file containing ProxySQL and Valgrind clean outputs after trying to reproduce the issue.
proxysql_mem_clean.tar.gz","Closes #3204.
Attached a file containing ProxySQL and Valgrind clean outputs after trying to reproduce the issue.
proxysql_mem_clean.tar.gz",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3206,2020-12-16T16:11:17Z,2020-12-27T18:41:14Z,2021-06-04T08:23:18Z,MERGED,True,27,13,1,https://github.com/JavierJF,Closes #3204: Fix several memory leaks detected by valgrind,1,[],https://github.com/sysown/proxysql/pull/3206,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3206#issuecomment-751495381,"Closes #3204.
Attached a file containing ProxySQL and Valgrind clean outputs after trying to reproduce the issue.
proxysql_mem_clean.tar.gz",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3210,2020-12-20T23:07:16Z,2021-02-05T16:45:41Z,2021-02-05T16:45:41Z,MERGED,True,956,18,8,https://github.com/renecannao,[WIP] Allow buffering of large resultset and prepared statements,13,[],https://github.com/sysown/proxysql/pull/3210,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3210,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3210,2020-12-20T23:07:16Z,2021-02-05T16:45:41Z,2021-02-05T16:45:41Z,MERGED,True,956,18,8,https://github.com/renecannao,[WIP] Allow buffering of large resultset and prepared statements,13,[],https://github.com/sysown/proxysql/pull/3210,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3210#issuecomment-748697920,,"@JavierJF : I think we also need to support CLIENT_DEPRECATE_EOF , as I suspect we only support text protocol and not binary protocol (prepared statements)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3211,2020-12-21T10:21:38Z,2020-12-21T10:21:47Z,2020-12-21T10:21:47Z,MERGED,True,0,35,1,https://github.com/renecannao,"Revert ""Closes #3190: Galera cluster left without readers using 'writer_is_also_reader=2'""",1,[],https://github.com/sysown/proxysql/pull/3211,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3211,Reverts #3191,Reverts #3191,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3212,2020-12-21T10:22:29Z,2020-12-21T10:22:37Z,2021-06-04T08:23:15Z,MERGED,True,0,35,1,https://github.com/renecannao,"Revert ""Closes #3190: Galera cluster left without readers using 'writer_is_also_reader=2'""",1,[],https://github.com/sysown/proxysql/pull/3212,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3212,Reverts #3192,Reverts #3192,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3215,2020-12-23T14:35:37Z,2020-12-27T17:38:25Z,2020-12-27T17:38:25Z,MERGED,True,1,0,1,https://github.com/JavierJF,Closes #2330: ProxySQL Native Galera support stop to work after PROXYSQL RESTART,1,[],https://github.com/sysown/proxysql/pull/3215,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3215,"Closes #2330. Monitoring stops working after PROXYSQL RESTART due to a non-nullified pointer.
Attached the log with a similar setup of the reported in the issue #2330. Which shows monitoring now working properly after issuing PROXYSQL RESTART before the fix, and the proper and expected cluster state after the fix.
proxysql_2330_logs.tar.gz","Closes #2330. Monitoring stops working after PROXYSQL RESTART due to a non-nullified pointer.
Attached the log with a similar setup of the reported in the issue #2330. Which shows monitoring now working properly after issuing PROXYSQL RESTART before the fix, and the proper and expected cluster state after the fix.
proxysql_2330_logs.tar.gz",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3217,2020-12-23T18:27:24Z,2020-12-27T18:12:31Z,2021-06-04T08:23:14Z,MERGED,True,2,2,1,https://github.com/JavierJF,Closes #3216: Galera node wrongly purged after placed 'OFFLINE HARD' in the 'offline_hostgroup' ,1,[],https://github.com/sysown/proxysql/pull/3217,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3217,Closes #3216.,Closes #3216.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3217,2020-12-23T18:27:24Z,2020-12-27T18:12:31Z,2021-06-04T08:23:14Z,MERGED,True,2,2,1,https://github.com/JavierJF,Closes #3216: Galera node wrongly purged after placed 'OFFLINE HARD' in the 'offline_hostgroup' ,1,[],https://github.com/sysown/proxysql/pull/3217,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3217#issuecomment-751495122,Closes #3216.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3218,2020-12-23T18:27:51Z,2020-12-27T17:37:24Z,2020-12-27T17:37:24Z,MERGED,True,2,2,1,https://github.com/JavierJF,Closes #3216: Galera node wrongly purged after placed 'OFFLINE HARD' in the 'offline_hostgroup',1,[],https://github.com/sysown/proxysql/pull/3218,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3218,Closes #3216.,Closes #3216.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3220,2020-12-23T20:27:47Z,2020-12-27T17:37:12Z,2021-06-04T08:23:10Z,MERGED,True,10,10,1,https://github.com/JavierJF,Closes #3219: Server wrongly used as reader for Galera cluster with 'writer_is_also_reader=2',1,[],https://github.com/sysown/proxysql/pull/3220,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3220,Closes #3219.,Closes #3219.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3221,2020-12-23T20:29:05Z,2020-12-27T17:36:50Z,2020-12-27T17:36:50Z,MERGED,True,10,10,1,https://github.com/JavierJF,Closes #3219: Server wrongly used as reader for Galera cluster with 'writer_is_also_reader=2' ,1,[],https://github.com/sysown/proxysql/pull/3221,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3221,Closes #3219.,Closes #3219.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3222,2020-12-23T21:19:53Z,2020-12-27T19:48:07Z,2020-12-27T19:48:07Z,MERGED,True,1,0,1,https://github.com/calh,Add Client_Connections_non_idle to Diamond gauge keys.,1,[],https://github.com/sysown/proxysql/pull/3222,https://github.com/calh,1,https://github.com/sysown/proxysql/pull/3222,"I just noticed that my stats looked wrong for active connections, and this was not being published as a gauge metric.  Quick one-liner.","I just noticed that my stats looked wrong for active connections, and this was not being published as a gauge metric.  Quick one-liner.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3222,2020-12-23T21:19:53Z,2020-12-27T19:48:07Z,2020-12-27T19:48:07Z,MERGED,True,1,0,1,https://github.com/calh,Add Client_Connections_non_idle to Diamond gauge keys.,1,[],https://github.com/sysown/proxysql/pull/3222,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/3222#issuecomment-750478387,"I just noticed that my stats looked wrong for active connections, and this was not being published as a gauge metric.  Quick one-liner.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3222,2020-12-23T21:19:53Z,2020-12-27T19:48:07Z,2020-12-27T19:48:07Z,MERGED,True,1,0,1,https://github.com/calh,Add Client_Connections_non_idle to Diamond gauge keys.,1,[],https://github.com/sysown/proxysql/pull/3222,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3222#issuecomment-751508653,"I just noticed that my stats looked wrong for active connections, and this was not being published as a gauge metric.  Quick one-liner.",Thank you for the pull request,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3226,2020-12-24T10:27:14Z,2020-12-27T17:35:58Z,2021-06-04T08:23:11Z,MERGED,True,1,1,1,https://github.com/JavierJF,Closes #3225: *char* being overflow in 'ma_net_safe_read' in `client_deprecate_eof.patch`,1,[],https://github.com/sysown/proxysql/pull/3226,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3226,Closes #3225.,Closes #3225.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3227,2020-12-24T11:32:46Z,2021-01-08T14:15:33Z,2021-06-04T08:23:07Z,MERGED,True,1,1,1,https://github.com/JavierJF,Closes #2953: Honor 'wsrep_sst_donor_rejects_queries' avoiding setting a DONOR node offline during a SST,1,[],https://github.com/sysown/proxysql/pull/3227,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3227,"Closes #2953.
This change require several changes in the galera documentation. Covering how wsrep_sst_donor_rejects_queries will be honored, and it's relation with other settings. Official documentation will be updated together with v2.1.0 release.","Closes #2953.
This change require several changes in the galera documentation. Covering how wsrep_sst_donor_rejects_queries will be honored, and it's relation with other settings. Official documentation will be updated together with v2.1.0 release.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3227,2020-12-24T11:32:46Z,2021-01-08T14:15:33Z,2021-06-04T08:23:07Z,MERGED,True,1,1,1,https://github.com/JavierJF,Closes #2953: Honor 'wsrep_sst_donor_rejects_queries' avoiding setting a DONOR node offline during a SST,1,[],https://github.com/sysown/proxysql/pull/3227,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3227#issuecomment-751508475,"Closes #2953.
This change require several changes in the galera documentation. Covering how wsrep_sst_donor_rejects_queries will be honored, and it's relation with other settings. Official documentation will be updated together with v2.1.0 release.",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3227,2020-12-24T11:32:46Z,2021-01-08T14:15:33Z,2021-06-04T08:23:07Z,MERGED,True,1,1,1,https://github.com/JavierJF,Closes #2953: Honor 'wsrep_sst_donor_rejects_queries' avoiding setting a DONOR node offline during a SST,1,[],https://github.com/sysown/proxysql/pull/3227,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3227#issuecomment-751680503,"Closes #2953.
This change require several changes in the galera documentation. Covering how wsrep_sst_donor_rejects_queries will be honored, and it's relation with other settings. Official documentation will be updated together with v2.1.0 release.",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3227,2020-12-24T11:32:46Z,2021-01-08T14:15:33Z,2021-06-04T08:23:07Z,MERGED,True,1,1,1,https://github.com/JavierJF,Closes #2953: Honor 'wsrep_sst_donor_rejects_queries' avoiding setting a DONOR node offline during a SST,1,[],https://github.com/sysown/proxysql/pull/3227,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/3227#issuecomment-756674623,"Closes #2953.
This change require several changes in the galera documentation. Covering how wsrep_sst_donor_rejects_queries will be honored, and it's relation with other settings. Official documentation will be updated together with v2.1.0 release.",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3229,2020-12-29T21:28:36Z,2022-01-22T12:29:42Z,2022-01-22T12:29:42Z,CLOSED,False,2939,15,10,https://github.com/renecannao,V2.1.0 parser,2,[],https://github.com/sysown/proxysql/pull/3229,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3229,Improving the performance of mysql query digest computation,Improving the performance of mysql query digest computation,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3229,2020-12-29T21:28:36Z,2022-01-22T12:29:42Z,2022-01-22T12:29:42Z,CLOSED,False,2939,15,10,https://github.com/renecannao,V2.1.0 parser,2,[],https://github.com/sysown/proxysql/pull/3229,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3229#issuecomment-753462312,Improving the performance of mysql query digest computation,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3229,2020-12-29T21:28:36Z,2022-01-22T12:29:42Z,2022-01-22T12:29:42Z,CLOSED,False,2939,15,10,https://github.com/renecannao,V2.1.0 parser,2,[],https://github.com/sysown/proxysql/pull/3229,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3229#issuecomment-1019233208,Improving the performance of mysql query digest computation,Closing this PR because deprecated/replaced by #3770,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3234,2021-01-05T17:59:35Z,2021-01-08T09:09:46Z,2021-01-08T09:13:20Z,MERGED,True,4,4,1,https://github.com/wjordan,Workaround for Aurora 2.09 bug,1,[],https://github.com/sysown/proxysql/pull/3234,https://github.com/wjordan,1,https://github.com/sysown/proxysql/pull/3234,Fixes #3082 by adjusting the related SQL queries to always return 0 for REPLICA_LAG_IN_MILLISECONDS for the row where SESSION_ID = 'MASTER_SESSION_ID'. This works around a bug in Aurora 2.09 where the replica lag is incorrectly reported as non-zero for MASTER_SESSION_ID (see #3082 (comment)).,Fixes #3082 by adjusting the related SQL queries to always return 0 for REPLICA_LAG_IN_MILLISECONDS for the row where SESSION_ID = 'MASTER_SESSION_ID'. This works around a bug in Aurora 2.09 where the replica lag is incorrectly reported as non-zero for MASTER_SESSION_ID (see #3082 (comment)).,True,{'THUMBS_UP': ['https://github.com/m4ce']}
sysown/proxysql,https://github.com/sysown/proxysql,3234,2021-01-05T17:59:35Z,2021-01-08T09:09:46Z,2021-01-08T09:13:20Z,MERGED,True,4,4,1,https://github.com/wjordan,Workaround for Aurora 2.09 bug,1,[],https://github.com/sysown/proxysql/pull/3234,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3234#issuecomment-756641060,Fixes #3082 by adjusting the related SQL queries to always return 0 for REPLICA_LAG_IN_MILLISECONDS for the row where SESSION_ID = 'MASTER_SESSION_ID'. This works around a bug in Aurora 2.09 where the replica lag is incorrectly reported as non-zero for MASTER_SESSION_ID (see #3082 (comment)).,Thank you for the pull request,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3234,2021-01-05T17:59:35Z,2021-01-08T09:09:46Z,2021-01-08T09:13:20Z,MERGED,True,4,4,1,https://github.com/wjordan,Workaround for Aurora 2.09 bug,1,[],https://github.com/sysown/proxysql/pull/3234,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3234#issuecomment-756642587,Fixes #3082 by adjusting the related SQL queries to always return 0 for REPLICA_LAG_IN_MILLISECONDS for the row where SESSION_ID = 'MASTER_SESSION_ID'. This works around a bug in Aurora 2.09 where the replica lag is incorrectly reported as non-zero for MASTER_SESSION_ID (see #3082 (comment)).,Porting this to 2.1.0 in PR #3237,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3237,2021-01-08T09:12:31Z,2021-01-08T14:15:17Z,2021-06-04T08:22:40Z,MERGED,True,4,4,1,https://github.com/renecannao,Workaround for Aurora 2.09 bug,1,[],https://github.com/sysown/proxysql/pull/3237,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3237,Port to 2.1.0 of PR #3234,Port to 2.1.0 of PR #3234,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3237,2021-01-08T09:12:31Z,2021-01-08T14:15:17Z,2021-06-04T08:22:40Z,MERGED,True,4,4,1,https://github.com/renecannao,Workaround for Aurora 2.09 bug,1,[],https://github.com/sysown/proxysql/pull/3237,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3237#issuecomment-756670471,Port to 2.1.0 of PR #3234,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3239,2021-01-09T00:48:34Z,2021-01-11T13:32:17Z,2021-01-11T13:32:17Z,MERGED,True,62,2,1,https://github.com/JavierJF,Closes #3238: Improve error handling when port is already in use when instantiating 'ProxySQL_RestAPI_Server' ,1,[],https://github.com/sysown/proxysql/pull/3239,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3239,Closes #3238.,Closes #3238.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3243,2021-01-11T12:18:04Z,2021-01-11T13:28:26Z,2021-06-04T08:22:57Z,MERGED,True,7,8,2,https://github.com/JavierJF,Closes #3242: Make all Prometheus metrics 'promtool' complaint,1,[],https://github.com/sysown/proxysql/pull/3243,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3243,Closes #3242.,Closes #3242.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3246,2021-01-12T12:18:44Z,2021-01-12T14:57:32Z,2021-06-04T08:22:59Z,MERGED,True,128,1,2,https://github.com/renecannao,Implemented MySQL_Protocol::generate_pkt_field2(),1,[],https://github.com/sysown/proxysql/pull/3246,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3246,"generate_pkt_field2 is a less generic version of generate_pkt_field
and it is meant to be used only for queries executed on backend.
The function takes a MYSQL_FIELD as one of its arguments, thus a lot of
lengths do not need to be computed","generate_pkt_field2 is a less generic version of generate_pkt_field
and it is meant to be used only for queries executed on backend.
The function takes a MYSQL_FIELD as one of its arguments, thus a lot of
lengths do not need to be computed",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3249,2021-01-14T19:26:01Z,2021-01-20T18:38:07Z,2021-01-20T18:38:07Z,MERGED,True,309,33,11,https://github.com/renecannao,Do not search charset in mysql_real_connect if already set,9,[],https://github.com/sysown/proxysql/pull/3249,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3249,"In mysql_init() charset is set to NULL .
In mysql_read_connect() charset is not changed if already set
This allows proxysql to change it outside the library","In mysql_init() charset is set to NULL .
In mysql_read_connect() charset is not changed if already set
This allows proxysql to change it outside the library",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3249,2021-01-14T19:26:01Z,2021-01-20T18:38:07Z,2021-01-20T18:38:07Z,MERGED,True,309,33,11,https://github.com/renecannao,Do not search charset in mysql_real_connect if already set,9,[],https://github.com/sysown/proxysql/pull/3249,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3249#issuecomment-760529215,"In mysql_init() charset is set to NULL .
In mysql_read_connect() charset is not changed if already set
This allows proxysql to change it outside the library",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3249,2021-01-14T19:26:01Z,2021-01-20T18:38:07Z,2021-01-20T18:38:07Z,MERGED,True,309,33,11,https://github.com/renecannao,Do not search charset in mysql_real_connect if already set,9,[],https://github.com/sysown/proxysql/pull/3249,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3249#issuecomment-761887970,"In mysql_init() charset is set to NULL .
In mysql_read_connect() charset is not changed if already set
This allows proxysql to change it outside the library","We are facing few challenges with this PR.
It seems that:

if during mysql_real_connect() the backend cannot set the collation asked by the client (for example if the client is mysql 8 asking for utf8mb4_0900_ai_ci while the backend is mysql 5.7 and doesn't support utf8mb4_0900_ai_ci), the backend silently sets it to its own default
if during mysql_change_user() the backend cannot set the collation asked by the client, it returns error Access denied and also (using password: NO)
This seems a MySQL server bug (inconsistency between connect and change user)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3249,2021-01-14T19:26:01Z,2021-01-20T18:38:07Z,2021-01-20T18:38:07Z,MERGED,True,309,33,11,https://github.com/renecannao,Do not search charset in mysql_real_connect if already set,9,[],https://github.com/sysown/proxysql/pull/3249,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/3249#issuecomment-761913556,"In mysql_init() charset is set to NULL .
In mysql_read_connect() charset is not changed if already set
This allows proxysql to change it outside the library","Relevant MySQL bugs:
http://bugs.mysql.com/102265
http://bugs.mysql.com/102266",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3256,2021-01-19T18:30:34Z,2021-01-20T18:37:32Z,2021-01-20T18:37:32Z,MERGED,True,18,4,1,https://github.com/JavierJF,Closes #3252: Added jemalloc compilation option '--with-lg-page' for CentOS ARM building,1,[],https://github.com/sysown/proxysql/pull/3256,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3256,Closes #3252.,Closes #3252.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3256,2021-01-19T18:30:34Z,2021-01-20T18:37:32Z,2021-01-20T18:37:32Z,MERGED,True,18,4,1,https://github.com/JavierJF,Closes #3252: Added jemalloc compilation option '--with-lg-page' for CentOS ARM building,1,[],https://github.com/sysown/proxysql/pull/3256,https://github.com/DaiZhiyuan,2,https://github.com/sysown/proxysql/pull/3256#issuecomment-763271914,Closes #3252.,thanks.,True,{'THUMBS_UP': ['https://github.com/JavierJF']}
sysown/proxysql,https://github.com/sysown/proxysql,3258,2021-01-19T19:25:26Z,2021-02-08T18:50:49Z,2021-02-08T18:50:50Z,CLOSED,False,302,33,10,https://github.com/JavierJF,Closes #3257: Port 'PR #3249' to v2.1.1,8,[],https://github.com/sysown/proxysql/pull/3258,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3258,Closes #3257.,Closes #3257.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3258,2021-01-19T19:25:26Z,2021-02-08T18:50:49Z,2021-02-08T18:50:50Z,CLOSED,False,302,33,10,https://github.com/JavierJF,Closes #3257: Port 'PR #3249' to v2.1.1,8,[],https://github.com/sysown/proxysql/pull/3258,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3258#issuecomment-775363585,Closes #3257.,Closing this because already ported in #3286,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3259,2021-01-19T19:44:31Z,2021-02-05T16:45:12Z,2021-02-05T16:45:12Z,CLOSED,False,18,4,1,https://github.com/JavierJF,Closes #3252: Added jemalloc compilation option '--with-lg-page' for CentOS ARM building,1,[],https://github.com/sysown/proxysql/pull/3259,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3259,Closes #3252.,Closes #3252.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3259,2021-01-19T19:44:31Z,2021-02-05T16:45:12Z,2021-02-05T16:45:12Z,CLOSED,False,18,4,1,https://github.com/JavierJF,Closes #3252: Added jemalloc compilation option '--with-lg-page' for CentOS ARM building,1,[],https://github.com/sysown/proxysql/pull/3259,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3259#issuecomment-774148562,Closes #3252.,Closing because ported in #3286,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3263,2021-01-21T17:28:31Z,2021-01-21T20:40:27Z,2021-01-21T20:40:27Z,MERGED,True,2,0,1,https://github.com/JavierJF,Closes #3261: Fixed invalid writes/reads in 'update_group_replication_set_writer' due to query not fitting in allocated buffer,1,[],https://github.com/sysown/proxysql/pull/3263,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3263,Closes #3261.,Closes #3261.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3264,2021-01-21T17:29:45Z,2021-01-21T20:42:10Z,2021-01-21T20:42:10Z,MERGED,True,2,0,1,https://github.com/JavierJF,Closes #3262: Fixed memory leak in 'Query_Processor::new_query_rule' due to field 'match_digest' never being freed,1,[],https://github.com/sysown/proxysql/pull/3264,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3264,Closes #3262.,Closes #3262.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3266,2021-01-21T19:58:24Z,2021-01-21T20:41:19Z,2021-01-21T20:41:20Z,MERGED,True,5,2,1,https://github.com/JavierJF,Closes #3265: 'update_group_replication_set_writer' now checks found 'writer' status,1,[],https://github.com/sysown/proxysql/pull/3266,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3266,"Closes #3265.
Attached ProxySQL log in which can be appreciated that ProxySQL now responds properly after the node is detected as 'ONLINE' again.
proxysql.log","Closes #3265.
Attached ProxySQL log in which can be appreciated that ProxySQL now responds properly after the node is detected as 'ONLINE' again.
proxysql.log",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3268,2021-01-21T20:16:51Z,2021-02-08T18:52:43Z,2021-02-08T18:52:43Z,MERGED,True,0,1,1,https://github.com/JavierJF,Closes #3267: Removed duplicated call to 'conn_unregister' in 'monitor_group_replication_thread' performed outside proper check,1,[],https://github.com/sysown/proxysql/pull/3268,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3268,Closes #3267.,Closes #3267.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3274,2021-01-26T00:18:27Z,2021-02-08T16:20:23Z,2021-02-08T16:20:23Z,MERGED,True,213,0,2,https://github.com/JavierJF,Closes #3273: Infinite loop under certain timing conditions with SSL connections,4,[],https://github.com/sysown/proxysql/pull/3274,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3274,Closes #3273.,Closes #3273.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3281,2021-01-30T11:07:03Z,2021-02-08T18:51:25Z,2021-06-04T08:21:45Z,MERGED,True,101,19,7,https://github.com/JavierJF,Closes #3280: Add support to control 'CLIENT_DEPRECATE_EOF' in client and backend connections through global variables,2,[],https://github.com/sysown/proxysql/pull/3281,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3281,Closes #3280.,Closes #3280.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3281,2021-01-30T11:07:03Z,2021-02-08T18:51:25Z,2021-06-04T08:21:45Z,MERGED,True,101,19,7,https://github.com/JavierJF,Closes #3280: Add support to control 'CLIENT_DEPRECATE_EOF' in client and backend connections through global variables,2,[],https://github.com/sysown/proxysql/pull/3281,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3281#issuecomment-770200359,Closes #3280.,retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3281,2021-01-30T11:07:03Z,2021-02-08T18:51:25Z,2021-06-04T08:21:45Z,MERGED,True,101,19,7,https://github.com/JavierJF,Closes #3280: Add support to control 'CLIENT_DEPRECATE_EOF' in client and backend connections through global variables,2,[],https://github.com/sysown/proxysql/pull/3281,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3281#issuecomment-775056364,Closes #3280.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3283,2021-01-30T14:57:53Z,2021-02-08T13:49:41Z,2021-06-04T08:21:44Z,MERGED,True,96,19,1,https://github.com/JavierJF,Closes #3282: Added proper waiting for 'test_session_status_flags-t' to avoid failures due to replication lag,1,[],https://github.com/sysown/proxysql/pull/3283,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3283,Closes #3282.,Closes #3282.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3283,2021-01-30T14:57:53Z,2021-02-08T13:49:41Z,2021-06-04T08:21:44Z,MERGED,True,96,19,1,https://github.com/JavierJF,Closes #3282: Added proper waiting for 'test_session_status_flags-t' to avoid failures due to replication lag,1,[],https://github.com/sysown/proxysql/pull/3283,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3283#issuecomment-770870259,Closes #3282.,retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3283,2021-01-30T14:57:53Z,2021-02-08T13:49:41Z,2021-06-04T08:21:44Z,MERGED,True,96,19,1,https://github.com/JavierJF,Closes #3282: Added proper waiting for 'test_session_status_flags-t' to avoid failures due to replication lag,1,[],https://github.com/sysown/proxysql/pull/3283,https://github.com/JavierJF,3,https://github.com/sysown/proxysql/pull/3283#issuecomment-771482886,Closes #3282.,retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3283,2021-01-30T14:57:53Z,2021-02-08T13:49:41Z,2021-06-04T08:21:44Z,MERGED,True,96,19,1,https://github.com/JavierJF,Closes #3282: Added proper waiting for 'test_session_status_flags-t' to avoid failures due to replication lag,1,[],https://github.com/sysown/proxysql/pull/3283,https://github.com/JavierJF,4,https://github.com/sysown/proxysql/pull/3283#issuecomment-771493424,Closes #3282.,retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3283,2021-01-30T14:57:53Z,2021-02-08T13:49:41Z,2021-06-04T08:21:44Z,MERGED,True,96,19,1,https://github.com/JavierJF,Closes #3282: Added proper waiting for 'test_session_status_flags-t' to avoid failures due to replication lag,1,[],https://github.com/sysown/proxysql/pull/3283,https://github.com/JavierJF,5,https://github.com/sysown/proxysql/pull/3283#issuecomment-771516108,Closes #3282.,retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3283,2021-01-30T14:57:53Z,2021-02-08T13:49:41Z,2021-06-04T08:21:44Z,MERGED,True,96,19,1,https://github.com/JavierJF,Closes #3282: Added proper waiting for 'test_session_status_flags-t' to avoid failures due to replication lag,1,[],https://github.com/sysown/proxysql/pull/3283,https://github.com/JavierJF,6,https://github.com/sysown/proxysql/pull/3283#issuecomment-771605817,Closes #3282.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3283,2021-01-30T14:57:53Z,2021-02-08T13:49:41Z,2021-06-04T08:21:44Z,MERGED,True,96,19,1,https://github.com/JavierJF,Closes #3282: Added proper waiting for 'test_session_status_flags-t' to avoid failures due to replication lag,1,[],https://github.com/sysown/proxysql/pull/3283,https://github.com/JavierJF,7,https://github.com/sysown/proxysql/pull/3283#issuecomment-771622669,Closes #3282.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3283,2021-01-30T14:57:53Z,2021-02-08T13:49:41Z,2021-06-04T08:21:44Z,MERGED,True,96,19,1,https://github.com/JavierJF,Closes #3282: Added proper waiting for 'test_session_status_flags-t' to avoid failures due to replication lag,1,[],https://github.com/sysown/proxysql/pull/3283,https://github.com/JavierJF,8,https://github.com/sysown/proxysql/pull/3283#issuecomment-771638337,Closes #3282.,retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3283,2021-01-30T14:57:53Z,2021-02-08T13:49:41Z,2021-06-04T08:21:44Z,MERGED,True,96,19,1,https://github.com/JavierJF,Closes #3282: Added proper waiting for 'test_session_status_flags-t' to avoid failures due to replication lag,1,[],https://github.com/sysown/proxysql/pull/3283,https://github.com/JavierJF,9,https://github.com/sysown/proxysql/pull/3283#issuecomment-771656827,Closes #3282.,retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3283,2021-01-30T14:57:53Z,2021-02-08T13:49:41Z,2021-06-04T08:21:44Z,MERGED,True,96,19,1,https://github.com/JavierJF,Closes #3282: Added proper waiting for 'test_session_status_flags-t' to avoid failures due to replication lag,1,[],https://github.com/sysown/proxysql/pull/3283,https://github.com/JavierJF,10,https://github.com/sysown/proxysql/pull/3283#issuecomment-771672134,Closes #3282.,retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3285,2021-02-03T21:14:46Z,2021-02-03T21:34:04Z,2021-02-03T21:34:04Z,MERGED,True,164,60,3,https://github.com/renecannao,Avoid MySQL bug 102266 #3276,6,[],https://github.com/sysown/proxysql/pull/3285,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3285,"This PR avoid hitting MySQL bug 102266
It also implements the parsing of charser/collation from COM_CHANGE_USER.","This PR avoid hitting MySQL bug 102266
It also implements the parsing of charser/collation from COM_CHANGE_USER.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3286,2021-02-03T21:46:14Z,2021-02-05T13:29:10Z,2021-06-04T08:21:42Z,MERGED,True,433,39,12,https://github.com/renecannao,Ports to 2.1.1 of various PRs from 2.0.16 and 2.0.17,18,[],https://github.com/sysown/proxysql/pull/3286,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3286,"PRs:
#3249
#3256
#3263
#3264
#3266
#3285","PRs:
#3249
#3256
#3263
#3264
#3266
#3285",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3286,2021-02-03T21:46:14Z,2021-02-05T13:29:10Z,2021-06-04T08:21:42Z,MERGED,True,433,39,12,https://github.com/renecannao,Ports to 2.1.1 of various PRs from 2.0.16 and 2.0.17,18,[],https://github.com/sysown/proxysql/pull/3286,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3286#issuecomment-772854660,"PRs:
#3249
#3256
#3263
#3264
#3266
#3285",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3289,2021-02-04T19:48:55Z,2021-02-05T13:29:18Z,2021-02-05T13:29:18Z,MERGED,True,3,1,1,https://github.com/JavierJF,Closes #3288: Added extra logging to 'monitor_replication_lag_thread' when 'Seconds_Behind_Master' is NULL,1,[],https://github.com/sysown/proxysql/pull/3289,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3289,Closes #3288.,Closes #3288.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3290,2021-02-04T19:58:51Z,2021-02-05T13:29:01Z,2021-06-04T08:21:44Z,MERGED,True,3,1,1,https://github.com/JavierJF,Closes #3288: Added extra logging to 'monitor_replication_lag_thread' when 'Seconds_Behind_Master' is NULL,1,[],https://github.com/sysown/proxysql/pull/3290,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3290,Closes #3288.,Closes #3288.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3294,2021-02-08T10:49:09Z,2021-02-08T10:49:21Z,2021-06-04T08:23:01Z,MERGED,True,18,956,8,https://github.com/renecannao,"Revert ""[WIP] Allow buffering of large resultset and prepared statements""",1,[],https://github.com/sysown/proxysql/pull/3294,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3294,Reverts #3210,Reverts #3210,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3295,2021-02-08T10:51:30Z,2021-02-09T10:08:35Z,2022-04-30T16:11:14Z,MERGED,True,955,18,8,https://github.com/renecannao,V2.1.0 ps buffer,14,[],https://github.com/sysown/proxysql/pull/3295,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3295,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3295,2021-02-08T10:51:30Z,2021-02-09T10:08:35Z,2022-04-30T16:11:14Z,MERGED,True,955,18,8,https://github.com/renecannao,V2.1.0 ps buffer,14,[],https://github.com/sysown/proxysql/pull/3295,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3295#issuecomment-775056057,,test this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3295,2021-02-08T10:51:30Z,2021-02-09T10:08:35Z,2022-04-30T16:11:14Z,MERGED,True,955,18,8,https://github.com/renecannao,V2.1.0 ps buffer,14,[],https://github.com/sysown/proxysql/pull/3295,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3295#issuecomment-775367424,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3297,2021-02-08T20:18:19Z,,2022-03-10T21:49:56Z,OPEN,False,365,0,2,https://github.com/JavierJF,[WIP] Closes #3296: Add support for a more resilient EOF detection in libmariadb client,3,[],https://github.com/sysown/proxysql/pull/3297,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3297,Closes #3296.,Closes #3296.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3297,2021-02-08T20:18:19Z,,2022-03-10T21:49:56Z,OPEN,False,365,0,2,https://github.com/JavierJF,[WIP] Closes #3296: Add support for a more resilient EOF detection in libmariadb client,3,[],https://github.com/sysown/proxysql/pull/3297,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3297#issuecomment-778407779,Closes #3296.,"We will merge it in a future release, maybe 2.1.2",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3297,2021-02-08T20:18:19Z,,2022-03-10T21:49:56Z,OPEN,False,365,0,2,https://github.com/JavierJF,[WIP] Closes #3296: Add support for a more resilient EOF detection in libmariadb client,3,[],https://github.com/sysown/proxysql/pull/3297,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3297#issuecomment-838149998,Closes #3296.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3297,2021-02-08T20:18:19Z,,2022-03-10T21:49:56Z,OPEN,False,365,0,2,https://github.com/JavierJF,[WIP] Closes #3296: Add support for a more resilient EOF detection in libmariadb client,3,[],https://github.com/sysown/proxysql/pull/3297,https://github.com/pondix,4,https://github.com/sysown/proxysql/pull/3297#issuecomment-1064536733,Closes #3296.,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3299,2021-02-08T23:34:54Z,2021-02-09T10:09:09Z,2021-06-04T08:22:16Z,MERGED,True,24,10,1,https://github.com/JavierJF,Closes #3298: Prevent unnecessary logging and port check during admin variables flushing,1,[],https://github.com/sysown/proxysql/pull/3299,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3299,Closes #3298.,Closes #3298.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3301,2021-02-09T11:52:06Z,2021-02-10T10:36:53Z,2021-06-04T08:22:12Z,MERGED,True,213,0,2,https://github.com/JavierJF,Closes #3273: Infinite loop under certain timing conditions with SSL connections (Port for v2.1.1),4,[],https://github.com/sysown/proxysql/pull/3301,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3301,Closes #3273. (Port for v2.1.1),Closes #3273. (Port for v2.1.1),True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3303,2021-02-12T16:53:28Z,,2021-02-12T16:54:03Z,OPEN,False,194,0,1,https://github.com/dtest,Adding tool to clean up historical query digests from disk.,1,[],https://github.com/sysown/proxysql/pull/3303,https://github.com/dtest,1,https://github.com/sysown/proxysql/pull/3303,"When enabling historical query digests to be saved to disk, ProxySQL currently has no mechanism to clean those up. So the stats.db file can grow unbounded.
This script can be scheduled in the scheduler to clean up stats past a certain number of days (30, 60, etc) with an option to VACUUM to reclaim the disk space.
Example scheduler insert:
/* Runs script once a day, and cleans out everything over 30 days. 
Deletes in 1 day chunks (defined in minutes). Vacuums the stats.db file afterward */
INSERT INTO scheduler (active, interval_ms, filename, arg1, arg2, arg3, arg4, comment) 
VALUES ( 1, 86400000, '/usr/share/proxysql/tools/proxysql_clean_stats_history.sh', 
'/usr/share/proxysql/tools/proxysql-admin.cnf', 30, 1440, 1, 'Stats cleaner');

A my.cnf-style config file should be provided to provide ProxySQL admin credentials and avoid modification of the script.","When enabling historical query digests to be saved to disk, ProxySQL currently has no mechanism to clean those up. So the stats.db file can grow unbounded.
This script can be scheduled in the scheduler to clean up stats past a certain number of days (30, 60, etc) with an option to VACUUM to reclaim the disk space.
Example scheduler insert:
/* Runs script once a day, and cleans out everything over 30 days. 
Deletes in 1 day chunks (defined in minutes). Vacuums the stats.db file afterward */
INSERT INTO scheduler (active, interval_ms, filename, arg1, arg2, arg3, arg4, comment) 
VALUES ( 1, 86400000, '/usr/share/proxysql/tools/proxysql_clean_stats_history.sh', 
'/usr/share/proxysql/tools/proxysql-admin.cnf', 30, 1440, 1, 'Stats cleaner');

A my.cnf-style config file should be provided to provide ProxySQL admin credentials and avoid modification of the script.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3303,2021-02-12T16:53:28Z,,2021-02-12T16:54:03Z,OPEN,False,194,0,1,https://github.com/dtest,Adding tool to clean up historical query digests from disk.,1,[],https://github.com/sysown/proxysql/pull/3303,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/3303#issuecomment-778311993,"When enabling historical query digests to be saved to disk, ProxySQL currently has no mechanism to clean those up. So the stats.db file can grow unbounded.
This script can be scheduled in the scheduler to clean up stats past a certain number of days (30, 60, etc) with an option to VACUUM to reclaim the disk space.
Example scheduler insert:
/* Runs script once a day, and cleans out everything over 30 days. 
Deletes in 1 day chunks (defined in minutes). Vacuums the stats.db file afterward */
INSERT INTO scheduler (active, interval_ms, filename, arg1, arg2, arg3, arg4, comment) 
VALUES ( 1, 86400000, '/usr/share/proxysql/tools/proxysql_clean_stats_history.sh', 
'/usr/share/proxysql/tools/proxysql-admin.cnf', 30, 1440, 1, 'Stats cleaner');

A my.cnf-style config file should be provided to provide ProxySQL admin credentials and avoid modification of the script.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3305,2021-02-12T19:25:31Z,2022-01-22T21:46:09Z,2022-01-22T21:46:09Z,MERGED,True,1148,90,34,https://github.com/renecannao,[WIP] Cluster improvements,48,[],https://github.com/sysown/proxysql/pull/3305,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3305,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3305,2021-02-12T19:25:31Z,2022-01-22T21:46:09Z,2022-01-22T21:46:09Z,MERGED,True,1148,90,34,https://github.com/renecannao,[WIP] Cluster improvements,48,[],https://github.com/sysown/proxysql/pull/3305,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3305#issuecomment-778407009,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3305,2021-02-12T19:25:31Z,2022-01-22T21:46:09Z,2022-01-22T21:46:09Z,MERGED,True,1148,90,34,https://github.com/renecannao,[WIP] Cluster improvements,48,[],https://github.com/sysown/proxysql/pull/3305,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3305#issuecomment-778433317,,uuid-dev on Ubuntu/Debian (and equivalent on Centos) needs to be installed in build dockers,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3305,2021-02-12T19:25:31Z,2022-01-22T21:46:09Z,2022-01-22T21:46:09Z,MERGED,True,1148,90,34,https://github.com/renecannao,[WIP] Cluster improvements,48,[],https://github.com/sysown/proxysql/pull/3305,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/3305#issuecomment-778630111,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3305,2021-02-12T19:25:31Z,2022-01-22T21:46:09Z,2022-01-22T21:46:09Z,MERGED,True,1148,90,34,https://github.com/renecannao,[WIP] Cluster improvements,48,[],https://github.com/sysown/proxysql/pull/3305,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/3305#issuecomment-822855336,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3305,2021-02-12T19:25:31Z,2022-01-22T21:46:09Z,2022-01-22T21:46:09Z,MERGED,True,1148,90,34,https://github.com/renecannao,[WIP] Cluster improvements,48,[],https://github.com/sysown/proxysql/pull/3305,https://github.com/renecannao,6,https://github.com/sysown/proxysql/pull/3305#issuecomment-870399001,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3305,2021-02-12T19:25:31Z,2022-01-22T21:46:09Z,2022-01-22T21:46:09Z,MERGED,True,1148,90,34,https://github.com/renecannao,[WIP] Cluster improvements,48,[],https://github.com/sysown/proxysql/pull/3305,https://github.com/renecannao,7,https://github.com/sysown/proxysql/pull/3305#issuecomment-899790235,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3305,2021-02-12T19:25:31Z,2022-01-22T21:46:09Z,2022-01-22T21:46:09Z,MERGED,True,1148,90,34,https://github.com/renecannao,[WIP] Cluster improvements,48,[],https://github.com/sysown/proxysql/pull/3305,https://github.com/renecannao,8,https://github.com/sysown/proxysql/pull/3305#issuecomment-899806129,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3305,2021-02-12T19:25:31Z,2022-01-22T21:46:09Z,2022-01-22T21:46:09Z,MERGED,True,1148,90,34,https://github.com/renecannao,[WIP] Cluster improvements,48,[],https://github.com/sysown/proxysql/pull/3305,https://github.com/renecannao,9,https://github.com/sysown/proxysql/pull/3305#issuecomment-901870124,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3305,2021-02-12T19:25:31Z,2022-01-22T21:46:09Z,2022-01-22T21:46:09Z,MERGED,True,1148,90,34,https://github.com/renecannao,[WIP] Cluster improvements,48,[],https://github.com/sysown/proxysql/pull/3305,https://github.com/renecannao,10,https://github.com/sysown/proxysql/pull/3305#issuecomment-903166417,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3305,2021-02-12T19:25:31Z,2022-01-22T21:46:09Z,2022-01-22T21:46:09Z,MERGED,True,1148,90,34,https://github.com/renecannao,[WIP] Cluster improvements,48,[],https://github.com/sysown/proxysql/pull/3305,https://github.com/renecannao,11,https://github.com/sysown/proxysql/pull/3305#issuecomment-903171740,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3305,2021-02-12T19:25:31Z,2022-01-22T21:46:09Z,2022-01-22T21:46:09Z,MERGED,True,1148,90,34,https://github.com/renecannao,[WIP] Cluster improvements,48,[],https://github.com/sysown/proxysql/pull/3305,https://github.com/renecannao,12,https://github.com/sysown/proxysql/pull/3305#issuecomment-903185523,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3305,2021-02-12T19:25:31Z,2022-01-22T21:46:09Z,2022-01-22T21:46:09Z,MERGED,True,1148,90,34,https://github.com/renecannao,[WIP] Cluster improvements,48,[],https://github.com/sysown/proxysql/pull/3305,https://github.com/renecannao,13,https://github.com/sysown/proxysql/pull/3305#issuecomment-903348151,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3305,2021-02-12T19:25:31Z,2022-01-22T21:46:09Z,2022-01-22T21:46:09Z,MERGED,True,1148,90,34,https://github.com/renecannao,[WIP] Cluster improvements,48,[],https://github.com/sysown/proxysql/pull/3305,https://github.com/renecannao,14,https://github.com/sysown/proxysql/pull/3305#issuecomment-905518226,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3305,2021-02-12T19:25:31Z,2022-01-22T21:46:09Z,2022-01-22T21:46:09Z,MERGED,True,1148,90,34,https://github.com/renecannao,[WIP] Cluster improvements,48,[],https://github.com/sysown/proxysql/pull/3305,https://github.com/renecannao,15,https://github.com/sysown/proxysql/pull/3305#issuecomment-905910711,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3305,2021-02-12T19:25:31Z,2022-01-22T21:46:09Z,2022-01-22T21:46:09Z,MERGED,True,1148,90,34,https://github.com/renecannao,[WIP] Cluster improvements,48,[],https://github.com/sysown/proxysql/pull/3305,https://github.com/renecannao,16,https://github.com/sysown/proxysql/pull/3305#issuecomment-906179361,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3305,2021-02-12T19:25:31Z,2022-01-22T21:46:09Z,2022-01-22T21:46:09Z,MERGED,True,1148,90,34,https://github.com/renecannao,[WIP] Cluster improvements,48,[],https://github.com/sysown/proxysql/pull/3305,https://github.com/renecannao,17,https://github.com/sysown/proxysql/pull/3305#issuecomment-906309289,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3305,2021-02-12T19:25:31Z,2022-01-22T21:46:09Z,2022-01-22T21:46:09Z,MERGED,True,1148,90,34,https://github.com/renecannao,[WIP] Cluster improvements,48,[],https://github.com/sysown/proxysql/pull/3305,https://github.com/renecannao,18,https://github.com/sysown/proxysql/pull/3305#issuecomment-906755869,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3305,2021-02-12T19:25:31Z,2022-01-22T21:46:09Z,2022-01-22T21:46:09Z,MERGED,True,1148,90,34,https://github.com/renecannao,[WIP] Cluster improvements,48,[],https://github.com/sysown/proxysql/pull/3305,https://github.com/renecannao,19,https://github.com/sysown/proxysql/pull/3305#issuecomment-907118633,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3305,2021-02-12T19:25:31Z,2022-01-22T21:46:09Z,2022-01-22T21:46:09Z,MERGED,True,1148,90,34,https://github.com/renecannao,[WIP] Cluster improvements,48,[],https://github.com/sysown/proxysql/pull/3305,https://github.com/renecannao,20,https://github.com/sysown/proxysql/pull/3305#issuecomment-909121407,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3305,2021-02-12T19:25:31Z,2022-01-22T21:46:09Z,2022-01-22T21:46:09Z,MERGED,True,1148,90,34,https://github.com/renecannao,[WIP] Cluster improvements,48,[],https://github.com/sysown/proxysql/pull/3305,https://github.com/renecannao,21,https://github.com/sysown/proxysql/pull/3305#issuecomment-909157227,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3305,2021-02-12T19:25:31Z,2022-01-22T21:46:09Z,2022-01-22T21:46:09Z,MERGED,True,1148,90,34,https://github.com/renecannao,[WIP] Cluster improvements,48,[],https://github.com/sysown/proxysql/pull/3305,https://github.com/renecannao,22,https://github.com/sysown/proxysql/pull/3305#issuecomment-942111713,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3305,2021-02-12T19:25:31Z,2022-01-22T21:46:09Z,2022-01-22T21:46:09Z,MERGED,True,1148,90,34,https://github.com/renecannao,[WIP] Cluster improvements,48,[],https://github.com/sysown/proxysql/pull/3305,https://github.com/renecannao,23,https://github.com/sysown/proxysql/pull/3305#issuecomment-973656102,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3305,2021-02-12T19:25:31Z,2022-01-22T21:46:09Z,2022-01-22T21:46:09Z,MERGED,True,1148,90,34,https://github.com/renecannao,[WIP] Cluster improvements,48,[],https://github.com/sysown/proxysql/pull/3305,https://github.com/renecannao,24,https://github.com/sysown/proxysql/pull/3305#issuecomment-973922618,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3306,2021-02-12T21:42:00Z,,2022-03-10T21:49:53Z,OPEN,False,230,479,5,https://github.com/renecannao,[WIP] various code cleanup and optimization,5,[],https://github.com/sysown/proxysql/pull/3306,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3306,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3306,2021-02-12T21:42:00Z,,2022-03-10T21:49:53Z,OPEN,False,230,479,5,https://github.com/renecannao,[WIP] various code cleanup and optimization,5,[],https://github.com/sysown/proxysql/pull/3306,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/3306#issuecomment-1064536697,,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3308,2021-02-16T18:01:40Z,2021-03-02T10:41:11Z,2021-03-02T10:41:12Z,MERGED,True,467,16,8,https://github.com/JavierJF,Closes #1574: Packets out of order. expected 1 received 27.,5,[],https://github.com/sysown/proxysql/pull/3308,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3308,Closes #1574. This PR addresses several situations that could arise related to prepared statements metadata cache.,Closes #1574. This PR addresses several situations that could arise related to prepared statements metadata cache.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3308,2021-02-16T18:01:40Z,2021-03-02T10:41:11Z,2021-03-02T10:41:12Z,MERGED,True,467,16,8,https://github.com/JavierJF,Closes #1574: Packets out of order. expected 1 received 27.,5,[],https://github.com/sysown/proxysql/pull/3308,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3308#issuecomment-780622355,Closes #1574. This PR addresses several situations that could arise related to prepared statements metadata cache.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3309,2021-02-16T19:26:11Z,2021-03-02T10:41:35Z,2021-06-04T08:22:12Z,MERGED,True,466,21,8,https://github.com/JavierJF,Closes #1574: Packets out of order. expected 1 received 27.,4,[],https://github.com/sysown/proxysql/pull/3309,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3309,Closes #1574. This PR addresses several situations that could arise related to prepared statements metadata cache.,Closes #1574. This PR addresses several situations that could arise related to prepared statements metadata cache.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3311,2021-02-17T15:17:37Z,2021-03-02T10:38:45Z,2021-06-04T08:22:09Z,MERGED,True,189,51,7,https://github.com/JavierJF,Closes #3310: Improve error reporting for 'MySQL_Monitor' and 'MySQL_Session' backend connections via counters,7,[],https://github.com/sysown/proxysql/pull/3311,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3311,Closes #3310.,Closes #3310.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3314,2021-02-18T12:20:43Z,2021-02-24T20:57:07Z,2021-06-04T08:22:10Z,MERGED,True,3,3,3,https://github.com/pondix,Change git_version parsing to standardize across OS versions,1,[],https://github.com/sysown/proxysql/pull/3314,https://github.com/pondix,1,https://github.com/sysown/proxysql/pull/3314,Fixes #3313,Fixes #3313,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3314,2021-02-18T12:20:43Z,2021-02-24T20:57:07Z,2021-06-04T08:22:10Z,MERGED,True,3,3,3,https://github.com/pondix,Change git_version parsing to standardize across OS versions,1,[],https://github.com/sysown/proxysql/pull/3314,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3314#issuecomment-785338170,Fixes #3313,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3315,2021-02-19T16:04:14Z,,2021-08-26T14:01:35Z,OPEN,False,100,0,6,https://github.com/Azraell,implement max_files as safe guard against disk space starvation.,2,[],https://github.com/sysown/proxysql/pull/3315,https://github.com/Azraell,1,https://github.com/sysown/proxysql/pull/3315,"Proxysql is not protected against disk space starvation and it could result of crash loop of the service.
This PR add an option for event and audit log to use up to max_files log and audit files limiting the space utilization up to max_files * filesize , like mysql do with it's binlogs files.
It won't cleanup folders to enforce the max_files file number in storage folder.
How to use :
/usr/bin/mysql -e 'set mysql-eventslog_filename = ""/var/log/proxysql/queries.log"";
set mysql-eventslog_filesize = 104857600;
set mysql-eventslog_default_log = 0;
set mysql-eventslog_max_files = 5;
set mysql-eventslog_format = 2;
LOAD MYSQL VARIABLES TO RUNTIME;'
/usr/bin/mysql -e ""proxysql flush logs"" && ls /var/log/proxysql/
queries.log.00000030  queries.log.00000031  queries.log.00000032  queries.log.00000033  queries.log.00000034
It has been tested against 2.0.16 and 2.0.18. But is simple enough to be ported to 2.1.*","Proxysql is not protected against disk space starvation and it could result of crash loop of the service.
This PR add an option for event and audit log to use up to max_files log and audit files limiting the space utilization up to max_files * filesize , like mysql do with it's binlogs files.
It won't cleanup folders to enforce the max_files file number in storage folder.
How to use :
/usr/bin/mysql -e 'set mysql-eventslog_filename = ""/var/log/proxysql/queries.log"";
set mysql-eventslog_filesize = 104857600;
set mysql-eventslog_default_log = 0;
set mysql-eventslog_max_files = 5;
set mysql-eventslog_format = 2;
LOAD MYSQL VARIABLES TO RUNTIME;'
/usr/bin/mysql -e ""proxysql flush logs"" && ls /var/log/proxysql/
queries.log.00000030  queries.log.00000031  queries.log.00000032  queries.log.00000033  queries.log.00000034
It has been tested against 2.0.16 and 2.0.18. But is simple enough to be ported to 2.1.*",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3315,2021-02-19T16:04:14Z,,2021-08-26T14:01:35Z,OPEN,False,100,0,6,https://github.com/Azraell,implement max_files as safe guard against disk space starvation.,2,[],https://github.com/sysown/proxysql/pull/3315,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/3315#issuecomment-782171334,"Proxysql is not protected against disk space starvation and it could result of crash loop of the service.
This PR add an option for event and audit log to use up to max_files log and audit files limiting the space utilization up to max_files * filesize , like mysql do with it's binlogs files.
It won't cleanup folders to enforce the max_files file number in storage folder.
How to use :
/usr/bin/mysql -e 'set mysql-eventslog_filename = ""/var/log/proxysql/queries.log"";
set mysql-eventslog_filesize = 104857600;
set mysql-eventslog_default_log = 0;
set mysql-eventslog_max_files = 5;
set mysql-eventslog_format = 2;
LOAD MYSQL VARIABLES TO RUNTIME;'
/usr/bin/mysql -e ""proxysql flush logs"" && ls /var/log/proxysql/
queries.log.00000030  queries.log.00000031  queries.log.00000032  queries.log.00000033  queries.log.00000034
It has been tested against 2.0.16 and 2.0.18. But is simple enough to be ported to 2.1.*",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3315,2021-02-19T16:04:14Z,,2021-08-26T14:01:35Z,OPEN,False,100,0,6,https://github.com/Azraell,implement max_files as safe guard against disk space starvation.,2,[],https://github.com/sysown/proxysql/pull/3315,https://github.com/WBasson,3,https://github.com/sysown/proxysql/pull/3315#issuecomment-818663620,"Proxysql is not protected against disk space starvation and it could result of crash loop of the service.
This PR add an option for event and audit log to use up to max_files log and audit files limiting the space utilization up to max_files * filesize , like mysql do with it's binlogs files.
It won't cleanup folders to enforce the max_files file number in storage folder.
How to use :
/usr/bin/mysql -e 'set mysql-eventslog_filename = ""/var/log/proxysql/queries.log"";
set mysql-eventslog_filesize = 104857600;
set mysql-eventslog_default_log = 0;
set mysql-eventslog_max_files = 5;
set mysql-eventslog_format = 2;
LOAD MYSQL VARIABLES TO RUNTIME;'
/usr/bin/mysql -e ""proxysql flush logs"" && ls /var/log/proxysql/
queries.log.00000030  queries.log.00000031  queries.log.00000032  queries.log.00000033  queries.log.00000034
It has been tested against 2.0.16 and 2.0.18. But is simple enough to be ported to 2.1.*","Yes, please. We run into this all the time.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3318,2021-02-24T12:12:25Z,2021-03-02T11:17:42Z,2021-03-02T11:17:43Z,MERGED,True,543,12,6,https://github.com/JavierJF,"Fixes for 'SetParser::parse1', variable tracking and 'handler_special_queries'",9,[],https://github.com/sysown/proxysql/pull/3318,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3318,Closes #3317.,Closes #3317.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3320,2021-02-25T15:12:07Z,2021-08-26T12:54:47Z,2021-08-26T12:54:47Z,CLOSED,False,0,0,0,https://github.com/JavierJF,DONOTMERGE: Test recent changes in the CI,1,[],https://github.com/sysown/proxysql/pull/3320,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3320,Closes #3319.,Closes #3319.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3320,2021-02-25T15:12:07Z,2021-08-26T12:54:47Z,2021-08-26T12:54:47Z,CLOSED,False,0,0,0,https://github.com/JavierJF,DONOTMERGE: Test recent changes in the CI,1,[],https://github.com/sysown/proxysql/pull/3320,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3320#issuecomment-785983215,Closes #3319.,Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3326,2021-03-01T14:11:21Z,2021-03-02T14:50:35Z,2021-06-04T08:22:01Z,MERGED,True,72,26,6,https://github.com/JavierJF,Closes #3324: Crash and invalid write reported by valgrind for 'test_ps_async-t',7,[],https://github.com/sysown/proxysql/pull/3326,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3326,"Closes #3324.

Clean valgrind output for 'test_ps_async-t' after patch: valgrind-out.txt
Wireshark capture of the packets received by 'test_ps_async-t' from ProxySQL proving correct sequencing: ps_async_fixed_proxysql.pcapng.zip","Closes #3324.

Clean valgrind output for 'test_ps_async-t' after patch: valgrind-out.txt
Wireshark capture of the packets received by 'test_ps_async-t' from ProxySQL proving correct sequencing: ps_async_fixed_proxysql.pcapng.zip",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3328,2021-03-01T16:16:24Z,2021-03-03T00:01:16Z,2021-06-04T08:22:02Z,MERGED,True,82,5,2,https://github.com/JavierJF,Closes #3327: Call 'ProcessQueryAndSetStatusFlags' check even if query failed,2,[],https://github.com/sysown/proxysql/pull/3328,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3328,Closes #3327.,Closes #3327.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3328,2021-03-01T16:16:24Z,2021-03-03T00:01:16Z,2021-06-04T08:22:02Z,MERGED,True,82,5,2,https://github.com/JavierJF,Closes #3327: Call 'ProcessQueryAndSetStatusFlags' check even if query failed,2,[],https://github.com/sysown/proxysql/pull/3328,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3328#issuecomment-788964123,Closes #3327.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3330,2021-03-02T09:55:23Z,2021-03-11T20:59:12Z,2021-06-04T08:21:59Z,MERGED,True,433,6,7,https://github.com/JavierJF,Closes #3248: Create metric to track number of times multiplexing is disabled due to `mysql-auto_increment_delay_multiplex`,8,[],https://github.com/sysown/proxysql/pull/3330,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3330,Closes #3248.,Closes #3248.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3330,2021-03-02T09:55:23Z,2021-03-11T20:59:12Z,2021-06-04T08:21:59Z,MERGED,True,433,6,7,https://github.com/JavierJF,Closes #3248: Create metric to track number of times multiplexing is disabled due to `mysql-auto_increment_delay_multiplex`,8,[],https://github.com/sysown/proxysql/pull/3330,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3330#issuecomment-789021616,Closes #3248.,Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3330,2021-03-02T09:55:23Z,2021-03-11T20:59:12Z,2021-06-04T08:21:59Z,MERGED,True,433,6,7,https://github.com/JavierJF,Closes #3248: Create metric to track number of times multiplexing is disabled due to `mysql-auto_increment_delay_multiplex`,8,[],https://github.com/sysown/proxysql/pull/3330,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3330#issuecomment-790972401,Closes #3248.,Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3335,2021-03-04T19:44:14Z,2021-03-11T20:58:58Z,2021-06-04T08:21:58Z,MERGED,True,238,123,2,https://github.com/JavierJF,Closes #3334: Fix crash and memory errors reported by valgrind for v2.1.1,4,[],https://github.com/sysown/proxysql/pull/3335,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3335,Closes #3334.,Closes #3334.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3336,2021-03-04T23:50:30Z,2021-03-05T00:17:58Z,2021-06-04T08:21:57Z,MERGED,True,5,2,4,https://github.com/renecannao,Upgrade openssl to 1.1.1j,1,[],https://github.com/sysown/proxysql/pull/3336,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3336,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3337,2021-03-10T20:37:24Z,2021-03-11T20:59:43Z,2021-06-04T08:21:59Z,MERGED,True,809,94,8,https://github.com/JavierJF,Closes #3223: Return proper errors codes on RESTAPI for script failures,4,[],https://github.com/sysown/proxysql/pull/3337,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3337,Closes #3223. This PR also addresses multiple issues discovered for 'RESTAPI' during the fix for #3223.,Closes #3223. This PR also addresses multiple issues discovered for 'RESTAPI' during the fix for #3223.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3341,2021-03-12T16:07:19Z,2021-03-16T21:15:28Z,2021-06-04T08:21:56Z,MERGED,True,3,0,1,https://github.com/JavierJF,Closes #3340: Server shunned due to replication lag re-enabled due to replication check timing out ,1,[],https://github.com/sysown/proxysql/pull/3341,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3341,Closes #3340.,Closes #3340.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3343,2021-03-15T17:25:05Z,2021-03-20T17:24:06Z,2021-06-04T08:21:54Z,MERGED,True,171,9,10,https://github.com/renecannao,V2.1.1 spiffe,5,[],https://github.com/sysown/proxysql/pull/3343,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3343,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3344,2021-03-16T08:10:33Z,2021-03-16T21:15:07Z,2021-06-04T08:21:34Z,MERGED,True,101,0,2,https://github.com/JavierJF,Closes #3247: Make mycli able to connect to Admin interface,3,[],https://github.com/sysown/proxysql/pull/3344,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3344,Closes #3247.,Closes #3247.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3345,2021-03-16T09:52:28Z,2021-03-16T21:19:51Z,2021-06-04T08:21:53Z,MERGED,True,7,0,1,https://github.com/JavierJF,Closes #1614: Added extra logging suggesting solution when 'bind()' fails due to 'EADDRNOTAVAIL',1,[],https://github.com/sysown/proxysql/pull/3345,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3345,Closes #1614.,Closes #1614.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3347,2021-03-16T16:58:43Z,2021-03-16T21:14:43Z,2021-03-16T21:14:44Z,MERGED,True,18,6,2,https://github.com/renecannao,Fixing an inifinite loop in case of multi-statements and closed backend connection,1,[],https://github.com/sysown/proxysql/pull/3347,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3347,"If a backend connection was terminated in the middle of the execution of multiple
statements in a multi-statements command, the worker thread was entering an infinite loop.
Furthermore, this commit disables query retry in case of multi-statements if the first one
completed successfully
This fixes #3339","If a backend connection was terminated in the middle of the execution of multiple
statements in a multi-statements command, the worker thread was entering an infinite loop.
Furthermore, this commit disables query retry in case of multi-statements if the first one
completed successfully
This fixes #3339",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3347,2021-03-16T16:58:43Z,2021-03-16T21:14:43Z,2021-03-16T21:14:44Z,MERGED,True,18,6,2,https://github.com/renecannao,Fixing an inifinite loop in case of multi-statements and closed backend connection,1,[],https://github.com/sysown/proxysql/pull/3347,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3347#issuecomment-800582705,"If a backend connection was terminated in the middle of the execution of multiple
statements in a multi-statements command, the worker thread was entering an infinite loop.
Furthermore, this commit disables query retry in case of multi-statements if the first one
completed successfully
This fixes #3339",Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3348,2021-03-16T21:14:23Z,2021-03-16T22:18:22Z,2021-06-04T08:21:35Z,MERGED,True,18,6,2,https://github.com/renecannao,Fixing an inifinite loop in case of multi-statements and closed backend connection,1,[],https://github.com/sysown/proxysql/pull/3348,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3348,"If a backend connection was terminated in the middle of the execution of multiple
statements in a multi-statements command, the worker thread was entering an infinite loop.
Furthermore, this commit disables query retry in case of multi-statements if the first one
completed successfully
This fixes #3339
This commit is the port to 2.1 of 90a4922","If a backend connection was terminated in the middle of the execution of multiple
statements in a multi-statements command, the worker thread was entering an infinite loop.
Furthermore, this commit disables query retry in case of multi-statements if the first one
completed successfully
This fixes #3339
This commit is the port to 2.1 of 90a4922",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3349,2021-03-18T00:42:10Z,2021-03-20T17:24:18Z,2021-06-04T08:21:36Z,MERGED,True,204,27,4,https://github.com/renecannao,Optimizations for instances with a lot of hostgroups,3,[],https://github.com/sysown/proxysql/pull/3349,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3349,"This PR speeds up performance in MySQL_HostGroups_Manager if there are a lot of servers/hostgroups.
Specifically:

MySQL_HostGroups_Manager::read_only_action() can scale hundreds or thousands of times. This avoid unnecessary connection pool locks
MySQL_HostGroups_Manager::HGC_lookup() uses an unordered_map in case there are more than 100 hostgroups","This PR speeds up performance in MySQL_HostGroups_Manager if there are a lot of servers/hostgroups.
Specifically:

MySQL_HostGroups_Manager::read_only_action() can scale hundreds or thousands of times. This avoid unnecessary connection pool locks
MySQL_HostGroups_Manager::HGC_lookup() uses an unordered_map in case there are more than 100 hostgroups",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3351,2021-03-18T15:23:11Z,2021-03-20T17:24:44Z,2021-03-20T17:24:44Z,MERGED,True,118,1,2,https://github.com/JavierJF,"Closes #3350: Memory leak reported by Valgrind in ''MySQL_Protocol::get_binds_from_pkt""",2,[],https://github.com/sysown/proxysql/pull/3351,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3351,"Closes #3350.
Clean Valgrind output after fix:
valgrind-log-fixed.txt","Closes #3350.
Clean Valgrind output after fix:
valgrind-log-fixed.txt",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3351,2021-03-18T15:23:11Z,2021-03-20T17:24:44Z,2021-03-20T17:24:44Z,MERGED,True,118,1,2,https://github.com/JavierJF,"Closes #3350: Memory leak reported by Valgrind in ''MySQL_Protocol::get_binds_from_pkt""",2,[],https://github.com/sysown/proxysql/pull/3351,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3351#issuecomment-802117917,"Closes #3350.
Clean Valgrind output after fix:
valgrind-log-fixed.txt",Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3352,2021-03-18T15:38:37Z,2021-03-20T17:24:56Z,2021-06-04T08:21:36Z,MERGED,True,116,0,2,https://github.com/JavierJF,"Closes #3350: Memory leak reported by Valgrind in ''MySQL_Protocol::get_binds_from_pkt""",2,[],https://github.com/sysown/proxysql/pull/3352,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3352,"Closes #3350.
Clean Valgrind output after fix:
valgrind-log-fixed-2.txt","Closes #3350.
Clean Valgrind output after fix:
valgrind-log-fixed-2.txt",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3353,2021-03-18T16:33:05Z,2021-03-24T23:56:50Z,2021-06-04T08:21:38Z,MERGED,True,18,29,7,https://github.com/renecannao,Deprecate mysql-forward_autocommit #3253,2,[],https://github.com/sysown/proxysql/pull/3353,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3353,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3355,2021-03-18T19:59:16Z,2021-03-20T17:35:23Z,2021-03-20T17:35:23Z,MERGED,True,2,9,1,https://github.com/JavierJF,Closes #3354: Improve handling of replication issues for test 'reg_test_1574-stmt_metadata-t',1,[],https://github.com/sysown/proxysql/pull/3355,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3355,Closes #3354.,Closes #3354.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3356,2021-03-18T23:56:01Z,2021-03-23T21:58:21Z,2021-06-04T08:21:31Z,MERGED,True,2,1,1,https://github.com/JavierJF,Closes #3354: Improve handling of replication issues for test 'reg_test_1574-stmt_metadata-t',1,[],https://github.com/sysown/proxysql/pull/3356,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3356,Closes #3354.,Closes #3354.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3358,2021-03-19T09:42:27Z,2021-03-23T21:58:33Z,2021-06-04T08:21:30Z,MERGED,True,62,0,5,https://github.com/JavierJF,Closes #3357: Port 'v1.4.14-show-warnings' branch into v2.1.1 and add new mysql-variable to control it ,1,[],https://github.com/sysown/proxysql/pull/3358,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3358,Closes #3357.,Closes #3357.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3359,2021-03-19T10:10:55Z,,2022-03-10T21:49:50Z,OPEN,False,618,3,11,https://github.com/JavierJF,Closes #3207: Add new variable 'mysql-tls_version' controlling the 'tls versions' allowed for client connections,11,[],https://github.com/sysown/proxysql/pull/3359,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3359,Closes #3207.,Closes #3207.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3359,2021-03-19T10:10:55Z,,2022-03-10T21:49:50Z,OPEN,False,618,3,11,https://github.com/JavierJF,Closes #3207: Add new variable 'mysql-tls_version' controlling the 'tls versions' allowed for client connections,11,[],https://github.com/sysown/proxysql/pull/3359,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3359#issuecomment-807403512,Closes #3207.,Retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3359,2021-03-19T10:10:55Z,,2022-03-10T21:49:50Z,OPEN,False,618,3,11,https://github.com/JavierJF,Closes #3207: Add new variable 'mysql-tls_version' controlling the 'tls versions' allowed for client connections,11,[],https://github.com/sysown/proxysql/pull/3359,https://github.com/JavierJF,3,https://github.com/sysown/proxysql/pull/3359#issuecomment-879266073,Closes #3207.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3359,2021-03-19T10:10:55Z,,2022-03-10T21:49:50Z,OPEN,False,618,3,11,https://github.com/JavierJF,Closes #3207: Add new variable 'mysql-tls_version' controlling the 'tls versions' allowed for client connections,11,[],https://github.com/sysown/proxysql/pull/3359,https://github.com/JavierJF,4,https://github.com/sysown/proxysql/pull/3359#issuecomment-1015887207,Closes #3207.,Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3359,2021-03-19T10:10:55Z,,2022-03-10T21:49:50Z,OPEN,False,618,3,11,https://github.com/JavierJF,Closes #3207: Add new variable 'mysql-tls_version' controlling the 'tls versions' allowed for client connections,11,[],https://github.com/sysown/proxysql/pull/3359,https://github.com/pondix,5,https://github.com/sysown/proxysql/pull/3359#issuecomment-1064536657,Closes #3207.,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3364,2021-03-23T01:31:16Z,2021-03-23T21:57:50Z,2021-06-04T08:21:29Z,MERGED,True,7,3,1,https://github.com/renecannao,Avoid crash in MySQL_Result_to_MySQL_wire without myds #3363,1,[],https://github.com/sysown/proxysql/pull/3364,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3364,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3366,2021-03-23T18:25:17Z,,2021-03-23T18:26:39Z,OPEN,False,242,144,8,https://github.com/rrangith,Dry run ProxySQL query rules,1,[],https://github.com/sysown/proxysql/pull/3366,https://github.com/rrangith,1,https://github.com/sysown/proxysql/pull/3366,"Issue: #3367
This PR allows ProxySQL's query rules to be in dry run mode. When a rule is in dry run mode, the rule would not actually perform its action, it would simply log matched queries and the action that would have been taken. Once an author is confident that their rule is working correctly, they can change the rule from dry run mode to active mode, where the rule would actually take action.
This PR only adds dry run modes for reject, rewrite, and reroute rules (error_msg, replace_pattern, destination_hostgroup).
Here is what query rule modes would look like:

If this method of defining dry run query rules is not preferred, an alternative solution would be to add a  dryrun column.
An additional field has been added to query logging output only in JSON mode. The field is called query_rule_info, and contains a JSON blob potentially containing the following sub-fields (some or all may be present):
query_rule_id: id in the mysql_query_rules table
query_rule_active: ""true"" or ""false"", based on active in the mysql_query_rules table
original_query: if the rule is active and pattern replacement has been done, this is the original query before replacement
rewritten_query: if the rule is active and pattern replacement has been done, this is the query executed
dry_run_original_query: if the rule is inactive and pattern replacement would be done, this is the original query before replacement
dry_run_rewritten_query: if the rule is inactive and pattern replacement would be done, this would be the new query after replacement
This is what example JSON would look like:
{
  ""client"": ""172.22.0.1:48966"",
  ""digest"": ""0x242E0927FD9A4850"",
  ""duration_us"": 0,
  ""endtime"": ""2020-09-30 19:31:26.913234"",
  ""endtime_timestamp_us"": 1601494286913234,
  ""event"": ""COM_QUERY"",
  ""hostgroup_id"": 0,
  ""query"": ""select 4, @@server_id"",
  ""query_rule_info"": ""{\""dry_run_hostgroup\"":1,\""dry_run_original_query\"":\""select 4, @@server_id\"",\""dry_run_rewritten_query\"":\""select 400, @@server_id\"",\""query_rule_active\"":false,\""query_rule_id\"":104}"",
  ""rows_affected"": 0,
  ""rows_sent"": 1,
  ""schemaname"": ""demo"",
  ""server"": ""mysql-m1:3306"",
  ""starttime"": ""2020-09-30 19:31:26.913234"",
  ""starttime_timestamp_us"": 1601494286913234,
  ""thread_id"": 1,
  ""username"": ""app_writer""
}

Additional logging enhancement that can be broken up into a separate PR:
This PR also adds the ability to log to stderr. You would simply set eventslog_format=3 in mysql_variables through proxysql.cnf or the admin console. This makes viewing logs much easier than going through a file and will avoid any issues that come with filling up the disk when writing logs to a file.
The logs will only happen on the nth query matching each rule, where n is any power of 2. If this behaviour isn't desired, it can be removed or put behind a variable that will let users choose whether they want logs to happen all the time or only on powers of 2.
Original author: @saunderst","Issue: #3367
This PR allows ProxySQL's query rules to be in dry run mode. When a rule is in dry run mode, the rule would not actually perform its action, it would simply log matched queries and the action that would have been taken. Once an author is confident that their rule is working correctly, they can change the rule from dry run mode to active mode, where the rule would actually take action.
This PR only adds dry run modes for reject, rewrite, and reroute rules (error_msg, replace_pattern, destination_hostgroup).
Here is what query rule modes would look like:

If this method of defining dry run query rules is not preferred, an alternative solution would be to add a  dryrun column.
An additional field has been added to query logging output only in JSON mode. The field is called query_rule_info, and contains a JSON blob potentially containing the following sub-fields (some or all may be present):
query_rule_id: id in the mysql_query_rules table
query_rule_active: ""true"" or ""false"", based on active in the mysql_query_rules table
original_query: if the rule is active and pattern replacement has been done, this is the original query before replacement
rewritten_query: if the rule is active and pattern replacement has been done, this is the query executed
dry_run_original_query: if the rule is inactive and pattern replacement would be done, this is the original query before replacement
dry_run_rewritten_query: if the rule is inactive and pattern replacement would be done, this would be the new query after replacement
This is what example JSON would look like:
{
  ""client"": ""172.22.0.1:48966"",
  ""digest"": ""0x242E0927FD9A4850"",
  ""duration_us"": 0,
  ""endtime"": ""2020-09-30 19:31:26.913234"",
  ""endtime_timestamp_us"": 1601494286913234,
  ""event"": ""COM_QUERY"",
  ""hostgroup_id"": 0,
  ""query"": ""select 4, @@server_id"",
  ""query_rule_info"": ""{\""dry_run_hostgroup\"":1,\""dry_run_original_query\"":\""select 4, @@server_id\"",\""dry_run_rewritten_query\"":\""select 400, @@server_id\"",\""query_rule_active\"":false,\""query_rule_id\"":104}"",
  ""rows_affected"": 0,
  ""rows_sent"": 1,
  ""schemaname"": ""demo"",
  ""server"": ""mysql-m1:3306"",
  ""starttime"": ""2020-09-30 19:31:26.913234"",
  ""starttime_timestamp_us"": 1601494286913234,
  ""thread_id"": 1,
  ""username"": ""app_writer""
}

Additional logging enhancement that can be broken up into a separate PR:
This PR also adds the ability to log to stderr. You would simply set eventslog_format=3 in mysql_variables through proxysql.cnf or the admin console. This makes viewing logs much easier than going through a file and will avoid any issues that come with filling up the disk when writing logs to a file.
The logs will only happen on the nth query matching each rule, where n is any power of 2. If this behaviour isn't desired, it can be removed or put behind a variable that will let users choose whether they want logs to happen all the time or only on powers of 2.
Original author: @saunderst",True,"{'ROCKET': ['https://github.com/yakirgb', 'https://github.com/otooi', 'https://github.com/axl89'], 'EYES': ['https://github.com/axl89']}"
sysown/proxysql,https://github.com/sysown/proxysql,3366,2021-03-23T18:25:17Z,,2021-03-23T18:26:39Z,OPEN,False,242,144,8,https://github.com/rrangith,Dry run ProxySQL query rules,1,[],https://github.com/sysown/proxysql/pull/3366,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/3366#issuecomment-805130425,"Issue: #3367
This PR allows ProxySQL's query rules to be in dry run mode. When a rule is in dry run mode, the rule would not actually perform its action, it would simply log matched queries and the action that would have been taken. Once an author is confident that their rule is working correctly, they can change the rule from dry run mode to active mode, where the rule would actually take action.
This PR only adds dry run modes for reject, rewrite, and reroute rules (error_msg, replace_pattern, destination_hostgroup).
Here is what query rule modes would look like:

If this method of defining dry run query rules is not preferred, an alternative solution would be to add a  dryrun column.
An additional field has been added to query logging output only in JSON mode. The field is called query_rule_info, and contains a JSON blob potentially containing the following sub-fields (some or all may be present):
query_rule_id: id in the mysql_query_rules table
query_rule_active: ""true"" or ""false"", based on active in the mysql_query_rules table
original_query: if the rule is active and pattern replacement has been done, this is the original query before replacement
rewritten_query: if the rule is active and pattern replacement has been done, this is the query executed
dry_run_original_query: if the rule is inactive and pattern replacement would be done, this is the original query before replacement
dry_run_rewritten_query: if the rule is inactive and pattern replacement would be done, this would be the new query after replacement
This is what example JSON would look like:
{
  ""client"": ""172.22.0.1:48966"",
  ""digest"": ""0x242E0927FD9A4850"",
  ""duration_us"": 0,
  ""endtime"": ""2020-09-30 19:31:26.913234"",
  ""endtime_timestamp_us"": 1601494286913234,
  ""event"": ""COM_QUERY"",
  ""hostgroup_id"": 0,
  ""query"": ""select 4, @@server_id"",
  ""query_rule_info"": ""{\""dry_run_hostgroup\"":1,\""dry_run_original_query\"":\""select 4, @@server_id\"",\""dry_run_rewritten_query\"":\""select 400, @@server_id\"",\""query_rule_active\"":false,\""query_rule_id\"":104}"",
  ""rows_affected"": 0,
  ""rows_sent"": 1,
  ""schemaname"": ""demo"",
  ""server"": ""mysql-m1:3306"",
  ""starttime"": ""2020-09-30 19:31:26.913234"",
  ""starttime_timestamp_us"": 1601494286913234,
  ""thread_id"": 1,
  ""username"": ""app_writer""
}

Additional logging enhancement that can be broken up into a separate PR:
This PR also adds the ability to log to stderr. You would simply set eventslog_format=3 in mysql_variables through proxysql.cnf or the admin console. This makes viewing logs much easier than going through a file and will avoid any issues that come with filling up the disk when writing logs to a file.
The logs will only happen on the nth query matching each rule, where n is any power of 2. If this behaviour isn't desired, it can be removed or put behind a variable that will let users choose whether they want logs to happen all the time or only on powers of 2.
Original author: @saunderst",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3368,2021-03-23T19:03:00Z,2021-03-24T20:26:32Z,2021-06-04T08:21:27Z,MERGED,True,209,0,2,https://github.com/JavierJF,Closes #2543: Admin and C# driver,3,[],https://github.com/sysown/proxysql/pull/3368,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3368,"Closes #2543.
Attached can be found a simple C# program (compressed together with the project file) that connect to admin to perform a simple query, probing that the addition of the two queries allows a connection from the C# driver.
proxysql_2543_csharp_test_program.tar.gz","Closes #2543.
Attached can be found a simple C# program (compressed together with the project file) that connect to admin to perform a simple query, probing that the addition of the two queries allows a connection from the C# driver.
proxysql_2543_csharp_test_program.tar.gz",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3368,2021-03-23T19:03:00Z,2021-03-24T20:26:32Z,2021-06-04T08:21:27Z,MERGED,True,209,0,2,https://github.com/JavierJF,Closes #2543: Admin and C# driver,3,[],https://github.com/sysown/proxysql/pull/3368,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3368#issuecomment-805292196,"Closes #2543.
Attached can be found a simple C# program (compressed together with the project file) that connect to admin to perform a simple query, probing that the addition of the two queries allows a connection from the C# driver.
proxysql_2543_csharp_test_program.tar.gz","In mysql:
mysql> SET time_zone='+00:00';
Query OK, 0 rows affected (0.00 sec)

mysql> SELECT TIMEDIFF(NOW(), UTC_TIMESTAMP());
+----------------------------------+
| TIMEDIFF(NOW(), UTC_TIMESTAMP()) |
+----------------------------------+
| 00:00:00                         |
+----------------------------------+
1 row in set (0.00 sec)

On CI server:
ok 1 - Query ""SELECT TIMEDIFF(NOW(), UTC_TIMESTAMP())"" should succeed.
ok 2 - Output received for ""SELECT TIMEDIFF(NOW(), UTC_TIMESTAMP())"" was: :00:00

Therefore if the system is on UTC , the output is actually incorrect",True,{'THUMBS_UP': ['https://github.com/JavierJF']}
sysown/proxysql,https://github.com/sysown/proxysql,3368,2021-03-23T19:03:00Z,2021-03-24T20:26:32Z,2021-06-04T08:21:27Z,MERGED,True,209,0,2,https://github.com/JavierJF,Closes #2543: Admin and C# driver,3,[],https://github.com/sysown/proxysql/pull/3368,https://github.com/JavierJF,3,https://github.com/sysown/proxysql/pull/3368#issuecomment-805300099,"Closes #2543.
Attached can be found a simple C# program (compressed together with the project file) that connect to admin to perform a simple query, probing that the addition of the two queries allows a connection from the C# driver.
proxysql_2543_csharp_test_program.tar.gz",@renecannao the edge case... thanks for the catch.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3370,2021-03-24T17:56:23Z,2021-03-24T20:40:17Z,2021-06-04T08:21:25Z,MERGED,True,1,1,1,https://github.com/JavierJF,Closes #3369: Crash due to unhandled exception when trying to enable 'restapi' in Centos 6,1,[],https://github.com/sysown/proxysql/pull/3370,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3370,closes #3369.,closes #3369.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3373,2021-03-25T23:13:14Z,2021-03-26T14:06:02Z,2021-06-04T08:21:25Z,MERGED,True,1,18,2,https://github.com/renecannao,"Revert ""Build libmariaclient with debug""",1,[],https://github.com/sysown/proxysql/pull/3373,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3373,This reverts commit da7fdfe.,This reverts commit da7fdfe.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3374,2021-03-25T23:14:36Z,2021-03-26T14:05:51Z,2021-03-26T14:05:51Z,MERGED,True,1,16,2,https://github.com/renecannao,"Revert ""Build libmariaclient with debug""",1,[],https://github.com/sysown/proxysql/pull/3374,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3374,This reverts commit da7fdfe.,This reverts commit da7fdfe.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3375,2021-03-26T09:08:10Z,2021-03-30T13:57:09Z,2021-03-30T13:57:46Z,CLOSED,False,246,1,4,https://github.com/JavierJF,Closes #3184: Unable to parse unknown 'SET @@wait_timeout = ?',3,[],https://github.com/sysown/proxysql/pull/3375,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3375,closes #3184.,closes #3184.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3375,2021-03-26T09:08:10Z,2021-03-30T13:57:09Z,2021-03-30T13:57:46Z,CLOSED,False,246,1,4,https://github.com/JavierJF,Closes #3184: Unable to parse unknown 'SET @@wait_timeout = ?',3,[],https://github.com/sysown/proxysql/pull/3375,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3375#issuecomment-810275748,closes #3184.,Replaced with #3381,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3377,2021-03-26T15:12:46Z,2021-03-26T15:12:57Z,2021-06-04T08:21:20Z,MERGED,True,18,1,2,https://github.com/renecannao,"Revert ""Revert ""Build libmariaclient with debug""""",1,[],https://github.com/sysown/proxysql/pull/3377,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3377,Reverts #3373,Reverts #3373,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3378,2021-03-26T15:13:19Z,2021-03-26T15:13:25Z,2021-03-26T15:13:25Z,MERGED,True,16,1,2,https://github.com/renecannao,"Revert ""Revert ""Build libmariaclient with debug""""",1,[],https://github.com/sysown/proxysql/pull/3378,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3378,Reverts #3374,Reverts #3374,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3380,2021-03-26T22:20:42Z,2021-03-26T22:52:16Z,2021-06-04T08:21:18Z,MERGED,True,21,40,9,https://github.com/renecannao,Revert libmariaclient with debug,3,[],https://github.com/sysown/proxysql/pull/3380,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3380,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3381,2021-03-26T23:00:38Z,2021-03-29T21:27:31Z,2021-06-04T08:21:15Z,MERGED,True,278,6,6,https://github.com/renecannao,"Parse ""SET wait_timeout"" #3184",9,[],https://github.com/sysown/proxysql/pull/3381,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3381,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3382,2021-03-27T05:28:59Z,2021-03-27T13:37:27Z,2021-03-27T13:37:27Z,CLOSED,False,91,37,6,https://github.com/bskllzh,add parameter monitor_sbm_when_null_algorithmÔºåwhen max_replication_lag > monitor_slave_lag_when_nullÔºå solve  set slave online when this slave seconds_behind_master is null,7,[],https://github.com/sysown/proxysql/pull/3382,https://github.com/bskllzh,1,https://github.com/sysown/proxysql/pull/3382,"add parameter monitor_sbm_when_null_algorithmÔºåwhen max_replication_lag > monitor_slave_lag_when_nullÔºå solve  set slave online problem when this slave seconds_behind_master is null. 

 monitor_sbm_when_null_algorithmÔºö 
          true-- when seconds_behind_master(sbm) is null, use new algorithm, 
          false --- use monitor_slave_lag_when_null,  backward compatible.","add parameter monitor_sbm_when_null_algorithmÔºåwhen max_replication_lag > monitor_slave_lag_when_nullÔºå solve  set slave online problem when this slave seconds_behind_master is null. 

 monitor_sbm_when_null_algorithmÔºö 
          true-- when seconds_behind_master(sbm) is null, use new algorithm, 
          false --- use monitor_slave_lag_when_null,  backward compatible.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3384,2021-03-27T14:58:06Z,2021-03-28T12:18:51Z,2021-03-28T12:18:51Z,CLOSED,False,94,38,6,https://github.com/bskllzh,add parameter monitor_sbm_when_null_algorithmÔºåwhen max_replication_lag > monitor_slave_lag_when_nullÔºå solve set slave online when this slave seconds_behind_master is null,6,[],https://github.com/sysown/proxysql/pull/3384,https://github.com/bskllzh,1,https://github.com/sysown/proxysql/pull/3384,"version: proxysql 2.1.1   mysql:  master - slave
problem:
when set  max_replication_lag > monitor_slave_lag_when_null , and if this slave seconds_behind_master is null,  this host status is online  in the proxysql.
SolutionÔºö
add parameter monitor_sbm_when_null_algorithmÔºåwhen max_replication_lag > monitor_slave_lag_when_nullÔºå solve  set slave online problem when this slave seconds_behind_master is null.
monitor_sbm_when_null_algorithmÔºö
true-- when seconds_behind_master(sbm) is null,  use new algorithm,
false --- use monitor_slave_lag_when_null,   backward compatible.","version: proxysql 2.1.1   mysql:  master - slave
problem:
when set  max_replication_lag > monitor_slave_lag_when_null , and if this slave seconds_behind_master is null,  this host status is online  in the proxysql.
SolutionÔºö
add parameter monitor_sbm_when_null_algorithmÔºåwhen max_replication_lag > monitor_slave_lag_when_nullÔºå solve  set slave online problem when this slave seconds_behind_master is null.
monitor_sbm_when_null_algorithmÔºö
true-- when seconds_behind_master(sbm) is null,  use new algorithm,
false --- use monitor_slave_lag_when_null,   backward compatible.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3384,2021-03-27T14:58:06Z,2021-03-28T12:18:51Z,2021-03-28T12:18:51Z,CLOSED,False,94,38,6,https://github.com/bskllzh,add parameter monitor_sbm_when_null_algorithmÔºåwhen max_replication_lag > monitor_slave_lag_when_nullÔºå solve set slave online when this slave seconds_behind_master is null,6,[],https://github.com/sysown/proxysql/pull/3384,https://github.com/bskllzh,2,https://github.com/sysown/proxysql/pull/3384#issuecomment-808750227,"version: proxysql 2.1.1   mysql:  master - slave
problem:
when set  max_replication_lag > monitor_slave_lag_when_null , and if this slave seconds_behind_master is null,  this host status is online  in the proxysql.
SolutionÔºö
add parameter monitor_sbm_when_null_algorithmÔºåwhen max_replication_lag > monitor_slave_lag_when_nullÔºå solve  set slave online problem when this slave seconds_behind_master is null.
monitor_sbm_when_null_algorithmÔºö
true-- when seconds_behind_master(sbm) is null,  use new algorithm,
false --- use monitor_slave_lag_when_null,   backward compatible.","@pondix,  why always  build failing.  But i can build sucessfully on my environment with the same code. Please help me and check it.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3385,2021-03-28T13:01:02Z,2021-03-29T14:15:29Z,2021-03-29T14:15:29Z,CLOSED,False,93,37,6,https://github.com/bskllzh,Fix and control the correct state of the slave when seconds_behind_master is null(max_replication_lag > monitor_slave_lag_when_null) by add parameter monitor_sbm_when_null_algorithm,6,[],https://github.com/sysown/proxysql/pull/3385,https://github.com/bskllzh,1,https://github.com/sysown/proxysql/pull/3385,"version: proxysql 2.1.1   mysql: master - slave
problem:
when set max_replication_lag > monitor_slave_lag_when_null , and if this slave seconds_behind_master is null, this host status is online in the proxysql.
SolutionÔºö
add parameter monitor_sbm_when_null_algorithmÔºåwhen max_replication_lag > monitor_slave_lag_when_nullÔºå solve set slave online problem when this slave seconds_behind_master is null.
monitor_sbm_when_null_algorithmÔºö
true-- when seconds_behind_master(sbm) is null, use new algorithm,
false --- use monitor_slave_lag_when_null, backward compatible.","version: proxysql 2.1.1   mysql: master - slave
problem:
when set max_replication_lag > monitor_slave_lag_when_null , and if this slave seconds_behind_master is null, this host status is online in the proxysql.
SolutionÔºö
add parameter monitor_sbm_when_null_algorithmÔºåwhen max_replication_lag > monitor_slave_lag_when_nullÔºå solve set slave online problem when this slave seconds_behind_master is null.
monitor_sbm_when_null_algorithmÔºö
true-- when seconds_behind_master(sbm) is null, use new algorithm,
false --- use monitor_slave_lag_when_null, backward compatible.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3386,2021-03-29T15:54:14Z,,2022-03-10T21:49:47Z,OPEN,False,96,40,6,https://github.com/bskllzh,Fix  the correct state of the slave when seconds_behind_master is null(max_replication_lag > monitor_slave_lag_when_null) by add parameter monitor_sbm_when_null_algorithm,6,[],https://github.com/sysown/proxysql/pull/3386,https://github.com/bskllzh,1,https://github.com/sysown/proxysql/pull/3386,"version: proxysql 2.1.1 mysql: master - slave
bug and problems description:
When set this parameter max_replication_lag(mysql_servers)  > monitor_slave_lag_when_null , and if this slave seconds_behind_master is null,  this server status is online in the proxysql.
Test situationÔºö
when  set max_replication_lag =70 in the server(IP: 192.168.10.12),  and max_replication_lag > monitor_slave_lag_when_null(default value: 60), and this server status is online.  Howerver the seconds_behind_master(sbm) of this slave server(192.168.10.12) is null, and this proxysql should set  the server status shunned.
mysql> select hostgroup_id, hostname, port, status, max_replication_lag from runtime_mysql_servers;
+--------------+-----------+-------+--------+---------------------+
| hostgroup_id | hostname  | port  | status | max_replication_lag |
+--------------+-----------+-------+-----------+--------+---------------------+
| 10            | 192.168.10.10 | 3306  | ONLINE | 1                     |
|  20           | 192.168.10.10 | 3306  | ONLINE | 10                   |
|  20           | 192.168.10.11 | 3306  | ONLINE | 10                   |
|  20           | 192.168.10.12 | 3306  | ONLINE | 70                   |
+--------------+-----------+-------+-----------+--------+---------------------+
**bux and problems fix: **
Based on issue #3288, #3290,  add a parameter monitor_sbm_when_null_algorithmÔºåwhen max_replication_lag > monitor_slave_lag_when_nullÔºå solve the correct setting of the status of the slave server that seconds_behind_master of this server is null.
The parameter monitor_sbm_when_null_algorithmÔºö
True--     when seconds_behind_master(sbm) is null, use new algorithm,
False --- use monitor_slave_lag_when_null, backward compatible.","version: proxysql 2.1.1 mysql: master - slave
bug and problems description:
When set this parameter max_replication_lag(mysql_servers)  > monitor_slave_lag_when_null , and if this slave seconds_behind_master is null,  this server status is online in the proxysql.
Test situationÔºö
when  set max_replication_lag =70 in the server(IP: 192.168.10.12),  and max_replication_lag > monitor_slave_lag_when_null(default value: 60), and this server status is online.  Howerver the seconds_behind_master(sbm) of this slave server(192.168.10.12) is null, and this proxysql should set  the server status shunned.
mysql> select hostgroup_id, hostname, port, status, max_replication_lag from runtime_mysql_servers;
+--------------+-----------+-------+--------+---------------------+
| hostgroup_id | hostname  | port  | status | max_replication_lag |
+--------------+-----------+-------+-----------+--------+---------------------+
| 10            | 192.168.10.10 | 3306  | ONLINE | 1                     |
|  20           | 192.168.10.10 | 3306  | ONLINE | 10                   |
|  20           | 192.168.10.11 | 3306  | ONLINE | 10                   |
|  20           | 192.168.10.12 | 3306  | ONLINE | 70                   |
+--------------+-----------+-------+-----------+--------+---------------------+
**bux and problems fix: **
Based on issue #3288, #3290,  add a parameter monitor_sbm_when_null_algorithmÔºåwhen max_replication_lag > monitor_slave_lag_when_nullÔºå solve the correct setting of the status of the slave server that seconds_behind_master of this server is null.
The parameter monitor_sbm_when_null_algorithmÔºö
True--     when seconds_behind_master(sbm) is null, use new algorithm,
False --- use monitor_slave_lag_when_null, backward compatible.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3386,2021-03-29T15:54:14Z,,2022-03-10T21:49:47Z,OPEN,False,96,40,6,https://github.com/bskllzh,Fix  the correct state of the slave when seconds_behind_master is null(max_replication_lag > monitor_slave_lag_when_null) by add parameter monitor_sbm_when_null_algorithm,6,[],https://github.com/sysown/proxysql/pull/3386,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3386#issuecomment-809498330,"version: proxysql 2.1.1 mysql: master - slave
bug and problems description:
When set this parameter max_replication_lag(mysql_servers)  > monitor_slave_lag_when_null , and if this slave seconds_behind_master is null,  this server status is online in the proxysql.
Test situationÔºö
when  set max_replication_lag =70 in the server(IP: 192.168.10.12),  and max_replication_lag > monitor_slave_lag_when_null(default value: 60), and this server status is online.  Howerver the seconds_behind_master(sbm) of this slave server(192.168.10.12) is null, and this proxysql should set  the server status shunned.
mysql> select hostgroup_id, hostname, port, status, max_replication_lag from runtime_mysql_servers;
+--------------+-----------+-------+--------+---------------------+
| hostgroup_id | hostname  | port  | status | max_replication_lag |
+--------------+-----------+-------+-----------+--------+---------------------+
| 10            | 192.168.10.10 | 3306  | ONLINE | 1                     |
|  20           | 192.168.10.10 | 3306  | ONLINE | 10                   |
|  20           | 192.168.10.11 | 3306  | ONLINE | 10                   |
|  20           | 192.168.10.12 | 3306  | ONLINE | 70                   |
+--------------+-----------+-------+-----------+--------+---------------------+
**bux and problems fix: **
Based on issue #3288, #3290,  add a parameter monitor_sbm_when_null_algorithmÔºåwhen max_replication_lag > monitor_slave_lag_when_nullÔºå solve the correct setting of the status of the slave server that seconds_behind_master of this server is null.
The parameter monitor_sbm_when_null_algorithmÔºö
True--     when seconds_behind_master(sbm) is null, use new algorithm,
False --- use monitor_slave_lag_when_null, backward compatible.",@bskllzh : why don't you simply configure mysql-monitor_slave_lag_when_null to a higher value than the default?,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3386,2021-03-29T15:54:14Z,,2022-03-10T21:49:47Z,OPEN,False,96,40,6,https://github.com/bskllzh,Fix  the correct state of the slave when seconds_behind_master is null(max_replication_lag > monitor_slave_lag_when_null) by add parameter monitor_sbm_when_null_algorithm,6,[],https://github.com/sysown/proxysql/pull/3386,https://github.com/bskllzh,3,https://github.com/sysown/proxysql/pull/3386#issuecomment-809522786,"version: proxysql 2.1.1 mysql: master - slave
bug and problems description:
When set this parameter max_replication_lag(mysql_servers)  > monitor_slave_lag_when_null , and if this slave seconds_behind_master is null,  this server status is online in the proxysql.
Test situationÔºö
when  set max_replication_lag =70 in the server(IP: 192.168.10.12),  and max_replication_lag > monitor_slave_lag_when_null(default value: 60), and this server status is online.  Howerver the seconds_behind_master(sbm) of this slave server(192.168.10.12) is null, and this proxysql should set  the server status shunned.
mysql> select hostgroup_id, hostname, port, status, max_replication_lag from runtime_mysql_servers;
+--------------+-----------+-------+--------+---------------------+
| hostgroup_id | hostname  | port  | status | max_replication_lag |
+--------------+-----------+-------+-----------+--------+---------------------+
| 10            | 192.168.10.10 | 3306  | ONLINE | 1                     |
|  20           | 192.168.10.10 | 3306  | ONLINE | 10                   |
|  20           | 192.168.10.11 | 3306  | ONLINE | 10                   |
|  20           | 192.168.10.12 | 3306  | ONLINE | 70                   |
+--------------+-----------+-------+-----------+--------+---------------------+
**bux and problems fix: **
Based on issue #3288, #3290,  add a parameter monitor_sbm_when_null_algorithmÔºåwhen max_replication_lag > monitor_slave_lag_when_nullÔºå solve the correct setting of the status of the slave server that seconds_behind_master of this server is null.
The parameter monitor_sbm_when_null_algorithmÔºö
True--     when seconds_behind_master(sbm) is null, use new algorithm,
False --- use monitor_slave_lag_when_null, backward compatible.","@renecannao ,Thank you for your reply. For those who use proxysql for the first time, they may forget the configuration parameter monitor_slave_lag_when_null,  which needs to be greater than max_replication_lag.  This will cause proxysql to run incorrectly. So I added this new feature to solve it.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3386,2021-03-29T15:54:14Z,,2022-03-10T21:49:47Z,OPEN,False,96,40,6,https://github.com/bskllzh,Fix  the correct state of the slave when seconds_behind_master is null(max_replication_lag > monitor_slave_lag_when_null) by add parameter monitor_sbm_when_null_algorithm,6,[],https://github.com/sysown/proxysql/pull/3386,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/3386#issuecomment-809525718,"version: proxysql 2.1.1 mysql: master - slave
bug and problems description:
When set this parameter max_replication_lag(mysql_servers)  > monitor_slave_lag_when_null , and if this slave seconds_behind_master is null,  this server status is online in the proxysql.
Test situationÔºö
when  set max_replication_lag =70 in the server(IP: 192.168.10.12),  and max_replication_lag > monitor_slave_lag_when_null(default value: 60), and this server status is online.  Howerver the seconds_behind_master(sbm) of this slave server(192.168.10.12) is null, and this proxysql should set  the server status shunned.
mysql> select hostgroup_id, hostname, port, status, max_replication_lag from runtime_mysql_servers;
+--------------+-----------+-------+--------+---------------------+
| hostgroup_id | hostname  | port  | status | max_replication_lag |
+--------------+-----------+-------+-----------+--------+---------------------+
| 10            | 192.168.10.10 | 3306  | ONLINE | 1                     |
|  20           | 192.168.10.10 | 3306  | ONLINE | 10                   |
|  20           | 192.168.10.11 | 3306  | ONLINE | 10                   |
|  20           | 192.168.10.12 | 3306  | ONLINE | 70                   |
+--------------+-----------+-------+-----------+--------+---------------------+
**bux and problems fix: **
Based on issue #3288, #3290,  add a parameter monitor_sbm_when_null_algorithmÔºåwhen max_replication_lag > monitor_slave_lag_when_nullÔºå solve the correct setting of the status of the slave server that seconds_behind_master of this server is null.
The parameter monitor_sbm_when_null_algorithmÔºö
True--     when seconds_behind_master(sbm) is null, use new algorithm,
False --- use monitor_slave_lag_when_null, backward compatible.","@bskllzh ,  this doesn't seem very intuitive to me.
You are adding extra features (and extra complexity too) to address misconfiguration from users.
You could suggest to increase the default, or make the error log more verbose, but adding a new feature seems an unnecessary complication.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3386,2021-03-29T15:54:14Z,,2022-03-10T21:49:47Z,OPEN,False,96,40,6,https://github.com/bskllzh,Fix  the correct state of the slave when seconds_behind_master is null(max_replication_lag > monitor_slave_lag_when_null) by add parameter monitor_sbm_when_null_algorithm,6,[],https://github.com/sysown/proxysql/pull/3386,https://github.com/bskllzh,5,https://github.com/sysown/proxysql/pull/3386#issuecomment-809532881,"version: proxysql 2.1.1 mysql: master - slave
bug and problems description:
When set this parameter max_replication_lag(mysql_servers)  > monitor_slave_lag_when_null , and if this slave seconds_behind_master is null,  this server status is online in the proxysql.
Test situationÔºö
when  set max_replication_lag =70 in the server(IP: 192.168.10.12),  and max_replication_lag > monitor_slave_lag_when_null(default value: 60), and this server status is online.  Howerver the seconds_behind_master(sbm) of this slave server(192.168.10.12) is null, and this proxysql should set  the server status shunned.
mysql> select hostgroup_id, hostname, port, status, max_replication_lag from runtime_mysql_servers;
+--------------+-----------+-------+--------+---------------------+
| hostgroup_id | hostname  | port  | status | max_replication_lag |
+--------------+-----------+-------+-----------+--------+---------------------+
| 10            | 192.168.10.10 | 3306  | ONLINE | 1                     |
|  20           | 192.168.10.10 | 3306  | ONLINE | 10                   |
|  20           | 192.168.10.11 | 3306  | ONLINE | 10                   |
|  20           | 192.168.10.12 | 3306  | ONLINE | 70                   |
+--------------+-----------+-------+-----------+--------+---------------------+
**bux and problems fix: **
Based on issue #3288, #3290,  add a parameter monitor_sbm_when_null_algorithmÔºåwhen max_replication_lag > monitor_slave_lag_when_nullÔºå solve the correct setting of the status of the slave server that seconds_behind_master of this server is null.
The parameter monitor_sbm_when_null_algorithmÔºö
True--     when seconds_behind_master(sbm) is null, use new algorithm,
False --- use monitor_slave_lag_when_null, backward compatible.","@renecannao Ôºåthe original version(proxysql version 2.1.1 and below) notified users of parameter configuration errors by printing error logs, but this has already affected the production environment. Therefore, I added the parameter monitor_sbm_when_null_algorithm to let users choose to use the new feature or use the old model.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3386,2021-03-29T15:54:14Z,,2022-03-10T21:49:47Z,OPEN,False,96,40,6,https://github.com/bskllzh,Fix  the correct state of the slave when seconds_behind_master is null(max_replication_lag > monitor_slave_lag_when_null) by add parameter monitor_sbm_when_null_algorithm,6,[],https://github.com/sysown/proxysql/pull/3386,https://github.com/renecannao,6,https://github.com/sysown/proxysql/pull/3386#issuecomment-809536924,"version: proxysql 2.1.1 mysql: master - slave
bug and problems description:
When set this parameter max_replication_lag(mysql_servers)  > monitor_slave_lag_when_null , and if this slave seconds_behind_master is null,  this server status is online in the proxysql.
Test situationÔºö
when  set max_replication_lag =70 in the server(IP: 192.168.10.12),  and max_replication_lag > monitor_slave_lag_when_null(default value: 60), and this server status is online.  Howerver the seconds_behind_master(sbm) of this slave server(192.168.10.12) is null, and this proxysql should set  the server status shunned.
mysql> select hostgroup_id, hostname, port, status, max_replication_lag from runtime_mysql_servers;
+--------------+-----------+-------+--------+---------------------+
| hostgroup_id | hostname  | port  | status | max_replication_lag |
+--------------+-----------+-------+-----------+--------+---------------------+
| 10            | 192.168.10.10 | 3306  | ONLINE | 1                     |
|  20           | 192.168.10.10 | 3306  | ONLINE | 10                   |
|  20           | 192.168.10.11 | 3306  | ONLINE | 10                   |
|  20           | 192.168.10.12 | 3306  | ONLINE | 70                   |
+--------------+-----------+-------+-----------+--------+---------------------+
**bux and problems fix: **
Based on issue #3288, #3290,  add a parameter monitor_sbm_when_null_algorithmÔºåwhen max_replication_lag > monitor_slave_lag_when_nullÔºå solve the correct setting of the status of the slave server that seconds_behind_master of this server is null.
The parameter monitor_sbm_when_null_algorithmÔºö
True--     when seconds_behind_master(sbm) is null, use new algorithm,
False --- use monitor_slave_lag_when_null, backward compatible.","@bskllzh : I don't understand how adding an extra variable can make the configuration simpler.
To me, it makes the configuration even more complex and not intuitive.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3386,2021-03-29T15:54:14Z,,2022-03-10T21:49:47Z,OPEN,False,96,40,6,https://github.com/bskllzh,Fix  the correct state of the slave when seconds_behind_master is null(max_replication_lag > monitor_slave_lag_when_null) by add parameter monitor_sbm_when_null_algorithm,6,[],https://github.com/sysown/proxysql/pull/3386,https://github.com/bskllzh,7,https://github.com/sysown/proxysql/pull/3386#issuecomment-809821346,"version: proxysql 2.1.1 mysql: master - slave
bug and problems description:
When set this parameter max_replication_lag(mysql_servers)  > monitor_slave_lag_when_null , and if this slave seconds_behind_master is null,  this server status is online in the proxysql.
Test situationÔºö
when  set max_replication_lag =70 in the server(IP: 192.168.10.12),  and max_replication_lag > monitor_slave_lag_when_null(default value: 60), and this server status is online.  Howerver the seconds_behind_master(sbm) of this slave server(192.168.10.12) is null, and this proxysql should set  the server status shunned.
mysql> select hostgroup_id, hostname, port, status, max_replication_lag from runtime_mysql_servers;
+--------------+-----------+-------+--------+---------------------+
| hostgroup_id | hostname  | port  | status | max_replication_lag |
+--------------+-----------+-------+-----------+--------+---------------------+
| 10            | 192.168.10.10 | 3306  | ONLINE | 1                     |
|  20           | 192.168.10.10 | 3306  | ONLINE | 10                   |
|  20           | 192.168.10.11 | 3306  | ONLINE | 10                   |
|  20           | 192.168.10.12 | 3306  | ONLINE | 70                   |
+--------------+-----------+-------+-----------+--------+---------------------+
**bux and problems fix: **
Based on issue #3288, #3290,  add a parameter monitor_sbm_when_null_algorithmÔºåwhen max_replication_lag > monitor_slave_lag_when_nullÔºå solve the correct setting of the status of the slave server that seconds_behind_master of this server is null.
The parameter monitor_sbm_when_null_algorithmÔºö
True--     when seconds_behind_master(sbm) is null, use new algorithm,
False --- use monitor_slave_lag_when_null, backward compatible.","@renecannao , the main reason for adding this new feature is that proxysql can automatically handle exception without requiring user access. The parameter can be discarded later mysql-moniter_slave_lag_when_null.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3386,2021-03-29T15:54:14Z,,2022-03-10T21:49:47Z,OPEN,False,96,40,6,https://github.com/bskllzh,Fix  the correct state of the slave when seconds_behind_master is null(max_replication_lag > monitor_slave_lag_when_null) by add parameter monitor_sbm_when_null_algorithm,6,[],https://github.com/sysown/proxysql/pull/3386,https://github.com/pondix,8,https://github.com/sysown/proxysql/pull/3386#issuecomment-1064536619,"version: proxysql 2.1.1 mysql: master - slave
bug and problems description:
When set this parameter max_replication_lag(mysql_servers)  > monitor_slave_lag_when_null , and if this slave seconds_behind_master is null,  this server status is online in the proxysql.
Test situationÔºö
when  set max_replication_lag =70 in the server(IP: 192.168.10.12),  and max_replication_lag > monitor_slave_lag_when_null(default value: 60), and this server status is online.  Howerver the seconds_behind_master(sbm) of this slave server(192.168.10.12) is null, and this proxysql should set  the server status shunned.
mysql> select hostgroup_id, hostname, port, status, max_replication_lag from runtime_mysql_servers;
+--------------+-----------+-------+--------+---------------------+
| hostgroup_id | hostname  | port  | status | max_replication_lag |
+--------------+-----------+-------+-----------+--------+---------------------+
| 10            | 192.168.10.10 | 3306  | ONLINE | 1                     |
|  20           | 192.168.10.10 | 3306  | ONLINE | 10                   |
|  20           | 192.168.10.11 | 3306  | ONLINE | 10                   |
|  20           | 192.168.10.12 | 3306  | ONLINE | 70                   |
+--------------+-----------+-------+-----------+--------+---------------------+
**bux and problems fix: **
Based on issue #3288, #3290,  add a parameter monitor_sbm_when_null_algorithmÔºåwhen max_replication_lag > monitor_slave_lag_when_nullÔºå solve the correct setting of the status of the slave server that seconds_behind_master of this server is null.
The parameter monitor_sbm_when_null_algorithmÔºö
True--     when seconds_behind_master(sbm) is null, use new algorithm,
False --- use monitor_slave_lag_when_null, backward compatible.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3387,2021-03-29T19:02:58Z,2021-03-30T13:21:48Z,2021-06-04T08:21:17Z,MERGED,True,85,0,2,https://github.com/JavierJF,Closes #833: Return ERR when receiving 'LOAD DATA LOCAL INFILE',2,[],https://github.com/sysown/proxysql/pull/3387,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3387,closes #833.,closes #833.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3392,2021-04-02T08:36:16Z,2021-04-06T20:05:55Z,2021-06-04T08:21:14Z,MERGED,True,6,0,1,https://github.com/JavierJF,Closes #3342: ProxySQL reset connection if it starts with COM_QUIT,1,[],https://github.com/sysown/proxysql/pull/3392,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3392,closes #3342.,closes #3342.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3392,2021-04-02T08:36:16Z,2021-04-06T20:05:55Z,2021-06-04T08:21:14Z,MERGED,True,6,0,1,https://github.com/JavierJF,Closes #3342: ProxySQL reset connection if it starts with COM_QUIT,1,[],https://github.com/sysown/proxysql/pull/3392,https://github.com/spumer,2,https://github.com/sysown/proxysql/pull/3392#issuecomment-814809766,closes #3342.,"So, when you plan release 2.1.1? :)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3394,2021-04-06T08:01:36Z,2021-04-06T20:05:40Z,2021-06-04T08:21:12Z,MERGED,True,13,5,1,https://github.com/JavierJF,Closes #3182: Handling of pxc_maint_mode drops active connections,1,[],https://github.com/sysown/proxysql/pull/3394,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3394,closes #3182.,closes #3182.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3395,2021-04-06T14:26:17Z,2021-04-06T20:06:07Z,2021-04-06T20:06:08Z,MERGED,True,13,5,1,https://github.com/JavierJF,Closes #3182: Handling of pxc_maint_mode drops active connections,1,[],https://github.com/sysown/proxysql/pull/3395,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3395,closes #3182.,closes #3182.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3395,2021-04-06T14:26:17Z,2021-04-06T20:06:07Z,2021-04-06T20:06:08Z,MERGED,True,13,5,1,https://github.com/JavierJF,Closes #3182: Handling of pxc_maint_mode drops active connections,1,[],https://github.com/sysown/proxysql/pull/3395,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3395#issuecomment-814201406,closes #3182.,Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3396,2021-04-06T14:28:17Z,2021-04-06T20:06:37Z,2021-04-06T20:06:37Z,MERGED,True,6,0,1,https://github.com/JavierJF,Closes #3342: ProxySQL reset connection if it starts with COM_QUIT,1,[],https://github.com/sysown/proxysql/pull/3396,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3396,closes #3342.,closes #3342.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3400,2021-04-09T16:06:46Z,,2021-04-09T18:45:03Z,OPEN,False,227,3,2,https://github.com/BlackYoup,libinjection: apply python3 patch,1,[],https://github.com/sysown/proxysql/pull/3400,https://github.com/BlackYoup,1,https://github.com/sysown/proxysql/pull/3400,"Hello,
This PR uses the patch provided by @fila43 in the linked issues. I'm not really sure how this goes with licensing and all so feel free to close this if it is not compliant.
Patch taken from https://fjanus.fedorapeople.org/libinjection_python2_to_3.patch
I actually didn't see that libinjection was forked to https://github.com/libinjection/libinjection. I updated the patch which I took from libinjection/libinjection#8. I modified it to match the differences between the 3.10.0 release and the main branch of the libinjection repo. Only the /usr/bin/env python2 lines were changed to /usr/bin/env python.
Fix #2561 #2985","Hello,
This PR uses the patch provided by @fila43 in the linked issues. I'm not really sure how this goes with licensing and all so feel free to close this if it is not compliant.
Patch taken from https://fjanus.fedorapeople.org/libinjection_python2_to_3.patch
I actually didn't see that libinjection was forked to https://github.com/libinjection/libinjection. I updated the patch which I took from libinjection/libinjection#8. I modified it to match the differences between the 3.10.0 release and the main branch of the libinjection repo. Only the /usr/bin/env python2 lines were changed to /usr/bin/env python.
Fix #2561 #2985",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3400,2021-04-09T16:06:46Z,,2021-04-09T18:45:03Z,OPEN,False,227,3,2,https://github.com/BlackYoup,libinjection: apply python3 patch,1,[],https://github.com/sysown/proxysql/pull/3400,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/3400#issuecomment-816789953,"Hello,
This PR uses the patch provided by @fila43 in the linked issues. I'm not really sure how this goes with licensing and all so feel free to close this if it is not compliant.
Patch taken from https://fjanus.fedorapeople.org/libinjection_python2_to_3.patch
I actually didn't see that libinjection was forked to https://github.com/libinjection/libinjection. I updated the patch which I took from libinjection/libinjection#8. I modified it to match the differences between the 3.10.0 release and the main branch of the libinjection repo. Only the /usr/bin/env python2 lines were changed to /usr/bin/env python.
Fix #2561 #2985",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3401,2021-04-09T17:47:57Z,,2021-04-09T17:48:03Z,OPEN,False,39,0,2,https://github.com/BlackYoup,"libinjection: patch backport: use CC, LD and AR from environment if available",1,[],https://github.com/sysown/proxysql/pull/3401,https://github.com/BlackYoup,1,https://github.com/sysown/proxysql/pull/3401,"Hello,
This commit uses a patch sent to libinjection/libinjection#15
Let me know how you feel about this.","Hello,
This commit uses a patch sent to libinjection/libinjection#15
Let me know how you feel about this.",True,{'THUMBS_UP': ['https://github.com/zimmerle']}
sysown/proxysql,https://github.com/sysown/proxysql,3401,2021-04-09T17:47:57Z,,2021-04-09T17:48:03Z,OPEN,False,39,0,2,https://github.com/BlackYoup,"libinjection: patch backport: use CC, LD and AR from environment if available",1,[],https://github.com/sysown/proxysql/pull/3401,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/3401#issuecomment-816850158,"Hello,
This commit uses a patch sent to libinjection/libinjection#15
Let me know how you feel about this.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3402,2021-04-09T18:20:04Z,2022-01-21T21:26:02Z,2022-01-21T21:26:03Z,CLOSED,False,25,0,2,https://github.com/BlackYoup,mariadb_client: backport patch to fix syntax error in cmake 3.20,1,[],https://github.com/sysown/proxysql/pull/3402,https://github.com/BlackYoup,1,https://github.com/sysown/proxysql/pull/3402,"Hello,
This backports commit mariadb-corporation/mariadb-connector-c@242cab8 from mariadb-connector-c to fix builds using cmake >= 3.20. The error without this patch is:
-- TLS library/version: OpenSSL 1.1.1j
-- SYSTEM_LIBS dl;m;pthread;pthread;dl;m;/home/arnaud/Dev/clevercloud/tmp/proxysql/deps/libssl/openssl/lib/libssl.so;/home/arnaud/Dev/clevercloud/t
mp/proxysql/deps/libssl/openssl/lib/libcrypto.so                         
-- Dynamic column API support: ON                                        
-- SYSTEM processor: x86_64                                              
CMake Error at cmake/ConnectorName.cmake:30 (ENDMACRO):              
  Flow control statements are not properly nested.
Call Stack (most recent call first):                                                                                                               
  CMakeLists.txt:434 (INCLUDE)                                                                                                                     
                                    
                                                                         
-- Configuring incomplete, errors occurred!                  
See also ""/home/arnaud/Dev/clevercloud/tmp/proxysql/deps/mariadb-client-library/mariadb_client/CMakeFiles/CMakeOutput.log"".
See also ""/home/arnaud/Dev/clevercloud/tmp/proxysql/deps/mariadb-client-library/mariadb_client/CMakeFiles/CMakeError.log"".
make: *** [Makefile:171: mariadb-client-library/mariadb_client/libmariadb/libmariadbclient.a] Error 1

This commit is not yet in a mysql-connector-c release but I guess will be included in the next one. In the meantime, this patch fixes the issue.","Hello,
This backports commit mariadb-corporation/mariadb-connector-c@242cab8 from mariadb-connector-c to fix builds using cmake >= 3.20. The error without this patch is:
-- TLS library/version: OpenSSL 1.1.1j
-- SYSTEM_LIBS dl;m;pthread;pthread;dl;m;/home/arnaud/Dev/clevercloud/tmp/proxysql/deps/libssl/openssl/lib/libssl.so;/home/arnaud/Dev/clevercloud/t
mp/proxysql/deps/libssl/openssl/lib/libcrypto.so                         
-- Dynamic column API support: ON                                        
-- SYSTEM processor: x86_64                                              
CMake Error at cmake/ConnectorName.cmake:30 (ENDMACRO):              
  Flow control statements are not properly nested.
Call Stack (most recent call first):                                                                                                               
  CMakeLists.txt:434 (INCLUDE)                                                                                                                     
                                    
                                                                         
-- Configuring incomplete, errors occurred!                  
See also ""/home/arnaud/Dev/clevercloud/tmp/proxysql/deps/mariadb-client-library/mariadb_client/CMakeFiles/CMakeOutput.log"".
See also ""/home/arnaud/Dev/clevercloud/tmp/proxysql/deps/mariadb-client-library/mariadb_client/CMakeFiles/CMakeError.log"".
make: *** [Makefile:171: mariadb-client-library/mariadb_client/libmariadb/libmariadbclient.a] Error 1

This commit is not yet in a mysql-connector-c release but I guess will be included in the next one. In the meantime, this patch fixes the issue.",True,"{'THUMBS_UP': ['https://github.com/ajs124', 'https://github.com/llchan']}"
sysown/proxysql,https://github.com/sysown/proxysql,3402,2021-04-09T18:20:04Z,2022-01-21T21:26:02Z,2022-01-21T21:26:03Z,CLOSED,False,25,0,2,https://github.com/BlackYoup,mariadb_client: backport patch to fix syntax error in cmake 3.20,1,[],https://github.com/sysown/proxysql/pull/3402,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/3402#issuecomment-816871849,"Hello,
This backports commit mariadb-corporation/mariadb-connector-c@242cab8 from mariadb-connector-c to fix builds using cmake >= 3.20. The error without this patch is:
-- TLS library/version: OpenSSL 1.1.1j
-- SYSTEM_LIBS dl;m;pthread;pthread;dl;m;/home/arnaud/Dev/clevercloud/tmp/proxysql/deps/libssl/openssl/lib/libssl.so;/home/arnaud/Dev/clevercloud/t
mp/proxysql/deps/libssl/openssl/lib/libcrypto.so                         
-- Dynamic column API support: ON                                        
-- SYSTEM processor: x86_64                                              
CMake Error at cmake/ConnectorName.cmake:30 (ENDMACRO):              
  Flow control statements are not properly nested.
Call Stack (most recent call first):                                                                                                               
  CMakeLists.txt:434 (INCLUDE)                                                                                                                     
                                    
                                                                         
-- Configuring incomplete, errors occurred!                  
See also ""/home/arnaud/Dev/clevercloud/tmp/proxysql/deps/mariadb-client-library/mariadb_client/CMakeFiles/CMakeOutput.log"".
See also ""/home/arnaud/Dev/clevercloud/tmp/proxysql/deps/mariadb-client-library/mariadb_client/CMakeFiles/CMakeError.log"".
make: *** [Makefile:171: mariadb-client-library/mariadb_client/libmariadb/libmariadbclient.a] Error 1

This commit is not yet in a mysql-connector-c release but I guess will be included in the next one. In the meantime, this patch fixes the issue.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3402,2021-04-09T18:20:04Z,2022-01-21T21:26:02Z,2022-01-21T21:26:03Z,CLOSED,False,25,0,2,https://github.com/BlackYoup,mariadb_client: backport patch to fix syntax error in cmake 3.20,1,[],https://github.com/sysown/proxysql/pull/3402,https://github.com/ajs124,3,https://github.com/sysown/proxysql/pull/3402#issuecomment-924902054,"Hello,
This backports commit mariadb-corporation/mariadb-connector-c@242cab8 from mariadb-connector-c to fix builds using cmake >= 3.20. The error without this patch is:
-- TLS library/version: OpenSSL 1.1.1j
-- SYSTEM_LIBS dl;m;pthread;pthread;dl;m;/home/arnaud/Dev/clevercloud/tmp/proxysql/deps/libssl/openssl/lib/libssl.so;/home/arnaud/Dev/clevercloud/t
mp/proxysql/deps/libssl/openssl/lib/libcrypto.so                         
-- Dynamic column API support: ON                                        
-- SYSTEM processor: x86_64                                              
CMake Error at cmake/ConnectorName.cmake:30 (ENDMACRO):              
  Flow control statements are not properly nested.
Call Stack (most recent call first):                                                                                                               
  CMakeLists.txt:434 (INCLUDE)                                                                                                                     
                                    
                                                                         
-- Configuring incomplete, errors occurred!                  
See also ""/home/arnaud/Dev/clevercloud/tmp/proxysql/deps/mariadb-client-library/mariadb_client/CMakeFiles/CMakeOutput.log"".
See also ""/home/arnaud/Dev/clevercloud/tmp/proxysql/deps/mariadb-client-library/mariadb_client/CMakeFiles/CMakeError.log"".
make: *** [Makefile:171: mariadb-client-library/mariadb_client/libmariadb/libmariadbclient.a] Error 1

This commit is not yet in a mysql-connector-c release but I guess will be included in the next one. In the meantime, this patch fixes the issue.",We've also just ran into this. Would be nice if someone could take a look at it.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3402,2021-04-09T18:20:04Z,2022-01-21T21:26:02Z,2022-01-21T21:26:03Z,CLOSED,False,25,0,2,https://github.com/BlackYoup,mariadb_client: backport patch to fix syntax error in cmake 3.20,1,[],https://github.com/sysown/proxysql/pull/3402,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/3402#issuecomment-1018875970,"Hello,
This backports commit mariadb-corporation/mariadb-connector-c@242cab8 from mariadb-connector-c to fix builds using cmake >= 3.20. The error without this patch is:
-- TLS library/version: OpenSSL 1.1.1j
-- SYSTEM_LIBS dl;m;pthread;pthread;dl;m;/home/arnaud/Dev/clevercloud/tmp/proxysql/deps/libssl/openssl/lib/libssl.so;/home/arnaud/Dev/clevercloud/t
mp/proxysql/deps/libssl/openssl/lib/libcrypto.so                         
-- Dynamic column API support: ON                                        
-- SYSTEM processor: x86_64                                              
CMake Error at cmake/ConnectorName.cmake:30 (ENDMACRO):              
  Flow control statements are not properly nested.
Call Stack (most recent call first):                                                                                                               
  CMakeLists.txt:434 (INCLUDE)                                                                                                                     
                                    
                                                                         
-- Configuring incomplete, errors occurred!                  
See also ""/home/arnaud/Dev/clevercloud/tmp/proxysql/deps/mariadb-client-library/mariadb_client/CMakeFiles/CMakeOutput.log"".
See also ""/home/arnaud/Dev/clevercloud/tmp/proxysql/deps/mariadb-client-library/mariadb_client/CMakeFiles/CMakeError.log"".
make: *** [Makefile:171: mariadb-client-library/mariadb_client/libmariadb/libmariadbclient.a] Error 1

This commit is not yet in a mysql-connector-c release but I guess will be included in the next one. In the meantime, this patch fixes the issue.","Closing because fixed in pr #3715
Thank you nonetheless!",True,{'THUMBS_UP': ['https://github.com/BlackYoup']}
sysown/proxysql,https://github.com/sysown/proxysql,3405,2021-04-15T19:29:55Z,2021-05-10T19:35:04Z,2021-05-10T19:35:04Z,MERGED,True,1,0,1,https://github.com/kornrunner,re2: with -fPIC,1,[],https://github.com/sysown/proxysql/pull/3405,https://github.com/kornrunner,1,https://github.com/sysown/proxysql/pull/3405,"Pass a flag to generate position-independent code for re2
This might be ArchLinux specific, but I don't think it should break anything else.","Pass a flag to generate position-independent code for re2
This might be ArchLinux specific, but I don't think it should break anything else.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3405,2021-04-15T19:29:55Z,2021-05-10T19:35:04Z,2021-05-10T19:35:04Z,MERGED,True,1,0,1,https://github.com/kornrunner,re2: with -fPIC,1,[],https://github.com/sysown/proxysql/pull/3405,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/3405#issuecomment-820679414,"Pass a flag to generate position-independent code for re2
This might be ArchLinux specific, but I don't think it should break anything else.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3405,2021-04-15T19:29:55Z,2021-05-10T19:35:04Z,2021-05-10T19:35:04Z,MERGED,True,1,0,1,https://github.com/kornrunner,re2: with -fPIC,1,[],https://github.com/sysown/proxysql/pull/3405,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3405#issuecomment-825532238,"Pass a flag to generate position-independent code for re2
This might be ArchLinux specific, but I don't think it should break anything else.",test this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3407,2021-04-17T13:14:40Z,2021-05-03T10:07:01Z,2021-05-03T10:07:01Z,CLOSED,False,115,2,7,https://github.com/bskllzh,Fix and add a new offline soft status in the slave server of the mysql mgr when it is lagging,9,[],https://github.com/sysown/proxysql/pull/3407,https://github.com/bskllzh,1,https://github.com/sysown/proxysql/pull/3407,"version: proxysql 2.1.1    mysql: mysql group replication(mysql mgr 8.0.21, single master)
Problems description:
When the proxysql find the slave of the mgr cluster of mysql that is lagging(lag_counts >= mysql_thread___monitor_groupreplication_max_transactions_behind_count), the proxysql would drop all sql conntection that is running. This is not suitable, because this cause an interruption to the application that the user is using.  By add a parameter monitor_offline_soft_or_shunned, when set true,  set this slave status: offline soft, that  allow the sql being executed to continue to run to completion, and new incoming connections aren't accepted anymore.   When set false,  backward compatible. That is the update_group_replication_set_offline func is executed,  and drop all sql conntection that is running.
Test situationÔºö
when set the parameter monitor_offline_soft_or_shunned true,  and when transactions_behind(gr_member_routing_candidate_status  view)  > max_transactions_behind in the mysql_group_replication_hostgroups table.
mysql> select hostgroup_id, hostname, port, status from runtime_mysql_servers;
+--------------+-----------+-------+--------+
| hostgroup_id | hostname | port | status |
+--------------+-----------+-------+-----------+
| 10 | 192.168.10.10 | 3306 | ONLINE |
| 20 | 192.168.10.10 | 3306 | ONLINE |
| 20 | 192.168.10.11 | 3306 | OFFLINE_SOFT |
| 20 | 192.168.10.12 | 3306 | OFFLINE_SOFT |
+--------------+-----------+-------+-----------+
hostgroup_id: 10 -- write group , 20 -- read group
**Problems fix: **
Based on issue #2151,#2849,#2578, add the parameter monitor_offline_soft_or_shunnedÔºö
True-- set OFFLINE_SOFT in the slave when this is lagging in the mgr.
False --- use  backward compatible, drop all sql conntection that is running","version: proxysql 2.1.1    mysql: mysql group replication(mysql mgr 8.0.21, single master)
Problems description:
When the proxysql find the slave of the mgr cluster of mysql that is lagging(lag_counts >= mysql_thread___monitor_groupreplication_max_transactions_behind_count), the proxysql would drop all sql conntection that is running. This is not suitable, because this cause an interruption to the application that the user is using.  By add a parameter monitor_offline_soft_or_shunned, when set true,  set this slave status: offline soft, that  allow the sql being executed to continue to run to completion, and new incoming connections aren't accepted anymore.   When set false,  backward compatible. That is the update_group_replication_set_offline func is executed,  and drop all sql conntection that is running.
Test situationÔºö
when set the parameter monitor_offline_soft_or_shunned true,  and when transactions_behind(gr_member_routing_candidate_status  view)  > max_transactions_behind in the mysql_group_replication_hostgroups table.
mysql> select hostgroup_id, hostname, port, status from runtime_mysql_servers;
+--------------+-----------+-------+--------+
| hostgroup_id | hostname | port | status |
+--------------+-----------+-------+-----------+
| 10 | 192.168.10.10 | 3306 | ONLINE |
| 20 | 192.168.10.10 | 3306 | ONLINE |
| 20 | 192.168.10.11 | 3306 | OFFLINE_SOFT |
| 20 | 192.168.10.12 | 3306 | OFFLINE_SOFT |
+--------------+-----------+-------+-----------+
hostgroup_id: 10 -- write group , 20 -- read group
**Problems fix: **
Based on issue #2151,#2849,#2578, add the parameter monitor_offline_soft_or_shunnedÔºö
True-- set OFFLINE_SOFT in the slave when this is lagging in the mgr.
False --- use  backward compatible, drop all sql conntection that is running",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3407,2021-04-17T13:14:40Z,2021-05-03T10:07:01Z,2021-05-03T10:07:01Z,CLOSED,False,115,2,7,https://github.com/bskllzh,Fix and add a new offline soft status in the slave server of the mysql mgr when it is lagging,9,[],https://github.com/sysown/proxysql/pull/3407,https://github.com/bskllzh,2,https://github.com/sysown/proxysql/pull/3407#issuecomment-825566823,"version: proxysql 2.1.1    mysql: mysql group replication(mysql mgr 8.0.21, single master)
Problems description:
When the proxysql find the slave of the mgr cluster of mysql that is lagging(lag_counts >= mysql_thread___monitor_groupreplication_max_transactions_behind_count), the proxysql would drop all sql conntection that is running. This is not suitable, because this cause an interruption to the application that the user is using.  By add a parameter monitor_offline_soft_or_shunned, when set true,  set this slave status: offline soft, that  allow the sql being executed to continue to run to completion, and new incoming connections aren't accepted anymore.   When set false,  backward compatible. That is the update_group_replication_set_offline func is executed,  and drop all sql conntection that is running.
Test situationÔºö
when set the parameter monitor_offline_soft_or_shunned true,  and when transactions_behind(gr_member_routing_candidate_status  view)  > max_transactions_behind in the mysql_group_replication_hostgroups table.
mysql> select hostgroup_id, hostname, port, status from runtime_mysql_servers;
+--------------+-----------+-------+--------+
| hostgroup_id | hostname | port | status |
+--------------+-----------+-------+-----------+
| 10 | 192.168.10.10 | 3306 | ONLINE |
| 20 | 192.168.10.10 | 3306 | ONLINE |
| 20 | 192.168.10.11 | 3306 | OFFLINE_SOFT |
| 20 | 192.168.10.12 | 3306 | OFFLINE_SOFT |
+--------------+-----------+-------+-----------+
hostgroup_id: 10 -- write group , 20 -- read group
**Problems fix: **
Based on issue #2151,#2849,#2578, add the parameter monitor_offline_soft_or_shunnedÔºö
True-- set OFFLINE_SOFT in the slave when this is lagging in the mgr.
False --- use  backward compatible, drop all sql conntection that is running","@renecannao , please review this PR.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3414,2021-04-22T15:26:11Z,2021-04-23T09:48:42Z,2021-06-04T08:15:17Z,MERGED,True,5,3,1,https://github.com/JavierJF,Closes #3406: 'gr_member_routing_candidate_status.viable_candidate' return NULL causes infinite crash reboot,1,['bug'],https://github.com/sysown/proxysql/pull/3414,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3414,closes #3406.,closes #3406.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3416,2021-04-23T06:48:02Z,2021-04-23T06:48:16Z,2021-04-23T06:48:16Z,CLOSED,False,3,1,1,https://github.com/JavierJF,Closes #3412: Generated CA certificate rejected by MySQL client with VERIFY_CA,1,[],https://github.com/sysown/proxysql/pull/3416,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3416,closes #3412.,closes #3412.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3417,2021-04-23T06:49:25Z,2021-04-23T09:49:22Z,2021-06-04T08:15:18Z,MERGED,True,15,2,1,https://github.com/JavierJF,Closes #3412: Generated CA certificate rejected by MySQL client with VERIFY_CA ,2,['bug'],https://github.com/sysown/proxysql/pull/3417,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3417,closes #3412.,closes #3412.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3420,2021-04-27T07:29:38Z,2021-05-17T09:20:33Z,2021-06-04T08:15:06Z,MERGED,True,359,8,7,https://github.com/JavierJF,Closes #3419: Add cluster synchronization support for global 'ldap-%' variables and 'mysql_ldap_mapping' provided by 'ldap_auth_plugin' ,6,['Feature request'],https://github.com/sysown/proxysql/pull/3420,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3420,closes #3419.,closes #3419.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3422,2021-04-27T11:36:31Z,2021-05-10T19:34:49Z,2021-06-04T08:15:19Z,MERGED,True,2,9,1,https://github.com/JavierJF,Closes #3376: Invalid timestamps reported for 'first_seen' and 'last_seen' fields from 'stats_mysql_errors',1,['bug'],https://github.com/sysown/proxysql/pull/3422,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3422,"closes #3376.
As a prove of the issue resolution, I'm pasting here the results of analogous operations as the user performed in the report which showed the issue:
mysql> select * from stats_mysql_errors;
+-----------+-----------+-------+----------+----------------+--------------------+-------+------------+------------+------------+----------------------------------------------------+
| hostgroup | hostname  | port  | username | client_address | schemaname         | errno | count_star | first_seen | last_seen  | last_error                                         |
+-----------+-----------+-------+----------+----------------+--------------------+-------+------------+------------+------------+----------------------------------------------------+
| 0         | 127.0.0.1 | 13306 | root     | 127.0.0.1      | information_schema | 1054  | 1          | 1619523458 | 1619523458 | Unknown column 'intentional_error' in 'field list' |
+-----------+-----------+-------+----------+----------------+--------------------+-------+------------+------------+------------+----------------------------------------------------+
1 row in set (0.00 sec)

The converted timestamps of the operation:
mysql> select first_seen, last_seen, from_unixtime(first_seen),from_unixtime(last_seen) from stats_mysql_errors;
+------------+------------+---------------------------+--------------------------+
| first_seen | last_seen  | from_unixtime(first_seen) | from_unixtime(last_seen) |
+------------+------------+---------------------------+--------------------------+
| 1619523458 | 1619523458 | 2021-04-27 11:37:38       | 2021-04-27 11:37:38      |
+------------+------------+---------------------------+--------------------------+

The system timestamp:
$ timedatectl
               Local time: Tue 2021-04-27 13:38:12 CEST
           Universal time: Tue 2021-04-27 11:38:12 UTC
                 RTC time: Tue 2021-04-27 13:38:16
                Time zone: Europe/Madrid (CEST, +0200)
System clock synchronized: no
              NTP service: inactive
          RTC in local TZ: no","closes #3376.
As a prove of the issue resolution, I'm pasting here the results of analogous operations as the user performed in the report which showed the issue:
mysql> select * from stats_mysql_errors;
+-----------+-----------+-------+----------+----------------+--------------------+-------+------------+------------+------------+----------------------------------------------------+
| hostgroup | hostname  | port  | username | client_address | schemaname         | errno | count_star | first_seen | last_seen  | last_error                                         |
+-----------+-----------+-------+----------+----------------+--------------------+-------+------------+------------+------------+----------------------------------------------------+
| 0         | 127.0.0.1 | 13306 | root     | 127.0.0.1      | information_schema | 1054  | 1          | 1619523458 | 1619523458 | Unknown column 'intentional_error' in 'field list' |
+-----------+-----------+-------+----------+----------------+--------------------+-------+------------+------------+------------+----------------------------------------------------+
1 row in set (0.00 sec)

The converted timestamps of the operation:
mysql> select first_seen, last_seen, from_unixtime(first_seen),from_unixtime(last_seen) from stats_mysql_errors;
+------------+------------+---------------------------+--------------------------+
| first_seen | last_seen  | from_unixtime(first_seen) | from_unixtime(last_seen) |
+------------+------------+---------------------------+--------------------------+
| 1619523458 | 1619523458 | 2021-04-27 11:37:38       | 2021-04-27 11:37:38      |
+------------+------------+---------------------------+--------------------------+

The system timestamp:
$ timedatectl
               Local time: Tue 2021-04-27 13:38:12 CEST
           Universal time: Tue 2021-04-27 11:38:12 UTC
                 RTC time: Tue 2021-04-27 13:38:16
                Time zone: Europe/Madrid (CEST, +0200)
System clock synchronized: no
              NTP service: inactive
          RTC in local TZ: no",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3423,2021-04-28T14:57:39Z,2021-05-03T16:41:16Z,2021-05-03T16:41:23Z,MERGED,True,2,2,1,https://github.com/bskllzh,Fix two print errors debug log in commit func,1,[],https://github.com/sysown/proxysql/pull/3423,https://github.com/bskllzh,1,https://github.com/sysown/proxysql/pull/3423,"Fix two print errors debug log in MySQL_HostGroups_Manager::commit func.  For the code at line numbers 1763 and 1770 in the MySQL_HostGroups_Manager::commit function,  the value of the resultset variable comes from the following SQL execution in the debug mode.   

SQL:
SELECT
t1.*,
t2.gtid_port,
t2.weight,
t2.STATUS,
t2.compression,
t2.max_connections,
t2.max_replication_lag,
t2.use_ssl,
t2.max_latency_ms,
t2.COMMENT
FROM
mysql_servers t1
JOIN mysql_servers_incoming t2 ON ( t1.hostgroup_id = t2.hostgroup_id AND t1.hostname = t2.hostname AND t1.PORT = t2.PORT )
WHERE
mem_pointer = 0
OR t1.gtid_port <> t2.gtid_port
OR t1.weight <> t2.weight
OR t1.STATUS <> t2.STATUS
OR t1.compression <> t2.compression
OR t1.max_connections <> t2.max_connections
OR t1.max_replication_lag <> t2.max_replication_lag
OR t1.use_ssl <> t2.use_ssl
OR t1.max_latency_ms <> t2.max_latency_ms
OR t1.COMMENT <> t2.COMMENT
CREATE TABLE mysql_servers (
hostgroup_id INT NOT NULL DEFAULT 0,
hostname VARCHAR NOT NULL,
PORT INT NOT NULL DEFAULT 3306,
gtid_port INT NOT NULL DEFAULT 0,
weight INT CHECK ( weight >= 0 ) NOT NULL DEFAULT 1,
STATUS INT CHECK (STATUS IN ( 0, 1, 2, 3, 4 )) NOT NULL DEFAULT 0,
compression INT CHECK ( compression >= 0 AND compression <= 102400 ) NOT NULL DEFAULT 0,
max_connections INT CHECK ( max_connections >= 0 ) NOT NULL DEFAULT 1000,
max_replication_lag INT CHECK ( max_replication_lag >= 0 AND max_replication_lag <= 126144000 ) NOT NULL DEFAULT 0,
use_ssl INT CHECK (use_ssl IN ( 0, 1 )) NOT NULL DEFAULT 0,
max_latency_ms INT UNSIGNED CHECK ( max_latency_ms >= 0 ) NOT NULL DEFAULT 0,
COMMENT VARCHAR NOT NULL DEFAULT '',
mem_pointer INT NOT NULL DEFAULT 0,
PRIMARY KEY ( hostgroup_id, hostname, PORT )
)","Fix two print errors debug log in MySQL_HostGroups_Manager::commit func.  For the code at line numbers 1763 and 1770 in the MySQL_HostGroups_Manager::commit function,  the value of the resultset variable comes from the following SQL execution in the debug mode.   

SQL:
SELECT
t1.*,
t2.gtid_port,
t2.weight,
t2.STATUS,
t2.compression,
t2.max_connections,
t2.max_replication_lag,
t2.use_ssl,
t2.max_latency_ms,
t2.COMMENT
FROM
mysql_servers t1
JOIN mysql_servers_incoming t2 ON ( t1.hostgroup_id = t2.hostgroup_id AND t1.hostname = t2.hostname AND t1.PORT = t2.PORT )
WHERE
mem_pointer = 0
OR t1.gtid_port <> t2.gtid_port
OR t1.weight <> t2.weight
OR t1.STATUS <> t2.STATUS
OR t1.compression <> t2.compression
OR t1.max_connections <> t2.max_connections
OR t1.max_replication_lag <> t2.max_replication_lag
OR t1.use_ssl <> t2.use_ssl
OR t1.max_latency_ms <> t2.max_latency_ms
OR t1.COMMENT <> t2.COMMENT
CREATE TABLE mysql_servers (
hostgroup_id INT NOT NULL DEFAULT 0,
hostname VARCHAR NOT NULL,
PORT INT NOT NULL DEFAULT 3306,
gtid_port INT NOT NULL DEFAULT 0,
weight INT CHECK ( weight >= 0 ) NOT NULL DEFAULT 1,
STATUS INT CHECK (STATUS IN ( 0, 1, 2, 3, 4 )) NOT NULL DEFAULT 0,
compression INT CHECK ( compression >= 0 AND compression <= 102400 ) NOT NULL DEFAULT 0,
max_connections INT CHECK ( max_connections >= 0 ) NOT NULL DEFAULT 1000,
max_replication_lag INT CHECK ( max_replication_lag >= 0 AND max_replication_lag <= 126144000 ) NOT NULL DEFAULT 0,
use_ssl INT CHECK (use_ssl IN ( 0, 1 )) NOT NULL DEFAULT 0,
max_latency_ms INT UNSIGNED CHECK ( max_latency_ms >= 0 ) NOT NULL DEFAULT 0,
COMMENT VARCHAR NOT NULL DEFAULT '',
mem_pointer INT NOT NULL DEFAULT 0,
PRIMARY KEY ( hostgroup_id, hostname, PORT )
)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3423,2021-04-28T14:57:39Z,2021-05-03T16:41:16Z,2021-05-03T16:41:23Z,MERGED,True,2,2,1,https://github.com/bskllzh,Fix two print errors debug log in commit func,1,[],https://github.com/sysown/proxysql/pull/3423,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3423#issuecomment-831384738,"Fix two print errors debug log in MySQL_HostGroups_Manager::commit func.  For the code at line numbers 1763 and 1770 in the MySQL_HostGroups_Manager::commit function,  the value of the resultset variable comes from the following SQL execution in the debug mode.   

SQL:
SELECT
t1.*,
t2.gtid_port,
t2.weight,
t2.STATUS,
t2.compression,
t2.max_connections,
t2.max_replication_lag,
t2.use_ssl,
t2.max_latency_ms,
t2.COMMENT
FROM
mysql_servers t1
JOIN mysql_servers_incoming t2 ON ( t1.hostgroup_id = t2.hostgroup_id AND t1.hostname = t2.hostname AND t1.PORT = t2.PORT )
WHERE
mem_pointer = 0
OR t1.gtid_port <> t2.gtid_port
OR t1.weight <> t2.weight
OR t1.STATUS <> t2.STATUS
OR t1.compression <> t2.compression
OR t1.max_connections <> t2.max_connections
OR t1.max_replication_lag <> t2.max_replication_lag
OR t1.use_ssl <> t2.use_ssl
OR t1.max_latency_ms <> t2.max_latency_ms
OR t1.COMMENT <> t2.COMMENT
CREATE TABLE mysql_servers (
hostgroup_id INT NOT NULL DEFAULT 0,
hostname VARCHAR NOT NULL,
PORT INT NOT NULL DEFAULT 3306,
gtid_port INT NOT NULL DEFAULT 0,
weight INT CHECK ( weight >= 0 ) NOT NULL DEFAULT 1,
STATUS INT CHECK (STATUS IN ( 0, 1, 2, 3, 4 )) NOT NULL DEFAULT 0,
compression INT CHECK ( compression >= 0 AND compression <= 102400 ) NOT NULL DEFAULT 0,
max_connections INT CHECK ( max_connections >= 0 ) NOT NULL DEFAULT 1000,
max_replication_lag INT CHECK ( max_replication_lag >= 0 AND max_replication_lag <= 126144000 ) NOT NULL DEFAULT 0,
use_ssl INT CHECK (use_ssl IN ( 0, 1 )) NOT NULL DEFAULT 0,
max_latency_ms INT UNSIGNED CHECK ( max_latency_ms >= 0 ) NOT NULL DEFAULT 0,
COMMENT VARCHAR NOT NULL DEFAULT '',
mem_pointer INT NOT NULL DEFAULT 0,
PRIMARY KEY ( hostgroup_id, hostname, PORT )
)","Looks good, thanks!",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3426,2021-04-29T00:53:14Z,2021-05-03T16:42:31Z,2021-05-03T17:20:43Z,MERGED,True,13,13,1,https://github.com/winmutt,Fix floating point exception.,1,['bug'],https://github.com/sysown/proxysql/pull/3426,https://github.com/winmutt,1,https://github.com/sysown/proxysql/pull/3426,"While working with a large number of backends and replication groups with the default monitor_read_only_interval, I was repeatedly hitting floating point exceptions in largely unrepeatable ways. A core dump showed that https://github.com/sysown/proxysql/blob/v2.1.1/lib/MySQL_Monitor.cpp#L2800 was where the exception happened. This proposed fix is perhaps not the most appropriate, an error message might need to be generated or other action needs to happen. In the meantime, increasing monitor_read_only_interval to a reasonable number has corrected my issue.","While working with a large number of backends and replication groups with the default monitor_read_only_interval, I was repeatedly hitting floating point exceptions in largely unrepeatable ways. A core dump showed that https://github.com/sysown/proxysql/blob/v2.1.1/lib/MySQL_Monitor.cpp#L2800 was where the exception happened. This proposed fix is perhaps not the most appropriate, an error message might need to be generated or other action needs to happen. In the meantime, increasing monitor_read_only_interval to a reasonable number has corrected my issue.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3426,2021-04-29T00:53:14Z,2021-05-03T16:42:31Z,2021-05-03T17:20:43Z,MERGED,True,13,13,1,https://github.com/winmutt,Fix floating point exception.,1,['bug'],https://github.com/sysown/proxysql/pull/3426,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/3426#issuecomment-828874865,"While working with a large number of backends and replication groups with the default monitor_read_only_interval, I was repeatedly hitting floating point exceptions in largely unrepeatable ways. A core dump showed that https://github.com/sysown/proxysql/blob/v2.1.1/lib/MySQL_Monitor.cpp#L2800 was where the exception happened. This proposed fix is perhaps not the most appropriate, an error message might need to be generated or other action needs to happen. In the meantime, increasing monitor_read_only_interval to a reasonable number has corrected my issue.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3426,2021-04-29T00:53:14Z,2021-05-03T16:42:31Z,2021-05-03T17:20:43Z,MERGED,True,13,13,1,https://github.com/winmutt,Fix floating point exception.,1,['bug'],https://github.com/sysown/proxysql/pull/3426,https://github.com/JavierJF,3,https://github.com/sysown/proxysql/pull/3426#issuecomment-831385546,"While working with a large number of backends and replication groups with the default monitor_read_only_interval, I was repeatedly hitting floating point exceptions in largely unrepeatable ways. A core dump showed that https://github.com/sysown/proxysql/blob/v2.1.1/lib/MySQL_Monitor.cpp#L2800 was where the exception happened. This proposed fix is perhaps not the most appropriate, an error message might need to be generated or other action needs to happen. In the meantime, increasing monitor_read_only_interval to a reasonable number has corrected my issue.","Merged, thanks for the PR!",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3426,2021-04-29T00:53:14Z,2021-05-03T16:42:31Z,2021-05-03T17:20:43Z,MERGED,True,13,13,1,https://github.com/winmutt,Fix floating point exception.,1,['bug'],https://github.com/sysown/proxysql/pull/3426,https://github.com/winmutt,4,https://github.com/sysown/proxysql/pull/3426#issuecomment-831396858,"While working with a large number of backends and replication groups with the default monitor_read_only_interval, I was repeatedly hitting floating point exceptions in largely unrepeatable ways. A core dump showed that https://github.com/sysown/proxysql/blob/v2.1.1/lib/MySQL_Monitor.cpp#L2800 was where the exception happened. This proposed fix is perhaps not the most appropriate, an error message might need to be generated or other action needs to happen. In the meantime, increasing monitor_read_only_interval to a reasonable number has corrected my issue.",Will this be backported to 2.1.x or should I open a PR against that branch?,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3429,2021-05-03T10:06:42Z,2021-06-06T07:42:19Z,2021-06-06T07:42:19Z,CLOSED,False,118,2,7,https://github.com/bskllzh,Fix and add a new offline soft status in the slave server of the mysql mgr when it is lagging,10,[],https://github.com/sysown/proxysql/pull/3429,https://github.com/bskllzh,1,https://github.com/sysown/proxysql/pull/3429,"version: proxysql 2.2.0 mysql: mysql group replication(mysql mgr 8.0.24, single master)
Problems description:
When the proxysql find the slave of the mgr cluster of mysql that is lagging(lag_counts >= mysql_thread___monitor_groupreplication_max_transactions_behind_count), the proxysql would drop all sql conntection that is running. This is not suitable, because this cause an interruption to the application that the user is using. By add a parameter monitor_offline_soft_or_shunned, when set true, set this slave status: offline soft, that allow the sql being executed to continue to run to completion, and new incoming connections aren't accepted anymore. When set false, backward compatible. That is the update_group_replication_set_offline func is executed, and drop all sql conntection that is running.
Test situationÔºö
when set the parameter monitor_offline_soft_or_shunned true, and when transactions_behind(gr_member_routing_candidate_status view) > max_transactions_behind in the mysql_group_replication_hostgroups table.
mysql> select hostgroup_id, hostname, port, status from runtime_mysql_servers;
+--------------+-----------+-------+--------+
| hostgroup_id | hostname | port | status |
+--------------+-----------+-------+-----------+
| 10 | 192.168.10.10 | 3306 | ONLINE |
| 20 | 192.168.10.10 | 3306 | ONLINE |
| 20 | 192.168.10.11 | 3306 | OFFLINE_SOFT |
| 20 | 192.168.10.12 | 3306 | OFFLINE_SOFT |
+--------------+-----------+-------+-----------+
hostgroup_id: 10 -- write group , 20 -- read group
Problems fix:
Based on issue #2151,#2849,#2578, add the parameter monitor_offline_soft_or_shunnedÔºö
True-- set OFFLINE_SOFT in the slave when this is lagging in the mgr.
False --- use backward compatible, drop all sql conntection that is running","version: proxysql 2.2.0 mysql: mysql group replication(mysql mgr 8.0.24, single master)
Problems description:
When the proxysql find the slave of the mgr cluster of mysql that is lagging(lag_counts >= mysql_thread___monitor_groupreplication_max_transactions_behind_count), the proxysql would drop all sql conntection that is running. This is not suitable, because this cause an interruption to the application that the user is using. By add a parameter monitor_offline_soft_or_shunned, when set true, set this slave status: offline soft, that allow the sql being executed to continue to run to completion, and new incoming connections aren't accepted anymore. When set false, backward compatible. That is the update_group_replication_set_offline func is executed, and drop all sql conntection that is running.
Test situationÔºö
when set the parameter monitor_offline_soft_or_shunned true, and when transactions_behind(gr_member_routing_candidate_status view) > max_transactions_behind in the mysql_group_replication_hostgroups table.
mysql> select hostgroup_id, hostname, port, status from runtime_mysql_servers;
+--------------+-----------+-------+--------+
| hostgroup_id | hostname | port | status |
+--------------+-----------+-------+-----------+
| 10 | 192.168.10.10 | 3306 | ONLINE |
| 20 | 192.168.10.10 | 3306 | ONLINE |
| 20 | 192.168.10.11 | 3306 | OFFLINE_SOFT |
| 20 | 192.168.10.12 | 3306 | OFFLINE_SOFT |
+--------------+-----------+-------+-----------+
hostgroup_id: 10 -- write group , 20 -- read group
Problems fix:
Based on issue #2151,#2849,#2578, add the parameter monitor_offline_soft_or_shunnedÔºö
True-- set OFFLINE_SOFT in the slave when this is lagging in the mgr.
False --- use backward compatible, drop all sql conntection that is running",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3429,2021-05-03T10:06:42Z,2021-06-06T07:42:19Z,2021-06-06T07:42:19Z,CLOSED,False,118,2,7,https://github.com/bskllzh,Fix and add a new offline soft status in the slave server of the mysql mgr when it is lagging,10,[],https://github.com/sysown/proxysql/pull/3429,https://github.com/bskllzh,2,https://github.com/sysown/proxysql/pull/3429#issuecomment-831649993,"version: proxysql 2.2.0 mysql: mysql group replication(mysql mgr 8.0.24, single master)
Problems description:
When the proxysql find the slave of the mgr cluster of mysql that is lagging(lag_counts >= mysql_thread___monitor_groupreplication_max_transactions_behind_count), the proxysql would drop all sql conntection that is running. This is not suitable, because this cause an interruption to the application that the user is using. By add a parameter monitor_offline_soft_or_shunned, when set true, set this slave status: offline soft, that allow the sql being executed to continue to run to completion, and new incoming connections aren't accepted anymore. When set false, backward compatible. That is the update_group_replication_set_offline func is executed, and drop all sql conntection that is running.
Test situationÔºö
when set the parameter monitor_offline_soft_or_shunned true, and when transactions_behind(gr_member_routing_candidate_status view) > max_transactions_behind in the mysql_group_replication_hostgroups table.
mysql> select hostgroup_id, hostname, port, status from runtime_mysql_servers;
+--------------+-----------+-------+--------+
| hostgroup_id | hostname | port | status |
+--------------+-----------+-------+-----------+
| 10 | 192.168.10.10 | 3306 | ONLINE |
| 20 | 192.168.10.10 | 3306 | ONLINE |
| 20 | 192.168.10.11 | 3306 | OFFLINE_SOFT |
| 20 | 192.168.10.12 | 3306 | OFFLINE_SOFT |
+--------------+-----------+-------+-----------+
hostgroup_id: 10 -- write group , 20 -- read group
Problems fix:
Based on issue #2151,#2849,#2578, add the parameter monitor_offline_soft_or_shunnedÔºö
True-- set OFFLINE_SOFT in the slave when this is lagging in the mgr.
False --- use backward compatible, drop all sql conntection that is running","@JavierJF @renecannao , please review this PR.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3429,2021-05-03T10:06:42Z,2021-06-06T07:42:19Z,2021-06-06T07:42:19Z,CLOSED,False,118,2,7,https://github.com/bskllzh,Fix and add a new offline soft status in the slave server of the mysql mgr when it is lagging,10,[],https://github.com/sysown/proxysql/pull/3429,https://github.com/bskllzh,3,https://github.com/sysown/proxysql/pull/3429#issuecomment-855354673,"version: proxysql 2.2.0 mysql: mysql group replication(mysql mgr 8.0.24, single master)
Problems description:
When the proxysql find the slave of the mgr cluster of mysql that is lagging(lag_counts >= mysql_thread___monitor_groupreplication_max_transactions_behind_count), the proxysql would drop all sql conntection that is running. This is not suitable, because this cause an interruption to the application that the user is using. By add a parameter monitor_offline_soft_or_shunned, when set true, set this slave status: offline soft, that allow the sql being executed to continue to run to completion, and new incoming connections aren't accepted anymore. When set false, backward compatible. That is the update_group_replication_set_offline func is executed, and drop all sql conntection that is running.
Test situationÔºö
when set the parameter monitor_offline_soft_or_shunned true, and when transactions_behind(gr_member_routing_candidate_status view) > max_transactions_behind in the mysql_group_replication_hostgroups table.
mysql> select hostgroup_id, hostname, port, status from runtime_mysql_servers;
+--------------+-----------+-------+--------+
| hostgroup_id | hostname | port | status |
+--------------+-----------+-------+-----------+
| 10 | 192.168.10.10 | 3306 | ONLINE |
| 20 | 192.168.10.10 | 3306 | ONLINE |
| 20 | 192.168.10.11 | 3306 | OFFLINE_SOFT |
| 20 | 192.168.10.12 | 3306 | OFFLINE_SOFT |
+--------------+-----------+-------+-----------+
hostgroup_id: 10 -- write group , 20 -- read group
Problems fix:
Based on issue #2151,#2849,#2578, add the parameter monitor_offline_soft_or_shunnedÔºö
True-- set OFFLINE_SOFT in the slave when this is lagging in the mgr.
False --- use backward compatible, drop all sql conntection that is running",Conflicting files -- lib/MySQL_Thread.cpp.  Close.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3435,2021-05-06T16:01:47Z,2021-05-10T19:29:25Z,2021-06-04T08:15:12Z,MERGED,True,417,27,2,https://github.com/JavierJF,Closes #3434: ProxySQL v2.1.X crashes due to invalid memory being accessed by mthd_my_read_metadata_ex ,2,['bug'],https://github.com/sysown/proxysql/pull/3435,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3435,closes #3434.,closes #3434.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3438,2021-05-07T13:08:11Z,2021-07-06T23:02:56Z,2021-07-06T23:03:09Z,MERGED,True,7,6,1,https://github.com/bskllzh,Closes #3431: Fix crashes  due to mmsd is null when add an invalid host name to the mysql_servers table,2,[],https://github.com/sysown/proxysql/pull/3438,https://github.com/bskllzh,1,https://github.com/sysown/proxysql/pull/3438,"Closes #3431.
Test situationÔºö
When it add  an invalid host name to the mysql_servers table,  and insert table mysql_aws_aurora_hostgroups:
insert into mysql_aws_aurora_hostgroups(writer_hostgroup,reader_hostgroup,active,domain_name,comment)
values(10,20,1,'.com','mysql_aws_aurora_hostgroups');
load mysql servers to runtime;
save mysql servers to disk;
insert into mysql_servers(hostgroup_id,hostname,port,weight,max_connections)values
(10,'aurora-mysql-1-instance-1',3306,1,1000),
(20,'aurora-mysql-1-instance-1',3306,30,1000),
(20,'aurora-mysql-1-instance-2',3306,70,1000);
load mysql servers to runtime;
save mysql servers to disk;
select hostgroup_id,hostname,port,status,weight,max_connections from runtime_mysql_servers;
+--------------+---------------------------+------+--------+--------+-------------+-----------------+
| hostgroup_id | hostname                  | port | status | weight | compression | max_connections |
+--------------+---------------------------+------+--------+--------+-------------+-----------------+
| 10           | aurora-mysql-1-instance-1 | 3306 | ONLINE | 1      | 0           | 1000            |
| 20           | aurora-mysql-1-instance-1 | 3306 | ONLINE | 30     | 0           | 1000            |
| 20           | aurora-mysql-1-instance-2 | 3306 | ONLINE | 70     | 0           | 1000            |
+--------------+---------------------------+------+--------+--------+-------------+-----------------+
It cause proxysql  coredump,   coredump infoÔºà mmsd = 0x0 , in func monitor_AWS_Aurora_thread_HG line 4254  of  the version 2.1.1 proxysql Ôºâ:
(gdb) bt full
#0  0x00000000008f7051 in monitor_AWS_Aurora_thread_HG (arg=0x7f181cc70880) at MySQL_Monitor.cpp:4254
glover = 2
rHG = 20
max_lag_ms = 600000
min_lag_ms = 30
MySQL_Monitor__thread_MySQL_Thread_Variables_version = 2
ase_idx = 6
next_loop_at = 3116309400
num_hosts = 2
cur_host_idx = 1
add_lag_ms = 30
exit_now = false
crc = true
found_pingable_host = false
check_interval_ms = 1000
mysql_thr = 0x7f181a8d0000
hpa = 0x7f181a8c0d00
current_raw_checksum = 13941933782202003786
start_time = 3115323481
lag_num_checks = 1
initial_raw_checksum = 13941933782202003786
rnd = 1
rc_ping = false
mmsd = 0x0
func = ""monitor_AWS_Aurora_thread_HG""
lasts_ase = {0x7f181a8c1ae0, 0x7f181a8c1b20, 0x7f181a8c1b60, 0x7f181a8c1ba0, 0x7f181a8c1be0, 0x7f181a8c1c20, 0x7f181a8c15e0, 0x7f181a8c1660,
0x7f181a8c16e0, 0x7f181a8c1760, 0x7f181a8c17e0, 0x7f181a8c1860, 0x7f181a8c18e0, 0x7f181a8c1960, 0x7f181a8c19e0, 0x7f181a8c1a60}
wHG = 10
check_timeout_ms = 800
t1 = 3116309559
#1  0x00007f181f0cedd5 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007f181dfb702d in clone () from /lib64/libc.so.6
No symbol table info available.","Closes #3431.
Test situationÔºö
When it add  an invalid host name to the mysql_servers table,  and insert table mysql_aws_aurora_hostgroups:
insert into mysql_aws_aurora_hostgroups(writer_hostgroup,reader_hostgroup,active,domain_name,comment)
values(10,20,1,'.com','mysql_aws_aurora_hostgroups');
load mysql servers to runtime;
save mysql servers to disk;
insert into mysql_servers(hostgroup_id,hostname,port,weight,max_connections)values
(10,'aurora-mysql-1-instance-1',3306,1,1000),
(20,'aurora-mysql-1-instance-1',3306,30,1000),
(20,'aurora-mysql-1-instance-2',3306,70,1000);
load mysql servers to runtime;
save mysql servers to disk;
select hostgroup_id,hostname,port,status,weight,max_connections from runtime_mysql_servers;
+--------------+---------------------------+------+--------+--------+-------------+-----------------+
| hostgroup_id | hostname                  | port | status | weight | compression | max_connections |
+--------------+---------------------------+------+--------+--------+-------------+-----------------+
| 10           | aurora-mysql-1-instance-1 | 3306 | ONLINE | 1      | 0           | 1000            |
| 20           | aurora-mysql-1-instance-1 | 3306 | ONLINE | 30     | 0           | 1000            |
| 20           | aurora-mysql-1-instance-2 | 3306 | ONLINE | 70     | 0           | 1000            |
+--------------+---------------------------+------+--------+--------+-------------+-----------------+
It cause proxysql  coredump,   coredump infoÔºà mmsd = 0x0 , in func monitor_AWS_Aurora_thread_HG line 4254  of  the version 2.1.1 proxysql Ôºâ:
(gdb) bt full
#0  0x00000000008f7051 in monitor_AWS_Aurora_thread_HG (arg=0x7f181cc70880) at MySQL_Monitor.cpp:4254
glover = 2
rHG = 20
max_lag_ms = 600000
min_lag_ms = 30
MySQL_Monitor__thread_MySQL_Thread_Variables_version = 2
ase_idx = 6
next_loop_at = 3116309400
num_hosts = 2
cur_host_idx = 1
add_lag_ms = 30
exit_now = false
crc = true
found_pingable_host = false
check_interval_ms = 1000
mysql_thr = 0x7f181a8d0000
hpa = 0x7f181a8c0d00
current_raw_checksum = 13941933782202003786
start_time = 3115323481
lag_num_checks = 1
initial_raw_checksum = 13941933782202003786
rnd = 1
rc_ping = false
mmsd = 0x0
func = ""monitor_AWS_Aurora_thread_HG""
lasts_ase = {0x7f181a8c1ae0, 0x7f181a8c1b20, 0x7f181a8c1b60, 0x7f181a8c1ba0, 0x7f181a8c1be0, 0x7f181a8c1c20, 0x7f181a8c15e0, 0x7f181a8c1660,
0x7f181a8c16e0, 0x7f181a8c1760, 0x7f181a8c17e0, 0x7f181a8c1860, 0x7f181a8c18e0, 0x7f181a8c1960, 0x7f181a8c19e0, 0x7f181a8c1a60}
wHG = 10
check_timeout_ms = 800
t1 = 3116309559
#1  0x00007f181f0cedd5 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007f181dfb702d in clone () from /lib64/libc.so.6
No symbol table info available.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3438,2021-05-07T13:08:11Z,2021-07-06T23:02:56Z,2021-07-06T23:03:09Z,MERGED,True,7,6,1,https://github.com/bskllzh,Closes #3431: Fix crashes  due to mmsd is null when add an invalid host name to the mysql_servers table,2,[],https://github.com/sysown/proxysql/pull/3438,https://github.com/bskllzh,2,https://github.com/sysown/proxysql/pull/3438#issuecomment-861645569,"Closes #3431.
Test situationÔºö
When it add  an invalid host name to the mysql_servers table,  and insert table mysql_aws_aurora_hostgroups:
insert into mysql_aws_aurora_hostgroups(writer_hostgroup,reader_hostgroup,active,domain_name,comment)
values(10,20,1,'.com','mysql_aws_aurora_hostgroups');
load mysql servers to runtime;
save mysql servers to disk;
insert into mysql_servers(hostgroup_id,hostname,port,weight,max_connections)values
(10,'aurora-mysql-1-instance-1',3306,1,1000),
(20,'aurora-mysql-1-instance-1',3306,30,1000),
(20,'aurora-mysql-1-instance-2',3306,70,1000);
load mysql servers to runtime;
save mysql servers to disk;
select hostgroup_id,hostname,port,status,weight,max_connections from runtime_mysql_servers;
+--------------+---------------------------+------+--------+--------+-------------+-----------------+
| hostgroup_id | hostname                  | port | status | weight | compression | max_connections |
+--------------+---------------------------+------+--------+--------+-------------+-----------------+
| 10           | aurora-mysql-1-instance-1 | 3306 | ONLINE | 1      | 0           | 1000            |
| 20           | aurora-mysql-1-instance-1 | 3306 | ONLINE | 30     | 0           | 1000            |
| 20           | aurora-mysql-1-instance-2 | 3306 | ONLINE | 70     | 0           | 1000            |
+--------------+---------------------------+------+--------+--------+-------------+-----------------+
It cause proxysql  coredump,   coredump infoÔºà mmsd = 0x0 , in func monitor_AWS_Aurora_thread_HG line 4254  of  the version 2.1.1 proxysql Ôºâ:
(gdb) bt full
#0  0x00000000008f7051 in monitor_AWS_Aurora_thread_HG (arg=0x7f181cc70880) at MySQL_Monitor.cpp:4254
glover = 2
rHG = 20
max_lag_ms = 600000
min_lag_ms = 30
MySQL_Monitor__thread_MySQL_Thread_Variables_version = 2
ase_idx = 6
next_loop_at = 3116309400
num_hosts = 2
cur_host_idx = 1
add_lag_ms = 30
exit_now = false
crc = true
found_pingable_host = false
check_interval_ms = 1000
mysql_thr = 0x7f181a8d0000
hpa = 0x7f181a8c0d00
current_raw_checksum = 13941933782202003786
start_time = 3115323481
lag_num_checks = 1
initial_raw_checksum = 13941933782202003786
rnd = 1
rc_ping = false
mmsd = 0x0
func = ""monitor_AWS_Aurora_thread_HG""
lasts_ase = {0x7f181a8c1ae0, 0x7f181a8c1b20, 0x7f181a8c1b60, 0x7f181a8c1ba0, 0x7f181a8c1be0, 0x7f181a8c1c20, 0x7f181a8c15e0, 0x7f181a8c1660,
0x7f181a8c16e0, 0x7f181a8c1760, 0x7f181a8c17e0, 0x7f181a8c1860, 0x7f181a8c18e0, 0x7f181a8c1960, 0x7f181a8c19e0, 0x7f181a8c1a60}
wHG = 10
check_timeout_ms = 800
t1 = 3116309559
#1  0x00007f181f0cedd5 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007f181dfb702d in clone () from /lib64/libc.so.6
No symbol table info available.","@renecannao , please review this PR",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3438,2021-05-07T13:08:11Z,2021-07-06T23:02:56Z,2021-07-06T23:03:09Z,MERGED,True,7,6,1,https://github.com/bskllzh,Closes #3431: Fix crashes  due to mmsd is null when add an invalid host name to the mysql_servers table,2,[],https://github.com/sysown/proxysql/pull/3438,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3438#issuecomment-875138459,"Closes #3431.
Test situationÔºö
When it add  an invalid host name to the mysql_servers table,  and insert table mysql_aws_aurora_hostgroups:
insert into mysql_aws_aurora_hostgroups(writer_hostgroup,reader_hostgroup,active,domain_name,comment)
values(10,20,1,'.com','mysql_aws_aurora_hostgroups');
load mysql servers to runtime;
save mysql servers to disk;
insert into mysql_servers(hostgroup_id,hostname,port,weight,max_connections)values
(10,'aurora-mysql-1-instance-1',3306,1,1000),
(20,'aurora-mysql-1-instance-1',3306,30,1000),
(20,'aurora-mysql-1-instance-2',3306,70,1000);
load mysql servers to runtime;
save mysql servers to disk;
select hostgroup_id,hostname,port,status,weight,max_connections from runtime_mysql_servers;
+--------------+---------------------------+------+--------+--------+-------------+-----------------+
| hostgroup_id | hostname                  | port | status | weight | compression | max_connections |
+--------------+---------------------------+------+--------+--------+-------------+-----------------+
| 10           | aurora-mysql-1-instance-1 | 3306 | ONLINE | 1      | 0           | 1000            |
| 20           | aurora-mysql-1-instance-1 | 3306 | ONLINE | 30     | 0           | 1000            |
| 20           | aurora-mysql-1-instance-2 | 3306 | ONLINE | 70     | 0           | 1000            |
+--------------+---------------------------+------+--------+--------+-------------+-----------------+
It cause proxysql  coredump,   coredump infoÔºà mmsd = 0x0 , in func monitor_AWS_Aurora_thread_HG line 4254  of  the version 2.1.1 proxysql Ôºâ:
(gdb) bt full
#0  0x00000000008f7051 in monitor_AWS_Aurora_thread_HG (arg=0x7f181cc70880) at MySQL_Monitor.cpp:4254
glover = 2
rHG = 20
max_lag_ms = 600000
min_lag_ms = 30
MySQL_Monitor__thread_MySQL_Thread_Variables_version = 2
ase_idx = 6
next_loop_at = 3116309400
num_hosts = 2
cur_host_idx = 1
add_lag_ms = 30
exit_now = false
crc = true
found_pingable_host = false
check_interval_ms = 1000
mysql_thr = 0x7f181a8d0000
hpa = 0x7f181a8c0d00
current_raw_checksum = 13941933782202003786
start_time = 3115323481
lag_num_checks = 1
initial_raw_checksum = 13941933782202003786
rnd = 1
rc_ping = false
mmsd = 0x0
func = ""monitor_AWS_Aurora_thread_HG""
lasts_ase = {0x7f181a8c1ae0, 0x7f181a8c1b20, 0x7f181a8c1b60, 0x7f181a8c1ba0, 0x7f181a8c1be0, 0x7f181a8c1c20, 0x7f181a8c15e0, 0x7f181a8c1660,
0x7f181a8c16e0, 0x7f181a8c1760, 0x7f181a8c17e0, 0x7f181a8c1860, 0x7f181a8c18e0, 0x7f181a8c1960, 0x7f181a8c19e0, 0x7f181a8c1a60}
wHG = 10
check_timeout_ms = 800
t1 = 3116309559
#1  0x00007f181f0cedd5 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007f181dfb702d in clone () from /lib64/libc.so.6
No symbol table info available.",Thank you for the PR @bskllzh  !!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3440,2021-05-10T16:18:56Z,2021-05-10T19:30:01Z,2021-06-04T08:15:10Z,MERGED,True,193,0,2,https://github.com/JavierJF,Closes #3404: ProxySQL not cleaning up file-handles for resolvable-but-not-reachable hosts,2,['bug'],https://github.com/sysown/proxysql/pull/3440,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3440,closes #3404.,closes #3404.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3443,2021-05-10T18:32:02Z,2021-05-16T17:33:41Z,2021-06-04T08:15:40Z,MERGED,True,93,4,5,https://github.com/JavierJF,Closes #3442: Temporarily add session_track_schema to ignore_vars until proper support is added ,3,[],https://github.com/sysown/proxysql/pull/3443,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3443,closes #3442.,closes #3442.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3443,2021-05-10T18:32:02Z,2021-05-16T17:33:41Z,2021-06-04T08:15:40Z,MERGED,True,93,4,5,https://github.com/JavierJF,Closes #3442: Temporarily add session_track_schema to ignore_vars until proper support is added ,3,[],https://github.com/sysown/proxysql/pull/3443,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3443#issuecomment-837206767,closes #3442.,"@JavierJF , please see #3442 (comment)",True,{'THUMBS_UP': ['https://github.com/JavierJF']}
sysown/proxysql,https://github.com/sysown/proxysql,3444,2021-05-10T23:57:17Z,2021-05-12T11:06:56Z,2021-06-04T08:15:04Z,MERGED,True,255,211,2,https://github.com/renecannao,Several code cleanup in MySQL_Thread,2,[],https://github.com/sysown/proxysql/pull/3444,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3444,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3445,2021-05-10T23:57:34Z,2021-05-17T20:10:31Z,2021-06-04T08:15:34Z,MERGED,True,353,1834,4,https://github.com/renecannao,Code cleanup for MySQL variables,6,[],https://github.com/sysown/proxysql/pull/3445,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3445,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3445,2021-05-10T23:57:34Z,2021-05-17T20:10:31Z,2021-06-04T08:15:34Z,MERGED,True,353,1834,4,https://github.com/renecannao,Code cleanup for MySQL variables,6,[],https://github.com/sysown/proxysql/pull/3445,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3445#issuecomment-839647212,,Ok to review,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3445,2021-05-10T23:57:34Z,2021-05-17T20:10:31Z,2021-06-04T08:15:34Z,MERGED,True,353,1834,4,https://github.com/renecannao,Code cleanup for MySQL variables,6,[],https://github.com/sysown/proxysql/pull/3445,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3445#issuecomment-841849798,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3445,2021-05-10T23:57:34Z,2021-05-17T20:10:31Z,2021-06-04T08:15:34Z,MERGED,True,353,1834,4,https://github.com/renecannao,Code cleanup for MySQL variables,6,[],https://github.com/sysown/proxysql/pull/3445,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/3445#issuecomment-841853300,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3451,2021-05-12T14:49:41Z,2021-05-20T09:13:31Z,2021-06-04T08:15:30Z,MERGED,True,572,24,7,https://github.com/JavierJF,Closes #3450: Port missing PR #3318 to v2.2.0,13,['bug'],https://github.com/sysown/proxysql/pull/3451,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3451,closes #3450.,closes #3450.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3453,2021-05-14T08:44:12Z,2021-05-27T17:14:25Z,2021-06-04T08:15:24Z,MERGED,True,903,9,9,https://github.com/JavierJF,Closes #3427: Read/Write Split query rules do not work while using sysbench to evaluate perfromance,10,['bug'],https://github.com/sysown/proxysql/pull/3453,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3453,"During the testing for this fix, memory corruption solved by '65e8caf' was fixed. To prove the solution both valgrind outputs from before and after the fix are attached:

valgrind-errors-3427.txt
valgrind-clean-3427.txt","During the testing for this fix, memory corruption solved by '65e8caf' was fixed. To prove the solution both valgrind outputs from before and after the fix are attached:

valgrind-errors-3427.txt
valgrind-clean-3427.txt",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3453,2021-05-14T08:44:12Z,2021-05-27T17:14:25Z,2021-06-04T08:15:24Z,MERGED,True,903,9,9,https://github.com/JavierJF,Closes #3427: Read/Write Split query rules do not work while using sysbench to evaluate perfromance,10,['bug'],https://github.com/sysown/proxysql/pull/3453,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3453#issuecomment-845732755,"During the testing for this fix, memory corruption solved by '65e8caf' was fixed. To prove the solution both valgrind outputs from before and after the fix are attached:

valgrind-errors-3427.txt
valgrind-clean-3427.txt","Attached a coverage report for the tests introduced and a clean valgrind output after executing both tests and sysbench (both text and binary protocol):

valgrind-log.txt
coverage_added_tests_3427.tar.gz",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3453,2021-05-14T08:44:12Z,2021-05-27T17:14:25Z,2021-06-04T08:15:24Z,MERGED,True,903,9,9,https://github.com/JavierJF,Closes #3427: Read/Write Split query rules do not work while using sysbench to evaluate perfromance,10,['bug'],https://github.com/sysown/proxysql/pull/3453,https://github.com/JavierJF,3,https://github.com/sysown/proxysql/pull/3453#issuecomment-845812329,"During the testing for this fix, memory corruption solved by '65e8caf' was fixed. To prove the solution both valgrind outputs from before and after the fix are attached:

valgrind-errors-3427.txt
valgrind-clean-3427.txt",Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3453,2021-05-14T08:44:12Z,2021-05-27T17:14:25Z,2021-06-04T08:15:24Z,MERGED,True,903,9,9,https://github.com/JavierJF,Closes #3427: Read/Write Split query rules do not work while using sysbench to evaluate perfromance,10,['bug'],https://github.com/sysown/proxysql/pull/3453,https://github.com/JavierJF,4,https://github.com/sysown/proxysql/pull/3453#issuecomment-848615630,"During the testing for this fix, memory corruption solved by '65e8caf' was fixed. To prove the solution both valgrind outputs from before and after the fix are attached:

valgrind-errors-3427.txt
valgrind-clean-3427.txt",Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3453,2021-05-14T08:44:12Z,2021-05-27T17:14:25Z,2021-06-04T08:15:24Z,MERGED,True,903,9,9,https://github.com/JavierJF,Closes #3427: Read/Write Split query rules do not work while using sysbench to evaluate perfromance,10,['bug'],https://github.com/sysown/proxysql/pull/3453,https://github.com/JavierJF,5,https://github.com/sysown/proxysql/pull/3453#issuecomment-849058870,"During the testing for this fix, memory corruption solved by '65e8caf' was fixed. To prove the solution both valgrind outputs from before and after the fix are attached:

valgrind-errors-3427.txt
valgrind-clean-3427.txt",Retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3453,2021-05-14T08:44:12Z,2021-05-27T17:14:25Z,2021-06-04T08:15:24Z,MERGED,True,903,9,9,https://github.com/JavierJF,Closes #3427: Read/Write Split query rules do not work while using sysbench to evaluate perfromance,10,['bug'],https://github.com/sysown/proxysql/pull/3453,https://github.com/JavierJF,6,https://github.com/sysown/proxysql/pull/3453#issuecomment-849090492,"During the testing for this fix, memory corruption solved by '65e8caf' was fixed. To prove the solution both valgrind outputs from before and after the fix are attached:

valgrind-errors-3427.txt
valgrind-clean-3427.txt","Fixed found invalid memory reads due to access to freed variable. Valgrind output attached:
valgrind-invalid-reads.log",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3455,2021-05-17T09:26:48Z,,2022-03-10T21:49:42Z,OPEN,False,243,22,8,https://github.com/renecannao,WIP: Adding a simulator for read_only test,9,[],https://github.com/sysown/proxysql/pull/3455,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3455,"This commit introduces a first simulator for read_only monitoring
ProxySQL itself will simulate hundreds of backends across hundreds of
hostgroups, all configured in hundreds of clusters, and return read_only
values for each of the simulated backend.
The read_only value can be configured in table READONLY_STATUS available in
the SQLite3Server module.
If a backend isn't configured in table READONLY_STATUS , its default read_only
value is 1.
It is possible to simulate a lot of simultaneous failover running queries like
the following:
UPDATE READONLY_STATUS SET read_only=1;
CREATE TABLE t1 AS SELECT hostname FROM READONLY_STATUS ORDER BY RANDOM() LIMIT 50;
UPDATE READONLY_STATUS SET read_only=0 WHERE hostname IN (SELECT hostname FROM t1);
DROP TABLE t1;","This commit introduces a first simulator for read_only monitoring
ProxySQL itself will simulate hundreds of backends across hundreds of
hostgroups, all configured in hundreds of clusters, and return read_only
values for each of the simulated backend.
The read_only value can be configured in table READONLY_STATUS available in
the SQLite3Server module.
If a backend isn't configured in table READONLY_STATUS , its default read_only
value is 1.
It is possible to simulate a lot of simultaneous failover running queries like
the following:
UPDATE READONLY_STATUS SET read_only=1;
CREATE TABLE t1 AS SELECT hostname FROM READONLY_STATUS ORDER BY RANDOM() LIMIT 50;
UPDATE READONLY_STATUS SET read_only=0 WHERE hostname IN (SELECT hostname FROM t1);
DROP TABLE t1;",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3455,2021-05-17T09:26:48Z,,2022-03-10T21:49:42Z,OPEN,False,243,22,8,https://github.com/renecannao,WIP: Adding a simulator for read_only test,9,[],https://github.com/sysown/proxysql/pull/3455,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3455#issuecomment-877285622,"This commit introduces a first simulator for read_only monitoring
ProxySQL itself will simulate hundreds of backends across hundreds of
hostgroups, all configured in hundreds of clusters, and return read_only
values for each of the simulated backend.
The read_only value can be configured in table READONLY_STATUS available in
the SQLite3Server module.
If a backend isn't configured in table READONLY_STATUS , its default read_only
value is 1.
It is possible to simulate a lot of simultaneous failover running queries like
the following:
UPDATE READONLY_STATUS SET read_only=1;
CREATE TABLE t1 AS SELECT hostname FROM READONLY_STATUS ORDER BY RANDOM() LIMIT 50;
UPDATE READONLY_STATUS SET read_only=0 WHERE hostname IN (SELECT hostname FROM t1);
DROP TABLE t1;",Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3455,2021-05-17T09:26:48Z,,2022-03-10T21:49:42Z,OPEN,False,243,22,8,https://github.com/renecannao,WIP: Adding a simulator for read_only test,9,[],https://github.com/sysown/proxysql/pull/3455,https://github.com/JavierJF,3,https://github.com/sysown/proxysql/pull/3455#issuecomment-877377960,"This commit introduces a first simulator for read_only monitoring
ProxySQL itself will simulate hundreds of backends across hundreds of
hostgroups, all configured in hundreds of clusters, and return read_only
values for each of the simulated backend.
The read_only value can be configured in table READONLY_STATUS available in
the SQLite3Server module.
If a backend isn't configured in table READONLY_STATUS , its default read_only
value is 1.
It is possible to simulate a lot of simultaneous failover running queries like
the following:
UPDATE READONLY_STATUS SET read_only=1;
CREATE TABLE t1 AS SELECT hostname FROM READONLY_STATUS ORDER BY RANDOM() LIMIT 50;
UPDATE READONLY_STATUS SET read_only=0 WHERE hostname IN (SELECT hostname FROM t1);
DROP TABLE t1;",Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3455,2021-05-17T09:26:48Z,,2022-03-10T21:49:42Z,OPEN,False,243,22,8,https://github.com/renecannao,WIP: Adding a simulator for read_only test,9,[],https://github.com/sysown/proxysql/pull/3455,https://github.com/JavierJF,4,https://github.com/sysown/proxysql/pull/3455#issuecomment-895210967,"This commit introduces a first simulator for read_only monitoring
ProxySQL itself will simulate hundreds of backends across hundreds of
hostgroups, all configured in hundreds of clusters, and return read_only
values for each of the simulated backend.
The read_only value can be configured in table READONLY_STATUS available in
the SQLite3Server module.
If a backend isn't configured in table READONLY_STATUS , its default read_only
value is 1.
It is possible to simulate a lot of simultaneous failover running queries like
the following:
UPDATE READONLY_STATUS SET read_only=1;
CREATE TABLE t1 AS SELECT hostname FROM READONLY_STATUS ORDER BY RANDOM() LIMIT 50;
UPDATE READONLY_STATUS SET read_only=0 WHERE hostname IN (SELECT hostname FROM t1);
DROP TABLE t1;","NOTE: This PR is not ready for be merged yet, since we are currently using the global mutex ProxySQL_Admin::sql_query_global_mutex. This approach has been discussed to be too blocking, since it leaves ProxySQL_Admin non-responsive while the read_only actions are taking place.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3455,2021-05-17T09:26:48Z,,2022-03-10T21:49:42Z,OPEN,False,243,22,8,https://github.com/renecannao,WIP: Adding a simulator for read_only test,9,[],https://github.com/sysown/proxysql/pull/3455,https://github.com/pondix,5,https://github.com/sysown/proxysql/pull/3455#issuecomment-1064536571,"This commit introduces a first simulator for read_only monitoring
ProxySQL itself will simulate hundreds of backends across hundreds of
hostgroups, all configured in hundreds of clusters, and return read_only
values for each of the simulated backend.
The read_only value can be configured in table READONLY_STATUS available in
the SQLite3Server module.
If a backend isn't configured in table READONLY_STATUS , its default read_only
value is 1.
It is possible to simulate a lot of simultaneous failover running queries like
the following:
UPDATE READONLY_STATUS SET read_only=1;
CREATE TABLE t1 AS SELECT hostname FROM READONLY_STATUS ORDER BY RANDOM() LIMIT 50;
UPDATE READONLY_STATUS SET read_only=0 WHERE hostname IN (SELECT hostname FROM t1);
DROP TABLE t1;",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3459,2021-05-21T11:56:04Z,2021-05-26T12:33:38Z,2021-05-26T12:33:38Z,MERGED,True,5,0,2,https://github.com/JavierJF,Closes #3458: Fix 'conditional jump or move depends on uninitialised value(s)' detected by Valgrind,2,[],https://github.com/sysown/proxysql/pull/3459,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3459,closes #3458.,closes #3458.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3459,2021-05-21T11:56:04Z,2021-05-26T12:33:38Z,2021-05-26T12:33:38Z,MERGED,True,5,0,2,https://github.com/JavierJF,Closes #3458: Fix 'conditional jump or move depends on uninitialised value(s)' detected by Valgrind,2,[],https://github.com/sysown/proxysql/pull/3459,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3459#issuecomment-848615472,closes #3458.,Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3461,2021-05-23T09:11:33Z,2021-05-26T09:24:00Z,2021-05-26T09:24:00Z,MERGED,True,46,9,1,https://github.com/JavierJF,Closes #3460: Fix failing test 'set_character_set',3,[],https://github.com/sysown/proxysql/pull/3461,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3461,closes #3460.,closes #3460.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3466,2021-05-27T20:36:49Z,2021-06-28T09:38:24Z,2022-04-30T16:11:03Z,MERGED,True,504,1,3,https://github.com/renecannao,Per-user default transaction isolation level,2,[],https://github.com/sysown/proxysql/pull/3466,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3466,"See issue #3465
If a user (configurable) connects to proxysql without specifying a session transaction isolation level, proxysql will automatically assigns one to that user connection. Of course, said user can override such default session transaction isolation level running SET SESSION TRANSACTION ISOLATION LEVEL on a per-connection basis.
This feature can be configured extending mysql_users.attributes , adding an object named default-transaction_isolation .
An example of configuration could be:
UPDATE mysql_users SET attributes='{""default-transaction_isolation"":""READ COMMITTED""}' WHERE username='sbtest';

This feature also requires input validation making sure that only valid isolation levels are used.
Furthermore, both dash and space can be used.
If the isolation level specified is not valid, it should be automatically removed from runtime.","See issue #3465
If a user (configurable) connects to proxysql without specifying a session transaction isolation level, proxysql will automatically assigns one to that user connection. Of course, said user can override such default session transaction isolation level running SET SESSION TRANSACTION ISOLATION LEVEL on a per-connection basis.
This feature can be configured extending mysql_users.attributes , adding an object named default-transaction_isolation .
An example of configuration could be:
UPDATE mysql_users SET attributes='{""default-transaction_isolation"":""READ COMMITTED""}' WHERE username='sbtest';

This feature also requires input validation making sure that only valid isolation levels are used.
Furthermore, both dash and space can be used.
If the isolation level specified is not valid, it should be automatically removed from runtime.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3467,2021-05-28T18:16:05Z,2021-06-28T09:39:59Z,2022-04-30T16:11:02Z,MERGED,True,92,120,5,https://github.com/renecannao,V2.x misc1,2,[],https://github.com/sysown/proxysql/pull/3467,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3467,Improved verbosity for connections issues,Improved verbosity for connections issues,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3473,2021-06-06T06:23:59Z,,2022-03-10T21:49:40Z,OPEN,False,111,2,8,https://github.com/bskllzh,Fix and add a new offline soft status in the slave server of the mysql mgr when it is lagging,12,[],https://github.com/sysown/proxysql/pull/3473,https://github.com/bskllzh,1,https://github.com/sysown/proxysql/pull/3473,"version: proxysql 2.x mysql: mysql group replication(mysql mgr 8.0.24, single master)  ----  PR #3429 lib/MySQL_Thread.cpp conflicting files, resubmit
Problems description:
When the proxysql find the slave of the mgr cluster of mysql that is lagging(lag_counts >= mysql_thread___monitor_groupreplication_max_transactions_behind_count), the proxysql would drop all sql conntection that is running. This is not suitable, because this cause an interruption to the application that the user is using. By add a parameter monitor_offline_soft_or_shunned, when set true, set this slave status: offline soft, that allow the sql being executed to continue to run to completion, and new incoming connections aren't accepted anymore. When set false, backward compatible. That is the update_group_replication_set_offline func is executed, and drop all sql conntection that is running.
Test situationÔºö
when set the parameter monitor_offline_soft_or_shunned true, and when transactions_behind(gr_member_routing_candidate_status view) > max_transactions_behind in the mysql_group_replication_hostgroups table.
mysql> select hostgroup_id, hostname, port, status from runtime_mysql_servers;
+--------------+-----------+-------+--------+
| hostgroup_id | hostname | port | status |
+--------------+-----------+-------+-----------+
| 10 | 192.168.10.10 | 3306 | ONLINE |
| 20 | 192.168.10.10 | 3306 | ONLINE |
| 20 | 192.168.10.11 | 3306 | OFFLINE_SOFT |
| 20 | 192.168.10.12 | 3306 | OFFLINE_SOFT |
+--------------+-----------+-------+-----------+
hostgroup_id: 10 -- write group , 20 -- read group
Problems fix:
Based on issue #2151,#2849,#2578, add the parameter monitor_offline_soft_or_shunnedÔºö
True-- set OFFLINE_SOFT in the slave when this is lagging in the mgr.
False --- use backward compatible, drop all sql conntection that is running","version: proxysql 2.x mysql: mysql group replication(mysql mgr 8.0.24, single master)  ----  PR #3429 lib/MySQL_Thread.cpp conflicting files, resubmit
Problems description:
When the proxysql find the slave of the mgr cluster of mysql that is lagging(lag_counts >= mysql_thread___monitor_groupreplication_max_transactions_behind_count), the proxysql would drop all sql conntection that is running. This is not suitable, because this cause an interruption to the application that the user is using. By add a parameter monitor_offline_soft_or_shunned, when set true, set this slave status: offline soft, that allow the sql being executed to continue to run to completion, and new incoming connections aren't accepted anymore. When set false, backward compatible. That is the update_group_replication_set_offline func is executed, and drop all sql conntection that is running.
Test situationÔºö
when set the parameter monitor_offline_soft_or_shunned true, and when transactions_behind(gr_member_routing_candidate_status view) > max_transactions_behind in the mysql_group_replication_hostgroups table.
mysql> select hostgroup_id, hostname, port, status from runtime_mysql_servers;
+--------------+-----------+-------+--------+
| hostgroup_id | hostname | port | status |
+--------------+-----------+-------+-----------+
| 10 | 192.168.10.10 | 3306 | ONLINE |
| 20 | 192.168.10.10 | 3306 | ONLINE |
| 20 | 192.168.10.11 | 3306 | OFFLINE_SOFT |
| 20 | 192.168.10.12 | 3306 | OFFLINE_SOFT |
+--------------+-----------+-------+-----------+
hostgroup_id: 10 -- write group , 20 -- read group
Problems fix:
Based on issue #2151,#2849,#2578, add the parameter monitor_offline_soft_or_shunnedÔºö
True-- set OFFLINE_SOFT in the slave when this is lagging in the mgr.
False --- use backward compatible, drop all sql conntection that is running",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3473,2021-06-06T06:23:59Z,,2022-03-10T21:49:40Z,OPEN,False,111,2,8,https://github.com/bskllzh,Fix and add a new offline soft status in the slave server of the mysql mgr when it is lagging,12,[],https://github.com/sysown/proxysql/pull/3473,https://github.com/bskllzh,2,https://github.com/sysown/proxysql/pull/3473#issuecomment-855581531,"version: proxysql 2.x mysql: mysql group replication(mysql mgr 8.0.24, single master)  ----  PR #3429 lib/MySQL_Thread.cpp conflicting files, resubmit
Problems description:
When the proxysql find the slave of the mgr cluster of mysql that is lagging(lag_counts >= mysql_thread___monitor_groupreplication_max_transactions_behind_count), the proxysql would drop all sql conntection that is running. This is not suitable, because this cause an interruption to the application that the user is using. By add a parameter monitor_offline_soft_or_shunned, when set true, set this slave status: offline soft, that allow the sql being executed to continue to run to completion, and new incoming connections aren't accepted anymore. When set false, backward compatible. That is the update_group_replication_set_offline func is executed, and drop all sql conntection that is running.
Test situationÔºö
when set the parameter monitor_offline_soft_or_shunned true, and when transactions_behind(gr_member_routing_candidate_status view) > max_transactions_behind in the mysql_group_replication_hostgroups table.
mysql> select hostgroup_id, hostname, port, status from runtime_mysql_servers;
+--------------+-----------+-------+--------+
| hostgroup_id | hostname | port | status |
+--------------+-----------+-------+-----------+
| 10 | 192.168.10.10 | 3306 | ONLINE |
| 20 | 192.168.10.10 | 3306 | ONLINE |
| 20 | 192.168.10.11 | 3306 | OFFLINE_SOFT |
| 20 | 192.168.10.12 | 3306 | OFFLINE_SOFT |
+--------------+-----------+-------+-----------+
hostgroup_id: 10 -- write group , 20 -- read group
Problems fix:
Based on issue #2151,#2849,#2578, add the parameter monitor_offline_soft_or_shunnedÔºö
True-- set OFFLINE_SOFT in the slave when this is lagging in the mgr.
False --- use backward compatible, drop all sql conntection that is running","As github prompted a file conflict in pr #3429(Conflicting files  lib/MySQL_Thread.cpp),  for proxysql version 2.x,  i resubmit this PR.  @renecannao , please review this PR.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3473,2021-06-06T06:23:59Z,,2022-03-10T21:49:40Z,OPEN,False,111,2,8,https://github.com/bskllzh,Fix and add a new offline soft status in the slave server of the mysql mgr when it is lagging,12,[],https://github.com/sysown/proxysql/pull/3473,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/3473#issuecomment-1064536541,"version: proxysql 2.x mysql: mysql group replication(mysql mgr 8.0.24, single master)  ----  PR #3429 lib/MySQL_Thread.cpp conflicting files, resubmit
Problems description:
When the proxysql find the slave of the mgr cluster of mysql that is lagging(lag_counts >= mysql_thread___monitor_groupreplication_max_transactions_behind_count), the proxysql would drop all sql conntection that is running. This is not suitable, because this cause an interruption to the application that the user is using. By add a parameter monitor_offline_soft_or_shunned, when set true, set this slave status: offline soft, that allow the sql being executed to continue to run to completion, and new incoming connections aren't accepted anymore. When set false, backward compatible. That is the update_group_replication_set_offline func is executed, and drop all sql conntection that is running.
Test situationÔºö
when set the parameter monitor_offline_soft_or_shunned true, and when transactions_behind(gr_member_routing_candidate_status view) > max_transactions_behind in the mysql_group_replication_hostgroups table.
mysql> select hostgroup_id, hostname, port, status from runtime_mysql_servers;
+--------------+-----------+-------+--------+
| hostgroup_id | hostname | port | status |
+--------------+-----------+-------+-----------+
| 10 | 192.168.10.10 | 3306 | ONLINE |
| 20 | 192.168.10.10 | 3306 | ONLINE |
| 20 | 192.168.10.11 | 3306 | OFFLINE_SOFT |
| 20 | 192.168.10.12 | 3306 | OFFLINE_SOFT |
+--------------+-----------+-------+-----------+
hostgroup_id: 10 -- write group , 20 -- read group
Problems fix:
Based on issue #2151,#2849,#2578, add the parameter monitor_offline_soft_or_shunnedÔºö
True-- set OFFLINE_SOFT in the slave when this is lagging in the mgr.
False --- use backward compatible, drop all sql conntection that is running",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3474,2021-06-06T23:31:32Z,2021-06-28T17:48:09Z,2022-04-30T16:11:30Z,MERGED,True,152,378,1,https://github.com/renecannao,[WIP] Some code cleanup in Admin,2,[],https://github.com/sysown/proxysql/pull/3474,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3474,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3476,2021-06-10T08:17:37Z,2021-08-26T11:09:49Z,2021-08-26T11:09:49Z,CLOSED,False,0,0,1,https://github.com/JavierJF,DONOTMERGE: Dummy PR to verify CI modifications,2,[],https://github.com/sysown/proxysql/pull/3476,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3476,DONOTMERGE. This PR is just to perform CI runs due to recent changes.,DONOTMERGE. This PR is just to perform CI runs due to recent changes.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3480,2021-06-12T15:16:11Z,2021-06-28T09:39:03Z,2021-06-28T09:39:03Z,MERGED,True,16,2,4,https://github.com/JavierJF,Closes #3479: Add support for 'grave accent' (`) for SET statements parsing,4,[],https://github.com/sysown/proxysql/pull/3480,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3480,Closes #3479.,Closes #3479.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3485,2021-06-18T08:57:02Z,2021-06-18T08:57:15Z,2021-06-18T09:01:26Z,CLOSED,False,6,6,2,https://github.com/otooi,aurora failover Ïãú shunned Îêú reader Î•º writer Î°ú re-enabling ÏùÑ Ïä§ÌÇµÌï®. read‚Ä¶,1,[],https://github.com/sysown/proxysql/pull/3485,https://github.com/otooi,1,https://github.com/sysown/proxysql/pull/3485,"‚Ä¶er Í∞Ä writer Î°ú ÏûòÎ™ª Îì±Î°ùÎêòÎäîÍ±∏ Î∞©ÏßÄ.
replica_host_status Îç∞Ïù¥ÌÑ∞ ÏàòÏßë Ïãú Clone ÏÜåÏä§ Ïù∏Ïä§ÌÑ¥Ïä§ÎÇò Rename Ï†Ñ Ïù∏Ïä§ÌÑ¥Ïä§ Î™ÖÏùÑ ÏàòÏßëÌïòÎäîÍ±∏ Î∞©ÏßÄÌï®. ÏµúÍ∑º ÏóÖÎç∞Ïù¥Ìä∏ ÏùºÏûêÍ∞Ä ÏµúÏã†Ïù¥ ÏïÑÎãå Í±¥ Ï†úÏô∏Ìï®. (Ïò§Î°úÎùº Î≤ÑÍ∑∏)","‚Ä¶er Í∞Ä writer Î°ú ÏûòÎ™ª Îì±Î°ùÎêòÎäîÍ±∏ Î∞©ÏßÄ.
replica_host_status Îç∞Ïù¥ÌÑ∞ ÏàòÏßë Ïãú Clone ÏÜåÏä§ Ïù∏Ïä§ÌÑ¥Ïä§ÎÇò Rename Ï†Ñ Ïù∏Ïä§ÌÑ¥Ïä§ Î™ÖÏùÑ ÏàòÏßëÌïòÎäîÍ±∏ Î∞©ÏßÄÌï®. ÏµúÍ∑º ÏóÖÎç∞Ïù¥Ìä∏ ÏùºÏûêÍ∞Ä ÏµúÏã†Ïù¥ ÏïÑÎãå Í±¥ Ï†úÏô∏Ìï®. (Ïò§Î°úÎùº Î≤ÑÍ∑∏)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3486,2021-06-18T11:23:21Z,2021-07-13T10:10:06Z,2022-04-30T16:11:37Z,MERGED,True,55,7,5,https://github.com/renecannao,[WIP] Adding support for PROXYSQL GCOV DUMP|RESET,2,[],https://github.com/sysown/proxysql/pull/3486,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3486,"Adding two new Admin commands:
PROXYSQL GCOV DUMP
PROXYSQL GCOV RESET
These will call __gcov_dump() and __gcov_reset()
This feature is enabled when built with env var WITHGCOV=1","Adding two new Admin commands:
PROXYSQL GCOV DUMP
PROXYSQL GCOV RESET
These will call __gcov_dump() and __gcov_reset()
This feature is enabled when built with env var WITHGCOV=1",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3486,2021-06-18T11:23:21Z,2021-07-13T10:10:06Z,2022-04-30T16:11:37Z,MERGED,True,55,7,5,https://github.com/renecannao,[WIP] Adding support for PROXYSQL GCOV DUMP|RESET,2,[],https://github.com/sysown/proxysql/pull/3486,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3486#issuecomment-877329285,"Adding two new Admin commands:
PROXYSQL GCOV DUMP
PROXYSQL GCOV RESET
These will call __gcov_dump() and __gcov_reset()
This feature is enabled when built with env var WITHGCOV=1",Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3486,2021-06-18T11:23:21Z,2021-07-13T10:10:06Z,2022-04-30T16:11:37Z,MERGED,True,55,7,5,https://github.com/renecannao,[WIP] Adding support for PROXYSQL GCOV DUMP|RESET,2,[],https://github.com/sysown/proxysql/pull/3486,https://github.com/JavierJF,3,https://github.com/sysown/proxysql/pull/3486#issuecomment-877357583,"Adding two new Admin commands:
PROXYSQL GCOV DUMP
PROXYSQL GCOV RESET
These will call __gcov_dump() and __gcov_reset()
This feature is enabled when built with env var WITHGCOV=1",Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3488,2021-06-18T17:01:47Z,2021-06-28T09:38:07Z,2021-06-28T09:38:07Z,MERGED,True,5,1,1,https://github.com/JavierJF,Closes #3487: Add client information for multi-statements parsing error message,1,[],https://github.com/sysown/proxysql/pull/3488,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3488,Closes #3487 .,Closes #3487 .,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3491,2021-06-21T20:13:31Z,2021-08-26T11:09:25Z,2021-08-26T11:09:25Z,MERGED,True,42,104,4,https://github.com/csoulios,Clean up LDAP authenticator,11,['AUTHENTICATION'],https://github.com/sysown/proxysql/pull/3491,https://github.com/csoulios,1,https://github.com/sysown/proxysql/pull/3491,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3491,2021-06-21T20:13:31Z,2021-08-26T11:09:25Z,2021-08-26T11:09:25Z,MERGED,True,42,104,4,https://github.com/csoulios,Clean up LDAP authenticator,11,['AUTHENTICATION'],https://github.com/sysown/proxysql/pull/3491,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/3491#issuecomment-865314818,,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3491,2021-06-21T20:13:31Z,2021-08-26T11:09:25Z,2021-08-26T11:09:25Z,MERGED,True,42,104,4,https://github.com/csoulios,Clean up LDAP authenticator,11,['AUTHENTICATION'],https://github.com/sysown/proxysql/pull/3491,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3491#issuecomment-865843853,,add to whitelist,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3494,2021-06-24T10:00:56Z,2021-06-28T09:37:50Z,2021-06-28T09:37:51Z,MERGED,True,137,9,3,https://github.com/JavierJF,Closes #3493: Add support for comments in 'USE' statements,2,[],https://github.com/sysown/proxysql/pull/3494,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3494,Closes #3493.,Closes #3493.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3495,2021-06-24T10:35:09Z,2021-06-25T14:24:54Z,2021-06-25T14:24:54Z,MERGED,True,319,10,6,https://github.com/JavierJF,Port of PR-2762 to v2.0.14,10,[],https://github.com/sysown/proxysql/pull/3495,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3495,As the title says.,As the title says.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3495,2021-06-24T10:35:09Z,2021-06-25T14:24:54Z,2021-06-25T14:24:54Z,MERGED,True,319,10,6,https://github.com/JavierJF,Port of PR-2762 to v2.0.14,10,[],https://github.com/sysown/proxysql/pull/3495,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3495#issuecomment-867597946,As the title says.,Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3495,2021-06-24T10:35:09Z,2021-06-25T14:24:54Z,2021-06-25T14:24:54Z,MERGED,True,319,10,6,https://github.com/JavierJF,Port of PR-2762 to v2.0.14,10,[],https://github.com/sysown/proxysql/pull/3495,https://github.com/JavierJF,3,https://github.com/sysown/proxysql/pull/3495#issuecomment-867933622,As the title says.,Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3495,2021-06-24T10:35:09Z,2021-06-25T14:24:54Z,2021-06-25T14:24:54Z,MERGED,True,319,10,6,https://github.com/JavierJF,Port of PR-2762 to v2.0.14,10,[],https://github.com/sysown/proxysql/pull/3495,https://github.com/JavierJF,4,https://github.com/sysown/proxysql/pull/3495#issuecomment-868302490,As the title says.,Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3495,2021-06-24T10:35:09Z,2021-06-25T14:24:54Z,2021-06-25T14:24:54Z,MERGED,True,319,10,6,https://github.com/JavierJF,Port of PR-2762 to v2.0.14,10,[],https://github.com/sysown/proxysql/pull/3495,https://github.com/JavierJF,5,https://github.com/sysown/proxysql/pull/3495#issuecomment-868360550,As the title says.,Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3496,2021-06-24T11:20:45Z,2021-06-25T14:25:26Z,2021-06-25T14:25:26Z,MERGED,True,335,10,6,https://github.com/JavierJF,Ports feature from PR-#3117 into v2.0.14,13,[],https://github.com/sysown/proxysql/pull/3496,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3496,"Branch is based on v2.0.14-tb1-2762, since changes are dependent on the ones introduced there.","Branch is based on v2.0.14-tb1-2762, since changes are dependent on the ones introduced there.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3496,2021-06-24T11:20:45Z,2021-06-25T14:25:26Z,2021-06-25T14:25:26Z,MERGED,True,335,10,6,https://github.com/JavierJF,Ports feature from PR-#3117 into v2.0.14,13,[],https://github.com/sysown/proxysql/pull/3496,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3496#issuecomment-867598381,"Branch is based on v2.0.14-tb1-2762, since changes are dependent on the ones introduced there.",Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3496,2021-06-24T11:20:45Z,2021-06-25T14:25:26Z,2021-06-25T14:25:26Z,MERGED,True,335,10,6,https://github.com/JavierJF,Ports feature from PR-#3117 into v2.0.14,13,[],https://github.com/sysown/proxysql/pull/3496,https://github.com/JavierJF,3,https://github.com/sysown/proxysql/pull/3496#issuecomment-868413925,"Branch is based on v2.0.14-tb1-2762, since changes are dependent on the ones introduced there.",Retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3497,2021-06-24T12:36:20Z,2021-06-25T14:26:22Z,2021-06-25T14:26:22Z,MERGED,True,5,1,1,https://github.com/JavierJF,Port of PR-#3488 to v2.0.14,1,[],https://github.com/sysown/proxysql/pull/3497,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3497,As the title says.,As the title says.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3497,2021-06-24T12:36:20Z,2021-06-25T14:26:22Z,2021-06-25T14:26:22Z,MERGED,True,5,1,1,https://github.com/JavierJF,Port of PR-#3488 to v2.0.14,1,[],https://github.com/sysown/proxysql/pull/3497,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3497#issuecomment-868414085,As the title says.,Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3498,2021-06-24T12:43:05Z,2021-06-25T14:26:33Z,2021-06-25T14:26:33Z,MERGED,True,137,9,3,https://github.com/JavierJF,Port of PR-#3494 to v2.0.14,2,[],https://github.com/sysown/proxysql/pull/3498,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3498,As the title says.,As the title says.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3499,2021-06-28T17:51:17Z,2021-07-13T10:10:20Z,2022-04-30T16:11:42Z,MERGED,True,651,329,22,https://github.com/renecannao,[WIP] code cleanup and improved code coverage,19,[],https://github.com/sysown/proxysql/pull/3499,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3499,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3499,2021-06-28T17:51:17Z,2021-07-13T10:10:20Z,2022-04-30T16:11:42Z,MERGED,True,651,329,22,https://github.com/renecannao,[WIP] code cleanup and improved code coverage,19,[],https://github.com/sysown/proxysql/pull/3499,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3499#issuecomment-876643919,,Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3499,2021-06-28T17:51:17Z,2021-07-13T10:10:20Z,2022-04-30T16:11:42Z,MERGED,True,651,329,22,https://github.com/renecannao,[WIP] code cleanup and improved code coverage,19,[],https://github.com/sysown/proxysql/pull/3499,https://github.com/JavierJF,3,https://github.com/sysown/proxysql/pull/3499#issuecomment-876652780,,Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3499,2021-06-28T17:51:17Z,2021-07-13T10:10:20Z,2022-04-30T16:11:42Z,MERGED,True,651,329,22,https://github.com/renecannao,[WIP] code cleanup and improved code coverage,19,[],https://github.com/sysown/proxysql/pull/3499,https://github.com/JavierJF,4,https://github.com/sysown/proxysql/pull/3499#issuecomment-876711320,,Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3505,2021-07-01T16:51:15Z,2022-01-22T11:59:16Z,2022-04-30T16:09:24Z,MERGED,True,712,21,10,https://github.com/JavierJF,Closes #3504: 'Auth Method Switch' not being properly handled for COM_CHANGE_USER,13,[],https://github.com/sysown/proxysql/pull/3505,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3505,closes #3504.,closes #3504.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3505,2021-07-01T16:51:15Z,2022-01-22T11:59:16Z,2022-04-30T16:09:24Z,MERGED,True,712,21,10,https://github.com/JavierJF,Closes #3504: 'Auth Method Switch' not being properly handled for COM_CHANGE_USER,13,[],https://github.com/sysown/proxysql/pull/3505,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3505#issuecomment-876359559,closes #3504.,"reg_test_3504-change_user_libmariadb_helper.cpp and reg_test_3504-change_user_libmysql_helper.cpp seems mostly identical. The differences between the two seems not intentional.
Why not using just one source code, and simply generate 2 distinct executables?
Also, make clean doesn't remove the binaries, and .gitignore doesn't filter them.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3505,2021-07-01T16:51:15Z,2022-01-22T11:59:16Z,2022-04-30T16:09:24Z,MERGED,True,712,21,10,https://github.com/JavierJF,Closes #3504: 'Auth Method Switch' not being properly handled for COM_CHANGE_USER,13,[],https://github.com/sysown/proxysql/pull/3505,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3505#issuecomment-904455526,closes #3504.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3505,2021-07-01T16:51:15Z,2022-01-22T11:59:16Z,2022-04-30T16:09:24Z,MERGED,True,712,21,10,https://github.com/JavierJF,Closes #3504: 'Auth Method Switch' not being properly handled for COM_CHANGE_USER,13,[],https://github.com/sysown/proxysql/pull/3505,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/3505#issuecomment-904637354,closes #3504.,"@JavierJF:
I reviewed the TAP test, and it seems it only verifies that the connections was successful.
What is checked in https://github.com/sysown/proxysql/pull/3505/files#diff-c1e730848ba50f784c953774083d77fe5b5e26704f6fb72260950bb0910423c2R104-R111 is that (exp_switching_auth_type == act_switching_auth_type) && (exp_SSL_val == act_SSL_val) .
If CHANGE_USER fails (the whole purpose of this fix/PR/tap) , err_msg is set (https://github.com/sysown/proxysql/pull/3505/files#diff-6b80bab0fae2be3edf5d9f9711f6645372823fd7dad6c705f858fe9748140a86R196-R200) but nothing verifies it.
In other words, it seems the tap tests doesn't verify what it should be verifying.
Below the output of running the test:
$ ./tests/reg_test_3504-change_user-t
1..24
# Starting tests for helper 'reg_test_3504-change_user_libmysql_helper'

# Result from helper, err_code: '0', err: '{""def_auth_plugin"":""mysql_clear_password"",""ssl_enabled"":false,""switching_auth_type"":0}'
ok 1 - Connect and COM_CHANGE_USER should work for the supplied values.
 + Expected values where: (client_auth_plugin='mysql_clear_password', switching_auth_type='0', SSL='0'),
 + Actual values where: (client_auth_plugin='mysql_clear_password', switching_auth_type='0', SSL='0'),
# Result from helper, err_code: '0', err: '{""def_auth_plugin"":""mysql_native_password"",""ssl_enabled"":false,""switching_auth_type"":0}'
ok 2 - Connect and COM_CHANGE_USER should work for the supplied values.
 + Expected values where: (client_auth_plugin='mysql_native_password', switching_auth_type='0', SSL='0'),
 + Actual values where: (client_auth_plugin='mysql_native_password', switching_auth_type='0', SSL='0'),
# Result from helper, err_code: '0', err: '{""def_auth_plugin"":""caching_sha2_password"",""ssl_enabled"":false,""switching_auth_type"":1}'
ok 3 - Connect and COM_CHANGE_USER should work for the supplied values.
 + Expected values where: (client_auth_plugin='caching_sha2_password', switching_auth_type='1', SSL='0'),
 + Actual values where: (client_auth_plugin='caching_sha2_password', switching_auth_type='1', SSL='0'),
# Result from helper, err_code: '0', err: '{""def_auth_plugin"":""mysql_clear_password"",""ssl_enabled"":true,""switching_auth_type"":0}'
ok 4 - Connect and COM_CHANGE_USER should work for the supplied values.
 + Expected values where: (client_auth_plugin='mysql_clear_password', switching_auth_type='0', SSL='1'),
 + Actual values where: (client_auth_plugin='mysql_clear_password', switching_auth_type='0', SSL='1'),
# Result from helper, err_code: '0', err: '{""def_auth_plugin"":""mysql_native_password"",""ssl_enabled"":true,""switching_auth_type"":0}'
ok 5 - Connect and COM_CHANGE_USER should work for the supplied values.
 + Expected values where: (client_auth_plugin='mysql_native_password', switching_auth_type='0', SSL='1'),
 + Actual values where: (client_auth_plugin='mysql_native_password', switching_auth_type='0', SSL='1'),
# Result from helper, err_code: '0', err: '{""def_auth_plugin"":""caching_sha2_password"",""ssl_enabled"":true,""switching_auth_type"":1}'
ok 6 - Connect and COM_CHANGE_USER should work for the supplied values.
 + Expected values where: (client_auth_plugin='caching_sha2_password', switching_auth_type='1', SSL='1'),
 + Actual values where: (client_auth_plugin='caching_sha2_password', switching_auth_type='1', SSL='1'),
# Result from helper, err_code: '256', err: '{""def_auth_plugin"":""mysql_clear_password"",""err_msg"":""Failed to change user. Error: Lost connection to MySQL server at 'reading authorization packet', system error: 0\n"",""ssl_enabled"":false,""switching_auth_type"":0}'
ok 7 - Connect and COM_CHANGE_USER should work for the supplied values.
 + Expected values where: (client_auth_plugin='mysql_clear_password', switching_auth_type='0', SSL='0'),
 + Actual values where: (client_auth_plugin='mysql_clear_password', switching_auth_type='0', SSL='0'),
# Result from helper, err_code: '0', err: '{""def_auth_plugin"":""mysql_native_password"",""ssl_enabled"":false,""switching_auth_type"":0}'
ok 8 - Connect and COM_CHANGE_USER should work for the supplied values.
 + Expected values where: (client_auth_plugin='mysql_native_password', switching_auth_type='0', SSL='0'),
 + Actual values where: (client_auth_plugin='mysql_native_password', switching_auth_type='0', SSL='0'),
# Result from helper, err_code: '0', err: '{""def_auth_plugin"":""caching_sha2_password"",""ssl_enabled"":false,""switching_auth_type"":1}'
ok 9 - Connect and COM_CHANGE_USER should work for the supplied values.
 + Expected values where: (client_auth_plugin='caching_sha2_password', switching_auth_type='1', SSL='0'),
 + Actual values where: (client_auth_plugin='caching_sha2_password', switching_auth_type='1', SSL='0'),
# Result from helper, err_code: '256', err: '{""def_auth_plugin"":""mysql_clear_password"",""err_msg"":""Failed to change user. Error: Lost connection to MySQL server at 'reading authorization packet', system error: 0\n"",""ssl_enabled"":true,""switching_auth_type"":0}'
ok 10 - Connect and COM_CHANGE_USER should work for the supplied values.
 + Expected values where: (client_auth_plugin='mysql_clear_password', switching_auth_type='0', SSL='1'),
 + Actual values where: (client_auth_plugin='mysql_clear_password', switching_auth_type='0', SSL='1'),
# Result from helper, err_code: '0', err: '{""def_auth_plugin"":""mysql_native_password"",""ssl_enabled"":true,""switching_auth_type"":0}'
ok 11 - Connect and COM_CHANGE_USER should work for the supplied values.
 + Expected values where: (client_auth_plugin='mysql_native_password', switching_auth_type='0', SSL='1'),
 + Actual values where: (client_auth_plugin='mysql_native_password', switching_auth_type='0', SSL='1'),
# Result from helper, err_code: '0', err: '{""def_auth_plugin"":""caching_sha2_password"",""ssl_enabled"":true,""switching_auth_type"":1}'
ok 12 - Connect and COM_CHANGE_USER should work for the supplied values.
 + Expected values where: (client_auth_plugin='caching_sha2_password', switching_auth_type='1', SSL='1'),
 + Actual values where: (client_auth_plugin='caching_sha2_password', switching_auth_type='1', SSL='1'),

# Starting tests for helper 'reg_test_3504-change_user_libmariadb_helper'

# Result from helper, err_code: '0', err: '{""def_auth_plugin"":""mysql_clear_password"",""ssl_enabled"":false,""switching_auth_type"":0}'
ok 13 - Connect and COM_CHANGE_USER should work for the supplied values.
 + Expected values where: (client_auth_plugin='mysql_clear_password', switching_auth_type='0', SSL='0'),
 + Actual values where: (client_auth_plugin='mysql_clear_password', switching_auth_type='0', SSL='0'),
# Result from helper, err_code: '0', err: '{""def_auth_plugin"":""mysql_native_password"",""ssl_enabled"":false,""switching_auth_type"":0}'
ok 14 - Connect and COM_CHANGE_USER should work for the supplied values.
 + Expected values where: (client_auth_plugin='mysql_native_password', switching_auth_type='0', SSL='0'),
 + Actual values where: (client_auth_plugin='mysql_native_password', switching_auth_type='0', SSL='0'),
# Result from helper, err_code: '0', err: '{""def_auth_plugin"":""caching_sha2_password"",""ssl_enabled"":false,""switching_auth_type"":1}'
ok 15 - Connect and COM_CHANGE_USER should work for the supplied values.
 + Expected values where: (client_auth_plugin='caching_sha2_password', switching_auth_type='1', SSL='0'),
 + Actual values where: (client_auth_plugin='caching_sha2_password', switching_auth_type='1', SSL='0'),
# Result from helper, err_code: '0', err: '{""def_auth_plugin"":""mysql_clear_password"",""ssl_enabled"":true,""switching_auth_type"":0}'
ok 16 - Connect and COM_CHANGE_USER should work for the supplied values.
 + Expected values where: (client_auth_plugin='mysql_clear_password', switching_auth_type='0', SSL='1'),
 + Actual values where: (client_auth_plugin='mysql_clear_password', switching_auth_type='0', SSL='1'),
# Result from helper, err_code: '0', err: '{""def_auth_plugin"":""mysql_native_password"",""ssl_enabled"":true,""switching_auth_type"":0}'
ok 17 - Connect and COM_CHANGE_USER should work for the supplied values.
 + Expected values where: (client_auth_plugin='mysql_native_password', switching_auth_type='0', SSL='1'),
 + Actual values where: (client_auth_plugin='mysql_native_password', switching_auth_type='0', SSL='1'),
# Result from helper, err_code: '0', err: '{""def_auth_plugin"":""caching_sha2_password"",""ssl_enabled"":true,""switching_auth_type"":1}'
ok 18 - Connect and COM_CHANGE_USER should work for the supplied values.
 + Expected values where: (client_auth_plugin='caching_sha2_password', switching_auth_type='1', SSL='1'),
 + Actual values where: (client_auth_plugin='caching_sha2_password', switching_auth_type='1', SSL='1'),
# Result from helper, err_code: '256', err: '{""def_auth_plugin"":""mysql_clear_password"",""err_msg"":""Failed to change user. Error: ProxySQL Error: Access denied for user 'root'@'127.0.0.1' (using password: YES)\n"",""ssl_enabled"":false,""switching_auth_type"":0}'
ok 19 - Connect and COM_CHANGE_USER should work for the supplied values.
 + Expected values where: (client_auth_plugin='mysql_clear_password', switching_auth_type='0', SSL='0'),
 + Actual values where: (client_auth_plugin='mysql_clear_password', switching_auth_type='0', SSL='0'),
# Result from helper, err_code: '0', err: '{""def_auth_plugin"":""mysql_native_password"",""ssl_enabled"":false,""switching_auth_type"":0}'
ok 20 - Connect and COM_CHANGE_USER should work for the supplied values.
 + Expected values where: (client_auth_plugin='mysql_native_password', switching_auth_type='0', SSL='0'),
 + Actual values where: (client_auth_plugin='mysql_native_password', switching_auth_type='0', SSL='0'),
# Result from helper, err_code: '0', err: '{""def_auth_plugin"":""caching_sha2_password"",""ssl_enabled"":false,""switching_auth_type"":1}'
ok 21 - Connect and COM_CHANGE_USER should work for the supplied values.
 + Expected values where: (client_auth_plugin='caching_sha2_password', switching_auth_type='1', SSL='0'),
 + Actual values where: (client_auth_plugin='caching_sha2_password', switching_auth_type='1', SSL='0'),
# Result from helper, err_code: '256', err: '{""def_auth_plugin"":""mysql_clear_password"",""err_msg"":""Failed to change user. Error: ProxySQL Error: Access denied for user 'root'@'127.0.0.1' (using password: YES)\n"",""ssl_enabled"":true,""switching_auth_type"":0}'
ok 22 - Connect and COM_CHANGE_USER should work for the supplied values.
 + Expected values where: (client_auth_plugin='mysql_clear_password', switching_auth_type='0', SSL='1'),
 + Actual values where: (client_auth_plugin='mysql_clear_password', switching_auth_type='0', SSL='1'),
# Result from helper, err_code: '0', err: '{""def_auth_plugin"":""mysql_native_password"",""ssl_enabled"":true,""switching_auth_type"":0}'
ok 23 - Connect and COM_CHANGE_USER should work for the supplied values.
 + Expected values where: (client_auth_plugin='mysql_native_password', switching_auth_type='0', SSL='1'),
 + Actual values where: (client_auth_plugin='mysql_native_password', switching_auth_type='0', SSL='1'),
# Result from helper, err_code: '0', err: '{""def_auth_plugin"":""caching_sha2_password"",""ssl_enabled"":true,""switching_auth_type"":1}'
ok 24 - Connect and COM_CHANGE_USER should work for the supplied values.
 + Expected values where: (client_auth_plugin='caching_sha2_password', switching_auth_type='1', SSL='1'),
 + Actual values where: (client_auth_plugin='caching_sha2_password', switching_auth_type='1', SSL='1'),
Test took 0.00 sec

mysql_change_user() clearly fails, but the TAP test says ""ok"". Here an example:
# Result from helper, err_code: '256', err: '{""def_auth_plugin"":""mysql_clear_password"",""err_msg"":""Failed to change user. Error: Lost connection to MySQL server at 'reading authorization packet', system error: 0\n"",""ssl_enabled"":false,""switching_auth_type"":0}'
ok 7 - Connect and COM_CHANGE_USER should work for the supplied values.
 + Expected values where: (client_auth_plugin='mysql_clear_password', switching_auth_type='0', SSL='0'),
 + Actual values where: (client_auth_plugin='mysql_clear_password', switching_auth_type='0', SSL='0'),",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3505,2021-07-01T16:51:15Z,2022-01-22T11:59:16Z,2022-04-30T16:09:24Z,MERGED,True,712,21,10,https://github.com/JavierJF,Closes #3504: 'Auth Method Switch' not being properly handled for COM_CHANGE_USER,13,[],https://github.com/sysown/proxysql/pull/3505,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/3505#issuecomment-1019110904,closes #3504.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3507,2021-07-05T16:05:09Z,2021-07-06T22:19:00Z,2021-07-06T22:19:01Z,MERGED,True,1,1,1,https://github.com/bskllzh,Closes #3492:  Fix the incorrect value range of the parameter mysql-default_query_timeout ,1,[],https://github.com/sysown/proxysql/pull/3507,https://github.com/bskllzh,1,https://github.com/sysown/proxysql/pull/3507,"Closes #3492.
According to the parameter mysql-default_query_timeout description documentÔºöhttps://proxysql.com/documentation/global-variables/mysql-variables/#mysql-default_query_timeout,
mysql-default_query_timeout   Minimum: 1000    Maximum:  1728000000   Type: Integer (milliseconds)
Fix the incorrect value range of the parameter mysql-default_query_timeout  in MySQL_Thread.cpp file.
Test situationÔºö
The test situation after repair is as followsÔºö
Admin> set  mysql-default_query_timeout=3600000;
Query OK, 1 row affected (0.00 sec)
Admin> load mysql variables to runtime;
Query OK, 0 rows affected (0.00 sec)
Admin> select * from global_variables where variable_name='mysql-default_query_timeout';
+-----------------------------+----------------+
| variable_name               | variable_value |
+-----------------------------+----------------+
| mysql-default_query_timeout | 3600000        |
+-----------------------------+----------------+
1 row in set (0.00 sec)
Admin> select * from runtime_global_variables where variable_name='mysql-default_query_timeout';
+-----------------------------+----------------+
| variable_name               | variable_value |
+-----------------------------+----------------+
| mysql-default_query_timeout | 3600000        |
+-----------------------------+----------------+
1 row in set (0.00 sec)","Closes #3492.
According to the parameter mysql-default_query_timeout description documentÔºöhttps://proxysql.com/documentation/global-variables/mysql-variables/#mysql-default_query_timeout,
mysql-default_query_timeout   Minimum: 1000    Maximum:  1728000000   Type: Integer (milliseconds)
Fix the incorrect value range of the parameter mysql-default_query_timeout  in MySQL_Thread.cpp file.
Test situationÔºö
The test situation after repair is as followsÔºö
Admin> set  mysql-default_query_timeout=3600000;
Query OK, 1 row affected (0.00 sec)
Admin> load mysql variables to runtime;
Query OK, 0 rows affected (0.00 sec)
Admin> select * from global_variables where variable_name='mysql-default_query_timeout';
+-----------------------------+----------------+
| variable_name               | variable_value |
+-----------------------------+----------------+
| mysql-default_query_timeout | 3600000        |
+-----------------------------+----------------+
1 row in set (0.00 sec)
Admin> select * from runtime_global_variables where variable_name='mysql-default_query_timeout';
+-----------------------------+----------------+
| variable_name               | variable_value |
+-----------------------------+----------------+
| mysql-default_query_timeout | 3600000        |
+-----------------------------+----------------+
1 row in set (0.00 sec)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3507,2021-07-05T16:05:09Z,2021-07-06T22:19:00Z,2021-07-06T22:19:01Z,MERGED,True,1,1,1,https://github.com/bskllzh,Closes #3492:  Fix the incorrect value range of the parameter mysql-default_query_timeout ,1,[],https://github.com/sysown/proxysql/pull/3507,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3507#issuecomment-875120122,"Closes #3492.
According to the parameter mysql-default_query_timeout description documentÔºöhttps://proxysql.com/documentation/global-variables/mysql-variables/#mysql-default_query_timeout,
mysql-default_query_timeout   Minimum: 1000    Maximum:  1728000000   Type: Integer (milliseconds)
Fix the incorrect value range of the parameter mysql-default_query_timeout  in MySQL_Thread.cpp file.
Test situationÔºö
The test situation after repair is as followsÔºö
Admin> set  mysql-default_query_timeout=3600000;
Query OK, 1 row affected (0.00 sec)
Admin> load mysql variables to runtime;
Query OK, 0 rows affected (0.00 sec)
Admin> select * from global_variables where variable_name='mysql-default_query_timeout';
+-----------------------------+----------------+
| variable_name               | variable_value |
+-----------------------------+----------------+
| mysql-default_query_timeout | 3600000        |
+-----------------------------+----------------+
1 row in set (0.00 sec)
Admin> select * from runtime_global_variables where variable_name='mysql-default_query_timeout';
+-----------------------------+----------------+
| variable_name               | variable_value |
+-----------------------------+----------------+
| mysql-default_query_timeout | 3600000        |
+-----------------------------+----------------+
1 row in set (0.00 sec)",Thank you for the PR!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3512,2021-07-06T15:47:24Z,2021-07-06T22:06:28Z,2022-04-30T16:11:41Z,MERGED,True,1,1,1,https://github.com/renecannao,Reduce length of mysql_bug_102266 #3501,1,[],https://github.com/sysown/proxysql/pull/3512,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3512,"In #3285 we increased the amount of data sent to the backend during connection
time using MYSQL_OPT_CONNECT_ATTR_ADD , in order to avoid MySQL bug 102266 .
See #3276 .
Although this create a lot of noise in ProxySQL error log and MySQL error log,
because the connection attributes are too long and they get truncated.
This PR reduces the length of connection attributes","In #3285 we increased the amount of data sent to the backend during connection
time using MYSQL_OPT_CONNECT_ATTR_ADD , in order to avoid MySQL bug 102266 .
See #3276 .
Although this create a lot of noise in ProxySQL error log and MySQL error log,
because the connection attributes are too long and they get truncated.
This PR reduces the length of connection attributes",True,{'HEART': ['https://github.com/ziegenberg']}
sysown/proxysql,https://github.com/sysown/proxysql,3513,2021-07-06T22:07:13Z,2021-07-06T23:13:41Z,2022-04-30T16:11:40Z,MERGED,True,18,10,1,https://github.com/renecannao,Reducing the number of calls to idle_thread_to_kill_idle_sessions,1,[],https://github.com/sysown/proxysql/pull/3513,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3513,This commit can potentially provide some performance improvements with large number of idle connections,This commit can potentially provide some performance improvements with large number of idle connections,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3514,2021-07-07T16:15:01Z,2021-08-26T13:15:42Z,2021-08-26T13:15:49Z,MERGED,True,1,1,1,https://github.com/egezonberisha,Change the pt-heartbeat query from MIN to MAX due to a possible daisy-chain replication or multi-master setup,1,[],https://github.com/sysown/proxysql/pull/3514,https://github.com/egezonberisha,1,https://github.com/sysown/proxysql/pull/3514,"Change the pt-heartbeat query from MIN to MAX due to a possible daisy-chain replication or multi-master setup.
Reason:
In a daisy-chain replication topology, the pt-hearbeat table contains more then 1 row, by changing MIN to MAX we make sure we take the server out of rotation even if the replica is delayed for one server/master only.
Also that's how pmp-check-mysql-replication-delay works by default, please see https://github.com/percona/percona-monitoring-plugins/blob/master/nagios/bin/pmp-check-mysql-replication-delay#L81
Example:
mysql> SELECT * FROM heartbeat;
+----------------------------+-----------+------------------+-----------+-----------------------+---------------------+
| ts                         | server_id | file             | position  | relay_master_log_file | exec_master_log_pos |
+----------------------------+-----------+------------------+-----------+-----------------------+---------------------+
| 2021-07-07T16:10:05.003200 | 111105081 | mysql-bin.000129 | 476837706 | mysql-bin.000127      |           477714455 |
| 2021-07-07T16:10:10.003470 | 111105083 | mysql-bin.000127 | 477718106 | mysql-bin.000129      |           476841330 |
+----------------------------+-----------+------------------+-----------+-----------------------+---------------------+
2 rows in set (0.00 sec)

mysql> SELECT MIN(ROUND(TIMESTAMPDIFF(MICROSECOND, ts, SYSDATE(6))/1000000)) AS Seconds_Behind_Master FROM heartbeat;
+-----------------------+
| Seconds_Behind_Master |
+-----------------------+
|                     1 |
+-----------------------+
1 row in set (0.00 sec)

mysql> SELECT MAX(ROUND(TIMESTAMPDIFF(MICROSECOND, ts, SYSDATE(6))/1000000)) AS Seconds_Behind_Master FROM heartbeat;
+-----------------------+
| Seconds_Behind_Master |
+-----------------------+
|                    16 |
+-----------------------+
1 row in set (0.00 sec)","Change the pt-heartbeat query from MIN to MAX due to a possible daisy-chain replication or multi-master setup.
Reason:
In a daisy-chain replication topology, the pt-hearbeat table contains more then 1 row, by changing MIN to MAX we make sure we take the server out of rotation even if the replica is delayed for one server/master only.
Also that's how pmp-check-mysql-replication-delay works by default, please see https://github.com/percona/percona-monitoring-plugins/blob/master/nagios/bin/pmp-check-mysql-replication-delay#L81
Example:
mysql> SELECT * FROM heartbeat;
+----------------------------+-----------+------------------+-----------+-----------------------+---------------------+
| ts                         | server_id | file             | position  | relay_master_log_file | exec_master_log_pos |
+----------------------------+-----------+------------------+-----------+-----------------------+---------------------+
| 2021-07-07T16:10:05.003200 | 111105081 | mysql-bin.000129 | 476837706 | mysql-bin.000127      |           477714455 |
| 2021-07-07T16:10:10.003470 | 111105083 | mysql-bin.000127 | 477718106 | mysql-bin.000129      |           476841330 |
+----------------------------+-----------+------------------+-----------+-----------------------+---------------------+
2 rows in set (0.00 sec)

mysql> SELECT MIN(ROUND(TIMESTAMPDIFF(MICROSECOND, ts, SYSDATE(6))/1000000)) AS Seconds_Behind_Master FROM heartbeat;
+-----------------------+
| Seconds_Behind_Master |
+-----------------------+
|                     1 |
+-----------------------+
1 row in set (0.00 sec)

mysql> SELECT MAX(ROUND(TIMESTAMPDIFF(MICROSECOND, ts, SYSDATE(6))/1000000)) AS Seconds_Behind_Master FROM heartbeat;
+-----------------------+
| Seconds_Behind_Master |
+-----------------------+
|                    16 |
+-----------------------+
1 row in set (0.00 sec)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3514,2021-07-07T16:15:01Z,2021-08-26T13:15:42Z,2021-08-26T13:15:49Z,MERGED,True,1,1,1,https://github.com/egezonberisha,Change the pt-heartbeat query from MIN to MAX due to a possible daisy-chain replication or multi-master setup,1,[],https://github.com/sysown/proxysql/pull/3514,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/3514#issuecomment-875739300,"Change the pt-heartbeat query from MIN to MAX due to a possible daisy-chain replication or multi-master setup.
Reason:
In a daisy-chain replication topology, the pt-hearbeat table contains more then 1 row, by changing MIN to MAX we make sure we take the server out of rotation even if the replica is delayed for one server/master only.
Also that's how pmp-check-mysql-replication-delay works by default, please see https://github.com/percona/percona-monitoring-plugins/blob/master/nagios/bin/pmp-check-mysql-replication-delay#L81
Example:
mysql> SELECT * FROM heartbeat;
+----------------------------+-----------+------------------+-----------+-----------------------+---------------------+
| ts                         | server_id | file             | position  | relay_master_log_file | exec_master_log_pos |
+----------------------------+-----------+------------------+-----------+-----------------------+---------------------+
| 2021-07-07T16:10:05.003200 | 111105081 | mysql-bin.000129 | 476837706 | mysql-bin.000127      |           477714455 |
| 2021-07-07T16:10:10.003470 | 111105083 | mysql-bin.000127 | 477718106 | mysql-bin.000129      |           476841330 |
+----------------------------+-----------+------------------+-----------+-----------------------+---------------------+
2 rows in set (0.00 sec)

mysql> SELECT MIN(ROUND(TIMESTAMPDIFF(MICROSECOND, ts, SYSDATE(6))/1000000)) AS Seconds_Behind_Master FROM heartbeat;
+-----------------------+
| Seconds_Behind_Master |
+-----------------------+
|                     1 |
+-----------------------+
1 row in set (0.00 sec)

mysql> SELECT MAX(ROUND(TIMESTAMPDIFF(MICROSECOND, ts, SYSDATE(6))/1000000)) AS Seconds_Behind_Master FROM heartbeat;
+-----------------------+
| Seconds_Behind_Master |
+-----------------------+
|                    16 |
+-----------------------+
1 row in set (0.00 sec)",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3514,2021-07-07T16:15:01Z,2021-08-26T13:15:42Z,2021-08-26T13:15:49Z,MERGED,True,1,1,1,https://github.com/egezonberisha,Change the pt-heartbeat query from MIN to MAX due to a possible daisy-chain replication or multi-master setup,1,[],https://github.com/sysown/proxysql/pull/3514,https://github.com/egezonberisha,3,https://github.com/sysown/proxysql/pull/3514#issuecomment-884532908,"Change the pt-heartbeat query from MIN to MAX due to a possible daisy-chain replication or multi-master setup.
Reason:
In a daisy-chain replication topology, the pt-hearbeat table contains more then 1 row, by changing MIN to MAX we make sure we take the server out of rotation even if the replica is delayed for one server/master only.
Also that's how pmp-check-mysql-replication-delay works by default, please see https://github.com/percona/percona-monitoring-plugins/blob/master/nagios/bin/pmp-check-mysql-replication-delay#L81
Example:
mysql> SELECT * FROM heartbeat;
+----------------------------+-----------+------------------+-----------+-----------------------+---------------------+
| ts                         | server_id | file             | position  | relay_master_log_file | exec_master_log_pos |
+----------------------------+-----------+------------------+-----------+-----------------------+---------------------+
| 2021-07-07T16:10:05.003200 | 111105081 | mysql-bin.000129 | 476837706 | mysql-bin.000127      |           477714455 |
| 2021-07-07T16:10:10.003470 | 111105083 | mysql-bin.000127 | 477718106 | mysql-bin.000129      |           476841330 |
+----------------------------+-----------+------------------+-----------+-----------------------+---------------------+
2 rows in set (0.00 sec)

mysql> SELECT MIN(ROUND(TIMESTAMPDIFF(MICROSECOND, ts, SYSDATE(6))/1000000)) AS Seconds_Behind_Master FROM heartbeat;
+-----------------------+
| Seconds_Behind_Master |
+-----------------------+
|                     1 |
+-----------------------+
1 row in set (0.00 sec)

mysql> SELECT MAX(ROUND(TIMESTAMPDIFF(MICROSECOND, ts, SYSDATE(6))/1000000)) AS Seconds_Behind_Master FROM heartbeat;
+-----------------------+
| Seconds_Behind_Master |
+-----------------------+
|                    16 |
+-----------------------+
1 row in set (0.00 sec)",ping @renecannao @JavierJF,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3514,2021-07-07T16:15:01Z,2021-08-26T13:15:42Z,2021-08-26T13:15:49Z,MERGED,True,1,1,1,https://github.com/egezonberisha,Change the pt-heartbeat query from MIN to MAX due to a possible daisy-chain replication or multi-master setup,1,[],https://github.com/sysown/proxysql/pull/3514,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/3514#issuecomment-906404355,"Change the pt-heartbeat query from MIN to MAX due to a possible daisy-chain replication or multi-master setup.
Reason:
In a daisy-chain replication topology, the pt-hearbeat table contains more then 1 row, by changing MIN to MAX we make sure we take the server out of rotation even if the replica is delayed for one server/master only.
Also that's how pmp-check-mysql-replication-delay works by default, please see https://github.com/percona/percona-monitoring-plugins/blob/master/nagios/bin/pmp-check-mysql-replication-delay#L81
Example:
mysql> SELECT * FROM heartbeat;
+----------------------------+-----------+------------------+-----------+-----------------------+---------------------+
| ts                         | server_id | file             | position  | relay_master_log_file | exec_master_log_pos |
+----------------------------+-----------+------------------+-----------+-----------------------+---------------------+
| 2021-07-07T16:10:05.003200 | 111105081 | mysql-bin.000129 | 476837706 | mysql-bin.000127      |           477714455 |
| 2021-07-07T16:10:10.003470 | 111105083 | mysql-bin.000127 | 477718106 | mysql-bin.000129      |           476841330 |
+----------------------------+-----------+------------------+-----------+-----------------------+---------------------+
2 rows in set (0.00 sec)

mysql> SELECT MIN(ROUND(TIMESTAMPDIFF(MICROSECOND, ts, SYSDATE(6))/1000000)) AS Seconds_Behind_Master FROM heartbeat;
+-----------------------+
| Seconds_Behind_Master |
+-----------------------+
|                     1 |
+-----------------------+
1 row in set (0.00 sec)

mysql> SELECT MAX(ROUND(TIMESTAMPDIFF(MICROSECOND, ts, SYSDATE(6))/1000000)) AS Seconds_Behind_Master FROM heartbeat;
+-----------------------+
| Seconds_Behind_Master |
+-----------------------+
|                    16 |
+-----------------------+
1 row in set (0.00 sec)",Thank you for the PR!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3515,2021-07-08T00:59:59Z,2021-07-08T13:34:48Z,2022-04-30T16:11:39Z,MERGED,True,31,166,2,https://github.com/renecannao,Several improvement related to Aurora,4,[],https://github.com/sysown/proxysql/pull/3515,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3515,"Solve various issues.
a) it handles also replicas where REPLICA_LAG_IN_MILLISECONDS == 0
b) ignore decommissioned or renamed nodes, see #3484
c) during a failover, the former writer (still reporting MASTER_SESSION_ID) is not considered a writer if it is not the last updated
d) increases the amount of entries stored in mysql_server_aws_aurora_log from 50 to 150 snapshots (more history)
This PR also removed unused code","Solve various issues.
a) it handles also replicas where REPLICA_LAG_IN_MILLISECONDS == 0
b) ignore decommissioned or renamed nodes, see #3484
c) during a failover, the former writer (still reporting MASTER_SESSION_ID) is not considered a writer if it is not the last updated
d) increases the amount of entries stored in mysql_server_aws_aurora_log from 50 to 150 snapshots (more history)
This PR also removed unused code",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3515,2021-07-08T00:59:59Z,2021-07-08T13:34:48Z,2022-04-30T16:11:39Z,MERGED,True,31,166,2,https://github.com/renecannao,Several improvement related to Aurora,4,[],https://github.com/sysown/proxysql/pull/3515,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3515#issuecomment-876350043,"Solve various issues.
a) it handles also replicas where REPLICA_LAG_IN_MILLISECONDS == 0
b) ignore decommissioned or renamed nodes, see #3484
c) during a failover, the former writer (still reporting MASTER_SESSION_ID) is not considered a writer if it is not the last updated
d) increases the amount of entries stored in mysql_server_aws_aurora_log from 50 to 150 snapshots (more history)
This PR also removed unused code",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3515,2021-07-08T00:59:59Z,2021-07-08T13:34:48Z,2022-04-30T16:11:39Z,MERGED,True,31,166,2,https://github.com/renecannao,Several improvement related to Aurora,4,[],https://github.com/sysown/proxysql/pull/3515,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3515#issuecomment-876404138,"Solve various issues.
a) it handles also replicas where REPLICA_LAG_IN_MILLISECONDS == 0
b) ignore decommissioned or renamed nodes, see #3484
c) during a failover, the former writer (still reporting MASTER_SESSION_ID) is not considered a writer if it is not the last updated
d) increases the amount of entries stored in mysql_server_aws_aurora_log from 50 to 150 snapshots (more history)
This PR also removed unused code",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3519,2021-07-11T15:34:50Z,2021-07-12T04:45:58Z,2021-07-12T04:45:58Z,CLOSED,False,3,3,2,https://github.com/bskllzh,Fix incorrect log printing and useless mmsd parameter,2,[],https://github.com/sysown/proxysql/pull/3519,https://github.com/bskllzh,1,https://github.com/sysown/proxysql/pull/3519,"According to the parameter mysql-monitor_groupreplication_healthcheck_max_timeout_count description document: https://proxysql.com/documentation/global-variables/mysql-monitor-variables/#mysql-monitor_groupreplication_healthcheck_max_timeout_count.
The max number of times that proxysql has timeout checking on a mgr node is controlled by a  parameter mysql-monitor_groupreplication_healthcheck_max_timeout_count.
In the following code:
(1)  line number 1545 of MySQL_Monitor.cpp file
if (mmsd->mysql_error_msg) {
if (strncasecmp(mmsd->mysql_error_msg, (char *)""timeout"", 7) == 0) {
num_timeouts=node->get_timeout_count();
proxy_warning(""%s:%d : group replication health check timeout count %d. Max threshold %d.\n"",
mmsd->hostname, mmsd->port, num_timeouts, mmsd->max_transactions_behind_count);
}
}
(2)   line number 2953 of MySQL_Monitor.cpp file
mmsd->max_transactions_behind_count=mysql_thread___monitor_groupreplication_max_transactions_behind_count
The max threshold of group replication health check timeout count is controlled by a  parameter mysql-monitor_groupreplication_healthcheck_max_timeout_count,  not this parameter:  mysql_thread___monitor_groupreplication_max_transactions_behind_count.","According to the parameter mysql-monitor_groupreplication_healthcheck_max_timeout_count description document: https://proxysql.com/documentation/global-variables/mysql-monitor-variables/#mysql-monitor_groupreplication_healthcheck_max_timeout_count.
The max number of times that proxysql has timeout checking on a mgr node is controlled by a  parameter mysql-monitor_groupreplication_healthcheck_max_timeout_count.
In the following code:
(1)  line number 1545 of MySQL_Monitor.cpp file
if (mmsd->mysql_error_msg) {
if (strncasecmp(mmsd->mysql_error_msg, (char *)""timeout"", 7) == 0) {
num_timeouts=node->get_timeout_count();
proxy_warning(""%s:%d : group replication health check timeout count %d. Max threshold %d.\n"",
mmsd->hostname, mmsd->port, num_timeouts, mmsd->max_transactions_behind_count);
}
}
(2)   line number 2953 of MySQL_Monitor.cpp file
mmsd->max_transactions_behind_count=mysql_thread___monitor_groupreplication_max_transactions_behind_count
The max threshold of group replication health check timeout count is controlled by a  parameter mysql-monitor_groupreplication_healthcheck_max_timeout_count,  not this parameter:  mysql_thread___monitor_groupreplication_max_transactions_behind_count.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3521,2021-07-12T04:56:04Z,,2022-03-10T21:49:38Z,OPEN,False,3,3,2,https://github.com/bskllzh,Close #3520:Fix incorrect log printing and useless class member attributes,2,[],https://github.com/sysown/proxysql/pull/3521,https://github.com/bskllzh,1,https://github.com/sysown/proxysql/pull/3521,"Close #3520
According to the parameter mysql-monitor_groupreplication_healthcheck_max_timeout_count description document: https://proxysql.com/documentation/global-variables/mysql-monitor-variables/#mysql-monitor_groupreplication_healthcheck_max_timeout_count.
The max number of times that proxysql has timeout checking on a mgr node is controlled by a parameter mysql-monitor_groupreplication_healthcheck_max_timeout_count.
In the following code:
(1) line number 1545 of MySQL_Monitor.cpp file
if (mmsd->mysql_error_msg) {
if (strncasecmp(mmsd->mysql_error_msg, (char *)""timeout"", 7) == 0) {
num_timeouts=node->get_timeout_count();
proxy_warning(""%s:%d : group replication health check timeout count %d. Max threshold %d.\n"",
mmsd->hostname, mmsd->port, num_timeouts, mmsd->max_transactions_behind_count);
}
}
(2) line number 2953 of MySQL_Monitor.cpp file
mmsd->max_transactions_behind_count=mysql_thread___monitor_groupreplication_max_transactions_behind_count
The max threshold of group replication health check timeout count is controlled by a parameter mysql-monitor_groupreplication_healthcheck_max_timeout_count, not this parameter: mysql_thread___monitor_groupreplication_max_transactions_behind_count.","Close #3520
According to the parameter mysql-monitor_groupreplication_healthcheck_max_timeout_count description document: https://proxysql.com/documentation/global-variables/mysql-monitor-variables/#mysql-monitor_groupreplication_healthcheck_max_timeout_count.
The max number of times that proxysql has timeout checking on a mgr node is controlled by a parameter mysql-monitor_groupreplication_healthcheck_max_timeout_count.
In the following code:
(1) line number 1545 of MySQL_Monitor.cpp file
if (mmsd->mysql_error_msg) {
if (strncasecmp(mmsd->mysql_error_msg, (char *)""timeout"", 7) == 0) {
num_timeouts=node->get_timeout_count();
proxy_warning(""%s:%d : group replication health check timeout count %d. Max threshold %d.\n"",
mmsd->hostname, mmsd->port, num_timeouts, mmsd->max_transactions_behind_count);
}
}
(2) line number 2953 of MySQL_Monitor.cpp file
mmsd->max_transactions_behind_count=mysql_thread___monitor_groupreplication_max_transactions_behind_count
The max threshold of group replication health check timeout count is controlled by a parameter mysql-monitor_groupreplication_healthcheck_max_timeout_count, not this parameter: mysql_thread___monitor_groupreplication_max_transactions_behind_count.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3521,2021-07-12T04:56:04Z,,2022-03-10T21:49:38Z,OPEN,False,3,3,2,https://github.com/bskllzh,Close #3520:Fix incorrect log printing and useless class member attributes,2,[],https://github.com/sysown/proxysql/pull/3521,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/3521#issuecomment-1064536508,"Close #3520
According to the parameter mysql-monitor_groupreplication_healthcheck_max_timeout_count description document: https://proxysql.com/documentation/global-variables/mysql-monitor-variables/#mysql-monitor_groupreplication_healthcheck_max_timeout_count.
The max number of times that proxysql has timeout checking on a mgr node is controlled by a parameter mysql-monitor_groupreplication_healthcheck_max_timeout_count.
In the following code:
(1) line number 1545 of MySQL_Monitor.cpp file
if (mmsd->mysql_error_msg) {
if (strncasecmp(mmsd->mysql_error_msg, (char *)""timeout"", 7) == 0) {
num_timeouts=node->get_timeout_count();
proxy_warning(""%s:%d : group replication health check timeout count %d. Max threshold %d.\n"",
mmsd->hostname, mmsd->port, num_timeouts, mmsd->max_transactions_behind_count);
}
}
(2) line number 2953 of MySQL_Monitor.cpp file
mmsd->max_transactions_behind_count=mysql_thread___monitor_groupreplication_max_transactions_behind_count
The max threshold of group replication health check timeout count is controlled by a parameter mysql-monitor_groupreplication_healthcheck_max_timeout_count, not this parameter: mysql_thread___monitor_groupreplication_max_transactions_behind_count.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3523,2021-07-13T10:01:36Z,2021-07-13T10:50:41Z,2022-04-30T16:11:33Z,MERGED,True,5,4,7,https://github.com/renecannao,Address update checker security issue(s) reported in #3518,2,[],https://github.com/sysown/proxysql/pull/3523,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3523,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3524,2021-07-13T16:23:11Z,2021-07-27T10:11:24Z,2021-07-27T10:11:24Z,MERGED,True,481,0,2,https://github.com/JavierJF,Closes #3508: Improve code coverage related to sqlite3-server,2,[],https://github.com/sysown/proxysql/pull/3524,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3524,Closes #3508.,Closes #3508.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3524,2021-07-13T16:23:11Z,2021-07-27T10:11:24Z,2021-07-27T10:11:24Z,MERGED,True,481,0,2,https://github.com/JavierJF,Closes #3508: Improve code coverage related to sqlite3-server,2,[],https://github.com/sysown/proxysql/pull/3524,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3524#issuecomment-879236181,Closes #3508.,Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3526,2021-07-14T17:18:42Z,2021-07-27T10:12:30Z,2021-07-27T10:12:30Z,MERGED,True,650,15,8,https://github.com/JavierJF,Closes #3500: Unsupported 'LOAD DATA LOCAL INFILE' command,6,[],https://github.com/sysown/proxysql/pull/3526,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3526,"Closes #3500.
NOTE:
Multiple attempts where performed to replicate crash described in this comment as requested in issue #3500. But all the attempts where unsuccessful.
To probe that no memory issues were observed during testing a valgrind output is attached after multiple passes of the provided tap test exercising the added code.
valgrind-log.txt
Valgrind output obtained via:
valgrind --leak-check=full --show-leak-kinds=all --track-origins=yes --verbose --log-file=valgrind-log.txt ./src/proxysql --sqlite3-server --idle-threads -f -c $JENKINS_SCRIPTS_PATH/proxysql_single_backend_tests/conf/proxysql/proxysql.cnf -D single_backend_datadir","Closes #3500.
NOTE:
Multiple attempts where performed to replicate crash described in this comment as requested in issue #3500. But all the attempts where unsuccessful.
To probe that no memory issues were observed during testing a valgrind output is attached after multiple passes of the provided tap test exercising the added code.
valgrind-log.txt
Valgrind output obtained via:
valgrind --leak-check=full --show-leak-kinds=all --track-origins=yes --verbose --log-file=valgrind-log.txt ./src/proxysql --sqlite3-server --idle-threads -f -c $JENKINS_SCRIPTS_PATH/proxysql_single_backend_tests/conf/proxysql/proxysql.cnf -D single_backend_datadir",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3527,2021-07-17T16:37:54Z,2021-08-26T07:43:32Z,2021-08-26T07:43:32Z,CLOSED,False,44,27,2,https://github.com/denishpatel,1. Adding created_at column to mysql_users table,3,[],https://github.com/sysown/proxysql/pull/3527,https://github.com/denishpatel,1,https://github.com/sysown/proxysql/pull/3527,Using created_at column for incremental fetch of mysql_users table on proxysql cluster,Using created_at column for incremental fetch of mysql_users table on proxysql cluster,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3527,2021-07-17T16:37:54Z,2021-08-26T07:43:32Z,2021-08-26T07:43:32Z,CLOSED,False,44,27,2,https://github.com/denishpatel,1. Adding created_at column to mysql_users table,3,[],https://github.com/sysown/proxysql/pull/3527,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/3527#issuecomment-881924125,Using created_at column for incremental fetch of mysql_users table on proxysql cluster,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3529,2021-07-20T22:22:33Z,2021-07-27T10:13:27Z,2021-07-27T10:13:27Z,MERGED,True,9,2,1,https://github.com/JavierJF,Closes #3502: ProxySQL crashed due to with assert for 'mybe' being null,1,[],https://github.com/sysown/proxysql/pull/3529,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3529,"Closes #3502.
Notes
After the proposed changes, the situation described in this issue comment is no longer reproducible with any of the two proposed techniques described in the same comment. Both techniques are able to create a consistent reproduction without the patch.","Closes #3502.
Notes
After the proposed changes, the situation described in this issue comment is no longer reproducible with any of the two proposed techniques described in the same comment. Both techniques are able to create a consistent reproduction without the patch.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3533,2021-07-22T11:41:57Z,2021-09-14T15:37:03Z,2022-04-30T16:10:14Z,MERGED,True,453,68,8,https://github.com/JavierJF,Changes current handling for replication lag in favor of setting lagging servers to SHUNNED state,13,[],https://github.com/sysown/proxysql/pull/3533,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3533,"This pull request introduces several changes to how lag in 'Group Replication'
is handled.
Old behavior
Servers which lag is above the threshold determined by
'mysql-groupreplication_max_transactions_behind_count' and had read_only=1
were set 'OFFLINE' until replication catch up.
New behavior
Servers which lag is above the threshold determined by
'mysql-groupreplication_max_transactions_behind_count' are 'SHUNNED' depending
on the value of the new introduced variable:
'mysql-monitor_groupreplication_max_transaction_behind_for_read_only'.
This variable has three possible values:

'0': Only servers with read_only=0 are placed as 'SHUNNED'.
'1': Only servers with read_only=1 are placed as 'SHUNNED' (default).
'2': Both servers with read_only=1 and read_only=0 are placed as 'SHUNNED'.

In addition to this behavior regarding to actions when 'groupreplication_max_transactions_behind_count'
is exceeded by a server. Now it's also possible to set severs configured as writers
in 'OFFLINE_SOFT' state, while preserving the server in the 'writer_hostgroup'.
For achieve this behavior, simply set a server which is configured as a 'writer'
i.e. the server 'hostgroup_id' is the 'writer_hostgroup', and set it's state to
be 'OFFLINE_SOFT', after this, issue a 'LOAD MYSQL SERVERS TO RUNTIME'. The
server should be preserved in the writer hostgroup but it's status should change
to 'OFFLINE_SOFT'.
Situation description
We have 3 servers, '2' writers and '1' reader for a MySQL Group Replication
Cluster of 3 nodes, the servers are configure in ProxySQL in the following way:
mysql> select * from mysql_servers;
+--------------+-----------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| hostgroup_id | hostname  | port | gtid_port | status | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |
+--------------+-----------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| 3272         | 127.2.1.1 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3272         | 127.2.1.2 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3273         | 127.2.1.3 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
+--------------+-----------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
3 rows in set (0.00 sec)

Resulting in the following cluster state in 'runtime_mysql_servers' table in
ProxySQL:
mysql: [Warning] Using a password on the command line interface can be insecure.
+--------------+-----------+------+-----------+--------+-----------------+---------+
| hostgroup_id | hostname  | port | gtid_port | status | max_connections | comment |
+--------------+-----------+------+-----------+--------+-----------------+---------+
| 3272         | 127.2.1.1 | 3306 | 0         | ONLINE | 1000            |         |
| 3273         | 127.2.1.2 | 3306 | 0         | ONLINE | 1000            |         |
| 3273         | 127.2.1.1 | 3306 | 0         | ONLINE | 1000            |         |
| 3273         | 127.2.1.3 | 3306 | 0         | ONLINE | 1000            |         |
| 3272         | 127.2.1.2 | 3306 | 0         | ONLINE | 1000            |         |
+--------------+-----------+------+-----------+--------+-----------------+---------+

Now we want to set the writer '127.2.1.2' to OFFLINE_SOFT, so we simply set it
via ProxySQL Admin:
UPDATE mysql_servers SET status='OFFLINE_SOFT' WHERE hostname='127.2.1.2';

And we load mysql_servers to runtime:
LOAD MYSQL SERVERS TO RUNTIME

The runtime_mysql_servers table should transition to the following state:
mysql: [Warning] Using a password on the command line interface can be insecure.
+--------------+-----------+------+-----------+--------------+-----------------+---------+
| hostgroup_id | hostname  | port | gtid_port | status       | max_connections | comment |
+--------------+-----------+------+-----------+--------------+-----------------+---------+
| 3272         | 127.2.1.1 | 3306 | 0         | ONLINE       | 1000            |         |
| 3273         | 127.2.1.2 | 3306 | 0         | OFFLINE_SOFT | 1000            |         |
| 3273         | 127.2.1.1 | 3306 | 0         | ONLINE       | 1000            |         |
| 3273         | 127.2.1.3 | 3306 | 0         | ONLINE       | 1000            |         |
| 3272         | 127.2.1.2 | 3306 | 0         | OFFLINE_SOFT | 1000            |         |
+--------------+-----------+------+-----------+--------------+-----------------+---------+

This change is performed, without afecting to any current transactions
behind executed in the server that have placed as 'OFFLINE_SOFT'. For making the
server operational again, it's required just to set it again to 'ONLINE' state.","This pull request introduces several changes to how lag in 'Group Replication'
is handled.
Old behavior
Servers which lag is above the threshold determined by
'mysql-groupreplication_max_transactions_behind_count' and had read_only=1
were set 'OFFLINE' until replication catch up.
New behavior
Servers which lag is above the threshold determined by
'mysql-groupreplication_max_transactions_behind_count' are 'SHUNNED' depending
on the value of the new introduced variable:
'mysql-monitor_groupreplication_max_transaction_behind_for_read_only'.
This variable has three possible values:

'0': Only servers with read_only=0 are placed as 'SHUNNED'.
'1': Only servers with read_only=1 are placed as 'SHUNNED' (default).
'2': Both servers with read_only=1 and read_only=0 are placed as 'SHUNNED'.

In addition to this behavior regarding to actions when 'groupreplication_max_transactions_behind_count'
is exceeded by a server. Now it's also possible to set severs configured as writers
in 'OFFLINE_SOFT' state, while preserving the server in the 'writer_hostgroup'.
For achieve this behavior, simply set a server which is configured as a 'writer'
i.e. the server 'hostgroup_id' is the 'writer_hostgroup', and set it's state to
be 'OFFLINE_SOFT', after this, issue a 'LOAD MYSQL SERVERS TO RUNTIME'. The
server should be preserved in the writer hostgroup but it's status should change
to 'OFFLINE_SOFT'.
Situation description
We have 3 servers, '2' writers and '1' reader for a MySQL Group Replication
Cluster of 3 nodes, the servers are configure in ProxySQL in the following way:
mysql> select * from mysql_servers;
+--------------+-----------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| hostgroup_id | hostname  | port | gtid_port | status | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |
+--------------+-----------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| 3272         | 127.2.1.1 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3272         | 127.2.1.2 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3273         | 127.2.1.3 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
+--------------+-----------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
3 rows in set (0.00 sec)

Resulting in the following cluster state in 'runtime_mysql_servers' table in
ProxySQL:
mysql: [Warning] Using a password on the command line interface can be insecure.
+--------------+-----------+------+-----------+--------+-----------------+---------+
| hostgroup_id | hostname  | port | gtid_port | status | max_connections | comment |
+--------------+-----------+------+-----------+--------+-----------------+---------+
| 3272         | 127.2.1.1 | 3306 | 0         | ONLINE | 1000            |         |
| 3273         | 127.2.1.2 | 3306 | 0         | ONLINE | 1000            |         |
| 3273         | 127.2.1.1 | 3306 | 0         | ONLINE | 1000            |         |
| 3273         | 127.2.1.3 | 3306 | 0         | ONLINE | 1000            |         |
| 3272         | 127.2.1.2 | 3306 | 0         | ONLINE | 1000            |         |
+--------------+-----------+------+-----------+--------+-----------------+---------+

Now we want to set the writer '127.2.1.2' to OFFLINE_SOFT, so we simply set it
via ProxySQL Admin:
UPDATE mysql_servers SET status='OFFLINE_SOFT' WHERE hostname='127.2.1.2';

And we load mysql_servers to runtime:
LOAD MYSQL SERVERS TO RUNTIME

The runtime_mysql_servers table should transition to the following state:
mysql: [Warning] Using a password on the command line interface can be insecure.
+--------------+-----------+------+-----------+--------------+-----------------+---------+
| hostgroup_id | hostname  | port | gtid_port | status       | max_connections | comment |
+--------------+-----------+------+-----------+--------------+-----------------+---------+
| 3272         | 127.2.1.1 | 3306 | 0         | ONLINE       | 1000            |         |
| 3273         | 127.2.1.2 | 3306 | 0         | OFFLINE_SOFT | 1000            |         |
| 3273         | 127.2.1.1 | 3306 | 0         | ONLINE       | 1000            |         |
| 3273         | 127.2.1.3 | 3306 | 0         | ONLINE       | 1000            |         |
| 3272         | 127.2.1.2 | 3306 | 0         | OFFLINE_SOFT | 1000            |         |
+--------------+-----------+------+-----------+--------------+-----------------+---------+

This change is performed, without afecting to any current transactions
behind executed in the server that have placed as 'OFFLINE_SOFT'. For making the
server operational again, it's required just to set it again to 'ONLINE' state.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3533,2021-07-22T11:41:57Z,2021-09-14T15:37:03Z,2022-04-30T16:10:14Z,MERGED,True,453,68,8,https://github.com/JavierJF,Changes current handling for replication lag in favor of setting lagging servers to SHUNNED state,13,[],https://github.com/sysown/proxysql/pull/3533,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3533#issuecomment-885143133,"This pull request introduces several changes to how lag in 'Group Replication'
is handled.
Old behavior
Servers which lag is above the threshold determined by
'mysql-groupreplication_max_transactions_behind_count' and had read_only=1
were set 'OFFLINE' until replication catch up.
New behavior
Servers which lag is above the threshold determined by
'mysql-groupreplication_max_transactions_behind_count' are 'SHUNNED' depending
on the value of the new introduced variable:
'mysql-monitor_groupreplication_max_transaction_behind_for_read_only'.
This variable has three possible values:

'0': Only servers with read_only=0 are placed as 'SHUNNED'.
'1': Only servers with read_only=1 are placed as 'SHUNNED' (default).
'2': Both servers with read_only=1 and read_only=0 are placed as 'SHUNNED'.

In addition to this behavior regarding to actions when 'groupreplication_max_transactions_behind_count'
is exceeded by a server. Now it's also possible to set severs configured as writers
in 'OFFLINE_SOFT' state, while preserving the server in the 'writer_hostgroup'.
For achieve this behavior, simply set a server which is configured as a 'writer'
i.e. the server 'hostgroup_id' is the 'writer_hostgroup', and set it's state to
be 'OFFLINE_SOFT', after this, issue a 'LOAD MYSQL SERVERS TO RUNTIME'. The
server should be preserved in the writer hostgroup but it's status should change
to 'OFFLINE_SOFT'.
Situation description
We have 3 servers, '2' writers and '1' reader for a MySQL Group Replication
Cluster of 3 nodes, the servers are configure in ProxySQL in the following way:
mysql> select * from mysql_servers;
+--------------+-----------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| hostgroup_id | hostname  | port | gtid_port | status | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |
+--------------+-----------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| 3272         | 127.2.1.1 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3272         | 127.2.1.2 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3273         | 127.2.1.3 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
+--------------+-----------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
3 rows in set (0.00 sec)

Resulting in the following cluster state in 'runtime_mysql_servers' table in
ProxySQL:
mysql: [Warning] Using a password on the command line interface can be insecure.
+--------------+-----------+------+-----------+--------+-----------------+---------+
| hostgroup_id | hostname  | port | gtid_port | status | max_connections | comment |
+--------------+-----------+------+-----------+--------+-----------------+---------+
| 3272         | 127.2.1.1 | 3306 | 0         | ONLINE | 1000            |         |
| 3273         | 127.2.1.2 | 3306 | 0         | ONLINE | 1000            |         |
| 3273         | 127.2.1.1 | 3306 | 0         | ONLINE | 1000            |         |
| 3273         | 127.2.1.3 | 3306 | 0         | ONLINE | 1000            |         |
| 3272         | 127.2.1.2 | 3306 | 0         | ONLINE | 1000            |         |
+--------------+-----------+------+-----------+--------+-----------------+---------+

Now we want to set the writer '127.2.1.2' to OFFLINE_SOFT, so we simply set it
via ProxySQL Admin:
UPDATE mysql_servers SET status='OFFLINE_SOFT' WHERE hostname='127.2.1.2';

And we load mysql_servers to runtime:
LOAD MYSQL SERVERS TO RUNTIME

The runtime_mysql_servers table should transition to the following state:
mysql: [Warning] Using a password on the command line interface can be insecure.
+--------------+-----------+------+-----------+--------------+-----------------+---------+
| hostgroup_id | hostname  | port | gtid_port | status       | max_connections | comment |
+--------------+-----------+------+-----------+--------------+-----------------+---------+
| 3272         | 127.2.1.1 | 3306 | 0         | ONLINE       | 1000            |         |
| 3273         | 127.2.1.2 | 3306 | 0         | OFFLINE_SOFT | 1000            |         |
| 3273         | 127.2.1.1 | 3306 | 0         | ONLINE       | 1000            |         |
| 3273         | 127.2.1.3 | 3306 | 0         | ONLINE       | 1000            |         |
| 3272         | 127.2.1.2 | 3306 | 0         | OFFLINE_SOFT | 1000            |         |
+--------------+-----------+------+-----------+--------------+-----------------+---------+

This change is performed, without afecting to any current transactions
behind executed in the server that have placed as 'OFFLINE_SOFT'. For making the
server operational again, it's required just to set it again to 'ONLINE' state.",Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3533,2021-07-22T11:41:57Z,2021-09-14T15:37:03Z,2022-04-30T16:10:14Z,MERGED,True,453,68,8,https://github.com/JavierJF,Changes current handling for replication lag in favor of setting lagging servers to SHUNNED state,13,[],https://github.com/sysown/proxysql/pull/3533,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3533#issuecomment-897424941,"This pull request introduces several changes to how lag in 'Group Replication'
is handled.
Old behavior
Servers which lag is above the threshold determined by
'mysql-groupreplication_max_transactions_behind_count' and had read_only=1
were set 'OFFLINE' until replication catch up.
New behavior
Servers which lag is above the threshold determined by
'mysql-groupreplication_max_transactions_behind_count' are 'SHUNNED' depending
on the value of the new introduced variable:
'mysql-monitor_groupreplication_max_transaction_behind_for_read_only'.
This variable has three possible values:

'0': Only servers with read_only=0 are placed as 'SHUNNED'.
'1': Only servers with read_only=1 are placed as 'SHUNNED' (default).
'2': Both servers with read_only=1 and read_only=0 are placed as 'SHUNNED'.

In addition to this behavior regarding to actions when 'groupreplication_max_transactions_behind_count'
is exceeded by a server. Now it's also possible to set severs configured as writers
in 'OFFLINE_SOFT' state, while preserving the server in the 'writer_hostgroup'.
For achieve this behavior, simply set a server which is configured as a 'writer'
i.e. the server 'hostgroup_id' is the 'writer_hostgroup', and set it's state to
be 'OFFLINE_SOFT', after this, issue a 'LOAD MYSQL SERVERS TO RUNTIME'. The
server should be preserved in the writer hostgroup but it's status should change
to 'OFFLINE_SOFT'.
Situation description
We have 3 servers, '2' writers and '1' reader for a MySQL Group Replication
Cluster of 3 nodes, the servers are configure in ProxySQL in the following way:
mysql> select * from mysql_servers;
+--------------+-----------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| hostgroup_id | hostname  | port | gtid_port | status | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |
+--------------+-----------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| 3272         | 127.2.1.1 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3272         | 127.2.1.2 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3273         | 127.2.1.3 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
+--------------+-----------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
3 rows in set (0.00 sec)

Resulting in the following cluster state in 'runtime_mysql_servers' table in
ProxySQL:
mysql: [Warning] Using a password on the command line interface can be insecure.
+--------------+-----------+------+-----------+--------+-----------------+---------+
| hostgroup_id | hostname  | port | gtid_port | status | max_connections | comment |
+--------------+-----------+------+-----------+--------+-----------------+---------+
| 3272         | 127.2.1.1 | 3306 | 0         | ONLINE | 1000            |         |
| 3273         | 127.2.1.2 | 3306 | 0         | ONLINE | 1000            |         |
| 3273         | 127.2.1.1 | 3306 | 0         | ONLINE | 1000            |         |
| 3273         | 127.2.1.3 | 3306 | 0         | ONLINE | 1000            |         |
| 3272         | 127.2.1.2 | 3306 | 0         | ONLINE | 1000            |         |
+--------------+-----------+------+-----------+--------+-----------------+---------+

Now we want to set the writer '127.2.1.2' to OFFLINE_SOFT, so we simply set it
via ProxySQL Admin:
UPDATE mysql_servers SET status='OFFLINE_SOFT' WHERE hostname='127.2.1.2';

And we load mysql_servers to runtime:
LOAD MYSQL SERVERS TO RUNTIME

The runtime_mysql_servers table should transition to the following state:
mysql: [Warning] Using a password on the command line interface can be insecure.
+--------------+-----------+------+-----------+--------------+-----------------+---------+
| hostgroup_id | hostname  | port | gtid_port | status       | max_connections | comment |
+--------------+-----------+------+-----------+--------------+-----------------+---------+
| 3272         | 127.2.1.1 | 3306 | 0         | ONLINE       | 1000            |         |
| 3273         | 127.2.1.2 | 3306 | 0         | OFFLINE_SOFT | 1000            |         |
| 3273         | 127.2.1.1 | 3306 | 0         | ONLINE       | 1000            |         |
| 3273         | 127.2.1.3 | 3306 | 0         | ONLINE       | 1000            |         |
| 3272         | 127.2.1.2 | 3306 | 0         | OFFLINE_SOFT | 1000            |         |
+--------------+-----------+------+-----------+--------------+-----------------+---------+

This change is performed, without afecting to any current transactions
behind executed in the server that have placed as 'OFFLINE_SOFT'. For making the
server operational again, it's required just to set it again to 'ONLINE' state.","We need to merge this.
@JavierJF : can you please document it?",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3533,2021-07-22T11:41:57Z,2021-09-14T15:37:03Z,2022-04-30T16:10:14Z,MERGED,True,453,68,8,https://github.com/JavierJF,Changes current handling for replication lag in favor of setting lagging servers to SHUNNED state,13,[],https://github.com/sysown/proxysql/pull/3533,https://github.com/bskllzh,4,https://github.com/sysown/proxysql/pull/3533#issuecomment-902079452,"This pull request introduces several changes to how lag in 'Group Replication'
is handled.
Old behavior
Servers which lag is above the threshold determined by
'mysql-groupreplication_max_transactions_behind_count' and had read_only=1
were set 'OFFLINE' until replication catch up.
New behavior
Servers which lag is above the threshold determined by
'mysql-groupreplication_max_transactions_behind_count' are 'SHUNNED' depending
on the value of the new introduced variable:
'mysql-monitor_groupreplication_max_transaction_behind_for_read_only'.
This variable has three possible values:

'0': Only servers with read_only=0 are placed as 'SHUNNED'.
'1': Only servers with read_only=1 are placed as 'SHUNNED' (default).
'2': Both servers with read_only=1 and read_only=0 are placed as 'SHUNNED'.

In addition to this behavior regarding to actions when 'groupreplication_max_transactions_behind_count'
is exceeded by a server. Now it's also possible to set severs configured as writers
in 'OFFLINE_SOFT' state, while preserving the server in the 'writer_hostgroup'.
For achieve this behavior, simply set a server which is configured as a 'writer'
i.e. the server 'hostgroup_id' is the 'writer_hostgroup', and set it's state to
be 'OFFLINE_SOFT', after this, issue a 'LOAD MYSQL SERVERS TO RUNTIME'. The
server should be preserved in the writer hostgroup but it's status should change
to 'OFFLINE_SOFT'.
Situation description
We have 3 servers, '2' writers and '1' reader for a MySQL Group Replication
Cluster of 3 nodes, the servers are configure in ProxySQL in the following way:
mysql> select * from mysql_servers;
+--------------+-----------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| hostgroup_id | hostname  | port | gtid_port | status | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |
+--------------+-----------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| 3272         | 127.2.1.1 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3272         | 127.2.1.2 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3273         | 127.2.1.3 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
+--------------+-----------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
3 rows in set (0.00 sec)

Resulting in the following cluster state in 'runtime_mysql_servers' table in
ProxySQL:
mysql: [Warning] Using a password on the command line interface can be insecure.
+--------------+-----------+------+-----------+--------+-----------------+---------+
| hostgroup_id | hostname  | port | gtid_port | status | max_connections | comment |
+--------------+-----------+------+-----------+--------+-----------------+---------+
| 3272         | 127.2.1.1 | 3306 | 0         | ONLINE | 1000            |         |
| 3273         | 127.2.1.2 | 3306 | 0         | ONLINE | 1000            |         |
| 3273         | 127.2.1.1 | 3306 | 0         | ONLINE | 1000            |         |
| 3273         | 127.2.1.3 | 3306 | 0         | ONLINE | 1000            |         |
| 3272         | 127.2.1.2 | 3306 | 0         | ONLINE | 1000            |         |
+--------------+-----------+------+-----------+--------+-----------------+---------+

Now we want to set the writer '127.2.1.2' to OFFLINE_SOFT, so we simply set it
via ProxySQL Admin:
UPDATE mysql_servers SET status='OFFLINE_SOFT' WHERE hostname='127.2.1.2';

And we load mysql_servers to runtime:
LOAD MYSQL SERVERS TO RUNTIME

The runtime_mysql_servers table should transition to the following state:
mysql: [Warning] Using a password on the command line interface can be insecure.
+--------------+-----------+------+-----------+--------------+-----------------+---------+
| hostgroup_id | hostname  | port | gtid_port | status       | max_connections | comment |
+--------------+-----------+------+-----------+--------------+-----------------+---------+
| 3272         | 127.2.1.1 | 3306 | 0         | ONLINE       | 1000            |         |
| 3273         | 127.2.1.2 | 3306 | 0         | OFFLINE_SOFT | 1000            |         |
| 3273         | 127.2.1.1 | 3306 | 0         | ONLINE       | 1000            |         |
| 3273         | 127.2.1.3 | 3306 | 0         | ONLINE       | 1000            |         |
| 3272         | 127.2.1.2 | 3306 | 0         | OFFLINE_SOFT | 1000            |         |
+--------------+-----------+------+-----------+--------------+-----------------+---------+

This change is performed, without afecting to any current transactions
behind executed in the server that have placed as 'OFFLINE_SOFT'. For making the
server operational again, it's required just to set it again to 'ONLINE' state.","@JavierJF @renecannao , I think there are not many scenarios for mgr with multiple master.  For single master mode, there are more scenarios for using single master mode.  And when the slave server is in a state where the delay exceeds the threshold,  proxysql will immediately offline the slave server.  I think this is inappropriate, because it will interrupt the business and cause the program to report an error.  I submitted a fix PR, set it to OFFLINE_SOFT , and softly released the delay slave server.  Please review PR: #3473.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3533,2021-07-22T11:41:57Z,2021-09-14T15:37:03Z,2022-04-30T16:10:14Z,MERGED,True,453,68,8,https://github.com/JavierJF,Changes current handling for replication lag in favor of setting lagging servers to SHUNNED state,13,[],https://github.com/sysown/proxysql/pull/3533,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/3533#issuecomment-905367581,"This pull request introduces several changes to how lag in 'Group Replication'
is handled.
Old behavior
Servers which lag is above the threshold determined by
'mysql-groupreplication_max_transactions_behind_count' and had read_only=1
were set 'OFFLINE' until replication catch up.
New behavior
Servers which lag is above the threshold determined by
'mysql-groupreplication_max_transactions_behind_count' are 'SHUNNED' depending
on the value of the new introduced variable:
'mysql-monitor_groupreplication_max_transaction_behind_for_read_only'.
This variable has three possible values:

'0': Only servers with read_only=0 are placed as 'SHUNNED'.
'1': Only servers with read_only=1 are placed as 'SHUNNED' (default).
'2': Both servers with read_only=1 and read_only=0 are placed as 'SHUNNED'.

In addition to this behavior regarding to actions when 'groupreplication_max_transactions_behind_count'
is exceeded by a server. Now it's also possible to set severs configured as writers
in 'OFFLINE_SOFT' state, while preserving the server in the 'writer_hostgroup'.
For achieve this behavior, simply set a server which is configured as a 'writer'
i.e. the server 'hostgroup_id' is the 'writer_hostgroup', and set it's state to
be 'OFFLINE_SOFT', after this, issue a 'LOAD MYSQL SERVERS TO RUNTIME'. The
server should be preserved in the writer hostgroup but it's status should change
to 'OFFLINE_SOFT'.
Situation description
We have 3 servers, '2' writers and '1' reader for a MySQL Group Replication
Cluster of 3 nodes, the servers are configure in ProxySQL in the following way:
mysql> select * from mysql_servers;
+--------------+-----------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| hostgroup_id | hostname  | port | gtid_port | status | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |
+--------------+-----------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| 3272         | 127.2.1.1 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3272         | 127.2.1.2 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3273         | 127.2.1.3 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
+--------------+-----------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
3 rows in set (0.00 sec)

Resulting in the following cluster state in 'runtime_mysql_servers' table in
ProxySQL:
mysql: [Warning] Using a password on the command line interface can be insecure.
+--------------+-----------+------+-----------+--------+-----------------+---------+
| hostgroup_id | hostname  | port | gtid_port | status | max_connections | comment |
+--------------+-----------+------+-----------+--------+-----------------+---------+
| 3272         | 127.2.1.1 | 3306 | 0         | ONLINE | 1000            |         |
| 3273         | 127.2.1.2 | 3306 | 0         | ONLINE | 1000            |         |
| 3273         | 127.2.1.1 | 3306 | 0         | ONLINE | 1000            |         |
| 3273         | 127.2.1.3 | 3306 | 0         | ONLINE | 1000            |         |
| 3272         | 127.2.1.2 | 3306 | 0         | ONLINE | 1000            |         |
+--------------+-----------+------+-----------+--------+-----------------+---------+

Now we want to set the writer '127.2.1.2' to OFFLINE_SOFT, so we simply set it
via ProxySQL Admin:
UPDATE mysql_servers SET status='OFFLINE_SOFT' WHERE hostname='127.2.1.2';

And we load mysql_servers to runtime:
LOAD MYSQL SERVERS TO RUNTIME

The runtime_mysql_servers table should transition to the following state:
mysql: [Warning] Using a password on the command line interface can be insecure.
+--------------+-----------+------+-----------+--------------+-----------------+---------+
| hostgroup_id | hostname  | port | gtid_port | status       | max_connections | comment |
+--------------+-----------+------+-----------+--------------+-----------------+---------+
| 3272         | 127.2.1.1 | 3306 | 0         | ONLINE       | 1000            |         |
| 3273         | 127.2.1.2 | 3306 | 0         | OFFLINE_SOFT | 1000            |         |
| 3273         | 127.2.1.1 | 3306 | 0         | ONLINE       | 1000            |         |
| 3273         | 127.2.1.3 | 3306 | 0         | ONLINE       | 1000            |         |
| 3272         | 127.2.1.2 | 3306 | 0         | OFFLINE_SOFT | 1000            |         |
+--------------+-----------+------+-----------+--------------+-----------------+---------+

This change is performed, without afecting to any current transactions
behind executed in the server that have placed as 'OFFLINE_SOFT'. For making the
server operational again, it's required just to set it again to 'ONLINE' state.","Hi @bskllzh . Thank you for your feedback.
I think I get your point, and I absolutely agree with the problem you are pointing at.
Although, I think OFFLINE_SOFT is not the right approach.
Let me explain.
OFFLINE_SOFT is a configuration state, and a server in this state is configured to not be used for new connections, but not only...
SHUNNED is instead a temporary status from which the server should automatically recover.
In other words, a server shouldn't automatically go from OFFLINE_SOFT to ONLINE , but should automatically go from SHUNNED to ONLINE.
In fact, PR #3473 would conflict with what said previously: a server in OFFLINE_SOFT should never be returned to ONLINE automatically (and this is now implemented in PR #3533).

And when the slave server is in a state where the delay exceeds the threshold, proxysql will immediately offline the slave server. I think this is inappropriate, because it will interrupt the business and cause the program to report an error.

This is by design.
All the details are here: #774
We could set status to MYSQL_SERVER_STATUS_SHUNNED instead of MYSQL_SERVER_STATUS_SHUNNED_REPLICATION_LAG .
This will solve the issue of connections being closed immediately, but hostgroup manager automatically tries to bring a server back online from shunned, no matter if replication lag is still present or not: this is why MYSQL_SERVER_STATUS_SHUNNED_REPLICATION_LAG exists and is different than state MYSQL_SERVER_STATUS_SHUNNED .
Thinking about a possible solution, we could implement a mechanism in which a node is first configured as MYSQL_SERVER_STATUS_SHUNNED and then MYSQL_SERVER_STATUS_SHUNNED_REPLICATION_LAG if replication lag doesn't recover quickly.
The state MYSQL_SERVER_STATUS_SHUNNED_REPLICATION_LAG should be set within a short period of time after MYSQL_SERVER_STATUS_SHUNNED because otherwise the node could go ONLINE while it shouldn't.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3533,2021-07-22T11:41:57Z,2021-09-14T15:37:03Z,2022-04-30T16:10:14Z,MERGED,True,453,68,8,https://github.com/JavierJF,Changes current handling for replication lag in favor of setting lagging servers to SHUNNED state,13,[],https://github.com/sysown/proxysql/pull/3533,https://github.com/bskllzh,6,https://github.com/sysown/proxysql/pull/3533#issuecomment-905563213,"This pull request introduces several changes to how lag in 'Group Replication'
is handled.
Old behavior
Servers which lag is above the threshold determined by
'mysql-groupreplication_max_transactions_behind_count' and had read_only=1
were set 'OFFLINE' until replication catch up.
New behavior
Servers which lag is above the threshold determined by
'mysql-groupreplication_max_transactions_behind_count' are 'SHUNNED' depending
on the value of the new introduced variable:
'mysql-monitor_groupreplication_max_transaction_behind_for_read_only'.
This variable has three possible values:

'0': Only servers with read_only=0 are placed as 'SHUNNED'.
'1': Only servers with read_only=1 are placed as 'SHUNNED' (default).
'2': Both servers with read_only=1 and read_only=0 are placed as 'SHUNNED'.

In addition to this behavior regarding to actions when 'groupreplication_max_transactions_behind_count'
is exceeded by a server. Now it's also possible to set severs configured as writers
in 'OFFLINE_SOFT' state, while preserving the server in the 'writer_hostgroup'.
For achieve this behavior, simply set a server which is configured as a 'writer'
i.e. the server 'hostgroup_id' is the 'writer_hostgroup', and set it's state to
be 'OFFLINE_SOFT', after this, issue a 'LOAD MYSQL SERVERS TO RUNTIME'. The
server should be preserved in the writer hostgroup but it's status should change
to 'OFFLINE_SOFT'.
Situation description
We have 3 servers, '2' writers and '1' reader for a MySQL Group Replication
Cluster of 3 nodes, the servers are configure in ProxySQL in the following way:
mysql> select * from mysql_servers;
+--------------+-----------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| hostgroup_id | hostname  | port | gtid_port | status | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |
+--------------+-----------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| 3272         | 127.2.1.1 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3272         | 127.2.1.2 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3273         | 127.2.1.3 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
+--------------+-----------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
3 rows in set (0.00 sec)

Resulting in the following cluster state in 'runtime_mysql_servers' table in
ProxySQL:
mysql: [Warning] Using a password on the command line interface can be insecure.
+--------------+-----------+------+-----------+--------+-----------------+---------+
| hostgroup_id | hostname  | port | gtid_port | status | max_connections | comment |
+--------------+-----------+------+-----------+--------+-----------------+---------+
| 3272         | 127.2.1.1 | 3306 | 0         | ONLINE | 1000            |         |
| 3273         | 127.2.1.2 | 3306 | 0         | ONLINE | 1000            |         |
| 3273         | 127.2.1.1 | 3306 | 0         | ONLINE | 1000            |         |
| 3273         | 127.2.1.3 | 3306 | 0         | ONLINE | 1000            |         |
| 3272         | 127.2.1.2 | 3306 | 0         | ONLINE | 1000            |         |
+--------------+-----------+------+-----------+--------+-----------------+---------+

Now we want to set the writer '127.2.1.2' to OFFLINE_SOFT, so we simply set it
via ProxySQL Admin:
UPDATE mysql_servers SET status='OFFLINE_SOFT' WHERE hostname='127.2.1.2';

And we load mysql_servers to runtime:
LOAD MYSQL SERVERS TO RUNTIME

The runtime_mysql_servers table should transition to the following state:
mysql: [Warning] Using a password on the command line interface can be insecure.
+--------------+-----------+------+-----------+--------------+-----------------+---------+
| hostgroup_id | hostname  | port | gtid_port | status       | max_connections | comment |
+--------------+-----------+------+-----------+--------------+-----------------+---------+
| 3272         | 127.2.1.1 | 3306 | 0         | ONLINE       | 1000            |         |
| 3273         | 127.2.1.2 | 3306 | 0         | OFFLINE_SOFT | 1000            |         |
| 3273         | 127.2.1.1 | 3306 | 0         | ONLINE       | 1000            |         |
| 3273         | 127.2.1.3 | 3306 | 0         | ONLINE       | 1000            |         |
| 3272         | 127.2.1.2 | 3306 | 0         | OFFLINE_SOFT | 1000            |         |
+--------------+-----------+------+-----------+--------------+-----------------+---------+

This change is performed, without afecting to any current transactions
behind executed in the server that have placed as 'OFFLINE_SOFT'. For making the
server operational again, it's required just to set it again to 'ONLINE' state.","@renecannao,  PR #3473 , i added a mgr_replication_lag_status(MGR replication lag flag, true lag, false not lag) parameter to distinguish whether the server was manually configured to the configuration state, or the state changed to OFFLINE_SOFT due to the delay of the mysql slave.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3533,2021-07-22T11:41:57Z,2021-09-14T15:37:03Z,2022-04-30T16:10:14Z,MERGED,True,453,68,8,https://github.com/JavierJF,Changes current handling for replication lag in favor of setting lagging servers to SHUNNED state,13,[],https://github.com/sysown/proxysql/pull/3533,https://github.com/renecannao,7,https://github.com/sysown/proxysql/pull/3533#issuecomment-905908225,"This pull request introduces several changes to how lag in 'Group Replication'
is handled.
Old behavior
Servers which lag is above the threshold determined by
'mysql-groupreplication_max_transactions_behind_count' and had read_only=1
were set 'OFFLINE' until replication catch up.
New behavior
Servers which lag is above the threshold determined by
'mysql-groupreplication_max_transactions_behind_count' are 'SHUNNED' depending
on the value of the new introduced variable:
'mysql-monitor_groupreplication_max_transaction_behind_for_read_only'.
This variable has three possible values:

'0': Only servers with read_only=0 are placed as 'SHUNNED'.
'1': Only servers with read_only=1 are placed as 'SHUNNED' (default).
'2': Both servers with read_only=1 and read_only=0 are placed as 'SHUNNED'.

In addition to this behavior regarding to actions when 'groupreplication_max_transactions_behind_count'
is exceeded by a server. Now it's also possible to set severs configured as writers
in 'OFFLINE_SOFT' state, while preserving the server in the 'writer_hostgroup'.
For achieve this behavior, simply set a server which is configured as a 'writer'
i.e. the server 'hostgroup_id' is the 'writer_hostgroup', and set it's state to
be 'OFFLINE_SOFT', after this, issue a 'LOAD MYSQL SERVERS TO RUNTIME'. The
server should be preserved in the writer hostgroup but it's status should change
to 'OFFLINE_SOFT'.
Situation description
We have 3 servers, '2' writers and '1' reader for a MySQL Group Replication
Cluster of 3 nodes, the servers are configure in ProxySQL in the following way:
mysql> select * from mysql_servers;
+--------------+-----------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| hostgroup_id | hostname  | port | gtid_port | status | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |
+--------------+-----------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| 3272         | 127.2.1.1 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3272         | 127.2.1.2 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3273         | 127.2.1.3 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
+--------------+-----------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
3 rows in set (0.00 sec)

Resulting in the following cluster state in 'runtime_mysql_servers' table in
ProxySQL:
mysql: [Warning] Using a password on the command line interface can be insecure.
+--------------+-----------+------+-----------+--------+-----------------+---------+
| hostgroup_id | hostname  | port | gtid_port | status | max_connections | comment |
+--------------+-----------+------+-----------+--------+-----------------+---------+
| 3272         | 127.2.1.1 | 3306 | 0         | ONLINE | 1000            |         |
| 3273         | 127.2.1.2 | 3306 | 0         | ONLINE | 1000            |         |
| 3273         | 127.2.1.1 | 3306 | 0         | ONLINE | 1000            |         |
| 3273         | 127.2.1.3 | 3306 | 0         | ONLINE | 1000            |         |
| 3272         | 127.2.1.2 | 3306 | 0         | ONLINE | 1000            |         |
+--------------+-----------+------+-----------+--------+-----------------+---------+

Now we want to set the writer '127.2.1.2' to OFFLINE_SOFT, so we simply set it
via ProxySQL Admin:
UPDATE mysql_servers SET status='OFFLINE_SOFT' WHERE hostname='127.2.1.2';

And we load mysql_servers to runtime:
LOAD MYSQL SERVERS TO RUNTIME

The runtime_mysql_servers table should transition to the following state:
mysql: [Warning] Using a password on the command line interface can be insecure.
+--------------+-----------+------+-----------+--------------+-----------------+---------+
| hostgroup_id | hostname  | port | gtid_port | status       | max_connections | comment |
+--------------+-----------+------+-----------+--------------+-----------------+---------+
| 3272         | 127.2.1.1 | 3306 | 0         | ONLINE       | 1000            |         |
| 3273         | 127.2.1.2 | 3306 | 0         | OFFLINE_SOFT | 1000            |         |
| 3273         | 127.2.1.1 | 3306 | 0         | ONLINE       | 1000            |         |
| 3273         | 127.2.1.3 | 3306 | 0         | ONLINE       | 1000            |         |
| 3272         | 127.2.1.2 | 3306 | 0         | OFFLINE_SOFT | 1000            |         |
+--------------+-----------+------+-----------+--------------+-----------------+---------+

This change is performed, without afecting to any current transactions
behind executed in the server that have placed as 'OFFLINE_SOFT'. For making the
server operational again, it's required just to set it again to 'ONLINE' state.","@bskllzh , thank you for pointing out the new flag.
I implemented what I suggested in my previous comment. See dd71fcd
What is your feedback on that?
About your comment:

I think there are not many scenarios for mgr with multiple master. For single master mode, there are more scenarios for using single master mode

Please note that the enhancements in this PR are driven from the needs of a customer, that requires multi-writers, disable a node no matter if writer of reader (this is why we added a new variable to control this behavior), the ability to prevent configured OFFLINE_SOFT, and to not interfere with the status of the same server in an hostgroup not part of the cluster.
This PR is a combination of enhancements, bugs fixes, and new features.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3533,2021-07-22T11:41:57Z,2021-09-14T15:37:03Z,2022-04-30T16:10:14Z,MERGED,True,453,68,8,https://github.com/JavierJF,Changes current handling for replication lag in favor of setting lagging servers to SHUNNED state,13,[],https://github.com/sysown/proxysql/pull/3533,https://github.com/bskllzh,8,https://github.com/sysown/proxysql/pull/3533#issuecomment-906496581,"This pull request introduces several changes to how lag in 'Group Replication'
is handled.
Old behavior
Servers which lag is above the threshold determined by
'mysql-groupreplication_max_transactions_behind_count' and had read_only=1
were set 'OFFLINE' until replication catch up.
New behavior
Servers which lag is above the threshold determined by
'mysql-groupreplication_max_transactions_behind_count' are 'SHUNNED' depending
on the value of the new introduced variable:
'mysql-monitor_groupreplication_max_transaction_behind_for_read_only'.
This variable has three possible values:

'0': Only servers with read_only=0 are placed as 'SHUNNED'.
'1': Only servers with read_only=1 are placed as 'SHUNNED' (default).
'2': Both servers with read_only=1 and read_only=0 are placed as 'SHUNNED'.

In addition to this behavior regarding to actions when 'groupreplication_max_transactions_behind_count'
is exceeded by a server. Now it's also possible to set severs configured as writers
in 'OFFLINE_SOFT' state, while preserving the server in the 'writer_hostgroup'.
For achieve this behavior, simply set a server which is configured as a 'writer'
i.e. the server 'hostgroup_id' is the 'writer_hostgroup', and set it's state to
be 'OFFLINE_SOFT', after this, issue a 'LOAD MYSQL SERVERS TO RUNTIME'. The
server should be preserved in the writer hostgroup but it's status should change
to 'OFFLINE_SOFT'.
Situation description
We have 3 servers, '2' writers and '1' reader for a MySQL Group Replication
Cluster of 3 nodes, the servers are configure in ProxySQL in the following way:
mysql> select * from mysql_servers;
+--------------+-----------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| hostgroup_id | hostname  | port | gtid_port | status | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |
+--------------+-----------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
| 3272         | 127.2.1.1 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3272         | 127.2.1.2 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
| 3273         | 127.2.1.3 | 3306 | 0         | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |
+--------------+-----------+------+-----------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+
3 rows in set (0.00 sec)

Resulting in the following cluster state in 'runtime_mysql_servers' table in
ProxySQL:
mysql: [Warning] Using a password on the command line interface can be insecure.
+--------------+-----------+------+-----------+--------+-----------------+---------+
| hostgroup_id | hostname  | port | gtid_port | status | max_connections | comment |
+--------------+-----------+------+-----------+--------+-----------------+---------+
| 3272         | 127.2.1.1 | 3306 | 0         | ONLINE | 1000            |         |
| 3273         | 127.2.1.2 | 3306 | 0         | ONLINE | 1000            |         |
| 3273         | 127.2.1.1 | 3306 | 0         | ONLINE | 1000            |         |
| 3273         | 127.2.1.3 | 3306 | 0         | ONLINE | 1000            |         |
| 3272         | 127.2.1.2 | 3306 | 0         | ONLINE | 1000            |         |
+--------------+-----------+------+-----------+--------+-----------------+---------+

Now we want to set the writer '127.2.1.2' to OFFLINE_SOFT, so we simply set it
via ProxySQL Admin:
UPDATE mysql_servers SET status='OFFLINE_SOFT' WHERE hostname='127.2.1.2';

And we load mysql_servers to runtime:
LOAD MYSQL SERVERS TO RUNTIME

The runtime_mysql_servers table should transition to the following state:
mysql: [Warning] Using a password on the command line interface can be insecure.
+--------------+-----------+------+-----------+--------------+-----------------+---------+
| hostgroup_id | hostname  | port | gtid_port | status       | max_connections | comment |
+--------------+-----------+------+-----------+--------------+-----------------+---------+
| 3272         | 127.2.1.1 | 3306 | 0         | ONLINE       | 1000            |         |
| 3273         | 127.2.1.2 | 3306 | 0         | OFFLINE_SOFT | 1000            |         |
| 3273         | 127.2.1.1 | 3306 | 0         | ONLINE       | 1000            |         |
| 3273         | 127.2.1.3 | 3306 | 0         | ONLINE       | 1000            |         |
| 3272         | 127.2.1.2 | 3306 | 0         | OFFLINE_SOFT | 1000            |         |
+--------------+-----------+------+-----------+--------------+-----------------+---------+

This change is performed, without afecting to any current transactions
behind executed in the server that have placed as 'OFFLINE_SOFT'. For making the
server operational again, it's required just to set it again to 'ONLINE' state.","@renecannao , PR dd71fcd,  I think
the code is too complicated and this is to complicate simple things.  Because for the program, do not interrupt its connection due to the delay of the mysql slave until it catches up. And It may take a long time for the slave to catch up with the master, not for a while.  For example, when it comes to big transaction.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3537,2021-07-24T13:50:26Z,2021-08-05T10:55:49Z,2021-08-05T10:55:49Z,MERGED,True,131,38,1,https://github.com/JavierJF,Closes #3536: Fix tap test 'reg_test_3223-restapi_return_codes-t' spurious failure in CI,1,[],https://github.com/sysown/proxysql/pull/3537,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3537,closes #3536.,closes #3536.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3540,2021-07-27T12:13:12Z,2021-08-10T18:11:16Z,2021-08-10T18:11:16Z,MERGED,True,6,8,1,https://github.com/JavierJF,Closes #3539: Replaced manual search for 'MyHGC' in favor of optimized 'MyHGC_find',2,[],https://github.com/sysown/proxysql/pull/3540,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3540,closes #3539.,closes #3539.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3543,2021-07-29T15:43:23Z,,2022-03-10T21:49:36Z,OPEN,False,2,2,1,https://github.com/bskllzh,Fix incorrect minimum values ‚Äã‚Äãof two parameters,1,[],https://github.com/sysown/proxysql/pull/3543,https://github.com/bskllzh,1,https://github.com/sysown/proxysql/pull/3543,"Closes #3542
Correct the minimum value of the two parameters.
monitor_groupreplication_healthcheck_interval :   Minimum  50
monitor_groupreplication_healthcheck_timeout:   Minimum  50
Reference documentsÔºö
(1) monitor_groupreplication_healthcheck_interval -- https://proxysql.com/documentation/global-variables/mysql-monitor-variables/#mysql-monitor_groupreplication_healthcheck_interval
(2) monitor_groupreplication_healthcheck_timeout -- https://proxysql.com/documentation/global-variables/mysql-monitor-variables/#mysql-monitor_groupreplication_healthcheck_timeout","Closes #3542
Correct the minimum value of the two parameters.
monitor_groupreplication_healthcheck_interval :   Minimum  50
monitor_groupreplication_healthcheck_timeout:   Minimum  50
Reference documentsÔºö
(1) monitor_groupreplication_healthcheck_interval -- https://proxysql.com/documentation/global-variables/mysql-monitor-variables/#mysql-monitor_groupreplication_healthcheck_interval
(2) monitor_groupreplication_healthcheck_timeout -- https://proxysql.com/documentation/global-variables/mysql-monitor-variables/#mysql-monitor_groupreplication_healthcheck_timeout",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3543,2021-07-29T15:43:23Z,,2022-03-10T21:49:36Z,OPEN,False,2,2,1,https://github.com/bskllzh,Fix incorrect minimum values ‚Äã‚Äãof two parameters,1,[],https://github.com/sysown/proxysql/pull/3543,https://github.com/frivoire,2,https://github.com/sysown/proxysql/pull/3543#issuecomment-892590500,"Closes #3542
Correct the minimum value of the two parameters.
monitor_groupreplication_healthcheck_interval :   Minimum  50
monitor_groupreplication_healthcheck_timeout:   Minimum  50
Reference documentsÔºö
(1) monitor_groupreplication_healthcheck_interval -- https://proxysql.com/documentation/global-variables/mysql-monitor-variables/#mysql-monitor_groupreplication_healthcheck_interval
(2) monitor_groupreplication_healthcheck_timeout -- https://proxysql.com/documentation/global-variables/mysql-monitor-variables/#mysql-monitor_groupreplication_healthcheck_timeout","From what I understand: the current situation is:

the doc says: ""min is 50""
the code implements: ""min is 100""

So, can you share why you think it's better to change the code (so keep 50 everywhere) and not fix the doc (so keep 100) ?",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3543,2021-07-29T15:43:23Z,,2022-03-10T21:49:36Z,OPEN,False,2,2,1,https://github.com/bskllzh,Fix incorrect minimum values ‚Äã‚Äãof two parameters,1,[],https://github.com/sysown/proxysql/pull/3543,https://github.com/bskllzh,3,https://github.com/sysown/proxysql/pull/3543#issuecomment-892711586,"Closes #3542
Correct the minimum value of the two parameters.
monitor_groupreplication_healthcheck_interval :   Minimum  50
monitor_groupreplication_healthcheck_timeout:   Minimum  50
Reference documentsÔºö
(1) monitor_groupreplication_healthcheck_interval -- https://proxysql.com/documentation/global-variables/mysql-monitor-variables/#mysql-monitor_groupreplication_healthcheck_interval
(2) monitor_groupreplication_healthcheck_timeout -- https://proxysql.com/documentation/global-variables/mysql-monitor-variables/#mysql-monitor_groupreplication_healthcheck_timeout","I think the new proxysql version needs to be backward compatible and conform to the document description behavior.
And these two parameters(monitor_groupreplication_healthcheck_interval &monitor_groupreplication_healthcheck_timeout) have been continued from the very old version to the present, to avoid the doubts of old users if they upgrade the old version of proxysql to the new version. This makes it easy for users to refer to the help document  to better use the proxysql.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3543,2021-07-29T15:43:23Z,,2022-03-10T21:49:36Z,OPEN,False,2,2,1,https://github.com/bskllzh,Fix incorrect minimum values ‚Äã‚Äãof two parameters,1,[],https://github.com/sysown/proxysql/pull/3543,https://github.com/pondix,4,https://github.com/sysown/proxysql/pull/3543#issuecomment-1064536483,"Closes #3542
Correct the minimum value of the two parameters.
monitor_groupreplication_healthcheck_interval :   Minimum  50
monitor_groupreplication_healthcheck_timeout:   Minimum  50
Reference documentsÔºö
(1) monitor_groupreplication_healthcheck_interval -- https://proxysql.com/documentation/global-variables/mysql-monitor-variables/#mysql-monitor_groupreplication_healthcheck_interval
(2) monitor_groupreplication_healthcheck_timeout -- https://proxysql.com/documentation/global-variables/mysql-monitor-variables/#mysql-monitor_groupreplication_healthcheck_timeout",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3544,2021-07-30T11:43:19Z,2021-08-10T18:10:59Z,2021-08-10T18:10:59Z,MERGED,True,114,6,7,https://github.com/JavierJF,Closes #3525: Memory leak induced by 'stmts' not being closed when failed to prepare,4,['bug'],https://github.com/sysown/proxysql/pull/3544,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3544,"This PR may close #3525, but we cannot ensure it until we receive extra information requested to the user. I'm setting the PR as a draft for now.
As a proof of the leak resolution valgrind reports from 1/3/5 executions of the attached leak-reproduction test are attached, relevant sections from 1 and 3 are:
valgrind-log-1_test_exec.txt:
==3568711== 9,240 (920 direct, 8,320 indirect) bytes in 1 blocks are definitely lost in loss record 2,915 of 2,972
==3568711==    at 0x4840B65: calloc (vg_replace_malloc.c:760)
==3568711==    by 0xB020B4: mysql_stmt_init (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x816765: MySQL_Connection::stmt_prepare_start() (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x817995: MySQL_Connection::handler(short) (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x81A11B: MySQL_Connection::async_query(short, char*, unsigned long, st_mysql_stmt**, stmt_execute_metadata_t*) (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x64A94A: MySQL_Session::RunQuery(MySQL_Data_Stream*, MySQL_Connection*) (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x64BDA9: MySQL_Session::handler() (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x61500A: MySQL_Thread::process_all_sessions() (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x612F05: MySQL_Thread::run() (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x54C98C: mysql_worker_thread_func(void*) (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x4A78298: start_thread (in /usr/lib/libpthread-2.33.so)
==3568711==    by 0x5042052: clone (in /usr/lib/libc-2.33.so)

valgrind-log-5_test_exec.txt:
==3568894== 46,200 (1,840 direct, 44,360 indirect) bytes in 2 blocks are definitely lost in loss record 2,924 of 2,939
==3568894==    at 0x4840B65: calloc (vg_replace_malloc.c:760)
==3568894==    by 0xB020B4: mysql_stmt_init (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x816765: MySQL_Connection::stmt_prepare_start() (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x817995: MySQL_Connection::handler(short) (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x81A11B: MySQL_Connection::async_query(short, char*, unsigned long, st_mysql_stmt**, stmt_execute_metadata_t*) (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x64A94A: MySQL_Session::RunQuery(MySQL_Data_Stream*, MySQL_Connection*) (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x64BDA9: MySQL_Session::handler() (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x61500A: MySQL_Thread::process_all_sessions() (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x612F05: MySQL_Thread::run() (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x54C98C: mysql_worker_thread_func(void*) (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x4A78298: start_thread (in /usr/lib/libpthread-2.33.so)
==3568894==    by 0x5042052: clone (in /usr/lib/libc-2.33.so)

Summary after the fix:
==3572414== LEAK SUMMARY:
==3572414==    definitely lost: 0 bytes in 0 blocks
==3572414==    indirectly lost: 0 bytes in 0 blocks
==3572414==      possibly lost: 1,313,928 bytes in 316 blocks
==3572414==    still reachable: 2,613,540 bytes in 15,724 blocks
==3572414==                       of which reachable via heuristic:
==3572414==                         length64           : 1,794,768 bytes in 6,271 blocks
==3572414==         suppressed: 0 bytes in 0 blocks

valgrind-log-1_test_exec.txt
valgrind-log-3_test_exec.txt
valgrind-log-5_test_exec.txt
valgrind-log-fix_5_test_exec.txt","This PR may close #3525, but we cannot ensure it until we receive extra information requested to the user. I'm setting the PR as a draft for now.
As a proof of the leak resolution valgrind reports from 1/3/5 executions of the attached leak-reproduction test are attached, relevant sections from 1 and 3 are:
valgrind-log-1_test_exec.txt:
==3568711== 9,240 (920 direct, 8,320 indirect) bytes in 1 blocks are definitely lost in loss record 2,915 of 2,972
==3568711==    at 0x4840B65: calloc (vg_replace_malloc.c:760)
==3568711==    by 0xB020B4: mysql_stmt_init (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x816765: MySQL_Connection::stmt_prepare_start() (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x817995: MySQL_Connection::handler(short) (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x81A11B: MySQL_Connection::async_query(short, char*, unsigned long, st_mysql_stmt**, stmt_execute_metadata_t*) (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x64A94A: MySQL_Session::RunQuery(MySQL_Data_Stream*, MySQL_Connection*) (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x64BDA9: MySQL_Session::handler() (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x61500A: MySQL_Thread::process_all_sessions() (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x612F05: MySQL_Thread::run() (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x54C98C: mysql_worker_thread_func(void*) (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x4A78298: start_thread (in /usr/lib/libpthread-2.33.so)
==3568711==    by 0x5042052: clone (in /usr/lib/libc-2.33.so)

valgrind-log-5_test_exec.txt:
==3568894== 46,200 (1,840 direct, 44,360 indirect) bytes in 2 blocks are definitely lost in loss record 2,924 of 2,939
==3568894==    at 0x4840B65: calloc (vg_replace_malloc.c:760)
==3568894==    by 0xB020B4: mysql_stmt_init (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x816765: MySQL_Connection::stmt_prepare_start() (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x817995: MySQL_Connection::handler(short) (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x81A11B: MySQL_Connection::async_query(short, char*, unsigned long, st_mysql_stmt**, stmt_execute_metadata_t*) (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x64A94A: MySQL_Session::RunQuery(MySQL_Data_Stream*, MySQL_Connection*) (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x64BDA9: MySQL_Session::handler() (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x61500A: MySQL_Thread::process_all_sessions() (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x612F05: MySQL_Thread::run() (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x54C98C: mysql_worker_thread_func(void*) (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x4A78298: start_thread (in /usr/lib/libpthread-2.33.so)
==3568894==    by 0x5042052: clone (in /usr/lib/libc-2.33.so)

Summary after the fix:
==3572414== LEAK SUMMARY:
==3572414==    definitely lost: 0 bytes in 0 blocks
==3572414==    indirectly lost: 0 bytes in 0 blocks
==3572414==      possibly lost: 1,313,928 bytes in 316 blocks
==3572414==    still reachable: 2,613,540 bytes in 15,724 blocks
==3572414==                       of which reachable via heuristic:
==3572414==                         length64           : 1,794,768 bytes in 6,271 blocks
==3572414==         suppressed: 0 bytes in 0 blocks

valgrind-log-1_test_exec.txt
valgrind-log-3_test_exec.txt
valgrind-log-5_test_exec.txt
valgrind-log-fix_5_test_exec.txt",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3544,2021-07-30T11:43:19Z,2021-08-10T18:10:59Z,2021-08-10T18:10:59Z,MERGED,True,114,6,7,https://github.com/JavierJF,Closes #3525: Memory leak induced by 'stmts' not being closed when failed to prepare,4,['bug'],https://github.com/sysown/proxysql/pull/3544,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3544#issuecomment-894262580,"This PR may close #3525, but we cannot ensure it until we receive extra information requested to the user. I'm setting the PR as a draft for now.
As a proof of the leak resolution valgrind reports from 1/3/5 executions of the attached leak-reproduction test are attached, relevant sections from 1 and 3 are:
valgrind-log-1_test_exec.txt:
==3568711== 9,240 (920 direct, 8,320 indirect) bytes in 1 blocks are definitely lost in loss record 2,915 of 2,972
==3568711==    at 0x4840B65: calloc (vg_replace_malloc.c:760)
==3568711==    by 0xB020B4: mysql_stmt_init (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x816765: MySQL_Connection::stmt_prepare_start() (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x817995: MySQL_Connection::handler(short) (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x81A11B: MySQL_Connection::async_query(short, char*, unsigned long, st_mysql_stmt**, stmt_execute_metadata_t*) (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x64A94A: MySQL_Session::RunQuery(MySQL_Data_Stream*, MySQL_Connection*) (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x64BDA9: MySQL_Session::handler() (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x61500A: MySQL_Thread::process_all_sessions() (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x612F05: MySQL_Thread::run() (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x54C98C: mysql_worker_thread_func(void*) (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x4A78298: start_thread (in /usr/lib/libpthread-2.33.so)
==3568711==    by 0x5042052: clone (in /usr/lib/libc-2.33.so)

valgrind-log-5_test_exec.txt:
==3568894== 46,200 (1,840 direct, 44,360 indirect) bytes in 2 blocks are definitely lost in loss record 2,924 of 2,939
==3568894==    at 0x4840B65: calloc (vg_replace_malloc.c:760)
==3568894==    by 0xB020B4: mysql_stmt_init (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x816765: MySQL_Connection::stmt_prepare_start() (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x817995: MySQL_Connection::handler(short) (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x81A11B: MySQL_Connection::async_query(short, char*, unsigned long, st_mysql_stmt**, stmt_execute_metadata_t*) (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x64A94A: MySQL_Session::RunQuery(MySQL_Data_Stream*, MySQL_Connection*) (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x64BDA9: MySQL_Session::handler() (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x61500A: MySQL_Thread::process_all_sessions() (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x612F05: MySQL_Thread::run() (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x54C98C: mysql_worker_thread_func(void*) (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x4A78298: start_thread (in /usr/lib/libpthread-2.33.so)
==3568894==    by 0x5042052: clone (in /usr/lib/libc-2.33.so)

Summary after the fix:
==3572414== LEAK SUMMARY:
==3572414==    definitely lost: 0 bytes in 0 blocks
==3572414==    indirectly lost: 0 bytes in 0 blocks
==3572414==      possibly lost: 1,313,928 bytes in 316 blocks
==3572414==    still reachable: 2,613,540 bytes in 15,724 blocks
==3572414==                       of which reachable via heuristic:
==3572414==                         length64           : 1,794,768 bytes in 6,271 blocks
==3572414==         suppressed: 0 bytes in 0 blocks

valgrind-log-1_test_exec.txt
valgrind-log-3_test_exec.txt
valgrind-log-5_test_exec.txt
valgrind-log-fix_5_test_exec.txt","gen_utils.{h|cpp} doesn't look a natural place for proxy_mysql_stmt_close() .
Maybe MySQL_Protocol.cpp ?
Although, perhaps, is to create a new function mysql_stmt_close_no_command() like we do for mysql_close_no_command():
https://github.com/sysown/proxysql/blob/v2.x/deps/mariadb-client-library/mariadb_lib.c.patch#L68-L103",True,{'THUMBS_UP': ['https://github.com/JavierJF']}
sysown/proxysql,https://github.com/sysown/proxysql,3544,2021-07-30T11:43:19Z,2021-08-10T18:10:59Z,2021-08-10T18:10:59Z,MERGED,True,114,6,7,https://github.com/JavierJF,Closes #3525: Memory leak induced by 'stmts' not being closed when failed to prepare,4,['bug'],https://github.com/sysown/proxysql/pull/3544,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3544#issuecomment-894262930,"This PR may close #3525, but we cannot ensure it until we receive extra information requested to the user. I'm setting the PR as a draft for now.
As a proof of the leak resolution valgrind reports from 1/3/5 executions of the attached leak-reproduction test are attached, relevant sections from 1 and 3 are:
valgrind-log-1_test_exec.txt:
==3568711== 9,240 (920 direct, 8,320 indirect) bytes in 1 blocks are definitely lost in loss record 2,915 of 2,972
==3568711==    at 0x4840B65: calloc (vg_replace_malloc.c:760)
==3568711==    by 0xB020B4: mysql_stmt_init (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x816765: MySQL_Connection::stmt_prepare_start() (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x817995: MySQL_Connection::handler(short) (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x81A11B: MySQL_Connection::async_query(short, char*, unsigned long, st_mysql_stmt**, stmt_execute_metadata_t*) (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x64A94A: MySQL_Session::RunQuery(MySQL_Data_Stream*, MySQL_Connection*) (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x64BDA9: MySQL_Session::handler() (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x61500A: MySQL_Thread::process_all_sessions() (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x612F05: MySQL_Thread::run() (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x54C98C: mysql_worker_thread_func(void*) (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x4A78298: start_thread (in /usr/lib/libpthread-2.33.so)
==3568711==    by 0x5042052: clone (in /usr/lib/libc-2.33.so)

valgrind-log-5_test_exec.txt:
==3568894== 46,200 (1,840 direct, 44,360 indirect) bytes in 2 blocks are definitely lost in loss record 2,924 of 2,939
==3568894==    at 0x4840B65: calloc (vg_replace_malloc.c:760)
==3568894==    by 0xB020B4: mysql_stmt_init (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x816765: MySQL_Connection::stmt_prepare_start() (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x817995: MySQL_Connection::handler(short) (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x81A11B: MySQL_Connection::async_query(short, char*, unsigned long, st_mysql_stmt**, stmt_execute_metadata_t*) (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x64A94A: MySQL_Session::RunQuery(MySQL_Data_Stream*, MySQL_Connection*) (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x64BDA9: MySQL_Session::handler() (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x61500A: MySQL_Thread::process_all_sessions() (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x612F05: MySQL_Thread::run() (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x54C98C: mysql_worker_thread_func(void*) (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x4A78298: start_thread (in /usr/lib/libpthread-2.33.so)
==3568894==    by 0x5042052: clone (in /usr/lib/libc-2.33.so)

Summary after the fix:
==3572414== LEAK SUMMARY:
==3572414==    definitely lost: 0 bytes in 0 blocks
==3572414==    indirectly lost: 0 bytes in 0 blocks
==3572414==      possibly lost: 1,313,928 bytes in 316 blocks
==3572414==    still reachable: 2,613,540 bytes in 15,724 blocks
==3572414==                       of which reachable via heuristic:
==3572414==                         length64           : 1,794,768 bytes in 6,271 blocks
==3572414==         suppressed: 0 bytes in 0 blocks

valgrind-log-1_test_exec.txt
valgrind-log-3_test_exec.txt
valgrind-log-5_test_exec.txt
valgrind-log-fix_5_test_exec.txt",Why it is still a WIP?,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3544,2021-07-30T11:43:19Z,2021-08-10T18:10:59Z,2021-08-10T18:10:59Z,MERGED,True,114,6,7,https://github.com/JavierJF,Closes #3525: Memory leak induced by 'stmts' not being closed when failed to prepare,4,['bug'],https://github.com/sysown/proxysql/pull/3544,https://github.com/JavierJF,4,https://github.com/sysown/proxysql/pull/3544#issuecomment-895204115,"This PR may close #3525, but we cannot ensure it until we receive extra information requested to the user. I'm setting the PR as a draft for now.
As a proof of the leak resolution valgrind reports from 1/3/5 executions of the attached leak-reproduction test are attached, relevant sections from 1 and 3 are:
valgrind-log-1_test_exec.txt:
==3568711== 9,240 (920 direct, 8,320 indirect) bytes in 1 blocks are definitely lost in loss record 2,915 of 2,972
==3568711==    at 0x4840B65: calloc (vg_replace_malloc.c:760)
==3568711==    by 0xB020B4: mysql_stmt_init (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x816765: MySQL_Connection::stmt_prepare_start() (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x817995: MySQL_Connection::handler(short) (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x81A11B: MySQL_Connection::async_query(short, char*, unsigned long, st_mysql_stmt**, stmt_execute_metadata_t*) (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x64A94A: MySQL_Session::RunQuery(MySQL_Data_Stream*, MySQL_Connection*) (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x64BDA9: MySQL_Session::handler() (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x61500A: MySQL_Thread::process_all_sessions() (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x612F05: MySQL_Thread::run() (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x54C98C: mysql_worker_thread_func(void*) (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568711==    by 0x4A78298: start_thread (in /usr/lib/libpthread-2.33.so)
==3568711==    by 0x5042052: clone (in /usr/lib/libc-2.33.so)

valgrind-log-5_test_exec.txt:
==3568894== 46,200 (1,840 direct, 44,360 indirect) bytes in 2 blocks are definitely lost in loss record 2,924 of 2,939
==3568894==    at 0x4840B65: calloc (vg_replace_malloc.c:760)
==3568894==    by 0xB020B4: mysql_stmt_init (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x816765: MySQL_Connection::stmt_prepare_start() (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x817995: MySQL_Connection::handler(short) (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x81A11B: MySQL_Connection::async_query(short, char*, unsigned long, st_mysql_stmt**, stmt_execute_metadata_t*) (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x64A94A: MySQL_Session::RunQuery(MySQL_Data_Stream*, MySQL_Connection*) (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x64BDA9: MySQL_Session::handler() (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x61500A: MySQL_Thread::process_all_sessions() (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x612F05: MySQL_Thread::run() (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x54C98C: mysql_worker_thread_func(void*) (in /home/javjarfer/Projects/proxysql_v2.2.0/src/proxysql)
==3568894==    by 0x4A78298: start_thread (in /usr/lib/libpthread-2.33.so)
==3568894==    by 0x5042052: clone (in /usr/lib/libc-2.33.so)

Summary after the fix:
==3572414== LEAK SUMMARY:
==3572414==    definitely lost: 0 bytes in 0 blocks
==3572414==    indirectly lost: 0 bytes in 0 blocks
==3572414==      possibly lost: 1,313,928 bytes in 316 blocks
==3572414==    still reachable: 2,613,540 bytes in 15,724 blocks
==3572414==                       of which reachable via heuristic:
==3572414==                         length64           : 1,794,768 bytes in 6,271 blocks
==3572414==         suppressed: 0 bytes in 0 blocks

valgrind-log-1_test_exec.txt
valgrind-log-3_test_exec.txt
valgrind-log-5_test_exec.txt
valgrind-log-fix_5_test_exec.txt","Why it is still a WIP?

This PR is no longer WIP, but the associated issue should not be closed after this is merged, this PR could not fully address it. Thanks!",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3548,2021-08-05T00:22:29Z,2021-08-05T14:12:13Z,2022-04-30T16:11:35Z,MERGED,True,265,215,11,https://github.com/renecannao,Adding support for error message at the end of a binary protocol resultset #3547,4,[],https://github.com/sysown/proxysql/pull/3548,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3548,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3548,2021-08-05T00:22:29Z,2021-08-05T14:12:13Z,2022-04-30T16:11:35Z,MERGED,True,265,215,11,https://github.com/renecannao,Adding support for error message at the end of a binary protocol resultset #3547,4,[],https://github.com/sysown/proxysql/pull/3548,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3548#issuecomment-893360614,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3548,2021-08-05T00:22:29Z,2021-08-05T14:12:13Z,2022-04-30T16:11:35Z,MERGED,True,265,215,11,https://github.com/renecannao,Adding support for error message at the end of a binary protocol resultset #3547,4,[],https://github.com/sysown/proxysql/pull/3548,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3548#issuecomment-893363742,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3550,2021-08-05T17:50:10Z,2021-08-12T10:08:32Z,2021-08-12T10:08:32Z,CLOSED,False,569,85,4,https://github.com/JavierJF,Closes #3549: Autocommit tracking being lost when 'locked_on_hostgroup' is set,4,[],https://github.com/sysown/proxysql/pull/3550,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3550,closes #3549.,closes #3549.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3550,2021-08-05T17:50:10Z,2021-08-12T10:08:32Z,2021-08-12T10:08:32Z,CLOSED,False,569,85,4,https://github.com/JavierJF,Closes #3549: Autocommit tracking being lost when 'locked_on_hostgroup' is set,4,[],https://github.com/sysown/proxysql/pull/3550,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3550#issuecomment-897512880,closes #3549.,"Closing, replaced by #3560",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3552,2021-08-06T13:10:13Z,2021-08-26T11:08:14Z,2022-04-30T16:10:35Z,MERGED,True,670,403,8,https://github.com/renecannao,"Allows SSL privake keys other than RSA , and implement PROXYSQL RELOAD TLS",5,[],https://github.com/sysown/proxysql/pull/3552,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3552,"This closes issue #3551 and #3553
It also disable the annoying error in #3424","This closes issue #3551 and #3553
It also disable the annoying error in #3424",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3552,2021-08-06T13:10:13Z,2021-08-26T11:08:14Z,2022-04-30T16:10:35Z,MERGED,True,670,403,8,https://github.com/renecannao,"Allows SSL privake keys other than RSA , and implement PROXYSQL RELOAD TLS",5,[],https://github.com/sysown/proxysql/pull/3552,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3552#issuecomment-901478192,"This closes issue #3551 and #3553
It also disable the annoying error in #3424",Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3557,2021-08-10T18:11:51Z,2021-08-12T16:49:43Z,2022-04-30T16:10:33Z,MERGED,True,1706,264,31,https://github.com/renecannao,More code coverage,19,[],https://github.com/sysown/proxysql/pull/3557,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3557,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3557,2021-08-10T18:11:51Z,2021-08-12T16:49:43Z,2022-04-30T16:10:33Z,MERGED,True,1706,264,31,https://github.com/renecannao,More code coverage,19,[],https://github.com/sysown/proxysql/pull/3557,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3557#issuecomment-896937744,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3557,2021-08-10T18:11:51Z,2021-08-12T16:49:43Z,2022-04-30T16:10:33Z,MERGED,True,1706,264,31,https://github.com/renecannao,More code coverage,19,[],https://github.com/sysown/proxysql/pull/3557,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3557#issuecomment-897258789,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3559,2021-08-11T12:27:26Z,,2022-03-10T21:49:35Z,OPEN,False,12,6,1,https://github.com/JavierJF,Closes #3558: 'proxysql_mysql_backend/frontend_buffers_bytes' metrics don't report the actual values,1,[],https://github.com/sysown/proxysql/pull/3559,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3559,closes #3558. The impl may need some discussion.,closes #3558. The impl may need some discussion.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3559,2021-08-11T12:27:26Z,,2022-03-10T21:49:35Z,OPEN,False,12,6,1,https://github.com/JavierJF,Closes #3558: 'proxysql_mysql_backend/frontend_buffers_bytes' metrics don't report the actual values,1,[],https://github.com/sysown/proxysql/pull/3559,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/3559#issuecomment-1064536454,closes #3558. The impl may need some discussion.,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3560,2021-08-12T10:06:39Z,2021-08-12T16:49:14Z,2022-04-30T16:10:32Z,MERGED,True,317,0,3,https://github.com/renecannao,Closes #3549: Autocommit tracking being lost when 'locked_on_hostgroup' is set,4,[],https://github.com/sysown/proxysql/pull/3560,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3560,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3566,2021-08-18T17:03:59Z,2021-08-23T15:55:42Z,2021-08-23T15:55:42Z,MERGED,True,0,18,2,https://github.com/thiagosantosleite,"Remove the temporary ""Dirty patch""",1,"['Compiling', 'Docker']",https://github.com/sysown/proxysql/pull/3566,https://github.com/thiagosantosleite,1,https://github.com/sysown/proxysql/pull/3566,"Fix the issue related here:
#3563
The dependencies already exists in the base image:
https://github.com/ProxySQL/docker-images/blob/amd64/proxysql-build-debian10/Dockerfile","Fix the issue related here:
#3563
The dependencies already exists in the base image:
https://github.com/ProxySQL/docker-images/blob/amd64/proxysql-build-debian10/Dockerfile",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3566,2021-08-18T17:03:59Z,2021-08-23T15:55:42Z,2021-08-23T15:55:42Z,MERGED,True,0,18,2,https://github.com/thiagosantosleite,"Remove the temporary ""Dirty patch""",1,"['Compiling', 'Docker']",https://github.com/sysown/proxysql/pull/3566,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/3566#issuecomment-901279434,"Fix the issue related here:
#3563
The dependencies already exists in the base image:
https://github.com/ProxySQL/docker-images/blob/amd64/proxysql-build-debian10/Dockerfile",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3566,2021-08-18T17:03:59Z,2021-08-23T15:55:42Z,2021-08-23T15:55:42Z,MERGED,True,0,18,2,https://github.com/thiagosantosleite,"Remove the temporary ""Dirty patch""",1,"['Compiling', 'Docker']",https://github.com/sysown/proxysql/pull/3566,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3566#issuecomment-903649807,"Fix the issue related here:
#3563
The dependencies already exists in the base image:
https://github.com/ProxySQL/docker-images/blob/amd64/proxysql-build-debian10/Dockerfile",add to whitelist,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3569,2021-08-19T19:54:34Z,2021-08-23T10:39:36Z,2022-04-30T16:10:31Z,MERGED,True,71,10,10,https://github.com/JavierJF,Closes 3554: Add support for building ProxySQL with ASAN,8,[],https://github.com/sysown/proxysql/pull/3569,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3569,"This PR holds the efforts for adding support for building ProxySQL with ASAN, and creating a CI build with it. It also contains the fixes for the errors reported found during the effort.
Attached can be found the ASAN reports for all the errors being addressed:
asan_admin_heap_buffer_overflow.log
asan_main_stack_buffer_overflow.log
asan_strcat_para_overlap.log
asan_test_mysqlsh.log
And a tcpdump proving mysqlsh behavior that was patched via 0f8aa29:
mysqlsh_tcpdump.pcap.tar.gz","This PR holds the efforts for adding support for building ProxySQL with ASAN, and creating a CI build with it. It also contains the fixes for the errors reported found during the effort.
Attached can be found the ASAN reports for all the errors being addressed:
asan_admin_heap_buffer_overflow.log
asan_main_stack_buffer_overflow.log
asan_strcat_para_overlap.log
asan_test_mysqlsh.log
And a tcpdump proving mysqlsh behavior that was patched via 0f8aa29:
mysqlsh_tcpdump.pcap.tar.gz",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3573,2021-08-20T21:17:57Z,2021-08-23T11:16:09Z,2021-08-23T11:16:09Z,MERGED,True,263,0,3,https://github.com/JavierJF,Closes #3546: Frequent ProxySQL crashes since v2.1.x,2,[],https://github.com/sysown/proxysql/pull/3573,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3573,"closes #3546.
Asan output extracted from the synthetic regression test part of this PR:
asan_double_free_3546.log","closes #3546.
Asan output extracted from the synthetic regression test part of this PR:
asan_double_free_3546.log",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3573,2021-08-20T21:17:57Z,2021-08-23T11:16:09Z,2021-08-23T11:16:09Z,MERGED,True,263,0,3,https://github.com/JavierJF,Closes #3546: Frequent ProxySQL crashes since v2.1.x,2,[],https://github.com/sysown/proxysql/pull/3573,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3573#issuecomment-902982648,"closes #3546.
Asan output extracted from the synthetic regression test part of this PR:
asan_double_free_3546.log",Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3575,2021-08-22T20:57:46Z,2021-08-22T21:08:07Z,2021-08-22T21:20:30Z,CLOSED,False,4,4,1,https://github.com/JavierJF,Closes #3574: Add hostgroup_id to monitor ping errors,1,[],https://github.com/sysown/proxysql/pull/3575,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3575,closes  #3574.,closes  #3574.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3575,2021-08-22T20:57:46Z,2021-08-22T21:08:07Z,2021-08-22T21:20:30Z,CLOSED,False,4,4,1,https://github.com/JavierJF,Closes #3574: Add hostgroup_id to monitor ping errors,1,[],https://github.com/sysown/proxysql/pull/3575,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3575#issuecomment-903330712,closes  #3574.,"proxysql/lib/MySQL_Monitor.cpp
    
    
         Line 2513
      in
      1942435
    
  
  
    

        
          
           char *query=(char *)""SELECT hostname, port, MAX(use_ssl) use_ssl FROM mysql_servers WHERE status NOT LIKE 'OFFLINE\%' GROUP BY hostname, port ORDER BY RANDOM()""; 
        
    
  


Monitor's ping module has absolutely no idea about hostgroup",True,{'THUMBS_UP': ['https://github.com/JavierJF']}
sysown/proxysql,https://github.com/sysown/proxysql,3575,2021-08-22T20:57:46Z,2021-08-22T21:08:07Z,2021-08-22T21:20:30Z,CLOSED,False,4,4,1,https://github.com/JavierJF,Closes #3574: Add hostgroup_id to monitor ping errors,1,[],https://github.com/sysown/proxysql/pull/3575,https://github.com/JavierJF,3,https://github.com/sysown/proxysql/pull/3575#issuecomment-903332125,closes  #3574.,"proxysql/lib/MySQL_Monitor.cpp
    
    
         Line 2513
      in
      1942435
    
  
  
    

        
          
           char *query=(char *)""SELECT hostname, port, MAX(use_ssl) use_ssl FROM mysql_servers WHERE status NOT LIKE 'OFFLINE\%' GROUP BY hostname, port ORDER BY RANDOM()""; 
        
    
  


Monitor's ping module has absolutely no idea about hostgroup

Whoops... Thanks you, wrong annotation!",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3576,2021-08-23T10:37:07Z,2021-08-23T15:55:29Z,2022-04-30T16:10:30Z,MERGED,True,1,1,1,https://github.com/renecannao,Add more verbosity when mysql_real_connect() fails,1,[],https://github.com/sysown/proxysql/pull/3576,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3576,"Error log will now shows also the hostgroup id of the server the
connection failed to","Error log will now shows also the hostgroup id of the server the
connection failed to",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3577,2021-08-23T16:54:40Z,2021-08-24T18:49:15Z,2021-08-24T18:49:50Z,MERGED,True,115,2,5,https://github.com/hkdsun,SSL: Add support for certificate revocation list (CRL) and multiple certificate authorities (CA),2,[],https://github.com/sysown/proxysql/pull/3577,https://github.com/hkdsun,1,https://github.com/sysown/proxysql/pull/3577,"This PR adds two SSL options to the proxy<->server (p2s) connections. This is a change we are running in our production environment at Shopify.
In a self-managed SSL architecture, particularly in a large-scale infrastructure intranet in our case, CRLs allow explicitly revoking certificates before their expiration date, while specifying multiple CAs would allow us to rotate our certificates without having to rebuild all our infrastructure from scratch.
The actual changes here are fairly trivial as they use the currently-existing options on the MySQL client library. For a reference to review against, please see the MySQL C API section on Support for Encrypted Connections, where the functions mysql_options() and mysql_set_ssl() functions are well-described.
Below are helpful descriptions of the feature from the mariadb documentation.

ssl_capath


The ssl_capath option defines a path to a directory that contains one or more PEM files that should each contain one X509 certificate for a trusted Certificate Authority (CA). This option requires that you use the absolute path, not a relative path. The ssl_capath option is only supported if the server or client was built with OpenSSL, wolfSSL, or yaSSL. If the client was built with GnuTLS or Schannel, then the ssl_capath option is not supported.


ssl_{crl,crlpath}


Certificate Revocation Lists (CRLs) are lists of certificates that have been revoked by the Certificate Authority (CA) before they were due to expire.
CRLs are specified on the server and client by using the ssl_crl and ssl_crlpath options.


The ssl_crl option defines a path to a PEM file that should contain one or more X509 revoked certificates. This option requires that you use the absolute path, not a relative path. For servers, the ssl_crl option is only valid if the server was built with OpenSSL. If the server was built with wolfSSL or yaSSL, then the ssl_crl option is not supported. For clients, the ssl_crl option is only valid if the client was built with OpenSSL or Schannel. Likewise, if the client was built with GnuTLS, wolfSSL or yaSSL, then the ssl_crl option is not supported.


The ssl_crlpath option defines a path to a directory that contains one or more PEM files that should each contain one revoked X509 certificate. This option requires that you use the absolute path, not a relative path. The ssl_crlpath option is only supported if the server or client was built with OpenSSL. If the server was built with wolfSSL or yaSSL, then the ssl_crlpath option is not supported. Likewise, if the client was built with GnuTLS, Schannel, wolfSSL, or yaSSL, then the ssl_crlpath option is not supported.","This PR adds two SSL options to the proxy<->server (p2s) connections. This is a change we are running in our production environment at Shopify.
In a self-managed SSL architecture, particularly in a large-scale infrastructure intranet in our case, CRLs allow explicitly revoking certificates before their expiration date, while specifying multiple CAs would allow us to rotate our certificates without having to rebuild all our infrastructure from scratch.
The actual changes here are fairly trivial as they use the currently-existing options on the MySQL client library. For a reference to review against, please see the MySQL C API section on Support for Encrypted Connections, where the functions mysql_options() and mysql_set_ssl() functions are well-described.
Below are helpful descriptions of the feature from the mariadb documentation.

ssl_capath


The ssl_capath option defines a path to a directory that contains one or more PEM files that should each contain one X509 certificate for a trusted Certificate Authority (CA). This option requires that you use the absolute path, not a relative path. The ssl_capath option is only supported if the server or client was built with OpenSSL, wolfSSL, or yaSSL. If the client was built with GnuTLS or Schannel, then the ssl_capath option is not supported.


ssl_{crl,crlpath}


Certificate Revocation Lists (CRLs) are lists of certificates that have been revoked by the Certificate Authority (CA) before they were due to expire.
CRLs are specified on the server and client by using the ssl_crl and ssl_crlpath options.


The ssl_crl option defines a path to a PEM file that should contain one or more X509 revoked certificates. This option requires that you use the absolute path, not a relative path. For servers, the ssl_crl option is only valid if the server was built with OpenSSL. If the server was built with wolfSSL or yaSSL, then the ssl_crl option is not supported. For clients, the ssl_crl option is only valid if the client was built with OpenSSL or Schannel. Likewise, if the client was built with GnuTLS, wolfSSL or yaSSL, then the ssl_crl option is not supported.


The ssl_crlpath option defines a path to a directory that contains one or more PEM files that should each contain one revoked X509 certificate. This option requires that you use the absolute path, not a relative path. The ssl_crlpath option is only supported if the server or client was built with OpenSSL. If the server was built with wolfSSL or yaSSL, then the ssl_crlpath option is not supported. Likewise, if the client was built with GnuTLS, Schannel, wolfSSL, or yaSSL, then the ssl_crlpath option is not supported.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3577,2021-08-23T16:54:40Z,2021-08-24T18:49:15Z,2021-08-24T18:49:50Z,MERGED,True,115,2,5,https://github.com/hkdsun,SSL: Add support for certificate revocation list (CRL) and multiple certificate authorities (CA),2,[],https://github.com/sysown/proxysql/pull/3577,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/3577#issuecomment-903946766,"This PR adds two SSL options to the proxy<->server (p2s) connections. This is a change we are running in our production environment at Shopify.
In a self-managed SSL architecture, particularly in a large-scale infrastructure intranet in our case, CRLs allow explicitly revoking certificates before their expiration date, while specifying multiple CAs would allow us to rotate our certificates without having to rebuild all our infrastructure from scratch.
The actual changes here are fairly trivial as they use the currently-existing options on the MySQL client library. For a reference to review against, please see the MySQL C API section on Support for Encrypted Connections, where the functions mysql_options() and mysql_set_ssl() functions are well-described.
Below are helpful descriptions of the feature from the mariadb documentation.

ssl_capath


The ssl_capath option defines a path to a directory that contains one or more PEM files that should each contain one X509 certificate for a trusted Certificate Authority (CA). This option requires that you use the absolute path, not a relative path. The ssl_capath option is only supported if the server or client was built with OpenSSL, wolfSSL, or yaSSL. If the client was built with GnuTLS or Schannel, then the ssl_capath option is not supported.


ssl_{crl,crlpath}


Certificate Revocation Lists (CRLs) are lists of certificates that have been revoked by the Certificate Authority (CA) before they were due to expire.
CRLs are specified on the server and client by using the ssl_crl and ssl_crlpath options.


The ssl_crl option defines a path to a PEM file that should contain one or more X509 revoked certificates. This option requires that you use the absolute path, not a relative path. For servers, the ssl_crl option is only valid if the server was built with OpenSSL. If the server was built with wolfSSL or yaSSL, then the ssl_crl option is not supported. For clients, the ssl_crl option is only valid if the client was built with OpenSSL or Schannel. Likewise, if the client was built with GnuTLS, wolfSSL or yaSSL, then the ssl_crl option is not supported.


The ssl_crlpath option defines a path to a directory that contains one or more PEM files that should each contain one revoked X509 certificate. This option requires that you use the absolute path, not a relative path. The ssl_crlpath option is only supported if the server or client was built with OpenSSL. If the server was built with wolfSSL or yaSSL, then the ssl_crlpath option is not supported. Likewise, if the client was built with GnuTLS, Schannel, wolfSSL, or yaSSL, then the ssl_crlpath option is not supported.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3577,2021-08-23T16:54:40Z,2021-08-24T18:49:15Z,2021-08-24T18:49:50Z,MERGED,True,115,2,5,https://github.com/hkdsun,SSL: Add support for certificate revocation list (CRL) and multiple certificate authorities (CA),2,[],https://github.com/sysown/proxysql/pull/3577,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3577#issuecomment-904648893,"This PR adds two SSL options to the proxy<->server (p2s) connections. This is a change we are running in our production environment at Shopify.
In a self-managed SSL architecture, particularly in a large-scale infrastructure intranet in our case, CRLs allow explicitly revoking certificates before their expiration date, while specifying multiple CAs would allow us to rotate our certificates without having to rebuild all our infrastructure from scratch.
The actual changes here are fairly trivial as they use the currently-existing options on the MySQL client library. For a reference to review against, please see the MySQL C API section on Support for Encrypted Connections, where the functions mysql_options() and mysql_set_ssl() functions are well-described.
Below are helpful descriptions of the feature from the mariadb documentation.

ssl_capath


The ssl_capath option defines a path to a directory that contains one or more PEM files that should each contain one X509 certificate for a trusted Certificate Authority (CA). This option requires that you use the absolute path, not a relative path. The ssl_capath option is only supported if the server or client was built with OpenSSL, wolfSSL, or yaSSL. If the client was built with GnuTLS or Schannel, then the ssl_capath option is not supported.


ssl_{crl,crlpath}


Certificate Revocation Lists (CRLs) are lists of certificates that have been revoked by the Certificate Authority (CA) before they were due to expire.
CRLs are specified on the server and client by using the ssl_crl and ssl_crlpath options.


The ssl_crl option defines a path to a PEM file that should contain one or more X509 revoked certificates. This option requires that you use the absolute path, not a relative path. For servers, the ssl_crl option is only valid if the server was built with OpenSSL. If the server was built with wolfSSL or yaSSL, then the ssl_crl option is not supported. For clients, the ssl_crl option is only valid if the client was built with OpenSSL or Schannel. Likewise, if the client was built with GnuTLS, wolfSSL or yaSSL, then the ssl_crl option is not supported.


The ssl_crlpath option defines a path to a directory that contains one or more PEM files that should each contain one revoked X509 certificate. This option requires that you use the absolute path, not a relative path. The ssl_crlpath option is only supported if the server or client was built with OpenSSL. If the server was built with wolfSSL or yaSSL, then the ssl_crlpath option is not supported. Likewise, if the client was built with GnuTLS, Schannel, wolfSSL, or yaSSL, then the ssl_crlpath option is not supported.",add to whitelist,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3577,2021-08-23T16:54:40Z,2021-08-24T18:49:15Z,2021-08-24T18:49:50Z,MERGED,True,115,2,5,https://github.com/hkdsun,SSL: Add support for certificate revocation list (CRL) and multiple certificate authorities (CA),2,[],https://github.com/sysown/proxysql/pull/3577,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/3577#issuecomment-904650232,"This PR adds two SSL options to the proxy<->server (p2s) connections. This is a change we are running in our production environment at Shopify.
In a self-managed SSL architecture, particularly in a large-scale infrastructure intranet in our case, CRLs allow explicitly revoking certificates before their expiration date, while specifying multiple CAs would allow us to rotate our certificates without having to rebuild all our infrastructure from scratch.
The actual changes here are fairly trivial as they use the currently-existing options on the MySQL client library. For a reference to review against, please see the MySQL C API section on Support for Encrypted Connections, where the functions mysql_options() and mysql_set_ssl() functions are well-described.
Below are helpful descriptions of the feature from the mariadb documentation.

ssl_capath


The ssl_capath option defines a path to a directory that contains one or more PEM files that should each contain one X509 certificate for a trusted Certificate Authority (CA). This option requires that you use the absolute path, not a relative path. The ssl_capath option is only supported if the server or client was built with OpenSSL, wolfSSL, or yaSSL. If the client was built with GnuTLS or Schannel, then the ssl_capath option is not supported.


ssl_{crl,crlpath}


Certificate Revocation Lists (CRLs) are lists of certificates that have been revoked by the Certificate Authority (CA) before they were due to expire.
CRLs are specified on the server and client by using the ssl_crl and ssl_crlpath options.


The ssl_crl option defines a path to a PEM file that should contain one or more X509 revoked certificates. This option requires that you use the absolute path, not a relative path. For servers, the ssl_crl option is only valid if the server was built with OpenSSL. If the server was built with wolfSSL or yaSSL, then the ssl_crl option is not supported. For clients, the ssl_crl option is only valid if the client was built with OpenSSL or Schannel. Likewise, if the client was built with GnuTLS, wolfSSL or yaSSL, then the ssl_crl option is not supported.


The ssl_crlpath option defines a path to a directory that contains one or more PEM files that should each contain one revoked X509 certificate. This option requires that you use the absolute path, not a relative path. The ssl_crlpath option is only supported if the server or client was built with OpenSSL. If the server was built with wolfSSL or yaSSL, then the ssl_crlpath option is not supported. Likewise, if the client was built with GnuTLS, Schannel, wolfSSL, or yaSSL, then the ssl_crlpath option is not supported.","Hi @hkdsun .
Thank you for the PR: the feature is clearly useful, and the implementation seems pretty straightforward.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3577,2021-08-23T16:54:40Z,2021-08-24T18:49:15Z,2021-08-24T18:49:50Z,MERGED,True,115,2,5,https://github.com/hkdsun,SSL: Add support for certificate revocation list (CRL) and multiple certificate authorities (CA),2,[],https://github.com/sysown/proxysql/pull/3577,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/3577#issuecomment-904707919,"This PR adds two SSL options to the proxy<->server (p2s) connections. This is a change we are running in our production environment at Shopify.
In a self-managed SSL architecture, particularly in a large-scale infrastructure intranet in our case, CRLs allow explicitly revoking certificates before their expiration date, while specifying multiple CAs would allow us to rotate our certificates without having to rebuild all our infrastructure from scratch.
The actual changes here are fairly trivial as they use the currently-existing options on the MySQL client library. For a reference to review against, please see the MySQL C API section on Support for Encrypted Connections, where the functions mysql_options() and mysql_set_ssl() functions are well-described.
Below are helpful descriptions of the feature from the mariadb documentation.

ssl_capath


The ssl_capath option defines a path to a directory that contains one or more PEM files that should each contain one X509 certificate for a trusted Certificate Authority (CA). This option requires that you use the absolute path, not a relative path. The ssl_capath option is only supported if the server or client was built with OpenSSL, wolfSSL, or yaSSL. If the client was built with GnuTLS or Schannel, then the ssl_capath option is not supported.


ssl_{crl,crlpath}


Certificate Revocation Lists (CRLs) are lists of certificates that have been revoked by the Certificate Authority (CA) before they were due to expire.
CRLs are specified on the server and client by using the ssl_crl and ssl_crlpath options.


The ssl_crl option defines a path to a PEM file that should contain one or more X509 revoked certificates. This option requires that you use the absolute path, not a relative path. For servers, the ssl_crl option is only valid if the server was built with OpenSSL. If the server was built with wolfSSL or yaSSL, then the ssl_crl option is not supported. For clients, the ssl_crl option is only valid if the client was built with OpenSSL or Schannel. Likewise, if the client was built with GnuTLS, wolfSSL or yaSSL, then the ssl_crl option is not supported.


The ssl_crlpath option defines a path to a directory that contains one or more PEM files that should each contain one revoked X509 certificate. This option requires that you use the absolute path, not a relative path. The ssl_crlpath option is only supported if the server or client was built with OpenSSL. If the server was built with wolfSSL or yaSSL, then the ssl_crlpath option is not supported. Likewise, if the client was built with GnuTLS, Schannel, wolfSSL, or yaSSL, then the ssl_crlpath option is not supported.",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3577,2021-08-23T16:54:40Z,2021-08-24T18:49:15Z,2021-08-24T18:49:50Z,MERGED,True,115,2,5,https://github.com/hkdsun,SSL: Add support for certificate revocation list (CRL) and multiple certificate authorities (CA),2,[],https://github.com/sysown/proxysql/pull/3577,https://github.com/renecannao,6,https://github.com/sysown/proxysql/pull/3577#issuecomment-904889494,"This PR adds two SSL options to the proxy<->server (p2s) connections. This is a change we are running in our production environment at Shopify.
In a self-managed SSL architecture, particularly in a large-scale infrastructure intranet in our case, CRLs allow explicitly revoking certificates before their expiration date, while specifying multiple CAs would allow us to rotate our certificates without having to rebuild all our infrastructure from scratch.
The actual changes here are fairly trivial as they use the currently-existing options on the MySQL client library. For a reference to review against, please see the MySQL C API section on Support for Encrypted Connections, where the functions mysql_options() and mysql_set_ssl() functions are well-described.
Below are helpful descriptions of the feature from the mariadb documentation.

ssl_capath


The ssl_capath option defines a path to a directory that contains one or more PEM files that should each contain one X509 certificate for a trusted Certificate Authority (CA). This option requires that you use the absolute path, not a relative path. The ssl_capath option is only supported if the server or client was built with OpenSSL, wolfSSL, or yaSSL. If the client was built with GnuTLS or Schannel, then the ssl_capath option is not supported.


ssl_{crl,crlpath}


Certificate Revocation Lists (CRLs) are lists of certificates that have been revoked by the Certificate Authority (CA) before they were due to expire.
CRLs are specified on the server and client by using the ssl_crl and ssl_crlpath options.


The ssl_crl option defines a path to a PEM file that should contain one or more X509 revoked certificates. This option requires that you use the absolute path, not a relative path. For servers, the ssl_crl option is only valid if the server was built with OpenSSL. If the server was built with wolfSSL or yaSSL, then the ssl_crl option is not supported. For clients, the ssl_crl option is only valid if the client was built with OpenSSL or Schannel. Likewise, if the client was built with GnuTLS, wolfSSL or yaSSL, then the ssl_crl option is not supported.


The ssl_crlpath option defines a path to a directory that contains one or more PEM files that should each contain one revoked X509 certificate. This option requires that you use the absolute path, not a relative path. The ssl_crlpath option is only supported if the server or client was built with OpenSSL. If the server was built with wolfSSL or yaSSL, then the ssl_crlpath option is not supported. Likewise, if the client was built with GnuTLS, Schannel, wolfSSL, or yaSSL, then the ssl_crlpath option is not supported.","@hkdsun : I fixed a couple of typos that prevented proxysql to compile. Now it is all good.
Thanks",True,"{'HEART': ['https://github.com/hkdsun', 'https://github.com/akshaysuryawanshi'], 'ROCKET': ['https://github.com/hkdsun', 'https://github.com/akshaysuryawanshi']}"
sysown/proxysql,https://github.com/sysown/proxysql,3582,2021-08-26T11:16:11Z,2021-08-26T13:47:28Z,2022-04-30T16:10:13Z,MERGED,True,15,11,6,https://github.com/renecannao,Some cherry pick from PR 3305,2,[],https://github.com/sysown/proxysql/pull/3582,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3582,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3582,2021-08-26T11:16:11Z,2021-08-26T13:47:28Z,2022-04-30T16:10:13Z,MERGED,True,15,11,6,https://github.com/renecannao,Some cherry pick from PR 3305,2,[],https://github.com/sysown/proxysql/pull/3582,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3582#issuecomment-906380192,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3586,2021-08-26T22:03:59Z,2021-08-26T23:23:16Z,2022-04-30T16:10:12Z,MERGED,True,1,1,1,https://github.com/renecannao,Use Aurora writer for reads if max_lag_ms isn't specified,1,[],https://github.com/sysown/proxysql/pull/3586,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3586,"This solves the issue described in issue #3522
It is a side effect of a mistake in commit 5336e72","This solves the issue described in issue #3522
It is a side effect of a mistake in commit 5336e72",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3593,2021-08-30T23:37:15Z,2021-08-31T10:26:16Z,2022-04-30T16:10:11Z,MERGED,True,450,15,2,https://github.com/renecannao,Correctly bind parameters if new_params_bound_flag is not provided,3,[],https://github.com/sysown/proxysql/pull/3593,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3593,"See issue #3585 .
If new-params-bound-flag is not provided by the client while executing
COM_STMT_EXECUTE , proxysql was incorrectly computing the length of
parameters.
The issue was happening only if there were null parameters.
Removing comment","See issue #3585 .
If new-params-bound-flag is not provided by the client while executing
COM_STMT_EXECUTE , proxysql was incorrectly computing the length of
parameters.
The issue was happening only if there were null parameters.
Removing comment",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3593,2021-08-30T23:37:15Z,2021-08-31T10:26:16Z,2022-04-30T16:10:11Z,MERGED,True,450,15,2,https://github.com/renecannao,Correctly bind parameters if new_params_bound_flag is not provided,3,[],https://github.com/sysown/proxysql/pull/3593,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3593#issuecomment-909057773,"See issue #3585 .
If new-params-bound-flag is not provided by the client while executing
COM_STMT_EXECUTE , proxysql was incorrectly computing the length of
parameters.
The issue was happening only if there were null parameters.
Removing comment",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3596,2021-08-31T16:48:25Z,2021-08-31T18:51:00Z,2021-08-31T18:51:00Z,MERGED,True,158,12,7,https://github.com/JavierJF,Closes #3595: Backport bugfixes to v2.2.1 - 1,7,[],https://github.com/sysown/proxysql/pull/3596,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3596,closes #3595.,closes #3595.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3596,2021-08-31T16:48:25Z,2021-08-31T18:51:00Z,2021-08-31T18:51:00Z,MERGED,True,158,12,7,https://github.com/JavierJF,Closes #3595: Backport bugfixes to v2.2.1 - 1,7,[],https://github.com/sysown/proxysql/pull/3596,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3596#issuecomment-909441207,closes #3595.,Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3598,2021-08-31T18:12:01Z,2021-08-31T18:51:57Z,2021-08-31T18:51:57Z,MERGED,True,280,25,15,https://github.com/JavierJF,Closes #3597: Backport bugfixes to v2.2.1 - 2,16,[],https://github.com/sysown/proxysql/pull/3598,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3598,closes #3597.,closes #3597.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3600,2021-08-31T19:47:07Z,2021-08-31T22:15:26Z,2021-08-31T22:15:26Z,MERGED,True,524,28,18,https://github.com/JavierJF,Closes #3599: Backport bugfixes to v2.2.1 - 3,12,[],https://github.com/sysown/proxysql/pull/3600,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3600,closes #3599.,closes #3599.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3602,2021-08-31T22:16:37Z,2021-09-01T07:50:05Z,2021-09-01T07:50:05Z,MERGED,True,717,14,6,https://github.com/JavierJF,Closes #3601: Backport bugfixes to v2.2.1 - 4,7,[],https://github.com/sysown/proxysql/pull/3602,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3602,closes #3601.,closes #3601.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3604,2021-09-07T09:45:39Z,2021-09-08T05:39:44Z,2021-09-08T05:39:45Z,MERGED,True,624,3,2,https://github.com/JavierJF,Closes #3603: Invalid preservation of prepared statement NULL values between executions,3,[],https://github.com/sysown/proxysql/pull/3604,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3604,closes #3603.,closes #3603.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3607,2021-09-07T12:48:58Z,2021-09-08T05:39:20Z,2022-04-30T16:20:55Z,MERGED,True,652,3,2,https://github.com/JavierJF,Closes #3603: Invalid preservation of prepared statement NULL values between executions ,4,[],https://github.com/sysown/proxysql/pull/3607,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3607,closes #3603.,closes #3603.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3607,2021-09-07T12:48:58Z,2021-09-08T05:39:20Z,2022-04-30T16:20:55Z,MERGED,True,652,3,2,https://github.com/JavierJF,Closes #3603: Invalid preservation of prepared statement NULL values between executions ,4,[],https://github.com/sysown/proxysql/pull/3607,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3607#issuecomment-914342398,closes #3603.,Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3609,2021-09-07T17:12:08Z,2021-09-08T05:40:40Z,2022-04-30T16:20:43Z,MERGED,True,208,95,5,https://github.com/JavierJF,Closes #3591: RESTAPI interface is unresponsive when ProxySQL has ~1000+ sockets open,2,[],https://github.com/sysown/proxysql/pull/3609,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3609,closes #3591.,closes #3591.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3610,2021-09-07T20:49:25Z,2021-09-08T05:40:02Z,2022-04-30T16:10:10Z,MERGED,True,118,40,4,https://github.com/renecannao,Reimplemented the handling of comments in 'USE' statements #3493,1,[],https://github.com/sysown/proxysql/pull/3610,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3610,"This commits partially revert 0dde4ad
It also improve the TAP test reg_test_3493-USE_with_comment-t.cpp with a
variety of combinations, that helped find a bug in the tokenizer
mysql_query_digest_and_first_comment()","This commits partially revert 0dde4ad
It also improve the TAP test reg_test_3493-USE_with_comment-t.cpp with a
variety of combinations, that helped find a bug in the tokenizer
mysql_query_digest_and_first_comment()",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3610,2021-09-07T20:49:25Z,2021-09-08T05:40:02Z,2022-04-30T16:10:10Z,MERGED,True,118,40,4,https://github.com/renecannao,Reimplemented the handling of comments in 'USE' statements #3493,1,[],https://github.com/sysown/proxysql/pull/3610,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3610#issuecomment-914636545,"This commits partially revert 0dde4ad
It also improve the TAP test reg_test_3493-USE_with_comment-t.cpp with a
variety of combinations, that helped find a bug in the tokenizer
mysql_query_digest_and_first_comment()",This closes #3608,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3611,2021-09-07T21:16:22Z,2021-09-08T05:40:54Z,2021-09-08T05:40:54Z,MERGED,True,242,2,4,https://github.com/renecannao,RESTAPI interface is unresponsive when ProxySQL has ~1000+ sockets open ,3,[],https://github.com/sysown/proxysql/pull/3611,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3611,"This is a port to 2.2.2 of PR #3609 , related to issue #3591","This is a port to 2.2.2 of PR #3609 , related to issue #3591",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3612,2021-09-07T21:19:51Z,2021-09-08T05:40:16Z,2021-09-08T05:40:16Z,MERGED,True,118,40,4,https://github.com/renecannao,Reimplemented the handling of comments in 'USE' statements #3493,1,[],https://github.com/sysown/proxysql/pull/3612,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3612,"This commits partially revert 0dde4ad
It also improve the TAP test reg_test_3493-USE_with_comment-t.cpp with a
variety of combinations, that helped find a bug in the tokenizer
mysql_query_digest_and_first_comment()
Closes #3608
This is a port to v2.2.2 of #3610","This commits partially revert 0dde4ad
It also improve the TAP test reg_test_3493-USE_with_comment-t.cpp with a
variety of combinations, that helped find a bug in the tokenizer
mysql_query_digest_and_first_comment()
Closes #3608
This is a port to v2.2.2 of #3610",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3617,2021-09-09T17:43:21Z,2021-09-14T15:37:38Z,2022-04-30T16:20:40Z,MERGED,True,1228,2,9,https://github.com/JavierJF,Implements feature 'Client Error Limit',11,['Feature request'],https://github.com/sysown/proxysql/pull/3617,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3617,"Feature description
'Client Error Limit' is a feature that limits  the number of connection errors that can be initiated from a particular address before denying future connections from that address.
Feature is controlled by new introduced variables:

mysql-client_host_error_counts: Determines the number of errors than a client address needs to reach before getting banned for future connections.
mysql-client_host_cache_size: Determines the size of the cache being used for keeping track of the clients addresses that have had any connection errors.
Command 'PROXYSQL FLUSH MYSQL CLIENT HOSTS': Clears the client host cache.

When enabled, the expected behavior for the cache is the following:
When a new connection arrives, the cache is check for knowing if the client address has reached the
maximum errors, if the limit has been reached, and error is printed in ProxySQL log advertising the
event. If the limit is not reached, the connection tries to be performed, the situation has now to
possible outcomes:

a) The connection fails, the client address is added to the cache if it wasn't present, otherwise,
   it's error count is increased. If the cache was full, the oldest entry will be replaced with one
   holding this client address.
b) The connection succeeds, if the client address was present in the cache, it's removed from it.

Two new tables has also been introduced for being able to inspect the client_host_cache :

stats.stats_mysql_client_host_cache
stats.stats_mysql_client_host_cache_reset

As in other tables, querying stats_mysql_client_host_cache_reset performs a reset of the current values hold by the cache.","Feature description
'Client Error Limit' is a feature that limits  the number of connection errors that can be initiated from a particular address before denying future connections from that address.
Feature is controlled by new introduced variables:

mysql-client_host_error_counts: Determines the number of errors than a client address needs to reach before getting banned for future connections.
mysql-client_host_cache_size: Determines the size of the cache being used for keeping track of the clients addresses that have had any connection errors.
Command 'PROXYSQL FLUSH MYSQL CLIENT HOSTS': Clears the client host cache.

When enabled, the expected behavior for the cache is the following:
When a new connection arrives, the cache is check for knowing if the client address has reached the
maximum errors, if the limit has been reached, and error is printed in ProxySQL log advertising the
event. If the limit is not reached, the connection tries to be performed, the situation has now to
possible outcomes:

a) The connection fails, the client address is added to the cache if it wasn't present, otherwise,
   it's error count is increased. If the cache was full, the oldest entry will be replaced with one
   holding this client address.
b) The connection succeeds, if the client address was present in the cache, it's removed from it.

Two new tables has also been introduced for being able to inspect the client_host_cache :

stats.stats_mysql_client_host_cache
stats.stats_mysql_client_host_cache_reset

As in other tables, querying stats_mysql_client_host_cache_reset performs a reset of the current values hold by the cache.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3617,2021-09-09T17:43:21Z,2021-09-14T15:37:38Z,2022-04-30T16:20:40Z,MERGED,True,1228,2,9,https://github.com/JavierJF,Implements feature 'Client Error Limit',11,['Feature request'],https://github.com/sysown/proxysql/pull/3617,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3617#issuecomment-916346498,"Feature description
'Client Error Limit' is a feature that limits  the number of connection errors that can be initiated from a particular address before denying future connections from that address.
Feature is controlled by new introduced variables:

mysql-client_host_error_counts: Determines the number of errors than a client address needs to reach before getting banned for future connections.
mysql-client_host_cache_size: Determines the size of the cache being used for keeping track of the clients addresses that have had any connection errors.
Command 'PROXYSQL FLUSH MYSQL CLIENT HOSTS': Clears the client host cache.

When enabled, the expected behavior for the cache is the following:
When a new connection arrives, the cache is check for knowing if the client address has reached the
maximum errors, if the limit has been reached, and error is printed in ProxySQL log advertising the
event. If the limit is not reached, the connection tries to be performed, the situation has now to
possible outcomes:

a) The connection fails, the client address is added to the cache if it wasn't present, otherwise,
   it's error count is increased. If the cache was full, the oldest entry will be replaced with one
   holding this client address.
b) The connection succeeds, if the client address was present in the cache, it's removed from it.

Two new tables has also been introduced for being able to inspect the client_host_cache :

stats.stats_mysql_client_host_cache
stats.stats_mysql_client_host_cache_reset

As in other tables, querying stats_mysql_client_host_cache_reset performs a reset of the current values hold by the cache.",Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3621,2021-09-10T14:57:24Z,2021-09-14T15:37:58Z,2022-04-30T16:20:39Z,MERGED,True,4,0,1,https://github.com/JavierJF,Fixes memory leaks detected during testing - Closes #3620,2,[],https://github.com/sysown/proxysql/pull/3621,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3621,closes #3620.,closes #3620.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3626,2021-09-16T15:54:43Z,2021-09-17T07:21:41Z,2022-04-30T16:20:34Z,MERGED,True,273,1,4,https://github.com/JavierJF,Fix issues found with 'client error limit' implementation - Closes #3625,6,[],https://github.com/sysown/proxysql/pull/3626,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3626,closes #3625.,closes #3625.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3627,2021-09-16T17:33:05Z,2021-09-16T19:30:05Z,2022-04-30T16:20:34Z,MERGED,True,273,1,4,https://github.com/JavierJF,Fix issues found with 'client error limit' implementation - Closes #3625,6,[],https://github.com/sysown/proxysql/pull/3627,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3627,closes #3625.,closes #3625.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3629,2021-09-17T15:38:16Z,2021-09-17T16:17:41Z,2021-09-17T16:17:41Z,MERGED,True,1095,1,5,https://github.com/renecannao,"V2.2.2 to v2.3.0 1 merge , related to #3628",9,[],https://github.com/sysown/proxysql/pull/3629,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3629,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3630,2021-09-17T16:25:09Z,2021-09-17T17:03:16Z,2021-09-17T17:03:17Z,MERGED,True,96,121,6,https://github.com/renecannao,"V2.2.2 to v2.3.0 2 merge , related to #3628",10,[],https://github.com/sysown/proxysql/pull/3630,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3630,Up to commit e33ada0,Up to commit e33ada0,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3631,2021-09-17T17:14:20Z,2021-09-17T18:40:18Z,2021-09-17T18:40:18Z,MERGED,True,1998,911,38,https://github.com/renecannao,"V2.2.2 to v2.3.0 3 merge , related to #3628",59,[],https://github.com/sysown/proxysql/pull/3631,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3631,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3632,2021-09-17T19:09:26Z,2021-09-17T19:47:25Z,2021-09-17T19:47:25Z,MERGED,True,308,297,14,https://github.com/renecannao,"V2.2.2 to v2.3.0 4 merge , related to #3628",17,[],https://github.com/sysown/proxysql/pull/3632,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3632,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3633,2021-09-17T19:50:16Z,2021-09-17T22:14:35Z,2021-09-17T22:14:35Z,MERGED,True,1484,270,31,https://github.com/renecannao,"V2.2.2 to v2.3.0 5 merge , related to #3268",43,[],https://github.com/sysown/proxysql/pull/3633,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3633,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3634,2021-09-17T22:25:05Z,2021-09-17T23:07:57Z,2021-09-17T23:07:57Z,MERGED,True,992,531,29,https://github.com/renecannao,"V2.2.2 to v2.3.0 6 merge , related to #3268",38,[],https://github.com/sysown/proxysql/pull/3634,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3634,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3635,2021-09-17T23:13:59Z,2021-09-18T08:44:22Z,2021-09-18T08:44:23Z,MERGED,True,1991,72,17,https://github.com/renecannao,"V2.2.2 to v2.3.0 7 merge , related to #3268",46,[],https://github.com/sysown/proxysql/pull/3635,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3635,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3639,2021-09-22T14:42:02Z,2021-09-22T14:42:22Z,2021-09-22T14:42:22Z,CLOSED,False,31,4,5,https://github.com/renecannao,V2.3.2,6,[],https://github.com/sysown/proxysql/pull/3639,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3639,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3640,2021-09-22T14:46:22Z,2021-09-22T16:23:21Z,2021-09-22T16:23:21Z,MERGED,True,16,2,1,https://github.com/renecannao,Fix bug 3628,3,[],https://github.com/sysown/proxysql/pull/3640,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3640,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3645,2021-09-28T19:50:40Z,2021-11-19T19:17:01Z,2022-04-30T16:09:45Z,MERGED,True,2565,2901,52,https://github.com/JavierJF,Added support for 'COM_RESET_CONNECTION' and 'COM_CHANGE_USER' fixes - Closes #2021,8,[],https://github.com/sysown/proxysql/pull/3645,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3645,closes #2021.,closes #2021.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3645,2021-09-28T19:50:40Z,2021-11-19T19:17:01Z,2022-04-30T16:09:45Z,MERGED,True,2565,2901,52,https://github.com/JavierJF,Added support for 'COM_RESET_CONNECTION' and 'COM_CHANGE_USER' fixes - Closes #2021,8,[],https://github.com/sysown/proxysql/pull/3645,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3645#issuecomment-943417039,closes #2021.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3645,2021-09-28T19:50:40Z,2021-11-19T19:17:01Z,2022-04-30T16:09:45Z,MERGED,True,2565,2901,52,https://github.com/JavierJF,Added support for 'COM_RESET_CONNECTION' and 'COM_CHANGE_USER' fixes - Closes #2021,8,[],https://github.com/sysown/proxysql/pull/3645,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3645#issuecomment-973196384,closes #2021.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3645,2021-09-28T19:50:40Z,2021-11-19T19:17:01Z,2022-04-30T16:09:45Z,MERGED,True,2565,2901,52,https://github.com/JavierJF,Added support for 'COM_RESET_CONNECTION' and 'COM_CHANGE_USER' fixes - Closes #2021,8,[],https://github.com/sysown/proxysql/pull/3645,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/3645#issuecomment-973655853,closes #2021.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3645,2021-09-28T19:50:40Z,2021-11-19T19:17:01Z,2022-04-30T16:09:45Z,MERGED,True,2565,2901,52,https://github.com/JavierJF,Added support for 'COM_RESET_CONNECTION' and 'COM_CHANGE_USER' fixes - Closes #2021,8,[],https://github.com/sysown/proxysql/pull/3645,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/3645#issuecomment-973923614,closes #2021.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3646,2021-09-29T17:33:05Z,2021-09-30T11:51:00Z,2021-09-30T11:51:00Z,MERGED,True,969,780,5,https://github.com/JavierJF,Fixes crashes related with 'client_error_limit' and connection timeouts,5,[],https://github.com/sysown/proxysql/pull/3646,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3646,As the title says.,As the title says.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3647,2021-09-30T09:14:02Z,2021-09-30T11:54:40Z,2021-09-30T11:54:40Z,MERGED,True,166,8,2,https://github.com/JavierJF,Fix regression introduced for 'at signs' parsing for multiplexing disabling,3,[],https://github.com/sysown/proxysql/pull/3647,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3647,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3648,2021-09-30T12:03:15Z,2021-09-30T13:55:09Z,2021-09-30T13:55:09Z,MERGED,True,1135,788,7,https://github.com/renecannao,Port to v2.3.2 of PRs #3646 and #3647,2,[],https://github.com/sysown/proxysql/pull/3648,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3648,Port to v2.3.2 of PRs #3646 and #3647,Port to v2.3.2 of PRs #3646 and #3647,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3648,2021-09-30T12:03:15Z,2021-09-30T13:55:09Z,2021-09-30T13:55:09Z,MERGED,True,1135,788,7,https://github.com/renecannao,Port to v2.3.2 of PRs #3646 and #3647,2,[],https://github.com/sysown/proxysql/pull/3648,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3648#issuecomment-931287156,Port to v2.3.2 of PRs #3646 and #3647,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3652,2021-10-04T14:59:39Z,2021-11-18T19:24:54Z,2022-04-30T16:18:47Z,MERGED,True,775,120,6,https://github.com/JavierJF,Fixes MySQL warnings are returned as results of the next executed query - Closes #3606,10,[],https://github.com/sysown/proxysql/pull/3652,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3652,closes #3606.,closes #3606.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3652,2021-10-04T14:59:39Z,2021-11-18T19:24:54Z,2022-04-30T16:18:47Z,MERGED,True,775,120,6,https://github.com/JavierJF,Fixes MySQL warnings are returned as results of the next executed query - Closes #3606,10,[],https://github.com/sysown/proxysql/pull/3652,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3652#issuecomment-936077930,closes #3606.,"Found issue reproduction
During the feature testing an issue with the impl was discovered regarding particular timing conditions that lead to an stall in the 'MySQL_Thread' processing the session. This was solved by commit: a49433c and explained in this comment.
The issue can be trivially reproduced by using the following provided patch:
read_delay.patch.tar.gz
And after applying the patch to libmariadb/mariadb_lib.c. Executing the test provided by this PR: test/tap/tests/reg_test_3606-mysql_warnings-t.cpp should achieve almost immediate reproduction of the issue.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3652,2021-10-04T14:59:39Z,2021-11-18T19:24:54Z,2022-04-30T16:18:47Z,MERGED,True,775,120,6,https://github.com/JavierJF,Fixes MySQL warnings are returned as results of the next executed query - Closes #3606,10,[],https://github.com/sysown/proxysql/pull/3652,https://github.com/JavierJF,3,https://github.com/sysown/proxysql/pull/3652#issuecomment-936119797,closes #3606.,Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3652,2021-10-04T14:59:39Z,2021-11-18T19:24:54Z,2022-04-30T16:18:47Z,MERGED,True,775,120,6,https://github.com/JavierJF,Fixes MySQL warnings are returned as results of the next executed query - Closes #3606,10,[],https://github.com/sysown/proxysql/pull/3652,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/3652#issuecomment-942092795,closes #3606.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3652,2021-10-04T14:59:39Z,2021-11-18T19:24:54Z,2022-04-30T16:18:47Z,MERGED,True,775,120,6,https://github.com/JavierJF,Fixes MySQL warnings are returned as results of the next executed query - Closes #3606,10,[],https://github.com/sysown/proxysql/pull/3652,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/3652#issuecomment-943416713,closes #3606.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3652,2021-10-04T14:59:39Z,2021-11-18T19:24:54Z,2022-04-30T16:18:47Z,MERGED,True,775,120,6,https://github.com/JavierJF,Fixes MySQL warnings are returned as results of the next executed query - Closes #3606,10,[],https://github.com/sysown/proxysql/pull/3652,https://github.com/JavierJF,6,https://github.com/sysown/proxysql/pull/3652#issuecomment-945178671,closes #3606.,Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3657,2021-10-12T13:45:22Z,2021-11-19T10:36:19Z,2022-04-30T16:09:55Z,MERGED,True,178,74,2,https://github.com/JavierJF,Fixed crashes when `mysql-query_digests` is `false` - Closes #3655,5,[],https://github.com/sysown/proxysql/pull/3657,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3657,closes #3655.,closes #3655.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3657,2021-10-12T13:45:22Z,2021-11-19T10:36:19Z,2022-04-30T16:09:55Z,MERGED,True,178,74,2,https://github.com/JavierJF,Fixed crashes when `mysql-query_digests` is `false` - Closes #3655,5,[],https://github.com/sysown/proxysql/pull/3657,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3657#issuecomment-941104915,closes #3655.,Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3657,2021-10-12T13:45:22Z,2021-11-19T10:36:19Z,2022-04-30T16:09:55Z,MERGED,True,178,74,2,https://github.com/JavierJF,Fixed crashes when `mysql-query_digests` is `false` - Closes #3655,5,[],https://github.com/sysown/proxysql/pull/3657,https://github.com/JavierJF,3,https://github.com/sysown/proxysql/pull/3657#issuecomment-941171251,closes #3655.,Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3658,2021-10-12T14:04:17Z,2021-10-14T14:31:02Z,2022-04-30T16:18:49Z,MERGED,True,174,27,10,https://github.com/JavierJF,Fixed several issues discovered while testing ASAN CI run,7,[],https://github.com/sysown/proxysql/pull/3658,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3658,"Fixed multiplexing disabling and buffer overflow in 'IsKeepMultiplexEnabledVariables' under high concurrency.
Fixed handling of split packets during 'CONNECTING_SERVER' state for 'FAST_FORWARD'
Several memory error fixes for tests files to allow a full ASAN run in the CI.","Fixed multiplexing disabling and buffer overflow in 'IsKeepMultiplexEnabledVariables' under high concurrency.
Fixed handling of split packets during 'CONNECTING_SERVER' state for 'FAST_FORWARD'
Several memory error fixes for tests files to allow a full ASAN run in the CI.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3658,2021-10-12T14:04:17Z,2021-10-14T14:31:02Z,2022-04-30T16:18:49Z,MERGED,True,174,27,10,https://github.com/JavierJF,Fixed several issues discovered while testing ASAN CI run,7,[],https://github.com/sysown/proxysql/pull/3658,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3658#issuecomment-941202241,"Fixed multiplexing disabling and buffer overflow in 'IsKeepMultiplexEnabledVariables' under high concurrency.
Fixed handling of split packets during 'CONNECTING_SERVER' state for 'FAST_FORWARD'
Several memory error fixes for tests files to allow a full ASAN run in the CI.",Test with ASAN please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3661,2021-10-14T17:20:48Z,2021-11-18T19:22:48Z,2022-04-30T16:18:46Z,MERGED,True,516,4,7,https://github.com/renecannao,Allow to unshun a server from all hostgroups,7,[],https://github.com/sysown/proxysql/pull/3661,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3661,"Related to issue #3649
TODO:

 add a new mysql variable with an appropriate name (mysql-unshun_algorithm ?) to be an integer.

0 = old behavior
1 = unshun from all hostgroups at the same time
other values will have other meanings in future


 add a simulator for shunning nodes using PROXYSQL_SIMULATOR command. This will be useful to create tests","Related to issue #3649
TODO:

 add a new mysql variable with an appropriate name (mysql-unshun_algorithm ?) to be an integer.

0 = old behavior
1 = unshun from all hostgroups at the same time
other values will have other meanings in future


 add a simulator for shunning nodes using PROXYSQL_SIMULATOR command. This will be useful to create tests",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3661,2021-10-14T17:20:48Z,2021-11-18T19:22:48Z,2022-04-30T16:18:46Z,MERGED,True,516,4,7,https://github.com/renecannao,Allow to unshun a server from all hostgroups,7,[],https://github.com/sysown/proxysql/pull/3661,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3661#issuecomment-948569239,"Related to issue #3649
TODO:

 add a new mysql variable with an appropriate name (mysql-unshun_algorithm ?) to be an integer.

0 = old behavior
1 = unshun from all hostgroups at the same time
other values will have other meanings in future


 add a simulator for shunning nodes using PROXYSQL_SIMULATOR command. This will be useful to create tests",Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3664,2021-10-18T19:46:23Z,2021-10-26T15:25:21Z,2021-10-26T18:06:21Z,MERGED,True,1,1,1,https://github.com/VinaySagarGonabavi,Add transaction_isolation to the list of hardcoded session variables that do not disable ProxySQL multiplexing Fixes sysown/proxysql#3663,1,[],https://github.com/sysown/proxysql/pull/3664,https://github.com/VinaySagarGonabavi,1,https://github.com/sysown/proxysql/pull/3664,"MySQL 8 has the session variable @@tx_isolation deprecated and only supports the synonym @@transaction_isolation
While upgrading our MySQL servers from MySQL 5.7.23 to MySQL 8.0.21, we chose to change the usage to the new session variable in our internal library built on top of SQLAlchemy.
However, this has effectively disabled ProxySQL multiplexing
proxysql/lib/MySQL_Thread.cpp

  
    
      proxysql/lib/MySQL_Thread.cpp
    
    
         Line 1178
      in
      9829c6d
    
  
  
    

        
          
           variables.keep_multiplexing_variables=strdup((char *)""tx_isolation,version""); 
        
    
  


and resulted in significantly higher backend connections while the frontend connections remained the same


And eventually resulting in very high number of threads connected to the MySQL primary.
It would be good to include the new session variable to the list of hardcoded session variables that do not disable ProxySQL multiplexing
Additional details:
ProxySQL version used: 2.2.0
OS version: ProxySQL on Ubuntu Bionic (18.04) and MySQL on Ubuntu Xenial (16.04)
Fixes #3663","MySQL 8 has the session variable @@tx_isolation deprecated and only supports the synonym @@transaction_isolation
While upgrading our MySQL servers from MySQL 5.7.23 to MySQL 8.0.21, we chose to change the usage to the new session variable in our internal library built on top of SQLAlchemy.
However, this has effectively disabled ProxySQL multiplexing
proxysql/lib/MySQL_Thread.cpp

  
    
      proxysql/lib/MySQL_Thread.cpp
    
    
         Line 1178
      in
      9829c6d
    
  
  
    

        
          
           variables.keep_multiplexing_variables=strdup((char *)""tx_isolation,version""); 
        
    
  


and resulted in significantly higher backend connections while the frontend connections remained the same


And eventually resulting in very high number of threads connected to the MySQL primary.
It would be good to include the new session variable to the list of hardcoded session variables that do not disable ProxySQL multiplexing
Additional details:
ProxySQL version used: 2.2.0
OS version: ProxySQL on Ubuntu Bionic (18.04) and MySQL on Ubuntu Xenial (16.04)
Fixes #3663",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3664,2021-10-18T19:46:23Z,2021-10-26T15:25:21Z,2021-10-26T18:06:21Z,MERGED,True,1,1,1,https://github.com/VinaySagarGonabavi,Add transaction_isolation to the list of hardcoded session variables that do not disable ProxySQL multiplexing Fixes sysown/proxysql#3663,1,[],https://github.com/sysown/proxysql/pull/3664,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/3664#issuecomment-946108743,"MySQL 8 has the session variable @@tx_isolation deprecated and only supports the synonym @@transaction_isolation
While upgrading our MySQL servers from MySQL 5.7.23 to MySQL 8.0.21, we chose to change the usage to the new session variable in our internal library built on top of SQLAlchemy.
However, this has effectively disabled ProxySQL multiplexing
proxysql/lib/MySQL_Thread.cpp

  
    
      proxysql/lib/MySQL_Thread.cpp
    
    
         Line 1178
      in
      9829c6d
    
  
  
    

        
          
           variables.keep_multiplexing_variables=strdup((char *)""tx_isolation,version""); 
        
    
  


and resulted in significantly higher backend connections while the frontend connections remained the same


And eventually resulting in very high number of threads connected to the MySQL primary.
It would be good to include the new session variable to the list of hardcoded session variables that do not disable ProxySQL multiplexing
Additional details:
ProxySQL version used: 2.2.0
OS version: ProxySQL on Ubuntu Bionic (18.04) and MySQL on Ubuntu Xenial (16.04)
Fixes #3663",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3664,2021-10-18T19:46:23Z,2021-10-26T15:25:21Z,2021-10-26T18:06:21Z,MERGED,True,1,1,1,https://github.com/VinaySagarGonabavi,Add transaction_isolation to the list of hardcoded session variables that do not disable ProxySQL multiplexing Fixes sysown/proxysql#3663,1,[],https://github.com/sysown/proxysql/pull/3664,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3664#issuecomment-949431723,"MySQL 8 has the session variable @@tx_isolation deprecated and only supports the synonym @@transaction_isolation
While upgrading our MySQL servers from MySQL 5.7.23 to MySQL 8.0.21, we chose to change the usage to the new session variable in our internal library built on top of SQLAlchemy.
However, this has effectively disabled ProxySQL multiplexing
proxysql/lib/MySQL_Thread.cpp

  
    
      proxysql/lib/MySQL_Thread.cpp
    
    
         Line 1178
      in
      9829c6d
    
  
  
    

        
          
           variables.keep_multiplexing_variables=strdup((char *)""tx_isolation,version""); 
        
    
  


and resulted in significantly higher backend connections while the frontend connections remained the same


And eventually resulting in very high number of threads connected to the MySQL primary.
It would be good to include the new session variable to the list of hardcoded session variables that do not disable ProxySQL multiplexing
Additional details:
ProxySQL version used: 2.2.0
OS version: ProxySQL on Ubuntu Bionic (18.04) and MySQL on Ubuntu Xenial (16.04)
Fixes #3663",add to whitelist,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3664,2021-10-18T19:46:23Z,2021-10-26T15:25:21Z,2021-10-26T18:06:21Z,MERGED,True,1,1,1,https://github.com/VinaySagarGonabavi,Add transaction_isolation to the list of hardcoded session variables that do not disable ProxySQL multiplexing Fixes sysown/proxysql#3663,1,[],https://github.com/sysown/proxysql/pull/3664,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/3664#issuecomment-952052218,"MySQL 8 has the session variable @@tx_isolation deprecated and only supports the synonym @@transaction_isolation
While upgrading our MySQL servers from MySQL 5.7.23 to MySQL 8.0.21, we chose to change the usage to the new session variable in our internal library built on top of SQLAlchemy.
However, this has effectively disabled ProxySQL multiplexing
proxysql/lib/MySQL_Thread.cpp

  
    
      proxysql/lib/MySQL_Thread.cpp
    
    
         Line 1178
      in
      9829c6d
    
  
  
    

        
          
           variables.keep_multiplexing_variables=strdup((char *)""tx_isolation,version""); 
        
    
  


and resulted in significantly higher backend connections while the frontend connections remained the same


And eventually resulting in very high number of threads connected to the MySQL primary.
It would be good to include the new session variable to the list of hardcoded session variables that do not disable ProxySQL multiplexing
Additional details:
ProxySQL version used: 2.2.0
OS version: ProxySQL on Ubuntu Bionic (18.04) and MySQL on Ubuntu Xenial (16.04)
Fixes #3663",Thank you for the PR!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3668,2021-10-21T13:00:25Z,2021-10-26T15:25:51Z,2022-04-30T16:18:45Z,MERGED,True,75,75,13,https://github.com/JavierJF,Removed unnecessary `+` mark from query annotations in tap tests,1,[],https://github.com/sysown/proxysql/pull/3668,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3668,"Multiple tap tests use the unnecessary mark + for query annotations, since this mark is also used for Query Optimizer Hints, and could be misleading it should be removed.","Multiple tap tests use the unnecessary mark + for query annotations, since this mark is also used for Query Optimizer Hints, and could be misleading it should be removed.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3675,2021-10-26T10:47:09Z,2021-10-26T15:33:36Z,2022-04-30T16:18:44Z,MERGED,True,8,71,4,https://github.com/JavierJF,Upgrade to OpenSSL 3.0.0,3,[],https://github.com/sysown/proxysql/pull/3675,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3675,"Several warnings are now visible at compile time due to several functions that have been deprecated in OpenSSL 3.0.0:


The _bio_RSA family of functions have been deprecated in favor of:
PEM_read_bio_PrivateKey_ex(), PEM_read_PrivateKey_ex(), PEM_read_bio_PUBKEY_ex(), PEM_read_PUBKEY_ex() and PEM_read_bio_Parameters_ex()

See: https://www.openssl.org/docs/man3.0/man3/PEM_write_bio_RSAPrivateKey.html


The 'EVP_PKEY_assign_RSA' function has been deprecated, now access to EVP_PKEY should be done by means of OSSL_DECODER APIs or construct an EVP_PKEY using EVP_PKEY_fromdata(3). See: https://www.openssl.org/docs/man3.0/man3/EVP_PKEY_assign_RSA.html


RSA key manipulation family of functions: RSA_generate_key_ex(), RSA_new(), ... have been replaced in favor of the following API: https://www.openssl.org/docs/manmaster/man7/EVP_PKEY-RSA.html


All SHA1_ manipulation functions have been deprecated in favor of EVP_Digest... manipulation API.


Despite all these deprecation, all of them look like a change in favor of a more high-level and generic API, so there is no immediate need for addressing these warnings.","Several warnings are now visible at compile time due to several functions that have been deprecated in OpenSSL 3.0.0:


The _bio_RSA family of functions have been deprecated in favor of:
PEM_read_bio_PrivateKey_ex(), PEM_read_PrivateKey_ex(), PEM_read_bio_PUBKEY_ex(), PEM_read_PUBKEY_ex() and PEM_read_bio_Parameters_ex()

See: https://www.openssl.org/docs/man3.0/man3/PEM_write_bio_RSAPrivateKey.html


The 'EVP_PKEY_assign_RSA' function has been deprecated, now access to EVP_PKEY should be done by means of OSSL_DECODER APIs or construct an EVP_PKEY using EVP_PKEY_fromdata(3). See: https://www.openssl.org/docs/man3.0/man3/EVP_PKEY_assign_RSA.html


RSA key manipulation family of functions: RSA_generate_key_ex(), RSA_new(), ... have been replaced in favor of the following API: https://www.openssl.org/docs/manmaster/man7/EVP_PKEY-RSA.html


All SHA1_ manipulation functions have been deprecated in favor of EVP_Digest... manipulation API.


Despite all these deprecation, all of them look like a change in favor of a more high-level and generic API, so there is no immediate need for addressing these warnings.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3676,2021-10-26T14:57:08Z,2021-11-19T02:03:27Z,2022-04-30T16:18:42Z,MERGED,True,41,3,3,https://github.com/JavierJF,Added new metric 'proxysql_fds_in_use' exposing number of file descriptors in use - Closes #3592,3,[],https://github.com/sysown/proxysql/pull/3676,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3676,Closes #3592.,Closes #3592.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3678,2021-10-29T01:49:33Z,2021-11-20T01:18:03Z,2021-11-20T01:18:03Z,MERGED,True,361,7,6,https://github.com/jaredev,Closes #3674 - Update stats_history.history_mysql_status_variables,10,[],https://github.com/sysown/proxysql/pull/3678,https://github.com/jaredev,1,https://github.com/sysown/proxysql/pull/3678,"Converted history table, history_mysql_status_variables to use an integer id called variable_id instead of string variable_name for scalability. Added lookup table to map these ids to their variable_name. Modified ProxySQL_Statistics to reflect these changes. Added tap test unit. Refer to commit messages and code documentation for more details. 5/6 tasks hopefully ready.
Note the test unit compiles but I haven't verified it is operational. A such, should verify that there are no syntax errors and is operational.","Converted history table, history_mysql_status_variables to use an integer id called variable_id instead of string variable_name for scalability. Added lookup table to map these ids to their variable_name. Modified ProxySQL_Statistics to reflect these changes. Added tap test unit. Refer to commit messages and code documentation for more details. 5/6 tasks hopefully ready.
Note the test unit compiles but I haven't verified it is operational. A such, should verify that there are no syntax errors and is operational.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3678,2021-10-29T01:49:33Z,2021-11-20T01:18:03Z,2021-11-20T01:18:03Z,MERGED,True,361,7,6,https://github.com/jaredev,Closes #3674 - Update stats_history.history_mysql_status_variables,10,[],https://github.com/sysown/proxysql/pull/3678,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/3678#issuecomment-954345671,"Converted history table, history_mysql_status_variables to use an integer id called variable_id instead of string variable_name for scalability. Added lookup table to map these ids to their variable_name. Modified ProxySQL_Statistics to reflect these changes. Added tap test unit. Refer to commit messages and code documentation for more details. 5/6 tasks hopefully ready.
Note the test unit compiles but I haven't verified it is operational. A such, should verify that there are no syntax errors and is operational.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3678,2021-10-29T01:49:33Z,2021-11-20T01:18:03Z,2021-11-20T01:18:03Z,MERGED,True,361,7,6,https://github.com/jaredev,Closes #3674 - Update stats_history.history_mysql_status_variables,10,[],https://github.com/sysown/proxysql/pull/3678,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3678#issuecomment-974496914,"Converted history table, history_mysql_status_variables to use an integer id called variable_id instead of string variable_name for scalability. Added lookup table to map these ids to their variable_name. Modified ProxySQL_Statistics to reflect these changes. Added tap test unit. Refer to commit messages and code documentation for more details. 5/6 tasks hopefully ready.
Note the test unit compiles but I haven't verified it is operational. A such, should verify that there are no syntax errors and is operational.",add to whitelist,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3680,2021-10-29T09:26:02Z,2022-01-06T21:53:24Z,2022-01-06T21:53:24Z,MERGED,True,4724,164,31,https://github.com/JavierJF,Several fixes for parsing issues in `mysql_query_digest_and_first_comment`,30,[],https://github.com/sysown/proxysql/pull/3680,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3680,"This PR provides a new implementation for query digests generation, address multiple issues with the current implementation, and provides a new configuration option for the digests:
Issues fixed
1. Queries ending with comment without spaces doesn't get the comment removed properly.

Q: # random_comment\n select 1.1# final_comment   \n
D: select ?# final comment

2. Numbers in scientific notation are not properly parsed because exponent is camel sensitive.

Q: SELECT 1.2E3, 1.2E-3, -1.2E3, -1.2E-3
D: SELECT 12E3, 12E-?,-12E3,-12E-? 

3. For query grouping NULL values doesn't reset the grouping count, this leads to cases as described in
'Grouping section' limitations description.
4. Commas preceding NULL values are not properly replaced in the digest.
SELECT 7,null,null, null;
SELECT ?,?,?,null

5. Commas are currently not copied if a grouping query is taking place, this conflicts with possible NULL
values that can be found, but that won't be replaced if mysql-query_digests_replace_null is 0:
Q: `INSERT INTO db.table VALUES ( Null , NULL, '',NULL, 'a', 'b', 'z',nuLL)`
D: `INSERT INTO db.table VALUES ( Null,NULL,?,NULL,?,?,...nuLL)`
                                                         ^ missing comma

5. Arithmetics operators break grouping:
Q: `INSERT INTO db.table ( col1, col2,col3,col4, col5 ) VALUES ('val',2,3,'foo', 5 + 10, 6 - 9)`
D: `INSERT INTO db.table ( col1,col2,col3,col4,col5 ) VALUES (?,?,?,... + -)`

6. When no digits is enabled, if there is any space between a identifier which name finish with a number,
and a closing parenthesis, the space is collapsed.
Q: `INSERT INTO db.table ( col1 )  VALUES ( 'val' )`
D: `INSERT INTO db.table ( col?) VALUES (?)`
                              ^ missing space after '?' mark

This is not consistent with regular behavior:
Q: `INSERT INTO db.table ( col1 )  VALUES ( 'val' )`
D: `INSERT INTO db.table ( col1 ) VALUES (?)`
                               ^ preserved space after '?' mark

7. Spaces not removed after parenthesis when literal strings are preceded by '+|-'
Q: `INSERT INTO db.table (col1)  VALUES ( +'val' )`
D: `INSERT INTO db.table (col1) VALUES ( ?)`
                                        ^ preserved space

8. Operators not removed when extra space precedes the value.
Q: `select  + 1`
D: `select +?`

Q: `select CONCAT(- '89')`
D: `select CONCAT(-?)`

9. Buffer overrun detected when comment isn't finished by */ mark:
Query:
/* SELECT 1

ASAN Output:
=27486==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x619003c01880 at pc 0x7fb1597c472b bp 0x7fb153cf6ec0 sp 0x7fb153cf6668
READ of size 1025 at 0x619003c01880 thread T6
    #0 0x7fb1597c472a in __interceptor_strlen /build/gcc/src/gcc/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:389
    #1 0x56214beb851a in tokenizer /home/javjarfer/Projects/proxysql/lib/c_tokenizer.c:24
    #2 0x56214c197aad in Query_Processor::query_parser_first_comment(Query_Processor_Output*, char*) /home/javjarfer/Projects/proxysql/lib/Query_Processor.cpp:2440
    #3 0x56214c19258d in Query_Processor::process_mysql_query(MySQL_Session*, void*, unsigned int, Query_Info*) /home/javjarfer/Projects/proxysql/lib/Query_Processor.cpp:1730
    #4 0x56214c10c214 in MySQL_Session::get_pkts_from_client(bool&, _PtrSize_t&) /home/javjarfer/Projects/proxysql/lib/MySQL_Session.cpp:3535
    #5 0x56214c115085 in MySQL_Session::handler() /home/javjarfer/Projects/proxysql/lib/MySQL_Session.cpp:4269
    #6 0x56214c08f26a in MySQL_Thread::process_all_sessions() /home/javjarfer/Projects/proxysql/lib/MySQL_Thread.cpp:3762
    #7 0x56214c0890b1 in MySQL_Thread::run() /home/javjarfer/Projects/proxysql/lib/MySQL_Thread.cpp:3271
    #8 0x56214be9ff6e in mysql_worker_thread_func(void*) /home/javjarfer/Projects/proxysql/src/main.cpp:412
    #9 0x7fb15956e258 in start_thread (/usr/lib/libpthread.so.0+0x9258)
    #10 0x7fb158fe55e2 in __GI___clone (/usr/lib/libc.so.6+0xfe5e2)

10. Double spaces not properly suppressed for some comments of kind /* */
Actual:
Q: `SELECT /* COMMENT */ 1`
D: `SELECT  ?`
           ^ preserved space

Expected:
Q: `SELECT /* COMMENT */ 1`
D: `SELECT ?`
           ^ non-preserved space

11. Signs are not properly removed when preceding literal numbers if they are surrounded by spaces.
Q: `SELECT 5 +  6,  -  6,- 7;`
D: `SELECT ?+?,-?,-? `
               ^ extra sign

Aside of these and other minor fixes found during development.
New configuration option
This PR introduces the new configuration variable 'query_digests_groups_grouping_limit'. When enabled together with 'query_digests_grouping_limit' performs a replacement of the groups pattern found described by 'query_digests_grouping_limit' when the number of groups exceeds the value imposed by 'query_digests_groups_grouping_limit'. Ex:

query_digests_grouping_limit: 1
query_digests_groups_grouping_limit: 2

Q: `INSERT INTO db.table (col1,col2,col3) VALUES (1,2,3),(3,5,6),(7,8,9) ON DUPLICATE KEY UPDATE col1 = VALUES(col2)`
D: `INSERT INTO db.table (col1,col2,col3) VALUES (?,...),(?,...),... ON DUPLICATE KEY UPDATE col1 = VALUES(col2)`

This enables a new level of compression for digests in which literal values are not relevant, this feature is disabled by default.
Improved testing tooling
Introduced a new test 'test_mysql_query_digests_stages-t.cpp' which supports multiple testing payloads formats for checking the behavior between the different parsing stages, and different configuration options.
A fuzzy testing solution using AFL++ was also included in the PR for checking the new implementation stability.","This PR provides a new implementation for query digests generation, address multiple issues with the current implementation, and provides a new configuration option for the digests:
Issues fixed
1. Queries ending with comment without spaces doesn't get the comment removed properly.

Q: # random_comment\n select 1.1# final_comment   \n
D: select ?# final comment

2. Numbers in scientific notation are not properly parsed because exponent is camel sensitive.

Q: SELECT 1.2E3, 1.2E-3, -1.2E3, -1.2E-3
D: SELECT 12E3, 12E-?,-12E3,-12E-? 

3. For query grouping NULL values doesn't reset the grouping count, this leads to cases as described in
'Grouping section' limitations description.
4. Commas preceding NULL values are not properly replaced in the digest.
SELECT 7,null,null, null;
SELECT ?,?,?,null

5. Commas are currently not copied if a grouping query is taking place, this conflicts with possible NULL
values that can be found, but that won't be replaced if mysql-query_digests_replace_null is 0:
Q: `INSERT INTO db.table VALUES ( Null , NULL, '',NULL, 'a', 'b', 'z',nuLL)`
D: `INSERT INTO db.table VALUES ( Null,NULL,?,NULL,?,?,...nuLL)`
                                                         ^ missing comma

5. Arithmetics operators break grouping:
Q: `INSERT INTO db.table ( col1, col2,col3,col4, col5 ) VALUES ('val',2,3,'foo', 5 + 10, 6 - 9)`
D: `INSERT INTO db.table ( col1,col2,col3,col4,col5 ) VALUES (?,?,?,... + -)`

6. When no digits is enabled, if there is any space between a identifier which name finish with a number,
and a closing parenthesis, the space is collapsed.
Q: `INSERT INTO db.table ( col1 )  VALUES ( 'val' )`
D: `INSERT INTO db.table ( col?) VALUES (?)`
                              ^ missing space after '?' mark

This is not consistent with regular behavior:
Q: `INSERT INTO db.table ( col1 )  VALUES ( 'val' )`
D: `INSERT INTO db.table ( col1 ) VALUES (?)`
                               ^ preserved space after '?' mark

7. Spaces not removed after parenthesis when literal strings are preceded by '+|-'
Q: `INSERT INTO db.table (col1)  VALUES ( +'val' )`
D: `INSERT INTO db.table (col1) VALUES ( ?)`
                                        ^ preserved space

8. Operators not removed when extra space precedes the value.
Q: `select  + 1`
D: `select +?`

Q: `select CONCAT(- '89')`
D: `select CONCAT(-?)`

9. Buffer overrun detected when comment isn't finished by */ mark:
Query:
/* SELECT 1

ASAN Output:
=27486==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x619003c01880 at pc 0x7fb1597c472b bp 0x7fb153cf6ec0 sp 0x7fb153cf6668
READ of size 1025 at 0x619003c01880 thread T6
    #0 0x7fb1597c472a in __interceptor_strlen /build/gcc/src/gcc/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:389
    #1 0x56214beb851a in tokenizer /home/javjarfer/Projects/proxysql/lib/c_tokenizer.c:24
    #2 0x56214c197aad in Query_Processor::query_parser_first_comment(Query_Processor_Output*, char*) /home/javjarfer/Projects/proxysql/lib/Query_Processor.cpp:2440
    #3 0x56214c19258d in Query_Processor::process_mysql_query(MySQL_Session*, void*, unsigned int, Query_Info*) /home/javjarfer/Projects/proxysql/lib/Query_Processor.cpp:1730
    #4 0x56214c10c214 in MySQL_Session::get_pkts_from_client(bool&, _PtrSize_t&) /home/javjarfer/Projects/proxysql/lib/MySQL_Session.cpp:3535
    #5 0x56214c115085 in MySQL_Session::handler() /home/javjarfer/Projects/proxysql/lib/MySQL_Session.cpp:4269
    #6 0x56214c08f26a in MySQL_Thread::process_all_sessions() /home/javjarfer/Projects/proxysql/lib/MySQL_Thread.cpp:3762
    #7 0x56214c0890b1 in MySQL_Thread::run() /home/javjarfer/Projects/proxysql/lib/MySQL_Thread.cpp:3271
    #8 0x56214be9ff6e in mysql_worker_thread_func(void*) /home/javjarfer/Projects/proxysql/src/main.cpp:412
    #9 0x7fb15956e258 in start_thread (/usr/lib/libpthread.so.0+0x9258)
    #10 0x7fb158fe55e2 in __GI___clone (/usr/lib/libc.so.6+0xfe5e2)

10. Double spaces not properly suppressed for some comments of kind /* */
Actual:
Q: `SELECT /* COMMENT */ 1`
D: `SELECT  ?`
           ^ preserved space

Expected:
Q: `SELECT /* COMMENT */ 1`
D: `SELECT ?`
           ^ non-preserved space

11. Signs are not properly removed when preceding literal numbers if they are surrounded by spaces.
Q: `SELECT 5 +  6,  -  6,- 7;`
D: `SELECT ?+?,-?,-? `
               ^ extra sign

Aside of these and other minor fixes found during development.
New configuration option
This PR introduces the new configuration variable 'query_digests_groups_grouping_limit'. When enabled together with 'query_digests_grouping_limit' performs a replacement of the groups pattern found described by 'query_digests_grouping_limit' when the number of groups exceeds the value imposed by 'query_digests_groups_grouping_limit'. Ex:

query_digests_grouping_limit: 1
query_digests_groups_grouping_limit: 2

Q: `INSERT INTO db.table (col1,col2,col3) VALUES (1,2,3),(3,5,6),(7,8,9) ON DUPLICATE KEY UPDATE col1 = VALUES(col2)`
D: `INSERT INTO db.table (col1,col2,col3) VALUES (?,...),(?,...),... ON DUPLICATE KEY UPDATE col1 = VALUES(col2)`

This enables a new level of compression for digests in which literal values are not relevant, this feature is disabled by default.
Improved testing tooling
Introduced a new test 'test_mysql_query_digests_stages-t.cpp' which supports multiple testing payloads formats for checking the behavior between the different parsing stages, and different configuration options.
A fuzzy testing solution using AFL++ was also included in the PR for checking the new implementation stability.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3680,2021-10-29T09:26:02Z,2022-01-06T21:53:24Z,2022-01-06T21:53:24Z,MERGED,True,4724,164,31,https://github.com/JavierJF,Several fixes for parsing issues in `mysql_query_digest_and_first_comment`,30,[],https://github.com/sysown/proxysql/pull/3680,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3680#issuecomment-961348665,"This PR provides a new implementation for query digests generation, address multiple issues with the current implementation, and provides a new configuration option for the digests:
Issues fixed
1. Queries ending with comment without spaces doesn't get the comment removed properly.

Q: # random_comment\n select 1.1# final_comment   \n
D: select ?# final comment

2. Numbers in scientific notation are not properly parsed because exponent is camel sensitive.

Q: SELECT 1.2E3, 1.2E-3, -1.2E3, -1.2E-3
D: SELECT 12E3, 12E-?,-12E3,-12E-? 

3. For query grouping NULL values doesn't reset the grouping count, this leads to cases as described in
'Grouping section' limitations description.
4. Commas preceding NULL values are not properly replaced in the digest.
SELECT 7,null,null, null;
SELECT ?,?,?,null

5. Commas are currently not copied if a grouping query is taking place, this conflicts with possible NULL
values that can be found, but that won't be replaced if mysql-query_digests_replace_null is 0:
Q: `INSERT INTO db.table VALUES ( Null , NULL, '',NULL, 'a', 'b', 'z',nuLL)`
D: `INSERT INTO db.table VALUES ( Null,NULL,?,NULL,?,?,...nuLL)`
                                                         ^ missing comma

5. Arithmetics operators break grouping:
Q: `INSERT INTO db.table ( col1, col2,col3,col4, col5 ) VALUES ('val',2,3,'foo', 5 + 10, 6 - 9)`
D: `INSERT INTO db.table ( col1,col2,col3,col4,col5 ) VALUES (?,?,?,... + -)`

6. When no digits is enabled, if there is any space between a identifier which name finish with a number,
and a closing parenthesis, the space is collapsed.
Q: `INSERT INTO db.table ( col1 )  VALUES ( 'val' )`
D: `INSERT INTO db.table ( col?) VALUES (?)`
                              ^ missing space after '?' mark

This is not consistent with regular behavior:
Q: `INSERT INTO db.table ( col1 )  VALUES ( 'val' )`
D: `INSERT INTO db.table ( col1 ) VALUES (?)`
                               ^ preserved space after '?' mark

7. Spaces not removed after parenthesis when literal strings are preceded by '+|-'
Q: `INSERT INTO db.table (col1)  VALUES ( +'val' )`
D: `INSERT INTO db.table (col1) VALUES ( ?)`
                                        ^ preserved space

8. Operators not removed when extra space precedes the value.
Q: `select  + 1`
D: `select +?`

Q: `select CONCAT(- '89')`
D: `select CONCAT(-?)`

9. Buffer overrun detected when comment isn't finished by */ mark:
Query:
/* SELECT 1

ASAN Output:
=27486==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x619003c01880 at pc 0x7fb1597c472b bp 0x7fb153cf6ec0 sp 0x7fb153cf6668
READ of size 1025 at 0x619003c01880 thread T6
    #0 0x7fb1597c472a in __interceptor_strlen /build/gcc/src/gcc/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:389
    #1 0x56214beb851a in tokenizer /home/javjarfer/Projects/proxysql/lib/c_tokenizer.c:24
    #2 0x56214c197aad in Query_Processor::query_parser_first_comment(Query_Processor_Output*, char*) /home/javjarfer/Projects/proxysql/lib/Query_Processor.cpp:2440
    #3 0x56214c19258d in Query_Processor::process_mysql_query(MySQL_Session*, void*, unsigned int, Query_Info*) /home/javjarfer/Projects/proxysql/lib/Query_Processor.cpp:1730
    #4 0x56214c10c214 in MySQL_Session::get_pkts_from_client(bool&, _PtrSize_t&) /home/javjarfer/Projects/proxysql/lib/MySQL_Session.cpp:3535
    #5 0x56214c115085 in MySQL_Session::handler() /home/javjarfer/Projects/proxysql/lib/MySQL_Session.cpp:4269
    #6 0x56214c08f26a in MySQL_Thread::process_all_sessions() /home/javjarfer/Projects/proxysql/lib/MySQL_Thread.cpp:3762
    #7 0x56214c0890b1 in MySQL_Thread::run() /home/javjarfer/Projects/proxysql/lib/MySQL_Thread.cpp:3271
    #8 0x56214be9ff6e in mysql_worker_thread_func(void*) /home/javjarfer/Projects/proxysql/src/main.cpp:412
    #9 0x7fb15956e258 in start_thread (/usr/lib/libpthread.so.0+0x9258)
    #10 0x7fb158fe55e2 in __GI___clone (/usr/lib/libc.so.6+0xfe5e2)

10. Double spaces not properly suppressed for some comments of kind /* */
Actual:
Q: `SELECT /* COMMENT */ 1`
D: `SELECT  ?`
           ^ preserved space

Expected:
Q: `SELECT /* COMMENT */ 1`
D: `SELECT ?`
           ^ non-preserved space

11. Signs are not properly removed when preceding literal numbers if they are surrounded by spaces.
Q: `SELECT 5 +  6,  -  6,- 7;`
D: `SELECT ?+?,-?,-? `
               ^ extra sign

Aside of these and other minor fixes found during development.
New configuration option
This PR introduces the new configuration variable 'query_digests_groups_grouping_limit'. When enabled together with 'query_digests_grouping_limit' performs a replacement of the groups pattern found described by 'query_digests_grouping_limit' when the number of groups exceeds the value imposed by 'query_digests_groups_grouping_limit'. Ex:

query_digests_grouping_limit: 1
query_digests_groups_grouping_limit: 2

Q: `INSERT INTO db.table (col1,col2,col3) VALUES (1,2,3),(3,5,6),(7,8,9) ON DUPLICATE KEY UPDATE col1 = VALUES(col2)`
D: `INSERT INTO db.table (col1,col2,col3) VALUES (?,...),(?,...),... ON DUPLICATE KEY UPDATE col1 = VALUES(col2)`

This enables a new level of compression for digests in which literal values are not relevant, this feature is disabled by default.
Improved testing tooling
Introduced a new test 'test_mysql_query_digests_stages-t.cpp' which supports multiple testing payloads formats for checking the behavior between the different parsing stages, and different configuration options.
A fuzzy testing solution using AFL++ was also included in the PR for checking the new implementation stability.",retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3680,2021-10-29T09:26:02Z,2022-01-06T21:53:24Z,2022-01-06T21:53:24Z,MERGED,True,4724,164,31,https://github.com/JavierJF,Several fixes for parsing issues in `mysql_query_digest_and_first_comment`,30,[],https://github.com/sysown/proxysql/pull/3680,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3680#issuecomment-973926068,"This PR provides a new implementation for query digests generation, address multiple issues with the current implementation, and provides a new configuration option for the digests:
Issues fixed
1. Queries ending with comment without spaces doesn't get the comment removed properly.

Q: # random_comment\n select 1.1# final_comment   \n
D: select ?# final comment

2. Numbers in scientific notation are not properly parsed because exponent is camel sensitive.

Q: SELECT 1.2E3, 1.2E-3, -1.2E3, -1.2E-3
D: SELECT 12E3, 12E-?,-12E3,-12E-? 

3. For query grouping NULL values doesn't reset the grouping count, this leads to cases as described in
'Grouping section' limitations description.
4. Commas preceding NULL values are not properly replaced in the digest.
SELECT 7,null,null, null;
SELECT ?,?,?,null

5. Commas are currently not copied if a grouping query is taking place, this conflicts with possible NULL
values that can be found, but that won't be replaced if mysql-query_digests_replace_null is 0:
Q: `INSERT INTO db.table VALUES ( Null , NULL, '',NULL, 'a', 'b', 'z',nuLL)`
D: `INSERT INTO db.table VALUES ( Null,NULL,?,NULL,?,?,...nuLL)`
                                                         ^ missing comma

5. Arithmetics operators break grouping:
Q: `INSERT INTO db.table ( col1, col2,col3,col4, col5 ) VALUES ('val',2,3,'foo', 5 + 10, 6 - 9)`
D: `INSERT INTO db.table ( col1,col2,col3,col4,col5 ) VALUES (?,?,?,... + -)`

6. When no digits is enabled, if there is any space between a identifier which name finish with a number,
and a closing parenthesis, the space is collapsed.
Q: `INSERT INTO db.table ( col1 )  VALUES ( 'val' )`
D: `INSERT INTO db.table ( col?) VALUES (?)`
                              ^ missing space after '?' mark

This is not consistent with regular behavior:
Q: `INSERT INTO db.table ( col1 )  VALUES ( 'val' )`
D: `INSERT INTO db.table ( col1 ) VALUES (?)`
                               ^ preserved space after '?' mark

7. Spaces not removed after parenthesis when literal strings are preceded by '+|-'
Q: `INSERT INTO db.table (col1)  VALUES ( +'val' )`
D: `INSERT INTO db.table (col1) VALUES ( ?)`
                                        ^ preserved space

8. Operators not removed when extra space precedes the value.
Q: `select  + 1`
D: `select +?`

Q: `select CONCAT(- '89')`
D: `select CONCAT(-?)`

9. Buffer overrun detected when comment isn't finished by */ mark:
Query:
/* SELECT 1

ASAN Output:
=27486==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x619003c01880 at pc 0x7fb1597c472b bp 0x7fb153cf6ec0 sp 0x7fb153cf6668
READ of size 1025 at 0x619003c01880 thread T6
    #0 0x7fb1597c472a in __interceptor_strlen /build/gcc/src/gcc/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:389
    #1 0x56214beb851a in tokenizer /home/javjarfer/Projects/proxysql/lib/c_tokenizer.c:24
    #2 0x56214c197aad in Query_Processor::query_parser_first_comment(Query_Processor_Output*, char*) /home/javjarfer/Projects/proxysql/lib/Query_Processor.cpp:2440
    #3 0x56214c19258d in Query_Processor::process_mysql_query(MySQL_Session*, void*, unsigned int, Query_Info*) /home/javjarfer/Projects/proxysql/lib/Query_Processor.cpp:1730
    #4 0x56214c10c214 in MySQL_Session::get_pkts_from_client(bool&, _PtrSize_t&) /home/javjarfer/Projects/proxysql/lib/MySQL_Session.cpp:3535
    #5 0x56214c115085 in MySQL_Session::handler() /home/javjarfer/Projects/proxysql/lib/MySQL_Session.cpp:4269
    #6 0x56214c08f26a in MySQL_Thread::process_all_sessions() /home/javjarfer/Projects/proxysql/lib/MySQL_Thread.cpp:3762
    #7 0x56214c0890b1 in MySQL_Thread::run() /home/javjarfer/Projects/proxysql/lib/MySQL_Thread.cpp:3271
    #8 0x56214be9ff6e in mysql_worker_thread_func(void*) /home/javjarfer/Projects/proxysql/src/main.cpp:412
    #9 0x7fb15956e258 in start_thread (/usr/lib/libpthread.so.0+0x9258)
    #10 0x7fb158fe55e2 in __GI___clone (/usr/lib/libc.so.6+0xfe5e2)

10. Double spaces not properly suppressed for some comments of kind /* */
Actual:
Q: `SELECT /* COMMENT */ 1`
D: `SELECT  ?`
           ^ preserved space

Expected:
Q: `SELECT /* COMMENT */ 1`
D: `SELECT ?`
           ^ non-preserved space

11. Signs are not properly removed when preceding literal numbers if they are surrounded by spaces.
Q: `SELECT 5 +  6,  -  6,- 7;`
D: `SELECT ?+?,-?,-? `
               ^ extra sign

Aside of these and other minor fixes found during development.
New configuration option
This PR introduces the new configuration variable 'query_digests_groups_grouping_limit'. When enabled together with 'query_digests_grouping_limit' performs a replacement of the groups pattern found described by 'query_digests_grouping_limit' when the number of groups exceeds the value imposed by 'query_digests_groups_grouping_limit'. Ex:

query_digests_grouping_limit: 1
query_digests_groups_grouping_limit: 2

Q: `INSERT INTO db.table (col1,col2,col3) VALUES (1,2,3),(3,5,6),(7,8,9) ON DUPLICATE KEY UPDATE col1 = VALUES(col2)`
D: `INSERT INTO db.table (col1,col2,col3) VALUES (?,...),(?,...),... ON DUPLICATE KEY UPDATE col1 = VALUES(col2)`

This enables a new level of compression for digests in which literal values are not relevant, this feature is disabled by default.
Improved testing tooling
Introduced a new test 'test_mysql_query_digests_stages-t.cpp' which supports multiple testing payloads formats for checking the behavior between the different parsing stages, and different configuration options.
A fuzzy testing solution using AFL++ was also included in the PR for checking the new implementation stability.",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3680,2021-10-29T09:26:02Z,2022-01-06T21:53:24Z,2022-01-06T21:53:24Z,MERGED,True,4724,164,31,https://github.com/JavierJF,Several fixes for parsing issues in `mysql_query_digest_and_first_comment`,30,[],https://github.com/sysown/proxysql/pull/3680,https://github.com/JavierJF,4,https://github.com/sysown/proxysql/pull/3680#issuecomment-981775676,"This PR provides a new implementation for query digests generation, address multiple issues with the current implementation, and provides a new configuration option for the digests:
Issues fixed
1. Queries ending with comment without spaces doesn't get the comment removed properly.

Q: # random_comment\n select 1.1# final_comment   \n
D: select ?# final comment

2. Numbers in scientific notation are not properly parsed because exponent is camel sensitive.

Q: SELECT 1.2E3, 1.2E-3, -1.2E3, -1.2E-3
D: SELECT 12E3, 12E-?,-12E3,-12E-? 

3. For query grouping NULL values doesn't reset the grouping count, this leads to cases as described in
'Grouping section' limitations description.
4. Commas preceding NULL values are not properly replaced in the digest.
SELECT 7,null,null, null;
SELECT ?,?,?,null

5. Commas are currently not copied if a grouping query is taking place, this conflicts with possible NULL
values that can be found, but that won't be replaced if mysql-query_digests_replace_null is 0:
Q: `INSERT INTO db.table VALUES ( Null , NULL, '',NULL, 'a', 'b', 'z',nuLL)`
D: `INSERT INTO db.table VALUES ( Null,NULL,?,NULL,?,?,...nuLL)`
                                                         ^ missing comma

5. Arithmetics operators break grouping:
Q: `INSERT INTO db.table ( col1, col2,col3,col4, col5 ) VALUES ('val',2,3,'foo', 5 + 10, 6 - 9)`
D: `INSERT INTO db.table ( col1,col2,col3,col4,col5 ) VALUES (?,?,?,... + -)`

6. When no digits is enabled, if there is any space between a identifier which name finish with a number,
and a closing parenthesis, the space is collapsed.
Q: `INSERT INTO db.table ( col1 )  VALUES ( 'val' )`
D: `INSERT INTO db.table ( col?) VALUES (?)`
                              ^ missing space after '?' mark

This is not consistent with regular behavior:
Q: `INSERT INTO db.table ( col1 )  VALUES ( 'val' )`
D: `INSERT INTO db.table ( col1 ) VALUES (?)`
                               ^ preserved space after '?' mark

7. Spaces not removed after parenthesis when literal strings are preceded by '+|-'
Q: `INSERT INTO db.table (col1)  VALUES ( +'val' )`
D: `INSERT INTO db.table (col1) VALUES ( ?)`
                                        ^ preserved space

8. Operators not removed when extra space precedes the value.
Q: `select  + 1`
D: `select +?`

Q: `select CONCAT(- '89')`
D: `select CONCAT(-?)`

9. Buffer overrun detected when comment isn't finished by */ mark:
Query:
/* SELECT 1

ASAN Output:
=27486==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x619003c01880 at pc 0x7fb1597c472b bp 0x7fb153cf6ec0 sp 0x7fb153cf6668
READ of size 1025 at 0x619003c01880 thread T6
    #0 0x7fb1597c472a in __interceptor_strlen /build/gcc/src/gcc/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:389
    #1 0x56214beb851a in tokenizer /home/javjarfer/Projects/proxysql/lib/c_tokenizer.c:24
    #2 0x56214c197aad in Query_Processor::query_parser_first_comment(Query_Processor_Output*, char*) /home/javjarfer/Projects/proxysql/lib/Query_Processor.cpp:2440
    #3 0x56214c19258d in Query_Processor::process_mysql_query(MySQL_Session*, void*, unsigned int, Query_Info*) /home/javjarfer/Projects/proxysql/lib/Query_Processor.cpp:1730
    #4 0x56214c10c214 in MySQL_Session::get_pkts_from_client(bool&, _PtrSize_t&) /home/javjarfer/Projects/proxysql/lib/MySQL_Session.cpp:3535
    #5 0x56214c115085 in MySQL_Session::handler() /home/javjarfer/Projects/proxysql/lib/MySQL_Session.cpp:4269
    #6 0x56214c08f26a in MySQL_Thread::process_all_sessions() /home/javjarfer/Projects/proxysql/lib/MySQL_Thread.cpp:3762
    #7 0x56214c0890b1 in MySQL_Thread::run() /home/javjarfer/Projects/proxysql/lib/MySQL_Thread.cpp:3271
    #8 0x56214be9ff6e in mysql_worker_thread_func(void*) /home/javjarfer/Projects/proxysql/src/main.cpp:412
    #9 0x7fb15956e258 in start_thread (/usr/lib/libpthread.so.0+0x9258)
    #10 0x7fb158fe55e2 in __GI___clone (/usr/lib/libc.so.6+0xfe5e2)

10. Double spaces not properly suppressed for some comments of kind /* */
Actual:
Q: `SELECT /* COMMENT */ 1`
D: `SELECT  ?`
           ^ preserved space

Expected:
Q: `SELECT /* COMMENT */ 1`
D: `SELECT ?`
           ^ non-preserved space

11. Signs are not properly removed when preceding literal numbers if they are surrounded by spaces.
Q: `SELECT 5 +  6,  -  6,- 7;`
D: `SELECT ?+?,-?,-? `
               ^ extra sign

Aside of these and other minor fixes found during development.
New configuration option
This PR introduces the new configuration variable 'query_digests_groups_grouping_limit'. When enabled together with 'query_digests_grouping_limit' performs a replacement of the groups pattern found described by 'query_digests_grouping_limit' when the number of groups exceeds the value imposed by 'query_digests_groups_grouping_limit'. Ex:

query_digests_grouping_limit: 1
query_digests_groups_grouping_limit: 2

Q: `INSERT INTO db.table (col1,col2,col3) VALUES (1,2,3),(3,5,6),(7,8,9) ON DUPLICATE KEY UPDATE col1 = VALUES(col2)`
D: `INSERT INTO db.table (col1,col2,col3) VALUES (?,...),(?,...),... ON DUPLICATE KEY UPDATE col1 = VALUES(col2)`

This enables a new level of compression for digests in which literal values are not relevant, this feature is disabled by default.
Improved testing tooling
Introduced a new test 'test_mysql_query_digests_stages-t.cpp' which supports multiple testing payloads formats for checking the behavior between the different parsing stages, and different configuration options.
A fuzzy testing solution using AFL++ was also included in the PR for checking the new implementation stability.",retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3680,2021-10-29T09:26:02Z,2022-01-06T21:53:24Z,2022-01-06T21:53:24Z,MERGED,True,4724,164,31,https://github.com/JavierJF,Several fixes for parsing issues in `mysql_query_digest_and_first_comment`,30,[],https://github.com/sysown/proxysql/pull/3680,https://github.com/JavierJF,5,https://github.com/sysown/proxysql/pull/3680#issuecomment-981827208,"This PR provides a new implementation for query digests generation, address multiple issues with the current implementation, and provides a new configuration option for the digests:
Issues fixed
1. Queries ending with comment without spaces doesn't get the comment removed properly.

Q: # random_comment\n select 1.1# final_comment   \n
D: select ?# final comment

2. Numbers in scientific notation are not properly parsed because exponent is camel sensitive.

Q: SELECT 1.2E3, 1.2E-3, -1.2E3, -1.2E-3
D: SELECT 12E3, 12E-?,-12E3,-12E-? 

3. For query grouping NULL values doesn't reset the grouping count, this leads to cases as described in
'Grouping section' limitations description.
4. Commas preceding NULL values are not properly replaced in the digest.
SELECT 7,null,null, null;
SELECT ?,?,?,null

5. Commas are currently not copied if a grouping query is taking place, this conflicts with possible NULL
values that can be found, but that won't be replaced if mysql-query_digests_replace_null is 0:
Q: `INSERT INTO db.table VALUES ( Null , NULL, '',NULL, 'a', 'b', 'z',nuLL)`
D: `INSERT INTO db.table VALUES ( Null,NULL,?,NULL,?,?,...nuLL)`
                                                         ^ missing comma

5. Arithmetics operators break grouping:
Q: `INSERT INTO db.table ( col1, col2,col3,col4, col5 ) VALUES ('val',2,3,'foo', 5 + 10, 6 - 9)`
D: `INSERT INTO db.table ( col1,col2,col3,col4,col5 ) VALUES (?,?,?,... + -)`

6. When no digits is enabled, if there is any space between a identifier which name finish with a number,
and a closing parenthesis, the space is collapsed.
Q: `INSERT INTO db.table ( col1 )  VALUES ( 'val' )`
D: `INSERT INTO db.table ( col?) VALUES (?)`
                              ^ missing space after '?' mark

This is not consistent with regular behavior:
Q: `INSERT INTO db.table ( col1 )  VALUES ( 'val' )`
D: `INSERT INTO db.table ( col1 ) VALUES (?)`
                               ^ preserved space after '?' mark

7. Spaces not removed after parenthesis when literal strings are preceded by '+|-'
Q: `INSERT INTO db.table (col1)  VALUES ( +'val' )`
D: `INSERT INTO db.table (col1) VALUES ( ?)`
                                        ^ preserved space

8. Operators not removed when extra space precedes the value.
Q: `select  + 1`
D: `select +?`

Q: `select CONCAT(- '89')`
D: `select CONCAT(-?)`

9. Buffer overrun detected when comment isn't finished by */ mark:
Query:
/* SELECT 1

ASAN Output:
=27486==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x619003c01880 at pc 0x7fb1597c472b bp 0x7fb153cf6ec0 sp 0x7fb153cf6668
READ of size 1025 at 0x619003c01880 thread T6
    #0 0x7fb1597c472a in __interceptor_strlen /build/gcc/src/gcc/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:389
    #1 0x56214beb851a in tokenizer /home/javjarfer/Projects/proxysql/lib/c_tokenizer.c:24
    #2 0x56214c197aad in Query_Processor::query_parser_first_comment(Query_Processor_Output*, char*) /home/javjarfer/Projects/proxysql/lib/Query_Processor.cpp:2440
    #3 0x56214c19258d in Query_Processor::process_mysql_query(MySQL_Session*, void*, unsigned int, Query_Info*) /home/javjarfer/Projects/proxysql/lib/Query_Processor.cpp:1730
    #4 0x56214c10c214 in MySQL_Session::get_pkts_from_client(bool&, _PtrSize_t&) /home/javjarfer/Projects/proxysql/lib/MySQL_Session.cpp:3535
    #5 0x56214c115085 in MySQL_Session::handler() /home/javjarfer/Projects/proxysql/lib/MySQL_Session.cpp:4269
    #6 0x56214c08f26a in MySQL_Thread::process_all_sessions() /home/javjarfer/Projects/proxysql/lib/MySQL_Thread.cpp:3762
    #7 0x56214c0890b1 in MySQL_Thread::run() /home/javjarfer/Projects/proxysql/lib/MySQL_Thread.cpp:3271
    #8 0x56214be9ff6e in mysql_worker_thread_func(void*) /home/javjarfer/Projects/proxysql/src/main.cpp:412
    #9 0x7fb15956e258 in start_thread (/usr/lib/libpthread.so.0+0x9258)
    #10 0x7fb158fe55e2 in __GI___clone (/usr/lib/libc.so.6+0xfe5e2)

10. Double spaces not properly suppressed for some comments of kind /* */
Actual:
Q: `SELECT /* COMMENT */ 1`
D: `SELECT  ?`
           ^ preserved space

Expected:
Q: `SELECT /* COMMENT */ 1`
D: `SELECT ?`
           ^ non-preserved space

11. Signs are not properly removed when preceding literal numbers if they are surrounded by spaces.
Q: `SELECT 5 +  6,  -  6,- 7;`
D: `SELECT ?+?,-?,-? `
               ^ extra sign

Aside of these and other minor fixes found during development.
New configuration option
This PR introduces the new configuration variable 'query_digests_groups_grouping_limit'. When enabled together with 'query_digests_grouping_limit' performs a replacement of the groups pattern found described by 'query_digests_grouping_limit' when the number of groups exceeds the value imposed by 'query_digests_groups_grouping_limit'. Ex:

query_digests_grouping_limit: 1
query_digests_groups_grouping_limit: 2

Q: `INSERT INTO db.table (col1,col2,col3) VALUES (1,2,3),(3,5,6),(7,8,9) ON DUPLICATE KEY UPDATE col1 = VALUES(col2)`
D: `INSERT INTO db.table (col1,col2,col3) VALUES (?,...),(?,...),... ON DUPLICATE KEY UPDATE col1 = VALUES(col2)`

This enables a new level of compression for digests in which literal values are not relevant, this feature is disabled by default.
Improved testing tooling
Introduced a new test 'test_mysql_query_digests_stages-t.cpp' which supports multiple testing payloads formats for checking the behavior between the different parsing stages, and different configuration options.
A fuzzy testing solution using AFL++ was also included in the PR for checking the new implementation stability.",retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3680,2021-10-29T09:26:02Z,2022-01-06T21:53:24Z,2022-01-06T21:53:24Z,MERGED,True,4724,164,31,https://github.com/JavierJF,Several fixes for parsing issues in `mysql_query_digest_and_first_comment`,30,[],https://github.com/sysown/proxysql/pull/3680,https://github.com/renecannao,6,https://github.com/sysown/proxysql/pull/3680#issuecomment-1006934288,"This PR provides a new implementation for query digests generation, address multiple issues with the current implementation, and provides a new configuration option for the digests:
Issues fixed
1. Queries ending with comment without spaces doesn't get the comment removed properly.

Q: # random_comment\n select 1.1# final_comment   \n
D: select ?# final comment

2. Numbers in scientific notation are not properly parsed because exponent is camel sensitive.

Q: SELECT 1.2E3, 1.2E-3, -1.2E3, -1.2E-3
D: SELECT 12E3, 12E-?,-12E3,-12E-? 

3. For query grouping NULL values doesn't reset the grouping count, this leads to cases as described in
'Grouping section' limitations description.
4. Commas preceding NULL values are not properly replaced in the digest.
SELECT 7,null,null, null;
SELECT ?,?,?,null

5. Commas are currently not copied if a grouping query is taking place, this conflicts with possible NULL
values that can be found, but that won't be replaced if mysql-query_digests_replace_null is 0:
Q: `INSERT INTO db.table VALUES ( Null , NULL, '',NULL, 'a', 'b', 'z',nuLL)`
D: `INSERT INTO db.table VALUES ( Null,NULL,?,NULL,?,?,...nuLL)`
                                                         ^ missing comma

5. Arithmetics operators break grouping:
Q: `INSERT INTO db.table ( col1, col2,col3,col4, col5 ) VALUES ('val',2,3,'foo', 5 + 10, 6 - 9)`
D: `INSERT INTO db.table ( col1,col2,col3,col4,col5 ) VALUES (?,?,?,... + -)`

6. When no digits is enabled, if there is any space between a identifier which name finish with a number,
and a closing parenthesis, the space is collapsed.
Q: `INSERT INTO db.table ( col1 )  VALUES ( 'val' )`
D: `INSERT INTO db.table ( col?) VALUES (?)`
                              ^ missing space after '?' mark

This is not consistent with regular behavior:
Q: `INSERT INTO db.table ( col1 )  VALUES ( 'val' )`
D: `INSERT INTO db.table ( col1 ) VALUES (?)`
                               ^ preserved space after '?' mark

7. Spaces not removed after parenthesis when literal strings are preceded by '+|-'
Q: `INSERT INTO db.table (col1)  VALUES ( +'val' )`
D: `INSERT INTO db.table (col1) VALUES ( ?)`
                                        ^ preserved space

8. Operators not removed when extra space precedes the value.
Q: `select  + 1`
D: `select +?`

Q: `select CONCAT(- '89')`
D: `select CONCAT(-?)`

9. Buffer overrun detected when comment isn't finished by */ mark:
Query:
/* SELECT 1

ASAN Output:
=27486==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x619003c01880 at pc 0x7fb1597c472b bp 0x7fb153cf6ec0 sp 0x7fb153cf6668
READ of size 1025 at 0x619003c01880 thread T6
    #0 0x7fb1597c472a in __interceptor_strlen /build/gcc/src/gcc/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:389
    #1 0x56214beb851a in tokenizer /home/javjarfer/Projects/proxysql/lib/c_tokenizer.c:24
    #2 0x56214c197aad in Query_Processor::query_parser_first_comment(Query_Processor_Output*, char*) /home/javjarfer/Projects/proxysql/lib/Query_Processor.cpp:2440
    #3 0x56214c19258d in Query_Processor::process_mysql_query(MySQL_Session*, void*, unsigned int, Query_Info*) /home/javjarfer/Projects/proxysql/lib/Query_Processor.cpp:1730
    #4 0x56214c10c214 in MySQL_Session::get_pkts_from_client(bool&, _PtrSize_t&) /home/javjarfer/Projects/proxysql/lib/MySQL_Session.cpp:3535
    #5 0x56214c115085 in MySQL_Session::handler() /home/javjarfer/Projects/proxysql/lib/MySQL_Session.cpp:4269
    #6 0x56214c08f26a in MySQL_Thread::process_all_sessions() /home/javjarfer/Projects/proxysql/lib/MySQL_Thread.cpp:3762
    #7 0x56214c0890b1 in MySQL_Thread::run() /home/javjarfer/Projects/proxysql/lib/MySQL_Thread.cpp:3271
    #8 0x56214be9ff6e in mysql_worker_thread_func(void*) /home/javjarfer/Projects/proxysql/src/main.cpp:412
    #9 0x7fb15956e258 in start_thread (/usr/lib/libpthread.so.0+0x9258)
    #10 0x7fb158fe55e2 in __GI___clone (/usr/lib/libc.so.6+0xfe5e2)

10. Double spaces not properly suppressed for some comments of kind /* */
Actual:
Q: `SELECT /* COMMENT */ 1`
D: `SELECT  ?`
           ^ preserved space

Expected:
Q: `SELECT /* COMMENT */ 1`
D: `SELECT ?`
           ^ non-preserved space

11. Signs are not properly removed when preceding literal numbers if they are surrounded by spaces.
Q: `SELECT 5 +  6,  -  6,- 7;`
D: `SELECT ?+?,-?,-? `
               ^ extra sign

Aside of these and other minor fixes found during development.
New configuration option
This PR introduces the new configuration variable 'query_digests_groups_grouping_limit'. When enabled together with 'query_digests_grouping_limit' performs a replacement of the groups pattern found described by 'query_digests_grouping_limit' when the number of groups exceeds the value imposed by 'query_digests_groups_grouping_limit'. Ex:

query_digests_grouping_limit: 1
query_digests_groups_grouping_limit: 2

Q: `INSERT INTO db.table (col1,col2,col3) VALUES (1,2,3),(3,5,6),(7,8,9) ON DUPLICATE KEY UPDATE col1 = VALUES(col2)`
D: `INSERT INTO db.table (col1,col2,col3) VALUES (?,...),(?,...),... ON DUPLICATE KEY UPDATE col1 = VALUES(col2)`

This enables a new level of compression for digests in which literal values are not relevant, this feature is disabled by default.
Improved testing tooling
Introduced a new test 'test_mysql_query_digests_stages-t.cpp' which supports multiple testing payloads formats for checking the behavior between the different parsing stages, and different configuration options.
A fuzzy testing solution using AFL++ was also included in the PR for checking the new implementation stability.",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3686,2021-11-04T16:48:44Z,2021-11-19T00:29:25Z,2021-11-19T03:40:12Z,MERGED,True,1,1,1,https://github.com/ticpu,Fix rootless container,1,[],https://github.com/sysown/proxysql/pull/3686,https://github.com/ticpu,1,https://github.com/sysown/proxysql/pull/3686,Fixes extraction of jemalloc tar file which has UID greater than 65535 and this causes an error while setting the owner when using rootless containers such as podman instead of docker.,Fixes extraction of jemalloc tar file which has UID greater than 65535 and this causes an error while setting the owner when using rootless containers such as podman instead of docker.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3686,2021-11-04T16:48:44Z,2021-11-19T00:29:25Z,2021-11-19T03:40:12Z,MERGED,True,1,1,1,https://github.com/ticpu,Fix rootless container,1,[],https://github.com/sysown/proxysql/pull/3686,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/3686#issuecomment-961228825,Fixes extraction of jemalloc tar file which has UID greater than 65535 and this causes an error while setting the owner when using rootless containers such as podman instead of docker.,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3686,2021-11-04T16:48:44Z,2021-11-19T00:29:25Z,2021-11-19T03:40:12Z,MERGED,True,1,1,1,https://github.com/ticpu,Fix rootless container,1,[],https://github.com/sysown/proxysql/pull/3686,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3686#issuecomment-973568650,Fixes extraction of jemalloc tar file which has UID greater than 65535 and this causes an error while setting the owner when using rootless containers such as podman instead of docker.,Thank you,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3692,2021-11-15T12:13:48Z,2021-11-15T17:56:45Z,2021-11-15T17:56:45Z,MERGED,True,81,4,4,https://github.com/renecannao,Testing unbalanced weight,2,[],https://github.com/sysown/proxysql/pull/3692,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3692,This is a sort of unit test to test unbalanced traffic across multiple nodes,This is a sort of unit test to test unbalanced traffic across multiple nodes,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3693,2021-11-15T15:18:40Z,,2022-03-10T21:49:33Z,OPEN,False,42,0,2,https://github.com/renecannao,Remove OpenSSL3 deprecated functions,1,[],https://github.com/sysown/proxysql/pull/3693,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3693,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3693,2021-11-15T15:18:40Z,,2022-03-10T21:49:33Z,OPEN,False,42,0,2,https://github.com/renecannao,Remove OpenSSL3 deprecated functions,1,[],https://github.com/sysown/proxysql/pull/3693,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3693#issuecomment-969168267,,Not merging until code coverage covers also code related to mysql_clear_password authentication,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3693,2021-11-15T15:18:40Z,,2022-03-10T21:49:33Z,OPEN,False,42,0,2,https://github.com/renecannao,Remove OpenSSL3 deprecated functions,1,[],https://github.com/sysown/proxysql/pull/3693,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3693#issuecomment-969173398,,Old code need to be removed too,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3693,2021-11-15T15:18:40Z,,2022-03-10T21:49:33Z,OPEN,False,42,0,2,https://github.com/renecannao,Remove OpenSSL3 deprecated functions,1,[],https://github.com/sysown/proxysql/pull/3693,https://github.com/jaredev,4,https://github.com/sysown/proxysql/pull/3693#issuecomment-1057351872,,"PR 3801 also resolves this. However, in that PR, it also updates the SHA... functions which are also deprecated which are used here. Otherwise a similar implementation. If 3801 is merged, can close this.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3693,2021-11-15T15:18:40Z,,2022-03-10T21:49:33Z,OPEN,False,42,0,2,https://github.com/renecannao,Remove OpenSSL3 deprecated functions,1,[],https://github.com/sysown/proxysql/pull/3693,https://github.com/pondix,5,https://github.com/sysown/proxysql/pull/3693#issuecomment-1064536418,,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3696,2021-11-18T19:21:09Z,2021-11-19T01:55:29Z,2022-04-30T16:09:53Z,MERGED,True,330,89,3,https://github.com/renecannao,TAP test to benchmark fast routing,1,[],https://github.com/sysown/proxysql/pull/3696,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3696,"Adding a TAP test to benchmark 2000 HGs and fast routing.
It uses sqlite3 server as a backend.
It compare a single HG vs 2000 HGs.
It benchmarks with and without Query Cache.","Adding a TAP test to benchmark 2000 HGs and fast routing.
It uses sqlite3 server as a backend.
It compare a single HG vs 2000 HGs.
It benchmarks with and without Query Cache.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3696,2021-11-18T19:21:09Z,2021-11-19T01:55:29Z,2022-04-30T16:09:53Z,MERGED,True,330,89,3,https://github.com/renecannao,TAP test to benchmark fast routing,1,[],https://github.com/sysown/proxysql/pull/3696,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3696#issuecomment-973566130,"Adding a TAP test to benchmark 2000 HGs and fast routing.
It uses sqlite3 server as a backend.
It compare a single HG vs 2000 HGs.
It benchmarks with and without Query Cache.",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3700,2021-11-19T20:41:24Z,2021-11-23T15:41:42Z,2022-04-30T16:09:46Z,MERGED,True,19,3,2,https://github.com/renecannao,Speed up start time with multiple listeners #3699,1,[],https://github.com/sysown/proxysql/pull/3700,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3700,"When multiple listeners are configured start up time is slow.
This commit batches together the configuration of all the listeners.","When multiple listeners are configured start up time is slow.
This commit batches together the configuration of all the listeners.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3702,2021-11-23T19:55:20Z,2022-01-10T19:25:03Z,2022-04-30T16:09:28Z,MERGED,True,1900,950,20,https://github.com/renecannao,Improvements on how MySQL variables are processed,19,[],https://github.com/sysown/proxysql/pull/3702,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3702,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3702,2021-11-23T19:55:20Z,2022-01-10T19:25:03Z,2022-04-30T16:09:28Z,MERGED,True,1900,950,20,https://github.com/renecannao,Improvements on how MySQL variables are processed,19,[],https://github.com/sysown/proxysql/pull/3702,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3702#issuecomment-987397292,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3702,2021-11-23T19:55:20Z,2022-01-10T19:25:03Z,2022-04-30T16:09:28Z,MERGED,True,1900,950,20,https://github.com/renecannao,Improvements on how MySQL variables are processed,19,[],https://github.com/sysown/proxysql/pull/3702,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3702#issuecomment-988724778,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3702,2021-11-23T19:55:20Z,2022-01-10T19:25:03Z,2022-04-30T16:09:28Z,MERGED,True,1900,950,20,https://github.com/renecannao,Improvements on how MySQL variables are processed,19,[],https://github.com/sysown/proxysql/pull/3702,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/3702#issuecomment-998146385,,"This PR will:
Closes #2200
Closes #2202
Closes #2702
Closes #3705
Closes #3659
Closes #3260
Closes #3184
Closes #2943
Closes #2808
Closes #3653
Closes #2937
Closes #2587
Closes #2428
Closes #2390
Closes #2129
Closes #1414",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3707,2021-11-29T10:34:50Z,2021-12-08T13:00:26Z,2021-12-08T13:00:26Z,MERGED,True,14,3,1,https://github.com/smeinecke,Allow to specify pidfile in config file,1,[],https://github.com/sysown/proxysql/pull/3707,https://github.com/smeinecke,1,https://github.com/sysown/proxysql/pull/3707,"Default path of pid file is in data directory which cause problems on
hard reset of system as the pid file is not removed.
The path + filename can now be defined as parameter ""pidfile"" in config.
Related to #760","Default path of pid file is in data directory which cause problems on
hard reset of system as the pid file is not removed.
The path + filename can now be defined as parameter ""pidfile"" in config.
Related to #760",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3707,2021-11-29T10:34:50Z,2021-12-08T13:00:26Z,2021-12-08T13:00:26Z,MERGED,True,14,3,1,https://github.com/smeinecke,Allow to specify pidfile in config file,1,[],https://github.com/sysown/proxysql/pull/3707,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/3707#issuecomment-981508090,"Default path of pid file is in data directory which cause problems on
hard reset of system as the pid file is not removed.
The path + filename can now be defined as parameter ""pidfile"" in config.
Related to #760",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3707,2021-11-29T10:34:50Z,2021-12-08T13:00:26Z,2021-12-08T13:00:26Z,MERGED,True,14,3,1,https://github.com/smeinecke,Allow to specify pidfile in config file,1,[],https://github.com/sysown/proxysql/pull/3707,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3707#issuecomment-986941363,"Default path of pid file is in data directory which cause problems on
hard reset of system as the pid file is not removed.
The path + filename can now be defined as parameter ""pidfile"" in config.
Related to #760",add to whitelist,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3707,2021-11-29T10:34:50Z,2021-12-08T13:00:26Z,2021-12-08T13:00:26Z,MERGED,True,14,3,1,https://github.com/smeinecke,Allow to specify pidfile in config file,1,[],https://github.com/sysown/proxysql/pull/3707,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/3707#issuecomment-986941507,"Default path of pid file is in data directory which cause problems on
hard reset of system as the pid file is not removed.
The path + filename can now be defined as parameter ""pidfile"" in config.
Related to #760",test this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3707,2021-11-29T10:34:50Z,2021-12-08T13:00:26Z,2021-12-08T13:00:26Z,MERGED,True,14,3,1,https://github.com/smeinecke,Allow to specify pidfile in config file,1,[],https://github.com/sysown/proxysql/pull/3707,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/3707#issuecomment-986941672,"Default path of pid file is in data directory which cause problems on
hard reset of system as the pid file is not removed.
The path + filename can now be defined as parameter ""pidfile"" in config.
Related to #760",@smeinecke : thank you for the PR!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3707,2021-11-29T10:34:50Z,2021-12-08T13:00:26Z,2021-12-08T13:00:26Z,MERGED,True,14,3,1,https://github.com/smeinecke,Allow to specify pidfile in config file,1,[],https://github.com/sysown/proxysql/pull/3707,https://github.com/renecannao,6,https://github.com/sysown/proxysql/pull/3707#issuecomment-988725673,"Default path of pid file is in data directory which cause problems on
hard reset of system as the pid file is not removed.
The path + filename can now be defined as parameter ""pidfile"" in config.
Related to #760",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3710,2021-12-01T19:46:38Z,2021-12-06T16:28:33Z,2022-04-30T16:20:22Z,MERGED,True,232,1,4,https://github.com/JavierJF,Fixed invalid handling of large packets for Admin - Closes #3690,2,[],https://github.com/sysown/proxysql/pull/3710,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3710,Closes #3690.,Closes #3690.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3712,2021-12-02T05:32:31Z,2021-12-03T22:00:50Z,2021-12-03T22:00:50Z,CLOSED,False,1,5,1,https://github.com/jaredev,Tap makefile curl include,1,[],https://github.com/sysown/proxysql/pull/3712,https://github.com/jaredev,1,https://github.com/sysown/proxysql/pull/3712,"Fixes issue: #3711


Added the include directive to the proxysql/test/tap/tap/Makefile to include curl dependency to fix compilation error on Ubuntu 20.04


Removed duplicate curl definitions","Fixes issue: #3711


Added the include directive to the proxysql/test/tap/tap/Makefile to include curl dependency to fix compilation error on Ubuntu 20.04


Removed duplicate curl definitions",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3713,2021-12-02T13:36:22Z,2021-12-06T16:26:39Z,2022-04-30T16:09:48Z,MERGED,True,1511,152,11,https://github.com/JavierJF,Added support for 'COM_RESET_CONNECTION' and 'COM_CHANGE_USER' fixes - Closes #2021,6,[],https://github.com/sysown/proxysql/pull/3713,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3713,"This PR is a duplicate of #3645, which merge was required to be reverted due to complication during the merge operation itself.","This PR is a duplicate of #3645, which merge was required to be reverted due to complication during the merge operation itself.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3715,2021-12-02T17:07:09Z,2021-12-06T16:23:31Z,2022-04-30T16:20:17Z,MERGED,True,27,0,3,https://github.com/JavierJF,Fixes compilation issues found with recent 'gcc' and 'CMake' versions - Closes #3714,2,[],https://github.com/sysown/proxysql/pull/3715,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3715,Closes #3714.,Closes #3714.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3717,2021-12-03T22:01:04Z,2021-12-06T16:21:08Z,2022-04-30T16:20:19Z,MERGED,True,1,1,1,https://github.com/jaredev,Curl include for tap build,1,[],https://github.com/sysown/proxysql/pull/3717,https://github.com/jaredev,1,https://github.com/sysown/proxysql/pull/3717,"Fixes issue: #3711
Added the include directive to the proxysql/test/tap/tap/Makefile to include curl dependency to fix compilation error on Ubuntu 20.04","Fixes issue: #3711
Added the include directive to the proxysql/test/tap/tap/Makefile to include curl dependency to fix compilation error on Ubuntu 20.04",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3722,2021-12-08T18:22:22Z,,2022-04-29T23:06:43Z,OPEN,False,1325,20,11,https://github.com/JavierJF,Added per-hostgroup sessions metrics regarding connection pool queuing ,13,[],https://github.com/sysown/proxysql/pull/3722,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3722,"The PR adds the following metrics, that can be queried from table 'stats_mysql_hostgroups_latencies', these are all per hostgroup metrics:

sessions_waiting: Current of sessions that have asked to the connection pool for a connection and have failed to obtain one.
sessions_waited: Total number of sessions that have failed to get a connection pool.
sessions_waited_time_total: Total amount of time that sessions have waited for a connection .
conns_total: Total number of connections that have been retrieved from the connection pool.
queries_total: Total number of queries that have been executed.","The PR adds the following metrics, that can be queried from table 'stats_mysql_hostgroups_latencies', these are all per hostgroup metrics:

sessions_waiting: Current of sessions that have asked to the connection pool for a connection and have failed to obtain one.
sessions_waited: Total number of sessions that have failed to get a connection pool.
sessions_waited_time_total: Total amount of time that sessions have waited for a connection .
conns_total: Total number of connections that have been retrieved from the connection pool.
queries_total: Total number of queries that have been executed.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3722,2021-12-08T18:22:22Z,,2022-04-29T23:06:43Z,OPEN,False,1325,20,11,https://github.com/JavierJF,Added per-hostgroup sessions metrics regarding connection pool queuing ,13,[],https://github.com/sysown/proxysql/pull/3722,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/3722#issuecomment-1064536392,"The PR adds the following metrics, that can be queried from table 'stats_mysql_hostgroups_latencies', these are all per hostgroup metrics:

sessions_waiting: Current of sessions that have asked to the connection pool for a connection and have failed to obtain one.
sessions_waited: Total number of sessions that have failed to get a connection pool.
sessions_waited_time_total: Total amount of time that sessions have waited for a connection .
conns_total: Total number of connections that have been retrieved from the connection pool.
queries_total: Total number of queries that have been executed.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3722,2021-12-08T18:22:22Z,,2022-04-29T23:06:43Z,OPEN,False,1325,20,11,https://github.com/JavierJF,Added per-hostgroup sessions metrics regarding connection pool queuing ,13,[],https://github.com/sysown/proxysql/pull/3722,https://github.com/mirostauder,3,https://github.com/sysown/proxysql/pull/3722#issuecomment-1113649675,"The PR adds the following metrics, that can be queried from table 'stats_mysql_hostgroups_latencies', these are all per hostgroup metrics:

sessions_waiting: Current of sessions that have asked to the connection pool for a connection and have failed to obtain one.
sessions_waited: Total number of sessions that have failed to get a connection pool.
sessions_waited_time_total: Total amount of time that sessions have waited for a connection .
conns_total: Total number of connections that have been retrieved from the connection pool.
queries_total: Total number of queries that have been executed.",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3722,2021-12-08T18:22:22Z,,2022-04-29T23:06:43Z,OPEN,False,1325,20,11,https://github.com/JavierJF,Added per-hostgroup sessions metrics regarding connection pool queuing ,13,[],https://github.com/sysown/proxysql/pull/3722,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/3722#issuecomment-1113852746,"The PR adds the following metrics, that can be queried from table 'stats_mysql_hostgroups_latencies', these are all per hostgroup metrics:

sessions_waiting: Current of sessions that have asked to the connection pool for a connection and have failed to obtain one.
sessions_waited: Total number of sessions that have failed to get a connection pool.
sessions_waited_time_total: Total amount of time that sessions have waited for a connection .
conns_total: Total number of connections that have been retrieved from the connection pool.
queries_total: Total number of queries that have been executed.",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3724,2021-12-10T10:32:05Z,2021-12-10T19:12:00Z,2021-12-13T08:09:57Z,MERGED,True,3,0,1,https://github.com/lyxly,Installation adapts for Rocky Linux,1,[],https://github.com/sysown/proxysql/pull/3724,https://github.com/lyxly,1,https://github.com/sysown/proxysql/pull/3724,Current installation supports Linux release verion Rocky Linux.,Current installation supports Linux release verion Rocky Linux.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3724,2021-12-10T10:32:05Z,2021-12-10T19:12:00Z,2021-12-13T08:09:57Z,MERGED,True,3,0,1,https://github.com/lyxly,Installation adapts for Rocky Linux,1,[],https://github.com/sysown/proxysql/pull/3724,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/3724#issuecomment-990828409,Current installation supports Linux release verion Rocky Linux.,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3724,2021-12-10T10:32:05Z,2021-12-10T19:12:00Z,2021-12-13T08:09:57Z,MERGED,True,3,0,1,https://github.com/lyxly,Installation adapts for Rocky Linux,1,[],https://github.com/sysown/proxysql/pull/3724,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3724#issuecomment-991226919,Current installation supports Linux release verion Rocky Linux.,add to whitelist,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3724,2021-12-10T10:32:05Z,2021-12-10T19:12:00Z,2021-12-13T08:09:57Z,MERGED,True,3,0,1,https://github.com/lyxly,Installation adapts for Rocky Linux,1,[],https://github.com/sysown/proxysql/pull/3724,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/3724#issuecomment-991227087,Current installation supports Linux release verion Rocky Linux.,Hi @lyxly . Thank you for the PR!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3724,2021-12-10T10:32:05Z,2021-12-10T19:12:00Z,2021-12-13T08:09:57Z,MERGED,True,3,0,1,https://github.com/lyxly,Installation adapts for Rocky Linux,1,[],https://github.com/sysown/proxysql/pull/3724,https://github.com/lyxly,5,https://github.com/sysown/proxysql/pull/3724#issuecomment-991831478,Current installation supports Linux release verion Rocky Linux.,"Oh! @renecannao I'm very sorry to forget merge ""#endif"" section.Thanks very much! I'll be more careful later. Proxysql is truly an excellent project.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3725,2021-12-10T19:10:28Z,2021-12-13T11:09:43Z,2022-04-30T16:09:38Z,MERGED,True,27,0,1,https://github.com/renecannao,Admin support for SELECT current_user() and user(),1,[],https://github.com/sysown/proxysql/pull/3725,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3725,"Admin now replies to SELECT current_user()
and SELECT user()
see #1105 (comment)","Admin now replies to SELECT current_user()
and SELECT user()
see #1105 (comment)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3725,2021-12-10T19:10:28Z,2021-12-13T11:09:43Z,2022-04-30T16:09:38Z,MERGED,True,27,0,1,https://github.com/renecannao,Admin support for SELECT current_user() and user(),1,[],https://github.com/sysown/proxysql/pull/3725,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3725#issuecomment-991235630,"Admin now replies to SELECT current_user()
and SELECT user()
see #1105 (comment)",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3725,2021-12-10T19:10:28Z,2021-12-13T11:09:43Z,2022-04-30T16:09:38Z,MERGED,True,27,0,1,https://github.com/renecannao,Admin support for SELECT current_user() and user(),1,[],https://github.com/sysown/proxysql/pull/3725,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3725#issuecomment-992316079,"Admin now replies to SELECT current_user()
and SELECT user()
see #1105 (comment)",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3727,2021-12-13T15:16:31Z,2021-12-14T10:11:06Z,2022-04-30T16:09:41Z,MERGED,True,6,1,1,https://github.com/renecannao,Remove poor optimization to disable wsrep_sync_wait #3723,1,[],https://github.com/sysown/proxysql/pull/3727,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3727,"Fix inappropriate optimization in detecting backend version
and handling of wsrep_sync_wait","Fix inappropriate optimization in detecting backend version
and handling of wsrep_sync_wait",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3730,2021-12-15T10:14:22Z,,2022-03-10T21:49:29Z,OPEN,False,1282,11,11,https://github.com/JavierJF,Add new QPS limits rules feature,14,[],https://github.com/sysown/proxysql/pull/3730,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3730,"This PR adds a new feature allowing to impose QPS limits for queries based on three different criteria:

username: Username to which the QPS limitation will be imposed.
schemaname: Schema to which the QPS limitation will be imposed.
flagIN: Evaluated in the same way as flagIN is in mysql_query_rules and correlates to the flagout / apply specified in the mysql_query_rules table. Allows limiting based on a  particular 'mysql_query_rule' match.

The added new table definition is the following:
mysql> show create table mysql_qps_limit_rules\G
*************************** 1. row ***************************
       table: mysql_qps_limit_rules
Create Table: CREATE TABLE mysql_qps_limit_rules (
    username VARCHAR NOT NULL,
    schemaname VARCHAR NOT NULL,
    flagIN INT NOT NULL DEFAULT 0,
    qps_limit INT NOT NULL DEFAULT 0,
    bucket_size INT NOT NULL DEFAULT 0,
    PRIMARY KEY (username, schemaname, flagIN) )

The rules allow to impose qps_limit and bucket_size values:

qps_limit: Allows to control the desired QPS that queries matching the rule.
bucket_size: Allows to control the burstiness or variations allowed for the QPS limit imposed (depth of the token bucket). For more information see: https://en.wikipedia.org/wiki/Token_bucket

The value 0 is considered a valid value for qps_limit. When imposed, all the queries matching the rule will stall, until the qps_limit is either changed, or removed.","This PR adds a new feature allowing to impose QPS limits for queries based on three different criteria:

username: Username to which the QPS limitation will be imposed.
schemaname: Schema to which the QPS limitation will be imposed.
flagIN: Evaluated in the same way as flagIN is in mysql_query_rules and correlates to the flagout / apply specified in the mysql_query_rules table. Allows limiting based on a  particular 'mysql_query_rule' match.

The added new table definition is the following:
mysql> show create table mysql_qps_limit_rules\G
*************************** 1. row ***************************
       table: mysql_qps_limit_rules
Create Table: CREATE TABLE mysql_qps_limit_rules (
    username VARCHAR NOT NULL,
    schemaname VARCHAR NOT NULL,
    flagIN INT NOT NULL DEFAULT 0,
    qps_limit INT NOT NULL DEFAULT 0,
    bucket_size INT NOT NULL DEFAULT 0,
    PRIMARY KEY (username, schemaname, flagIN) )

The rules allow to impose qps_limit and bucket_size values:

qps_limit: Allows to control the desired QPS that queries matching the rule.
bucket_size: Allows to control the burstiness or variations allowed for the QPS limit imposed (depth of the token bucket). For more information see: https://en.wikipedia.org/wiki/Token_bucket

The value 0 is considered a valid value for qps_limit. When imposed, all the queries matching the rule will stall, until the qps_limit is either changed, or removed.",True,{'THUMBS_UP': ['https://github.com/yakirgb']}
sysown/proxysql,https://github.com/sysown/proxysql,3730,2021-12-15T10:14:22Z,,2022-03-10T21:49:29Z,OPEN,False,1282,11,11,https://github.com/JavierJF,Add new QPS limits rules feature,14,[],https://github.com/sysown/proxysql/pull/3730,https://github.com/Fanduzi,2,https://github.com/sysown/proxysql/pull/3730#issuecomment-1006264988,"This PR adds a new feature allowing to impose QPS limits for queries based on three different criteria:

username: Username to which the QPS limitation will be imposed.
schemaname: Schema to which the QPS limitation will be imposed.
flagIN: Evaluated in the same way as flagIN is in mysql_query_rules and correlates to the flagout / apply specified in the mysql_query_rules table. Allows limiting based on a  particular 'mysql_query_rule' match.

The added new table definition is the following:
mysql> show create table mysql_qps_limit_rules\G
*************************** 1. row ***************************
       table: mysql_qps_limit_rules
Create Table: CREATE TABLE mysql_qps_limit_rules (
    username VARCHAR NOT NULL,
    schemaname VARCHAR NOT NULL,
    flagIN INT NOT NULL DEFAULT 0,
    qps_limit INT NOT NULL DEFAULT 0,
    bucket_size INT NOT NULL DEFAULT 0,
    PRIMARY KEY (username, schemaname, flagIN) )

The rules allow to impose qps_limit and bucket_size values:

qps_limit: Allows to control the desired QPS that queries matching the rule.
bucket_size: Allows to control the burstiness or variations allowed for the QPS limit imposed (depth of the token bucket). For more information see: https://en.wikipedia.org/wiki/Token_bucket

The value 0 is considered a valid value for qps_limit. When imposed, all the queries matching the rule will stall, until the qps_limit is either changed, or removed.","This is a great feature, so we can limit the flow of problematic SQL in the future!
When can we expect to see this feature released?",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3730,2021-12-15T10:14:22Z,,2022-03-10T21:49:29Z,OPEN,False,1282,11,11,https://github.com/JavierJF,Add new QPS limits rules feature,14,[],https://github.com/sysown/proxysql/pull/3730,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/3730#issuecomment-1064536347,"This PR adds a new feature allowing to impose QPS limits for queries based on three different criteria:

username: Username to which the QPS limitation will be imposed.
schemaname: Schema to which the QPS limitation will be imposed.
flagIN: Evaluated in the same way as flagIN is in mysql_query_rules and correlates to the flagout / apply specified in the mysql_query_rules table. Allows limiting based on a  particular 'mysql_query_rule' match.

The added new table definition is the following:
mysql> show create table mysql_qps_limit_rules\G
*************************** 1. row ***************************
       table: mysql_qps_limit_rules
Create Table: CREATE TABLE mysql_qps_limit_rules (
    username VARCHAR NOT NULL,
    schemaname VARCHAR NOT NULL,
    flagIN INT NOT NULL DEFAULT 0,
    qps_limit INT NOT NULL DEFAULT 0,
    bucket_size INT NOT NULL DEFAULT 0,
    PRIMARY KEY (username, schemaname, flagIN) )

The rules allow to impose qps_limit and bucket_size values:

qps_limit: Allows to control the desired QPS that queries matching the rule.
bucket_size: Allows to control the burstiness or variations allowed for the QPS limit imposed (depth of the token bucket). For more information see: https://en.wikipedia.org/wiki/Token_bucket

The value 0 is considered a valid value for qps_limit. When imposed, all the queries matching the rule will stall, until the qps_limit is either changed, or removed.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3732,2021-12-20T15:40:12Z,2022-01-05T14:31:36Z,2022-01-05T14:31:36Z,CLOSED,False,211,3,2,https://github.com/mirostauder,libinjection - build with py3,1,[],https://github.com/sysown/proxysql/pull/3732,https://github.com/mirostauder,1,https://github.com/sysown/proxysql/pull/3732,"python 2 is obsolete
patch based on
fzipi/libinjection@c3171a6
merges with HEAD and compiles cleanly, no need for python2","python 2 is obsolete
patch based on
fzipi/libinjection@c3171a6
merges with HEAD and compiles cleanly, no need for python2",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3732,2021-12-20T15:40:12Z,2022-01-05T14:31:36Z,2022-01-05T14:31:36Z,CLOSED,False,211,3,2,https://github.com/mirostauder,libinjection - build with py3,1,[],https://github.com/sysown/proxysql/pull/3732,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/3732#issuecomment-998038113,"python 2 is obsolete
patch based on
fzipi/libinjection@c3171a6
merges with HEAD and compiles cleanly, no need for python2",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3735,2021-12-22T16:34:22Z,2021-12-28T16:34:10Z,2022-04-30T16:20:15Z,MERGED,True,41,37,3,https://github.com/JavierJF,Closes #3734: `last_updated` field from `stats_mysql_client_host_cache` should be reported in seconds,3,[],https://github.com/sysown/proxysql/pull/3735,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3735,closes #3734.,closes #3734.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3735,2021-12-22T16:34:22Z,2021-12-28T16:34:10Z,2022-04-30T16:20:15Z,MERGED,True,41,37,3,https://github.com/JavierJF,Closes #3734: `last_updated` field from `stats_mysql_client_host_cache` should be reported in seconds,3,[],https://github.com/sysown/proxysql/pull/3735,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3735#issuecomment-999787508,closes #3734.,Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3743,2021-12-30T11:51:44Z,,2022-04-30T15:52:24Z,OPEN,False,517,11,10,https://github.com/JavierJF,POC for per-thread QPS limits rules,4,[],https://github.com/sysown/proxysql/pull/3743,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3743,"This PR implements the same feature as #3730. But instead of a globally accessed QPS token bucket per rule, it replicates the defined rules in a thread-local storage.
NOTE: In it's current state, '0' value isn't supported in this implementation. Since the value update takes place in 'process_mysql_query', after setting the '0' to be the target QPS, the session would get stuck and never update the local rules again.","This PR implements the same feature as #3730. But instead of a globally accessed QPS token bucket per rule, it replicates the defined rules in a thread-local storage.
NOTE: In it's current state, '0' value isn't supported in this implementation. Since the value update takes place in 'process_mysql_query', after setting the '0' to be the target QPS, the session would get stuck and never update the local rules again.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3743,2021-12-30T11:51:44Z,,2022-04-30T15:52:24Z,OPEN,False,517,11,10,https://github.com/JavierJF,POC for per-thread QPS limits rules,4,[],https://github.com/sysown/proxysql/pull/3743,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3743#issuecomment-1007971522,"This PR implements the same feature as #3730. But instead of a globally accessed QPS token bucket per rule, it replicates the defined rules in a thread-local storage.
NOTE: In it's current state, '0' value isn't supported in this implementation. Since the value update takes place in 'process_mysql_query', after setting the '0' to be the target QPS, the session would get stuck and never update the local rules again.",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3743,2021-12-30T11:51:44Z,,2022-04-30T15:52:24Z,OPEN,False,517,11,10,https://github.com/JavierJF,POC for per-thread QPS limits rules,4,[],https://github.com/sysown/proxysql/pull/3743,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/3743#issuecomment-1064536275,"This PR implements the same feature as #3730. But instead of a globally accessed QPS token bucket per rule, it replicates the defined rules in a thread-local storage.
NOTE: In it's current state, '0' value isn't supported in this implementation. Since the value update takes place in 'process_mysql_query', after setting the '0' to be the target QPS, the session would get stuck and never update the local rules again.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3743,2021-12-30T11:51:44Z,,2022-04-30T15:52:24Z,OPEN,False,517,11,10,https://github.com/JavierJF,POC for per-thread QPS limits rules,4,[],https://github.com/sysown/proxysql/pull/3743,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/3743#issuecomment-1114010017,"This PR implements the same feature as #3730. But instead of a globally accessed QPS token bucket per rule, it replicates the defined rules in a thread-local storage.
NOTE: In it's current state, '0' value isn't supported in this implementation. Since the value update takes place in 'process_mysql_query', after setting the '0' to be the target QPS, the session would get stuck and never update the local rules again.",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3747,2022-01-05T09:20:59Z,2022-01-06T20:56:15Z,2022-01-06T20:56:15Z,MERGED,True,263,7,4,https://github.com/mirostauder,Fix build issues,3,[],https://github.com/sysown/proxysql/pull/3747,https://github.com/mirostauder,1,https://github.com/sysown/proxysql/pull/3747,"use centos6.7v2 image
add fedora34 to package build
use python3 to build libinjection","use centos6.7v2 image
add fedora34 to package build
use python3 to build libinjection",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3747,2022-01-05T09:20:59Z,2022-01-06T20:56:15Z,2022-01-06T20:56:15Z,MERGED,True,263,7,4,https://github.com/mirostauder,Fix build issues,3,[],https://github.com/sysown/proxysql/pull/3747,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/3747#issuecomment-1005512822,"use centos6.7v2 image
add fedora34 to package build
use python3 to build libinjection",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3747,2022-01-05T09:20:59Z,2022-01-06T20:56:15Z,2022-01-06T20:56:15Z,MERGED,True,263,7,4,https://github.com/mirostauder,Fix build issues,3,[],https://github.com/sysown/proxysql/pull/3747,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3747#issuecomment-1005547853,"use centos6.7v2 image
add fedora34 to package build
use python3 to build libinjection",add to whitelist,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3748,2022-01-05T11:20:12Z,2022-01-06T23:57:45Z,2022-04-30T16:09:43Z,MERGED,True,18,6,5,https://github.com/renecannao,Changed variables order in PtrSizeArray/PtrArray,3,[],https://github.com/sysown/proxysql/pull/3748,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3748,"This minor change seems to improve cache affinity, because ""len"" is the
variable that is read mostly","This minor change seems to improve cache affinity, because ""len"" is the
variable that is read mostly",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3748,2022-01-05T11:20:12Z,2022-01-06T23:57:45Z,2022-04-30T16:09:43Z,MERGED,True,18,6,5,https://github.com/renecannao,Changed variables order in PtrSizeArray/PtrArray,3,[],https://github.com/sysown/proxysql/pull/3748,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3748#issuecomment-1006161625,"This minor change seems to improve cache affinity, because ""len"" is the
variable that is read mostly",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3750,2022-01-07T16:30:31Z,2022-01-07T17:01:32Z,2022-01-07T17:01:32Z,CLOSED,False,8,6,1,https://github.com/mirostauder,fix C99 issues,1,[],https://github.com/sysown/proxysql/pull/3750,https://github.com/mirostauder,1,https://github.com/sysown/proxysql/pull/3750,fix declaration inside for loop,fix declaration inside for loop,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3751,2022-01-07T17:07:37Z,2022-01-08T15:24:05Z,2022-04-30T16:09:30Z,MERGED,True,34,25,2,https://github.com/mirostauder,add -std=c11 flag,6,[],https://github.com/sysown/proxysql/pull/3751,https://github.com/mirostauder,1,https://github.com/sysown/proxysql/pull/3751,"fix C99 error, raise to C11","fix C99 error, raise to C11",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3751,2022-01-07T17:07:37Z,2022-01-08T15:24:05Z,2022-04-30T16:09:30Z,MERGED,True,34,25,2,https://github.com/mirostauder,add -std=c11 flag,6,[],https://github.com/sysown/proxysql/pull/3751,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3751#issuecomment-1007731970,"fix C99 error, raise to C11",Ok to merge,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3752,2022-01-10T16:57:52Z,2022-01-22T18:23:10Z,2022-01-22T18:23:10Z,MERGED,True,299,177,6,https://github.com/mirostauder,Build images cleanup,5,[],https://github.com/sysown/proxysql/pull/3752,https://github.com/mirostauder,1,https://github.com/sysown/proxysql/pull/3752,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3752,2022-01-10T16:57:52Z,2022-01-22T18:23:10Z,2022-01-22T18:23:10Z,MERGED,True,299,177,6,https://github.com/mirostauder,Build images cleanup,5,[],https://github.com/sysown/proxysql/pull/3752,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3752#issuecomment-1009401081,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3752,2022-01-10T16:57:52Z,2022-01-22T18:23:10Z,2022-01-22T18:23:10Z,MERGED,True,299,177,6,https://github.com/mirostauder,Build images cleanup,5,[],https://github.com/sysown/proxysql/pull/3752,https://github.com/mirostauder,3,https://github.com/sysown/proxysql/pull/3752#issuecomment-1015461262,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3752,2022-01-10T16:57:52Z,2022-01-22T18:23:10Z,2022-01-22T18:23:10Z,MERGED,True,299,177,6,https://github.com/mirostauder,Build images cleanup,5,[],https://github.com/sysown/proxysql/pull/3752,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/3752#issuecomment-1018876959,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3752,2022-01-10T16:57:52Z,2022-01-22T18:23:10Z,2022-01-22T18:23:10Z,MERGED,True,299,177,6,https://github.com/mirostauder,Build images cleanup,5,[],https://github.com/sysown/proxysql/pull/3752,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/3752#issuecomment-1018919092,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3752,2022-01-10T16:57:52Z,2022-01-22T18:23:10Z,2022-01-22T18:23:10Z,MERGED,True,299,177,6,https://github.com/mirostauder,Build images cleanup,5,[],https://github.com/sysown/proxysql/pull/3752,https://github.com/renecannao,6,https://github.com/sysown/proxysql/pull/3752#issuecomment-1019294017,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3754,2022-01-12T11:48:00Z,2022-04-28T09:12:40Z,2022-04-30T16:07:13Z,MERGED,True,155,36,6,https://github.com/renecannao,Add support for more session variables #3731 #3761 #2702,7,[],https://github.com/sysown/proxysql/pull/3754,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3754,"Added support for more session variables:

aurora_read_replica_read_committed #3761
group_replication_consistency #3731
query_cache_type #2702

Closes #3731 #3761 #2702","Added support for more session variables:

aurora_read_replica_read_committed #3761
group_replication_consistency #3731
query_cache_type #2702

Closes #3731 #3761 #2702",True,{'THUMBS_UP': ['https://github.com/GregorFritzE2']}
sysown/proxysql,https://github.com/sysown/proxysql,3754,2022-01-12T11:48:00Z,2022-04-28T09:12:40Z,2022-04-30T16:07:13Z,MERGED,True,155,36,6,https://github.com/renecannao,Add support for more session variables #3731 #3761 #2702,7,[],https://github.com/sysown/proxysql/pull/3754,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3754#issuecomment-1010961115,"Added support for more session variables:

aurora_read_replica_read_committed #3761
group_replication_consistency #3731
query_cache_type #2702

Closes #3731 #3761 #2702",Implementation is not done yet. This is just a skeleton.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3754,2022-01-12T11:48:00Z,2022-04-28T09:12:40Z,2022-04-30T16:07:13Z,MERGED,True,155,36,6,https://github.com/renecannao,Add support for more session variables #3731 #3761 #2702,7,[],https://github.com/sysown/proxysql/pull/3754,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3754#issuecomment-1029092470,"Added support for more session variables:

aurora_read_replica_read_committed #3761
group_replication_consistency #3731
query_cache_type #2702

Closes #3731 #3761 #2702",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3754,2022-01-12T11:48:00Z,2022-04-28T09:12:40Z,2022-04-30T16:07:13Z,MERGED,True,155,36,6,https://github.com/renecannao,Add support for more session variables #3731 #3761 #2702,7,[],https://github.com/sysown/proxysql/pull/3754,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/3754#issuecomment-1029133527,"Added support for more session variables:

aurora_read_replica_read_committed #3761
group_replication_consistency #3731
query_cache_type #2702

Closes #3731 #3761 #2702",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3754,2022-01-12T11:48:00Z,2022-04-28T09:12:40Z,2022-04-30T16:07:13Z,MERGED,True,155,36,6,https://github.com/renecannao,Add support for more session variables #3731 #3761 #2702,7,[],https://github.com/sysown/proxysql/pull/3754,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/3754#issuecomment-1029848004,"Added support for more session variables:

aurora_read_replica_read_committed #3761
group_replication_consistency #3731
query_cache_type #2702

Closes #3731 #3761 #2702",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3754,2022-01-12T11:48:00Z,2022-04-28T09:12:40Z,2022-04-30T16:07:13Z,MERGED,True,155,36,6,https://github.com/renecannao,Add support for more session variables #3731 #3761 #2702,7,[],https://github.com/sysown/proxysql/pull/3754,https://github.com/renecannao,6,https://github.com/sysown/proxysql/pull/3754#issuecomment-1047096433,"Added support for more session variables:

aurora_read_replica_read_committed #3761
group_replication_consistency #3731
query_cache_type #2702

Closes #3731 #3761 #2702",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3754,2022-01-12T11:48:00Z,2022-04-28T09:12:40Z,2022-04-30T16:07:13Z,MERGED,True,155,36,6,https://github.com/renecannao,Add support for more session variables #3731 #3761 #2702,7,[],https://github.com/sysown/proxysql/pull/3754,https://github.com/pondix,7,https://github.com/sysown/proxysql/pull/3754#issuecomment-1064536182,"Added support for more session variables:

aurora_read_replica_read_committed #3761
group_replication_consistency #3731
query_cache_type #2702

Closes #3731 #3761 #2702",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3754,2022-01-12T11:48:00Z,2022-04-28T09:12:40Z,2022-04-30T16:07:13Z,MERGED,True,155,36,6,https://github.com/renecannao,Add support for more session variables #3731 #3761 #2702,7,[],https://github.com/sysown/proxysql/pull/3754,https://github.com/renecannao,8,https://github.com/sysown/proxysql/pull/3754#issuecomment-1099845434,"Added support for more session variables:

aurora_read_replica_read_committed #3761
group_replication_consistency #3731
query_cache_type #2702

Closes #3731 #3761 #2702",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3754,2022-01-12T11:48:00Z,2022-04-28T09:12:40Z,2022-04-30T16:07:13Z,MERGED,True,155,36,6,https://github.com/renecannao,Add support for more session variables #3731 #3761 #2702,7,[],https://github.com/sysown/proxysql/pull/3754,https://github.com/renecannao,9,https://github.com/sysown/proxysql/pull/3754#issuecomment-1111439996,"Added support for more session variables:

aurora_read_replica_read_committed #3761
group_replication_consistency #3731
query_cache_type #2702

Closes #3731 #3761 #2702",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3755,2022-01-12T14:01:04Z,2022-01-22T18:23:08Z,2022-01-22T18:23:08Z,MERGED,True,307,179,7,https://github.com/mirostauder,Proxysql elf sha1,8,[],https://github.com/sysown/proxysql/pull/3755,https://github.com/mirostauder,1,https://github.com/sysown/proxysql/pull/3755,"after proxysql elf is built, proxysql.sha1 file is created in ./src
after packages are built, copy proxysql.sha1 as proxysql-${CURVER}-1-${PKG_RELEASE}.$ARCH.id-hash into ./binaries
content is output of 'sha1sum proxysql'","after proxysql elf is built, proxysql.sha1 file is created in ./src
after packages are built, copy proxysql.sha1 as proxysql-${CURVER}-1-${PKG_RELEASE}.$ARCH.id-hash into ./binaries
content is output of 'sha1sum proxysql'",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3755,2022-01-12T14:01:04Z,2022-01-22T18:23:08Z,2022-01-22T18:23:08Z,MERGED,True,307,179,7,https://github.com/mirostauder,Proxysql elf sha1,8,[],https://github.com/sysown/proxysql/pull/3755,https://github.com/mirostauder,2,https://github.com/sysown/proxysql/pull/3755#issuecomment-1015461613,"after proxysql elf is built, proxysql.sha1 file is created in ./src
after packages are built, copy proxysql.sha1 as proxysql-${CURVER}-1-${PKG_RELEASE}.$ARCH.id-hash into ./binaries
content is output of 'sha1sum proxysql'",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3755,2022-01-12T14:01:04Z,2022-01-22T18:23:08Z,2022-01-22T18:23:08Z,MERGED,True,307,179,7,https://github.com/mirostauder,Proxysql elf sha1,8,[],https://github.com/sysown/proxysql/pull/3755,https://github.com/mirostauder,3,https://github.com/sysown/proxysql/pull/3755#issuecomment-1015488158,"after proxysql elf is built, proxysql.sha1 file is created in ./src
after packages are built, copy proxysql.sha1 as proxysql-${CURVER}-1-${PKG_RELEASE}.$ARCH.id-hash into ./binaries
content is output of 'sha1sum proxysql'",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3755,2022-01-12T14:01:04Z,2022-01-22T18:23:08Z,2022-01-22T18:23:08Z,MERGED,True,307,179,7,https://github.com/mirostauder,Proxysql elf sha1,8,[],https://github.com/sysown/proxysql/pull/3755,https://github.com/mirostauder,4,https://github.com/sysown/proxysql/pull/3755#issuecomment-1015490621,"after proxysql elf is built, proxysql.sha1 file is created in ./src
after packages are built, copy proxysql.sha1 as proxysql-${CURVER}-1-${PKG_RELEASE}.$ARCH.id-hash into ./binaries
content is output of 'sha1sum proxysql'",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3755,2022-01-12T14:01:04Z,2022-01-22T18:23:08Z,2022-01-22T18:23:08Z,MERGED,True,307,179,7,https://github.com/mirostauder,Proxysql elf sha1,8,[],https://github.com/sysown/proxysql/pull/3755,https://github.com/mirostauder,5,https://github.com/sysown/proxysql/pull/3755#issuecomment-1015521547,"after proxysql elf is built, proxysql.sha1 file is created in ./src
after packages are built, copy proxysql.sha1 as proxysql-${CURVER}-1-${PKG_RELEASE}.$ARCH.id-hash into ./binaries
content is output of 'sha1sum proxysql'",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3755,2022-01-12T14:01:04Z,2022-01-22T18:23:08Z,2022-01-22T18:23:08Z,MERGED,True,307,179,7,https://github.com/mirostauder,Proxysql elf sha1,8,[],https://github.com/sysown/proxysql/pull/3755,https://github.com/renecannao,6,https://github.com/sysown/proxysql/pull/3755#issuecomment-1019294191,"after proxysql elf is built, proxysql.sha1 file is created in ./src
after packages are built, copy proxysql.sha1 as proxysql-${CURVER}-1-${PKG_RELEASE}.$ARCH.id-hash into ./binaries
content is output of 'sha1sum proxysql'",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3757,2022-01-12T18:13:37Z,2022-01-21T21:19:40Z,2022-01-21T21:19:40Z,MERGED,True,6,1,2,https://github.com/JavierJF,Closes #3756: Conflict between `deprecate_eof` and `fast_forward`,2,[],https://github.com/sysown/proxysql/pull/3757,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3757,"This PR also fixes a issue found during development regarding create_new_connection query annotation.
Query annotation issue description
When query annotation 'create_new_connection` is used, the request may fail if the connection is requested from the thread local cache instead of the connection pool.","This PR also fixes a issue found during development regarding create_new_connection query annotation.
Query annotation issue description
When query annotation 'create_new_connection` is used, the request may fail if the connection is requested from the thread local cache instead of the connection pool.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3757,2022-01-12T18:13:37Z,2022-01-21T21:19:40Z,2022-01-21T21:19:40Z,MERGED,True,6,1,2,https://github.com/JavierJF,Closes #3756: Conflict between `deprecate_eof` and `fast_forward`,2,[],https://github.com/sysown/proxysql/pull/3757,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3757#issuecomment-1011359498,"This PR also fixes a issue found during development regarding create_new_connection query annotation.
Query annotation issue description
When query annotation 'create_new_connection` is used, the request may fail if the connection is requested from the thread local cache instead of the connection pool.",Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3757,2022-01-12T18:13:37Z,2022-01-21T21:19:40Z,2022-01-21T21:19:40Z,MERGED,True,6,1,2,https://github.com/JavierJF,Closes #3756: Conflict between `deprecate_eof` and `fast_forward`,2,[],https://github.com/sysown/proxysql/pull/3757,https://github.com/JavierJF,3,https://github.com/sysown/proxysql/pull/3757#issuecomment-1011405465,"This PR also fixes a issue found during development regarding create_new_connection query annotation.
Query annotation issue description
When query annotation 'create_new_connection` is used, the request may fail if the connection is requested from the thread local cache instead of the connection pool.",Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3759,2022-01-12T22:50:08Z,2022-01-21T21:16:40Z,2022-01-21T21:16:40Z,MERGED,True,0,3,1,https://github.com/acabaca24,Removed dead code,1,[],https://github.com/sysown/proxysql/pull/3759,https://github.com/acabaca24,1,https://github.com/sysown/proxysql/pull/3759,"As reported in #3740 there was duplicated code.
Originated from this merge #739","As reported in #3740 there was duplicated code.
Originated from this merge #739",True,"{'THUMBS_UP': ['https://github.com/Culurio', 'https://github.com/Fire2343']}"
sysown/proxysql,https://github.com/sysown/proxysql,3759,2022-01-12T22:50:08Z,2022-01-21T21:16:40Z,2022-01-21T21:16:40Z,MERGED,True,0,3,1,https://github.com/acabaca24,Removed dead code,1,[],https://github.com/sysown/proxysql/pull/3759,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/3759#issuecomment-1011521149,"As reported in #3740 there was duplicated code.
Originated from this merge #739",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3759,2022-01-12T22:50:08Z,2022-01-21T21:16:40Z,2022-01-21T21:16:40Z,MERGED,True,0,3,1,https://github.com/acabaca24,Removed dead code,1,[],https://github.com/sysown/proxysql/pull/3759,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3759#issuecomment-1011525589,"As reported in #3740 there was duplicated code.
Originated from this merge #739",Add to whitelist,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3759,2022-01-12T22:50:08Z,2022-01-21T21:16:40Z,2022-01-21T21:16:40Z,MERGED,True,0,3,1,https://github.com/acabaca24,Removed dead code,1,[],https://github.com/sysown/proxysql/pull/3759,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/3759#issuecomment-1011525909,"As reported in #3740 there was duplicated code.
Originated from this merge #739",Thank you for the PR,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3759,2022-01-12T22:50:08Z,2022-01-21T21:16:40Z,2022-01-21T21:16:40Z,MERGED,True,0,3,1,https://github.com/acabaca24,Removed dead code,1,[],https://github.com/sysown/proxysql/pull/3759,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/3759#issuecomment-1011983238,"As reported in #3740 there was duplicated code.
Originated from this merge #739",test this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3766,2022-01-18T18:43:10Z,2022-01-22T10:12:09Z,2022-01-22T10:12:09Z,MERGED,True,243,57,5,https://github.com/JavierJF,Closes #3765: POLLOUT incorrectly set due OpenSSL 3.0 update,5,[],https://github.com/sysown/proxysql/pull/3766,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3766,Closes #3765.,Closes #3765.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3769,2022-01-22T09:51:55Z,2022-01-22T10:47:18Z,2022-04-30T16:09:26Z,MERGED,True,24,3,4,https://github.com/renecannao,Improve verbosity of TAP test_unshun_algorithm-t,3,[],https://github.com/sysown/proxysql/pull/3769,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3769,To debug random failures,To debug random failures,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3770,2022-01-22T12:28:28Z,,2022-03-10T21:49:22Z,OPEN,False,116,3,3,https://github.com/renecannao,Speeding up query parsing with lookup tables,1,[],https://github.com/sysown/proxysql/pull/3770,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3770,This PR deprecates #3229,This PR deprecates #3229,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3770,2022-01-22T12:28:28Z,,2022-03-10T21:49:22Z,OPEN,False,116,3,3,https://github.com/renecannao,Speeding up query parsing with lookup tables,1,[],https://github.com/sysown/proxysql/pull/3770,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3770#issuecomment-1019294069,This PR deprecates #3229,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3770,2022-01-22T12:28:28Z,,2022-03-10T21:49:22Z,OPEN,False,116,3,3,https://github.com/renecannao,Speeding up query parsing with lookup tables,1,[],https://github.com/sysown/proxysql/pull/3770,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3770#issuecomment-1019311707,This PR deprecates #3229,"Micro-benchmark shows better results, but on more complex benchmarks the performance improvement doesn't seem noticeable.
Putting on hold",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3770,2022-01-22T12:28:28Z,,2022-03-10T21:49:22Z,OPEN,False,116,3,3,https://github.com/renecannao,Speeding up query parsing with lookup tables,1,[],https://github.com/sysown/proxysql/pull/3770,https://github.com/pondix,4,https://github.com/sysown/proxysql/pull/3770#issuecomment-1064536084,This PR deprecates #3229,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3771,2022-01-22T15:36:56Z,2022-01-22T20:45:43Z,2022-04-30T16:09:36Z,MERGED,True,29,2,3,https://github.com/renecannao,Add more verbosity for TAP test_unshun_algorithm-t,1,[],https://github.com/sysown/proxysql/pull/3771,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3771,"Test test_unshun_algorithm-t is still randomly failing, but it is not clear if the feature or the test itself is faulty.
Adding more verbosity","Test test_unshun_algorithm-t is still randomly failing, but it is not clear if the feature or the test itself is faulty.
Adding more verbosity",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3771,2022-01-22T15:36:56Z,2022-01-22T20:45:43Z,2022-04-30T16:09:36Z,MERGED,True,29,2,3,https://github.com/renecannao,Add more verbosity for TAP test_unshun_algorithm-t,1,[],https://github.com/sysown/proxysql/pull/3771,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3771#issuecomment-1019329056,"Test test_unshun_algorithm-t is still randomly failing, but it is not clear if the feature or the test itself is faulty.
Adding more verbosity",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3771,2022-01-22T15:36:56Z,2022-01-22T20:45:43Z,2022-04-30T16:09:36Z,MERGED,True,29,2,3,https://github.com/renecannao,Add more verbosity for TAP test_unshun_algorithm-t,1,[],https://github.com/sysown/proxysql/pull/3771,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3771#issuecomment-1019346881,"Test test_unshun_algorithm-t is still randomly failing, but it is not clear if the feature or the test itself is faulty.
Adding more verbosity",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3774,2022-01-24T16:35:33Z,2022-02-03T18:27:20Z,2022-04-30T16:06:47Z,MERGED,True,222,10,4,https://github.com/JavierJF,Fix test 'test_unshun_algorithm-t' and variable 'mysql-connect_retries_delay',7,[],https://github.com/sysown/proxysql/pull/3774,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3774,"Issue was real, test has been re-designed and 'mysql-connect_retries_delay' has been fixed.","Issue was real, test has been re-designed and 'mysql-connect_retries_delay' has been fixed.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3774,2022-01-24T16:35:33Z,2022-02-03T18:27:20Z,2022-04-30T16:06:47Z,MERGED,True,222,10,4,https://github.com/JavierJF,Fix test 'test_unshun_algorithm-t' and variable 'mysql-connect_retries_delay',7,[],https://github.com/sysown/proxysql/pull/3774,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3774#issuecomment-1020302589,"Issue was real, test has been re-designed and 'mysql-connect_retries_delay' has been fixed.",Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3774,2022-01-24T16:35:33Z,2022-02-03T18:27:20Z,2022-04-30T16:06:47Z,MERGED,True,222,10,4,https://github.com/JavierJF,Fix test 'test_unshun_algorithm-t' and variable 'mysql-connect_retries_delay',7,[],https://github.com/sysown/proxysql/pull/3774,https://github.com/JavierJF,3,https://github.com/sysown/proxysql/pull/3774#issuecomment-1020334068,"Issue was real, test has been re-designed and 'mysql-connect_retries_delay' has been fixed.",Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3774,2022-01-24T16:35:33Z,2022-02-03T18:27:20Z,2022-04-30T16:06:47Z,MERGED,True,222,10,4,https://github.com/JavierJF,Fix test 'test_unshun_algorithm-t' and variable 'mysql-connect_retries_delay',7,[],https://github.com/sysown/proxysql/pull/3774,https://github.com/JavierJF,4,https://github.com/sysown/proxysql/pull/3774#issuecomment-1020364076,"Issue was real, test has been re-designed and 'mysql-connect_retries_delay' has been fixed.",Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3774,2022-01-24T16:35:33Z,2022-02-03T18:27:20Z,2022-04-30T16:06:47Z,MERGED,True,222,10,4,https://github.com/JavierJF,Fix test 'test_unshun_algorithm-t' and variable 'mysql-connect_retries_delay',7,[],https://github.com/sysown/proxysql/pull/3774,https://github.com/JavierJF,5,https://github.com/sysown/proxysql/pull/3774#issuecomment-1020501113,"Issue was real, test has been re-designed and 'mysql-connect_retries_delay' has been fixed.",Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3774,2022-01-24T16:35:33Z,2022-02-03T18:27:20Z,2022-04-30T16:06:47Z,MERGED,True,222,10,4,https://github.com/JavierJF,Fix test 'test_unshun_algorithm-t' and variable 'mysql-connect_retries_delay',7,[],https://github.com/sysown/proxysql/pull/3774,https://github.com/JavierJF,6,https://github.com/sysown/proxysql/pull/3774#issuecomment-1020545256,"Issue was real, test has been re-designed and 'mysql-connect_retries_delay' has been fixed.",Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3774,2022-01-24T16:35:33Z,2022-02-03T18:27:20Z,2022-04-30T16:06:47Z,MERGED,True,222,10,4,https://github.com/JavierJF,Fix test 'test_unshun_algorithm-t' and variable 'mysql-connect_retries_delay',7,[],https://github.com/sysown/proxysql/pull/3774,https://github.com/JavierJF,7,https://github.com/sysown/proxysql/pull/3774#issuecomment-1020914819,"Issue was real, test has been re-designed and 'mysql-connect_retries_delay' has been fixed.",Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3774,2022-01-24T16:35:33Z,2022-02-03T18:27:20Z,2022-04-30T16:06:47Z,MERGED,True,222,10,4,https://github.com/JavierJF,Fix test 'test_unshun_algorithm-t' and variable 'mysql-connect_retries_delay',7,[],https://github.com/sysown/proxysql/pull/3774,https://github.com/renecannao,8,https://github.com/sysown/proxysql/pull/3774#issuecomment-1029158108,"Issue was real, test has been re-designed and 'mysql-connect_retries_delay' has been fixed.",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3775,2022-01-24T20:58:27Z,2022-01-26T10:17:33Z,2022-01-26T10:17:33Z,MERGED,True,139,13,5,https://github.com/mirostauder,Build clang,10,[],https://github.com/sysown/proxysql/pull/3775,https://github.com/mirostauder,1,https://github.com/sysown/proxysql/pull/3775,"adding clang builds for centos8, ubuntu20, fedora34, debian11","adding clang builds for centos8, ubuntu20, fedora34, debian11",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3776,2022-01-27T07:57:21Z,2022-02-03T10:27:13Z,2022-04-30T16:06:49Z,MERGED,True,228,9,6,https://github.com/mirostauder,add opensuse15 builds,2,[],https://github.com/sysown/proxysql/pull/3776,https://github.com/mirostauder,1,https://github.com/sysown/proxysql/pull/3776,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3776,2022-01-27T07:57:21Z,2022-02-03T10:27:13Z,2022-04-30T16:06:49Z,MERGED,True,228,9,6,https://github.com/mirostauder,add opensuse15 builds,2,[],https://github.com/sysown/proxysql/pull/3776,https://github.com/mirostauder,2,https://github.com/sysown/proxysql/pull/3776#issuecomment-1023010826,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3777,2022-01-27T22:04:37Z,2022-02-03T08:42:40Z,2022-02-03T08:42:40Z,MERGED,True,2,2,1,https://github.com/mirostauder,change linking uuid to dynamic,1,[],https://github.com/sysown/proxysql/pull/3777,https://github.com/mirostauder,1,https://github.com/sysown/proxysql/pull/3777,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3779,2022-02-03T08:30:52Z,2022-02-03T08:31:31Z,2022-04-30T16:06:52Z,MERGED,True,3,2,2,https://github.com/mirostauder,fix file name/owner,1,[],https://github.com/sysown/proxysql/pull/3779,https://github.com/mirostauder,1,https://github.com/sysown/proxysql/pull/3779,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3782,2022-02-03T16:14:49Z,2022-02-03T17:44:31Z,2022-04-30T16:07:25Z,MERGED,True,83,3,3,https://github.com/JavierJF,Closes #3483: Expose ProxySQL version info in Prometheus metrics,2,[],https://github.com/sysown/proxysql/pull/3782,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3782,closes #3483.,closes #3483.,True,{'HOORAY': ['https://github.com/eik3']}
sysown/proxysql,https://github.com/sysown/proxysql,3783,2022-02-04T16:03:37Z,2022-02-21T18:42:08Z,2022-04-30T16:07:23Z,MERGED,True,184,17,7,https://github.com/JavierJF,Add new variable 'mysql-query_digests_keep_comment',6,[],https://github.com/sysown/proxysql/pull/3783,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3783,"This PR adds the new variable 'mysql-query_digests_keep_comment'. Variable description:

Default value: false
Effect: When true comments of the kind /* */ are not stripped from the query digest.","This PR adds the new variable 'mysql-query_digests_keep_comment'. Variable description:

Default value: false
Effect: When true comments of the kind /* */ are not stripped from the query digest.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3783,2022-02-04T16:03:37Z,2022-02-21T18:42:08Z,2022-04-30T16:07:23Z,MERGED,True,184,17,7,https://github.com/JavierJF,Add new variable 'mysql-query_digests_keep_comment',6,[],https://github.com/sysown/proxysql/pull/3783,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3783#issuecomment-1047096526,"This PR adds the new variable 'mysql-query_digests_keep_comment'. Variable description:

Default value: false
Effect: When true comments of the kind /* */ are not stripped from the query digest.",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3784,2022-02-04T22:00:54Z,2022-02-18T09:43:42Z,2022-04-30T16:07:22Z,MERGED,True,174,40,8,https://github.com/mirostauder,Build almalinux,3,[],https://github.com/sysown/proxysql/pull/3784,https://github.com/mirostauder,1,https://github.com/sysown/proxysql/pull/3784,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3790,2022-02-10T16:17:39Z,2022-04-01T09:40:10Z,2022-04-30T16:07:21Z,MERGED,True,518,39,8,https://github.com/JavierJF,Add new metrics exporting several cluster tables,7,[],https://github.com/sysown/proxysql/pull/3790,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3790,"Adds new metrics for:

ÔªøÔªøstats_proxysql_servers_checksums
ÔªøÔªøstats_proxysql_servers_clients_status
ÔªøÔªøstats_proxysql_servers_metrics","Adds new metrics for:

ÔªøÔªøstats_proxysql_servers_checksums
ÔªøÔªøstats_proxysql_servers_clients_status
ÔªøÔªøstats_proxysql_servers_metrics",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3790,2022-02-10T16:17:39Z,2022-04-01T09:40:10Z,2022-04-30T16:07:21Z,MERGED,True,518,39,8,https://github.com/JavierJF,Add new metrics exporting several cluster tables,7,[],https://github.com/sysown/proxysql/pull/3790,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3790#issuecomment-1036002562,"Adds new metrics for:

ÔªøÔªøstats_proxysql_servers_checksums
ÔªøÔªøstats_proxysql_servers_clients_status
ÔªøÔªøstats_proxysql_servers_metrics",Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3790,2022-02-10T16:17:39Z,2022-04-01T09:40:10Z,2022-04-30T16:07:21Z,MERGED,True,518,39,8,https://github.com/JavierJF,Add new metrics exporting several cluster tables,7,[],https://github.com/sysown/proxysql/pull/3790,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3790#issuecomment-1047097688,"Adds new metrics for:

ÔªøÔªøstats_proxysql_servers_checksums
ÔªøÔªøstats_proxysql_servers_clients_status
ÔªøÔªøstats_proxysql_servers_metrics",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3790,2022-02-10T16:17:39Z,2022-04-01T09:40:10Z,2022-04-30T16:07:21Z,MERGED,True,518,39,8,https://github.com/JavierJF,Add new metrics exporting several cluster tables,7,[],https://github.com/sysown/proxysql/pull/3790,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/3790#issuecomment-1047530164,"Adds new metrics for:

ÔªøÔªøstats_proxysql_servers_checksums
ÔªøÔªøstats_proxysql_servers_clients_status
ÔªøÔªøstats_proxysql_servers_metrics",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3790,2022-02-10T16:17:39Z,2022-04-01T09:40:10Z,2022-04-30T16:07:21Z,MERGED,True,518,39,8,https://github.com/JavierJF,Add new metrics exporting several cluster tables,7,[],https://github.com/sysown/proxysql/pull/3790,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/3790#issuecomment-1047579434,"Adds new metrics for:

ÔªøÔªøstats_proxysql_servers_checksums
ÔªøÔªøstats_proxysql_servers_clients_status
ÔªøÔªøstats_proxysql_servers_metrics",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3790,2022-02-10T16:17:39Z,2022-04-01T09:40:10Z,2022-04-30T16:07:21Z,MERGED,True,518,39,8,https://github.com/JavierJF,Add new metrics exporting several cluster tables,7,[],https://github.com/sysown/proxysql/pull/3790,https://github.com/pondix,6,https://github.com/sysown/proxysql/pull/3790#issuecomment-1064536034,"Adds new metrics for:

ÔªøÔªøstats_proxysql_servers_checksums
ÔªøÔªøstats_proxysql_servers_clients_status
ÔªøÔªøstats_proxysql_servers_metrics",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3793,2022-02-14T12:50:42Z,2022-02-21T17:22:04Z,2022-04-30T16:07:14Z,MERGED,True,0,20,5,https://github.com/JavierJF,Remove deprecated variables 'mysql-client_found_rows' and 'mysql-client_multi_statements',5,[],https://github.com/sysown/proxysql/pull/3793,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3793,As the title says.,As the title says.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3793,2022-02-14T12:50:42Z,2022-02-21T17:22:04Z,2022-04-30T16:07:14Z,MERGED,True,0,20,5,https://github.com/JavierJF,Remove deprecated variables 'mysql-client_found_rows' and 'mysql-client_multi_statements',5,[],https://github.com/sysown/proxysql/pull/3793,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3793#issuecomment-1044058579,As the title says.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3793,2022-02-14T12:50:42Z,2022-02-21T17:22:04Z,2022-04-30T16:07:14Z,MERGED,True,0,20,5,https://github.com/JavierJF,Remove deprecated variables 'mysql-client_found_rows' and 'mysql-client_multi_statements',5,[],https://github.com/sysown/proxysql/pull/3793,https://github.com/mirostauder,3,https://github.com/sysown/proxysql/pull/3793#issuecomment-1044338360,As the title says.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3793,2022-02-14T12:50:42Z,2022-02-21T17:22:04Z,2022-04-30T16:07:14Z,MERGED,True,0,20,5,https://github.com/JavierJF,Remove deprecated variables 'mysql-client_found_rows' and 'mysql-client_multi_statements',5,[],https://github.com/sysown/proxysql/pull/3793,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/3793#issuecomment-1044810765,As the title says.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3793,2022-02-14T12:50:42Z,2022-02-21T17:22:04Z,2022-04-30T16:07:14Z,MERGED,True,0,20,5,https://github.com/JavierJF,Remove deprecated variables 'mysql-client_found_rows' and 'mysql-client_multi_statements',5,[],https://github.com/sysown/proxysql/pull/3793,https://github.com/mirostauder,5,https://github.com/sysown/proxysql/pull/3793#issuecomment-1045066526,As the title says.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3793,2022-02-14T12:50:42Z,2022-02-21T17:22:04Z,2022-04-30T16:07:14Z,MERGED,True,0,20,5,https://github.com/JavierJF,Remove deprecated variables 'mysql-client_found_rows' and 'mysql-client_multi_statements',5,[],https://github.com/sysown/proxysql/pull/3793,https://github.com/mirostauder,6,https://github.com/sysown/proxysql/pull/3793#issuecomment-1045166182,As the title says.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3794,2022-02-16T19:34:38Z,2022-02-21T17:21:46Z,2022-04-30T16:07:16Z,MERGED,True,274,0,1,https://github.com/JavierJF,Add new test 'test_debug_filters-t',1,[],https://github.com/sysown/proxysql/pull/3794,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3794,"Add a new test for testing 'debug_filters' functionality.
Documentation has also been updated: https://proxysql.com/documentation/main-runtime/#debug_filters","Add a new test for testing 'debug_filters' functionality.
Documentation has also been updated: https://proxysql.com/documentation/main-runtime/#debug_filters",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3794,2022-02-16T19:34:38Z,2022-02-21T17:21:46Z,2022-04-30T16:07:16Z,MERGED,True,274,0,1,https://github.com/JavierJF,Add new test 'test_debug_filters-t',1,[],https://github.com/sysown/proxysql/pull/3794,https://github.com/mirostauder,2,https://github.com/sysown/proxysql/pull/3794#issuecomment-1045226304,"Add a new test for testing 'debug_filters' functionality.
Documentation has also been updated: https://proxysql.com/documentation/main-runtime/#debug_filters",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3798,2022-02-24T15:05:18Z,2022-04-15T01:58:32Z,2022-04-30T16:07:08Z,MERGED,True,154,4,4,https://github.com/JavierJF,Closes #3797: Monitoring not working properly for AWS aurora auto-discovered servers,4,[],https://github.com/sysown/proxysql/pull/3798,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3798,closes #3797.,closes #3797.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3798,2022-02-24T15:05:18Z,2022-04-15T01:58:32Z,2022-04-30T16:07:08Z,MERGED,True,154,4,4,https://github.com/JavierJF,Closes #3797: Monitoring not working properly for AWS aurora auto-discovered servers,4,[],https://github.com/sysown/proxysql/pull/3798,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3798#issuecomment-1055271094,closes #3797.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3798,2022-02-24T15:05:18Z,2022-04-15T01:58:32Z,2022-04-30T16:07:08Z,MERGED,True,154,4,4,https://github.com/JavierJF,Closes #3797: Monitoring not working properly for AWS aurora auto-discovered servers,4,[],https://github.com/sysown/proxysql/pull/3798,https://github.com/JavierJF,3,https://github.com/sysown/proxysql/pull/3798#issuecomment-1055579135,closes #3797.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3798,2022-02-24T15:05:18Z,2022-04-15T01:58:32Z,2022-04-30T16:07:08Z,MERGED,True,154,4,4,https://github.com/JavierJF,Closes #3797: Monitoring not working properly for AWS aurora auto-discovered servers,4,[],https://github.com/sysown/proxysql/pull/3798,https://github.com/mirostauder,4,https://github.com/sysown/proxysql/pull/3798#issuecomment-1055714022,closes #3797.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3798,2022-02-24T15:05:18Z,2022-04-15T01:58:32Z,2022-04-30T16:07:08Z,MERGED,True,154,4,4,https://github.com/JavierJF,Closes #3797: Monitoring not working properly for AWS aurora auto-discovered servers,4,[],https://github.com/sysown/proxysql/pull/3798,https://github.com/pondix,5,https://github.com/sysown/proxysql/pull/3798#issuecomment-1064536002,closes #3797.,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3798,2022-02-24T15:05:18Z,2022-04-15T01:58:32Z,2022-04-30T16:07:08Z,MERGED,True,154,4,4,https://github.com/JavierJF,Closes #3797: Monitoring not working properly for AWS aurora auto-discovered servers,4,[],https://github.com/sysown/proxysql/pull/3798,https://github.com/renecannao,6,https://github.com/sysown/proxysql/pull/3798#issuecomment-1099727241,closes #3797.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3801,2022-02-25T23:58:34Z,,2022-03-17T18:03:21Z,OPEN,False,212,237,17,https://github.com/jaredev,V2.x gcc warnings,6,[],https://github.com/sysown/proxysql/pull/3801,https://github.com/jaredev,1,https://github.com/sysown/proxysql/pull/3801,"Resolved all compilation warnings for ProxySQL with GCC 9.3 on Ubuntu 20.04 LTS. (Over 90 warnings last counted!)
To summarize:

OpenSSL 3.0 Compliance (replaced deprecated function calls for SHA1 and RSA)
Removed unused variables and labels
Resolved signed/unsigned comparisons
Resolved null conversions
Header inclusion order and makefile include path changed to resolve redefined macros for microhttpd
Fixed delete-incomplete warning, where ProxySQL_Node_Address would not have its destructor ever called and would leak!
Catch polymorphic exceptions by const reference
Removal of unused includes
Some  optimization and code quality improvements to proxysql_tls.cpp

These changed resolved all compilation warnings for ProxySQL on my system. It should significantly if not completely resolve compilation warnings on similar systems. This is helpful so that warnings which may indicate serious issues are not hidden in a wall of minor warnings and so would be more obvious.
The updates to the OpenSSL functions also makes this more build more future proof, as the lower level functions are subject to change in later versions of OpenSSL. The usage of these newer higher level functions also makes it easier to refactor if the algorithm needs to be changed in the future or new algorithms added.","Resolved all compilation warnings for ProxySQL with GCC 9.3 on Ubuntu 20.04 LTS. (Over 90 warnings last counted!)
To summarize:

OpenSSL 3.0 Compliance (replaced deprecated function calls for SHA1 and RSA)
Removed unused variables and labels
Resolved signed/unsigned comparisons
Resolved null conversions
Header inclusion order and makefile include path changed to resolve redefined macros for microhttpd
Fixed delete-incomplete warning, where ProxySQL_Node_Address would not have its destructor ever called and would leak!
Catch polymorphic exceptions by const reference
Removal of unused includes
Some  optimization and code quality improvements to proxysql_tls.cpp

These changed resolved all compilation warnings for ProxySQL on my system. It should significantly if not completely resolve compilation warnings on similar systems. This is helpful so that warnings which may indicate serious issues are not hidden in a wall of minor warnings and so would be more obvious.
The updates to the OpenSSL functions also makes this more build more future proof, as the lower level functions are subject to change in later versions of OpenSSL. The usage of these newer higher level functions also makes it easier to refactor if the algorithm needs to be changed in the future or new algorithms added.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3801,2022-02-25T23:58:34Z,,2022-03-17T18:03:21Z,OPEN,False,212,237,17,https://github.com/jaredev,V2.x gcc warnings,6,[],https://github.com/sysown/proxysql/pull/3801,https://github.com/jaredev,2,https://github.com/sysown/proxysql/pull/3801#issuecomment-1053713307,"Resolved all compilation warnings for ProxySQL with GCC 9.3 on Ubuntu 20.04 LTS. (Over 90 warnings last counted!)
To summarize:

OpenSSL 3.0 Compliance (replaced deprecated function calls for SHA1 and RSA)
Removed unused variables and labels
Resolved signed/unsigned comparisons
Resolved null conversions
Header inclusion order and makefile include path changed to resolve redefined macros for microhttpd
Fixed delete-incomplete warning, where ProxySQL_Node_Address would not have its destructor ever called and would leak!
Catch polymorphic exceptions by const reference
Removal of unused includes
Some  optimization and code quality improvements to proxysql_tls.cpp

These changed resolved all compilation warnings for ProxySQL on my system. It should significantly if not completely resolve compilation warnings on similar systems. This is helpful so that warnings which may indicate serious issues are not hidden in a wall of minor warnings and so would be more obvious.
The updates to the OpenSSL functions also makes this more build more future proof, as the lower level functions are subject to change in later versions of OpenSSL. The usage of these newer higher level functions also makes it easier to refactor if the algorithm needs to be changed in the future or new algorithms added.","Automated build  #1665 failed after 1h 8m. Investigating. Compiles on Ubuntu 20.04, GCC 9.3. If it's failing somewhere in automated tests, I need to know which ones. Some issues running the test suite locally.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3801,2022-02-25T23:58:34Z,,2022-03-17T18:03:21Z,OPEN,False,212,237,17,https://github.com/jaredev,V2.x gcc warnings,6,[],https://github.com/sysown/proxysql/pull/3801,https://github.com/jaredev,3,https://github.com/sysown/proxysql/pull/3801#issuecomment-1054594375,"Resolved all compilation warnings for ProxySQL with GCC 9.3 on Ubuntu 20.04 LTS. (Over 90 warnings last counted!)
To summarize:

OpenSSL 3.0 Compliance (replaced deprecated function calls for SHA1 and RSA)
Removed unused variables and labels
Resolved signed/unsigned comparisons
Resolved null conversions
Header inclusion order and makefile include path changed to resolve redefined macros for microhttpd
Fixed delete-incomplete warning, where ProxySQL_Node_Address would not have its destructor ever called and would leak!
Catch polymorphic exceptions by const reference
Removal of unused includes
Some  optimization and code quality improvements to proxysql_tls.cpp

These changed resolved all compilation warnings for ProxySQL on my system. It should significantly if not completely resolve compilation warnings on similar systems. This is helpful so that warnings which may indicate serious issues are not hidden in a wall of minor warnings and so would be more obvious.
The updates to the OpenSSL functions also makes this more build more future proof, as the lower level functions are subject to change in later versions of OpenSSL. The usage of these newer higher level functions also makes it easier to refactor if the algorithm needs to be changed in the future or new algorithms added.","Some note here on the OpenSSL 3.0 compliance. There were GCC compiler warnings in 2.x about deprecated functions. Here's an example from the official documentation for RSA_new In the History section, it reads, ""All functions described here were deprecated in OpenSSL 3.0. For replacement see EVP_PKEY-RSA(7)."" The documentation for EVP_PKEY-RSA is what the implementation was based on, look in the Examples section for reference.
It is a similar situation with SHA1. Where the usage of the specific algorithm functions has been deprecated, in favor of using the higher level functions.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3801,2022-02-25T23:58:34Z,,2022-03-17T18:03:21Z,OPEN,False,212,237,17,https://github.com/jaredev,V2.x gcc warnings,6,[],https://github.com/sysown/proxysql/pull/3801,https://github.com/jaredev,4,https://github.com/sysown/proxysql/pull/3801#issuecomment-1054754594,"Resolved all compilation warnings for ProxySQL with GCC 9.3 on Ubuntu 20.04 LTS. (Over 90 warnings last counted!)
To summarize:

OpenSSL 3.0 Compliance (replaced deprecated function calls for SHA1 and RSA)
Removed unused variables and labels
Resolved signed/unsigned comparisons
Resolved null conversions
Header inclusion order and makefile include path changed to resolve redefined macros for microhttpd
Fixed delete-incomplete warning, where ProxySQL_Node_Address would not have its destructor ever called and would leak!
Catch polymorphic exceptions by const reference
Removal of unused includes
Some  optimization and code quality improvements to proxysql_tls.cpp

These changed resolved all compilation warnings for ProxySQL on my system. It should significantly if not completely resolve compilation warnings on similar systems. This is helpful so that warnings which may indicate serious issues are not hidden in a wall of minor warnings and so would be more obvious.
The updates to the OpenSSL functions also makes this more build more future proof, as the lower level functions are subject to change in later versions of OpenSSL. The usage of these newer higher level functions also makes it easier to refactor if the algorithm needs to be changed in the future or new algorithms added.",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3801,2022-02-25T23:58:34Z,,2022-03-17T18:03:21Z,OPEN,False,212,237,17,https://github.com/jaredev,V2.x gcc warnings,6,[],https://github.com/sysown/proxysql/pull/3801,https://github.com/mirostauder,5,https://github.com/sysown/proxysql/pull/3801#issuecomment-1069551667,"Resolved all compilation warnings for ProxySQL with GCC 9.3 on Ubuntu 20.04 LTS. (Over 90 warnings last counted!)
To summarize:

OpenSSL 3.0 Compliance (replaced deprecated function calls for SHA1 and RSA)
Removed unused variables and labels
Resolved signed/unsigned comparisons
Resolved null conversions
Header inclusion order and makefile include path changed to resolve redefined macros for microhttpd
Fixed delete-incomplete warning, where ProxySQL_Node_Address would not have its destructor ever called and would leak!
Catch polymorphic exceptions by const reference
Removal of unused includes
Some  optimization and code quality improvements to proxysql_tls.cpp

These changed resolved all compilation warnings for ProxySQL on my system. It should significantly if not completely resolve compilation warnings on similar systems. This is helpful so that warnings which may indicate serious issues are not hidden in a wall of minor warnings and so would be more obvious.
The updates to the OpenSSL functions also makes this more build more future proof, as the lower level functions are subject to change in later versions of OpenSSL. The usage of these newer higher level functions also makes it easier to refactor if the algorithm needs to be changed in the future or new algorithms added.",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3801,2022-02-25T23:58:34Z,,2022-03-17T18:03:21Z,OPEN,False,212,237,17,https://github.com/jaredev,V2.x gcc warnings,6,[],https://github.com/sysown/proxysql/pull/3801,https://github.com/JavierJF,6,https://github.com/sysown/proxysql/pull/3801#issuecomment-1069706762,"Resolved all compilation warnings for ProxySQL with GCC 9.3 on Ubuntu 20.04 LTS. (Over 90 warnings last counted!)
To summarize:

OpenSSL 3.0 Compliance (replaced deprecated function calls for SHA1 and RSA)
Removed unused variables and labels
Resolved signed/unsigned comparisons
Resolved null conversions
Header inclusion order and makefile include path changed to resolve redefined macros for microhttpd
Fixed delete-incomplete warning, where ProxySQL_Node_Address would not have its destructor ever called and would leak!
Catch polymorphic exceptions by const reference
Removal of unused includes
Some  optimization and code quality improvements to proxysql_tls.cpp

These changed resolved all compilation warnings for ProxySQL on my system. It should significantly if not completely resolve compilation warnings on similar systems. This is helpful so that warnings which may indicate serious issues are not hidden in a wall of minor warnings and so would be more obvious.
The updates to the OpenSSL functions also makes this more build more future proof, as the lower level functions are subject to change in later versions of OpenSSL. The usage of these newer higher level functions also makes it easier to refactor if the algorithm needs to be changed in the future or new algorithms added.",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3801,2022-02-25T23:58:34Z,,2022-03-17T18:03:21Z,OPEN,False,212,237,17,https://github.com/jaredev,V2.x gcc warnings,6,[],https://github.com/sysown/proxysql/pull/3801,https://github.com/JavierJF,7,https://github.com/sysown/proxysql/pull/3801#issuecomment-1071163416,"Resolved all compilation warnings for ProxySQL with GCC 9.3 on Ubuntu 20.04 LTS. (Over 90 warnings last counted!)
To summarize:

OpenSSL 3.0 Compliance (replaced deprecated function calls for SHA1 and RSA)
Removed unused variables and labels
Resolved signed/unsigned comparisons
Resolved null conversions
Header inclusion order and makefile include path changed to resolve redefined macros for microhttpd
Fixed delete-incomplete warning, where ProxySQL_Node_Address would not have its destructor ever called and would leak!
Catch polymorphic exceptions by const reference
Removal of unused includes
Some  optimization and code quality improvements to proxysql_tls.cpp

These changed resolved all compilation warnings for ProxySQL on my system. It should significantly if not completely resolve compilation warnings on similar systems. This is helpful so that warnings which may indicate serious issues are not hidden in a wall of minor warnings and so would be more obvious.
The updates to the OpenSSL functions also makes this more build more future proof, as the lower level functions are subject to change in later versions of OpenSSL. The usage of these newer higher level functions also makes it easier to refactor if the algorithm needs to be changed in the future or new algorithms added.",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3802,2022-03-01T12:09:52Z,,2022-03-10T21:49:14Z,OPEN,False,0,0,0,https://github.com/JavierJF,DONOTMERGE: Dummy PR for checking CI modifications,1,[],https://github.com/sysown/proxysql/pull/3802,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3802,DONOTMERGE simple PR for testing CI.,DONOTMERGE simple PR for testing CI.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3802,2022-03-01T12:09:52Z,,2022-03-10T21:49:14Z,OPEN,False,0,0,0,https://github.com/JavierJF,DONOTMERGE: Dummy PR for checking CI modifications,1,[],https://github.com/sysown/proxysql/pull/3802,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3802#issuecomment-1055444138,DONOTMERGE simple PR for testing CI.,retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3802,2022-03-01T12:09:52Z,,2022-03-10T21:49:14Z,OPEN,False,0,0,0,https://github.com/JavierJF,DONOTMERGE: Dummy PR for checking CI modifications,1,[],https://github.com/sysown/proxysql/pull/3802,https://github.com/pondix,3,https://github.com/sysown/proxysql/pull/3802#issuecomment-1064535945,DONOTMERGE simple PR for testing CI.,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3804,2022-03-02T02:34:37Z,,2022-03-10T21:49:12Z,OPEN,False,299,16,2,https://github.com/jaredev,Resolves #3768 Ping error exceeding max connections wont shun,3,[],https://github.com/sysown/proxysql/pull/3804,https://github.com/jaredev,1,https://github.com/sysown/proxysql/pull/3804,"Resolves 3768


If the monitor encounters an error about the monitor user exceeding the max_user_connections, it doesn't shun the server. The errors from ping/connect are still logged.


Added a vector, acceptable_ping_errors which is used to create the where clauses to select servers to shun. This makes it easy to add other ping errors in the future for cases when the server should not be shunned.


While there, the for loops were changed to ranged based for loops","Resolves 3768


If the monitor encounters an error about the monitor user exceeding the max_user_connections, it doesn't shun the server. The errors from ping/connect are still logged.


Added a vector, acceptable_ping_errors which is used to create the where clauses to select servers to shun. This makes it easy to add other ping errors in the future for cases when the server should not be shunned.


While there, the for loops were changed to ranged based for loops",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3804,2022-03-02T02:34:37Z,,2022-03-10T21:49:12Z,OPEN,False,299,16,2,https://github.com/jaredev,Resolves #3768 Ping error exceeding max connections wont shun,3,[],https://github.com/sysown/proxysql/pull/3804,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3804#issuecomment-1057947317,"Resolves 3768


If the monitor encounters an error about the monitor user exceeding the max_user_connections, it doesn't shun the server. The errors from ping/connect are still logged.


Added a vector, acceptable_ping_errors which is used to create the where clauses to select servers to shun. This makes it easy to add other ping errors in the future for cases when the server should not be shunned.


While there, the for loops were changed to ranged based for loops",we will need a TAP test for this PR,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3804,2022-03-02T02:34:37Z,,2022-03-10T21:49:12Z,OPEN,False,299,16,2,https://github.com/jaredev,Resolves #3768 Ping error exceeding max connections wont shun,3,[],https://github.com/sysown/proxysql/pull/3804,https://github.com/jaredev,3,https://github.com/sysown/proxysql/pull/3804#issuecomment-1058831042,"Resolves 3768


If the monitor encounters an error about the monitor user exceeding the max_user_connections, it doesn't shun the server. The errors from ping/connect are still logged.


Added a vector, acceptable_ping_errors which is used to create the where clauses to select servers to shun. This makes it easy to add other ping errors in the future for cases when the server should not be shunned.


While there, the for loops were changed to ranged based for loops",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3804,2022-03-02T02:34:37Z,,2022-03-10T21:49:12Z,OPEN,False,299,16,2,https://github.com/jaredev,Resolves #3768 Ping error exceeding max connections wont shun,3,[],https://github.com/sysown/proxysql/pull/3804,https://github.com/jaredev,4,https://github.com/sysown/proxysql/pull/3804#issuecomment-1058833198,"Resolves 3768


If the monitor encounters an error about the monitor user exceeding the max_user_connections, it doesn't shun the server. The errors from ping/connect are still logged.


Added a vector, acceptable_ping_errors which is used to create the where clauses to select servers to shun. This makes it easy to add other ping errors in the future for cases when the server should not be shunned.


While there, the for loops were changed to ranged based for loops",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3804,2022-03-02T02:34:37Z,,2022-03-10T21:49:12Z,OPEN,False,299,16,2,https://github.com/jaredev,Resolves #3768 Ping error exceeding max connections wont shun,3,[],https://github.com/sysown/proxysql/pull/3804,https://github.com/jaredev,5,https://github.com/sysown/proxysql/pull/3804#issuecomment-1059302590,"Resolves 3768


If the monitor encounters an error about the monitor user exceeding the max_user_connections, it doesn't shun the server. The errors from ping/connect are still logged.


Added a vector, acceptable_ping_errors which is used to create the where clauses to select servers to shun. This makes it easy to add other ping errors in the future for cases when the server should not be shunned.


While there, the for loops were changed to ranged based for loops",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3804,2022-03-02T02:34:37Z,,2022-03-10T21:49:12Z,OPEN,False,299,16,2,https://github.com/jaredev,Resolves #3768 Ping error exceeding max connections wont shun,3,[],https://github.com/sysown/proxysql/pull/3804,https://github.com/pondix,6,https://github.com/sysown/proxysql/pull/3804#issuecomment-1064535908,"Resolves 3768


If the monitor encounters an error about the monitor user exceeding the max_user_connections, it doesn't shun the server. The errors from ping/connect are still logged.


Added a vector, acceptable_ping_errors which is used to create the where clauses to select servers to shun. This makes it easy to add other ping errors in the future for cases when the server should not be shunned.


While there, the for loops were changed to ranged based for loops",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3806,2022-03-02T12:14:12Z,2022-03-15T10:29:23Z,2022-04-30T16:07:04Z,MERGED,True,8,1,1,https://github.com/JavierJF,Add extra logging when no servers are available in hostgroup,1,[],https://github.com/sysown/proxysql/pull/3806,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3806,"Currently when a hostgroup has no servers available due, for example, all being SHUNNED and ProxySQL tries to get a connection for that hostgroup the following message is logged:

""[ERROR] Hostgroup X has no servers available! Checking servers shunned for more than N seconds""

Yet if the hostgroup contains no servers at all, for example all servers being OFFLINE_HARD. No message was logged, now the following message will be logged.

""[ERROR] Hostgroup X has no servers available!""","Currently when a hostgroup has no servers available due, for example, all being SHUNNED and ProxySQL tries to get a connection for that hostgroup the following message is logged:

""[ERROR] Hostgroup X has no servers available! Checking servers shunned for more than N seconds""

Yet if the hostgroup contains no servers at all, for example all servers being OFFLINE_HARD. No message was logged, now the following message will be logged.

""[ERROR] Hostgroup X has no servers available!""",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3806,2022-03-02T12:14:12Z,2022-03-15T10:29:23Z,2022-04-30T16:07:04Z,MERGED,True,8,1,1,https://github.com/JavierJF,Add extra logging when no servers are available in hostgroup,1,[],https://github.com/sysown/proxysql/pull/3806,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/3806#issuecomment-1064535871,"Currently when a hostgroup has no servers available due, for example, all being SHUNNED and ProxySQL tries to get a connection for that hostgroup the following message is logged:

""[ERROR] Hostgroup X has no servers available! Checking servers shunned for more than N seconds""

Yet if the hostgroup contains no servers at all, for example all servers being OFFLINE_HARD. No message was logged, now the following message will be logged.

""[ERROR] Hostgroup X has no servers available!""",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3807,2022-03-02T20:14:22Z,,2022-03-10T21:49:08Z,OPEN,False,5,0,2,https://github.com/jaredev,Resolves #3583 - Session fast forward enabled when COM_BINLOG_DUMP_GTID is received,2,[],https://github.com/sysown/proxysql/pull/3807,https://github.com/jaredev,1,https://github.com/sysown/proxysql/pull/3807,"Resolves Issue 3583
Enables session fast forwarding if the COM_BINLOG_DUMP_GTID command is received.","Resolves Issue 3583
Enables session fast forwarding if the COM_BINLOG_DUMP_GTID command is received.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3807,2022-03-02T20:14:22Z,,2022-03-10T21:49:08Z,OPEN,False,5,0,2,https://github.com/jaredev,Resolves #3583 - Session fast forward enabled when COM_BINLOG_DUMP_GTID is received,2,[],https://github.com/sysown/proxysql/pull/3807,https://github.com/jaredev,2,https://github.com/sysown/proxysql/pull/3807#issuecomment-1057337551,"Resolves Issue 3583
Enables session fast forwarding if the COM_BINLOG_DUMP_GTID command is received.",Here are the basic changes for this. TBD if any cleanup or other changes are needed when changing the state of the session in this way. Feedback appreciated.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3807,2022-03-02T20:14:22Z,,2022-03-10T21:49:08Z,OPEN,False,5,0,2,https://github.com/jaredev,Resolves #3583 - Session fast forward enabled when COM_BINLOG_DUMP_GTID is received,2,[],https://github.com/sysown/proxysql/pull/3807,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3807#issuecomment-1057945467,"Resolves Issue 3583
Enables session fast forwarding if the COM_BINLOG_DUMP_GTID command is received.","This needs a way for testing it consistently.
Probably it is enough to create a test that starts mysqlbinlog with --read-from-remote-server, using the replication user and connecting to proxysql where the same user is not configured with fast_forward",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3807,2022-03-02T20:14:22Z,,2022-03-10T21:49:08Z,OPEN,False,5,0,2,https://github.com/jaredev,Resolves #3583 - Session fast forward enabled when COM_BINLOG_DUMP_GTID is received,2,[],https://github.com/sysown/proxysql/pull/3807,https://github.com/pondix,4,https://github.com/sysown/proxysql/pull/3807#issuecomment-1064535843,"Resolves Issue 3583
Enables session fast forwarding if the COM_BINLOG_DUMP_GTID command is received.",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3808,2022-03-02T20:21:04Z,,2022-03-10T21:49:06Z,OPEN,False,8,4,1,https://github.com/jaredev,Resolves #3371 Error handling if statement global id not found,2,[],https://github.com/sysown/proxysql/pull/3808,https://github.com/jaredev,1,https://github.com/sysown/proxysql/pull/3808,"Resolves Issue 3371


Added error log output instead of assert failure if the global id for the statement is not found


Returns an error packet to the client if this occurs","Resolves Issue 3371


Added error log output instead of assert failure if the global id for the statement is not found


Returns an error packet to the client if this occurs",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3808,2022-03-02T20:21:04Z,,2022-03-10T21:49:06Z,OPEN,False,8,4,1,https://github.com/jaredev,Resolves #3371 Error handling if statement global id not found,2,[],https://github.com/sysown/proxysql/pull/3808,https://github.com/jaredev,2,https://github.com/sysown/proxysql/pull/3808#issuecomment-1057342667,"Resolves Issue 3371


Added error log output instead of assert failure if the global id for the statement is not found


Returns an error packet to the client if this occurs",@renecannao mentioned disconnecting the user when this occurs. That's not ready yet so setting as draft.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3808,2022-03-02T20:21:04Z,,2022-03-10T21:49:06Z,OPEN,False,8,4,1,https://github.com/jaredev,Resolves #3371 Error handling if statement global id not found,2,[],https://github.com/sysown/proxysql/pull/3808,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3808#issuecomment-1057945846,"Resolves Issue 3371


Added error log output instead of assert failure if the global id for the statement is not found


Returns an error packet to the client if this occurs",@jaredev : please remember we will need a TAP test for this PR,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3808,2022-03-02T20:21:04Z,,2022-03-10T21:49:06Z,OPEN,False,8,4,1,https://github.com/jaredev,Resolves #3371 Error handling if statement global id not found,2,[],https://github.com/sysown/proxysql/pull/3808,https://github.com/pondix,4,https://github.com/sysown/proxysql/pull/3808#issuecomment-1064535810,"Resolves Issue 3371


Added error log output instead of assert failure if the global id for the statement is not found


Returns an error packet to the client if this occurs",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3811,2022-03-08T10:49:32Z,2022-03-10T10:49:32Z,2022-04-30T16:07:10Z,MERGED,True,127,420,7,https://github.com/mirostauder,Cleanup amd64 arm64,5,[],https://github.com/sysown/proxysql/pull/3811,https://github.com/mirostauder,1,https://github.com/sysown/proxysql/pull/3811,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3811,2022-03-08T10:49:32Z,2022-03-10T10:49:32Z,2022-04-30T16:07:10Z,MERGED,True,127,420,7,https://github.com/mirostauder,Cleanup amd64 arm64,5,[],https://github.com/sysown/proxysql/pull/3811,https://github.com/mirostauder,2,https://github.com/sysown/proxysql/pull/3811#issuecomment-1065517535,,please retest this,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3815,2022-03-10T20:48:35Z,2022-04-29T20:53:36Z,2022-04-30T16:06:15Z,MERGED,True,197,14,17,https://github.com/mirostauder,CodeQL detected issue fixes,9,[],https://github.com/sysown/proxysql/pull/3815,https://github.com/mirostauder,1,https://github.com/sysown/proxysql/pull/3815,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3815,2022-03-10T20:48:35Z,2022-04-29T20:53:36Z,2022-04-30T16:06:15Z,MERGED,True,197,14,17,https://github.com/mirostauder,CodeQL detected issue fixes,9,[],https://github.com/sysown/proxysql/pull/3815,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/3815#issuecomment-1064535774,,Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3815,2022-03-10T20:48:35Z,2022-04-29T20:53:36Z,2022-04-30T16:06:15Z,MERGED,True,197,14,17,https://github.com/mirostauder,CodeQL detected issue fixes,9,[],https://github.com/sysown/proxysql/pull/3815,https://github.com/mirostauder,3,https://github.com/sysown/proxysql/pull/3815#issuecomment-1065847294,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3815,2022-03-10T20:48:35Z,2022-04-29T20:53:36Z,2022-04-30T16:06:15Z,MERGED,True,197,14,17,https://github.com/mirostauder,CodeQL detected issue fixes,9,[],https://github.com/sysown/proxysql/pull/3815,https://github.com/mirostauder,4,https://github.com/sysown/proxysql/pull/3815#issuecomment-1112314663,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3815,2022-03-10T20:48:35Z,2022-04-29T20:53:36Z,2022-04-30T16:06:15Z,MERGED,True,197,14,17,https://github.com/mirostauder,CodeQL detected issue fixes,9,[],https://github.com/sysown/proxysql/pull/3815,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/3815#issuecomment-1112696877,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3815,2022-03-10T20:48:35Z,2022-04-29T20:53:36Z,2022-04-30T16:06:15Z,MERGED,True,197,14,17,https://github.com/mirostauder,CodeQL detected issue fixes,9,[],https://github.com/sysown/proxysql/pull/3815,https://github.com/mirostauder,6,https://github.com/sysown/proxysql/pull/3815#issuecomment-1113462721,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3817,2022-03-14T16:58:52Z,2022-04-14T23:49:51Z,2022-04-30T16:08:22Z,MERGED,True,346,5,2,https://github.com/JavierJF,Add 'proxysql_mysqlbinlog' test and fixes,5,[],https://github.com/sysown/proxysql/pull/3817,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3817,As the title says.,As the title says.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3817,2022-03-14T16:58:52Z,2022-04-14T23:49:51Z,2022-04-30T16:08:22Z,MERGED,True,346,5,2,https://github.com/JavierJF,Add 'proxysql_mysqlbinlog' test and fixes,5,[],https://github.com/sysown/proxysql/pull/3817,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3817#issuecomment-1067083985,As the title says.,Retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3817,2022-03-14T16:58:52Z,2022-04-14T23:49:51Z,2022-04-30T16:08:22Z,MERGED,True,346,5,2,https://github.com/JavierJF,Add 'proxysql_mysqlbinlog' test and fixes,5,[],https://github.com/sysown/proxysql/pull/3817,https://github.com/JavierJF,3,https://github.com/sysown/proxysql/pull/3817#issuecomment-1067199011,As the title says.,Retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3817,2022-03-14T16:58:52Z,2022-04-14T23:49:51Z,2022-04-30T16:08:22Z,MERGED,True,346,5,2,https://github.com/JavierJF,Add 'proxysql_mysqlbinlog' test and fixes,5,[],https://github.com/sysown/proxysql/pull/3817,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/3817#issuecomment-1067840213,As the title says.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3817,2022-03-14T16:58:52Z,2022-04-14T23:49:51Z,2022-04-30T16:08:22Z,MERGED,True,346,5,2,https://github.com/JavierJF,Add 'proxysql_mysqlbinlog' test and fixes,5,[],https://github.com/sysown/proxysql/pull/3817,https://github.com/mirostauder,5,https://github.com/sysown/proxysql/pull/3817#issuecomment-1067860979,As the title says.,Retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3817,2022-03-14T16:58:52Z,2022-04-14T23:49:51Z,2022-04-30T16:08:22Z,MERGED,True,346,5,2,https://github.com/JavierJF,Add 'proxysql_mysqlbinlog' test and fixes,5,[],https://github.com/sysown/proxysql/pull/3817,https://github.com/mirostauder,6,https://github.com/sysown/proxysql/pull/3817#issuecomment-1067899712,As the title says.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3817,2022-03-14T16:58:52Z,2022-04-14T23:49:51Z,2022-04-30T16:08:22Z,MERGED,True,346,5,2,https://github.com/JavierJF,Add 'proxysql_mysqlbinlog' test and fixes,5,[],https://github.com/sysown/proxysql/pull/3817,https://github.com/renecannao,7,https://github.com/sysown/proxysql/pull/3817#issuecomment-1085685636,As the title says.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3820,2022-03-16T16:28:43Z,2022-04-14T23:48:56Z,2022-04-30T16:07:53Z,MERGED,True,9,1,1,https://github.com/JavierJF,Add regex support for 'spiffe_id' user attribute,2,[],https://github.com/sysown/proxysql/pull/3820,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3820,"Feature description
This PR adds the possibility to specify regexes as the 'spiffe_id' user attribute. This attribute is used to match against the subject_alt_name supplied by the client certificate. For more information see: https://proxysql.com/documentation/SSL-Support/
Usage
To enable a regex matching for SPIFFE, it's enough to supply a user attribute 'spiffe_id' starting with the symbol !. Eg:
INSERT INTO mysql_users (username,password,active,use_ssl,attributes) values ('test_mysql_services', '', 1, 1, '{""spiffe_id"": ""!spiffe:\/\/example\\.org\/workload-proxysql\/.*""}');

The rest of the expression after the ! mark will be handled as a regular expression. Once this user is enabled, connections that supply certificates that can be verified against proxysql-ca.pem and that supply a X509v3 Subject Alternative that matches the regex will be accepted.","Feature description
This PR adds the possibility to specify regexes as the 'spiffe_id' user attribute. This attribute is used to match against the subject_alt_name supplied by the client certificate. For more information see: https://proxysql.com/documentation/SSL-Support/
Usage
To enable a regex matching for SPIFFE, it's enough to supply a user attribute 'spiffe_id' starting with the symbol !. Eg:
INSERT INTO mysql_users (username,password,active,use_ssl,attributes) values ('test_mysql_services', '', 1, 1, '{""spiffe_id"": ""!spiffe:\/\/example\\.org\/workload-proxysql\/.*""}');

The rest of the expression after the ! mark will be handled as a regular expression. Once this user is enabled, connections that supply certificates that can be verified against proxysql-ca.pem and that supply a X509v3 Subject Alternative that matches the regex will be accepted.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3820,2022-03-16T16:28:43Z,2022-04-14T23:48:56Z,2022-04-30T16:07:53Z,MERGED,True,9,1,1,https://github.com/JavierJF,Add regex support for 'spiffe_id' user attribute,2,[],https://github.com/sysown/proxysql/pull/3820,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3820#issuecomment-1070844321,"Feature description
This PR adds the possibility to specify regexes as the 'spiffe_id' user attribute. This attribute is used to match against the subject_alt_name supplied by the client certificate. For more information see: https://proxysql.com/documentation/SSL-Support/
Usage
To enable a regex matching for SPIFFE, it's enough to supply a user attribute 'spiffe_id' starting with the symbol !. Eg:
INSERT INTO mysql_users (username,password,active,use_ssl,attributes) values ('test_mysql_services', '', 1, 1, '{""spiffe_id"": ""!spiffe:\/\/example\\.org\/workload-proxysql\/.*""}');

The rest of the expression after the ! mark will be handled as a regular expression. Once this user is enabled, connections that supply certificates that can be verified against proxysql-ca.pem and that supply a X509v3 Subject Alternative that matches the regex will be accepted.",Retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3820,2022-03-16T16:28:43Z,2022-04-14T23:48:56Z,2022-04-30T16:07:53Z,MERGED,True,9,1,1,https://github.com/JavierJF,Add regex support for 'spiffe_id' user attribute,2,[],https://github.com/sysown/proxysql/pull/3820,https://github.com/JavierJF,3,https://github.com/sysown/proxysql/pull/3820#issuecomment-1070966769,"Feature description
This PR adds the possibility to specify regexes as the 'spiffe_id' user attribute. This attribute is used to match against the subject_alt_name supplied by the client certificate. For more information see: https://proxysql.com/documentation/SSL-Support/
Usage
To enable a regex matching for SPIFFE, it's enough to supply a user attribute 'spiffe_id' starting with the symbol !. Eg:
INSERT INTO mysql_users (username,password,active,use_ssl,attributes) values ('test_mysql_services', '', 1, 1, '{""spiffe_id"": ""!spiffe:\/\/example\\.org\/workload-proxysql\/.*""}');

The rest of the expression after the ! mark will be handled as a regular expression. Once this user is enabled, connections that supply certificates that can be verified against proxysql-ca.pem and that supply a X509v3 Subject Alternative that matches the regex will be accepted.",Retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3820,2022-03-16T16:28:43Z,2022-04-14T23:48:56Z,2022-04-30T16:07:53Z,MERGED,True,9,1,1,https://github.com/JavierJF,Add regex support for 'spiffe_id' user attribute,2,[],https://github.com/sysown/proxysql/pull/3820,https://github.com/JavierJF,4,https://github.com/sysown/proxysql/pull/3820#issuecomment-1071075974,"Feature description
This PR adds the possibility to specify regexes as the 'spiffe_id' user attribute. This attribute is used to match against the subject_alt_name supplied by the client certificate. For more information see: https://proxysql.com/documentation/SSL-Support/
Usage
To enable a regex matching for SPIFFE, it's enough to supply a user attribute 'spiffe_id' starting with the symbol !. Eg:
INSERT INTO mysql_users (username,password,active,use_ssl,attributes) values ('test_mysql_services', '', 1, 1, '{""spiffe_id"": ""!spiffe:\/\/example\\.org\/workload-proxysql\/.*""}');

The rest of the expression after the ! mark will be handled as a regular expression. Once this user is enabled, connections that supply certificates that can be verified against proxysql-ca.pem and that supply a X509v3 Subject Alternative that matches the regex will be accepted.",Retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3820,2022-03-16T16:28:43Z,2022-04-14T23:48:56Z,2022-04-30T16:07:53Z,MERGED,True,9,1,1,https://github.com/JavierJF,Add regex support for 'spiffe_id' user attribute,2,[],https://github.com/sysown/proxysql/pull/3820,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/3820#issuecomment-1085685550,"Feature description
This PR adds the possibility to specify regexes as the 'spiffe_id' user attribute. This attribute is used to match against the subject_alt_name supplied by the client certificate. For more information see: https://proxysql.com/documentation/SSL-Support/
Usage
To enable a regex matching for SPIFFE, it's enough to supply a user attribute 'spiffe_id' starting with the symbol !. Eg:
INSERT INTO mysql_users (username,password,active,use_ssl,attributes) values ('test_mysql_services', '', 1, 1, '{""spiffe_id"": ""!spiffe:\/\/example\\.org\/workload-proxysql\/.*""}');

The rest of the expression after the ! mark will be handled as a regular expression. Once this user is enabled, connections that supply certificates that can be verified against proxysql-ca.pem and that supply a X509v3 Subject Alternative that matches the regex will be accepted.",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3821,2022-03-18T07:42:04Z,2022-04-01T09:38:37Z,2022-04-30T16:07:55Z,MERGED,True,65,15,1,https://github.com/JavierJF,Fix 'text_admin_stats-t' timing issue,1,[],https://github.com/sysown/proxysql/pull/3821,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3821,As the title says.,As the title says.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3824,2022-03-22T16:30:17Z,2022-04-27T13:37:09Z,2022-04-30T16:07:58Z,MERGED,True,681,18,11,https://github.com/JavierJF,Add stats capabilities for log messages,6,[],https://github.com/sysown/proxysql/pull/3824,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3824,As the title says.,As the title says.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3824,2022-03-22T16:30:17Z,2022-04-27T13:37:09Z,2022-04-30T16:07:58Z,MERGED,True,681,18,11,https://github.com/JavierJF,Add stats capabilities for log messages,6,[],https://github.com/sysown/proxysql/pull/3824,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3824#issuecomment-1076501687,As the title says.,Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3824,2022-03-22T16:30:17Z,2022-04-27T13:37:09Z,2022-04-30T16:07:58Z,MERGED,True,681,18,11,https://github.com/JavierJF,Add stats capabilities for log messages,6,[],https://github.com/sysown/proxysql/pull/3824,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3824#issuecomment-1101396128,As the title says.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3824,2022-03-22T16:30:17Z,2022-04-27T13:37:09Z,2022-04-30T16:07:58Z,MERGED,True,681,18,11,https://github.com/JavierJF,Add stats capabilities for log messages,6,[],https://github.com/sysown/proxysql/pull/3824,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/3824#issuecomment-1110907870,As the title says.,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3826,2022-03-23T22:30:31Z,2022-04-14T23:48:17Z,2022-04-14T23:48:17Z,MERGED,True,9,7,1,https://github.com/bpmdoty,Don't intercept SELECT CONNECTION_ID() as COM_STMT_PREPARE,3,[],https://github.com/sysown/proxysql/pull/3826,https://github.com/bpmdoty,1,https://github.com/sysown/proxysql/pull/3826,"As mentioned in issue #2564, back in 2018, proxysql added an ""intercept"" for the query SELECT CONNECTION_ID() to return the proxy connection id, not the backend server id for later use with KILL commands.  The if statement in 2018 didn't consider the query type, but only checked for specific length and a strcmp() of the SQL in question.  If the query matches the if statement then a hard-coded response packet is sent(with presumably a usable connection id) that appears to be the response packet for a COM_QUERY request.
The problem comes up because there is only a 1 byte difference in packets depending if the client makes that query as a query or a prepared statement.  At offset 4, a value of 0x3 is COM_QUERY and 0x16 is COM_STMT_PREPARE.  when a client sends COM_STMT_PREPARE, it's expecting a different response than what's coded in the intercept.  When the client receives the malformed(from it's perspective) response, it closes the connection.
I don't know if the returned client id in a prepared statement is useful, but at least in my case I can't control the SQL being used.  I'd argue this is no more incorrect than changing the SQL to SELECT  CONNECTION_ID()(with 2 spaces), which would cause the same behavior.  Below is some trivial ruby code to demonstrate the problem:
require 'mysql2'

client=Mysql2::Client.new(proxysql_connect_info)
client.query('SELECT CONNECTION_ID()') #works as expected with intercept

#what tableau does
stmt=client.prepare('SELECT CONNECTION_ID()') # connection bombs here because of the intercept
stmt.execute #never get here","As mentioned in issue #2564, back in 2018, proxysql added an ""intercept"" for the query SELECT CONNECTION_ID() to return the proxy connection id, not the backend server id for later use with KILL commands.  The if statement in 2018 didn't consider the query type, but only checked for specific length and a strcmp() of the SQL in question.  If the query matches the if statement then a hard-coded response packet is sent(with presumably a usable connection id) that appears to be the response packet for a COM_QUERY request.
The problem comes up because there is only a 1 byte difference in packets depending if the client makes that query as a query or a prepared statement.  At offset 4, a value of 0x3 is COM_QUERY and 0x16 is COM_STMT_PREPARE.  when a client sends COM_STMT_PREPARE, it's expecting a different response than what's coded in the intercept.  When the client receives the malformed(from it's perspective) response, it closes the connection.
I don't know if the returned client id in a prepared statement is useful, but at least in my case I can't control the SQL being used.  I'd argue this is no more incorrect than changing the SQL to SELECT  CONNECTION_ID()(with 2 spaces), which would cause the same behavior.  Below is some trivial ruby code to demonstrate the problem:
require 'mysql2'

client=Mysql2::Client.new(proxysql_connect_info)
client.query('SELECT CONNECTION_ID()') #works as expected with intercept

#what tableau does
stmt=client.prepare('SELECT CONNECTION_ID()') # connection bombs here because of the intercept
stmt.execute #never get here",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3826,2022-03-23T22:30:31Z,2022-04-14T23:48:17Z,2022-04-14T23:48:17Z,MERGED,True,9,7,1,https://github.com/bpmdoty,Don't intercept SELECT CONNECTION_ID() as COM_STMT_PREPARE,3,[],https://github.com/sysown/proxysql/pull/3826,https://github.com/pondix,2,https://github.com/sysown/proxysql/pull/3826#issuecomment-1076885506,"As mentioned in issue #2564, back in 2018, proxysql added an ""intercept"" for the query SELECT CONNECTION_ID() to return the proxy connection id, not the backend server id for later use with KILL commands.  The if statement in 2018 didn't consider the query type, but only checked for specific length and a strcmp() of the SQL in question.  If the query matches the if statement then a hard-coded response packet is sent(with presumably a usable connection id) that appears to be the response packet for a COM_QUERY request.
The problem comes up because there is only a 1 byte difference in packets depending if the client makes that query as a query or a prepared statement.  At offset 4, a value of 0x3 is COM_QUERY and 0x16 is COM_STMT_PREPARE.  when a client sends COM_STMT_PREPARE, it's expecting a different response than what's coded in the intercept.  When the client receives the malformed(from it's perspective) response, it closes the connection.
I don't know if the returned client id in a prepared statement is useful, but at least in my case I can't control the SQL being used.  I'd argue this is no more incorrect than changing the SQL to SELECT  CONNECTION_ID()(with 2 spaces), which would cause the same behavior.  Below is some trivial ruby code to demonstrate the problem:
require 'mysql2'

client=Mysql2::Client.new(proxysql_connect_info)
client.query('SELECT CONNECTION_ID()') #works as expected with intercept

#what tableau does
stmt=client.prepare('SELECT CONNECTION_ID()') # connection bombs here because of the intercept
stmt.execute #never get here",Automated message: PR pending admin approval for build testing,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3826,2022-03-23T22:30:31Z,2022-04-14T23:48:17Z,2022-04-14T23:48:17Z,MERGED,True,9,7,1,https://github.com/bpmdoty,Don't intercept SELECT CONNECTION_ID() as COM_STMT_PREPARE,3,[],https://github.com/sysown/proxysql/pull/3826,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3826#issuecomment-1076898833,"As mentioned in issue #2564, back in 2018, proxysql added an ""intercept"" for the query SELECT CONNECTION_ID() to return the proxy connection id, not the backend server id for later use with KILL commands.  The if statement in 2018 didn't consider the query type, but only checked for specific length and a strcmp() of the SQL in question.  If the query matches the if statement then a hard-coded response packet is sent(with presumably a usable connection id) that appears to be the response packet for a COM_QUERY request.
The problem comes up because there is only a 1 byte difference in packets depending if the client makes that query as a query or a prepared statement.  At offset 4, a value of 0x3 is COM_QUERY and 0x16 is COM_STMT_PREPARE.  when a client sends COM_STMT_PREPARE, it's expecting a different response than what's coded in the intercept.  When the client receives the malformed(from it's perspective) response, it closes the connection.
I don't know if the returned client id in a prepared statement is useful, but at least in my case I can't control the SQL being used.  I'd argue this is no more incorrect than changing the SQL to SELECT  CONNECTION_ID()(with 2 spaces), which would cause the same behavior.  Below is some trivial ruby code to demonstrate the problem:
require 'mysql2'

client=Mysql2::Client.new(proxysql_connect_info)
client.query('SELECT CONNECTION_ID()') #works as expected with intercept

#what tableau does
stmt=client.prepare('SELECT CONNECTION_ID()') # connection bombs here because of the intercept
stmt.execute #never get here","Hi @bpmdoty .
Thank you for the detailed analysis.
We should probably replace *(char *)(pkt->ptr+4)!=(char)0x16 with *(char *)(pkt->ptr+4)==(char)0x03 to make sure that this code is activated only for COM_QUERY .
Function handler___status_WAITING_CLIENT_DATA___STATE_SLEEP___MYSQL_COM_QUERY_qpo() was initially designed to only handle COM_QUERY (as the name suggests) but it is now also executed for COM_STMT_PREPARE and COM_STMT_EXECUTE.
This means that the same filtering needs to be applied also for LAST_INSERT_ID and @@IDENTITY  , and I also suspect that SET statements prepared/executed in prepared statements do not work as expected.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3826,2022-03-23T22:30:31Z,2022-04-14T23:48:17Z,2022-04-14T23:48:17Z,MERGED,True,9,7,1,https://github.com/bpmdoty,Don't intercept SELECT CONNECTION_ID() as COM_STMT_PREPARE,3,[],https://github.com/sysown/proxysql/pull/3826,https://github.com/bpmdoty,4,https://github.com/sysown/proxysql/pull/3826#issuecomment-1077894650,"As mentioned in issue #2564, back in 2018, proxysql added an ""intercept"" for the query SELECT CONNECTION_ID() to return the proxy connection id, not the backend server id for later use with KILL commands.  The if statement in 2018 didn't consider the query type, but only checked for specific length and a strcmp() of the SQL in question.  If the query matches the if statement then a hard-coded response packet is sent(with presumably a usable connection id) that appears to be the response packet for a COM_QUERY request.
The problem comes up because there is only a 1 byte difference in packets depending if the client makes that query as a query or a prepared statement.  At offset 4, a value of 0x3 is COM_QUERY and 0x16 is COM_STMT_PREPARE.  when a client sends COM_STMT_PREPARE, it's expecting a different response than what's coded in the intercept.  When the client receives the malformed(from it's perspective) response, it closes the connection.
I don't know if the returned client id in a prepared statement is useful, but at least in my case I can't control the SQL being used.  I'd argue this is no more incorrect than changing the SQL to SELECT  CONNECTION_ID()(with 2 spaces), which would cause the same behavior.  Below is some trivial ruby code to demonstrate the problem:
require 'mysql2'

client=Mysql2::Client.new(proxysql_connect_info)
client.query('SELECT CONNECTION_ID()') #works as expected with intercept

#what tableau does
stmt=client.prepare('SELECT CONNECTION_ID()') # connection bombs here because of the intercept
stmt.execute #never get here","Hi @renecannao ,
Thank you for looking at my patch.  After reading your words and thinking about it further, I do agree we should check specifically for COM_QUERY and not exclude COM_STMT_PREPARE.  I have made that change and updated the other intercepted queries which follow the same pattern.  I'm not sure if any other client request packet could have matched the original conditionals, but if so they probably are not exepecting a COM_QUERY style response.
I looked at the SET code and didn't see a clear path there.  Perhaps it's not an issue?  adapting my test case I wasn't able to break things:
irb(main):001:0> require 'mysql2'
=> true
irb(main):002:0> client=Mysql2::Client.new(:host => '127.0.0.1', :port => 6033, :username => 'test', :password => 'test', :database => 'test')
=>
#<Mysql2::Client:0x00007fc7927b41a0
...
irb(main):003:0> client.query('SET autocommit=0');
=> nil
irb(main):004:0> stmt=client.prepare('SET autocommit=0');
=> #<Mysql2::Statement:0x00007fc7924f5478>
irb(main):005:0> stmt.execute
=> nil",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3826,2022-03-23T22:30:31Z,2022-04-14T23:48:17Z,2022-04-14T23:48:17Z,MERGED,True,9,7,1,https://github.com/bpmdoty,Don't intercept SELECT CONNECTION_ID() as COM_STMT_PREPARE,3,[],https://github.com/sysown/proxysql/pull/3826,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/3826#issuecomment-1085689892,"As mentioned in issue #2564, back in 2018, proxysql added an ""intercept"" for the query SELECT CONNECTION_ID() to return the proxy connection id, not the backend server id for later use with KILL commands.  The if statement in 2018 didn't consider the query type, but only checked for specific length and a strcmp() of the SQL in question.  If the query matches the if statement then a hard-coded response packet is sent(with presumably a usable connection id) that appears to be the response packet for a COM_QUERY request.
The problem comes up because there is only a 1 byte difference in packets depending if the client makes that query as a query or a prepared statement.  At offset 4, a value of 0x3 is COM_QUERY and 0x16 is COM_STMT_PREPARE.  when a client sends COM_STMT_PREPARE, it's expecting a different response than what's coded in the intercept.  When the client receives the malformed(from it's perspective) response, it closes the connection.
I don't know if the returned client id in a prepared statement is useful, but at least in my case I can't control the SQL being used.  I'd argue this is no more incorrect than changing the SQL to SELECT  CONNECTION_ID()(with 2 spaces), which would cause the same behavior.  Below is some trivial ruby code to demonstrate the problem:
require 'mysql2'

client=Mysql2::Client.new(proxysql_connect_info)
client.query('SELECT CONNECTION_ID()') #works as expected with intercept

#what tableau does
stmt=client.prepare('SELECT CONNECTION_ID()') # connection bombs here because of the intercept
stmt.execute #never get here",add to whitelist,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3826,2022-03-23T22:30:31Z,2022-04-14T23:48:17Z,2022-04-14T23:48:17Z,MERGED,True,9,7,1,https://github.com/bpmdoty,Don't intercept SELECT CONNECTION_ID() as COM_STMT_PREPARE,3,[],https://github.com/sysown/proxysql/pull/3826,https://github.com/renecannao,6,https://github.com/sysown/proxysql/pull/3826#issuecomment-1085690221,"As mentioned in issue #2564, back in 2018, proxysql added an ""intercept"" for the query SELECT CONNECTION_ID() to return the proxy connection id, not the backend server id for later use with KILL commands.  The if statement in 2018 didn't consider the query type, but only checked for specific length and a strcmp() of the SQL in question.  If the query matches the if statement then a hard-coded response packet is sent(with presumably a usable connection id) that appears to be the response packet for a COM_QUERY request.
The problem comes up because there is only a 1 byte difference in packets depending if the client makes that query as a query or a prepared statement.  At offset 4, a value of 0x3 is COM_QUERY and 0x16 is COM_STMT_PREPARE.  when a client sends COM_STMT_PREPARE, it's expecting a different response than what's coded in the intercept.  When the client receives the malformed(from it's perspective) response, it closes the connection.
I don't know if the returned client id in a prepared statement is useful, but at least in my case I can't control the SQL being used.  I'd argue this is no more incorrect than changing the SQL to SELECT  CONNECTION_ID()(with 2 spaces), which would cause the same behavior.  Below is some trivial ruby code to demonstrate the problem:
require 'mysql2'

client=Mysql2::Client.new(proxysql_connect_info)
client.query('SELECT CONNECTION_ID()') #works as expected with intercept

#what tableau does
stmt=client.prepare('SELECT CONNECTION_ID()') # connection bombs here because of the intercept
stmt.execute #never get here",test this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3826,2022-03-23T22:30:31Z,2022-04-14T23:48:17Z,2022-04-14T23:48:17Z,MERGED,True,9,7,1,https://github.com/bpmdoty,Don't intercept SELECT CONNECTION_ID() as COM_STMT_PREPARE,3,[],https://github.com/sysown/proxysql/pull/3826,https://github.com/renecannao,7,https://github.com/sysown/proxysql/pull/3826#issuecomment-1085690845,"As mentioned in issue #2564, back in 2018, proxysql added an ""intercept"" for the query SELECT CONNECTION_ID() to return the proxy connection id, not the backend server id for later use with KILL commands.  The if statement in 2018 didn't consider the query type, but only checked for specific length and a strcmp() of the SQL in question.  If the query matches the if statement then a hard-coded response packet is sent(with presumably a usable connection id) that appears to be the response packet for a COM_QUERY request.
The problem comes up because there is only a 1 byte difference in packets depending if the client makes that query as a query or a prepared statement.  At offset 4, a value of 0x3 is COM_QUERY and 0x16 is COM_STMT_PREPARE.  when a client sends COM_STMT_PREPARE, it's expecting a different response than what's coded in the intercept.  When the client receives the malformed(from it's perspective) response, it closes the connection.
I don't know if the returned client id in a prepared statement is useful, but at least in my case I can't control the SQL being used.  I'd argue this is no more incorrect than changing the SQL to SELECT  CONNECTION_ID()(with 2 spaces), which would cause the same behavior.  Below is some trivial ruby code to demonstrate the problem:
require 'mysql2'

client=Mysql2::Client.new(proxysql_connect_info)
client.query('SELECT CONNECTION_ID()') #works as expected with intercept

#what tableau does
stmt=client.prepare('SELECT CONNECTION_ID()') # connection bombs here because of the intercept
stmt.execute #never get here",This PR closes #2564,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3826,2022-03-23T22:30:31Z,2022-04-14T23:48:17Z,2022-04-14T23:48:17Z,MERGED,True,9,7,1,https://github.com/bpmdoty,Don't intercept SELECT CONNECTION_ID() as COM_STMT_PREPARE,3,[],https://github.com/sysown/proxysql/pull/3826,https://github.com/renecannao,8,https://github.com/sysown/proxysql/pull/3826#issuecomment-1085691058,"As mentioned in issue #2564, back in 2018, proxysql added an ""intercept"" for the query SELECT CONNECTION_ID() to return the proxy connection id, not the backend server id for later use with KILL commands.  The if statement in 2018 didn't consider the query type, but only checked for specific length and a strcmp() of the SQL in question.  If the query matches the if statement then a hard-coded response packet is sent(with presumably a usable connection id) that appears to be the response packet for a COM_QUERY request.
The problem comes up because there is only a 1 byte difference in packets depending if the client makes that query as a query or a prepared statement.  At offset 4, a value of 0x3 is COM_QUERY and 0x16 is COM_STMT_PREPARE.  when a client sends COM_STMT_PREPARE, it's expecting a different response than what's coded in the intercept.  When the client receives the malformed(from it's perspective) response, it closes the connection.
I don't know if the returned client id in a prepared statement is useful, but at least in my case I can't control the SQL being used.  I'd argue this is no more incorrect than changing the SQL to SELECT  CONNECTION_ID()(with 2 spaces), which would cause the same behavior.  Below is some trivial ruby code to demonstrate the problem:
require 'mysql2'

client=Mysql2::Client.new(proxysql_connect_info)
client.query('SELECT CONNECTION_ID()') #works as expected with intercept

#what tableau does
stmt=client.prepare('SELECT CONNECTION_ID()') # connection bombs here because of the intercept
stmt.execute #never get here",Hi @bpmdoty : thank you again for the PR!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3826,2022-03-23T22:30:31Z,2022-04-14T23:48:17Z,2022-04-14T23:48:17Z,MERGED,True,9,7,1,https://github.com/bpmdoty,Don't intercept SELECT CONNECTION_ID() as COM_STMT_PREPARE,3,[],https://github.com/sysown/proxysql/pull/3826,https://github.com/bpmdoty,9,https://github.com/sysown/proxysql/pull/3826#issuecomment-1086152393,"As mentioned in issue #2564, back in 2018, proxysql added an ""intercept"" for the query SELECT CONNECTION_ID() to return the proxy connection id, not the backend server id for later use with KILL commands.  The if statement in 2018 didn't consider the query type, but only checked for specific length and a strcmp() of the SQL in question.  If the query matches the if statement then a hard-coded response packet is sent(with presumably a usable connection id) that appears to be the response packet for a COM_QUERY request.
The problem comes up because there is only a 1 byte difference in packets depending if the client makes that query as a query or a prepared statement.  At offset 4, a value of 0x3 is COM_QUERY and 0x16 is COM_STMT_PREPARE.  when a client sends COM_STMT_PREPARE, it's expecting a different response than what's coded in the intercept.  When the client receives the malformed(from it's perspective) response, it closes the connection.
I don't know if the returned client id in a prepared statement is useful, but at least in my case I can't control the SQL being used.  I'd argue this is no more incorrect than changing the SQL to SELECT  CONNECTION_ID()(with 2 spaces), which would cause the same behavior.  Below is some trivial ruby code to demonstrate the problem:
require 'mysql2'

client=Mysql2::Client.new(proxysql_connect_info)
client.query('SELECT CONNECTION_ID()') #works as expected with intercept

#what tableau does
stmt=client.prepare('SELECT CONNECTION_ID()') # connection bombs here because of the intercept
stmt.execute #never get here","Hi @bpmdoty : thank you again for the PR!

You're quite welcome.  Thank you for including it in a future release and maintaining proxysql in general.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3834,2022-04-05T03:51:01Z,2022-04-14T23:47:59Z,2022-04-18T18:20:34Z,MERGED,True,1,1,1,https://github.com/saunderst,Fix ssl_p2s_capath typo in MySQL_Thread::refresh_variables(),1,[],https://github.com/sysown/proxysql/pull/3834,https://github.com/saunderst,1,https://github.com/sysown/proxysql/pull/3834,This is just correcting a typo causing refresh_variables() to set mysql_thread___ssl_p2s_capath from the wrong variable.,This is just correcting a typo causing refresh_variables() to set mysql_thread___ssl_p2s_capath from the wrong variable.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3834,2022-04-05T03:51:01Z,2022-04-14T23:47:59Z,2022-04-18T18:20:34Z,MERGED,True,1,1,1,https://github.com/saunderst,Fix ssl_p2s_capath typo in MySQL_Thread::refresh_variables(),1,[],https://github.com/sysown/proxysql/pull/3834,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3834#issuecomment-1099724240,This is just correcting a typo causing refresh_variables() to set mysql_thread___ssl_p2s_capath from the wrong variable.,Thank you for the PR!,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3836,2022-04-06T22:30:49Z,2022-04-18T10:23:01Z,2022-04-30T16:08:19Z,MERGED,True,579,7,2,https://github.com/JavierJF,Fix idle backend connections not getting properly pinged,5,[],https://github.com/sysown/proxysql/pull/3836,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3836,"This PR improves the ordering of the backend connections returned by get_multiple_idle_connections. This should guarantee that no connections are left un-pinged, as long as ProxySQL processing rate can keep up with the number of backend connections expiring in a certain interval.","This PR improves the ordering of the backend connections returned by get_multiple_idle_connections. This should guarantee that no connections are left un-pinged, as long as ProxySQL processing rate can keep up with the number of backend connections expiring in a certain interval.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3839,2022-04-08T22:46:11Z,2022-04-14T23:46:33Z,2022-04-30T16:08:15Z,MERGED,True,342,0,4,https://github.com/JavierJF,Add new variable 'mysql-auto_increment_delay_multiplex_timeout_ms',2,[],https://github.com/sysown/proxysql/pull/3839,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3839,"Adds a the new config variable mysql-auto_increment_delay_multiplex_timeout_ms.
This variable allows to specify a timeout specified in 'ms' after which mysql-auto_increment_delay_multiplex is invalidated (set to 0), thus re-enabling multiplexing.

Default value: 10000
Unit: milliseconds
Minimum: 0
Maximum: 3600000 (1 hour)","Adds a the new config variable mysql-auto_increment_delay_multiplex_timeout_ms.
This variable allows to specify a timeout specified in 'ms' after which mysql-auto_increment_delay_multiplex is invalidated (set to 0), thus re-enabling multiplexing.

Default value: 10000
Unit: milliseconds
Minimum: 0
Maximum: 3600000 (1 hour)",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3839,2022-04-08T22:46:11Z,2022-04-14T23:46:33Z,2022-04-30T16:08:15Z,MERGED,True,342,0,4,https://github.com/JavierJF,Add new variable 'mysql-auto_increment_delay_multiplex_timeout_ms',2,[],https://github.com/sysown/proxysql/pull/3839,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3839#issuecomment-1093976782,"Adds a the new config variable mysql-auto_increment_delay_multiplex_timeout_ms.
This variable allows to specify a timeout specified in 'ms' after which mysql-auto_increment_delay_multiplex is invalidated (set to 0), thus re-enabling multiplexing.

Default value: 10000
Unit: milliseconds
Minimum: 0
Maximum: 3600000 (1 hour)",Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3839,2022-04-08T22:46:11Z,2022-04-14T23:46:33Z,2022-04-30T16:08:15Z,MERGED,True,342,0,4,https://github.com/JavierJF,Add new variable 'mysql-auto_increment_delay_multiplex_timeout_ms',2,[],https://github.com/sysown/proxysql/pull/3839,https://github.com/JavierJF,3,https://github.com/sysown/proxysql/pull/3839#issuecomment-1096348535,"Adds a the new config variable mysql-auto_increment_delay_multiplex_timeout_ms.
This variable allows to specify a timeout specified in 'ms' after which mysql-auto_increment_delay_multiplex is invalidated (set to 0), thus re-enabling multiplexing.

Default value: 10000
Unit: milliseconds
Minimum: 0
Maximum: 3600000 (1 hour)",Retest this please.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3843,2022-04-14T17:13:32Z,2022-04-15T04:41:47Z,2022-04-30T16:08:16Z,MERGED,True,12,6,7,https://github.com/mirostauder,Security - harden version check,2,[],https://github.com/sysown/proxysql/pull/3843,https://github.com/mirostauder,1,https://github.com/sysown/proxysql/pull/3843,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3843,2022-04-14T17:13:32Z,2022-04-15T04:41:47Z,2022-04-30T16:08:16Z,MERGED,True,12,6,7,https://github.com/mirostauder,Security - harden version check,2,[],https://github.com/sysown/proxysql/pull/3843,https://github.com/mirostauder,2,https://github.com/sysown/proxysql/pull/3843#issuecomment-1099579135,,"hardened the version request
replaced curl 7.77 - has 8 vulnerabilities
https://curl.se/docs/vuln-7.77.0.html",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3843,2022-04-14T17:13:32Z,2022-04-15T04:41:47Z,2022-04-30T16:08:16Z,MERGED,True,12,6,7,https://github.com/mirostauder,Security - harden version check,2,[],https://github.com/sysown/proxysql/pull/3843,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3843#issuecomment-1099789629,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3844,2022-04-15T11:02:20Z,2022-04-26T14:53:44Z,2022-04-30T16:08:17Z,MERGED,True,4,15,8,https://github.com/mirostauder,Security - update OpenSSL v3.0.0 to v3.0.2,2,[],https://github.com/sysown/proxysql/pull/3844,https://github.com/mirostauder,1,https://github.com/sysown/proxysql/pull/3844,"CVE-2022-0778 [High severity] 15 March 2022
https://www.openssl.org/news/vulnerabilities.html","CVE-2022-0778 [High severity] 15 March 2022
https://www.openssl.org/news/vulnerabilities.html",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3844,2022-04-15T11:02:20Z,2022-04-26T14:53:44Z,2022-04-30T16:08:17Z,MERGED,True,4,15,8,https://github.com/mirostauder,Security - update OpenSSL v3.0.0 to v3.0.2,2,[],https://github.com/sysown/proxysql/pull/3844,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3844#issuecomment-1101294346,"CVE-2022-0778 [High severity] 15 March 2022
https://www.openssl.org/news/vulnerabilities.html",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3848,2022-04-22T15:58:52Z,2022-04-27T20:13:26Z,2022-04-30T16:07:39Z,MERGED,True,1316,831,14,https://github.com/JavierJF,Fix deadlock caused by Cluster and Admin and 'proxysql_servers' sync #3847,11,[],https://github.com/sysown/proxysql/pull/3848,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3848,Closes #3847.,Closes #3847.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3848,2022-04-22T15:58:52Z,2022-04-27T20:13:26Z,2022-04-30T16:07:39Z,MERGED,True,1316,831,14,https://github.com/JavierJF,Fix deadlock caused by Cluster and Admin and 'proxysql_servers' sync #3847,11,[],https://github.com/sysown/proxysql/pull/3848,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3848#issuecomment-1106735721,Closes #3847.,Retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3848,2022-04-22T15:58:52Z,2022-04-27T20:13:26Z,2022-04-30T16:07:39Z,MERGED,True,1316,831,14,https://github.com/JavierJF,Fix deadlock caused by Cluster and Admin and 'proxysql_servers' sync #3847,11,[],https://github.com/sysown/proxysql/pull/3848,https://github.com/JavierJF,3,https://github.com/sysown/proxysql/pull/3848#issuecomment-1108239958,Closes #3847.,Retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3850,2022-04-25T07:21:47Z,2022-04-26T14:55:52Z,2022-04-30T16:07:45Z,MERGED,True,82,3,3,https://github.com/mirostauder,add ubuntu22 builds,1,[],https://github.com/sysown/proxysql/pull/3850,https://github.com/mirostauder,1,https://github.com/sysown/proxysql/pull/3850,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3851,2022-04-25T10:35:37Z,2022-04-27T08:53:00Z,2022-04-30T16:07:44Z,MERGED,True,6,6,1,https://github.com/mirostauder,fix clang builds,1,[],https://github.com/sysown/proxysql/pull/3851,https://github.com/mirostauder,1,https://github.com/sysown/proxysql/pull/3851,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3851,2022-04-25T10:35:37Z,2022-04-27T08:53:00Z,2022-04-30T16:07:44Z,MERGED,True,6,6,1,https://github.com/mirostauder,fix clang builds,1,[],https://github.com/sysown/proxysql/pull/3851,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3851#issuecomment-1109902135,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3851,2022-04-25T10:35:37Z,2022-04-27T08:53:00Z,2022-04-30T16:07:44Z,MERGED,True,6,6,1,https://github.com/mirostauder,fix clang builds,1,[],https://github.com/sysown/proxysql/pull/3851,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3851#issuecomment-1110213231,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3851,2022-04-25T10:35:37Z,2022-04-27T08:53:00Z,2022-04-30T16:07:44Z,MERGED,True,6,6,1,https://github.com/mirostauder,fix clang builds,1,[],https://github.com/sysown/proxysql/pull/3851,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/3851#issuecomment-1110570998,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3851,2022-04-25T10:35:37Z,2022-04-27T08:53:00Z,2022-04-30T16:07:44Z,MERGED,True,6,6,1,https://github.com/mirostauder,fix clang builds,1,[],https://github.com/sysown/proxysql/pull/3851,https://github.com/renecannao,5,https://github.com/sysown/proxysql/pull/3851#issuecomment-1110655668,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3853,2022-04-26T14:30:38Z,,2022-04-27T05:50:36Z,OPEN,False,60,0,7,https://github.com/renecannao,Initial POC for fast_forward and SSL #1459,3,[],https://github.com/sysown/proxysql/pull/3853,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3853,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3853,2022-04-26T14:30:38Z,,2022-04-27T05:50:36Z,OPEN,False,60,0,7,https://github.com/renecannao,Initial POC for fast_forward and SSL #1459,3,[],https://github.com/sysown/proxysql/pull/3853,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3853#issuecomment-1110571054,,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3854,2022-04-26T20:37:05Z,2022-04-27T07:39:01Z,2022-04-30T16:07:41Z,MERGED,True,23,2,3,https://github.com/renecannao,V2.x php no backslash escapes (PHP bug66141),2,[],https://github.com/sysown/proxysql/pull/3854,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3854,"Track NO_BACKSLASH_ESCAPES in case it is changed:

using SET sql_mode by the client
directly on the backend (for example default sql_mode, or an sql_mode set from another variable)

No TAP test provided because we will be using PHP tests","Track NO_BACKSLASH_ESCAPES in case it is changed:

using SET sql_mode by the client
directly on the backend (for example default sql_mode, or an sql_mode set from another variable)

No TAP test provided because we will be using PHP tests",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3854,2022-04-26T20:37:05Z,2022-04-27T07:39:01Z,2022-04-30T16:07:41Z,MERGED,True,23,2,3,https://github.com/renecannao,V2.x php no backslash escapes (PHP bug66141),2,[],https://github.com/sysown/proxysql/pull/3854,https://github.com/mirostauder,2,https://github.com/sysown/proxysql/pull/3854#issuecomment-1110638473,"Track NO_BACKSLASH_ESCAPES in case it is changed:

using SET sql_mode by the client
directly on the backend (for example default sql_mode, or an sql_mode set from another variable)

No TAP test provided because we will be using PHP tests","This is a fix for FAIL on PHP test
php-src/ext/pdo_mysql/tests/bug66141.phpt",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3854,2022-04-26T20:37:05Z,2022-04-27T07:39:01Z,2022-04-30T16:07:41Z,MERGED,True,23,2,3,https://github.com/renecannao,V2.x php no backslash escapes (PHP bug66141),2,[],https://github.com/sysown/proxysql/pull/3854,https://github.com/mirostauder,3,https://github.com/sysown/proxysql/pull/3854#issuecomment-1110651837,"Track NO_BACKSLASH_ESCAPES in case it is changed:

using SET sql_mode by the client
directly on the backend (for example default sql_mode, or an sql_mode set from another variable)

No TAP test provided because we will be using PHP tests","=====================================================================
Running selected tests.
PASS Bug #66141 (mysqlnd quote function is wrong with NO_BACKSLASH_ESCAPES after failed query) [ext/pdo_mysql/tests/bug66141.phpt] 
=====================================================================
Number of tests :    1                 1
Tests skipped   :    0 (  0.0%) --------
Tests warned    :    0 (  0.0%) (  0.0%)
Tests failed    :    0 (  0.0%) (  0.0%)
Tests passed    :    1 (100.0%) (100.0%)
---------------------------------------------------------------------
Time taken      :    0 seconds
=====================================================================",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3854,2022-04-26T20:37:05Z,2022-04-27T07:39:01Z,2022-04-30T16:07:41Z,MERGED,True,23,2,3,https://github.com/renecannao,V2.x php no backslash escapes (PHP bug66141),2,[],https://github.com/sysown/proxysql/pull/3854,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/3854#issuecomment-1110654627,"Track NO_BACKSLASH_ESCAPES in case it is changed:

using SET sql_mode by the client
directly on the backend (for example default sql_mode, or an sql_mode set from another variable)

No TAP test provided because we will be using PHP tests","For reference:
https://github.com/php/php-src/blob/master/ext/pdo_mysql/tests/bug66141.phpt",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3855,2022-04-27T16:30:17Z,2022-04-28T13:59:21Z,2022-04-30T16:07:37Z,MERGED,True,278,5,5,https://github.com/JavierJF,Properly handle 'EINTR' for signals for RESTAPI - Closes: 3838,5,[],https://github.com/sysown/proxysql/pull/3855,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3855,"This PR also improves error report for RESTAPI scripts. Check commit 074e4c0. Closes #3838.
IMPORTANT NOTE - DO NOT MERGE BEFORE #3847:
This PR is dependent on PR #3847. That PR should be merged first.","This PR also improves error report for RESTAPI scripts. Check commit 074e4c0. Closes #3838.
IMPORTANT NOTE - DO NOT MERGE BEFORE #3847:
This PR is dependent on PR #3847. That PR should be merged first.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3855,2022-04-27T16:30:17Z,2022-04-28T13:59:21Z,2022-04-30T16:07:37Z,MERGED,True,278,5,5,https://github.com/JavierJF,Properly handle 'EINTR' for signals for RESTAPI - Closes: 3838,5,[],https://github.com/sysown/proxysql/pull/3855,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3855#issuecomment-1111530027,"This PR also improves error report for RESTAPI scripts. Check commit 074e4c0. Closes #3838.
IMPORTANT NOTE - DO NOT MERGE BEFORE #3847:
This PR is dependent on PR #3847. That PR should be merged first.",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3855,2022-04-27T16:30:17Z,2022-04-28T13:59:21Z,2022-04-30T16:07:37Z,MERGED,True,278,5,5,https://github.com/JavierJF,Properly handle 'EINTR' for signals for RESTAPI - Closes: 3838,5,[],https://github.com/sysown/proxysql/pull/3855,https://github.com/JavierJF,3,https://github.com/sysown/proxysql/pull/3855#issuecomment-1112076603,"This PR also improves error report for RESTAPI scripts. Check commit 074e4c0. Closes #3838.
IMPORTANT NOTE - DO NOT MERGE BEFORE #3847:
This PR is dependent on PR #3847. That PR should be merged first.",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3856,2022-04-27T18:03:04Z,2022-04-27T20:14:47Z,2022-04-30T16:07:47Z,MERGED,True,0,7,2,https://github.com/JavierJF,Fix duplicate counting of MySQL errors for client conns,1,[],https://github.com/sysown/proxysql/pull/3856,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3856,"Invalid query errors are currently being duplicated in counters. The only proper place for counting query errors currently is in 'MySQL_Session::handler' in PROCESSING_QUERY stage, after the query failure have been detected.","Invalid query errors are currently being duplicated in counters. The only proper place for counting query errors currently is in 'MySQL_Session::handler' in PROCESSING_QUERY stage, after the query failure have been detected.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3857,2022-04-27T20:01:19Z,2022-04-27T22:07:52Z,2022-04-30T16:06:31Z,MERGED,True,16,18,3,https://github.com/JavierJF,Fix compilation in older GCC versions removing 'auto' usage,3,[],https://github.com/sysown/proxysql/pull/3857,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3857,"The PR also pack two other minor changes:

Remove some unnecessary header inclusion.
Fix compilation on recent GCC of tap tests by changing 'libuuid' linking.","The PR also pack two other minor changes:

Remove some unnecessary header inclusion.
Fix compilation on recent GCC of tap tests by changing 'libuuid' linking.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3858,2022-04-28T13:58:25Z,2022-05-30T06:58:18Z,2022-05-30T06:58:19Z,MERGED,True,97,44,6,https://github.com/renecannao,Added new function to create multirows statements for SQLite,3,[],https://github.com/sysown/proxysql/pull/3858,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3858,"This is now used in ProxySQL_Admin and MySQL_HostGroups_Manager.
It improves readibility and it makes the code less error prone.
Drawback: queries are generated at runtime.
It is possible that in future we will replace this with some strings
initialization during bootstrap.","This is now used in ProxySQL_Admin and MySQL_HostGroups_Manager.
It improves readibility and it makes the code less error prone.
Drawback: queries are generated at runtime.
It is possible that in future we will replace this with some strings
initialization during bootstrap.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3858,2022-04-28T13:58:25Z,2022-05-30T06:58:18Z,2022-05-30T06:58:19Z,MERGED,True,97,44,6,https://github.com/renecannao,Added new function to create multirows statements for SQLite,3,[],https://github.com/sysown/proxysql/pull/3858,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3858#issuecomment-1140439168,"This is now used in ProxySQL_Admin and MySQL_HostGroups_Manager.
It improves readibility and it makes the code less error prone.
Drawback: queries are generated at runtime.
It is possible that in future we will replace this with some strings
initialization during bootstrap.",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3858,2022-04-28T13:58:25Z,2022-05-30T06:58:18Z,2022-05-30T06:58:19Z,MERGED,True,97,44,6,https://github.com/renecannao,Added new function to create multirows statements for SQLite,3,[],https://github.com/sysown/proxysql/pull/3858,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3858#issuecomment-1140503206,"This is now used in ProxySQL_Admin and MySQL_HostGroups_Manager.
It improves readibility and it makes the code less error prone.
Drawback: queries are generated at runtime.
It is possible that in future we will replace this with some strings
initialization during bootstrap.",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3858,2022-04-28T13:58:25Z,2022-05-30T06:58:18Z,2022-05-30T06:58:19Z,MERGED,True,97,44,6,https://github.com/renecannao,Added new function to create multirows statements for SQLite,3,[],https://github.com/sysown/proxysql/pull/3858,https://github.com/renecannao,4,https://github.com/sysown/proxysql/pull/3858#issuecomment-1140518993,"This is now used in ProxySQL_Admin and MySQL_HostGroups_Manager.
It improves readibility and it makes the code less error prone.
Drawback: queries are generated at runtime.
It is possible that in future we will replace this with some strings
initialization during bootstrap.",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3859,2022-04-28T14:44:15Z,2022-04-28T16:37:07Z,2022-04-30T16:06:28Z,MERGED,True,8,1,1,https://github.com/renecannao,MySQL idles thread should not call update_query_processor_stats(),1,[],https://github.com/sysown/proxysql/pull/3859,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3859,This was detected by valgrind,This was detected by valgrind,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3866,2022-05-02T17:45:28Z,2022-05-07T16:25:43Z,2022-05-07T16:25:43Z,MERGED,True,136,68,17,https://github.com/JavierJF,Fix valgrind found issues for tokenizer during testing,17,[],https://github.com/sysown/proxysql/pull/3866,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3866,"As the title says.
DO NOT MERGE: This PR is going to be used for doing testing in the CI.","As the title says.
DO NOT MERGE: This PR is going to be used for doing testing in the CI.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3866,2022-05-02T17:45:28Z,2022-05-07T16:25:43Z,2022-05-07T16:25:43Z,MERGED,True,136,68,17,https://github.com/JavierJF,Fix valgrind found issues for tokenizer during testing,17,[],https://github.com/sysown/proxysql/pull/3866,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3866#issuecomment-1117781907,"As the title says.
DO NOT MERGE: This PR is going to be used for doing testing in the CI.",Test with ASAN please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3866,2022-05-02T17:45:28Z,2022-05-07T16:25:43Z,2022-05-07T16:25:43Z,MERGED,True,136,68,17,https://github.com/JavierJF,Fix valgrind found issues for tokenizer during testing,17,[],https://github.com/sysown/proxysql/pull/3866,https://github.com/JavierJF,3,https://github.com/sysown/proxysql/pull/3866#issuecomment-1118010475,"As the title says.
DO NOT MERGE: This PR is going to be used for doing testing in the CI.",Test with ASAN please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3866,2022-05-02T17:45:28Z,2022-05-07T16:25:43Z,2022-05-07T16:25:43Z,MERGED,True,136,68,17,https://github.com/JavierJF,Fix valgrind found issues for tokenizer during testing,17,[],https://github.com/sysown/proxysql/pull/3866,https://github.com/JavierJF,4,https://github.com/sysown/proxysql/pull/3866#issuecomment-1118424554,"As the title says.
DO NOT MERGE: This PR is going to be used for doing testing in the CI.",Test with ASAN please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3866,2022-05-02T17:45:28Z,2022-05-07T16:25:43Z,2022-05-07T16:25:43Z,MERGED,True,136,68,17,https://github.com/JavierJF,Fix valgrind found issues for tokenizer during testing,17,[],https://github.com/sysown/proxysql/pull/3866,https://github.com/JavierJF,5,https://github.com/sysown/proxysql/pull/3866#issuecomment-1118508366,"As the title says.
DO NOT MERGE: This PR is going to be used for doing testing in the CI.",Test with ASAN please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3866,2022-05-02T17:45:28Z,2022-05-07T16:25:43Z,2022-05-07T16:25:43Z,MERGED,True,136,68,17,https://github.com/JavierJF,Fix valgrind found issues for tokenizer during testing,17,[],https://github.com/sysown/proxysql/pull/3866,https://github.com/JavierJF,6,https://github.com/sysown/proxysql/pull/3866#issuecomment-1118742600,"As the title says.
DO NOT MERGE: This PR is going to be used for doing testing in the CI.",Test with ASAN please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3866,2022-05-02T17:45:28Z,2022-05-07T16:25:43Z,2022-05-07T16:25:43Z,MERGED,True,136,68,17,https://github.com/JavierJF,Fix valgrind found issues for tokenizer during testing,17,[],https://github.com/sysown/proxysql/pull/3866,https://github.com/JavierJF,7,https://github.com/sysown/proxysql/pull/3866#issuecomment-1118894989,"As the title says.
DO NOT MERGE: This PR is going to be used for doing testing in the CI.",Test with ASAN please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3866,2022-05-02T17:45:28Z,2022-05-07T16:25:43Z,2022-05-07T16:25:43Z,MERGED,True,136,68,17,https://github.com/JavierJF,Fix valgrind found issues for tokenizer during testing,17,[],https://github.com/sysown/proxysql/pull/3866,https://github.com/JavierJF,8,https://github.com/sysown/proxysql/pull/3866#issuecomment-1119829524,"As the title says.
DO NOT MERGE: This PR is going to be used for doing testing in the CI.",Test with ASAN please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3867,2022-05-05T10:08:57Z,2022-05-09T09:07:26Z,2022-05-09T09:07:27Z,MERGED,True,76,44,6,https://github.com/renecannao,Added mysql-monitor_replication_lag_group_by_host,1,[],https://github.com/sysown/proxysql/pull/3867,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3867,"If variable mysql-monitor_replication_lag_group_by_host=false: (default)
Monitor will perform 1 replication lag check per server per hostgroup.
If variable mysql-monitor_replication_lag_group_by_host=true:
Monitor will perform 1 replication lag check per server.
This variable need to be set only in setups in which the same server is
configured in many hostgroups, thus reducing the number of checks","If variable mysql-monitor_replication_lag_group_by_host=false: (default)
Monitor will perform 1 replication lag check per server per hostgroup.
If variable mysql-monitor_replication_lag_group_by_host=true:
Monitor will perform 1 replication lag check per server.
This variable need to be set only in setups in which the same server is
configured in many hostgroups, thus reducing the number of checks",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3867,2022-05-05T10:08:57Z,2022-05-09T09:07:26Z,2022-05-09T09:07:27Z,MERGED,True,76,44,6,https://github.com/renecannao,Added mysql-monitor_replication_lag_group_by_host,1,[],https://github.com/sysown/proxysql/pull/3867,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3867#issuecomment-1120236391,"If variable mysql-monitor_replication_lag_group_by_host=false: (default)
Monitor will perform 1 replication lag check per server per hostgroup.
If variable mysql-monitor_replication_lag_group_by_host=true:
Monitor will perform 1 replication lag check per server.
This variable need to be set only in setups in which the same server is
configured in many hostgroups, thus reducing the number of checks",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3871,2022-05-06T14:55:18Z,2022-05-07T16:27:52Z,2022-05-07T16:27:52Z,MERGED,True,27,14,4,https://github.com/JavierJF,Isolate 'mysql_servers' from 'monitor' into 'monitor_internal' db.,1,[],https://github.com/sysown/proxysql/pull/3871,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3871,This PR also makes 'monitor_internal' accessible from Admin for debug builds.,This PR also makes 'monitor_internal' accessible from Admin for debug builds.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3874,2022-05-12T16:50:12Z,2022-05-13T12:39:58Z,2022-05-13T12:39:58Z,MERGED,True,20,0,2,https://github.com/JavierJF,Fix POST processing of final keys without values for libhttpserver,1,[],https://github.com/sysown/proxysql/pull/3874,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3874,"This patch for 'libhttpserver' fixes the losing of final keys that doesn't have values for content type 'application/x-www-form-urlencoded', thus making POST params processing conforming with https://url.spec.whatwg.org/#application/x-www-form-urlencoded.","This patch for 'libhttpserver' fixes the losing of final keys that doesn't have values for content type 'application/x-www-form-urlencoded', thus making POST params processing conforming with https://url.spec.whatwg.org/#application/x-www-form-urlencoded.",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3875,2022-05-12T17:09:34Z,2022-05-13T12:39:31Z,2022-05-13T12:39:32Z,MERGED,True,1,6,2,https://github.com/JavierJF,Fix compilation for 'GCC 12.1.0',2,[],https://github.com/sysown/proxysql/pull/3875,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3875,"Compilation currently fails under 'GCC 12.1.0':
../include/proxysql_admin.h:208:75: error: field ‚Äòp_counter_array‚Äô has incomplete type ‚Äòstd::array<prometheus::Counter*, 2>‚Äô
  208 |                 std::array<prometheus::Counter*, p_admin_counter::__size> p_counter_array {};
      |","Compilation currently fails under 'GCC 12.1.0':
../include/proxysql_admin.h:208:75: error: field ‚Äòp_counter_array‚Äô has incomplete type ‚Äòstd::array<prometheus::Counter*, 2>‚Äô
  208 |                 std::array<prometheus::Counter*, p_admin_counter::__size> p_counter_array {};
      |",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3876,2022-05-13T07:47:47Z,2022-05-13T14:13:57Z,2022-05-13T14:13:57Z,MERGED,True,2,2,2,https://github.com/JavierJF,Fix integer overflow and range for 'admin-stats_mysql_digest_to_disk' - Closes #3873,2,[],https://github.com/sysown/proxysql/pull/3876,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3876,Closes #3873 .,Closes #3873 .,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3876,2022-05-13T07:47:47Z,2022-05-13T14:13:57Z,2022-05-13T14:13:57Z,MERGED,True,2,2,2,https://github.com/JavierJF,Fix integer overflow and range for 'admin-stats_mysql_digest_to_disk' - Closes #3873,2,[],https://github.com/sysown/proxysql/pull/3876,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3876#issuecomment-1126014402,Closes #3873 .,retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3877,2022-05-13T10:01:36Z,2022-05-13T12:39:03Z,2022-05-13T12:39:03Z,MERGED,True,21,86,8,https://github.com/renecannao,Fixed various compiler warnings,1,[],https://github.com/sysown/proxysql/pull/3877,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3877,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3878,2022-05-13T13:33:56Z,2022-05-13T16:09:32Z,2022-05-13T16:09:32Z,MERGED,True,55,76,12,https://github.com/mirostauder,V2.x reproducibility fixes,3,[],https://github.com/sysown/proxysql/pull/3878,https://github.com/mirostauder,1,https://github.com/sysown/proxysql/pull/3878,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3882,2022-05-18T17:06:09Z,2022-05-27T18:07:31Z,2022-05-27T18:07:32Z,MERGED,True,2,2,1,https://github.com/JavierJF,Fix conversion computation for 'MySQL_Threads_Handler' status variables metrics,1,[],https://github.com/sysown/proxysql/pull/3882,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3882,As the title says.,As the title says.,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3884,2022-05-23T08:28:47Z,2022-05-30T07:00:09Z,2022-05-30T07:00:10Z,MERGED,True,77,2,2,https://github.com/mirostauder,add almalinux9 builds,1,[],https://github.com/sysown/proxysql/pull/3884,https://github.com/mirostauder,1,https://github.com/sysown/proxysql/pull/3884,,,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3888,2022-05-26T21:06:46Z,,2022-06-01T08:47:48Z,OPEN,False,386,196,22,https://github.com/renecannao,Upgraded clickhouse-cpp to 2.1.0,26,[],https://github.com/sysown/proxysql/pull/3888,https://github.com/renecannao,1,https://github.com/sysown/proxysql/pull/3888,"Upgraded clickhouse-cpp to 2.1.0
Clickhouse build are using C++17
Fix (again) #1348","Upgraded clickhouse-cpp to 2.1.0
Clickhouse build are using C++17
Fix (again) #1348",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3888,2022-05-26T21:06:46Z,,2022-06-01T08:47:48Z,OPEN,False,386,196,22,https://github.com/renecannao,Upgraded clickhouse-cpp to 2.1.0,26,[],https://github.com/sysown/proxysql/pull/3888,https://github.com/renecannao,2,https://github.com/sysown/proxysql/pull/3888#issuecomment-1139123812,"Upgraded clickhouse-cpp to 2.1.0
Clickhouse build are using C++17
Fix (again) #1348","TODO:
[ ] add TAP test to run some queries involving NULL , like SELECT NULL AS a  or  SELECT NULL+2 AS a, 'hello', NULL+1 , 'world', NULL AS b . We also need to verify the value returned is actually NULL and not a string containing ""NULL""",True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3888,2022-05-26T21:06:46Z,,2022-06-01T08:47:48Z,OPEN,False,386,196,22,https://github.com/renecannao,Upgraded clickhouse-cpp to 2.1.0,26,[],https://github.com/sysown/proxysql/pull/3888,https://github.com/renecannao,3,https://github.com/sysown/proxysql/pull/3888#issuecomment-1140439303,"Upgraded clickhouse-cpp to 2.1.0
Clickhouse build are using C++17
Fix (again) #1348",retest this please,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3894,2022-06-01T19:14:08Z,,2022-06-02T08:37:18Z,OPEN,False,173,4,3,https://github.com/JavierJF,WIP: POC for handling multiple parallel packets sent by client,4,[],https://github.com/sysown/proxysql/pull/3894,https://github.com/JavierJF,1,https://github.com/sysown/proxysql/pull/3894,WIP - DONOTMERGE,WIP - DONOTMERGE,True,{}
sysown/proxysql,https://github.com/sysown/proxysql,3894,2022-06-01T19:14:08Z,,2022-06-02T08:37:18Z,OPEN,False,173,4,3,https://github.com/JavierJF,WIP: POC for handling multiple parallel packets sent by client,4,[],https://github.com/sysown/proxysql/pull/3894,https://github.com/JavierJF,2,https://github.com/sysown/proxysql/pull/3894#issuecomment-1144601613,WIP - DONOTMERGE,Retest this please,True,{}
