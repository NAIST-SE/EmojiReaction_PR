unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,51,2016-03-08T22:23:59Z,2016-04-03T09:44:58Z,2016-04-03T11:48:07Z,MERGED,True,14,2,1,https://github.com/grawity,Implement SASL EXTERNAL support,2,[],https://github.com/unrealircd/unrealircd/pull/51,https://github.com/grawity,1,https://github.com/unrealircd/unrealircd/pull/51,"Support certificate auth with SASL, plus some additional stuff.","Support certificate auth with SASL, plus some additional stuff.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,52,2016-03-19T13:31:13Z,2016-05-22T14:17:19Z,2016-05-22T14:17:19Z,CLOSED,False,2,2,1,https://github.com/westor7,Fixed an issue when TOPICLEN should be AWAYLEN,1,[],https://github.com/unrealircd/unrealircd/pull/52,https://github.com/westor7,1,https://github.com/unrealircd/unrealircd/pull/52,Renamed the TOPICLEN into AWAYLEN to have the correct value.,Renamed the TOPICLEN into AWAYLEN to have the correct value.,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,52,2016-03-19T13:31:13Z,2016-05-22T14:17:19Z,2016-05-22T14:17:19Z,CLOSED,False,2,2,1,https://github.com/westor7,Fixed an issue when TOPICLEN should be AWAYLEN,1,[],https://github.com/unrealircd/unrealircd/pull/52,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/52#issuecomment-217802818,Renamed the TOPICLEN into AWAYLEN to have the correct value.,Hmm.. does this even compile? I don't see AWAYLEN being defined in src/ or include/,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,52,2016-03-19T13:31:13Z,2016-05-22T14:17:19Z,2016-05-22T14:17:19Z,CLOSED,False,2,2,1,https://github.com/westor7,Fixed an issue when TOPICLEN should be AWAYLEN,1,[],https://github.com/unrealircd/unrealircd/pull/52,https://github.com/syzop,3,https://github.com/unrealircd/unrealircd/pull/52#issuecomment-220834841,Renamed the TOPICLEN into AWAYLEN to have the correct value.,Not important and PR creates a build failure. Closing...,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,53,2016-04-24T22:11:35Z,2016-05-22T14:13:22Z,2016-05-22T14:16:16Z,CLOSED,False,5,1,1,https://github.com/SketchNI,Update m_join.c,2,[],https://github.com/unrealircd/unrealircd/pull/53,https://github.com/SketchNI,1,https://github.com/unrealircd/unrealircd/pull/53,Line #454 sends as a notice rather than text.,Line #454 sends as a notice rather than text.,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,53,2016-04-24T22:11:35Z,2016-05-22T14:13:22Z,2016-05-22T14:16:16Z,CLOSED,False,5,1,1,https://github.com/SketchNI,Update m_join.c,2,[],https://github.com/unrealircd/unrealircd/pull/53,https://github.com/jlu5,2,https://github.com/unrealircd/unrealircd/pull/53#issuecomment-214051353,Line #454 sends as a notice rather than text.,"The numerics for ""No such channel"" and others are defined by RFC 1459: https://www.alien.net.au/irc/irc2numerics.html. Removing them is going to subtly break bots and clients depending on standardized behaviour. Whoops, I may have misread",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,53,2016-04-24T22:11:35Z,2016-05-22T14:13:22Z,2016-05-22T14:16:16Z,CLOSED,False,5,1,1,https://github.com/SketchNI,Update m_join.c,2,[],https://github.com/unrealircd/unrealircd/pull/53,https://github.com/SketchNI,3,https://github.com/unrealircd/unrealircd/pull/53#issuecomment-214053191,Line #454 sends as a notice rather than text.,"A little bit. 😛
Basically what I've done is the difference between:
#chan Channel is forbidden: No channels can be created.
and
[11:04:10pm] -example.net- *** Can not join #chan: No channels can be created.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,53,2016-04-24T22:11:35Z,2016-05-22T14:13:22Z,2016-05-22T14:16:16Z,CLOSED,False,5,1,1,https://github.com/SketchNI,Update m_join.c,2,[],https://github.com/unrealircd/unrealircd/pull/53,https://github.com/syzop,4,https://github.com/unrealircd/unrealircd/pull/53#issuecomment-220834648,Line #454 sends as a notice rather than text.,"The general idea is to use more numerics and less notices, this so clients can interpret the text and show things in a better way. I understand you're doing things in the users best interest but this change would do the opposite, making it harder. So I'm afraid this change won't be accepted.
I did another change though, I changed the ""is forbidden"" to ""cannot join channel"", so it's now:
/* 448  ERR_FORBIDDENCHANNEL */ "":%s 448 %s %s :Cannot join channel: %s"",
Which seems more appropriate. Especially for the case you suggested (denying all channels except a few).",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,54,2016-04-27T18:21:01Z,2016-04-28T17:04:05Z,2016-04-29T15:10:54Z,CLOSED,False,68,0,1,https://github.com/SketchNI,Update curl-ca-bundle.crt,1,[],https://github.com/unrealircd/unrealircd/pull/54,https://github.com/SketchNI,1,https://github.com/unrealircd/unrealircd/pull/54,Add in Lets Encrypt Authority. This is needed for remote includes (at least) when a webserver uses Lets Encrypt certificates.,Add in Lets Encrypt Authority. This is needed for remote includes (at least) when a webserver uses Lets Encrypt certificates.,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,54,2016-04-27T18:21:01Z,2016-04-28T17:04:05Z,2016-04-29T15:10:54Z,CLOSED,False,68,0,1,https://github.com/SketchNI,Update curl-ca-bundle.crt,1,[],https://github.com/unrealircd/unrealircd/pull/54,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/54#issuecomment-215347804,Add in Lets Encrypt Authority. This is needed for remote includes (at least) when a webserver uses Lets Encrypt certificates.,"Websites using Let's Encrypt certificates work fine with current ca bundle, but the site needs to configure the certificates correctly. That means: with the intermediate certificates (also called certificate chain or bundle). This is because the Let's Encrypt certificate is cross-signed with an IdentTrust certificate, and this latter is present in the CA bundle we ship (and many browsers, for that matter). See https://letsencrypt.org/certificates/ for more technical information if it interests you.
You can check yourself via something like:
wget --ca-certificate=/home/xx/unrealircd/conf/ssl/curl-ca-bundle.crt -O /dev/null https://letsencrypt.org/certificates/
Which succeeds with UnrealIRCd 4.0.3's CA bundle.
Apparently you are having problems with some site that uses Let's Encrypt? You can use https://www.sslshopper.com/ssl-checker.html to check the site to debug the problem. You will probably see it's missing an intermediate certificate. (How to fix that is beyond this pull request but you should find plenty of information on the internet about it)",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,54,2016-04-27T18:21:01Z,2016-04-28T17:04:05Z,2016-04-29T15:10:54Z,CLOSED,False,68,0,1,https://github.com/SketchNI,Update curl-ca-bundle.crt,1,[],https://github.com/unrealircd/unrealircd/pull/54,https://github.com/SketchNI,3,https://github.com/unrealircd/unrealircd/pull/54#issuecomment-215495971,Add in Lets Encrypt Authority. This is needed for remote includes (at least) when a webserver uses Lets Encrypt certificates.,"Yep, it was a missing intermediate cert. I'll close the PR.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,55,2016-05-09T04:33:51Z,2016-05-09T08:06:30Z,2016-05-09T13:48:38Z,CLOSED,False,15,13,4,https://github.com/jlu5,"Fix typos (""success"" instead of ""succes"")",1,[],https://github.com/unrealircd/unrealircd/pull/55,https://github.com/jlu5,1,https://github.com/unrealircd/unrealircd/pull/55,Original patch by @theRoda. Closes #41.,Original patch by @theRoda. Closes #41.,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,55,2016-05-09T04:33:51Z,2016-05-09T08:06:30Z,2016-05-09T13:48:38Z,CLOSED,False,15,13,4,https://github.com/jlu5,"Fix typos (""success"" instead of ""succes"")",1,[],https://github.com/unrealircd/unrealircd/pull/55,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/55#issuecomment-217800982,Original patch by @theRoda. Closes #41.,"I've applied your patch, except for the changes to Changes.old / Changes.older since I don't think we should edit these anymore.
Done (64839a6). Thanks for the patch!",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,56,2016-05-22T04:54:04Z,2016-05-22T14:01:36Z,2016-05-22T14:01:36Z,MERGED,True,16,104,12,https://github.com/dboyz,"Multiple improvements - Resolves #2549, #3691 and many more",4,[],https://github.com/unrealircd/unrealircd/pull/56,https://github.com/dboyz,1,https://github.com/unrealircd/unrealircd/pull/56,"Also, remaining Htm codes has been removed in this PR","Also, remaining Htm codes has been removed in this PR",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,57,2016-08-14T03:21:25Z,2016-10-01T09:50:57Z,2016-10-01T09:50:57Z,MERGED,True,6,0,1,https://github.com/binki,Add editor and ./autogen.sh-generated files to .gitignore.,1,[],https://github.com/unrealircd/unrealircd/pull/57,https://github.com/binki,1,https://github.com/unrealircd/unrealircd/pull/57,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,58,2016-08-17T05:50:50Z,2018-09-16T14:04:21Z,2018-09-16T14:04:21Z,CLOSED,False,26,16,6,https://github.com/binki,"Use localstatedir instead of datadir for tunefile, etc.",1,[],https://github.com/unrealircd/unrealircd/pull/58,https://github.com/binki,1,https://github.com/unrealircd/unrealircd/pull/58,"datadir is normally /usr/share and specifies the location of files
that are never modified. localstatedir is normally /var/lib and
where you are supposed to place files which should be modified.
This change moves slightly towards doing directories how one
should when using autoconf and uses the existing --localstatedir
option, removing the redundant and misused --with-datadir.
The change should be transparent to anyone using ./Config. I have
also added --with-standard-dirs which would give one directly
invoking ./configure and passing --localstatedir the results
they expect (if you passed --localstatedir=/var/lib you’d expect
unrealircd to store its state in /var/lib/unrealircd).","datadir is normally /usr/share and specifies the location of files
that are never modified. localstatedir is normally /var/lib and
where you are supposed to place files which should be modified.
This change moves slightly towards doing directories how one
should when using autoconf and uses the existing --localstatedir
option, removing the redundant and misused --with-datadir.
The change should be transparent to anyone using ./Config. I have
also added --with-standard-dirs which would give one directly
invoking ./configure and passing --localstatedir the results
they expect (if you passed --localstatedir=/var/lib you’d expect
unrealircd to store its state in /var/lib/unrealircd).",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,58,2016-08-17T05:50:50Z,2018-09-16T14:04:21Z,2018-09-16T14:04:21Z,CLOSED,False,26,16,6,https://github.com/binki,"Use localstatedir instead of datadir for tunefile, etc.",1,[],https://github.com/unrealircd/unrealircd/pull/58,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/58#issuecomment-421770582,"datadir is normally /usr/share and specifies the location of files
that are never modified. localstatedir is normally /var/lib and
where you are supposed to place files which should be modified.
This change moves slightly towards doing directories how one
should when using autoconf and uses the existing --localstatedir
option, removing the redundant and misused --with-datadir.
The change should be transparent to anyone using ./Config. I have
also added --with-standard-dirs which would give one directly
invoking ./configure and passing --localstatedir the results
they expect (if you passed --localstatedir=/var/lib you’d expect
unrealircd to store its state in /var/lib/unrealircd).","Closing some old PR's.
It was an intentional decision not to use the standard dirs, for more information see the bugnote from June 2015, in particular under ""I tried the defaults""..: https://bugs.unrealircd.org/view.php?id=4361#c18407",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,59,2016-08-22T20:22:16Z,2018-09-16T14:08:55Z,2018-09-25T18:29:58Z,CLOSED,False,27,17,2,https://github.com/GottemHams,Added server count to the local server notice for /rehash -global,3,[],https://github.com/unrealircd/unrealircd/pull/59,https://github.com/GottemHams,1,https://github.com/unrealircd/unrealircd/pull/59,In regards to my bug report I figured I may as well give it a shot myself.,In regards to my bug report I figured I may as well give it a shot myself.,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,59,2016-08-22T20:22:16Z,2018-09-16T14:08:55Z,2018-09-25T18:29:58Z,CLOSED,False,27,17,2,https://github.com/GottemHams,Added server count to the local server notice for /rehash -global,3,[],https://github.com/unrealircd/unrealircd/pull/59,https://github.com/bonnedav,2,https://github.com/unrealircd/unrealircd/pull/59#issuecomment-392711733,In regards to my bug report I figured I may as well give it a shot myself.,Why has this not been merged yet?,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,59,2016-08-22T20:22:16Z,2018-09-16T14:08:55Z,2018-09-25T18:29:58Z,CLOSED,False,27,17,2,https://github.com/GottemHams,Added server count to the local server notice for /rehash -global,3,[],https://github.com/unrealircd/unrealircd/pull/59,https://github.com/syzop,3,https://github.com/unrealircd/unrealircd/pull/59#issuecomment-421771233,In regards to my bug report I figured I may as well give it a shot myself.,"If this would be changed to be a single patch that only does what https://bugs.unrealircd.org/view.php?id=4739 suggested then it can be merged (if it's good). Right now it consists of 3 patches with more unrelated than related changes :D
Actually I'm just going to close it, best to resubmit I think.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,59,2016-08-22T20:22:16Z,2018-09-16T14:08:55Z,2018-09-25T18:29:58Z,CLOSED,False,27,17,2,https://github.com/GottemHams,Added server count to the local server notice for /rehash -global,3,[],https://github.com/unrealircd/unrealircd/pull/59,https://github.com/GottemHams,4,https://github.com/unrealircd/unrealircd/pull/59#issuecomment-422070692,In regards to my bug report I figured I may as well give it a shot myself.,"Yeahhhhhh I think I made this pull request before I even wrote my first module, so. :D I'll redo it sometime. Also not to mention I set up my Sublime Text to strip trailing whitespace.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,59,2016-08-22T20:22:16Z,2018-09-16T14:08:55Z,2018-09-25T18:29:58Z,CLOSED,False,27,17,2,https://github.com/GottemHams,Added server count to the local server notice for /rehash -global,3,[],https://github.com/unrealircd/unrealircd/pull/59,https://github.com/GottemHams,5,https://github.com/unrealircd/unrealircd/pull/59#issuecomment-424451734,In regards to my bug report I figured I may as well give it a shot myself.,"Better yet, I'm going to let go of this ""patch"" entirely. :D I had to add a custom rehash -flag due to a certain module I'm using on our network and I simply added the functionality in there. =]",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,60,2016-08-25T10:50:20Z,2016-09-29T17:19:31Z,2016-09-29T17:19:31Z,CLOSED,False,9,3,3,https://github.com/capitaine-s,Generation and relative path of DH parameters,1,[],https://github.com/unrealircd/unrealircd/pull/60,https://github.com/capitaine-s,1,https://github.com/unrealircd/unrealircd/pull/60,I've reported it https://bugs.unrealircd.org/view.php?id=4738,I've reported it https://bugs.unrealircd.org/view.php?id=4738,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,60,2016-08-25T10:50:20Z,2016-09-29T17:19:31Z,2016-09-29T17:19:31Z,CLOSED,False,9,3,3,https://github.com/capitaine-s,Generation and relative path of DH parameters,1,[],https://github.com/unrealircd/unrealircd/pull/60,https://github.com/dboyz,2,https://github.com/unrealircd/unrealircd/pull/60#issuecomment-242362302,I've reported it https://bugs.unrealircd.org/view.php?id=4738,"Seems to be correct but I have not tested the code.
Thanks for the PR! 👍",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,60,2016-08-25T10:50:20Z,2016-09-29T17:19:31Z,2016-09-29T17:19:31Z,CLOSED,False,9,3,3,https://github.com/capitaine-s,Generation and relative path of DH parameters,1,[],https://github.com/unrealircd/unrealircd/pull/60,https://github.com/capitaine-s,3,https://github.com/unrealircd/unrealircd/pull/60#issuecomment-242688662,I've reported it https://bugs.unrealircd.org/view.php?id=4738,"I quickly tested with my current config, DH generated.
I don't know about any fresh default install.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,60,2016-08-25T10:50:20Z,2016-09-29T17:19:31Z,2016-09-29T17:19:31Z,CLOSED,False,9,3,3,https://github.com/capitaine-s,Generation and relative path of DH parameters,1,[],https://github.com/unrealircd/unrealircd/pull/60,https://github.com/syzop,4,https://github.com/unrealircd/unrealircd/pull/60#issuecomment-250532832,I've reported it https://bugs.unrealircd.org/view.php?id=4738,"Thanks, fixed! 603adb8",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,61,2016-09-11T04:02:28Z,2016-09-29T17:13:29Z,2016-09-29T17:13:29Z,CLOSED,False,6,8,1,https://github.com/binki,Fix ./Config SSL prmopt when previously nonempty for bug #4749.,1,[],https://github.com/unrealircd/unrealircd/pull/61,https://github.com/binki,1,https://github.com/unrealircd/unrealircd/pull/61,https://bugs.unrealircd.org/view.php?id=4749,https://bugs.unrealircd.org/view.php?id=4749,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,61,2016-09-11T04:02:28Z,2016-09-29T17:13:29Z,2016-09-29T17:13:29Z,CLOSED,False,6,8,1,https://github.com/binki,Fix ./Config SSL prmopt when previously nonempty for bug #4749.,1,[],https://github.com/unrealircd/unrealircd/pull/61,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/61#issuecomment-250531168,https://bugs.unrealircd.org/view.php?id=4749,"Thanks, fixed a7f98af",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,62,2016-09-15T00:37:08Z,2016-12-05T08:40:30Z,2016-12-05T08:40:30Z,MERGED,True,5,0,1,https://github.com/Adam-,m_svsmode.c: allow setting +d,1,[],https://github.com/unrealircd/unrealircd/pull/62,https://github.com/Adam-,1,https://github.com/unrealircd/unrealircd/pull/62,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,63,2016-12-07T01:02:08Z,2018-09-16T14:01:41Z,2018-09-16T17:19:07Z,CLOSED,False,4,0,2,https://github.com/Adam-,hunt_server: allow hunting servers by wildcard,1,[],https://github.com/unrealircd/unrealircd/pull/63,https://github.com/Adam-,1,https://github.com/unrealircd/unrealircd/pull/63,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,63,2016-12-07T01:02:08Z,2018-09-16T14:01:41Z,2018-09-16T17:19:07Z,CLOSED,False,4,0,2,https://github.com/Adam-,hunt_server: allow hunting servers by wildcard,1,[],https://github.com/unrealircd/unrealircd/pull/63,https://github.com/bonnedav,2,https://github.com/unrealircd/unrealircd/pull/63#issuecomment-392711093,,Why has this not been merged yet?,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,63,2016-12-07T01:02:08Z,2018-09-16T14:01:41Z,2018-09-16T17:19:07Z,CLOSED,False,4,0,2,https://github.com/Adam-,hunt_server: allow hunting servers by wildcard,1,[],https://github.com/unrealircd/unrealircd/pull/63,https://github.com/syzop,3,https://github.com/unrealircd/unrealircd/pull/63#issuecomment-421770190,,"Closing some old pull requests...
This was an intentional behavior change, see https://bugs.unrealircd.org/view.php?id=4482",True,{'CONFUSED': ['https://github.com/jlu5']}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,63,2016-12-07T01:02:08Z,2018-09-16T14:01:41Z,2018-09-16T17:19:07Z,CLOSED,False,4,0,2,https://github.com/Adam-,hunt_server: allow hunting servers by wildcard,1,[],https://github.com/unrealircd/unrealircd/pull/63,https://github.com/jlu5,4,https://github.com/unrealircd/unrealircd/pull/63#issuecomment-421798928,,"I respectfully disagree - I think this is a significant regression from 3.2, and many other IRCds I've messed with in the past support the same feature..",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,64,2016-12-07T13:19:44Z,2016-12-29T20:44:51Z,2016-12-29T20:44:52Z,MERGED,True,5,4,2,https://github.com/Adam-,"remove_unknown: don't send squits for unknown uids, don't leak server…",1,[],https://github.com/unrealircd/unrealircd/pull/64,https://github.com/Adam-,1,https://github.com/unrealircd/unrealircd/pull/64,… ips in quit msg,… ips in quit msg,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,65,2016-12-19T22:41:21Z,2016-12-27T18:40:22Z,2016-12-27T18:40:22Z,MERGED,True,16,13,3,https://github.com/Adam-,Fix delayjoin,1,[],https://github.com/unrealircd/unrealircd/pull/65,https://github.com/Adam-,1,https://github.com/unrealircd/unrealircd/pull/65,Some fixes to delayjoin to try and make it not send garbage at clients. I would recommend maybe removing the module entirely since it still doesn't really work.,Some fixes to delayjoin to try and make it not send garbage at clients. I would recommend maybe removing the module entirely since it still doesn't really work.,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,66,2016-12-22T01:56:19Z,2016-12-22T08:00:54Z,2016-12-22T08:10:37Z,MERGED,True,0,1,1,https://github.com/SadieCat,Remove 'gay' from the bad words list.,1,[],https://github.com/unrealircd/unrealircd/pull/66,https://github.com/SadieCat,1,https://github.com/unrealircd/unrealircd/pull/66,Cause this was an embarrassingly archaic view a decade ago never mind in 2016.,Cause this was an embarrassingly archaic view a decade ago never mind in 2016.,True,"{'LAUGH': ['https://github.com/GTAXL', 'https://github.com/darkgamer120'], 'THUMBS_UP': ['https://github.com/jlu5', 'https://github.com/DanielOaks']}"
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,66,2016-12-22T01:56:19Z,2016-12-22T08:00:54Z,2016-12-22T08:10:37Z,MERGED,True,0,1,1,https://github.com/SadieCat,Remove 'gay' from the bad words list.,1,[],https://github.com/unrealircd/unrealircd/pull/66,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/66#issuecomment-268739749,Cause this was an embarrassingly archaic view a decade ago never mind in 2016.,"The term ""gay"" is often used in a derogatory way (""gay this"", ""gay that""). I'm not sure much has changed in that way since 2003. I wish I could agree with you but I have my doubts, still seeing the term used that way from time to time. In any case, it sounds odd to censor the word when it may appear in a perfectly normal sentence. UnrealIRCd cannot guess the ""context"" of a conversation after all.
I'm going to remove the word from the list.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,67,2016-12-29T17:50:38Z,2016-12-29T20:40:41Z,2016-12-29T20:40:41Z,MERGED,True,3,1,1,https://github.com/netjester,Fix #0004826,1,[],https://github.com/unrealircd/unrealircd/pull/67,https://github.com/netjester,1,https://github.com/unrealircd/unrealircd/pull/67,"Fixes #0004826: ./unrealircd stop always says unrealircd.pid: No such file
https://bugs.unrealircd.org/view.php?id=4826","Fixes #0004826: ./unrealircd stop always says unrealircd.pid: No such file
https://bugs.unrealircd.org/view.php?id=4826",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,68,2017-07-06T06:13:34Z,2017-07-07T11:57:07Z,2017-07-07T14:23:01Z,MERGED,True,14,10,1,https://github.com/binki,Support --without-privatelibdir for packagers.,2,[],https://github.com/unrealircd/unrealircd/pull/68,https://github.com/binki,1,https://github.com/unrealircd/unrealircd/pull/68,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,68,2017-07-06T06:13:34Z,2017-07-07T11:57:07Z,2017-07-07T14:23:01Z,MERGED,True,14,10,1,https://github.com/binki,Support --without-privatelibdir for packagers.,2,[],https://github.com/unrealircd/unrealircd/pull/68,https://github.com/binki,2,https://github.com/unrealircd/unrealircd/pull/68#issuecomment-313306744,,"I’m leaving running ./autogen.sh up to you, @syzop.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,69,2017-07-06T06:21:07Z,2017-07-07T11:57:28Z,2017-07-07T14:21:09Z,MERGED,True,1,0,1,https://github.com/binki,Add src/Makefile (built) to .gitignore,1,[],https://github.com/unrealircd/unrealircd/pull/69,https://github.com/binki,1,https://github.com/unrealircd/unrealircd/pull/69,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,70,2018-04-29T02:29:08Z,2018-04-29T03:01:30Z,2018-04-29T03:01:35Z,CLOSED,False,0,6,1,https://github.com/tmcarthur,Re-enable OS X support,1,[],https://github.com/unrealircd/unrealircd/pull/70,https://github.com/tmcarthur,1,https://github.com/unrealircd/unrealircd/pull/70,Fixed rake commands to use bundle exec.,Fixed rake commands to use bundle exec.,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,71,2018-04-29T03:35:52Z,2018-09-16T14:05:41Z,2018-09-16T14:05:42Z,CLOSED,False,0,6,1,https://github.com/tmcarthur,Enable tests for OS X builds,1,[],https://github.com/unrealircd/unrealircd/pull/71,https://github.com/tmcarthur,1,https://github.com/unrealircd/unrealircd/pull/71,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,71,2018-04-29T03:35:52Z,2018-09-16T14:05:41Z,2018-09-16T14:05:42Z,CLOSED,False,0,6,1,https://github.com/tmcarthur,Enable tests for OS X builds,1,[],https://github.com/unrealircd/unrealircd/pull/71,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/71#issuecomment-421770759,,"Closing some old PR's.
I'm just going to close this. The alternative was to keep it lingering around until it actually works, but it has been 6 months now, so.. ;)",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,72,2018-05-13T12:34:47Z,2018-09-16T14:00:08Z,2018-09-16T14:00:09Z,CLOSED,False,1,1,1,https://github.com/PeGaSuS-Coder,Update operclass.default.conf,1,[],https://github.com/unrealircd/unrealircd/pull/72,https://github.com/PeGaSuS-Coder,1,https://github.com/unrealircd/unrealircd/pull/72,"IMHO, I think that restart and die privileges should be enabled by default to network administrators. This fix aims to correct that.
If, however, you feel that things should be kept as is, feel free to ignore this PR.
Cheers,
The_Myth","IMHO, I think that restart and die privileges should be enabled by default to network administrators. This fix aims to correct that.
If, however, you feel that things should be kept as is, feel free to ignore this PR.
Cheers,
The_Myth",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,72,2018-05-13T12:34:47Z,2018-09-16T14:00:08Z,2018-09-16T14:00:09Z,CLOSED,False,1,1,1,https://github.com/PeGaSuS-Coder,Update operclass.default.conf,1,[],https://github.com/unrealircd/unrealircd/pull/72,https://github.com/bonnedav,2,https://github.com/unrealircd/unrealircd/pull/72#issuecomment-391519976,"IMHO, I think that restart and die privileges should be enabled by default to network administrators. This fix aims to correct that.
If, however, you feel that things should be kept as is, feel free to ignore this PR.
Cheers,
The_Myth","I think netadmins should have all server permissions, by changing the line to just server;.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,72,2018-05-13T12:34:47Z,2018-09-16T14:00:08Z,2018-09-16T14:00:09Z,CLOSED,False,1,1,1,https://github.com/PeGaSuS-Coder,Update operclass.default.conf,1,[],https://github.com/unrealircd/unrealircd/pull/72,https://github.com/syzop,3,https://github.com/unrealircd/unrealircd/pull/72#issuecomment-421769967,"IMHO, I think that restart and die privileges should be enabled by default to network administrators. This fix aims to correct that.
If, however, you feel that things should be kept as is, feel free to ignore this PR.
Cheers,
The_Myth","Closing some old PR's...
This was discussed and rejected in https://bugs.unrealircd.org/view.php?id=4512
For more information, see that bug report.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,73,2018-09-15T21:36:51Z,2018-09-16T06:12:27Z,2018-09-16T19:26:37Z,MERGED,True,6,0,1,https://github.com/digitalcircuit,m_message: Also strip monospace/strikethrough,1,[],https://github.com/unrealircd/unrealircd/pull/73,https://github.com/digitalcircuit,1,https://github.com/unrealircd/unrealircd/pull/73,"In short

Add ASCII for strikethrough (0x1E, 30) and monospace (0x11, 17) to _StripControlCodes function

Fixes those formatting characters not being filtered when nocodes module is loaded
Based on the IRC Formatting documentation and implementation in IRC clients






Criteria
Rank
Reason




Impact
★☆☆ 1/3
Addresses rarely-used formatting codes not being filtered


Risk
★☆☆ 1/3
Might filter more than intended


Intrusiveness
★☆☆ 1/3
Small set of changes, shouldn't interfere with other pull requests



Testing
Steps

Set up UnrealIRCd
Load the nocodes module
Connect with a monospace/strikethrough-capable client, join #test

Many options available, including Quassel IRC


Connect another monospace/strikethrough-capable client, join #test

Also used Quasseldroid, since Quassel desktop currently only supports displaying


Send a message with monospace/strikethrough formatting
Set channel mode +S
Send another message with monospace/strikethrough formatting

Before
Formatting characters get through regardless of +S.
After


--> dcircuit_observe (quassel@Clk-72C7A769) has joined #test
*** Mode #test + by irc.foonet.com
* Channel #test created on 2018-09-15 21:14:16 UTC
<@digitalcircuit> Test monospace, strike through with strip off
*** Mode #test +S by digitalcircuit
<@digitalcircuit> Test monospace, strike through with strip on

In the above, I've simulated strikethrough in Markdown using bold.","In short

Add ASCII for strikethrough (0x1E, 30) and monospace (0x11, 17) to _StripControlCodes function

Fixes those formatting characters not being filtered when nocodes module is loaded
Based on the IRC Formatting documentation and implementation in IRC clients






Criteria
Rank
Reason




Impact
★☆☆ 1/3
Addresses rarely-used formatting codes not being filtered


Risk
★☆☆ 1/3
Might filter more than intended


Intrusiveness
★☆☆ 1/3
Small set of changes, shouldn't interfere with other pull requests



Testing
Steps

Set up UnrealIRCd
Load the nocodes module
Connect with a monospace/strikethrough-capable client, join #test

Many options available, including Quassel IRC


Connect another monospace/strikethrough-capable client, join #test

Also used Quasseldroid, since Quassel desktop currently only supports displaying


Send a message with monospace/strikethrough formatting
Set channel mode +S
Send another message with monospace/strikethrough formatting

Before
Formatting characters get through regardless of +S.
After


--> dcircuit_observe (quassel@Clk-72C7A769) has joined #test
*** Mode #test + by irc.foonet.com
* Channel #test created on 2018-09-15 21:14:16 UTC
<@digitalcircuit> Test monospace, strike through with strip off
*** Mode #test +S by digitalcircuit
<@digitalcircuit> Test monospace, strike through with strip on

In the above, I've simulated strikethrough in Markdown using bold.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,74,2018-09-22T17:53:36Z,2018-09-23T06:21:58Z,2018-09-23T06:21:58Z,CLOSED,False,1,1,1,https://github.com/ktrace,Fix for GCC > 7.3 building,1,[],https://github.com/unrealircd/unrealircd/pull/74,https://github.com/ktrace,1,https://github.com/unrealircd/unrealircd/pull/74,"source of patch:
calculatelinux/calculate@1886e7a","source of patch:
calculatelinux/calculate@1886e7a",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,74,2018-09-22T17:53:36Z,2018-09-23T06:21:58Z,2018-09-23T06:21:58Z,CLOSED,False,1,1,1,https://github.com/ktrace,Fix for GCC > 7.3 building,1,[],https://github.com/unrealircd/unrealircd/pull/74,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/74#issuecomment-423794806,"source of patch:
calculatelinux/calculate@1886e7a","""wrong branch, use #75 instead"" (3.2.x is EOL)",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,75,2018-09-22T20:11:47Z,2018-09-28T14:31:15Z,2018-09-28T14:32:22Z,CLOSED,False,1,1,1,https://github.com/ktrace,Fix for GCC > 7.3 building,1,[],https://github.com/unrealircd/unrealircd/pull/75,https://github.com/ktrace,1,https://github.com/unrealircd/unrealircd/pull/75,"source of patch:
calculatelinux/calculate@1886e7a","source of patch:
calculatelinux/calculate@1886e7a",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,75,2018-09-22T20:11:47Z,2018-09-28T14:31:15Z,2018-09-28T14:32:22Z,CLOSED,False,1,1,1,https://github.com/ktrace,Fix for GCC > 7.3 building,1,[],https://github.com/unrealircd/unrealircd/pull/75,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/75#issuecomment-423794869,"source of patch:
calculatelinux/calculate@1886e7a","Hmm, what error are you seeing with GCC>7.3 on UnrealIRCd 4.x that needs to be fixed?",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,75,2018-09-22T20:11:47Z,2018-09-28T14:31:15Z,2018-09-28T14:32:22Z,CLOSED,False,1,1,1,https://github.com/ktrace,Fix for GCC > 7.3 building,1,[],https://github.com/unrealircd/unrealircd/pull/75,https://github.com/syzop,3,https://github.com/unrealircd/unrealircd/pull/75#issuecomment-425454560,"source of patch:
calculatelinux/calculate@1886e7a",I think this can be closed. The fix is unnecessary for 4.x. From what I read on IRC this was an attempt to get a fix backported to 3.2.x - which is end of life for about 2 years so that won't be done.,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,76,2018-09-30T09:28:44Z,2018-11-18T17:21:34Z,2018-11-18T17:21:35Z,MERGED,True,2,0,1,https://github.com/PeGaSuS-Coder,Update help.conf,4,[],https://github.com/unrealircd/unrealircd/pull/76,https://github.com/PeGaSuS-Coder,1,https://github.com/unrealircd/unrealircd/pull/76,"Since privedeaf is already enabled by default, I believe it makes sense to put it in there.
Cheers","Since privedeaf is already enabled by default, I believe it makes sense to put it in there.
Cheers",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,77,2018-11-18T15:49:11Z,2018-11-18T16:00:56Z,2018-11-18T16:01:08Z,MERGED,True,2,1,1,https://github.com/PeGaSuS-Coder,Update antimixedutf8.c,2,[],https://github.com/unrealircd/unrealircd/pull/77,https://github.com/PeGaSuS-Coder,1,https://github.com/unrealircd/unrealircd/pull/77,Proper credits fixing 😁,Proper credits fixing 😁,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,77,2018-11-18T15:49:11Z,2018-11-18T16:00:56Z,2018-11-18T16:01:08Z,MERGED,True,2,1,1,https://github.com/PeGaSuS-Coder,Update antimixedutf8.c,2,[],https://github.com/unrealircd/unrealircd/pull/77,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/77#issuecomment-439703492,Proper credits fixing 😁,Thanks :),True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,78,2018-12-13T19:05:29Z,2018-12-15T18:53:33Z,2018-12-15T18:53:34Z,MERGED,True,11,4,1,https://github.com/k4bek4be,fix IPv6 DNS blacklist,1,[],https://github.com/unrealircd/unrealircd/pull/78,https://github.com/k4bek4be,1,https://github.com/unrealircd/unrealircd/pull/78,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,79,2019-02-01T17:18:47Z,2020-01-01T11:44:01Z,2020-01-01T11:44:02Z,CLOSED,False,149,34,1,https://github.com/k4bek4be," Add ""/BLCHECK ip"" command to manually check blacklists",6,[],https://github.com/unrealircd/unrealircd/pull/79,https://github.com/k4bek4be,1,https://github.com/unrealircd/unrealircd/pull/79,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,79,2019-02-01T17:18:47Z,2020-01-01T11:44:01Z,2020-01-01T11:44:02Z,CLOSED,False,149,34,1,https://github.com/k4bek4be," Add ""/BLCHECK ip"" command to manually check blacklists",6,[],https://github.com/unrealircd/unrealircd/pull/79,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/79#issuecomment-570046487,,"The idea itself is fine but I don't like the way it is implemented. Sorry.
I can have a go at this another time. I suggest you don't work at it in the meantime.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,80,2019-02-10T11:58:18Z,2019-05-14T05:26:11Z,2019-05-14T05:26:11Z,CLOSED,False,5,0,1,https://github.com/PeGaSuS-Coder,Update example.conf,1,[],https://github.com/unrealircd/unrealircd/pull/80,https://github.com/PeGaSuS-Coder,1,https://github.com/unrealircd/unrealircd/pull/80,"Added set::modes-on-join ""+nt"" to the current configuration to help users to keep their channel with sane defaults, when joining a non registered channel
Added set::restrict-usermodes ""x"" as being able to disable the default cloaking is a security risk
Changed set::allow-userhost-change to force-rejoin since the default always may lead to clients desynch
Added set::cloak-method ip since that way whe can still have the XXX.YYY.ZZZ.IP cloak without the need to disable DNS resolving
Added set::options::identd-check since it barely interfere with user connection and is helpful for public services that are properly configured, such as ZNC
That's all for now xD
Regards,
PeGaSuS","Added set::modes-on-join ""+nt"" to the current configuration to help users to keep their channel with sane defaults, when joining a non registered channel
Added set::restrict-usermodes ""x"" as being able to disable the default cloaking is a security risk
Changed set::allow-userhost-change to force-rejoin since the default always may lead to clients desynch
Added set::cloak-method ip since that way whe can still have the XXX.YYY.ZZZ.IP cloak without the need to disable DNS resolving
Added set::options::identd-check since it barely interfere with user connection and is helpful for public services that are properly configured, such as ZNC
That's all for now xD
Regards,
PeGaSuS",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,80,2019-02-10T11:58:18Z,2019-05-14T05:26:11Z,2019-05-14T05:26:11Z,CLOSED,False,5,0,1,https://github.com/PeGaSuS-Coder,Update example.conf,1,[],https://github.com/unrealircd/unrealircd/pull/80,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/80#issuecomment-492083644,"Added set::modes-on-join ""+nt"" to the current configuration to help users to keep their channel with sane defaults, when joining a non registered channel
Added set::restrict-usermodes ""x"" as being able to disable the default cloaking is a security risk
Changed set::allow-userhost-change to force-rejoin since the default always may lead to clients desynch
Added set::cloak-method ip since that way whe can still have the XXX.YYY.ZZZ.IP cloak without the need to disable DNS resolving
Added set::options::identd-check since it barely interfere with user connection and is helpful for public services that are properly configured, such as ZNC
That's all for now xD
Regards,
PeGaSuS",Moved to https://bugs.unrealircd.org/view.php?id=5274,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,81,2019-04-20T10:38:41Z,2019-05-04T12:45:34Z,2019-05-04T12:45:34Z,MERGED,True,71,51,1,https://github.com/PeGaSuS-Coder,Helpop update,2,[],https://github.com/unrealircd/unrealircd/pull/81,https://github.com/PeGaSuS-Coder,1,https://github.com/unrealircd/unrealircd/pull/81,"Added soft actions help on /helpop gline and /helpop kline.
Changed *:Line(s) to be *-Line(s) which are more consistent with the new IRC messages","Added soft actions help on /helpop gline and /helpop kline.
Changed *:Line(s) to be *-Line(s) which are more consistent with the new IRC messages",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,81,2019-04-20T10:38:41Z,2019-05-04T12:45:34Z,2019-05-04T12:45:34Z,MERGED,True,71,51,1,https://github.com/PeGaSuS-Coder,Helpop update,2,[],https://github.com/unrealircd/unrealircd/pull/81,https://github.com/PeGaSuS-Coder,2,https://github.com/unrealircd/unrealircd/pull/81#issuecomment-489322756,"Added soft actions help on /helpop gline and /helpop kline.
Changed *:Line(s) to be *-Line(s) which are more consistent with the new IRC messages",And what about this one? :D,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,82,2019-05-04T11:24:19Z,2019-05-04T12:13:19Z,2019-05-04T12:13:20Z,CLOSED,False,7,3,1,https://github.com/PeGaSuS-Coder,Update help.conf,2,[],https://github.com/unrealircd/unrealircd/pull/82,https://github.com/PeGaSuS-Coder,1,https://github.com/unrealircd/unrealircd/pull/82,Added missing encryptation methods and fixed a typo,Added missing encryptation methods and fixed a typo,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,82,2019-05-04T11:24:19Z,2019-05-04T12:13:19Z,2019-05-04T12:13:20Z,CLOSED,False,7,3,1,https://github.com/PeGaSuS-Coder,Update help.conf,2,[],https://github.com/unrealircd/unrealircd/pull/82,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/82#issuecomment-489321601,Added missing encryptation methods and fixed a typo,"Seems our changes crossed each other. Already updated in git via commit b0d3476. Thanks for the report on IRC, and the PR, though!",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,83,2019-09-17T12:03:48Z,2019-11-17T18:21:35Z,2019-11-17T18:21:36Z,MERGED,True,1,1,1,https://github.com/westor7,Fixed a typo in servicebot module description,1,[],https://github.com/unrealircd/unrealircd/pull/83,https://github.com/westor7,1,https://github.com/unrealircd/unrealircd/pull/83,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,84,2019-11-03T19:51:10Z,2019-11-11T08:13:54Z,2019-11-11T08:14:18Z,CLOSED,False,1,1,1,https://github.com/PeGaSuS-Coder,Update RELEASE-NOTES.md,1,[],https://github.com/unrealircd/unrealircd/pull/84,https://github.com/PeGaSuS-Coder,1,https://github.com/unrealircd/unrealircd/pull/84,"Let's not forget git users, heh! xD","Let's not forget git users, heh! xD",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,84,2019-11-03T19:51:10Z,2019-11-11T08:13:54Z,2019-11-11T08:14:18Z,CLOSED,False,1,1,1,https://github.com/PeGaSuS-Coder,Update RELEASE-NOTES.md,1,[],https://github.com/unrealircd/unrealircd/pull/84,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/84#issuecomment-552337738,"Let's not forget git users, heh! xD","Thanks, I appreciate the feedback.
I think, however, that if you run git then you are smart enough to understand the original phrase that you should run at least version X. Changing the sentence to include those few % users that run git (and which, as said, I think already understand) also has the disadvantage of making the sentence unnecessary long.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,85,2019-11-06T22:08:35Z,2019-11-11T09:03:13Z,2019-11-13T16:25:28Z,CLOSED,False,4,4,2,https://github.com/AlexandraBryant,Enhance Windows Security: Changes to unrealsvc.c and gui.c which make it possible to run Unreal…,1,[],https://github.com/unrealircd/unrealircd/pull/85,https://github.com/AlexandraBryant,1,https://github.com/unrealircd/unrealircd/pull/85,"Makes it possible to run UnrealIRCd as a service on Windows with non-admin permissions, in line with the official documentation which recommends Linux users NOT run as Root.
unrealsvc.c
•	Adjusted service access level from SERVICE_ALL_ACCESS to SERVICE_CHANGE_CONFIG
•	Adjusted the account to log on as to “NT AUTHORITY\\NetworkService”
gui.c
•	Adjusted the access level to the service control manager from GENERIC_EXECUTE to SC_MANAGER_CONNECT
Expands on the solution where another user encountered this problem in the past. Now no workarounds or 'heinously complex' permissions would be needed, it's simply runs as Network Service.","Makes it possible to run UnrealIRCd as a service on Windows with non-admin permissions, in line with the official documentation which recommends Linux users NOT run as Root.
unrealsvc.c
•	Adjusted service access level from SERVICE_ALL_ACCESS to SERVICE_CHANGE_CONFIG
•	Adjusted the account to log on as to “NT AUTHORITY\\NetworkService”
gui.c
•	Adjusted the access level to the service control manager from GENERIC_EXECUTE to SC_MANAGER_CONNECT
Expands on the solution where another user encountered this problem in the past. Now no workarounds or 'heinously complex' permissions would be needed, it's simply runs as Network Service.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,85,2019-11-06T22:08:35Z,2019-11-11T09:03:13Z,2019-11-13T16:25:28Z,CLOSED,False,4,4,2,https://github.com/AlexandraBryant,Enhance Windows Security: Changes to unrealsvc.c and gui.c which make it possible to run Unreal…,1,[],https://github.com/unrealircd/unrealircd/pull/85,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/85#issuecomment-551151029,"Makes it possible to run UnrealIRCd as a service on Windows with non-admin permissions, in line with the official documentation which recommends Linux users NOT run as Root.
unrealsvc.c
•	Adjusted service access level from SERVICE_ALL_ACCESS to SERVICE_CHANGE_CONFIG
•	Adjusted the account to log on as to “NT AUTHORITY\\NetworkService”
gui.c
•	Adjusted the access level to the service control manager from GENERIC_EXECUTE to SC_MANAGER_CONNECT
Expands on the solution where another user encountered this problem in the past. Now no workarounds or 'heinously complex' permissions would be needed, it's simply runs as Network Service.","Right, so this would be a patch for https://bugs.unrealircd.org/view.php?id=2330 ?
I will take a look at it in the next few days. If it works well then I'll put it in. Thanks!",True,{'HOORAY': ['https://github.com/AlexandraBryant']}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,85,2019-11-06T22:08:35Z,2019-11-11T09:03:13Z,2019-11-13T16:25:28Z,CLOSED,False,4,4,2,https://github.com/AlexandraBryant,Enhance Windows Security: Changes to unrealsvc.c and gui.c which make it possible to run Unreal…,1,[],https://github.com/unrealircd/unrealircd/pull/85,https://github.com/syzop,3,https://github.com/unrealircd/unrealircd/pull/85#issuecomment-552353425,"Makes it possible to run UnrealIRCd as a service on Windows with non-admin permissions, in line with the official documentation which recommends Linux users NOT run as Root.
unrealsvc.c
•	Adjusted service access level from SERVICE_ALL_ACCESS to SERVICE_CHANGE_CONFIG
•	Adjusted the account to log on as to “NT AUTHORITY\\NetworkService”
gui.c
•	Adjusted the access level to the service control manager from GENERIC_EXECUTE to SC_MANAGER_CONNECT
Expands on the solution where another user encountered this problem in the past. Now no workarounds or 'heinously complex' permissions would be needed, it's simply runs as Network Service.","Thanks! Done in UnrealIRCd 5.
See https://bugs.unrealircd.org/view.php?id=2330 for the entire story :).",True,{'ROCKET': ['https://github.com/AlexandraBryant']}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,85,2019-11-06T22:08:35Z,2019-11-11T09:03:13Z,2019-11-13T16:25:28Z,CLOSED,False,4,4,2,https://github.com/AlexandraBryant,Enhance Windows Security: Changes to unrealsvc.c and gui.c which make it possible to run Unreal…,1,[],https://github.com/unrealircd/unrealircd/pull/85,https://github.com/AlexandraBryant,4,https://github.com/unrealircd/unrealircd/pull/85#issuecomment-553156127,"Makes it possible to run UnrealIRCd as a service on Windows with non-admin permissions, in line with the official documentation which recommends Linux users NOT run as Root.
unrealsvc.c
•	Adjusted service access level from SERVICE_ALL_ACCESS to SERVICE_CHANGE_CONFIG
•	Adjusted the account to log on as to “NT AUTHORITY\\NetworkService”
gui.c
•	Adjusted the access level to the service control manager from GENERIC_EXECUTE to SC_MANAGER_CONNECT
Expands on the solution where another user encountered this problem in the past. Now no workarounds or 'heinously complex' permissions would be needed, it's simply runs as Network Service.","Hi @syzop, would it be possible to include the security patch in the 42 branch?",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,85,2019-11-06T22:08:35Z,2019-11-11T09:03:13Z,2019-11-13T16:25:28Z,CLOSED,False,4,4,2,https://github.com/AlexandraBryant,Enhance Windows Security: Changes to unrealsvc.c and gui.c which make it possible to run Unreal…,1,[],https://github.com/unrealircd/unrealircd/pull/85,https://github.com/syzop,5,https://github.com/unrealircd/unrealircd/pull/85#issuecomment-553478973,"Makes it possible to run UnrealIRCd as a service on Windows with non-admin permissions, in line with the official documentation which recommends Linux users NOT run as Root.
unrealsvc.c
•	Adjusted service access level from SERVICE_ALL_ACCESS to SERVICE_CHANGE_CONFIG
•	Adjusted the account to log on as to “NT AUTHORITY\\NetworkService”
gui.c
•	Adjusted the access level to the service control manager from GENERIC_EXECUTE to SC_MANAGER_CONNECT
Expands on the solution where another user encountered this problem in the past. Now no workarounds or 'heinously complex' permissions would be needed, it's simply runs as Network Service.","With UnrealIRCd 5 just around the corner (this year, so within 7 weeks) I won't be adding this to 4.2.x. The final patch is a lot longer and has a bit more impact. I don't want to risk doing that in the current stable tree. Also, this is a security enhancement, not so much as a fix for an unintentional mistake (even apache runs as SYSTEM on Windows by default). It's our policy to only do bug fixes in the 4.2.x branch since May 2019. See https://www.unrealircd.org/docs/UnrealIRCd_releases
So yeah, got to wait for UnrealIRCd 5, but that will be relatively soon! :)
Hope you understand.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,86,2019-11-16T21:29:14Z,2019-11-17T18:21:00Z,2019-11-17T18:21:00Z,MERGED,True,3,2,1,https://github.com/PeGaSuS-Coder,Update help.conf,1,[],https://github.com/unrealircd/unrealircd/pull/86,https://github.com/PeGaSuS-Coder,1,https://github.com/unrealircd/unrealircd/pull/86,"Added the new floodtype r to the list of types and added the d (drop) action to the floodtypes m and t. As I'm unsure about floodtype c I decided to not touch it.
Cheers!","Added the new floodtype r to the list of types and added the d (drop) action to the floodtypes m and t. As I'm unsure about floodtype c I decided to not touch it.
Cheers!",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,87,2020-01-01T13:20:24Z,2020-01-05T08:57:30Z,2020-02-09T07:20:57Z,MERGED,True,16,8,3,https://github.com/k4bek4be,Two quick fixes with the module manager.,1,[],https://github.com/unrealircd/unrealircd/pull/87,https://github.com/k4bek4be,1,https://github.com/unrealircd/unrealircd/pull/87,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,87,2020-01-01T13:20:24Z,2020-01-05T08:57:30Z,2020-02-09T07:20:57Z,MERGED,True,16,8,3,https://github.com/k4bek4be,Two quick fixes with the module manager.,1,[],https://github.com/unrealircd/unrealircd/pull/87,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/87#issuecomment-570799278,,"I'm a bit unsure whether to commit this. You updated it so the errors/warnings match the line numbers in the source file. That is logical if you think one way.
Right now it prints out line numbers of within that configuration block, and that block is printed out under it, so when it says line 3 there it is line 3 there. That is logical in another way.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,87,2020-01-01T13:20:24Z,2020-01-05T08:57:30Z,2020-02-09T07:20:57Z,MERGED,True,16,8,3,https://github.com/k4bek4be,Two quick fixes with the module manager.,1,[],https://github.com/unrealircd/unrealircd/pull/87,https://github.com/k4bek4be,3,https://github.com/unrealircd/unrealircd/pull/87#issuecomment-570800871,,"My point is that the editors i use to edit sources usually display line numbers in a file, and the command dumping the config block does not. And i, encountering a missing ; character, hadn't thought about counting the lines manually there, instead repeatedly modifying a (good) line in the module source to see what's going on, only to figure out the problem is way below.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,87,2020-01-01T13:20:24Z,2020-01-05T08:57:30Z,2020-02-09T07:20:57Z,MERGED,True,16,8,3,https://github.com/k4bek4be,Two quick fixes with the module manager.,1,[],https://github.com/unrealircd/unrealircd/pull/87,https://github.com/syzop,4,https://github.com/unrealircd/unrealircd/pull/87#issuecomment-570890564,,"We could do it your way, but then the dump of the config block after ""configuration block within .."" should be removed, since otherwise it would only be confusing in my eyes.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,88,2020-01-04T13:31:49Z,2020-01-04T16:39:39Z,2020-01-04T16:39:39Z,MERGED,True,15,2,1,https://github.com/westor7,"Add support for ""exempt-webirc yes;"" in restrict-commands module",1,[],https://github.com/unrealircd/unrealircd/pull/88,https://github.com/westor7,1,https://github.com/unrealircd/unrealircd/pull/88,"This is my first attempt to add ""exempt-webirc yes;"" in config in order to give exceptions in all WEBIRC users, it seems useful for some commands in certain cases.
This closes one of the 3 suggestions in https://bugs.unrealircd.org/view.php?id=5506","This is my first attempt to add ""exempt-webirc yes;"" in config in order to give exceptions in all WEBIRC users, it seems useful for some commands in certain cases.
This closes one of the 3 suggestions in https://bugs.unrealircd.org/view.php?id=5506",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,89,2020-01-04T15:29:00Z,2020-01-05T16:27:12Z,2020-01-05T16:43:19Z,MERGED,True,26,3,1,https://github.com/westor7,"Add support for ""webirc-bypass yes;"" in connthrottle module",2,[],https://github.com/unrealircd/unrealircd/pull/89,https://github.com/westor7,1,https://github.com/unrealircd/unrealircd/pull/89,"This is my second attempt to add ""webirc-bypass yes;"" in config in order to give exceptions in all WEBIRC users, it seems useful in certain cases.
I left it enabled by default if the config option doesn't exist, it seems normally to allow WEBIRC users to connect while the module is working, that's only my personal opinion about this.
This closes one of the 3 suggestions in https://bugs.unrealircd.org/view.php?id=5506","This is my second attempt to add ""webirc-bypass yes;"" in config in order to give exceptions in all WEBIRC users, it seems useful in certain cases.
I left it enabled by default if the config option doesn't exist, it seems normally to allow WEBIRC users to connect while the module is working, that's only my personal opinion about this.
This closes one of the 3 suggestions in https://bugs.unrealircd.org/view.php?id=5506",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,89,2020-01-04T15:29:00Z,2020-01-05T16:27:12Z,2020-01-05T16:43:19Z,MERGED,True,26,3,1,https://github.com/westor7,"Add support for ""webirc-bypass yes;"" in connthrottle module",2,[],https://github.com/unrealircd/unrealircd/pull/89,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/89#issuecomment-570891435,"This is my second attempt to add ""webirc-bypass yes;"" in config in order to give exceptions in all WEBIRC users, it seems useful in certain cases.
I left it enabled by default if the config option doesn't exist, it seems normally to allow WEBIRC users to connect while the module is working, that's only my personal opinion about this.
This closes one of the 3 suggestions in https://bugs.unrealircd.org/view.php?id=5506","Hi westor, could you resolve that 'comma' issue and also I would like the webirc bypass to be NOT the default. With those 2 changes I think it can be merged.
You should be able to simply make updates to your git branch and git commit & git push and the changes should appear here in the PR automatically.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,90,2020-01-15T17:16:51Z,2020-01-17T06:19:14Z,2020-01-17T10:58:07Z,MERGED,True,2,1,1,https://github.com/westor7,Add an information about type on spamfilter add,1,[],https://github.com/unrealircd/unrealircd/pull/90,https://github.com/westor7,1,https://github.com/unrealircd/unrealircd/pull/90,"This is going to add the [type: simple] or [type: regex] information on /spamfilter add command, it's just information purpose.","This is going to add the [type: simple] or [type: regex] information on /spamfilter add command, it's just information purpose.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,91,2020-01-15T17:31:43Z,2020-01-15T17:35:13Z,2020-01-15T17:35:13Z,CLOSED,False,1,1,1,https://github.com/westor7,Fix an incorrect /ELINE example bantype,1,[],https://github.com/unrealircd/unrealircd/pull/91,https://github.com/westor7,1,https://github.com/unrealircd/unrealircd/pull/91,It should be 'G' instead of 'g' in the /ELINE example,It should be 'G' instead of 'g' in the /ELINE example,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,91,2020-01-15T17:31:43Z,2020-01-15T17:35:13Z,2020-01-15T17:35:13Z,CLOSED,False,1,1,1,https://github.com/westor7,Fix an incorrect /ELINE example bantype,1,[],https://github.com/unrealircd/unrealircd/pull/91,https://github.com/westor7,2,https://github.com/unrealircd/unrealircd/pull/91#issuecomment-574769868,It should be 'G' instead of 'g' in the /ELINE example,I will open a new including one more fix.,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,92,2020-01-15T17:37:10Z,2020-01-17T06:16:19Z,2020-01-17T10:58:19Z,MERGED,True,2,2,1,https://github.com/westor7,Fixes two wrong /ELINE examples bantype,1,[],https://github.com/unrealircd/unrealircd/pull/92,https://github.com/westor7,1,https://github.com/unrealircd/unrealircd/pull/92,This should be 'G' and not 'g' :) :D,This should be 'G' and not 'g' :) :D,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,93,2020-01-29T12:28:16Z,2020-02-02T18:33:08Z,2020-02-02T18:33:08Z,CLOSED,False,4,4,1,https://github.com/westor7,Add [IP] tag on nick change in server notice,1,[],https://github.com/unrealircd/unrealircd/pull/93,https://github.com/westor7,1,https://github.com/unrealircd/unrealircd/pull/93,"This is going to display the nickname IP address in server notice (same as when a user connecting/exiting) it is useful for some cases.
Before:
*** old_nick (ident@host) has changed their nickname to new_nick
Now:
*** old_nick (ident@host) [127.0.01] has changed their nickname to new_nick","This is going to display the nickname IP address in server notice (same as when a user connecting/exiting) it is useful for some cases.
Before:
*** old_nick (ident@host) has changed their nickname to new_nick
Now:
*** old_nick (ident@host) [127.0.01] has changed their nickname to new_nick",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,93,2020-01-29T12:28:16Z,2020-02-02T18:33:08Z,2020-02-02T18:33:08Z,CLOSED,False,4,4,1,https://github.com/westor7,Add [IP] tag on nick change in server notice,1,[],https://github.com/unrealircd/unrealircd/pull/93,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/93#issuecomment-581138228,"This is going to display the nickname IP address in server notice (same as when a user connecting/exiting) it is useful for some cases.
Before:
*** old_nick (ident@host) has changed their nickname to new_nick
Now:
*** old_nick (ident@host) [127.0.01] has changed their nickname to new_nick","The patch itself is fine, but I would like to make it a larger change, see https://bugs.unrealircd.org/view.php?id=5548 at some later stage.
So I'm closing this PR and we'll revisit / look at those other changes later this year.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,94,2020-02-09T07:31:49Z,2020-02-09T09:34:07Z,2020-02-09T09:34:07Z,MERGED,True,5,1,2,https://github.com/k4bek4be,Add ACCOUNT_LOGIN hook,3,[],https://github.com/unrealircd/unrealircd/pull/94,https://github.com/k4bek4be,1,https://github.com/unrealircd/unrealircd/pull/94,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,95,2020-02-14T08:10:39Z,2020-02-15T16:06:17Z,2020-02-15T16:33:20Z,CLOSED,False,1,1,1,https://github.com/k4bek4be,Allow modules to implement fully-featured TAGMSG without resorting to…,1,[],https://github.com/unrealircd/unrealircd/pull/95,https://github.com/k4bek4be,1,https://github.com/unrealircd/unrealircd/pull/95,… strange hacks,… strange hacks,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,95,2020-02-14T08:10:39Z,2020-02-15T16:06:17Z,2020-02-15T16:33:20Z,CLOSED,False,1,1,1,https://github.com/k4bek4be,Allow modules to implement fully-featured TAGMSG without resorting to…,1,[],https://github.com/unrealircd/unrealircd/pull/95,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/95#issuecomment-586613730,… strange hacks,"We will implement TAGMSG in UnrealIRCd somewhere in the next few months. I don't think it would be correct to pull in such a change until then. For those who cannot wait a couple of months and who want to use your module, well.. sounds like you already worked around the problem.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,95,2020-02-14T08:10:39Z,2020-02-15T16:06:17Z,2020-02-15T16:33:20Z,CLOSED,False,1,1,1,https://github.com/k4bek4be,Allow modules to implement fully-featured TAGMSG without resorting to…,1,[],https://github.com/unrealircd/unrealircd/pull/95,https://github.com/Shillos,3,https://github.com/unrealircd/unrealircd/pull/95#issuecomment-586616267,… strange hacks,"Well, that is not bad to have a workaround even temporarily. It works ok on my server. Hope the wait will be soon because there are lots to be done. I saw you have some TAGMSG in the code, so this shows some hope and promissing for the near future.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,96,2020-02-17T20:50:43Z,2020-05-25T11:36:19Z,2020-05-25T11:36:19Z,CLOSED,False,19,5,4,https://github.com/k4bek4be,Add invite-notify cap,3,[],https://github.com/unrealircd/unrealircd/pull/96,https://github.com/k4bek4be,1,https://github.com/unrealircd/unrealircd/pull/96,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,96,2020-02-17T20:50:43Z,2020-05-25T11:36:19Z,2020-05-25T11:36:19Z,CLOSED,False,19,5,4,https://github.com/k4bek4be,Add invite-notify cap,3,[],https://github.com/unrealircd/unrealircd/pull/96,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/96#issuecomment-629603393,,"This does not work correctly for remote clients (the same mistake neno made years ago).
I think this is likely the least most interesting IRCv3 spec though, so I don't have much interest coding it myself at the moment.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,96,2020-02-17T20:50:43Z,2020-05-25T11:36:19Z,2020-05-25T11:36:19Z,CLOSED,False,19,5,4,https://github.com/k4bek4be,Add invite-notify cap,3,[],https://github.com/unrealircd/unrealircd/pull/96,https://github.com/syzop,3,https://github.com/unrealircd/unrealircd/pull/96#issuecomment-633528728,,This doesn't work without major changes. k4be will create a separate patch first for the API change. Then invite-notify can always be done later.,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,97,2020-02-22T17:51:45Z,2020-04-15T07:04:32Z,2020-04-15T07:04:32Z,MERGED,True,7,0,1,https://github.com/k4bek4be,Send RPL_LOGGEDIN numeric to the user on post-registration SASL too,1,[],https://github.com/unrealircd/unrealircd/pull/97,https://github.com/k4bek4be,1,https://github.com/unrealircd/unrealircd/pull/97,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,98,2020-03-09T03:13:18Z,2020-04-15T07:02:54Z,2020-04-15T07:03:10Z,MERGED,True,0,1,1,https://github.com/Ubunfu,Removing duplicate line in conf prog header,1,[],https://github.com/unrealircd/unrealircd/pull/98,https://github.com/Ubunfu,1,https://github.com/unrealircd/unrealircd/pull/98,"Noticed this duplicate line printed in the configuration program header while building and installing from source for the first time today.  It appears when you run the ./Config build step.  I know it's very small, but thought I'd submit a PR anyway since it's quite user-facing.","Noticed this duplicate line printed in the configuration program header while building and installing from source for the first time today.  It appears when you run the ./Config build step.  I know it's very small, but thought I'd submit a PR anyway since it's quite user-facing.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,98,2020-03-09T03:13:18Z,2020-04-15T07:02:54Z,2020-04-15T07:03:10Z,MERGED,True,0,1,1,https://github.com/Ubunfu,Removing duplicate line in conf prog header,1,[],https://github.com/unrealircd/unrealircd/pull/98,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/98#issuecomment-613856372,"Noticed this duplicate line printed in the configuration program header while building and installing from source for the first time today.  It appears when you run the ./Config build step.  I know it's very small, but thought I'd submit a PR anyway since it's quite user-facing.","Funny, never noticed it. Thanks!",True,{'THUMBS_UP': ['https://github.com/Ubunfu']}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,99,2020-03-19T15:01:26Z,2020-04-15T07:01:38Z,2020-04-15T07:01:38Z,MERGED,True,221,188,1,https://github.com/LeCoyote,Update of the French help text. Quite a few items were pretty outdated,1,[],https://github.com/unrealircd/unrealircd/pull/99,https://github.com/LeCoyote,1,https://github.com/unrealircd/unrealircd/pull/99,Fixed a couple of typos too.,Fixed a couple of typos too.,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,100,2020-03-23T03:32:32Z,2020-04-26T07:00:10Z,2020-04-26T07:01:32Z,MERGED,True,2,1,1,https://github.com/delthas,Fix trailing space in RPL_NAMREPLY,1,[],https://github.com/unrealircd/unrealircd/pull/100,https://github.com/delthas,1,https://github.com/unrealircd/unrealircd/pull/100,"Currently, UnrealIRCd outputs a trailing space to the trailing parameter of RPL_NAMREPLY (when there are users in the channel). However, according to RFC 1459 and RFC 2812, this is forbidden, since the grammar for this reply is (quoting RFC 2812):
( ""="" / ""*"" / ""@"" ) <channel> :[ ""@"" / ""+"" ] <nick> *( "" "" [ ""@"" / ""+"" ] <nick> )

This commit fixes the issue by adding the joining space only if there is another, remaining nick to be appended to the buffer.","Currently, UnrealIRCd outputs a trailing space to the trailing parameter of RPL_NAMREPLY (when there are users in the channel). However, according to RFC 1459 and RFC 2812, this is forbidden, since the grammar for this reply is (quoting RFC 2812):
( ""="" / ""*"" / ""@"" ) <channel> :[ ""@"" / ""+"" ] <nick> *( "" "" [ ""@"" / ""+"" ] <nick> )

This commit fixes the issue by adding the joining space only if there is another, remaining nick to be appended to the buffer.",True,{'THUMBS_UP': ['https://github.com/emersion']}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,100,2020-03-23T03:32:32Z,2020-04-26T07:00:10Z,2020-04-26T07:01:32Z,MERGED,True,2,1,1,https://github.com/delthas,Fix trailing space in RPL_NAMREPLY,1,[],https://github.com/unrealircd/unrealircd/pull/100,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/100#issuecomment-619496696,"Currently, UnrealIRCd outputs a trailing space to the trailing parameter of RPL_NAMREPLY (when there are users in the channel). However, according to RFC 1459 and RFC 2812, this is forbidden, since the grammar for this reply is (quoting RFC 2812):
( ""="" / ""*"" / ""@"" ) <channel> :[ ""@"" / ""+"" ] <nick> *( "" "" [ ""@"" / ""+"" ] <nick> )

This commit fixes the issue by adding the joining space only if there is another, remaining nick to be appended to the buffer.","I think if your parser fails on these kind of issues, you will have a very hard time dealing with IRC servers.... of various brands, not just us.
The patch looks OK, though, and is not intrusive, so I will merge it.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,101,2020-04-16T15:57:23Z,2020-04-16T17:18:38Z,2020-04-16T17:18:38Z,MERGED,True,4,5,1,https://github.com/k4bek4be,"Don't suggest ""posix"" spamfilter to opers.",1,[],https://github.com/unrealircd/unrealircd/pull/101,https://github.com/k4bek4be,1,https://github.com/unrealircd/unrealircd/pull/101,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,102,2020-04-20T13:47:25Z,2020-04-26T06:45:39Z,2020-04-26T06:45:39Z,MERGED,True,1,0,1,https://github.com/LeCoyote,Add missing help line for chmode +D,1,[],https://github.com/unrealircd/unrealircd/pull/102,https://github.com/LeCoyote,1,https://github.com/unrealircd/unrealircd/pull/102,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,103,2020-04-25T22:19:59Z,2020-04-26T06:50:12Z,2020-04-26T06:50:12Z,CLOSED,False,1,1,1,https://github.com/k4bek4be,"Anope aliases: remove helpserv, add global",1,[],https://github.com/unrealircd/unrealircd/pull/103,https://github.com/k4bek4be,1,https://github.com/unrealircd/unrealircd/pull/103,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,104,2020-05-03T10:48:35Z,2020-05-03T11:33:05Z,2020-05-03T11:33:05Z,MERGED,True,1573,18,2,https://github.com/k4bek4be,Add Polish translation for help.conf and update the original one,4,[],https://github.com/unrealircd/unrealircd/pull/104,https://github.com/k4bek4be,1,https://github.com/unrealircd/unrealircd/pull/104,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,105,2020-05-05T21:35:33Z,2020-05-06T10:39:02Z,2020-05-06T10:39:02Z,MERGED,True,22,0,1,https://github.com/LeCoyote,Add a few more scripts to antimixedutf8 in the light of recent spam,1,[],https://github.com/unrealircd/unrealircd/pull/105,https://github.com/LeCoyote,1,https://github.com/unrealircd/unrealircd/pull/105,"Exemple of spam strings:
䔊삱瞘七⪻몛뺥䍺䥮ె◈槗萣ꫜ謽惡䶫䃄凟쭙䔯灯逇片ꎪ蹘⾌Ľᄦ뎓␇练劲탐⮕ꫀ᷑챼暅뀂鶥䥭ă疺
⽢滆⼓ᖶ㈰猲䶖應ꍩ凚歰嗕䐝帄갍䧁뿵⣲顢嫮언漸塠醯誧䐱⋫쑥㝤轪宐㉟ქ癨뛋콶㦧膹눉そ吀ꊀ갮삙䪤烅䗔ᖩ饲湳櫍ᕽ욢胑Ǒ욠㭒쌡䞹厚
I haven't tracked all of the scripts, just the ones that came up more often.","Exemple of spam strings:
䔊삱瞘七⪻몛뺥䍺䥮ె◈槗萣ꫜ謽惡䶫䃄凟쭙䔯灯逇片ꎪ蹘⾌Ľᄦ뎓␇练劲탐⮕ꫀ᷑챼暅뀂鶥䥭ă疺
⽢滆⼓ᖶ㈰猲䶖應ꍩ凚歰嗕䐝帄갍䧁뿵⣲顢嫮언漸塠醯誧䐱⋫쑥㝤轪宐㉟ქ癨뛋콶㦧膹눉そ吀ꊀ갮삙䪤烅䗔ᖩ饲湳櫍ᕽ욢胑Ǒ욠㭒쌡䞹厚
I haven't tracked all of the scripts, just the ones that came up more often.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,106,2020-05-07T15:26:05Z,2020-05-13T17:19:07Z,2020-05-13T17:19:07Z,MERGED,True,2,0,2,https://github.com/k4bek4be,Remove unused message tag handlers on rehash,1,[],https://github.com/unrealircd/unrealircd/pull/106,https://github.com/k4bek4be,1,https://github.com/unrealircd/unrealircd/pull/106,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,107,2020-05-13T16:13:39Z,2020-05-13T17:09:00Z,2020-05-13T17:09:00Z,CLOSED,False,28,9,3,https://github.com/k4bek4be,Add HOOKTYPE_MTAG_HANDLER hook.,1,[],https://github.com/unrealircd/unrealircd/pull/107,https://github.com/k4bek4be,1,https://github.com/unrealircd/unrealircd/pull/107,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,108,2020-05-14T15:28:14Z,2020-05-16T08:04:33Z,2020-05-16T08:04:33Z,MERGED,True,89,2,4,https://github.com/k4bek4be,Add clienttagdeny module.,1,[],https://github.com/unrealircd/unrealircd/pull/108,https://github.com/k4bek4be,1,https://github.com/unrealircd/unrealircd/pull/108,"It implements the current version of CLIENTTAGDENY isupport token, as defined by IRCv3 (not merged yet).","It implements the current version of CLIENTTAGDENY isupport token, as defined by IRCv3 (not merged yet).",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,109,2020-05-16T07:01:24Z,2020-05-16T07:57:24Z,2020-05-16T07:57:24Z,MERGED,True,14,2,1,https://github.com/k4bek4be,Support both +typing and +draft/typing mtags.,1,[],https://github.com/unrealircd/unrealircd/pull/109,https://github.com/k4bek4be,1,https://github.com/unrealircd/unrealircd/pull/109,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,110,2020-05-25T00:36:45Z,2020-05-25T19:41:45Z,2020-05-25T19:41:46Z,CLOSED,False,2,2,1,https://github.com/westor7,Add more places to auto detect for OpenSSL,1,[],https://github.com/unrealircd/unrealircd/pull/110,https://github.com/westor7,1,https://github.com/unrealircd/unrealircd/pull/110,Add /usr/bin/openssl to auto detecting for OpenSSL on the machine too.,Add /usr/bin/openssl to auto detecting for OpenSSL on the machine too.,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,110,2020-05-25T00:36:45Z,2020-05-25T19:41:45Z,2020-05-25T19:41:46Z,CLOSED,False,2,2,1,https://github.com/westor7,Add more places to auto detect for OpenSSL,1,[],https://github.com/unrealircd/unrealircd/pull/110,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/110#issuecomment-633509270,Add /usr/bin/openssl to auto detecting for OpenSSL on the machine too.,"It already detects OpenSSL in /usr. Which isn't that surprising, since that is where 99% of the people have it anyway :).
The way that list works is that it is a directory, then it checks <dir>/bin/openssl and <dir>/include/openssl and such. As you can see the entry for /usr is already there at the end.
What you did is make it check for /usr/bin/openssl/bin/openssl and /usr/bin/include/openssl and that sort of thing. That is not what we want ;)",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,110,2020-05-25T00:36:45Z,2020-05-25T19:41:45Z,2020-05-25T19:41:46Z,CLOSED,False,2,2,1,https://github.com/westor7,Add more places to auto detect for OpenSSL,1,[],https://github.com/unrealircd/unrealircd/pull/110,https://github.com/syzop,3,https://github.com/unrealircd/unrealircd/pull/110#issuecomment-633510448,Add /usr/bin/openssl to auto detecting for OpenSSL on the machine too.,"In any case, there must be a reason why you submitted this. So you probably had some sort of problem where it failed to detect OpenSSL? We can also discuss on IRC.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,110,2020-05-25T00:36:45Z,2020-05-25T19:41:45Z,2020-05-25T19:41:46Z,CLOSED,False,2,2,1,https://github.com/westor7,Add more places to auto detect for OpenSSL,1,[],https://github.com/unrealircd/unrealircd/pull/110,https://github.com/westor7,4,https://github.com/unrealircd/unrealircd/pull/110#issuecomment-633696175,Add /usr/bin/openssl to auto detecting for OpenSSL on the machine too.,"You're right my PR is incorrect, apologize.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,111,2020-05-28T14:01:23Z,2020-07-14T16:39:10Z,2020-07-14T16:39:11Z,MERGED,True,25,18,2,https://github.com/k4bek4be,Fix sending RPL_LOGGEDIN on logout.,3,[],https://github.com/unrealircd/unrealircd/pull/111,https://github.com/k4bek4be,1,https://github.com/unrealircd/unrealircd/pull/111,Bug report #5688. I admit this was my fault :),Bug report #5688. I admit this was my fault :),True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,112,2020-05-28T18:52:29Z,2020-07-14T17:51:47Z,2020-07-14T17:51:47Z,MERGED,True,3,0,1,https://github.com/k4bek4be,Call user_account_login on UID message too,2,[],https://github.com/unrealircd/unrealircd/pull/112,https://github.com/k4bek4be,1,https://github.com/unrealircd/unrealircd/pull/112,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,112,2020-05-28T18:52:29Z,2020-07-14T17:51:47Z,2020-07-14T17:51:47Z,MERGED,True,3,0,1,https://github.com/k4bek4be,Call user_account_login on UID message too,2,[],https://github.com/unrealircd/unrealircd/pull/112,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/112#issuecomment-658287691,,"Where is this for? The title of this PR is basically what the code does, but is missing the ""why"" or purpose :D
(And the description is empty)",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,112,2020-05-28T18:52:29Z,2020-07-14T17:51:47Z,2020-07-14T17:51:47Z,MERGED,True,3,0,1,https://github.com/k4bek4be,Call user_account_login on UID message too,2,[],https://github.com/unrealircd/unrealircd/pull/112,https://github.com/k4bek4be,3,https://github.com/unrealircd/unrealircd/pull/112#issuecomment-658292465,,"One of my modules (metadata-db) is designed to act on each case of user login. One, and probably most common, of these is a successful pre-registration SASL authentication. That is handled by the user's local server, and later broadcast by the UID command to other servers.
Other cases, already handled neatly, are the SVSMODE message (when user has logged in after registration, using SASL or nickserv message) and SVSLOGIN message (local unregistered connection that used SASL successfully).",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,112,2020-05-28T18:52:29Z,2020-07-14T17:51:47Z,2020-07-14T17:51:47Z,MERGED,True,3,0,1,https://github.com/k4bek4be,Call user_account_login on UID message too,2,[],https://github.com/unrealircd/unrealircd/pull/112,https://github.com/syzop,4,https://github.com/unrealircd/unrealircd/pull/112#issuecomment-658315200,,"Ah, right, so also call the hook for remote logins, for modules.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,112,2020-05-28T18:52:29Z,2020-07-14T17:51:47Z,2020-07-14T17:51:47Z,MERGED,True,3,0,1,https://github.com/k4bek4be,Call user_account_login on UID message too,2,[],https://github.com/unrealircd/unrealircd/pull/112,https://github.com/syzop,5,https://github.com/unrealircd/unrealircd/pull/112#issuecomment-658320217,,"Hmm.. I have some doubts about this. This would also mean that you would get like hundreds of HOOKTYPE_ACCOUNT_LOGIN events just when two servers, sync, right?
I am not sure if it is ""correct"" in such a case, so when server syncing, to call HOOKTYPE_ACCOUNT_LOGIN, since the user actually isn't logging in to his/her account, it are just servers syncing.
Shouldn't we skip if !IsSynched(client->srvptr) ?",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,112,2020-05-28T18:52:29Z,2020-07-14T17:51:47Z,2020-07-14T17:51:47Z,MERGED,True,3,0,1,https://github.com/k4bek4be,Call user_account_login on UID message too,2,[],https://github.com/unrealircd/unrealircd/pull/112,https://github.com/syzop,6,https://github.com/unrealircd/unrealircd/pull/112#issuecomment-658321707,,".. then again, we also call things like HOOKTYPE_AWAY in such a case, so maybe I shouldn't care.
A module can decide itself if it wants to skip such events or not, based on IsSynched(client->srvptr)",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,113,2020-05-30T20:50:04Z,2020-06-07T14:13:27Z,2020-06-07T14:13:27Z,MERGED,True,1,1,1,https://github.com/westor7,Fix to display the TLSversion correct on connect,1,[],https://github.com/unrealircd/unrealircd/pull/113,https://github.com/westor7,1,https://github.com/unrealircd/unrealircd/pull/113,"Previously it didn't display correctly on server notice the TLSv* version on local connection.
Example:
TLS_CHACHA20_POLY1305_SHA256
Should be displayed as: TLSv1.3-TLS_CHACHA20_POLY1305_SHA256","Previously it didn't display correctly on server notice the TLSv* version on local connection.
Example:
TLS_CHACHA20_POLY1305_SHA256
Should be displayed as: TLSv1.3-TLS_CHACHA20_POLY1305_SHA256",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,113,2020-05-30T20:50:04Z,2020-06-07T14:13:27Z,2020-06-07T14:13:27Z,MERGED,True,1,1,1,https://github.com/westor7,Fix to display the TLSversion correct on connect,1,[],https://github.com/unrealircd/unrealircd/pull/113,https://github.com/westor7,2,https://github.com/unrealircd/unrealircd/pull/113#issuecomment-636383881,"Previously it didn't display correctly on server notice the TLSv* version on local connection.
Example:
TLS_CHACHA20_POLY1305_SHA256
Should be displayed as: TLSv1.3-TLS_CHACHA20_POLY1305_SHA256",Credits to Jobe :D,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,114,2020-05-30T21:52:40Z,2020-05-30T21:58:47Z,2020-05-30T21:58:53Z,CLOSED,False,12,3,1,https://github.com/westor7,Add ciphers value on RPL_WHOISSECURE (671) locally,1,[],https://github.com/unrealircd/unrealircd/pull/114,https://github.com/westor7,1,https://github.com/unrealircd/unrealircd/pull/114,"If someone want's to view the TLS version + ciphers from a local client SSL connection he would now by WHOIS the user, this only will work for local clients and not for remote clients.
If this is security privacy risk addition then do not proceed of course.
Credits to Jobe who created the code.

Thanks","If someone want's to view the TLS version + ciphers from a local client SSL connection he would now by WHOIS the user, this only will work for local clients and not for remote clients.
If this is security privacy risk addition then do not proceed of course.
Credits to Jobe who created the code.

Thanks",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,114,2020-05-30T21:52:40Z,2020-05-30T21:58:47Z,2020-05-30T21:58:53Z,CLOSED,False,12,3,1,https://github.com/westor7,Add ciphers value on RPL_WHOISSECURE (671) locally,1,[],https://github.com/unrealircd/unrealircd/pull/114,https://github.com/westor7,2,https://github.com/unrealircd/unrealircd/pull/114#issuecomment-636390506,"If someone want's to view the TLS version + ciphers from a local client SSL connection he would now by WHOIS the user, this only will work for local clients and not for remote clients.
If this is security privacy risk addition then do not proceed of course.
Credits to Jobe who created the code.

Thanks","BAD PR , APOLOGIZING!!!",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,115,2020-05-30T22:08:33Z,2021-11-28T10:21:22Z,2021-11-28T10:21:22Z,CLOSED,False,9,2,1,https://github.com/westor7,Add ciphers value on RPL_WHOISSECURE (671) locally,2,[],https://github.com/unrealircd/unrealircd/pull/115,https://github.com/westor7,1,https://github.com/unrealircd/unrealircd/pull/115,"If someone want's to view the TLS version + ciphers from a local client SSL connection he would now by WHOIS the user, this only will work for local clients and not for remote clients.
If this is security privacy risk addition then do not proceed of course.
Credits to Jobe who created the code.

Thanks!","If someone want's to view the TLS version + ciphers from a local client SSL connection he would now by WHOIS the user, this only will work for local clients and not for remote clients.
If this is security privacy risk addition then do not proceed of course.
Credits to Jobe who created the code.

Thanks!",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,115,2020-05-30T22:08:33Z,2021-11-28T10:21:22Z,2021-11-28T10:21:22Z,CLOSED,False,9,2,1,https://github.com/westor7,Add ciphers value on RPL_WHOISSECURE (671) locally,2,[],https://github.com/unrealircd/unrealircd/pull/115,https://github.com/PeGaSuS-Coder,2,https://github.com/unrealircd/unrealircd/pull/115#issuecomment-851069591,"If someone want's to view the TLS version + ciphers from a local client SSL connection he would now by WHOIS the user, this only will work for local clients and not for remote clients.
If this is security privacy risk addition then do not proceed of course.
Credits to Jobe who created the code.

Thanks!","I like the idea, but this should also be applied to remote connections.
It is useful to see what TLS ciphers are commonly used and set stricter ciphers rules on set::tls::ciphers.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,115,2020-05-30T22:08:33Z,2021-11-28T10:21:22Z,2021-11-28T10:21:22Z,CLOSED,False,9,2,1,https://github.com/westor7,Add ciphers value on RPL_WHOISSECURE (671) locally,2,[],https://github.com/unrealircd/unrealircd/pull/115,https://github.com/syzop,3,https://github.com/unrealircd/unrealircd/pull/115#issuecomment-981059158,"If someone want's to view the TLS version + ciphers from a local client SSL connection he would now by WHOIS the user, this only will work for local clients and not for remote clients.
If this is security privacy risk addition then do not proceed of course.
Credits to Jobe who created the code.

Thanks!","UnrealIRCd now has this (even for remote connections). IRCOps can see the ciphers. Users cannot by default but you can change the set::whois-details to show it to self or to all other users too, whatever you wish!
I'm not considering this for U5, so closing this one. Thanks for the suggestion though, without it this would not have been in U6 either.",True,{'THUMBS_UP': ['https://github.com/westor7']}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,116,2020-06-09T12:54:46Z,2020-06-10T06:28:08Z,2020-06-10T06:28:09Z,CLOSED,False,1,1,1,https://github.com/k4bek4be,Fix problem with labeled-response on websocket connections,1,[],https://github.com/unrealircd/unrealircd/pull/116,https://github.com/k4bek4be,1,https://github.com/unrealircd/unrealircd/pull/116,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,116,2020-06-09T12:54:46Z,2020-06-10T06:28:08Z,2020-06-10T06:28:09Z,CLOSED,False,1,1,1,https://github.com/k4bek4be,Fix problem with labeled-response on websocket connections,1,[],https://github.com/unrealircd/unrealircd/pull/116,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/116#issuecomment-641755392,,"Thanks, fixed now in dcb89f9",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,117,2020-06-18T17:48:40Z,2021-02-06T07:10:57Z,2021-02-06T07:10:57Z,CLOSED,False,1,1,1,https://github.com/PeGaSuS-Coder,Update help.conf,1,[],https://github.com/unrealircd/unrealircd/pull/117,https://github.com/PeGaSuS-Coder,1,https://github.com/unrealircd/unrealircd/pull/117,"In fact, the umode +T prevents other users from sending us CTCPs and not the other way around ;)","In fact, the umode +T prevents other users from sending us CTCPs and not the other way around ;)",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,117,2020-06-18T17:48:40Z,2021-02-06T07:10:57Z,2021-02-06T07:10:57Z,CLOSED,False,1,1,1,https://github.com/PeGaSuS-Coder,Update help.conf,1,[],https://github.com/unrealircd/unrealircd/pull/117,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/117#issuecomment-774415800,"In fact, the umode +T prevents other users from sending us CTCPs and not the other way around ;)","I'll take the suggestion with me during a partial rewrite, since there is a bigger picture here. https://bugs.unrealircd.org/view.php?id=5814.
Thanks for bringing it up.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,118,2020-07-26T16:32:19Z,2020-07-26T17:03:59Z,2020-07-27T14:02:18Z,CLOSED,False,3,137,12,https://github.com/ddevault,Remove 435 BANNICKCHANGE support,1,[],https://github.com/unrealircd/unrealircd/pull/118,https://github.com/ddevault,1,https://github.com/unrealircd/unrealircd/pull/118,"This was only ever of dubious legitimacy and it interacts poorly with
qbans (quiets). For example, a channel which only wants registered users
to speak may set +q ~q:~a:*. If there are a problem with services, or
someone reconnects and auto-joins many channels, they will have to
manually part and rejoin any channels using this approach before they
can change their nick.
This also removes the ~n extban, under a rationale which applies to
both: global settings like the user's nick are beyond the channel
operator's domain of privilege to control of their channel members.
Even if one holds these features to be legitimate, they are trivially
subverted - leave the channel, change your nick, then return - and
therefore are not justified in the face of the problems they introduce.
If someone is using nick changes to subvert a mute of another sort, then
an affected operator should naturally escalate the mute to a ban to
correct the problem.
The global channel mode +N has been left in, as it's only ever used as a
temporary measure against floods and is not considered reasonable to
leave on permanently.","This was only ever of dubious legitimacy and it interacts poorly with
qbans (quiets). For example, a channel which only wants registered users
to speak may set +q ~q:~a:*. If there are a problem with services, or
someone reconnects and auto-joins many channels, they will have to
manually part and rejoin any channels using this approach before they
can change their nick.
This also removes the ~n extban, under a rationale which applies to
both: global settings like the user's nick are beyond the channel
operator's domain of privilege to control of their channel members.
Even if one holds these features to be legitimate, they are trivially
subverted - leave the channel, change your nick, then return - and
therefore are not justified in the face of the problems they introduce.
If someone is using nick changes to subvert a mute of another sort, then
an affected operator should naturally escalate the mute to a ban to
correct the problem.
The global channel mode +N has been left in, as it's only ever used as a
temporary measure against floods and is not considered reasonable to
leave on permanently.",True,{'THUMBS_DOWN': ['https://github.com/SadieCat']}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,118,2020-07-26T16:32:19Z,2020-07-26T17:03:59Z,2020-07-27T14:02:18Z,CLOSED,False,3,137,12,https://github.com/ddevault,Remove 435 BANNICKCHANGE support,1,[],https://github.com/unrealircd/unrealircd/pull/118,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/118#issuecomment-664014197,"This was only ever of dubious legitimacy and it interacts poorly with
qbans (quiets). For example, a channel which only wants registered users
to speak may set +q ~q:~a:*. If there are a problem with services, or
someone reconnects and auto-joins many channels, they will have to
manually part and rejoin any channels using this approach before they
can change their nick.
This also removes the ~n extban, under a rationale which applies to
both: global settings like the user's nick are beyond the channel
operator's domain of privilege to control of their channel members.
Even if one holds these features to be legitimate, they are trivially
subverted - leave the channel, change your nick, then return - and
therefore are not justified in the face of the problems they introduce.
If someone is using nick changes to subvert a mute of another sort, then
an affected operator should naturally escalate the mute to a ban to
correct the problem.
The global channel mode +N has been left in, as it's only ever used as a
temporary measure against floods and is not considered reasonable to
leave on permanently.","For example, a channel which only wants registered users to speak may set +q ~q:~a:*

In UnrealIRCd if you want only registered users to speak you would set +M, a channel mode added 17 years ago which works fine for this purpose. It won't have any of the side effects you mention with regards to nick changing.
In fact +b ~q:~a:* will never work as we don't process wildcards in ~a. It sounds like you wrote some kind of generic comment that applies to other IRCds, as the problem you mention (use of ~q:~a with certain side effects) does not exist in UnrealIRCd.
I understand what you are saying with regards to scope and such of channel settings impacting things like inability to change a nick name. But, as you also said, sometimes this is needed like when setting +N in case of a flood (may even be done automatically via +f). We do not see abuse or annoying effects of this in real life, as said the ~q:~a: case does not apply to us, we have +M for that. And from what I can gather, whenever a ~n is set (which is rare), it is set specifically for some troublemaker (or more often: troublesome IRC client or bouncer) with the intention of only blocking that nick change and thus a ""lesser"" effect, otherwise that user would have been banned.
Disabling target bans by default is not what I would suggest. It also does not work like you say ""simply part, change and rejoin"", it would be ""simply part, change and then find out that you are banned"". Preventing that is the whole point of target ban.
Even with all of the above in mind, you can still configure UnrealIRCd entirely according to your wishes, we allow a lot of tweaking:

Use set { check-target-nick-bans no; }
Don't load (or blacklist) the extbans/nickchange module
Optionally, not recommended but if you want this, don't load (or blacklist) the chanmodes/nonickchange module",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,118,2020-07-26T16:32:19Z,2020-07-26T17:03:59Z,2020-07-27T14:02:18Z,CLOSED,False,3,137,12,https://github.com/ddevault,Remove 435 BANNICKCHANGE support,1,[],https://github.com/unrealircd/unrealircd/pull/118,https://github.com/ddevault,3,https://github.com/unrealircd/unrealircd/pull/118#issuecomment-664014893,"This was only ever of dubious legitimacy and it interacts poorly with
qbans (quiets). For example, a channel which only wants registered users
to speak may set +q ~q:~a:*. If there are a problem with services, or
someone reconnects and auto-joins many channels, they will have to
manually part and rejoin any channels using this approach before they
can change their nick.
This also removes the ~n extban, under a rationale which applies to
both: global settings like the user's nick are beyond the channel
operator's domain of privilege to control of their channel members.
Even if one holds these features to be legitimate, they are trivially
subverted - leave the channel, change your nick, then return - and
therefore are not justified in the face of the problems they introduce.
If someone is using nick changes to subvert a mute of another sort, then
an affected operator should naturally escalate the mute to a ban to
correct the problem.
The global channel mode +N has been left in, as it's only ever used as a
temporary measure against floods and is not considered reasonable to
leave on permanently.","You're correct that I'm coming here from another ircd. The problem will affect unrealircd servers running atheme, though, by preventing nickserv regain from working. Consider freenode: despite +r being available for 17 years (or whatever it is), people still quiet $~a, leading to this problem. unrealircd users can likely be expected to set +b ~q:~a as well.
Anyway, since you accurately surmised that I came here trying to proliferate a change I'm arguing for in another ircd, I don't have a horse in the unrealircd race and I'm not especially interested in arguing the feature.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,118,2020-07-26T16:32:19Z,2020-07-26T17:03:59Z,2020-07-27T14:02:18Z,CLOSED,False,3,137,12,https://github.com/ddevault,Remove 435 BANNICKCHANGE support,1,[],https://github.com/unrealircd/unrealircd/pull/118,https://github.com/KoraggKnightWolf,4,https://github.com/unrealircd/unrealircd/pull/118#issuecomment-664351617,"This was only ever of dubious legitimacy and it interacts poorly with
qbans (quiets). For example, a channel which only wants registered users
to speak may set +q ~q:~a:*. If there are a problem with services, or
someone reconnects and auto-joins many channels, they will have to
manually part and rejoin any channels using this approach before they
can change their nick.
This also removes the ~n extban, under a rationale which applies to
both: global settings like the user's nick are beyond the channel
operator's domain of privilege to control of their channel members.
Even if one holds these features to be legitimate, they are trivially
subverted - leave the channel, change your nick, then return - and
therefore are not justified in the face of the problems they introduce.
If someone is using nick changes to subvert a mute of another sort, then
an affected operator should naturally escalate the mute to a ban to
correct the problem.
The global channel mode +N has been left in, as it's only ever used as a
temporary measure against floods and is not considered reasonable to
leave on permanently.",Except that UnrealIRCd users CANNOT be expected to set +b ~q:~a as was said since this DOES NOT EXIST in UnrealIRCd. Do not just blatantly assume every IRCd has the exact same extbans/modes/commands etc and jump across projects wondering why your idea gets rejected. Ripping out the ability to block nick changes just opens up spammers to do NICK change floods. Your alternative approach to Atheme which bypasses the race condition is a more suitable way of handling the situation.,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,119,2020-08-24T20:34:35Z,2020-08-26T05:17:07Z,2020-08-26T13:05:17Z,MERGED,True,57,11,1,https://github.com/moseslecce,Baltics nickchars support,4,[],https://github.com/unrealircd/unrealircd/pull/119,https://github.com/moseslecce,1,https://github.com/unrealircd/unrealircd/pull/119,"Allow support for Baltic languages in the nickname characters (Latvian, Estonian and Lithuanian) when using utf8.  These characters exist under the Latin Extended-A character set and can be used with Latin-utf8.","Allow support for Baltic languages in the nickname characters (Latvian, Estonian and Lithuanian) when using utf8.  These characters exist under the Latin Extended-A character set and can be used with Latin-utf8.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,119,2020-08-24T20:34:35Z,2020-08-26T05:17:07Z,2020-08-26T13:05:17Z,MERGED,True,57,11,1,https://github.com/moseslecce,Baltics nickchars support,4,[],https://github.com/unrealircd/unrealircd/pull/119,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/119#issuecomment-679914005,"Allow support for Baltic languages in the nickname characters (Latvian, Estonian and Lithuanian) when using utf8.  These characters exist under the Latin Extended-A character set and can be used with Latin-utf8.","Thanks for the contribution!
Would it be possible to split them up in the 3 languages, like the rest of the system? (latvian-utf8, estonian-utf8, lithuanian-utf8)
Also, you can use LANGAV_LATIN_UTF8 for all this (no need for a new LANGAV_LATIN_EXT_A_UTF8). I know it's a tad confusing, but the system is to avoid clashes in codepages and mixing scripts. In UTF8 we only care about the script language so then the baltic languages fall under the ""latin script in utf8"" group, doesn't matter if they are in the extended block or not.
With those changes, I think it should be fine to commit.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,119,2020-08-24T20:34:35Z,2020-08-26T05:17:07Z,2020-08-26T13:05:17Z,MERGED,True,57,11,1,https://github.com/moseslecce,Baltics nickchars support,4,[],https://github.com/unrealircd/unrealircd/pull/119,https://github.com/moseslecce,3,https://github.com/unrealircd/unrealircd/pull/119#issuecomment-680193586,"Allow support for Baltic languages in the nickname characters (Latvian, Estonian and Lithuanian) when using utf8.  These characters exist under the Latin Extended-A character set and can be used with Latin-utf8.",No problem glad to help and contribute.  We've now made the changes you have requested and tested it locally and it does work as expected.,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,119,2020-08-24T20:34:35Z,2020-08-26T05:17:07Z,2020-08-26T13:05:17Z,MERGED,True,57,11,1,https://github.com/moseslecce,Baltics nickchars support,4,[],https://github.com/unrealircd/unrealircd/pull/119,https://github.com/syzop,4,https://github.com/unrealircd/unrealircd/pull/119#issuecomment-680658293,"Allow support for Baltic languages in the nickname characters (Latvian, Estonian and Lithuanian) when using utf8.  These characters exist under the Latin Extended-A character set and can be used with Latin-utf8.","Great, thanks for the nice patch, the PR has now been merged. The new functionality will be in next UnrealIRCd 5 release.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,119,2020-08-24T20:34:35Z,2020-08-26T05:17:07Z,2020-08-26T13:05:17Z,MERGED,True,57,11,1,https://github.com/moseslecce,Baltics nickchars support,4,[],https://github.com/unrealircd/unrealircd/pull/119,https://github.com/moseslecce,5,https://github.com/unrealircd/unrealircd/pull/119#issuecomment-680866375,"Allow support for Baltic languages in the nickname characters (Latvian, Estonian and Lithuanian) when using utf8.  These characters exist under the Latin Extended-A character set and can be used with Latin-utf8.","You're very welcome.
…
On Wed, Aug 26, 2020 at 1:19 AM Bram Matthys ***@***.***> wrote:
 Great, thanks for the nice patch, the PR has now been merged. The new
 functionality will be in next UnrealIRCd 5 release.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#119 (comment)>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/AAY6PT6PBRVSGNZRPBUEAMTSCSLOTANCNFSM4QJ4SMPQ>
 .",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,120,2020-09-07T12:52:22Z,2021-02-06T06:48:21Z,2021-02-06T06:48:21Z,CLOSED,False,2,1,1,https://github.com/westor7,Bypass +H chanmode on BOTS (+B),1,[],https://github.com/unrealircd/unrealircd/pull/120,https://github.com/westor7,1,https://github.com/unrealircd/unrealircd/pull/120,"I believe that when a bot joins in the channel and +H channel mode exists it should bypass it because it is useless to having history on join for bots, one issue can be if there was some bot commands executed before the bot join (e.g: !website) then when the bot joins it re-triggers that event.
Also bots can use /HISTORY command anytime if they want to view the channel history.","I believe that when a bot joins in the channel and +H channel mode exists it should bypass it because it is useless to having history on join for bots, one issue can be if there was some bot commands executed before the bot join (e.g: !website) then when the bot joins it re-triggers that event.
Also bots can use /HISTORY command anytime if they want to view the channel history.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,120,2020-09-07T12:52:22Z,2021-02-06T06:48:21Z,2021-02-06T06:48:21Z,CLOSED,False,2,1,1,https://github.com/westor7,Bypass +H chanmode on BOTS (+B),1,[],https://github.com/unrealircd/unrealircd/pull/120,https://github.com/jobe1986,2,https://github.com/unrealircd/unrealircd/pull/120#issuecomment-688308001,"I believe that when a bot joins in the channel and +H channel mode exists it should bypass it because it is useless to having history on join for bots, one issue can be if there was some bot commands executed before the bot join (e.g: !website) then when the bot joins it re-triggers that event.
Also bots can use /HISTORY command anytime if they want to view the channel history.","The server-time capability can be a work around for this by simply having the bot ignore messages with a timestamp earlier then the time the bot knows it joined the channel.
However personally I'd rather have a separate user mode that suppresses channel history playback on join that could be used by anyone, not just bots.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,120,2020-09-07T12:52:22Z,2021-02-06T06:48:21Z,2021-02-06T06:48:21Z,CLOSED,False,2,1,1,https://github.com/westor7,Bypass +H chanmode on BOTS (+B),1,[],https://github.com/unrealircd/unrealircd/pull/120,https://github.com/westor7,3,https://github.com/unrealircd/unrealircd/pull/120#issuecomment-688313667,"I believe that when a bot joins in the channel and +H channel mode exists it should bypass it because it is useless to having history on join for bots, one issue can be if there was some bot commands executed before the bot join (e.g: !website) then when the bot joins it re-triggers that event.
Also bots can use /HISTORY command anytime if they want to view the channel history.","This may not work if server-time module is not loaded, i know some networks that doesn't use server-time because it having some issues with kiwiirc. so i chose that way because the bot can either use /HISTORY command if it is script to execute that after bot join on the channel, but bypassing by default if they having +B usermode seems having a big point on exist bots.
Also yes maybe having +Y umode to display (or not) the channel history on join is not a bad idea but for now i think that way is a temporary fix because having bots and +H on the channel makes bot spam on its join.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,120,2020-09-07T12:52:22Z,2021-02-06T06:48:21Z,2021-02-06T06:48:21Z,CLOSED,False,2,1,1,https://github.com/westor7,Bypass +H chanmode on BOTS (+B),1,[],https://github.com/unrealircd/unrealircd/pull/120,https://github.com/GottemHams,4,https://github.com/unrealircd/unrealircd/pull/120#issuecomment-688410303,"I believe that when a bot joins in the channel and +H channel mode exists it should bypass it because it is useless to having history on join for bots, one issue can be if there was some bot commands executed before the bot join (e.g: !website) then when the bot joins it re-triggers that event.
Also bots can use /HISTORY command anytime if they want to view the channel history.","Simply ignoring history when the user is marked as a bot is too extreme and probably unclear for the owner as well (""hey why isn't it getting any history (anymore)?""). For example, I have a bot that logs channel messages and people can use it to find old messages. By simply ignoring all bots it would not receive any history to add to the database in case the bot has to reconnect, meaning those messages wouldn't be logged at all. I could have it do HISTORY ""manually"" but if +H is already set, the values it uses are tailored to that channel and are much better than say /history #chan 1000 and having to check all those messages for ones we managed to store before the bot died. Even 100 messages could be too much, I know a few channels where 10 messages over a couple days is a lot. ;]
Then again, I doubt many bot owners even know of the existence of +B so your proposal wouldn't even fly in many cases. I'm actually not even using +B myself as it doesn't change any functionality and I can live without the extra whois line, so why bother. :>
If the bot owner can't have it add an additional umode for itself (if we were to go with that), the bot is likely unmaintained anyways and you should probably wonder if you want it on your network still. ;]
But you never know, perhaps @syzop has a different opinion.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,120,2020-09-07T12:52:22Z,2021-02-06T06:48:21Z,2021-02-06T06:48:21Z,CLOSED,False,2,1,1,https://github.com/westor7,Bypass +H chanmode on BOTS (+B),1,[],https://github.com/unrealircd/unrealircd/pull/120,https://github.com/westor7,5,https://github.com/unrealircd/unrealircd/pull/120#issuecomment-688429993,"I believe that when a bot joins in the channel and +H channel mode exists it should bypass it because it is useless to having history on join for bots, one issue can be if there was some bot commands executed before the bot join (e.g: !website) then when the bot joins it re-triggers that event.
Also bots can use /HISTORY command anytime if they want to view the channel history.","As you said you already have the option to code on your bot to manually get the channel history via /HISTORY after the join but having a simple bot to get the channel history without having a proper way to stop this it will cause the bot to re-trigger his codes even in simple bots for non-expert users, the overall right now is that there is a way to retrieve the history of a channel but there is not a way to stop getting it automatically when you join on the channel and this can make troubles in some cases.
Also i cannot see that as extreme LOL! ok a new umode like +Y would solve this in all ways, but i think creating a new umode just for history is too much. :P",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,120,2020-09-07T12:52:22Z,2021-02-06T06:48:21Z,2021-02-06T06:48:21Z,CLOSED,False,2,1,1,https://github.com/westor7,Bypass +H chanmode on BOTS (+B),1,[],https://github.com/unrealircd/unrealircd/pull/120,https://github.com/westor7,6,https://github.com/unrealircd/unrealircd/pull/120#issuecomment-774399700,"I believe that when a bot joins in the channel and +H channel mode exists it should bypass it because it is useless to having history on join for bots, one issue can be if there was some bot commands executed before the bot join (e.g: !website) then when the bot joins it re-triggers that event.
Also bots can use /HISTORY command anytime if they want to view the channel history.","Bump!
What about a new configurable setting like set::history::channel::playback-on-join::disable-on-bots
Example:
set {
        history {
                channel {
                        /* How many lines to playback on join? */
                        playback-on-join {
                                disable-on-bots yes; // <--------------------
                                lines 15;
                                time 1d;
                        }
                        /* How much history to keep. These are the
                         * upper maximums for channel mode +H lines:time
                         */
                        max-storage-per-channel {
                                lines 200;
                                time 1w;
                        }
                }
        }
}",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,120,2020-09-07T12:52:22Z,2021-02-06T06:48:21Z,2021-02-06T06:48:21Z,CLOSED,False,2,1,1,https://github.com/westor7,Bypass +H chanmode on BOTS (+B),1,[],https://github.com/unrealircd/unrealircd/pull/120,https://github.com/syzop,7,https://github.com/unrealircd/unrealircd/pull/120#issuecomment-774412074,"I believe that when a bot joins in the channel and +H channel mode exists it should bypass it because it is useless to having history on join for bots, one issue can be if there was some bot commands executed before the bot join (e.g: !website) then when the bot joins it re-triggers that event.
Also bots can use /HISTORY command anytime if they want to view the channel history.","I agree with Gottem's comment #120 (comment).
As for the disable-on-bots option.. something like that would be ok, yeah.
Let's close this PR. Better use the bug tracker for any discussion.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,121,2020-09-29T09:29:21Z,2020-09-30T15:49:02Z,2020-09-30T15:49:02Z,MERGED,True,1462,0,1,https://github.com/CWO-Stanley,Added help.nl.conf,6,[],https://github.com/unrealircd/unrealircd/pull/121,https://github.com/CWO-Stanley,1,https://github.com/unrealircd/unrealircd/pull/121,Just a dutch translation for help.conf,Just a dutch translation for help.conf,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,122,2020-09-30T14:04:27Z,2020-09-30T15:47:40Z,2020-09-30T15:47:40Z,CLOSED,False,1,0,1,https://github.com/parthkhatri1998,Update translations.txt,1,[],https://github.com/unrealircd/unrealircd/pull/122,https://github.com/parthkhatri1998,1,https://github.com/unrealircd/unrealircd/pull/122,i improve translations.txt,i improve translations.txt,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,122,2020-09-30T14:04:27Z,2020-09-30T15:47:40Z,2020-09-30T15:47:40Z,CLOSED,False,1,0,1,https://github.com/parthkhatri1998,Update translations.txt,1,[],https://github.com/unrealircd/unrealircd/pull/122,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/122#issuecomment-701477217,i improve translations.txt,i presume this was a test from you? adding this duplicate line. closing.. ;),True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,123,2020-10-11T14:24:43Z,2021-02-06T06:52:08Z,2021-02-06T06:52:08Z,CLOSED,False,3,0,1,https://github.com/westor7,Fix when +f to not kick if is already banned,1,[],https://github.com/unrealircd/unrealircd/pull/123,https://github.com/westor7,1,https://github.com/unrealircd/unrealircd/pull/123,"Currently when someone is banned or muted (~q extban) then if he keeps flooding on the channel then the +f triggers this action and kick the user away from the channel, as it should not and should only appear an error message that he cannot send to the channel because he is banned.
Example Image:

(Not sure if this change is correct, but i gave a try :P)

Thanks!","Currently when someone is banned or muted (~q extban) then if he keeps flooding on the channel then the +f triggers this action and kick the user away from the channel, as it should not and should only appear an error message that he cannot send to the channel because he is banned.
Example Image:

(Not sure if this change is correct, but i gave a try :P)

Thanks!",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,123,2020-10-11T14:24:43Z,2021-02-06T06:52:08Z,2021-02-06T06:52:08Z,CLOSED,False,3,0,1,https://github.com/westor7,Fix when +f to not kick if is already banned,1,[],https://github.com/unrealircd/unrealircd/pull/123,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/123#issuecomment-774412786,"Currently when someone is banned or muted (~q extban) then if he keeps flooding on the channel then the +f triggers this action and kick the user away from the channel, as it should not and should only appear an error message that he cannot send to the channel because he is banned.
Example Image:

(Not sure if this change is correct, but i gave a try :P)

Thanks!","Hmm.. I don't really like the performance effects of this, it means we call is_banned() twice on every channel message on +f channels.
And it's kinda a corner case anyway... should we really worry about it?
If you find it important enough, then please report it on https://bugs.unrealircd.org/
Since it won't be as simple as this PR, I am closing the PR.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,124,2020-10-18T23:38:52Z,2020-10-19T15:12:46Z,2020-10-19T16:17:18Z,MERGED,True,55,55,1,https://github.com/robert-scheck,Add $(DESTDIR) support for 'make install',1,[],https://github.com/unrealircd/unrealircd/pull/124,https://github.com/robert-scheck,1,https://github.com/unrealircd/unrealircd/pull/124,"When packaging UnrealIRCd as RPM, make install needs to install the files into $RPM_BUILD_ROOT rather into /. Just changing the paths via ./Config or ./configure does not fit, because otherwise UnrealIRCd is finally looking for $RPM_BUILD_ROOT/etc/unrealircd/ rather /etc/unrealircd/. It's fully backwards-compatible, because normally $DESTDIR is not being passed.","When packaging UnrealIRCd as RPM, make install needs to install the files into $RPM_BUILD_ROOT rather into /. Just changing the paths via ./Config or ./configure does not fit, because otherwise UnrealIRCd is finally looking for $RPM_BUILD_ROOT/etc/unrealircd/ rather /etc/unrealircd/. It's fully backwards-compatible, because normally $DESTDIR is not being passed.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,124,2020-10-18T23:38:52Z,2020-10-19T15:12:46Z,2020-10-19T16:17:18Z,MERGED,True,55,55,1,https://github.com/robert-scheck,Add $(DESTDIR) support for 'make install',1,[],https://github.com/unrealircd/unrealircd/pull/124,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/124#issuecomment-712276466,"When packaging UnrealIRCd as RPM, make install needs to install the files into $RPM_BUILD_ROOT rather into /. Just changing the paths via ./Config or ./configure does not fit, because otherwise UnrealIRCd is finally looking for $RPM_BUILD_ROOT/etc/unrealircd/ rather /etc/unrealircd/. It's fully backwards-compatible, because normally $DESTDIR is not being passed.","Looks fine to me, so merged, thanks!",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,125,2020-10-19T18:34:37Z,2020-10-20T05:26:57Z,2020-10-20T05:27:09Z,MERGED,True,1,1,1,https://github.com/robert-scheck,Exit with a successful return code upon receipt of SIGTERM,1,[],https://github.com/unrealircd/unrealircd/pull/125,https://github.com/robert-scheck,1,https://github.com/unrealircd/unrealircd/pull/125,Return code 255 (like any non-zero return code) indicates a failure on POSIX systems. Actually systemd.unit gets upset about this wrong exit code when stopping unrealircd.service systemd unit.,Return code 255 (like any non-zero return code) indicates a failure on POSIX systems. Actually systemd.unit gets upset about this wrong exit code when stopping unrealircd.service systemd unit.,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,125,2020-10-19T18:34:37Z,2020-10-20T05:26:57Z,2020-10-20T05:27:09Z,MERGED,True,1,1,1,https://github.com/robert-scheck,Exit with a successful return code upon receipt of SIGTERM,1,[],https://github.com/unrealircd/unrealircd/pull/125,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/125#issuecomment-712599525,Return code 255 (like any non-zero return code) indicates a failure on POSIX systems. Actually systemd.unit gets upset about this wrong exit code when stopping unrealircd.service systemd unit.,"Sure, fine by me, merged :)",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,126,2020-10-21T18:28:33Z,2020-10-22T17:37:42Z,2020-10-22T17:37:42Z,MERGED,True,1,1,1,https://github.com/k4bek4be,Fix a warning typo,1,[],https://github.com/unrealircd/unrealircd/pull/126,https://github.com/k4bek4be,1,https://github.com/unrealircd/unrealircd/pull/126,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,127,2020-10-22T13:15:58Z,2020-10-22T17:36:53Z,2020-10-22T17:36:54Z,MERGED,True,1,1,1,https://github.com/jimmypw,Fixed a typo in Config script,1,[],https://github.com/unrealircd/unrealircd/pull/127,https://github.com/jimmypw,1,https://github.com/unrealircd/unrealircd/pull/127,"Config script referenced conf/tls/server.crt.pem in an informational message.
It should be conf/tls/server.cert.pem","Config script referenced conf/tls/server.crt.pem in an informational message.
It should be conf/tls/server.cert.pem",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,128,2021-01-17T11:51:26Z,2021-02-06T06:44:32Z,2021-02-06T06:44:32Z,MERGED,True,1,1,1,https://github.com/k4bek4be,Always call UMODE_CHANGE hook with change victim instead of source.,1,[],https://github.com/unrealircd/unrealircd/pull/128,https://github.com/k4bek4be,1,https://github.com/unrealircd/unrealircd/pull/128,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,129,2021-01-17T12:15:32Z,2021-06-26T09:48:01Z,2021-06-26T09:48:56Z,CLOSED,False,14,14,10,https://github.com/k4bek4be,"Move account check to one place to avoid accepting a temporary ""numeric"" account name as a valid login.",1,[],https://github.com/unrealircd/unrealircd/pull/129,https://github.com/k4bek4be,1,https://github.com/unrealircd/unrealircd/pull/129,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,129,2021-01-17T12:15:32Z,2021-06-26T09:48:01Z,2021-06-26T09:48:56Z,CLOSED,False,14,14,10,https://github.com/k4bek4be,"Move account check to one place to avoid accepting a temporary ""numeric"" account name as a valid login.",1,[],https://github.com/unrealircd/unrealircd/pull/129,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/129#issuecomment-868977185,,"Thanks for the report and the suggestions!
Applied something similar now through 3 commits: 06c0a34 68d1728 2afc57a",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,130,2021-01-29T16:54:16Z,2021-01-29T18:11:36Z,2021-01-29T18:31:12Z,MERGED,True,3,3,2,https://github.com/PeGaSuS-Coder,"Fixed typo on the example flags, from `f` to `F` (spamfilter)",2,[],https://github.com/unrealircd/unrealircd/pull/130,https://github.com/PeGaSuS-Coder,1,https://github.com/unrealircd/unrealircd/pull/130,Actually we don't have the f flag but F for spamfilter.,Actually we don't have the f flag but F for spamfilter.,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,131,2021-01-30T22:59:52Z,2021-02-06T06:45:28Z,2021-02-06T06:45:28Z,MERGED,True,3,3,1,https://github.com/westor7,Added some missing items,1,[],https://github.com/unrealircd/unrealircd/pull/131,https://github.com/westor7,1,https://github.com/unrealircd/unrealircd/pull/131,"+c also strip/blocks ""colors"" and ""italics"" that were not mentioned.","+c also strip/blocks ""colors"" and ""italics"" that were not mentioned.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,132,2021-02-01T14:57:38Z,2021-02-03T11:23:01Z,2021-02-03T11:23:02Z,CLOSED,False,20,4,1,https://github.com/PeGaSuS-Coder,Update help.conf,4,[],https://github.com/unrealircd/unrealircd/pull/132,https://github.com/PeGaSuS-Coder,1,https://github.com/unrealircd/unrealircd/pull/132,ELINE and [G]ZLINE commands do accept nick as a parameter when setting.,ELINE and [G]ZLINE commands do accept nick as a parameter when setting.,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,132,2021-02-01T14:57:38Z,2021-02-03T11:23:01Z,2021-02-03T11:23:02Z,CLOSED,False,20,4,1,https://github.com/PeGaSuS-Coder,Update help.conf,4,[],https://github.com/unrealircd/unrealircd/pull/132,https://github.com/PeGaSuS-Coder,2,https://github.com/unrealircd/unrealircd/pull/132#issuecomment-772436095,ELINE and [G]ZLINE commands do accept nick as a parameter when setting.,Need to rework,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,133,2021-03-20T20:36:19Z,2021-03-21T06:39:49Z,2021-03-21T06:39:49Z,MERGED,True,6,0,1,https://github.com/LeCoyote,Actually read security-group::tls from the conf file (fixes #0005836),1,[],https://github.com/unrealircd/unrealircd/pull/133,https://github.com/LeCoyote,1,https://github.com/unrealircd/unrealircd/pull/133,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,134,2021-04-16T22:01:19Z,2021-04-16T22:01:32Z,2021-04-16T22:01:51Z,CLOSED,False,0,0,0,https://github.com/ValwareIRC,Merge pull request #1 from unrealircd/unreal50,1,[],https://github.com/unrealircd/unrealircd/pull/134,https://github.com/ValwareIRC,1,https://github.com/unrealircd/unrealircd/pull/134,sorry pressed wrong button O_O,sorry pressed wrong button O_O,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,135,2021-05-05T21:08:40Z,2021-07-11T07:29:15Z,2021-07-11T07:29:15Z,CLOSED,False,101,2,4,https://github.com/jwheare,Add a module to support the +draft/display-name client tag,5,[],https://github.com/unrealircd/unrealircd/pull/135,https://github.com/jwheare,1,https://github.com/unrealircd/unrealircd/pull/135,"https://bugs.unrealircd.org/view.php?id=5867
This is a modified copy/paste of typing-indicator.c, without the whitelisting of tag values in ti_mtag_is_ok
ircv3/ircv3-specifications#452 (PR not yet merged)
I appreciate you probably don't want this merged into unrealircd until the spec is at least merged to IRCv3 in draft state. But I'm putting it here now because I don't foresee any changes that would affect this module. And I've made it now so may as well.","https://bugs.unrealircd.org/view.php?id=5867
This is a modified copy/paste of typing-indicator.c, without the whitelisting of tag values in ti_mtag_is_ok
ircv3/ircv3-specifications#452 (PR not yet merged)
I appreciate you probably don't want this merged into unrealircd until the spec is at least merged to IRCv3 in draft state. But I'm putting it here now because I don't foresee any changes that would affect this module. And I've made it now so may as well.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,135,2021-05-05T21:08:40Z,2021-07-11T07:29:15Z,2021-07-11T07:29:15Z,CLOSED,False,101,2,4,https://github.com/jwheare,Add a module to support the +draft/display-name client tag,5,[],https://github.com/unrealircd/unrealircd/pull/135,https://github.com/Shillos,2,https://github.com/unrealircd/unrealircd/pull/135#issuecomment-833118379,"https://bugs.unrealircd.org/view.php?id=5867
This is a modified copy/paste of typing-indicator.c, without the whitelisting of tag values in ti_mtag_is_ok
ircv3/ircv3-specifications#452 (PR not yet merged)
I appreciate you probably don't want this merged into unrealircd until the spec is at least merged to IRCv3 in draft state. But I'm putting it here now because I don't foresee any changes that would affect this module. And I've made it now so may as well.",Hope to see that here and on irccloud!  :-),True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,135,2021-05-05T21:08:40Z,2021-07-11T07:29:15Z,2021-07-11T07:29:15Z,CLOSED,False,101,2,4,https://github.com/jwheare,Add a module to support the +draft/display-name client tag,5,[],https://github.com/unrealircd/unrealircd/pull/135,https://github.com/syzop,3,https://github.com/unrealircd/unrealircd/pull/135#issuecomment-877754998,"https://bugs.unrealircd.org/view.php?id=5867
This is a modified copy/paste of typing-indicator.c, without the whitelisting of tag values in ti_mtag_is_ok
ircv3/ircv3-specifications#452 (PR not yet merged)
I appreciate you probably don't want this merged into unrealircd until the spec is at least merged to IRCv3 in draft state. But I'm putting it here now because I don't foresee any changes that would affect this module. And I've made it now so may as well.","Would need some more thinking, changes and discussion in https://bugs.unrealircd.org/view.php?id=5867 and it seems there is some specification polishing needing to do at ircv3/ircv3-specifications#452 as well (that alone is not a problem per se, by the way).
I think in the meantime it is best to close this PR than to keep it lingering. I'm sure it can be used for inspiration when if it is added though. Thanks!",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,136,2021-05-19T16:47:42Z,2021-05-23T07:44:57Z,2021-05-23T07:47:58Z,CLOSED,False,1,1,1,https://github.com/westor7,Fix the URL/Link of that IRCv3 company,1,[],https://github.com/unrealircd/unrealircd/pull/136,https://github.com/westor7,1,https://github.com/unrealircd/unrealircd/pull/136,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,136,2021-05-19T16:47:42Z,2021-05-23T07:44:57Z,2021-05-23T07:47:58Z,CLOSED,False,1,1,1,https://github.com/westor7,Fix the URL/Link of that IRCv3 company,1,[],https://github.com/unrealircd/unrealircd/pull/136,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/136#issuecomment-846519849,,"Thanks, done now in 137cc7f",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,137,2021-05-29T23:08:32Z,2021-05-30T06:04:31Z,2021-05-30T06:04:31Z,CLOSED,False,426,139,22,https://github.com/darksis,Unreal42,15,[],https://github.com/unrealircd/unrealircd/pull/137,https://github.com/darksis,1,https://github.com/unrealircd/unrealircd/pull/137,please add modules to unrealircd42  Blocks clients not replying to CTCP like botnets/spambots/floodbots,please add modules to unrealircd42  Blocks clients not replying to CTCP like botnets/spambots/floodbots,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,137,2021-05-29T23:08:32Z,2021-05-30T06:04:31Z,2021-05-30T06:04:31Z,CLOSED,False,426,139,22,https://github.com/darksis,Unreal42,15,[],https://github.com/unrealircd/unrealircd/pull/137,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/137#issuecomment-850947558,please add modules to unrealircd42  Blocks clients not replying to CTCP like botnets/spambots/floodbots,Clearly a mistake.,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,138,2021-06-02T19:34:26Z,2021-06-02T20:41:33Z,2021-06-02T20:41:33Z,CLOSED,False,6,0,1,https://github.com/darksis,please add module Blocks clients not replying to CTCP like botnets/spambots/floodbots. */,1,[],https://github.com/unrealircd/unrealircd/pull/138,https://github.com/darksis,1,https://github.com/unrealircd/unrealircd/pull/138,"hello please add a new a module protection from Blocks clients not replying to CTCP like botnets/spambots/floodbots. */ working very good from dnsbl or connect flood
thanks","hello please add a new a module protection from Blocks clients not replying to CTCP like botnets/spambots/floodbots. */ working very good from dnsbl or connect flood
thanks",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,138,2021-06-02T19:34:26Z,2021-06-02T20:41:33Z,2021-06-02T20:41:33Z,CLOSED,False,6,0,1,https://github.com/darksis,please add module Blocks clients not replying to CTCP like botnets/spambots/floodbots. */,1,[],https://github.com/unrealircd/unrealircd/pull/138,https://github.com/PeGaSuS-Coder,2,https://github.com/unrealircd/unrealircd/pull/138#issuecomment-853333871,"hello please add a new a module protection from Blocks clients not replying to CTCP like botnets/spambots/floodbots. */ working very good from dnsbl or connect flood
thanks","@darksis stop with the spam!
If you want to ask for features, use the forums or the bug tracker.
GitHub isn't to request features.
Cheers!",True,"{'THUMBS_UP': ['https://github.com/ValwareIRC', 'https://github.com/darksis']}"
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,138,2021-06-02T19:34:26Z,2021-06-02T20:41:33Z,2021-06-02T20:41:33Z,CLOSED,False,6,0,1,https://github.com/darksis,please add module Blocks clients not replying to CTCP like botnets/spambots/floodbots. */,1,[],https://github.com/unrealircd/unrealircd/pull/138,https://github.com/darksis,3,https://github.com/unrealircd/unrealircd/pull/138#issuecomment-853368736,"hello please add a new a module protection from Blocks clients not replying to CTCP like botnets/spambots/floodbots. */ working very good from dnsbl or connect flood
thanks",ok sorry and thanks!!,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,139,2021-06-16T15:32:16Z,2021-06-26T07:27:56Z,2021-06-26T07:28:02Z,MERGED,True,2,2,1,https://github.com/xiu,modules/tkl: Fix wrong tkl names,1,[],https://github.com/unrealircd/unrealircd/pull/139,https://github.com/xiu,1,https://github.com/unrealircd/unrealircd/pull/139,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,139,2021-06-16T15:32:16Z,2021-06-26T07:27:56Z,2021-06-26T07:28:02Z,MERGED,True,2,2,1,https://github.com/xiu,modules/tkl: Fix wrong tkl names,1,[],https://github.com/unrealircd/unrealircd/pull/139,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/139#issuecomment-868962052,,Thanks :),True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,140,2021-06-17T19:40:29Z,2021-06-18T13:13:50Z,2021-06-18T13:14:52Z,MERGED,True,79,49,7,https://github.com/Polsaker,"Allowing multiple masks in ""deny link"" blocks.",1,[],https://github.com/unrealircd/unrealircd/pull/140,https://github.com/Polsaker,1,https://github.com/unrealircd/unrealircd/pull/140,"The goal of this patch is allowing the following syntax for deny link blocks:
deny link {
	mask {
		*;
		!foobar.hub;
	};
	rule !connected(foobar.hub);
	type all;
};

to prevent the current server from accepting connections from other leaf servers while the server is separated to the network (to prevent leaves with multiple autoconnects from bridging between two hubs)","The goal of this patch is allowing the following syntax for deny link blocks:
deny link {
	mask {
		*;
		!foobar.hub;
	};
	rule !connected(foobar.hub);
	type all;
};

to prevent the current server from accepting connections from other leaf servers while the server is separated to the network (to prevent leaves with multiple autoconnects from bridging between two hubs)",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,140,2021-06-17T19:40:29Z,2021-06-18T13:13:50Z,2021-06-18T13:14:52Z,MERGED,True,79,49,7,https://github.com/Polsaker,"Allowing multiple masks in ""deny link"" blocks.",1,[],https://github.com/unrealircd/unrealircd/pull/140,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/140#issuecomment-864030719,"The goal of this patch is allowing the following syntax for deny link blocks:
deny link {
	mask {
		*;
		!foobar.hub;
	};
	rule !connected(foobar.hub);
	type all;
};

to prevent the current server from accepting connections from other leaf servers while the server is separated to the network (to prevent leaves with multiple autoconnects from bridging between two hubs)",Thanks for the suggestion. And perfectly done patch too!,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,141,2021-06-18T15:48:25Z,2021-06-19T06:48:57Z,2021-06-19T06:48:58Z,CLOSED,False,8,6,1,https://github.com/Polsaker,Fix mask matching for `deny link::mask` blocks,1,[],https://github.com/unrealircd/unrealircd/pull/141,https://github.com/Polsaker,1,https://github.com/unrealircd/unrealircd/pull/141,"Small slip up from my previous PR.
For our use-case of deny link::mask it really makes more sense to deny linking when no masks match.
Take this block for example:
deny link {
	mask {
		!foobar.hub;
                !somethingelse.hub;
	};
	rule !connected(foobar.hub)&&!connected(somethingelse.hub);
	type all;
};

would end up denying all links because you can't match foobar.hub and somethingelse.hub at the same time. This is fixed by having the function return 0 on the first non-match","Small slip up from my previous PR.
For our use-case of deny link::mask it really makes more sense to deny linking when no masks match.
Take this block for example:
deny link {
	mask {
		!foobar.hub;
                !somethingelse.hub;
	};
	rule !connected(foobar.hub)&&!connected(somethingelse.hub);
	type all;
};

would end up denying all links because you can't match foobar.hub and somethingelse.hub at the same time. This is fixed by having the function return 0 on the first non-match",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,141,2021-06-18T15:48:25Z,2021-06-19T06:48:57Z,2021-06-19T06:48:58Z,CLOSED,False,8,6,1,https://github.com/Polsaker,Fix mask matching for `deny link::mask` blocks,1,[],https://github.com/unrealircd/unrealircd/pull/141,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/141#issuecomment-864365641,"Small slip up from my previous PR.
For our use-case of deny link::mask it really makes more sense to deny linking when no masks match.
Take this block for example:
deny link {
	mask {
		!foobar.hub;
                !somethingelse.hub;
	};
	rule !connected(foobar.hub)&&!connected(somethingelse.hub);
	type all;
};

would end up denying all links because you can't match foobar.hub and somethingelse.hub at the same time. This is fixed by having the function return 0 on the first non-match","This patch would break something like mask { *.com; *.net; } where a server is called irc.example.net and the return 0 happens because it does not match *.com.
I also noticed another bug in the previous patch. You use a m->mask+1 even if there is no !, thus skipping the first letter of a server for normal matching.
I am closing this PR and did two more commits myself, last important one being f71f6c8. The new rules are explained in that commit but in short they provide the functionality you wanted. I will update the docs later.
I think/hope this is enough fiddling with that code for now :D",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,142,2021-06-23T20:18:07Z,2021-06-25T09:33:27Z,2021-06-25T12:51:36Z,CLOSED,False,4,0,1,https://github.com/stefansaraev,Don't handle certfp in 'MD client',1,[],https://github.com/unrealircd/unrealircd/pull/142,https://github.com/stefansaraev,1,https://github.com/unrealircd/unrealircd/pull/142,"certfp may be used in oper{} blocks and sasl, allowing other
servers to spoof it makes certfp useless for auth.","certfp may be used in oper{} blocks and sasl, allowing other
servers to spoof it makes certfp useless for auth.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,142,2021-06-23T20:18:07Z,2021-06-25T09:33:27Z,2021-06-25T12:51:36Z,CLOSED,False,4,0,1,https://github.com/stefansaraev,Don't handle certfp in 'MD client',1,[],https://github.com/unrealircd/unrealircd/pull/142,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/142#issuecomment-868369481,"certfp may be used in oper{} blocks and sasl, allowing other
servers to spoof it makes certfp useless for auth.","Bit of an edge case here, you are basically saying that a rogue server can cause someones oper block (or other) to match even though it should not.
Servers are considered to be trusted by UnrealIRCd, so if you cannot trust them anymore then you are fighting a loosing battle. The privilege escalation to ircop that you suggested that is possible via this 'bug', and after this would be 'fixed', could just as easily be done if the same rogue server introduced a remote IRCOp and started executing whatever ircop-command you wanted to be executed in the first place, since remote IRCOps are just as trusted as local IRCOps.
Similarly, if you think a remote server spoofing authentication is an issue, then you have issues with SASL by certfp too? After all, any server (in between) could send a fake certificate fingerprint to services to authenticate the user, or the other way around: a server in-between could just pretend that services authenticated the user (SVSLOGIN or SVS2MODE +d), and so on.
Like I said, you are in a loosing battle there if you cannot trust servers anymore.
Now, all that being said, it makes no sense for a remote server to set a ""certfp"" of one of our locally connected users. There is no use case or justification for that, so you do have a point there. I have now updated the module API to block writes to clients that are our own by default (such as ""certfp"" but also ""webirc"" and such), and allow modules to opt-in (for example k4be will probably do this for ""geoip"").",True,"{'HOORAY': ['https://github.com/Polsaker', 'https://github.com/stefansaraev']}"
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,142,2021-06-23T20:18:07Z,2021-06-25T09:33:27Z,2021-06-25T12:51:36Z,CLOSED,False,4,0,1,https://github.com/stefansaraev,Don't handle certfp in 'MD client',1,[],https://github.com/unrealircd/unrealircd/pull/142,https://github.com/stefansaraev,3,https://github.com/unrealircd/unrealircd/pull/142#issuecomment-868402497,"certfp may be used in oper{} blocks and sasl, allowing other
servers to spoof it makes certfp useless for auth.",thanks! :),True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,142,2021-06-23T20:18:07Z,2021-06-25T09:33:27Z,2021-06-25T12:51:36Z,CLOSED,False,4,0,1,https://github.com/stefansaraev,Don't handle certfp in 'MD client',1,[],https://github.com/unrealircd/unrealircd/pull/142,https://github.com/stefansaraev,4,https://github.com/unrealircd/unrealircd/pull/142#issuecomment-868457146,"certfp may be used in oper{} blocks and sasl, allowing other
servers to spoof it makes certfp useless for auth.","@syzop fyi.
[Fri Jun 25 13:35:39 2021] - Remote server 'irc.freenode.ceo' tried to write moddata 'link-security' of a client from ours 'irc.freenode.ceo' -- attempt blocked.
ooops. it seems this will breal link-security downgrade warnings.
it may be good idea to keep ""some"" metadata always writable.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,142,2021-06-23T20:18:07Z,2021-06-25T09:33:27Z,2021-06-25T12:51:36Z,CLOSED,False,4,0,1,https://github.com/stefansaraev,Don't handle certfp in 'MD client',1,[],https://github.com/unrealircd/unrealircd/pull/142,https://github.com/syzop,5,https://github.com/unrealircd/unrealircd/pull/142#issuecomment-868477523,"certfp may be used in oper{} blocks and sasl, allowing other
servers to spoof it makes certfp useless for auth.","Indeed, thanks, #145 applied.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,143,2021-06-24T15:27:19Z,2021-06-25T13:27:20Z,2021-06-25T13:27:21Z,CLOSED,False,10,6,1,https://github.com/Polsaker,Allowing sending cookies/tokens in remote PINGs,1,[],https://github.com/unrealircd/unrealircd/pull/143,https://github.com/Polsaker,1,https://github.com/unrealircd/unrealircd/pull/143,"This allows sending a cookie as a third parameter to the PING command to remote servers, useful to calculate the RTT across a whole network.
Example:
<< PING * some-server.com <cookie>
>> PONG some-server.com mynick <cookie>","This allows sending a cookie as a third parameter to the PING command to remote servers, useful to calculate the RTT across a whole network.
Example:
<< PING * some-server.com <cookie>
>> PONG some-server.com mynick <cookie>",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,143,2021-06-24T15:27:19Z,2021-06-25T13:27:20Z,2021-06-25T13:27:21Z,CLOSED,False,10,6,1,https://github.com/Polsaker,Allowing sending cookies/tokens in remote PINGs,1,[],https://github.com/unrealircd/unrealircd/pull/143,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/143#issuecomment-868485530,"This allows sending a cookie as a third parameter to the PING command to remote servers, useful to calculate the RTT across a whole network.
Example:
<< PING * some-server.com <cookie>
>> PONG some-server.com mynick <cookie>","I suppose we could do that, but...
Just wanted to say that you don't need a cookie to keep track of requests. You can use labeled-response for that:
CAP REQ :message-tags labeled-response batch
@label=zzz PING testlink.test.net
@label=zzz;msgid=QlpJ16QJkgsAzv3iMXOfvc;time=2021-06-25T12:54:05.000Z :testlink2.test.net PONG testlink2.test.net :testlink.test.net",True,"{'THUMBS_UP': ['https://github.com/examknow', 'https://github.com/Polsaker']}"
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,143,2021-06-24T15:27:19Z,2021-06-25T13:27:20Z,2021-06-25T13:27:21Z,CLOSED,False,10,6,1,https://github.com/Polsaker,Allowing sending cookies/tokens in remote PINGs,1,[],https://github.com/unrealircd/unrealircd/pull/143,https://github.com/Polsaker,3,https://github.com/unrealircd/unrealircd/pull/143#issuecomment-868499619,"This allows sending a cookie as a third parameter to the PING command to remote servers, useful to calculate the RTT across a whole network.
Example:
<< PING * some-server.com <cookie>
>> PONG some-server.com mynick <cookie>","I... totally didn't consider that :D
Thanks!",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,144,2021-06-24T17:14:45Z,2021-07-11T07:25:19Z,2021-07-11T07:25:19Z,CLOSED,False,7,6,2,https://github.com/ValwareIRC,Designate end of HELP(OP) output,6,[],https://github.com/unrealircd/unrealircd/pull/144,https://github.com/ValwareIRC,1,https://github.com/unrealircd/unrealircd/pull/144,repurpose unused numeric response RPL_HELPHLP to signify end of output for use cases such like client-side scriptables (viewing) and in case a bot gains self-awareness :> ♥,repurpose unused numeric response RPL_HELPHLP to signify end of output for use cases such like client-side scriptables (viewing) and in case a bot gains self-awareness :> ♥,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,144,2021-06-24T17:14:45Z,2021-07-11T07:25:19Z,2021-07-11T07:25:19Z,CLOSED,False,7,6,2,https://github.com/ValwareIRC,Designate end of HELP(OP) output,6,[],https://github.com/unrealircd/unrealircd/pull/144,https://github.com/fkm,2,https://github.com/unrealircd/unrealircd/pull/144#issuecomment-867956917,repurpose unused numeric response RPL_HELPHLP to signify end of output for use cases such like client-side scriptables (viewing) and in case a bot gains self-awareness :> ♥,"My recommendation for the numeric names:

290 RPL_HELPHDR
292 RPL_HELPTLR
293 RPL_HELPHLP

My reference is: https://www.alien.net.au/irc/irc2numerics.html
It's old and potentially wrong. But there seems to be a consensus when searching for the numbers on Google. They probably all just copied the names from one source at some point. But it's dangerous to go against established standards. Even if they are not official.
But maybe someone from the team has some input to that.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,144,2021-06-24T17:14:45Z,2021-07-11T07:25:19Z,2021-07-11T07:25:19Z,CLOSED,False,7,6,2,https://github.com/ValwareIRC,Designate end of HELP(OP) output,6,[],https://github.com/unrealircd/unrealircd/pull/144,https://github.com/syzop,3,https://github.com/unrealircd/unrealircd/pull/144#issuecomment-869371965,repurpose unused numeric response RPL_HELPHLP to signify end of output for use cases such like client-side scriptables (viewing) and in case a bot gains self-awareness :> ♥,"End-users haven't been missing this numeric, since they have been living without it for 20 years and.. well.. there's not much use for them. But indeed, you mention bots or automated things, eg one can imagine throwing it in some kind of GUI popup or something...
In the past I may have been OK with this, but nowadays we have labeled-response. It basically makes adding any new ""end"" numerics unneeded as it is redundant information. Also, numerics are a scarce resource, so if there's no good reason to add one, then don't add one in my opinion (in that sense, my opinion deviates from several other ircd brands who tend to add lots of numerics, usually to get rid of notices, which is also a valid point of view).
It's not like I have a strong opinion on the matter but I'm inclined to reject it. Unless the other devs have a different opinion?",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,145,2021-06-25T12:25:04Z,2021-06-25T12:50:53Z,2021-06-25T12:50:53Z,MERGED,True,1,0,1,https://github.com/Polsaker,Allow remote servers to write to the `link-security` MD object,1,[],https://github.com/unrealircd/unrealircd/pull/145,https://github.com/Polsaker,1,https://github.com/unrealircd/unrealircd/pull/145,Should fix the warning @stefansaraev found,Should fix the warning @stefansaraev found,True,{'THUMBS_UP': ['https://github.com/stefansaraev']}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,146,2021-06-27T01:14:37Z,2021-10-30T18:47:41Z,2021-10-30T18:47:41Z,CLOSED,False,18,2,3,https://github.com/Polsaker,Sending back the labeled-response for PING commands.,3,[],https://github.com/unrealircd/unrealircd/pull/146,https://github.com/Polsaker,1,https://github.com/unrealircd/unrealircd/pull/146,"Making labeled-response work for PING, so we can have a proper alternative to #143","Making labeled-response work for PING, so we can have a proper alternative to #143",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,146,2021-06-27T01:14:37Z,2021-10-30T18:47:41Z,2021-10-30T18:47:41Z,CLOSED,False,18,2,3,https://github.com/Polsaker,Sending back the labeled-response for PING commands.,3,[],https://github.com/unrealircd/unrealircd/pull/146,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/146#issuecomment-877597403,"Making labeled-response work for PING, so we can have a proper alternative to #143","I think this fix may have unwanted side-effects (not for PING/PONG), which is why I will look at it later again and have not merged it yet. Just so you know.",True,"{'THUMBS_UP': ['https://github.com/Polsaker', 'https://github.com/ValwareIRC']}"
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,146,2021-06-27T01:14:37Z,2021-10-30T18:47:41Z,2021-10-30T18:47:41Z,CLOSED,False,18,2,3,https://github.com/Polsaker,Sending back the labeled-response for PING commands.,3,[],https://github.com/unrealircd/unrealircd/pull/146,https://github.com/Polsaker,3,https://github.com/unrealircd/unrealircd/pull/146#issuecomment-955576325,"Making labeled-response work for PING, so we can have a proper alternative to #143",re targeted to unreal 6 on #170,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,147,2021-06-28T00:43:30Z,2021-06-28T04:27:02Z,2021-06-28T04:27:02Z,MERGED,True,4,2,1,https://github.com/Polsaker,Adding microsecond precision to `TSCTL ALLTIME`,1,[],https://github.com/unrealircd/unrealircd/pull/147,https://github.com/Polsaker,1,https://github.com/unrealircd/unrealircd/pull/147,This enables a closer monitoring of clock sync across a network while keeping compatibility with the previous format,This enables a closer monitoring of clock sync across a network while keeping compatibility with the previous format,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,148,2021-07-02T17:31:46Z,2021-11-28T09:15:38Z,2021-11-28T09:15:38Z,CLOSED,False,4,0,1,https://github.com/progval,cap: Remove trailing whitespaces from CAP ACK/NAK,1,[],https://github.com/unrealircd/unrealircd/pull/148,https://github.com/progval,1,https://github.com/unrealircd/unrealircd/pull/148,"I don't see any reason for them to be there, and it's unclear if
https://ircv3.net/specs/extensions/capability-negotiation.html
allows it (it just says 'space-separated list of capabilities')","I don't see any reason for them to be there, and it's unclear if
https://ircv3.net/specs/extensions/capability-negotiation.html
allows it (it just says 'space-separated list of capabilities')",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,148,2021-07-02T17:31:46Z,2021-11-28T09:15:38Z,2021-11-28T09:15:38Z,CLOSED,False,4,0,1,https://github.com/progval,cap: Remove trailing whitespaces from CAP ACK/NAK,1,[],https://github.com/unrealircd/unrealircd/pull/148,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/148#issuecomment-981050833,"I don't see any reason for them to be there, and it's unclear if
https://ircv3.net/specs/extensions/capability-negotiation.html
allows it (it just says 'space-separated list of capabilities')","If an IRC client has issues with (such) trailing whitespace then that client should really be fixed.
Not the same, and perhaps a confusing example, but it is a bit like clients who fail on x y z being sent by x y :z by some IRCds. As long as z contains no spaces, the client should accept it as the same. If a client fails on that, eg makes a difference between with the : and without it, it means they are parsing at a too low level or parsing with insufficient checks that should be common when programming.
Now, we still allow patches like these in sometimes, eg for aesthetic reasons. For this particular patch, I don't like the direct accessing of the character array, which is apparently common in this code. I would prefer to rewrite all the code in cap_req() to conform to the new style of doing things in a safe & clean way instead of the old focus on performance. That is just a low to normal priority item for me (although higher prio than ""removing trailing whitespace""), and right now we are in a change freeze.
I think it's best for me to just close this PR and we'll see one day if I rewrite the thing there in the next few years. Then I am likely to think of stripping the trailing whitespace as well. I think I will remember, but if not then you are free to prod me after the rewrite.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,149,2021-07-02T19:12:54Z,2021-07-03T06:29:43Z,2021-07-03T06:30:34Z,CLOSED,False,108,1,3,https://github.com/progval,Add support for +draft/react and load the module by default.,1,[],https://github.com/unrealircd/unrealircd/pull/149,https://github.com/progval,1,https://github.com/unrealircd/unrealircd/pull/149,"See https://ircv3.net/specs/client-tags/reply for the draft.
This is copy-pasted from src/modules/reply-tag.c minus the
(lack of) validation of the value.","See https://ircv3.net/specs/client-tags/reply for the draft.
This is copy-pasted from src/modules/reply-tag.c minus the
(lack of) validation of the value.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,149,2021-07-02T19:12:54Z,2021-07-03T06:29:43Z,2021-07-03T06:30:34Z,CLOSED,False,108,1,3,https://github.com/progval,Add support for +draft/react and load the module by default.,1,[],https://github.com/unrealircd/unrealircd/pull/149,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/149#issuecomment-873355706,"See https://ircv3.net/specs/client-tags/reply for the draft.
This is copy-pasted from src/modules/reply-tag.c minus the
(lack of) validation of the value.","I'm afraid I have no plans to accept this in UnrealIRCd. My main problem with this is that it means some clients will see reactions and others will not see them at all. That is highly confusing and destroying the IRC experience we have had for a long time where all clients see the same discussion. I think that's really bad for IRC.
I'm not going to redo the entire discussion about this, which is why I will post a long answer below, and you can also read ircv3/ircv3-specifications#333.
At UnrealIRCd we have always been progressive about IRC. We have been accused by specification- and protocol-purists for violating the RFC for decades. Something we always did and will keep doing to advance IRC, long before IRCv3 existed. Nowadays a majority considers that good and modern.
With IRCv3 we continue to pick good features that bring IRC forward. It's fine if some clients see things slightly different than others, eg cap chghost versus rejoin on host change, or the typing tags or reply tag.. that's all fine, it's not really at the expense of others. But with this feature it is an issue. It breaks with the IRC tradition where everyone can follow the same conversation. With this feature you are basically locked out of the conversation. If you don't support the +react feature then you don't see part of the conversation. It's a moderation problem but also goes far beyond moderation. It's not good and like I said it destroys the IRC experience when not everyone sees the same discussion.
Now, this may not have that much of an impact if the tag is rarely used, but then one could just as well not allow the tag at all.. like in our case.
Also, and I know the two features are not identical, but +reply can be used in many of the situations where one would use +react. The good thing is that the +reply tag does not have the downsides that the +react tag has. With +reply, users who are on IRC clients that do not support the +reply tag can still see the content of the messages/reactions from +reply users. We do support +reply for that reason.
You are still free to submit it as a 3rd party module at unrealircd-contrib, if you wish. The rules for unrealircd-contrib are far more lax.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,150,2021-07-03T22:22:49Z,2021-07-11T07:09:19Z,2021-07-11T07:47:50Z,MERGED,True,16,2,1,https://github.com/progval,chathistory: Use more explicit messages on INVALID_TARGET failure message,1,[],https://github.com/unrealircd/unrealircd/pull/150,https://github.com/progval,1,https://github.com/unrealircd/unrealircd/pull/150,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,151,2021-07-05T20:54:33Z,2021-07-11T07:24:14Z,2021-07-11T07:24:32Z,MERGED,True,20,1,1,https://github.com/Polsaker,Adding `sequential-fallback` autoconnect strategy,1,[],https://github.com/unrealircd/unrealircd/pull/151,https://github.com/Polsaker,1,https://github.com/unrealircd/unrealircd/pull/151,"This new autoconnect strategy is identical to the sequential one, but it will re-try the first node upon a successful connection.
This is useful if you have a primary hub and all your other autoconnects are less desirable, fallback links.","This new autoconnect strategy is identical to the sequential one, but it will re-try the first node upon a successful connection.
This is useful if you have a primary hub and all your other autoconnects are less desirable, fallback links.",True,{'HOORAY': ['https://github.com/stefansaraev']}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,151,2021-07-05T20:54:33Z,2021-07-11T07:24:14Z,2021-07-11T07:24:32Z,MERGED,True,20,1,1,https://github.com/Polsaker,Adding `sequential-fallback` autoconnect strategy,1,[],https://github.com/unrealircd/unrealircd/pull/151,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/151#issuecomment-877597073,"This new autoconnect strategy is identical to the sequential one, but it will re-try the first node upon a successful connection.
This is useful if you have a primary hub and all your other autoconnects are less desirable, fallback links.","This is a good idea, but now I wonder if maybe this should be the default, which is why I didn't immediately hit the ""merge"" button just yet :D. Will get back on this...",True,"{'HOORAY': ['https://github.com/stefansaraev', 'https://github.com/Polsaker']}"
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,151,2021-07-05T20:54:33Z,2021-07-11T07:24:14Z,2021-07-11T07:24:32Z,MERGED,True,20,1,1,https://github.com/Polsaker,Adding `sequential-fallback` autoconnect strategy,1,[],https://github.com/unrealircd/unrealircd/pull/151,https://github.com/syzop,3,https://github.com/unrealircd/unrealircd/pull/151#issuecomment-877754416,"This new autoconnect strategy is identical to the sequential one, but it will re-try the first node upon a successful connection.
This is useful if you have a primary hub and all your other autoconnects are less desirable, fallback links.","Alright, I'm just going to merge this. We can look at making it the new default in a later version. And thanks again! :D",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,152,2021-07-09T01:24:43Z,2021-11-28T09:50:00Z,2021-11-28T09:50:00Z,CLOSED,False,24,3,3,https://github.com/Polsaker,Implementing IPv6 -> IPv4 fallback,1,[],https://github.com/unrealircd/unrealircd/pull/152,https://github.com/Polsaker,1,https://github.com/unrealircd/unrealircd/pull/152,"This PR will make unreal attempt to link over IPv4 when getting timeout or network unreachable errors over IPv6, as opposed to just failing to connect.","This PR will make unreal attempt to link over IPv4 when getting timeout or network unreachable errors over IPv6, as opposed to just failing to connect.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,152,2021-07-09T01:24:43Z,2021-11-28T09:50:00Z,2021-11-28T09:50:00Z,CLOSED,False,24,3,3,https://github.com/Polsaker,Implementing IPv6 -> IPv4 fallback,1,[],https://github.com/unrealircd/unrealircd/pull/152,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/152#issuecomment-981055035,"This PR will make unreal attempt to link over IPv4 when getting timeout or network unreachable errors over IPv6, as opposed to just failing to connect.","I don't want to touch 5.x for this, as most people did not have an issue with this. Presumably they are used to using an IP address in link::outgoing::hostname and can live with this effect.
For 6.x (too late in the development process, after the freeze) I looked at Happy Eyeballs v2 as I would want to ""do things good, once and for all"". We could do it as they propose there or with a slight variation like this:

Start an IPv6 lookup
If we have an IPv6 record, start connecting there
Upon IPv6 DNS lookup response (both found and not found) or after a DNS lookup timeout: do the IPv4 lookup
If we have an IPv4 record, and the IPv6 is not connected yet, start connecting too
Then whichever connection is established wins and the other one is cancelled.
And with ""established"" I mean SYN-ACK, with zero IRC protocol messages have been sent yet.

Of course, that would require a more major overhaul of things, so.. I don't know how realistic it is to do without risking bugs or breakage (multiple objects referring to the same link block, ref counts, and so on). We can try, though.
As this PR won't make it into unreal52, I am closing it. I copy-pasted the above to the bug issue tracking this https://bugs.unrealircd.org/view.php?id=4687",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,153,2021-07-09T14:49:09Z,2021-07-09T14:49:34Z,2021-07-13T20:15:18Z,CLOSED,False,59,6,7,https://github.com/angryce,Added polsaker's pull reqs,1,[],https://github.com/unrealircd/unrealircd/pull/153,https://github.com/angryce,1,https://github.com/unrealircd/unrealircd/pull/153,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,154,2021-07-09T22:57:47Z,2021-07-10T00:19:50Z,2021-07-10T00:19:50Z,CLOSED,False,1,0,1,https://github.com/ValwareIRC,"Update sasl.c to allow ""saslmechlist"" to be set by another server.",1,[],https://github.com/unrealircd/unrealircd/pull/154,https://github.com/ValwareIRC,1,https://github.com/unrealircd/unrealircd/pull/154,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,155,2021-07-10T00:00:22Z,2021-07-10T07:25:31Z,2021-07-10T07:25:31Z,CLOSED,False,1,1,1,https://github.com/jobe1986,Fix for mod data client modification restriction inconsistency,1,[],https://github.com/unrealircd/unrealircd/pull/155,https://github.com/jobe1986,1,https://github.com/unrealircd/unrealircd/pull/155,Allow a server to modify mod data for its own clients and itself even if it is a client of the server receiving the MD message. This should fix bug https://bugs.unrealircd.org/view.php?id=5960,Allow a server to modify mod data for its own clients and itself even if it is a client of the server receiving the MD message. This should fix bug https://bugs.unrealircd.org/view.php?id=5960,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,155,2021-07-10T00:00:22Z,2021-07-10T07:25:31Z,2021-07-10T07:25:31Z,CLOSED,False,1,1,1,https://github.com/jobe1986,Fix for mod data client modification restriction inconsistency,1,[],https://github.com/unrealircd/unrealircd/pull/155,https://github.com/jobe1986,2,https://github.com/unrealircd/unrealircd/pull/155#issuecomment-877586853,Allow a server to modify mod data for its own clients and itself even if it is a client of the server receiving the MD message. This should fix bug https://bugs.unrealircd.org/view.php?id=5960,No longer needed,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,156,2021-07-10T21:39:19Z,2021-12-19T09:41:56Z,2021-12-19T09:41:56Z,MERGED,True,15,2,1,https://github.com/k4bek4be,"Make CHATHISTORY not FAIL on a request for -H channel, sending empty history instead",3,[],https://github.com/unrealircd/unrealircd/pull/156,https://github.com/k4bek4be,1,https://github.com/unrealircd/unrealircd/pull/156,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,156,2021-07-10T21:39:19Z,2021-12-19T09:41:56Z,2021-12-19T09:41:56Z,MERGED,True,15,2,1,https://github.com/k4bek4be,"Make CHATHISTORY not FAIL on a request for -H channel, sending empty history instead",3,[],https://github.com/unrealircd/unrealircd/pull/156,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/156#issuecomment-981059345,,"Some say current behavior is totally fine and how it should be, others (may) want something else. Have asked again today upstream if this is what they want/need.
Pending clear up there...",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,157,2021-07-10T21:39:39Z,2021-07-11T07:24:56Z,2021-07-11T07:24:56Z,MERGED,True,6,6,1,https://github.com/k4bek4be,Make CHATHISTORY subcommands case-insensitive,1,[],https://github.com/unrealircd/unrealircd/pull/157,https://github.com/k4bek4be,1,https://github.com/unrealircd/unrealircd/pull/157,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,158,2021-07-11T18:06:30Z,2021-11-01T16:35:53Z,2021-11-01T16:36:17Z,CLOSED,False,4,23,1,https://github.com/Polsaker,Removing seemingly needless looping on SQUITs.,1,[],https://github.com/unrealircd/unrealircd/pull/158,https://github.com/Polsaker,1,https://github.com/unrealircd/unrealircd/pull/158,"All this recursing seemed to be a leftover from ancient times and
was degrading the performance.
Hoping Syzop can provide more insight on this :D","All this recursing seemed to be a leftover from ancient times and
was degrading the performance.
Hoping Syzop can provide more insight on this :D",True,"{'HEART': ['https://github.com/stefansaraev', 'https://github.com/tzvetkoff']}"
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,158,2021-07-11T18:06:30Z,2021-11-01T16:35:53Z,2021-11-01T16:36:17Z,CLOSED,False,4,23,1,https://github.com/Polsaker,Removing seemingly needless looping on SQUITs.,1,[],https://github.com/unrealircd/unrealircd/pull/158,https://github.com/tzvetkoff,2,https://github.com/unrealircd/unrealircd/pull/158#issuecomment-879349256,"All this recursing seemed to be a leftover from ancient times and
was degrading the performance.
Hoping Syzop can provide more insight on this :D","I assume this was only needed for servers not supporting NOQUIT cap.
Since nowadays pretty much everything supports it, well... let's move forward!",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,158,2021-07-11T18:06:30Z,2021-11-01T16:35:53Z,2021-11-01T16:36:17Z,CLOSED,False,4,23,1,https://github.com/Polsaker,Removing seemingly needless looping on SQUITs.,1,[],https://github.com/unrealircd/unrealircd/pull/158,https://github.com/syzop,3,https://github.com/unrealircd/unrealircd/pull/158#issuecomment-956390239,"All this recursing seemed to be a leftover from ancient times and
was degrading the performance.
Hoping Syzop can provide more insight on this :D","Thanks. I am not too comfortable doing this in 5.x but have done now 6.0.0, will be in 6.0.0-beta2 whenever it is released.
Commit: 1b308c7",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,159,2021-07-11T22:15:52Z,2021-11-28T09:54:05Z,2021-11-28T09:54:21Z,MERGED,True,3,0,1,https://github.com/Polsaker,Sending WALLOPS back to the oper that issued it.,1,[],https://github.com/unrealircd/unrealircd/pull/159,https://github.com/Polsaker,1,https://github.com/unrealircd/unrealircd/pull/159,"This reassures the oper that the message was actually sent, and
makes it consistent with the behavior of GLOBOPS and NOTICE $*","This reassures the oper that the message was actually sent, and
makes it consistent with the behavior of GLOBOPS and NOTICE $*",True,{'THUMBS_UP': ['https://github.com/stefansaraev']}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,159,2021-07-11T22:15:52Z,2021-11-28T09:54:05Z,2021-11-28T09:54:21Z,MERGED,True,3,0,1,https://github.com/Polsaker,Sending WALLOPS back to the oper that issued it.,1,[],https://github.com/unrealircd/unrealircd/pull/159,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/159#issuecomment-981055392,"This reassures the oper that the message was actually sent, and
makes it consistent with the behavior of GLOBOPS and NOTICE $*","Yeah this is basically the same as it ended up in UnrealIRCd 6 (9f56fb4) after discussion on #171 and https://bugs.unrealircd.org/view.php?id=5764
I didn't notice the commit and this patch is pretty much identical, thanks! :D",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,160,2021-07-13T19:21:21Z,2021-07-13T19:21:28Z,2021-07-13T19:21:28Z,CLOSED,False,204920,25,1163,https://github.com/angryce,Pissircd,8,[],https://github.com/unrealircd/unrealircd/pull/160,https://github.com/angryce,1,https://github.com/unrealircd/unrealircd/pull/160,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,161,2021-07-13T19:48:10Z,2021-07-13T19:48:18Z,2021-07-13T19:48:18Z,CLOSED,False,80347,5,80,https://github.com/angryce,Just need to change it,129,[],https://github.com/unrealircd/unrealircd/pull/161,https://github.com/angryce,1,https://github.com/unrealircd/unrealircd/pull/161,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,162,2021-08-10T17:46:41Z,2021-11-27T18:42:39Z,2021-11-27T18:42:39Z,CLOSED,False,14,10,3,https://github.com/progval,Return ERR_INVALIDMODEPARAM instead of truncating invalid keys,2,[],https://github.com/unrealircd/unrealircd/pull/162,https://github.com/progval,1,https://github.com/unrealircd/unrealircd/pull/162,"This is more user-friendly (prevents setting a different key than
what the other requested) and makes the behavior consistent with
InspIRCd and Ergo (and hopefully others soon).
ircdocs/modern-irc#111","This is more user-friendly (prevents setting a different key than
what the other requested) and makes the behavior consistent with
InspIRCd and Ergo (and hopefully others soon).
ircdocs/modern-irc#111",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,163,2021-08-14T16:20:25Z,2021-11-28T09:17:57Z,2021-11-28T10:16:10Z,CLOSED,False,8,1,3,https://github.com/progval,Send RPL_WHOISACTUALLY in addition to RPL_WHOISHOST,1,[],https://github.com/unrealircd/unrealircd/pull/163,https://github.com/progval,1,https://github.com/unrealircd/unrealircd/pull/163,"Unlike RPL_WHOISHOST, it contains the user@host and ip as separate parameters,
instead of having them in the free-text parameter.
To my knowledge, there are three different syntaxes for RPL_WHOISACTUALLY:

<client> <nick> :is actually ... (bahamut)
<client> <nick> <host> :Is actually using host (charybdis family)
<client> <nick> <username>@<host> <ip> :Is actually using host
(ircu2, ergo, hybrid, ...)

I chose the third one because it contains the most info, and is the most
common one.
I kept RPL_WHOISHOST despite being redundant for backward compatibility,
but I can remove it if you prefer.","Unlike RPL_WHOISHOST, it contains the user@host and ip as separate parameters,
instead of having them in the free-text parameter.
To my knowledge, there are three different syntaxes for RPL_WHOISACTUALLY:

<client> <nick> :is actually ... (bahamut)
<client> <nick> <host> :Is actually using host (charybdis family)
<client> <nick> <username>@<host> <ip> :Is actually using host
(ircu2, ergo, hybrid, ...)

I chose the third one because it contains the most info, and is the most
common one.
I kept RPL_WHOISHOST despite being redundant for backward compatibility,
but I can remove it if you prefer.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,163,2021-08-14T16:20:25Z,2021-11-28T09:17:57Z,2021-11-28T10:16:10Z,CLOSED,False,8,1,3,https://github.com/progval,Send RPL_WHOISACTUALLY in addition to RPL_WHOISHOST,1,[],https://github.com/unrealircd/unrealircd/pull/163,https://github.com/progval,2,https://github.com/unrealircd/unrealircd/pull/163#issuecomment-899015077,"Unlike RPL_WHOISHOST, it contains the user@host and ip as separate parameters,
instead of having them in the free-text parameter.
To my knowledge, there are three different syntaxes for RPL_WHOISACTUALLY:

<client> <nick> :is actually ... (bahamut)
<client> <nick> <host> :Is actually using host (charybdis family)
<client> <nick> <username>@<host> <ip> :Is actually using host
(ircu2, ergo, hybrid, ...)

I chose the third one because it contains the most info, and is the most
common one.
I kept RPL_WHOISHOST despite being redundant for backward compatibility,
but I can remove it if you prefer.","FYI, I sent a similar PR to InspIRCd, but they decided to replace RPL_WHOISHOST with RPL_WHOISACTUALLY instead of sending both",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,163,2021-08-14T16:20:25Z,2021-11-28T09:17:57Z,2021-11-28T10:16:10Z,CLOSED,False,8,1,3,https://github.com/progval,Send RPL_WHOISACTUALLY in addition to RPL_WHOISHOST,1,[],https://github.com/unrealircd/unrealircd/pull/163,https://github.com/syzop,3,https://github.com/unrealircd/unrealircd/pull/163#issuecomment-981017432,"Unlike RPL_WHOISHOST, it contains the user@host and ip as separate parameters,
instead of having them in the free-text parameter.
To my knowledge, there are three different syntaxes for RPL_WHOISACTUALLY:

<client> <nick> :is actually ... (bahamut)
<client> <nick> <host> :Is actually using host (charybdis family)
<client> <nick> <username>@<host> <ip> :Is actually using host
(ircu2, ergo, hybrid, ...)

I chose the third one because it contains the most info, and is the most
common one.
I kept RPL_WHOISHOST despite being redundant for backward compatibility,
but I can remove it if you prefer.","I'm not considering this for UnrealIRCd 5.x.
I have looked at this during UnrealIRCd 6 development, but it was behind closed doors at the time so I could not comment about the results here. I agree with InspIRCd that if you would go this route then you should send one of the numerics and not both. The problem is it caused display issues in /WHOIS with the first client that I tried, which was mIRC, or at least half of the information is missing and it looks weird too. This made me wonder how common this numeric really is (or at least in the variant you proposed), if such a common client does not display it correctly. So I did not put it in UnrealIRCd 6. After that, I simply forgot about it.
In general I don't mind changing things in the interest of standardization, it makes life more simple for (future) client coders. However, the benefit to end-users of it is limited (in this case they would see the same information, just in a different way, or actually in this case possibly a near-identical way). So, with the benefit being limited, as soon as it causes any display issues (a cost), the benefit/cost ratio is not good anymore, which makes me lose interest.
So, how to move forward? If you are passionate about this particular thing, then feel free to try with a good amount of major clients: see if there is loss of information or other issues in the /WHOIS display if you use RPL_WHOISACTUALLY instead of RPL_WHOISHOST with the patch you proposed, and then hunt the client developers down if such display issues would occur.
If you can then report back here with a list of clients and the result of that looks good (eg have them fixed or did not have them in the first place) then that would help with acceptance of this numeric change. And yes, this could also involve us waiting a while until clients have fixed things and giving end-users some time to catch up on those new versions, as I see no reason to rush this.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,163,2021-08-14T16:20:25Z,2021-11-28T09:17:57Z,2021-11-28T10:16:10Z,CLOSED,False,8,1,3,https://github.com/progval,Send RPL_WHOISACTUALLY in addition to RPL_WHOISHOST,1,[],https://github.com/unrealircd/unrealircd/pull/163,https://github.com/syzop,4,https://github.com/unrealircd/unrealircd/pull/163#issuecomment-981051146,"Unlike RPL_WHOISHOST, it contains the user@host and ip as separate parameters,
instead of having them in the free-text parameter.
To my knowledge, there are three different syntaxes for RPL_WHOISACTUALLY:

<client> <nick> :is actually ... (bahamut)
<client> <nick> <host> :Is actually using host (charybdis family)
<client> <nick> <username>@<host> <ip> :Is actually using host
(ircu2, ergo, hybrid, ...)

I chose the third one because it contains the most info, and is the most
common one.
I kept RPL_WHOISHOST despite being redundant for backward compatibility,
but I can remove it if you prefer.","Closing this PR, since it will need to be retargeted for U6 (taking into account the notes of above).",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,163,2021-08-14T16:20:25Z,2021-11-28T09:17:57Z,2021-11-28T10:16:10Z,CLOSED,False,8,1,3,https://github.com/progval,Send RPL_WHOISACTUALLY in addition to RPL_WHOISHOST,1,[],https://github.com/unrealircd/unrealircd/pull/163,https://github.com/progval,5,https://github.com/unrealircd/unrealircd/pull/163#issuecomment-981058477,"Unlike RPL_WHOISHOST, it contains the user@host and ip as separate parameters,
instead of having them in the free-text parameter.
To my knowledge, there are three different syntaxes for RPL_WHOISACTUALLY:

<client> <nick> :is actually ... (bahamut)
<client> <nick> <host> :Is actually using host (charybdis family)
<client> <nick> <username>@<host> <ip> :Is actually using host
(ircu2, ergo, hybrid, ...)

I chose the third one because it contains the most info, and is the most
common one.
I kept RPL_WHOISHOST despite being redundant for backward compatibility,
but I can remove it if you prefer.","However, the benefit to end-users of it is limited (in this case they would see the same information, just in a different way, or actually in this case possibly a near-identical way).

Another benefit is that RPL_WHOISACTUALLY is parseable, either by bots or clients wishing to implement more ""fancy"" displays; while RPL_WHOISHOST can't reliably be displayed as anything but free-form text.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,164,2021-09-01T09:02:37Z,2021-09-04T00:56:11Z,2021-09-04T00:56:11Z,CLOSED,False,20,9,1,https://github.com/ValwareIRC,I know it's niche but: be more inclusive of 'all-admin' ,9,[],https://github.com/unrealircd/unrealircd/pull/164,https://github.com/ValwareIRC,1,https://github.com/unrealircd/unrealircd/pull/164,"for all-admin setups (yes they exist)
removed the warning and allow the mass setting/adding of channelmodes 'vhoaq' via SVSMODE","for all-admin setups (yes they exist)
removed the warning and allow the mass setting/adding of channelmodes 'vhoaq' via SVSMODE",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,164,2021-09-01T09:02:37Z,2021-09-04T00:56:11Z,2021-09-04T00:56:11Z,CLOSED,False,20,9,1,https://github.com/ValwareIRC,I know it's niche but: be more inclusive of 'all-admin' ,9,[],https://github.com/unrealircd/unrealircd/pull/164,https://github.com/ValwareIRC,2,https://github.com/unrealircd/unrealircd/pull/164#issuecomment-912879437,"for all-admin setups (yes they exist)
removed the warning and allow the mass setting/adding of channelmodes 'vhoaq' via SVSMODE",I genuinely have no idea how this messed up so badly,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,165,2021-09-04T01:02:22Z,2021-09-09T17:03:07Z,2021-09-09T17:03:07Z,CLOSED,False,19,9,1,https://github.com/ValwareIRC,Update svsmode.c,1,[],https://github.com/unrealircd/unrealircd/pull/165,https://github.com/ValwareIRC,1,https://github.com/unrealircd/unrealircd/pull/165,"Cater for niche ""all-admin"" channels/setups","Cater for niche ""all-admin"" channels/setups",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,165,2021-09-04T01:02:22Z,2021-09-09T17:03:07Z,2021-09-09T17:03:07Z,CLOSED,False,19,9,1,https://github.com/ValwareIRC,Update svsmode.c,1,[],https://github.com/unrealircd/unrealircd/pull/165,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/165#issuecomment-916277281,"Cater for niche ""all-admin"" channels/setups",hmhm :D :D,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,166,2021-09-04T14:04:30Z,2021-09-09T16:39:02Z,2021-09-09T16:41:23Z,CLOSED,False,98,0,3,https://github.com/ValwareIRC,introduce service tag,5,[],https://github.com/unrealircd/unrealircd/pull/166,https://github.com/ValwareIRC,1,https://github.com/unrealircd/unrealircd/pull/166,this allows clients to properly ensure the client requesting a password is not someone holding the nick hostage after a netsplit case or something.,this allows clients to properly ensure the client requesting a password is not someone holding the nick hostage after a netsplit case or something.,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,166,2021-09-04T14:04:30Z,2021-09-09T16:39:02Z,2021-09-09T16:41:23Z,CLOSED,False,98,0,3,https://github.com/ValwareIRC,introduce service tag,5,[],https://github.com/unrealircd/unrealircd/pull/166,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/166#issuecomment-916260731,this allows clients to properly ensure the client requesting a password is not someone holding the nick hostage after a netsplit case or something.,"I don't find this a useful feature. Any decent network prevents normal users from taking the nick NickServ and ChanServ, we even have it in the example.conf by default. That is way more useful/important than adding a tag.
You are free to code a 3rd party module for it, of course.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,167,2021-09-19T10:38:09Z,2021-11-28T09:17:33Z,2021-11-28T09:17:33Z,CLOSED,False,21,20,1,https://github.com/progval,help: Change numerics for consistency with other IRCds,1,[],https://github.com/unrealircd/unrealircd/pull/167,https://github.com/progval,1,https://github.com/unrealircd/unrealircd/pull/167,"Especially Ergo, InspIRCd, and Solanum.
I'm working on a specification here: ircdocs/modern-irc#132","Especially Ergo, InspIRCd, and Solanum.
I'm working on a specification here: ircdocs/modern-irc#132",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,167,2021-09-19T10:38:09Z,2021-11-28T09:17:33Z,2021-11-28T09:17:33Z,CLOSED,False,21,20,1,https://github.com/progval,help: Change numerics for consistency with other IRCds,1,[],https://github.com/unrealircd/unrealircd/pull/167,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/167#issuecomment-981028933,"Especially Ergo, InspIRCd, and Solanum.
I'm working on a specification here: ircdocs/modern-irc#132","If you redo this PR for UnrealIRCd 6 (branch unreal60_dev) then I will likely accept this, as long as it looks good in major IRC clients (compared to the current numeric).
It would be something for version 6.0.1 or 6.0.2, though, as 6.0.0 is in RC stage with minimal changes allowed.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,167,2021-09-19T10:38:09Z,2021-11-28T09:17:33Z,2021-11-28T09:17:33Z,CLOSED,False,21,20,1,https://github.com/progval,help: Change numerics for consistency with other IRCds,1,[],https://github.com/unrealircd/unrealircd/pull/167,https://github.com/syzop,3,https://github.com/unrealircd/unrealircd/pull/167#issuecomment-981051107,"Especially Ergo, InspIRCd, and Solanum.
I'm working on a specification here: ircdocs/modern-irc#132","Closing this PR, since it will need to be retargeted for U6.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,168,2021-10-03T17:57:55Z,2021-11-01T08:18:15Z,2021-11-01T08:18:15Z,CLOSED,False,1,1,1,https://github.com/robert-scheck,Add CentOS 7 to Release Notes,1,[],https://github.com/unrealircd/unrealircd/pull/168,https://github.com/robert-scheck,1,https://github.com/unrealircd/unrealircd/pull/168,CentOS 7 ships OpenSSL 1.0.2k,CentOS 7 ships OpenSSL 1.0.2k,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,168,2021-10-03T17:57:55Z,2021-11-01T08:18:15Z,2021-11-01T08:18:15Z,CLOSED,False,1,1,1,https://github.com/robert-scheck,Add CentOS 7 to Release Notes,1,[],https://github.com/unrealircd/unrealircd/pull/168,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/168#issuecomment-956026840,CentOS 7 ships OpenSSL 1.0.2k,"We could have added it, but.. this change would not have changed the release notes of the already released version. I think it's OK to close by now.
Thanks for maintaining RPM packages btw, I've never used it myself but I'm sure it is appreciated by others :)",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,169,2021-10-12T22:18:22Z,2021-10-12T22:18:57Z,2021-10-12T22:18:57Z,CLOSED,False,1462,1462,1,https://github.com/CWO-Stanley,Unreal50,7,[],https://github.com/unrealircd/unrealircd/pull/169,https://github.com/CWO-Stanley,1,https://github.com/unrealircd/unrealircd/pull/169,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,170,2021-10-30T18:33:25Z,,2021-11-28T09:31:49Z,OPEN,False,18,2,3,https://github.com/Polsaker,Sending labeled-response on remote TSCTL and PING replies,1,[],https://github.com/unrealircd/unrealircd/pull/170,https://github.com/Polsaker,1,https://github.com/unrealircd/unrealircd/pull/170,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,170,2021-10-30T18:33:25Z,,2021-11-28T09:31:49Z,OPEN,False,18,2,3,https://github.com/Polsaker,Sending labeled-response on remote TSCTL and PING replies,1,[],https://github.com/unrealircd/unrealircd/pull/170,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/170#issuecomment-981052946,,"As I mentioned in the previous PR my gut feeling says this fix is wrong as it has the potential to cause issues in other areas. But... I have not had the chance to look into this yet, eg that issue and/or an alternative patch that would work as well.
It is good you brought it up again, though, and I will look at it for 6.0.1/6.0.2/.. as it would be nice to have this functionality working. During UnrealIRCd 6 development I focused on other (major) areas and did not go through all PR's / other bugs/feature enhancements in the bug tracker ""that would also be nice"" since it would have delayed the release too much.
Just saying this, in case you wonder why it is lingering.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,171,2021-10-30T18:46:46Z,2021-11-10T06:31:07Z,2021-11-10T06:31:07Z,CLOSED,False,2,4,1,https://github.com/Polsaker,Sending wallops back to the user that issued it,1,[],https://github.com/unrealircd/unrealircd/pull/171,https://github.com/Polsaker,1,https://github.com/unrealircd/unrealircd/pull/171,Small QoL improvement so that we can be 100% sure that the wallops was actually sent (it also now behaves like globops),Small QoL improvement so that we can be 100% sure that the wallops was actually sent (it also now behaves like globops),True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,171,2021-10-30T18:46:46Z,2021-11-10T06:31:07Z,2021-11-10T06:31:07Z,CLOSED,False,2,4,1,https://github.com/Polsaker,Sending wallops back to the user that issued it,1,[],https://github.com/unrealircd/unrealircd/pull/171,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/171#issuecomment-956024604,Small QoL improvement so that we can be 100% sure that the wallops was actually sent (it also now behaves like globops),"Since you removed all the skipping over, in a multi-server scenario, wouldn't this cause a receiving server to send the message back to the origin server? Causing a never ending storm of A->B, B->A, A->B, B->A, etc. ?",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,171,2021-10-30T18:46:46Z,2021-11-10T06:31:07Z,2021-11-10T06:31:07Z,CLOSED,False,2,4,1,https://github.com/Polsaker,Sending wallops back to the user that issued it,1,[],https://github.com/unrealircd/unrealircd/pull/171,https://github.com/Polsaker,3,https://github.com/unrealircd/unrealircd/pull/171#issuecomment-956435032,Small QoL improvement so that we can be 100% sure that the wallops was actually sent (it also now behaves like globops),"This is not the case as far as we've tested on Pissnet (we tested 6.0 patched <-> 6.0 patched, 6.0 patched <-> 6.0 unpatched and 6.0 patched <-> 5.2)",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,171,2021-10-30T18:46:46Z,2021-11-10T06:31:07Z,2021-11-10T06:31:07Z,CLOSED,False,2,4,1,https://github.com/Polsaker,Sending wallops back to the user that issued it,1,[],https://github.com/unrealircd/unrealircd/pull/171,https://github.com/ValwareIRC,4,https://github.com/unrealircd/unrealircd/pull/171#issuecomment-964660192,Small QoL improvement so that we can be 100% sure that the wallops was actually sent (it also now behaves like globops),can't wait for this to be a thing :),True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,171,2021-10-30T18:46:46Z,2021-11-10T06:31:07Z,2021-11-10T06:31:07Z,CLOSED,False,2,4,1,https://github.com/Polsaker,Sending wallops back to the user that issued it,1,[],https://github.com/unrealircd/unrealircd/pull/171,https://github.com/syzop,5,https://github.com/unrealircd/unrealircd/pull/171#issuecomment-964826608,Small QoL improvement so that we can be 100% sure that the wallops was actually sent (it also now behaves like globops),"This patch indeed sends the message back to where it came from. It doesn't cause a storm because it results in a message with a ""bad direction"" which is silently ignored, but I'm afraid it's still wrong.
I have now fixed it in 9f56fb4
The alternative would be to do it in the loop in sendto_wallops() at the place where it checks for == one but then that if became a bit too confusing so I like this one plain and simple :)",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,172,2021-10-31T18:05:54Z,2021-11-01T02:03:53Z,2021-11-01T02:03:53Z,CLOSED,False,276,285,17,https://github.com/alicetries,Update short_date function to avoid potential crash on musl if year > 9999,16,[],https://github.com/unrealircd/unrealircd/pull/172,https://github.com/alicetries,1,https://github.com/unrealircd/unrealircd/pull/172,"The asctime() function is undefined when called with a year of >9999 (as it would generate output longer than the 26 byte buffer) according to POSIX
This only appears triggerable through sending dodgy data through S2S commands, however does cause the ircd to crash when running on a mixed musl/glibc network.","The asctime() function is undefined when called with a year of >9999 (as it would generate output longer than the 26 byte buffer) according to POSIX
This only appears triggerable through sending dodgy data through S2S commands, however does cause the ircd to crash when running on a mixed musl/glibc network.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,172,2021-10-31T18:05:54Z,2021-11-01T02:03:53Z,2021-11-01T02:03:53Z,CLOSED,False,276,285,17,https://github.com/alicetries,Update short_date function to avoid potential crash on musl if year > 9999,16,[],https://github.com/unrealircd/unrealircd/pull/172,https://github.com/alicetries,2,https://github.com/unrealircd/unrealircd/pull/172#issuecomment-955767483,"The asctime() function is undefined when called with a year of >9999 (as it would generate output longer than the 26 byte buffer) according to POSIX
This only appears triggerable through sending dodgy data through S2S commands, however does cause the ircd to crash when running on a mixed musl/glibc network.","This may actually be better to be replaced with strftime, I'll have a bit of an investigate on that one.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,173,2021-10-31T23:54:09Z,2021-11-01T06:09:49Z,2021-11-01T06:09:49Z,MERGED,True,9,9,3,https://github.com/ValwareIRC,Correct chgcmd snotice behaviour,6,[],https://github.com/unrealircd/unrealircd/pull/173,https://github.com/ValwareIRC,1,https://github.com/unrealircd/unrealircd/pull/173,"Fixed incorrectly shown chgcmd notices. even though placeholders are used, I am not sure the use of log_data_* functions lets you use these placeholders in any order.
also changed from $target.detail to $target.details","Fixed incorrectly shown chgcmd notices. even though placeholders are used, I am not sure the use of log_data_* functions lets you use these placeholders in any order.
also changed from $target.detail to $target.details",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,174,2021-11-01T02:09:25Z,2021-12-19T09:29:21Z,2021-12-19T09:29:49Z,MERGED,True,1,5,1,https://github.com/alicetries,Update short_date function to avoid potential crash on musl if year > 9999,1,[],https://github.com/unrealircd/unrealircd/pull/174,https://github.com/alicetries,1,https://github.com/unrealircd/unrealircd/pull/174,"The asctime() function is undefined when called with a year of >9999 (as it would generate output longer than the 26 byte buffer) according to POSIX
This only appears triggerable through sending dodgy data through S2S commands, however does cause the musl-based ircds to crash when running on a mixed musl/glibc network.","The asctime() function is undefined when called with a year of >9999 (as it would generate output longer than the 26 byte buffer) according to POSIX
This only appears triggerable through sending dodgy data through S2S commands, however does cause the musl-based ircds to crash when running on a mixed musl/glibc network.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,174,2021-11-01T02:09:25Z,2021-12-19T09:29:21Z,2021-12-19T09:29:49Z,MERGED,True,1,5,1,https://github.com/alicetries,Update short_date function to avoid potential crash on musl if year > 9999,1,[],https://github.com/unrealircd/unrealircd/pull/174,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/174#issuecomment-981051844,"The asctime() function is undefined when called with a year of >9999 (as it would generate output longer than the 26 byte buffer) according to POSIX
This only appears triggerable through sending dodgy data through S2S commands, however does cause the musl-based ircds to crash when running on a mixed musl/glibc network.","I think you said on IRC not to accept this PR since you would come with a better one. Or is that this one? :)
Just to clear that up...
Otherwise looks fine, as we already use strftime() elsewhere, and this patch gets rid of a needless buffer copy.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,174,2021-11-01T02:09:25Z,2021-12-19T09:29:21Z,2021-12-19T09:29:49Z,MERGED,True,1,5,1,https://github.com/alicetries,Update short_date function to avoid potential crash on musl if year > 9999,1,[],https://github.com/unrealircd/unrealircd/pull/174,https://github.com/alicetries,3,https://github.com/unrealircd/unrealircd/pull/174#issuecomment-985931218,"The asctime() function is undefined when called with a year of >9999 (as it would generate output longer than the 26 byte buffer) according to POSIX
This only appears triggerable through sending dodgy data through S2S commands, however does cause the musl-based ircds to crash when running on a mixed musl/glibc network.","Hi Syzop,
Yep, this is the cleaner one. The original one was basically checking that tm_year <= 9999, but the current strftime approach is cleaner.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,174,2021-11-01T02:09:25Z,2021-12-19T09:29:21Z,2021-12-19T09:29:49Z,MERGED,True,1,5,1,https://github.com/alicetries,Update short_date function to avoid potential crash on musl if year > 9999,1,[],https://github.com/unrealircd/unrealircd/pull/174,https://github.com/syzop,4,https://github.com/unrealircd/unrealircd/pull/174#issuecomment-997357001,"The asctime() function is undefined when called with a year of >9999 (as it would generate output longer than the 26 byte buffer) according to POSIX
This only appears triggerable through sending dodgy data through S2S commands, however does cause the musl-based ircds to crash when running on a mixed musl/glibc network.",Clean indeed. Thanks!,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,175,2021-11-01T13:19:01Z,2021-11-03T07:54:42Z,2021-11-03T07:54:42Z,MERGED,True,13,13,1,https://github.com/westor7,Add the new extbans names instead the flag,1,[],https://github.com/unrealircd/unrealircd/pull/175,https://github.com/westor7,1,https://github.com/unrealircd/unrealircd/pull/175,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,176,2021-11-01T13:27:22Z,2021-11-03T07:53:57Z,2021-11-03T07:53:57Z,MERGED,True,6,0,1,https://github.com/westor7,Check if module is loaded first then set block,1,[],https://github.com/unrealircd/unrealircd/pull/176,https://github.com/westor7,1,https://github.com/unrealircd/unrealircd/pull/176,Just adding an if check to see if module is loaded then proceed to set block.,Just adding an if check to see if module is loaded then proceed to set block.,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,177,2021-11-02T02:23:50Z,2021-11-03T07:52:23Z,2021-11-03T07:52:23Z,MERGED,True,2,2,1,https://github.com/simplexish,sapart.c: fix copy-paste issue,1,[],https://github.com/unrealircd/unrealircd/pull/177,https://github.com/simplexish,1,https://github.com/unrealircd/unrealircd/pull/177,Ditto,Ditto,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,178,2021-11-02T18:53:18Z,2021-11-03T07:22:35Z,2021-11-03T07:22:35Z,MERGED,True,2,2,1,https://github.com/ValwareIRC,"fixed ""none"" not working as set::level-on-join param",2,[],https://github.com/unrealircd/unrealircd/pull/178,https://github.com/ValwareIRC,1,https://github.com/unrealircd/unrealircd/pull/178,"reported by CaoS
[19:03:29]  hello, i have found an error/bug on Unrealircd 6
[19:03:47]  in that config: set::level-on-join <none|voice|halfop|op|protect|owner>
[19:03:55]  if you Choose NONE, you get error
[19:04:12]  i have tried with OP and works OK, but with NONE you get an error
patch tested on latest beta","reported by CaoS
[19:03:29]  hello, i have found an error/bug on Unrealircd 6
[19:03:47]  in that config: set::level-on-join <none|voice|halfop|op|protect|owner>
[19:03:55]  if you Choose NONE, you get error
[19:04:12]  i have tried with OP and works OK, but with NONE you get an error
patch tested on latest beta",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,179,2021-11-03T21:39:47Z,2021-11-03T21:52:18Z,2021-11-03T21:52:18Z,CLOSED,False,1,1,1,https://github.com/westor7,Remove $client that is not defined there,1,[],https://github.com/unrealircd/unrealircd/pull/179,https://github.com/westor7,1,https://github.com/unrealircd/unrealircd/pull/179,"Officially reported by delta.
Closing https://bugs.unrealircd.org/view.php?id=5993","Officially reported by delta.
Closing https://bugs.unrealircd.org/view.php?id=5993",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,179,2021-11-03T21:39:47Z,2021-11-03T21:52:18Z,2021-11-03T21:52:18Z,CLOSED,False,1,1,1,https://github.com/westor7,Remove $client that is not defined there,1,[],https://github.com/unrealircd/unrealircd/pull/179,https://github.com/westor7,2,https://github.com/unrealircd/unrealircd/pull/179#issuecomment-960163148,"Officially reported by delta.
Closing https://bugs.unrealircd.org/view.php?id=5993",Invalid.,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,180,2021-11-03T22:23:46Z,2021-11-05T13:09:55Z,2021-11-05T13:09:55Z,CLOSED,False,1,0,1,https://github.com/westor7,Fix on TLS errors missing the IP part,1,[],https://github.com/unrealircd/unrealircd/pull/180,https://github.com/westor7,1,https://github.com/unrealircd/unrealircd/pull/180,"Officially reported by delta.
Closes https://bugs.unrealircd.org/view.php?id=5993","Officially reported by delta.
Closes https://bugs.unrealircd.org/view.php?id=5993",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,180,2021-11-03T22:23:46Z,2021-11-05T13:09:55Z,2021-11-05T13:09:55Z,CLOSED,False,1,0,1,https://github.com/westor7,Fix on TLS errors missing the IP part,1,[],https://github.com/unrealircd/unrealircd/pull/180,https://github.com/simplexish,2,https://github.com/unrealircd/unrealircd/pull/180#issuecomment-961308470,"Officially reported by delta.
Closes https://bugs.unrealircd.org/view.php?id=5993",After some light testing it seems that this patch fixes the issue.,True,{'THUMBS_UP': ['https://github.com/westor7']}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,180,2021-11-03T22:23:46Z,2021-11-05T13:09:55Z,2021-11-05T13:09:55Z,CLOSED,False,1,0,1,https://github.com/westor7,Fix on TLS errors missing the IP part,1,[],https://github.com/unrealircd/unrealircd/pull/180,https://github.com/syzop,3,https://github.com/unrealircd/unrealircd/pull/180#issuecomment-961882402,"Officially reported by delta.
Closes https://bugs.unrealircd.org/view.php?id=5993","Thanks for the report and the PR. Should be fixed now.
$client expands to the name of the client, so nick name or server name. (any $var for something with sub-items would expand to $var.name).
In this case $client.details is better which can evaluate to a number of things, depending on how much info is available. In this case it will almost always evaluate to the IP address of the user.  I also changed the logging routine a bit to not show ""@127.0.0.1"" in this case but show it as ""[127.0.0.1]"" so it's clear it is (only) an IP address.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,181,2021-11-10T23:53:53Z,2021-11-11T06:46:58Z,2021-11-11T06:46:58Z,MERGED,True,1,1,1,https://github.com/simplexish,Fix a typo in SERVER_LINKED_REMOTE log message,1,[],https://github.com/unrealircd/unrealircd/pull/181,https://github.com/simplexish,1,https://github.com/unrealircd/unrealircd/pull/181,Removing ) which doesn't seem to belong,Removing ) which doesn't seem to belong,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,182,2021-11-18T11:22:36Z,2021-11-28T09:25:42Z,2021-11-28T14:44:17Z,CLOSED,False,3,3,1,https://github.com/crazycatdevs,Small simplification,1,[],https://github.com/unrealircd/unrealircd/pull/182,https://github.com/crazycatdevs,1,https://github.com/unrealircd/unrealircd/pull/182,I guess score += 5 + (digits - 5) is the same than score += digits,I guess score += 5 + (digits - 5) is the same than score += digits,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,182,2021-11-18T11:22:36Z,2021-11-28T09:25:42Z,2021-11-28T14:44:17Z,CLOSED,False,3,3,1,https://github.com/crazycatdevs,Small simplification,1,[],https://github.com/unrealircd/unrealircd/pull/182,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/182#issuecomment-981052183,I guess score += 5 + (digits - 5) is the same than score += digits,"Funny indeed, makes you wonder how that happened :D
As a general principle I try to avoid touching 5.x without good reason.
Can you retarget this patch for branch unreal60_dev? Then I will accept it post-6.0.0, eg for 6.0.1 / 6.0.2. Thanks!",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,183,2021-11-28T01:09:54Z,2021-11-28T07:19:51Z,2021-11-28T07:20:25Z,CLOSED,False,10,10,2,https://github.com/robert-scheck,Lower libmaxminddb requirement from 1.6.0 to 1.2.0,1,[],https://github.com/unrealircd/unrealircd/pull/183,https://github.com/robert-scheck,1,https://github.com/unrealircd/unrealircd/pull/183,"libmaxminddb 1.6.0 was released on 2021-04-29 and is not yet widely available in Linux distributions. However, the alternative GeoIP Legacy C Library will be retired at the end of May 2022 and receives currently only critical security and bug fixes. Upstream recommends to upgrade to GeoIP2 databases, which leads to libmaxminddb when using C.
See also:

https://github.com/maxmind/geoip-api-c/blob/main/README.md
https://repology.org/project/libmaxminddb/versions","libmaxminddb 1.6.0 was released on 2021-04-29 and is not yet widely available in Linux distributions. However, the alternative GeoIP Legacy C Library will be retired at the end of May 2022 and receives currently only critical security and bug fixes. Upstream recommends to upgrade to GeoIP2 databases, which leads to libmaxminddb when using C.
See also:

https://github.com/maxmind/geoip-api-c/blob/main/README.md
https://repology.org/project/libmaxminddb/versions",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,183,2021-11-28T01:09:54Z,2021-11-28T07:19:51Z,2021-11-28T07:20:25Z,CLOSED,False,10,10,2,https://github.com/robert-scheck,Lower libmaxminddb requirement from 1.6.0 to 1.2.0,1,[],https://github.com/unrealircd/unrealircd/pull/183,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/183#issuecomment-980877364,"libmaxminddb 1.6.0 was released on 2021-04-29 and is not yet widely available in Linux distributions. However, the alternative GeoIP Legacy C Library will be retired at the end of May 2022 and receives currently only critical security and bug fixes. Upstream recommends to upgrade to GeoIP2 databases, which leads to libmaxminddb when using C.
See also:

https://github.com/maxmind/geoip-api-c/blob/main/README.md
https://repology.org/project/libmaxminddb/versions","We use the legacy library due to licensing issues. Anyway, that is not what this PR is about:
You asked to lower the version requirement for libmaxminddb. That sounds reasonable. You propose to lower it to >=1.2.0. Presumably that version is picked based on the API compatibility, which.. yeah.. is a perfectly reasonable logic to follow. On the other hand, 1.2.0 was released in 2016. Lots of heap corruption and other bugs have been fixed since then. I have now changed the requirement to >=1.4.3 in commit a71e205. The reason for this is that I don't want a known faulty libmaxminddb corrupt UnrealIRCd causing headaches for us when we receive crash reports with mysterious heap corruption. Version 1.4.3 (released Aug 2020) seems to fix the last known major bugs related to that. The fixes between 1.4.3 and 1.6.0 are not crucial in that sense (not even the fix in 1.5.2 related to unchecked calloc, i can live perfectly without that fix).
So, thanks for the suggestion. I hope you can live with >=1.4.3. If you cannot for your packaged unrealircd RPM then you would still have to patch it, but that's up to you.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,184,2021-11-28T10:09:50Z,2022-03-22T06:07:23Z,2022-04-02T13:53:34Z,CLOSED,False,22,21,1,https://github.com/progval,help: Change numerics for consistency with other IRCds,1,[],https://github.com/unrealircd/unrealircd/pull/184,https://github.com/progval,1,https://github.com/unrealircd/unrealircd/pull/184,"This is GH-167, rebased on unreal60_dev.
Screenshots below, with the two versions (first the current one, then the one I'm proposing)
Looks much better
Konversation:

KVIrc

Looks the same
IRCCloud:

Srain:

Looks slightly worse, as the client shows the command name (here, it's *) before the text
Gamja:

Hexchat:

irssi:

KiwiIRC:

Quassel:

Weechat:","This is GH-167, rebased on unreal60_dev.
Screenshots below, with the two versions (first the current one, then the one I'm proposing)
Looks much better
Konversation:

KVIrc

Looks the same
IRCCloud:

Srain:

Looks slightly worse, as the client shows the command name (here, it's *) before the text
Gamja:

Hexchat:

irssi:

KiwiIRC:

Quassel:

Weechat:",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,184,2021-11-28T10:09:50Z,2022-03-22T06:07:23Z,2022-04-02T13:53:34Z,CLOSED,False,22,21,1,https://github.com/progval,help: Change numerics for consistency with other IRCds,1,[],https://github.com/unrealircd/unrealircd/pull/184,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/184#issuecomment-1074775073,"This is GH-167, rebased on unreal60_dev.
Screenshots below, with the two versions (first the current one, then the one I'm proposing)
Looks much better
Konversation:

KVIrc

Looks the same
IRCCloud:

Srain:

Looks slightly worse, as the client shows the command name (here, it's *) before the text
Gamja:

Hexchat:

irssi:

KiwiIRC:

Quassel:

Weechat:","I see this is lingering again, better to make a decision than no decision:
I find it rather ugly for those cases where it looks worse... especially since you only used * as a command and for something like CHMODES etc or any other query it would look a lot more worse... repeating that command over in over, prefixed everywhere, not nice at those clients. And... there are only two clients at which it looks better.
I am going to do what I have often done with numeric changes in the past 20 years: I am going to wait with this until clients catch up and show things more nicely. In the meantime, I don't think I should keep this PR open for the next 2 years while waiting for such a moment, that would look silly, so I am closing it. I hope you keep going on with your improvements and let's see in 2 years or so if things have evolved for the better.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,184,2021-11-28T10:09:50Z,2022-03-22T06:07:23Z,2022-04-02T13:53:34Z,CLOSED,False,22,21,1,https://github.com/progval,help: Change numerics for consistency with other IRCds,1,[],https://github.com/unrealircd/unrealircd/pull/184,https://github.com/progval,3,https://github.com/unrealircd/unrealircd/pull/184#issuecomment-1086626380,"This is GH-167, rebased on unreal60_dev.
Screenshots below, with the two versions (first the current one, then the one I'm proposing)
Looks much better
Konversation:

KVIrc

Looks the same
IRCCloud:

Srain:

Looks slightly worse, as the client shows the command name (here, it's *) before the text
Gamja:

Hexchat:

irssi:

KiwiIRC:

Quassel:

Weechat:","If you don't mind, I'll use this PR to keep track of the progress of adding support to clients.
The Lounge already supports the new numerics better:

For the other clients mentioned above that need to be improved:

kiwiirc/kiwiirc#1509
irssi/irssi#1371
weechat/weechat#1772
quassel/quassel#601",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,184,2021-11-28T10:09:50Z,2022-03-22T06:07:23Z,2022-04-02T13:53:34Z,CLOSED,False,22,21,1,https://github.com/progval,help: Change numerics for consistency with other IRCds,1,[],https://github.com/unrealircd/unrealircd/pull/184,https://github.com/syzop,4,https://github.com/unrealircd/unrealircd/pull/184#issuecomment-1086646022,"This is GH-167, rebased on unreal60_dev.
Screenshots below, with the two versions (first the current one, then the one I'm proposing)
Looks much better
Konversation:

KVIrc

Looks the same
IRCCloud:

Srain:

Looks slightly worse, as the client shows the command name (here, it's *) before the text
Gamja:

Hexchat:

irssi:

KiwiIRC:

Quassel:

Weechat:","If you don't mind, I'll use this PR to keep track of the progress of adding support to clients.

Yes, no problem :)",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,185,2021-11-28T14:38:34Z,2021-12-19T09:24:37Z,2021-12-19T09:24:58Z,MERGED,True,3,3,1,https://github.com/crazycatdevs,Small simplification,1,[],https://github.com/unrealircd/unrealircd/pull/185,https://github.com/crazycatdevs,1,https://github.com/unrealircd/unrealircd/pull/185,"cf PR #182 :

I guess score += 5 + (digits - 5) is the same than score += digits","cf PR #182 :

I guess score += 5 + (digits - 5) is the same than score += digits",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,185,2021-11-28T14:38:34Z,2021-12-19T09:24:37Z,2021-12-19T09:24:58Z,MERGED,True,3,3,1,https://github.com/crazycatdevs,Small simplification,1,[],https://github.com/unrealircd/unrealircd/pull/185,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/185#issuecomment-997356436,"cf PR #182 :

I guess score += 5 + (digits - 5) is the same than score += digits",Thanks! Still don't know how it ended up like that before :D,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,186,2021-11-28T18:55:01Z,2021-12-10T18:42:39Z,2021-12-10T18:42:39Z,MERGED,True,1,1,1,https://github.com/progval,wallops: Send a full NUH as prefix in echoed WALLOPS,1,[],https://github.com/unrealircd/unrealircd/pull/186,https://github.com/progval,1,https://github.com/unrealircd/unrealircd/pull/186,"For consistency with other WALLOPS messages.
This echo was added in 334ce5e","For consistency with other WALLOPS messages.
This echo was added in 334ce5e",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,187,2021-12-13T00:56:20Z,2021-12-13T17:53:22Z,2021-12-13T17:53:23Z,MERGED,True,610,0,1,https://github.com/muskIRC,Create example.es.conf,1,[],https://github.com/unrealircd/unrealircd/pull/187,https://github.com/muskIRC,1,https://github.com/unrealircd/unrealircd/pull/187,Add spanish translation config file,Add spanish translation config file,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,188,2021-12-16T11:53:44Z,2021-12-19T17:56:37Z,2021-12-19T18:17:06Z,MERGED,True,3,1,1,https://github.com/kpcyrd,Add SOURCE_DATE_EPOCH support for build date,1,[],https://github.com/unrealircd/unrealircd/pull/188,https://github.com/kpcyrd,1,https://github.com/unrealircd/unrealircd/pull/188,"This uses the timestamp in $SOURCE_DATE_EPOCH if set and falls back to the current behavior otherwise. It tries date -d ""@..."" first and falls back to date -r ""..."" to support BSD date(1) too.
I'm not sure if I'm opening this PR to the right branch, let me know and I can rebase if needed.
Thanks!","This uses the timestamp in $SOURCE_DATE_EPOCH if set and falls back to the current behavior otherwise. It tries date -d ""@..."" first and falls back to date -r ""..."" to support BSD date(1) too.
I'm not sure if I'm opening this PR to the right branch, let me know and I can rebase if needed.
Thanks!",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,188,2021-12-16T11:53:44Z,2021-12-19T17:56:37Z,2021-12-19T18:17:06Z,MERGED,True,3,1,1,https://github.com/kpcyrd,Add SOURCE_DATE_EPOCH support for build date,1,[],https://github.com/unrealircd/unrealircd/pull/188,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/188#issuecomment-997358128,"This uses the timestamp in $SOURCE_DATE_EPOCH if set and falls back to the current behavior otherwise. It tries date -d ""@..."" first and falls back to date -r ""..."" to support BSD date(1) too.
I'm not sure if I'm opening this PR to the right branch, let me know and I can rebase if needed.
Thanks!",Sounds good. I assume you tested it on both Linux and FreeBSD indeed. If you could rebase for unreal60_dev that would be great.,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,188,2021-12-16T11:53:44Z,2021-12-19T17:56:37Z,2021-12-19T18:17:06Z,MERGED,True,3,1,1,https://github.com/kpcyrd,Add SOURCE_DATE_EPOCH support for build date,1,[],https://github.com/unrealircd/unrealircd/pull/188,https://github.com/kpcyrd,3,https://github.com/unrealircd/unrealircd/pull/188#issuecomment-997429178,"This uses the timestamp in $SOURCE_DATE_EPOCH if set and falls back to the current behavior otherwise. It tries date -d ""@..."" first and falls back to date -r ""..."" to support BSD date(1) too.
I'm not sure if I'm opening this PR to the right branch, let me know and I can rebase if needed.
Thanks!",I've rebased and updated the PR to unreal60_dev. The code is copied from the FreeBSD compatible reproducible builds example but I've only tested this on Linux because I don't have a FreeBSD system to test this with.,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,188,2021-12-16T11:53:44Z,2021-12-19T17:56:37Z,2021-12-19T18:17:06Z,MERGED,True,3,1,1,https://github.com/kpcyrd,Add SOURCE_DATE_EPOCH support for build date,1,[],https://github.com/unrealircd/unrealircd/pull/188,https://github.com/kpcyrd,4,https://github.com/unrealircd/unrealircd/pull/188#issuecomment-997434864,"This uses the timestamp in $SOURCE_DATE_EPOCH if set and falls back to the current behavior otherwise. It tries date -d ""@..."" first and falls back to date -r ""..."" to support BSD date(1) too.
I'm not sure if I'm opening this PR to the right branch, let me know and I can rebase if needed.
Thanks!",Thanks!,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,188,2021-12-16T11:53:44Z,2021-12-19T17:56:37Z,2021-12-19T18:17:06Z,MERGED,True,3,1,1,https://github.com/kpcyrd,Add SOURCE_DATE_EPOCH support for build date,1,[],https://github.com/unrealircd/unrealircd/pull/188,https://github.com/syzop,5,https://github.com/unrealircd/unrealircd/pull/188#issuecomment-997437053,"This uses the timestamp in $SOURCE_DATE_EPOCH if set and falls back to the current behavior otherwise. It tries date -d ""@..."" first and falls back to date -r ""..."" to support BSD date(1) too.
I'm not sure if I'm opening this PR to the right branch, let me know and I can rebase if needed.
Thanks!","I took the chance. Seems to work on all Linux and FreeBSD (12) buildbots (not public).
Thanks! :)",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,189,2021-12-28T16:57:20Z,2021-12-28T17:09:08Z,2021-12-28T17:09:15Z,MERGED,True,3,3,2,https://github.com/ValwareIRC,Fix some typos,3,[],https://github.com/unrealircd/unrealircd/pull/189,https://github.com/ValwareIRC,1,https://github.com/unrealircd/unrealircd/pull/189,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,189,2021-12-28T16:57:20Z,2021-12-28T17:09:08Z,2021-12-28T17:09:15Z,MERGED,True,3,3,2,https://github.com/ValwareIRC,Fix some typos,3,[],https://github.com/unrealircd/unrealircd/pull/189,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/189#issuecomment-1002201460,,Thanks! :D,True,{'LAUGH': ['https://github.com/ValwareIRC']}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,190,2021-12-30T14:11:41Z,2021-12-30T15:49:38Z,2021-12-30T15:49:38Z,CLOSED,False,1,1,1,https://github.com/westor7,Added a space-typo,1,[],https://github.com/unrealircd/unrealircd/pull/190,https://github.com/westor7,1,https://github.com/unrealircd/unrealircd/pull/190,"Closes https://bugs.unrealircd.org/view.php?id=6049
Reported by armyn","Closes https://bugs.unrealircd.org/view.php?id=6049
Reported by armyn",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,190,2021-12-30T14:11:41Z,2021-12-30T15:49:38Z,2021-12-30T15:49:38Z,CLOSED,False,1,1,1,https://github.com/westor7,Added a space-typo,1,[],https://github.com/unrealircd/unrealircd/pull/190,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/190#issuecomment-1003084537,"Closes https://bugs.unrealircd.org/view.php?id=6049
Reported by armyn","Unfortunately it is more complicated than that. I screwed up earlier fixing a ""space too much"" issue and created this problem.
The thing is that $destination may exist or it may be empty, if it it exists it must output something like [cmd: PRIVMSG victim: this is the string] and if it does not exist it must output [cmd: NICK: badnick]. So sometimes you need to add a space, and sometimes not. Done now in 40c528a.",True,{'THUMBS_UP': ['https://github.com/westor7']}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,191,2022-02-17T23:21:32Z,2022-03-23T07:12:40Z,2022-03-23T07:12:41Z,CLOSED,False,1,1,1,https://github.com/ValwareIRC,small change to let users see SVSMOTD lines,1,[],https://github.com/unrealircd/unrealircd/pull/191,https://github.com/ValwareIRC,1,https://github.com/unrealircd/unrealircd/pull/191,"just a tweak to allow users to see lines added by svsmotd
patch for: https://bugs.unrealircd.org/view.php?id=6070","just a tweak to allow users to see lines added by svsmotd
patch for: https://bugs.unrealircd.org/view.php?id=6070",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,191,2022-02-17T23:21:32Z,2022-03-23T07:12:40Z,2022-03-23T07:12:41Z,CLOSED,False,1,1,1,https://github.com/ValwareIRC,small change to let users see SVSMOTD lines,1,[],https://github.com/unrealircd/unrealircd/pull/191,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/191#issuecomment-1072076394,"just a tweak to allow users to see lines added by svsmotd
patch for: https://bugs.unrealircd.org/view.php?id=6070","It looks to me like this simply removes the short motd functionality entirely, no? That can't be correct :D",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,191,2022-02-17T23:21:32Z,2022-03-23T07:12:40Z,2022-03-23T07:12:41Z,CLOSED,False,1,1,1,https://github.com/ValwareIRC,small change to let users see SVSMOTD lines,1,[],https://github.com/unrealircd/unrealircd/pull/191,https://github.com/syzop,3,https://github.com/unrealircd/unrealircd/pull/191#issuecomment-1076000031,"just a tweak to allow users to see lines added by svsmotd
patch for: https://bugs.unrealircd.org/view.php?id=6070","Fixed in 89fe8e9 now, as discussed in https://bugs.unrealircd.org/view.php?id=6070
Thanks for raising the issue :)",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,192,2022-03-18T03:56:06Z,2022-03-18T06:39:36Z,2022-03-18T06:39:36Z,CLOSED,False,3,1,1,https://github.com/ValwareIRC,Fix unable to set channel mode -h on others,1,[],https://github.com/unrealircd/unrealircd/pull/192,https://github.com/ValwareIRC,1,https://github.com/unrealircd/unrealircd/pull/192,https://bugs.unrealircd.org/view.php?id=6078,https://bugs.unrealircd.org/view.php?id=6078,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,192,2022-03-18T03:56:06Z,2022-03-18T06:39:36Z,2022-03-18T06:39:36Z,CLOSED,False,3,1,1,https://github.com/ValwareIRC,Fix unable to set channel mode -h on others,1,[],https://github.com/unrealircd/unrealircd/pull/192,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/192#issuecomment-1072075607,https://bugs.unrealircd.org/view.php?id=6078,"Thanks, you spotted the exact right place.
The reason I did not take your PR is because my patch is a little differently (f169a3c):

It has no /* assumed MODE_ADD at this point */ because that is not true. There is a fallthrough there from the if above it for cases of MODE_DEL, as the first if only handles a sub-case (-h on self).
I fixed another issue at the same time, unrelated to this one, changing the access check from hoaq to oaq.",True,{'THUMBS_UP': ['https://github.com/ValwareIRC']}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,193,2022-03-20T14:52:47Z,2022-03-23T06:25:20Z,2022-03-23T06:25:20Z,CLOSED,False,6,0,2,https://github.com/progval,Hide 'T' from documentation and ISUPPORT ELIST when disabled,1,[],https://github.com/unrealircd/unrealircd/pull/193,https://github.com/progval,1,https://github.com/unrealircd/unrealircd/pull/193,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,193,2022-03-20T14:52:47Z,2022-03-23T06:25:20Z,2022-03-23T06:25:20Z,CLOSED,False,6,0,2,https://github.com/progval,Hide 'T' from documentation and ISUPPORT ELIST when disabled,1,[],https://github.com/unrealircd/unrealircd/pull/193,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/193#issuecomment-1074770335,,To be honest I wonder why this has an #ifdef at all in the current code.,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,193,2022-03-20T14:52:47Z,2022-03-23T06:25:20Z,2022-03-23T06:25:20Z,CLOSED,False,6,0,2,https://github.com/progval,Hide 'T' from documentation and ISUPPORT ELIST when disabled,1,[],https://github.com/unrealircd/unrealircd/pull/193,https://github.com/syzop,3,https://github.com/unrealircd/unrealircd/pull/193#issuecomment-1075966530,,Option is always available now.,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,194,2022-03-20T17:24:57Z,2022-03-23T06:09:37Z,2022-03-23T06:09:47Z,MERGED,True,6,8,1,https://github.com/progval,Flip semantics of ELIST C and ELIST T,1,[],https://github.com/unrealircd/unrealircd/pull/194,https://github.com/progval,1,https://github.com/unrealircd/unrealircd/pull/194,"The spec https://datatracker.ietf.org/doc/html/draft-hardy-irc-isupport-00#section-4.8
is a little unclear on the semantics, and Unreal interprets 'C<val' as
a request for all chans created before  minutes ago, ditto.
This is a legitimate interpretation, but I think the other on makes more
sense (ie. that 'C<val' means all chans created less than  minutes
ago).
Additionally, the documentation for T did not match the implementation
before this commit.
Before this commit, Unreal was consistent with Hybrid/Plexus4 on
ELIST C.
After this commit, Unreal will be consistent with Charybdis/Solanum,
InspIRCd, and ircu2 (and Hybrid/Plexus4 on ELIST T).","The spec https://datatracker.ietf.org/doc/html/draft-hardy-irc-isupport-00#section-4.8
is a little unclear on the semantics, and Unreal interprets 'C<val' as
a request for all chans created before  minutes ago, ditto.
This is a legitimate interpretation, but I think the other on makes more
sense (ie. that 'C<val' means all chans created less than  minutes
ago).
Additionally, the documentation for T did not match the implementation
before this commit.
Before this commit, Unreal was consistent with Hybrid/Plexus4 on
ELIST C.
After this commit, Unreal will be consistent with Charybdis/Solanum,
InspIRCd, and ircu2 (and Hybrid/Plexus4 on ELIST T).",True,{'HOORAY': ['https://github.com/xfnw']}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,194,2022-03-20T17:24:57Z,2022-03-23T06:09:37Z,2022-03-23T06:09:47Z,MERGED,True,6,8,1,https://github.com/progval,Flip semantics of ELIST C and ELIST T,1,[],https://github.com/unrealircd/unrealircd/pull/194,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/194#issuecomment-1074769638,"The spec https://datatracker.ietf.org/doc/html/draft-hardy-irc-isupport-00#section-4.8
is a little unclear on the semantics, and Unreal interprets 'C<val' as
a request for all chans created before  minutes ago, ditto.
This is a legitimate interpretation, but I think the other on makes more
sense (ie. that 'C<val' means all chans created less than  minutes
ago).
Additionally, the documentation for T did not match the implementation
before this commit.
Before this commit, Unreal was consistent with Hybrid/Plexus4 on
ELIST C.
After this commit, Unreal will be consistent with Charybdis/Solanum,
InspIRCd, and ircu2 (and Hybrid/Plexus4 on ELIST T).","If this is the consensus then my initial reaction is: this change sounds fine to me.
If I read that (old) draft with no prior knowledge then I would interpret it as a unix timestamp argument (absolute time since epoch), but clearly it has been implemented completely differently in practice (everywhere?) to mean something in ""relative time""... in minutes even... so that draft is not of any help then.
How recent were the changes in InspIRCd (if at all changed) for ""ELIST C""? Do major clients (eg: mIRC) use it one way or the other?
In other words: how much chance has this change of screwing up some existing client? ;)",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,194,2022-03-20T17:24:57Z,2022-03-23T06:09:37Z,2022-03-23T06:09:47Z,MERGED,True,6,8,1,https://github.com/progval,Flip semantics of ELIST C and ELIST T,1,[],https://github.com/unrealircd/unrealircd/pull/194,https://github.com/progval,3,https://github.com/unrealircd/unrealircd/pull/194#issuecomment-1074809780,"The spec https://datatracker.ietf.org/doc/html/draft-hardy-irc-isupport-00#section-4.8
is a little unclear on the semantics, and Unreal interprets 'C<val' as
a request for all chans created before  minutes ago, ditto.
This is a legitimate interpretation, but I think the other on makes more
sense (ie. that 'C<val' means all chans created less than  minutes
ago).
Additionally, the documentation for T did not match the implementation
before this commit.
Before this commit, Unreal was consistent with Hybrid/Plexus4 on
ELIST C.
After this commit, Unreal will be consistent with Charybdis/Solanum,
InspIRCd, and ircu2 (and Hybrid/Plexus4 on ELIST T).","How recent were the changes in InspIRCd (if at all changed) for ""ELIST C""?

According to the Git history, it was added in 2017 and not changed.

Do major clients (eg: mIRC) use it one way or the other?

I don't think so, but I'll look into it",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,194,2022-03-20T17:24:57Z,2022-03-23T06:09:37Z,2022-03-23T06:09:47Z,MERGED,True,6,8,1,https://github.com/progval,Flip semantics of ELIST C and ELIST T,1,[],https://github.com/unrealircd/unrealircd/pull/194,https://github.com/progval,4,https://github.com/unrealircd/unrealircd/pull/194#issuecomment-1075526126,"The spec https://datatracker.ietf.org/doc/html/draft-hardy-irc-isupport-00#section-4.8
is a little unclear on the semantics, and Unreal interprets 'C<val' as
a request for all chans created before  minutes ago, ditto.
This is a legitimate interpretation, but I think the other on makes more
sense (ie. that 'C<val' means all chans created less than  minutes
ago).
Additionally, the documentation for T did not match the implementation
before this commit.
Before this commit, Unreal was consistent with Hybrid/Plexus4 on
ELIST C.
After this commit, Unreal will be consistent with Charybdis/Solanum,
InspIRCd, and ircu2 (and Hybrid/Plexus4 on ELIST T).","I can't find a single client that even uses it. Couldn't check mIRC, though.
@ValwareIRC Any idea?",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,194,2022-03-20T17:24:57Z,2022-03-23T06:09:37Z,2022-03-23T06:09:47Z,MERGED,True,6,8,1,https://github.com/progval,Flip semantics of ELIST C and ELIST T,1,[],https://github.com/unrealircd/unrealircd/pull/194,https://github.com/progval,5,https://github.com/unrealircd/unrealircd/pull/194#issuecomment-1075536480,"The spec https://datatracker.ietf.org/doc/html/draft-hardy-irc-isupport-00#section-4.8
is a little unclear on the semantics, and Unreal interprets 'C<val' as
a request for all chans created before  minutes ago, ditto.
This is a legitimate interpretation, but I think the other on makes more
sense (ie. that 'C<val' means all chans created less than  minutes
ago).
Additionally, the documentation for T did not match the implementation
before this commit.
Before this commit, Unreal was consistent with Hybrid/Plexus4 on
ELIST C.
After this commit, Unreal will be consistent with Charybdis/Solanum,
InspIRCd, and ircu2 (and Hybrid/Plexus4 on ELIST T).","<Valware> mIRC never requests any list without the user asking

Looks like we're good, then",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,194,2022-03-20T17:24:57Z,2022-03-23T06:09:37Z,2022-03-23T06:09:47Z,MERGED,True,6,8,1,https://github.com/progval,Flip semantics of ELIST C and ELIST T,1,[],https://github.com/unrealircd/unrealircd/pull/194,https://github.com/syzop,6,https://github.com/unrealircd/unrealircd/pull/194#issuecomment-1075955647,"The spec https://datatracker.ietf.org/doc/html/draft-hardy-irc-isupport-00#section-4.8
is a little unclear on the semantics, and Unreal interprets 'C<val' as
a request for all chans created before  minutes ago, ditto.
This is a legitimate interpretation, but I think the other on makes more
sense (ie. that 'C<val' means all chans created less than  minutes
ago).
Additionally, the documentation for T did not match the implementation
before this commit.
Before this commit, Unreal was consistent with Hybrid/Plexus4 on
ELIST C.
After this commit, Unreal will be consistent with Charybdis/Solanum,
InspIRCd, and ircu2 (and Hybrid/Plexus4 on ELIST T).","Ok, thanks! :)",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,195,2022-03-21T20:38:28Z,2022-03-22T05:42:32Z,2022-03-22T05:42:42Z,MERGED,True,3,0,1,https://github.com/robert-scheck,Add missing options to unrealircdctl usage,1,[],https://github.com/unrealircd/unrealircd/pull/195,https://github.com/robert-scheck,1,https://github.com/unrealircd/unrealircd/pull/195,I guess it makes sense to mention what the code already supports?,I guess it makes sense to mention what the code already supports?,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,195,2022-03-21T20:38:28Z,2022-03-22T05:42:32Z,2022-03-22T05:42:42Z,MERGED,True,3,0,1,https://github.com/robert-scheck,Add missing options to unrealircdctl usage,1,[],https://github.com/unrealircd/unrealircd/pull/195,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/195#issuecomment-1074748438,I guess it makes sense to mention what the code already supports?,"Yup, thanks! :)",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,196,2022-03-21T21:50:41Z,2022-03-22T05:44:03Z,2022-03-22T05:44:21Z,MERGED,True,9,9,2,https://github.com/robert-scheck,Require PCRE2 >= 10.00 again (because of commit 329fd07f3ab99b42c8d4253e8f9d0fea89c049fb),1,[],https://github.com/unrealircd/unrealircd/pull/196,https://github.com/robert-scheck,1,https://github.com/unrealircd/unrealircd/pull/196,"Commits ab8fab7, b821aa4 and dedff54 required PCRE >= 10.39 finally, which was reverted using commit 329fd07, however the requirement wasn't lowered to PCRE >= 10.00 again.","Commits ab8fab7, b821aa4 and dedff54 required PCRE >= 10.39 finally, which was reverted using commit 329fd07, however the requirement wasn't lowered to PCRE >= 10.00 again.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,196,2022-03-21T21:50:41Z,2022-03-22T05:44:03Z,2022-03-22T05:44:21Z,MERGED,True,9,9,2,https://github.com/robert-scheck,Require PCRE2 >= 10.00 again (because of commit 329fd07f3ab99b42c8d4253e8f9d0fea89c049fb),1,[],https://github.com/unrealircd/unrealircd/pull/196,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/196#issuecomment-1074749154,"Commits ab8fab7, b821aa4 and dedff54 required PCRE >= 10.39 finally, which was reverted using commit 329fd07, however the requirement wasn't lowered to PCRE >= 10.00 again.","Indeed, you are correct. Applied, thanks!",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,197,2022-03-30T18:01:28Z,2022-05-01T12:05:34Z,2022-05-01T12:14:01Z,MERGED,True,108,0,1,https://github.com/westor7,Add geoip-tag module,2,[],https://github.com/unrealircd/unrealircd/pull/197,https://github.com/westor7,1,https://github.com/unrealircd/unrealircd/pull/197,"This module will work the same way as userip-tag or userhost-tag modules work now, the 90% of this code is part from these modules, it will help especially the irc bots (AdiIRC/mIRC/etc..) to detect the geoip country code directly and easy when someone is talking on a channel and take actions, i hope this will help on most people.
Thanks to @ValwareIRC  for testing it out.
Short Example: @unrealircd.org/geoip=GR;account=tester;msgid=tPTHDgymv9pgdGdYkI3WBd;time=2022-03-30T16:34:26.780Z :tester!Username@3765DB68:3AE9CB6C:B0540131:IP PRIVMSG #Test :test message

Thanks!","This module will work the same way as userip-tag or userhost-tag modules work now, the 90% of this code is part from these modules, it will help especially the irc bots (AdiIRC/mIRC/etc..) to detect the geoip country code directly and easy when someone is talking on a channel and take actions, i hope this will help on most people.
Thanks to @ValwareIRC  for testing it out.
Short Example: @unrealircd.org/geoip=GR;account=tester;msgid=tPTHDgymv9pgdGdYkI3WBd;time=2022-03-30T16:34:26.780Z :tester!Username@3765DB68:3AE9CB6C:B0540131:IP PRIVMSG #Test :test message

Thanks!",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,197,2022-03-30T18:01:28Z,2022-05-01T12:05:34Z,2022-05-01T12:14:01Z,MERGED,True,108,0,1,https://github.com/westor7,Add geoip-tag module,2,[],https://github.com/unrealircd/unrealircd/pull/197,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/197#issuecomment-1114219957,"This module will work the same way as userip-tag or userhost-tag modules work now, the 90% of this code is part from these modules, it will help especially the irc bots (AdiIRC/mIRC/etc..) to detect the geoip country code directly and easy when someone is talking on a channel and take actions, i hope this will help on most people.
Thanks to @ValwareIRC  for testing it out.
Short Example: @unrealircd.org/geoip=GR;account=tester;msgid=tPTHDgymv9pgdGdYkI3WBd;time=2022-03-30T16:34:26.780Z :tester!Username@3765DB68:3AE9CB6C:B0540131:IP PRIVMSG #Test :test message

Thanks!","Thanks for the suggestion and the actual code. In commit 889bcd9 I added the Makefile updates and I figured it would be OK to load the module by default. It does create more traffic for something that possibly 95% of the people won't use, but it is for IRCOps only, which already receive lots of traffic (eg: server notices and such), so.. I think it is fine.
Thanks again!",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,198,2022-04-12T12:36:05Z,2022-05-01T11:52:45Z,2022-05-01T11:52:59Z,MERGED,True,16,13,7,https://github.com/alicetries,Adjust various log messages which had missing $expansions,2,[],https://github.com/unrealircd/unrealircd/pull/198,https://github.com/alicetries,1,https://github.com/unrealircd/unrealircd/pull/198,Fixes various missing expansions within log messages.,Fixes various missing expansions within log messages.,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,198,2022-04-12T12:36:05Z,2022-05-01T11:52:45Z,2022-05-01T11:52:59Z,MERGED,True,16,13,7,https://github.com/alicetries,Adjust various log messages which had missing $expansions,2,[],https://github.com/unrealircd/unrealircd/pull/198,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/198#issuecomment-1114214124,Fixes various missing expansions within log messages.,"Thanks! Lots of corrections, much appreciated :)",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,199,2022-04-15T13:16:21Z,2022-05-01T11:48:05Z,2022-05-01T11:48:05Z,MERGED,True,27,23,1,https://github.com/muskIRC,Update help.es.conf,1,[],https://github.com/unrealircd/unrealircd/pull/199,https://github.com/muskIRC,1,https://github.com/unrealircd/unrealircd/pull/199,Add new snomasks for U6.,Add new snomasks for U6.,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,200,2022-04-15T14:05:19Z,2022-05-01T11:45:41Z,2022-05-01T11:53:22Z,MERGED,True,607,0,1,https://github.com/muskIRC,Create example.es.conf,2,[],https://github.com/unrealircd/unrealircd/pull/200,https://github.com/muskIRC,1,https://github.com/unrealircd/unrealircd/pull/200,Add configuration file in spanish.,Add configuration file in spanish.,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,200,2022-04-15T14:05:19Z,2022-05-01T11:45:41Z,2022-05-01T11:53:22Z,MERGED,True,607,0,1,https://github.com/muskIRC,Create example.es.conf,2,[],https://github.com/unrealircd/unrealircd/pull/200,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/200#issuecomment-1114214197,Add configuration file in spanish.,Great. Thanks! :),True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,201,2022-04-29T20:16:17Z,2022-04-29T23:28:02Z,2022-04-29T23:28:02Z,CLOSED,False,19,110,10,https://github.com/SadieCat,Undocument the long dead SVSO feature.,1,[],https://github.com/unrealircd/unrealircd/pull/201,https://github.com/SadieCat,1,https://github.com/unrealircd/unrealircd/pull/201,"The SVSO feature was removed in 2015 but still remained documented.
This has confused some users who wanted to know why the Anope feature which depended on this did not work on UnrealIRCd 4+.","The SVSO feature was removed in 2015 but still remained documented.
This has confused some users who wanted to know why the Anope feature which depended on this did not work on UnrealIRCd 4+.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,201,2022-04-29T20:16:17Z,2022-04-29T23:28:02Z,2022-04-29T23:28:02Z,CLOSED,False,19,110,10,https://github.com/SadieCat,Undocument the long dead SVSO feature.,1,[],https://github.com/unrealircd/unrealircd/pull/201,https://github.com/ValwareIRC,2,https://github.com/unrealircd/unrealircd/pull/201#issuecomment-1113721480,"The SVSO feature was removed in 2015 but still remained documented.
This has confused some users who wanted to know why the Anope feature which depended on this did not work on UnrealIRCd 4+.","I'm hoping it'll be replaced soon, as per this bug report.
Syzop said to me on IRC that the only way he would see it added back in, is if it spoofed an operclass with no opername.
It's just tricky to implement due to the way oper permission validation works.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,201,2022-04-29T20:16:17Z,2022-04-29T23:28:02Z,2022-04-29T23:28:02Z,CLOSED,False,19,110,10,https://github.com/SadieCat,Undocument the long dead SVSO feature.,1,[],https://github.com/unrealircd/unrealircd/pull/201,https://github.com/SadieCat,3,https://github.com/unrealircd/unrealircd/pull/201#issuecomment-1113848021,"The SVSO feature was removed in 2015 but still remained documented.
This has confused some users who wanted to know why the Anope feature which depended on this did not work on UnrealIRCd 4+.",If you're considering reimplementing it because of Anope then don't bother. Its a pretty niche feature that only ever worked on Unreal 3.2 and we removed support for it in our dev branch at the same time as the old protocol stuff.,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,201,2022-04-29T20:16:17Z,2022-04-29T23:28:02Z,2022-04-29T23:28:02Z,CLOSED,False,19,110,10,https://github.com/SadieCat,Undocument the long dead SVSO feature.,1,[],https://github.com/unrealircd/unrealircd/pull/201,https://github.com/ValwareIRC,4,https://github.com/unrealircd/unrealircd/pull/201#issuecomment-1113849274,"The SVSO feature was removed in 2015 but still remained documented.
This has confused some users who wanted to know why the Anope feature which depended on this did not work on UnrealIRCd 4+.","I'm considering it be re-implemented for a wider integration with external things, and mainly for my services package to be able to give a user oper permissions based on external configuration (in this case, wordpress) =]",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,202,2022-05-06T10:43:35Z,2022-05-06T15:05:55Z,2022-05-06T15:19:01Z,MERGED,True,76,30,8,https://github.com/Noisytoot,Add support for connecting to UNIX domain sockets,1,[],https://github.com/unrealircd/unrealircd/pull/202,https://github.com/Noisytoot,1,https://github.com/unrealircd/unrealircd/pull/202,This is useful for linking servers over Tor or some other local proxy.,This is useful for linking servers over Tor or some other local proxy.,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,202,2022-05-06T10:43:35Z,2022-05-06T15:05:55Z,2022-05-06T15:19:01Z,MERGED,True,76,30,8,https://github.com/Noisytoot,Add support for connecting to UNIX domain sockets,1,[],https://github.com/unrealircd/unrealircd/pull/202,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/202#issuecomment-1119732328,This is useful for linking servers over Tor or some other local proxy.,"Thanks for the patch! Seems to work well, tested with linking two UnrealIRCd servers locally via UNIX domain sockets.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,203,2022-05-07T18:42:49Z,2022-05-07T18:55:30Z,2022-05-07T18:55:30Z,CLOSED,False,0,1,1,https://github.com/westor7,Remove an un-used log line,1,[],https://github.com/unrealircd/unrealircd/pull/203,https://github.com/westor7,1,https://github.com/unrealircd/unrealircd/pull/203,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,203,2022-05-07T18:42:49Z,2022-05-07T18:55:30Z,2022-05-07T18:55:30Z,CLOSED,False,0,1,1,https://github.com/westor7,Remove an un-used log line,1,[],https://github.com/unrealircd/unrealircd/pull/203,https://github.com/westor7,2,https://github.com/unrealircd/unrealircd/pull/203#issuecomment-1120262423,,Founded accidentally LOL!,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,204,2022-05-07T18:55:21Z,2022-05-13T05:40:21Z,2022-05-13T05:40:21Z,CLOSED,False,0,3,3,https://github.com/westor7,Remove some un-used log items,3,[],https://github.com/unrealircd/unrealircd/pull/204,https://github.com/westor7,1,https://github.com/unrealircd/unrealircd/pull/204,Found them accidentally. :P,Found them accidentally. :P,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,204,2022-05-07T18:55:21Z,2022-05-13T05:40:21Z,2022-05-13T05:40:21Z,CLOSED,False,0,3,3,https://github.com/westor7,Remove some un-used log items,3,[],https://github.com/unrealircd/unrealircd/pull/204,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/204#issuecomment-1120355796,Found them accidentally. :P,"Let me start with another example. In src/modules/vhost.c we have:
unreal_log(ULOG_WARNING,` ""vhost"", ""VHOST_FAILED"", client,
           ""Failed VHOST attempt by $client.details [reason: $reason] [vhost-block: $vhost_block]"",
           log_data_string(""reason"", ""Vhost block not found""),
           log_data_string(""fail_type"", ""UNKNOWN_VHOST_NAME""),
           log_data_string(""vhost_block"", login));

The fail_type here is not used in the log message. Still, I put fail_type there because in the JSON output it is exposed.
Because the VHOST_FAILED message is used in 3 different cases, the fail_type can be used to easily distinguish machine-wise between the 3 cases (UNKNOWN_VHOST_NAME, NO_HOST_MATCH and AUTHENTICATION_FAILED), without having to rely on the message itself. This because the log message itself (in English) may receive slight adjustments later on but the fail_type should stay one of those (3) values.
This just to illustrate that a ""useless"" log_data_xxx thing could actually be useful ;).
Anyway, you brought up the ones in CHGNAME, CHGIDENT, CHGHOST. I think I originally considered making them too all the same event (eg.. i don't know.. IDENTITY_CHANGED), and thus the change_type is there to distinguish them (just like in the vhost example of above). I later changed my mind and made them separate events. I suppose I could remove change_type now. On the other hand it doesn't really hurt. Hmm.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,204,2022-05-07T18:55:21Z,2022-05-13T05:40:21Z,2022-05-13T05:40:21Z,CLOSED,False,0,3,3,https://github.com/westor7,Remove some un-used log items,3,[],https://github.com/unrealircd/unrealircd/pull/204,https://github.com/westor7,3,https://github.com/unrealircd/unrealircd/pull/204#issuecomment-1120410884,Found them accidentally. :P,"The fail_type here is not used in the log message. Still, I put fail_type there because in the JSON output it is exposed.

Oh i see, i didn't knew it, that makes sense..",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,204,2022-05-07T18:55:21Z,2022-05-13T05:40:21Z,2022-05-13T05:40:21Z,CLOSED,False,0,3,3,https://github.com/westor7,Remove some un-used log items,3,[],https://github.com/unrealircd/unrealircd/pull/204,https://github.com/syzop,4,https://github.com/unrealircd/unrealircd/pull/204#issuecomment-1125675861,Found them accidentally. :P,"I think i will keep it for now, but yeah.. there are arguments in favor and against ;p",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,205,2022-05-11T19:38:57Z,2022-05-13T05:39:41Z,2022-05-13T05:39:42Z,MERGED,True,101,1,4,https://github.com/ValwareIRC,Add IRCv3 Channel Context mtag,6,[],https://github.com/unrealircd/unrealircd/pull/205,https://github.com/ValwareIRC,1,https://github.com/unrealircd/unrealircd/pull/205,"This module allows contexting channels in mtags using +draft/channel-context
The sender must be in the channel in order to use it as a context.
U-Lines are exempt from this restriction.","This module allows contexting channels in mtags using +draft/channel-context
The sender must be in the channel in order to use it as a context.
U-Lines are exempt from this restriction.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,206,2022-05-20T09:24:39Z,2022-05-23T06:18:50Z,2022-05-23T06:19:01Z,MERGED,True,4,0,1,https://github.com/westor7,Add extra information on connect for shunned users,1,[],https://github.com/unrealircd/unrealircd/pull/206,https://github.com/westor7,1,https://github.com/unrealircd/unrealircd/pull/206,"When someone is trying to connect and he/she is shunned , it will be displayed on connection server notice, yeah sometimes it might be helpful, why not..
Suggested by armyn https://bugs.unrealircd.org/view.php?id=6106","When someone is trying to connect and he/she is shunned , it will be displayed on connection server notice, yeah sometimes it might be helpful, why not..
Suggested by armyn https://bugs.unrealircd.org/view.php?id=6106",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,206,2022-05-20T09:24:39Z,2022-05-23T06:18:50Z,2022-05-23T06:19:01Z,MERGED,True,4,0,1,https://github.com/westor7,Add extra information on connect for shunned users,1,[],https://github.com/unrealircd/unrealircd/pull/206,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/206#issuecomment-1134229087,"When someone is trying to connect and he/she is shunned , it will be displayed on connection server notice, yeah sometimes it might be helpful, why not..
Suggested by armyn https://bugs.unrealircd.org/view.php?id=6106","Looks good, thanks! :)",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,207,2022-05-25T19:41:29Z,2022-05-26T02:08:13Z,2022-05-26T02:08:13Z,CLOSED,False,150804,157223,678,https://github.com/ZarTek-Creole,History value missing in config file,4560,[],https://github.com/unrealircd/unrealircd/pull/207,https://github.com/ZarTek-Creole,1,https://github.com/unrealircd/unrealircd/pull/207,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,207,2022-05-25T19:41:29Z,2022-05-26T02:08:13Z,2022-05-26T02:08:13Z,CLOSED,False,150804,157223,678,https://github.com/ZarTek-Creole,History value missing in config file,4560,[],https://github.com/unrealircd/unrealircd/pull/207,https://github.com/ZarTek-Creole,2,https://github.com/unrealircd/unrealircd/pull/207#issuecomment-1138066357,,Mishandling,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,208,2022-05-25T22:10:25Z,2022-05-26T05:38:47Z,2022-05-27T23:05:11Z,CLOSED,False,96,2,7,https://github.com/ZarTek-Creole,Fix webredir by single quotes,2,[],https://github.com/unrealircd/unrealircd/pull/208,https://github.com/ZarTek-Creole,1,https://github.com/unrealircd/unrealircd/pull/208,"need single quotes rather than double quotes because unreal will try to download.need single quotes rather than double quotes because unreal will try to download. Try error with ""http://www.extra-cool.fr""

[25-05/23:43]  Hi, an little bug in set { webredir { url ""https://www.extra-cool.fr/""; } } return ""set::webredir::url needs to be a valid URL"" because contains an "" - "" in domain name. I don't know why he rejected on the condition: if (!strstr(cep->value, ""://"") || !strcmp(cep->value, ""https://...""))
[25-05/23:49]  UnrealIRCd-6.0.3.
[25-05/23:51]  ZarTek, you may need single quotes there rather than double quotes, as unreal will try and download the page and use /that/ as the value if it's double i think
[25-05/23:54] * Joins: sAn (~sAn@Clk-EC2D4344.clients.your-server.de)
[25-05/23:55]  alice: It seems very possible to me. I'll try. Thank you for your reply.
[25-05/23:56] <@valware> =]
[25-05/23:58]  Yes, it works, very good deductions from you. Although such behavior was unexpected in this value.
[26-05/00:07] <@valware> indeed, on the wiki it has specified with double-quotes when in fact it expects single-quotes to work. so I edited it :D
[26-05/00:07] <@valware> https://www.unrealircd.org/docs/Set_block#set::webredir::url
[26-05/00:07] <@valware> =]","need single quotes rather than double quotes because unreal will try to download.need single quotes rather than double quotes because unreal will try to download. Try error with ""http://www.extra-cool.fr""

[25-05/23:43]  Hi, an little bug in set { webredir { url ""https://www.extra-cool.fr/""; } } return ""set::webredir::url needs to be a valid URL"" because contains an "" - "" in domain name. I don't know why he rejected on the condition: if (!strstr(cep->value, ""://"") || !strcmp(cep->value, ""https://...""))
[25-05/23:49]  UnrealIRCd-6.0.3.
[25-05/23:51]  ZarTek, you may need single quotes there rather than double quotes, as unreal will try and download the page and use /that/ as the value if it's double i think
[25-05/23:54] * Joins: sAn (~sAn@Clk-EC2D4344.clients.your-server.de)
[25-05/23:55]  alice: It seems very possible to me. I'll try. Thank you for your reply.
[25-05/23:56] <@valware> =]
[25-05/23:58]  Yes, it works, very good deductions from you. Although such behavior was unexpected in this value.
[26-05/00:07] <@valware> indeed, on the wiki it has specified with double-quotes when in fact it expects single-quotes to work. so I edited it :D
[26-05/00:07] <@valware> https://www.unrealircd.org/docs/Set_block#set::webredir::url
[26-05/00:07] <@valware> =]",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,208,2022-05-25T22:10:25Z,2022-05-26T05:38:47Z,2022-05-27T23:05:11Z,CLOSED,False,96,2,7,https://github.com/ZarTek-Creole,Fix webredir by single quotes,2,[],https://github.com/unrealircd/unrealircd/pull/208,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/208#issuecomment-1138173386,"need single quotes rather than double quotes because unreal will try to download.need single quotes rather than double quotes because unreal will try to download. Try error with ""http://www.extra-cool.fr""

[25-05/23:43]  Hi, an little bug in set { webredir { url ""https://www.extra-cool.fr/""; } } return ""set::webredir::url needs to be a valid URL"" because contains an "" - "" in domain name. I don't know why he rejected on the condition: if (!strstr(cep->value, ""://"") || !strcmp(cep->value, ""https://...""))
[25-05/23:49]  UnrealIRCd-6.0.3.
[25-05/23:51]  ZarTek, you may need single quotes there rather than double quotes, as unreal will try and download the page and use /that/ as the value if it's double i think
[25-05/23:54] * Joins: sAn (~sAn@Clk-EC2D4344.clients.your-server.de)
[25-05/23:55]  alice: It seems very possible to me. I'll try. Thank you for your reply.
[25-05/23:56] <@valware> =]
[25-05/23:58]  Yes, it works, very good deductions from you. Although such behavior was unexpected in this value.
[26-05/00:07] <@valware> indeed, on the wiki it has specified with double-quotes when in fact it expects single-quotes to work. so I edited it :D
[26-05/00:07] <@valware> https://www.unrealircd.org/docs/Set_block#set::webredir::url
[26-05/00:07] <@valware> =]","It seems this PR accidentally inherited the work on history.conf too, so I cannot apply it individually. Anyway, not important, on to the point...
Indeed you are right, it should have single quotes. Without single quotes it would cause a confusing error. So thanks for that! Done in 82063a4",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,209,2022-05-26T01:52:32Z,2022-05-26T05:35:10Z,2022-05-27T23:05:33Z,CLOSED,False,4,0,1,https://github.com/ZarTek-Creole,"history time check that the non-digit is d, h, m",1,[],https://github.com/unrealircd/unrealircd/pull/209,https://github.com/ZarTek-Creole,1,https://github.com/unrealircd/unrealircd/pull/209,"history time check that the non-digit is d, h, m
strengthen the check of time by verifying that the non-digit is d, h, m
If we provide a time like 1111ttttttttttt the value was accept and convert to 1111m. This path returns an error if the time unit does not have one of these three: d,h,m","history time check that the non-digit is d, h, m
strengthen the check of time by verifying that the non-digit is d, h, m
If we provide a time like 1111ttttttttttt the value was accept and convert to 1111m. This path returns an error if the time unit does not have one of these three: d,h,m",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,209,2022-05-26T01:52:32Z,2022-05-26T05:35:10Z,2022-05-27T23:05:33Z,CLOSED,False,4,0,1,https://github.com/ZarTek-Creole,"history time check that the non-digit is d, h, m",1,[],https://github.com/unrealircd/unrealircd/pull/209,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/209#issuecomment-1138171573,"history time check that the non-digit is d, h, m
strengthen the check of time by verifying that the non-digit is d, h, m
If we provide a time like 1111ttttttttttt the value was accept and convert to 1111m. This path returns an error if the time unit does not have one of these three: d,h,m","I understand why you submit this and the other PR, but in general, the reason for lack of strict checking is so we later have the option to slightly change or enhance the syntax of a channel mode. That's why things like this are not a hard error and we ""try to make the best of it"". Of course, if we cannot make any sense out of it (eg 0 lines or 0 time) then the value ends up being rejected.
This strategy prevents the more serious desync issues in the long run ""when things change"".
In this particular case (contrary to the other PR) it is probably fine but I think I prefer to follow that strategy because it is so easy to make a mistake here that has (unforeseen) effects years later. Sorry to disappoint you, I mean I see you submitting PR's for the first time and I end up rejecting those 2 (similar) changes, but... yeah...",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,210,2022-05-26T02:02:06Z,2022-05-26T05:35:25Z,2022-05-27T23:05:21Z,CLOSED,False,1,1,1,https://github.com/ZarTek-Creole,lines is only digit for history_parse_chanmode,1,[],https://github.com/unrealircd/unrealircd/pull/210,https://github.com/ZarTek-Creole,1,https://github.com/unrealircd/unrealircd/pull/210,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,210,2022-05-26T02:02:06Z,2022-05-26T05:35:25Z,2022-05-27T23:05:21Z,CLOSED,False,1,1,1,https://github.com/ZarTek-Creole,lines is only digit for history_parse_chanmode,1,[],https://github.com/unrealircd/unrealircd/pull/210,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/210#issuecomment-1138169787,,"I understand why you submit this and the other PR, but in general, the reason for lack of strict checking is so we later have the option to slightly change or enhance the syntax of a channel mode. That's why things like this are not a hard error and we ""try to make the best of it"". Of course, if we cannot make any sense out of it (eg 0 lines or 0 time) then the value ends up being rejected.
This strategy prevents the more serious desync issues in the long run ""when things change"".
In this particular case, it would break one idea I would possibly implement somewhere in the future.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,211,2022-05-26T02:07:08Z,2022-05-26T06:30:16Z,2022-05-27T23:04:56Z,CLOSED,False,94,0,6,https://github.com/ZarTek-Creole,History value missing in config file,1,[],https://github.com/unrealircd/unrealircd/pull/211,https://github.com/ZarTek-Creole,1,https://github.com/unrealircd/unrealircd/pull/211,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,211,2022-05-26T02:07:08Z,2022-05-26T06:30:16Z,2022-05-27T23:04:56Z,CLOSED,False,94,0,6,https://github.com/ZarTek-Creole,History value missing in config file,1,[],https://github.com/unrealircd/unrealircd/pull/211,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/211#issuecomment-1138165855,,"There is no description for this PR but I guess you mean it should get more exposure in the conf?
I think you are right about that, as right now it is not mentioned anywhere in the example conf, just thinking about the best way to do it.",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,211,2022-05-26T02:07:08Z,2022-05-26T06:30:16Z,2022-05-27T23:04:56Z,CLOSED,False,94,0,6,https://github.com/ZarTek-Creole,History value missing in config file,1,[],https://github.com/unrealircd/unrealircd/pull/211,https://github.com/syzop,3,https://github.com/unrealircd/unrealircd/pull/211#issuecomment-1138183575,,I have also added a FAQ item Why does the example.conf not contain all options?,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,211,2022-05-26T02:07:08Z,2022-05-26T06:30:16Z,2022-05-27T23:04:56Z,CLOSED,False,94,0,6,https://github.com/ZarTek-Creole,History value missing in config file,1,[],https://github.com/unrealircd/unrealircd/pull/211,https://github.com/syzop,4,https://github.com/unrealircd/unrealircd/pull/211#issuecomment-1138203416,,"I have made the following commit 6802156 which adds an explanation on the channel history feature. It does include the default set::history settings but does refer to it (and other areas).
I do include an example secret block and set::history::channel::persist etc because you are right, people likely want that feature.
I like the history feature a lot, including the persistent option, and it is good to give it more exposure. I didn't realize it had zero exposure in example.conf at the moment so it is good you pointed this out, i just did it a little differently, that is all :)",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,212,2022-05-27T14:33:10Z,2022-05-27T14:35:10Z,2022-05-27T23:04:14Z,MERGED,True,1,1,1,https://github.com/ZarTek-Creole,"Minor bug, remove corectly .asc file",1,[],https://github.com/unrealircd/unrealircd/pull/212,https://github.com/ZarTek-Creole,1,https://github.com/unrealircd/unrealircd/pull/212,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,212,2022-05-27T14:33:10Z,2022-05-27T14:35:10Z,2022-05-27T23:04:14Z,MERGED,True,1,1,1,https://github.com/ZarTek-Creole,"Minor bug, remove corectly .asc file",1,[],https://github.com/unrealircd/unrealircd/pull/212,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/212#issuecomment-1139679293,,"Indeed you are right. Applied, thanks!",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,213,2022-05-27T14:37:56Z,2022-05-27T15:30:15Z,2022-05-27T23:03:39Z,CLOSED,False,1,1,1,https://github.com/ZarTek-Creole,Only for respect SC2006,1,[],https://github.com/unrealircd/unrealircd/pull/213,https://github.com/ZarTek-Creole,1,https://github.com/unrealircd/unrealircd/pull/213,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,213,2022-05-27T14:37:56Z,2022-05-27T15:30:15Z,2022-05-27T23:03:39Z,CLOSED,False,1,1,1,https://github.com/ZarTek-Creole,Only for respect SC2006,1,[],https://github.com/unrealircd/unrealircd/pull/213,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/213#issuecomment-1139722653,,"Yeah there is an outstanding item to run things through shellcheck and also convert backticks to $(). That is for both ./Config and ./unrealircd and some of the other scripts.
It should be noted that nothing is broken at the moment, it is just perceived as better by the general community.
We also currently have a lot of backwards compatible ugly looking stuff that we can get rid of.
But.... important: I don't think we would do such a major task during 6.x development. It is too risky.. likely breaking things, things that are not currently broken.",True,{'THUMBS_UP': ['https://github.com/ZarTek-Creole']}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,213,2022-05-27T14:37:56Z,2022-05-27T15:30:15Z,2022-05-27T23:03:39Z,CLOSED,False,1,1,1,https://github.com/ZarTek-Creole,Only for respect SC2006,1,[],https://github.com/unrealircd/unrealircd/pull/213,https://github.com/syzop,3,https://github.com/unrealircd/unrealircd/pull/213#issuecomment-1139725664,,"So.. I think it's better to close this and to leave it for another time (another year).
The bug item is https://bugs.unrealircd.org/view.php?id=5465 i have changed it from 'private' to 'public'.",True,{'THUMBS_UP': ['https://github.com/ZarTek-Creole']}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,214,2022-05-27T19:00:03Z,,2022-05-27T19:00:03Z,OPEN,False,1,1,1,https://github.com/ValwareIRC,Fix SWHOIS lines hidden when hideoper is 1/true,1,[],https://github.com/unrealircd/unrealircd/pull/214,https://github.com/ValwareIRC,1,https://github.com/unrealircd/unrealircd/pull/214,"it seems a unrealircd deals with hiding and showing oper based on hideoper usermode on line 511, and has other part here been hiding swhois lines if hideoper were true, which doesn't feel like desired behaviour (apologies if wrong).","it seems a unrealircd deals with hiding and showing oper based on hideoper usermode on line 511, and has other part here been hiding swhois lines if hideoper were true, which doesn't feel like desired behaviour (apologies if wrong).",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,215,2022-05-28T20:56:50Z,2022-05-29T06:23:35Z,2022-05-29T06:24:48Z,MERGED,True,18,44,1,https://github.com/muskIRC,update example.es.conf,1,[],https://github.com/unrealircd/unrealircd/pull/215,https://github.com/muskIRC,1,https://github.com/unrealircd/unrealircd/pull/215,Add translation of history channel.,Add translation of history channel.,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,215,2022-05-28T20:56:50Z,2022-05-29T06:23:35Z,2022-05-29T06:24:48Z,MERGED,True,18,44,1,https://github.com/muskIRC,update example.es.conf,1,[],https://github.com/unrealircd/unrealircd/pull/215,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/215#issuecomment-1140386512,Add translation of history channel.,"Great, thanks! And sorry for me putting the MOTD stuff in there twice, I didn't notice ;D",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,216,2022-05-29T10:31:01Z,2022-05-29T12:27:29Z,2022-05-29T12:27:29Z,MERGED,True,70,70,1,https://github.com/muskIRC,update example.fr.conf,3,[],https://github.com/unrealircd/unrealircd/pull/216,https://github.com/muskIRC,1,https://github.com/unrealircd/unrealircd/pull/216,,,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,217,2022-05-31T19:07:54Z,2022-06-01T06:21:52Z,2022-06-01T06:40:21Z,CLOSED,False,5,5,1,https://github.com/westor7,Fixed a typo on retbuf,1,[],https://github.com/unrealircd/unrealircd/pull/217,https://github.com/westor7,1,https://github.com/unrealircd/unrealircd/pull/217,Also used BUFSIZE instead of 512 as BUFSIZE is defined to 512 already.,Also used BUFSIZE instead of 512 as BUFSIZE is defined to 512 already.,True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,217,2022-05-31T19:07:54Z,2022-06-01T06:21:52Z,2022-06-01T06:40:21Z,CLOSED,False,5,5,1,https://github.com/westor7,Fixed a typo on retbuf,1,[],https://github.com/unrealircd/unrealircd/pull/217,https://github.com/syzop,2,https://github.com/unrealircd/unrealircd/pull/217#issuecomment-1143164944,Also used BUFSIZE instead of 512 as BUFSIZE is defined to 512 already.,"Fixed, thanks :)",True,{}
unrealircd/unrealircd,https://github.com/unrealircd/unrealircd,217,2022-05-31T19:07:54Z,2022-06-01T06:21:52Z,2022-06-01T06:40:21Z,CLOSED,False,5,5,1,https://github.com/westor7,Fixed a typo on retbuf,1,[],https://github.com/unrealircd/unrealircd/pull/217,https://github.com/syzop,3,https://github.com/unrealircd/unrealircd/pull/217#issuecomment-1143177191,Also used BUFSIZE instead of 512 as BUFSIZE is defined to 512 already.,Removed the buf global variables in d598969 so I can no longer make this mistake.,True,{}
