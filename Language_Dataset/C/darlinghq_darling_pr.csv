darlinghq/darling,https://github.com/darlinghq/darling,136,2016-03-09T16:22:22Z,2016-03-09T16:35:38Z,2016-03-09T16:37:57Z,MERGED,True,1,1,1,https://github.com/akovalyov,Fix unexistent -r git option in README,1,[],https://github.com/darlinghq/darling/pull/136,https://github.com/akovalyov,1,https://github.com/darlinghq/darling/pull/136,"During the very first try, I had the following troubles
andrew:$ git clone -r https://github.com/darlinghq/darling.git
error: unknown switch `r'
Replacing it with --recurse-submodules helped.
andrew:$ git clone --recurse-submodules  https://github.com/darlinghq/darling.git
Cloning into 'darling'...
remote: Counting objects: 27092, done.
remote: Compressing objects: 100% (199/199), done.
remote: Total 27092 (delta 95), reused 0 (delta 0), pack-reused 26885
Receiving objects: 100% (27092/27092), 21.98 MiB | 7.51 MiB/s, done.
Resolving deltas: 100% (13754/13754), done.
Checking connectivity... done.
# tens of submodules clones here
andrew:$ git --version
git version 1.9.1","During the very first try, I had the following troubles
andrew:$ git clone -r https://github.com/darlinghq/darling.git
error: unknown switch `r'
Replacing it with --recurse-submodules helped.
andrew:$ git clone --recurse-submodules  https://github.com/darlinghq/darling.git
Cloning into 'darling'...
remote: Counting objects: 27092, done.
remote: Compressing objects: 100% (199/199), done.
remote: Total 27092 (delta 95), reused 0 (delta 0), pack-reused 26885
Receiving objects: 100% (27092/27092), 21.98 MiB | 7.51 MiB/s, done.
Resolving deltas: 100% (13754/13754), done.
Checking connectivity... done.
# tens of submodules clones here
andrew:$ git --version
git version 1.9.1",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,136,2016-03-09T16:22:22Z,2016-03-09T16:35:38Z,2016-03-09T16:37:57Z,MERGED,True,1,1,1,https://github.com/akovalyov,Fix unexistent -r git option in README,1,[],https://github.com/darlinghq/darling/pull/136,https://github.com/LubosD,2,https://github.com/darlinghq/darling/pull/136#issuecomment-194384292,"During the very first try, I had the following troubles
andrew:$ git clone -r https://github.com/darlinghq/darling.git
error: unknown switch `r'
Replacing it with --recurse-submodules helped.
andrew:$ git clone --recurse-submodules  https://github.com/darlinghq/darling.git
Cloning into 'darling'...
remote: Counting objects: 27092, done.
remote: Compressing objects: 100% (199/199), done.
remote: Total 27092 (delta 95), reused 0 (delta 0), pack-reused 26885
Receiving objects: 100% (27092/27092), 21.98 MiB | 7.51 MiB/s, done.
Resolving deltas: 100% (13754/13754), done.
Checking connectivity... done.
# tens of submodules clones here
andrew:$ git --version
git version 1.9.1",Thanks. --recursive should work too.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,137,2016-03-18T23:54:04Z,2016-03-19T01:07:48Z,2016-03-19T19:39:16Z,MERGED,True,2,1,1,https://github.com/jcoffland,Changes needed to build on Debian system,1,[],https://github.com/darlinghq/darling/pull/137,https://github.com/jcoffland,1,https://github.com/darlinghq/darling/pull/137,Note bootfiles.h is an OSX file not current found in darling or any of its submodules.,Note bootfiles.h is an OSX file not current found in darling or any of its submodules.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,137,2016-03-18T23:54:04Z,2016-03-19T01:07:48Z,2016-03-19T19:39:16Z,MERGED,True,2,1,1,https://github.com/jcoffland,Changes needed to build on Debian system,1,[],https://github.com/darlinghq/darling/pull/137,https://github.com/jcoffland,2,https://github.com/darlinghq/darling/pull/137#issuecomment-198775172,Note bootfiles.h is an OSX file not current found in darling or any of its submodules.,thanks,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,149,2016-07-11T10:10:18Z,2016-07-11T11:39:53Z,2016-07-11T11:39:53Z,MERGED,True,2,2,1,https://github.com/samhocevar,Shell portability fixes in the darling script.,1,[],https://github.com/darlinghq/darling/pull/149,https://github.com/samhocevar,1,https://github.com/darlinghq/darling/pull/149,"Use ‘=’ instead of ‘==’ for compatibility with non-bash shells. Also, on
some systems rmmod resides in /sbin, so add it to $PATH.","Use ‘=’ instead of ‘==’ for compatibility with non-bash shells. Also, on
some systems rmmod resides in /sbin, so add it to $PATH.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,174,2016-11-04T02:35:30Z,2016-11-04T08:42:20Z,2016-11-04T08:42:20Z,MERGED,True,6,0,2,https://github.com/ahyattdev,Add the suggested build folder and some artifacts of building the kernel module to .gitignores,1,[],https://github.com/darlinghq/darling/pull/174,https://github.com/ahyattdev,1,https://github.com/darlinghq/darling/pull/174,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,177,2016-11-06T21:22:54Z,2016-11-06T22:06:45Z,2016-11-06T22:07:00Z,MERGED,True,6,1,4,https://github.com/ahyattdev,Initial ruby submodule,3,[],https://github.com/darlinghq/darling/pull/177,https://github.com/ahyattdev,1,https://github.com/darlinghq/darling/pull/177,"I also sent a transfer request to @LubosD for the darling-ruby repo currently on my account. If this PR is accepted, you can then accept the transfer request and then transfer it to darlinghq. GitHub doesn't allow requesting a transfer to an organization unless you are an admin for some reason.
Also, a commit that updates the corecrypto submodule sneaked into this PR.","I also sent a transfer request to @LubosD for the darling-ruby repo currently on my account. If this PR is accepted, you can then accept the transfer request and then transfer it to darlinghq. GitHub doesn't allow requesting a transfer to an organization unless you are an admin for some reason.
Also, a commit that updates the corecrypto submodule sneaked into this PR.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,177,2016-11-06T21:22:54Z,2016-11-06T22:06:45Z,2016-11-06T22:07:00Z,MERGED,True,6,1,4,https://github.com/ahyattdev,Initial ruby submodule,3,[],https://github.com/darlinghq/darling/pull/177,https://github.com/LubosD,2,https://github.com/darlinghq/darling/pull/177#issuecomment-258714649,"I also sent a transfer request to @LubosD for the darling-ruby repo currently on my account. If this PR is accepted, you can then accept the transfer request and then transfer it to darlinghq. GitHub doesn't allow requesting a transfer to an organization unless you are an admin for some reason.
Also, a commit that updates the corecrypto submodule sneaked into this PR.",Thanks a bunch!,True,{'THUMBS_UP': ['https://github.com/ahyattdev']}
darlinghq/darling,https://github.com/darlinghq/darling,178,2016-11-06T23:16:16Z,2016-11-06T23:17:39Z,2016-11-06T23:17:39Z,MERGED,True,10,0,2,https://github.com/kamillys,Add __simple_sprintf,1,[],https://github.com/darlinghq/darling/pull/178,https://github.com/kamillys,1,https://github.com/darlinghq/darling/pull/178,Signed-off-by: kamil kamillys@gmail.com,Signed-off-by: kamil kamillys@gmail.com,True,"{'THUMBS_UP': ['https://github.com/ahyattdev', 'https://github.com/stek29']}"
darlinghq/darling,https://github.com/darlinghq/darling,181,2016-11-08T03:39:32Z,2016-11-08T08:01:04Z,2016-11-08T13:10:51Z,MERGED,True,34,0,1,https://github.com/GlenDC,add build dependencies to README,1,[],https://github.com/darlinghq/darling/pull/181,https://github.com/GlenDC,1,https://github.com/darlinghq/darling/pull/181,"Could the added arch linux dependencies perhaps also be added to the website? I couldn't seem to find the repository for the website, otherwise I would have helped out with that.
For now I can't build the i386 build on Arch Linux (x64) though, as I get stuck at the following during make:
$ make
[  0%] Built target migcom
[  0%] Built target system_duct
[  4%] Built target emulation
[  4%] Building C object src/kernel/libsyscall/CMakeFiles/libsyscall.dir/custom/errno.o
/tmp/errno-4a1da7.s: Assembler messages:
/tmp/errno-4a1da7.s:630: Error: inconsistent uses of .cfi_sections
clang-3.9: error: assembler command failed with exit code 1 (use -v to see invocation)
make[2]: *** [src/kernel/libsyscall/CMakeFiles/libsyscall.dir/build.make:1611: src/kernel/libsyscall/CMakeFiles/libsyscall.dir/custom/errno.o] Error 1
make[1]: *** [CMakeFiles/Makefile2:515: src/kernel/libsyscall/CMakeFiles/libsyscall.dir/all] Error 2
make: *** [Makefile:150: all] Error 2","Could the added arch linux dependencies perhaps also be added to the website? I couldn't seem to find the repository for the website, otherwise I would have helped out with that.
For now I can't build the i386 build on Arch Linux (x64) though, as I get stuck at the following during make:
$ make
[  0%] Built target migcom
[  0%] Built target system_duct
[  4%] Built target emulation
[  4%] Building C object src/kernel/libsyscall/CMakeFiles/libsyscall.dir/custom/errno.o
/tmp/errno-4a1da7.s: Assembler messages:
/tmp/errno-4a1da7.s:630: Error: inconsistent uses of .cfi_sections
clang-3.9: error: assembler command failed with exit code 1 (use -v to see invocation)
make[2]: *** [src/kernel/libsyscall/CMakeFiles/libsyscall.dir/build.make:1611: src/kernel/libsyscall/CMakeFiles/libsyscall.dir/custom/errno.o] Error 1
make[1]: *** [CMakeFiles/Makefile2:515: src/kernel/libsyscall/CMakeFiles/libsyscall.dir/all] Error 2
make: *** [Makefile:150: all] Error 2",True,{'THUMBS_UP': ['https://github.com/ahyattdev']}
darlinghq/darling,https://github.com/darlinghq/darling,181,2016-11-08T03:39:32Z,2016-11-08T08:01:04Z,2016-11-08T13:10:51Z,MERGED,True,34,0,1,https://github.com/GlenDC,add build dependencies to README,1,[],https://github.com/darlinghq/darling/pull/181,https://github.com/LubosD,2,https://github.com/darlinghq/darling/pull/181#issuecomment-259070429,"Could the added arch linux dependencies perhaps also be added to the website? I couldn't seem to find the repository for the website, otherwise I would have helped out with that.
For now I can't build the i386 build on Arch Linux (x64) though, as I get stuck at the following during make:
$ make
[  0%] Built target migcom
[  0%] Built target system_duct
[  4%] Built target emulation
[  4%] Building C object src/kernel/libsyscall/CMakeFiles/libsyscall.dir/custom/errno.o
/tmp/errno-4a1da7.s: Assembler messages:
/tmp/errno-4a1da7.s:630: Error: inconsistent uses of .cfi_sections
clang-3.9: error: assembler command failed with exit code 1 (use -v to see invocation)
make[2]: *** [src/kernel/libsyscall/CMakeFiles/libsyscall.dir/build.make:1611: src/kernel/libsyscall/CMakeFiles/libsyscall.dir/custom/errno.o] Error 1
make[1]: *** [CMakeFiles/Makefile2:515: src/kernel/libsyscall/CMakeFiles/libsyscall.dir/all] Error 2
make: *** [Makefile:150: all] Error 2","Take a look here, I think it's a bug in binutils: #157 (comment)
I'll publish the website's repo.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,181,2016-11-08T03:39:32Z,2016-11-08T08:01:04Z,2016-11-08T13:10:51Z,MERGED,True,34,0,1,https://github.com/GlenDC,add build dependencies to README,1,[],https://github.com/darlinghq/darling/pull/181,https://github.com/LubosD,3,https://github.com/darlinghq/darling/pull/181#issuecomment-259072963,"Could the added arch linux dependencies perhaps also be added to the website? I couldn't seem to find the repository for the website, otherwise I would have helped out with that.
For now I can't build the i386 build on Arch Linux (x64) though, as I get stuck at the following during make:
$ make
[  0%] Built target migcom
[  0%] Built target system_duct
[  4%] Built target emulation
[  4%] Building C object src/kernel/libsyscall/CMakeFiles/libsyscall.dir/custom/errno.o
/tmp/errno-4a1da7.s: Assembler messages:
/tmp/errno-4a1da7.s:630: Error: inconsistent uses of .cfi_sections
clang-3.9: error: assembler command failed with exit code 1 (use -v to see invocation)
make[2]: *** [src/kernel/libsyscall/CMakeFiles/libsyscall.dir/build.make:1611: src/kernel/libsyscall/CMakeFiles/libsyscall.dir/custom/errno.o] Error 1
make[1]: *** [CMakeFiles/Makefile2:515: src/kernel/libsyscall/CMakeFiles/libsyscall.dir/all] Error 2
make: *** [Makefile:150: all] Error 2",https://github.com/darlinghq/www.darlinghq.org,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,181,2016-11-08T03:39:32Z,2016-11-08T08:01:04Z,2016-11-08T13:10:51Z,MERGED,True,34,0,1,https://github.com/GlenDC,add build dependencies to README,1,[],https://github.com/darlinghq/darling/pull/181,https://github.com/GlenDC,4,https://github.com/darlinghq/darling/pull/181#issuecomment-259132315,"Could the added arch linux dependencies perhaps also be added to the website? I couldn't seem to find the repository for the website, otherwise I would have helped out with that.
For now I can't build the i386 build on Arch Linux (x64) though, as I get stuck at the following during make:
$ make
[  0%] Built target migcom
[  0%] Built target system_duct
[  4%] Built target emulation
[  4%] Building C object src/kernel/libsyscall/CMakeFiles/libsyscall.dir/custom/errno.o
/tmp/errno-4a1da7.s: Assembler messages:
/tmp/errno-4a1da7.s:630: Error: inconsistent uses of .cfi_sections
clang-3.9: error: assembler command failed with exit code 1 (use -v to see invocation)
make[2]: *** [src/kernel/libsyscall/CMakeFiles/libsyscall.dir/build.make:1611: src/kernel/libsyscall/CMakeFiles/libsyscall.dir/custom/errno.o] Error 1
make[1]: *** [CMakeFiles/Makefile2:515: src/kernel/libsyscall/CMakeFiles/libsyscall.dir/all] Error 2
make: *** [Makefile:150: all] Error 2","Ah ok that seems to talk about a x86_64 build, which I can build successfully on Arch Linux. It's only when trying to build the i386 build that it fails. I'll check out the issue out in more detail later though.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,182,2016-11-11T21:14:52Z,2016-11-14T07:25:22Z,2016-11-14T07:25:22Z,MERGED,True,37,3,8,https://github.com/ahyattdev,"Add Python to /etc/darling/dylib.conf, move the Ruby folder up, and add DebugSymbols.framework",4,[],https://github.com/darlinghq/darling/pull/182,https://github.com/ahyattdev,1,https://github.com/darlinghq/darling/pull/182,"Question:
How does Darling handle it when files such as /etc/darling/dylib.conf are changed in the source of the project which also exist in the prefix? I couldn't get it to install and had to copy it over to my prefix.","Question:
How does Darling handle it when files such as /etc/darling/dylib.conf are changed in the source of the project which also exist in the prefix? I couldn't get it to install and had to copy it over to my prefix.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,182,2016-11-11T21:14:52Z,2016-11-14T07:25:22Z,2016-11-14T07:25:22Z,MERGED,True,37,3,8,https://github.com/ahyattdev,"Add Python to /etc/darling/dylib.conf, move the Ruby folder up, and add DebugSymbols.framework",4,[],https://github.com/darlinghq/darling/pull/182,https://github.com/LubosD,2,https://github.com/darlinghq/darling/pull/182#issuecomment-260265258,"Question:
How does Darling handle it when files such as /etc/darling/dylib.conf are changed in the source of the project which also exist in the prefix? I couldn't get it to install and had to copy it over to my prefix.","Unfortunately, this part of prefixes (stuff such as dylib.conf) hasn't yet been fully thought through :-( You are absolutely welcome to make suggestions how it should be improved.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,185,2016-11-12T15:36:45Z,2016-11-14T19:30:17Z,2016-11-14T19:30:17Z,CLOSED,False,24,1,1,https://github.com/kamillys,Add sandboxed home directory,1,[],https://github.com/darlinghq/darling/pull/185,https://github.com/kamillys,1,https://github.com/darlinghq/darling/pull/185,Signed-off-by: kamil kamillys@gmail.com,Signed-off-by: kamil kamillys@gmail.com,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,185,2016-11-12T15:36:45Z,2016-11-14T19:30:17Z,2016-11-14T19:30:17Z,CLOSED,False,24,1,1,https://github.com/kamillys,Add sandboxed home directory,1,[],https://github.com/darlinghq/darling/pull/185,https://github.com/LubosD,2,https://github.com/darlinghq/darling/pull/185#issuecomment-260287540,Signed-off-by: kamil kamillys@gmail.com,"It'd great if you could fix what the reviewers found. At any rate, the final plan (so that you know) is to automatically bind mount various directories into the chroot based on /etc/fstab inside the chroot.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,186,2016-11-13T15:30:32Z,2016-11-13T16:50:05Z,2016-11-13T16:50:05Z,MERGED,True,1,1,1,https://github.com/tpimh,Rely on uname in PATH,1,[],https://github.com/darlinghq/darling/pull/186,https://github.com/tpimh,1,https://github.com/darlinghq/darling/pull/186,Not every distro has it in /usr/bin (#157),Not every distro has it in /usr/bin (#157),True,{}
darlinghq/darling,https://github.com/darlinghq/darling,188,2016-11-14T20:06:59Z,2017-01-22T17:28:58Z,2017-01-22T17:28:58Z,CLOSED,False,57,33,1,https://github.com/kamillys,Add sandboxed home directory,1,[],https://github.com/darlinghq/darling/pull/188,https://github.com/kamillys,1,https://github.com/darlinghq/darling/pull/188,Signed-off-by: kamil kamillys@gmail.com,Signed-off-by: kamil kamillys@gmail.com,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,188,2016-11-14T20:06:59Z,2017-01-22T17:28:58Z,2017-01-22T17:28:58Z,CLOSED,False,57,33,1,https://github.com/kamillys,Add sandboxed home directory,1,[],https://github.com/darlinghq/darling/pull/188,https://github.com/kamillys,2,https://github.com/darlinghq/darling/pull/188#issuecomment-260447181,Signed-off-by: kamil kamillys@gmail.com,Resume from #185,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,188,2016-11-14T20:06:59Z,2017-01-22T17:28:58Z,2017-01-22T17:28:58Z,CLOSED,False,57,33,1,https://github.com/kamillys,Add sandboxed home directory,1,[],https://github.com/darlinghq/darling/pull/188,https://github.com/kamillys,3,https://github.com/darlinghq/darling/pull/188#issuecomment-261907994,Signed-off-by: kamil kamillys@gmail.com,"Changed copy to use ""directory/."" pattern.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,188,2016-11-14T20:06:59Z,2017-01-22T17:28:58Z,2017-01-22T17:28:58Z,CLOSED,False,57,33,1,https://github.com/kamillys,Add sandboxed home directory,1,[],https://github.com/darlinghq/darling/pull/188,https://github.com/stek29,4,https://github.com/darlinghq/darling/pull/188#issuecomment-274343159,Signed-off-by: kamil kamillys@gmail.com,"darling is now a C program and not a shell script, isn't it?",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,188,2016-11-14T20:06:59Z,2017-01-22T17:28:58Z,2017-01-22T17:28:58Z,CLOSED,False,57,33,1,https://github.com/kamillys,Add sandboxed home directory,1,[],https://github.com/darlinghq/darling/pull/188,https://github.com/bugaevc,5,https://github.com/darlinghq/darling/pull/188#issuecomment-274344121,Signed-off-by: kamil kamillys@gmail.com,"darling is now a C program and not a shell script, isn't it?

Yeah 😄 see #197",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,188,2016-11-14T20:06:59Z,2017-01-22T17:28:58Z,2017-01-22T17:28:58Z,CLOSED,False,57,33,1,https://github.com/kamillys,Add sandboxed home directory,1,[],https://github.com/darlinghq/darling/pull/188,https://github.com/stek29,6,https://github.com/darlinghq/darling/pull/188#issuecomment-274344220,Signed-off-by: kamil kamillys@gmail.com,Then why won't you close this PR? :),True,{}
darlinghq/darling,https://github.com/darlinghq/darling,189,2016-11-15T00:51:10Z,2016-11-15T12:48:11Z,2016-11-15T12:48:11Z,CLOSED,False,7,1,4,https://github.com/ahyattdev,Fix and hide some warnings,2,[],https://github.com/darlinghq/darling/pull/189,https://github.com/ahyattdev,1,https://github.com/darlinghq/darling/pull/189,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,189,2016-11-15T00:51:10Z,2016-11-15T12:48:11Z,2016-11-15T12:48:11Z,CLOSED,False,7,1,4,https://github.com/ahyattdev,Fix and hide some warnings,2,[],https://github.com/darlinghq/darling/pull/189,https://github.com/LubosD,2,https://github.com/darlinghq/darling/pull/189#issuecomment-260632299,,"Hi, thanks for the PR and sorry for the mess. I created a better fix for the problem (that your 2nd commit tries to resolve) and manually merged just the 1st commit.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,191,2016-11-16T03:12:29Z,2016-11-16T08:03:26Z,2016-11-16T08:03:31Z,MERGED,True,6,1,4,https://github.com/ahyattdev,Create a submodule for man,2,[],https://github.com/darlinghq/darling/pull/191,https://github.com/ahyattdev,1,https://github.com/darlinghq/darling/pull/191,"It is already at the point where it builds and links the man executable. Some work is needed to get /etc/man.conf in place and build some other necessary utilities.
@LubosD I sent a transfer request for the darling-man repository on my account to your's, to transfer it to @darlinghq.","It is already at the point where it builds and links the man executable. Some work is needed to get /etc/man.conf in place and build some other necessary utilities.
@LubosD I sent a transfer request for the darling-man repository on my account to your's, to transfer it to @darlinghq.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,191,2016-11-16T03:12:29Z,2016-11-16T08:03:26Z,2016-11-16T08:03:31Z,MERGED,True,6,1,4,https://github.com/ahyattdev,Create a submodule for man,2,[],https://github.com/darlinghq/darling/pull/191,https://github.com/LubosD,2,https://github.com/darlinghq/darling/pull/191#issuecomment-260879649,"It is already at the point where it builds and links the man executable. Some work is needed to get /etc/man.conf in place and build some other necessary utilities.
@LubosD I sent a transfer request for the darling-man repository on my account to your's, to transfer it to @darlinghq.",Thanks a lot!,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,192,2016-11-17T02:48:56Z,2016-11-17T09:36:35Z,2016-11-18T03:01:04Z,MERGED,True,3,3,3,https://github.com/ahyattdev,Update man and remove dtrace dependency,3,[],https://github.com/darlinghq/darling/pull/192,https://github.com/ahyattdev,1,https://github.com/darlinghq/darling/pull/192,"man
This update has a man that just needs some more dependencies to work, including:
/usr/bin/groff
/usr/bin/tbl
It also installs some manpages for man itself
ruby
Make sure that you clean the build folder for src/external/ruby, because it will pick up the old, generated probes.h (it searches CMAKE_BINARY_DIR before CMAKE_SOURCE_DIR) instead of the new one.
A Hello World program works now!","man
This update has a man that just needs some more dependencies to work, including:
/usr/bin/groff
/usr/bin/tbl
It also installs some manpages for man itself
ruby
Make sure that you clean the build folder for src/external/ruby, because it will pick up the old, generated probes.h (it searches CMAKE_BINARY_DIR before CMAKE_SOURCE_DIR) instead of the new one.
A Hello World program works now!",True,"{'THUMBS_UP': ['https://github.com/stek29', 'https://github.com/LubosD']}"
darlinghq/darling,https://github.com/darlinghq/darling,192,2016-11-17T02:48:56Z,2016-11-17T09:36:35Z,2016-11-18T03:01:04Z,MERGED,True,3,3,3,https://github.com/ahyattdev,Update man and remove dtrace dependency,3,[],https://github.com/darlinghq/darling/pull/192,https://github.com/LubosD,2,https://github.com/darlinghq/darling/pull/192#issuecomment-261201845,"man
This update has a man that just needs some more dependencies to work, including:
/usr/bin/groff
/usr/bin/tbl
It also installs some manpages for man itself
ruby
Make sure that you clean the build folder for src/external/ruby, because it will pick up the old, generated probes.h (it searches CMAKE_BINARY_DIR before CMAKE_SOURCE_DIR) instead of the new one.
A Hello World program works now!","From now on, ruby is needed to build Darling. What do you think about also bundling pregenerated .tmpl files?",True,{'THUMBS_UP': ['https://github.com/ahyattdev']}
darlinghq/darling,https://github.com/darlinghq/darling,192,2016-11-17T02:48:56Z,2016-11-17T09:36:35Z,2016-11-18T03:01:04Z,MERGED,True,3,3,3,https://github.com/ahyattdev,Update man and remove dtrace dependency,3,[],https://github.com/darlinghq/darling/pull/192,https://github.com/ahyattdev,3,https://github.com/darlinghq/darling/pull/192#issuecomment-261436767,"man
This update has a man that just needs some more dependencies to work, including:
/usr/bin/groff
/usr/bin/tbl
It also installs some manpages for man itself
ruby
Make sure that you clean the build folder for src/external/ruby, because it will pick up the old, generated probes.h (it searches CMAKE_BINARY_DIR before CMAKE_SOURCE_DIR) instead of the new one.
A Hello World program works now!","I think that would be smart, since portability doesn't matter this point, except between x86_64 and i386 Linux.
Using Ruby scripts to generate files necessary to build Ruby wasn't the best move of their's. 😆",True,{'LAUGH': ['https://github.com/stek29']}
darlinghq/darling,https://github.com/darlinghq/darling,194,2016-11-20T19:58:52Z,2016-11-21T09:36:34Z,2016-11-21T09:36:44Z,MERGED,True,7,2,5,https://github.com/ahyattdev,Add groff,4,[],https://github.com/darlinghq/darling/pull/194,https://github.com/ahyattdev,1,https://github.com/darlinghq/darling/pull/194,@LubosD I sent a request to transfer darling-groff to you.,@LubosD I sent a request to transfer darling-groff to you.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,194,2016-11-20T19:58:52Z,2016-11-21T09:36:34Z,2016-11-21T09:36:44Z,MERGED,True,7,2,5,https://github.com/ahyattdev,Add groff,4,[],https://github.com/darlinghq/darling/pull/194,https://github.com/ahyattdev,2,https://github.com/darlinghq/darling/pull/194#issuecomment-261835137,@LubosD I sent a request to transfer darling-groff to you.,"groff now completely builds. It works and therefore man works.
Test it with man man!",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,194,2016-11-20T19:58:52Z,2016-11-21T09:36:34Z,2016-11-21T09:36:44Z,MERGED,True,7,2,5,https://github.com/ahyattdev,Add groff,4,[],https://github.com/darlinghq/darling/pull/194,https://github.com/LubosD,3,https://github.com/darlinghq/darling/pull/194#issuecomment-261888896,@LubosD I sent a request to transfer darling-groff to you.,Thanks a lot for your great work!,True,{'THUMBS_UP': ['https://github.com/ahyattdev']}
darlinghq/darling,https://github.com/darlinghq/darling,196,2016-11-20T21:55:46Z,2016-11-21T09:37:26Z,2017-01-08T11:36:52Z,MERGED,True,44,8,5,https://github.com/fotcorn,kernel module: added initial dkms support,1,['Linux Kernel Module'],https://github.com/darlinghq/darling/pull/196,https://github.com/fotcorn,1,https://github.com/darlinghq/darling/pull/196,"This was tested on Ubuntu 16.04. I do not have a system where the ""old"" way works, so someone should test if it still works with the Makefile changes.","This was tested on Ubuntu 16.04. I do not have a system where the ""old"" way works, so someone should test if it still works with the Makefile changes.",True,{'THUMBS_UP': ['https://github.com/ahyattdev']}
darlinghq/darling,https://github.com/darlinghq/darling,196,2016-11-20T21:55:46Z,2016-11-21T09:37:26Z,2017-01-08T11:36:52Z,MERGED,True,44,8,5,https://github.com/fotcorn,kernel module: added initial dkms support,1,['Linux Kernel Module'],https://github.com/darlinghq/darling/pull/196,https://github.com/LubosD,2,https://github.com/darlinghq/darling/pull/196#issuecomment-261889065,"This was tested on Ubuntu 16.04. I do not have a system where the ""old"" way works, so someone should test if it still works with the Makefile changes.",Many thanks!,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,198,2016-11-22T14:54:23Z,2016-11-22T15:17:25Z,2016-11-22T15:17:25Z,MERGED,True,6,3,2,https://github.com/ahyattdev,Build the manpage database when the prefix is set up,3,[],https://github.com/darlinghq/darling/pull/198,https://github.com/ahyattdev,1,https://github.com/darlinghq/darling/pull/198,"A step to setup_prefix in src/dyld/darling that runs the script to build the manpage database.
The manpage database (stored in /usr/share/man/whatis) is used by commands that search manpages, such as apropos and whatis.","A step to setup_prefix in src/dyld/darling that runs the script to build the manpage database.
The manpage database (stored in /usr/share/man/whatis) is used by commands that search manpages, such as apropos and whatis.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,198,2016-11-22T14:54:23Z,2016-11-22T15:17:25Z,2016-11-22T15:17:25Z,MERGED,True,6,3,2,https://github.com/ahyattdev,Build the manpage database when the prefix is set up,3,[],https://github.com/darlinghq/darling/pull/198,https://github.com/ahyattdev,2,https://github.com/darlinghq/darling/pull/198#issuecomment-262262547,"A step to setup_prefix in src/dyld/darling that runs the script to build the manpage database.
The manpage database (stored in /usr/share/man/whatis) is used by commands that search manpages, such as apropos and whatis.",There is a regression where the script exists after updating the manpage database. This is not due to an error because it successfully builds it. Running darling shell a second time brings up bash no problem.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,198,2016-11-22T14:54:23Z,2016-11-22T15:17:25Z,2016-11-22T15:17:25Z,MERGED,True,6,3,2,https://github.com/ahyattdev,Build the manpage database when the prefix is set up,3,[],https://github.com/darlinghq/darling/pull/198,https://github.com/ahyattdev,3,https://github.com/darlinghq/darling/pull/198#issuecomment-262264420,"A step to setup_prefix in src/dyld/darling that runs the script to build the manpage database.
The manpage database (stored in /usr/share/man/whatis) is used by commands that search manpages, such as apropos and whatis.",It turns out that this is because exec replaces the shell with that command. Is there any way to execute /usr/libexec/makewhatis so makewhatis operates with the prefix as the root file system?,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,198,2016-11-22T14:54:23Z,2016-11-22T15:17:25Z,2016-11-22T15:17:25Z,MERGED,True,6,3,2,https://github.com/ahyattdev,Build the manpage database when the prefix is set up,3,[],https://github.com/darlinghq/darling/pull/198,https://github.com/LubosD,4,https://github.com/darlinghq/darling/pull/198#issuecomment-262266012,"A step to setup_prefix in src/dyld/darling that runs the script to build the manpage database.
The manpage database (stored in /usr/share/man/whatis) is used by commands that search manpages, such as apropos and whatis.","As long as DPREFIX is exported, this should be the case. You just need to specify full (real) path to makewhatis.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,198,2016-11-22T14:54:23Z,2016-11-22T15:17:25Z,2016-11-22T15:17:25Z,MERGED,True,6,3,2,https://github.com/ahyattdev,Build the manpage database when the prefix is set up,3,[],https://github.com/darlinghq/darling/pull/198,https://github.com/ahyattdev,5,https://github.com/darlinghq/darling/pull/198#issuecomment-262266558,"A step to setup_prefix in src/dyld/darling that runs the script to build the manpage database.
The manpage database (stored in /usr/share/man/whatis) is used by commands that search manpages, such as apropos and whatis.",The solution was running the command without exec. Duh!,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,199,2016-11-22T20:13:25Z,2016-11-22T21:54:24Z,2016-11-22T21:54:24Z,MERGED,True,9,9,9,https://github.com/ahyattdev,Update 9 submodules to include manpage installations,1,[],https://github.com/darlinghq/darling/pull/199,https://github.com/ahyattdev,1,https://github.com/darlinghq/darling/pull/199,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,201,2016-11-23T04:55:22Z,2016-11-23T08:39:24Z,2016-11-23T08:39:24Z,MERGED,True,53,18,22,https://github.com/ahyattdev,Hide warnings and update submodules to hide warnings,7,[],https://github.com/darlinghq/darling/pull/201,https://github.com/ahyattdev,1,https://github.com/darlinghq/darling/pull/201,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,205,2016-11-27T14:40:28Z,2016-11-27T15:36:05Z,2016-11-27T15:40:57Z,MERGED,True,5,0,3,https://github.com/X0rg,Add a submodule for OpenSSL Certificates,1,[],https://github.com/darlinghq/darling/pull/205,https://github.com/X0rg,1,https://github.com/darlinghq/darling/pull/205,"Related to #197.
It adds a submodule with OpenSSL Certificates.
OpenSSL Certificates are installed in ${CMAKE_INSTALL_PREFIX}/libexec/darling/System/Library/OpenSSL/certs.
Symbolic links are created by CMakeLists.txt.
PS: I'm sorry, I'm not sure of way to add submodules. Tell me if I'm wrong.","Related to #197.
It adds a submodule with OpenSSL Certificates.
OpenSSL Certificates are installed in ${CMAKE_INSTALL_PREFIX}/libexec/darling/System/Library/OpenSSL/certs.
Symbolic links are created by CMakeLists.txt.
PS: I'm sorry, I'm not sure of way to add submodules. Tell me if I'm wrong.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,205,2016-11-27T14:40:28Z,2016-11-27T15:36:05Z,2016-11-27T15:40:57Z,MERGED,True,5,0,3,https://github.com/X0rg,Add a submodule for OpenSSL Certificates,1,[],https://github.com/darlinghq/darling/pull/205,https://github.com/LubosD,2,https://github.com/darlinghq/darling/pull/205#issuecomment-263127901,"Related to #197.
It adds a submodule with OpenSSL Certificates.
OpenSSL Certificates are installed in ${CMAKE_INSTALL_PREFIX}/libexec/darling/System/Library/OpenSSL/certs.
Symbolic links are created by CMakeLists.txt.
PS: I'm sorry, I'm not sure of way to add submodules. Tell me if I'm wrong.","The submodule stuff is OK.
One question: I see you use openssl to generate certificate names. That's great, BUT the hashing algorithm has changed between 0.9.x and 1.something (from md5 to sha1 IIRC). MacOS is stuck with 0.9.x.
Could you please check that your cmake script produces the same hashes as what is inside of http://packages.darlinghq.org/org.darlinghq.pkg.OpenSSLCertificates/org.darlinghq.pkg.OpenSSLCertificates-1.pkg ?
If not, try doing something like openssl x509 -noout -modulus -in certificate.crt | openssl md5 instead, maybe it will generate the right hash.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,205,2016-11-27T14:40:28Z,2016-11-27T15:36:05Z,2016-11-27T15:40:57Z,MERGED,True,5,0,3,https://github.com/X0rg,Add a submodule for OpenSSL Certificates,1,[],https://github.com/darlinghq/darling/pull/205,https://github.com/X0rg,3,https://github.com/darlinghq/darling/pull/205#issuecomment-263128525,"Related to #197.
It adds a submodule with OpenSSL Certificates.
OpenSSL Certificates are installed in ${CMAKE_INSTALL_PREFIX}/libexec/darling/System/Library/OpenSSL/certs.
Symbolic links are created by CMakeLists.txt.
PS: I'm sorry, I'm not sure of way to add submodules. Tell me if I'm wrong.","Indeed, hashes are differents, example with ACCVRAIZ1.crt:
3c9a4d3b (package) / a94d09e5 (openssl hash)
But when I use openssl x509 -noout -subject_hash_old -in, hash is correct.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,205,2016-11-27T14:40:28Z,2016-11-27T15:36:05Z,2016-11-27T15:40:57Z,MERGED,True,5,0,3,https://github.com/X0rg,Add a submodule for OpenSSL Certificates,1,[],https://github.com/darlinghq/darling/pull/205,https://github.com/LubosD,4,https://github.com/darlinghq/darling/pull/205#issuecomment-263128671,"Related to #197.
It adds a submodule with OpenSSL Certificates.
OpenSSL Certificates are installed in ${CMAKE_INSTALL_PREFIX}/libexec/darling/System/Library/OpenSSL/certs.
Symbolic links are created by CMakeLists.txt.
PS: I'm sorry, I'm not sure of way to add submodules. Tell me if I'm wrong.","Even simpler then, thanks!",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,205,2016-11-27T14:40:28Z,2016-11-27T15:36:05Z,2016-11-27T15:40:57Z,MERGED,True,5,0,3,https://github.com/X0rg,Add a submodule for OpenSSL Certificates,1,[],https://github.com/darlinghq/darling/pull/205,https://github.com/X0rg,5,https://github.com/darlinghq/darling/pull/205#issuecomment-263128924,"Related to #197.
It adds a submodule with OpenSSL Certificates.
OpenSSL Certificates are installed in ${CMAKE_INSTALL_PREFIX}/libexec/darling/System/Library/OpenSSL/certs.
Symbolic links are created by CMakeLists.txt.
PS: I'm sorry, I'm not sure of way to add submodules. Tell me if I'm wrong.","Yes, using openssl md5 doesn't produce the right hash in fact.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,206,2016-11-27T15:47:50Z,2016-11-27T16:00:53Z,2016-11-27T16:00:53Z,MERGED,True,1,1,1,https://github.com/X0rg,Update openssl_certificates,1,[],https://github.com/darlinghq/darling/pull/206,https://github.com/X0rg,1,https://github.com/darlinghq/darling/pull/206,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,207,2016-11-27T23:41:51Z,2016-11-28T09:23:56Z,2016-11-28T09:25:18Z,MERGED,True,80,2,3,https://github.com/X0rg,Support module loading from new darling executable,3,[],https://github.com/darlinghq/darling/pull/207,https://github.com/X0rg,1,https://github.com/darlinghq/darling/pull/207,"Example:
$ getcap /usr/bin/darlingC 
/usr/bin/darlingC = cap_sys_module+ep

$ lsmod | grep mach       
     
$ /usr/bin/darlingC shell
Cannot unshare(CLONE_NEWNS): Operation not permitted

$ lsmod | grep mach
darling_mach           77824  0","Example:
$ getcap /usr/bin/darlingC 
/usr/bin/darlingC = cap_sys_module+ep

$ lsmod | grep mach       
     
$ /usr/bin/darlingC shell
Cannot unshare(CLONE_NEWNS): Operation not permitted

$ lsmod | grep mach
darling_mach           77824  0",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,207,2016-11-27T23:41:51Z,2016-11-28T09:23:56Z,2016-11-28T09:25:18Z,MERGED,True,80,2,3,https://github.com/X0rg,Support module loading from new darling executable,3,[],https://github.com/darlinghq/darling/pull/207,https://github.com/X0rg,2,https://github.com/darlinghq/darling/pull/207#issuecomment-263204022,"Example:
$ getcap /usr/bin/darlingC 
/usr/bin/darlingC = cap_sys_module+ep

$ lsmod | grep mach       
     
$ /usr/bin/darlingC shell
Cannot unshare(CLONE_NEWNS): Operation not permitted

$ lsmod | grep mach
darling_mach           77824  0","About unloadKernelModule(), I don't know if we need to unload module when darling exit with non-zero status.
If yes, we should probably add a function/macro to cleanup before exiting, avoiding adding  unloadKernelModule() before all return 1 and exit(1).",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,207,2016-11-27T23:41:51Z,2016-11-28T09:23:56Z,2016-11-28T09:25:18Z,MERGED,True,80,2,3,https://github.com/X0rg,Support module loading from new darling executable,3,[],https://github.com/darlinghq/darling/pull/207,https://github.com/LubosD,3,https://github.com/darlinghq/darling/pull/207#issuecomment-263217981,"Example:
$ getcap /usr/bin/darlingC 
/usr/bin/darlingC = cap_sys_module+ep

$ lsmod | grep mach       
     
$ /usr/bin/darlingC shell
Cannot unshare(CLONE_NEWNS): Operation not permitted

$ lsmod | grep mach
darling_mach           77824  0","I'm against module unloading, there can be many darling processes running. Automatic loading is only a convenience feature.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,207,2016-11-27T23:41:51Z,2016-11-28T09:23:56Z,2016-11-28T09:25:18Z,MERGED,True,80,2,3,https://github.com/X0rg,Support module loading from new darling executable,3,[],https://github.com/darlinghq/darling/pull/207,https://github.com/X0rg,4,https://github.com/darlinghq/darling/pull/207#issuecomment-263219651,"Example:
$ getcap /usr/bin/darlingC 
/usr/bin/darlingC = cap_sys_module+ep

$ lsmod | grep mach       
     
$ /usr/bin/darlingC shell
Cannot unshare(CLONE_NEWNS): Operation not permitted

$ lsmod | grep mach
darling_mach           77824  0","Ok. Did I need to revert 9e58414? Or can we assume this executable will take options, like darling unload?",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,207,2016-11-27T23:41:51Z,2016-11-28T09:23:56Z,2016-11-28T09:25:18Z,MERGED,True,80,2,3,https://github.com/X0rg,Support module loading from new darling executable,3,[],https://github.com/darlinghq/darling/pull/207,https://github.com/LubosD,5,https://github.com/darlinghq/darling/pull/207#issuecomment-263221628,"Example:
$ getcap /usr/bin/darlingC 
/usr/bin/darlingC = cap_sys_module+ep

$ lsmod | grep mach       
     
$ /usr/bin/darlingC shell
Cannot unshare(CLONE_NEWNS): Operation not permitted

$ lsmod | grep mach
darling_mach           77824  0","I'll probably take options, so I'll merge it and just uncomment default unloading.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,207,2016-11-27T23:41:51Z,2016-11-28T09:23:56Z,2016-11-28T09:25:18Z,MERGED,True,80,2,3,https://github.com/X0rg,Support module loading from new darling executable,3,[],https://github.com/darlinghq/darling/pull/207,https://github.com/X0rg,6,https://github.com/darlinghq/darling/pull/207#issuecomment-263221900,"Example:
$ getcap /usr/bin/darlingC 
/usr/bin/darlingC = cap_sys_module+ep

$ lsmod | grep mach       
     
$ /usr/bin/darlingC shell
Cannot unshare(CLONE_NEWNS): Operation not permitted

$ lsmod | grep mach
darling_mach           77824  0","Ok, thanks. :)",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,210,2016-12-04T11:10:40Z,2016-12-04T21:18:01Z,2016-12-05T12:17:25Z,MERGED,True,3,2,1,https://github.com/X0rg,Ignore -Wexpansion-to-defined warning,1,[],https://github.com/darlinghq/darling/pull/210,https://github.com/X0rg,1,https://github.com/darlinghq/darling/pull/210,Close #204,Close #204,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,210,2016-12-04T11:10:40Z,2016-12-04T21:18:01Z,2016-12-05T12:17:25Z,MERGED,True,3,2,1,https://github.com/X0rg,Ignore -Wexpansion-to-defined warning,1,[],https://github.com/darlinghq/darling/pull/210,https://github.com/ahyattdev,2,https://github.com/darlinghq/darling/pull/210#issuecomment-264733925,Close #204,"What clang version do you have?
On mine (3.8.0-2ubuntu4) whenever something is compiled I get this message:
warning: unknown warning option '-Wno-expansion-to-defined'; did you mean '-Wno-macro-redefined'? [-Wunknown-warning-option]",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,210,2016-12-04T11:10:40Z,2016-12-04T21:18:01Z,2016-12-05T12:17:25Z,MERGED,True,3,2,1,https://github.com/X0rg,Ignore -Wexpansion-to-defined warning,1,[],https://github.com/darlinghq/darling/pull/210,https://github.com/X0rg,3,https://github.com/darlinghq/darling/pull/210#issuecomment-264734076,Close #204,"As said in #204, 3.9.
Ok, I'll fix that.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,210,2016-12-04T11:10:40Z,2016-12-04T21:18:01Z,2016-12-05T12:17:25Z,MERGED,True,3,2,1,https://github.com/X0rg,Ignore -Wexpansion-to-defined warning,1,[],https://github.com/darlinghq/darling/pull/210,https://github.com/ahyattdev,4,https://github.com/darlinghq/darling/pull/210#issuecomment-264734171,Close #204,"It is worth noting that I didn't get the warning mentioned in #204, so conditionally enabling the flag to disable the warning would be best.
Thanks for looking into this.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,210,2016-12-04T11:10:40Z,2016-12-04T21:18:01Z,2016-12-05T12:17:25Z,MERGED,True,3,2,1,https://github.com/X0rg,Ignore -Wexpansion-to-defined warning,1,[],https://github.com/darlinghq/darling/pull/210,https://github.com/LubosD,5,https://github.com/darlinghq/darling/pull/210#issuecomment-264735395,Close #204,"I'll revert the change for now, because it's causing some strange failures on the build server.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,210,2016-12-04T11:10:40Z,2016-12-04T21:18:01Z,2016-12-05T12:17:25Z,MERGED,True,3,2,1,https://github.com/X0rg,Ignore -Wexpansion-to-defined warning,1,[],https://github.com/darlinghq/darling/pull/210,https://github.com/ahyattdev,6,https://github.com/darlinghq/darling/pull/210#issuecomment-264740590,Close #204,It should be working as of f80d8e3.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,210,2016-12-04T11:10:40Z,2016-12-04T21:18:01Z,2016-12-05T12:17:25Z,MERGED,True,3,2,1,https://github.com/X0rg,Ignore -Wexpansion-to-defined warning,1,[],https://github.com/darlinghq/darling/pull/210,https://github.com/LubosD,7,https://github.com/darlinghq/darling/pull/210#issuecomment-264770845,Close #204,Note that now there are some i386 build failures: https://teamcity.dolezel.info/viewLog.html?buildId=1193&buildTypeId=Darling_DebianStableX86,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,210,2016-12-04T11:10:40Z,2016-12-04T21:18:01Z,2016-12-05T12:17:25Z,MERGED,True,3,2,1,https://github.com/X0rg,Ignore -Wexpansion-to-defined warning,1,[],https://github.com/darlinghq/darling/pull/210,https://github.com/ahyattdev,8,https://github.com/darlinghq/darling/pull/210#issuecomment-264773532,Close #204,"I cant imagine valid warning flags varying per architecture. Are you using the same clang version for the i386 and x86_64 builds?
external/groff/CMakeLists.txt
22:	-Wno-mismatched-new-delete

external/security/OSX/CMakeLists.txt
12:	-Wno-mismatched-new-delete

The only projects that use that flag are groff and security.
Edit: I checked the log, both Debian ones are Clang 3.5.0.
https://teamcity.dolezel.info/viewLog.html?buildId=1193&buildTypeId=Darling_DebianStableX86&tab=buildLog#_focus=21074
This is the last line printed before an error is said to have happened.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,210,2016-12-04T11:10:40Z,2016-12-04T21:18:01Z,2016-12-05T12:17:25Z,MERGED,True,3,2,1,https://github.com/X0rg,Ignore -Wexpansion-to-defined warning,1,[],https://github.com/darlinghq/darling/pull/210,https://github.com/LubosD,9,https://github.com/darlinghq/darling/pull/210#issuecomment-264840142,Close #204,"Ah, the error is here. Not sure why it appeared now.
https://teamcity.dolezel.info/viewLog.html?buildId=1193&buildTypeId=Darling_DebianStableX86&tab=buildLog#_focus=21030
I'll fix it.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,211,2016-12-04T22:09:47Z,2016-12-04T23:26:45Z,2016-12-04T23:27:24Z,CLOSED,False,4,1,1,https://github.com/X0rg,Fix unknown warning option '-Wno-expansion-to-defined',1,[],https://github.com/darlinghq/darling/pull/211,https://github.com/X0rg,1,https://github.com/darlinghq/darling/pull/211,Related to #210,Related to #210,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,211,2016-12-04T22:09:47Z,2016-12-04T23:26:45Z,2016-12-04T23:27:24Z,CLOSED,False,4,1,1,https://github.com/X0rg,Fix unknown warning option '-Wno-expansion-to-defined',1,[],https://github.com/darlinghq/darling/pull/211,https://github.com/ahyattdev,2,https://github.com/darlinghq/darling/pull/211#issuecomment-264740421,Related to #210,I tweaked the conditional so it is NOT VERSION_LESS instead and manually merged this.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,214,2016-12-19T04:09:31Z,2016-12-19T08:38:54Z,2016-12-19T08:38:54Z,MERGED,True,5,1,1,https://github.com/gcasa,Fix issue with compilation on Debian Jessie,1,[],https://github.com/darlinghq/darling/pull/214,https://github.com/gcasa,1,https://github.com/darlinghq/darling/pull/214,This patch should fix the compilation issue which happens on debian jessie due to start_time being changed from a u64 to a struct timespec.,This patch should fix the compilation issue which happens on debian jessie due to start_time being changed from a u64 to a struct timespec.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,215,2016-12-23T11:03:52Z,2016-12-23T13:51:24Z,2018-06-04T14:32:32Z,MERGED,True,1,1,1,https://github.com/jpumc,Fix kernel version logic in thread_act.c,1,[],https://github.com/darlinghq/darling/pull/215,https://github.com/jpumc,1,https://github.com/darlinghq/darling/pull/215,The previous logic only worked on kernel version 3.16.*.,The previous logic only worked on kernel version 3.16.*.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,215,2016-12-23T11:03:52Z,2016-12-23T13:51:24Z,2018-06-04T14:32:32Z,MERGED,True,1,1,1,https://github.com/jpumc,Fix kernel version logic in thread_act.c,1,[],https://github.com/darlinghq/darling/pull/215,https://github.com/LubosD,2,https://github.com/darlinghq/darling/pull/215#issuecomment-268992677,The previous logic only worked on kernel version 3.16.*.,Thank you!,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,217,2016-12-30T17:38:16Z,2017-01-01T18:06:33Z,2017-01-08T11:33:58Z,MERGED,True,565,161,4,https://github.com/bugaevc,Implement the new 'darling' executable,5,['Container'],https://github.com/darlinghq/darling/pull/217,https://github.com/bugaevc,1,https://github.com/darlinghq/darling/pull/217,"Part of #197:

Replace darling script with a C binary

Needs SETUID to load the kernel module and for namespace/mounts manipulation.
Creates and populates the prefix if it doesn't exist.
Detects if the prefix is already ""booted"" and if not, initiates boot.
If there's no prelaunchd/darling-init running, launches it first.
Spawns the child process (e.g. the shell) into the PID/UID/mount namespaces of prelaunchd.
Sets up some environment for the child (i.e. DPREFIX, PATH, HOME, working directory) - ideally, we'd need something like systemd's machinectl shell to spawn the new process from PID 1 and not darling executable, yet make it transparent for the user.
Waits for the child to exit and returns its status.


Build prefixes on overlayfs rather than on copying files.
Implement prelaunchd (darling-init) as the init process for prefixes. prelaunchd creates a mount, user and PID namespaces. Until we have a working launchd, prelaunchd ends up looping and reaping child processes.

To build the new executable, pass -DNEW_DARLING=TRUE to cmake.
Most of the code runs as root (SETUID), so we must be extra careful about the security:

Check FS permissions.
Check that the process whose PID is saved in $DPREFIX/.init.pid actually belongs to the current user -- otherwise it'd be possible to attach to someone else's namespace.
Carefully check buffer sizes and only use n versions of scanf&printf to prevent buffer overrun.

Also, I fixed a couple bugs in the previous version of the code, e.g. taking or not taking the trailing newline (\n) into account when reading text from files.
Some stuff (for example, hdiutil) predictably doesn't work. I'm not sure that mapping UIDs/GIDs as ""0 uid 1"" is what we need.","Part of #197:

Replace darling script with a C binary

Needs SETUID to load the kernel module and for namespace/mounts manipulation.
Creates and populates the prefix if it doesn't exist.
Detects if the prefix is already ""booted"" and if not, initiates boot.
If there's no prelaunchd/darling-init running, launches it first.
Spawns the child process (e.g. the shell) into the PID/UID/mount namespaces of prelaunchd.
Sets up some environment for the child (i.e. DPREFIX, PATH, HOME, working directory) - ideally, we'd need something like systemd's machinectl shell to spawn the new process from PID 1 and not darling executable, yet make it transparent for the user.
Waits for the child to exit and returns its status.


Build prefixes on overlayfs rather than on copying files.
Implement prelaunchd (darling-init) as the init process for prefixes. prelaunchd creates a mount, user and PID namespaces. Until we have a working launchd, prelaunchd ends up looping and reaping child processes.

To build the new executable, pass -DNEW_DARLING=TRUE to cmake.
Most of the code runs as root (SETUID), so we must be extra careful about the security:

Check FS permissions.
Check that the process whose PID is saved in $DPREFIX/.init.pid actually belongs to the current user -- otherwise it'd be possible to attach to someone else's namespace.
Carefully check buffer sizes and only use n versions of scanf&printf to prevent buffer overrun.

Also, I fixed a couple bugs in the previous version of the code, e.g. taking or not taking the trailing newline (\n) into account when reading text from files.
Some stuff (for example, hdiutil) predictably doesn't work. I'm not sure that mapping UIDs/GIDs as ""0 uid 1"" is what we need.",True,"{'THUMBS_UP': ['https://github.com/vlad-ivanov-name', 'https://github.com/thopiekar', 'https://github.com/ahyattdev', 'https://github.com/LubosD']}"
darlinghq/darling,https://github.com/darlinghq/darling,217,2016-12-30T17:38:16Z,2017-01-01T18:06:33Z,2017-01-08T11:33:58Z,MERGED,True,565,161,4,https://github.com/bugaevc,Implement the new 'darling' executable,5,['Container'],https://github.com/darlinghq/darling/pull/217,https://github.com/bugaevc,2,https://github.com/darlinghq/darling/pull/217#issuecomment-269800857,"Part of #197:

Replace darling script with a C binary

Needs SETUID to load the kernel module and for namespace/mounts manipulation.
Creates and populates the prefix if it doesn't exist.
Detects if the prefix is already ""booted"" and if not, initiates boot.
If there's no prelaunchd/darling-init running, launches it first.
Spawns the child process (e.g. the shell) into the PID/UID/mount namespaces of prelaunchd.
Sets up some environment for the child (i.e. DPREFIX, PATH, HOME, working directory) - ideally, we'd need something like systemd's machinectl shell to spawn the new process from PID 1 and not darling executable, yet make it transparent for the user.
Waits for the child to exit and returns its status.


Build prefixes on overlayfs rather than on copying files.
Implement prelaunchd (darling-init) as the init process for prefixes. prelaunchd creates a mount, user and PID namespaces. Until we have a working launchd, prelaunchd ends up looping and reaping child processes.

To build the new executable, pass -DNEW_DARLING=TRUE to cmake.
Most of the code runs as root (SETUID), so we must be extra careful about the security:

Check FS permissions.
Check that the process whose PID is saved in $DPREFIX/.init.pid actually belongs to the current user -- otherwise it'd be possible to attach to someone else's namespace.
Carefully check buffer sizes and only use n versions of scanf&printf to prevent buffer overrun.

Also, I fixed a couple bugs in the previous version of the code, e.g. taking or not taking the trailing newline (\n) into account when reading text from files.
Some stuff (for example, hdiutil) predictably doesn't work. I'm not sure that mapping UIDs/GIDs as ""0 uid 1"" is what we need.","Notes & questions:

The only way to cause darling-init to quit for now is to kill -9 it.
Is there a reason why we don't use binfmt_misc?
How do we handle root/non-root inside vs root/non-root outside the UID namespace?
I'd like to get rid of VirtualPrefix and mount DPREFIX directly onto /
Maybe make the whole /Volumes directory a FUSE and mount it on namespace creation? Somehow combine it with /run/media/$USER/?",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,217,2016-12-30T17:38:16Z,2017-01-01T18:06:33Z,2017-01-08T11:33:58Z,MERGED,True,565,161,4,https://github.com/bugaevc,Implement the new 'darling' executable,5,['Container'],https://github.com/darlinghq/darling/pull/217,https://github.com/bugaevc,3,https://github.com/darlinghq/darling/pull/217#issuecomment-269816953,"Part of #197:

Replace darling script with a C binary

Needs SETUID to load the kernel module and for namespace/mounts manipulation.
Creates and populates the prefix if it doesn't exist.
Detects if the prefix is already ""booted"" and if not, initiates boot.
If there's no prelaunchd/darling-init running, launches it first.
Spawns the child process (e.g. the shell) into the PID/UID/mount namespaces of prelaunchd.
Sets up some environment for the child (i.e. DPREFIX, PATH, HOME, working directory) - ideally, we'd need something like systemd's machinectl shell to spawn the new process from PID 1 and not darling executable, yet make it transparent for the user.
Waits for the child to exit and returns its status.


Build prefixes on overlayfs rather than on copying files.
Implement prelaunchd (darling-init) as the init process for prefixes. prelaunchd creates a mount, user and PID namespaces. Until we have a working launchd, prelaunchd ends up looping and reaping child processes.

To build the new executable, pass -DNEW_DARLING=TRUE to cmake.
Most of the code runs as root (SETUID), so we must be extra careful about the security:

Check FS permissions.
Check that the process whose PID is saved in $DPREFIX/.init.pid actually belongs to the current user -- otherwise it'd be possible to attach to someone else's namespace.
Carefully check buffer sizes and only use n versions of scanf&printf to prevent buffer overrun.

Also, I fixed a couple bugs in the previous version of the code, e.g. taking or not taking the trailing newline (\n) into account when reading text from files.
Some stuff (for example, hdiutil) predictably doesn't work. I'm not sure that mapping UIDs/GIDs as ""0 uid 1"" is what we need.","We're remounting / as a ""slave"" (it was ""private"" previously) to propagate mounts that are done on the system after PID 1 was launched (a common use-case would be removable drives).",True,{'THUMBS_UP': ['https://github.com/LubosD']}
darlinghq/darling,https://github.com/darlinghq/darling,217,2016-12-30T17:38:16Z,2017-01-01T18:06:33Z,2017-01-08T11:33:58Z,MERGED,True,565,161,4,https://github.com/bugaevc,Implement the new 'darling' executable,5,['Container'],https://github.com/darlinghq/darling/pull/217,https://github.com/ahyattdev,4,https://github.com/darlinghq/darling/pull/217#issuecomment-269839396,"Part of #197:

Replace darling script with a C binary

Needs SETUID to load the kernel module and for namespace/mounts manipulation.
Creates and populates the prefix if it doesn't exist.
Detects if the prefix is already ""booted"" and if not, initiates boot.
If there's no prelaunchd/darling-init running, launches it first.
Spawns the child process (e.g. the shell) into the PID/UID/mount namespaces of prelaunchd.
Sets up some environment for the child (i.e. DPREFIX, PATH, HOME, working directory) - ideally, we'd need something like systemd's machinectl shell to spawn the new process from PID 1 and not darling executable, yet make it transparent for the user.
Waits for the child to exit and returns its status.


Build prefixes on overlayfs rather than on copying files.
Implement prelaunchd (darling-init) as the init process for prefixes. prelaunchd creates a mount, user and PID namespaces. Until we have a working launchd, prelaunchd ends up looping and reaping child processes.

To build the new executable, pass -DNEW_DARLING=TRUE to cmake.
Most of the code runs as root (SETUID), so we must be extra careful about the security:

Check FS permissions.
Check that the process whose PID is saved in $DPREFIX/.init.pid actually belongs to the current user -- otherwise it'd be possible to attach to someone else's namespace.
Carefully check buffer sizes and only use n versions of scanf&printf to prevent buffer overrun.

Also, I fixed a couple bugs in the previous version of the code, e.g. taking or not taking the trailing newline (\n) into account when reading text from files.
Some stuff (for example, hdiutil) predictably doesn't work. I'm not sure that mapping UIDs/GIDs as ""0 uid 1"" is what we need.","Thanks! I would merge, but @LubosD should make that decision since it is a big change. I added him as a reviewer to the PR.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,217,2016-12-30T17:38:16Z,2017-01-01T18:06:33Z,2017-01-08T11:33:58Z,MERGED,True,565,161,4,https://github.com/bugaevc,Implement the new 'darling' executable,5,['Container'],https://github.com/darlinghq/darling/pull/217,https://github.com/bugaevc,5,https://github.com/darlinghq/darling/pull/217#issuecomment-269866637,"Part of #197:

Replace darling script with a C binary

Needs SETUID to load the kernel module and for namespace/mounts manipulation.
Creates and populates the prefix if it doesn't exist.
Detects if the prefix is already ""booted"" and if not, initiates boot.
If there's no prelaunchd/darling-init running, launches it first.
Spawns the child process (e.g. the shell) into the PID/UID/mount namespaces of prelaunchd.
Sets up some environment for the child (i.e. DPREFIX, PATH, HOME, working directory) - ideally, we'd need something like systemd's machinectl shell to spawn the new process from PID 1 and not darling executable, yet make it transparent for the user.
Waits for the child to exit and returns its status.


Build prefixes on overlayfs rather than on copying files.
Implement prelaunchd (darling-init) as the init process for prefixes. prelaunchd creates a mount, user and PID namespaces. Until we have a working launchd, prelaunchd ends up looping and reaping child processes.

To build the new executable, pass -DNEW_DARLING=TRUE to cmake.
Most of the code runs as root (SETUID), so we must be extra careful about the security:

Check FS permissions.
Check that the process whose PID is saved in $DPREFIX/.init.pid actually belongs to the current user -- otherwise it'd be possible to attach to someone else's namespace.
Carefully check buffer sizes and only use n versions of scanf&printf to prevent buffer overrun.

Also, I fixed a couple bugs in the previous version of the code, e.g. taking or not taking the trailing newline (\n) into account when reading text from files.
Some stuff (for example, hdiutil) predictably doesn't work. I'm not sure that mapping UIDs/GIDs as ""0 uid 1"" is what we need.","Should we put all the initial prefix contents (that are now created in setupPrefix()) into /usr/local/darling/libexec as well, to make initial prefix set-up (almost) a no-op?
By the way, as you can see in the code, I got rid of /home and made darling executable automatically detect and replace /home/path with /Users/path for HOME and CWD.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,218,2017-01-01T15:47:09Z,2017-01-01T18:07:30Z,2017-01-01T18:21:18Z,MERGED,True,38,2,2,https://github.com/bugaevc,Output usage if dyld-multilib is launched with no arguments,2,[],https://github.com/darlinghq/darling/pull/218,https://github.com/bugaevc,1,https://github.com/darlinghq/darling/pull/218,"It would previously segfault on accessing argv[1]. Also, mention that dyld shouldn't be normally invoked directly and suggest the ""darling"" command to be used instead.","It would previously segfault on accessing argv[1]. Also, mention that dyld shouldn't be normally invoked directly and suggest the ""darling"" command to be used instead.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,222,2017-01-05T14:33:21Z,2017-01-05T19:31:23Z,2017-01-08T11:33:38Z,MERGED,True,285,1303,45,https://github.com/bugaevc,Get of rid of the VirtualPrefix,24,['Container'],https://github.com/darlinghq/darling/pull/222,https://github.com/bugaevc,1,https://github.com/darlinghq/darling/pull/222,"This is my work on building the new layout of the ""Darling container"" (see #197).

Deprecate the old 'darling' script and always build the new executable.

One notable maybe-missing thing is OpenSSL certificates -- please look into this.


Get rid of Darling's chroot-emulation-in-syscall-emulation (known as VirtualPrefix). Instead, we mount $DPREFIX directly onto / inside the container.

Mount a new procfs (for our PID namespace) onto /proc inside.
This means that native executables (accessible through /Volumes/SystemRoot/...) see the new layout, too. You can use e.g. /Volumes/SystemRoot/bin/ps.
The complicated part here is loading shared libraries.

Set up /etc/ld.so.conf.d and run ldconfig at installation time.
Pass LD_LIBRARY_PATH for /usr/local/lib/darling.

This is because I couldn't get it to work with /etc/ld.so.conf.d/darling.conf; this won't be hopefully needed after the Great Mach-O Bringup (see #221).


Symlink /lib -> /Volumes/SystemRoot/lib and lib64 -> /Volumes/SystemRoot/lib64.

This is because most ELFs have /lib64/ld-linux-x86-64.so.2 (or 32bit version) hard-coded as their interpreter.






Create most of the prefix filesystem layout inside /usr/local/libexec/darling at installation time.
On /Volumes (see #220):

Move /system-root to /Volumes/SystemRoot.
Turn off user namespaces for now -- they were not really useful anyway.
hdiutil works if launched like DPREFIX=/ PATH=/Volumes/SystemRoot/bin /usr/bin/hdiutil. It should be fairly easy to make it support the new layout.


Misc changes that are better described by their commit messages and diffs.

Please do review and test!","This is my work on building the new layout of the ""Darling container"" (see #197).

Deprecate the old 'darling' script and always build the new executable.

One notable maybe-missing thing is OpenSSL certificates -- please look into this.


Get rid of Darling's chroot-emulation-in-syscall-emulation (known as VirtualPrefix). Instead, we mount $DPREFIX directly onto / inside the container.

Mount a new procfs (for our PID namespace) onto /proc inside.
This means that native executables (accessible through /Volumes/SystemRoot/...) see the new layout, too. You can use e.g. /Volumes/SystemRoot/bin/ps.
The complicated part here is loading shared libraries.

Set up /etc/ld.so.conf.d and run ldconfig at installation time.
Pass LD_LIBRARY_PATH for /usr/local/lib/darling.

This is because I couldn't get it to work with /etc/ld.so.conf.d/darling.conf; this won't be hopefully needed after the Great Mach-O Bringup (see #221).


Symlink /lib -> /Volumes/SystemRoot/lib and lib64 -> /Volumes/SystemRoot/lib64.

This is because most ELFs have /lib64/ld-linux-x86-64.so.2 (or 32bit version) hard-coded as their interpreter.






Create most of the prefix filesystem layout inside /usr/local/libexec/darling at installation time.
On /Volumes (see #220):

Move /system-root to /Volumes/SystemRoot.
Turn off user namespaces for now -- they were not really useful anyway.
hdiutil works if launched like DPREFIX=/ PATH=/Volumes/SystemRoot/bin /usr/bin/hdiutil. It should be fairly easy to make it support the new layout.


Misc changes that are better described by their commit messages and diffs.

Please do review and test!",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,222,2017-01-05T14:33:21Z,2017-01-05T19:31:23Z,2017-01-08T11:33:38Z,MERGED,True,285,1303,45,https://github.com/bugaevc,Get of rid of the VirtualPrefix,24,['Container'],https://github.com/darlinghq/darling/pull/222,https://github.com/LubosD,2,https://github.com/darlinghq/darling/pull/222#issuecomment-270664532,"This is my work on building the new layout of the ""Darling container"" (see #197).

Deprecate the old 'darling' script and always build the new executable.

One notable maybe-missing thing is OpenSSL certificates -- please look into this.


Get rid of Darling's chroot-emulation-in-syscall-emulation (known as VirtualPrefix). Instead, we mount $DPREFIX directly onto / inside the container.

Mount a new procfs (for our PID namespace) onto /proc inside.
This means that native executables (accessible through /Volumes/SystemRoot/...) see the new layout, too. You can use e.g. /Volumes/SystemRoot/bin/ps.
The complicated part here is loading shared libraries.

Set up /etc/ld.so.conf.d and run ldconfig at installation time.
Pass LD_LIBRARY_PATH for /usr/local/lib/darling.

This is because I couldn't get it to work with /etc/ld.so.conf.d/darling.conf; this won't be hopefully needed after the Great Mach-O Bringup (see #221).


Symlink /lib -> /Volumes/SystemRoot/lib and lib64 -> /Volumes/SystemRoot/lib64.

This is because most ELFs have /lib64/ld-linux-x86-64.so.2 (or 32bit version) hard-coded as their interpreter.






Create most of the prefix filesystem layout inside /usr/local/libexec/darling at installation time.
On /Volumes (see #220):

Move /system-root to /Volumes/SystemRoot.
Turn off user namespaces for now -- they were not really useful anyway.
hdiutil works if launched like DPREFIX=/ PATH=/Volumes/SystemRoot/bin /usr/bin/hdiutil. It should be fairly easy to make it support the new layout.


Misc changes that are better described by their commit messages and diffs.

Please do review and test!","There is one little problem (but it can be solved after I review the changes and merge the code) - in some cases, a little bit of VirtualPrefix code (or simply new code) are still needed:
HFS+ is case insensitive and apps depend on this. I've seen software explicitly checking whether the filesystem where it's installed is case sensitive (usually HFSX on macOS) and then refusing to run.
So we will need to have a special resolution algorithm, which on the other hand only needs to be triggered in case the given system call returns -LINUX_ENOENT.",True,{'THUMBS_UP': ['https://github.com/ahyattdev']}
darlinghq/darling,https://github.com/darlinghq/darling,222,2017-01-05T14:33:21Z,2017-01-05T19:31:23Z,2017-01-08T11:33:38Z,MERGED,True,285,1303,45,https://github.com/bugaevc,Get of rid of the VirtualPrefix,24,['Container'],https://github.com/darlinghq/darling/pull/222,https://github.com/bugaevc,3,https://github.com/darlinghq/darling/pull/222#issuecomment-270666177,"This is my work on building the new layout of the ""Darling container"" (see #197).

Deprecate the old 'darling' script and always build the new executable.

One notable maybe-missing thing is OpenSSL certificates -- please look into this.


Get rid of Darling's chroot-emulation-in-syscall-emulation (known as VirtualPrefix). Instead, we mount $DPREFIX directly onto / inside the container.

Mount a new procfs (for our PID namespace) onto /proc inside.
This means that native executables (accessible through /Volumes/SystemRoot/...) see the new layout, too. You can use e.g. /Volumes/SystemRoot/bin/ps.
The complicated part here is loading shared libraries.

Set up /etc/ld.so.conf.d and run ldconfig at installation time.
Pass LD_LIBRARY_PATH for /usr/local/lib/darling.

This is because I couldn't get it to work with /etc/ld.so.conf.d/darling.conf; this won't be hopefully needed after the Great Mach-O Bringup (see #221).


Symlink /lib -> /Volumes/SystemRoot/lib and lib64 -> /Volumes/SystemRoot/lib64.

This is because most ELFs have /lib64/ld-linux-x86-64.so.2 (or 32bit version) hard-coded as their interpreter.






Create most of the prefix filesystem layout inside /usr/local/libexec/darling at installation time.
On /Volumes (see #220):

Move /system-root to /Volumes/SystemRoot.
Turn off user namespaces for now -- they were not really useful anyway.
hdiutil works if launched like DPREFIX=/ PATH=/Volumes/SystemRoot/bin /usr/bin/hdiutil. It should be fairly easy to make it support the new layout.


Misc changes that are better described by their commit messages and diffs.

Please do review and test!","@LubosD good catch!
OTOH, I've heard that iOS version of HFS+ is case-sensitive, and so is APFS, so this may be less relevant in the future.",True,{'THUMBS_UP': ['https://github.com/ahyattdev']}
darlinghq/darling,https://github.com/darlinghq/darling,222,2017-01-05T14:33:21Z,2017-01-05T19:31:23Z,2017-01-08T11:33:38Z,MERGED,True,285,1303,45,https://github.com/bugaevc,Get of rid of the VirtualPrefix,24,['Container'],https://github.com/darlinghq/darling/pull/222,https://github.com/LubosD,4,https://github.com/darlinghq/darling/pull/222#issuecomment-270732619,"This is my work on building the new layout of the ""Darling container"" (see #197).

Deprecate the old 'darling' script and always build the new executable.

One notable maybe-missing thing is OpenSSL certificates -- please look into this.


Get rid of Darling's chroot-emulation-in-syscall-emulation (known as VirtualPrefix). Instead, we mount $DPREFIX directly onto / inside the container.

Mount a new procfs (for our PID namespace) onto /proc inside.
This means that native executables (accessible through /Volumes/SystemRoot/...) see the new layout, too. You can use e.g. /Volumes/SystemRoot/bin/ps.
The complicated part here is loading shared libraries.

Set up /etc/ld.so.conf.d and run ldconfig at installation time.
Pass LD_LIBRARY_PATH for /usr/local/lib/darling.

This is because I couldn't get it to work with /etc/ld.so.conf.d/darling.conf; this won't be hopefully needed after the Great Mach-O Bringup (see #221).


Symlink /lib -> /Volumes/SystemRoot/lib and lib64 -> /Volumes/SystemRoot/lib64.

This is because most ELFs have /lib64/ld-linux-x86-64.so.2 (or 32bit version) hard-coded as their interpreter.






Create most of the prefix filesystem layout inside /usr/local/libexec/darling at installation time.
On /Volumes (see #220):

Move /system-root to /Volumes/SystemRoot.
Turn off user namespaces for now -- they were not really useful anyway.
hdiutil works if launched like DPREFIX=/ PATH=/Volumes/SystemRoot/bin /usr/bin/hdiutil. It should be fairly easy to make it support the new layout.


Misc changes that are better described by their commit messages and diffs.

Please do review and test!","One more question before I merge (and I may be a little confused, possibly): where do we chroot?",True,{'THUMBS_UP': ['https://github.com/ahyattdev']}
darlinghq/darling,https://github.com/darlinghq/darling,222,2017-01-05T14:33:21Z,2017-01-05T19:31:23Z,2017-01-08T11:33:38Z,MERGED,True,285,1303,45,https://github.com/bugaevc,Get of rid of the VirtualPrefix,24,['Container'],https://github.com/darlinghq/darling/pull/222,https://github.com/bugaevc,5,https://github.com/darlinghq/darling/pull/222#issuecomment-270734807,"This is my work on building the new layout of the ""Darling container"" (see #197).

Deprecate the old 'darling' script and always build the new executable.

One notable maybe-missing thing is OpenSSL certificates -- please look into this.


Get rid of Darling's chroot-emulation-in-syscall-emulation (known as VirtualPrefix). Instead, we mount $DPREFIX directly onto / inside the container.

Mount a new procfs (for our PID namespace) onto /proc inside.
This means that native executables (accessible through /Volumes/SystemRoot/...) see the new layout, too. You can use e.g. /Volumes/SystemRoot/bin/ps.
The complicated part here is loading shared libraries.

Set up /etc/ld.so.conf.d and run ldconfig at installation time.
Pass LD_LIBRARY_PATH for /usr/local/lib/darling.

This is because I couldn't get it to work with /etc/ld.so.conf.d/darling.conf; this won't be hopefully needed after the Great Mach-O Bringup (see #221).


Symlink /lib -> /Volumes/SystemRoot/lib and lib64 -> /Volumes/SystemRoot/lib64.

This is because most ELFs have /lib64/ld-linux-x86-64.so.2 (or 32bit version) hard-coded as their interpreter.






Create most of the prefix filesystem layout inside /usr/local/libexec/darling at installation time.
On /Volumes (see #220):

Move /system-root to /Volumes/SystemRoot.
Turn off user namespaces for now -- they were not really useful anyway.
hdiutil works if launched like DPREFIX=/ PATH=/Volumes/SystemRoot/bin /usr/bin/hdiutil. It should be fairly easy to make it support the new layout.


Misc changes that are better described by their commit messages and diffs.

Please do review and test!","One more question before I merge (and I may be a little confused, possibly): where do we chroot?

We don't actually use chroot(), instead, we pivot_root right after mounting overlayfs onto the prefix.",True,{'THUMBS_UP': ['https://github.com/ahyattdev']}
darlinghq/darling,https://github.com/darlinghq/darling,222,2017-01-05T14:33:21Z,2017-01-05T19:31:23Z,2017-01-08T11:33:38Z,MERGED,True,285,1303,45,https://github.com/bugaevc,Get of rid of the VirtualPrefix,24,['Container'],https://github.com/darlinghq/darling/pull/222,https://github.com/LubosD,6,https://github.com/darlinghq/darling/pull/222#issuecomment-270735020,"This is my work on building the new layout of the ""Darling container"" (see #197).

Deprecate the old 'darling' script and always build the new executable.

One notable maybe-missing thing is OpenSSL certificates -- please look into this.


Get rid of Darling's chroot-emulation-in-syscall-emulation (known as VirtualPrefix). Instead, we mount $DPREFIX directly onto / inside the container.

Mount a new procfs (for our PID namespace) onto /proc inside.
This means that native executables (accessible through /Volumes/SystemRoot/...) see the new layout, too. You can use e.g. /Volumes/SystemRoot/bin/ps.
The complicated part here is loading shared libraries.

Set up /etc/ld.so.conf.d and run ldconfig at installation time.
Pass LD_LIBRARY_PATH for /usr/local/lib/darling.

This is because I couldn't get it to work with /etc/ld.so.conf.d/darling.conf; this won't be hopefully needed after the Great Mach-O Bringup (see #221).


Symlink /lib -> /Volumes/SystemRoot/lib and lib64 -> /Volumes/SystemRoot/lib64.

This is because most ELFs have /lib64/ld-linux-x86-64.so.2 (or 32bit version) hard-coded as their interpreter.






Create most of the prefix filesystem layout inside /usr/local/libexec/darling at installation time.
On /Volumes (see #220):

Move /system-root to /Volumes/SystemRoot.
Turn off user namespaces for now -- they were not really useful anyway.
hdiutil works if launched like DPREFIX=/ PATH=/Volumes/SystemRoot/bin /usr/bin/hdiutil. It should be fairly easy to make it support the new layout.


Misc changes that are better described by their commit messages and diffs.

Please do review and test!",Clever! Never actually though about using this outside of initrd.,True,{'THUMBS_UP': ['https://github.com/ahyattdev']}
darlinghq/darling,https://github.com/darlinghq/darling,227,2017-01-10T08:41:35Z,2017-01-10T09:03:10Z,2017-01-10T09:34:38Z,MERGED,True,18,4,3,https://github.com/bugaevc,Put some top-level dirs into /private and install symlinks,2,[],https://github.com/darlinghq/darling/pull/227,https://github.com/bugaevc,1,https://github.com/darlinghq/darling/pull/227,"On macOS:
/tmp -> private/tmp
/var -> private/var
/etc -> private/etc

and some apps may depend on it (as this answer mentions). Let's do the same on Darling.
Specifically, installer (or installation scripts) wanted to write to /private/var/db -- so this should work now.","On macOS:
/tmp -> private/tmp
/var -> private/var
/etc -> private/etc

and some apps may depend on it (as this answer mentions). Let's do the same on Darling.
Specifically, installer (or installation scripts) wanted to write to /private/var/db -- so this should work now.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,232,2017-01-13T19:45:45Z,2017-01-13T23:27:03Z,2017-01-13T23:27:32Z,MERGED,True,3,5,3,https://github.com/bugaevc,Fix libs installation,2,[],https://github.com/darlinghq/darling/pull/232,https://github.com/bugaevc,1,https://github.com/darlinghq/darling/pull/232,Suggested temporary fix for #231 -- hardcoding architectures in Toolcain-*.cmake files and passing half-hardcoded i386 lib path in LD_LIBRARY_PATH.,Suggested temporary fix for #231 -- hardcoding architectures in Toolcain-*.cmake files and passing half-hardcoded i386 lib path in LD_LIBRARY_PATH.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,236,2017-01-15T10:54:41Z,2017-01-15T16:47:39Z,2017-01-15T17:36:36Z,MERGED,True,5,3,2,https://github.com/X0rg,Fix OpenSSL libraries path,2,[],https://github.com/darlinghq/darling/pull/236,https://github.com/X0rg,1,https://github.com/darlinghq/darling/pull/236,"It refers to PR darlinghq/darling-openssl#1.
I was unable to install the darling-git package on Arch due to incorrect path for libssl098.so and libcrypto098.so.","It refers to PR darlinghq/darling-openssl#1.
I was unable to install the darling-git package on Arch due to incorrect path for libssl098.so and libcrypto098.so.",True,"{'THUMBS_UP': ['https://github.com/bugaevc', 'https://github.com/ahyattdev']}"
darlinghq/darling,https://github.com/darlinghq/darling,236,2017-01-15T10:54:41Z,2017-01-15T16:47:39Z,2017-01-15T17:36:36Z,MERGED,True,5,3,2,https://github.com/X0rg,Fix OpenSSL libraries path,2,[],https://github.com/darlinghq/darling/pull/236,https://github.com/ahyattdev,2,https://github.com/darlinghq/darling/pull/236#issuecomment-272706185,"It refers to PR darlinghq/darling-openssl#1.
I was unable to install the darling-git package on Arch due to incorrect path for libssl098.so and libcrypto098.so.","Similar fixes are needed for i386 builds, no?",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,236,2017-01-15T10:54:41Z,2017-01-15T16:47:39Z,2017-01-15T17:36:36Z,MERGED,True,5,3,2,https://github.com/X0rg,Fix OpenSSL libraries path,2,[],https://github.com/darlinghq/darling/pull/236,https://github.com/X0rg,3,https://github.com/darlinghq/darling/pull/236#issuecomment-272706958,"It refers to PR darlinghq/darling-openssl#1.
I was unable to install the darling-git package on Arch due to incorrect path for libssl098.so and libcrypto098.so.","No: 32-bit build is installed in $PREFIX/lib32, and that's right (on Arch).
Only 64-bit build need this minor change.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,236,2017-01-15T10:54:41Z,2017-01-15T16:47:39Z,2017-01-15T17:36:36Z,MERGED,True,5,3,2,https://github.com/X0rg,Fix OpenSSL libraries path,2,[],https://github.com/darlinghq/darling/pull/236,https://github.com/X0rg,4,https://github.com/darlinghq/darling/pull/236#issuecomment-272707251,"It refers to PR darlinghq/darling-openssl#1.
I was unable to install the darling-git package on Arch due to incorrect path for libssl098.so and libcrypto098.so.",@ahyattdev: thanks!,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,236,2017-01-15T10:54:41Z,2017-01-15T16:47:39Z,2017-01-15T17:36:36Z,MERGED,True,5,3,2,https://github.com/X0rg,Fix OpenSSL libraries path,2,[],https://github.com/darlinghq/darling/pull/236,https://github.com/X0rg,5,https://github.com/darlinghq/darling/pull/236#issuecomment-272707443,"It refers to PR darlinghq/darling-openssl#1.
I was unable to install the darling-git package on Arch due to incorrect path for libssl098.so and libcrypto098.so.",Also you need to merge darlinghq/darling-openssl#1 (see 51c8004). ;),True,{}
darlinghq/darling,https://github.com/darlinghq/darling,236,2017-01-15T10:54:41Z,2017-01-15T16:47:39Z,2017-01-15T17:36:36Z,MERGED,True,5,3,2,https://github.com/X0rg,Fix OpenSSL libraries path,2,[],https://github.com/darlinghq/darling/pull/236,https://github.com/bugaevc,6,https://github.com/darlinghq/darling/pull/236#issuecomment-272708564,"It refers to PR darlinghq/darling-openssl#1.
I was unable to install the darling-git package on Arch due to incorrect path for libssl098.so and libcrypto098.so.","No: 32-bit build is installed in $PREFIX/lib32, and that's right (on Arch).

Well, it's actually wrong for Fedora (and probably other RH-related distros) -- we have lib and lib64 here, so it should better be conditional just like you've made it for 64.
But, as mentioned in #231, this is all temporary, so it doesn't matter much.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,236,2017-01-15T10:54:41Z,2017-01-15T16:47:39Z,2017-01-15T17:36:36Z,MERGED,True,5,3,2,https://github.com/X0rg,Fix OpenSSL libraries path,2,[],https://github.com/darlinghq/darling/pull/236,https://github.com/bugaevc,7,https://github.com/darlinghq/darling/pull/236#issuecomment-272708664,"It refers to PR darlinghq/darling-openssl#1.
I was unable to install the darling-git package on Arch due to incorrect path for libssl098.so and libcrypto098.so.","Also you need to merge darlinghq/darling-openssl#1 (see 51c8004). ;)

Done",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,236,2017-01-15T10:54:41Z,2017-01-15T16:47:39Z,2017-01-15T17:36:36Z,MERGED,True,5,3,2,https://github.com/X0rg,Fix OpenSSL libraries path,2,[],https://github.com/darlinghq/darling/pull/236,https://github.com/X0rg,8,https://github.com/darlinghq/darling/pull/236#issuecomment-272710414,"It refers to PR darlinghq/darling-openssl#1.
I was unable to install the darling-git package on Arch due to incorrect path for libssl098.so and libcrypto098.so.","Yes, sadly, the FHS on Arch is absolutely not conformant (in fact, /usr/lib64 exists, but it is a symlink on /usr/lib for compatibility, so packages should not use /usr/lib64).",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,239,2017-01-16T14:39:40Z,2017-01-16T14:40:56Z,2017-01-16T14:44:03Z,MERGED,True,3,1,1,https://github.com/bugaevc,Fix alloc_once implementation,1,[],https://github.com/darlinghq/darling/pull/239,https://github.com/bugaevc,1,https://github.com/darlinghq/darling/pull/239,The proposed fixes for issues #233 and #238.,The proposed fixes for issues #233 and #238.,True,{'THUMBS_UP': ['https://github.com/ahyattdev']}
darlinghq/darling,https://github.com/darlinghq/darling,239,2017-01-16T14:39:40Z,2017-01-16T14:40:56Z,2017-01-16T14:44:03Z,MERGED,True,3,1,1,https://github.com/bugaevc,Fix alloc_once implementation,1,[],https://github.com/darlinghq/darling/pull/239,https://github.com/LubosD,2,https://github.com/darlinghq/darling/pull/239#issuecomment-272879741,The proposed fixes for issues #233 and #238.,"I'm surprised the memory returned by malloc() isn't already zeroed out, because that was one of the compatibility ""differences"" I noticed on macOS.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,258,2017-03-07T17:45:41Z,2017-03-07T18:58:54Z,2017-03-07T18:58:54Z,MERGED,True,1,0,1,https://github.com/waffle-iron,waffle.io Badge,1,[],https://github.com/darlinghq/darling/pull/258,https://github.com/waffle-iron,1,https://github.com/darlinghq/darling/pull/258,"Merge this to receive a badge indicating the number of issues in the ready column on your waffle.io board at https://waffle.io/darlinghq/darling
This was requested by a real person (user bugaevc) on waffle.io, we're not trying to spam you.","Merge this to receive a badge indicating the number of issues in the ready column on your waffle.io board at https://waffle.io/darlinghq/darling
This was requested by a real person (user bugaevc) on waffle.io, we're not trying to spam you.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,268,2017-03-28T19:01:37Z,2017-03-29T07:36:35Z,2017-03-29T19:06:05Z,CLOSED,False,14,5,2,https://github.com/X0rg,Fixes for setup-ld-so.sh,2,[],https://github.com/darlinghq/darling/pull/268,https://github.com/X0rg,1,https://github.com/darlinghq/darling/pull/268,"Hello,
As mentioned in #261, the $INSTALL_PREFIX/libexec/darling/etc/ld.so.conf.d directory is empty when packaging Darling.
We shouldn't modify the real filesystem directly. Files generated at build time should be put inside build directory instead of root directory.
I think it's better to pass working directory as argument in setup-ld-so.sh, this script should be run as regular user.
BTW, the last line remains broken. Maybe we can do that in setupPrefix() in darling.c, or something like that?","Hello,
As mentioned in #261, the $INSTALL_PREFIX/libexec/darling/etc/ld.so.conf.d directory is empty when packaging Darling.
We shouldn't modify the real filesystem directly. Files generated at build time should be put inside build directory instead of root directory.
I think it's better to pass working directory as argument in setup-ld-so.sh, this script should be run as regular user.
BTW, the last line remains broken. Maybe we can do that in setupPrefix() in darling.c, or something like that?",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,268,2017-03-28T19:01:37Z,2017-03-29T07:36:35Z,2017-03-29T19:06:05Z,CLOSED,False,14,5,2,https://github.com/X0rg,Fixes for setup-ld-so.sh,2,[],https://github.com/darlinghq/darling/pull/268,https://github.com/bugaevc,2,https://github.com/darlinghq/darling/pull/268#issuecomment-289882244,"Hello,
As mentioned in #261, the $INSTALL_PREFIX/libexec/darling/etc/ld.so.conf.d directory is empty when packaging Darling.
We shouldn't modify the real filesystem directly. Files generated at build time should be put inside build directory instead of root directory.
I think it's better to pass working directory as argument in setup-ld-so.sh, this script should be run as regular user.
BTW, the last line remains broken. Maybe we can do that in setupPrefix() in darling.c, or something like that?","We shouldn't modify the real filesystem directly. Files generated at build time should be put inside build directory instead of root directory.

That's how it already is. The script in question is being run during make install, not make.
Besides, it won't easily work the way you propose. In particular, you'd need root because mount namespaces can only be created by root; you could, theoretically, workaround this by using user namespaces too.
What is the problem you're trying to solve in the first place? Why is that directory empty, and how is that related to the rest of this PR?",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,268,2017-03-28T19:01:37Z,2017-03-29T07:36:35Z,2017-03-29T19:06:05Z,CLOSED,False,14,5,2,https://github.com/X0rg,Fixes for setup-ld-so.sh,2,[],https://github.com/darlinghq/darling/pull/268,https://github.com/X0rg,3,https://github.com/darlinghq/darling/pull/268#issuecomment-289887088,"Hello,
As mentioned in #261, the $INSTALL_PREFIX/libexec/darling/etc/ld.so.conf.d directory is empty when packaging Darling.
We shouldn't modify the real filesystem directly. Files generated at build time should be put inside build directory instead of root directory.
I think it's better to pass working directory as argument in setup-ld-so.sh, this script should be run as regular user.
BTW, the last line remains broken. Maybe we can do that in setupPrefix() in darling.c, or something like that?","The make install is writing files in $PREFIX/libexec/darling/etc/ld.so.conf.d (where PREFIX=/usr when you do a package), that's modifying the real root directly.
In 6cd989c, the goal is to write these files in a temporary directory (e.g. build directory), allowing to put Darling in a package (and redistribute it).
This is not perfect because it's based on build machine configuration, not on host configuration (I want to mean, an user who installs a package), but it solves the empty $INSTALL_PREFIX/libexec/darling/etc/ld.so.conf.d directory.
When you build a package, you don't have root permissions, the installation is performed in a fakeroot.
And then, this fakeroot is put inside a compressed archive.
You are in a sandboxed environment.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,268,2017-03-28T19:01:37Z,2017-03-29T07:36:35Z,2017-03-29T19:06:05Z,CLOSED,False,14,5,2,https://github.com/X0rg,Fixes for setup-ld-so.sh,2,[],https://github.com/darlinghq/darling/pull/268,https://github.com/bugaevc,4,https://github.com/darlinghq/darling/pull/268#issuecomment-289889402,"Hello,
As mentioned in #261, the $INSTALL_PREFIX/libexec/darling/etc/ld.so.conf.d directory is empty when packaging Darling.
We shouldn't modify the real filesystem directly. Files generated at build time should be put inside build directory instead of root directory.
I think it's better to pass working directory as argument in setup-ld-so.sh, this script should be run as regular user.
BTW, the last line remains broken. Maybe we can do that in setupPrefix() in darling.c, or something like that?","Let me put it this way:
You're trying to make an Arch package, and the package build system doesn't run make install as the real root (only fakeroot), so everything works except the unshare/mount/chroot thing in this script. That is why the directory ends up empty.
Is that correct? How come it worked for you before? We've been relying on ld-setup for several months now.
The way to fix this is to either alter the package build system to allow using the real root (but that's out of the question, I suppose), or use a user namespace to make us the ""real"" root inside that namespace.
In that case changes this PR actually introduces won't help and aren't needed; implement the namespace thing instead.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,268,2017-03-28T19:01:37Z,2017-03-29T07:36:35Z,2017-03-29T19:06:05Z,CLOSED,False,14,5,2,https://github.com/X0rg,Fixes for setup-ld-so.sh,2,[],https://github.com/darlinghq/darling/pull/268,https://github.com/bugaevc,5,https://github.com/darlinghq/darling/pull/268#issuecomment-289891561,"Hello,
As mentioned in #261, the $INSTALL_PREFIX/libexec/darling/etc/ld.so.conf.d directory is empty when packaging Darling.
We shouldn't modify the real filesystem directly. Files generated at build time should be put inside build directory instead of root directory.
I think it's better to pass working directory as argument in setup-ld-so.sh, this script should be run as regular user.
BTW, the last line remains broken. Maybe we can do that in setupPrefix() in darling.c, or something like that?","Do you actually mean fakeroot(1), or just a fake root directory? If it's the latter, then why doesn't it work, what causes the issue?",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,268,2017-03-28T19:01:37Z,2017-03-29T07:36:35Z,2017-03-29T19:06:05Z,CLOSED,False,14,5,2,https://github.com/X0rg,Fixes for setup-ld-so.sh,2,[],https://github.com/darlinghq/darling/pull/268,https://github.com/LubosD,6,https://github.com/darlinghq/darling/pull/268#issuecomment-289892732,"Hello,
As mentioned in #261, the $INSTALL_PREFIX/libexec/darling/etc/ld.so.conf.d directory is empty when packaging Darling.
We shouldn't modify the real filesystem directly. Files generated at build time should be put inside build directory instead of root directory.
I think it's better to pass working directory as argument in setup-ld-so.sh, this script should be run as regular user.
BTW, the last line remains broken. Maybe we can do that in setupPrefix() in darling.c, or something like that?","@bugaevc I suppose they use make DESTDIR=xyz install. This means CMAKE_INSTALL_PREFIX is still /usr, but installation isn't happening into /.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,268,2017-03-28T19:01:37Z,2017-03-29T07:36:35Z,2017-03-29T19:06:05Z,CLOSED,False,14,5,2,https://github.com/X0rg,Fixes for setup-ld-so.sh,2,[],https://github.com/darlinghq/darling/pull/268,https://github.com/X0rg,7,https://github.com/darlinghq/darling/pull/268#issuecomment-289893600,"Hello,
As mentioned in #261, the $INSTALL_PREFIX/libexec/darling/etc/ld.so.conf.d directory is empty when packaging Darling.
We shouldn't modify the real filesystem directly. Files generated at build time should be put inside build directory instead of root directory.
I think it's better to pass working directory as argument in setup-ld-so.sh, this script should be run as regular user.
BTW, the last line remains broken. Maybe we can do that in setupPrefix() in darling.c, or something like that?","I'm not trying to make an Arch package, that's done since more than 3 years. I'm trying to fix things which assume you'll run Darling on the same OS that build Darling, but yes, everything works except work done by setup-ld-so.sh script.

The way to fix this is to either alter the package build system to allow using the real root

What? You are scaring me. This is NOT a redistributable way.

Do you actually mean fakeroot(1), or just a fake root directory?

makepkg use fakeroot internally, but that's not the question.
@LubosD: That's the case.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,268,2017-03-28T19:01:37Z,2017-03-29T07:36:35Z,2017-03-29T19:06:05Z,CLOSED,False,14,5,2,https://github.com/X0rg,Fixes for setup-ld-so.sh,2,[],https://github.com/darlinghq/darling/pull/268,https://github.com/X0rg,8,https://github.com/darlinghq/darling/pull/268#issuecomment-290008399,"Hello,
As mentioned in #261, the $INSTALL_PREFIX/libexec/darling/etc/ld.so.conf.d directory is empty when packaging Darling.
We shouldn't modify the real filesystem directly. Files generated at build time should be put inside build directory instead of root directory.
I think it's better to pass working directory as argument in setup-ld-so.sh, this script should be run as regular user.
BTW, the last line remains broken. Maybe we can do that in setupPrefix() in darling.c, or something like that?","This is the list of files present in package: files_list.txt. As you can see on line 25, ld.so.conf.d is empty.
But I understand why you'll not merge this PR.
This script must be run on package installation (e.g. on host computer), not on package creation.
One solution is to add setup-ld-so.sh script into package: it can be automatically run as root on installation.
Wait and see...",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,268,2017-03-28T19:01:37Z,2017-03-29T07:36:35Z,2017-03-29T19:06:05Z,CLOSED,False,14,5,2,https://github.com/X0rg,Fixes for setup-ld-so.sh,2,[],https://github.com/darlinghq/darling/pull/268,https://github.com/X0rg,9,https://github.com/darlinghq/darling/pull/268#issuecomment-290192484,"Hello,
As mentioned in #261, the $INSTALL_PREFIX/libexec/darling/etc/ld.so.conf.d directory is empty when packaging Darling.
We shouldn't modify the real filesystem directly. Files generated at build time should be put inside build directory instead of root directory.
I think it's better to pass working directory as argument in setup-ld-so.sh, this script should be run as regular user.
BTW, the last line remains broken. Maybe we can do that in setupPrefix() in darling.c, or something like that?",Done in X0rg/AUR-packages@5c2a8f8.,True,{'THUMBS_UP': ['https://github.com/ahyattdev']}
darlinghq/darling,https://github.com/darlinghq/darling,268,2017-03-28T19:01:37Z,2017-03-29T07:36:35Z,2017-03-29T19:06:05Z,CLOSED,False,14,5,2,https://github.com/X0rg,Fixes for setup-ld-so.sh,2,[],https://github.com/darlinghq/darling/pull/268,https://github.com/bugaevc,10,https://github.com/darlinghq/darling/pull/268#issuecomment-290193041,"Hello,
As mentioned in #261, the $INSTALL_PREFIX/libexec/darling/etc/ld.so.conf.d directory is empty when packaging Darling.
We shouldn't modify the real filesystem directly. Files generated at build time should be put inside build directory instead of root directory.
I think it's better to pass working directory as argument in setup-ld-so.sh, this script should be run as regular user.
BTW, the last line remains broken. Maybe we can do that in setupPrefix() in darling.c, or something like that?",@X0rg awesome!,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,276,2017-04-05T15:33:37Z,2017-04-05T15:40:25Z,2017-04-05T15:44:48Z,MERGED,True,6,1,1,https://github.com/yan12125,Fix running programs directly via `darling prog`,1,[],https://github.com/darlinghq/darling/pull/276,https://github.com/yan12125,1,https://github.com/darlinghq/darling/pull/276,"Fixed a problem like this:
$ darling /usr/local/libexec/darling/usr/bin/arch
Cannot open /Volumes/SystemRoot/usr/local/libexec/da���: No such file or directory

The memory is corrupted :)","Fixed a problem like this:
$ darling /usr/local/libexec/darling/usr/bin/arch
Cannot open /Volumes/SystemRoot/usr/local/libexec/da���: No such file or directory

The memory is corrupted :)",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,276,2017-04-05T15:33:37Z,2017-04-05T15:40:25Z,2017-04-05T15:44:48Z,MERGED,True,6,1,1,https://github.com/yan12125,Fix running programs directly via `darling prog`,1,[],https://github.com/darlinghq/darling/pull/276,https://github.com/bugaevc,2,https://github.com/darlinghq/darling/pull/276#issuecomment-291902641,"Fixed a problem like this:
$ darling /usr/local/libexec/darling/usr/bin/arch
Cannot open /Volumes/SystemRoot/usr/local/libexec/da���: No such file or directory

The memory is corrupted :)","Thanks!
By the way, does filename ever get freed?",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,276,2017-04-05T15:33:37Z,2017-04-05T15:40:25Z,2017-04-05T15:44:48Z,MERGED,True,6,1,1,https://github.com/yan12125,Fix running programs directly via `darling prog`,1,[],https://github.com/darlinghq/darling/pull/276,https://github.com/yan12125,3,https://github.com/darlinghq/darling/pull/276#issuecomment-291903242,"Fixed a problem like this:
$ darling /usr/local/libexec/darling/usr/bin/arch
Cannot open /Volumes/SystemRoot/usr/local/libexec/da���: No such file or directory

The memory is corrupted :)","IIRC __builtin_alloca allocates memory on stack instead of on heap, so there's no need to free it :)",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,276,2017-04-05T15:33:37Z,2017-04-05T15:40:25Z,2017-04-05T15:44:48Z,MERGED,True,6,1,1,https://github.com/yan12125,Fix running programs directly via `darling prog`,1,[],https://github.com/darlinghq/darling/pull/276,https://github.com/bugaevc,4,https://github.com/darlinghq/darling/pull/276#issuecomment-291903882,"Fixed a problem like this:
$ darling /usr/local/libexec/darling/usr/bin/arch
Cannot open /Volumes/SystemRoot/usr/local/libexec/da���: No such file or directory

The memory is corrupted :)","Right. We could still free the memory, even if not with free(), but it doesn't matter much if the allocator is not involved. Thanks again!",True,{'THUMBS_UP': ['https://github.com/yan12125']}
darlinghq/darling,https://github.com/darlinghq/darling,285,2017-04-08T18:14:11Z,2017-04-08T18:14:39Z,2017-04-08T18:32:38Z,MERGED,True,1,1,1,https://github.com/yan12125,Add /bin/expr,1,[],https://github.com/darlinghq/darling/pull/285,https://github.com/yan12125,1,https://github.com/darlinghq/darling/pull/285,Update after darlinghq/darling-shell_cmds#2,Update after darlinghq/darling-shell_cmds#2,True,{'THUMBS_UP': ['https://github.com/ahyattdev']}
darlinghq/darling,https://github.com/darlinghq/darling,285,2017-04-08T18:14:11Z,2017-04-08T18:14:39Z,2017-04-08T18:32:38Z,MERGED,True,1,1,1,https://github.com/yan12125,Add /bin/expr,1,[],https://github.com/darlinghq/darling/pull/285,https://github.com/yan12125,2,https://github.com/darlinghq/darling/pull/285#issuecomment-292736401,Update after darlinghq/darling-shell_cmds#2,Thanks for such fast replies and the invitation!,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,285,2017-04-08T18:14:11Z,2017-04-08T18:14:39Z,2017-04-08T18:32:38Z,MERGED,True,1,1,1,https://github.com/yan12125,Add /bin/expr,1,[],https://github.com/darlinghq/darling/pull/285,https://github.com/LubosD,3,https://github.com/darlinghq/darling/pull/285#issuecomment-292736919,Update after darlinghq/darling-shell_cmds#2,Please join us on Slack as well. I've sent you an invitation.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,315,2017-06-11T18:14:29Z,2017-06-11T18:16:34Z,2017-06-11T18:17:01Z,MERGED,True,2,1,2,https://github.com/stek29,"Update cctools submodule, build it",1,[],https://github.com/darlinghq/darling/pull/315,https://github.com/stek29,1,https://github.com/darlinghq/darling/pull/315,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,316,2017-06-11T20:57:56Z,2017-06-12T07:34:24Z,2017-06-12T08:51:07Z,MERGED,True,2,1,4,https://github.com/stek29,man + xcode-select,1,[],https://github.com/darlinghq/darling/pull/316,https://github.com/stek29,1,https://github.com/darlinghq/darling/pull/316,I'd update submodule when/if darlinghq/darling-man#1 gets merged,I'd update submodule when/if darlinghq/darling-man#1 gets merged,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,317,2017-06-12T09:50:32Z,2017-06-12T09:53:27Z,2017-06-12T09:53:50Z,MERGED,True,1,1,1,https://github.com/stek29,Update man submodule,1,[],https://github.com/darlinghq/darling/pull/317,https://github.com/stek29,1,https://github.com/darlinghq/darling/pull/317,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,319,2017-06-12T15:22:55Z,2017-06-13T21:32:24Z,2017-06-13T21:32:36Z,MERGED,True,61,20,3,https://github.com/stek29,"xcselect fixes for /usr/libexec/DeveloperTools, including all xcrun shims",4,[],https://github.com/darlinghq/darling/pull/319,https://github.com/stek29,1,https://github.com/darlinghq/darling/pull/319,"Add all shims (which were present on my macOS Sierra install).
Add REQUIRE_XCODE define support to xcrun-shim.c to specify flag for xcselect_invoke_xcrun
Also fix xcselect_invoke_xcrun invoking execv with invalid argv when executing from /usr/libexec/DeveloperTools","Add all shims (which were present on my macOS Sierra install).
Add REQUIRE_XCODE define support to xcrun-shim.c to specify flag for xcselect_invoke_xcrun
Also fix xcselect_invoke_xcrun invoking execv with invalid argv when executing from /usr/libexec/DeveloperTools",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,319,2017-06-12T15:22:55Z,2017-06-13T21:32:24Z,2017-06-13T21:32:36Z,MERGED,True,61,20,3,https://github.com/stek29,"xcselect fixes for /usr/libexec/DeveloperTools, including all xcrun shims",4,[],https://github.com/darlinghq/darling/pull/319,https://github.com/stek29,2,https://github.com/darlinghq/darling/pull/319#issuecomment-307824659,"Add all shims (which were present on my macOS Sierra install).
Add REQUIRE_XCODE define support to xcrun-shim.c to specify flag for xcselect_invoke_xcrun
Also fix xcselect_invoke_xcrun invoking execv with invalid argv when executing from /usr/libexec/DeveloperTools","Btw, What about changing
i < argc to i <= argc on line 246 and argc+2 to argc+3 on line 240?
Because if I understand correctly agrv2 is not NULL terminated currently there.
UPD: Amended the fix",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,319,2017-06-12T15:22:55Z,2017-06-13T21:32:24Z,2017-06-13T21:32:36Z,MERGED,True,61,20,3,https://github.com/stek29,"xcselect fixes for /usr/libexec/DeveloperTools, including all xcrun shims",4,[],https://github.com/darlinghq/darling/pull/319,https://github.com/stek29,3,https://github.com/darlinghq/darling/pull/319#issuecomment-307825331,"Add all shims (which were present on my macOS Sierra install).
Add REQUIRE_XCODE define support to xcrun-shim.c to specify flag for xcselect_invoke_xcrun
Also fix xcselect_invoke_xcrun invoking execv with invalid argv when executing from /usr/libexec/DeveloperTools","Also, it should probably check if file exists before executing it in /usr/libexec/DeveloperTools, and if it doesn't fall to ""cannot find developer tools"" error. That's what Apple's implementation does iirc.
UPD: fixed",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,319,2017-06-12T15:22:55Z,2017-06-13T21:32:24Z,2017-06-13T21:32:36Z,MERGED,True,61,20,3,https://github.com/stek29,"xcselect fixes for /usr/libexec/DeveloperTools, including all xcrun shims",4,[],https://github.com/darlinghq/darling/pull/319,https://github.com/stek29,4,https://github.com/darlinghq/darling/pull/319#issuecomment-308010164,"Add all shims (which were present on my macOS Sierra install).
Add REQUIRE_XCODE define support to xcrun-shim.c to specify flag for xcselect_invoke_xcrun
Also fix xcselect_invoke_xcrun invoking execv with invalid argv when executing from /usr/libexec/DeveloperTools","Oh, wait, I've broken error messages...",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,319,2017-06-12T15:22:55Z,2017-06-13T21:32:24Z,2017-06-13T21:32:36Z,MERGED,True,61,20,3,https://github.com/stek29,"xcselect fixes for /usr/libexec/DeveloperTools, including all xcrun shims",4,[],https://github.com/darlinghq/darling/pull/319,https://github.com/stek29,5,https://github.com/darlinghq/darling/pull/319#issuecomment-308089108,"Add all shims (which were present on my macOS Sierra install).
Add REQUIRE_XCODE define support to xcrun-shim.c to specify flag for xcselect_invoke_xcrun
Also fix xcselect_invoke_xcrun invoking execv with invalid argv when executing from /usr/libexec/DeveloperTools","Ok, it should be fine now.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,320,2017-06-12T16:25:16Z,2017-06-12T16:36:04Z,2017-06-12T16:40:22Z,MERGED,True,13,7,1,https://github.com/stek29,Allow execve with empty argv,1,[],https://github.com/darlinghq/darling/pull/320,https://github.com/stek29,1,https://github.com/darlinghq/darling/pull/320,"Tested with following snippet which runs fine on Linux and macOS but causes mldr is part of Darling. It is not to be executed directly. on Darling.
#include <unistd.h>
int main(void) {
  char *argv2[] = {NULL};
  execv(""/bin/bash"", argv2);
  return 1;
}
I haven't found any regressions, but please test it.","Tested with following snippet which runs fine on Linux and macOS but causes mldr is part of Darling. It is not to be executed directly. on Darling.
#include <unistd.h>
int main(void) {
  char *argv2[] = {NULL};
  execv(""/bin/bash"", argv2);
  return 1;
}
I haven't found any regressions, but please test it.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,320,2017-06-12T16:25:16Z,2017-06-12T16:36:04Z,2017-06-12T16:40:22Z,MERGED,True,13,7,1,https://github.com/stek29,Allow execve with empty argv,1,[],https://github.com/darlinghq/darling/pull/320,https://github.com/bugaevc,2,https://github.com/darlinghq/darling/pull/320#issuecomment-307844614,"Tested with following snippet which runs fine on Linux and macOS but causes mldr is part of Darling. It is not to be executed directly. on Darling.
#include <unistd.h>
int main(void) {
  char *argv2[] = {NULL};
  execv(""/bin/bash"", argv2);
  return 1;
}
I haven't found any regressions, but please test it.","Thanks! Looks good, except your system's time may be somewhat off -- we have definitely discussed this less than 9 hours ago.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,320,2017-06-12T16:25:16Z,2017-06-12T16:36:04Z,2017-06-12T16:40:22Z,MERGED,True,13,7,1,https://github.com/stek29,Allow execve with empty argv,1,[],https://github.com/darlinghq/darling/pull/320,https://github.com/stek29,3,https://github.com/darlinghq/darling/pull/320#issuecomment-307845867,"Tested with following snippet which runs fine on Linux and macOS but causes mldr is part of Darling. It is not to be executed directly. on Darling.
#include <unistd.h>
int main(void) {
  char *argv2[] = {NULL};
  execv(""/bin/bash"", argv2);
  return 1;
}
I haven't found any regressions, but please test it.","@bugaevc Yup, just noticed it too, forgot to set up ntp after fresh install :)",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,327,2017-07-31T16:05:54Z,2017-07-31T16:09:03Z,2017-07-31T16:11:06Z,MERGED,True,3,3,2,https://github.com/lesderid,Fix sys_symlinkat() parameter order,1,[],https://github.com/darlinghq/darling/pull/327,https://github.com/lesderid,1,https://github.com/darlinghq/darling/pull/327,"With the new sys_symlink() implementation in 09c2ed8 using sys_symlinkat(), this bug became easier to spot and broke all symlink creation.","With the new sys_symlink() implementation in 09c2ed8 using sys_symlinkat(), this bug became easier to spot and broke all symlink creation.",True,{'THUMBS_UP': ['https://github.com/bugaevc']}
darlinghq/darling,https://github.com/darlinghq/darling,327,2017-07-31T16:05:54Z,2017-07-31T16:09:03Z,2017-07-31T16:11:06Z,MERGED,True,3,3,2,https://github.com/lesderid,Fix sys_symlinkat() parameter order,1,[],https://github.com/darlinghq/darling/pull/327,https://github.com/LubosD,2,https://github.com/darlinghq/darling/pull/327#issuecomment-319117091,"With the new sys_symlink() implementation in 09c2ed8 using sys_symlinkat(), this bug became easier to spot and broke all symlink creation.",Thanks!,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,372,2018-01-23T17:28:16Z,2018-02-10T17:24:50Z,2018-02-10T17:24:57Z,MERGED,True,180,0,9,https://github.com/andyneff,WIP: Adding rpm for darling,5,[],https://github.com/darlinghq/darling/pull/372,https://github.com/andyneff,1,https://github.com/darlinghq/darling/pull/372,"Added an rpm for darling, separate rpm for kernel module (darling-mach) that uses dkms. This pretty much parallels the debian package.
Wrapped all up in a docker for ""ease of use"".
I used this for testing #338
Looking for some feedback","Added an rpm for darling, separate rpm for kernel module (darling-mach) that uses dkms. This pretty much parallels the debian package.
Wrapped all up in a docker for ""ease of use"".
I used this for testing #338
Looking for some feedback",True,{'THUMBS_UP': ['https://github.com/CuriousTommy']}
darlinghq/darling,https://github.com/darlinghq/darling,372,2018-01-23T17:28:16Z,2018-02-10T17:24:50Z,2018-02-10T17:24:57Z,MERGED,True,180,0,9,https://github.com/andyneff,WIP: Adding rpm for darling,5,[],https://github.com/darlinghq/darling/pull/372,https://github.com/ahyattdev,2,https://github.com/darlinghq/darling/pull/372#issuecomment-364673722,"Added an rpm for darling, separate rpm for kernel module (darling-mach) that uses dkms. This pretty much parallels the debian package.
Wrapped all up in a docker for ""ease of use"".
I used this for testing #338
Looking for some feedback",Thanks!,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,401,2018-07-18T22:16:57Z,2018-07-18T22:37:13Z,2018-07-18T22:37:14Z,MERGED,True,3,3,3,https://github.com/andyneff,Initial fix to get dkms working on kernel upgrades,2,[],https://github.com/darlinghq/darling/pull/401,https://github.com/andyneff,1,https://github.com/darlinghq/darling/pull/401,"The lkm Makefile used uname -r to determine the kernel version. This will only ever tell you the currently running version of the kernel.
When you update the kernel in debian and fedora based OSes, dkms will be called to build the kernel modules against the new kernel while running the old kernel. This way, when you reboot, everything is ready to go and everyone is happy.

Accompanied with PR darlinghq/darling-newlkm#2","The lkm Makefile used uname -r to determine the kernel version. This will only ever tell you the currently running version of the kernel.
When you update the kernel in debian and fedora based OSes, dkms will be called to build the kernel modules against the new kernel while running the old kernel. This way, when you reboot, everything is ready to go and everyone is happy.

Accompanied with PR darlinghq/darling-newlkm#2",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,404,2018-07-19T22:19:38Z,2018-07-20T06:03:09Z,2018-07-20T06:03:09Z,MERGED,True,31,19,6,https://github.com/andyneff,Fedora 28,3,[],https://github.com/darlinghq/darling/pull/404,https://github.com/andyneff,1,https://github.com/darlinghq/darling/pull/404,"Updated to work with newest changes and on Fedora 28

Updated package names that needed 64 bit specified on Fedora 28 for some reason
Added new package requirements
Removed adding mdlr capabilities
Added OpenGL_GL_PREFERENCE=GLVND to CMAKE call, else it doesn't know whether to use legacy or glvnd
Added copy of rtsig.h to kernel module source dir","Updated to work with newest changes and on Fedora 28

Updated package names that needed 64 bit specified on Fedora 28 for some reason
Added new package requirements
Removed adding mdlr capabilities
Added OpenGL_GL_PREFERENCE=GLVND to CMAKE call, else it doesn't know whether to use legacy or glvnd
Added copy of rtsig.h to kernel module source dir",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,404,2018-07-19T22:19:38Z,2018-07-20T06:03:09Z,2018-07-20T06:03:09Z,MERGED,True,31,19,6,https://github.com/andyneff,Fedora 28,3,[],https://github.com/darlinghq/darling/pull/404,https://github.com/bugaevc,2,https://github.com/darlinghq/darling/pull/404#issuecomment-406497783,"Updated to work with newest changes and on Fedora 28

Updated package names that needed 64 bit specified on Fedora 28 for some reason
Added new package requirements
Removed adding mdlr capabilities
Added OpenGL_GL_PREFERENCE=GLVND to CMAKE call, else it doesn't know whether to use legacy or glvnd
Added copy of rtsig.h to kernel module source dir","Looks great, thanks!",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,438,2018-10-17T08:21:16Z,2018-10-17T08:22:29Z,2018-10-17T08:22:29Z,MERGED,True,34,42,1,https://github.com/pxb1988,make PlistBuddy print as apple does,1,[],https://github.com/darlinghq/darling/pull/438,https://github.com/pxb1988,1,https://github.com/darlinghq/darling/pull/438,"the plistbuddy in darling print different with apple's
PlistBuddy -c 'Print ApplicationProperties:ApplicationPath' xx.plist output the content of ApplicationProperties not the expected ApplicationPath
PlistBuddy -c 'Print ApplicationProperties::::ApplicationPath:x' xx.plist output the content of ApplicationProperties but not end with \n
this patch fixes the above problem.","the plistbuddy in darling print different with apple's
PlistBuddy -c 'Print ApplicationProperties:ApplicationPath' xx.plist output the content of ApplicationProperties not the expected ApplicationPath
PlistBuddy -c 'Print ApplicationProperties::::ApplicationPath:x' xx.plist output the content of ApplicationProperties but not end with \n
this patch fixes the above problem.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,442,2018-10-22T14:12:48Z,2018-12-26T06:26:18Z,2018-12-26T06:27:31Z,MERGED,True,2,2,1,https://github.com/woachk,Changes to allow building on Fedora 28,2,[],https://github.com/darlinghq/darling/pull/442,https://github.com/woachk,1,https://github.com/darlinghq/darling/pull/442,"With these two changes, Darling becomes buildable with docker-compose for Fedora 28.
These changes aren't needed to build without using RPMs.","With these two changes, Darling becomes buildable with docker-compose for Fedora 28.
These changes aren't needed to build without using RPMs.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,442,2018-10-22T14:12:48Z,2018-12-26T06:26:18Z,2018-12-26T06:27:31Z,MERGED,True,2,2,1,https://github.com/woachk,Changes to allow building on Fedora 28,2,[],https://github.com/darlinghq/darling/pull/442,https://github.com/bugaevc,2,https://github.com/darlinghq/darling/pull/442#issuecomment-431852682,"With these two changes, Darling becomes buildable with docker-compose for Fedora 28.
These changes aren't needed to build without using RPMs.","Hi, thanks.
libbsd-devel dependency indeed makes sense. udev/rules.d/00-darling-mach.rules isn't needed anymore, we no longer use a userspace-accessible /dev/mach device, so should we just remove that line?
cc @andyneff",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,442,2018-10-22T14:12:48Z,2018-12-26T06:26:18Z,2018-12-26T06:27:31Z,MERGED,True,2,2,1,https://github.com/woachk,Changes to allow building on Fedora 28,2,[],https://github.com/darlinghq/darling/pull/442,https://github.com/andyneff,3,https://github.com/darlinghq/darling/pull/442#issuecomment-431907374,"With these two changes, Darling becomes buildable with docker-compose for Fedora 28.
These changes aren't needed to build without using RPMs.",LGTM,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,442,2018-10-22T14:12:48Z,2018-12-26T06:26:18Z,2018-12-26T06:27:31Z,MERGED,True,2,2,1,https://github.com/woachk,Changes to allow building on Fedora 28,2,[],https://github.com/darlinghq/darling/pull/442,https://github.com/JL2210,4,https://github.com/darlinghq/darling/pull/442#issuecomment-449878858,"With these two changes, Darling becomes buildable with docker-compose for Fedora 28.
These changes aren't needed to build without using RPMs.",Anybody looking at this?,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,442,2018-10-22T14:12:48Z,2018-12-26T06:26:18Z,2018-12-26T06:27:31Z,MERGED,True,2,2,1,https://github.com/woachk,Changes to allow building on Fedora 28,2,[],https://github.com/darlinghq/darling/pull/442,https://github.com/bugaevc,5,https://github.com/darlinghq/darling/pull/442#issuecomment-449912929,"With these two changes, Darling becomes buildable with docker-compose for Fedora 28.
These changes aren't needed to build without using RPMs.","Sorry, it completely slipped my mind",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,470,2019-01-23T23:16:43Z,2019-01-24T08:10:05Z,2019-01-25T15:58:20Z,MERGED,True,57,15,1,https://github.com/JL2210,Update src/tools/sudo.c with more features,1,[],https://github.com/darlinghq/darling/pull/470,https://github.com/JL2210,1,https://github.com/darlinghq/darling/pull/470,"Signed-off-by: James Larrowe larrowe.semaj11@gmail.com
Compiles with -Wall -Wextra -Werror
Seemingly runs fine, do you have a testsuite?
Just noticed, I was looking at the manpage for Linux's sudo. I can update that, if you'd like.","Signed-off-by: James Larrowe larrowe.semaj11@gmail.com
Compiles with -Wall -Wextra -Werror
Seemingly runs fine, do you have a testsuite?
Just noticed, I was looking at the manpage for Linux's sudo. I can update that, if you'd like.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,470,2019-01-23T23:16:43Z,2019-01-24T08:10:05Z,2019-01-25T15:58:20Z,MERGED,True,57,15,1,https://github.com/JL2210,Update src/tools/sudo.c with more features,1,[],https://github.com/darlinghq/darling/pull/470,https://github.com/JL2210,2,https://github.com/darlinghq/darling/pull/470#issuecomment-457287530,"Signed-off-by: James Larrowe larrowe.semaj11@gmail.com
Compiles with -Wall -Wextra -Werror
Seemingly runs fine, do you have a testsuite?
Just noticed, I was looking at the manpage for Linux's sudo. I can update that, if you'd like.","What are your thoughts on this? I have another branch ready with a more MacOS compliant sudo, if needs arise.
This is the page I'm referring to: Sudo MacOS",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,470,2019-01-23T23:16:43Z,2019-01-24T08:10:05Z,2019-01-25T15:58:20Z,MERGED,True,57,15,1,https://github.com/JL2210,Update src/tools/sudo.c with more features,1,[],https://github.com/darlinghq/darling/pull/470,https://github.com/LubosD,3,https://github.com/darlinghq/darling/pull/470#issuecomment-457620185,"Signed-off-by: James Larrowe larrowe.semaj11@gmail.com
Compiles with -Wall -Wextra -Werror
Seemingly runs fine, do you have a testsuite?
Just noticed, I was looking at the manpage for Linux's sudo. I can update that, if you'd like.","It's merged already, so we're happy to accept your further PRs.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,489,2019-03-18T15:08:28Z,2019-03-18T15:11:18Z,2019-03-18T15:11:23Z,MERGED,True,20,21,4,https://github.com/andyneff,Fedora 29 cleanup,1,[],https://github.com/darlinghq/darling/pull/489,https://github.com/andyneff,1,https://github.com/darlinghq/darling/pull/489,"Fixed some warning, updated README and defaults to Fedora 29
Signed-off-by: Andy Neff andy@visionsystemsinc.com","Fixed some warning, updated README and defaults to Fedora 29
Signed-off-by: Andy Neff andy@visionsystemsinc.com",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,489,2019-03-18T15:08:28Z,2019-03-18T15:11:18Z,2019-03-18T15:11:23Z,MERGED,True,20,21,4,https://github.com/andyneff,Fedora 29 cleanup,1,[],https://github.com/darlinghq/darling/pull/489,https://github.com/bugaevc,2,https://github.com/darlinghq/darling/pull/489#issuecomment-473951440,"Fixed some warning, updated README and defaults to Fedora 29
Signed-off-by: Andy Neff andy@visionsystemsinc.com",Thanks!,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,505,2019-05-04T11:49:07Z,2019-05-25T23:03:19Z,2019-05-25T23:44:14Z,MERGED,True,272,0,4,https://github.com/jamesu,Add basic DrawSprocket stub implementation.,1,[],https://github.com/darlinghq/darling/pull/505,https://github.com/jamesu,1,https://github.com/darlinghq/darling/pull/505,"Adds a stub for DrawSprocket with exported functions, including typed parameters in the unfortunate event that an application actually calls said functions.","Adds a stub for DrawSprocket with exported functions, including typed parameters in the unfortunate event that an application actually calls said functions.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,505,2019-05-04T11:49:07Z,2019-05-25T23:03:19Z,2019-05-25T23:44:14Z,MERGED,True,272,0,4,https://github.com/jamesu,Add basic DrawSprocket stub implementation.,1,[],https://github.com/darlinghq/darling/pull/505,https://github.com/ahyattdev,2,https://github.com/darlinghq/darling/pull/505#issuecomment-495954707,"Adds a stub for DrawSprocket with exported functions, including typed parameters in the unfortunate event that an application actually calls said functions.","Looks great to me. By the way, we have a generator for creating framework stubs located here.
I'll write something on the wiki about how to use it",True,{'THUMBS_UP': ['https://github.com/jamesu']}
darlinghq/darling,https://github.com/darlinghq/darling,505,2019-05-04T11:49:07Z,2019-05-25T23:03:19Z,2019-05-25T23:44:14Z,MERGED,True,272,0,4,https://github.com/jamesu,Add basic DrawSprocket stub implementation.,1,[],https://github.com/darlinghq/darling/pull/505,https://github.com/ahyattdev,3,https://github.com/darlinghq/darling/pull/505#issuecomment-495956279,"Adds a stub for DrawSprocket with exported functions, including typed parameters in the unfortunate event that an application actually calls said functions.","We now have a wiki page describing the process: https://wiki.darlinghq.org/generating_stubs
This should make it easier for you to create stubs!",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,506,2019-05-04T12:31:55Z,2019-05-25T23:04:43Z,2019-05-25T23:04:43Z,MERGED,True,519,0,4,https://github.com/jamesu,Add basic AGL stub,1,[],https://github.com/darlinghq/darling/pull/506,https://github.com/jamesu,1,https://github.com/darlinghq/darling/pull/506,"Adds a stub for AGL with exported functions, including typed parameters.
Some functions include a dummy implementation to the extent that they will provide valid return values on relevant output parameters.","Adds a stub for AGL with exported functions, including typed parameters.
Some functions include a dummy implementation to the extent that they will provide valid return values on relevant output parameters.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,517,2019-05-20T17:46:25Z,2019-09-25T19:00:01Z,2020-01-23T20:05:39Z,CLOSED,False,119,1,2,https://github.com/CuriousTommy,Implement CNLabeledValue,4,[],https://github.com/darlinghq/darling/pull/517,https://github.com/CuriousTommy,1,https://github.com/darlinghq/darling/pull/517,"I created stubs for the CNLabeledValue class. These functions are based on what the Apple developer website described. For the coding style, I went with how the website written the functions/variables. Hopefully I did not mess up here, but let me know if you want me to change anything.
With that being said, I do have a few questions/comments:

I noticed that there is are two functions in the CNLabeledValue.m. I am not sure what they are used for so I left them there:

- (NSMethodSignature *)methodSignatureForSelector:(SEL)aSelector;
- (void)forwardInvocation:(NSInvocation *)anInvocation;



For iOS and watchOS, the variables are nonatomic while MacOS is atomic. I recall there being a way to the let the compiler know if you want to use nonatomic or atomic, but I don't remember how to implement it (and my google skills are failing me).


I ordered the functions and variables based on the website.","I created stubs for the CNLabeledValue class. These functions are based on what the Apple developer website described. For the coding style, I went with how the website written the functions/variables. Hopefully I did not mess up here, but let me know if you want me to change anything.
With that being said, I do have a few questions/comments:

I noticed that there is are two functions in the CNLabeledValue.m. I am not sure what they are used for so I left them there:

- (NSMethodSignature *)methodSignatureForSelector:(SEL)aSelector;
- (void)forwardInvocation:(NSInvocation *)anInvocation;



For iOS and watchOS, the variables are nonatomic while MacOS is atomic. I recall there being a way to the let the compiler know if you want to use nonatomic or atomic, but I don't remember how to implement it (and my google skills are failing me).


I ordered the functions and variables based on the website.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,517,2019-05-20T17:46:25Z,2019-09-25T19:00:01Z,2020-01-23T20:05:39Z,CLOSED,False,119,1,2,https://github.com/CuriousTommy,Implement CNLabeledValue,4,[],https://github.com/darlinghq/darling/pull/517,https://github.com/bugaevc,2,https://github.com/darlinghq/darling/pull/517#issuecomment-494097665,"I created stubs for the CNLabeledValue class. These functions are based on what the Apple developer website described. For the coding style, I went with how the website written the functions/variables. Hopefully I did not mess up here, but let me know if you want me to change anything.
With that being said, I do have a few questions/comments:

I noticed that there is are two functions in the CNLabeledValue.m. I am not sure what they are used for so I left them there:

- (NSMethodSignature *)methodSignatureForSelector:(SEL)aSelector;
- (void)forwardInvocation:(NSInvocation *)anInvocation;



For iOS and watchOS, the variables are nonatomic while MacOS is atomic. I recall there being a way to the let the compiler know if you want to use nonatomic or atomic, but I don't remember how to implement it (and my google skills are failing me).


I ordered the functions and variables based on the website.","Okay, honestly, I'm unsure what we should do here.
First of all, I'm really glad about the interest you're taking in Darling and in wanting to help — this is great! Don't let the rest of this comment discourage you.
But... these are indeed stubs that don't work (do the correct thing). labeledValueWithLabel: even leaks memory (you're supposed to autorelease the value — look up Cocoa memory management conventions, or ask me for more details).
Considering we already have dynamic forwardInvocation:-based stubs (the objc runtime calls them when a method implementation is not found, and we just log a message), I'm not sure there is any advantage to having this.
Or maybe there is — it's easier to write an actual implementation on top of these stubs, when/if anyone ever gets to that. I'll leave it to @ahyattdev to decide.
Again, please don't be discouraged by this, and do continue learning objc! Feel free to ask me for help/pointers on any topic.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,517,2019-05-20T17:46:25Z,2019-09-25T19:00:01Z,2020-01-23T20:05:39Z,CLOSED,False,119,1,2,https://github.com/CuriousTommy,Implement CNLabeledValue,4,[],https://github.com/darlinghq/darling/pull/517,https://github.com/bugaevc,3,https://github.com/darlinghq/darling/pull/517#issuecomment-494106521,"I created stubs for the CNLabeledValue class. These functions are based on what the Apple developer website described. For the coding style, I went with how the website written the functions/variables. Hopefully I did not mess up here, but let me know if you want me to change anything.
With that being said, I do have a few questions/comments:

I noticed that there is are two functions in the CNLabeledValue.m. I am not sure what they are used for so I left them there:

- (NSMethodSignature *)methodSignatureForSelector:(SEL)aSelector;
- (void)forwardInvocation:(NSInvocation *)anInvocation;



For iOS and watchOS, the variables are nonatomic while MacOS is atomic. I recall there being a way to the let the compiler know if you want to use nonatomic or atomic, but I don't remember how to implement it (and my google skills are failing me).


I ordered the functions and variables based on the website.",Or — you could actually implement CNLabeledValue; there's not that much functionality missing from your stubs! Then we'd definitely want to merge it.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,517,2019-05-20T17:46:25Z,2019-09-25T19:00:01Z,2020-01-23T20:05:39Z,CLOSED,False,119,1,2,https://github.com/CuriousTommy,Implement CNLabeledValue,4,[],https://github.com/darlinghq/darling/pull/517,https://github.com/CuriousTommy,4,https://github.com/darlinghq/darling/pull/517#issuecomment-494130640,"I created stubs for the CNLabeledValue class. These functions are based on what the Apple developer website described. For the coding style, I went with how the website written the functions/variables. Hopefully I did not mess up here, but let me know if you want me to change anything.
With that being said, I do have a few questions/comments:

I noticed that there is are two functions in the CNLabeledValue.m. I am not sure what they are used for so I left them there:

- (NSMethodSignature *)methodSignatureForSelector:(SEL)aSelector;
- (void)forwardInvocation:(NSInvocation *)anInvocation;



For iOS and watchOS, the variables are nonatomic while MacOS is atomic. I recall there being a way to the let the compiler know if you want to use nonatomic or atomic, but I don't remember how to implement it (and my google skills are failing me).


I ordered the functions and variables based on the website.","First of all, I'm really glad about the interest you're taking in Darling and in wanting to help — this is great! Don't let the rest of this comment discourage you.

Don't worry, I totally understand.

Or maybe there is — it's easier to write an actual implementation on top of these stubs, when/if anyone ever gets to that. I'll leave it to @ahyattdev to decide.


you could actually implement CNLabeledValue;

That's my original plan. I currently have a WIP implementation, but I wanted to make a stub so that I can revert my changes (in case if I do anything destructive, if that is even possible).
Should I close this PR and submit another one with most (if not all) of the functions implemented, or should I just implement it in this PR.

But... these are indeed stubs that don't work (do the correct thing). labeledValueWithLabel: even leaks memory (you're supposed to autorelease the value — look up Cocoa memory management conventions, or ask me for more details).

Okay, I'll read up more on Cocoa's memory management. While I do my implementation, are there any other concerns I should keep in mind?

Considering we already have dynamic forwardInvocation:-based stubs (the objc runtime calls them when a method implementation is not found, and we just log a message), I'm not sure there is any advantage to having this.

Ah so that is what forwardInvocation is used for. That's really cool.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,517,2019-05-20T17:46:25Z,2019-09-25T19:00:01Z,2020-01-23T20:05:39Z,CLOSED,False,119,1,2,https://github.com/CuriousTommy,Implement CNLabeledValue,4,[],https://github.com/darlinghq/darling/pull/517,https://github.com/bugaevc,5,https://github.com/darlinghq/darling/pull/517#issuecomment-494142672,"I created stubs for the CNLabeledValue class. These functions are based on what the Apple developer website described. For the coding style, I went with how the website written the functions/variables. Hopefully I did not mess up here, but let me know if you want me to change anything.
With that being said, I do have a few questions/comments:

I noticed that there is are two functions in the CNLabeledValue.m. I am not sure what they are used for so I left them there:

- (NSMethodSignature *)methodSignatureForSelector:(SEL)aSelector;
- (void)forwardInvocation:(NSInvocation *)anInvocation;



For iOS and watchOS, the variables are nonatomic while MacOS is atomic. I recall there being a way to the let the compiler know if you want to use nonatomic or atomic, but I don't remember how to implement it (and my google skills are failing me).


I ordered the functions and variables based on the website.","I currently have a WIP implementation, but I wanted to make a stub so that I can revert my changes (in case if I do anything destructive, if that is even possible).

I don't really understand what you mean...

Should I close this PR and submit another one with most (if not all) of the functions implemented, or should I just implement it in this PR.

Just push it here (maybe even amend and force-push), no need for a separate PR.

Okay, I'll read up more on Cocoa's memory management. While I do my implementation, are there any other concerns I should keep in mind?

A word of caution: there are basically two different conventions, or systems (it's actually more than just a different convention) about Cocoa memory management: a newer one, ARC (automatic reference counting), and an older one (sometimes called MRC, for manual reference counting). You need MRC, not ARC — the one where you explicitly do retains, releases and autoreleases.

For iOS and watchOS, the variables are nonatomic while MacOS is atomic. I recall there being a way to the let the compiler know if you want to use nonatomic or atomic, but I don't remember how to implement it (and my google skills are failing me).

You let the compiler know whether you want atomic or nonatomic by saying it inside the parens in a @property declaration, like so:
@property (atomic) NSRunLoop *loop;
@property (nonatomic, weak) IBOutlet UILabel *label;
and you have already done that.
To get the atomic on macOS, nonatomic on iOS (and others) behavior, there's a NS_NONATOMIC_IOSONLY macro that (I believe) expands either to atomic or nonatomic depending on that platform. Or at least it should do that; it seems the one we have always expands to nonatomic (understandable given Apportable only cared about iOS apps) — it'd be nice if you fix that as well.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,517,2019-05-20T17:46:25Z,2019-09-25T19:00:01Z,2020-01-23T20:05:39Z,CLOSED,False,119,1,2,https://github.com/CuriousTommy,Implement CNLabeledValue,4,[],https://github.com/darlinghq/darling/pull/517,https://github.com/CuriousTommy,6,https://github.com/darlinghq/darling/pull/517#issuecomment-494172944,"I created stubs for the CNLabeledValue class. These functions are based on what the Apple developer website described. For the coding style, I went with how the website written the functions/variables. Hopefully I did not mess up here, but let me know if you want me to change anything.
With that being said, I do have a few questions/comments:

I noticed that there is are two functions in the CNLabeledValue.m. I am not sure what they are used for so I left them there:

- (NSMethodSignature *)methodSignatureForSelector:(SEL)aSelector;
- (void)forwardInvocation:(NSInvocation *)anInvocation;



For iOS and watchOS, the variables are nonatomic while MacOS is atomic. I recall there being a way to the let the compiler know if you want to use nonatomic or atomic, but I don't remember how to implement it (and my google skills are failing me).


I ordered the functions and variables based on the website.","I don't really understand what you mean...

Having multiple commits is better then having one commit when you want to git revert on a commit that breaks Darling.
But the way I worded it is really bad... you can just ignore that message...

You need MRC, not ARC — the one where you explicitly do retains, releases and autoreleases.

Good to know, I'll keep that in mind.

To get the atomic on macOS, nonatomic on iOS (and others) behavior, there's a NS_NONATOMIC_IOSONLY macro that (I believe) expands either to atomic or nonatomic depending on that platform.

Oh! That could work. My only concern is if this would make watchOS atomic instead of nonatomic?

Or at least it should do that; it seems the one we have always expands to nonatomic (understandable given Apportable only cared about iOS apps) — it'd be nice if you fix that as well.

Outside of importing headers or #ifnder CLASS_H #define CLASS_H ... #endif, I never really messed around with the preprocessor. But if it is not too hard to implement, I can it give it a try.

After seeing a video on MRC, I think I understand the basics. But I do have one question about it.
Since I am using copy instead of retain in my property, do I still need to worry about running [_variable retain]?",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,517,2019-05-20T17:46:25Z,2019-09-25T19:00:01Z,2020-01-23T20:05:39Z,CLOSED,False,119,1,2,https://github.com/CuriousTommy,Implement CNLabeledValue,4,[],https://github.com/darlinghq/darling/pull/517,https://github.com/bugaevc,7,https://github.com/darlinghq/darling/pull/517#issuecomment-494250719,"I created stubs for the CNLabeledValue class. These functions are based on what the Apple developer website described. For the coding style, I went with how the website written the functions/variables. Hopefully I did not mess up here, but let me know if you want me to change anything.
With that being said, I do have a few questions/comments:

I noticed that there is are two functions in the CNLabeledValue.m. I am not sure what they are used for so I left them there:

- (NSMethodSignature *)methodSignatureForSelector:(SEL)aSelector;
- (void)forwardInvocation:(NSInvocation *)anInvocation;



For iOS and watchOS, the variables are nonatomic while MacOS is atomic. I recall there being a way to the let the compiler know if you want to use nonatomic or atomic, but I don't remember how to implement it (and my google skills are failing me).


I ordered the functions and variables based on the website.","Having multiple commits is better then having one commit when you want to git revert on a commit that breaks Darling.

Sure, it usually makes sense to separate changes into (somewhat) independent, self-contained commits. But in the case, it doesn't make that much sense to separate adding stubs and implementing them. Even if you do want to separate them, there's no need to ""land"" the changes as separate PRs — you would usually do (and commit) both parts and then create a PR with both.

Oh! That could work. My only concern is if this would make watchOS atomic instead of nonatomic?

I suspect (I don't know for sure, this is something for you to maybe check!) that the name NS_NONATOMIC_IOSONLY actually predates watchOS, and that it actually means ""atomic on macOS only"", which is what we need.

But if it is not too hard to implement, I can it give it a try.

It shouldn't be too hard, it's something like
#ifndef NS_NONATOMIC_IOSONLY
#if TARGET_OS_MAC
#define NS_NONATOMIC_IOSONLY atomic
#else
#define NS_NONATOMIC_IOSONLY nonatomic
#endif
#endif
but make sure to look up & use the appropriate macro in place of TARGET_OS_MAC (one that is 1 on macOS but 0 on iOS/watchOS).

After seeing a video on MRC, I think I understand the basics.

I can also recommend this post: https://www.tomdalling.com/blog/cocoa/an-in-depth-look-at-manual-memory-management-in-objective-c/

Since I am using copy instead of retain in my property, do I still need to worry about running [_variable retain]?

If you're using the property via accessors (e.g. self.foo = bar, or [self setFoo: bar]/[self foo] — you can do that from object's own implementation, not just from the outside!), you don't to worry about this, cause the autogenerated accessor will do the right thing automatically.
But it's recommended not to use property accessors in init... and dealloc methods, so there you'll have to access the ivars directly.
For example:
- (instancetype) initWithFoo: (Foo *) foo {
    self = [super init];
    if (self == nil) {
        return nil;
    }

    _foo = [foo copy];

    return self;
}
Why are there no retains/releases here? That's because we don't keep a reference to the original foo we were passed — we just make a copy of it and then forget about it. We don't we retain the copy since we do keep a reference to it in our ivar? That's because the result of copy is ""already retained"" (as are results of alloc, init... and new... methods).
That is the convention — if a method is one of these, it returns an already retained reference, and the caller doesn't have to retain it again (but it of course still has to release it later). The way the callee — in this case, copy — does that is perhaps by creating a new object, the copy, with [[Foo alloc] init] and not autoreleasing it. Whereas ""normal"" methods that don't return an already retained reference either return another existing object (their ivar, or a result of some other method, or a string literal...), or create a new object and call autorelease on it before returning it.
(Hope that was clear, tell me if it's not!)",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,517,2019-05-20T17:46:25Z,2019-09-25T19:00:01Z,2020-01-23T20:05:39Z,CLOSED,False,119,1,2,https://github.com/CuriousTommy,Implement CNLabeledValue,4,[],https://github.com/darlinghq/darling/pull/517,https://github.com/CuriousTommy,8,https://github.com/darlinghq/darling/pull/517#issuecomment-494530693,"I created stubs for the CNLabeledValue class. These functions are based on what the Apple developer website described. For the coding style, I went with how the website written the functions/variables. Hopefully I did not mess up here, but let me know if you want me to change anything.
With that being said, I do have a few questions/comments:

I noticed that there is are two functions in the CNLabeledValue.m. I am not sure what they are used for so I left them there:

- (NSMethodSignature *)methodSignatureForSelector:(SEL)aSelector;
- (void)forwardInvocation:(NSInvocation *)anInvocation;



For iOS and watchOS, the variables are nonatomic while MacOS is atomic. I recall there being a way to the let the compiler know if you want to use nonatomic or atomic, but I don't remember how to implement it (and my google skills are failing me).


I ordered the functions and variables based on the website.","Thanks for look over my code, I will take a look at your comments and fix them. With that being said, I do have a few questions/statements.
I seem to get a compile error when I try to build my code (link to full build log) on Darling. The weird thing is that this code works perfectly fine on XCode.
I think the warning below gives an hint as to why it is not building. It says that I need to use @synthesize, but I thought that is no longer required (the compiler will do it for you automatically).
/home/user/Downloads/darling/src/Contacts/src/CNLabeledValue.m:22:17: warning: property 'label' requires method 'label' to be defined - use @synthesize, @dynamic or provide a method implementation in this class implementation [-Wobjc-property-implementation]



I suspect (I don't know for sure, this is something for you to maybe check!) that the name NS_NONATOMIC_IOSONLY actually predates watchOS, and that it actually means ""atomic on macOS only"", which is what we need.

I wonder if there is a way for Objective-C to directly tell you if a variable is atomic or not. It would make it easy for me to do some testing on the simulator.

(Hope that was clear, tell me if it's not!)

It took me a while to understand, but I think I sort-of understand what you are saying.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,517,2019-05-20T17:46:25Z,2019-09-25T19:00:01Z,2020-01-23T20:05:39Z,CLOSED,False,119,1,2,https://github.com/CuriousTommy,Implement CNLabeledValue,4,[],https://github.com/darlinghq/darling/pull/517,https://github.com/bugaevc,9,https://github.com/darlinghq/darling/pull/517#issuecomment-494551157,"I created stubs for the CNLabeledValue class. These functions are based on what the Apple developer website described. For the coding style, I went with how the website written the functions/variables. Hopefully I did not mess up here, but let me know if you want me to change anything.
With that being said, I do have a few questions/comments:

I noticed that there is are two functions in the CNLabeledValue.m. I am not sure what they are used for so I left them there:

- (NSMethodSignature *)methodSignatureForSelector:(SEL)aSelector;
- (void)forwardInvocation:(NSInvocation *)anInvocation;



For iOS and watchOS, the variables are nonatomic while MacOS is atomic. I recall there being a way to the let the compiler know if you want to use nonatomic or atomic, but I don't remember how to implement it (and my google skills are failing me).


I ordered the functions and variables based on the website.","I seem to get a compile error when I try to build my code (link to full build log) on Darling. The weird thing is that this code works perfectly fine on XCode.


I think the warning below gives an hint as to why it is not building. It says that I need to use @synthesize, but I thought that is no longer required (the compiler will do it for you automatically).

I... actually don't know! I also thought Clang does it by default now. Some googling around reveals that there's an -fobjc-default-synthesize-properties flag that should've been turned on by default at some point, not sure what happened.
Perhaps you should just write the @synthesizes out explicitly.

I wonder if there is a way for Objective-C to directly tell you if a variable is atomic or not. It would make it easy for me to do some testing on the simulator.

You can inspect a property using reflection (at runtime) using class_getProperty() and then property_copyAttributeValue(), or you could disassemble the generated setter and look for signs of locking.
But there are much easier ways. You can look at the preprocessed code to see what NS_NONATOMIC_IOSONLY expands to, or you can just look up the definition of NS_NONATOMIC_IOSONLY in Apple's header (but note that you cannot directly copy (non-free parts of) Apple code to Darling).",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,517,2019-05-20T17:46:25Z,2019-09-25T19:00:01Z,2020-01-23T20:05:39Z,CLOSED,False,119,1,2,https://github.com/CuriousTommy,Implement CNLabeledValue,4,[],https://github.com/darlinghq/darling/pull/517,https://github.com/CuriousTommy,10,https://github.com/darlinghq/darling/pull/517#issuecomment-494890138,"I created stubs for the CNLabeledValue class. These functions are based on what the Apple developer website described. For the coding style, I went with how the website written the functions/variables. Hopefully I did not mess up here, but let me know if you want me to change anything.
With that being said, I do have a few questions/comments:

I noticed that there is are two functions in the CNLabeledValue.m. I am not sure what they are used for so I left them there:

- (NSMethodSignature *)methodSignatureForSelector:(SEL)aSelector;
- (void)forwardInvocation:(NSInvocation *)anInvocation;



For iOS and watchOS, the variables are nonatomic while MacOS is atomic. I recall there being a way to the let the compiler know if you want to use nonatomic or atomic, but I don't remember how to implement it (and my google skills are failing me).


I ordered the functions and variables based on the website.","I updated my code. Hopefully I did things right this time. I haven't look into the NS_NONATOMIC_IOSONLY stuff yet.

Perhaps you should just write the @synthesizes out explicitly.

Edit3: If you get a synthesized property 'foo' must either be named the same as a compatible instance variable or must explicitly name an instance variable
You need to to add the following to your interface (in your .h file):
@interface CNLabeledValue<__covariant ValueType> : NSObject <NSCopying,NSSecureCoding> {
	NSString *_label;
	ValueType _value;
	NSString *_identifier;
}

Make sure that the variable name you enter is the same as the name you set (in your .m file) when you synthesize the property.
@synthesize identifier = _identifier;
@synthesize label = _label;
@synthesize value = _value;

This source does a good job explaining it.

For the initWithCoder, the [aDecoder decodeObjectOfClass:[NSString class]...] would return a NSString object with autorelease applied to it, right?",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,517,2019-05-20T17:46:25Z,2019-09-25T19:00:01Z,2020-01-23T20:05:39Z,CLOSED,False,119,1,2,https://github.com/CuriousTommy,Implement CNLabeledValue,4,[],https://github.com/darlinghq/darling/pull/517,https://github.com/CuriousTommy,11,https://github.com/darlinghq/darling/pull/517#issuecomment-535164682,"I created stubs for the CNLabeledValue class. These functions are based on what the Apple developer website described. For the coding style, I went with how the website written the functions/variables. Hopefully I did not mess up here, but let me know if you want me to change anything.
With that being said, I do have a few questions/comments:

I noticed that there is are two functions in the CNLabeledValue.m. I am not sure what they are used for so I left them there:

- (NSMethodSignature *)methodSignatureForSelector:(SEL)aSelector;
- (void)forwardInvocation:(NSInvocation *)anInvocation;



For iOS and watchOS, the variables are nonatomic while MacOS is atomic. I recall there being a way to the let the compiler know if you want to use nonatomic or atomic, but I don't remember how to implement it (and my google skills are failing me).


I ordered the functions and variables based on the website.",I am going to close this for now. In the future I'll look into this.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,523,2019-06-04T12:45:29Z,2019-06-06T00:39:46Z,2019-06-06T03:10:33Z,MERGED,True,893,20,15,https://github.com/jamesu,"Add more basic Carbon, ApplicationServices, CoreServices stubs",1,[],https://github.com/darlinghq/darling/pull/523,https://github.com/jamesu,1,https://github.com/darlinghq/darling/pull/523,"Adds more function stubs with correctly sized parameters to at least get torque-based games loading, satisfying #504 . Note that while this allows them to load, they currently do not function correctly due to #514 , threading issues, and (if one ever wanted to properly play them) there is no carbon ui or gl implemented.
Function prototypes have been added to relevant headers in carbon, though for now all the actual stubs are in Carbon.c and the existing MacWindows.cpp which has now also been added to the Carbon framework build.","Adds more function stubs with correctly sized parameters to at least get torque-based games loading, satisfying #504 . Note that while this allows them to load, they currently do not function correctly due to #514 , threading issues, and (if one ever wanted to properly play them) there is no carbon ui or gl implemented.
Function prototypes have been added to relevant headers in carbon, though for now all the actual stubs are in Carbon.c and the existing MacWindows.cpp which has now also been added to the Carbon framework build.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,523,2019-06-04T12:45:29Z,2019-06-06T00:39:46Z,2019-06-06T03:10:33Z,MERGED,True,893,20,15,https://github.com/jamesu,"Add more basic Carbon, ApplicationServices, CoreServices stubs",1,[],https://github.com/darlinghq/darling/pull/523,https://github.com/ahyattdev,2,https://github.com/darlinghq/darling/pull/523#issuecomment-499306126,"Adds more function stubs with correctly sized parameters to at least get torque-based games loading, satisfying #504 . Note that while this allows them to load, they currently do not function correctly due to #514 , threading issues, and (if one ever wanted to properly play them) there is no carbon ui or gl implemented.
Function prototypes have been added to relevant headers in carbon, though for now all the actual stubs are in Carbon.c and the existing MacWindows.cpp which has now also been added to the Carbon framework build.","Looks good to me, nice to see some Carbon stuff added. One thing to keep in mind is that if when running a program it says it expects a symbol in a framework it doesn't necessarily mean that the symbol is implemented in that framework. It is common for dynamic libraries to ""reexport"" others which is where they take all the exported symbols from another library and present them as their own.
In this case, ApplicationServices reexports CoreGraphics and that is why you got errors that those symbols in starting with CG were expected there.
What I've found useful is using MachOView to get a nice list of which libraries a dylib reexports.

Those CoreGraphics symbols from what I've seen are also not present in our CoreGraphics, so those stubs you made can be moved over to CoreGraphics. I'll merge this and take care of that and set up ApplicationServices to reexport the things in the screenshot. It's now pretty easy since we just got a reexport CMake function.
Thanks for the PR!",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,523,2019-06-04T12:45:29Z,2019-06-06T00:39:46Z,2019-06-06T03:10:33Z,MERGED,True,893,20,15,https://github.com/jamesu,"Add more basic Carbon, ApplicationServices, CoreServices stubs",1,[],https://github.com/darlinghq/darling/pull/523,https://github.com/ahyattdev,3,https://github.com/darlinghq/darling/pull/523#issuecomment-499331543,"Adds more function stubs with correctly sized parameters to at least get torque-based games loading, satisfying #504 . Note that while this allows them to load, they currently do not function correctly due to #514 , threading issues, and (if one ever wanted to properly play them) there is no carbon ui or gl implemented.
Function prototypes have been added to relevant headers in carbon, though for now all the actual stubs are in Carbon.c and the existing MacWindows.cpp which has now also been added to the Carbon framework build.","I ran into an issue, will take longer than I thought to fix. Will be pushed soon.",True,{'THUMBS_UP': ['https://github.com/jamesu']}
darlinghq/darling,https://github.com/darlinghq/darling,525,2019-06-08T14:04:02Z,2019-07-20T16:19:40Z,2019-07-20T16:19:40Z,MERGED,True,29,14,4,https://github.com/jamesu,32bit Syscall fix,2,[],https://github.com/darlinghq/darling/pull/525,https://github.com/jamesu,1,https://github.com/darlinghq/darling/pull/525,"Fixes an issue where not all syscall parameters were copied to the thunk functions for 32bit processes, causing parameters to be in an uninitialized state for large syscalls. This affected both __darling_mach_syscall and __darling_bsd_syscall.
Partially fixes #524","Fixes an issue where not all syscall parameters were copied to the thunk functions for 32bit processes, causing parameters to be in an uninitialized state for large syscalls. This affected both __darling_mach_syscall and __darling_bsd_syscall.
Partially fixes #524",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,526,2019-06-09T11:28:03Z,2019-06-10T06:51:58Z,2019-06-10T06:51:58Z,MERGED,True,1,1,1,https://github.com/jamesu,Use more correct clock_nanosleep instead of clock_sleep,1,[],https://github.com/darlinghq/darling/pull/526,https://github.com/jamesu,1,https://github.com/darlinghq/darling/pull/526,Fixes a presumed typo in mach_wait_until where clock_sleep (a wrapper to clock_sleep_trap) is used instead of the linux syscall clock_nanosleep.,Fixes a presumed typo in mach_wait_until where clock_sleep (a wrapper to clock_sleep_trap) is used instead of the linux syscall clock_nanosleep.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,528,2019-06-09T19:39:08Z,2019-06-10T06:51:29Z,2019-06-10T06:51:29Z,MERGED,True,4,0,1,https://github.com/jamesu,Fix issue where the incorrect struct was used for the stat call,1,[],https://github.com/darlinghq/darling/pull/528,https://github.com/jamesu,1,https://github.com/darlinghq/darling/pull/528,This resolves issue #527,This resolves issue #527,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,529,2019-06-11T01:48:05Z,2019-06-11T03:27:01Z,2019-06-11T18:50:19Z,MERGED,True,217,0,10,https://github.com/kamillys,Add some AddressBook and Carbon stubs,1,[],https://github.com/darlinghq/darling/pull/529,https://github.com/kamillys,1,https://github.com/darlinghq/darling/pull/529,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,529,2019-06-11T01:48:05Z,2019-06-11T03:27:01Z,2019-06-11T18:50:19Z,MERGED,True,217,0,10,https://github.com/kamillys,Add some AddressBook and Carbon stubs,1,[],https://github.com/darlinghq/darling/pull/529,https://github.com/ahyattdev,2,https://github.com/darlinghq/darling/pull/529#issuecomment-500672762,,Nice,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,531,2019-06-12T08:28:49Z,2019-06-14T05:28:00Z,2019-06-14T05:28:00Z,MERGED,True,5,5,4,https://github.com/kamillys,Fix typos; add kABDatabaseChangedNotification,1,[],https://github.com/darlinghq/darling/pull/531,https://github.com/kamillys,1,https://github.com/darlinghq/darling/pull/531,"Sorry for previous typos, I've fixed them. And double checked that build from my github repo builds.
Moreover, I've launched (loaded only - failed at execution) xcrun from Xcode 7.2 (which means all symbols are included now), so probably after implementing some functions it should launch - making Xcode tools usable without typing path.","Sorry for previous typos, I've fixed them. And double checked that build from my github repo builds.
Moreover, I've launched (loaded only - failed at execution) xcrun from Xcode 7.2 (which means all symbols are included now), so probably after implementing some functions it should launch - making Xcode tools usable without typing path.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,533,2019-06-14T10:14:17Z,2019-07-20T17:06:52Z,2019-07-20T17:06:52Z,CLOSED,False,1,1,1,https://github.com/kamillys,Merge src/external/foundation,1,[],https://github.com/darlinghq/darling/pull/533,https://github.com/kamillys,1,https://github.com/darlinghq/darling/pull/533,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,533,2019-06-14T10:14:17Z,2019-07-20T17:06:52Z,2019-07-20T17:06:52Z,CLOSED,False,1,1,1,https://github.com/kamillys,Merge src/external/foundation,1,[],https://github.com/darlinghq/darling/pull/533,https://github.com/ahyattdev,2,https://github.com/darlinghq/darling/pull/533#issuecomment-513483718,,"Updated, thank you",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,543,2019-07-28T20:09:34Z,2019-07-30T00:10:29Z,2020-01-23T20:05:19Z,MERGED,True,1527,0,54,https://github.com/CuriousTommy,Implement Stuff Needed For iTerm2,2,[],https://github.com/darlinghq/darling/pull/543,https://github.com/CuriousTommy,1,https://github.com/darlinghq/darling/pull/543,Let me know if you need me to fix anything.,Let me know if you need me to fix anything.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,549,2019-08-13T15:25:54Z,2019-08-13T18:31:12Z,2019-08-13T18:31:12Z,MERGED,True,6,3,3,https://github.com/andyneff,Updated to fedora 30 as default,1,[],https://github.com/darlinghq/darling/pull/549,https://github.com/andyneff,1,https://github.com/darlinghq/darling/pull/549,"Works with kernel 5.2 thanks to all the other bug fixes already done
👍 everyone!","Works with kernel 5.2 thanks to all the other bug fixes already done
👍 everyone!",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,555,2019-08-28T09:37:45Z,2020-02-21T15:28:11Z,2020-02-21T15:28:11Z,MERGED,True,5,0,1,https://github.com/magiruuvelvet,cmake: make sure the correct linker is used,1,[],https://github.com/darlinghq/darling/pull/555,https://github.com/magiruuvelvet,1,https://github.com/darlinghq/darling/pull/555,"I figured out how to make CMake use the correct linker for all the cross compile targets. This patch fixes the issue I opened earlier.
fixes #554","I figured out how to make CMake use the correct linker for all the cross compile targets. This patch fixes the issue I opened earlier.
fixes #554",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,555,2019-08-28T09:37:45Z,2020-02-21T15:28:11Z,2020-02-21T15:28:11Z,MERGED,True,5,0,1,https://github.com/magiruuvelvet,cmake: make sure the correct linker is used,1,[],https://github.com/darlinghq/darling/pull/555,https://github.com/ahyattdev,2,https://github.com/darlinghq/darling/pull/555#issuecomment-527008219,"I figured out how to make CMake use the correct linker for all the cross compile targets. This patch fixes the issue I opened earlier.
fixes #554","I'd like to understand the issue more before having this merged in. What is the cause? I don't think it's CMake related because I have successful builds with CMake 3.15.2 as well (but with Clang 8). Is it Gentoo related?
Has anyone else with Clang 9 had this issue?
Sounds like you have a very customized setup and I'd like to know this affects everyone with Clang 9 before merging this in. If it is a Gentoo problem then I'd rather have a check for Gentoo than apply this flag to distros that don't need it.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,555,2019-08-28T09:37:45Z,2020-02-21T15:28:11Z,2020-02-21T15:28:11Z,MERGED,True,5,0,1,https://github.com/magiruuvelvet,cmake: make sure the correct linker is used,1,[],https://github.com/darlinghq/darling/pull/555,https://github.com/magiruuvelvet,3,https://github.com/darlinghq/darling/pull/555#issuecomment-527014498,"I figured out how to make CMake use the correct linker for all the cross compile targets. This patch fixes the issue I opened earlier.
fixes #554","Well looking at the CMake file I didn't spot a linker overwrite flag (-fuse-ld=) which is required to set a custom linker. Without this flag the compiler uses the default linker it was configured to use. With clang you can do that at the CMake stage when compiling it from source. My clang defaults to ld.lld (first result found in $PATH) when the linker isn't overwritten. I configured this myself. Clang defaults to just ld otherwise. Maybe that's the culprint?
What I found funny too is that the LLD linker has Mach-O support by invoking it with ld64 as argv[0]. LLD supports many platforms and formats depending on how it was called.
What I'm trying to understand now is how could this CMake ever work in the first place when the linker wasn't explicitly set to the correct one tbh 🤔 It's so weird.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,555,2019-08-28T09:37:45Z,2020-02-21T15:28:11Z,2020-02-21T15:28:11Z,MERGED,True,5,0,1,https://github.com/magiruuvelvet,cmake: make sure the correct linker is used,1,[],https://github.com/darlinghq/darling/pull/555,https://github.com/bugaevc,4,https://github.com/darlinghq/darling/pull/555#issuecomment-527015386,"I figured out how to make CMake use the correct linker for all the cross compile targets. This patch fixes the issue I opened earlier.
fixes #554","Without this flag the compiler uses the default linker it was configured to use.

But we're doing linking separately from compiling, Clang just produces .o files and then we have our own custom cross-linker from Apple's cctools",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,555,2019-08-28T09:37:45Z,2020-02-21T15:28:11Z,2020-02-21T15:28:11Z,MERGED,True,5,0,1,https://github.com/magiruuvelvet,cmake: make sure the correct linker is used,1,[],https://github.com/darlinghq/darling/pull/555,https://github.com/magiruuvelvet,5,https://github.com/darlinghq/darling/pull/555#issuecomment-527031230,"I figured out how to make CMake use the correct linker for all the cross compile targets. This patch fixes the issue I opened earlier.
fixes #554","Running make in verbose mode (make VERBOSE=1) shows for me that CMake executes clang with all the .o files as input instead of Apple's linker. Than clang runs the wrong linker.
I think CMake uses the compiler to handle the linking instead of running the linker directly.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,555,2019-08-28T09:37:45Z,2020-02-21T15:28:11Z,2020-02-21T15:28:11Z,MERGED,True,5,0,1,https://github.com/magiruuvelvet,cmake: make sure the correct linker is used,1,[],https://github.com/darlinghq/darling/pull/555,https://github.com/ahyattdev,6,https://github.com/darlinghq/darling/pull/555#issuecomment-570739248,"I figured out how to make CMake use the correct linker for all the cross compile targets. This patch fixes the issue I opened earlier.
fixes #554","Could this PR be modified with a conditional so that this change is only done if lsb_release -i says Gentoo? Don't want to risk this breaking something on other distros that don't need it.
Also, since you got it working on Gentoo could you kindly provide a command to install dependencies that we can put in the build instructions list?
Examples for other distros are here: https://wiki.darlinghq.org/build_instructions",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,555,2019-08-28T09:37:45Z,2020-02-21T15:28:11Z,2020-02-21T15:28:11Z,MERGED,True,5,0,1,https://github.com/magiruuvelvet,cmake: make sure the correct linker is used,1,[],https://github.com/darlinghq/darling/pull/555,https://github.com/CuriousTommy,7,https://github.com/darlinghq/darling/pull/555#issuecomment-589185836,"I figured out how to make CMake use the correct linker for all the cross compile targets. This patch fixes the issue I opened earlier.
fixes #554",@ahyattdev This patch actually fixed an issue I was having on Manjaro ARM (where the wrong linker was used).,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,555,2019-08-28T09:37:45Z,2020-02-21T15:28:11Z,2020-02-21T15:28:11Z,MERGED,True,5,0,1,https://github.com/magiruuvelvet,cmake: make sure the correct linker is used,1,[],https://github.com/darlinghq/darling/pull/555,https://github.com/ahyattdev,8,https://github.com/darlinghq/darling/pull/555#issuecomment-589701785,"I figured out how to make CMake use the correct linker for all the cross compile targets. This patch fixes the issue I opened earlier.
fixes #554",@CuriousTommy OK I see. Upon further review I see why this is necessary.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,558,2019-08-30T14:53:54Z,2019-09-26T21:44:08Z,2020-01-23T20:05:15Z,MERGED,True,103,0,7,https://github.com/CuriousTommy,Preparations for CFOpenDirectory,2,[],https://github.com/darlinghq/darling/pull/558,https://github.com/CuriousTommy,1,https://github.com/darlinghq/darling/pull/558,"This adds some of the files needed for CFOpenDirectory. Keep in mind that the assigned values are just guesses. I don't know what the true values are. I am also not sure if these variables are even in the right spot.
Let me know if you need me to fix anything.","This adds some of the files needed for CFOpenDirectory. Keep in mind that the assigned values are just guesses. I don't know what the true values are. I am also not sure if these variables are even in the right spot.
Let me know if you need me to fix anything.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,558,2019-08-30T14:53:54Z,2019-09-26T21:44:08Z,2020-01-23T20:05:15Z,MERGED,True,103,0,7,https://github.com/CuriousTommy,Preparations for CFOpenDirectory,2,[],https://github.com/darlinghq/darling/pull/558,https://github.com/ahyattdev,2,https://github.com/darlinghq/darling/pull/558#issuecomment-535697927,"This adds some of the files needed for CFOpenDirectory. Keep in mind that the assigned values are just guesses. I don't know what the true values are. I am also not sure if these variables are even in the right spot.
Let me know if you need me to fix anything.","Looks good, I am going to restructure so there aren't two folders called OpenDirectory and opendirectory, I think the latter was created by me as a mistake a while ago.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,568,2019-09-23T21:46:39Z,2019-11-26T04:51:44Z,2019-11-26T04:51:44Z,MERGED,True,2439,2,72,https://github.com/cassvail,added stub for CoreLocation,1,[],https://github.com/darlinghq/darling/pull/568,https://github.com/cassvail,1,https://github.com/darlinghq/darling/pull/568,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,594,2020-01-02T21:49:26Z,2020-01-03T00:15:43Z,2020-01-03T03:35:58Z,MERGED,True,4,2,3,https://github.com/TheBrokenRail,Fix DEB Build,3,[],https://github.com/darlinghq/darling/pull/594,https://github.com/TheBrokenRail,1,https://github.com/darlinghq/darling/pull/594,Fixes #585,Fixes #585,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,594,2020-01-02T21:49:26Z,2020-01-03T00:15:43Z,2020-01-03T03:35:58Z,MERGED,True,4,2,3,https://github.com/TheBrokenRail,Fix DEB Build,3,[],https://github.com/darlinghq/darling/pull/594,https://github.com/ahyattdev,2,https://github.com/darlinghq/darling/pull/594#issuecomment-570449540,Fixes #585,"Upon testing this the package build fails with this:
make[2]: *** No rule to make target 'printwrapgen'.  Stop.

Investigating now",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,594,2020-01-02T21:49:26Z,2020-01-03T00:15:43Z,2020-01-03T03:35:58Z,MERGED,True,4,2,3,https://github.com/TheBrokenRail,Fix DEB Build,3,[],https://github.com/darlinghq/darling/pull/594,https://github.com/ahyattdev,3,https://github.com/darlinghq/darling/pull/594#issuecomment-570449744,Fixes #585,"That call to make was there before, so not the fault of this PR.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,594,2020-01-02T21:49:26Z,2020-01-03T00:15:43Z,2020-01-03T03:35:58Z,MERGED,True,4,2,3,https://github.com/TheBrokenRail,Fix DEB Build,3,[],https://github.com/darlinghq/darling/pull/594,https://github.com/ahyattdev,4,https://github.com/darlinghq/darling/pull/594#issuecomment-570449960,Fixes #585,Looks like there is an open issue for this  #454,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,596,2020-01-03T01:16:04Z,2020-01-03T23:44:48Z,2020-01-03T23:44:52Z,MERGED,True,1,1,1,https://github.com/TheBrokenRail,Update DEB Build Dependencies,2,[],https://github.com/darlinghq/darling/pull/596,https://github.com/TheBrokenRail,1,https://github.com/darlinghq/darling/pull/596,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,596,2020-01-03T01:16:04Z,2020-01-03T23:44:48Z,2020-01-03T23:44:52Z,MERGED,True,1,1,1,https://github.com/TheBrokenRail,Update DEB Build Dependencies,2,[],https://github.com/darlinghq/darling/pull/596,https://github.com/TheBrokenRail,2,https://github.com/darlinghq/darling/pull/596#issuecomment-570649721,,Done!,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,596,2020-01-03T01:16:04Z,2020-01-03T23:44:48Z,2020-01-03T23:44:52Z,MERGED,True,1,1,1,https://github.com/TheBrokenRail,Update DEB Build Dependencies,2,[],https://github.com/darlinghq/darling/pull/596,https://github.com/ahyattdev,3,https://github.com/darlinghq/darling/pull/596#issuecomment-570731531,,Awesome,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,597,2020-01-03T22:20:30Z,2020-01-03T23:48:13Z,2020-01-03T23:48:13Z,MERGED,True,11,2,2,https://github.com/TheBrokenRail,Clean up Lintian,4,[],https://github.com/darlinghq/darling/pull/597,https://github.com/TheBrokenRail,1,https://github.com/darlinghq/darling/pull/597,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,599,2020-01-04T03:00:11Z,2020-01-04T03:40:21Z,2020-01-04T03:40:21Z,MERGED,True,18,8,5,https://github.com/TheBrokenRail,Fix Lintian Overrides,1,[],https://github.com/darlinghq/darling/pull/599,https://github.com/TheBrokenRail,1,https://github.com/darlinghq/darling/pull/599,This also makes it so you can configure /usr/bin/darling to be PIE because it is in Lintian.,This also makes it so you can configure /usr/bin/darling to be PIE because it is in Lintian.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,603,2020-01-04T04:29:48Z,2020-01-04T04:36:38Z,2020-01-04T04:36:38Z,MERGED,True,3,0,1,https://github.com/TheBrokenRail,Partially Fix #600,1,[],https://github.com/darlinghq/darling/pull/603,https://github.com/TheBrokenRail,1,https://github.com/darlinghq/darling/pull/603,"When building a Debian package src/setup-fonts.sh and src/setup-ld-so.sh are not run as root and fail, which cause the issue. These scripts would be better run during installation instead of packaging.","When building a Debian package src/setup-fonts.sh and src/setup-ld-so.sh are not run as root and fail, which cause the issue. These scripts would be better run during installation instead of packaging.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,604,2020-01-04T04:51:00Z,2020-01-04T04:59:08Z,2020-01-04T04:59:08Z,MERGED,True,1,1,1,https://github.com/TheBrokenRail,Use correct destination directory for Debian build,1,[],https://github.com/darlinghq/darling/pull/604,https://github.com/TheBrokenRail,1,https://github.com/darlinghq/darling/pull/604,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,605,2020-01-04T05:02:38Z,2020-01-04T05:19:15Z,2020-01-04T05:19:15Z,MERGED,True,24,8,4,https://github.com/TheBrokenRail,Setup Fonts and ld.so during DEB installaton,5,[],https://github.com/darlinghq/darling/pull/605,https://github.com/TheBrokenRail,1,https://github.com/darlinghq/darling/pull/605,I stored the scripts in /usr/lib/darling because /usr/libexec/darling is already being used.,I stored the scripts in /usr/lib/darling because /usr/libexec/darling is already being used.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,607,2020-01-04T17:57:05Z,2020-01-04T18:08:09Z,2020-01-04T18:08:09Z,MERGED,True,7,0,1,https://github.com/TheBrokenRail,Add More Lintian Overrides,1,[],https://github.com/darlinghq/darling/pull/607,https://github.com/TheBrokenRail,1,https://github.com/darlinghq/darling/pull/607,This should be all of them.,This should be all of them.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,609,2020-01-04T19:13:31Z,2020-01-08T17:01:49Z,2020-01-08T17:01:49Z,MERGED,True,226,15,11,https://github.com/TheBrokenRail,Add utimensat,4,[],https://github.com/darlinghq/darling/pull/609,https://github.com/TheBrokenRail,1,https://github.com/darlinghq/darling/pull/609,"Fixes #592
Note
While utmensat is implemnted, the underlying syscall getattrlistat doesn't have a implementation and just returns 0 making utimensat do nothing.","Fixes #592
Note
While utmensat is implemnted, the underlying syscall getattrlistat doesn't have a implementation and just returns 0 making utimensat do nothing.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,609,2020-01-04T19:13:31Z,2020-01-08T17:01:49Z,2020-01-08T17:01:49Z,MERGED,True,226,15,11,https://github.com/TheBrokenRail,Add utimensat,4,[],https://github.com/darlinghq/darling/pull/609,https://github.com/TheBrokenRail,2,https://github.com/darlinghq/darling/pull/609#issuecomment-570818358,"Fixes #592
Note
While utmensat is implemnted, the underlying syscall getattrlistat doesn't have a implementation and just returns 0 making utimensat do nothing.","It now fails at:
[ 12%] Linking C shared library libsystem_kernel.dylib
Undefined symbols for architecture x86_64:
  ""_setattrlistat"", referenced from:
      _utimensat in utimensat.o
ld: symbol(s) not found for architecture x86_64
clang: error: linker command failed with exit code 1 (use -v to see invocation)
make[2]: *** [src/kernel/CMakeFiles/system_kernel.dir/build.make:1641: src/kernel/libsystem_kernel.dylib] Error 1
make[1]: *** [CMakeFiles/Makefile2:2198: src/kernel/CMakeFiles/system_kernel.dir/all] Error 2
make: *** [Makefile:130: all] Error 2

It looks like Darling is missing setattrlistat and fsetattrlist.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,609,2020-01-04T19:13:31Z,2020-01-08T17:01:49Z,2020-01-08T17:01:49Z,MERGED,True,226,15,11,https://github.com/TheBrokenRail,Add utimensat,4,[],https://github.com/darlinghq/darling/pull/609,https://github.com/TheBrokenRail,3,https://github.com/darlinghq/darling/pull/609#issuecomment-570827407,"Fixes #592
Note
While utmensat is implemnted, the underlying syscall getattrlistat doesn't have a implementation and just returns 0 making utimensat do nothing.",It works now but the setattrlistat syscall does not have an implementation and always returns 0.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,609,2020-01-04T19:13:31Z,2020-01-08T17:01:49Z,2020-01-08T17:01:49Z,MERGED,True,226,15,11,https://github.com/TheBrokenRail,Add utimensat,4,[],https://github.com/darlinghq/darling/pull/609,https://github.com/TheBrokenRail,4,https://github.com/darlinghq/darling/pull/609#issuecomment-570958174,"Fixes #592
Note
While utmensat is implemnted, the underlying syscall getattrlistat doesn't have a implementation and just returns 0 making utimensat do nothing.",Any comments?,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,612,2020-01-05T02:08:38Z,2020-01-08T03:25:18Z,2020-01-08T03:25:23Z,MERGED,True,7,2,3,https://github.com/TheBrokenRail,Don't run scripts when building DEB,4,[],https://github.com/darlinghq/darling/pull/612,https://github.com/TheBrokenRail,1,https://github.com/darlinghq/darling/pull/612,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,612,2020-01-05T02:08:38Z,2020-01-08T03:25:18Z,2020-01-08T03:25:23Z,MERGED,True,7,2,3,https://github.com/TheBrokenRail,Don't run scripts when building DEB,4,[],https://github.com/darlinghq/darling/pull/612,https://github.com/TheBrokenRail,2,https://github.com/darlinghq/darling/pull/612#issuecomment-570958197,,Any comments?,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,612,2020-01-05T02:08:38Z,2020-01-08T03:25:18Z,2020-01-08T03:25:23Z,MERGED,True,7,2,3,https://github.com/TheBrokenRail,Don't run scripts when building DEB,4,[],https://github.com/darlinghq/darling/pull/612,https://github.com/ahyattdev,3,https://github.com/darlinghq/darling/pull/612#issuecomment-571874871,,looks good to me,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,613,2020-01-05T02:34:13Z,2020-01-08T03:26:36Z,2020-01-08T03:26:36Z,MERGED,True,5,1,1,https://github.com/TheBrokenRail,Fix issue with setup-fonts.sh,1,[],https://github.com/darlinghq/darling/pull/613,https://github.com/TheBrokenRail,1,https://github.com/darlinghq/darling/pull/613,"This solves:
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/70-no-bitmaps.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-khmer.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/64-language-selector-prefer.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/10-sub-pixel-rgb.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/10-sub-pixel-bgr.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/10-hinting-slight.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/10-hinting-none.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/20-unhint-small-dejavu-serif.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/66-lohit-gujarati.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/67-smc-suruma.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/20-unhint-small-dejavu-sans-mono.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/30-droid-noto.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/67-smc-chilanka.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/69-unifont.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/49-sansserif.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/45-latin.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-0-smc-meera.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/69-language-selector-ja.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/66-lohit-assamese.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/67-lohit-malayalam.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/66-lohit-bengali.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-fonts-persian.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/67-smc-dyuthi.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/69-language-selector-zh-sg.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/10-hinting-full.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/20-unhint-small-dejavu-lgc-sans-mono.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/70-force-bitmaps.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/67-smc-anjalioldlipi.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-0-fonts-telu-extra.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/11-lcdfilter-default.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-0-smc-rachana.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/70-yes-bitmaps.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-0-fonts-deva-extra.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/99-language-selector-zh.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/53-monospace-lcd-filter.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/69-language-selector-zh-cn.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/10-sub-pixel-vrgb.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/90-synthetic.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/66-lohit-tamil.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/66-lohit-telugu.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/10-hinting-medium.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/30-metric-aliases.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/20-unhint-small-dejavu-lgc-serif.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/69-language-selector-zh-mo.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/67-smc-keraleeyam.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-0-fonts-gubbi.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/30-droid-noto-mono.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/10-antialias.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/51-local.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/80-delicious.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/60-generic.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/57-dejavu-sans.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-0-fonts-guru-extra.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-0-fonts-pagul.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/50-user.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/10-autohint.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/10-scale-bitmap-fonts.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-0-fonts-orya-extra.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/10-unhinted.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/58-dejavu-lgc-sans.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/11-lcdfilter-legacy.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/10-sub-pixel-vbgr.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/67-fonts-smc-manjari.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/45-generic.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/58-dejavu-lgc-sans-mono.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/30-cjk-aliases.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-0-fonts-beng-extra.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/60-latin.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/66-lohit-tamil-classical.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/20-unhint-small-vera.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-0-fonts-gujr-extra.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/57-dejavu-serif.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/66-lohit-kannada.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/66-lohit-odia.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-nonlatin.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/67-smc-raghumalayalamsans.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/25-unhint-nonlatin.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/57-dejavu-sans-mono.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/20-unhint-small-dejavu-lgc-sans.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/40-nonlatin.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/69-language-selector-zh-hk.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/10-no-sub-pixel.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/20-unhint-small-dejavu-sans.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/67-smc-uroob.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/66-lohit-gurmukhi.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/69-language-selector-zh-tw.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/67-smc-karumbi.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/59-lohit-devanagari.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-droid-sans-fallback.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/11-lcdfilter-light.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/58-dejavu-lgc-serif.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/66-lohit-devanagari.conf: No such file or directory","This solves:
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/70-no-bitmaps.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-khmer.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/64-language-selector-prefer.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/10-sub-pixel-rgb.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/10-sub-pixel-bgr.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/10-hinting-slight.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/10-hinting-none.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/20-unhint-small-dejavu-serif.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/66-lohit-gujarati.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/67-smc-suruma.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/20-unhint-small-dejavu-sans-mono.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/30-droid-noto.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/67-smc-chilanka.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/69-unifont.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/49-sansserif.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/45-latin.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-0-smc-meera.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/69-language-selector-ja.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/66-lohit-assamese.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/67-lohit-malayalam.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/66-lohit-bengali.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-fonts-persian.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/67-smc-dyuthi.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/69-language-selector-zh-sg.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/10-hinting-full.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/20-unhint-small-dejavu-lgc-sans-mono.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/70-force-bitmaps.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/67-smc-anjalioldlipi.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-0-fonts-telu-extra.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/11-lcdfilter-default.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-0-smc-rachana.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/70-yes-bitmaps.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-0-fonts-deva-extra.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/99-language-selector-zh.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/53-monospace-lcd-filter.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/69-language-selector-zh-cn.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/10-sub-pixel-vrgb.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/90-synthetic.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/66-lohit-tamil.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/66-lohit-telugu.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/10-hinting-medium.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/30-metric-aliases.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/20-unhint-small-dejavu-lgc-serif.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/69-language-selector-zh-mo.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/67-smc-keraleeyam.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-0-fonts-gubbi.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/30-droid-noto-mono.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/10-antialias.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/51-local.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/80-delicious.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/60-generic.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/57-dejavu-sans.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-0-fonts-guru-extra.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-0-fonts-pagul.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/50-user.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/10-autohint.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/10-scale-bitmap-fonts.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-0-fonts-orya-extra.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/10-unhinted.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/58-dejavu-lgc-sans.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/11-lcdfilter-legacy.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/10-sub-pixel-vbgr.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/67-fonts-smc-manjari.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/45-generic.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/58-dejavu-lgc-sans-mono.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/30-cjk-aliases.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-0-fonts-beng-extra.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/60-latin.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/66-lohit-tamil-classical.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/20-unhint-small-vera.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-0-fonts-gujr-extra.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/57-dejavu-serif.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/66-lohit-kannada.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/66-lohit-odia.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-nonlatin.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/67-smc-raghumalayalamsans.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/25-unhint-nonlatin.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/57-dejavu-sans-mono.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/20-unhint-small-dejavu-lgc-sans.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/40-nonlatin.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/69-language-selector-zh-hk.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/10-no-sub-pixel.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/20-unhint-small-dejavu-sans.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/67-smc-uroob.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/66-lohit-gurmukhi.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/69-language-selector-zh-tw.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/67-smc-karumbi.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/59-lohit-devanagari.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-droid-sans-fallback.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/11-lcdfilter-light.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/58-dejavu-lgc-serif.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/66-lohit-devanagari.conf: No such file or directory",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,613,2020-01-05T02:34:13Z,2020-01-08T03:26:36Z,2020-01-08T03:26:36Z,MERGED,True,5,1,1,https://github.com/TheBrokenRail,Fix issue with setup-fonts.sh,1,[],https://github.com/darlinghq/darling/pull/613,https://github.com/TheBrokenRail,2,https://github.com/darlinghq/darling/pull/613#issuecomment-570958208,"This solves:
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/70-no-bitmaps.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-khmer.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/64-language-selector-prefer.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/10-sub-pixel-rgb.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/10-sub-pixel-bgr.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/10-hinting-slight.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/10-hinting-none.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/20-unhint-small-dejavu-serif.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/66-lohit-gujarati.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/67-smc-suruma.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/20-unhint-small-dejavu-sans-mono.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/30-droid-noto.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/67-smc-chilanka.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/69-unifont.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/49-sansserif.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/45-latin.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-0-smc-meera.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/69-language-selector-ja.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/66-lohit-assamese.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/67-lohit-malayalam.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/66-lohit-bengali.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-fonts-persian.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/67-smc-dyuthi.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/69-language-selector-zh-sg.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/10-hinting-full.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/20-unhint-small-dejavu-lgc-sans-mono.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/70-force-bitmaps.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/67-smc-anjalioldlipi.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-0-fonts-telu-extra.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/11-lcdfilter-default.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-0-smc-rachana.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/70-yes-bitmaps.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-0-fonts-deva-extra.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/99-language-selector-zh.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/53-monospace-lcd-filter.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/69-language-selector-zh-cn.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/10-sub-pixel-vrgb.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/90-synthetic.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/66-lohit-tamil.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/66-lohit-telugu.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/10-hinting-medium.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/30-metric-aliases.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/20-unhint-small-dejavu-lgc-serif.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/69-language-selector-zh-mo.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/67-smc-keraleeyam.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-0-fonts-gubbi.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/30-droid-noto-mono.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/10-antialias.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/51-local.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/80-delicious.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/60-generic.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/57-dejavu-sans.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-0-fonts-guru-extra.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-0-fonts-pagul.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/50-user.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/10-autohint.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/10-scale-bitmap-fonts.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-0-fonts-orya-extra.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/10-unhinted.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/58-dejavu-lgc-sans.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/11-lcdfilter-legacy.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/10-sub-pixel-vbgr.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/67-fonts-smc-manjari.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/45-generic.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/58-dejavu-lgc-sans-mono.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/30-cjk-aliases.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-0-fonts-beng-extra.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/60-latin.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/66-lohit-tamil-classical.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/20-unhint-small-vera.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-0-fonts-gujr-extra.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/57-dejavu-serif.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/66-lohit-kannada.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/66-lohit-odia.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-nonlatin.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/67-smc-raghumalayalamsans.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/25-unhint-nonlatin.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/57-dejavu-sans-mono.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/20-unhint-small-dejavu-lgc-sans.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/40-nonlatin.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/69-language-selector-zh-hk.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/10-no-sub-pixel.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/20-unhint-small-dejavu-sans.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/67-smc-uroob.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/66-lohit-gurmukhi.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/69-language-selector-zh-tw.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/67-smc-karumbi.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/59-lohit-devanagari.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/65-droid-sans-fallback.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/11-lcdfilter-light.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/58-dejavu-lgc-serif.conf: No such file or directory
/usr/lib/darling/setup-fonts.sh: line 9: ./etc/fonts/conf.avail/66-lohit-devanagari.conf: No such file or directory",Any comments?,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,619,2020-01-09T19:36:37Z,2020-01-09T23:34:36Z,2020-01-09T23:34:36Z,MERGED,True,1,0,1,https://github.com/TheBrokenRail,Add Last Lintian,1,[],https://github.com/darlinghq/darling/pull/619,https://github.com/TheBrokenRail,1,https://github.com/darlinghq/darling/pull/619,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,621,2020-01-10T04:21:17Z,2020-01-10T04:45:42Z,2020-01-10T04:45:42Z,MERGED,True,8,1,1,https://github.com/TheBrokenRail,Allow Building DSC,1,[],https://github.com/darlinghq/darling/pull/621,https://github.com/TheBrokenRail,1,https://github.com/darlinghq/darling/pull/621,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,622,2020-01-10T13:05:00Z,2020-01-10T13:06:41Z,2020-01-10T13:06:41Z,MERGED,True,1,1,1,https://github.com/TheBrokenRail,Fix DSC Build,1,[],https://github.com/darlinghq/darling/pull/622,https://github.com/TheBrokenRail,1,https://github.com/darlinghq/darling/pull/622,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,623,2020-01-10T13:26:06Z,2020-01-10T17:06:04Z,2020-01-10T17:06:04Z,MERGED,True,4,0,1,https://github.com/TheBrokenRail,Produce Upstream Tarball (DSC),1,[],https://github.com/darlinghq/darling/pull/623,https://github.com/TheBrokenRail,1,https://github.com/darlinghq/darling/pull/623,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,623,2020-01-10T13:26:06Z,2020-01-10T17:06:04Z,2020-01-10T17:06:04Z,MERGED,True,4,0,1,https://github.com/TheBrokenRail,Produce Upstream Tarball (DSC),1,[],https://github.com/darlinghq/darling/pull/623,https://github.com/TheBrokenRail,2,https://github.com/darlinghq/darling/pull/623#issuecomment-573095049,,This is for the DSC build (source package) run before debuild but after debian/changelog is generated so the build tree should be clean.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,623,2020-01-10T13:26:06Z,2020-01-10T17:06:04Z,2020-01-10T17:06:04Z,MERGED,True,4,0,1,https://github.com/TheBrokenRail,Produce Upstream Tarball (DSC),1,[],https://github.com/darlinghq/darling/pull/623,https://github.com/ahyattdev,3,https://github.com/darlinghq/darling/pull/623#issuecomment-573120802,,"OK, but those who have a previous build folder that are using this to get the Debian source package will just need to be aware that it will scoop that up too.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,624,2020-01-10T17:12:57Z,2020-01-10T17:56:40Z,2020-01-10T17:56:40Z,MERGED,True,2,1,1,https://github.com/TheBrokenRail,Use .gitignore DSC,1,[],https://github.com/darlinghq/darling/pull/624,https://github.com/TheBrokenRail,1,https://github.com/darlinghq/darling/pull/624,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,624,2020-01-10T17:12:57Z,2020-01-10T17:56:40Z,2020-01-10T17:56:40Z,MERGED,True,2,1,1,https://github.com/TheBrokenRail,Use .gitignore DSC,1,[],https://github.com/darlinghq/darling/pull/624,https://github.com/ahyattdev,2,https://github.com/darlinghq/darling/pull/624#issuecomment-573140242,,Very cool that tar can do that!,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,625,2020-01-10T23:20:43Z,2020-01-10T23:23:39Z,2020-01-10T23:23:39Z,MERGED,True,5,1,2,https://github.com/TheBrokenRail,Add Source Lintian Overrides,2,[],https://github.com/darlinghq/darling/pull/625,https://github.com/TheBrokenRail,1,https://github.com/darlinghq/darling/pull/625,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,626,2020-01-10T23:53:33Z,2020-01-11T00:02:26Z,2020-01-11T00:02:26Z,MERGED,True,3,2,1,https://github.com/TheBrokenRail,"Fix ""Cannot Update Compressed Archives""",1,[],https://github.com/darlinghq/darling/pull/626,https://github.com/TheBrokenRail,1,https://github.com/darlinghq/darling/pull/626,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,627,2020-01-11T01:44:10Z,2020-01-12T00:33:15Z,2020-01-12T00:33:15Z,MERGED,True,10,8,4,https://github.com/TheBrokenRail,--exclude-vcs Breaks the DSC Build,6,[],https://github.com/darlinghq/darling/pull/627,https://github.com/TheBrokenRail,1,https://github.com/darlinghq/darling/pull/627,"Because some submodues have files that would have been gitignored in the main repo, but aren't in their repo, the build fails, because the archive and folder are different.","Because some submodues have files that would have been gitignored in the main repo, but aren't in their repo, the build fails, because the archive and folder are different.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,627,2020-01-11T01:44:10Z,2020-01-12T00:33:15Z,2020-01-12T00:33:15Z,MERGED,True,10,8,4,https://github.com/TheBrokenRail,--exclude-vcs Breaks the DSC Build,6,[],https://github.com/darlinghq/darling/pull/627,https://github.com/TheBrokenRail,2,https://github.com/darlinghq/darling/pull/627#issuecomment-573359709,"Because some submodues have files that would have been gitignored in the main repo, but aren't in their repo, the build fails, because the archive and folder are different.",Any updates?,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,627,2020-01-11T01:44:10Z,2020-01-12T00:33:15Z,2020-01-12T00:33:15Z,MERGED,True,10,8,4,https://github.com/TheBrokenRail,--exclude-vcs Breaks the DSC Build,6,[],https://github.com/darlinghq/darling/pull/627,https://github.com/ahyattdev,3,https://github.com/darlinghq/darling/pull/627#issuecomment-573360496,"Because some submodues have files that would have been gitignored in the main repo, but aren't in their repo, the build fails, because the archive and folder are different.","How many submodules have their own .gitignore?
If it isn't too many a simple workaround could be taking the contents of each submodule .gitignore and adding them to the main .gitignore.
For example, the .gitignore of src/lkm would go into the main .gitignore as:
src/lkm/*.o
src/lkm/*.cmd

src/lkm/.tmp_versions
src/lkm/Module.symvers
src/lkm/*.ko
src/lkm/*.mod.c
src/lkm/modules.order
src/lkm/.cache.mk

src/lkm/*.o.ur-safe",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,627,2020-01-11T01:44:10Z,2020-01-12T00:33:15Z,2020-01-12T00:33:15Z,MERGED,True,10,8,4,https://github.com/TheBrokenRail,--exclude-vcs Breaks the DSC Build,6,[],https://github.com/darlinghq/darling/pull/627,https://github.com/TheBrokenRail,4,https://github.com/darlinghq/darling/pull/627#issuecomment-573364601,"Because some submodues have files that would have been gitignored in the main repo, but aren't in their repo, the build fails, because the archive and folder are different.","The big issue is that some files that might be ignored in the main repo, exist in the sub-modules, so the tar archive, does not have some files, which the main directory has, which causes the build to fail.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,628,2020-01-13T20:02:42Z,2020-01-13T20:53:24Z,2020-01-13T21:07:01Z,MERGED,True,6,1,2,https://github.com/TheBrokenRail,Fix Build-Depends,2,[],https://github.com/darlinghq/darling/pull/628,https://github.com/TheBrokenRail,1,https://github.com/darlinghq/darling/pull/628,The python2 package is only available on Ubuntu 19.04 and above and the python package is always available and also Python 2.,The python2 package is only available on Ubuntu 19.04 and above and the python package is always available and also Python 2.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,628,2020-01-13T20:02:42Z,2020-01-13T20:53:24Z,2020-01-13T21:07:01Z,MERGED,True,6,1,2,https://github.com/TheBrokenRail,Fix Build-Depends,2,[],https://github.com/darlinghq/darling/pull/628,https://github.com/ahyattdev,2,https://github.com/darlinghq/darling/pull/628#issuecomment-573865133,The python2 package is only available on Ubuntu 19.04 and above and the python package is always available and also Python 2.,"LGTM, we will need to change it back when distros start making python default to python3",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,628,2020-01-13T20:02:42Z,2020-01-13T20:53:24Z,2020-01-13T21:07:01Z,MERGED,True,6,1,2,https://github.com/TheBrokenRail,Fix Build-Depends,2,[],https://github.com/darlinghq/darling/pull/628,https://github.com/TheBrokenRail,3,https://github.com/darlinghq/darling/pull/628#issuecomment-573870759,The python2 package is only available on Ubuntu 19.04 and above and the python package is always available and also Python 2.,For now both Ubuntu 19.10 and 18.04 have python as python2.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,646,2020-01-30T02:53:46Z,2020-01-30T07:41:27Z,2020-01-30T07:41:27Z,MERGED,True,3,3,1,https://github.com/williamtheaker,Update copyright year in shell,1,[],https://github.com/darlinghq/darling/pull/646,https://github.com/williamtheaker,1,https://github.com/darlinghq/darling/pull/646,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,650,2020-02-08T18:41:19Z,2020-02-08T18:46:14Z,2020-02-08T18:46:14Z,MERGED,True,0,15,3,https://github.com/TheBrokenRail,[VCHROOT] Fix Debian Packaging,3,[],https://github.com/darlinghq/darling/pull/650,https://github.com/TheBrokenRail,1,https://github.com/darlinghq/darling/pull/650,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,651,2020-02-09T00:34:10Z,2020-02-09T01:15:53Z,2020-02-09T01:15:53Z,MERGED,True,0,1,1,https://github.com/TheBrokenRail,[VCHROOT] Remove Unused Override,1,[],https://github.com/darlinghq/darling/pull/651,https://github.com/TheBrokenRail,1,https://github.com/darlinghq/darling/pull/651,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,656,2020-02-14T22:48:33Z,2020-02-15T00:34:24Z,2020-02-15T00:34:59Z,MERGED,True,1,1,1,https://github.com/CuriousTommy,Update corecrypto to Include Relative URL Fix,1,[],https://github.com/darlinghq/darling/pull/656,https://github.com/CuriousTommy,1,https://github.com/darlinghq/darling/pull/656,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,661,2020-02-16T03:59:58Z,2020-02-16T14:32:42Z,2020-04-11T15:56:28Z,CLOSED,False,65,0,3,https://github.com/TheBrokenRail,Add open Command,1,[],https://github.com/darlinghq/darling/pull/661,https://github.com/TheBrokenRail,1,https://github.com/darlinghq/darling/pull/661,"This should make it easier for users to open GUI programs. Note, currently it is very basic, and does not support much functionality.","This should make it easier for users to open GUI programs. Note, currently it is very basic, and does not support much functionality.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,661,2020-02-16T03:59:58Z,2020-02-16T14:32:42Z,2020-04-11T15:56:28Z,CLOSED,False,65,0,3,https://github.com/TheBrokenRail,Add open Command,1,[],https://github.com/darlinghq/darling/pull/661,https://github.com/bugaevc,2,https://github.com/darlinghq/darling/pull/661#issuecomment-586676606,"This should make it easier for users to open GUI programs. Note, currently it is very basic, and does not support much functionality.","I'm sorry but this is not how a proper open would look like. First of all it'd be a part of LaunchServices, not its own thing (so at the very least that directory should exist, and it should be in that directory).
Then open should open a lot more than just app-s. See #43 and the existing code in https://github.com/darlinghq/darling/blob/master/src/frameworks/CoreServices/LaunchServices.cpp",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,661,2020-02-16T03:59:58Z,2020-02-16T14:32:42Z,2020-04-11T15:56:28Z,CLOSED,False,65,0,3,https://github.com/TheBrokenRail,Add open Command,1,[],https://github.com/darlinghq/darling/pull/661,https://github.com/TheBrokenRail,3,https://github.com/darlinghq/darling/pull/661#issuecomment-586713801,"This should make it easier for users to open GUI programs. Note, currently it is very basic, and does not support much functionality.","Oh, OK.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,661,2020-02-16T03:59:58Z,2020-02-16T14:32:42Z,2020-04-11T15:56:28Z,CLOSED,False,65,0,3,https://github.com/TheBrokenRail,Add open Command,1,[],https://github.com/darlinghq/darling/pull/661,https://github.com/mritunjaymusale,4,https://github.com/darlinghq/darling/pull/661#issuecomment-608988706,"This should make it easier for users to open GUI programs. Note, currently it is very basic, and does not support much functionality.","I tried to run this using open but I got
React%20Studio.app/Contents/MacOS/React%20Studio: Failed to spawn via launchd",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,661,2020-02-16T03:59:58Z,2020-02-16T14:32:42Z,2020-04-11T15:56:28Z,CLOSED,False,65,0,3,https://github.com/TheBrokenRail,Add open Command,1,[],https://github.com/darlinghq/darling/pull/661,https://github.com/ahyattdev,5,https://github.com/darlinghq/darling/pull/661#issuecomment-612452409,"This should make it easier for users to open GUI programs. Note, currently it is very basic, and does not support much functionality.",@mritunjaymusale unfortunately that's where it's stuck now. #425 tracks it,True,{'THUMBS_UP': ['https://github.com/mritunjaymusale']}
darlinghq/darling,https://github.com/darlinghq/darling,662,2020-02-16T16:45:50Z,2020-02-16T21:06:47Z,2020-02-16T21:06:47Z,MERGED,True,1,1,1,https://github.com/TheBrokenRail,Update DEB Dependencies,1,[],https://github.com/darlinghq/darling/pull/662,https://github.com/TheBrokenRail,1,https://github.com/darlinghq/darling/pull/662,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,663,2020-02-16T17:26:18Z,2020-02-17T08:02:50Z,2020-02-17T08:02:50Z,MERGED,True,46,46,42,https://github.com/TheBrokenRail,Move LKM to src/external,4,[],https://github.com/darlinghq/darling/pull/663,https://github.com/TheBrokenRail,1,https://github.com/darlinghq/darling/pull/663,"Fixes #645
Related PRs:

 darlinghq/darling-iokituser#1
  darlinghq/darling-libkqueue#2","Fixes #645
Related PRs:

 darlinghq/darling-iokituser#1
  darlinghq/darling-libkqueue#2",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,663,2020-02-16T17:26:18Z,2020-02-17T08:02:50Z,2020-02-17T08:02:50Z,MERGED,True,46,46,42,https://github.com/TheBrokenRail,Move LKM to src/external,4,[],https://github.com/darlinghq/darling/pull/663,https://github.com/bugaevc,2,https://github.com/darlinghq/darling/pull/663#issuecomment-586735116,"Fixes #645
Related PRs:

 darlinghq/darling-iokituser#1
  darlinghq/darling-libkqueue#2","Does it build like this? Because there are relative file paths to the LKM, e.g. here:

  
    
      darling/src/kernel/emulation/linux/mach/lkm.c
    
    
         Line 2
      in
      05f513a
    
  
  
    

        
          
           #include ""../../lkm/api.h""",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,663,2020-02-16T17:26:18Z,2020-02-17T08:02:50Z,2020-02-17T08:02:50Z,MERGED,True,46,46,42,https://github.com/TheBrokenRail,Move LKM to src/external,4,[],https://github.com/darlinghq/darling/pull/663,https://github.com/TheBrokenRail,3,https://github.com/darlinghq/darling/pull/663#issuecomment-586747867,"Fixes #645
Related PRs:

 darlinghq/darling-iokituser#1
  darlinghq/darling-libkqueue#2",It seems to build now!,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,663,2020-02-16T17:26:18Z,2020-02-17T08:02:50Z,2020-02-17T08:02:50Z,MERGED,True,46,46,42,https://github.com/TheBrokenRail,Move LKM to src/external,4,[],https://github.com/darlinghq/darling/pull/663,https://github.com/ahyattdev,4,https://github.com/darlinghq/darling/pull/663#issuecomment-586789569,"Fixes #645
Related PRs:

 darlinghq/darling-iokituser#1
  darlinghq/darling-libkqueue#2",Since @LubosD knows this best I have requested his review.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,664,2020-02-16T17:53:54Z,2020-02-17T07:59:54Z,2020-02-17T07:59:54Z,MERGED,True,3,48,4,https://github.com/TheBrokenRail,Remove FRAMEWORK_* Options,1,[],https://github.com/darlinghq/darling/pull/664,https://github.com/TheBrokenRail,1,https://github.com/darlinghq/darling/pull/664,Fixes #601,Fixes #601,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,664,2020-02-16T17:53:54Z,2020-02-17T07:59:54Z,2020-02-17T07:59:54Z,MERGED,True,3,48,4,https://github.com/TheBrokenRail,Remove FRAMEWORK_* Options,1,[],https://github.com/darlinghq/darling/pull/664,https://github.com/LubosD,2,https://github.com/darlinghq/darling/pull/664#issuecomment-586862335,Fixes #601,I will merge this and reimplement CoreAudio support in a feature branch.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,667,2020-02-16T23:17:06Z,2020-04-13T12:18:09Z,2020-04-13T12:18:09Z,MERGED,True,92,0,2,https://github.com/stephengroat,Using Github Actions to build,12,[],https://github.com/darlinghq/darling/pull/667,https://github.com/stephengroat,1,https://github.com/darlinghq/darling/pull/667,see https://github.com/stephengroat/darling/runs/449450231?check_suite_focus=true for example,see https://github.com/stephengroat/darling/runs/449450231?check_suite_focus=true for example,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,667,2020-02-16T23:17:06Z,2020-04-13T12:18:09Z,2020-04-13T12:18:09Z,MERGED,True,92,0,2,https://github.com/stephengroat,Using Github Actions to build,12,[],https://github.com/darlinghq/darling/pull/667,https://github.com/TheBrokenRail,2,https://github.com/darlinghq/darling/pull/667#issuecomment-586769974,see https://github.com/stephengroat/darling/runs/449450231?check_suite_focus=true for example,"Could you make this also build the DEB package? Also, .gitmodules used.. instead of the full path so you could use SSH or HTTPS and it would adjust automatically, for testing you should use git remote set-url for testing instead of changing .gitmodules.",True,"{'THUMBS_UP': ['https://github.com/stephengroat', 'https://github.com/CuriousTommy']}"
darlinghq/darling,https://github.com/darlinghq/darling,667,2020-02-16T23:17:06Z,2020-04-13T12:18:09Z,2020-04-13T12:18:09Z,MERGED,True,92,0,2,https://github.com/stephengroat,Using Github Actions to build,12,[],https://github.com/darlinghq/darling/pull/667,https://github.com/stephengroat,3,https://github.com/darlinghq/darling/pull/667#issuecomment-586772392,see https://github.com/stephengroat/darling/runs/449450231?check_suite_focus=true for example,"@TheBrokenRail I can always try, let me try to address building the deb and using git remote set-url instead of editing .gitmodules",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,667,2020-02-16T23:17:06Z,2020-04-13T12:18:09Z,2020-04-13T12:18:09Z,MERGED,True,92,0,2,https://github.com/stephengroat,Using Github Actions to build,12,[],https://github.com/darlinghq/darling/pull/667,https://github.com/stephengroat,4,https://github.com/darlinghq/darling/pull/667#issuecomment-586783050,see https://github.com/stephengroat/darling/runs/449450231?check_suite_focus=true for example,"don't see any instruction on how to use the tools/makedeb script, can you point me to any examples?",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,667,2020-02-16T23:17:06Z,2020-04-13T12:18:09Z,2020-04-13T12:18:09Z,MERGED,True,92,0,2,https://github.com/stephengroat,Using Github Actions to build,12,[],https://github.com/darlinghq/darling/pull/667,https://github.com/TheBrokenRail,5,https://github.com/darlinghq/darling/pull/667#issuecomment-586784517,see https://github.com/stephengroat/darling/runs/449450231?check_suite_focus=true for example,Just run tools/makedeb and DEBs are output in .. (the odd directory seems to be a technical limitation).,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,667,2020-02-16T23:17:06Z,2020-04-13T12:18:09Z,2020-04-13T12:18:09Z,MERGED,True,92,0,2,https://github.com/stephengroat,Using Github Actions to build,12,[],https://github.com/darlinghq/darling/pull/667,https://github.com/ahyattdev,6,https://github.com/darlinghq/darling/pull/667#issuecomment-586790877,see https://github.com/stephengroat/darling/runs/449450231?check_suite_focus=true for example,I have hardware that could host a Jenkins instance for the project if we want faster builds.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,667,2020-02-16T23:17:06Z,2020-04-13T12:18:09Z,2020-04-13T12:18:09Z,MERGED,True,92,0,2,https://github.com/stephengroat,Using Github Actions to build,12,[],https://github.com/darlinghq/darling/pull/667,https://github.com/TheBrokenRail,7,https://github.com/darlinghq/darling/pull/667#issuecomment-586797359,see https://github.com/stephengroat/darling/runs/449450231?check_suite_focus=true for example,Can you upload the DEBs as artifacts? They are output in ...,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,667,2020-02-16T23:17:06Z,2020-04-13T12:18:09Z,2020-04-13T12:18:09Z,MERGED,True,92,0,2,https://github.com/stephengroat,Using Github Actions to build,12,[],https://github.com/darlinghq/darling/pull/667,https://github.com/TheBrokenRail,8,https://github.com/darlinghq/darling/pull/667#issuecomment-587078658,see https://github.com/stephengroat/darling/runs/449450231?check_suite_focus=true for example,Here is some information about uploading artifacts: https://help.github.com/en/actions/configuring-and-managing-workflows/persisting-workflow-data-using-artifacts#uploading-build-and-test-artifacts.,True,{'THUMBS_UP': ['https://github.com/stephengroat']}
darlinghq/darling,https://github.com/darlinghq/darling,667,2020-02-16T23:17:06Z,2020-04-13T12:18:09Z,2020-04-13T12:18:09Z,MERGED,True,92,0,2,https://github.com/stephengroat,Using Github Actions to build,12,[],https://github.com/darlinghq/darling/pull/667,https://github.com/stephengroat,9,https://github.com/darlinghq/darling/pull/667#issuecomment-587082318,see https://github.com/stephengroat/darling/runs/449450231?check_suite_focus=true for example,"not going to be able to do a seperate mkdir build && cd build && cmake .. && cmake along with a tools/makedeb, disk space is limited.
to speed up the build, would using ccache on the system via cmake be an issue? something like this:
find_program(CCACHE_PROGRAM ccache)
if(CCACHE_PROGRAM)
    set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE ""${CCACHE_PROGRAM}"")
endif()",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,667,2020-02-16T23:17:06Z,2020-04-13T12:18:09Z,2020-04-13T12:18:09Z,MERGED,True,92,0,2,https://github.com/stephengroat,Using Github Actions to build,12,[],https://github.com/darlinghq/darling/pull/667,https://github.com/TheBrokenRail,10,https://github.com/darlinghq/darling/pull/667#issuecomment-587086154,see https://github.com/stephengroat/darling/runs/449450231?check_suite_focus=true for example,Tris could also be configured to build a source package with tools/makedeb --dsc and then upload it to a Launchpad PPA using dput.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,667,2020-02-16T23:17:06Z,2020-04-13T12:18:09Z,2020-04-13T12:18:09Z,MERGED,True,92,0,2,https://github.com/stephengroat,Using Github Actions to build,12,[],https://github.com/darlinghq/darling/pull/667,https://github.com/TheBrokenRail,11,https://github.com/darlinghq/darling/pull/667#issuecomment-587217392,see https://github.com/stephengroat/darling/runs/449450231?check_suite_focus=true for example,"You should generate the source package before the binary package so the source package doesn't contains the binary paclage data and has clean build tree. Also, do you have any plans to upload the DEB artifacts or upload the source package to Launchpad?",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,667,2020-02-16T23:17:06Z,2020-04-13T12:18:09Z,2020-04-13T12:18:09Z,MERGED,True,92,0,2,https://github.com/stephengroat,Using Github Actions to build,12,[],https://github.com/darlinghq/darling/pull/667,https://github.com/TheBrokenRail,12,https://github.com/darlinghq/darling/pull/667#issuecomment-587236158,see https://github.com/stephengroat/darling/runs/449450231?check_suite_focus=true for example,"To upload to Launchpad you would need to upload a GPG key that can access your PPA to the repository like this: https://help.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets. The you need to make sure you set DEB_EMAIL to the email of that GPG key, and make sure you set DEB_DiSTRO to your target distrobution. Then, use debsign to sign the DSC like debsign ../darling_*_source.changes. Finally, upload to Launchpad with dput -f ppa:<PPA> ../darling_*_source.changes.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,667,2020-02-16T23:17:06Z,2020-04-13T12:18:09Z,2020-04-13T12:18:09Z,MERGED,True,92,0,2,https://github.com/stephengroat,Using Github Actions to build,12,[],https://github.com/darlinghq/darling/pull/667,https://github.com/stephengroat,13,https://github.com/darlinghq/darling/pull/667#issuecomment-588343358,see https://github.com/stephengroat/darling/runs/449450231?check_suite_focus=true for example,"@TheBrokenRail doing artifacts using Github Actions until the v2 is going to be hard since it doesn't support wildcard patterns yet (see https://github.com/actions/upload-artifact/tree/konradpabjan/v2-is-almost-here).
Want to wait to merge or just leave that feature out for right now?",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,667,2020-02-16T23:17:06Z,2020-04-13T12:18:09Z,2020-04-13T12:18:09Z,MERGED,True,92,0,2,https://github.com/stephengroat,Using Github Actions to build,12,[],https://github.com/darlinghq/darling/pull/667,https://github.com/TheBrokenRail,14,https://github.com/darlinghq/darling/pull/667#issuecomment-588390210,see https://github.com/stephengroat/darling/runs/449450231?check_suite_focus=true for example,Maybe copy the DEBs into a folder using cp and then make that folder the artifact?,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,667,2020-02-16T23:17:06Z,2020-04-13T12:18:09Z,2020-04-13T12:18:09Z,MERGED,True,92,0,2,https://github.com/stephengroat,Using Github Actions to build,12,[],https://github.com/darlinghq/darling/pull/667,https://github.com/TheBrokenRail,15,https://github.com/darlinghq/darling/pull/667#issuecomment-588390556,see https://github.com/stephengroat/darling/runs/449450231?check_suite_focus=true for example,"Also, uploading to Launchpad wouldn't need Github Artifacts at all.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,667,2020-02-16T23:17:06Z,2020-04-13T12:18:09Z,2020-04-13T12:18:09Z,MERGED,True,92,0,2,https://github.com/stephengroat,Using Github Actions to build,12,[],https://github.com/darlinghq/darling/pull/667,https://github.com/ahyattdev,16,https://github.com/darlinghq/darling/pull/667#issuecomment-589712514,see https://github.com/stephengroat/darling/runs/449450231?check_suite_focus=true for example,Merging this would add a dependency for the whole project. What does ccache do for us here?,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,667,2020-02-16T23:17:06Z,2020-04-13T12:18:09Z,2020-04-13T12:18:09Z,MERGED,True,92,0,2,https://github.com/stephengroat,Using Github Actions to build,12,[],https://github.com/darlinghq/darling/pull/667,https://github.com/stephengroat,17,https://github.com/darlinghq/darling/pull/667#issuecomment-589725726,see https://github.com/stephengroat/darling/runs/449450231?check_suite_focus=true for example,"Merging this would add a dependency for the whole project. What does ccache do for us here?

@ahyattdev ccache is optional (only used if installed on the system, doesn't fail out otherwise) and provide c caching to speed up builds when possible",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,667,2020-02-16T23:17:06Z,2020-04-13T12:18:09Z,2020-04-13T12:18:09Z,MERGED,True,92,0,2,https://github.com/stephengroat,Using Github Actions to build,12,[],https://github.com/darlinghq/darling/pull/667,https://github.com/TheBrokenRail,18,https://github.com/darlinghq/darling/pull/667#issuecomment-589831559,see https://github.com/stephengroat/darling/runs/449450231?check_suite_focus=true for example,"I meant like:
- name: Move DEBs
  run: mkdir dist; cp ../*.deb dist
- name: Upload Artifacts
  uses: actions/upload-artifact@v1
  with:
    name: 'debs'
    path: dist",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,667,2020-02-16T23:17:06Z,2020-04-13T12:18:09Z,2020-04-13T12:18:09Z,MERGED,True,92,0,2,https://github.com/stephengroat,Using Github Actions to build,12,[],https://github.com/darlinghq/darling/pull/667,https://github.com/TheBrokenRail,19,https://github.com/darlinghq/darling/pull/667#issuecomment-589849067,see https://github.com/stephengroat/darling/runs/449450231?check_suite_focus=true for example,"For Launchpad you could do:
env:
  DEB_EMAIL: <Emaill for GPG Key>
  DEB_DISTRO: <Ubuntu Distro Launchpad Should Build For (for example: ""eoan"")>
...
- name: Generate DSC
  run: tools/makedeb --dsc
- name: Import GPG Key
  run: echo ""${{ secrets.GPG_PRIVATE_KEY }}"" | gpg --import > /dev/null
- name: Sign DSC
  run: debsign -e ""${{ env.DEB_EMAIL }}"" ../darling_*_source.changes
- name: Upload DSC
  run: dput -f ppa:<PPA> ../darling_*_source.changes",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,667,2020-02-16T23:17:06Z,2020-04-13T12:18:09Z,2020-04-13T12:18:09Z,MERGED,True,92,0,2,https://github.com/stephengroat,Using Github Actions to build,12,[],https://github.com/darlinghq/darling/pull/667,https://github.com/bugaevc,20,https://github.com/darlinghq/darling/pull/667#issuecomment-589968972,see https://github.com/stephengroat/darling/runs/449450231?check_suite_focus=true for example,How about we start with convincing yourselves we actually want to use / rely on GitHub Actions / Launchpad?,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,667,2020-02-16T23:17:06Z,2020-04-13T12:18:09Z,2020-04-13T12:18:09Z,MERGED,True,92,0,2,https://github.com/stephengroat,Using Github Actions to build,12,[],https://github.com/darlinghq/darling/pull/667,https://github.com/TheBrokenRail,21,https://github.com/darlinghq/darling/pull/667#issuecomment-589970308,see https://github.com/stephengroat/darling/runs/449450231?check_suite_focus=true for example,"The main argument for it would be that any Ubuntu/Debian users can just download the latest build of Darling instead of having to build it themselves. Also, it will automatically test if it can build correctly on Ubuntu.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,667,2020-02-16T23:17:06Z,2020-04-13T12:18:09Z,2020-04-13T12:18:09Z,MERGED,True,92,0,2,https://github.com/stephengroat,Using Github Actions to build,12,[],https://github.com/darlinghq/darling/pull/667,https://github.com/tech234a,22,https://github.com/darlinghq/darling/pull/667#issuecomment-589985610,see https://github.com/stephengroat/darling/runs/449450231?check_suite_focus=true for example,Would uploading to Launchpad create a PPA for Ubuntu users to automatically update?,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,667,2020-02-16T23:17:06Z,2020-04-13T12:18:09Z,2020-04-13T12:18:09Z,MERGED,True,92,0,2,https://github.com/stephengroat,Using Github Actions to build,12,[],https://github.com/darlinghq/darling/pull/667,https://github.com/TheBrokenRail,23,https://github.com/darlinghq/darling/pull/667#issuecomment-589987398,see https://github.com/stephengroat/darling/runs/449450231?check_suite_focus=true for example,Yes,True,{'THUMBS_UP': ['https://github.com/tech234a']}
darlinghq/darling,https://github.com/darlinghq/darling,667,2020-02-16T23:17:06Z,2020-04-13T12:18:09Z,2020-04-13T12:18:09Z,MERGED,True,92,0,2,https://github.com/stephengroat,Using Github Actions to build,12,[],https://github.com/darlinghq/darling/pull/667,https://github.com/stephengroat,24,https://github.com/darlinghq/darling/pull/667#issuecomment-592154990,see https://github.com/stephengroat/darling/runs/449450231?check_suite_focus=true for example,"Running out of disk space when trying to move and compress devs
Someone with PPA access will probably have to prototype the uploading with keys, maintainers can feel free to edit the branch and see the runs on https://github.com/stephengroat/darling/actions",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,667,2020-02-16T23:17:06Z,2020-04-13T12:18:09Z,2020-04-13T12:18:09Z,MERGED,True,92,0,2,https://github.com/stephengroat,Using Github Actions to build,12,[],https://github.com/darlinghq/darling/pull/667,https://github.com/LubosD,25,https://github.com/darlinghq/darling/pull/667#issuecomment-592989132,see https://github.com/stephengroat/darling/runs/449450231?check_suite_focus=true for example,"If it is running out of disk space, we could use Travis instead. Travis provides 24GB, which should be enough for now.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,667,2020-02-16T23:17:06Z,2020-04-13T12:18:09Z,2020-04-13T12:18:09Z,MERGED,True,92,0,2,https://github.com/stephengroat,Using Github Actions to build,12,[],https://github.com/darlinghq/darling/pull/667,https://github.com/stephengroat,26,https://github.com/darlinghq/darling/pull/667#issuecomment-592993364,see https://github.com/stephengroat/darling/runs/449450231?check_suite_focus=true for example,"If it is running out of disk space, we could use Travis instead. Travis provides 24GB, which should be enough for now.

Travis CI runtime limits are too low (1 hr) so the build will timeout before it completes",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,667,2020-02-16T23:17:06Z,2020-04-13T12:18:09Z,2020-04-13T12:18:09Z,MERGED,True,92,0,2,https://github.com/stephengroat,Using Github Actions to build,12,[],https://github.com/darlinghq/darling/pull/667,https://github.com/tech234a,27,https://github.com/darlinghq/darling/pull/667#issuecomment-592993712,see https://github.com/stephengroat/darling/runs/449450231?check_suite_focus=true for example,"Maybe use something like Heroku: there, temporary disk space is practically unlimited.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,667,2020-02-16T23:17:06Z,2020-04-13T12:18:09Z,2020-04-13T12:18:09Z,MERGED,True,92,0,2,https://github.com/stephengroat,Using Github Actions to build,12,[],https://github.com/darlinghq/darling/pull/667,https://github.com/stephengroat,28,https://github.com/darlinghq/darling/pull/667#issuecomment-593232642,see https://github.com/stephengroat/darling/runs/449450231?check_suite_focus=true for example,"artifacts are now uploading
https://github.com/stephengroat/darling/actions/runs/47920841",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,667,2020-02-16T23:17:06Z,2020-04-13T12:18:09Z,2020-04-13T12:18:09Z,MERGED,True,92,0,2,https://github.com/stephengroat,Using Github Actions to build,12,[],https://github.com/darlinghq/darling/pull/667,https://github.com/stephengroat,29,https://github.com/darlinghq/darling/pull/667#issuecomment-599648776,see https://github.com/stephengroat/darling/runs/449450231?check_suite_focus=true for example,"let me know if there's anything else needed on this, trying to cleanup my PRs",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,667,2020-02-16T23:17:06Z,2020-04-13T12:18:09Z,2020-04-13T12:18:09Z,MERGED,True,92,0,2,https://github.com/stephengroat,Using Github Actions to build,12,[],https://github.com/darlinghq/darling/pull/667,https://github.com/stephengroat,30,https://github.com/darlinghq/darling/pull/667#issuecomment-603378866,see https://github.com/stephengroat/darling/runs/449450231?check_suite_focus=true for example,anything else needed for this? a squash or any specific comments i need to address?,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,667,2020-02-16T23:17:06Z,2020-04-13T12:18:09Z,2020-04-13T12:18:09Z,MERGED,True,92,0,2,https://github.com/stephengroat,Using Github Actions to build,12,[],https://github.com/darlinghq/darling/pull/667,https://github.com/ahyattdev,31,https://github.com/darlinghq/darling/pull/667#issuecomment-612684188,see https://github.com/stephengroat/darling/runs/449450231?check_suite_focus=true for example,"@stephengroat I think this will work. We do have a Jenkins instance, but it's not ""connected"" to this repo. By that I mean having those green checkmarks next to the most recent commit of each push/PR.
Despite already having a Jenkins I think we should enable this too in order to verify that PRs build correctly or have a helpful green checkmark next to the most recent commit in master.
@LubosD @bugaevc any objections to merging this?",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,667,2020-02-16T23:17:06Z,2020-04-13T12:18:09Z,2020-04-13T12:18:09Z,MERGED,True,92,0,2,https://github.com/stephengroat,Using Github Actions to build,12,[],https://github.com/darlinghq/darling/pull/667,https://github.com/bugaevc,32,https://github.com/darlinghq/darling/pull/667#issuecomment-612757818,see https://github.com/stephengroat/darling/runs/449450231?check_suite_focus=true for example,"@LubosD @bugaevc any objections to merging this?

No technical objections, but we should decide whether CI-built DEBs is something we want to support (when people come complaining they don't work), and it would be nice to build for more than just the latest Ubuntu. IIRC, TeamCity at least had Debian.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,668,2020-02-17T03:00:45Z,2020-02-17T04:32:56Z,2020-02-17T04:32:56Z,MERGED,True,3,3,3,https://github.com/TheBrokenRail,Update top and cctools,1,[],https://github.com/darlinghq/darling/pull/668,https://github.com/TheBrokenRail,1,https://github.com/darlinghq/darling/pull/668,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,669,2020-02-17T17:06:52Z,2020-02-17T20:53:11Z,2020-02-17T20:53:11Z,MERGED,True,1,1,1,https://github.com/TheBrokenRail,Do not check build dependencies when creating source package,1,[],https://github.com/darlinghq/darling/pull/669,https://github.com/TheBrokenRail,1,https://github.com/darlinghq/darling/pull/669,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,685,2020-02-18T17:32:52Z,2020-02-18T18:21:28Z,2020-02-18T18:21:28Z,MERGED,True,1,1,1,https://github.com/TheBrokenRail,Add libgif-dev to DEB dependencies,1,[],https://github.com/darlinghq/darling/pull/685,https://github.com/TheBrokenRail,1,https://github.com/darlinghq/darling/pull/685,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,686,2020-02-18T19:08:17Z,2020-02-18T19:55:46Z,2020-02-18T19:55:47Z,MERGED,True,2,2,2,https://github.com/TheBrokenRail,Update Foundation and Cocotron,1,[],https://github.com/darlinghq/darling/pull/686,https://github.com/TheBrokenRail,1,https://github.com/darlinghq/darling/pull/686,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,687,2020-02-19T14:02:10Z,2020-02-19T17:10:19Z,2020-02-19T17:10:19Z,MERGED,True,1,1,1,https://github.com/r-lind,Fixing Debian build dependency with linux headers,1,[],https://github.com/darlinghq/darling/pull/687,https://github.com/r-lind,1,https://github.com/darlinghq/darling/pull/687,"Adding the closest equivalent to Ubuntu's linux-headers-generic in Debian, which is linux-headers-amd64.","Adding the closest equivalent to Ubuntu's linux-headers-generic in Debian, which is linux-headers-amd64.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,687,2020-02-19T14:02:10Z,2020-02-19T17:10:19Z,2020-02-19T17:10:19Z,MERGED,True,1,1,1,https://github.com/r-lind,Fixing Debian build dependency with linux headers,1,[],https://github.com/darlinghq/darling/pull/687,https://github.com/ahyattdev,2,https://github.com/darlinghq/darling/pull/687#issuecomment-588332747,"Adding the closest equivalent to Ubuntu's linux-headers-generic in Debian, which is linux-headers-amd64.",OK I will merge and test,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,703,2020-03-08T18:29:59Z,2020-03-09T04:28:58Z,2020-03-09T10:53:09Z,MERGED,True,1,1,1,https://github.com/facekapow,Update src/external/top to correct commit hash,1,[],https://github.com/darlinghq/darling/pull/703,https://github.com/facekapow,1,https://github.com/darlinghq/darling/pull/703,"This resolves an issue when cloning Darling that should help with #700 and #702.
The problem was that an non-existent commit hash was specified for src/external/top, leading to the following error when doing git clone --recursive or git submodule update:
fatal: remote error: upload-pack: not our ref 8bc7d87e088fdcd53c47ebf5460acc004f6b4fc4
fatal: the remote end hung up unexpectedly
Fetched in submodule path 'src/external/top', but it did not contain 8bc7d87e088fdcd53c47ebf5460acc004f6b4fc4. Direct fetching of that commit failed.

I'm not sure where this hash came from, but this commit updates the submodule to point to the latest commit in darling-top.","This resolves an issue when cloning Darling that should help with #700 and #702.
The problem was that an non-existent commit hash was specified for src/external/top, leading to the following error when doing git clone --recursive or git submodule update:
fatal: remote error: upload-pack: not our ref 8bc7d87e088fdcd53c47ebf5460acc004f6b4fc4
fatal: the remote end hung up unexpectedly
Fetched in submodule path 'src/external/top', but it did not contain 8bc7d87e088fdcd53c47ebf5460acc004f6b4fc4. Direct fetching of that commit failed.

I'm not sure where this hash came from, but this commit updates the submodule to point to the latest commit in darling-top.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,703,2020-03-08T18:29:59Z,2020-03-09T04:28:58Z,2020-03-09T10:53:09Z,MERGED,True,1,1,1,https://github.com/facekapow,Update src/external/top to correct commit hash,1,[],https://github.com/darlinghq/darling/pull/703,https://github.com/CuriousTommy,2,https://github.com/darlinghq/darling/pull/703#issuecomment-596238022,"This resolves an issue when cloning Darling that should help with #700 and #702.
The problem was that an non-existent commit hash was specified for src/external/top, leading to the following error when doing git clone --recursive or git submodule update:
fatal: remote error: upload-pack: not our ref 8bc7d87e088fdcd53c47ebf5460acc004f6b4fc4
fatal: the remote end hung up unexpectedly
Fetched in submodule path 'src/external/top', but it did not contain 8bc7d87e088fdcd53c47ebf5460acc004f6b4fc4. Direct fetching of that commit failed.

I'm not sure where this hash came from, but this commit updates the submodule to point to the latest commit in darling-top.","I'm not sure where this hash came from

Seeing that 71c5bf3 was likely the cause, @ahyattdev probably forgot to push his changes to the repo.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,712,2020-03-17T20:08:33Z,2020-03-18T13:54:42Z,2020-03-18T13:54:42Z,MERGED,True,13025,0,434,https://github.com/Yingsheng-eroad,add AVKit and MultipeerConnectivity framework,6,[],https://github.com/darlinghq/darling/pull/712,https://github.com/Yingsheng-eroad,1,https://github.com/darlinghq/darling/pull/712,fix #706 add AVKit and MultipeerConnectivity framework,fix #706 add AVKit and MultipeerConnectivity framework,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,712,2020-03-17T20:08:33Z,2020-03-18T13:54:42Z,2020-03-18T13:54:42Z,MERGED,True,13025,0,434,https://github.com/Yingsheng-eroad,add AVKit and MultipeerConnectivity framework,6,[],https://github.com/darlinghq/darling/pull/712,https://github.com/CuriousTommy,2,https://github.com/darlinghq/darling/pull/712#issuecomment-600318462,fix #706 add AVKit and MultipeerConnectivity framework,@ahyattdev I'll update the wiki to make note of the src/frameworks directory,True,{'THUMBS_UP': ['https://github.com/ahyattdev']}
darlinghq/darling,https://github.com/darlinghq/darling,712,2020-03-17T20:08:33Z,2020-03-18T13:54:42Z,2020-03-18T13:54:42Z,MERGED,True,13025,0,434,https://github.com/Yingsheng-eroad,add AVKit and MultipeerConnectivity framework,6,[],https://github.com/darlinghq/darling/pull/712,https://github.com/Yingsheng-eroad,3,https://github.com/darlinghq/darling/pull/712#issuecomment-600393178,fix #706 add AVKit and MultipeerConnectivity framework,"These stubs look good. My only ask is that they be moved into src/frameworks.

Thanks, resolved.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,714,2020-03-22T18:05:05Z,2020-03-23T18:24:13Z,2020-03-23T18:24:13Z,CLOSED,False,78570,8848,413,https://github.com/CuriousTommy,Replace Current libffi Code With Apple's Version,4,[],https://github.com/darlinghq/darling/pull/714,https://github.com/CuriousTommy,1,https://github.com/darlinghq/darling/pull/714,"Just keep in mind that darlinghq/darling-ruby#1 is needed as well. Otherwise, the build will fail.","Just keep in mind that darlinghq/darling-ruby#1 is needed as well. Otherwise, the build will fail.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,714,2020-03-22T18:05:05Z,2020-03-23T18:24:13Z,2020-03-23T18:24:13Z,CLOSED,False,78570,8848,413,https://github.com/CuriousTommy,Replace Current libffi Code With Apple's Version,4,[],https://github.com/darlinghq/darling/pull/714,https://github.com/bugaevc,2,https://github.com/darlinghq/darling/pull/714#issuecomment-602256126,"Just keep in mind that darlinghq/darling-ruby#1 is needed as well. Otherwise, the build will fail.",Can we have it as an external module?,True,{'THUMBS_UP': ['https://github.com/CuriousTommy']}
darlinghq/darling,https://github.com/darlinghq/darling,714,2020-03-22T18:05:05Z,2020-03-23T18:24:13Z,2020-03-23T18:24:13Z,CLOSED,False,78570,8848,413,https://github.com/CuriousTommy,Replace Current libffi Code With Apple's Version,4,[],https://github.com/darlinghq/darling/pull/714,https://github.com/CuriousTommy,3,https://github.com/darlinghq/darling/pull/714#issuecomment-602290728,"Just keep in mind that darlinghq/darling-ruby#1 is needed as well. Otherwise, the build will fail.","@bugaevc You're right. This would probably make more sense in an external module. If someone is able to open up one for me, I'll put the code there.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,717,2020-03-24T16:26:38Z,2020-03-24T17:25:25Z,2020-03-24T17:30:07Z,MERGED,True,12,9275,35,https://github.com/CuriousTommy,Use Apple's version of libffi ,3,[],https://github.com/darlinghq/darling/pull/717,https://github.com/CuriousTommy,1,https://github.com/darlinghq/darling/pull/717,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,717,2020-03-24T16:26:38Z,2020-03-24T17:25:25Z,2020-03-24T17:30:07Z,MERGED,True,12,9275,35,https://github.com/CuriousTommy,Use Apple's version of libffi ,3,[],https://github.com/darlinghq/darling/pull/717,https://github.com/bugaevc,2,https://github.com/darlinghq/darling/pull/717#issuecomment-603360493,,LGTM otherwise 🙂,True,{'THUMBS_UP': ['https://github.com/CuriousTommy']}
darlinghq/darling,https://github.com/darlinghq/darling,717,2020-03-24T16:26:38Z,2020-03-24T17:25:25Z,2020-03-24T17:30:07Z,MERGED,True,12,9275,35,https://github.com/CuriousTommy,Use Apple's version of libffi ,3,[],https://github.com/darlinghq/darling/pull/717,https://github.com/CuriousTommy,3,https://github.com/darlinghq/darling/pull/717#issuecomment-603369548,,@bugaevc Can I merge it or not yet?,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,717,2020-03-24T16:26:38Z,2020-03-24T17:25:25Z,2020-03-24T17:30:07Z,MERGED,True,12,9275,35,https://github.com/CuriousTommy,Use Apple's version of libffi ,3,[],https://github.com/darlinghq/darling/pull/717,https://github.com/bugaevc,4,https://github.com/darlinghq/darling/pull/717#issuecomment-603372945,,"I usually just put my LGTM and leave it to some other team member to review & merge contributions in the parts of the project I'm not responsible for. But I guess in this case the other team member is you, so, go ahead 😄",True,{'THUMBS_UP': ['https://github.com/CuriousTommy']}
darlinghq/darling,https://github.com/darlinghq/darling,719,2020-03-27T10:13:18Z,2020-03-27T10:14:33Z,2020-03-27T19:39:31Z,MERGED,True,1,1,1,https://github.com/kelnos,Bump lkm module to 4040733,1,[],https://github.com/darlinghq/darling/pull/719,https://github.com/kelnos,1,https://github.com/darlinghq/darling/pull/719,"Fixes compilation on newer Linux kernels.
@LubosD looks like there are a couple other changes that this pulls in, but you wrote both of them and they seem safe...?","Fixes compilation on newer Linux kernels.
@LubosD looks like there are a couple other changes that this pulls in, but you wrote both of them and they seem safe...?",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,719,2020-03-27T10:13:18Z,2020-03-27T10:14:33Z,2020-03-27T19:39:31Z,MERGED,True,1,1,1,https://github.com/kelnos,Bump lkm module to 4040733,1,[],https://github.com/darlinghq/darling/pull/719,https://github.com/LubosD,2,https://github.com/darlinghq/darling/pull/719#issuecomment-604920401,"Fixes compilation on newer Linux kernels.
@LubosD looks like there are a couple other changes that this pulls in, but you wrote both of them and they seem safe...?","Yes, they are safe :-)",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,721,2020-03-29T17:06:06Z,2020-04-12T22:42:24Z,2020-04-12T22:42:36Z,MERGED,True,43,0,8,https://github.com/CuriousTommy,Add libsystem_networkextension,1,[],https://github.com/darlinghq/darling/pull/721,https://github.com/CuriousTommy,1,https://github.com/darlinghq/darling/pull/721,This is needed for Heimdal. The arguments for NEHelperCacheCopyAppUUIDMapping  and ne_session_set_socket_attributes  were guesses.,This is needed for Heimdal. The arguments for NEHelperCacheCopyAppUUIDMapping  and ne_session_set_socket_attributes  were guesses.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,721,2020-03-29T17:06:06Z,2020-04-12T22:42:24Z,2020-04-12T22:42:36Z,MERGED,True,43,0,8,https://github.com/CuriousTommy,Add libsystem_networkextension,1,[],https://github.com/darlinghq/darling/pull/721,https://github.com/bugaevc,2,https://github.com/darlinghq/darling/pull/721#issuecomment-605680241,This is needed for Heimdal. The arguments for NEHelperCacheCopyAppUUIDMapping  and ne_session_set_socket_attributes  were guesses.,The folder should be just src/networkextension,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,721,2020-03-29T17:06:06Z,2020-04-12T22:42:24Z,2020-04-12T22:42:36Z,MERGED,True,43,0,8,https://github.com/CuriousTommy,Add libsystem_networkextension,1,[],https://github.com/darlinghq/darling/pull/721,https://github.com/CuriousTommy,3,https://github.com/darlinghq/darling/pull/721#issuecomment-605699014,This is needed for Heimdal. The arguments for NEHelperCacheCopyAppUUIDMapping  and ne_session_set_socket_attributes  were guesses.,"@bugaevc Once I fix everything else, I'll rename the folder.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,721,2020-03-29T17:06:06Z,2020-04-12T22:42:24Z,2020-04-12T22:42:36Z,MERGED,True,43,0,8,https://github.com/CuriousTommy,Add libsystem_networkextension,1,[],https://github.com/darlinghq/darling/pull/721,https://github.com/CuriousTommy,4,https://github.com/darlinghq/darling/pull/721#issuecomment-605707686,This is needed for Heimdal. The arguments for NEHelperCacheCopyAppUUIDMapping  and ne_session_set_socket_attributes  were guesses.,"I think that should be everything, I'll rebase and merge if everyone is happy with the changes.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,723,2020-03-30T23:10:34Z,2020-04-04T15:09:32Z,2020-04-04T15:09:33Z,CLOSED,False,1,1,1,https://github.com/nickooms,Make AudioFileTools SHARED,1,[],https://github.com/darlinghq/darling/pull/723,https://github.com/nickooms,1,https://github.com/darlinghq/darling/pull/723,Fixes CMake configuration fatal error on Deepin Linux,Fixes CMake configuration fatal error on Deepin Linux,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,723,2020-03-30T23:10:34Z,2020-04-04T15:09:32Z,2020-04-04T15:09:33Z,CLOSED,False,1,1,1,https://github.com/nickooms,Make AudioFileTools SHARED,1,[],https://github.com/darlinghq/darling/pull/723,https://github.com/LubosD,2,https://github.com/darlinghq/darling/pull/723#issuecomment-606418552,Fixes CMake configuration fatal error on Deepin Linux,"No, this is not supposed to be a shared library. The only proper way around would be to use TARGET_OBJECTS.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,723,2020-03-30T23:10:34Z,2020-04-04T15:09:32Z,2020-04-04T15:09:33Z,CLOSED,False,1,1,1,https://github.com/nickooms,Make AudioFileTools SHARED,1,[],https://github.com/darlinghq/darling/pull/723,https://github.com/LubosD,3,https://github.com/darlinghq/darling/pull/723#issuecomment-609042673,Fixes CMake configuration fatal error on Deepin Linux,Problem has been solved differently.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,726,2020-04-04T15:07:55Z,2020-04-04T15:09:11Z,2020-04-04T15:09:11Z,MERGED,True,1,1,1,https://github.com/TheBrokenRail,Update DEB Dependencies,1,[],https://github.com/darlinghq/darling/pull/726,https://github.com/TheBrokenRail,1,https://github.com/darlinghq/darling/pull/726,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,729,2020-04-06T04:00:17Z,2020-04-06T06:11:45Z,2020-04-06T06:11:45Z,MERGED,True,1,1,1,https://github.com/gregk-git,Fix #728,1,[],https://github.com/darlinghq/darling/pull/729,https://github.com/gregk-git,1,https://github.com/darlinghq/darling/pull/729,"This fixes #728 where the link to the build instructions in the readme.md is broken by updating it to the new link, and also changing it from DarlingHQ Wiki to Darling Docs.","This fixes #728 where the link to the build instructions in the readme.md is broken by updating it to the new link, and also changing it from DarlingHQ Wiki to Darling Docs.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,731,2020-04-08T23:38:54Z,2020-04-09T07:03:39Z,2021-05-28T20:55:29Z,MERGED,True,6,0,1,https://github.com/facekapow,Stub `SCDynamicStoreKeyCreateComputerName`,1,[],https://github.com/darlinghq/darling/pull/731,https://github.com/facekapow,1,https://github.com/darlinghq/darling/pull/731,Needed for secd and trustd.,Needed for secd and trustd.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,731,2020-04-08T23:38:54Z,2020-04-09T07:03:39Z,2021-05-28T20:55:29Z,MERGED,True,6,0,1,https://github.com/facekapow,Stub `SCDynamicStoreKeyCreateComputerName`,1,[],https://github.com/darlinghq/darling/pull/731,https://github.com/bugaevc,2,https://github.com/darlinghq/darling/pull/731#issuecomment-611338954,Needed for secd and trustd.,"It's supposed to just copy the hostname (using the provided allocator), isn't it?",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,731,2020-04-08T23:38:54Z,2020-04-09T07:03:39Z,2021-05-28T20:55:29Z,MERGED,True,6,0,1,https://github.com/facekapow,Stub `SCDynamicStoreKeyCreateComputerName`,1,[],https://github.com/darlinghq/darling/pull/731,https://github.com/LubosD,3,https://github.com/darlinghq/darling/pull/731#issuecomment-611366623,Needed for secd and trustd.,"No, it's supposed to provide a key for notifications about hostname changes. So something that will not work without having a full configd :-/
I actually had the STUB already in place, but forgot to commit.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,731,2020-04-08T23:38:54Z,2020-04-09T07:03:39Z,2021-05-28T20:55:29Z,MERGED,True,6,0,1,https://github.com/facekapow,Stub `SCDynamicStoreKeyCreateComputerName`,1,[],https://github.com/darlinghq/darling/pull/731,https://github.com/facekapow,4,https://github.com/darlinghq/darling/pull/731#issuecomment-611487848,Needed for secd and trustd.,"I would've implemented it the way confid/SystemConfiguration.fproj/SCDHostName.c implements it (all it needs is SCDynamicStoreKeyCreate, which is already stubbed), but I'm not clear on how the licensing works when copying functions from APSL code, so I decided to just stub it instead.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,732,2020-04-10T20:42:26Z,2020-04-11T06:43:33Z,2021-05-28T20:55:28Z,MERGED,True,42,0,4,https://github.com/facekapow,Add a dummy implementation of csops in userspace,1,[],https://github.com/darlinghq/darling/pull/732,https://github.com/facekapow,1,https://github.com/darlinghq/darling/pull/732,"The real csops would need for the LKM to store codesigning information, entitlements, and more. This is a simple dummy implementation that returns valid data instead of having an unimplemented syscall.","The real csops would need for the LKM to store codesigning information, entitlements, and more. This is a simple dummy implementation that returns valid data instead of having an unimplemented syscall.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,737,2020-04-13T14:10:58Z,2020-04-13T14:23:26Z,2020-04-13T20:00:00Z,CLOSED,False,1,1,1,https://github.com/disconnect3d,Fix wrong path check in ImageLoaderMachO,1,[],https://github.com/darlinghq/darling/pull/737,https://github.com/disconnect3d,1,https://github.com/darlinghq/darling/pull/737,"This PR fixes a bug in strncmp(installPath, ""/usr/libexec/oah/Shims"", 9) - the size argument passed seems to be copied from a previous call and results in an incorrect path check as here only the ""/usr/libe"" prefix will be checked.
Please note that with my proposed change any directory path that starts with ""/usr/libexec/oah/Shims"" will be matched so ""/usr/libexec/oah/ShimsSOMETHING"" would also do.
I am not aware of this codebase, so maybe there should be a ""/"" at the end of this path?","This PR fixes a bug in strncmp(installPath, ""/usr/libexec/oah/Shims"", 9) - the size argument passed seems to be copied from a previous call and results in an incorrect path check as here only the ""/usr/libe"" prefix will be checked.
Please note that with my proposed change any directory path that starts with ""/usr/libexec/oah/Shims"" will be matched so ""/usr/libexec/oah/ShimsSOMETHING"" would also do.
I am not aware of this codebase, so maybe there should be a ""/"" at the end of this path?",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,737,2020-04-13T14:10:58Z,2020-04-13T14:23:26Z,2020-04-13T20:00:00Z,CLOSED,False,1,1,1,https://github.com/disconnect3d,Fix wrong path check in ImageLoaderMachO,1,[],https://github.com/darlinghq/darling/pull/737,https://github.com/bugaevc,2,https://github.com/darlinghq/darling/pull/737#issuecomment-612919691,"This PR fixes a bug in strncmp(installPath, ""/usr/libexec/oah/Shims"", 9) - the size argument passed seems to be copied from a previous call and results in an incorrect path check as here only the ""/usr/libe"" prefix will be checked.
Please note that with my proposed change any directory path that starts with ""/usr/libexec/oah/Shims"" will be matched so ""/usr/libexec/oah/ShimsSOMETHING"" would also do.
I am not aware of this codebase, so maybe there should be a ""/"" at the end of this path?","Thank you for your contribution, but, no. This code comes from Apple; if they have fixed this bug in a newer version, we should update to that; if they haven't, we should leave the bug as is.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,737,2020-04-13T14:10:58Z,2020-04-13T14:23:26Z,2020-04-13T20:00:00Z,CLOSED,False,1,1,1,https://github.com/disconnect3d,Fix wrong path check in ImageLoaderMachO,1,[],https://github.com/darlinghq/darling/pull/737,https://github.com/disconnect3d,3,https://github.com/darlinghq/darling/pull/737#issuecomment-612958211,"This PR fixes a bug in strncmp(installPath, ""/usr/libexec/oah/Shims"", 9) - the size argument passed seems to be copied from a previous call and results in an incorrect path check as here only the ""/usr/libe"" prefix will be checked.
Please note that with my proposed change any directory path that starts with ""/usr/libexec/oah/Shims"" will be matched so ""/usr/libexec/oah/ShimsSOMETHING"" would also do.
I am not aware of this codebase, so maybe there should be a ""/"" at the end of this path?","Good point. Reported further to opensource-apple/dyld#4.
EDIT: Sadly, this is not an official repo.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,737,2020-04-13T14:10:58Z,2020-04-13T14:23:26Z,2020-04-13T20:00:00Z,CLOSED,False,1,1,1,https://github.com/disconnect3d,Fix wrong path check in ImageLoaderMachO,1,[],https://github.com/darlinghq/darling/pull/737,https://github.com/bugaevc,4,https://github.com/darlinghq/darling/pull/737#issuecomment-612959175,"This PR fixes a bug in strncmp(installPath, ""/usr/libexec/oah/Shims"", 9) - the size argument passed seems to be copied from a previous call and results in an incorrect path check as here only the ""/usr/libe"" prefix will be checked.
Please note that with my proposed change any directory path that starts with ""/usr/libexec/oah/Shims"" will be matched so ""/usr/libexec/oah/ShimsSOMETHING"" would also do.
I am not aware of this codebase, so maybe there should be a ""/"" at the end of this path?",I were much doubt Apple's going to read GitHub issues; file a Radar or whatever they call it these days if you really want this addressed.,True,{'THUMBS_UP': ['https://github.com/disconnect3d']}
darlinghq/darling,https://github.com/darlinghq/darling,737,2020-04-13T14:10:58Z,2020-04-13T14:23:26Z,2020-04-13T20:00:00Z,CLOSED,False,1,1,1,https://github.com/disconnect3d,Fix wrong path check in ImageLoaderMachO,1,[],https://github.com/darlinghq/darling/pull/737,https://github.com/ahyattdev,5,https://github.com/darlinghq/darling/pull/737#issuecomment-613069039,"This PR fixes a bug in strncmp(installPath, ""/usr/libexec/oah/Shims"", 9) - the size argument passed seems to be copied from a previous call and results in an incorrect path check as here only the ""/usr/libe"" prefix will be checked.
Please note that with my proposed change any directory path that starts with ""/usr/libexec/oah/Shims"" will be matched so ""/usr/libexec/oah/ShimsSOMETHING"" would also do.
I am not aware of this codebase, so maybe there should be a ""/"" at the end of this path?",I wonder how much effort updating our dyld would be,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,737,2020-04-13T14:10:58Z,2020-04-13T14:23:26Z,2020-04-13T20:00:00Z,CLOSED,False,1,1,1,https://github.com/disconnect3d,Fix wrong path check in ImageLoaderMachO,1,[],https://github.com/darlinghq/darling/pull/737,https://github.com/ahyattdev,6,https://github.com/darlinghq/darling/pull/737#issuecomment-613069587,"This PR fixes a bug in strncmp(installPath, ""/usr/libexec/oah/Shims"", 9) - the size argument passed seems to be copied from a previous call and results in an incorrect path check as here only the ""/usr/libe"" prefix will be checked.
Please note that with my proposed change any directory path that starts with ""/usr/libexec/oah/Shims"" will be matched so ""/usr/libexec/oah/ShimsSOMETHING"" would also do.
I am not aware of this codebase, so maybe there should be a ""/"" at the end of this path?",One consideration: did Apple mess with i386 loading in dyld in 10.15 or is it more architecture-agnostic?,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,750,2020-04-16T02:32:51Z,2020-04-16T15:50:18Z,2020-04-16T15:50:19Z,MERGED,True,14,30,1,https://github.com/TheBrokenRail,Remove Redundant Argument from tools/makedeb in Github Actions,3,[],https://github.com/darlinghq/darling/pull/750,https://github.com/TheBrokenRail,1,https://github.com/darlinghq/darling/pull/750,"Also:

Unifies Capitalization
Removed CCache from build-dsc, because it was removed from build-deb.","Also:

Unifies Capitalization
Removed CCache from build-dsc, because it was removed from build-deb.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,753,2020-04-16T13:46:30Z,2020-04-16T13:56:49Z,2021-05-28T20:55:27Z,MERGED,True,32,0,4,https://github.com/facekapow,Implement csrctl,1,[],https://github.com/darlinghq/darling/pull/753,https://github.com/facekapow,1,https://github.com/darlinghq/darling/pull/753,"Syscall 483, used to indicate what parts of SIP are enabled. This implementation just returns a value indicating full, unrestricted access (i.e. no SIP).","Syscall 483, used to indicate what parts of SIP are enabled. This implementation just returns a value indicating full, unrestricted access (i.e. no SIP).",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,756,2020-04-16T15:46:02Z,2020-04-16T15:49:06Z,2020-04-16T15:49:06Z,MERGED,True,1,1,1,https://github.com/TheBrokenRail,Update DEB Dependencies,1,[],https://github.com/darlinghq/darling/pull/756,https://github.com/TheBrokenRail,1,https://github.com/darlinghq/darling/pull/756,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,757,2020-04-16T18:16:29Z,2020-04-16T18:17:19Z,2020-04-16T18:17:19Z,MERGED,True,2,2,1,https://github.com/TheBrokenRail,Add Missing debhelper to GH Actions,1,[],https://github.com/darlinghq/darling/pull/757,https://github.com/TheBrokenRail,1,https://github.com/darlinghq/darling/pull/757,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,760,2020-04-20T22:09:59Z,2020-04-28T13:25:41Z,2020-04-28T13:25:41Z,MERGED,True,206,3,1,https://github.com/Balint66,Adding some basic functionality to sysctl_machdep,10,[],https://github.com/darlinghq/darling/pull/760,https://github.com/Balint66,1,https://github.com/darlinghq/darling/pull/760,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,760,2020-04-20T22:09:59Z,2020-04-28T13:25:41Z,2020-04-28T13:25:41Z,MERGED,True,206,3,1,https://github.com/Balint66,Adding some basic functionality to sysctl_machdep,10,[],https://github.com/darlinghq/darling/pull/760,https://github.com/Balint66,2,https://github.com/darlinghq/darling/pull/760#issuecomment-617864360,,"Moral of the story: tried out three IDEs for Darling today, Atom is not bad, but Codium wins.
(That's why there were typos. The IDEs didn't handle Darling well)",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,765,2020-04-26T14:36:31Z,2020-04-30T18:41:18Z,2021-07-05T00:40:16Z,CLOSED,False,10,20,1,https://github.com/facekapow,Fix Github Actions,1,[],https://github.com/darlinghq/darling/pull/765,https://github.com/facekapow,1,https://github.com/darlinghq/darling/pull/765,I opened this up as a PR to test different configurations without creating a bunch of useless commits in master. I'll squash the commits together when I fix it.,I opened this up as a PR to test different configurations without creating a bunch of useless commits in master. I'll squash the commits together when I fix it.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,769,2020-04-30T18:31:55Z,2020-04-30T18:35:13Z,2021-07-05T00:40:15Z,MERGED,True,61,58,4,https://github.com/facekapow,Setup CircleCI,33,[],https://github.com/darlinghq/darling/pull/769,https://github.com/facekapow,1,https://github.com/darlinghq/darling/pull/769,"CircleCI takes a while to build (3h 30min for the first successful build), but it works!
Thanks to @TheBrokenRail for his help.","CircleCI takes a while to build (3h 30min for the first successful build), but it works!
Thanks to @TheBrokenRail for his help.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,777,2020-05-09T18:35:05Z,2020-09-18T03:21:26Z,2020-09-18T03:21:26Z,CLOSED,False,13,15,1,https://github.com/danix800,"Fix ""Cannot determine your user name"" (#715) for docker",1,[],https://github.com/darlinghq/darling/pull/777,https://github.com/danix800,1,https://github.com/darlinghq/darling/pull/777,"See: #715
'getlogin' does not work inside docker when spawning shells.","See: #715
'getlogin' does not work inside docker when spawning shells.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,777,2020-05-09T18:35:05Z,2020-09-18T03:21:26Z,2020-09-18T03:21:26Z,CLOSED,False,13,15,1,https://github.com/danix800,"Fix ""Cannot determine your user name"" (#715) for docker",1,[],https://github.com/darlinghq/darling/pull/777,https://github.com/bugaevc,2,https://github.com/darlinghq/darling/pull/777#issuecomment-626218305,"See: #715
'getlogin' does not work inside docker when spawning shells.",Does not work as in returns NULL? or wrong data?..,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,777,2020-05-09T18:35:05Z,2020-09-18T03:21:26Z,2020-09-18T03:21:26Z,CLOSED,False,13,15,1,https://github.com/danix800,"Fix ""Cannot determine your user name"" (#715) for docker",1,[],https://github.com/darlinghq/darling/pull/777,https://github.com/LubosD,3,https://github.com/darlinghq/darling/pull/777#issuecomment-626219590,"See: #715
'getlogin' does not work inside docker when spawning shells.",You're not supposed to be using the darling command in Docker at all. See https://github.com/darlinghq/darling-docker/blob/master/README.md,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,777,2020-05-09T18:35:05Z,2020-09-18T03:21:26Z,2020-09-18T03:21:26Z,CLOSED,False,13,15,1,https://github.com/danix800,"Fix ""Cannot determine your user name"" (#715) for docker",1,[],https://github.com/darlinghq/darling/pull/777,https://github.com/danix800,4,https://github.com/darlinghq/darling/pull/777#issuecomment-626259922,"See: #715
'getlogin' does not work inside docker when spawning shells.",@bugaevc Returns NULL and prints Cannot determine your user name then exit.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,777,2020-05-09T18:35:05Z,2020-09-18T03:21:26Z,2020-09-18T03:21:26Z,CLOSED,False,13,15,1,https://github.com/danix800,"Fix ""Cannot determine your user name"" (#715) for docker",1,[],https://github.com/darlinghq/darling/pull/777,https://github.com/danix800,5,https://github.com/darlinghq/darling/pull/777#issuecomment-626284917,"See: #715
'getlogin' does not work inside docker when spawning shells.","@LubosD Sorry I could not execute mach-o directly for now inside docker. Always Segmentation fault, the docker image base is debian:buster (5.5.0-0.bpo.2-amd64), with darling release
v0.1.20200331, the dkms deb is the downloaded from the release page. But darling from the other deb could not be executed for the same reason reported by #715.
With this fix, based on v0.1.20200331, at least darling shell works now (on both 4.19.0-8-amd64 and 5.5.0-0.bpo.2-amd64), and other mach-o could be executed by or inside the shell. The dkms is installed directly inside the image, not on the host.
I saw the docker package darling yesterday but I didn't know darling-docker before you referred the README.md for me. There is no darling command indeed, so how does it work? Is there any
more documents on the internals? Can the mach-o directly loaded by kernel module without darling command?
A few month ago I started trying to build a docker image for multi-arch cross compiling and I thought
that something like wine for mach-o executables would be nice to directly execute mach-o on
linux, then I met darling for the first time. Firstly I tried utensils/docker-darling. But the darling base version [a00051b] therein crashes the host, possibly as reported by #482.
By the way I also tried the latest 1470b45 yesterday, but unfortunately the kernel module crashes:
May  9 17:03:18 danix kernel: [ 6233.987149] BUG: kernel NULL pointer dereference, address: 0000000000000078
May  9 17:03:18 danix kernel: [ 6233.987150] #PF: supervisor read access in kernel mode
May  9 17:03:18 danix kernel: [ 6233.987150] #PF: error_code(0x0000) - not-present page
May  9 17:03:18 danix kernel: [ 6233.987151] PGD 0 P4D 0 
May  9 17:03:18 danix kernel: [ 6233.987152] Oops: 0000 [#4] SMP PTI
May  9 17:03:18 danix kernel: [ 6233.987154] CPU: 4 PID: 15527 Comm: vchroot Tainted: P      D W  OE     5.5.0-0.bpo.2-amd64 #1 Debian 5.5.17-1~bpo10+1
May  9 17:03:18 danix kernel: [ 6233.987155] Hardware name: LENOVO 20QTA00DCD/20QTA00DCD, BIOS N2OET36P (1.23 ) 07/26/2019
May  9 17:03:18 danix kernel: [ 6233.987157] RIP: 0010:apparmor_bprm_committing_creds+0x2c/0x70
May  9 17:03:18 danix kernel: [ 6233.987159] Code: 44 00 00 41 54 48 63 05 62 f9 bc 00 55 65 48 8b 2c 25 c0 8b 01 00 53 48 8b 95 78 06 00 00 48 8b 7f 38 48 8b 52 78 4c 8b 24 02 <48> 8b 57 78 48 8b 1c 02 49 8b 44 24 30 48 39 43 30 74 06 f6 43 40
May  9 17:03:18 danix kernel: [ 6233.987160] RSP: 0018:ffffa4cb43f17b48 EFLAGS: 00010286
May  9 17:03:18 danix kernel: [ 6233.987160] RAX: 0000000000000000 RBX: ffffffff93d77b30 RCX: 0000000000000000
May  9 17:03:18 danix kernel: [ 6233.987161] RDX: ffff8a99bad8ee78 RSI: 0000000000000000 RDI: 0000000000000000
May  9 17:03:18 danix kernel: [ 6233.987162] RBP: ffff8a98e3fcec80 R08: ffff8a9ae73ba2f8 R09: 0000000000000001
May  9 17:03:18 danix kernel: [ 6233.987162] R10: 00000000feedfacf R11: 0000000000000004 R12: ffff8a8c474872b0
May  9 17:03:18 danix kernel: [ 6233.987163] R13: ffff8a99baf34200 R14: 0000000000000488 R15: ffff8a988b440c88
May  9 17:03:18 danix kernel: [ 6233.987164] FS:  0000000000000000(0000) GS:ffff8a9b5e500000(0000) knlGS:0000000000000000
May  9 17:03:18 danix kernel: [ 6233.987164] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
May  9 17:03:18 danix kernel: [ 6233.987165] CR2: 0000000000000078 CR3: 0000000fcecd0001 CR4: 00000000003606e0
May  9 17:03:18 danix kernel: [ 6233.987165] Call Trace:
May  9 17:03:18 danix kernel: [ 6233.987179]  security_bprm_committing_creds+0x22/0x30
May  9 17:03:18 danix kernel: [ 6233.987185]  install_exec_creds+0xe/0x70
May  9 17:03:18 danix kernel: [ 6233.987203]  setup_space+0x47/0x150 [darling_mach]
May  9 17:03:18 danix kernel: [ 6233.987216]  load64+0x716/0x8a0 [darling_mach]
May  9 17:03:18 danix kernel: [ 6233.987218]  ? vfs_read+0x11d/0x140
May  9 17:03:18 danix kernel: [ 6233.987230]  load64+0x2cc/0x8a0 [darling_mach]
May  9 17:03:18 danix kernel: [ 6233.987242]  macho_load+0x1c2/0xbe0 [darling_mach]
May  9 17:03:18 danix kernel: [ 6233.987244]  ? load_elf_binary+0xcf/0x1710
May  9 17:03:18 danix kernel: [ 6233.987245]  ? tomoyo_find_next_domain+0x2d4/0x814
May  9 17:03:18 danix kernel: [ 6233.987248]  ? load_misc_binary+0x4c/0x460 [binfmt_misc]
May  9 17:03:18 danix kernel: [ 6233.987249]  search_binary_handler+0x8a/0x1b0
May  9 17:03:18 danix kernel: [ 6233.987250]  __do_execve_file.isra.39+0x644/0x9a0
May  9 17:03:18 danix kernel: [ 6233.987252]  __x64_sys_execve+0x34/0x40
May  9 17:03:18 danix kernel: [ 6233.987255]  do_syscall_64+0x52/0x170
May  9 17:03:18 danix kernel: [ 6233.987257]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
May  9 17:03:18 danix kernel: [ 6233.987258] RIP: 0033:0x7f0b1733fe37
May  9 17:03:18 danix kernel: [ 6233.987259] Code: Bad RIP value.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,777,2020-05-09T18:35:05Z,2020-09-18T03:21:26Z,2020-09-18T03:21:26Z,CLOSED,False,13,15,1,https://github.com/danix800,"Fix ""Cannot determine your user name"" (#715) for docker",1,[],https://github.com/darlinghq/darling/pull/777,https://github.com/LubosD,6,https://github.com/darlinghq/darling/pull/777#issuecomment-626296053,"See: #715
'getlogin' does not work inside docker when spawning shells.","There is no darling command indeed, so how does it work? Is there any
more documents on the internals? Can the mach-o directly loaded by kernel module without darling command?

The darling command only sets up a container. It is like docker start/exec/kill. That's why it's not needed inside Docker.
You can check the bootstrap script to see the steps needed to run the first (=init) executable: launchd. The following executions (e.g. Bash when run with shell) don't need this, because they're set up automatically if they run as a child of launchd.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,777,2020-05-09T18:35:05Z,2020-09-18T03:21:26Z,2020-09-18T03:21:26Z,CLOSED,False,13,15,1,https://github.com/danix800,"Fix ""Cannot determine your user name"" (#715) for docker",1,[],https://github.com/darlinghq/darling/pull/777,https://github.com/danix800,7,https://github.com/darlinghq/darling/pull/777#issuecomment-626301161,"See: #715
'getlogin' does not work inside docker when spawning shells.","Very Nice! With launchd run as a daemon, I can execute any mach-o executables inside docker now! Thanks @LubosD",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,777,2020-05-09T18:35:05Z,2020-09-18T03:21:26Z,2020-09-18T03:21:26Z,CLOSED,False,13,15,1,https://github.com/danix800,"Fix ""Cannot determine your user name"" (#715) for docker",1,[],https://github.com/darlinghq/darling/pull/777,https://github.com/danix800,8,https://github.com/darlinghq/darling/pull/777#issuecomment-626339855,"See: #715
'getlogin' does not work inside docker when spawning shells.","But I still think running darling command inside docker is convenient for testing any mach-o executables if I want to run them without exec launchd as pid 1.
In my container the mach-o executables are compiled on linux through cross compiling, and I want to test them on linux container like darling shell command directly.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,777,2020-05-09T18:35:05Z,2020-09-18T03:21:26Z,2020-09-18T03:21:26Z,CLOSED,False,13,15,1,https://github.com/danix800,"Fix ""Cannot determine your user name"" (#715) for docker",1,[],https://github.com/darlinghq/darling/pull/777,https://github.com/bugaevc,9,https://github.com/darlinghq/darling/pull/777#issuecomment-626340759,"See: #715
'getlogin' does not work inside docker when spawning shells.","if I want to run them without exec launchd as pid 1

We don't support that; a lot of code (in libSystem and elsewhere) assumes there's a bootstrap server.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,777,2020-05-09T18:35:05Z,2020-09-18T03:21:26Z,2020-09-18T03:21:26Z,CLOSED,False,13,15,1,https://github.com/danix800,"Fix ""Cannot determine your user name"" (#715) for docker",1,[],https://github.com/darlinghq/darling/pull/777,https://github.com/bugaevc,10,https://github.com/darlinghq/darling/pull/777#issuecomment-626341347,"See: #715
'getlogin' does not work inside docker when spawning shells.","(I mean, you can do that if you know what you're doing, but don't expect it to work for a random app.)",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,777,2020-05-09T18:35:05Z,2020-09-18T03:21:26Z,2020-09-18T03:21:26Z,CLOSED,False,13,15,1,https://github.com/danix800,"Fix ""Cannot determine your user name"" (#715) for docker",1,[],https://github.com/darlinghq/darling/pull/777,https://github.com/CuriousTommy,11,https://github.com/darlinghq/darling/pull/777#issuecomment-647006568,"See: #715
'getlogin' does not work inside docker when spawning shells.",Is it fine if I close this?,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,777,2020-05-09T18:35:05Z,2020-09-18T03:21:26Z,2020-09-18T03:21:26Z,CLOSED,False,13,15,1,https://github.com/danix800,"Fix ""Cannot determine your user name"" (#715) for docker",1,[],https://github.com/darlinghq/darling/pull/777,https://github.com/HinTak,12,https://github.com/darlinghq/darling/pull/777#issuecomment-663886939,"See: #715
'getlogin' does not work inside docker when spawning shells.","I think docker does not protect against #848 , since launchd is still running on the host?",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,777,2020-05-09T18:35:05Z,2020-09-18T03:21:26Z,2020-09-18T03:21:26Z,CLOSED,False,13,15,1,https://github.com/danix800,"Fix ""Cannot determine your user name"" (#715) for docker",1,[],https://github.com/darlinghq/darling/pull/777,https://github.com/HinTak,13,https://github.com/darlinghq/darling/pull/777#issuecomment-663887064,"See: #715
'getlogin' does not work inside docker when spawning shells.",And I'd be interested to know if your host's /var/tmp and /var/run (and /run) get wiped too...,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,777,2020-05-09T18:35:05Z,2020-09-18T03:21:26Z,2020-09-18T03:21:26Z,CLOSED,False,13,15,1,https://github.com/danix800,"Fix ""Cannot determine your user name"" (#715) for docker",1,[],https://github.com/darlinghq/darling/pull/777,https://github.com/danix800,14,https://github.com/darlinghq/darling/pull/777#issuecomment-664121374,"See: #715
'getlogin' does not work inside docker when spawning shells.","No data is wiped for me.
I think (guess) launched has its own MNT namespace so it shouldn't be able to touch anything on the host.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,777,2020-05-09T18:35:05Z,2020-09-18T03:21:26Z,2020-09-18T03:21:26Z,CLOSED,False,13,15,1,https://github.com/danix800,"Fix ""Cannot determine your user name"" (#715) for docker",1,[],https://github.com/darlinghq/darling/pull/777,https://github.com/danix800,15,https://github.com/darlinghq/darling/pull/777#issuecomment-664123764,"See: #715
'getlogin' does not work inside docker when spawning shells.","Maybe you could give more specific reproducing instructions for #848 so I can do some more verification. It's really scary since I've
been running it on several hosts for about 4 months now.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,778,2020-05-09T19:11:01Z,2021-05-29T21:56:06Z,2021-05-29T21:56:06Z,MERGED,True,2,8,1,https://github.com/TheBrokenRail,Remove Unused Code Cocotron,1,[],https://github.com/darlinghq/darling/pull/778,https://github.com/TheBrokenRail,1,https://github.com/darlinghq/darling/pull/778,Requires darlinghq/darling-cocotron#9,Requires darlinghq/darling-cocotron#9,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,779,2020-05-09T21:35:06Z,2020-05-09T21:38:46Z,2020-05-09T21:38:46Z,MERGED,True,1,1,1,https://github.com/TheBrokenRail,Add libxkbfile to DEB,1,[],https://github.com/darlinghq/darling/pull/779,https://github.com/TheBrokenRail,1,https://github.com/darlinghq/darling/pull/779,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,784,2020-05-11T00:59:49Z,2020-05-11T07:16:14Z,2020-05-11T22:37:34Z,MERGED,True,4,4,3,https://github.com/HinTak,Misc fixes,2,[],https://github.com/darlinghq/darling/pull/784,https://github.com/HinTak,1,https://github.com/darlinghq/darling/pull/784,"Fixes cmake warnings, and update the rpm readme to reflect recent fedora-related updates","Fixes cmake warnings, and update the rpm readme to reflect recent fedora-related updates",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,784,2020-05-11T00:59:49Z,2020-05-11T07:16:14Z,2020-05-11T22:37:34Z,MERGED,True,4,4,3,https://github.com/HinTak,Misc fixes,2,[],https://github.com/darlinghq/darling/pull/784,https://github.com/TheBrokenRail,2,https://github.com/darlinghq/darling/pull/784#issuecomment-626703692,"Fixes cmake warnings, and update the rpm readme to reflect recent fedora-related updates",Should this README be moved to darlinghq/darling-docs?,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,784,2020-05-11T00:59:49Z,2020-05-11T07:16:14Z,2020-05-11T22:37:34Z,MERGED,True,4,4,3,https://github.com/HinTak,Misc fixes,2,[],https://github.com/darlinghq/darling/pull/784,https://github.com/LubosD,3,https://github.com/darlinghq/darling/pull/784#issuecomment-626704525,"Fixes cmake warnings, and update the rpm readme to reflect recent fedora-related updates","@TheBrokenRail Yes, that'd be nice.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,789,2020-05-11T15:11:08Z,2020-05-11T17:41:29Z,2020-05-11T17:41:29Z,MERGED,True,0,19,1,https://github.com/TheBrokenRail,Remove Redundant File,1,[],https://github.com/darlinghq/darling/pull/789,https://github.com/TheBrokenRail,1,https://github.com/darlinghq/darling/pull/789,This is in Darling Docs now,This is in Darling Docs now,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,791,2020-05-12T14:29:36Z,2020-05-27T00:43:17Z,2020-09-26T18:45:02Z,CLOSED,False,188,40,5,https://github.com/CuriousTommy,Changes needed for updated libplatform,2,[],https://github.com/darlinghq/darling/pull/791,https://github.com/CuriousTommy,1,https://github.com/darlinghq/darling/pull/791,"These are the following files that needed to be changed for darlinghq/darling-libplatform#1. Before I merge in the change, I want to make sure that everyone is okay with these changes.","These are the following files that needed to be changed for darlinghq/darling-libplatform#1. Before I merge in the change, I want to make sure that everyone is okay with these changes.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,791,2020-05-12T14:29:36Z,2020-05-27T00:43:17Z,2020-09-26T18:45:02Z,CLOSED,False,188,40,5,https://github.com/CuriousTommy,Changes needed for updated libplatform,2,[],https://github.com/darlinghq/darling/pull/791,https://github.com/CuriousTommy,2,https://github.com/darlinghq/darling/pull/791#issuecomment-634356179,"These are the following files that needed to be changed for darlinghq/darling-libplatform#1. Before I merge in the change, I want to make sure that everyone is okay with these changes.","Since facekapow is going to do a major code update, this PR will be pointless in the long run.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,796,2020-05-16T01:59:45Z,2020-05-16T06:56:45Z,2020-05-16T08:27:30Z,MERGED,True,1,1,1,https://github.com/HinTak,"fixes breakage from recent ""CGS work in progress""",1,[],https://github.com/darlinghq/darling/pull/796,https://github.com/HinTak,1,https://github.com/darlinghq/darling/pull/796,"===
commit e135e3d
Author: Lubos Dolezel lubos@dolezel.info
Date:   Fri May 15 12:40:44 2020 +0200
Update the cocotron submodule

===
pulled in
===
commit b26bedb31c8c770622c1ad0ab28b577dffa0b091
Author: Lubos Dolezel lubos@dolezel.info
Date:   Fri May 15 10:47:23 2020 +0200
CGS work progress

===
which deletes CoreGraphics/CGS.h, which is needed by
src/frameworks/ApplicationServices/HIServices/src/HIServices.c .
fixes #795","===
commit e135e3d
Author: Lubos Dolezel lubos@dolezel.info
Date:   Fri May 15 12:40:44 2020 +0200
Update the cocotron submodule

===
pulled in
===
commit b26bedb31c8c770622c1ad0ab28b577dffa0b091
Author: Lubos Dolezel lubos@dolezel.info
Date:   Fri May 15 10:47:23 2020 +0200
CGS work progress

===
which deletes CoreGraphics/CGS.h, which is needed by
src/frameworks/ApplicationServices/HIServices/src/HIServices.c .
fixes #795",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,813,2020-05-26T02:12:56Z,2020-06-15T03:50:34Z,2020-06-16T15:55:38Z,MERGED,True,53,1,4,https://github.com/HinTak,Apple fonttools fixes,8,[],https://github.com/darlinghq/darling/pull/813,https://github.com/HinTak,1,https://github.com/darlinghq/darling/pull/813,The last of the current  batch of fixes for Apple's font tools. Please review.,The last of the current  batch of fixes for Apple's font tools. Please review.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,813,2020-05-26T02:12:56Z,2020-06-15T03:50:34Z,2020-06-16T15:55:38Z,MERGED,True,53,1,4,https://github.com/HinTak,Apple fonttools fixes,8,[],https://github.com/darlinghq/darling/pull/813,https://github.com/CuriousTommy,2,https://github.com/darlinghq/darling/pull/813#issuecomment-634358902,The last of the current  batch of fixes for Apple's font tools. Please review.,"Normally, I would have the variables declared in a header file as well, but it seems like the other variables (such as kMDItemLastUsedDate) are not declared in a header file either...",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,813,2020-05-26T02:12:56Z,2020-06-15T03:50:34Z,2020-06-16T15:55:38Z,MERGED,True,53,1,4,https://github.com/HinTak,Apple fonttools fixes,8,[],https://github.com/darlinghq/darling/pull/813,https://github.com/HinTak,3,https://github.com/darlinghq/darling/pull/813#issuecomment-634402149,The last of the current  batch of fixes for Apple's font tools. Please review.,"I am mostly following neighboring code patterns. That said, I have xcode 11 around and they are in the xcode header.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,813,2020-05-26T02:12:56Z,2020-06-15T03:50:34Z,2020-06-16T15:55:38Z,MERGED,True,53,1,4,https://github.com/HinTak,Apple fonttools fixes,8,[],https://github.com/darlinghq/darling/pull/813,https://github.com/CuriousTommy,4,https://github.com/darlinghq/darling/pull/813#issuecomment-634411197,The last of the current  batch of fixes for Apple's font tools. Please review.,"they are in the xcode header

I guess we forgot to add them to the header. Since they are in the Xcode header, could you also declare your changes in the header as well?",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,813,2020-05-26T02:12:56Z,2020-06-15T03:50:34Z,2020-06-16T15:55:38Z,MERGED,True,53,1,4,https://github.com/HinTak,Apple fonttools fixes,8,[],https://github.com/darlinghq/darling/pull/813,https://github.com/HinTak,5,https://github.com/darlinghq/darling/pull/813#issuecomment-634936986,The last of the current  batch of fixes for Apple's font tools. Please review.,"I'll put that in, as well as checking what values those strings are supposed to do too.",True,{'THUMBS_UP': ['https://github.com/CuriousTommy']}
darlinghq/darling,https://github.com/darlinghq/darling,813,2020-05-26T02:12:56Z,2020-06-15T03:50:34Z,2020-06-16T15:55:38Z,MERGED,True,53,1,4,https://github.com/HinTak,Apple fonttools fixes,8,[],https://github.com/darlinghq/darling/pull/813,https://github.com/HinTak,6,https://github.com/darlinghq/darling/pull/813#issuecomment-636166594,The last of the current  batch of fixes for Apple's font tools. Please review.,"They are in two/three sub-framework headers, which are included by the main. I suppose if they are not part of apple opensource (I'll check), we are not supposed to copy verbatim, right?",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,813,2020-05-26T02:12:56Z,2020-06-15T03:50:34Z,2020-06-16T15:55:38Z,MERGED,True,53,1,4,https://github.com/HinTak,Apple fonttools fixes,8,[],https://github.com/darlinghq/darling/pull/813,https://github.com/CuriousTommy,7,https://github.com/darlinghq/darling/pull/813#issuecomment-636196401,The last of the current  batch of fixes for Apple's font tools. Please review.,"Yeah, don't copy non-opensource headers verbatim.
Edit: I should probably say that you should never copy from non-opensource header.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,813,2020-05-26T02:12:56Z,2020-06-15T03:50:34Z,2020-06-16T15:55:38Z,MERGED,True,53,1,4,https://github.com/HinTak,Apple fonttools fixes,8,[],https://github.com/darlinghq/darling/pull/813,https://github.com/CuriousTommy,8,https://github.com/darlinghq/darling/pull/813#issuecomment-643859428,The last of the current  batch of fixes for Apple's font tools. Please review.,@HinTak Is there anything else you need to do for this PR?,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,813,2020-05-26T02:12:56Z,2020-06-15T03:50:34Z,2020-06-16T15:55:38Z,MERGED,True,53,1,4,https://github.com/HinTak,Apple fonttools fixes,8,[],https://github.com/darlinghq/darling/pull/813,https://github.com/HinTak,9,https://github.com/darlinghq/darling/pull/813#issuecomment-643878533,The last of the current  batch of fixes for Apple's font tools. Please review.,"@CuriousTommy : in the code currently posted, just need to find the value of kMDItemFinderComment from genuine Metadata (Re-exported by CoreServices) . If you have access to genuine mac os x, I'd appreciate some help.
The other values from other frameworks I have checked myself.
Still on my private local repo is more strings like that from the Metadata framework, and also I haven't gotten round to add a new header for these as discussed above. But I see those as probably on-going and I may not be able to get to them any time soon.
So I'd say this is okay to merge except for the value of kMDItemFinderComment. I don't mind it either way - ie you merge it now if you can add/correct/confirm that single value - this would close quite a few issues I filed; or leave this open until I get to the further work. I am inclined to suggest the former, if you have that value handy, considering that it would close a few issues.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,813,2020-05-26T02:12:56Z,2020-06-15T03:50:34Z,2020-06-16T15:55:38Z,MERGED,True,53,1,4,https://github.com/HinTak,Apple fonttools fixes,8,[],https://github.com/darlinghq/darling/pull/813,https://github.com/CuriousTommy,10,https://github.com/darlinghq/darling/pull/813#issuecomment-643887729,The last of the current  batch of fixes for Apple's font tools. Please review.,"I figured out the value, thank you for this PR!",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,813,2020-05-26T02:12:56Z,2020-06-15T03:50:34Z,2020-06-16T15:55:38Z,MERGED,True,53,1,4,https://github.com/HinTak,Apple fonttools fixes,8,[],https://github.com/darlinghq/darling/pull/813,https://github.com/HinTak,11,https://github.com/darlinghq/darling/pull/813#issuecomment-643897131,The last of the current  batch of fixes for Apple's font tools. Please review.,Thanks!,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,817,2020-05-27T01:16:44Z,2020-06-06T03:51:50Z,2020-06-06T03:52:03Z,MERGED,True,1139,74,22,https://github.com/CuriousTommy,Fixing up `src/kernel` to support architectures that use the generic syscall header,1,[],https://github.com/darlinghq/darling/pull/817,https://github.com/CuriousTommy,1,https://github.com/darlinghq/darling/pull/817,"For newer architectures (like ARM64), they share the same generic syscall header. However, there has been a push by the Linux developers to reduce the number of duplicate syscalls in the newer generic syscall header. So Darling will need to work around this issue.
I decided to submit my lazy/bad first draft so that I can easily ask questions about my code.

 ext/

 epoll_create.c | Setting the flag to 0 will cause epoll_create1 to behave like epoll_create
 epoll_wait.c | Setting sigmask to NULL will cause epoll_pwait to behave like epoll_wait
 eventfd.c | Would setting 0 to the flags treat eventfd2 the same as eventfd?
 file_handle.c | What is the difference between the syscall open and openat?
 inotify_init.c | Setting the flag to 0 will cause inotify_init1 to behave like inotify_init


 select

 poll.c | If sigmask is NULL, we only have to worry about adjusting the timeout argument.
 select.c | Setting sigmask as NULL will cause pselect to behave like select.


 stat

 lstat.c
 mkfifo.c


 time/utimes.c
 unistd

 chmod_extended.c
 dup2.c | man page doesn't say anything about being able to set 0, but it seems to work fine in my personal testing.
 getpgrp.c
 mknod.c
 pipe.c | If the flag is set to 0, pipe2 will behave the same as pipe.


 vchroot_userspace.c
 xattr/flistxattr.c","For newer architectures (like ARM64), they share the same generic syscall header. However, there has been a push by the Linux developers to reduce the number of duplicate syscalls in the newer generic syscall header. So Darling will need to work around this issue.
I decided to submit my lazy/bad first draft so that I can easily ask questions about my code.

 ext/

 epoll_create.c | Setting the flag to 0 will cause epoll_create1 to behave like epoll_create
 epoll_wait.c | Setting sigmask to NULL will cause epoll_pwait to behave like epoll_wait
 eventfd.c | Would setting 0 to the flags treat eventfd2 the same as eventfd?
 file_handle.c | What is the difference between the syscall open and openat?
 inotify_init.c | Setting the flag to 0 will cause inotify_init1 to behave like inotify_init


 select

 poll.c | If sigmask is NULL, we only have to worry about adjusting the timeout argument.
 select.c | Setting sigmask as NULL will cause pselect to behave like select.


 stat

 lstat.c
 mkfifo.c


 time/utimes.c
 unistd

 chmod_extended.c
 dup2.c | man page doesn't say anything about being able to set 0, but it seems to work fine in my personal testing.
 getpgrp.c
 mknod.c
 pipe.c | If the flag is set to 0, pipe2 will behave the same as pipe.


 vchroot_userspace.c
 xattr/flistxattr.c",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,817,2020-05-27T01:16:44Z,2020-06-06T03:51:50Z,2020-06-06T03:52:03Z,MERGED,True,1139,74,22,https://github.com/CuriousTommy,Fixing up `src/kernel` to support architectures that use the generic syscall header,1,[],https://github.com/darlinghq/darling/pull/817,https://github.com/CuriousTommy,2,https://github.com/darlinghq/darling/pull/817#issuecomment-637897842,"For newer architectures (like ARM64), they share the same generic syscall header. However, there has been a push by the Linux developers to reduce the number of duplicate syscalls in the newer generic syscall header. So Darling will need to work around this issue.
I decided to submit my lazy/bad first draft so that I can easily ask questions about my code.

 ext/

 epoll_create.c | Setting the flag to 0 will cause epoll_create1 to behave like epoll_create
 epoll_wait.c | Setting sigmask to NULL will cause epoll_pwait to behave like epoll_wait
 eventfd.c | Would setting 0 to the flags treat eventfd2 the same as eventfd?
 file_handle.c | What is the difference between the syscall open and openat?
 inotify_init.c | Setting the flag to 0 will cause inotify_init1 to behave like inotify_init


 select

 poll.c | If sigmask is NULL, we only have to worry about adjusting the timeout argument.
 select.c | Setting sigmask as NULL will cause pselect to behave like select.


 stat

 lstat.c
 mkfifo.c


 time/utimes.c
 unistd

 chmod_extended.c
 dup2.c | man page doesn't say anything about being able to set 0, but it seems to work fine in my personal testing.
 getpgrp.c
 mknod.c
 pipe.c | If the flag is set to 0, pipe2 will behave the same as pipe.


 vchroot_userspace.c
 xattr/flistxattr.c","Okay, I believe everything should be in place. I probably merge this in a few days. Let me know if you need me to change anything.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,825,2020-06-08T00:45:49Z,2021-05-01T03:47:28Z,2021-05-01T03:47:28Z,MERGED,True,37,17,8,https://github.com/TheBrokenRail,Use elfdep To get shlibdeps for DEB,5,[],https://github.com/darlinghq/darling/pull/825,https://github.com/TheBrokenRail,1,https://github.com/darlinghq/darling/pull/825,It also moves the tools/makedeb script to tools/debian/make-deb and the docs must be updated accordingly.,It also moves the tools/makedeb script to tools/debian/make-deb and the docs must be updated accordingly.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,825,2020-06-08T00:45:49Z,2021-05-01T03:47:28Z,2021-05-01T03:47:28Z,MERGED,True,37,17,8,https://github.com/TheBrokenRail,Use elfdep To get shlibdeps for DEB,5,[],https://github.com/darlinghq/darling/pull/825,https://github.com/TheBrokenRail,2,https://github.com/darlinghq/darling/pull/825#issuecomment-640784078,It also moves the tools/makedeb script to tools/debian/make-deb and the docs must be updated accordingly.,"Note this will fail if any MachO is not the same architecture as the clang binary, as the clang binary is used to generate an ELF executable that dpkg-shlibdeps is run on.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,825,2020-06-08T00:45:49Z,2021-05-01T03:47:28Z,2021-05-01T03:47:28Z,MERGED,True,37,17,8,https://github.com/TheBrokenRail,Use elfdep To get shlibdeps for DEB,5,[],https://github.com/darlinghq/darling/pull/825,https://github.com/TheBrokenRail,3,https://github.com/darlinghq/darling/pull/825#issuecomment-640898878,It also moves the tools/makedeb script to tools/debian/make-deb and the docs must be updated accordingly.,"Just finished building, it works!",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,825,2020-06-08T00:45:49Z,2021-05-01T03:47:28Z,2021-05-01T03:47:28Z,MERGED,True,37,17,8,https://github.com/TheBrokenRail,Use elfdep To get shlibdeps for DEB,5,[],https://github.com/darlinghq/darling/pull/825,https://github.com/TheBrokenRail,4,https://github.com/darlinghq/darling/pull/825#issuecomment-646917049,It also moves the tools/makedeb script to tools/debian/make-deb and the docs must be updated accordingly.,Any updates?,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,829,2020-06-11T16:00:29Z,2021-02-09T21:53:44Z,2021-02-09T21:53:44Z,MERGED,True,7,5,1,https://github.com/TheBrokenRail,Auto-Calculate Darling Prefix in tools/uninstall,2,[],https://github.com/darlinghq/darling/pull/829,https://github.com/TheBrokenRail,1,https://github.com/darlinghq/darling/pull/829,"Also switched the shebang to /bin/sh  since the script seemed sh compatible, and there are faster sh implementations than bash like dash.","Also switched the shebang to /bin/sh  since the script seemed sh compatible, and there are faster sh implementations than bash like dash.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,829,2020-06-11T16:00:29Z,2021-02-09T21:53:44Z,2021-02-09T21:53:44Z,MERGED,True,7,5,1,https://github.com/TheBrokenRail,Auto-Calculate Darling Prefix in tools/uninstall,2,[],https://github.com/darlinghq/darling/pull/829,https://github.com/HinTak,2,https://github.com/darlinghq/darling/pull/829#issuecomment-642804026,"Also switched the shebang to /bin/sh  since the script seemed sh compatible, and there are faster sh implementations than bash like dash.",Slightly confusing $DPREFIX (where user files are) vs $DARLING_PREFIX (installation prefix). Suggest not using the latter.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,829,2020-06-11T16:00:29Z,2021-02-09T21:53:44Z,2021-02-09T21:53:44Z,MERGED,True,7,5,1,https://github.com/TheBrokenRail,Auto-Calculate Darling Prefix in tools/uninstall,2,[],https://github.com/darlinghq/darling/pull/829,https://github.com/TheBrokenRail,3,https://github.com/darlinghq/darling/pull/829#issuecomment-642827080,"Also switched the shebang to /bin/sh  since the script seemed sh compatible, and there are faster sh implementations than bash like dash.","DARLING_PREFIX is just an internal variable. It cannot be changed by the outside world, it does not matter what it is called.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,829,2020-06-11T16:00:29Z,2021-02-09T21:53:44Z,2021-02-09T21:53:44Z,MERGED,True,7,5,1,https://github.com/TheBrokenRail,Auto-Calculate Darling Prefix in tools/uninstall,2,[],https://github.com/darlinghq/darling/pull/829,https://github.com/HinTak,4,https://github.com/darlinghq/darling/pull/829#issuecomment-642870084,"Also switched the shebang to /bin/sh  since the script seemed sh compatible, and there are faster sh implementations than bash like dash.",It is about readability...,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,829,2020-06-11T16:00:29Z,2021-02-09T21:53:44Z,2021-02-09T21:53:44Z,MERGED,True,7,5,1,https://github.com/TheBrokenRail,Auto-Calculate Darling Prefix in tools/uninstall,2,[],https://github.com/darlinghq/darling/pull/829,https://github.com/TheBrokenRail,5,https://github.com/darlinghq/darling/pull/829#issuecomment-643487796,"Also switched the shebang to /bin/sh  since the script seemed sh compatible, and there are faster sh implementations than bash like dash.",I updated the variable name.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,829,2020-06-11T16:00:29Z,2021-02-09T21:53:44Z,2021-02-09T21:53:44Z,MERGED,True,7,5,1,https://github.com/TheBrokenRail,Auto-Calculate Darling Prefix in tools/uninstall,2,[],https://github.com/darlinghq/darling/pull/829,https://github.com/TheBrokenRail,6,https://github.com/darlinghq/darling/pull/829#issuecomment-644207654,"Also switched the shebang to /bin/sh  since the script seemed sh compatible, and there are faster sh implementations than bash like dash.",Any updates?,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,829,2020-06-11T16:00:29Z,2021-02-09T21:53:44Z,2021-02-09T21:53:44Z,MERGED,True,7,5,1,https://github.com/TheBrokenRail,Auto-Calculate Darling Prefix in tools/uninstall,2,[],https://github.com/darlinghq/darling/pull/829,https://github.com/TheBrokenRail,7,https://github.com/darlinghq/darling/pull/829#issuecomment-754790681,"Also switched the shebang to /bin/sh  since the script seemed sh compatible, and there are faster sh implementations than bash like dash.",Any updates on this?,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,829,2020-06-11T16:00:29Z,2021-02-09T21:53:44Z,2021-02-09T21:53:44Z,MERGED,True,7,5,1,https://github.com/TheBrokenRail,Auto-Calculate Darling Prefix in tools/uninstall,2,[],https://github.com/darlinghq/darling/pull/829,https://github.com/ahyattdev,8,https://github.com/darlinghq/darling/pull/829#issuecomment-776268810,"Also switched the shebang to /bin/sh  since the script seemed sh compatible, and there are faster sh implementations than bash like dash.",LGTM,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,832,2020-06-12T22:41:40Z,2020-06-16T22:46:32Z,2020-06-16T22:46:32Z,MERGED,True,165,0,7,https://github.com/TheBrokenRail,Add Issue Templates,7,[],https://github.com/darlinghq/darling/pull/832,https://github.com/TheBrokenRail,1,https://github.com/darlinghq/darling/pull/832,This should make it easier for new people.,This should make it easier for new people.,True,{'THUMBS_UP': ['https://github.com/CuriousTommy']}
darlinghq/darling,https://github.com/darlinghq/darling,832,2020-06-12T22:41:40Z,2020-06-16T22:46:32Z,2020-06-16T22:46:32Z,MERGED,True,165,0,7,https://github.com/TheBrokenRail,Add Issue Templates,7,[],https://github.com/darlinghq/darling/pull/832,https://github.com/facekapow,2,https://github.com/darlinghq/darling/pull/832#issuecomment-645049484,This should make it easier for new people.,"I'm going to go ahead and merge this, since everything look good and it should help new users (well, everyone, actually) create better issues with more useful information from the start. Thanks, @TheBrokenRail!",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,852,2020-07-23T17:47:41Z,2020-07-23T17:52:19Z,2020-07-23T19:37:15Z,CLOSED,False,9,3,1,https://github.com/HinTak,limiting recursive file-wiping to known ones created by darling,1,[],https://github.com/darlinghq/darling/pull/852,https://github.com/HinTak,1,https://github.com/darlinghq/darling/pull/852,See #848,See #848,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,852,2020-07-23T17:47:41Z,2020-07-23T17:52:19Z,2020-07-23T19:37:15Z,CLOSED,False,9,3,1,https://github.com/HinTak,limiting recursive file-wiping to known ones created by darling,1,[],https://github.com/darlinghq/darling/pull/852,https://github.com/bugaevc,2,https://github.com/darlinghq/darling/pull/852#issuecomment-663146154,See #848,"I'm sorry, but no, we do actually want to wipe /var/tmp and /var/run, not just those files that launchd/shellspawn create when you start the container — anything any programs you might run would create there.
To fix #848, we need to figure out what has actually gone wrong. If it is indeed these lines that are causing your host files to be wiped, then why.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,852,2020-07-23T17:47:41Z,2020-07-23T17:52:19Z,2020-07-23T19:37:15Z,CLOSED,False,9,3,1,https://github.com/HinTak,limiting recursive file-wiping to known ones created by darling,1,[],https://github.com/darlinghq/darling/pull/852,https://github.com/HinTak,3,https://github.com/darlinghq/darling/pull/852#issuecomment-663149366,See #848,"""/var/run"" is on the bottom of the overlay so it does not need to go and likely won't go. I haven't figured out what creates ""/var/tmp"" itself, but I'd prefer not to touch it if unsure.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,852,2020-07-23T17:47:41Z,2020-07-23T17:52:19Z,2020-07-23T19:37:15Z,CLOSED,False,9,3,1,https://github.com/HinTak,limiting recursive file-wiping to known ones created by darling,1,[],https://github.com/darlinghq/darling/pull/852,https://github.com/HinTak,4,https://github.com/darlinghq/darling/pull/852#issuecomment-663151031,See #848,"I'd beg to differ - it is simply not safe to do recursive delete, regardless of whether that causes #848 .",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,852,2020-07-23T17:47:41Z,2020-07-23T17:52:19Z,2020-07-23T19:37:15Z,CLOSED,False,9,3,1,https://github.com/HinTak,limiting recursive file-wiping to known ones created by darling,1,[],https://github.com/darlinghq/darling/pull/852,https://github.com/bugaevc,5,https://github.com/darlinghq/darling/pull/852#issuecomment-663158224,See #848,I don't think I understand your point — how or why is it not safe to delete recursively?,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,852,2020-07-23T17:47:41Z,2020-07-23T17:52:19Z,2020-07-23T19:37:15Z,CLOSED,False,9,3,1,https://github.com/HinTak,limiting recursive file-wiping to known ones created by darling,1,[],https://github.com/darlinghq/darling/pull/852,https://github.com/HinTak,6,https://github.com/darlinghq/darling/pull/852#issuecomment-663165143,See #848,"Also darling's main executable is suid root... I'll really ask you, why should silent and automated recursive delete ever be done? And silently and without asking the user to confirm too?",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,852,2020-07-23T17:47:41Z,2020-07-23T17:52:19Z,2020-07-23T19:37:15Z,CLOSED,False,9,3,1,https://github.com/HinTak,limiting recursive file-wiping to known ones created by darling,1,[],https://github.com/darlinghq/darling/pull/852,https://github.com/bugaevc,7,https://github.com/darlinghq/darling/pull/852#issuecomment-663168099,See #848,"Because these are internal temp files that are normally cleaned up on every reboot, so that is what we do / emulate. You're not surprised your host's /tmp and /run start empty on each reboot, without asking for confirmation, are you? We do the same for container's tmp and run.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,852,2020-07-23T17:47:41Z,2020-07-23T17:52:19Z,2020-07-23T19:37:15Z,CLOSED,False,9,3,1,https://github.com/HinTak,limiting recursive file-wiping to known ones created by darling,1,[],https://github.com/darlinghq/darling/pull/852,https://github.com/HinTak,8,https://github.com/darlinghq/darling/pull/852#issuecomment-663168482,See #848,"And the darling start-up code is a host process - any mistakes, it recurses down host paths...",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,852,2020-07-23T17:47:41Z,2020-07-23T17:52:19Z,2020-07-23T19:37:15Z,CLOSED,False,9,3,1,https://github.com/HinTak,limiting recursive file-wiping to known ones created by darling,1,[],https://github.com/darlinghq/darling/pull/852,https://github.com/bugaevc,9,https://github.com/darlinghq/darling/pull/852#issuecomment-663170214,See #848,"FWIW, we do want to not have to run it as setuid root, eventually. But we do check that you own the prefix before doing anything with it, including wiping those directories. If there's a bug there somewhere, we should get that fixed.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,852,2020-07-23T17:47:41Z,2020-07-23T17:52:19Z,2020-07-23T19:37:15Z,CLOSED,False,9,3,1,https://github.com/HinTak,limiting recursive file-wiping to known ones created by darling,1,[],https://github.com/darlinghq/darling/pull/852,https://github.com/HinTak,10,https://github.com/darlinghq/darling/pull/852#issuecomment-663171537,See #848,"Well, unfortunately, as I wrote in the bug report, checking ownership does not help - the external drive was mounted by udisks2 on behalf of the console user, and so is the tmpfs used by gnome/dbus ...",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,852,2020-07-23T17:47:41Z,2020-07-23T17:52:19Z,2020-07-23T19:37:15Z,CLOSED,False,9,3,1,https://github.com/HinTak,limiting recursive file-wiping to known ones created by darling,1,[],https://github.com/darlinghq/darling/pull/852,https://github.com/HinTak,11,https://github.com/darlinghq/darling/pull/852#issuecomment-663172157,See #848,"I also see in the start up code you try to load the kernel module, which requires root privilege anyway.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,852,2020-07-23T17:47:41Z,2020-07-23T17:52:19Z,2020-07-23T19:37:15Z,CLOSED,False,9,3,1,https://github.com/HinTak,limiting recursive file-wiping to known ones created by darling,1,[],https://github.com/darlinghq/darling/pull/852,https://github.com/bugaevc,12,https://github.com/darlinghq/darling/pull/852#issuecomment-663173441,See #848,"Well, we have no evidence that this wiping logic is actually to blame for clearing your drives; it's only a suspicion of mine. And I don't see any apparent bugs with it that would cause it to ignore DPREFIX and operate on the host directory structure.
A step forward would be for you to add some tracing to this code (at least print which directories it's trying to wipe) and try to repro the bug.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,852,2020-07-23T17:47:41Z,2020-07-23T17:52:19Z,2020-07-23T19:37:15Z,CLOSED,False,9,3,1,https://github.com/HinTak,limiting recursive file-wiping to known ones created by darling,1,[],https://github.com/darlinghq/darling/pull/852,https://github.com/HinTak,13,https://github.com/darlinghq/darling/pull/852#issuecomment-663173629,See #848,Actually I explicitly disabled systemd's unit to periodically wipe /tmp . systemd's defaults to remove any files in /tmp that has not been used within 10 days - I found that crazy.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,852,2020-07-23T17:47:41Z,2020-07-23T17:52:19Z,2020-07-23T19:37:15Z,CLOSED,False,9,3,1,https://github.com/HinTak,limiting recursive file-wiping to known ones created by darling,1,[],https://github.com/darlinghq/darling/pull/852,https://github.com/HinTak,14,https://github.com/darlinghq/darling/pull/852#issuecomment-663176109,See #848,"To be honest I'd prefer not to try to ""reproduce"" this bug - you think seeing it twice and losing 350 GB in one, and another 20 GB in another, is not enough???",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,852,2020-07-23T17:47:41Z,2020-07-23T17:52:19Z,2020-07-23T19:37:15Z,CLOSED,False,9,3,1,https://github.com/HinTak,limiting recursive file-wiping to known ones created by darling,1,[],https://github.com/darlinghq/darling/pull/852,https://github.com/HinTak,15,https://github.com/darlinghq/darling/pull/852#issuecomment-663178217,See #848,"I'd put in every precaution, and every protection I can think of, like this pull, before I even use darling at all again!",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,852,2020-07-23T17:47:41Z,2020-07-23T17:52:19Z,2020-07-23T19:37:15Z,CLOSED,False,9,3,1,https://github.com/HinTak,limiting recursive file-wiping to known ones created by darling,1,[],https://github.com/darlinghq/darling/pull/852,https://github.com/bugaevc,16,https://github.com/darlinghq/darling/pull/852#issuecomment-663178511,See #848,"0th rule of Darling development: only ever use Darling on a VM, never on the host (or worse, on your daily driver system).",True,{'THUMBS_UP': ['https://github.com/facekapow']}
darlinghq/darling,https://github.com/darlinghq/darling,852,2020-07-23T17:47:41Z,2020-07-23T17:52:19Z,2020-07-23T19:37:15Z,CLOSED,False,9,3,1,https://github.com/HinTak,limiting recursive file-wiping to known ones created by darling,1,[],https://github.com/darlinghq/darling/pull/852,https://github.com/HinTak,17,https://github.com/darlinghq/darling/pull/852#issuecomment-663180106,See #848,You should put that in the top level readme - see how many contributors you'd lose.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,852,2020-07-23T17:47:41Z,2020-07-23T17:52:19Z,2020-07-23T19:37:15Z,CLOSED,False,9,3,1,https://github.com/HinTak,limiting recursive file-wiping to known ones created by darling,1,[],https://github.com/darlinghq/darling/pull/852,https://github.com/HinTak,18,https://github.com/darlinghq/darling/pull/852#issuecomment-663181026,See #848,"If I want to run a VM, I'd just run Mac OS X in kvm.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,852,2020-07-23T17:47:41Z,2020-07-23T17:52:19Z,2020-07-23T19:37:15Z,CLOSED,False,9,3,1,https://github.com/HinTak,limiting recursive file-wiping to known ones created by darling,1,[],https://github.com/darlinghq/darling/pull/852,https://github.com/bugaevc,19,https://github.com/darlinghq/darling/pull/852#issuecomment-663185214,See #848,"It's not like we have tons of contributors to lose some... But it is in the docs: ""Be prepared for kernel hangups and crashes, and run Darling on a virtual machine if possible."" (And it used to be worded stronger, if memory serves me right.)
Look, I understand you're upset about losing your data — and I can empathize, I've once lost a whole drive too (by accidentally dd'ing to a wrong destination). If you don't want anything like that to happen to you again, don't run software you can't trust to behave without sandboxing it.
If you want to help us track down and fix this bug (if it even is our bug, and not something else on your system), the way to go about that would be to reproduce it (on a VM, of course) and see if it's darling.c wiping wrong directories, or launchd shutting down, or what.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,852,2020-07-23T17:47:41Z,2020-07-23T17:52:19Z,2020-07-23T19:37:15Z,CLOSED,False,9,3,1,https://github.com/HinTak,limiting recursive file-wiping to known ones created by darling,1,[],https://github.com/darlinghq/darling/pull/852,https://github.com/HinTak,20,https://github.com/darlinghq/darling/pull/852#issuecomment-663192269,See #848,"It already happened twice. I'd prefer to see some precautionary code like this pull (not necessarily as is - you are free to improve on it, instead of just closing) to be included, before I even use darling again.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,852,2020-07-23T17:47:41Z,2020-07-23T17:52:19Z,2020-07-23T19:37:15Z,CLOSED,False,9,3,1,https://github.com/HinTak,limiting recursive file-wiping to known ones created by darling,1,[],https://github.com/darlinghq/darling/pull/852,https://github.com/HinTak,21,https://github.com/darlinghq/darling/pull/852#issuecomment-663194493,See #848,"And it is not like that bit in recursive wiping code is carved in stone - even as recent as 6 months ago it was wiping things it should not ff12c56#diff-cd6f834c4e69dc3152d667c814eb15c8
@LubosD so I'd really like this pull to be re-opened, and improved upon if needed, before any further usage.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,857,2020-08-05T02:44:20Z,2021-02-09T21:51:19Z,2021-02-09T21:51:19Z,MERGED,True,3,1,1,https://github.com/r-wilbur,Avoid out of range array access.,1,[],https://github.com/darlinghq/darling/pull/857,https://github.com/r-wilbur,1,https://github.com/darlinghq/darling/pull/857,Simple changes to avoid possible out-of-range array access in errno_linux_to_bsd().  Should require little to no maintenance as it simply calculates the size of the array and then compares the index to the size before making an access.,Simple changes to avoid possible out-of-range array access in errno_linux_to_bsd().  Should require little to no maintenance as it simply calculates the size of the array and then compares the index to the size before making an access.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,864,2020-08-19T00:16:57Z,2020-09-15T18:05:06Z,2020-09-15T18:26:24Z,MERGED,True,26,14,6,https://github.com/andyneff,Update to work on Fedora 31 with newest version,3,[],https://github.com/darlinghq/darling/pull/864,https://github.com/andyneff,1,https://github.com/darlinghq/darling/pull/864,"Note, I didn't make Fedora 32 the default version, only because I don't currently have Fedora 32 to test the RPMs on. But I fully expect them to work. if someone uses them on Fedora 32","Note, I didn't make Fedora 32 the default version, only because I don't currently have Fedora 32 to test the RPMs on. But I fully expect them to work. if someone uses them on Fedora 32",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,864,2020-08-19T00:16:57Z,2020-09-15T18:05:06Z,2020-09-15T18:26:24Z,MERGED,True,26,14,6,https://github.com/andyneff,Update to work on Fedora 31 with newest version,3,[],https://github.com/darlinghq/darling/pull/864,https://github.com/bugaevc,2,https://github.com/darlinghq/darling/pull/864#issuecomment-675834421,"Note, I didn't make Fedora 32 the default version, only because I don't currently have Fedora 32 to test the RPMs on. But I fully expect them to work. if someone uses them on Fedora 32",Why change dnf to yum?,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,864,2020-08-19T00:16:57Z,2020-09-15T18:05:06Z,2020-09-15T18:26:24Z,MERGED,True,26,14,6,https://github.com/andyneff,Update to work on Fedora 31 with newest version,3,[],https://github.com/darlinghq/darling/pull/864,https://github.com/andyneff,3,https://github.com/darlinghq/darling/pull/864#issuecomment-676137660,"Note, I didn't make Fedora 32 the default version, only because I don't currently have Fedora 32 to test the RPMs on. But I fully expect them to work. if someone uses them on Fedora 32","I was going to play with the idea of making it work on CentOS 7, which uses yum. Fedora had always accepted yum thus far...
However I was reading the docs and I see that kernel 5.0 is a now a minimum requirement, so I will abort that en devour and will restore it to dnf. Thanks for the feedback!",True,"{'THUMBS_UP': ['https://github.com/lin7sh'], 'HOORAY': ['https://github.com/lin7sh']}"
darlinghq/darling,https://github.com/darlinghq/darling,864,2020-08-19T00:16:57Z,2020-09-15T18:05:06Z,2020-09-15T18:26:24Z,MERGED,True,26,14,6,https://github.com/andyneff,Update to work on Fedora 31 with newest version,3,[],https://github.com/darlinghq/darling/pull/864,https://github.com/bugaevc,4,https://github.com/darlinghq/darling/pull/864#issuecomment-676195740,"Note, I didn't make Fedora 32 the default version, only because I don't currently have Fedora 32 to test the RPMs on. But I fully expect them to work. if someone uses them on Fedora 32","I was going to play with the idea of making it work on CentOS 7, which uses yum.

But the Dockerfile explicitly requests Fedora. The resulting RPM may work on CentOS for all I know, but it's getting built on Fedora. Or am I wrong?",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,864,2020-08-19T00:16:57Z,2020-09-15T18:05:06Z,2020-09-15T18:26:24Z,MERGED,True,26,14,6,https://github.com/andyneff,Update to work on Fedora 31 with newest version,3,[],https://github.com/darlinghq/darling/pull/864,https://github.com/andyneff,5,https://github.com/darlinghq/darling/pull/864#issuecomment-676226191,"Note, I didn't make Fedora 32 the default version, only because I don't currently have Fedora 32 to test the RPMs on. But I fully expect them to work. if someone uses them on Fedora 32","@bugaevc Yes, the default OS is indeed Fedora. But there is an argument that can replace the OS, at build time. And I was looking into the idea of supporting CentOS as an OS value too. It is always best to build the package for the exact OS you are running.
For example, Ubuntu 16.04 is based off of debian 9, but I've had cases where using a debian 9 deb failed (and debian 8 just happened to work barely). Point is matching the OS exactly makes sure it will work. where as using the LIKE OS is risky
But, this is all moot, as even CentOS 8 is based off of kernel 4.18, which is too old for a 5 requirement.

So, in the end, if you are running Fedora 31, all you need to do is run docker-compose build; docker-compose run rpm
If you are Fedora 32, then run RPM_OS=fedora:32 docker-compose build; docker-compose run rpm
And if you are running CentOS/RHEL, you don't meet minimum requirements, so it does not matter.",True,{'THUMBS_UP': ['https://github.com/lin7sh']}
darlinghq/darling,https://github.com/darlinghq/darling,864,2020-08-19T00:16:57Z,2020-09-15T18:05:06Z,2020-09-15T18:26:24Z,MERGED,True,26,14,6,https://github.com/andyneff,Update to work on Fedora 31 with newest version,3,[],https://github.com/darlinghq/darling/pull/864,https://github.com/HinTak,6,https://github.com/darlinghq/darling/pull/864#issuecomment-676359069,"Note, I didn't make Fedora 32 the default version, only because I don't currently have Fedora 32 to test the RPMs on. But I fully expect them to work. if someone uses them on Fedora 32","Just to correct - I believe earlier yum emits a warning; but yum on fedora 32 is a reimplementation based on dnf. Anyway, the whole point of docker is that you can run/build things in an environment which looks like the real thing, so you should build in a centos docker for centos, ubuntu docker for ubuntu, etc.
That said, yes, if centos is still on kernel 4.x, this is irrelevant, since darling does not run on 4.x kernels (it may have in the past , when 4.x was current) and there is little value in trying to support old kernels.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,864,2020-08-19T00:16:57Z,2020-09-15T18:05:06Z,2020-09-15T18:26:24Z,MERGED,True,26,14,6,https://github.com/andyneff,Update to work on Fedora 31 with newest version,3,[],https://github.com/darlinghq/darling/pull/864,https://github.com/andyneff,7,https://github.com/darlinghq/darling/pull/864#issuecomment-677661412,"Note, I didn't make Fedora 32 the default version, only because I don't currently have Fedora 32 to test the RPMs on. But I fully expect them to work. if someone uses them on Fedora 32","Due to the order of event, updating a kernel module (using dkms) would update the new kernel module, just to then remove it. This was an annoying bug I wasn't entirely sure how to fix.
This occurred due to the order yum (or rpm?) updates packages. First it installs the new package, then after that, it removes the old package.
New version

Pre-install script
Installs files
Post-install script

Old version

Pre-uninstall script
Uninstalls files
Post-uninstall script

So if the version numbers were the same, the post-uninstall (6) step would remove the kernel module that was added in step 3. Not ideal.
I tried following the steps in a similar dell/dkms#25, but even that didn't work right, it crashed on add. So I added a pre step to remove the dkms module, and that worked out. So I think this is the best solution now.
Doing a few more tests before the PR is ready",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,864,2020-08-19T00:16:57Z,2020-09-15T18:05:06Z,2020-09-15T18:26:24Z,MERGED,True,26,14,6,https://github.com/andyneff,Update to work on Fedora 31 with newest version,3,[],https://github.com/darlinghq/darling/pull/864,https://github.com/andyneff,8,https://github.com/darlinghq/darling/pull/864#issuecomment-692881056,"Note, I didn't make Fedora 32 the default version, only because I don't currently have Fedora 32 to test the RPMs on. But I fully expect them to work. if someone uses them on Fedora 32","All my tests proved successful.
@HinTak @bugaevc Are there any other changes you need me to make?",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,864,2020-08-19T00:16:57Z,2020-09-15T18:05:06Z,2020-09-15T18:26:24Z,MERGED,True,26,14,6,https://github.com/andyneff,Update to work on Fedora 31 with newest version,3,[],https://github.com/darlinghq/darling/pull/864,https://github.com/HinTak,9,https://github.com/darlinghq/darling/pull/864#issuecomment-692893610,"Note, I didn't make Fedora 32 the default version, only because I don't currently have Fedora 32 to test the RPMs on. But I fully expect them to work. if someone uses them on Fedora 32","Looks alright. About the dkms  issue - I think there is a dkms service which runs on booting a new kernel, so a post-install step may not be needed? Also I have an impression that some dkms installation just leaves modules behind - it means eventually /lib/modules accumulates old unused modules.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,898,2020-12-01T16:04:16Z,2021-02-20T02:49:22Z,2021-02-20T02:51:28Z,MERGED,True,413605,373646,7629,https://github.com/facekapow,Update sources,414,[],https://github.com/darlinghq/darling/pull/898,https://github.com/facekapow,1,https://github.com/darlinghq/darling/pull/898,"That's right, it's finally here. It took a while, but I think this branch is finally stable enough to merge!
Major changes
Well first of all, as the branch name indicates, this is an update to all of our open source Apple code (updated to 10.15.2, but not much changed into 10.15.6). The biggest changes in Apple's code this time are in libpthread (and a few of the other system libraries like libsystem_c and libplatform).
However, this is also a major change for Darling's code as well. Most notably, our kqueue support now happens in-kernel, taking advantage of XNU's kqueue code as well, so our kqueue emulation should be more accurate and easier to maintain now.
Darling's build system also got a slight renovation. Many of our CMake support functions got more features to help support Apple's complex library dependencies and allow us to build them to accurately reflect how they're set up on macOS. I also tried to unify our headers into a single SDK in /Developer (though that could still be further organized into a proper SDK).
Other notable changes

Adds LibreSSL (progresses #718; missing BoringSSL)

Apple has switched over some OS tools (e.g. curl) to use this instead of SecureTransport, so HTTPS with those should be faster and more stable now (our CoreCrypto implementation still needs much improvement)


New ADDITIONAL_PACKAGES option for CMake

Enables a few non-standard (but very useful) utilities to be built and installed
Currently enables:

gnutar - The GNU version of tar
jsc - A JavaScript REPL built on JavaScriptCore
ash - Predecessor to dash. Apple plans to replace /bin/sh with ash , but they haven't done so yet, so this is locked behind ADDITIONAL_PACKAGES.




Quite a few more stubs and stubbed libraries

The biggest of which is libnetwork, which is Apple's shiny new networking library. Most users of this would probably be GUI applications (via the Network framework).


Various libsystem_kernel fixes for proper behavior
Includes fixes to allow Darling to compile under Clang 11+

This fixes #856 and also fixes #897.



Testing
I've tested much of this branch with as many different programs I could think of. Some have known issues (listed in the next section and for which I will be creating tracking issues), but for the most part, everything is working (at least as well as it is in master).
The mio and tokio testsuites have been a big help in rooting out problems in kqueue, psynch, and libsystem_kernel. Most of the issues found with those have been fixed (with the exceptions being most UDP-related errors).
However, since this is such a big set of changes, I'd like anyone that's willing to go ahead and test it out. Throw anything you can at it, especially stuff that's currently working in master. When you find issues, create an issue and make sure to include the Darling commit you tested it on so we can separate issues with the update from normal issues on master.
Known issues
I'll create tracking issues for these:

rustup doesn't work (fails to download anything)
brew install wget can blow up while trying to install openssl@1.1
zsh doesn't work (hangs forever when trying to run something that's not builtin)
jsc doesn't work (hangs before going into the REPL)
lldb crashes semi-randomly (occurs more frequently when trying to attach to a running program)","That's right, it's finally here. It took a while, but I think this branch is finally stable enough to merge!
Major changes
Well first of all, as the branch name indicates, this is an update to all of our open source Apple code (updated to 10.15.2, but not much changed into 10.15.6). The biggest changes in Apple's code this time are in libpthread (and a few of the other system libraries like libsystem_c and libplatform).
However, this is also a major change for Darling's code as well. Most notably, our kqueue support now happens in-kernel, taking advantage of XNU's kqueue code as well, so our kqueue emulation should be more accurate and easier to maintain now.
Darling's build system also got a slight renovation. Many of our CMake support functions got more features to help support Apple's complex library dependencies and allow us to build them to accurately reflect how they're set up on macOS. I also tried to unify our headers into a single SDK in /Developer (though that could still be further organized into a proper SDK).
Other notable changes

Adds LibreSSL (progresses #718; missing BoringSSL)

Apple has switched over some OS tools (e.g. curl) to use this instead of SecureTransport, so HTTPS with those should be faster and more stable now (our CoreCrypto implementation still needs much improvement)


New ADDITIONAL_PACKAGES option for CMake

Enables a few non-standard (but very useful) utilities to be built and installed
Currently enables:

gnutar - The GNU version of tar
jsc - A JavaScript REPL built on JavaScriptCore
ash - Predecessor to dash. Apple plans to replace /bin/sh with ash , but they haven't done so yet, so this is locked behind ADDITIONAL_PACKAGES.




Quite a few more stubs and stubbed libraries

The biggest of which is libnetwork, which is Apple's shiny new networking library. Most users of this would probably be GUI applications (via the Network framework).


Various libsystem_kernel fixes for proper behavior
Includes fixes to allow Darling to compile under Clang 11+

This fixes #856 and also fixes #897.



Testing
I've tested much of this branch with as many different programs I could think of. Some have known issues (listed in the next section and for which I will be creating tracking issues), but for the most part, everything is working (at least as well as it is in master).
The mio and tokio testsuites have been a big help in rooting out problems in kqueue, psynch, and libsystem_kernel. Most of the issues found with those have been fixed (with the exceptions being most UDP-related errors).
However, since this is such a big set of changes, I'd like anyone that's willing to go ahead and test it out. Throw anything you can at it, especially stuff that's currently working in master. When you find issues, create an issue and make sure to include the Darling commit you tested it on so we can separate issues with the update from normal issues on master.
Known issues
I'll create tracking issues for these:

rustup doesn't work (fails to download anything)
brew install wget can blow up while trying to install openssl@1.1
zsh doesn't work (hangs forever when trying to run something that's not builtin)
jsc doesn't work (hangs before going into the REPL)
lldb crashes semi-randomly (occurs more frequently when trying to attach to a running program)",True,"{'THUMBS_UP': ['https://github.com/h5n1xp', 'https://github.com/CuriousTommy', 'https://github.com/bugaevc', 'https://github.com/rdrpenguin04', 'https://github.com/JustAPotota', 'https://github.com/JCWasmx86'], 'EYES': ['https://github.com/avindra']}"
darlinghq/darling,https://github.com/darlinghq/darling,898,2020-12-01T16:04:16Z,2021-02-20T02:49:22Z,2021-02-20T02:51:28Z,MERGED,True,413605,373646,7629,https://github.com/facekapow,Update sources,414,[],https://github.com/darlinghq/darling/pull/898,https://github.com/facekapow,2,https://github.com/darlinghq/darling/pull/898#issuecomment-736652512,"That's right, it's finally here. It took a while, but I think this branch is finally stable enough to merge!
Major changes
Well first of all, as the branch name indicates, this is an update to all of our open source Apple code (updated to 10.15.2, but not much changed into 10.15.6). The biggest changes in Apple's code this time are in libpthread (and a few of the other system libraries like libsystem_c and libplatform).
However, this is also a major change for Darling's code as well. Most notably, our kqueue support now happens in-kernel, taking advantage of XNU's kqueue code as well, so our kqueue emulation should be more accurate and easier to maintain now.
Darling's build system also got a slight renovation. Many of our CMake support functions got more features to help support Apple's complex library dependencies and allow us to build them to accurately reflect how they're set up on macOS. I also tried to unify our headers into a single SDK in /Developer (though that could still be further organized into a proper SDK).
Other notable changes

Adds LibreSSL (progresses #718; missing BoringSSL)

Apple has switched over some OS tools (e.g. curl) to use this instead of SecureTransport, so HTTPS with those should be faster and more stable now (our CoreCrypto implementation still needs much improvement)


New ADDITIONAL_PACKAGES option for CMake

Enables a few non-standard (but very useful) utilities to be built and installed
Currently enables:

gnutar - The GNU version of tar
jsc - A JavaScript REPL built on JavaScriptCore
ash - Predecessor to dash. Apple plans to replace /bin/sh with ash , but they haven't done so yet, so this is locked behind ADDITIONAL_PACKAGES.




Quite a few more stubs and stubbed libraries

The biggest of which is libnetwork, which is Apple's shiny new networking library. Most users of this would probably be GUI applications (via the Network framework).


Various libsystem_kernel fixes for proper behavior
Includes fixes to allow Darling to compile under Clang 11+

This fixes #856 and also fixes #897.



Testing
I've tested much of this branch with as many different programs I could think of. Some have known issues (listed in the next section and for which I will be creating tracking issues), but for the most part, everything is working (at least as well as it is in master).
The mio and tokio testsuites have been a big help in rooting out problems in kqueue, psynch, and libsystem_kernel. Most of the issues found with those have been fixed (with the exceptions being most UDP-related errors).
However, since this is such a big set of changes, I'd like anyone that's willing to go ahead and test it out. Throw anything you can at it, especially stuff that's currently working in master. When you find issues, create an issue and make sure to include the Darling commit you tested it on so we can separate issues with the update from normal issues on master.
Known issues
I'll create tracking issues for these:

rustup doesn't work (fails to download anything)
brew install wget can blow up while trying to install openssl@1.1
zsh doesn't work (hangs forever when trying to run something that's not builtin)
jsc doesn't work (hangs before going into the REPL)
lldb crashes semi-randomly (occurs more frequently when trying to attach to a running program)","For those that want to test out this branch, basically follow the same instructions at https://docs.darlinghq.org/build-instructions.html, except add --branch=update-sources to the git clone command.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,898,2020-12-01T16:04:16Z,2021-02-20T02:49:22Z,2021-02-20T02:51:28Z,MERGED,True,413605,373646,7629,https://github.com/facekapow,Update sources,414,[],https://github.com/darlinghq/darling/pull/898,https://github.com/ahyattdev,3,https://github.com/darlinghq/darling/pull/898#issuecomment-736870094,"That's right, it's finally here. It took a while, but I think this branch is finally stable enough to merge!
Major changes
Well first of all, as the branch name indicates, this is an update to all of our open source Apple code (updated to 10.15.2, but not much changed into 10.15.6). The biggest changes in Apple's code this time are in libpthread (and a few of the other system libraries like libsystem_c and libplatform).
However, this is also a major change for Darling's code as well. Most notably, our kqueue support now happens in-kernel, taking advantage of XNU's kqueue code as well, so our kqueue emulation should be more accurate and easier to maintain now.
Darling's build system also got a slight renovation. Many of our CMake support functions got more features to help support Apple's complex library dependencies and allow us to build them to accurately reflect how they're set up on macOS. I also tried to unify our headers into a single SDK in /Developer (though that could still be further organized into a proper SDK).
Other notable changes

Adds LibreSSL (progresses #718; missing BoringSSL)

Apple has switched over some OS tools (e.g. curl) to use this instead of SecureTransport, so HTTPS with those should be faster and more stable now (our CoreCrypto implementation still needs much improvement)


New ADDITIONAL_PACKAGES option for CMake

Enables a few non-standard (but very useful) utilities to be built and installed
Currently enables:

gnutar - The GNU version of tar
jsc - A JavaScript REPL built on JavaScriptCore
ash - Predecessor to dash. Apple plans to replace /bin/sh with ash , but they haven't done so yet, so this is locked behind ADDITIONAL_PACKAGES.




Quite a few more stubs and stubbed libraries

The biggest of which is libnetwork, which is Apple's shiny new networking library. Most users of this would probably be GUI applications (via the Network framework).


Various libsystem_kernel fixes for proper behavior
Includes fixes to allow Darling to compile under Clang 11+

This fixes #856 and also fixes #897.



Testing
I've tested much of this branch with as many different programs I could think of. Some have known issues (listed in the next section and for which I will be creating tracking issues), but for the most part, everything is working (at least as well as it is in master).
The mio and tokio testsuites have been a big help in rooting out problems in kqueue, psynch, and libsystem_kernel. Most of the issues found with those have been fixed (with the exceptions being most UDP-related errors).
However, since this is such a big set of changes, I'd like anyone that's willing to go ahead and test it out. Throw anything you can at it, especially stuff that's currently working in master. When you find issues, create an issue and make sure to include the Darling commit you tested it on so we can separate issues with the update from normal issues on master.
Known issues
I'll create tracking issues for these:

rustup doesn't work (fails to download anything)
brew install wget can blow up while trying to install openssl@1.1
zsh doesn't work (hangs forever when trying to run something that's not builtin)
jsc doesn't work (hangs before going into the REPL)
lldb crashes semi-randomly (occurs more frequently when trying to attach to a running program)","Awesome @facekapow! I'm trying this out now, just cloned the sources. Trying to build with ninja and got this:
vmuser@devubuntu2010:~/darling/build$ ninja
ninja: error: build.ninja:14659: multiple rules generate src/kernel/libsyscall/mach/mach_portXtraceMig.c [-w dupbuild=err]

I am not sure if it was introduced by your branch or not. going to continue with making it  warning",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,898,2020-12-01T16:04:16Z,2021-02-20T02:49:22Z,2021-02-20T02:51:28Z,MERGED,True,413605,373646,7629,https://github.com/facekapow,Update sources,414,[],https://github.com/darlinghq/darling/pull/898,https://github.com/ahyattdev,4,https://github.com/darlinghq/darling/pull/898#issuecomment-736870703,"That's right, it's finally here. It took a while, but I think this branch is finally stable enough to merge!
Major changes
Well first of all, as the branch name indicates, this is an update to all of our open source Apple code (updated to 10.15.2, but not much changed into 10.15.6). The biggest changes in Apple's code this time are in libpthread (and a few of the other system libraries like libsystem_c and libplatform).
However, this is also a major change for Darling's code as well. Most notably, our kqueue support now happens in-kernel, taking advantage of XNU's kqueue code as well, so our kqueue emulation should be more accurate and easier to maintain now.
Darling's build system also got a slight renovation. Many of our CMake support functions got more features to help support Apple's complex library dependencies and allow us to build them to accurately reflect how they're set up on macOS. I also tried to unify our headers into a single SDK in /Developer (though that could still be further organized into a proper SDK).
Other notable changes

Adds LibreSSL (progresses #718; missing BoringSSL)

Apple has switched over some OS tools (e.g. curl) to use this instead of SecureTransport, so HTTPS with those should be faster and more stable now (our CoreCrypto implementation still needs much improvement)


New ADDITIONAL_PACKAGES option for CMake

Enables a few non-standard (but very useful) utilities to be built and installed
Currently enables:

gnutar - The GNU version of tar
jsc - A JavaScript REPL built on JavaScriptCore
ash - Predecessor to dash. Apple plans to replace /bin/sh with ash , but they haven't done so yet, so this is locked behind ADDITIONAL_PACKAGES.




Quite a few more stubs and stubbed libraries

The biggest of which is libnetwork, which is Apple's shiny new networking library. Most users of this would probably be GUI applications (via the Network framework).


Various libsystem_kernel fixes for proper behavior
Includes fixes to allow Darling to compile under Clang 11+

This fixes #856 and also fixes #897.



Testing
I've tested much of this branch with as many different programs I could think of. Some have known issues (listed in the next section and for which I will be creating tracking issues), but for the most part, everything is working (at least as well as it is in master).
The mio and tokio testsuites have been a big help in rooting out problems in kqueue, psynch, and libsystem_kernel. Most of the issues found with those have been fixed (with the exceptions being most UDP-related errors).
However, since this is such a big set of changes, I'd like anyone that's willing to go ahead and test it out. Throw anything you can at it, especially stuff that's currently working in master. When you find issues, create an issue and make sure to include the Darling commit you tested it on so we can separate issues with the update from normal issues on master.
Known issues
I'll create tracking issues for these:

rustup doesn't work (fails to download anything)
brew install wget can blow up while trying to install openssl@1.1
zsh doesn't work (hangs forever when trying to run something that's not builtin)
jsc doesn't work (hangs before going into the REPL)
lldb crashes semi-randomly (occurs more frequently when trying to attach to a running program)","it fails early on with this:
FAILED: src/kernel/emulation/linux/CMakeFiles/emulation_dyld.dir/unistd/fchmodat.o 
/usr/bin/clang -DBSDTHREAD_WRAP_LINUX_PTHREAD -DDARLING -DDARWIN -DEMULATED_OSVERSION=\""19G73\"" -DEMULATED_RELEASE=\""19.6.0\"" -DEMULATED_SYSNAME=\""Darwin\"" -DEMULATED_VERSION=""\""Darwin Kernel Version 19.6.0\"""" -DTARGET_OS_MAC=1 -D_DARWIN_C_SOURCE -D_POSIX_C_SOURCE -D__APPLE__ -D__DYNAMIC__ -D__MACH__ -Isrc/include -I../src/include -I../basic-headers -I../Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include -IDeveloper/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include -I../framework-include -I../src/external/lkm/include -I../src/libDiagnosticMessagesClient/include -I../src/frameworks/include -I../src/private-frameworks/include -I../src/lib/include -I../Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/libxml2 -IDeveloper/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/libxml2 -I../src/kernel -I../src/kernel/emulation/linux -Isrc/startup -Isrc/kernel/libsyscall -Isrc/kernel/emulation/linux -isystem /usr/lib/llvm-11/lib/clang/11.0.0/include -Wno-nullability-completeness -Wno-deprecated-declarations -Wno-availability -Wno-expansion-to-defined -mmacosx-version-min=10.15 -std=c99 -fvisibility=hidden -fPIC -fno-builtin -ggdb -Wno-int-conversion -Wno-compare-distinct-pointer-types   -target x86_64-apple-darwin19 -ffunction-sections -DVARIANT_DYLD -B /home/vmuser/darling/build/src/external/cctools-port/cctools/misc/ -arch i386 -arch x86_64 -MD -MT src/kernel/emulation/linux/CMakeFiles/emulation_dyld.dir/unistd/fchmodat.o -MF src/kernel/emulation/linux/CMakeFiles/emulation_dyld.dir/unistd/fchmodat.o.d -o src/kernel/emulation/linux/CMakeFiles/emulation_dyld.dir/unistd/fchmodat.o   -c ../src/kernel/emulation/linux/unistd/fchmodat.c
In file included from ../src/kernel/emulation/linux/unistd/fchmodat.c:9:
../Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdio.h:221:5: error: 'TARGET_OS_EMBEDDED' is not defined, evaluates to 0 [-Werror,-Wundef-prefix=TARGET_OS_]
#if TARGET_OS_EMBEDDED
    ^",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,898,2020-12-01T16:04:16Z,2021-02-20T02:49:22Z,2021-02-20T02:51:28Z,MERGED,True,413605,373646,7629,https://github.com/facekapow,Update sources,414,[],https://github.com/darlinghq/darling/pull/898,https://github.com/facekapow,5,https://github.com/darlinghq/darling/pull/898#issuecomment-736873119,"That's right, it's finally here. It took a while, but I think this branch is finally stable enough to merge!
Major changes
Well first of all, as the branch name indicates, this is an update to all of our open source Apple code (updated to 10.15.2, but not much changed into 10.15.6). The biggest changes in Apple's code this time are in libpthread (and a few of the other system libraries like libsystem_c and libplatform).
However, this is also a major change for Darling's code as well. Most notably, our kqueue support now happens in-kernel, taking advantage of XNU's kqueue code as well, so our kqueue emulation should be more accurate and easier to maintain now.
Darling's build system also got a slight renovation. Many of our CMake support functions got more features to help support Apple's complex library dependencies and allow us to build them to accurately reflect how they're set up on macOS. I also tried to unify our headers into a single SDK in /Developer (though that could still be further organized into a proper SDK).
Other notable changes

Adds LibreSSL (progresses #718; missing BoringSSL)

Apple has switched over some OS tools (e.g. curl) to use this instead of SecureTransport, so HTTPS with those should be faster and more stable now (our CoreCrypto implementation still needs much improvement)


New ADDITIONAL_PACKAGES option for CMake

Enables a few non-standard (but very useful) utilities to be built and installed
Currently enables:

gnutar - The GNU version of tar
jsc - A JavaScript REPL built on JavaScriptCore
ash - Predecessor to dash. Apple plans to replace /bin/sh with ash , but they haven't done so yet, so this is locked behind ADDITIONAL_PACKAGES.




Quite a few more stubs and stubbed libraries

The biggest of which is libnetwork, which is Apple's shiny new networking library. Most users of this would probably be GUI applications (via the Network framework).


Various libsystem_kernel fixes for proper behavior
Includes fixes to allow Darling to compile under Clang 11+

This fixes #856 and also fixes #897.



Testing
I've tested much of this branch with as many different programs I could think of. Some have known issues (listed in the next section and for which I will be creating tracking issues), but for the most part, everything is working (at least as well as it is in master).
The mio and tokio testsuites have been a big help in rooting out problems in kqueue, psynch, and libsystem_kernel. Most of the issues found with those have been fixed (with the exceptions being most UDP-related errors).
However, since this is such a big set of changes, I'd like anyone that's willing to go ahead and test it out. Throw anything you can at it, especially stuff that's currently working in master. When you find issues, create an issue and make sure to include the Darling commit you tested it on so we can separate issues with the update from normal issues on master.
Known issues
I'll create tracking issues for these:

rustup doesn't work (fails to download anything)
brew install wget can blow up while trying to install openssl@1.1
zsh doesn't work (hangs forever when trying to run something that's not builtin)
jsc doesn't work (hangs before going into the REPL)
lldb crashes semi-randomly (occurs more frequently when trying to attach to a running program)","vmuser@devubuntu2010:~/darling/build$ ninja
ninja: error: build.ninja:14659: multiple rules generate src/kernel/libsyscall/mach/mach_portXtraceMig.c [-w dupbuild=err]

I am not sure if it was introduced by your branch or not. going to continue with making it warning

Hmm, I'll try building with Ninja later and see.

it fails early on with this:
FAILED: src/kernel/emulation/linux/CMakeFiles/emulation_dyld.dir/unistd/fchmodat.o 
/usr/bin/clang -DBSDTHREAD_WRAP_LINUX_PTHREAD -DDARLING -DDARWIN -DEMULATED_OSVERSION=\""19G73\"" -DEMULATED_RELEASE=\""19.6.0\"" -DEMULATED_SYSNAME=\""Darwin\"" -DEMULATED_VERSION=""\""Darwin Kernel Version 19.6.0\"""" -DTARGET_OS_MAC=1 -D_DARWIN_C_SOURCE -D_POSIX_C_SOURCE -D__APPLE__ -D__DYNAMIC__ -D__MACH__ -Isrc/include -I../src/include -I../basic-headers -I../Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include -IDeveloper/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include -I../framework-include -I../src/external/lkm/include -I../src/libDiagnosticMessagesClient/include -I../src/frameworks/include -I../src/private-frameworks/include -I../src/lib/include -I../Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/libxml2 -IDeveloper/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/libxml2 -I../src/kernel -I../src/kernel/emulation/linux -Isrc/startup -Isrc/kernel/libsyscall -Isrc/kernel/emulation/linux -isystem /usr/lib/llvm-11/lib/clang/11.0.0/include -Wno-nullability-completeness -Wno-deprecated-declarations -Wno-availability -Wno-expansion-to-defined -mmacosx-version-min=10.15 -std=c99 -fvisibility=hidden -fPIC -fno-builtin -ggdb -Wno-int-conversion -Wno-compare-distinct-pointer-types   -target x86_64-apple-darwin19 -ffunction-sections -DVARIANT_DYLD -B /home/vmuser/darling/build/src/external/cctools-port/cctools/misc/ -arch i386 -arch x86_64 -MD -MT src/kernel/emulation/linux/CMakeFiles/emulation_dyld.dir/unistd/fchmodat.o -MF src/kernel/emulation/linux/CMakeFiles/emulation_dyld.dir/unistd/fchmodat.o.d -o src/kernel/emulation/linux/CMakeFiles/emulation_dyld.dir/unistd/fchmodat.o   -c ../src/kernel/emulation/linux/unistd/fchmodat.c
In file included from ../src/kernel/emulation/linux/unistd/fchmodat.c:9:
../Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdio.h:221:5: error: 'TARGET_OS_EMBEDDED' is not defined, evaluates to 0 [-Werror,-Wundef-prefix=TARGET_OS_]
#if TARGET_OS_EMBEDDED
    ^


Yeah, @bugaevc told me about this. He had to add some workarounds locally to get it to build. This is actually the same as #856; I've been building with Clang 10 so I wasn't running into it. I'm clean building everything with Clang 12 now and I'll push some fixes for it once I'm done. Currently 50% through the build.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,898,2020-12-01T16:04:16Z,2021-02-20T02:49:22Z,2021-02-20T02:51:28Z,MERGED,True,413605,373646,7629,https://github.com/facekapow,Update sources,414,[],https://github.com/darlinghq/darling/pull/898,https://github.com/ahyattdev,6,https://github.com/darlinghq/darling/pull/898#issuecomment-736873811,"That's right, it's finally here. It took a while, but I think this branch is finally stable enough to merge!
Major changes
Well first of all, as the branch name indicates, this is an update to all of our open source Apple code (updated to 10.15.2, but not much changed into 10.15.6). The biggest changes in Apple's code this time are in libpthread (and a few of the other system libraries like libsystem_c and libplatform).
However, this is also a major change for Darling's code as well. Most notably, our kqueue support now happens in-kernel, taking advantage of XNU's kqueue code as well, so our kqueue emulation should be more accurate and easier to maintain now.
Darling's build system also got a slight renovation. Many of our CMake support functions got more features to help support Apple's complex library dependencies and allow us to build them to accurately reflect how they're set up on macOS. I also tried to unify our headers into a single SDK in /Developer (though that could still be further organized into a proper SDK).
Other notable changes

Adds LibreSSL (progresses #718; missing BoringSSL)

Apple has switched over some OS tools (e.g. curl) to use this instead of SecureTransport, so HTTPS with those should be faster and more stable now (our CoreCrypto implementation still needs much improvement)


New ADDITIONAL_PACKAGES option for CMake

Enables a few non-standard (but very useful) utilities to be built and installed
Currently enables:

gnutar - The GNU version of tar
jsc - A JavaScript REPL built on JavaScriptCore
ash - Predecessor to dash. Apple plans to replace /bin/sh with ash , but they haven't done so yet, so this is locked behind ADDITIONAL_PACKAGES.




Quite a few more stubs and stubbed libraries

The biggest of which is libnetwork, which is Apple's shiny new networking library. Most users of this would probably be GUI applications (via the Network framework).


Various libsystem_kernel fixes for proper behavior
Includes fixes to allow Darling to compile under Clang 11+

This fixes #856 and also fixes #897.



Testing
I've tested much of this branch with as many different programs I could think of. Some have known issues (listed in the next section and for which I will be creating tracking issues), but for the most part, everything is working (at least as well as it is in master).
The mio and tokio testsuites have been a big help in rooting out problems in kqueue, psynch, and libsystem_kernel. Most of the issues found with those have been fixed (with the exceptions being most UDP-related errors).
However, since this is such a big set of changes, I'd like anyone that's willing to go ahead and test it out. Throw anything you can at it, especially stuff that's currently working in master. When you find issues, create an issue and make sure to include the Darling commit you tested it on so we can separate issues with the update from normal issues on master.
Known issues
I'll create tracking issues for these:

rustup doesn't work (fails to download anything)
brew install wget can blow up while trying to install openssl@1.1
zsh doesn't work (hangs forever when trying to run something that's not builtin)
jsc doesn't work (hangs before going into the REPL)
lldb crashes semi-randomly (occurs more frequently when trying to attach to a running program)",@facekapow the VM i just made has clang 11 so that would make sense. OK I will wait until your fixes land since it sounds like you already covered it. It will be great seeing all your work merged in!,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,898,2020-12-01T16:04:16Z,2021-02-20T02:49:22Z,2021-02-20T02:51:28Z,MERGED,True,413605,373646,7629,https://github.com/facekapow,Update sources,414,[],https://github.com/darlinghq/darling/pull/898,https://github.com/facekapow,7,https://github.com/darlinghq/darling/pull/898#issuecomment-736988442,"That's right, it's finally here. It took a while, but I think this branch is finally stable enough to merge!
Major changes
Well first of all, as the branch name indicates, this is an update to all of our open source Apple code (updated to 10.15.2, but not much changed into 10.15.6). The biggest changes in Apple's code this time are in libpthread (and a few of the other system libraries like libsystem_c and libplatform).
However, this is also a major change for Darling's code as well. Most notably, our kqueue support now happens in-kernel, taking advantage of XNU's kqueue code as well, so our kqueue emulation should be more accurate and easier to maintain now.
Darling's build system also got a slight renovation. Many of our CMake support functions got more features to help support Apple's complex library dependencies and allow us to build them to accurately reflect how they're set up on macOS. I also tried to unify our headers into a single SDK in /Developer (though that could still be further organized into a proper SDK).
Other notable changes

Adds LibreSSL (progresses #718; missing BoringSSL)

Apple has switched over some OS tools (e.g. curl) to use this instead of SecureTransport, so HTTPS with those should be faster and more stable now (our CoreCrypto implementation still needs much improvement)


New ADDITIONAL_PACKAGES option for CMake

Enables a few non-standard (but very useful) utilities to be built and installed
Currently enables:

gnutar - The GNU version of tar
jsc - A JavaScript REPL built on JavaScriptCore
ash - Predecessor to dash. Apple plans to replace /bin/sh with ash , but they haven't done so yet, so this is locked behind ADDITIONAL_PACKAGES.




Quite a few more stubs and stubbed libraries

The biggest of which is libnetwork, which is Apple's shiny new networking library. Most users of this would probably be GUI applications (via the Network framework).


Various libsystem_kernel fixes for proper behavior
Includes fixes to allow Darling to compile under Clang 11+

This fixes #856 and also fixes #897.



Testing
I've tested much of this branch with as many different programs I could think of. Some have known issues (listed in the next section and for which I will be creating tracking issues), but for the most part, everything is working (at least as well as it is in master).
The mio and tokio testsuites have been a big help in rooting out problems in kqueue, psynch, and libsystem_kernel. Most of the issues found with those have been fixed (with the exceptions being most UDP-related errors).
However, since this is such a big set of changes, I'd like anyone that's willing to go ahead and test it out. Throw anything you can at it, especially stuff that's currently working in master. When you find issues, create an issue and make sure to include the Darling commit you tested it on so we can separate issues with the update from normal issues on master.
Known issues
I'll create tracking issues for these:

rustup doesn't work (fails to download anything)
brew install wget can blow up while trying to install openssl@1.1
zsh doesn't work (hangs forever when trying to run something that's not builtin)
jsc doesn't work (hangs before going into the REPL)
lldb crashes semi-randomly (occurs more frequently when trying to attach to a running program)","Alright, I've pushed some fixes that should allow it to compile with Clang 11+ (tested with Clang 12). This PR should now also fix #856 and #897.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,898,2020-12-01T16:04:16Z,2021-02-20T02:49:22Z,2021-02-20T02:51:28Z,MERGED,True,413605,373646,7629,https://github.com/facekapow,Update sources,414,[],https://github.com/darlinghq/darling/pull/898,https://github.com/ahyattdev,8,https://github.com/darlinghq/darling/pull/898#issuecomment-736997410,"That's right, it's finally here. It took a while, but I think this branch is finally stable enough to merge!
Major changes
Well first of all, as the branch name indicates, this is an update to all of our open source Apple code (updated to 10.15.2, but not much changed into 10.15.6). The biggest changes in Apple's code this time are in libpthread (and a few of the other system libraries like libsystem_c and libplatform).
However, this is also a major change for Darling's code as well. Most notably, our kqueue support now happens in-kernel, taking advantage of XNU's kqueue code as well, so our kqueue emulation should be more accurate and easier to maintain now.
Darling's build system also got a slight renovation. Many of our CMake support functions got more features to help support Apple's complex library dependencies and allow us to build them to accurately reflect how they're set up on macOS. I also tried to unify our headers into a single SDK in /Developer (though that could still be further organized into a proper SDK).
Other notable changes

Adds LibreSSL (progresses #718; missing BoringSSL)

Apple has switched over some OS tools (e.g. curl) to use this instead of SecureTransport, so HTTPS with those should be faster and more stable now (our CoreCrypto implementation still needs much improvement)


New ADDITIONAL_PACKAGES option for CMake

Enables a few non-standard (but very useful) utilities to be built and installed
Currently enables:

gnutar - The GNU version of tar
jsc - A JavaScript REPL built on JavaScriptCore
ash - Predecessor to dash. Apple plans to replace /bin/sh with ash , but they haven't done so yet, so this is locked behind ADDITIONAL_PACKAGES.




Quite a few more stubs and stubbed libraries

The biggest of which is libnetwork, which is Apple's shiny new networking library. Most users of this would probably be GUI applications (via the Network framework).


Various libsystem_kernel fixes for proper behavior
Includes fixes to allow Darling to compile under Clang 11+

This fixes #856 and also fixes #897.



Testing
I've tested much of this branch with as many different programs I could think of. Some have known issues (listed in the next section and for which I will be creating tracking issues), but for the most part, everything is working (at least as well as it is in master).
The mio and tokio testsuites have been a big help in rooting out problems in kqueue, psynch, and libsystem_kernel. Most of the issues found with those have been fixed (with the exceptions being most UDP-related errors).
However, since this is such a big set of changes, I'd like anyone that's willing to go ahead and test it out. Throw anything you can at it, especially stuff that's currently working in master. When you find issues, create an issue and make sure to include the Darling commit you tested it on so we can separate issues with the update from normal issues on master.
Known issues
I'll create tracking issues for these:

rustup doesn't work (fails to download anything)
brew install wget can blow up while trying to install openssl@1.1
zsh doesn't work (hangs forever when trying to run something that's not builtin)
jsc doesn't work (hangs before going into the REPL)
lldb crashes semi-randomly (occurs more frequently when trying to attach to a running program)","@facekapow need to push to file_cmds?
fatal: remote error: upload-pack: not our ref 192a2bfdc693f8766acb912b9e11aae4ec1d75a3
Fetched in submodule path 'src/external/file_cmds', but it did not contain 192a2bfdc693f8766acb912b9e11aae4ec1d75a3. Direct fetching of that commit failed.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,898,2020-12-01T16:04:16Z,2021-02-20T02:49:22Z,2021-02-20T02:51:28Z,MERGED,True,413605,373646,7629,https://github.com/facekapow,Update sources,414,[],https://github.com/darlinghq/darling/pull/898,https://github.com/bugaevc,9,https://github.com/darlinghq/darling/pull/898#issuecomment-737016508,"That's right, it's finally here. It took a while, but I think this branch is finally stable enough to merge!
Major changes
Well first of all, as the branch name indicates, this is an update to all of our open source Apple code (updated to 10.15.2, but not much changed into 10.15.6). The biggest changes in Apple's code this time are in libpthread (and a few of the other system libraries like libsystem_c and libplatform).
However, this is also a major change for Darling's code as well. Most notably, our kqueue support now happens in-kernel, taking advantage of XNU's kqueue code as well, so our kqueue emulation should be more accurate and easier to maintain now.
Darling's build system also got a slight renovation. Many of our CMake support functions got more features to help support Apple's complex library dependencies and allow us to build them to accurately reflect how they're set up on macOS. I also tried to unify our headers into a single SDK in /Developer (though that could still be further organized into a proper SDK).
Other notable changes

Adds LibreSSL (progresses #718; missing BoringSSL)

Apple has switched over some OS tools (e.g. curl) to use this instead of SecureTransport, so HTTPS with those should be faster and more stable now (our CoreCrypto implementation still needs much improvement)


New ADDITIONAL_PACKAGES option for CMake

Enables a few non-standard (but very useful) utilities to be built and installed
Currently enables:

gnutar - The GNU version of tar
jsc - A JavaScript REPL built on JavaScriptCore
ash - Predecessor to dash. Apple plans to replace /bin/sh with ash , but they haven't done so yet, so this is locked behind ADDITIONAL_PACKAGES.




Quite a few more stubs and stubbed libraries

The biggest of which is libnetwork, which is Apple's shiny new networking library. Most users of this would probably be GUI applications (via the Network framework).


Various libsystem_kernel fixes for proper behavior
Includes fixes to allow Darling to compile under Clang 11+

This fixes #856 and also fixes #897.



Testing
I've tested much of this branch with as many different programs I could think of. Some have known issues (listed in the next section and for which I will be creating tracking issues), but for the most part, everything is working (at least as well as it is in master).
The mio and tokio testsuites have been a big help in rooting out problems in kqueue, psynch, and libsystem_kernel. Most of the issues found with those have been fixed (with the exceptions being most UDP-related errors).
However, since this is such a big set of changes, I'd like anyone that's willing to go ahead and test it out. Throw anything you can at it, especially stuff that's currently working in master. When you find issues, create an issue and make sure to include the Darling commit you tested it on so we can separate issues with the update from normal issues on master.
Known issues
I'll create tracking issues for these:

rustup doesn't work (fails to download anything)
brew install wget can blow up while trying to install openssl@1.1
zsh doesn't work (hangs forever when trying to run something that's not builtin)
jsc doesn't work (hangs before going into the REPL)
lldb crashes semi-randomly (occurs more frequently when trying to attach to a running program)","multiple rules generate src/kernel/libsyscall/mach/mach_portXtraceMig.c

I have a proper fix for that, actually. I'll push it if @facekapow doesn't beat me to it.",True,"{'THUMBS_UP': ['https://github.com/ahyattdev', 'https://github.com/facekapow']}"
darlinghq/darling,https://github.com/darlinghq/darling,898,2020-12-01T16:04:16Z,2021-02-20T02:49:22Z,2021-02-20T02:51:28Z,MERGED,True,413605,373646,7629,https://github.com/facekapow,Update sources,414,[],https://github.com/darlinghq/darling/pull/898,https://github.com/facekapow,10,https://github.com/darlinghq/darling/pull/898#issuecomment-737215988,"That's right, it's finally here. It took a while, but I think this branch is finally stable enough to merge!
Major changes
Well first of all, as the branch name indicates, this is an update to all of our open source Apple code (updated to 10.15.2, but not much changed into 10.15.6). The biggest changes in Apple's code this time are in libpthread (and a few of the other system libraries like libsystem_c and libplatform).
However, this is also a major change for Darling's code as well. Most notably, our kqueue support now happens in-kernel, taking advantage of XNU's kqueue code as well, so our kqueue emulation should be more accurate and easier to maintain now.
Darling's build system also got a slight renovation. Many of our CMake support functions got more features to help support Apple's complex library dependencies and allow us to build them to accurately reflect how they're set up on macOS. I also tried to unify our headers into a single SDK in /Developer (though that could still be further organized into a proper SDK).
Other notable changes

Adds LibreSSL (progresses #718; missing BoringSSL)

Apple has switched over some OS tools (e.g. curl) to use this instead of SecureTransport, so HTTPS with those should be faster and more stable now (our CoreCrypto implementation still needs much improvement)


New ADDITIONAL_PACKAGES option for CMake

Enables a few non-standard (but very useful) utilities to be built and installed
Currently enables:

gnutar - The GNU version of tar
jsc - A JavaScript REPL built on JavaScriptCore
ash - Predecessor to dash. Apple plans to replace /bin/sh with ash , but they haven't done so yet, so this is locked behind ADDITIONAL_PACKAGES.




Quite a few more stubs and stubbed libraries

The biggest of which is libnetwork, which is Apple's shiny new networking library. Most users of this would probably be GUI applications (via the Network framework).


Various libsystem_kernel fixes for proper behavior
Includes fixes to allow Darling to compile under Clang 11+

This fixes #856 and also fixes #897.



Testing
I've tested much of this branch with as many different programs I could think of. Some have known issues (listed in the next section and for which I will be creating tracking issues), but for the most part, everything is working (at least as well as it is in master).
The mio and tokio testsuites have been a big help in rooting out problems in kqueue, psynch, and libsystem_kernel. Most of the issues found with those have been fixed (with the exceptions being most UDP-related errors).
However, since this is such a big set of changes, I'd like anyone that's willing to go ahead and test it out. Throw anything you can at it, especially stuff that's currently working in master. When you find issues, create an issue and make sure to include the Darling commit you tested it on so we can separate issues with the update from normal issues on master.
Known issues
I'll create tracking issues for these:

rustup doesn't work (fails to download anything)
brew install wget can blow up while trying to install openssl@1.1
zsh doesn't work (hangs forever when trying to run something that's not builtin)
jsc doesn't work (hangs before going into the REPL)
lldb crashes semi-randomly (occurs more frequently when trying to attach to a running program)","@facekapow need to push to file_cmds?
fatal: remote error: upload-pack: not our ref 192a2bfdc693f8766acb912b9e11aae4ec1d75a3
Fetched in submodule path 'src/external/file_cmds', but it did not contain 192a2bfdc693f8766acb912b9e11aae4ec1d75a3. Direct fetching of that commit failed.


My bad, yeah, forgot to push file_cmds (pushed this fix late last night right before going to bed).


multiple rules generate src/kernel/libsyscall/mach/mach_portXtraceMig.c

I have a proper fix for that, actually. I'll push it if @facekapow doesn't beat me to it.

Absolutely, go ahead.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,898,2020-12-01T16:04:16Z,2021-02-20T02:49:22Z,2021-02-20T02:51:28Z,MERGED,True,413605,373646,7629,https://github.com/facekapow,Update sources,414,[],https://github.com/darlinghq/darling/pull/898,https://github.com/ahyattdev,11,https://github.com/darlinghq/darling/pull/898#issuecomment-737409493,"That's right, it's finally here. It took a while, but I think this branch is finally stable enough to merge!
Major changes
Well first of all, as the branch name indicates, this is an update to all of our open source Apple code (updated to 10.15.2, but not much changed into 10.15.6). The biggest changes in Apple's code this time are in libpthread (and a few of the other system libraries like libsystem_c and libplatform).
However, this is also a major change for Darling's code as well. Most notably, our kqueue support now happens in-kernel, taking advantage of XNU's kqueue code as well, so our kqueue emulation should be more accurate and easier to maintain now.
Darling's build system also got a slight renovation. Many of our CMake support functions got more features to help support Apple's complex library dependencies and allow us to build them to accurately reflect how they're set up on macOS. I also tried to unify our headers into a single SDK in /Developer (though that could still be further organized into a proper SDK).
Other notable changes

Adds LibreSSL (progresses #718; missing BoringSSL)

Apple has switched over some OS tools (e.g. curl) to use this instead of SecureTransport, so HTTPS with those should be faster and more stable now (our CoreCrypto implementation still needs much improvement)


New ADDITIONAL_PACKAGES option for CMake

Enables a few non-standard (but very useful) utilities to be built and installed
Currently enables:

gnutar - The GNU version of tar
jsc - A JavaScript REPL built on JavaScriptCore
ash - Predecessor to dash. Apple plans to replace /bin/sh with ash , but they haven't done so yet, so this is locked behind ADDITIONAL_PACKAGES.




Quite a few more stubs and stubbed libraries

The biggest of which is libnetwork, which is Apple's shiny new networking library. Most users of this would probably be GUI applications (via the Network framework).


Various libsystem_kernel fixes for proper behavior
Includes fixes to allow Darling to compile under Clang 11+

This fixes #856 and also fixes #897.



Testing
I've tested much of this branch with as many different programs I could think of. Some have known issues (listed in the next section and for which I will be creating tracking issues), but for the most part, everything is working (at least as well as it is in master).
The mio and tokio testsuites have been a big help in rooting out problems in kqueue, psynch, and libsystem_kernel. Most of the issues found with those have been fixed (with the exceptions being most UDP-related errors).
However, since this is such a big set of changes, I'd like anyone that's willing to go ahead and test it out. Throw anything you can at it, especially stuff that's currently working in master. When you find issues, create an issue and make sure to include the Darling commit you tested it on so we can separate issues with the update from normal issues on master.
Known issues
I'll create tracking issues for these:

rustup doesn't work (fails to download anything)
brew install wget can blow up while trying to install openssl@1.1
zsh doesn't work (hangs forever when trying to run something that's not builtin)
jsc doesn't work (hangs before going into the REPL)
lldb crashes semi-randomly (occurs more frequently when trying to attach to a running program)","cool, darling builds now. just an error on lkm
Invoked by kernel build system, building for 5.8.0-31-generic
  MODPOST /home/vmuser/darling/src/external/lkm/Module.symvers
  CC [M]  /home/vmuser/darling/src/external/lkm/darling-mach.mod.o
error: unknown warning option '-Wno-unused-but-set-variable'; did you mean '-Wno-unused-const-variable'? [-Werror,-Wunknown-warning-option]",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,898,2020-12-01T16:04:16Z,2021-02-20T02:49:22Z,2021-02-20T02:51:28Z,MERGED,True,413605,373646,7629,https://github.com/facekapow,Update sources,414,[],https://github.com/darlinghq/darling/pull/898,https://github.com/bugaevc,12,https://github.com/darlinghq/darling/pull/898#issuecomment-737411233,"That's right, it's finally here. It took a while, but I think this branch is finally stable enough to merge!
Major changes
Well first of all, as the branch name indicates, this is an update to all of our open source Apple code (updated to 10.15.2, but not much changed into 10.15.6). The biggest changes in Apple's code this time are in libpthread (and a few of the other system libraries like libsystem_c and libplatform).
However, this is also a major change for Darling's code as well. Most notably, our kqueue support now happens in-kernel, taking advantage of XNU's kqueue code as well, so our kqueue emulation should be more accurate and easier to maintain now.
Darling's build system also got a slight renovation. Many of our CMake support functions got more features to help support Apple's complex library dependencies and allow us to build them to accurately reflect how they're set up on macOS. I also tried to unify our headers into a single SDK in /Developer (though that could still be further organized into a proper SDK).
Other notable changes

Adds LibreSSL (progresses #718; missing BoringSSL)

Apple has switched over some OS tools (e.g. curl) to use this instead of SecureTransport, so HTTPS with those should be faster and more stable now (our CoreCrypto implementation still needs much improvement)


New ADDITIONAL_PACKAGES option for CMake

Enables a few non-standard (but very useful) utilities to be built and installed
Currently enables:

gnutar - The GNU version of tar
jsc - A JavaScript REPL built on JavaScriptCore
ash - Predecessor to dash. Apple plans to replace /bin/sh with ash , but they haven't done so yet, so this is locked behind ADDITIONAL_PACKAGES.




Quite a few more stubs and stubbed libraries

The biggest of which is libnetwork, which is Apple's shiny new networking library. Most users of this would probably be GUI applications (via the Network framework).


Various libsystem_kernel fixes for proper behavior
Includes fixes to allow Darling to compile under Clang 11+

This fixes #856 and also fixes #897.



Testing
I've tested much of this branch with as many different programs I could think of. Some have known issues (listed in the next section and for which I will be creating tracking issues), but for the most part, everything is working (at least as well as it is in master).
The mio and tokio testsuites have been a big help in rooting out problems in kqueue, psynch, and libsystem_kernel. Most of the issues found with those have been fixed (with the exceptions being most UDP-related errors).
However, since this is such a big set of changes, I'd like anyone that's willing to go ahead and test it out. Throw anything you can at it, especially stuff that's currently working in master. When you find issues, create an issue and make sure to include the Darling commit you tested it on so we can separate issues with the update from normal issues on master.
Known issues
I'll create tracking issues for these:

rustup doesn't work (fails to download anything)
brew install wget can blow up while trying to install openssl@1.1
zsh doesn't work (hangs forever when trying to run something that's not builtin)
jsc doesn't work (hangs before going into the REPL)
lldb crashes semi-randomly (occurs more frequently when trying to attach to a running program)","Yep, I was getting the same error yesterday / this morning. It has to do with trying to link the LKM with Clang, but (apparently?) passing flags intended for GCC.",True,{'THUMBS_UP': ['https://github.com/ahyattdev']}
darlinghq/darling,https://github.com/darlinghq/darling,898,2020-12-01T16:04:16Z,2021-02-20T02:49:22Z,2021-02-20T02:51:28Z,MERGED,True,413605,373646,7629,https://github.com/facekapow,Update sources,414,[],https://github.com/darlinghq/darling/pull/898,https://github.com/facekapow,13,https://github.com/darlinghq/darling/pull/898#issuecomment-737423355,"That's right, it's finally here. It took a while, but I think this branch is finally stable enough to merge!
Major changes
Well first of all, as the branch name indicates, this is an update to all of our open source Apple code (updated to 10.15.2, but not much changed into 10.15.6). The biggest changes in Apple's code this time are in libpthread (and a few of the other system libraries like libsystem_c and libplatform).
However, this is also a major change for Darling's code as well. Most notably, our kqueue support now happens in-kernel, taking advantage of XNU's kqueue code as well, so our kqueue emulation should be more accurate and easier to maintain now.
Darling's build system also got a slight renovation. Many of our CMake support functions got more features to help support Apple's complex library dependencies and allow us to build them to accurately reflect how they're set up on macOS. I also tried to unify our headers into a single SDK in /Developer (though that could still be further organized into a proper SDK).
Other notable changes

Adds LibreSSL (progresses #718; missing BoringSSL)

Apple has switched over some OS tools (e.g. curl) to use this instead of SecureTransport, so HTTPS with those should be faster and more stable now (our CoreCrypto implementation still needs much improvement)


New ADDITIONAL_PACKAGES option for CMake

Enables a few non-standard (but very useful) utilities to be built and installed
Currently enables:

gnutar - The GNU version of tar
jsc - A JavaScript REPL built on JavaScriptCore
ash - Predecessor to dash. Apple plans to replace /bin/sh with ash , but they haven't done so yet, so this is locked behind ADDITIONAL_PACKAGES.




Quite a few more stubs and stubbed libraries

The biggest of which is libnetwork, which is Apple's shiny new networking library. Most users of this would probably be GUI applications (via the Network framework).


Various libsystem_kernel fixes for proper behavior
Includes fixes to allow Darling to compile under Clang 11+

This fixes #856 and also fixes #897.



Testing
I've tested much of this branch with as many different programs I could think of. Some have known issues (listed in the next section and for which I will be creating tracking issues), but for the most part, everything is working (at least as well as it is in master).
The mio and tokio testsuites have been a big help in rooting out problems in kqueue, psynch, and libsystem_kernel. Most of the issues found with those have been fixed (with the exceptions being most UDP-related errors).
However, since this is such a big set of changes, I'd like anyone that's willing to go ahead and test it out. Throw anything you can at it, especially stuff that's currently working in master. When you find issues, create an issue and make sure to include the Darling commit you tested it on so we can separate issues with the update from normal issues on master.
Known issues
I'll create tracking issues for these:

rustup doesn't work (fails to download anything)
brew install wget can blow up while trying to install openssl@1.1
zsh doesn't work (hangs forever when trying to run something that's not builtin)
jsc doesn't work (hangs before going into the REPL)
lldb crashes semi-randomly (occurs more frequently when trying to attach to a running program)","I recently got it building with GCC and I thought I had reverted the LKM build system back to using GCC, but I had forgotten the most important part: the CC flag override in the build command. I didn't notice it because I build Darling on my actual machine and install it into a VM, so I was using DKMS to build the LKM.",True,{'THUMBS_UP': ['https://github.com/ahyattdev']}
darlinghq/darling,https://github.com/darlinghq/darling,898,2020-12-01T16:04:16Z,2021-02-20T02:49:22Z,2021-02-20T02:51:28Z,MERGED,True,413605,373646,7629,https://github.com/facekapow,Update sources,414,[],https://github.com/darlinghq/darling/pull/898,https://github.com/bugaevc,14,https://github.com/darlinghq/darling/pull/898#issuecomment-739244500,"That's right, it's finally here. It took a while, but I think this branch is finally stable enough to merge!
Major changes
Well first of all, as the branch name indicates, this is an update to all of our open source Apple code (updated to 10.15.2, but not much changed into 10.15.6). The biggest changes in Apple's code this time are in libpthread (and a few of the other system libraries like libsystem_c and libplatform).
However, this is also a major change for Darling's code as well. Most notably, our kqueue support now happens in-kernel, taking advantage of XNU's kqueue code as well, so our kqueue emulation should be more accurate and easier to maintain now.
Darling's build system also got a slight renovation. Many of our CMake support functions got more features to help support Apple's complex library dependencies and allow us to build them to accurately reflect how they're set up on macOS. I also tried to unify our headers into a single SDK in /Developer (though that could still be further organized into a proper SDK).
Other notable changes

Adds LibreSSL (progresses #718; missing BoringSSL)

Apple has switched over some OS tools (e.g. curl) to use this instead of SecureTransport, so HTTPS with those should be faster and more stable now (our CoreCrypto implementation still needs much improvement)


New ADDITIONAL_PACKAGES option for CMake

Enables a few non-standard (but very useful) utilities to be built and installed
Currently enables:

gnutar - The GNU version of tar
jsc - A JavaScript REPL built on JavaScriptCore
ash - Predecessor to dash. Apple plans to replace /bin/sh with ash , but they haven't done so yet, so this is locked behind ADDITIONAL_PACKAGES.




Quite a few more stubs and stubbed libraries

The biggest of which is libnetwork, which is Apple's shiny new networking library. Most users of this would probably be GUI applications (via the Network framework).


Various libsystem_kernel fixes for proper behavior
Includes fixes to allow Darling to compile under Clang 11+

This fixes #856 and also fixes #897.



Testing
I've tested much of this branch with as many different programs I could think of. Some have known issues (listed in the next section and for which I will be creating tracking issues), but for the most part, everything is working (at least as well as it is in master).
The mio and tokio testsuites have been a big help in rooting out problems in kqueue, psynch, and libsystem_kernel. Most of the issues found with those have been fixed (with the exceptions being most UDP-related errors).
However, since this is such a big set of changes, I'd like anyone that's willing to go ahead and test it out. Throw anything you can at it, especially stuff that's currently working in master. When you find issues, create an issue and make sure to include the Darling commit you tested it on so we can separate issues with the update from normal issues on master.
Known issues
I'll create tracking issues for these:

rustup doesn't work (fails to download anything)
brew install wget can blow up while trying to install openssl@1.1
zsh doesn't work (hangs forever when trying to run something that's not builtin)
jsc doesn't work (hangs before going into the REPL)
lldb crashes semi-randomly (occurs more frequently when trying to attach to a running program)",That happens if you're missing some recursive submodules,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,898,2020-12-01T16:04:16Z,2021-02-20T02:49:22Z,2021-02-20T02:51:28Z,MERGED,True,413605,373646,7629,https://github.com/facekapow,Update sources,414,[],https://github.com/darlinghq/darling/pull/898,https://github.com/demhademha,15,https://github.com/darlinghq/darling/pull/898#issuecomment-752032873,"That's right, it's finally here. It took a while, but I think this branch is finally stable enough to merge!
Major changes
Well first of all, as the branch name indicates, this is an update to all of our open source Apple code (updated to 10.15.2, but not much changed into 10.15.6). The biggest changes in Apple's code this time are in libpthread (and a few of the other system libraries like libsystem_c and libplatform).
However, this is also a major change for Darling's code as well. Most notably, our kqueue support now happens in-kernel, taking advantage of XNU's kqueue code as well, so our kqueue emulation should be more accurate and easier to maintain now.
Darling's build system also got a slight renovation. Many of our CMake support functions got more features to help support Apple's complex library dependencies and allow us to build them to accurately reflect how they're set up on macOS. I also tried to unify our headers into a single SDK in /Developer (though that could still be further organized into a proper SDK).
Other notable changes

Adds LibreSSL (progresses #718; missing BoringSSL)

Apple has switched over some OS tools (e.g. curl) to use this instead of SecureTransport, so HTTPS with those should be faster and more stable now (our CoreCrypto implementation still needs much improvement)


New ADDITIONAL_PACKAGES option for CMake

Enables a few non-standard (but very useful) utilities to be built and installed
Currently enables:

gnutar - The GNU version of tar
jsc - A JavaScript REPL built on JavaScriptCore
ash - Predecessor to dash. Apple plans to replace /bin/sh with ash , but they haven't done so yet, so this is locked behind ADDITIONAL_PACKAGES.




Quite a few more stubs and stubbed libraries

The biggest of which is libnetwork, which is Apple's shiny new networking library. Most users of this would probably be GUI applications (via the Network framework).


Various libsystem_kernel fixes for proper behavior
Includes fixes to allow Darling to compile under Clang 11+

This fixes #856 and also fixes #897.



Testing
I've tested much of this branch with as many different programs I could think of. Some have known issues (listed in the next section and for which I will be creating tracking issues), but for the most part, everything is working (at least as well as it is in master).
The mio and tokio testsuites have been a big help in rooting out problems in kqueue, psynch, and libsystem_kernel. Most of the issues found with those have been fixed (with the exceptions being most UDP-related errors).
However, since this is such a big set of changes, I'd like anyone that's willing to go ahead and test it out. Throw anything you can at it, especially stuff that's currently working in master. When you find issues, create an issue and make sure to include the Darling commit you tested it on so we can separate issues with the update from normal issues on master.
Known issues
I'll create tracking issues for these:

rustup doesn't work (fails to download anything)
brew install wget can blow up while trying to install openssl@1.1
zsh doesn't work (hangs forever when trying to run something that's not builtin)
jsc doesn't work (hangs before going into the REPL)
lldb crashes semi-randomly (occurs more frequently when trying to attach to a running program)","I get the following issue when using ninja:
Oh I get this error:
In file included from ../src/external/foundation/src/NSArray.m:10:
In file included from ../src/external/foundation/src/NSCoderInternal.h:2:
In file included from ../framework-include/CoreGraphics/CoreGraphics.h:31:
In file included from ../framework-include/CoreGraphics/CGEvent.h:27:
../framework-include/CoreGraphics/CoreGraphicsPrivate.h:4:10: fatal error: 'IOKit/hidsystem/IOLLEvent.h' file not found
#include <IOKit/hidsystem/IOLLEvent.h>
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1 error generated.
[19/19829] Building C object src/libm/CMakeFiles/system_m_static.dir/Source/Intel/complex.o
ninja: build stopped: subcommand failed.
Thanks for the support.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,898,2020-12-01T16:04:16Z,2021-02-20T02:49:22Z,2021-02-20T02:51:28Z,MERGED,True,413605,373646,7629,https://github.com/facekapow,Update sources,414,[],https://github.com/darlinghq/darling/pull/898,https://github.com/facekapow,16,https://github.com/darlinghq/darling/pull/898#issuecomment-752839880,"That's right, it's finally here. It took a while, but I think this branch is finally stable enough to merge!
Major changes
Well first of all, as the branch name indicates, this is an update to all of our open source Apple code (updated to 10.15.2, but not much changed into 10.15.6). The biggest changes in Apple's code this time are in libpthread (and a few of the other system libraries like libsystem_c and libplatform).
However, this is also a major change for Darling's code as well. Most notably, our kqueue support now happens in-kernel, taking advantage of XNU's kqueue code as well, so our kqueue emulation should be more accurate and easier to maintain now.
Darling's build system also got a slight renovation. Many of our CMake support functions got more features to help support Apple's complex library dependencies and allow us to build them to accurately reflect how they're set up on macOS. I also tried to unify our headers into a single SDK in /Developer (though that could still be further organized into a proper SDK).
Other notable changes

Adds LibreSSL (progresses #718; missing BoringSSL)

Apple has switched over some OS tools (e.g. curl) to use this instead of SecureTransport, so HTTPS with those should be faster and more stable now (our CoreCrypto implementation still needs much improvement)


New ADDITIONAL_PACKAGES option for CMake

Enables a few non-standard (but very useful) utilities to be built and installed
Currently enables:

gnutar - The GNU version of tar
jsc - A JavaScript REPL built on JavaScriptCore
ash - Predecessor to dash. Apple plans to replace /bin/sh with ash , but they haven't done so yet, so this is locked behind ADDITIONAL_PACKAGES.




Quite a few more stubs and stubbed libraries

The biggest of which is libnetwork, which is Apple's shiny new networking library. Most users of this would probably be GUI applications (via the Network framework).


Various libsystem_kernel fixes for proper behavior
Includes fixes to allow Darling to compile under Clang 11+

This fixes #856 and also fixes #897.



Testing
I've tested much of this branch with as many different programs I could think of. Some have known issues (listed in the next section and for which I will be creating tracking issues), but for the most part, everything is working (at least as well as it is in master).
The mio and tokio testsuites have been a big help in rooting out problems in kqueue, psynch, and libsystem_kernel. Most of the issues found with those have been fixed (with the exceptions being most UDP-related errors).
However, since this is such a big set of changes, I'd like anyone that's willing to go ahead and test it out. Throw anything you can at it, especially stuff that's currently working in master. When you find issues, create an issue and make sure to include the Darling commit you tested it on so we can separate issues with the update from normal issues on master.
Known issues
I'll create tracking issues for these:

rustup doesn't work (fails to download anything)
brew install wget can blow up while trying to install openssl@1.1
zsh doesn't work (hangs forever when trying to run something that's not builtin)
jsc doesn't work (hangs before going into the REPL)
lldb crashes semi-randomly (occurs more frequently when trying to attach to a running program)",@demhademha Did you do git submodule update --init -recursive when switching to the update-sources branch? Or did you do a fresh clone?,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,898,2020-12-01T16:04:16Z,2021-02-20T02:49:22Z,2021-02-20T02:51:28Z,MERGED,True,413605,373646,7629,https://github.com/facekapow,Update sources,414,[],https://github.com/darlinghq/darling/pull/898,https://github.com/demhademha,17,https://github.com/darlinghq/darling/pull/898#issuecomment-752929368,"That's right, it's finally here. It took a while, but I think this branch is finally stable enough to merge!
Major changes
Well first of all, as the branch name indicates, this is an update to all of our open source Apple code (updated to 10.15.2, but not much changed into 10.15.6). The biggest changes in Apple's code this time are in libpthread (and a few of the other system libraries like libsystem_c and libplatform).
However, this is also a major change for Darling's code as well. Most notably, our kqueue support now happens in-kernel, taking advantage of XNU's kqueue code as well, so our kqueue emulation should be more accurate and easier to maintain now.
Darling's build system also got a slight renovation. Many of our CMake support functions got more features to help support Apple's complex library dependencies and allow us to build them to accurately reflect how they're set up on macOS. I also tried to unify our headers into a single SDK in /Developer (though that could still be further organized into a proper SDK).
Other notable changes

Adds LibreSSL (progresses #718; missing BoringSSL)

Apple has switched over some OS tools (e.g. curl) to use this instead of SecureTransport, so HTTPS with those should be faster and more stable now (our CoreCrypto implementation still needs much improvement)


New ADDITIONAL_PACKAGES option for CMake

Enables a few non-standard (but very useful) utilities to be built and installed
Currently enables:

gnutar - The GNU version of tar
jsc - A JavaScript REPL built on JavaScriptCore
ash - Predecessor to dash. Apple plans to replace /bin/sh with ash , but they haven't done so yet, so this is locked behind ADDITIONAL_PACKAGES.




Quite a few more stubs and stubbed libraries

The biggest of which is libnetwork, which is Apple's shiny new networking library. Most users of this would probably be GUI applications (via the Network framework).


Various libsystem_kernel fixes for proper behavior
Includes fixes to allow Darling to compile under Clang 11+

This fixes #856 and also fixes #897.



Testing
I've tested much of this branch with as many different programs I could think of. Some have known issues (listed in the next section and for which I will be creating tracking issues), but for the most part, everything is working (at least as well as it is in master).
The mio and tokio testsuites have been a big help in rooting out problems in kqueue, psynch, and libsystem_kernel. Most of the issues found with those have been fixed (with the exceptions being most UDP-related errors).
However, since this is such a big set of changes, I'd like anyone that's willing to go ahead and test it out. Throw anything you can at it, especially stuff that's currently working in master. When you find issues, create an issue and make sure to include the Darling commit you tested it on so we can separate issues with the update from normal issues on master.
Known issues
I'll create tracking issues for these:

rustup doesn't work (fails to download anything)
brew install wget can blow up while trying to install openssl@1.1
zsh doesn't work (hangs forever when trying to run something that's not builtin)
jsc doesn't work (hangs before going into the REPL)
lldb crashes semi-randomly (occurs more frequently when trying to attach to a running program)","First I cloned the master branch,
git clone --recursive https://github.com/darlinghq/darling
git checkout update-sources
git submodule update --recursive
git submodule init",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,898,2020-12-01T16:04:16Z,2021-02-20T02:49:22Z,2021-02-20T02:51:28Z,MERGED,True,413605,373646,7629,https://github.com/facekapow,Update sources,414,[],https://github.com/darlinghq/darling/pull/898,https://github.com/theslimshaney,18,https://github.com/darlinghq/darling/pull/898#issuecomment-773092692,"That's right, it's finally here. It took a while, but I think this branch is finally stable enough to merge!
Major changes
Well first of all, as the branch name indicates, this is an update to all of our open source Apple code (updated to 10.15.2, but not much changed into 10.15.6). The biggest changes in Apple's code this time are in libpthread (and a few of the other system libraries like libsystem_c and libplatform).
However, this is also a major change for Darling's code as well. Most notably, our kqueue support now happens in-kernel, taking advantage of XNU's kqueue code as well, so our kqueue emulation should be more accurate and easier to maintain now.
Darling's build system also got a slight renovation. Many of our CMake support functions got more features to help support Apple's complex library dependencies and allow us to build them to accurately reflect how they're set up on macOS. I also tried to unify our headers into a single SDK in /Developer (though that could still be further organized into a proper SDK).
Other notable changes

Adds LibreSSL (progresses #718; missing BoringSSL)

Apple has switched over some OS tools (e.g. curl) to use this instead of SecureTransport, so HTTPS with those should be faster and more stable now (our CoreCrypto implementation still needs much improvement)


New ADDITIONAL_PACKAGES option for CMake

Enables a few non-standard (but very useful) utilities to be built and installed
Currently enables:

gnutar - The GNU version of tar
jsc - A JavaScript REPL built on JavaScriptCore
ash - Predecessor to dash. Apple plans to replace /bin/sh with ash , but they haven't done so yet, so this is locked behind ADDITIONAL_PACKAGES.




Quite a few more stubs and stubbed libraries

The biggest of which is libnetwork, which is Apple's shiny new networking library. Most users of this would probably be GUI applications (via the Network framework).


Various libsystem_kernel fixes for proper behavior
Includes fixes to allow Darling to compile under Clang 11+

This fixes #856 and also fixes #897.



Testing
I've tested much of this branch with as many different programs I could think of. Some have known issues (listed in the next section and for which I will be creating tracking issues), but for the most part, everything is working (at least as well as it is in master).
The mio and tokio testsuites have been a big help in rooting out problems in kqueue, psynch, and libsystem_kernel. Most of the issues found with those have been fixed (with the exceptions being most UDP-related errors).
However, since this is such a big set of changes, I'd like anyone that's willing to go ahead and test it out. Throw anything you can at it, especially stuff that's currently working in master. When you find issues, create an issue and make sure to include the Darling commit you tested it on so we can separate issues with the update from normal issues on master.
Known issues
I'll create tracking issues for these:

rustup doesn't work (fails to download anything)
brew install wget can blow up while trying to install openssl@1.1
zsh doesn't work (hangs forever when trying to run something that's not builtin)
jsc doesn't work (hangs before going into the REPL)
lldb crashes semi-randomly (occurs more frequently when trying to attach to a running program)","@demhademha try it as suggested: git submodule update --init -recursive
You probably don't have IOHIDFamily submodule, which is a submodule of IOKitUser
Or from src/darling/src/external/IOKitUser you can load the submodules and there you should see IOHIDFamily/IOHIDSystem/IOKit/hidsystem/IOLLEvent.h as a text file.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,898,2020-12-01T16:04:16Z,2021-02-20T02:49:22Z,2021-02-20T02:51:28Z,MERGED,True,413605,373646,7629,https://github.com/facekapow,Update sources,414,[],https://github.com/darlinghq/darling/pull/898,https://github.com/ahyattdev,19,https://github.com/darlinghq/darling/pull/898#issuecomment-776069918,"That's right, it's finally here. It took a while, but I think this branch is finally stable enough to merge!
Major changes
Well first of all, as the branch name indicates, this is an update to all of our open source Apple code (updated to 10.15.2, but not much changed into 10.15.6). The biggest changes in Apple's code this time are in libpthread (and a few of the other system libraries like libsystem_c and libplatform).
However, this is also a major change for Darling's code as well. Most notably, our kqueue support now happens in-kernel, taking advantage of XNU's kqueue code as well, so our kqueue emulation should be more accurate and easier to maintain now.
Darling's build system also got a slight renovation. Many of our CMake support functions got more features to help support Apple's complex library dependencies and allow us to build them to accurately reflect how they're set up on macOS. I also tried to unify our headers into a single SDK in /Developer (though that could still be further organized into a proper SDK).
Other notable changes

Adds LibreSSL (progresses #718; missing BoringSSL)

Apple has switched over some OS tools (e.g. curl) to use this instead of SecureTransport, so HTTPS with those should be faster and more stable now (our CoreCrypto implementation still needs much improvement)


New ADDITIONAL_PACKAGES option for CMake

Enables a few non-standard (but very useful) utilities to be built and installed
Currently enables:

gnutar - The GNU version of tar
jsc - A JavaScript REPL built on JavaScriptCore
ash - Predecessor to dash. Apple plans to replace /bin/sh with ash , but they haven't done so yet, so this is locked behind ADDITIONAL_PACKAGES.




Quite a few more stubs and stubbed libraries

The biggest of which is libnetwork, which is Apple's shiny new networking library. Most users of this would probably be GUI applications (via the Network framework).


Various libsystem_kernel fixes for proper behavior
Includes fixes to allow Darling to compile under Clang 11+

This fixes #856 and also fixes #897.



Testing
I've tested much of this branch with as many different programs I could think of. Some have known issues (listed in the next section and for which I will be creating tracking issues), but for the most part, everything is working (at least as well as it is in master).
The mio and tokio testsuites have been a big help in rooting out problems in kqueue, psynch, and libsystem_kernel. Most of the issues found with those have been fixed (with the exceptions being most UDP-related errors).
However, since this is such a big set of changes, I'd like anyone that's willing to go ahead and test it out. Throw anything you can at it, especially stuff that's currently working in master. When you find issues, create an issue and make sure to include the Darling commit you tested it on so we can separate issues with the update from normal issues on master.
Known issues
I'll create tracking issues for these:

rustup doesn't work (fails to download anything)
brew install wget can blow up while trying to install openssl@1.1
zsh doesn't work (hangs forever when trying to run something that's not builtin)
jsc doesn't work (hangs before going into the REPL)
lldb crashes semi-randomly (occurs more frequently when trying to attach to a running program)",@facekapow does c8c8fba mean that 64 bit only builds now work?,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,898,2020-12-01T16:04:16Z,2021-02-20T02:49:22Z,2021-02-20T02:51:28Z,MERGED,True,413605,373646,7629,https://github.com/facekapow,Update sources,414,[],https://github.com/darlinghq/darling/pull/898,https://github.com/facekapow,20,https://github.com/darlinghq/darling/pull/898#issuecomment-776072390,"That's right, it's finally here. It took a while, but I think this branch is finally stable enough to merge!
Major changes
Well first of all, as the branch name indicates, this is an update to all of our open source Apple code (updated to 10.15.2, but not much changed into 10.15.6). The biggest changes in Apple's code this time are in libpthread (and a few of the other system libraries like libsystem_c and libplatform).
However, this is also a major change for Darling's code as well. Most notably, our kqueue support now happens in-kernel, taking advantage of XNU's kqueue code as well, so our kqueue emulation should be more accurate and easier to maintain now.
Darling's build system also got a slight renovation. Many of our CMake support functions got more features to help support Apple's complex library dependencies and allow us to build them to accurately reflect how they're set up on macOS. I also tried to unify our headers into a single SDK in /Developer (though that could still be further organized into a proper SDK).
Other notable changes

Adds LibreSSL (progresses #718; missing BoringSSL)

Apple has switched over some OS tools (e.g. curl) to use this instead of SecureTransport, so HTTPS with those should be faster and more stable now (our CoreCrypto implementation still needs much improvement)


New ADDITIONAL_PACKAGES option for CMake

Enables a few non-standard (but very useful) utilities to be built and installed
Currently enables:

gnutar - The GNU version of tar
jsc - A JavaScript REPL built on JavaScriptCore
ash - Predecessor to dash. Apple plans to replace /bin/sh with ash , but they haven't done so yet, so this is locked behind ADDITIONAL_PACKAGES.




Quite a few more stubs and stubbed libraries

The biggest of which is libnetwork, which is Apple's shiny new networking library. Most users of this would probably be GUI applications (via the Network framework).


Various libsystem_kernel fixes for proper behavior
Includes fixes to allow Darling to compile under Clang 11+

This fixes #856 and also fixes #897.



Testing
I've tested much of this branch with as many different programs I could think of. Some have known issues (listed in the next section and for which I will be creating tracking issues), but for the most part, everything is working (at least as well as it is in master).
The mio and tokio testsuites have been a big help in rooting out problems in kqueue, psynch, and libsystem_kernel. Most of the issues found with those have been fixed (with the exceptions being most UDP-related errors).
However, since this is such a big set of changes, I'd like anyone that's willing to go ahead and test it out. Throw anything you can at it, especially stuff that's currently working in master. When you find issues, create an issue and make sure to include the Darling commit you tested it on so we can separate issues with the update from normal issues on master.
Known issues
I'll create tracking issues for these:

rustup doesn't work (fails to download anything)
brew install wget can blow up while trying to install openssl@1.1
zsh doesn't work (hangs forever when trying to run something that's not builtin)
jsc doesn't work (hangs before going into the REPL)
lldb crashes semi-randomly (occurs more frequently when trying to attach to a running program)",Yep.,True,"{'HOORAY': ['https://github.com/ahyattdev', 'https://github.com/JCWasmx86']}"
darlinghq/darling,https://github.com/darlinghq/darling,906,2020-12-22T18:40:14Z,2021-02-09T21:44:21Z,2021-02-09T21:44:24Z,MERGED,True,30,2,1,https://github.com/bemoody,Handle single quotes in 'darling shell',1,[],https://github.com/darlinghq/darling/pull/906,https://github.com/bemoody,1,https://github.com/darlinghq/darling/pull/906,"If the command-line arguments to darling shell include single quotes, they must be escaped when constructing the string that is sent to shellspawn.
(Only single quotes need special handling; all other characters, including backslashes and control characters, are treated literally within single-quoted strings.)
For example, running the command
$ darling shell sh -c ""echo 'hello world'""

would result in the following string being sent to the shell:
'sh' '-c' 'echo 'hello world''

(which is interpreted as a command with three arguments: ""-c"", ""echo hello"", and ""world"").
What we want instead is:
'sh' '-c' 'echo '\''hello world'\'''

(which is interpreted as a command with two arguments: ""-c"" and ""echo 'hello world'"".)","If the command-line arguments to darling shell include single quotes, they must be escaped when constructing the string that is sent to shellspawn.
(Only single quotes need special handling; all other characters, including backslashes and control characters, are treated literally within single-quoted strings.)
For example, running the command
$ darling shell sh -c ""echo 'hello world'""

would result in the following string being sent to the shell:
'sh' '-c' 'echo 'hello world''

(which is interpreted as a command with three arguments: ""-c"", ""echo hello"", and ""world"").
What we want instead is:
'sh' '-c' 'echo '\''hello world'\'''

(which is interpreted as a command with two arguments: ""-c"" and ""echo 'hello world'"".)",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,906,2020-12-22T18:40:14Z,2021-02-09T21:44:21Z,2021-02-09T21:44:24Z,MERGED,True,30,2,1,https://github.com/bemoody,Handle single quotes in 'darling shell',1,[],https://github.com/darlinghq/darling/pull/906,https://github.com/HinTak,2,https://github.com/darlinghq/darling/pull/906#issuecomment-749728388,"If the command-line arguments to darling shell include single quotes, they must be escaped when constructing the string that is sent to shellspawn.
(Only single quotes need special handling; all other characters, including backslashes and control characters, are treated literally within single-quoted strings.)
For example, running the command
$ darling shell sh -c ""echo 'hello world'""

would result in the following string being sent to the shell:
'sh' '-c' 'echo 'hello world''

(which is interpreted as a command with three arguments: ""-c"", ""echo hello"", and ""world"").
What we want instead is:
'sh' '-c' 'echo '\''hello world'\'''

(which is interpreted as a command with two arguments: ""-c"" and ""echo 'hello world'"".)",Or put it in a file and run it? It is easier than piling on multiple escapes through multiple stages.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,906,2020-12-22T18:40:14Z,2021-02-09T21:44:21Z,2021-02-09T21:44:24Z,MERGED,True,30,2,1,https://github.com/bemoody,Handle single quotes in 'darling shell',1,[],https://github.com/darlinghq/darling/pull/906,https://github.com/HinTak,3,https://github.com/darlinghq/darling/pull/906#issuecomment-749730183,"If the command-line arguments to darling shell include single quotes, they must be escaped when constructing the string that is sent to shellspawn.
(Only single quotes need special handling; all other characters, including backslashes and control characters, are treated literally within single-quoted strings.)
For example, running the command
$ darling shell sh -c ""echo 'hello world'""

would result in the following string being sent to the shell:
'sh' '-c' 'echo 'hello world''

(which is interpreted as a command with three arguments: ""-c"", ""echo hello"", and ""world"").
What we want instead is:
'sh' '-c' 'echo '\''hello world'\'''

(which is interpreted as a command with two arguments: ""-c"" and ""echo 'hello world'"".)","The problem is that the argument is interpreted twice - by the host's shell then by darling running the darling version of shell. If you put the content in a file it is run by darling's version only.
You get the same problem on the host os by doing sh -c sh -c echo ...",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,906,2020-12-22T18:40:14Z,2021-02-09T21:44:21Z,2021-02-09T21:44:24Z,MERGED,True,30,2,1,https://github.com/bemoody,Handle single quotes in 'darling shell',1,[],https://github.com/darlinghq/darling/pull/906,https://github.com/HinTak,4,https://github.com/darlinghq/darling/pull/906#issuecomment-749731140,"If the command-line arguments to darling shell include single quotes, they must be escaped when constructing the string that is sent to shellspawn.
(Only single quotes need special handling; all other characters, including backslashes and control characters, are treated literally within single-quoted strings.)
For example, running the command
$ darling shell sh -c ""echo 'hello world'""

would result in the following string being sent to the shell:
'sh' '-c' 'echo 'hello world''

(which is interpreted as a command with three arguments: ""-c"", ""echo hello"", and ""world"").
What we want instead is:
'sh' '-c' 'echo '\''hello world'\'''

(which is interpreted as a command with two arguments: ""-c"" and ""echo 'hello world'"".)",I don't think this should be merged - even the host shell does not support sh -c sh -c echo ....,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,906,2020-12-22T18:40:14Z,2021-02-09T21:44:21Z,2021-02-09T21:44:24Z,MERGED,True,30,2,1,https://github.com/bemoody,Handle single quotes in 'darling shell',1,[],https://github.com/darlinghq/darling/pull/906,https://github.com/bemoody,5,https://github.com/darlinghq/darling/pull/906#issuecomment-749763272,"If the command-line arguments to darling shell include single quotes, they must be escaped when constructing the string that is sent to shellspawn.
(Only single quotes need special handling; all other characters, including backslashes and control characters, are treated literally within single-quoted strings.)
For example, running the command
$ darling shell sh -c ""echo 'hello world'""

would result in the following string being sent to the shell:
'sh' '-c' 'echo 'hello world''

(which is interpreted as a command with three arguments: ""-c"", ""echo hello"", and ""world"").
What we want instead is:
'sh' '-c' 'echo '\''hello world'\'''

(which is interpreted as a command with two arguments: ""-c"" and ""echo 'hello world'"".)","The problem is that the argument is interpreted twice - by the
 host's shell then by darling running the darling version of
 shell.
No, the problem is that darling adds single quotes around each
argument, but doesn't escape single quotes within them.


Let's step away from shell syntax, because it makes things confusing.
Are you familiar with Python?  In Python, you could write

    subprocess.call([""/bin/echo"", ""Here's an apostrophe!""])

and it would invoke the program /bin/echo with a single argument
(""Here's an apostrophe!""), and /bin/echo would dutifully print that
message to standard output.

If you wanted to instead print the message using the Darling
environment, you might try:

    subprocess.call([""darling"", ""shell"", ""/bin/echo"",
                     ""Here's an apostrophe!""])

But that would fail, because of darling's incorrect quoting.  Note
that in this case, there isn't any ""host shell"" - the only shell
involved here is the one that's used internally by ""shellspawn"".


The problem here doesn't have anything to do with ""sh"".  When you
invoke a program using ""darling shell"", you expect the arguments you
supply will be faithfully conveyed to the program on the other side.
(Just as with, say, ""env"" or ""nice"".)",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,906,2020-12-22T18:40:14Z,2021-02-09T21:44:21Z,2021-02-09T21:44:24Z,MERGED,True,30,2,1,https://github.com/bemoody,Handle single quotes in 'darling shell',1,[],https://github.com/darlinghq/darling/pull/906,https://github.com/bugaevc,6,https://github.com/darlinghq/darling/pull/906#issuecomment-749959923,"If the command-line arguments to darling shell include single quotes, they must be escaped when constructing the string that is sent to shellspawn.
(Only single quotes need special handling; all other characters, including backslashes and control characters, are treated literally within single-quoted strings.)
For example, running the command
$ darling shell sh -c ""echo 'hello world'""

would result in the following string being sent to the shell:
'sh' '-c' 'echo 'hello world''

(which is interpreted as a command with three arguments: ""-c"", ""echo hello"", and ""world"").
What we want instead is:
'sh' '-c' 'echo '\''hello world'\'''

(which is interpreted as a command with two arguments: ""-c"" and ""echo 'hello world'"".)","Makes sense to me.

even the host shell does not support sh -c sh -c echo ....

@HinTak But sh is not supposed to be invoked like sh command arg arg..., it's supposed to be invoked either as sh ./script.sh, or as sc -c ""command arg arg...""
darling shell, on the other hand, is supposed to be invoked as darling shell command arg arg...; and what that does is it calls sh -c ""'command' 'arg' 'arg' '...'"" inside the container. We quote the arguments, so it makes sense to escape them properly.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,906,2020-12-22T18:40:14Z,2021-02-09T21:44:21Z,2021-02-09T21:44:24Z,MERGED,True,30,2,1,https://github.com/bemoody,Handle single quotes in 'darling shell',1,[],https://github.com/darlinghq/darling/pull/906,https://github.com/ahyattdev,7,https://github.com/darlinghq/darling/pull/906#issuecomment-776264135,"If the command-line arguments to darling shell include single quotes, they must be escaped when constructing the string that is sent to shellspawn.
(Only single quotes need special handling; all other characters, including backslashes and control characters, are treated literally within single-quoted strings.)
For example, running the command
$ darling shell sh -c ""echo 'hello world'""

would result in the following string being sent to the shell:
'sh' '-c' 'echo 'hello world''

(which is interpreted as a command with three arguments: ""-c"", ""echo hello"", and ""world"").
What we want instead is:
'sh' '-c' 'echo '\''hello world'\'''

(which is interpreted as a command with two arguments: ""-c"" and ""echo 'hello world'"".)",looks good to me @bemoody,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,913,2021-01-04T00:56:48Z,2021-01-04T16:05:27Z,2021-01-04T22:51:44Z,MERGED,True,2,2,1,https://github.com/TotalCaesar659,Update URLs to HTTPS,1,[],https://github.com/darlinghq/darling/pull/913,https://github.com/TotalCaesar659,1,https://github.com/darlinghq/darling/pull/913,"P.S. Please, update this one:","P.S. Please, update this one:",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,918,2021-01-30T00:17:14Z,2021-02-12T17:58:46Z,2021-02-16T19:46:06Z,MERGED,True,17,5,4,https://github.com/andyneff,Rpm auto version,4,[],https://github.com/darlinghq/darling/pull/918,https://github.com/andyneff,1,https://github.com/darlinghq/darling/pull/918,"Was trying to rebuild the latest version of darling, but I made a mistake and it didn't build. Currently, the ""version"" on rpms is 0.1.{date}. So if that ever needs to get updated, then I would have to update the spec file (and dkms.conf) and PR that each time. Instead, now the build script will auto detect the latest commit date, and use that for the version number, making this one less thing to worry about :)
Expected Result
Kernel module build successfully.
Actual Result
Error while compiling, make.log shows:
/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.c:84:10: fatal error: mach/vm_map.h: No such file or directory
Steps To Reproduce

docker-compose run rpm
sudo install RPMS/x86_64/*20210123*.rpm
(optional) dkms build darling/0.1.20210123-1

dmesg Output
N/A
System Information
What system are you using?



Software
Version




Linux Kernel
5.8.18-100.fc31.x86_64


Darling
f866083



debugging

dkms make darling/0.1.20210123

Kernel preparation unnecessary for this kernel.  Skipping...

Building module:
cleaning build area...
'make' -C lkm/ MIGDIR=/usr/src/darling-mach-0.1.20200331/miggen MIGDIR_REL=../miggen KERNELVERSION=5.8.18-100.fc31.x86_64....(bad exit status: 2)
Error! Bad return status for module build on kernel: 5.8.18-100.fc31.x86_64 (x86_64)
Consult /var/lib/dkms/darling-mach/0.1.20210123/build/make.log for more information.


cd /var/lib/dkms/darling-mach/0.1.20210123/build
make -C lkm/ SHELL='sh -xv' MIGDIR=/usr/src/darling-mach-0.1.20200331/miggen MIGDIR_REL=../miggen KERNELVERSION=5.8.18-100.fc31.x86_64

Offending command:
  CC [M]  /var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.o
+ gcc -Wp,-MMD,/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/.ipc_kmsg.o.d -nostdinc -isystem /usr/lib/gcc/x86_64-redhat-linux/9/include -I./arch/x86/include -I./arch/x86/include/generated -I./include -I./arch/x86/include/uapi -I./arch/x86/include/generated/uapi -I./include/uapi -I./include/generated/uapi -include ./include/linux/kconfig.h -include ./include/linux/compiler_types.h -D__KERNEL__ -Wall -Wundef -Werror=strict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -fshort-wchar -fno-PIE -Werror=implicit-function-declaration -Werror=implicit-int -Wno-format-security -Wno-address-of-packed-member -std=gnu89 -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -m64 -falign-jumps=1 -falign-loops=1 -mno-80387 -mno-fp-ret-in-387 -mpreferred-stack-boundary=3 -mskip-rax-setup -mtune=generic -mno-red-zone -mcmodel=kernel -Wno-sign-compare -fno-asynchronous-unwind-tables -mindirect-branch=thunk-extern -mindirect-branch-register -fno-jump-tables -fno-delete-null-pointer-checks -Wno-frame-address -Wno-format-truncation -Wno-format-overflow -Wno-address-of-packed-member -O2 --param=allow-store-data-races=0 -Wframe-larger-than=2048 -fstack-protector -Wno-unused-but-set-variable -Wimplicit-fallthrough -Wno-unused-const-variable -fno-var-tracking-assignments -g -pg -mrecord-mcount -mfentry -DCC_USING_FENTRY -Wdeclaration-after-statement -Wvla -Wno-pointer-sign -Wno-stringop-truncation -Wno-array-bounds -Wno-stringop-overflow -Wno-restrict -Wno-maybe-uninitialized -fno-strict-overflow -fno-merge-all-constants -fmerge-constants -fno-stack-check -fconserve-stack -Werror=date-time -Werror=incompatible-pointer-types -Werror=designated-init -fmacro-prefix-map=./= -fcf-protection=none -Wno-packed-not-aligned -D__DARLING__ -DDARLING_DEBUG -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/EXTERNAL_HEADERS -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/EXTERNAL_HEADERS/bsd -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/duct/defines -DPAGE_SIZE_FIXED -DCONFIG_SCHED_TRADITIONAL -freorder-blocks -fno-builtin -fno-common -fsigned-bitfields -fno-strict-aliasing -fno-keep-inline-functions -Wno-unknown-pragmas -DAPPLE -DKERNEL -DKERNEL_PRIVATE -DXNU_KERNEL_PRIVATE -DPRIVATE -D__MACHO__=1 -Dvolatile=__volatile -DNEXT -Wno-error=cast-align -Wno-unused-parameter -Wno-missing-prototypes -Wno-unused-variable -D__LITTLE_ENDIAN__=1 -Wno-declaration-after-statement -Wno-undef -Wno-maybe-uninitialized -D__private_extern__=extern -D_MODE_T -D_NLINK_T -DVM32_SUPPORT=1 -DMACH_KERNEL_PRIVATE -I/usr/src/darling-mach-0.1.20200331/miggen/bsd -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/bsd -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/iokit -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/libkern -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/libsa -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/libsa -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/pexpert -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/security -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/export-headers -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/libsa -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/mach_debug -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/ -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/darling -I/usr/src/darling-mach-0.1.20200331/miggen/osfmk -I/usr/src/darling-mach-0.1.20200331/miggen/../../startup -DARCH_PRIVATE -DDRIVER_PRIVATE -D_KERNEL_BUILD -DKERNEL_BUILD -DMACH_KERNEL -DBSD_BUILD -DBSD_KERNEL_PRIVATE -DLP64KERN=1 -DLP64_DEBUG=0 -DTIMEZONE=0 -DPST=0 -DQUOTA -DABSOLUTETIME_SCALAR_TYPE -DCONFIG_LCTX -DMACH -DCONFIG_ZLEAKS -DNO_DIRECT_RPC -DIPFIREWALL_FORWARD -DIPFIREWALL_DEFAULT_TO_ACCEPT -DTRAFFIC_MGT -DRANDOM_IP_ID -DTCP_DROP_SYNFIN -DICMP_BANDLIM -DIFNET_INPUT_SANITY_CHK -DPSYNCH -DSECURE_KERNEL -DOLD_SEMWAIT_SIGNAL -DCONFIG_MBUF_JUMBO -DCONFIG_WORKQUEUE -DCONFIG_HFS_STD -DCONFIG_HFS_TRIM -DCONFIG_TASK_MAX=512 -DCONFIG_IPC_TABLE_ENTRIES_STEPS=256 -DNAMEDSTREAMS -DCONFIG_VOLFS -DCONFIG_IMGSRC_ACCESS -DCONFIG_TRIGGERS -DCONFIG_VFS_FUNNEL -DCONFIG_EXT_RESOLVER -DCONFIG_SEARCHFS -DIPSEC -DIPSEC_ESP -DIPV6FIREWALL_DEFAULT_TO_ACCEPT -Dcrypto -Drandomipid -DCONFIG_KN_HASHSIZE=20 -DCONFIG_VNODES=750 -DCONFIG_VNODE_FREE_MIN=75 -DCONFIG_NC_HASH=1024 -DCONFIG_VFS_NAMES=2048 -DCONFIG_MAX_CLUSTERS=4 -DKAUTH_CRED_PRIMES_COUNT=3 '-DKAUTH_CRED_PRIMES={5, 17, 97}' -DCONFIG_MIN_NBUF=64 -DCONFIG_MIN_NIOBUF=32 '-DCONFIG_NMBCLUSTERS=((1024 * 256) / MCLBYTES)' -DCONFIG_TCBHASHSIZE=128 -DCONFIG_ICMP_BANDLIM=50 -DCONFIG_AIO_MAX=10 -DCONFIG_AIO_PROCESS_MAX=4 -DCONFIG_AIO_THREAD_COUNT=2 -DCONFIG_THREAD_MAX=1024 -DCONFIG_MAXVIFS=2 -DCONFIG_MFCTBLSIZ=16 -DCONFIG_MSG_BSIZE=4096 -DCONFIG_ENFORCE_SIGNED_CODE -DCONFIG_MEMORYSTATUS -DCONFIG_JETSAM -DCONFIG_FREEZE -DCONFIG_ZLEAK_ALLOCATION_MAP_NUM=8192 -DCONFIG_ZLEAK_TRACE_MAP_NUM=4096 -DVM_PRESSURE_EVENTS -DCONFIG_KERNEL_0DAY_SYSCALL_HANDLER -DEVENTMETER -DCONFIG_APP_PROFILE=0 -std=gnu11 -DMODULE '-DKBUILD_BASENAME=""ipc_kmsg""' '-DKBUILD_MODNAME=""darling_mach""' -c -o /var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.o /var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.c
Some of the dirs say 0.1.20200331 instead of 0.1.20210123
Solution
This was all due to dkms.conf not being updated too. In order to prevent this, we should auto generate the dkms.conf file when creating the RPM, so this mistake isn't made again","Was trying to rebuild the latest version of darling, but I made a mistake and it didn't build. Currently, the ""version"" on rpms is 0.1.{date}. So if that ever needs to get updated, then I would have to update the spec file (and dkms.conf) and PR that each time. Instead, now the build script will auto detect the latest commit date, and use that for the version number, making this one less thing to worry about :)
Expected Result
Kernel module build successfully.
Actual Result
Error while compiling, make.log shows:
/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.c:84:10: fatal error: mach/vm_map.h: No such file or directory
Steps To Reproduce

docker-compose run rpm
sudo install RPMS/x86_64/*20210123*.rpm
(optional) dkms build darling/0.1.20210123-1

dmesg Output
N/A
System Information
What system are you using?



Software
Version




Linux Kernel
5.8.18-100.fc31.x86_64


Darling
f866083



debugging

dkms make darling/0.1.20210123

Kernel preparation unnecessary for this kernel.  Skipping...

Building module:
cleaning build area...
'make' -C lkm/ MIGDIR=/usr/src/darling-mach-0.1.20200331/miggen MIGDIR_REL=../miggen KERNELVERSION=5.8.18-100.fc31.x86_64....(bad exit status: 2)
Error! Bad return status for module build on kernel: 5.8.18-100.fc31.x86_64 (x86_64)
Consult /var/lib/dkms/darling-mach/0.1.20210123/build/make.log for more information.


cd /var/lib/dkms/darling-mach/0.1.20210123/build
make -C lkm/ SHELL='sh -xv' MIGDIR=/usr/src/darling-mach-0.1.20200331/miggen MIGDIR_REL=../miggen KERNELVERSION=5.8.18-100.fc31.x86_64

Offending command:
  CC [M]  /var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.o
+ gcc -Wp,-MMD,/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/.ipc_kmsg.o.d -nostdinc -isystem /usr/lib/gcc/x86_64-redhat-linux/9/include -I./arch/x86/include -I./arch/x86/include/generated -I./include -I./arch/x86/include/uapi -I./arch/x86/include/generated/uapi -I./include/uapi -I./include/generated/uapi -include ./include/linux/kconfig.h -include ./include/linux/compiler_types.h -D__KERNEL__ -Wall -Wundef -Werror=strict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -fshort-wchar -fno-PIE -Werror=implicit-function-declaration -Werror=implicit-int -Wno-format-security -Wno-address-of-packed-member -std=gnu89 -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -m64 -falign-jumps=1 -falign-loops=1 -mno-80387 -mno-fp-ret-in-387 -mpreferred-stack-boundary=3 -mskip-rax-setup -mtune=generic -mno-red-zone -mcmodel=kernel -Wno-sign-compare -fno-asynchronous-unwind-tables -mindirect-branch=thunk-extern -mindirect-branch-register -fno-jump-tables -fno-delete-null-pointer-checks -Wno-frame-address -Wno-format-truncation -Wno-format-overflow -Wno-address-of-packed-member -O2 --param=allow-store-data-races=0 -Wframe-larger-than=2048 -fstack-protector -Wno-unused-but-set-variable -Wimplicit-fallthrough -Wno-unused-const-variable -fno-var-tracking-assignments -g -pg -mrecord-mcount -mfentry -DCC_USING_FENTRY -Wdeclaration-after-statement -Wvla -Wno-pointer-sign -Wno-stringop-truncation -Wno-array-bounds -Wno-stringop-overflow -Wno-restrict -Wno-maybe-uninitialized -fno-strict-overflow -fno-merge-all-constants -fmerge-constants -fno-stack-check -fconserve-stack -Werror=date-time -Werror=incompatible-pointer-types -Werror=designated-init -fmacro-prefix-map=./= -fcf-protection=none -Wno-packed-not-aligned -D__DARLING__ -DDARLING_DEBUG -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/EXTERNAL_HEADERS -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/EXTERNAL_HEADERS/bsd -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/duct/defines -DPAGE_SIZE_FIXED -DCONFIG_SCHED_TRADITIONAL -freorder-blocks -fno-builtin -fno-common -fsigned-bitfields -fno-strict-aliasing -fno-keep-inline-functions -Wno-unknown-pragmas -DAPPLE -DKERNEL -DKERNEL_PRIVATE -DXNU_KERNEL_PRIVATE -DPRIVATE -D__MACHO__=1 -Dvolatile=__volatile -DNEXT -Wno-error=cast-align -Wno-unused-parameter -Wno-missing-prototypes -Wno-unused-variable -D__LITTLE_ENDIAN__=1 -Wno-declaration-after-statement -Wno-undef -Wno-maybe-uninitialized -D__private_extern__=extern -D_MODE_T -D_NLINK_T -DVM32_SUPPORT=1 -DMACH_KERNEL_PRIVATE -I/usr/src/darling-mach-0.1.20200331/miggen/bsd -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/bsd -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/iokit -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/libkern -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/libsa -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/libsa -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/pexpert -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/security -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/export-headers -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/libsa -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/mach_debug -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/ -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/darling -I/usr/src/darling-mach-0.1.20200331/miggen/osfmk -I/usr/src/darling-mach-0.1.20200331/miggen/../../startup -DARCH_PRIVATE -DDRIVER_PRIVATE -D_KERNEL_BUILD -DKERNEL_BUILD -DMACH_KERNEL -DBSD_BUILD -DBSD_KERNEL_PRIVATE -DLP64KERN=1 -DLP64_DEBUG=0 -DTIMEZONE=0 -DPST=0 -DQUOTA -DABSOLUTETIME_SCALAR_TYPE -DCONFIG_LCTX -DMACH -DCONFIG_ZLEAKS -DNO_DIRECT_RPC -DIPFIREWALL_FORWARD -DIPFIREWALL_DEFAULT_TO_ACCEPT -DTRAFFIC_MGT -DRANDOM_IP_ID -DTCP_DROP_SYNFIN -DICMP_BANDLIM -DIFNET_INPUT_SANITY_CHK -DPSYNCH -DSECURE_KERNEL -DOLD_SEMWAIT_SIGNAL -DCONFIG_MBUF_JUMBO -DCONFIG_WORKQUEUE -DCONFIG_HFS_STD -DCONFIG_HFS_TRIM -DCONFIG_TASK_MAX=512 -DCONFIG_IPC_TABLE_ENTRIES_STEPS=256 -DNAMEDSTREAMS -DCONFIG_VOLFS -DCONFIG_IMGSRC_ACCESS -DCONFIG_TRIGGERS -DCONFIG_VFS_FUNNEL -DCONFIG_EXT_RESOLVER -DCONFIG_SEARCHFS -DIPSEC -DIPSEC_ESP -DIPV6FIREWALL_DEFAULT_TO_ACCEPT -Dcrypto -Drandomipid -DCONFIG_KN_HASHSIZE=20 -DCONFIG_VNODES=750 -DCONFIG_VNODE_FREE_MIN=75 -DCONFIG_NC_HASH=1024 -DCONFIG_VFS_NAMES=2048 -DCONFIG_MAX_CLUSTERS=4 -DKAUTH_CRED_PRIMES_COUNT=3 '-DKAUTH_CRED_PRIMES={5, 17, 97}' -DCONFIG_MIN_NBUF=64 -DCONFIG_MIN_NIOBUF=32 '-DCONFIG_NMBCLUSTERS=((1024 * 256) / MCLBYTES)' -DCONFIG_TCBHASHSIZE=128 -DCONFIG_ICMP_BANDLIM=50 -DCONFIG_AIO_MAX=10 -DCONFIG_AIO_PROCESS_MAX=4 -DCONFIG_AIO_THREAD_COUNT=2 -DCONFIG_THREAD_MAX=1024 -DCONFIG_MAXVIFS=2 -DCONFIG_MFCTBLSIZ=16 -DCONFIG_MSG_BSIZE=4096 -DCONFIG_ENFORCE_SIGNED_CODE -DCONFIG_MEMORYSTATUS -DCONFIG_JETSAM -DCONFIG_FREEZE -DCONFIG_ZLEAK_ALLOCATION_MAP_NUM=8192 -DCONFIG_ZLEAK_TRACE_MAP_NUM=4096 -DVM_PRESSURE_EVENTS -DCONFIG_KERNEL_0DAY_SYSCALL_HANDLER -DEVENTMETER -DCONFIG_APP_PROFILE=0 -std=gnu11 -DMODULE '-DKBUILD_BASENAME=""ipc_kmsg""' '-DKBUILD_MODNAME=""darling_mach""' -c -o /var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.o /var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.c
Some of the dirs say 0.1.20200331 instead of 0.1.20210123
Solution
This was all due to dkms.conf not being updated too. In order to prevent this, we should auto generate the dkms.conf file when creating the RPM, so this mistake isn't made again",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,918,2021-01-30T00:17:14Z,2021-02-12T17:58:46Z,2021-02-16T19:46:06Z,MERGED,True,17,5,4,https://github.com/andyneff,Rpm auto version,4,[],https://github.com/darlinghq/darling/pull/918,https://github.com/HinTak,2,https://github.com/darlinghq/darling/pull/918#issuecomment-770117550,"Was trying to rebuild the latest version of darling, but I made a mistake and it didn't build. Currently, the ""version"" on rpms is 0.1.{date}. So if that ever needs to get updated, then I would have to update the spec file (and dkms.conf) and PR that each time. Instead, now the build script will auto detect the latest commit date, and use that for the version number, making this one less thing to worry about :)
Expected Result
Kernel module build successfully.
Actual Result
Error while compiling, make.log shows:
/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.c:84:10: fatal error: mach/vm_map.h: No such file or directory
Steps To Reproduce

docker-compose run rpm
sudo install RPMS/x86_64/*20210123*.rpm
(optional) dkms build darling/0.1.20210123-1

dmesg Output
N/A
System Information
What system are you using?



Software
Version




Linux Kernel
5.8.18-100.fc31.x86_64


Darling
f866083



debugging

dkms make darling/0.1.20210123

Kernel preparation unnecessary for this kernel.  Skipping...

Building module:
cleaning build area...
'make' -C lkm/ MIGDIR=/usr/src/darling-mach-0.1.20200331/miggen MIGDIR_REL=../miggen KERNELVERSION=5.8.18-100.fc31.x86_64....(bad exit status: 2)
Error! Bad return status for module build on kernel: 5.8.18-100.fc31.x86_64 (x86_64)
Consult /var/lib/dkms/darling-mach/0.1.20210123/build/make.log for more information.


cd /var/lib/dkms/darling-mach/0.1.20210123/build
make -C lkm/ SHELL='sh -xv' MIGDIR=/usr/src/darling-mach-0.1.20200331/miggen MIGDIR_REL=../miggen KERNELVERSION=5.8.18-100.fc31.x86_64

Offending command:
  CC [M]  /var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.o
+ gcc -Wp,-MMD,/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/.ipc_kmsg.o.d -nostdinc -isystem /usr/lib/gcc/x86_64-redhat-linux/9/include -I./arch/x86/include -I./arch/x86/include/generated -I./include -I./arch/x86/include/uapi -I./arch/x86/include/generated/uapi -I./include/uapi -I./include/generated/uapi -include ./include/linux/kconfig.h -include ./include/linux/compiler_types.h -D__KERNEL__ -Wall -Wundef -Werror=strict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -fshort-wchar -fno-PIE -Werror=implicit-function-declaration -Werror=implicit-int -Wno-format-security -Wno-address-of-packed-member -std=gnu89 -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -m64 -falign-jumps=1 -falign-loops=1 -mno-80387 -mno-fp-ret-in-387 -mpreferred-stack-boundary=3 -mskip-rax-setup -mtune=generic -mno-red-zone -mcmodel=kernel -Wno-sign-compare -fno-asynchronous-unwind-tables -mindirect-branch=thunk-extern -mindirect-branch-register -fno-jump-tables -fno-delete-null-pointer-checks -Wno-frame-address -Wno-format-truncation -Wno-format-overflow -Wno-address-of-packed-member -O2 --param=allow-store-data-races=0 -Wframe-larger-than=2048 -fstack-protector -Wno-unused-but-set-variable -Wimplicit-fallthrough -Wno-unused-const-variable -fno-var-tracking-assignments -g -pg -mrecord-mcount -mfentry -DCC_USING_FENTRY -Wdeclaration-after-statement -Wvla -Wno-pointer-sign -Wno-stringop-truncation -Wno-array-bounds -Wno-stringop-overflow -Wno-restrict -Wno-maybe-uninitialized -fno-strict-overflow -fno-merge-all-constants -fmerge-constants -fno-stack-check -fconserve-stack -Werror=date-time -Werror=incompatible-pointer-types -Werror=designated-init -fmacro-prefix-map=./= -fcf-protection=none -Wno-packed-not-aligned -D__DARLING__ -DDARLING_DEBUG -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/EXTERNAL_HEADERS -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/EXTERNAL_HEADERS/bsd -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/duct/defines -DPAGE_SIZE_FIXED -DCONFIG_SCHED_TRADITIONAL -freorder-blocks -fno-builtin -fno-common -fsigned-bitfields -fno-strict-aliasing -fno-keep-inline-functions -Wno-unknown-pragmas -DAPPLE -DKERNEL -DKERNEL_PRIVATE -DXNU_KERNEL_PRIVATE -DPRIVATE -D__MACHO__=1 -Dvolatile=__volatile -DNEXT -Wno-error=cast-align -Wno-unused-parameter -Wno-missing-prototypes -Wno-unused-variable -D__LITTLE_ENDIAN__=1 -Wno-declaration-after-statement -Wno-undef -Wno-maybe-uninitialized -D__private_extern__=extern -D_MODE_T -D_NLINK_T -DVM32_SUPPORT=1 -DMACH_KERNEL_PRIVATE -I/usr/src/darling-mach-0.1.20200331/miggen/bsd -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/bsd -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/iokit -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/libkern -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/libsa -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/libsa -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/pexpert -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/security -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/export-headers -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/libsa -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/mach_debug -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/ -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/darling -I/usr/src/darling-mach-0.1.20200331/miggen/osfmk -I/usr/src/darling-mach-0.1.20200331/miggen/../../startup -DARCH_PRIVATE -DDRIVER_PRIVATE -D_KERNEL_BUILD -DKERNEL_BUILD -DMACH_KERNEL -DBSD_BUILD -DBSD_KERNEL_PRIVATE -DLP64KERN=1 -DLP64_DEBUG=0 -DTIMEZONE=0 -DPST=0 -DQUOTA -DABSOLUTETIME_SCALAR_TYPE -DCONFIG_LCTX -DMACH -DCONFIG_ZLEAKS -DNO_DIRECT_RPC -DIPFIREWALL_FORWARD -DIPFIREWALL_DEFAULT_TO_ACCEPT -DTRAFFIC_MGT -DRANDOM_IP_ID -DTCP_DROP_SYNFIN -DICMP_BANDLIM -DIFNET_INPUT_SANITY_CHK -DPSYNCH -DSECURE_KERNEL -DOLD_SEMWAIT_SIGNAL -DCONFIG_MBUF_JUMBO -DCONFIG_WORKQUEUE -DCONFIG_HFS_STD -DCONFIG_HFS_TRIM -DCONFIG_TASK_MAX=512 -DCONFIG_IPC_TABLE_ENTRIES_STEPS=256 -DNAMEDSTREAMS -DCONFIG_VOLFS -DCONFIG_IMGSRC_ACCESS -DCONFIG_TRIGGERS -DCONFIG_VFS_FUNNEL -DCONFIG_EXT_RESOLVER -DCONFIG_SEARCHFS -DIPSEC -DIPSEC_ESP -DIPV6FIREWALL_DEFAULT_TO_ACCEPT -Dcrypto -Drandomipid -DCONFIG_KN_HASHSIZE=20 -DCONFIG_VNODES=750 -DCONFIG_VNODE_FREE_MIN=75 -DCONFIG_NC_HASH=1024 -DCONFIG_VFS_NAMES=2048 -DCONFIG_MAX_CLUSTERS=4 -DKAUTH_CRED_PRIMES_COUNT=3 '-DKAUTH_CRED_PRIMES={5, 17, 97}' -DCONFIG_MIN_NBUF=64 -DCONFIG_MIN_NIOBUF=32 '-DCONFIG_NMBCLUSTERS=((1024 * 256) / MCLBYTES)' -DCONFIG_TCBHASHSIZE=128 -DCONFIG_ICMP_BANDLIM=50 -DCONFIG_AIO_MAX=10 -DCONFIG_AIO_PROCESS_MAX=4 -DCONFIG_AIO_THREAD_COUNT=2 -DCONFIG_THREAD_MAX=1024 -DCONFIG_MAXVIFS=2 -DCONFIG_MFCTBLSIZ=16 -DCONFIG_MSG_BSIZE=4096 -DCONFIG_ENFORCE_SIGNED_CODE -DCONFIG_MEMORYSTATUS -DCONFIG_JETSAM -DCONFIG_FREEZE -DCONFIG_ZLEAK_ALLOCATION_MAP_NUM=8192 -DCONFIG_ZLEAK_TRACE_MAP_NUM=4096 -DVM_PRESSURE_EVENTS -DCONFIG_KERNEL_0DAY_SYSCALL_HANDLER -DEVENTMETER -DCONFIG_APP_PROFILE=0 -std=gnu11 -DMODULE '-DKBUILD_BASENAME=""ipc_kmsg""' '-DKBUILD_MODNAME=""darling_mach""' -c -o /var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.o /var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.c
Some of the dirs say 0.1.20200331 instead of 0.1.20210123
Solution
This was all due to dkms.conf not being updated too. In order to prevent this, we should auto generate the dkms.conf file when creating the RPM, so this mistake isn't made again","That looks wrong. You removed ""git"" from the requirements, etc. What if you need to rebuild again within the same calendar day? It is more reliable doing using git describe",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,918,2021-01-30T00:17:14Z,2021-02-12T17:58:46Z,2021-02-16T19:46:06Z,MERGED,True,17,5,4,https://github.com/andyneff,Rpm auto version,4,[],https://github.com/darlinghq/darling/pull/918,https://github.com/andyneff,3,https://github.com/darlinghq/darling/pull/918#issuecomment-770131458,"Was trying to rebuild the latest version of darling, but I made a mistake and it didn't build. Currently, the ""version"" on rpms is 0.1.{date}. So if that ever needs to get updated, then I would have to update the spec file (and dkms.conf) and PR that each time. Instead, now the build script will auto detect the latest commit date, and use that for the version number, making this one less thing to worry about :)
Expected Result
Kernel module build successfully.
Actual Result
Error while compiling, make.log shows:
/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.c:84:10: fatal error: mach/vm_map.h: No such file or directory
Steps To Reproduce

docker-compose run rpm
sudo install RPMS/x86_64/*20210123*.rpm
(optional) dkms build darling/0.1.20210123-1

dmesg Output
N/A
System Information
What system are you using?



Software
Version




Linux Kernel
5.8.18-100.fc31.x86_64


Darling
f866083



debugging

dkms make darling/0.1.20210123

Kernel preparation unnecessary for this kernel.  Skipping...

Building module:
cleaning build area...
'make' -C lkm/ MIGDIR=/usr/src/darling-mach-0.1.20200331/miggen MIGDIR_REL=../miggen KERNELVERSION=5.8.18-100.fc31.x86_64....(bad exit status: 2)
Error! Bad return status for module build on kernel: 5.8.18-100.fc31.x86_64 (x86_64)
Consult /var/lib/dkms/darling-mach/0.1.20210123/build/make.log for more information.


cd /var/lib/dkms/darling-mach/0.1.20210123/build
make -C lkm/ SHELL='sh -xv' MIGDIR=/usr/src/darling-mach-0.1.20200331/miggen MIGDIR_REL=../miggen KERNELVERSION=5.8.18-100.fc31.x86_64

Offending command:
  CC [M]  /var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.o
+ gcc -Wp,-MMD,/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/.ipc_kmsg.o.d -nostdinc -isystem /usr/lib/gcc/x86_64-redhat-linux/9/include -I./arch/x86/include -I./arch/x86/include/generated -I./include -I./arch/x86/include/uapi -I./arch/x86/include/generated/uapi -I./include/uapi -I./include/generated/uapi -include ./include/linux/kconfig.h -include ./include/linux/compiler_types.h -D__KERNEL__ -Wall -Wundef -Werror=strict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -fshort-wchar -fno-PIE -Werror=implicit-function-declaration -Werror=implicit-int -Wno-format-security -Wno-address-of-packed-member -std=gnu89 -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -m64 -falign-jumps=1 -falign-loops=1 -mno-80387 -mno-fp-ret-in-387 -mpreferred-stack-boundary=3 -mskip-rax-setup -mtune=generic -mno-red-zone -mcmodel=kernel -Wno-sign-compare -fno-asynchronous-unwind-tables -mindirect-branch=thunk-extern -mindirect-branch-register -fno-jump-tables -fno-delete-null-pointer-checks -Wno-frame-address -Wno-format-truncation -Wno-format-overflow -Wno-address-of-packed-member -O2 --param=allow-store-data-races=0 -Wframe-larger-than=2048 -fstack-protector -Wno-unused-but-set-variable -Wimplicit-fallthrough -Wno-unused-const-variable -fno-var-tracking-assignments -g -pg -mrecord-mcount -mfentry -DCC_USING_FENTRY -Wdeclaration-after-statement -Wvla -Wno-pointer-sign -Wno-stringop-truncation -Wno-array-bounds -Wno-stringop-overflow -Wno-restrict -Wno-maybe-uninitialized -fno-strict-overflow -fno-merge-all-constants -fmerge-constants -fno-stack-check -fconserve-stack -Werror=date-time -Werror=incompatible-pointer-types -Werror=designated-init -fmacro-prefix-map=./= -fcf-protection=none -Wno-packed-not-aligned -D__DARLING__ -DDARLING_DEBUG -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/EXTERNAL_HEADERS -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/EXTERNAL_HEADERS/bsd -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/duct/defines -DPAGE_SIZE_FIXED -DCONFIG_SCHED_TRADITIONAL -freorder-blocks -fno-builtin -fno-common -fsigned-bitfields -fno-strict-aliasing -fno-keep-inline-functions -Wno-unknown-pragmas -DAPPLE -DKERNEL -DKERNEL_PRIVATE -DXNU_KERNEL_PRIVATE -DPRIVATE -D__MACHO__=1 -Dvolatile=__volatile -DNEXT -Wno-error=cast-align -Wno-unused-parameter -Wno-missing-prototypes -Wno-unused-variable -D__LITTLE_ENDIAN__=1 -Wno-declaration-after-statement -Wno-undef -Wno-maybe-uninitialized -D__private_extern__=extern -D_MODE_T -D_NLINK_T -DVM32_SUPPORT=1 -DMACH_KERNEL_PRIVATE -I/usr/src/darling-mach-0.1.20200331/miggen/bsd -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/bsd -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/iokit -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/libkern -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/libsa -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/libsa -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/pexpert -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/security -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/export-headers -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/libsa -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/mach_debug -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/ -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/darling -I/usr/src/darling-mach-0.1.20200331/miggen/osfmk -I/usr/src/darling-mach-0.1.20200331/miggen/../../startup -DARCH_PRIVATE -DDRIVER_PRIVATE -D_KERNEL_BUILD -DKERNEL_BUILD -DMACH_KERNEL -DBSD_BUILD -DBSD_KERNEL_PRIVATE -DLP64KERN=1 -DLP64_DEBUG=0 -DTIMEZONE=0 -DPST=0 -DQUOTA -DABSOLUTETIME_SCALAR_TYPE -DCONFIG_LCTX -DMACH -DCONFIG_ZLEAKS -DNO_DIRECT_RPC -DIPFIREWALL_FORWARD -DIPFIREWALL_DEFAULT_TO_ACCEPT -DTRAFFIC_MGT -DRANDOM_IP_ID -DTCP_DROP_SYNFIN -DICMP_BANDLIM -DIFNET_INPUT_SANITY_CHK -DPSYNCH -DSECURE_KERNEL -DOLD_SEMWAIT_SIGNAL -DCONFIG_MBUF_JUMBO -DCONFIG_WORKQUEUE -DCONFIG_HFS_STD -DCONFIG_HFS_TRIM -DCONFIG_TASK_MAX=512 -DCONFIG_IPC_TABLE_ENTRIES_STEPS=256 -DNAMEDSTREAMS -DCONFIG_VOLFS -DCONFIG_IMGSRC_ACCESS -DCONFIG_TRIGGERS -DCONFIG_VFS_FUNNEL -DCONFIG_EXT_RESOLVER -DCONFIG_SEARCHFS -DIPSEC -DIPSEC_ESP -DIPV6FIREWALL_DEFAULT_TO_ACCEPT -Dcrypto -Drandomipid -DCONFIG_KN_HASHSIZE=20 -DCONFIG_VNODES=750 -DCONFIG_VNODE_FREE_MIN=75 -DCONFIG_NC_HASH=1024 -DCONFIG_VFS_NAMES=2048 -DCONFIG_MAX_CLUSTERS=4 -DKAUTH_CRED_PRIMES_COUNT=3 '-DKAUTH_CRED_PRIMES={5, 17, 97}' -DCONFIG_MIN_NBUF=64 -DCONFIG_MIN_NIOBUF=32 '-DCONFIG_NMBCLUSTERS=((1024 * 256) / MCLBYTES)' -DCONFIG_TCBHASHSIZE=128 -DCONFIG_ICMP_BANDLIM=50 -DCONFIG_AIO_MAX=10 -DCONFIG_AIO_PROCESS_MAX=4 -DCONFIG_AIO_THREAD_COUNT=2 -DCONFIG_THREAD_MAX=1024 -DCONFIG_MAXVIFS=2 -DCONFIG_MFCTBLSIZ=16 -DCONFIG_MSG_BSIZE=4096 -DCONFIG_ENFORCE_SIGNED_CODE -DCONFIG_MEMORYSTATUS -DCONFIG_JETSAM -DCONFIG_FREEZE -DCONFIG_ZLEAK_ALLOCATION_MAP_NUM=8192 -DCONFIG_ZLEAK_TRACE_MAP_NUM=4096 -DVM_PRESSURE_EVENTS -DCONFIG_KERNEL_0DAY_SYSCALL_HANDLER -DEVENTMETER -DCONFIG_APP_PROFILE=0 -std=gnu11 -DMODULE '-DKBUILD_BASENAME=""ipc_kmsg""' '-DKBUILD_MODNAME=""darling_mach""' -c -o /var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.o /var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.c
Some of the dirs say 0.1.20200331 instead of 0.1.20210123
Solution
This was all due to dkms.conf not being updated too. In order to prevent this, we should auto generate the dkms.conf file when creating the RPM, so this mistake isn't made again","@HinTak I'm not very familiar with git describe, do I have to use the --tags flag?",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,918,2021-01-30T00:17:14Z,2021-02-12T17:58:46Z,2021-02-16T19:46:06Z,MERGED,True,17,5,4,https://github.com/andyneff,Rpm auto version,4,[],https://github.com/darlinghq/darling/pull/918,https://github.com/andyneff,4,https://github.com/darlinghq/darling/pull/918#issuecomment-770132296,"Was trying to rebuild the latest version of darling, but I made a mistake and it didn't build. Currently, the ""version"" on rpms is 0.1.{date}. So if that ever needs to get updated, then I would have to update the spec file (and dkms.conf) and PR that each time. Instead, now the build script will auto detect the latest commit date, and use that for the version number, making this one less thing to worry about :)
Expected Result
Kernel module build successfully.
Actual Result
Error while compiling, make.log shows:
/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.c:84:10: fatal error: mach/vm_map.h: No such file or directory
Steps To Reproduce

docker-compose run rpm
sudo install RPMS/x86_64/*20210123*.rpm
(optional) dkms build darling/0.1.20210123-1

dmesg Output
N/A
System Information
What system are you using?



Software
Version




Linux Kernel
5.8.18-100.fc31.x86_64


Darling
f866083



debugging

dkms make darling/0.1.20210123

Kernel preparation unnecessary for this kernel.  Skipping...

Building module:
cleaning build area...
'make' -C lkm/ MIGDIR=/usr/src/darling-mach-0.1.20200331/miggen MIGDIR_REL=../miggen KERNELVERSION=5.8.18-100.fc31.x86_64....(bad exit status: 2)
Error! Bad return status for module build on kernel: 5.8.18-100.fc31.x86_64 (x86_64)
Consult /var/lib/dkms/darling-mach/0.1.20210123/build/make.log for more information.


cd /var/lib/dkms/darling-mach/0.1.20210123/build
make -C lkm/ SHELL='sh -xv' MIGDIR=/usr/src/darling-mach-0.1.20200331/miggen MIGDIR_REL=../miggen KERNELVERSION=5.8.18-100.fc31.x86_64

Offending command:
  CC [M]  /var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.o
+ gcc -Wp,-MMD,/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/.ipc_kmsg.o.d -nostdinc -isystem /usr/lib/gcc/x86_64-redhat-linux/9/include -I./arch/x86/include -I./arch/x86/include/generated -I./include -I./arch/x86/include/uapi -I./arch/x86/include/generated/uapi -I./include/uapi -I./include/generated/uapi -include ./include/linux/kconfig.h -include ./include/linux/compiler_types.h -D__KERNEL__ -Wall -Wundef -Werror=strict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -fshort-wchar -fno-PIE -Werror=implicit-function-declaration -Werror=implicit-int -Wno-format-security -Wno-address-of-packed-member -std=gnu89 -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -m64 -falign-jumps=1 -falign-loops=1 -mno-80387 -mno-fp-ret-in-387 -mpreferred-stack-boundary=3 -mskip-rax-setup -mtune=generic -mno-red-zone -mcmodel=kernel -Wno-sign-compare -fno-asynchronous-unwind-tables -mindirect-branch=thunk-extern -mindirect-branch-register -fno-jump-tables -fno-delete-null-pointer-checks -Wno-frame-address -Wno-format-truncation -Wno-format-overflow -Wno-address-of-packed-member -O2 --param=allow-store-data-races=0 -Wframe-larger-than=2048 -fstack-protector -Wno-unused-but-set-variable -Wimplicit-fallthrough -Wno-unused-const-variable -fno-var-tracking-assignments -g -pg -mrecord-mcount -mfentry -DCC_USING_FENTRY -Wdeclaration-after-statement -Wvla -Wno-pointer-sign -Wno-stringop-truncation -Wno-array-bounds -Wno-stringop-overflow -Wno-restrict -Wno-maybe-uninitialized -fno-strict-overflow -fno-merge-all-constants -fmerge-constants -fno-stack-check -fconserve-stack -Werror=date-time -Werror=incompatible-pointer-types -Werror=designated-init -fmacro-prefix-map=./= -fcf-protection=none -Wno-packed-not-aligned -D__DARLING__ -DDARLING_DEBUG -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/EXTERNAL_HEADERS -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/EXTERNAL_HEADERS/bsd -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/duct/defines -DPAGE_SIZE_FIXED -DCONFIG_SCHED_TRADITIONAL -freorder-blocks -fno-builtin -fno-common -fsigned-bitfields -fno-strict-aliasing -fno-keep-inline-functions -Wno-unknown-pragmas -DAPPLE -DKERNEL -DKERNEL_PRIVATE -DXNU_KERNEL_PRIVATE -DPRIVATE -D__MACHO__=1 -Dvolatile=__volatile -DNEXT -Wno-error=cast-align -Wno-unused-parameter -Wno-missing-prototypes -Wno-unused-variable -D__LITTLE_ENDIAN__=1 -Wno-declaration-after-statement -Wno-undef -Wno-maybe-uninitialized -D__private_extern__=extern -D_MODE_T -D_NLINK_T -DVM32_SUPPORT=1 -DMACH_KERNEL_PRIVATE -I/usr/src/darling-mach-0.1.20200331/miggen/bsd -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/bsd -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/iokit -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/libkern -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/libsa -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/libsa -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/pexpert -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/security -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/export-headers -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/libsa -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/mach_debug -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/ -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/darling -I/usr/src/darling-mach-0.1.20200331/miggen/osfmk -I/usr/src/darling-mach-0.1.20200331/miggen/../../startup -DARCH_PRIVATE -DDRIVER_PRIVATE -D_KERNEL_BUILD -DKERNEL_BUILD -DMACH_KERNEL -DBSD_BUILD -DBSD_KERNEL_PRIVATE -DLP64KERN=1 -DLP64_DEBUG=0 -DTIMEZONE=0 -DPST=0 -DQUOTA -DABSOLUTETIME_SCALAR_TYPE -DCONFIG_LCTX -DMACH -DCONFIG_ZLEAKS -DNO_DIRECT_RPC -DIPFIREWALL_FORWARD -DIPFIREWALL_DEFAULT_TO_ACCEPT -DTRAFFIC_MGT -DRANDOM_IP_ID -DTCP_DROP_SYNFIN -DICMP_BANDLIM -DIFNET_INPUT_SANITY_CHK -DPSYNCH -DSECURE_KERNEL -DOLD_SEMWAIT_SIGNAL -DCONFIG_MBUF_JUMBO -DCONFIG_WORKQUEUE -DCONFIG_HFS_STD -DCONFIG_HFS_TRIM -DCONFIG_TASK_MAX=512 -DCONFIG_IPC_TABLE_ENTRIES_STEPS=256 -DNAMEDSTREAMS -DCONFIG_VOLFS -DCONFIG_IMGSRC_ACCESS -DCONFIG_TRIGGERS -DCONFIG_VFS_FUNNEL -DCONFIG_EXT_RESOLVER -DCONFIG_SEARCHFS -DIPSEC -DIPSEC_ESP -DIPV6FIREWALL_DEFAULT_TO_ACCEPT -Dcrypto -Drandomipid -DCONFIG_KN_HASHSIZE=20 -DCONFIG_VNODES=750 -DCONFIG_VNODE_FREE_MIN=75 -DCONFIG_NC_HASH=1024 -DCONFIG_VFS_NAMES=2048 -DCONFIG_MAX_CLUSTERS=4 -DKAUTH_CRED_PRIMES_COUNT=3 '-DKAUTH_CRED_PRIMES={5, 17, 97}' -DCONFIG_MIN_NBUF=64 -DCONFIG_MIN_NIOBUF=32 '-DCONFIG_NMBCLUSTERS=((1024 * 256) / MCLBYTES)' -DCONFIG_TCBHASHSIZE=128 -DCONFIG_ICMP_BANDLIM=50 -DCONFIG_AIO_MAX=10 -DCONFIG_AIO_PROCESS_MAX=4 -DCONFIG_AIO_THREAD_COUNT=2 -DCONFIG_THREAD_MAX=1024 -DCONFIG_MAXVIFS=2 -DCONFIG_MFCTBLSIZ=16 -DCONFIG_MSG_BSIZE=4096 -DCONFIG_ENFORCE_SIGNED_CODE -DCONFIG_MEMORYSTATUS -DCONFIG_JETSAM -DCONFIG_FREEZE -DCONFIG_ZLEAK_ALLOCATION_MAP_NUM=8192 -DCONFIG_ZLEAK_TRACE_MAP_NUM=4096 -DVM_PRESSURE_EVENTS -DCONFIG_KERNEL_0DAY_SYSCALL_HANDLER -DEVENTMETER -DCONFIG_APP_PROFILE=0 -std=gnu11 -DMODULE '-DKBUILD_BASENAME=""ipc_kmsg""' '-DKBUILD_MODNAME=""darling_mach""' -c -o /var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.o /var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.c
Some of the dirs say 0.1.20200331 instead of 0.1.20210123
Solution
This was all due to dkms.conf not being updated too. In order to prevent this, we should auto generate the dkms.conf file when creating the RPM, so this mistake isn't made again","@HinTak What do you mean?

You removed ""git"" from the requirements, etc.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,918,2021-01-30T00:17:14Z,2021-02-12T17:58:46Z,2021-02-16T19:46:06Z,MERGED,True,17,5,4,https://github.com/andyneff,Rpm auto version,4,[],https://github.com/darlinghq/darling/pull/918,https://github.com/HinTak,5,https://github.com/darlinghq/darling/pull/918#issuecomment-770140360,"Was trying to rebuild the latest version of darling, but I made a mistake and it didn't build. Currently, the ""version"" on rpms is 0.1.{date}. So if that ever needs to get updated, then I would have to update the spec file (and dkms.conf) and PR that each time. Instead, now the build script will auto detect the latest commit date, and use that for the version number, making this one less thing to worry about :)
Expected Result
Kernel module build successfully.
Actual Result
Error while compiling, make.log shows:
/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.c:84:10: fatal error: mach/vm_map.h: No such file or directory
Steps To Reproduce

docker-compose run rpm
sudo install RPMS/x86_64/*20210123*.rpm
(optional) dkms build darling/0.1.20210123-1

dmesg Output
N/A
System Information
What system are you using?



Software
Version




Linux Kernel
5.8.18-100.fc31.x86_64


Darling
f866083



debugging

dkms make darling/0.1.20210123

Kernel preparation unnecessary for this kernel.  Skipping...

Building module:
cleaning build area...
'make' -C lkm/ MIGDIR=/usr/src/darling-mach-0.1.20200331/miggen MIGDIR_REL=../miggen KERNELVERSION=5.8.18-100.fc31.x86_64....(bad exit status: 2)
Error! Bad return status for module build on kernel: 5.8.18-100.fc31.x86_64 (x86_64)
Consult /var/lib/dkms/darling-mach/0.1.20210123/build/make.log for more information.


cd /var/lib/dkms/darling-mach/0.1.20210123/build
make -C lkm/ SHELL='sh -xv' MIGDIR=/usr/src/darling-mach-0.1.20200331/miggen MIGDIR_REL=../miggen KERNELVERSION=5.8.18-100.fc31.x86_64

Offending command:
  CC [M]  /var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.o
+ gcc -Wp,-MMD,/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/.ipc_kmsg.o.d -nostdinc -isystem /usr/lib/gcc/x86_64-redhat-linux/9/include -I./arch/x86/include -I./arch/x86/include/generated -I./include -I./arch/x86/include/uapi -I./arch/x86/include/generated/uapi -I./include/uapi -I./include/generated/uapi -include ./include/linux/kconfig.h -include ./include/linux/compiler_types.h -D__KERNEL__ -Wall -Wundef -Werror=strict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -fshort-wchar -fno-PIE -Werror=implicit-function-declaration -Werror=implicit-int -Wno-format-security -Wno-address-of-packed-member -std=gnu89 -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -m64 -falign-jumps=1 -falign-loops=1 -mno-80387 -mno-fp-ret-in-387 -mpreferred-stack-boundary=3 -mskip-rax-setup -mtune=generic -mno-red-zone -mcmodel=kernel -Wno-sign-compare -fno-asynchronous-unwind-tables -mindirect-branch=thunk-extern -mindirect-branch-register -fno-jump-tables -fno-delete-null-pointer-checks -Wno-frame-address -Wno-format-truncation -Wno-format-overflow -Wno-address-of-packed-member -O2 --param=allow-store-data-races=0 -Wframe-larger-than=2048 -fstack-protector -Wno-unused-but-set-variable -Wimplicit-fallthrough -Wno-unused-const-variable -fno-var-tracking-assignments -g -pg -mrecord-mcount -mfentry -DCC_USING_FENTRY -Wdeclaration-after-statement -Wvla -Wno-pointer-sign -Wno-stringop-truncation -Wno-array-bounds -Wno-stringop-overflow -Wno-restrict -Wno-maybe-uninitialized -fno-strict-overflow -fno-merge-all-constants -fmerge-constants -fno-stack-check -fconserve-stack -Werror=date-time -Werror=incompatible-pointer-types -Werror=designated-init -fmacro-prefix-map=./= -fcf-protection=none -Wno-packed-not-aligned -D__DARLING__ -DDARLING_DEBUG -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/EXTERNAL_HEADERS -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/EXTERNAL_HEADERS/bsd -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/duct/defines -DPAGE_SIZE_FIXED -DCONFIG_SCHED_TRADITIONAL -freorder-blocks -fno-builtin -fno-common -fsigned-bitfields -fno-strict-aliasing -fno-keep-inline-functions -Wno-unknown-pragmas -DAPPLE -DKERNEL -DKERNEL_PRIVATE -DXNU_KERNEL_PRIVATE -DPRIVATE -D__MACHO__=1 -Dvolatile=__volatile -DNEXT -Wno-error=cast-align -Wno-unused-parameter -Wno-missing-prototypes -Wno-unused-variable -D__LITTLE_ENDIAN__=1 -Wno-declaration-after-statement -Wno-undef -Wno-maybe-uninitialized -D__private_extern__=extern -D_MODE_T -D_NLINK_T -DVM32_SUPPORT=1 -DMACH_KERNEL_PRIVATE -I/usr/src/darling-mach-0.1.20200331/miggen/bsd -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/bsd -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/iokit -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/libkern -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/libsa -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/libsa -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/pexpert -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/security -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/export-headers -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/libsa -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/mach_debug -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/ -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/darling -I/usr/src/darling-mach-0.1.20200331/miggen/osfmk -I/usr/src/darling-mach-0.1.20200331/miggen/../../startup -DARCH_PRIVATE -DDRIVER_PRIVATE -D_KERNEL_BUILD -DKERNEL_BUILD -DMACH_KERNEL -DBSD_BUILD -DBSD_KERNEL_PRIVATE -DLP64KERN=1 -DLP64_DEBUG=0 -DTIMEZONE=0 -DPST=0 -DQUOTA -DABSOLUTETIME_SCALAR_TYPE -DCONFIG_LCTX -DMACH -DCONFIG_ZLEAKS -DNO_DIRECT_RPC -DIPFIREWALL_FORWARD -DIPFIREWALL_DEFAULT_TO_ACCEPT -DTRAFFIC_MGT -DRANDOM_IP_ID -DTCP_DROP_SYNFIN -DICMP_BANDLIM -DIFNET_INPUT_SANITY_CHK -DPSYNCH -DSECURE_KERNEL -DOLD_SEMWAIT_SIGNAL -DCONFIG_MBUF_JUMBO -DCONFIG_WORKQUEUE -DCONFIG_HFS_STD -DCONFIG_HFS_TRIM -DCONFIG_TASK_MAX=512 -DCONFIG_IPC_TABLE_ENTRIES_STEPS=256 -DNAMEDSTREAMS -DCONFIG_VOLFS -DCONFIG_IMGSRC_ACCESS -DCONFIG_TRIGGERS -DCONFIG_VFS_FUNNEL -DCONFIG_EXT_RESOLVER -DCONFIG_SEARCHFS -DIPSEC -DIPSEC_ESP -DIPV6FIREWALL_DEFAULT_TO_ACCEPT -Dcrypto -Drandomipid -DCONFIG_KN_HASHSIZE=20 -DCONFIG_VNODES=750 -DCONFIG_VNODE_FREE_MIN=75 -DCONFIG_NC_HASH=1024 -DCONFIG_VFS_NAMES=2048 -DCONFIG_MAX_CLUSTERS=4 -DKAUTH_CRED_PRIMES_COUNT=3 '-DKAUTH_CRED_PRIMES={5, 17, 97}' -DCONFIG_MIN_NBUF=64 -DCONFIG_MIN_NIOBUF=32 '-DCONFIG_NMBCLUSTERS=((1024 * 256) / MCLBYTES)' -DCONFIG_TCBHASHSIZE=128 -DCONFIG_ICMP_BANDLIM=50 -DCONFIG_AIO_MAX=10 -DCONFIG_AIO_PROCESS_MAX=4 -DCONFIG_AIO_THREAD_COUNT=2 -DCONFIG_THREAD_MAX=1024 -DCONFIG_MAXVIFS=2 -DCONFIG_MFCTBLSIZ=16 -DCONFIG_MSG_BSIZE=4096 -DCONFIG_ENFORCE_SIGNED_CODE -DCONFIG_MEMORYSTATUS -DCONFIG_JETSAM -DCONFIG_FREEZE -DCONFIG_ZLEAK_ALLOCATION_MAP_NUM=8192 -DCONFIG_ZLEAK_TRACE_MAP_NUM=4096 -DVM_PRESSURE_EVENTS -DCONFIG_KERNEL_0DAY_SYSCALL_HANDLER -DEVENTMETER -DCONFIG_APP_PROFILE=0 -std=gnu11 -DMODULE '-DKBUILD_BASENAME=""ipc_kmsg""' '-DKBUILD_MODNAME=""darling_mach""' -c -o /var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.o /var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.c
Some of the dirs say 0.1.20200331 instead of 0.1.20210123
Solution
This was all due to dkms.conf not being updated too. In order to prevent this, we should auto generate the dkms.conf file when creating the RPM, so this mistake isn't made again","@HinTak What do you mean?

You removed ""git"" from the requirements, etc.


You can't / shouldn't insert comments in a group of long lines ending with """".",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,918,2021-01-30T00:17:14Z,2021-02-12T17:58:46Z,2021-02-16T19:46:06Z,MERGED,True,17,5,4,https://github.com/andyneff,Rpm auto version,4,[],https://github.com/darlinghq/darling/pull/918,https://github.com/HinTak,6,https://github.com/darlinghq/darling/pull/918#issuecomment-770140744,"Was trying to rebuild the latest version of darling, but I made a mistake and it didn't build. Currently, the ""version"" on rpms is 0.1.{date}. So if that ever needs to get updated, then I would have to update the spec file (and dkms.conf) and PR that each time. Instead, now the build script will auto detect the latest commit date, and use that for the version number, making this one less thing to worry about :)
Expected Result
Kernel module build successfully.
Actual Result
Error while compiling, make.log shows:
/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.c:84:10: fatal error: mach/vm_map.h: No such file or directory
Steps To Reproduce

docker-compose run rpm
sudo install RPMS/x86_64/*20210123*.rpm
(optional) dkms build darling/0.1.20210123-1

dmesg Output
N/A
System Information
What system are you using?



Software
Version




Linux Kernel
5.8.18-100.fc31.x86_64


Darling
f866083



debugging

dkms make darling/0.1.20210123

Kernel preparation unnecessary for this kernel.  Skipping...

Building module:
cleaning build area...
'make' -C lkm/ MIGDIR=/usr/src/darling-mach-0.1.20200331/miggen MIGDIR_REL=../miggen KERNELVERSION=5.8.18-100.fc31.x86_64....(bad exit status: 2)
Error! Bad return status for module build on kernel: 5.8.18-100.fc31.x86_64 (x86_64)
Consult /var/lib/dkms/darling-mach/0.1.20210123/build/make.log for more information.


cd /var/lib/dkms/darling-mach/0.1.20210123/build
make -C lkm/ SHELL='sh -xv' MIGDIR=/usr/src/darling-mach-0.1.20200331/miggen MIGDIR_REL=../miggen KERNELVERSION=5.8.18-100.fc31.x86_64

Offending command:
  CC [M]  /var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.o
+ gcc -Wp,-MMD,/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/.ipc_kmsg.o.d -nostdinc -isystem /usr/lib/gcc/x86_64-redhat-linux/9/include -I./arch/x86/include -I./arch/x86/include/generated -I./include -I./arch/x86/include/uapi -I./arch/x86/include/generated/uapi -I./include/uapi -I./include/generated/uapi -include ./include/linux/kconfig.h -include ./include/linux/compiler_types.h -D__KERNEL__ -Wall -Wundef -Werror=strict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -fshort-wchar -fno-PIE -Werror=implicit-function-declaration -Werror=implicit-int -Wno-format-security -Wno-address-of-packed-member -std=gnu89 -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -m64 -falign-jumps=1 -falign-loops=1 -mno-80387 -mno-fp-ret-in-387 -mpreferred-stack-boundary=3 -mskip-rax-setup -mtune=generic -mno-red-zone -mcmodel=kernel -Wno-sign-compare -fno-asynchronous-unwind-tables -mindirect-branch=thunk-extern -mindirect-branch-register -fno-jump-tables -fno-delete-null-pointer-checks -Wno-frame-address -Wno-format-truncation -Wno-format-overflow -Wno-address-of-packed-member -O2 --param=allow-store-data-races=0 -Wframe-larger-than=2048 -fstack-protector -Wno-unused-but-set-variable -Wimplicit-fallthrough -Wno-unused-const-variable -fno-var-tracking-assignments -g -pg -mrecord-mcount -mfentry -DCC_USING_FENTRY -Wdeclaration-after-statement -Wvla -Wno-pointer-sign -Wno-stringop-truncation -Wno-array-bounds -Wno-stringop-overflow -Wno-restrict -Wno-maybe-uninitialized -fno-strict-overflow -fno-merge-all-constants -fmerge-constants -fno-stack-check -fconserve-stack -Werror=date-time -Werror=incompatible-pointer-types -Werror=designated-init -fmacro-prefix-map=./= -fcf-protection=none -Wno-packed-not-aligned -D__DARLING__ -DDARLING_DEBUG -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/EXTERNAL_HEADERS -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/EXTERNAL_HEADERS/bsd -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/duct/defines -DPAGE_SIZE_FIXED -DCONFIG_SCHED_TRADITIONAL -freorder-blocks -fno-builtin -fno-common -fsigned-bitfields -fno-strict-aliasing -fno-keep-inline-functions -Wno-unknown-pragmas -DAPPLE -DKERNEL -DKERNEL_PRIVATE -DXNU_KERNEL_PRIVATE -DPRIVATE -D__MACHO__=1 -Dvolatile=__volatile -DNEXT -Wno-error=cast-align -Wno-unused-parameter -Wno-missing-prototypes -Wno-unused-variable -D__LITTLE_ENDIAN__=1 -Wno-declaration-after-statement -Wno-undef -Wno-maybe-uninitialized -D__private_extern__=extern -D_MODE_T -D_NLINK_T -DVM32_SUPPORT=1 -DMACH_KERNEL_PRIVATE -I/usr/src/darling-mach-0.1.20200331/miggen/bsd -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/bsd -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/iokit -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/libkern -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/libsa -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/libsa -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/pexpert -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/security -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/export-headers -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/libsa -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/mach_debug -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/ -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/darling -I/usr/src/darling-mach-0.1.20200331/miggen/osfmk -I/usr/src/darling-mach-0.1.20200331/miggen/../../startup -DARCH_PRIVATE -DDRIVER_PRIVATE -D_KERNEL_BUILD -DKERNEL_BUILD -DMACH_KERNEL -DBSD_BUILD -DBSD_KERNEL_PRIVATE -DLP64KERN=1 -DLP64_DEBUG=0 -DTIMEZONE=0 -DPST=0 -DQUOTA -DABSOLUTETIME_SCALAR_TYPE -DCONFIG_LCTX -DMACH -DCONFIG_ZLEAKS -DNO_DIRECT_RPC -DIPFIREWALL_FORWARD -DIPFIREWALL_DEFAULT_TO_ACCEPT -DTRAFFIC_MGT -DRANDOM_IP_ID -DTCP_DROP_SYNFIN -DICMP_BANDLIM -DIFNET_INPUT_SANITY_CHK -DPSYNCH -DSECURE_KERNEL -DOLD_SEMWAIT_SIGNAL -DCONFIG_MBUF_JUMBO -DCONFIG_WORKQUEUE -DCONFIG_HFS_STD -DCONFIG_HFS_TRIM -DCONFIG_TASK_MAX=512 -DCONFIG_IPC_TABLE_ENTRIES_STEPS=256 -DNAMEDSTREAMS -DCONFIG_VOLFS -DCONFIG_IMGSRC_ACCESS -DCONFIG_TRIGGERS -DCONFIG_VFS_FUNNEL -DCONFIG_EXT_RESOLVER -DCONFIG_SEARCHFS -DIPSEC -DIPSEC_ESP -DIPV6FIREWALL_DEFAULT_TO_ACCEPT -Dcrypto -Drandomipid -DCONFIG_KN_HASHSIZE=20 -DCONFIG_VNODES=750 -DCONFIG_VNODE_FREE_MIN=75 -DCONFIG_NC_HASH=1024 -DCONFIG_VFS_NAMES=2048 -DCONFIG_MAX_CLUSTERS=4 -DKAUTH_CRED_PRIMES_COUNT=3 '-DKAUTH_CRED_PRIMES={5, 17, 97}' -DCONFIG_MIN_NBUF=64 -DCONFIG_MIN_NIOBUF=32 '-DCONFIG_NMBCLUSTERS=((1024 * 256) / MCLBYTES)' -DCONFIG_TCBHASHSIZE=128 -DCONFIG_ICMP_BANDLIM=50 -DCONFIG_AIO_MAX=10 -DCONFIG_AIO_PROCESS_MAX=4 -DCONFIG_AIO_THREAD_COUNT=2 -DCONFIG_THREAD_MAX=1024 -DCONFIG_MAXVIFS=2 -DCONFIG_MFCTBLSIZ=16 -DCONFIG_MSG_BSIZE=4096 -DCONFIG_ENFORCE_SIGNED_CODE -DCONFIG_MEMORYSTATUS -DCONFIG_JETSAM -DCONFIG_FREEZE -DCONFIG_ZLEAK_ALLOCATION_MAP_NUM=8192 -DCONFIG_ZLEAK_TRACE_MAP_NUM=4096 -DVM_PRESSURE_EVENTS -DCONFIG_KERNEL_0DAY_SYSCALL_HANDLER -DEVENTMETER -DCONFIG_APP_PROFILE=0 -std=gnu11 -DMODULE '-DKBUILD_BASENAME=""ipc_kmsg""' '-DKBUILD_MODNAME=""darling_mach""' -c -o /var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.o /var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.c
Some of the dirs say 0.1.20200331 instead of 0.1.20210123
Solution
This was all due to dkms.conf not being updated too. In order to prevent this, we should auto generate the dkms.conf file when creating the RPM, so this mistake isn't made again","""git describe ..."" outputs the number of commits since a tag, plus g and the first part of the sha1 hash. The latter can uniquely identify where you are in the repo history, and the former is useful to count changes since a release.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,918,2021-01-30T00:17:14Z,2021-02-12T17:58:46Z,2021-02-16T19:46:06Z,MERGED,True,17,5,4,https://github.com/andyneff,Rpm auto version,4,[],https://github.com/darlinghq/darling/pull/918,https://github.com/andyneff,7,https://github.com/darlinghq/darling/pull/918#issuecomment-771014276,"Was trying to rebuild the latest version of darling, but I made a mistake and it didn't build. Currently, the ""version"" on rpms is 0.1.{date}. So if that ever needs to get updated, then I would have to update the spec file (and dkms.conf) and PR that each time. Instead, now the build script will auto detect the latest commit date, and use that for the version number, making this one less thing to worry about :)
Expected Result
Kernel module build successfully.
Actual Result
Error while compiling, make.log shows:
/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.c:84:10: fatal error: mach/vm_map.h: No such file or directory
Steps To Reproduce

docker-compose run rpm
sudo install RPMS/x86_64/*20210123*.rpm
(optional) dkms build darling/0.1.20210123-1

dmesg Output
N/A
System Information
What system are you using?



Software
Version




Linux Kernel
5.8.18-100.fc31.x86_64


Darling
f866083



debugging

dkms make darling/0.1.20210123

Kernel preparation unnecessary for this kernel.  Skipping...

Building module:
cleaning build area...
'make' -C lkm/ MIGDIR=/usr/src/darling-mach-0.1.20200331/miggen MIGDIR_REL=../miggen KERNELVERSION=5.8.18-100.fc31.x86_64....(bad exit status: 2)
Error! Bad return status for module build on kernel: 5.8.18-100.fc31.x86_64 (x86_64)
Consult /var/lib/dkms/darling-mach/0.1.20210123/build/make.log for more information.


cd /var/lib/dkms/darling-mach/0.1.20210123/build
make -C lkm/ SHELL='sh -xv' MIGDIR=/usr/src/darling-mach-0.1.20200331/miggen MIGDIR_REL=../miggen KERNELVERSION=5.8.18-100.fc31.x86_64

Offending command:
  CC [M]  /var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.o
+ gcc -Wp,-MMD,/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/.ipc_kmsg.o.d -nostdinc -isystem /usr/lib/gcc/x86_64-redhat-linux/9/include -I./arch/x86/include -I./arch/x86/include/generated -I./include -I./arch/x86/include/uapi -I./arch/x86/include/generated/uapi -I./include/uapi -I./include/generated/uapi -include ./include/linux/kconfig.h -include ./include/linux/compiler_types.h -D__KERNEL__ -Wall -Wundef -Werror=strict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -fshort-wchar -fno-PIE -Werror=implicit-function-declaration -Werror=implicit-int -Wno-format-security -Wno-address-of-packed-member -std=gnu89 -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -m64 -falign-jumps=1 -falign-loops=1 -mno-80387 -mno-fp-ret-in-387 -mpreferred-stack-boundary=3 -mskip-rax-setup -mtune=generic -mno-red-zone -mcmodel=kernel -Wno-sign-compare -fno-asynchronous-unwind-tables -mindirect-branch=thunk-extern -mindirect-branch-register -fno-jump-tables -fno-delete-null-pointer-checks -Wno-frame-address -Wno-format-truncation -Wno-format-overflow -Wno-address-of-packed-member -O2 --param=allow-store-data-races=0 -Wframe-larger-than=2048 -fstack-protector -Wno-unused-but-set-variable -Wimplicit-fallthrough -Wno-unused-const-variable -fno-var-tracking-assignments -g -pg -mrecord-mcount -mfentry -DCC_USING_FENTRY -Wdeclaration-after-statement -Wvla -Wno-pointer-sign -Wno-stringop-truncation -Wno-array-bounds -Wno-stringop-overflow -Wno-restrict -Wno-maybe-uninitialized -fno-strict-overflow -fno-merge-all-constants -fmerge-constants -fno-stack-check -fconserve-stack -Werror=date-time -Werror=incompatible-pointer-types -Werror=designated-init -fmacro-prefix-map=./= -fcf-protection=none -Wno-packed-not-aligned -D__DARLING__ -DDARLING_DEBUG -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/EXTERNAL_HEADERS -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/EXTERNAL_HEADERS/bsd -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/duct/defines -DPAGE_SIZE_FIXED -DCONFIG_SCHED_TRADITIONAL -freorder-blocks -fno-builtin -fno-common -fsigned-bitfields -fno-strict-aliasing -fno-keep-inline-functions -Wno-unknown-pragmas -DAPPLE -DKERNEL -DKERNEL_PRIVATE -DXNU_KERNEL_PRIVATE -DPRIVATE -D__MACHO__=1 -Dvolatile=__volatile -DNEXT -Wno-error=cast-align -Wno-unused-parameter -Wno-missing-prototypes -Wno-unused-variable -D__LITTLE_ENDIAN__=1 -Wno-declaration-after-statement -Wno-undef -Wno-maybe-uninitialized -D__private_extern__=extern -D_MODE_T -D_NLINK_T -DVM32_SUPPORT=1 -DMACH_KERNEL_PRIVATE -I/usr/src/darling-mach-0.1.20200331/miggen/bsd -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/bsd -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/iokit -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/libkern -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/libsa -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/libsa -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/pexpert -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/security -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/export-headers -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/libsa -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/mach_debug -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/ -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/darling -I/usr/src/darling-mach-0.1.20200331/miggen/osfmk -I/usr/src/darling-mach-0.1.20200331/miggen/../../startup -DARCH_PRIVATE -DDRIVER_PRIVATE -D_KERNEL_BUILD -DKERNEL_BUILD -DMACH_KERNEL -DBSD_BUILD -DBSD_KERNEL_PRIVATE -DLP64KERN=1 -DLP64_DEBUG=0 -DTIMEZONE=0 -DPST=0 -DQUOTA -DABSOLUTETIME_SCALAR_TYPE -DCONFIG_LCTX -DMACH -DCONFIG_ZLEAKS -DNO_DIRECT_RPC -DIPFIREWALL_FORWARD -DIPFIREWALL_DEFAULT_TO_ACCEPT -DTRAFFIC_MGT -DRANDOM_IP_ID -DTCP_DROP_SYNFIN -DICMP_BANDLIM -DIFNET_INPUT_SANITY_CHK -DPSYNCH -DSECURE_KERNEL -DOLD_SEMWAIT_SIGNAL -DCONFIG_MBUF_JUMBO -DCONFIG_WORKQUEUE -DCONFIG_HFS_STD -DCONFIG_HFS_TRIM -DCONFIG_TASK_MAX=512 -DCONFIG_IPC_TABLE_ENTRIES_STEPS=256 -DNAMEDSTREAMS -DCONFIG_VOLFS -DCONFIG_IMGSRC_ACCESS -DCONFIG_TRIGGERS -DCONFIG_VFS_FUNNEL -DCONFIG_EXT_RESOLVER -DCONFIG_SEARCHFS -DIPSEC -DIPSEC_ESP -DIPV6FIREWALL_DEFAULT_TO_ACCEPT -Dcrypto -Drandomipid -DCONFIG_KN_HASHSIZE=20 -DCONFIG_VNODES=750 -DCONFIG_VNODE_FREE_MIN=75 -DCONFIG_NC_HASH=1024 -DCONFIG_VFS_NAMES=2048 -DCONFIG_MAX_CLUSTERS=4 -DKAUTH_CRED_PRIMES_COUNT=3 '-DKAUTH_CRED_PRIMES={5, 17, 97}' -DCONFIG_MIN_NBUF=64 -DCONFIG_MIN_NIOBUF=32 '-DCONFIG_NMBCLUSTERS=((1024 * 256) / MCLBYTES)' -DCONFIG_TCBHASHSIZE=128 -DCONFIG_ICMP_BANDLIM=50 -DCONFIG_AIO_MAX=10 -DCONFIG_AIO_PROCESS_MAX=4 -DCONFIG_AIO_THREAD_COUNT=2 -DCONFIG_THREAD_MAX=1024 -DCONFIG_MAXVIFS=2 -DCONFIG_MFCTBLSIZ=16 -DCONFIG_MSG_BSIZE=4096 -DCONFIG_ENFORCE_SIGNED_CODE -DCONFIG_MEMORYSTATUS -DCONFIG_JETSAM -DCONFIG_FREEZE -DCONFIG_ZLEAK_ALLOCATION_MAP_NUM=8192 -DCONFIG_ZLEAK_TRACE_MAP_NUM=4096 -DVM_PRESSURE_EVENTS -DCONFIG_KERNEL_0DAY_SYSCALL_HANDLER -DEVENTMETER -DCONFIG_APP_PROFILE=0 -std=gnu11 -DMODULE '-DKBUILD_BASENAME=""ipc_kmsg""' '-DKBUILD_MODNAME=""darling_mach""' -c -o /var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.o /var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.c
Some of the dirs say 0.1.20200331 instead of 0.1.20210123
Solution
This was all due to dkms.conf not being updated too. In order to prevent this, we should auto generate the dkms.conf file when creating the RPM, so this mistake isn't made again","Running git describe on the darling repo results in:
$ git describe
fatal: No annotated tags can describe '918ee0ed72e5f15247ab1f0e2782586049555692'.
However, there were unannotated tags: try --tags.

So I added the --tags, and it picked the nearest non-annotated tag and worked. So I'm asking: Was the desired command for me to use the --tags flag? I've already pushed that change here, so if it's good, then I'll leave it as is.
This should work fine, provided that dnf is happy with a version number like 0.1.20200331-249-g918ee0ed7, which I have not tested",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,918,2021-01-30T00:17:14Z,2021-02-12T17:58:46Z,2021-02-16T19:46:06Z,MERGED,True,17,5,4,https://github.com/andyneff,Rpm auto version,4,[],https://github.com/darlinghq/darling/pull/918,https://github.com/andyneff,8,https://github.com/darlinghq/darling/pull/918#issuecomment-771027954,"Was trying to rebuild the latest version of darling, but I made a mistake and it didn't build. Currently, the ""version"" on rpms is 0.1.{date}. So if that ever needs to get updated, then I would have to update the spec file (and dkms.conf) and PR that each time. Instead, now the build script will auto detect the latest commit date, and use that for the version number, making this one less thing to worry about :)
Expected Result
Kernel module build successfully.
Actual Result
Error while compiling, make.log shows:
/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.c:84:10: fatal error: mach/vm_map.h: No such file or directory
Steps To Reproduce

docker-compose run rpm
sudo install RPMS/x86_64/*20210123*.rpm
(optional) dkms build darling/0.1.20210123-1

dmesg Output
N/A
System Information
What system are you using?



Software
Version




Linux Kernel
5.8.18-100.fc31.x86_64


Darling
f866083



debugging

dkms make darling/0.1.20210123

Kernel preparation unnecessary for this kernel.  Skipping...

Building module:
cleaning build area...
'make' -C lkm/ MIGDIR=/usr/src/darling-mach-0.1.20200331/miggen MIGDIR_REL=../miggen KERNELVERSION=5.8.18-100.fc31.x86_64....(bad exit status: 2)
Error! Bad return status for module build on kernel: 5.8.18-100.fc31.x86_64 (x86_64)
Consult /var/lib/dkms/darling-mach/0.1.20210123/build/make.log for more information.


cd /var/lib/dkms/darling-mach/0.1.20210123/build
make -C lkm/ SHELL='sh -xv' MIGDIR=/usr/src/darling-mach-0.1.20200331/miggen MIGDIR_REL=../miggen KERNELVERSION=5.8.18-100.fc31.x86_64

Offending command:
  CC [M]  /var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.o
+ gcc -Wp,-MMD,/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/.ipc_kmsg.o.d -nostdinc -isystem /usr/lib/gcc/x86_64-redhat-linux/9/include -I./arch/x86/include -I./arch/x86/include/generated -I./include -I./arch/x86/include/uapi -I./arch/x86/include/generated/uapi -I./include/uapi -I./include/generated/uapi -include ./include/linux/kconfig.h -include ./include/linux/compiler_types.h -D__KERNEL__ -Wall -Wundef -Werror=strict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -fshort-wchar -fno-PIE -Werror=implicit-function-declaration -Werror=implicit-int -Wno-format-security -Wno-address-of-packed-member -std=gnu89 -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -m64 -falign-jumps=1 -falign-loops=1 -mno-80387 -mno-fp-ret-in-387 -mpreferred-stack-boundary=3 -mskip-rax-setup -mtune=generic -mno-red-zone -mcmodel=kernel -Wno-sign-compare -fno-asynchronous-unwind-tables -mindirect-branch=thunk-extern -mindirect-branch-register -fno-jump-tables -fno-delete-null-pointer-checks -Wno-frame-address -Wno-format-truncation -Wno-format-overflow -Wno-address-of-packed-member -O2 --param=allow-store-data-races=0 -Wframe-larger-than=2048 -fstack-protector -Wno-unused-but-set-variable -Wimplicit-fallthrough -Wno-unused-const-variable -fno-var-tracking-assignments -g -pg -mrecord-mcount -mfentry -DCC_USING_FENTRY -Wdeclaration-after-statement -Wvla -Wno-pointer-sign -Wno-stringop-truncation -Wno-array-bounds -Wno-stringop-overflow -Wno-restrict -Wno-maybe-uninitialized -fno-strict-overflow -fno-merge-all-constants -fmerge-constants -fno-stack-check -fconserve-stack -Werror=date-time -Werror=incompatible-pointer-types -Werror=designated-init -fmacro-prefix-map=./= -fcf-protection=none -Wno-packed-not-aligned -D__DARLING__ -DDARLING_DEBUG -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/EXTERNAL_HEADERS -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/EXTERNAL_HEADERS/bsd -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/duct/defines -DPAGE_SIZE_FIXED -DCONFIG_SCHED_TRADITIONAL -freorder-blocks -fno-builtin -fno-common -fsigned-bitfields -fno-strict-aliasing -fno-keep-inline-functions -Wno-unknown-pragmas -DAPPLE -DKERNEL -DKERNEL_PRIVATE -DXNU_KERNEL_PRIVATE -DPRIVATE -D__MACHO__=1 -Dvolatile=__volatile -DNEXT -Wno-error=cast-align -Wno-unused-parameter -Wno-missing-prototypes -Wno-unused-variable -D__LITTLE_ENDIAN__=1 -Wno-declaration-after-statement -Wno-undef -Wno-maybe-uninitialized -D__private_extern__=extern -D_MODE_T -D_NLINK_T -DVM32_SUPPORT=1 -DMACH_KERNEL_PRIVATE -I/usr/src/darling-mach-0.1.20200331/miggen/bsd -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/bsd -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/iokit -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/libkern -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/libsa -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/libsa -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/pexpert -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/security -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/export-headers -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/libsa -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/mach_debug -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/ -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/darling -I/usr/src/darling-mach-0.1.20200331/miggen/osfmk -I/usr/src/darling-mach-0.1.20200331/miggen/../../startup -DARCH_PRIVATE -DDRIVER_PRIVATE -D_KERNEL_BUILD -DKERNEL_BUILD -DMACH_KERNEL -DBSD_BUILD -DBSD_KERNEL_PRIVATE -DLP64KERN=1 -DLP64_DEBUG=0 -DTIMEZONE=0 -DPST=0 -DQUOTA -DABSOLUTETIME_SCALAR_TYPE -DCONFIG_LCTX -DMACH -DCONFIG_ZLEAKS -DNO_DIRECT_RPC -DIPFIREWALL_FORWARD -DIPFIREWALL_DEFAULT_TO_ACCEPT -DTRAFFIC_MGT -DRANDOM_IP_ID -DTCP_DROP_SYNFIN -DICMP_BANDLIM -DIFNET_INPUT_SANITY_CHK -DPSYNCH -DSECURE_KERNEL -DOLD_SEMWAIT_SIGNAL -DCONFIG_MBUF_JUMBO -DCONFIG_WORKQUEUE -DCONFIG_HFS_STD -DCONFIG_HFS_TRIM -DCONFIG_TASK_MAX=512 -DCONFIG_IPC_TABLE_ENTRIES_STEPS=256 -DNAMEDSTREAMS -DCONFIG_VOLFS -DCONFIG_IMGSRC_ACCESS -DCONFIG_TRIGGERS -DCONFIG_VFS_FUNNEL -DCONFIG_EXT_RESOLVER -DCONFIG_SEARCHFS -DIPSEC -DIPSEC_ESP -DIPV6FIREWALL_DEFAULT_TO_ACCEPT -Dcrypto -Drandomipid -DCONFIG_KN_HASHSIZE=20 -DCONFIG_VNODES=750 -DCONFIG_VNODE_FREE_MIN=75 -DCONFIG_NC_HASH=1024 -DCONFIG_VFS_NAMES=2048 -DCONFIG_MAX_CLUSTERS=4 -DKAUTH_CRED_PRIMES_COUNT=3 '-DKAUTH_CRED_PRIMES={5, 17, 97}' -DCONFIG_MIN_NBUF=64 -DCONFIG_MIN_NIOBUF=32 '-DCONFIG_NMBCLUSTERS=((1024 * 256) / MCLBYTES)' -DCONFIG_TCBHASHSIZE=128 -DCONFIG_ICMP_BANDLIM=50 -DCONFIG_AIO_MAX=10 -DCONFIG_AIO_PROCESS_MAX=4 -DCONFIG_AIO_THREAD_COUNT=2 -DCONFIG_THREAD_MAX=1024 -DCONFIG_MAXVIFS=2 -DCONFIG_MFCTBLSIZ=16 -DCONFIG_MSG_BSIZE=4096 -DCONFIG_ENFORCE_SIGNED_CODE -DCONFIG_MEMORYSTATUS -DCONFIG_JETSAM -DCONFIG_FREEZE -DCONFIG_ZLEAK_ALLOCATION_MAP_NUM=8192 -DCONFIG_ZLEAK_TRACE_MAP_NUM=4096 -DVM_PRESSURE_EVENTS -DCONFIG_KERNEL_0DAY_SYSCALL_HANDLER -DEVENTMETER -DCONFIG_APP_PROFILE=0 -std=gnu11 -DMODULE '-DKBUILD_BASENAME=""ipc_kmsg""' '-DKBUILD_MODNAME=""darling_mach""' -c -o /var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.o /var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.c
Some of the dirs say 0.1.20200331 instead of 0.1.20210123
Solution
This was all due to dkms.conf not being updated too. In order to prevent this, we should auto generate the dkms.conf file when creating the RPM, so this mistake isn't made again","@HinTak What do you mean?

You removed ""git"" from the requirements, etc.


You can't / shouldn't insert comments in a group of long lines ending with """".

If you are referring to this line, this is not a bash script, it is a Dockerfile, who's comment character is also #. A Dockerfile contains a series of commands like RUN. The RUN command runs each command individually in a shell (in this case bash -euxvc). But the dockerfile is limited to only being able to run ""one liners"" and literal newlines are not typically allowed. By default, the \ character in a Dockerfile (similar to bash, but actually being parsed by the docker client, not bash) is the line continuation character. The # comments are also parsed by docker, not bash. So you see, in the language of a Dockerfile, it is actually very possible to put comment between two lines that use the line continuation character. We break up a long line (and add the comments) to help with the readability for the developer, but the actual command that gets executed is:
bash -euxvc 'dnf install -y bison cairo-devel clang cmake dkms flex fontconfig-devel.x86_64                    fontconfig-devel.i686 freetype-devel.x86_64 freetype-devel.i686                    fuse-devel glibc-devel glibc-devel.i686 kernel-devel                    libglvnd-devel libjpeg-turbo-devel libjpeg-turbo-devel.i686                    libtiff-devel libtiff-devel.i686 mesa-libGL-devel mesa-libEGL-devel                    python2 systemd-devel make libxml2-devel elfutils-libelf-devel                    libbsd-devel ffmpeg-devel pulseaudio-libs-devel openssl-devel                    giflib-devel libXrandr-devel libXcursor-devel libxkbfile-devel                    dbus-devel mesa-libGLU-devel                    git;'

Notice: all those extra spaces are in the final command, because of how they were added in the dockerfile for readability reasons only, but the ""dockerfile"" comment it completely gone.
If this valid comment still needs to be removed, let me know and I will delete it.
If this is not the line you are referring to, please link/comment the line you are asking about.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,918,2021-01-30T00:17:14Z,2021-02-12T17:58:46Z,2021-02-16T19:46:06Z,MERGED,True,17,5,4,https://github.com/andyneff,Rpm auto version,4,[],https://github.com/darlinghq/darling/pull/918,https://github.com/HinTak,9,https://github.com/darlinghq/darling/pull/918#issuecomment-771287171,"Was trying to rebuild the latest version of darling, but I made a mistake and it didn't build. Currently, the ""version"" on rpms is 0.1.{date}. So if that ever needs to get updated, then I would have to update the spec file (and dkms.conf) and PR that each time. Instead, now the build script will auto detect the latest commit date, and use that for the version number, making this one less thing to worry about :)
Expected Result
Kernel module build successfully.
Actual Result
Error while compiling, make.log shows:
/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.c:84:10: fatal error: mach/vm_map.h: No such file or directory
Steps To Reproduce

docker-compose run rpm
sudo install RPMS/x86_64/*20210123*.rpm
(optional) dkms build darling/0.1.20210123-1

dmesg Output
N/A
System Information
What system are you using?



Software
Version




Linux Kernel
5.8.18-100.fc31.x86_64


Darling
f866083



debugging

dkms make darling/0.1.20210123

Kernel preparation unnecessary for this kernel.  Skipping...

Building module:
cleaning build area...
'make' -C lkm/ MIGDIR=/usr/src/darling-mach-0.1.20200331/miggen MIGDIR_REL=../miggen KERNELVERSION=5.8.18-100.fc31.x86_64....(bad exit status: 2)
Error! Bad return status for module build on kernel: 5.8.18-100.fc31.x86_64 (x86_64)
Consult /var/lib/dkms/darling-mach/0.1.20210123/build/make.log for more information.


cd /var/lib/dkms/darling-mach/0.1.20210123/build
make -C lkm/ SHELL='sh -xv' MIGDIR=/usr/src/darling-mach-0.1.20200331/miggen MIGDIR_REL=../miggen KERNELVERSION=5.8.18-100.fc31.x86_64

Offending command:
  CC [M]  /var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.o
+ gcc -Wp,-MMD,/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/.ipc_kmsg.o.d -nostdinc -isystem /usr/lib/gcc/x86_64-redhat-linux/9/include -I./arch/x86/include -I./arch/x86/include/generated -I./include -I./arch/x86/include/uapi -I./arch/x86/include/generated/uapi -I./include/uapi -I./include/generated/uapi -include ./include/linux/kconfig.h -include ./include/linux/compiler_types.h -D__KERNEL__ -Wall -Wundef -Werror=strict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -fshort-wchar -fno-PIE -Werror=implicit-function-declaration -Werror=implicit-int -Wno-format-security -Wno-address-of-packed-member -std=gnu89 -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -m64 -falign-jumps=1 -falign-loops=1 -mno-80387 -mno-fp-ret-in-387 -mpreferred-stack-boundary=3 -mskip-rax-setup -mtune=generic -mno-red-zone -mcmodel=kernel -Wno-sign-compare -fno-asynchronous-unwind-tables -mindirect-branch=thunk-extern -mindirect-branch-register -fno-jump-tables -fno-delete-null-pointer-checks -Wno-frame-address -Wno-format-truncation -Wno-format-overflow -Wno-address-of-packed-member -O2 --param=allow-store-data-races=0 -Wframe-larger-than=2048 -fstack-protector -Wno-unused-but-set-variable -Wimplicit-fallthrough -Wno-unused-const-variable -fno-var-tracking-assignments -g -pg -mrecord-mcount -mfentry -DCC_USING_FENTRY -Wdeclaration-after-statement -Wvla -Wno-pointer-sign -Wno-stringop-truncation -Wno-array-bounds -Wno-stringop-overflow -Wno-restrict -Wno-maybe-uninitialized -fno-strict-overflow -fno-merge-all-constants -fmerge-constants -fno-stack-check -fconserve-stack -Werror=date-time -Werror=incompatible-pointer-types -Werror=designated-init -fmacro-prefix-map=./= -fcf-protection=none -Wno-packed-not-aligned -D__DARLING__ -DDARLING_DEBUG -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/EXTERNAL_HEADERS -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/EXTERNAL_HEADERS/bsd -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/duct/defines -DPAGE_SIZE_FIXED -DCONFIG_SCHED_TRADITIONAL -freorder-blocks -fno-builtin -fno-common -fsigned-bitfields -fno-strict-aliasing -fno-keep-inline-functions -Wno-unknown-pragmas -DAPPLE -DKERNEL -DKERNEL_PRIVATE -DXNU_KERNEL_PRIVATE -DPRIVATE -D__MACHO__=1 -Dvolatile=__volatile -DNEXT -Wno-error=cast-align -Wno-unused-parameter -Wno-missing-prototypes -Wno-unused-variable -D__LITTLE_ENDIAN__=1 -Wno-declaration-after-statement -Wno-undef -Wno-maybe-uninitialized -D__private_extern__=extern -D_MODE_T -D_NLINK_T -DVM32_SUPPORT=1 -DMACH_KERNEL_PRIVATE -I/usr/src/darling-mach-0.1.20200331/miggen/bsd -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/bsd -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/iokit -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/libkern -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/libsa -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/libsa -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/pexpert -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/security -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/export-headers -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/libsa -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/mach_debug -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/ -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/darling -I/usr/src/darling-mach-0.1.20200331/miggen/osfmk -I/usr/src/darling-mach-0.1.20200331/miggen/../../startup -DARCH_PRIVATE -DDRIVER_PRIVATE -D_KERNEL_BUILD -DKERNEL_BUILD -DMACH_KERNEL -DBSD_BUILD -DBSD_KERNEL_PRIVATE -DLP64KERN=1 -DLP64_DEBUG=0 -DTIMEZONE=0 -DPST=0 -DQUOTA -DABSOLUTETIME_SCALAR_TYPE -DCONFIG_LCTX -DMACH -DCONFIG_ZLEAKS -DNO_DIRECT_RPC -DIPFIREWALL_FORWARD -DIPFIREWALL_DEFAULT_TO_ACCEPT -DTRAFFIC_MGT -DRANDOM_IP_ID -DTCP_DROP_SYNFIN -DICMP_BANDLIM -DIFNET_INPUT_SANITY_CHK -DPSYNCH -DSECURE_KERNEL -DOLD_SEMWAIT_SIGNAL -DCONFIG_MBUF_JUMBO -DCONFIG_WORKQUEUE -DCONFIG_HFS_STD -DCONFIG_HFS_TRIM -DCONFIG_TASK_MAX=512 -DCONFIG_IPC_TABLE_ENTRIES_STEPS=256 -DNAMEDSTREAMS -DCONFIG_VOLFS -DCONFIG_IMGSRC_ACCESS -DCONFIG_TRIGGERS -DCONFIG_VFS_FUNNEL -DCONFIG_EXT_RESOLVER -DCONFIG_SEARCHFS -DIPSEC -DIPSEC_ESP -DIPV6FIREWALL_DEFAULT_TO_ACCEPT -Dcrypto -Drandomipid -DCONFIG_KN_HASHSIZE=20 -DCONFIG_VNODES=750 -DCONFIG_VNODE_FREE_MIN=75 -DCONFIG_NC_HASH=1024 -DCONFIG_VFS_NAMES=2048 -DCONFIG_MAX_CLUSTERS=4 -DKAUTH_CRED_PRIMES_COUNT=3 '-DKAUTH_CRED_PRIMES={5, 17, 97}' -DCONFIG_MIN_NBUF=64 -DCONFIG_MIN_NIOBUF=32 '-DCONFIG_NMBCLUSTERS=((1024 * 256) / MCLBYTES)' -DCONFIG_TCBHASHSIZE=128 -DCONFIG_ICMP_BANDLIM=50 -DCONFIG_AIO_MAX=10 -DCONFIG_AIO_PROCESS_MAX=4 -DCONFIG_AIO_THREAD_COUNT=2 -DCONFIG_THREAD_MAX=1024 -DCONFIG_MAXVIFS=2 -DCONFIG_MFCTBLSIZ=16 -DCONFIG_MSG_BSIZE=4096 -DCONFIG_ENFORCE_SIGNED_CODE -DCONFIG_MEMORYSTATUS -DCONFIG_JETSAM -DCONFIG_FREEZE -DCONFIG_ZLEAK_ALLOCATION_MAP_NUM=8192 -DCONFIG_ZLEAK_TRACE_MAP_NUM=4096 -DVM_PRESSURE_EVENTS -DCONFIG_KERNEL_0DAY_SYSCALL_HANDLER -DEVENTMETER -DCONFIG_APP_PROFILE=0 -std=gnu11 -DMODULE '-DKBUILD_BASENAME=""ipc_kmsg""' '-DKBUILD_MODNAME=""darling_mach""' -c -o /var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.o /var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.c
Some of the dirs say 0.1.20200331 instead of 0.1.20210123
Solution
This was all due to dkms.conf not being updated too. In order to prevent this, we should auto generate the dkms.conf file when creating the RPM, so this mistake isn't made again","Yes, that'a the line I refer to. It is rather an implementation detail that comments between line continuation works?",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,918,2021-01-30T00:17:14Z,2021-02-12T17:58:46Z,2021-02-16T19:46:06Z,MERGED,True,17,5,4,https://github.com/andyneff,Rpm auto version,4,[],https://github.com/darlinghq/darling/pull/918,https://github.com/andyneff,10,https://github.com/darlinghq/darling/pull/918#issuecomment-771727791,"Was trying to rebuild the latest version of darling, but I made a mistake and it didn't build. Currently, the ""version"" on rpms is 0.1.{date}. So if that ever needs to get updated, then I would have to update the spec file (and dkms.conf) and PR that each time. Instead, now the build script will auto detect the latest commit date, and use that for the version number, making this one less thing to worry about :)
Expected Result
Kernel module build successfully.
Actual Result
Error while compiling, make.log shows:
/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.c:84:10: fatal error: mach/vm_map.h: No such file or directory
Steps To Reproduce

docker-compose run rpm
sudo install RPMS/x86_64/*20210123*.rpm
(optional) dkms build darling/0.1.20210123-1

dmesg Output
N/A
System Information
What system are you using?



Software
Version




Linux Kernel
5.8.18-100.fc31.x86_64


Darling
f866083



debugging

dkms make darling/0.1.20210123

Kernel preparation unnecessary for this kernel.  Skipping...

Building module:
cleaning build area...
'make' -C lkm/ MIGDIR=/usr/src/darling-mach-0.1.20200331/miggen MIGDIR_REL=../miggen KERNELVERSION=5.8.18-100.fc31.x86_64....(bad exit status: 2)
Error! Bad return status for module build on kernel: 5.8.18-100.fc31.x86_64 (x86_64)
Consult /var/lib/dkms/darling-mach/0.1.20210123/build/make.log for more information.


cd /var/lib/dkms/darling-mach/0.1.20210123/build
make -C lkm/ SHELL='sh -xv' MIGDIR=/usr/src/darling-mach-0.1.20200331/miggen MIGDIR_REL=../miggen KERNELVERSION=5.8.18-100.fc31.x86_64

Offending command:
  CC [M]  /var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.o
+ gcc -Wp,-MMD,/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/.ipc_kmsg.o.d -nostdinc -isystem /usr/lib/gcc/x86_64-redhat-linux/9/include -I./arch/x86/include -I./arch/x86/include/generated -I./include -I./arch/x86/include/uapi -I./arch/x86/include/generated/uapi -I./include/uapi -I./include/generated/uapi -include ./include/linux/kconfig.h -include ./include/linux/compiler_types.h -D__KERNEL__ -Wall -Wundef -Werror=strict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -fshort-wchar -fno-PIE -Werror=implicit-function-declaration -Werror=implicit-int -Wno-format-security -Wno-address-of-packed-member -std=gnu89 -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -m64 -falign-jumps=1 -falign-loops=1 -mno-80387 -mno-fp-ret-in-387 -mpreferred-stack-boundary=3 -mskip-rax-setup -mtune=generic -mno-red-zone -mcmodel=kernel -Wno-sign-compare -fno-asynchronous-unwind-tables -mindirect-branch=thunk-extern -mindirect-branch-register -fno-jump-tables -fno-delete-null-pointer-checks -Wno-frame-address -Wno-format-truncation -Wno-format-overflow -Wno-address-of-packed-member -O2 --param=allow-store-data-races=0 -Wframe-larger-than=2048 -fstack-protector -Wno-unused-but-set-variable -Wimplicit-fallthrough -Wno-unused-const-variable -fno-var-tracking-assignments -g -pg -mrecord-mcount -mfentry -DCC_USING_FENTRY -Wdeclaration-after-statement -Wvla -Wno-pointer-sign -Wno-stringop-truncation -Wno-array-bounds -Wno-stringop-overflow -Wno-restrict -Wno-maybe-uninitialized -fno-strict-overflow -fno-merge-all-constants -fmerge-constants -fno-stack-check -fconserve-stack -Werror=date-time -Werror=incompatible-pointer-types -Werror=designated-init -fmacro-prefix-map=./= -fcf-protection=none -Wno-packed-not-aligned -D__DARLING__ -DDARLING_DEBUG -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/EXTERNAL_HEADERS -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/EXTERNAL_HEADERS/bsd -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/duct/defines -DPAGE_SIZE_FIXED -DCONFIG_SCHED_TRADITIONAL -freorder-blocks -fno-builtin -fno-common -fsigned-bitfields -fno-strict-aliasing -fno-keep-inline-functions -Wno-unknown-pragmas -DAPPLE -DKERNEL -DKERNEL_PRIVATE -DXNU_KERNEL_PRIVATE -DPRIVATE -D__MACHO__=1 -Dvolatile=__volatile -DNEXT -Wno-error=cast-align -Wno-unused-parameter -Wno-missing-prototypes -Wno-unused-variable -D__LITTLE_ENDIAN__=1 -Wno-declaration-after-statement -Wno-undef -Wno-maybe-uninitialized -D__private_extern__=extern -D_MODE_T -D_NLINK_T -DVM32_SUPPORT=1 -DMACH_KERNEL_PRIVATE -I/usr/src/darling-mach-0.1.20200331/miggen/bsd -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/bsd -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/iokit -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/libkern -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/libsa -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/libsa -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/pexpert -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/security -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/export-headers -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/libsa -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/mach_debug -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/ -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/darling -I/usr/src/darling-mach-0.1.20200331/miggen/osfmk -I/usr/src/darling-mach-0.1.20200331/miggen/../../startup -DARCH_PRIVATE -DDRIVER_PRIVATE -D_KERNEL_BUILD -DKERNEL_BUILD -DMACH_KERNEL -DBSD_BUILD -DBSD_KERNEL_PRIVATE -DLP64KERN=1 -DLP64_DEBUG=0 -DTIMEZONE=0 -DPST=0 -DQUOTA -DABSOLUTETIME_SCALAR_TYPE -DCONFIG_LCTX -DMACH -DCONFIG_ZLEAKS -DNO_DIRECT_RPC -DIPFIREWALL_FORWARD -DIPFIREWALL_DEFAULT_TO_ACCEPT -DTRAFFIC_MGT -DRANDOM_IP_ID -DTCP_DROP_SYNFIN -DICMP_BANDLIM -DIFNET_INPUT_SANITY_CHK -DPSYNCH -DSECURE_KERNEL -DOLD_SEMWAIT_SIGNAL -DCONFIG_MBUF_JUMBO -DCONFIG_WORKQUEUE -DCONFIG_HFS_STD -DCONFIG_HFS_TRIM -DCONFIG_TASK_MAX=512 -DCONFIG_IPC_TABLE_ENTRIES_STEPS=256 -DNAMEDSTREAMS -DCONFIG_VOLFS -DCONFIG_IMGSRC_ACCESS -DCONFIG_TRIGGERS -DCONFIG_VFS_FUNNEL -DCONFIG_EXT_RESOLVER -DCONFIG_SEARCHFS -DIPSEC -DIPSEC_ESP -DIPV6FIREWALL_DEFAULT_TO_ACCEPT -Dcrypto -Drandomipid -DCONFIG_KN_HASHSIZE=20 -DCONFIG_VNODES=750 -DCONFIG_VNODE_FREE_MIN=75 -DCONFIG_NC_HASH=1024 -DCONFIG_VFS_NAMES=2048 -DCONFIG_MAX_CLUSTERS=4 -DKAUTH_CRED_PRIMES_COUNT=3 '-DKAUTH_CRED_PRIMES={5, 17, 97}' -DCONFIG_MIN_NBUF=64 -DCONFIG_MIN_NIOBUF=32 '-DCONFIG_NMBCLUSTERS=((1024 * 256) / MCLBYTES)' -DCONFIG_TCBHASHSIZE=128 -DCONFIG_ICMP_BANDLIM=50 -DCONFIG_AIO_MAX=10 -DCONFIG_AIO_PROCESS_MAX=4 -DCONFIG_AIO_THREAD_COUNT=2 -DCONFIG_THREAD_MAX=1024 -DCONFIG_MAXVIFS=2 -DCONFIG_MFCTBLSIZ=16 -DCONFIG_MSG_BSIZE=4096 -DCONFIG_ENFORCE_SIGNED_CODE -DCONFIG_MEMORYSTATUS -DCONFIG_JETSAM -DCONFIG_FREEZE -DCONFIG_ZLEAK_ALLOCATION_MAP_NUM=8192 -DCONFIG_ZLEAK_TRACE_MAP_NUM=4096 -DVM_PRESSURE_EVENTS -DCONFIG_KERNEL_0DAY_SYSCALL_HANDLER -DEVENTMETER -DCONFIG_APP_PROFILE=0 -std=gnu11 -DMODULE '-DKBUILD_BASENAME=""ipc_kmsg""' '-DKBUILD_MODNAME=""darling_mach""' -c -o /var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.o /var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.c
Some of the dirs say 0.1.20200331 instead of 0.1.20210123
Solution
This was all due to dkms.conf not being updated too. In order to prevent this, we should auto generate the dkms.conf file when creating the RPM, so this mistake isn't made again","This is not just an implementation detail that happens to work, it is actually a documented feature of the language: https://docs.docker.com/engine/reference/builder/#format",True,{'THUMBS_UP': ['https://github.com/bugaevc']}
darlinghq/darling,https://github.com/darlinghq/darling,918,2021-01-30T00:17:14Z,2021-02-12T17:58:46Z,2021-02-16T19:46:06Z,MERGED,True,17,5,4,https://github.com/andyneff,Rpm auto version,4,[],https://github.com/darlinghq/darling/pull/918,https://github.com/HinTak,11,https://github.com/darlinghq/darling/pull/918#issuecomment-772165964,"Was trying to rebuild the latest version of darling, but I made a mistake and it didn't build. Currently, the ""version"" on rpms is 0.1.{date}. So if that ever needs to get updated, then I would have to update the spec file (and dkms.conf) and PR that each time. Instead, now the build script will auto detect the latest commit date, and use that for the version number, making this one less thing to worry about :)
Expected Result
Kernel module build successfully.
Actual Result
Error while compiling, make.log shows:
/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.c:84:10: fatal error: mach/vm_map.h: No such file or directory
Steps To Reproduce

docker-compose run rpm
sudo install RPMS/x86_64/*20210123*.rpm
(optional) dkms build darling/0.1.20210123-1

dmesg Output
N/A
System Information
What system are you using?



Software
Version




Linux Kernel
5.8.18-100.fc31.x86_64


Darling
f866083



debugging

dkms make darling/0.1.20210123

Kernel preparation unnecessary for this kernel.  Skipping...

Building module:
cleaning build area...
'make' -C lkm/ MIGDIR=/usr/src/darling-mach-0.1.20200331/miggen MIGDIR_REL=../miggen KERNELVERSION=5.8.18-100.fc31.x86_64....(bad exit status: 2)
Error! Bad return status for module build on kernel: 5.8.18-100.fc31.x86_64 (x86_64)
Consult /var/lib/dkms/darling-mach/0.1.20210123/build/make.log for more information.


cd /var/lib/dkms/darling-mach/0.1.20210123/build
make -C lkm/ SHELL='sh -xv' MIGDIR=/usr/src/darling-mach-0.1.20200331/miggen MIGDIR_REL=../miggen KERNELVERSION=5.8.18-100.fc31.x86_64

Offending command:
  CC [M]  /var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.o
+ gcc -Wp,-MMD,/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/.ipc_kmsg.o.d -nostdinc -isystem /usr/lib/gcc/x86_64-redhat-linux/9/include -I./arch/x86/include -I./arch/x86/include/generated -I./include -I./arch/x86/include/uapi -I./arch/x86/include/generated/uapi -I./include/uapi -I./include/generated/uapi -include ./include/linux/kconfig.h -include ./include/linux/compiler_types.h -D__KERNEL__ -Wall -Wundef -Werror=strict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -fshort-wchar -fno-PIE -Werror=implicit-function-declaration -Werror=implicit-int -Wno-format-security -Wno-address-of-packed-member -std=gnu89 -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -m64 -falign-jumps=1 -falign-loops=1 -mno-80387 -mno-fp-ret-in-387 -mpreferred-stack-boundary=3 -mskip-rax-setup -mtune=generic -mno-red-zone -mcmodel=kernel -Wno-sign-compare -fno-asynchronous-unwind-tables -mindirect-branch=thunk-extern -mindirect-branch-register -fno-jump-tables -fno-delete-null-pointer-checks -Wno-frame-address -Wno-format-truncation -Wno-format-overflow -Wno-address-of-packed-member -O2 --param=allow-store-data-races=0 -Wframe-larger-than=2048 -fstack-protector -Wno-unused-but-set-variable -Wimplicit-fallthrough -Wno-unused-const-variable -fno-var-tracking-assignments -g -pg -mrecord-mcount -mfentry -DCC_USING_FENTRY -Wdeclaration-after-statement -Wvla -Wno-pointer-sign -Wno-stringop-truncation -Wno-array-bounds -Wno-stringop-overflow -Wno-restrict -Wno-maybe-uninitialized -fno-strict-overflow -fno-merge-all-constants -fmerge-constants -fno-stack-check -fconserve-stack -Werror=date-time -Werror=incompatible-pointer-types -Werror=designated-init -fmacro-prefix-map=./= -fcf-protection=none -Wno-packed-not-aligned -D__DARLING__ -DDARLING_DEBUG -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/EXTERNAL_HEADERS -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/EXTERNAL_HEADERS/bsd -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/duct/defines -DPAGE_SIZE_FIXED -DCONFIG_SCHED_TRADITIONAL -freorder-blocks -fno-builtin -fno-common -fsigned-bitfields -fno-strict-aliasing -fno-keep-inline-functions -Wno-unknown-pragmas -DAPPLE -DKERNEL -DKERNEL_PRIVATE -DXNU_KERNEL_PRIVATE -DPRIVATE -D__MACHO__=1 -Dvolatile=__volatile -DNEXT -Wno-error=cast-align -Wno-unused-parameter -Wno-missing-prototypes -Wno-unused-variable -D__LITTLE_ENDIAN__=1 -Wno-declaration-after-statement -Wno-undef -Wno-maybe-uninitialized -D__private_extern__=extern -D_MODE_T -D_NLINK_T -DVM32_SUPPORT=1 -DMACH_KERNEL_PRIVATE -I/usr/src/darling-mach-0.1.20200331/miggen/bsd -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/bsd -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/iokit -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/libkern -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/libsa -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/libsa -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/pexpert -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/security -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/export-headers -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/libsa -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/mach_debug -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/ -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/darling -I/usr/src/darling-mach-0.1.20200331/miggen/osfmk -I/usr/src/darling-mach-0.1.20200331/miggen/../../startup -DARCH_PRIVATE -DDRIVER_PRIVATE -D_KERNEL_BUILD -DKERNEL_BUILD -DMACH_KERNEL -DBSD_BUILD -DBSD_KERNEL_PRIVATE -DLP64KERN=1 -DLP64_DEBUG=0 -DTIMEZONE=0 -DPST=0 -DQUOTA -DABSOLUTETIME_SCALAR_TYPE -DCONFIG_LCTX -DMACH -DCONFIG_ZLEAKS -DNO_DIRECT_RPC -DIPFIREWALL_FORWARD -DIPFIREWALL_DEFAULT_TO_ACCEPT -DTRAFFIC_MGT -DRANDOM_IP_ID -DTCP_DROP_SYNFIN -DICMP_BANDLIM -DIFNET_INPUT_SANITY_CHK -DPSYNCH -DSECURE_KERNEL -DOLD_SEMWAIT_SIGNAL -DCONFIG_MBUF_JUMBO -DCONFIG_WORKQUEUE -DCONFIG_HFS_STD -DCONFIG_HFS_TRIM -DCONFIG_TASK_MAX=512 -DCONFIG_IPC_TABLE_ENTRIES_STEPS=256 -DNAMEDSTREAMS -DCONFIG_VOLFS -DCONFIG_IMGSRC_ACCESS -DCONFIG_TRIGGERS -DCONFIG_VFS_FUNNEL -DCONFIG_EXT_RESOLVER -DCONFIG_SEARCHFS -DIPSEC -DIPSEC_ESP -DIPV6FIREWALL_DEFAULT_TO_ACCEPT -Dcrypto -Drandomipid -DCONFIG_KN_HASHSIZE=20 -DCONFIG_VNODES=750 -DCONFIG_VNODE_FREE_MIN=75 -DCONFIG_NC_HASH=1024 -DCONFIG_VFS_NAMES=2048 -DCONFIG_MAX_CLUSTERS=4 -DKAUTH_CRED_PRIMES_COUNT=3 '-DKAUTH_CRED_PRIMES={5, 17, 97}' -DCONFIG_MIN_NBUF=64 -DCONFIG_MIN_NIOBUF=32 '-DCONFIG_NMBCLUSTERS=((1024 * 256) / MCLBYTES)' -DCONFIG_TCBHASHSIZE=128 -DCONFIG_ICMP_BANDLIM=50 -DCONFIG_AIO_MAX=10 -DCONFIG_AIO_PROCESS_MAX=4 -DCONFIG_AIO_THREAD_COUNT=2 -DCONFIG_THREAD_MAX=1024 -DCONFIG_MAXVIFS=2 -DCONFIG_MFCTBLSIZ=16 -DCONFIG_MSG_BSIZE=4096 -DCONFIG_ENFORCE_SIGNED_CODE -DCONFIG_MEMORYSTATUS -DCONFIG_JETSAM -DCONFIG_FREEZE -DCONFIG_ZLEAK_ALLOCATION_MAP_NUM=8192 -DCONFIG_ZLEAK_TRACE_MAP_NUM=4096 -DVM_PRESSURE_EVENTS -DCONFIG_KERNEL_0DAY_SYSCALL_HANDLER -DEVENTMETER -DCONFIG_APP_PROFILE=0 -std=gnu11 -DMODULE '-DKBUILD_BASENAME=""ipc_kmsg""' '-DKBUILD_MODNAME=""darling_mach""' -c -o /var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.o /var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.c
Some of the dirs say 0.1.20200331 instead of 0.1.20210123
Solution
This was all due to dkms.conf not being updated too. In order to prevent this, we should auto generate the dkms.conf file when creating the RPM, so this mistake isn't made again","Okay, thanks.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,918,2021-01-30T00:17:14Z,2021-02-12T17:58:46Z,2021-02-16T19:46:06Z,MERGED,True,17,5,4,https://github.com/andyneff,Rpm auto version,4,[],https://github.com/darlinghq/darling/pull/918,https://github.com/ahyattdev,12,https://github.com/darlinghq/darling/pull/918#issuecomment-778348680,"Was trying to rebuild the latest version of darling, but I made a mistake and it didn't build. Currently, the ""version"" on rpms is 0.1.{date}. So if that ever needs to get updated, then I would have to update the spec file (and dkms.conf) and PR that each time. Instead, now the build script will auto detect the latest commit date, and use that for the version number, making this one less thing to worry about :)
Expected Result
Kernel module build successfully.
Actual Result
Error while compiling, make.log shows:
/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.c:84:10: fatal error: mach/vm_map.h: No such file or directory
Steps To Reproduce

docker-compose run rpm
sudo install RPMS/x86_64/*20210123*.rpm
(optional) dkms build darling/0.1.20210123-1

dmesg Output
N/A
System Information
What system are you using?



Software
Version




Linux Kernel
5.8.18-100.fc31.x86_64


Darling
f866083



debugging

dkms make darling/0.1.20210123

Kernel preparation unnecessary for this kernel.  Skipping...

Building module:
cleaning build area...
'make' -C lkm/ MIGDIR=/usr/src/darling-mach-0.1.20200331/miggen MIGDIR_REL=../miggen KERNELVERSION=5.8.18-100.fc31.x86_64....(bad exit status: 2)
Error! Bad return status for module build on kernel: 5.8.18-100.fc31.x86_64 (x86_64)
Consult /var/lib/dkms/darling-mach/0.1.20210123/build/make.log for more information.


cd /var/lib/dkms/darling-mach/0.1.20210123/build
make -C lkm/ SHELL='sh -xv' MIGDIR=/usr/src/darling-mach-0.1.20200331/miggen MIGDIR_REL=../miggen KERNELVERSION=5.8.18-100.fc31.x86_64

Offending command:
  CC [M]  /var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.o
+ gcc -Wp,-MMD,/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/.ipc_kmsg.o.d -nostdinc -isystem /usr/lib/gcc/x86_64-redhat-linux/9/include -I./arch/x86/include -I./arch/x86/include/generated -I./include -I./arch/x86/include/uapi -I./arch/x86/include/generated/uapi -I./include/uapi -I./include/generated/uapi -include ./include/linux/kconfig.h -include ./include/linux/compiler_types.h -D__KERNEL__ -Wall -Wundef -Werror=strict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -fshort-wchar -fno-PIE -Werror=implicit-function-declaration -Werror=implicit-int -Wno-format-security -Wno-address-of-packed-member -std=gnu89 -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -m64 -falign-jumps=1 -falign-loops=1 -mno-80387 -mno-fp-ret-in-387 -mpreferred-stack-boundary=3 -mskip-rax-setup -mtune=generic -mno-red-zone -mcmodel=kernel -Wno-sign-compare -fno-asynchronous-unwind-tables -mindirect-branch=thunk-extern -mindirect-branch-register -fno-jump-tables -fno-delete-null-pointer-checks -Wno-frame-address -Wno-format-truncation -Wno-format-overflow -Wno-address-of-packed-member -O2 --param=allow-store-data-races=0 -Wframe-larger-than=2048 -fstack-protector -Wno-unused-but-set-variable -Wimplicit-fallthrough -Wno-unused-const-variable -fno-var-tracking-assignments -g -pg -mrecord-mcount -mfentry -DCC_USING_FENTRY -Wdeclaration-after-statement -Wvla -Wno-pointer-sign -Wno-stringop-truncation -Wno-array-bounds -Wno-stringop-overflow -Wno-restrict -Wno-maybe-uninitialized -fno-strict-overflow -fno-merge-all-constants -fmerge-constants -fno-stack-check -fconserve-stack -Werror=date-time -Werror=incompatible-pointer-types -Werror=designated-init -fmacro-prefix-map=./= -fcf-protection=none -Wno-packed-not-aligned -D__DARLING__ -DDARLING_DEBUG -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/EXTERNAL_HEADERS -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/EXTERNAL_HEADERS/bsd -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/duct/defines -DPAGE_SIZE_FIXED -DCONFIG_SCHED_TRADITIONAL -freorder-blocks -fno-builtin -fno-common -fsigned-bitfields -fno-strict-aliasing -fno-keep-inline-functions -Wno-unknown-pragmas -DAPPLE -DKERNEL -DKERNEL_PRIVATE -DXNU_KERNEL_PRIVATE -DPRIVATE -D__MACHO__=1 -Dvolatile=__volatile -DNEXT -Wno-error=cast-align -Wno-unused-parameter -Wno-missing-prototypes -Wno-unused-variable -D__LITTLE_ENDIAN__=1 -Wno-declaration-after-statement -Wno-undef -Wno-maybe-uninitialized -D__private_extern__=extern -D_MODE_T -D_NLINK_T -DVM32_SUPPORT=1 -DMACH_KERNEL_PRIVATE -I/usr/src/darling-mach-0.1.20200331/miggen/bsd -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/bsd -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/iokit -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/libkern -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/libsa -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/libsa -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/pexpert -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/security -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/export-headers -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/libsa -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/mach_debug -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/ -I/var/lib/dkms/darling-mach/0.1.20210123/build/lkm/darling -I/usr/src/darling-mach-0.1.20200331/miggen/osfmk -I/usr/src/darling-mach-0.1.20200331/miggen/../../startup -DARCH_PRIVATE -DDRIVER_PRIVATE -D_KERNEL_BUILD -DKERNEL_BUILD -DMACH_KERNEL -DBSD_BUILD -DBSD_KERNEL_PRIVATE -DLP64KERN=1 -DLP64_DEBUG=0 -DTIMEZONE=0 -DPST=0 -DQUOTA -DABSOLUTETIME_SCALAR_TYPE -DCONFIG_LCTX -DMACH -DCONFIG_ZLEAKS -DNO_DIRECT_RPC -DIPFIREWALL_FORWARD -DIPFIREWALL_DEFAULT_TO_ACCEPT -DTRAFFIC_MGT -DRANDOM_IP_ID -DTCP_DROP_SYNFIN -DICMP_BANDLIM -DIFNET_INPUT_SANITY_CHK -DPSYNCH -DSECURE_KERNEL -DOLD_SEMWAIT_SIGNAL -DCONFIG_MBUF_JUMBO -DCONFIG_WORKQUEUE -DCONFIG_HFS_STD -DCONFIG_HFS_TRIM -DCONFIG_TASK_MAX=512 -DCONFIG_IPC_TABLE_ENTRIES_STEPS=256 -DNAMEDSTREAMS -DCONFIG_VOLFS -DCONFIG_IMGSRC_ACCESS -DCONFIG_TRIGGERS -DCONFIG_VFS_FUNNEL -DCONFIG_EXT_RESOLVER -DCONFIG_SEARCHFS -DIPSEC -DIPSEC_ESP -DIPV6FIREWALL_DEFAULT_TO_ACCEPT -Dcrypto -Drandomipid -DCONFIG_KN_HASHSIZE=20 -DCONFIG_VNODES=750 -DCONFIG_VNODE_FREE_MIN=75 -DCONFIG_NC_HASH=1024 -DCONFIG_VFS_NAMES=2048 -DCONFIG_MAX_CLUSTERS=4 -DKAUTH_CRED_PRIMES_COUNT=3 '-DKAUTH_CRED_PRIMES={5, 17, 97}' -DCONFIG_MIN_NBUF=64 -DCONFIG_MIN_NIOBUF=32 '-DCONFIG_NMBCLUSTERS=((1024 * 256) / MCLBYTES)' -DCONFIG_TCBHASHSIZE=128 -DCONFIG_ICMP_BANDLIM=50 -DCONFIG_AIO_MAX=10 -DCONFIG_AIO_PROCESS_MAX=4 -DCONFIG_AIO_THREAD_COUNT=2 -DCONFIG_THREAD_MAX=1024 -DCONFIG_MAXVIFS=2 -DCONFIG_MFCTBLSIZ=16 -DCONFIG_MSG_BSIZE=4096 -DCONFIG_ENFORCE_SIGNED_CODE -DCONFIG_MEMORYSTATUS -DCONFIG_JETSAM -DCONFIG_FREEZE -DCONFIG_ZLEAK_ALLOCATION_MAP_NUM=8192 -DCONFIG_ZLEAK_TRACE_MAP_NUM=4096 -DVM_PRESSURE_EVENTS -DCONFIG_KERNEL_0DAY_SYSCALL_HANDLER -DEVENTMETER -DCONFIG_APP_PROFILE=0 -std=gnu11 -DMODULE '-DKBUILD_BASENAME=""ipc_kmsg""' '-DKBUILD_MODNAME=""darling_mach""' -c -o /var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.o /var/lib/dkms/darling-mach/0.1.20210123/build/lkm/osfmk/ipc/ipc_kmsg.c
Some of the dirs say 0.1.20200331 instead of 0.1.20210123
Solution
This was all due to dkms.conf not being updated too. In order to prevent this, we should auto generate the dkms.conf file when creating the RPM, so this mistake isn't made again",Looks good to me,True,{'HOORAY': ['https://github.com/andyneff']}
darlinghq/darling,https://github.com/darlinghq/darling,921,2021-02-03T23:36:22Z,2021-02-09T21:48:09Z,2021-02-14T19:05:34Z,MERGED,True,6,7,1,https://github.com/theslimshaney,Make .gitmodules formatting consistent,1,[],https://github.com/darlinghq/darling/pull/921,https://github.com/theslimshaney,1,https://github.com/darlinghq/darling/pull/921,Make .gitmodules formatting consistent,Make .gitmodules formatting consistent,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,921,2021-02-03T23:36:22Z,2021-02-09T21:48:09Z,2021-02-14T19:05:34Z,MERGED,True,6,7,1,https://github.com/theslimshaney,Make .gitmodules formatting consistent,1,[],https://github.com/darlinghq/darling/pull/921,https://github.com/ahyattdev,2,https://github.com/darlinghq/darling/pull/921#issuecomment-776265963,Make .gitmodules formatting consistent,"I tested this, did not break an existing cloned copy.",True,{'THUMBS_UP': ['https://github.com/theslimshaney']}
darlinghq/darling,https://github.com/darlinghq/darling,980,2021-06-24T21:07:01Z,2021-07-05T01:07:53Z,2021-07-05T01:07:53Z,MERGED,True,4,0,1,https://github.com/JJTech0130,Update CMake supported clang versions,1,[],https://github.com/darlinghq/darling/pull/980,https://github.com/JJTech0130,1,https://github.com/darlinghq/darling/pull/980,"Darling doesn't build with clang versions less than 9, so there is no need to support them: #939 and #964. EDIT: Fixed by 4fbf800.
Clang 11 is easier to get than 9 or 10 (buster-backports only has 8 and 11) so we should add it for ease of use.
Clang 12 support seems to be resolved: #856.

I also updated the docs to reflect this change: darlinghq/darling-docs#25","Darling doesn't build with clang versions less than 9, so there is no need to support them: #939 and #964. EDIT: Fixed by 4fbf800.
Clang 11 is easier to get than 9 or 10 (buster-backports only has 8 and 11) so we should add it for ease of use.
Clang 12 support seems to be resolved: #856.

I also updated the docs to reflect this change: darlinghq/darling-docs#25",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,980,2021-06-24T21:07:01Z,2021-07-05T01:07:53Z,2021-07-05T01:07:53Z,MERGED,True,4,0,1,https://github.com/JJTech0130,Update CMake supported clang versions,1,[],https://github.com/darlinghq/darling/pull/980,https://github.com/bugaevc,2,https://github.com/darlinghq/darling/pull/980#issuecomment-867957603,"Darling doesn't build with clang versions less than 9, so there is no need to support them: #939 and #964. EDIT: Fixed by 4fbf800.
Clang 11 is easier to get than 9 or 10 (buster-backports only has 8 and 11) so we should add it for ease of use.
Clang 12 support seems to be resolved: #856.

I also updated the docs to reflect this change: darlinghq/darling-docs#25","To be honest, I'd like to keep old versions of Clang working too. If something we wrote doesn't work with them, I'd consider it a bug. However, if it's something Apple wrote (like objc4), then there's not much we could do.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,980,2021-06-24T21:07:01Z,2021-07-05T01:07:53Z,2021-07-05T01:07:53Z,MERGED,True,4,0,1,https://github.com/JJTech0130,Update CMake supported clang versions,1,[],https://github.com/darlinghq/darling/pull/980,https://github.com/JJTech0130,3,https://github.com/darlinghq/darling/pull/980#issuecomment-867958399,"Darling doesn't build with clang versions less than 9, so there is no need to support them: #939 and #964. EDIT: Fixed by 4fbf800.
Clang 11 is easier to get than 9 or 10 (buster-backports only has 8 and 11) so we should add it for ease of use.
Clang 12 support seems to be resolved: #856.

I also updated the docs to reflect this change: darlinghq/darling-docs#25","I mentioned some issues in darlinghq/darling-docs#25, and they were closed with ""your clang is too old"".
EDIT: Updated description with links to mentioned issues.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,980,2021-06-24T21:07:01Z,2021-07-05T01:07:53Z,2021-07-05T01:07:53Z,MERGED,True,4,0,1,https://github.com/JJTech0130,Update CMake supported clang versions,1,[],https://github.com/darlinghq/darling/pull/980,https://github.com/bugaevc,4,https://github.com/darlinghq/darling/pull/980#issuecomment-867966655,"Darling doesn't build with clang versions less than 9, so there is no need to support them: #939 and #964. EDIT: Fixed by 4fbf800.
Clang 11 is easier to get than 9 or 10 (buster-backports only has 8 and 11) so we should add it for ease of use.
Clang 12 support seems to be resolved: #856.

I also updated the docs to reflect this change: darlinghq/darling-docs#25","So objc_nonlazy_class looks like it can be trivially made to work on older Clang versions:
#if /* have new enough Clang */
__attribute__((objc_nonlazy_class))
#endif
@implementation Foo

#if /* have old Clang */
+ (void) load { }
#endif
(Empty load methods for NSObject and others is also what the older versions of objc4 use.)
cc @facekapow",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,980,2021-06-24T21:07:01Z,2021-07-05T01:07:53Z,2021-07-05T01:07:53Z,MERGED,True,4,0,1,https://github.com/JJTech0130,Update CMake supported clang versions,1,[],https://github.com/darlinghq/darling/pull/980,https://github.com/facekapow,5,https://github.com/darlinghq/darling/pull/980#issuecomment-867969655,"Darling doesn't build with clang versions less than 9, so there is no need to support them: #939 and #964. EDIT: Fixed by 4fbf800.
Clang 11 is easier to get than 9 or 10 (buster-backports only has 8 and 11) so we should add it for ease of use.
Clang 12 support seems to be resolved: #856.

I also updated the docs to reflect this change: darlinghq/darling-docs#25","Yeah, that look about right (not sure if that's all that older clangs would need, though). That's actually what OS_OBJECT_NONLAZY_CLASS and OS_OBJECT_NONLAZY_CLASS_LOAD in libdispatch do. The objc runtime would be the only one that needs to be updated (everything else uses libdispatch's macros).",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,980,2021-06-24T21:07:01Z,2021-07-05T01:07:53Z,2021-07-05T01:07:53Z,MERGED,True,4,0,1,https://github.com/JJTech0130,Update CMake supported clang versions,1,[],https://github.com/darlinghq/darling/pull/980,https://github.com/JJTech0130,6,https://github.com/darlinghq/darling/pull/980#issuecomment-867970938,"Darling doesn't build with clang versions less than 9, so there is no need to support them: #939 and #964. EDIT: Fixed by 4fbf800.
Clang 11 is easier to get than 9 or 10 (buster-backports only has 8 and 11) so we should add it for ease of use.
Clang 12 support seems to be resolved: #856.

I also updated the docs to reflect this change: darlinghq/darling-docs#25","Well, um, I think that's ok. We should still add the new versions. Can I remove commits from the pull request, or is that not possible?",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,980,2021-06-24T21:07:01Z,2021-07-05T01:07:53Z,2021-07-05T01:07:53Z,MERGED,True,4,0,1,https://github.com/JJTech0130,Update CMake supported clang versions,1,[],https://github.com/darlinghq/darling/pull/980,https://github.com/facekapow,7,https://github.com/darlinghq/darling/pull/980#issuecomment-867971946,"Darling doesn't build with clang versions less than 9, so there is no need to support them: #939 and #964. EDIT: Fixed by 4fbf800.
Clang 11 is easier to get than 9 or 10 (buster-backports only has 8 and 11) so we should add it for ease of use.
Clang 12 support seems to be resolved: #856.

I also updated the docs to reflect this change: darlinghq/darling-docs#25","Yes; you can reset your branch back to master, and then make new commits, and then force push to the branch.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,980,2021-06-24T21:07:01Z,2021-07-05T01:07:53Z,2021-07-05T01:07:53Z,MERGED,True,4,0,1,https://github.com/JJTech0130,Update CMake supported clang versions,1,[],https://github.com/darlinghq/darling/pull/980,https://github.com/JJTech0130,8,https://github.com/darlinghq/darling/pull/980#issuecomment-867974595,"Darling doesn't build with clang versions less than 9, so there is no need to support them: #939 and #964. EDIT: Fixed by 4fbf800.
Clang 11 is easier to get than 9 or 10 (buster-backports only has 8 and 11) so we should add it for ease of use.
Clang 12 support seems to be resolved: #856.

I also updated the docs to reflect this change: darlinghq/darling-docs#25","Well, can't do that on mobile, and my pc is a bit stressed out trying to build darling... Will do it as soon as I finish.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,980,2021-06-24T21:07:01Z,2021-07-05T01:07:53Z,2021-07-05T01:07:53Z,MERGED,True,4,0,1,https://github.com/JJTech0130,Update CMake supported clang versions,1,[],https://github.com/darlinghq/darling/pull/980,https://github.com/facekapow,9,https://github.com/darlinghq/darling/pull/980#issuecomment-868161392,"Darling doesn't build with clang versions less than 9, so there is no need to support them: #939 and #964. EDIT: Fixed by 4fbf800.
Clang 11 is easier to get than 9 or 10 (buster-backports only has 8 and 11) so we should add it for ease of use.
Clang 12 support seems to be resolved: #856.

I also updated the docs to reflect this change: darlinghq/darling-docs#25","Currently testing that potential fix for older clangs. I'm on Arch, though, so I can't test Clang 6 specifically (well, I could, but the AUR only has Clang 5 and then 7), only Clang 7.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,980,2021-06-24T21:07:01Z,2021-07-05T01:07:53Z,2021-07-05T01:07:53Z,MERGED,True,4,0,1,https://github.com/JJTech0130,Update CMake supported clang versions,1,[],https://github.com/darlinghq/darling/pull/980,https://github.com/JJTech0130,10,https://github.com/darlinghq/darling/pull/980#issuecomment-868708018,"Darling doesn't build with clang versions less than 9, so there is no need to support them: #939 and #964. EDIT: Fixed by 4fbf800.
Clang 11 is easier to get than 9 or 10 (buster-backports only has 8 and 11) so we should add it for ease of use.
Clang 12 support seems to be resolved: #856.

I also updated the docs to reflect this change: darlinghq/darling-docs#25",OK. I have fixed the commits.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,980,2021-06-24T21:07:01Z,2021-07-05T01:07:53Z,2021-07-05T01:07:53Z,MERGED,True,4,0,1,https://github.com/JJTech0130,Update CMake supported clang versions,1,[],https://github.com/darlinghq/darling/pull/980,https://github.com/JJTech0130,11,https://github.com/darlinghq/darling/pull/980#issuecomment-868715808,"Darling doesn't build with clang versions less than 9, so there is no need to support them: #939 and #964. EDIT: Fixed by 4fbf800.
Clang 11 is easier to get than 9 or 10 (buster-backports only has 8 and 11) so we should add it for ease of use.
Clang 12 support seems to be resolved: #856.

I also updated the docs to reflect this change: darlinghq/darling-docs#25","How should the docs be updated? The Debian 10 requirements specified clang-6.0, whilst there is a notice stating only clang 9+ is supported. Should the notice be changed? Removed? And should we leave the Debian 10 instructions or update them?",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,980,2021-06-24T21:07:01Z,2021-07-05T01:07:53Z,2021-07-05T01:07:53Z,MERGED,True,4,0,1,https://github.com/JJTech0130,Update CMake supported clang versions,1,[],https://github.com/darlinghq/darling/pull/980,https://github.com/facekapow,12,https://github.com/darlinghq/darling/pull/980#issuecomment-868732940,"Darling doesn't build with clang versions less than 9, so there is no need to support them: #939 and #964. EDIT: Fixed by 4fbf800.
Clang 11 is easier to get than 9 or 10 (buster-backports only has 8 and 11) so we should add it for ease of use.
Clang 12 support seems to be resolved: #856.

I also updated the docs to reflect this change: darlinghq/darling-docs#25","The docs should be updated to indicate that the minimum required Clang version is actually 6 now, not 9.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,980,2021-06-24T21:07:01Z,2021-07-05T01:07:53Z,2021-07-05T01:07:53Z,MERGED,True,4,0,1,https://github.com/JJTech0130,Update CMake supported clang versions,1,[],https://github.com/darlinghq/darling/pull/980,https://github.com/JJTech0130,13,https://github.com/darlinghq/darling/pull/980#issuecomment-868737520,"Darling doesn't build with clang versions less than 9, so there is no need to support them: #939 and #964. EDIT: Fixed by 4fbf800.
Clang 11 is easier to get than 9 or 10 (buster-backports only has 8 and 11) so we should add it for ease of use.
Clang 12 support seems to be resolved: #856.

I also updated the docs to reflect this change: darlinghq/darling-docs#25","darlinghq/darling-docs#26
I closed the other pull req. as there is no need to update the clang dep. for Debian 10 anymore.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1001,2021-07-23T10:04:52Z,2021-07-23T13:08:34Z,2021-07-23T13:08:34Z,MERGED,True,1,1,1,https://github.com/rslsp1,update reference to cups for fix of #1000,1,[],https://github.com/darlinghq/darling/pull/1001,https://github.com/rslsp1,1,https://github.com/darlinghq/darling/pull/1001,"#1000
update the submodule ref to new darling-cups version","#1000
update the submodule ref to new darling-cups version",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1028,2021-09-09T09:29:33Z,2022-01-25T15:00:28Z,2022-01-25T15:00:30Z,MERGED,True,16865,0,536,https://github.com/JCWasmx86,Added CloudKit stubs,1,[],https://github.com/darlinghq/darling/pull/1028,https://github.com/JCWasmx86,1,https://github.com/darlinghq/darling/pull/1028,"I added the CloudKit stubs (See e.g. #932, now fails with other errors about missing symbols).
The linked OpenCloudKit is written in Swift and is not maintained anymore.","I added the CloudKit stubs (See e.g. #932, now fails with other errors about missing symbols).
The linked OpenCloudKit is written in Swift and is not maintained anymore.",True,"{'THUMBS_UP': ['https://github.com/JoeMatt', 'https://github.com/hamishmb', 'https://github.com/CorrectRoadH']}"
darlinghq/darling,https://github.com/darlinghq/darling,1056,2021-11-05T03:20:45Z,2021-11-07T16:04:26Z,2021-11-08T01:03:58Z,MERGED,True,25,0,3,https://github.com/trungnt2910,feat: Implemented mlock and munlock syscalls,1,[],https://github.com/darlinghq/darling/pull/1056,https://github.com/trungnt2910,1,https://github.com/darlinghq/darling/pull/1056,"Implemented syscall 203 and 204, required for running dotnet CLI.","Implemented syscall 203 and 204, required for running dotnet CLI.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1062,2021-11-15T02:13:48Z,2021-11-15T17:17:33Z,2021-11-15T17:39:34Z,MERGED,True,400,14,11,https://github.com/trungnt2910,fix: Various kernel fixes,5,[],https://github.com/darlinghq/darling/pull/1062,https://github.com/trungnt2910,1,https://github.com/darlinghq/darling/pull/1062,"Various fixes are made in order to run dotnet properly make dotnet half-runnable.
proc_info:

Added 3 additional flavors.
Added more info for _proc_pidinfo_tbsdinfo

waitid

Marshalled the siginfo_t between Linux and BSD, allowing processes to access valid data.

SIGCHLD

Some processes check for explicitly ignored signals and avoid handling them (e.g. dotnet). As SIGCHLD is not configured with SIG_IGN on real MacOS, we should not do that on Darling, either.","Various fixes are made in order to run dotnet properly make dotnet half-runnable.
proc_info:

Added 3 additional flavors.
Added more info for _proc_pidinfo_tbsdinfo

waitid

Marshalled the siginfo_t between Linux and BSD, allowing processes to access valid data.

SIGCHLD

Some processes check for explicitly ignored signals and avoid handling them (e.g. dotnet). As SIGCHLD is not configured with SIG_IGN on real MacOS, we should not do that on Darling, either.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1062,2021-11-15T02:13:48Z,2021-11-15T17:17:33Z,2021-11-15T17:39:34Z,MERGED,True,400,14,11,https://github.com/trungnt2910,fix: Various kernel fixes,5,[],https://github.com/darlinghq/darling/pull/1062,https://github.com/LubosD,2,https://github.com/darlinghq/darling/pull/1062#issuecomment-968724781,"Various fixes are made in order to run dotnet properly make dotnet half-runnable.
proc_info:

Added 3 additional flavors.
Added more info for _proc_pidinfo_tbsdinfo

waitid

Marshalled the siginfo_t between Linux and BSD, allowing processes to access valid data.

SIGCHLD

Some processes check for explicitly ignored signals and avoid handling them (e.g. dotnet). As SIGCHLD is not configured with SIG_IGN on real MacOS, we should not do that on Darling, either.",LGTM. Anyone else wants to review?,True,{'ROCKET': ['https://github.com/trungnt2910']}
darlinghq/darling,https://github.com/darlinghq/darling,1062,2021-11-15T02:13:48Z,2021-11-15T17:17:33Z,2021-11-15T17:39:34Z,MERGED,True,400,14,11,https://github.com/trungnt2910,fix: Various kernel fixes,5,[],https://github.com/darlinghq/darling/pull/1062,https://github.com/trungnt2910,3,https://github.com/darlinghq/darling/pull/1062#issuecomment-969040729,"Various fixes are made in order to run dotnet properly make dotnet half-runnable.
proc_info:

Added 3 additional flavors.
Added more info for _proc_pidinfo_tbsdinfo

waitid

Marshalled the siginfo_t between Linux and BSD, allowing processes to access valid data.

SIGCHLD

Some processes check for explicitly ignored signals and avoid handling them (e.g. dotnet). As SIGCHLD is not configured with SIG_IGN on real MacOS, we should not do that on Darling, either.",@facekapow @LubosD Can you review the last commit? It's simply some reexported symbols in CoreServices to get some dlsyms working.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1062,2021-11-15T02:13:48Z,2021-11-15T17:17:33Z,2021-11-15T17:39:34Z,MERGED,True,400,14,11,https://github.com/trungnt2910,fix: Various kernel fixes,5,[],https://github.com/darlinghq/darling/pull/1062,https://github.com/trungnt2910,4,https://github.com/darlinghq/darling/pull/1062#issuecomment-969151127,"Various fixes are made in order to run dotnet properly make dotnet half-runnable.
proc_info:

Added 3 additional flavors.
Added more info for _proc_pidinfo_tbsdinfo

waitid

Marshalled the siginfo_t between Linux and BSD, allowing processes to access valid data.

SIGCHLD

Some processes check for explicitly ignored signals and avoid handling them (e.g. dotnet). As SIGCHLD is not configured with SIG_IGN on real MacOS, we should not do that on Darling, either.",Thanks so much! This pull request wouldn't have been possible without your mentoring!,True,{'HEART': ['https://github.com/facekapow']}
darlinghq/darling,https://github.com/darlinghq/darling,1108,2022-02-21T14:01:04Z,2022-04-04T15:07:29Z,2022-04-04T15:07:29Z,MERGED,True,905,0,29,https://github.com/zachwolfe,Add AssertionServices.framework stubs,1,[],https://github.com/darlinghq/darling/pull/1108,https://github.com/zachwolfe,1,https://github.com/darlinghq/darling/pull/1108,"Generated on Catalina, in case that matters. Fixes #1107","Generated on Catalina, in case that matters. Fixes #1107",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1109,2022-02-22T06:47:16Z,2022-04-04T15:07:40Z,2022-04-04T15:07:41Z,MERGED,True,293,0,4,https://github.com/zachwolfe,Add libMobileGestalt stubs,1,[],https://github.com/darlinghq/darling/pull/1109,https://github.com/zachwolfe,1,https://github.com/darlinghq/darling/pull/1109,Also generated on Catalina. Fixes #1007,Also generated on Catalina. Fixes #1007,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1125,2022-03-25T10:37:48Z,2022-04-04T15:41:10Z,2022-04-04T15:41:11Z,MERGED,True,37577,0,1246,https://github.com/mrolappe,Automator framework stubs,1,[],https://github.com/darlinghq/darling/pull/1125,https://github.com/mrolappe,1,https://github.com/darlinghq/darling/pull/1125,"This adds Automator framework stubs,  generated on Catalina.","This adds Automator framework stubs,  generated on Catalina.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1126,2022-03-25T10:46:01Z,2022-04-04T16:05:57Z,2022-04-04T16:05:57Z,MERGED,True,5988,0,199,https://github.com/mrolappe,OSAKit framework stubs,1,[],https://github.com/darlinghq/darling/pull/1126,https://github.com/mrolappe,1,https://github.com/darlinghq/darling/pull/1126,"This adds OSAKit framework stubs,  generated on Catalina.","This adds OSAKit framework stubs,  generated on Catalina.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1127,2022-03-25T10:47:25Z,2022-03-25T10:50:07Z,2022-03-25T10:50:07Z,CLOSED,False,85963,0,1758,https://github.com/mrolappe,"This adds MetalPerformanceShaders framework stubs, generated on Catalina.",8,[],https://github.com/darlinghq/darling/pull/1127,https://github.com/mrolappe,1,https://github.com/darlinghq/darling/pull/1127,"This adds MetalPerformanceShaders framework stubs,  generated on Catalina.","This adds MetalPerformanceShaders framework stubs,  generated on Catalina.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1127,2022-03-25T10:47:25Z,2022-03-25T10:50:07Z,2022-03-25T10:50:07Z,CLOSED,False,85963,0,1758,https://github.com/mrolappe,"This adds MetalPerformanceShaders framework stubs, generated on Catalina.",8,[],https://github.com/darlinghq/darling/pull/1127,https://github.com/mrolappe,2,https://github.com/darlinghq/darling/pull/1127#issuecomment-1078897879,"This adds MetalPerformanceShaders framework stubs,  generated on Catalina.","Closing, since it accidentally contains more than intended.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1128,2022-03-25T10:51:19Z,2022-04-04T16:06:41Z,2022-04-04T16:06:41Z,MERGED,True,1781,0,5,https://github.com/mrolappe,MediaAccessibility framework stubs,1,[],https://github.com/darlinghq/darling/pull/1128,https://github.com/mrolappe,1,https://github.com/darlinghq/darling/pull/1128,"This adds MediaAccessibility framework stubs, generated on Catalina.","This adds MediaAccessibility framework stubs, generated on Catalina.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1129,2022-03-25T10:52:11Z,2022-04-04T16:07:24Z,2022-04-04T16:07:24Z,MERGED,True,1000,0,35,https://github.com/mrolappe,InstantMessage framework stubs,1,[],https://github.com/darlinghq/darling/pull/1129,https://github.com/mrolappe,1,https://github.com/darlinghq/darling/pull/1129,"This adds InstantMessage framework stubs, generated on Catalina.","This adds InstantMessage framework stubs, generated on Catalina.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1130,2022-03-25T10:52:53Z,2022-04-04T16:08:10Z,2022-04-04T16:08:10Z,MERGED,True,2509,0,82,https://github.com/mrolappe,ImageCaptureCore framework stubs,1,[],https://github.com/darlinghq/darling/pull/1130,https://github.com/mrolappe,1,https://github.com/darlinghq/darling/pull/1130,"This adds ImageCaptureCore framework stubs, generated on Catalina.","This adds ImageCaptureCore framework stubs, generated on Catalina.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1131,2022-03-25T10:53:48Z,2022-04-04T16:09:22Z,2022-04-04T16:09:23Z,MERGED,True,3484,0,109,https://github.com/mrolappe,IOBluetoothUI framework stubs,1,[],https://github.com/darlinghq/darling/pull/1131,https://github.com/mrolappe,1,https://github.com/darlinghq/darling/pull/1131,"This adds IOBluetoothUI framework stubs, generated on Catalina.","This adds IOBluetoothUI framework stubs, generated on Catalina.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1132,2022-03-25T10:54:23Z,2022-04-04T16:10:16Z,2022-04-04T16:10:16Z,MERGED,True,1712,0,57,https://github.com/mrolappe,DiscRecordingUI framework stubs,1,[],https://github.com/darlinghq/darling/pull/1132,https://github.com/mrolappe,1,https://github.com/darlinghq/darling/pull/1132,"This adds DiscRecordingUI framework stubs, generated on Catalina.","This adds DiscRecordingUI framework stubs, generated on Catalina.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1133,2022-03-25T10:55:11Z,2022-04-04T16:11:17Z,2022-04-04T16:11:17Z,MERGED,True,3338,0,65,https://github.com/mrolappe,DiscRecording framework stubs,1,[],https://github.com/darlinghq/darling/pull/1133,https://github.com/mrolappe,1,https://github.com/darlinghq/darling/pull/1133,"This adds DiscRecording framework stubs, generated on Catalina.","This adds DiscRecording framework stubs, generated on Catalina.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1134,2022-03-25T10:55:45Z,2022-04-04T16:50:22Z,2022-04-04T16:50:22Z,MERGED,True,1568,0,55,https://github.com/mrolappe,CoreBluetooth framework stubs,1,[],https://github.com/darlinghq/darling/pull/1134,https://github.com/mrolappe,1,https://github.com/darlinghq/darling/pull/1134,"This adds CoreBluetooth framework stubs, generated on Catalina.","This adds CoreBluetooth framework stubs, generated on Catalina.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1135,2022-03-25T10:56:17Z,2022-04-04T16:51:58Z,2022-04-04T16:51:58Z,MERGED,True,4145,0,143,https://github.com/mrolappe,CoreAudioKit framework stubs,2,[],https://github.com/darlinghq/darling/pull/1135,https://github.com/mrolappe,1,https://github.com/darlinghq/darling/pull/1135,"This adds CoreAudioKit framework stubs, generated on Catalina.","This adds CoreAudioKit framework stubs, generated on Catalina.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1136,2022-03-25T10:57:04Z,,2022-04-04T19:59:42Z,OPEN,False,8648,0,13,https://github.com/mrolappe,Combine framework stubs,1,[],https://github.com/darlinghq/darling/pull/1136,https://github.com/mrolappe,1,https://github.com/darlinghq/darling/pull/1136,"This adds Combine framework stubs, generated on Catalina.","This adds Combine framework stubs, generated on Catalina.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1136,2022-03-25T10:57:04Z,,2022-04-04T19:59:42Z,OPEN,False,8648,0,13,https://github.com/mrolappe,Combine framework stubs,1,[],https://github.com/darlinghq/darling/pull/1136,https://github.com/facekapow,2,https://github.com/darlinghq/darling/pull/1136#issuecomment-1087788967,"This adds Combine framework stubs, generated on Catalina.",This looks like a Swift framework like #1139,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1136,2022-03-25T10:57:04Z,,2022-04-04T19:59:42Z,OPEN,False,8648,0,13,https://github.com/mrolappe,Combine framework stubs,1,[],https://github.com/darlinghq/darling/pull/1136,https://github.com/mrolappe,3,https://github.com/darlinghq/darling/pull/1136#issuecomment-1087955958,"This adds Combine framework stubs, generated on Catalina.","Having a look at the generated code for those Swift frameworks I see that it does not make that much sense.
What to do about such frameworks? Integrate Swift toolchain to compile correspondingly generated stubs?",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1137,2022-03-25T10:57:35Z,2022-04-04T17:09:56Z,2022-04-04T17:09:56Z,MERGED,True,774,0,28,https://github.com/mrolappe,Collaboration framework stubs,1,[],https://github.com/darlinghq/darling/pull/1137,https://github.com/mrolappe,1,https://github.com/darlinghq/darling/pull/1137,"This adds Collaboration framework stubs, generated on Catalina.","This adds Collaboration framework stubs, generated on Catalina.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1138,2022-03-25T10:58:11Z,2022-04-04T17:10:21Z,2022-04-04T17:10:21Z,MERGED,True,1003,0,36,https://github.com/mrolappe,CalendarStore framework stubs,1,[],https://github.com/darlinghq/darling/pull/1138,https://github.com/mrolappe,1,https://github.com/darlinghq/darling/pull/1138,"This adds CalendarStore framework stubs, generated on Catalina.","This adds CalendarStore framework stubs, generated on Catalina.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1139,2022-03-25T10:58:55Z,,2022-03-26T16:30:10Z,OPEN,False,33601,0,288,https://github.com/mrolappe,SwiftUI framework stubs,1,[],https://github.com/darlinghq/darling/pull/1139,https://github.com/mrolappe,1,https://github.com/darlinghq/darling/pull/1139,"This adds SwiftUI framework stubs, generated on Catalina.","This adds SwiftUI framework stubs, generated on Catalina.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1139,2022-03-25T10:58:55Z,,2022-03-26T16:30:10Z,OPEN,False,33601,0,288,https://github.com/mrolappe,SwiftUI framework stubs,1,[],https://github.com/darlinghq/darling/pull/1139,https://github.com/CuriousTommy,2,https://github.com/darlinghq/darling/pull/1139#issuecomment-1079580619,"This adds SwiftUI framework stubs, generated on Catalina.",I don't think it's a good idea to generate Objective C headers/stubs for a Swift library.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1139,2022-03-25T10:58:55Z,,2022-03-26T16:30:10Z,OPEN,False,33601,0,288,https://github.com/mrolappe,SwiftUI framework stubs,1,[],https://github.com/darlinghq/darling/pull/1139,https://github.com/mrolappe,3,https://github.com/darlinghq/darling/pull/1139#issuecomment-1079650339,"This adds SwiftUI framework stubs, generated on Catalina.",You are probably right. What is your suggestion?,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1139,2022-03-25T10:58:55Z,,2022-03-26T16:30:10Z,OPEN,False,33601,0,288,https://github.com/mrolappe,SwiftUI framework stubs,1,[],https://github.com/darlinghq/darling/pull/1139,https://github.com/CuriousTommy,4,https://github.com/darlinghq/darling/pull/1139#issuecomment-1079727640,"This adds SwiftUI framework stubs, generated on Catalina.",TBH... I not sure how we are going to handle the Swift only library. We don't have a build system in place for building Swift source code.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1140,2022-03-25T10:59:37Z,2022-04-04T17:11:01Z,2022-04-04T17:11:01Z,MERGED,True,108,0,5,https://github.com/mrolappe,VideoDecodeAcceleration framework stubs,1,[],https://github.com/darlinghq/darling/pull/1140,https://github.com/mrolappe,1,https://github.com/darlinghq/darling/pull/1140,"This adds VideoDecodeAcceleration framework stubs, generated on Catalina.","This adds VideoDecodeAcceleration framework stubs, generated on Catalina.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1141,2022-03-25T11:11:42Z,,2022-04-04T16:42:05Z,OPEN,False,106,0,5,https://github.com/mrolappe,MetalPerformanceShaders framework stubs,1,[],https://github.com/darlinghq/darling/pull/1141,https://github.com/mrolappe,1,https://github.com/darlinghq/darling/pull/1141,"This adds MetalPerformanceShaders framework stubs, generated on Catalina.","This adds MetalPerformanceShaders framework stubs, generated on Catalina.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1141,2022-03-25T11:11:42Z,,2022-04-04T16:42:05Z,OPEN,False,106,0,5,https://github.com/mrolappe,MetalPerformanceShaders framework stubs,1,[],https://github.com/darlinghq/darling/pull/1141,https://github.com/facekapow,2,https://github.com/darlinghq/darling/pull/1141#issuecomment-1087709483,"This adds MetalPerformanceShaders framework stubs, generated on Catalina.",Those symlinks (the ones for the headers) are broken because they're absolute symlinks.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1141,2022-03-25T11:11:42Z,,2022-04-04T16:42:05Z,OPEN,False,106,0,5,https://github.com/mrolappe,MetalPerformanceShaders framework stubs,1,[],https://github.com/darlinghq/darling/pull/1141,https://github.com/mrolappe,3,https://github.com/darlinghq/darling/pull/1141#issuecomment-1087779028,"This adds MetalPerformanceShaders framework stubs, generated on Catalina.","Indeed, oops. It is fixed now.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1142,2022-04-02T09:39:50Z,2022-04-04T17:11:56Z,2022-04-04T17:11:56Z,MERGED,True,10555,0,352,https://github.com/mrolappe,Add PDFKit framework stubs,2,[],https://github.com/darlinghq/darling/pull/1142,https://github.com/mrolappe,1,https://github.com/darlinghq/darling/pull/1142,"This adds PDFKit framework stubs, generated on Catalina.","This adds PDFKit framework stubs, generated on Catalina.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1145,2022-04-04T00:31:16Z,2022-04-04T04:27:52Z,2022-04-04T04:28:04Z,MERGED,True,15,30202,89,https://github.com/CuriousTommy,Relocate `libmalloc` Into Seperate Repo,4,[],https://github.com/darlinghq/darling/pull/1145,https://github.com/CuriousTommy,1,https://github.com/darlinghq/darling/pull/1145,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1146,2022-04-04T17:42:51Z,,2022-04-04T17:42:51Z,OPEN,False,13,0,3,https://github.com/mrolappe,Add CoreImage constants,1,[],https://github.com/darlinghq/darling/pull/1146,https://github.com/mrolappe,1,https://github.com/darlinghq/darling/pull/1146,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1147,2022-04-04T17:44:21Z,,2022-04-04T17:44:21Z,OPEN,False,19,0,3,https://github.com/mrolappe,Add input source related constant and stub,2,[],https://github.com/darlinghq/darling/pull/1147,https://github.com/mrolappe,1,https://github.com/darlinghq/darling/pull/1147,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1148,2022-04-04T17:45:03Z,,2022-04-04T17:45:03Z,OPEN,False,8,0,1,https://github.com/mrolappe,Add CoreServices constants,1,[],https://github.com/darlinghq/darling/pull/1148,https://github.com/mrolappe,1,https://github.com/darlinghq/darling/pull/1148,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1150,2022-04-05T03:51:54Z,2022-04-05T17:01:15Z,2022-04-05T17:01:15Z,MERGED,True,17,11,3,https://github.com/trungnt2910,feat: Manage executable path in darlingserver,3,[],https://github.com/darlinghq/darling/pull/1150,https://github.com/trungnt2910,1,https://github.com/darlinghq/darling/pull/1150,"With darlingserver managing executable paths, _proc_pidinfo_pathinfo can get the path from darlingserver instead of procfs (which points to mldr instead of the real path).
Also, mldr now announces the executable path after loading and before starting the thread.","With darlingserver managing executable paths, _proc_pidinfo_pathinfo can get the path from darlingserver instead of procfs (which points to mldr instead of the real path).
Also, mldr now announces the executable path after loading and before starting the thread.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1150,2022-04-05T03:51:54Z,2022-04-05T17:01:15Z,2022-04-05T17:01:15Z,MERGED,True,17,11,3,https://github.com/trungnt2910,feat: Manage executable path in darlingserver,3,[],https://github.com/darlinghq/darling/pull/1150,https://github.com/facekapow,2,https://github.com/darlinghq/darling/pull/1150#issuecomment-1088262781,"With darlingserver managing executable paths, _proc_pidinfo_pathinfo can get the path from darlingserver instead of procfs (which points to mldr instead of the real path).
Also, mldr now announces the executable path after loading and before starting the thread.","Like I said in the darlingserver PR, there are things you wouldn't know to do because I simply haven't documented them (e.g. the meaning of negative error codes from RPC calls).",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1150,2022-04-05T03:51:54Z,2022-04-05T17:01:15Z,2022-04-05T17:01:15Z,MERGED,True,17,11,3,https://github.com/trungnt2910,feat: Manage executable path in darlingserver,3,[],https://github.com/darlinghq/darling/pull/1150,https://github.com/trungnt2910,3,https://github.com/darlinghq/darling/pull/1150#issuecomment-1088297614,"With darlingserver managing executable paths, _proc_pidinfo_pathinfo can get the path from darlingserver instead of procfs (which points to mldr instead of the real path).
Also, mldr now announces the executable path after loading and before starting the thread.",Fixed.,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1151,2022-04-07T20:58:51Z,2022-04-07T21:10:18Z,2022-04-07T21:11:20Z,CLOSED,False,5988,0,199,https://github.com/ceinem,Adding stubs for OSAKit,1,[],https://github.com/darlinghq/darling/pull/1151,https://github.com/ceinem,1,https://github.com/darlinghq/darling/pull/1151,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1151,2022-04-07T20:58:51Z,2022-04-07T21:10:18Z,2022-04-07T21:11:20Z,CLOSED,False,5988,0,199,https://github.com/ceinem,Adding stubs for OSAKit,1,[],https://github.com/darlinghq/darling/pull/1151,https://github.com/mrolappe,2,https://github.com/darlinghq/darling/pull/1151#issuecomment-1092201225,,"I'm afraid OSAKit stubs have already been merged, see #1126.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1151,2022-04-07T20:58:51Z,2022-04-07T21:10:18Z,2022-04-07T21:11:20Z,CLOSED,False,5988,0,199,https://github.com/ceinem,Adding stubs for OSAKit,1,[],https://github.com/darlinghq/darling/pull/1151,https://github.com/facekapow,3,https://github.com/darlinghq/darling/pull/1151#issuecomment-1092202611,,"Yeah, stubs for OSAKit will become available once the darlingserver branch gets merged sometime this month. Thanks, though.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1151,2022-04-07T20:58:51Z,2022-04-07T21:10:18Z,2022-04-07T21:11:20Z,CLOSED,False,5988,0,199,https://github.com/ceinem,Adding stubs for OSAKit,1,[],https://github.com/darlinghq/darling/pull/1151,https://github.com/ceinem,4,https://github.com/darlinghq/darling/pull/1151#issuecomment-1092203318,,"Oh, sorry, didn't see that.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1152,2022-04-07T21:46:05Z,,2022-04-07T21:46:05Z,OPEN,False,13667,0,65,https://github.com/mrolappe,MediaToolbox framework stubs,1,[],https://github.com/darlinghq/darling/pull/1152,https://github.com/mrolappe,1,https://github.com/darlinghq/darling/pull/1152,"This adds MediaToolbox framework stubs, generated on Catalina.","This adds MediaToolbox framework stubs, generated on Catalina.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1153,2022-04-07T22:16:28Z,,2022-04-07T22:16:28Z,OPEN,False,19366,0,646,https://github.com/mrolappe,Vision framework stubs,1,[],https://github.com/darlinghq/darling/pull/1153,https://github.com/mrolappe,1,https://github.com/darlinghq/darling/pull/1153,"This adds Vision framework stubs, generated on Catalina.","This adds Vision framework stubs, generated on Catalina.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1154,2022-04-07T22:40:50Z,,2022-04-07T22:40:50Z,OPEN,False,7728,0,250,https://github.com/mrolappe,SpriteKit framework stubs,1,[],https://github.com/darlinghq/darling/pull/1154,https://github.com/mrolappe,1,https://github.com/darlinghq/darling/pull/1154,"This adds SpriteKit framework stubs, generated on Catalina.","This adds SpriteKit framework stubs, generated on Catalina.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1155,2022-04-07T23:11:42Z,,2022-04-07T23:11:42Z,OPEN,False,15204,0,521,https://github.com/mrolappe,ContactsUI framework stubs,1,[],https://github.com/darlinghq/darling/pull/1155,https://github.com/mrolappe,1,https://github.com/darlinghq/darling/pull/1155,"This adds ContactsUI framework stubs, generated on Catalina.","This adds ContactsUI framework stubs, generated on Catalina.",True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1156,2022-04-08T21:37:37Z,2022-04-09T01:01:40Z,2022-04-09T17:43:18Z,MERGED,True,1,1,1,https://github.com/ahyattdev,Detect newer versions of dsymutil,1,[],https://github.com/darlinghq/darling/pull/1156,https://github.com/ahyattdev,1,https://github.com/darlinghq/darling/pull/1156,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1157,2022-04-10T12:45:27Z,2022-04-10T14:14:17Z,2022-04-10T14:14:38Z,MERGED,True,1,1,1,https://github.com/iinux,Update .gitmodules,1,[],https://github.com/darlinghq/darling/pull/1157,https://github.com/iinux,1,https://github.com/darlinghq/darling/pull/1157,"To unify the style, use relative paths.","To unify the style, use relative paths.",True,{'THUMBS_UP': ['https://github.com/CuriousTommy']}
darlinghq/darling,https://github.com/darlinghq/darling,1157,2022-04-10T12:45:27Z,2022-04-10T14:14:17Z,2022-04-10T14:14:38Z,MERGED,True,1,1,1,https://github.com/iinux,Update .gitmodules,1,[],https://github.com/darlinghq/darling/pull/1157,https://github.com/CuriousTommy,2,https://github.com/darlinghq/darling/pull/1157#issuecomment-1094284181,"To unify the style, use relative paths.",Oops... Nice catch!,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1158,2022-04-10T15:32:57Z,2022-04-10T20:13:11Z,2022-04-10T20:13:17Z,MERGED,True,166,235776,2707,https://github.com/CuriousTommy,Relocate Libc Into Seperate Module,3,[],https://github.com/darlinghq/darling/pull/1158,https://github.com/CuriousTommy,1,https://github.com/darlinghq/darling/pull/1158,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1160,2022-04-18T01:53:11Z,2022-04-18T14:04:47Z,2022-04-18T14:04:51Z,MERGED,True,7,2085,24,https://github.com/CuriousTommy,Relocate Libsystem,3,[],https://github.com/darlinghq/darling/pull/1160,https://github.com/CuriousTommy,1,https://github.com/darlinghq/darling/pull/1160,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1162,2022-04-19T15:52:27Z,2022-04-19T19:07:22Z,2022-04-19T19:07:26Z,MERGED,True,16,349271,1215,https://github.com/CuriousTommy,Relocate dyld Into Seperate Module ,3,[],https://github.com/darlinghq/darling/pull/1162,https://github.com/CuriousTommy,1,https://github.com/darlinghq/darling/pull/1162,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1163,2022-04-22T01:01:28Z,2022-04-22T04:42:32Z,2022-04-22T04:42:34Z,MERGED,True,6,371,6,https://github.com/CuriousTommy,Relocate AvailabilityVersions Into a Seperate Module,3,[],https://github.com/darlinghq/darling/pull/1163,https://github.com/CuriousTommy,1,https://github.com/darlinghq/darling/pull/1163,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1164,2022-04-23T22:33:11Z,2022-04-24T01:08:58Z,2022-04-24T01:09:01Z,MERGED,True,10,15942,68,https://github.com/CuriousTommy,Relocate libnotify Into a Seperate Module,3,[],https://github.com/darlinghq/darling/pull/1164,https://github.com/CuriousTommy,1,https://github.com/darlinghq/darling/pull/1164,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1165,2022-04-30T19:26:07Z,2022-05-10T13:35:57Z,2022-05-10T13:41:59Z,MERGED,True,213,633655,4088,https://github.com/CuriousTommy,Update Darlingserver Branch To Include Relocation Changes,31,[],https://github.com/darlinghq/darling/pull/1165,https://github.com/CuriousTommy,1,https://github.com/darlinghq/darling/pull/1165,,,True,{}
darlinghq/darling,https://github.com/darlinghq/darling,1175,2022-05-27T11:45:52Z,,2022-05-27T11:45:52Z,OPEN,False,10908,0,207,https://github.com/mrolappe,CoreTelephony framework stubs,1,[],https://github.com/darlinghq/darling/pull/1175,https://github.com/mrolappe,1,https://github.com/darlinghq/darling/pull/1175,"This adds CoreTelephony framework stubs, generated on Catalina.","This adds CoreTelephony framework stubs, generated on Catalina.",True,{'THUMBS_UP': ['https://github.com/yjqg6666']}
