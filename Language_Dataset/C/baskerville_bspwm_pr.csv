baskerville/bspwm,https://github.com/baskerville/bspwm,403,2016-02-22T04:24:13Z,2016-02-22T09:49:52Z,2016-02-22T09:50:01Z,CLOSED,False,2,2,1,https://github.com/hyshka,update panel example due to some deprecated commands,1,['invalid'],https://github.com/baskerville/bspwm/pull/403,https://github.com/hyshka,1,https://github.com/baskerville/bspwm/pull/403,Bspwm no longer supports bspc subscribe report and lemonbar no longer supports the -n option.,Bspwm no longer supports bspc subscribe report and lemonbar no longer supports the -n option.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,403,2016-02-22T04:24:13Z,2016-02-22T09:49:52Z,2016-02-22T09:50:01Z,CLOSED,False,2,2,1,https://github.com/hyshka,update panel example due to some deprecated commands,1,['invalid'],https://github.com/baskerville/bspwm/pull/403,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/403#issuecomment-187098962,Bspwm no longer supports bspc subscribe report and lemonbar no longer supports the -n option.,"The examples given in this repository are meant to be used with the development version of bspwm.
The current Makefile copies the examples to ${PREFIX}/share/doc/bspwm/examples.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,444,2016-04-10T16:54:20Z,2016-04-10T20:08:45Z,2016-04-10T21:26:27Z,MERGED,True,33,5,8,https://github.com/ideasman42,Make mouse button actions configurable,1,[],https://github.com/baskerville/bspwm/pull/444,https://github.com/ideasman42,1,https://github.com/baskerville/bspwm/pull/444,"Previously this was possible via key bindings, since this operation was removed,
its useful to be able to configure which mouse keys do what.
This example swaps LMB/RMB
bspc config pointer_action1 resize_corner
bspc config pointer_action3 move","Previously this was possible via key bindings, since this operation was removed,
its useful to be able to configure which mouse keys do what.
This example swaps LMB/RMB
bspc config pointer_action1 resize_corner
bspc config pointer_action3 move",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,444,2016-04-10T16:54:20Z,2016-04-10T20:08:45Z,2016-04-10T21:26:27Z,MERGED,True,33,5,8,https://github.com/ideasman42,Make mouse button actions configurable,1,[],https://github.com/baskerville/bspwm/pull/444,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/444#issuecomment-208043861,"Previously this was possible via key bindings, since this operation was removed,
its useful to be able to configure which mouse keys do what.
This example swaps LMB/RMB
bspc config pointer_action1 resize_corner
bspc config pointer_action3 move","A few missing things:

It seems you modified doc/bspwm.1 directly instead of modifying doc/bspwm.1.asciidoc and running make doc.
You shall add the new settings to contrib/{bash,zsh}_completion.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,444,2016-04-10T16:54:20Z,2016-04-10T20:08:45Z,2016-04-10T21:26:27Z,MERGED,True,33,5,8,https://github.com/ideasman42,Make mouse button actions configurable,1,[],https://github.com/baskerville/bspwm/pull/444,https://github.com/ideasman42,3,https://github.com/baskerville/bspwm/pull/444#issuecomment-208050466,"Previously this was possible via key bindings, since this operation was removed,
its useful to be able to configure which mouse keys do what.
This example swaps LMB/RMB
bspc config pointer_action1 resize_corner
bspc config pointer_action3 move",Updated branch based on feedback.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,444,2016-04-10T16:54:20Z,2016-04-10T20:08:45Z,2016-04-10T21:26:27Z,MERGED,True,33,5,8,https://github.com/ideasman42,Make mouse button actions configurable,1,[],https://github.com/baskerville/bspwm/pull/444,https://github.com/baskerville,4,https://github.com/baskerville/bspwm/pull/444#issuecomment-208051806,"Previously this was possible via key bindings, since this operation was removed,
its useful to be able to configure which mouse keys do what.
This example swaps LMB/RMB
bspc config pointer_action1 resize_corner
bspc config pointer_action3 move",Could you squash those commits?,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,444,2016-04-10T16:54:20Z,2016-04-10T20:08:45Z,2016-04-10T21:26:27Z,MERGED,True,33,5,8,https://github.com/ideasman42,Make mouse button actions configurable,1,[],https://github.com/baskerville/bspwm/pull/444,https://github.com/ideasman42,5,https://github.com/baskerville/bspwm/pull/444#issuecomment-208055239,"Previously this was possible via key bindings, since this operation was removed,
its useful to be able to configure which mouse keys do what.
This example swaps LMB/RMB
bspc config pointer_action1 resize_corner
bspc config pointer_action3 move",Squashed & force-pushed.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,444,2016-04-10T16:54:20Z,2016-04-10T20:08:45Z,2016-04-10T21:26:27Z,MERGED,True,33,5,8,https://github.com/ideasman42,Make mouse button actions configurable,1,[],https://github.com/baskerville/bspwm/pull/444,https://github.com/baskerville,6,https://github.com/baskerville/bspwm/pull/444#issuecomment-208057101,"Previously this was possible via key bindings, since this operation was removed,
its useful to be able to configure which mouse keys do what.
This example swaps LMB/RMB
bspc config pointer_action1 resize_corner
bspc config pointer_action3 move",Thanks.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,445,2016-04-10T20:08:53Z,2016-04-11T07:43:51Z,2016-04-12T16:25:07Z,MERGED,True,25,25,3,https://github.com/ideasman42,Cleanup: indentation,1,[],https://github.com/baskerville/bspwm/pull/445,https://github.com/ideasman42,1,https://github.com/baskerville/bspwm/pull/445,Mixing tabs/spaces (use tabs where they are obviously intended),Mixing tabs/spaces (use tabs where they are obviously intended),True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,445,2016-04-10T20:08:53Z,2016-04-11T07:43:51Z,2016-04-12T16:25:07Z,MERGED,True,25,25,3,https://github.com/ideasman42,Cleanup: indentation,1,[],https://github.com/baskerville/bspwm/pull/445,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/445#issuecomment-208064443,Mixing tabs/spaces (use tabs where they are obviously intended),Please rebase.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,445,2016-04-10T20:08:53Z,2016-04-11T07:43:51Z,2016-04-12T16:25:07Z,MERGED,True,25,25,3,https://github.com/ideasman42,Cleanup: indentation,1,[],https://github.com/baskerville/bspwm/pull/445,https://github.com/ideasman42,3,https://github.com/baskerville/bspwm/pull/445#issuecomment-208076994,Mixing tabs/spaces (use tabs where they are obviously intended),rebased & force-pushed.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,445,2016-04-10T20:08:53Z,2016-04-11T07:43:51Z,2016-04-12T16:25:07Z,MERGED,True,25,25,3,https://github.com/ideasman42,Cleanup: indentation,1,[],https://github.com/baskerville/bspwm/pull/445,https://github.com/baskerville,4,https://github.com/baskerville/bspwm/pull/445#issuecomment-208207343,Mixing tabs/spaces (use tabs where they are obviously intended),Thanks.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,449,2016-04-11T20:10:34Z,2016-04-11T20:57:41Z,2016-04-12T16:25:17Z,MERGED,True,1,1,1,https://github.com/ideasman42,Fix missing NULL check,1,[],https://github.com/baskerville/bspwm/pull/449,https://github.com/ideasman42,1,https://github.com/baskerville/bspwm/pull/449,Fix for simple missing NULL check #448,Fix for simple missing NULL check #448,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,449,2016-04-11T20:10:34Z,2016-04-11T20:57:41Z,2016-04-12T16:25:17Z,MERGED,True,1,1,1,https://github.com/ideasman42,Fix missing NULL check,1,[],https://github.com/baskerville/bspwm/pull/449,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/449#issuecomment-208558096,Fix for simple missing NULL check #448,Thanks.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,452,2016-04-16T00:25:31Z,2016-04-16T12:17:05Z,2016-04-16T12:17:05Z,MERGED,True,2,2,2,https://github.com/neeasade,leaf_monocle --> single_monocle completion,1,[],https://github.com/baskerville/bspwm/pull/452,https://github.com/neeasade,1,https://github.com/baskerville/bspwm/pull/452,,,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,457,2016-04-18T04:36:13Z,2016-04-18T09:13:14Z,2016-04-18T09:13:27Z,MERGED,True,2,0,1,https://github.com/ideasman42,Fix using uninitialized value,1,[],https://github.com/baskerville/bspwm/pull/457,https://github.com/ideasman42,1,https://github.com/baskerville/bspwm/pull/457,"Currently with bspwm, the urgent member is read before being set.
Valgrind output:
==17037== Conditional jump or move depends on uninitialised value(s)
==17037==    at 0x409C06: focus_node (tree.c:503)
==17037==    by 0x40FF89: enter_notify (events.c:355)
==17037==    by 0x40F3C2: handle_event (events.c:61)
==17037==    by 0x404406: main (bspwm.c:180)
==17037==  Uninitialised value was created by a heap allocation
==17037==    at 0x4C2ABD0: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==17037==    by 0x40A0A0: make_client (tree.c:619)
==17037==    by 0x4117E0: manage_window (window.c:131)
==17037==    by 0x41142A: schedule_window (window.c:67)
==17037==    by 0x4124D2: adopt_orphans (window.c:391)
==17037==    by 0x417FC9: cmd_wm (messages.c:1132)
==17037==    by 0x413DAA: process_message (messages.c:100)
==17037==    by 0x413C22: handle_message (messages.c:81)
==17037==    by 0x4043A2: main (bspwm.c:170)

Note that setting shown may not be needed, but seems reasonable to clear for new clients.","Currently with bspwm, the urgent member is read before being set.
Valgrind output:
==17037== Conditional jump or move depends on uninitialised value(s)
==17037==    at 0x409C06: focus_node (tree.c:503)
==17037==    by 0x40FF89: enter_notify (events.c:355)
==17037==    by 0x40F3C2: handle_event (events.c:61)
==17037==    by 0x404406: main (bspwm.c:180)
==17037==  Uninitialised value was created by a heap allocation
==17037==    at 0x4C2ABD0: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==17037==    by 0x40A0A0: make_client (tree.c:619)
==17037==    by 0x4117E0: manage_window (window.c:131)
==17037==    by 0x41142A: schedule_window (window.c:67)
==17037==    by 0x4124D2: adopt_orphans (window.c:391)
==17037==    by 0x417FC9: cmd_wm (messages.c:1132)
==17037==    by 0x413DAA: process_message (messages.c:100)
==17037==    by 0x413C22: handle_message (messages.c:81)
==17037==    by 0x4043A2: main (bspwm.c:170)

Note that setting shown may not be needed, but seems reasonable to clear for new clients.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,457,2016-04-18T04:36:13Z,2016-04-18T09:13:14Z,2016-04-18T09:13:27Z,MERGED,True,2,0,1,https://github.com/ideasman42,Fix using uninitialized value,1,[],https://github.com/baskerville/bspwm/pull/457,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/457#issuecomment-211289342,"Currently with bspwm, the urgent member is read before being set.
Valgrind output:
==17037== Conditional jump or move depends on uninitialised value(s)
==17037==    at 0x409C06: focus_node (tree.c:503)
==17037==    by 0x40FF89: enter_notify (events.c:355)
==17037==    by 0x40F3C2: handle_event (events.c:61)
==17037==    by 0x404406: main (bspwm.c:180)
==17037==  Uninitialised value was created by a heap allocation
==17037==    at 0x4C2ABD0: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==17037==    by 0x40A0A0: make_client (tree.c:619)
==17037==    by 0x4117E0: manage_window (window.c:131)
==17037==    by 0x41142A: schedule_window (window.c:67)
==17037==    by 0x4124D2: adopt_orphans (window.c:391)
==17037==    by 0x417FC9: cmd_wm (messages.c:1132)
==17037==    by 0x413DAA: process_message (messages.c:100)
==17037==    by 0x413C22: handle_message (messages.c:81)
==17037==    by 0x4043A2: main (bspwm.c:170)

Note that setting shown may not be needed, but seems reasonable to clear for new clients.",Thanks.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,477,2016-05-11T22:07:37Z,2016-05-12T09:04:31Z,2016-05-12T09:04:43Z,MERGED,True,18,0,2,https://github.com/neeasade,Add fish shell completion.,1,[],https://github.com/baskerville/bspwm/pull/477,https://github.com/neeasade,1,https://github.com/baskerville/bspwm/pull/477,"fixes #459.
P.S. very pretty Makefile.","fixes #459.
P.S. very pretty Makefile.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,477,2016-05-11T22:07:37Z,2016-05-12T09:04:31Z,2016-05-12T09:04:43Z,MERGED,True,18,0,2,https://github.com/neeasade,Add fish shell completion.,1,[],https://github.com/baskerville/bspwm/pull/477,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/477#issuecomment-218700496,"fixes #459.
P.S. very pretty Makefile.",Thanks!,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,529,2016-08-13T17:38:47Z,2016-08-14T07:53:51Z,2016-08-14T12:20:54Z,CLOSED,False,10,9,2,https://github.com/nfnty,Fix memory leaks,1,[],https://github.com/baskerville/bspwm/pull/529,https://github.com/nfnty,1,https://github.com/baskerville/bspwm/pull/529,,,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,529,2016-08-13T17:38:47Z,2016-08-14T07:53:51Z,2016-08-14T12:20:54Z,CLOSED,False,10,9,2,https://github.com/nfnty,Fix memory leaks,1,[],https://github.com/baskerville/bspwm/pull/529,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/529#issuecomment-239660939,,Thanks!,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,530,2016-08-13T17:43:53Z,2016-08-14T11:52:43Z,2016-08-14T12:21:06Z,CLOSED,False,47,30,6,https://github.com/nfnty,Fix neighbor DIR selection for overlapping windows,1,[],https://github.com/baskerville/bspwm/pull/530,https://github.com/nfnty,1,https://github.com/baskerville/bspwm/pull/530,,,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,530,2016-08-13T17:43:53Z,2016-08-14T11:52:43Z,2016-08-14T12:21:06Z,CLOSED,False,47,30,6,https://github.com/nfnty,Fix neighbor DIR selection for overlapping windows,1,[],https://github.com/baskerville/bspwm/pull/530,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/530#issuecomment-239669639,,Thanks.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,531,2016-08-13T17:47:10Z,2016-08-14T12:01:47Z,2016-08-14T12:21:13Z,CLOSED,False,25,25,10,https://github.com/nfnty,Replace malloc with calloc,1,[],https://github.com/baskerville/bspwm/pull/531,https://github.com/nfnty,1,https://github.com/baskerville/bspwm/pull/531,,,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,531,2016-08-13T17:47:10Z,2016-08-14T12:01:47Z,2016-08-14T12:21:13Z,CLOSED,False,25,25,10,https://github.com/nfnty,Replace malloc with calloc,1,[],https://github.com/baskerville/bspwm/pull/531,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/531#issuecomment-239670017,,Thanks.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,538,2016-09-23T13:57:02Z,2016-09-30T19:41:34Z,2016-09-30T19:41:34Z,CLOSED,False,28,1,5,https://github.com/thwischm,Add events for pointer actions,4,[],https://github.com/baskerville/bspwm/pull/538,https://github.com/thwischm,1,https://github.com/baskerville/bspwm/pull/538,,,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,538,2016-09-23T13:57:02Z,2016-09-30T19:41:34Z,2016-09-30T19:41:34Z,CLOSED,False,28,1,5,https://github.com/thwischm,Add events for pointer actions,4,[],https://github.com/baskerville/bspwm/pull/538,https://github.com/thwischm,2,https://github.com/baskerville/bspwm/pull/538#issuecomment-249200323,,fixes #536,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,538,2016-09-23T13:57:02Z,2016-09-30T19:41:34Z,2016-09-30T19:41:34Z,CLOSED,False,28,1,5,https://github.com/thwischm,Add events for pointer actions,4,[],https://github.com/baskerville/bspwm/pull/538,https://github.com/baskerville,3,https://github.com/baskerville/bspwm/pull/538#issuecomment-249216212,,I'd like to keep a few free event slots (there can't be more than 32 events) so I think I'd rather go with a single event of the form pointer_action <monitor_id> <desktop_id> <node_id> move|resize_side|resize_corner begin|end.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,538,2016-09-23T13:57:02Z,2016-09-30T19:41:34Z,2016-09-30T19:41:34Z,CLOSED,False,28,1,5,https://github.com/thwischm,Add events for pointer actions,4,[],https://github.com/baskerville/bspwm/pull/538,https://github.com/thwischm,4,https://github.com/baskerville/bspwm/pull/538#issuecomment-249232811,,"That makes way more sense. I didn't know there could only be 32. That would
explain the compiler warnings though... Sorry, I don't actually know C.
Bastien Dejean notifications@github.com schrieb am Fr., 23. Sep. 2016,
17:00:

I'd like to keep a few free event slots (there can't be more than 32
events) so I think I'd rather go with a single event of the form pointer_action
<monitor_id> <desktop_id> <node_id> move|resize_side|resize_corner begin|end
.
—
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub
#538 (comment),
or mute the thread
https://github.com/notifications/unsubscribe-auth/AIyHH5UH1AXQ3528HV36XdKUbKS-Kf6Mks5qs-mOgaJpZM4KFAd7
.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,538,2016-09-23T13:57:02Z,2016-09-30T19:41:34Z,2016-09-30T19:41:34Z,CLOSED,False,28,1,5,https://github.com/thwischm,Add events for pointer actions,4,[],https://github.com/baskerville/bspwm/pull/538,https://github.com/thwischm,5,https://github.com/baskerville/bspwm/pull/538#issuecomment-249249479,,Could be cleaner with a variable but declaring strings in C isn't as easy as I thought. I should probably leave this to people who actually know what they're doing and learn it properly some time.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,538,2016-09-23T13:57:02Z,2016-09-30T19:41:34Z,2016-09-30T19:41:34Z,CLOSED,False,28,1,5,https://github.com/thwischm,Add events for pointer actions,4,[],https://github.com/baskerville/bspwm/pull/538,https://github.com/baskerville,6,https://github.com/baskerville/bspwm/pull/538#issuecomment-250834594,,Thanks.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,548,2016-10-11T02:33:34Z,2016-10-11T02:39:17Z,2016-10-11T02:39:17Z,CLOSED,False,1,1,1,https://github.com/neeasade,"Add client null check on node, fixes #547.",1,[],https://github.com/baskerville/bspwm/pull/548,https://github.com/neeasade,1,https://github.com/baskerville/bspwm/pull/548,,,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,548,2016-10-11T02:33:34Z,2016-10-11T02:39:17Z,2016-10-11T02:39:17Z,CLOSED,False,1,1,1,https://github.com/neeasade,"Add client null check on node, fixes #547.",1,[],https://github.com/baskerville/bspwm/pull/548,https://github.com/neeasade,2,https://github.com/baskerville/bspwm/pull/548#issuecomment-252796506,,"Actually this fix is not quite correct, it will lead to the setting being applied to the desktop instead of the nodes currently selected.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,549,2016-10-11T02:50:25Z,2016-10-11T16:42:01Z,2016-10-11T16:42:02Z,CLOSED,False,7,1,1,https://github.com/neeasade,have macro account for non leaf nodes. fixes #547,1,[],https://github.com/baskerville/bspwm/pull/549,https://github.com/neeasade,1,https://github.com/baskerville/bspwm/pull/549,,,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,549,2016-10-11T02:50:25Z,2016-10-11T16:42:01Z,2016-10-11T16:42:02Z,CLOSED,False,7,1,1,https://github.com/neeasade,have macro account for non leaf nodes. fixes #547,1,[],https://github.com/baskerville/bspwm/pull/549,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/549#issuecomment-252973293,,Thanks.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,569,2016-11-12T19:52:56Z,2016-11-12T20:02:46Z,2016-11-12T20:02:46Z,CLOSED,False,1,0,1,https://github.com/mixedCase,Set example config's pointer_modifier to mod4,1,[],https://github.com/baskerville/bspwm/pull/569,https://github.com/mixedCase,1,https://github.com/baskerville/bspwm/pull/569,"Consistent with behavior previously specified in sxhkdrc example.
Closes #568.","Consistent with behavior previously specified in sxhkdrc example.
Closes #568.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,569,2016-11-12T19:52:56Z,2016-11-12T20:02:46Z,2016-11-12T20:02:46Z,CLOSED,False,1,0,1,https://github.com/mixedCase,Set example config's pointer_modifier to mod4,1,[],https://github.com/baskerville/bspwm/pull/569,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/569#issuecomment-260144543,"Consistent with behavior previously specified in sxhkdrc example.
Closes #568.","Thanks, but the default value is already mod4…",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,569,2016-11-12T19:52:56Z,2016-11-12T20:02:46Z,2016-11-12T20:02:46Z,CLOSED,False,1,0,1,https://github.com/mixedCase,Set example config's pointer_modifier to mod4,1,[],https://github.com/baskerville/bspwm/pull/569,https://github.com/mixedCase,3,https://github.com/baskerville/bspwm/pull/569#issuecomment-260144663,"Consistent with behavior previously specified in sxhkdrc example.
Closes #568.",Well that's embarrassing. Guess I hadn't deleted my deprecated sxhkdrc lines when testing. Sorry.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,572,2016-11-13T22:24:17Z,,2020-09-09T14:45:32Z,OPEN,False,3,0,1,https://github.com/aruhier,Fix example panel scripts,1,[],https://github.com/baskerville/bspwm/pull/572,https://github.com/aruhier,1,https://github.com/baskerville/bspwm/pull/572,"Fix PATH to allow launching the panel scripts (fixes the panel_colors not found, etc.).
Source the profile file at top of panel, so xdo will execute the correct query (fixes the panel already running error).
Edit: I firstly thought that using sh was what broke the scripts, but it is not.","Fix PATH to allow launching the panel scripts (fixes the panel_colors not found, etc.).
Source the profile file at top of panel, so xdo will execute the correct query (fixes the panel already running error).
Edit: I firstly thought that using sh was what broke the scripts, but it is not.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,572,2016-11-13T22:24:17Z,,2020-09-09T14:45:32Z,OPEN,False,3,0,1,https://github.com/aruhier,Fix example panel scripts,1,[],https://github.com/baskerville/bspwm/pull/572,https://github.com/jessemillar,2,https://github.com/baskerville/bspwm/pull/572#issuecomment-279508896,"Fix PATH to allow launching the panel scripts (fixes the panel_colors not found, etc.).
Source the profile file at top of panel, so xdo will execute the correct query (fixes the panel already running error).
Edit: I firstly thought that using sh was what broke the scripts, but it is not.","This worked for me. Granted there's probably other ways to do this, I think this is a perfectly acceptable solution.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,572,2016-11-13T22:24:17Z,,2020-09-09T14:45:32Z,OPEN,False,3,0,1,https://github.com/aruhier,Fix example panel scripts,1,[],https://github.com/baskerville/bspwm/pull/572,https://github.com/emanuele6,3,https://github.com/baskerville/bspwm/pull/572#issuecomment-689610581,"Fix PATH to allow launching the panel scripts (fixes the panel_colors not found, etc.).
Source the profile file at top of panel, so xdo will execute the correct query (fixes the panel already running error).
Edit: I firstly thought that using sh was what broke the scripts, but it is not.","This isn't really needed... It should be obvious that panel_colors needs to be in the same directory, panel_bar needs to be in PATH and that the content of profile needs to be added to ~/.{,bash_,whatever_}profile.
If it isn't obvious, then you should be looking for sh examples, not bspwm examples.
Sourcing profile in the script doesn't make sense since profile is supposed to represent the ~/.{,bash_,whatever_}profile file used in the example. A better solution would be to just inline the content of profile in panel since that's the only script that uses those values.
Adding the current directory to PATH is an unnecessarly complex solution to the problem: you could just use ./panel_bar instead of panel_bar.
I don't think the alternative solutions I proposed should be used anyway as I said in the first paragraph.
If you really think that it would help, you could add a README.md file in examples/panel in which the ""installation steps"" of the example panel would be provided. That would make more sense.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,573,2016-11-14T03:27:28Z,2016-11-14T10:28:57Z,2016-11-14T10:28:57Z,CLOSED,False,7,7,2,https://github.com/neeasade,Remove rule key implication from config command.,1,[],https://github.com/baskerville/bspwm/pull/573,https://github.com/neeasade,1,https://github.com/baskerville/bspwm/pull/573,"From the external_rules_command: the valid key/value pairs are given in the description of the rule command.
I (sleepily) misinterpreted config syntax into thinking I could use it in a rule-like fashion (because of the keyword key), I feel this edit removes ambiguity.","From the external_rules_command: the valid key/value pairs are given in the description of the rule command.
I (sleepily) misinterpreted config syntax into thinking I could use it in a rule-like fashion (because of the keyword key), I feel this edit removes ambiguity.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,573,2016-11-14T03:27:28Z,2016-11-14T10:28:57Z,2016-11-14T10:28:57Z,CLOSED,False,7,7,2,https://github.com/neeasade,Remove rule key implication from config command.,1,[],https://github.com/baskerville/bspwm/pull/573,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/573#issuecomment-260300346,"From the external_rules_command: the valid key/value pairs are given in the description of the rule command.
I (sleepily) misinterpreted config syntax into thinking I could use it in a rule-like fashion (because of the keyword key), I feel this edit removes ambiguity.",Thanks.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,577,2016-11-18T14:33:24Z,2016-11-18T17:07:50Z,2016-11-18T17:11:39Z,CLOSED,False,2,2,1,https://github.com/jaagr,Support vertical layouts in ewmh_handle_struts #571,1,[],https://github.com/baskerville/bspwm/pull/577,https://github.com/jaagr,1,https://github.com/baskerville/bspwm/pull/577,,,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,580,2016-12-01T05:12:22Z,2016-12-01T17:00:31Z,2016-12-03T11:00:41Z,CLOSED,False,27,0,6,https://github.com/jaagr,Support EWMH property _NET_DESKTOP_VIEWPORT,1,[],https://github.com/baskerville/bspwm/pull/580,https://github.com/jaagr,1,https://github.com/baskerville/bspwm/pull/580,"Add support for the EWMH property _NET_DESKTOP_VIEWPORT.
https://specifications.freedesktop.org/wm-spec/wm-spec-1.3.html#idm140130317690112
Makes it possible to group _NET_DESKTOP_NAMES by viewport which makes them alot more useful.","Add support for the EWMH property _NET_DESKTOP_VIEWPORT.
https://specifications.freedesktop.org/wm-spec/wm-spec-1.3.html#idm140130317690112
Makes it possible to group _NET_DESKTOP_NAMES by viewport which makes them alot more useful.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,580,2016-12-01T05:12:22Z,2016-12-01T17:00:31Z,2016-12-03T11:00:41Z,CLOSED,False,27,0,6,https://github.com/jaagr,Support EWMH property _NET_DESKTOP_VIEWPORT,1,[],https://github.com/baskerville/bspwm/pull/580,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/580#issuecomment-264229802,"Add support for the EWMH property _NET_DESKTOP_VIEWPORT.
https://specifications.freedesktop.org/wm-spec/wm-spec-1.3.html#idm140130317690112
Makes it possible to group _NET_DESKTOP_NAMES by viewport which makes them alot more useful.",Thanks.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,593,2016-12-14T19:47:05Z,2016-12-14T21:06:03Z,2016-12-14T21:06:13Z,MERGED,True,2,1,1,https://github.com/quite,Don't install an examples dir in an examples dir,1,[],https://github.com/baskerville/bspwm/pull/593,https://github.com/quite,1,https://github.com/baskerville/bspwm/pull/593,A second run of make install would install an examples dir in an already existing examples dir.,A second run of make install would install an examples dir in an already existing examples dir.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,593,2016-12-14T19:47:05Z,2016-12-14T21:06:03Z,2016-12-14T21:06:13Z,MERGED,True,2,1,1,https://github.com/quite,Don't install an examples dir in an examples dir,1,[],https://github.com/baskerville/bspwm/pull/593,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/593#issuecomment-267156589,A second run of make install would install an examples dir in an already existing examples dir.,Thanks.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,596,2016-12-20T22:34:40Z,2016-12-21T19:54:00Z,2016-12-21T19:54:00Z,CLOSED,False,2,2,1,https://github.com/quite,doc: Relate --presel-dir to automatic/manual insertion mode,1,[],https://github.com/baskerville/bspwm/pull/596,https://github.com/quite,1,https://github.com/baskerville/bspwm/pull/596,,,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,596,2016-12-20T22:34:40Z,2016-12-21T19:54:00Z,2016-12-21T19:54:00Z,CLOSED,False,2,2,1,https://github.com/quite,doc: Relate --presel-dir to automatic/manual insertion mode,1,[],https://github.com/baskerville/bspwm/pull/596,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/596#issuecomment-268622743,,Thanks.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,610,2017-01-30T16:56:55Z,2017-01-30T19:06:21Z,2017-01-30T19:06:34Z,MERGED,True,14,9,3,https://github.com/olmokramer,"Allow (+|-)fraction in ""node --ratio"" command",1,[],https://github.com/baskerville/bspwm/pull/610,https://github.com/olmokramer,1,https://github.com/baskerville/bspwm/pull/610,"As discussed in #609 this allows to change the ratio of a node by a fraction: bspc node NODE_SEL --ratio +.1 will change the ratio from e.g. 0.5 to 0.6.
The value passed on the command line is parsed as float, and if -1 < value < 1 it is interpreted as a fraction instead of pixels. This means that the --ratio +|- command now accepts floats instead of just integers, and so --ratio 100.5 will change the ratio by either 100 or 101 pixels. If you don't want this behaviour, I can change it, but it seemed simpler this way.","As discussed in #609 this allows to change the ratio of a node by a fraction: bspc node NODE_SEL --ratio +.1 will change the ratio from e.g. 0.5 to 0.6.
The value passed on the command line is parsed as float, and if -1 < value < 1 it is interpreted as a fraction instead of pixels. This means that the --ratio +|- command now accepts floats instead of just integers, and so --ratio 100.5 will change the ratio by either 100 or 101 pixels. If you don't want this behaviour, I can change it, but it seemed simpler this way.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,610,2017-01-30T16:56:55Z,2017-01-30T19:06:21Z,2017-01-30T19:06:34Z,MERGED,True,14,9,3,https://github.com/olmokramer,"Allow (+|-)fraction in ""node --ratio"" command",1,[],https://github.com/baskerville/bspwm/pull/610,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/610#issuecomment-276158074,"As discussed in #609 this allows to change the ratio of a node by a fraction: bspc node NODE_SEL --ratio +.1 will change the ratio from e.g. 0.5 to 0.6.
The value passed on the command line is parsed as float, and if -1 < value < 1 it is interpreted as a fraction instead of pixels. This means that the --ratio +|- command now accepts floats instead of just integers, and so --ratio 100.5 will change the ratio by either 100 or 101 pixels. If you don't want this behaviour, I can change it, but it seemed simpler this way.",Thanks.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,611,2017-02-02T12:56:53Z,2017-02-10T20:54:08Z,2017-02-10T20:54:08Z,CLOSED,False,1,1,1,https://github.com/olmokramer,Fix link to Linux coding style,1,[],https://github.com/baskerville/bspwm/pull/611,https://github.com/olmokramer,1,https://github.com/baskerville/bspwm/pull/611,,,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,611,2017-02-02T12:56:53Z,2017-02-10T20:54:08Z,2017-02-10T20:54:08Z,CLOSED,False,1,1,1,https://github.com/olmokramer,Fix link to Linux coding style,1,[],https://github.com/baskerville/bspwm/pull/611,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/611#issuecomment-279063025,,Thanks.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,636,2017-04-21T06:33:05Z,2017-04-21T09:15:48Z,2017-04-21T09:15:55Z,MERGED,True,1,1,1,https://github.com/olmokramer,cast terminating NULL to (char *) in execl() call,1,[],https://github.com/baskerville/bspwm/pull/636,https://github.com/olmokramer,1,https://github.com/baskerville/bspwm/pull/636,"Just randomly happened upon this, but the Linux Programmer's Manual states:
$ man 3 execl

The const char *arg and subsequent ellipses in the 
execl(), execlp(), and execle() functions can be 
thought of as arg0, arg1, ..., argn. <snip> The list of 
arguments must be terminated by a null pointer, 
and, since these are variadic functions, **this pointer
must be cast (char *) NULL**.","Just randomly happened upon this, but the Linux Programmer's Manual states:
$ man 3 execl

The const char *arg and subsequent ellipses in the 
execl(), execlp(), and execle() functions can be 
thought of as arg0, arg1, ..., argn. <snip> The list of 
arguments must be terminated by a null pointer, 
and, since these are variadic functions, **this pointer
must be cast (char *) NULL**.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,636,2017-04-21T06:33:05Z,2017-04-21T09:15:48Z,2017-04-21T09:15:55Z,MERGED,True,1,1,1,https://github.com/olmokramer,cast terminating NULL to (char *) in execl() call,1,[],https://github.com/baskerville/bspwm/pull/636,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/636#issuecomment-296138097,"Just randomly happened upon this, but the Linux Programmer's Manual states:
$ man 3 execl

The const char *arg and subsequent ellipses in the 
execl(), execlp(), and execle() functions can be 
thought of as arg0, arg1, ..., argn. <snip> The list of 
arguments must be terminated by a null pointer, 
and, since these are variadic functions, **this pointer
must be cast (char *) NULL**.",Thanks.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,652,2017-06-02T12:05:54Z,2017-06-02T13:23:09Z,2017-06-02T13:23:27Z,MERGED,True,3,1,1,https://github.com/Helvethor,Export environment to configuration file,1,[],https://github.com/baskerville/bspwm/pull/652,https://github.com/Helvethor,1,https://github.com/baskerville/bspwm/pull/652,This commit transfers the environment variables to the shell running the configuration file. I needed it in order to properly call sxhkd with my configuration file through $XDG_CONFIG_HOME.,This commit transfers the environment variables to the shell running the configuration file. I needed it in order to properly call sxhkd with my configuration file through $XDG_CONFIG_HOME.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,652,2017-06-02T12:05:54Z,2017-06-02T13:23:09Z,2017-06-02T13:23:27Z,MERGED,True,3,1,1,https://github.com/Helvethor,Export environment to configuration file,1,[],https://github.com/baskerville/bspwm/pull/652,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/652#issuecomment-305785708,This commit transfers the environment variables to the shell running the configuration file. I needed it in order to properly call sxhkd with my configuration file through $XDG_CONFIG_HOME.,Thanks.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,653,2017-06-02T19:33:41Z,2017-06-03T19:19:54Z,2017-06-03T19:19:54Z,CLOSED,False,3,0,1,https://github.com/JBouron,Fix memory leak when lauching bspwm while another WM is already running.,2,[],https://github.com/baskerville/bspwm/pull/653,https://github.com/JBouron,1,https://github.com/baskerville/bspwm/pull/653,"When bspwm is started while another WM is running a leaks of ~400 bytes occurs. Below is the result of an analysis with valgrind :
==18286== Memcheck, a memory error detector
==18286== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18286== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18286== Command: ./bspwm
==18286==
Another window manager is already running.
==18286==
==18286== HEAP SUMMARY:
==18286==     in use at exit: 408 bytes in 4 blocks
==18286==   total heap usage: 392 allocs, 388 frees, 63,116 bytes allocated
==18286==
==18286== 4 bytes in 1 blocks are still reachable in loss record 1 of 4
==18286==    at 0x4C2AF1F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==18286==    by 0x59867A0: xcb_ewmh_init_atoms (in /usr/lib/libxcb-ewmh.so.2.0.0)
==18286==    by 0x424934: ewmh_init (in /home/jbouron/Documents/Code/bspwm/bspwm)
==18286==    by 0x404715: setup (in /home/jbouron/Documents/Code/bspwm/bspwm)
==18286==    by 0x403FE6: main (in /home/jbouron/Documents/Code/bspwm/bspwm)
==18286==
==18286== 8 bytes in 1 blocks are still reachable in loss record 2 of 4
==18286==    at 0x4C2AF1F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==18286==    by 0x598678C: xcb_ewmh_init_atoms (in /usr/lib/libxcb-ewmh.so.2.0.0)
==18286==    by 0x424934: ewmh_init (in /home/jbouron/Documents/Code/bspwm/bspwm)
==18286==    by 0x404715: setup (in /home/jbouron/Documents/Code/bspwm/bspwm)
==18286==    by 0x403FE6: main (in /home/jbouron/Documents/Code/bspwm/bspwm)
==18286==
==18286== 36 bytes in 1 blocks are still reachable in loss record 3 of 4
==18286==    at 0x4C2AF1F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==18286==    by 0x5158E52: ??? (in /usr/lib/libxcb.so.1.1.0)
==18286==    by 0x5156BDB: ??? (in /usr/lib/libxcb.so.1.1.0)
==18286==    by 0x515839E: ??? (in /usr/lib/libxcb.so.1.1.0)
==18286==    by 0x51585CE: xcb_request_check (in /usr/lib/libxcb.so.1.1.0)
==18286==    by 0x404DD8: register_events (in /home/jbouron/Documents/Code/bspwm/bspwm)
==18286==    by 0x404767: setup (in /home/jbouron/Documents/Code/bspwm/bspwm)
==18286==    by 0x403FE6: main (in /home/jbouron/Documents/Code/bspwm/bspwm)
==18286==
==18286== 360 bytes in 1 blocks are still reachable in loss record 4 of 4
==18286==    at 0x4C2CF35: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==18286==    by 0x424914: ewmh_init (in /home/jbouron/Documents/Code/bspwm/bspwm)
==18286==    by 0x404715: setup (in /home/jbouron/Documents/Code/bspwm/bspwm)
==18286==    by 0x403FE6: main (in /home/jbouron/Documents/Code/bspwm/bspwm)
==18286==
==18286== LEAK SUMMARY:
==18286==    definitely lost: 0 bytes in 0 blocks
==18286==    indirectly lost: 0 bytes in 0 blocks
==18286==      possibly lost: 0 bytes in 0 blocks
==18286==    still reachable: 408 bytes in 4 blocks
==18286==         suppressed: 0 bytes in 0 blocks
==18286==
==18286== For counts of detected and suppressed errors, rerun with: -v
==18286== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
A few free were missing, this simple fix resolved the leaks.","When bspwm is started while another WM is running a leaks of ~400 bytes occurs. Below is the result of an analysis with valgrind :
==18286== Memcheck, a memory error detector
==18286== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18286== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18286== Command: ./bspwm
==18286==
Another window manager is already running.
==18286==
==18286== HEAP SUMMARY:
==18286==     in use at exit: 408 bytes in 4 blocks
==18286==   total heap usage: 392 allocs, 388 frees, 63,116 bytes allocated
==18286==
==18286== 4 bytes in 1 blocks are still reachable in loss record 1 of 4
==18286==    at 0x4C2AF1F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==18286==    by 0x59867A0: xcb_ewmh_init_atoms (in /usr/lib/libxcb-ewmh.so.2.0.0)
==18286==    by 0x424934: ewmh_init (in /home/jbouron/Documents/Code/bspwm/bspwm)
==18286==    by 0x404715: setup (in /home/jbouron/Documents/Code/bspwm/bspwm)
==18286==    by 0x403FE6: main (in /home/jbouron/Documents/Code/bspwm/bspwm)
==18286==
==18286== 8 bytes in 1 blocks are still reachable in loss record 2 of 4
==18286==    at 0x4C2AF1F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==18286==    by 0x598678C: xcb_ewmh_init_atoms (in /usr/lib/libxcb-ewmh.so.2.0.0)
==18286==    by 0x424934: ewmh_init (in /home/jbouron/Documents/Code/bspwm/bspwm)
==18286==    by 0x404715: setup (in /home/jbouron/Documents/Code/bspwm/bspwm)
==18286==    by 0x403FE6: main (in /home/jbouron/Documents/Code/bspwm/bspwm)
==18286==
==18286== 36 bytes in 1 blocks are still reachable in loss record 3 of 4
==18286==    at 0x4C2AF1F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==18286==    by 0x5158E52: ??? (in /usr/lib/libxcb.so.1.1.0)
==18286==    by 0x5156BDB: ??? (in /usr/lib/libxcb.so.1.1.0)
==18286==    by 0x515839E: ??? (in /usr/lib/libxcb.so.1.1.0)
==18286==    by 0x51585CE: xcb_request_check (in /usr/lib/libxcb.so.1.1.0)
==18286==    by 0x404DD8: register_events (in /home/jbouron/Documents/Code/bspwm/bspwm)
==18286==    by 0x404767: setup (in /home/jbouron/Documents/Code/bspwm/bspwm)
==18286==    by 0x403FE6: main (in /home/jbouron/Documents/Code/bspwm/bspwm)
==18286==
==18286== 360 bytes in 1 blocks are still reachable in loss record 4 of 4
==18286==    at 0x4C2CF35: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==18286==    by 0x424914: ewmh_init (in /home/jbouron/Documents/Code/bspwm/bspwm)
==18286==    by 0x404715: setup (in /home/jbouron/Documents/Code/bspwm/bspwm)
==18286==    by 0x403FE6: main (in /home/jbouron/Documents/Code/bspwm/bspwm)
==18286==
==18286== LEAK SUMMARY:
==18286==    definitely lost: 0 bytes in 0 blocks
==18286==    indirectly lost: 0 bytes in 0 blocks
==18286==      possibly lost: 0 bytes in 0 blocks
==18286==    still reachable: 408 bytes in 4 blocks
==18286==         suppressed: 0 bytes in 0 blocks
==18286==
==18286== For counts of detected and suppressed errors, rerun with: -v
==18286== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
A few free were missing, this simple fix resolved the leaks.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,653,2017-06-02T19:33:41Z,2017-06-03T19:19:54Z,2017-06-03T19:19:54Z,CLOSED,False,3,0,1,https://github.com/JBouron,Fix memory leak when lauching bspwm while another WM is already running.,2,[],https://github.com/baskerville/bspwm/pull/653,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/653#issuecomment-305995780,"When bspwm is started while another WM is running a leaks of ~400 bytes occurs. Below is the result of an analysis with valgrind :
==18286== Memcheck, a memory error detector
==18286== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18286== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18286== Command: ./bspwm
==18286==
Another window manager is already running.
==18286==
==18286== HEAP SUMMARY:
==18286==     in use at exit: 408 bytes in 4 blocks
==18286==   total heap usage: 392 allocs, 388 frees, 63,116 bytes allocated
==18286==
==18286== 4 bytes in 1 blocks are still reachable in loss record 1 of 4
==18286==    at 0x4C2AF1F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==18286==    by 0x59867A0: xcb_ewmh_init_atoms (in /usr/lib/libxcb-ewmh.so.2.0.0)
==18286==    by 0x424934: ewmh_init (in /home/jbouron/Documents/Code/bspwm/bspwm)
==18286==    by 0x404715: setup (in /home/jbouron/Documents/Code/bspwm/bspwm)
==18286==    by 0x403FE6: main (in /home/jbouron/Documents/Code/bspwm/bspwm)
==18286==
==18286== 8 bytes in 1 blocks are still reachable in loss record 2 of 4
==18286==    at 0x4C2AF1F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==18286==    by 0x598678C: xcb_ewmh_init_atoms (in /usr/lib/libxcb-ewmh.so.2.0.0)
==18286==    by 0x424934: ewmh_init (in /home/jbouron/Documents/Code/bspwm/bspwm)
==18286==    by 0x404715: setup (in /home/jbouron/Documents/Code/bspwm/bspwm)
==18286==    by 0x403FE6: main (in /home/jbouron/Documents/Code/bspwm/bspwm)
==18286==
==18286== 36 bytes in 1 blocks are still reachable in loss record 3 of 4
==18286==    at 0x4C2AF1F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==18286==    by 0x5158E52: ??? (in /usr/lib/libxcb.so.1.1.0)
==18286==    by 0x5156BDB: ??? (in /usr/lib/libxcb.so.1.1.0)
==18286==    by 0x515839E: ??? (in /usr/lib/libxcb.so.1.1.0)
==18286==    by 0x51585CE: xcb_request_check (in /usr/lib/libxcb.so.1.1.0)
==18286==    by 0x404DD8: register_events (in /home/jbouron/Documents/Code/bspwm/bspwm)
==18286==    by 0x404767: setup (in /home/jbouron/Documents/Code/bspwm/bspwm)
==18286==    by 0x403FE6: main (in /home/jbouron/Documents/Code/bspwm/bspwm)
==18286==
==18286== 360 bytes in 1 blocks are still reachable in loss record 4 of 4
==18286==    at 0x4C2CF35: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==18286==    by 0x424914: ewmh_init (in /home/jbouron/Documents/Code/bspwm/bspwm)
==18286==    by 0x404715: setup (in /home/jbouron/Documents/Code/bspwm/bspwm)
==18286==    by 0x403FE6: main (in /home/jbouron/Documents/Code/bspwm/bspwm)
==18286==
==18286== LEAK SUMMARY:
==18286==    definitely lost: 0 bytes in 0 blocks
==18286==    indirectly lost: 0 bytes in 0 blocks
==18286==      possibly lost: 0 bytes in 0 blocks
==18286==    still reachable: 408 bytes in 4 blocks
==18286==         suppressed: 0 bytes in 0 blocks
==18286==
==18286== For counts of detected and suppressed errors, rerun with: -v
==18286== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
A few free were missing, this simple fix resolved the leaks.",Thanks.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,657,2017-06-07T18:03:35Z,2017-06-07T18:59:15Z,2017-06-07T18:59:30Z,MERGED,True,1,1,1,https://github.com/fluffywaffles,Fix spelling in wm subcommand error message,1,[],https://github.com/baskerville/bspwm/pull/657,https://github.com/fluffywaffles,1,https://github.com/baskerville/bspwm/pull/657,"""Unkown"" should be ""Unknown""","""Unkown"" should be ""Unknown""",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,657,2017-06-07T18:03:35Z,2017-06-07T18:59:15Z,2017-06-07T18:59:30Z,MERGED,True,1,1,1,https://github.com/fluffywaffles,Fix spelling in wm subcommand error message,1,[],https://github.com/baskerville/bspwm/pull/657,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/657#issuecomment-306892607,"""Unkown"" should be ""Unknown""",Thanks.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,658,2017-06-08T22:11:39Z,2017-06-09T07:58:50Z,2017-06-09T07:59:04Z,MERGED,True,79,58,2,https://github.com/JBouron,Refactoring rules related code.,1,[],https://github.com/baskerville/bspwm/pull/658,https://github.com/JBouron,1,https://github.com/baskerville/bspwm/pull/658,"The rule.c file had the following issues :

Code duplication.
Lack of modularization (especially apply_rule).
Coding conventions not respected.

Nothing too fancy in this PR, I agree, but it has been a great exercise to learn and understand the code,
which might come in handy in future contributions.
All tests are passing.
Thanks.","The rule.c file had the following issues :

Code duplication.
Lack of modularization (especially apply_rule).
Coding conventions not respected.

Nothing too fancy in this PR, I agree, but it has been a great exercise to learn and understand the code,
which might come in handy in future contributions.
All tests are passing.
Thanks.",True,"{'HOORAY': ['https://github.com/0x647262', 'https://github.com/cjk']}"
baskerville/bspwm,https://github.com/baskerville/bspwm,658,2017-06-08T22:11:39Z,2017-06-09T07:58:50Z,2017-06-09T07:59:04Z,MERGED,True,79,58,2,https://github.com/JBouron,Refactoring rules related code.,1,[],https://github.com/baskerville/bspwm/pull/658,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/658#issuecomment-307322743,"The rule.c file had the following issues :

Code duplication.
Lack of modularization (especially apply_rule).
Coding conventions not respected.

Nothing too fancy in this PR, I agree, but it has been a great exercise to learn and understand the code,
which might come in handy in future contributions.
All tests are passing.
Thanks.",Thanks.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,661,2017-06-10T21:17:40Z,2017-06-12T07:52:35Z,2017-06-12T07:52:35Z,CLOSED,False,14,3,5,https://github.com/JBouron,Add rectangle option in rule command. Closes #660.,1,[],https://github.com/baskerville/bspwm/pull/661,https://github.com/JBouron,1,https://github.com/baskerville/bspwm/pull/661,,,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,661,2017-06-10T21:17:40Z,2017-06-12T07:52:35Z,2017-06-12T07:52:35Z,CLOSED,False,14,3,5,https://github.com/JBouron,Add rectangle option in rule command. Closes #660.,1,[],https://github.com/baskerville/bspwm/pull/661,https://github.com/JBouron,2,https://github.com/baskerville/bspwm/pull/661#issuecomment-307651612,,Done.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,661,2017-06-10T21:17:40Z,2017-06-12T07:52:35Z,2017-06-12T07:52:35Z,CLOSED,False,14,3,5,https://github.com/JBouron,Add rectangle option in rule command. Closes #660.,1,[],https://github.com/baskerville/bspwm/pull/661,https://github.com/baskerville,3,https://github.com/baskerville/bspwm/pull/661#issuecomment-307715619,,"Thanks, I've merged your changed with slight modifications:

Supplying two rectangle=… consequences would have led to a memory leak because of the inconditionnal csq->rect = calloc(1, sizeof(xcb_rectangle_t)).
Supplying an invalid rectangle would have led to a segfault, because you don't set csq->rect to NULL after freeing it.
You don't need to manually resize the window: arrange is called in manage_window.
You forgot to initialize the rect attribute in make_rule_consequence.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,665,2017-06-18T20:06:40Z,2017-06-19T07:06:34Z,2017-06-19T13:53:42Z,MERGED,True,0,1,1,https://github.com/Lesik,"Remove deprecated ""Encoding"" key",1,[],https://github.com/baskerville/bspwm/pull/665,https://github.com/Lesik,1,https://github.com/baskerville/bspwm/pull/665,"The ""Encoding"" key has been deprecated: https://standards.freedesktop.org/desktop-entry-spec/desktop-entry-spec-latest.html#deprecated-items","The ""Encoding"" key has been deprecated: https://standards.freedesktop.org/desktop-entry-spec/desktop-entry-spec-latest.html#deprecated-items",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,674,2017-07-09T20:21:28Z,2017-07-10T07:37:15Z,2017-07-10T07:37:34Z,MERGED,True,19,23,2,https://github.com/msteen,click_to_focus should also apply to middle and right click,1,[],https://github.com/baskerville/bspwm/pull/674,https://github.com/msteen,1,https://github.com/baskerville/bspwm/pull/674,"The middle and right mouse click should also be considered a click for the click_to_focus option. Some applications will misbehave when an option is selected through the context menu and multiple windows are open. An example of misbehavior is selecting find in the context menu of the Sublime Text file tree, then the search bar will not be shown in the window with the file tree, but in the Sublime Text window that was focused at the time. And examples of middle click would be pasting in a terminal or opening a link in a new tab in a browser, in both cases I would expect the clicked window to become focused if it was not already. I have been using this patch for a week without any problem.","The middle and right mouse click should also be considered a click for the click_to_focus option. Some applications will misbehave when an option is selected through the context menu and multiple windows are open. An example of misbehavior is selecting find in the context menu of the Sublime Text file tree, then the search bar will not be shown in the window with the file tree, but in the Sublime Text window that was focused at the time. And examples of middle click would be pasting in a terminal or opening a link in a new tab in a browser, in both cases I would expect the clicked window to become focused if it was not already. I have been using this patch for a week without any problem.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,674,2017-07-09T20:21:28Z,2017-07-10T07:37:15Z,2017-07-10T07:37:34Z,MERGED,True,19,23,2,https://github.com/msteen,click_to_focus should also apply to middle and right click,1,[],https://github.com/baskerville/bspwm/pull/674,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/674#issuecomment-314028938,"The middle and right mouse click should also be considered a click for the click_to_focus option. Some applications will misbehave when an option is selected through the context menu and multiple windows are open. An example of misbehavior is selecting find in the context menu of the Sublime Text file tree, then the search bar will not be shown in the window with the file tree, but in the Sublime Text window that was focused at the time. And examples of middle click would be pasting in a terminal or opening a link in a new tab in a browser, in both cases I would expect the clicked window to become focused if it was not already. I have been using this patch for a week without any problem.",Thanks.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,675,2017-07-11T20:30:08Z,2017-07-12T08:40:59Z,2017-07-13T09:21:06Z,CLOSED,False,58,8,10,https://github.com/msteen,click_to_focus setting should support different preferences,1,[],https://github.com/baskerville/bspwm/pull/675,https://github.com/msteen,1,https://github.com/baskerville/bspwm/pull/675,"My previous pull request #674 fixed what for me what buggy behavior caused by having the right click button not focusing the window, but for others such as @Alkeryn this was considered a feature, so to support different preferences I have changed the click_to_focus from being a boolean to a byte that represents which mouse buttons should focus on click. I have tried setting and getting different values and it seems to work correct, but I have not been using it for long as I did with my previous pull request. The default is:
bspc config click_to_focus ''

Which means no mouse buttons focus on click. And I have:
bspc config click_to_focus button1,button2,button3

And @Alkeryn could use:
bspc config click_to_focus button1","My previous pull request #674 fixed what for me what buggy behavior caused by having the right click button not focusing the window, but for others such as @Alkeryn this was considered a feature, so to support different preferences I have changed the click_to_focus from being a boolean to a byte that represents which mouse buttons should focus on click. I have tried setting and getting different values and it seems to work correct, but I have not been using it for long as I did with my previous pull request. The default is:
bspc config click_to_focus ''

Which means no mouse buttons focus on click. And I have:
bspc config click_to_focus button1,button2,button3

And @Alkeryn could use:
bspc config click_to_focus button1",True,{'THUMBS_UP': ['https://github.com/Alkeryn']}
baskerville/bspwm,https://github.com/baskerville/bspwm,675,2017-07-11T20:30:08Z,2017-07-12T08:40:59Z,2017-07-13T09:21:06Z,CLOSED,False,58,8,10,https://github.com/msteen,click_to_focus setting should support different preferences,1,[],https://github.com/baskerville/bspwm/pull/675,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/675#issuecomment-314696372,"My previous pull request #674 fixed what for me what buggy behavior caused by having the right click button not focusing the window, but for others such as @Alkeryn this was considered a feature, so to support different preferences I have changed the click_to_focus from being a boolean to a byte that represents which mouse buttons should focus on click. I have tried setting and getting different values and it seems to work correct, but I have not been using it for long as I did with my previous pull request. The default is:
bspc config click_to_focus ''

Which means no mouse buttons focus on click. And I have:
bspc config click_to_focus button1,button2,button3

And @Alkeryn could use:
bspc config click_to_focus button1","Thanks, I went for 0a9b615 instead.
You can get the behavior you want with bspc config click_to_focus any.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,675,2017-07-11T20:30:08Z,2017-07-12T08:40:59Z,2017-07-13T09:21:06Z,CLOSED,False,58,8,10,https://github.com/msteen,click_to_focus setting should support different preferences,1,[],https://github.com/baskerville/bspwm/pull/675,https://github.com/msteen,3,https://github.com/baskerville/bspwm/pull/675#issuecomment-315016050,"My previous pull request #674 fixed what for me what buggy behavior caused by having the right click button not focusing the window, but for others such as @Alkeryn this was considered a feature, so to support different preferences I have changed the click_to_focus from being a boolean to a byte that represents which mouse buttons should focus on click. I have tried setting and getting different values and it seems to work correct, but I have not been using it for long as I did with my previous pull request. The default is:
bspc config click_to_focus ''

Which means no mouse buttons focus on click. And I have:
bspc config click_to_focus button1,button2,button3

And @Alkeryn could use:
bspc config click_to_focus button1","Your solution is simpler and obviously matches the rest of the options better, but to be complete, should you not also include the following cases:
button1 and button2
button1 and button3
button2 and button3
I probably would name them like this: button1_button2. Let me know if you agree that these should also be present. It is unlikely that someone would use the case of button2 and button3, but I could see use cases for the other.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,675,2017-07-11T20:30:08Z,2017-07-12T08:40:59Z,2017-07-13T09:21:06Z,CLOSED,False,58,8,10,https://github.com/msteen,click_to_focus setting should support different preferences,1,[],https://github.com/baskerville/bspwm/pull/675,https://github.com/baskerville,4,https://github.com/baskerville/bspwm/pull/675#issuecomment-315022696,"My previous pull request #674 fixed what for me what buggy behavior caused by having the right click button not focusing the window, but for others such as @Alkeryn this was considered a feature, so to support different preferences I have changed the click_to_focus from being a boolean to a byte that represents which mouse buttons should focus on click. I have tried setting and getting different values and it seems to work correct, but I have not been using it for long as I did with my previous pull request. The default is:
bspc config click_to_focus ''

Which means no mouse buttons focus on click. And I have:
bspc config click_to_focus button1,button2,button3

And @Alkeryn could use:
bspc config click_to_focus button1",I try to keep things as simple as possible so I'm not planning on enhancing this setting.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,688,2017-07-31T15:20:52Z,2017-07-31T18:36:31Z,2017-07-31T18:39:15Z,MERGED,True,8,4,4,https://github.com/MrAnno,Fix GCC warnings,1,[],https://github.com/baskerville/bspwm/pull/688,https://github.com/MrAnno,1,https://github.com/baskerville/bspwm/pull/688,"warning: the use of `mktemp' is dangerous, better use `mkstemp' or `mkdtemp'
warning: implicit declaration of function ‘mktemp’ [-Wimplicit-function-declaration]

src/messages.c:1056:25: warning: suggest parentheses around comparison in operand of ‘|’ [-Wparentheses]
  if (!print_ids && (dom == DOMAIN_NODE | dom == DOMAIN_TREE))
                         ^

The value of D_POSIX_C_SOURCE had to be increased :(
I also fixed the fifo template in this patch.
From man mktemp:

The last six characters of template must be XXXXXX and these are replaced with a string that makes the filename unique.","warning: the use of `mktemp' is dangerous, better use `mkstemp' or `mkdtemp'
warning: implicit declaration of function ‘mktemp’ [-Wimplicit-function-declaration]

src/messages.c:1056:25: warning: suggest parentheses around comparison in operand of ‘|’ [-Wparentheses]
  if (!print_ids && (dom == DOMAIN_NODE | dom == DOMAIN_TREE))
                         ^

The value of D_POSIX_C_SOURCE had to be increased :(
I also fixed the fifo template in this patch.
From man mktemp:

The last six characters of template must be XXXXXX and these are replaced with a string that makes the filename unique.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,688,2017-07-31T15:20:52Z,2017-07-31T18:36:31Z,2017-07-31T18:39:15Z,MERGED,True,8,4,4,https://github.com/MrAnno,Fix GCC warnings,1,[],https://github.com/baskerville/bspwm/pull/688,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/688#issuecomment-319158368,"warning: the use of `mktemp' is dangerous, better use `mkstemp' or `mkdtemp'
warning: implicit declaration of function ‘mktemp’ [-Wimplicit-function-declaration]

src/messages.c:1056:25: warning: suggest parentheses around comparison in operand of ‘|’ [-Wparentheses]
  if (!print_ids && (dom == DOMAIN_NODE | dom == DOMAIN_TREE))
                         ^

The value of D_POSIX_C_SOURCE had to be increased :(
I also fixed the fifo template in this patch.
From man mktemp:

The last six characters of template must be XXXXXX and these are replaced with a string that makes the filename unique.",Thanks.,True,{'THUMBS_UP': ['https://github.com/MrAnno']}
baskerville/bspwm,https://github.com/baskerville/bspwm,693,2017-08-05T21:52:27Z,,2017-08-09T13:12:20Z,OPEN,False,99,12,16,https://github.com/msteen,Added an overlay flag for window input pass through support.,1,[],https://github.com/baskerville/bspwm/pull/693,https://github.com/msteen,1,https://github.com/baskerville/bspwm/pull/693,"Implemented the feature requested in issue #663. One known bug is that it ought to go through all nodes and check if the overlay flag is set when a configure event changes the screen width and height, otherwise it could happen that if you have a small monitor and you add a large external monitor, the full sized windows on the external monitor will then have issues when you get are outside the dimensions of the small monitor. Should be an easy fix, but I am not sure how to do that best, @baskerville you probably know how to do this best.
Another issue is that you cannot move or resize it either, because the input is passed along by X not by the window manager, and mouse clicks are also input. One solution I could think of is to temporarily disable the overlays when you press the mouse modifier key, so normal clicks with be passed along to the window below, but when you explicitly do a window manager mouse action, it will not be ignored.
Other than those issues it seems to work fine.","Implemented the feature requested in issue #663. One known bug is that it ought to go through all nodes and check if the overlay flag is set when a configure event changes the screen width and height, otherwise it could happen that if you have a small monitor and you add a large external monitor, the full sized windows on the external monitor will then have issues when you get are outside the dimensions of the small monitor. Should be an easy fix, but I am not sure how to do that best, @baskerville you probably know how to do this best.
Another issue is that you cannot move or resize it either, because the input is passed along by X not by the window manager, and mouse clicks are also input. One solution I could think of is to temporarily disable the overlays when you press the mouse modifier key, so normal clicks with be passed along to the window below, but when you explicitly do a window manager mouse action, it will not be ignored.
Other than those issues it seems to work fine.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,693,2017-08-05T21:52:27Z,,2017-08-09T13:12:20Z,OPEN,False,99,12,16,https://github.com/msteen,Added an overlay flag for window input pass through support.,1,[],https://github.com/baskerville/bspwm/pull/693,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/693#issuecomment-321202351,"Implemented the feature requested in issue #663. One known bug is that it ought to go through all nodes and check if the overlay flag is set when a configure event changes the screen width and height, otherwise it could happen that if you have a small monitor and you add a large external monitor, the full sized windows on the external monitor will then have issues when you get are outside the dimensions of the small monitor. Should be an easy fix, but I am not sure how to do that best, @baskerville you probably know how to do this best.
Another issue is that you cannot move or resize it either, because the input is passed along by X not by the window manager, and mouse clicks are also input. One solution I could think of is to temporarily disable the overlays when you press the mouse modifier key, so normal clicks with be passed along to the window below, but when you explicitly do a window manager mouse action, it will not be ignored.
Other than those issues it seems to work fine.","Since there is no specific bspwm logic here, I think it would make more sense to externalize this into xdo or wmutils. This would allow other WMs to benefit from it.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,693,2017-08-05T21:52:27Z,,2017-08-09T13:12:20Z,OPEN,False,99,12,16,https://github.com/msteen,Added an overlay flag for window input pass through support.,1,[],https://github.com/baskerville/bspwm/pull/693,https://github.com/msteen,3,https://github.com/baskerville/bspwm/pull/693#issuecomment-321215429,"Implemented the feature requested in issue #663. One known bug is that it ought to go through all nodes and check if the overlay flag is set when a configure event changes the screen width and height, otherwise it could happen that if you have a small monitor and you add a large external monitor, the full sized windows on the external monitor will then have issues when you get are outside the dimensions of the small monitor. Should be an easy fix, but I am not sure how to do that best, @baskerville you probably know how to do this best.
Another issue is that you cannot move or resize it either, because the input is passed along by X not by the window manager, and mouse clicks are also input. One solution I could think of is to temporarily disable the overlays when you press the mouse modifier key, so normal clicks with be passed along to the window below, but when you explicitly do a window manager mouse action, it will not be ignored.
Other than those issues it seems to work fine.","In its current form I would have to agree with you, but in order to fix the issue I mentioned you would want to update the bounding area when monitors are added, otherwise the window will be cropped once it reaches over the bounds of the original monitors combined. So it should belong to some long-running process which xdo or wmutils are not. I should also have mentioned that I have only managed to get this working through experimentation, I was unable to find any good documentation, only some examples, and only one which had a undo function. Unfortunately that undo consisted of doing similar calls, so the bounds bug, also applies to undoing the overlay. This means that if you undo the overlay at some point and you add an external monitor with a bigger resolution (not uncommon), all windows that have had an overlay at some point will be cropped to the original screen size (combined monitor size).
The other issue, which is more of a usability issue than an actual bug, is WM specific and is quite important if you ask me, since it is really annoying having to switch to using the keyboard to move e.g. a floating window if you are used to using the mouse for this.
Given these issues I think it does belong in bspwm. However can think of one workaround though that would make it usable in xdo and wmutils, that would be to just use as a large as possible bounds. I would still like that usability fix for it though, but maybe there could be a general way to do this, change modifier mouse clicks to work on the window that is on top at that position, regardless of which window received the click, but I am not sure of the implications of doing so.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,697,2017-08-10T14:55:10Z,2017-08-10T20:09:08Z,2017-08-10T20:09:08Z,MERGED,True,2,1,1,https://github.com/jasperla,Allow passing LDFLAGS,1,[],https://github.com/baskerville/bspwm/pull/697,https://github.com/jasperla,1,https://github.com/baskerville/bspwm/pull/697,This is required for (at least) OpenBSD where we need to pass -L/usr/X11R6/lib to the linker.,This is required for (at least) OpenBSD where we need to pass -L/usr/X11R6/lib to the linker.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,699,2017-08-24T19:06:48Z,2017-08-25T07:22:44Z,2017-08-25T07:22:50Z,MERGED,True,20,2,3,https://github.com/JBouron,Add new monitor selector : pointed.,1,[],https://github.com/baskerville/bspwm/pull/699,https://github.com/JBouron,1,https://github.com/baskerville/bspwm/pull/699,Allows one to select the monitor under the mouse pointer.,Allows one to select the monitor under the mouse pointer.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,699,2017-08-24T19:06:48Z,2017-08-25T07:22:44Z,2017-08-25T07:22:50Z,MERGED,True,20,2,3,https://github.com/JBouron,Add new monitor selector : pointed.,1,[],https://github.com/baskerville/bspwm/pull/699,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/699#issuecomment-324843939,Allows one to select the monitor under the mouse pointer.,Thanks.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,703,2017-09-07T00:59:05Z,2017-09-07T21:11:14Z,2017-09-07T21:11:14Z,CLOSED,False,20,3,1,https://github.com/JBouron,Fix #701.,1,[],https://github.com/baskerville/bspwm/pull/703,https://github.com/JBouron,1,https://github.com/baskerville/bspwm/pull/703,"Quick fix to resolve #701.
@baskerville I'm using the assumption that activate_node is correct even when it does not call activate_desktop. Even though it seems to work, it may have broken something else (although with a small probability). Is this assumption correct ?
Also don't hesitate to come up with a better name than activate_node_remote.","Quick fix to resolve #701.
@baskerville I'm using the assumption that activate_node is correct even when it does not call activate_desktop. Even though it seems to work, it may have broken something else (although with a small probability). Is this assumption correct ?
Also don't hesitate to come up with a better name than activate_node_remote.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,725,2017-10-11T11:17:37Z,2017-10-15T16:18:06Z,2017-10-15T16:18:06Z,CLOSED,False,364,16,1,None,Improve zsh completion,5,[],https://github.com/baskerville/bspwm/pull/725,None,1,https://github.com/baskerville/bspwm/pull/725,,,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,725,2017-10-11T11:17:37Z,2017-10-15T16:18:06Z,2017-10-15T16:18:06Z,CLOSED,False,364,16,1,None,Improve zsh completion,5,[],https://github.com/baskerville/bspwm/pull/725,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/725#issuecomment-336116451,,"Thanks, I've noticed a few problems (I'm using Zsh 5.3.1):
When I press bspc {query,rule} <TAB> or bspc subscribe -<TAB>, I get the following error: _arguments:comparguments:319: invalid argument: +. Pressing bspc subscribe <TAB> doesn't show me the available options (-f and -c); the same remark holds for bspc config. After pressing bspc node -g lock<TAB>, the following string is inserted: ed=, but the =(on|off) part is optional (the possible completions for lock are locked, locked=on and locked=off).",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,725,2017-10-11T11:17:37Z,2017-10-15T16:18:06Z,2017-10-15T16:18:06Z,CLOSED,False,364,16,1,None,Improve zsh completion,5,[],https://github.com/baskerville/bspwm/pull/725,None,3,https://github.com/baskerville/bspwm/pull/725#issuecomment-336437477,,The '=' sign is automatically removed if user presses space or return after it.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,725,2017-10-11T11:17:37Z,2017-10-15T16:18:06Z,2017-10-15T16:18:06Z,CLOSED,False,364,16,1,None,Improve zsh completion,5,[],https://github.com/baskerville/bspwm/pull/725,https://github.com/baskerville,4,https://github.com/baskerville/bspwm/pull/725#issuecomment-336462523,,"Ok, thanks.
On my test setup, the completion for bspc desktop  starts with:
0x00800017  ^1    I   -- I
0x00800018  II    ^2  -- II
0x00800019  III   ^3  -- III
0x0080001A  IV    ^4  -- IV
0x0080001C  ^5    V   -- V
0x0080001D  VI    ^6  -- VI
0x0080001E  VII   ^7  -- VII
0x00800020  VIII  ^8  -- VIII
0x00800021  IX    ^9  -- IX
0x00800022  ^10   X   -- X

Could you make the name / index ordering consistent?
The options for bspc config are listed as
-d  -- Set settings for the selected desktop
-m  -- Set settings for the selected monitor
-n  -- Set settings for the selected node

Would it be possible to use the following item ordering: monitor, desktop and node consistently?
It would seem that everything is sorted alphabetically: is that intentional?",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,725,2017-10-11T11:17:37Z,2017-10-15T16:18:06Z,2017-10-15T16:18:06Z,CLOSED,False,364,16,1,None,Improve zsh completion,5,[],https://github.com/baskerville/bspwm/pull/725,None,5,https://github.com/baskerville/bspwm/pull/725#issuecomment-336592624,,"Would it be possible to use the following item ordering: monitor, desktop and node consistently?

Yes. By sorting it manually.

is that intentional?

If by international you mean whether ordering is influenced by locale than probably yes.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,725,2017-10-11T11:17:37Z,2017-10-15T16:18:06Z,2017-10-15T16:18:06Z,CLOSED,False,364,16,1,None,Improve zsh completion,5,[],https://github.com/baskerville/bspwm/pull/725,https://github.com/baskerville,6,https://github.com/baskerville/bspwm/pull/725#issuecomment-336722531,,Merged.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,732,2017-10-15T21:18:10Z,2017-10-16T08:26:27Z,2017-10-16T08:26:27Z,CLOSED,False,53,51,3,None,Fix segfault after running bspc subscribe -f report,2,[],https://github.com/baskerville/bspwm/pull/732,None,1,https://github.com/baskerville/bspwm/pull/732,"sb->stream is NULL in add_subscriber when called with --fifo option.
Also make first report message be taken into account for --countoption.","sb->stream is NULL in add_subscriber when called with --fifo option.
Also make first report message be taken into account for --countoption.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,732,2017-10-15T21:18:10Z,2017-10-16T08:26:27Z,2017-10-16T08:26:27Z,CLOSED,False,53,51,3,None,Fix segfault after running bspc subscribe -f report,2,[],https://github.com/baskerville/bspwm/pull/732,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/732#issuecomment-336815865,"sb->stream is NULL in add_subscriber when called with --fifo option.
Also make first report message be taken into account for --countoption.",Thanks!,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,733,2017-10-15T22:08:47Z,2017-10-16T08:28:07Z,2017-10-16T08:28:07Z,CLOSED,False,1,1,1,https://github.com/joaquingx,Updating xcb resource,1,[],https://github.com/baskerville/bspwm/pull/733,https://github.com/joaquingx,1,https://github.com/baskerville/bspwm/pull/733,This is the update of the last one.,This is the update of the last one.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,733,2017-10-15T22:08:47Z,2017-10-16T08:28:07Z,2017-10-16T08:28:07Z,CLOSED,False,1,1,1,https://github.com/joaquingx,Updating xcb resource,1,[],https://github.com/baskerville/bspwm/pull/733,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/733#issuecomment-336816282,This is the update of the last one.,Thanks.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,756,2018-01-07T09:30:18Z,2018-01-10T17:02:20Z,2018-01-10T17:02:20Z,CLOSED,False,9479,9479,29,None,Indentetion Fixment,3,[],https://github.com/baskerville/bspwm/pull/756,None,1,https://github.com/baskerville/bspwm/pull/756,"Files: bash_completion, zsh_completion, src/ (dir)
Changes: tabs re-writed as spaces","Files: bash_completion, zsh_completion, src/ (dir)
Changes: tabs re-writed as spaces",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,756,2018-01-07T09:30:18Z,2018-01-10T17:02:20Z,2018-01-10T17:02:20Z,CLOSED,False,9479,9479,29,None,Indentetion Fixment,3,[],https://github.com/baskerville/bspwm/pull/756,https://github.com/jvvv,2,https://github.com/baskerville/bspwm/pull/756#issuecomment-356018768,"Files: bash_completion, zsh_completion, src/ (dir)
Changes: tabs re-writed as spaces",These changes deviate from doc/CONTRIBUTING.md,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,762,2018-01-16T00:34:25Z,2018-01-16T16:35:20Z,2018-01-16T17:41:48Z,MERGED,True,30,33,1,None,Add follow option to zsh completions,1,[],https://github.com/baskerville/bspwm/pull/762,None,1,https://github.com/baskerville/bspwm/pull/762,,,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,770,2018-02-09T07:15:14Z,2018-02-09T11:36:01Z,2018-02-09T11:36:01Z,CLOSED,False,3,1,1,https://github.com/gyroninja,Allow Floating Sticky Nodes to Transfer,1,[],https://github.com/baskerville/bspwm/pull/770,https://github.com/gyroninja,1,https://github.com/baskerville/bspwm/pull/770,Fixes #769.,Fixes #769.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,777,2018-03-03T20:15:59Z,,2018-03-03T20:15:59Z,OPEN,False,242,27,8,https://github.com/badele,"Add a help feature to bspc command, Fix #776",1,[],https://github.com/baskerville/bspwm/pull/777,https://github.com/badele,1,https://github.com/baskerville/bspwm/pull/777,"Add help for command line
Example for:
> bspc 

bspc usage:
  node
  desktop
  monitor
  query
  wm
  rule
  subscribe
  config
  quit

> bspc desktop                                                                                                                                                                            

desktop usage:
  -f, --focus [DESKTOP_SEL]             Focus the selected or given desktop
  -a, --activate [DESKTOP_SEL]          Activate the selected or given desktop
  -m, --to-monitor MONITOR_SEL          Send the selected desktop to the given monitor
  -s, --swap DESKTOP_SEL                Swap the selected desktop with the given desktop
  -b, --bubble CYCLE_DIR                Bubble the selected desktop in the given direction
  -l, --layout CYCLE_DIR|monocle|tiled  Set or cycle the layout of the selected desktop
  -n, --rename <new_name>               Rename the selected desktop
  -r, --remove                          Remove the selected desktop
  -h,--help                             Help","Add help for command line
Example for:
> bspc 

bspc usage:
  node
  desktop
  monitor
  query
  wm
  rule
  subscribe
  config
  quit

> bspc desktop                                                                                                                                                                            

desktop usage:
  -f, --focus [DESKTOP_SEL]             Focus the selected or given desktop
  -a, --activate [DESKTOP_SEL]          Activate the selected or given desktop
  -m, --to-monitor MONITOR_SEL          Send the selected desktop to the given monitor
  -s, --swap DESKTOP_SEL                Swap the selected desktop with the given desktop
  -b, --bubble CYCLE_DIR                Bubble the selected desktop in the given direction
  -l, --layout CYCLE_DIR|monocle|tiled  Set or cycle the layout of the selected desktop
  -n, --rename <new_name>               Rename the selected desktop
  -r, --remove                          Remove the selected desktop
  -h,--help                             Help",True,"{'THUMBS_UP': ['https://github.com/Mauladen', 'https://github.com/lokesh-krishna', 'https://github.com/lulivi', 'https://github.com/sudo-nice', 'https://github.com/scatterfish', 'https://github.com/luleyleo', 'https://github.com/marioortizmanero', 'https://github.com/SeerLite', 'https://github.com/tr4wzified', 'https://github.com/jteneycke', 'https://github.com/exorcist365', 'https://github.com/robinp7720', 'https://github.com/IrishPrime']}"
baskerville/bspwm,https://github.com/baskerville/bspwm,792,2018-04-11T21:45:18Z,2019-01-20T09:15:41Z,2019-01-20T18:39:09Z,CLOSED,False,7,0,1,https://github.com/avindra,CHANGELOG.md: document 0.9.5 changes,1,[],https://github.com/baskerville/bspwm/pull/792,https://github.com/avindra,1,https://github.com/baskerville/bspwm/pull/792,,,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,801,2018-05-03T12:50:54Z,2018-08-28T18:34:53Z,2018-08-28T18:34:53Z,CLOSED,False,6,4,2,https://github.com/aelspire,Pass any input from presel window to window below,1,[],https://github.com/baskerville/bspwm/pull/801,https://github.com/aelspire,1,https://github.com/baskerville/bspwm/pull/801,"It's possible that this patch is something only I wanted, but maybe not.
This pull request make input pass through presel windows.
Use case:
I often use my file manager's right click menu to open terminal window in current directory. Sometimes after choosing presel direction I want to change directory or make something before opening terminal (I configured compton to make presel window almost transparent) but without this patch area below presel window doesn't receive input events.
This patch also make possible to preselect split direction and open file (sometimes it got hidden below presel window) from file manager in window on desired position.","It's possible that this patch is something only I wanted, but maybe not.
This pull request make input pass through presel windows.
Use case:
I often use my file manager's right click menu to open terminal window in current directory. Sometimes after choosing presel direction I want to change directory or make something before opening terminal (I configured compton to make presel window almost transparent) but without this patch area below presel window doesn't receive input events.
This patch also make possible to preselect split direction and open file (sometimes it got hidden below presel window) from file manager in window on desired position.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,801,2018-05-03T12:50:54Z,2018-08-28T18:34:53Z,2018-08-28T18:34:53Z,CLOSED,False,6,4,2,https://github.com/aelspire,Pass any input from presel window to window below,1,[],https://github.com/baskerville/bspwm/pull/801,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/801#issuecomment-416065552,"It's possible that this patch is something only I wanted, but maybe not.
This pull request make input pass through presel windows.
Use case:
I often use my file manager's right click menu to open terminal window in current directory. Sometimes after choosing presel direction I want to change directory or make something before opening terminal (I configured compton to make presel window almost transparent) but without this patch area below presel window doesn't receive input events.
This patch also make possible to preselect split direction and open file (sometimes it got hidden below presel window) from file manager in window on desired position.","Thanks, it makes sense.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,801,2018-05-03T12:50:54Z,2018-08-28T18:34:53Z,2018-08-28T18:34:53Z,CLOSED,False,6,4,2,https://github.com/aelspire,Pass any input from presel window to window below,1,[],https://github.com/baskerville/bspwm/pull/801,https://github.com/baskerville,3,https://github.com/baskerville/bspwm/pull/801#issuecomment-416694492,"It's possible that this patch is something only I wanted, but maybe not.
This pull request make input pass through presel windows.
Use case:
I often use my file manager's right click menu to open terminal window in current directory. Sometimes after choosing presel direction I want to change directory or make something before opening terminal (I configured compton to make presel window almost transparent) but without this patch area below presel window doesn't receive input events.
This patch also make possible to preselect split direction and open file (sometimes it got hidden below presel window) from file manager in window on desired position.",Merged.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,835,2018-08-27T22:59:10Z,2018-08-28T18:33:52Z,2018-08-28T18:33:52Z,CLOSED,False,19,14,1,None,Minor fixes to zsh completions,1,[],https://github.com/baskerville/bspwm/pull/835,None,1,https://github.com/baskerville/bspwm/pull/835,,,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,835,2018-08-27T22:59:10Z,2018-08-28T18:33:52Z,2018-08-28T18:33:52Z,CLOSED,False,19,14,1,None,Minor fixes to zsh completions,1,[],https://github.com/baskerville/bspwm/pull/835,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/835#issuecomment-416694199,,Thanks.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,843,2018-09-06T18:01:42Z,,2020-09-09T19:48:38Z,OPEN,False,92,17,17,https://github.com/githaff,Add support for 8 and 9 mouse buttons,7,[],https://github.com/baskerville/bspwm/pull/843,https://github.com/githaff,1,https://github.com/baskerville/bspwm/pull/843,"Some mouses have additional buttons which can be conveniently used for window
move/resize operations. Buttons 4-7 are skipped since they represent scroll
events.","Some mouses have additional buttons which can be conveniently used for window
move/resize operations. Buttons 4-7 are skipped since they represent scroll
events.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,843,2018-09-06T18:01:42Z,,2020-09-09T19:48:38Z,OPEN,False,92,17,17,https://github.com/githaff,Add support for 8 and 9 mouse buttons,7,[],https://github.com/baskerville/bspwm/pull/843,https://github.com/githaff,2,https://github.com/baskerville/bspwm/pull/843#issuecomment-419189312,"Some mouses have additional buttons which can be conveniently used for window
move/resize operations. Buttons 4-7 are skipped since they represent scroll
events.","The end game is to use mouse buttons 8 and 9 to resize and move windows without the need of touching a keyboard. So unlike buttons 1-3, these should work without the modifier.
In my repo I have disabled need for a modifier for pointer grab on 8-9 buttons. But that seems hacky and contradicting existing documentation. What would be the best approach to implement it?",True,{'THUMBS_UP': ['https://github.com/zezic']}
baskerville/bspwm,https://github.com/baskerville/bspwm,852,2018-09-23T11:38:45Z,2018-11-18T21:07:06Z,2018-11-18T21:07:06Z,CLOSED,False,1,1,1,https://github.com/amosbird,stick node might have null desktop (moved),1,[],https://github.com/baskerville/bspwm/pull/852,https://github.com/amosbird,1,https://github.com/baskerville/bspwm/pull/852,"when desktop is moved to another moniter, stick node's desktop becomes null and crashes bspwm.","when desktop is moved to another moniter, stick node's desktop becomes null and crashes bspwm.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,854,2018-09-27T02:03:49Z,2018-11-19T14:14:44Z,2018-11-19T14:14:44Z,CLOSED,False,43,28,11,https://github.com/amosbird,Avoid endless loop.,2,[],https://github.com/baskerville/bspwm/pull/854,https://github.com/amosbird,1,https://github.com/baskerville/bspwm/pull/854,,,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,854,2018-09-27T02:03:49Z,2018-11-19T14:14:44Z,2018-11-19T14:14:44Z,CLOSED,False,43,28,11,https://github.com/amosbird,Avoid endless loop.,2,[],https://github.com/baskerville/bspwm/pull/854,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/854#issuecomment-424983814,,"Thanks, I would be great if you could provide reproduce steps to trigger the infinite loop.
I'd like to cure the source of the problem rather than the late side effects.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,854,2018-09-27T02:03:49Z,2018-11-19T14:14:44Z,2018-11-19T14:14:44Z,CLOSED,False,43,28,11,https://github.com/amosbird,Avoid endless loop.,2,[],https://github.com/baskerville/bspwm/pull/854,https://github.com/amosbird,3,https://github.com/baskerville/bspwm/pull/854#issuecomment-424995929,,"@baskerville To reproduce this, two monitors need to be setup. When only one is activated with a floating  node on current desktop, moving the entire monitor's desktops to the other monitor triggers this. It's a bit hard for me to describe, you might be interested in looking at some of my config files. Cheers!
https://github.com/amosbird/serverconfig/blob/master/scripts/monitormove#L1
https://github.com/amosbird/serverconfig/blob/master/.config/bspwm/bspwmrc#L1
https://github.com/amosbird/serverconfig/blob/master/.config/sxhkd/sxhkdrc#L51",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,854,2018-09-27T02:03:49Z,2018-11-19T14:14:44Z,2018-11-19T14:14:44Z,CLOSED,False,43,28,11,https://github.com/amosbird,Avoid endless loop.,2,[],https://github.com/baskerville/bspwm/pull/854,https://github.com/alexozer,4,https://github.com/baskerville/bspwm/pull/854#issuecomment-425746749,,"It should be noted though that, at least in my experience, it is possible to experience this with only one monitor.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,854,2018-09-27T02:03:49Z,2018-11-19T14:14:44Z,2018-11-19T14:14:44Z,CLOSED,False,43,28,11,https://github.com/amosbird,Avoid endless loop.,2,[],https://github.com/baskerville/bspwm/pull/854,https://github.com/alexozer,5,https://github.com/baskerville/bspwm/pull/854#issuecomment-427595177,,"Unfortunately, although it took 1-2 weeks for it to occur, I just experienced a freeze with this patch and a single monitor.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,854,2018-09-27T02:03:49Z,2018-11-19T14:14:44Z,2018-11-19T14:14:44Z,CLOSED,False,43,28,11,https://github.com/amosbird,Avoid endless loop.,2,[],https://github.com/baskerville/bspwm/pull/854,https://github.com/baskerville,6,https://github.com/baskerville/bspwm/pull/854#issuecomment-432986500,,"I can't reproduce this.
The best here would be to provide a state that can be loaded with bspc wm -l and a series of bspc calls to trigger the crash.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,854,2018-09-27T02:03:49Z,2018-11-19T14:14:44Z,2018-11-19T14:14:44Z,CLOSED,False,43,28,11,https://github.com/amosbird,Avoid endless loop.,2,[],https://github.com/baskerville/bspwm/pull/854,https://github.com/MyNameIsCosmo,7,https://github.com/baskerville/bspwm/pull/854#issuecomment-439750227,,"It seems that this relates to #852.
Can anyone confirm if this is fixed by 875defe?",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,856,2018-10-06T16:11:22Z,2019-07-19T07:48:23Z,2020-10-24T11:04:16Z,CLOSED,False,156,0,10,https://github.com/Javyre,New Feature: Rounded Corners,1,[],https://github.com/baskerville/bspwm/pull/856,https://github.com/Javyre,1,https://github.com/baskerville/bspwm/pull/856,"Add rounded corners to windows
New config option: border_radius
Issue: #848
Known bugs: Firefox download dialog box glitch
TODO:

Need review of added config option (I copied it from the border width option. This might not be appropriate)
Should there be rounded corners in non-gapless monocle?

unresolved conversations:
#856 (comment)
#856 (comment)","Add rounded corners to windows
New config option: border_radius
Issue: #848
Known bugs: Firefox download dialog box glitch
TODO:

Need review of added config option (I copied it from the border width option. This might not be appropriate)
Should there be rounded corners in non-gapless monocle?

unresolved conversations:
#856 (comment)
#856 (comment)",True,"{'THUMBS_UP': ['https://github.com/digicannon', 'https://github.com/EmmanuelPerezP', 'https://github.com/jakibaki', 'https://github.com/gargakshit', 'https://github.com/raan-kun', 'https://github.com/Nimble-Jack', 'https://github.com/aRmanNM', 'https://github.com/alureon', 'https://github.com/n00bady', 'https://github.com/re1', 'https://github.com/videogame-hacker', 'https://github.com/Epictek', 'https://github.com/werthen', 'https://github.com/fr3fou', 'https://github.com/OXiDE-dev', 'https://github.com/alecive', 'https://github.com/different55', 'https://github.com/TheGamingBarrel', 'https://github.com/moukle', 'https://github.com/subnomo', 'https://github.com/scatterfish', 'https://github.com/danishprakash', 'https://github.com/JBouron', 'https://github.com/gnaqvi', 'https://github.com/MattTreadwell', 'https://github.com/etienne-napoleone', 'https://github.com/iagosrodrigues', 'https://github.com/metinUr', 'https://github.com/aesophor', 'https://github.com/buzuck', 'https://github.com/zortax', 'https://github.com/lachlantula', 'https://github.com/benlongo', 'https://github.com/SidharthArya'], 'HOORAY': ['https://github.com/sebastiencs', 'https://github.com/gargakshit', 'https://github.com/DarkAce65', 'https://github.com/manilarome', 'https://github.com/janzak214', 'https://github.com/valentinritz', 'https://github.com/TheGamingBarrel', 'https://github.com/japorized', 'https://github.com/werthen', 'https://github.com/subnomo', 'https://github.com/scatterfish', 'https://github.com/etienne-napoleone', 'https://github.com/fr3fou', 'https://github.com/buzuck', 'https://github.com/lachlantula', 'https://github.com/SidharthArya'], 'LAUGH': ['https://github.com/gargakshit', 'https://github.com/TheGamingBarrel', 'https://github.com/werthen', 'https://github.com/subnomo', 'https://github.com/scatterfish', 'https://github.com/fr3fou', 'https://github.com/lachlantula', 'https://github.com/SidharthArya'], 'HEART': ['https://github.com/gargakshit', 'https://github.com/Epictek', 'https://github.com/werthen', 'https://github.com/OXiDE-dev', 'https://github.com/matz-e', 'https://github.com/TheGamingBarrel', 'https://github.com/cpixl', 'https://github.com/subnomo', 'https://github.com/scatterfish', 'https://github.com/donovanglover', 'https://github.com/etienne-napoleone', 'https://github.com/neeasade', 'https://github.com/fr3fou', 'https://github.com/lachlantula', 'https://github.com/NathanHB', 'https://github.com/SidharthArya', 'https://github.com/dansdantas']}"
baskerville/bspwm,https://github.com/baskerville/bspwm,856,2018-10-06T16:11:22Z,2019-07-19T07:48:23Z,2020-10-24T11:04:16Z,CLOSED,False,156,0,10,https://github.com/Javyre,New Feature: Rounded Corners,1,[],https://github.com/baskerville/bspwm/pull/856,https://github.com/ascandella,2,https://github.com/baskerville/bspwm/pull/856#issuecomment-431578794,"Add rounded corners to windows
New config option: border_radius
Issue: #848
Known bugs: Firefox download dialog box glitch
TODO:

Need review of added config option (I copied it from the border width option. This might not be appropriate)
Should there be rounded corners in non-gapless monocle?

unresolved conversations:
#856 (comment)
#856 (comment)",Just installed your branch and things are working for me so far. Do you need any help testing?,True,{'THUMBS_UP': ['https://github.com/metinUr']}
baskerville/bspwm,https://github.com/baskerville/bspwm,856,2018-10-06T16:11:22Z,2019-07-19T07:48:23Z,2020-10-24T11:04:16Z,CLOSED,False,156,0,10,https://github.com/Javyre,New Feature: Rounded Corners,1,[],https://github.com/baskerville/bspwm/pull/856,https://github.com/Javyre,3,https://github.com/baskerville/bspwm/pull/856#issuecomment-431594506,"Add rounded corners to windows
New config option: border_radius
Issue: #848
Known bugs: Firefox download dialog box glitch
TODO:

Need review of added config option (I copied it from the border width option. This might not be appropriate)
Should there be rounded corners in non-gapless monocle?

unresolved conversations:
#856 (comment)
#856 (comment)","You can see if the Firefox issue I linked to is present for you (probably is)
You can also test setting border_radius on individual windows and other more specific scopes if you're familiar with bspc config as I have tested that very little (but so far everything seems to work)
It should have the same capabilities as or setting border_width
And what's your opinion on

Should there be rounded corners in non-gapless monocle?

Thank you
EDIT: I just saw your comment on the issue",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,856,2018-10-06T16:11:22Z,2019-07-19T07:48:23Z,2020-10-24T11:04:16Z,CLOSED,False,156,0,10,https://github.com/Javyre,New Feature: Rounded Corners,1,[],https://github.com/baskerville/bspwm/pull/856,https://github.com/ascandella,4,https://github.com/baskerville/bspwm/pull/856#issuecomment-431594960,"Add rounded corners to windows
New config option: border_radius
Issue: #848
Known bugs: Firefox download dialog box glitch
TODO:

Need review of added config option (I copied it from the border width option. This might not be appropriate)
Should there be rounded corners in non-gapless monocle?

unresolved conversations:
#856 (comment)
#856 (comment)","Should there be rounded corners in non-gapless monocle?

My personal would be ""no"" by default. In monocle, I like to see rectangular edges (as you can see in video, my polybar is not rounded either). But I'm just like, some guy on the internet with an opinion.
Will get to testing the rest of your scenarious soon.
Thanks again for the work. <3 bspwm",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,856,2018-10-06T16:11:22Z,2019-07-19T07:48:23Z,2020-10-24T11:04:16Z,CLOSED,False,156,0,10,https://github.com/Javyre,New Feature: Rounded Corners,1,[],https://github.com/baskerville/bspwm/pull/856,https://github.com/baskerville,5,https://github.com/baskerville/bspwm/pull/856#issuecomment-431611465,"Add rounded corners to windows
New config option: border_radius
Issue: #848
Known bugs: Firefox download dialog box glitch
TODO:

Need review of added config option (I copied it from the border width option. This might not be appropriate)
Should there be rounded corners in non-gapless monocle?

unresolved conversations:
#856 (comment)
#856 (comment)",Please rebase and squash those commits.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,856,2018-10-06T16:11:22Z,2019-07-19T07:48:23Z,2020-10-24T11:04:16Z,CLOSED,False,156,0,10,https://github.com/Javyre,New Feature: Rounded Corners,1,[],https://github.com/baskerville/bspwm/pull/856,https://github.com/Javyre,6,https://github.com/baskerville/bspwm/pull/856#issuecomment-431616692,"Add rounded corners to windows
New config option: border_radius
Issue: #848
Known bugs: Firefox download dialog box glitch
TODO:

Need review of added config option (I copied it from the border width option. This might not be appropriate)
Should there be rounded corners in non-gapless monocle?

unresolved conversations:
#856 (comment)
#856 (comment)",Done.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,856,2018-10-06T16:11:22Z,2019-07-19T07:48:23Z,2020-10-24T11:04:16Z,CLOSED,False,156,0,10,https://github.com/Javyre,New Feature: Rounded Corners,1,[],https://github.com/baskerville/bspwm/pull/856,https://github.com/dab,7,https://github.com/baskerville/bspwm/pull/856#issuecomment-431707330,"Add rounded corners to windows
New config option: border_radius
Issue: #848
Known bugs: Firefox download dialog box glitch
TODO:

Need review of added config option (I copied it from the border width option. This might not be appropriate)
Should there be rounded corners in non-gapless monocle?

unresolved conversations:
#856 (comment)
#856 (comment)","Thanks for this PR, testing it locally and it looks good in most of the cases. However in Chrome corners are not rounded, please check screenshots with Chrome and with Qutebrowser.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,856,2018-10-06T16:11:22Z,2019-07-19T07:48:23Z,2020-10-24T11:04:16Z,CLOSED,False,156,0,10,https://github.com/Javyre,New Feature: Rounded Corners,1,[],https://github.com/baskerville/bspwm/pull/856,https://github.com/Javyre,8,https://github.com/baskerville/bspwm/pull/856#issuecomment-431713893,"Add rounded corners to windows
New config option: border_radius
Issue: #848
Known bugs: Firefox download dialog box glitch
TODO:

Need review of added config option (I copied it from the border width option. This might not be appropriate)
Should there be rounded corners in non-gapless monocle?

unresolved conversations:
#856 (comment)
#856 (comment)","@dab I'm having no issues with qutebrowser and I don't know what's wrong in your scrot.
I don't use chrome at all so I hadn't noticed the issues with it.
It seems that it has this dark outline around the window

And when I click on the middle maximize button, it stops having the border but then has no rounded corners...

I'm confused and do not know where to look...
Is the dark border a normal thing for chrome? (I installed chromium)
@sectioneight I'm a bit busy at the moment, do you mind investigating this a bit? I'll be happy to help you understand my patch if it is necessary",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,856,2018-10-06T16:11:22Z,2019-07-19T07:48:23Z,2020-10-24T11:04:16Z,CLOSED,False,156,0,10,https://github.com/Javyre,New Feature: Rounded Corners,1,[],https://github.com/baskerville/bspwm/pull/856,https://github.com/phisch,9,https://github.com/baskerville/bspwm/pull/856#issuecomment-431811207,"Add rounded corners to windows
New config option: border_radius
Issue: #848
Known bugs: Firefox download dialog box glitch
TODO:

Need review of added config option (I copied it from the border width option. This might not be appropriate)
Should there be rounded corners in non-gapless monocle?

unresolved conversations:
#856 (comment)
#856 (comment)","@Javyre chrome is rendering their own border and border radius. Try right-clicking the title bar and select Use system title bars and borders, or enable it in your settings under appearance.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,856,2018-10-06T16:11:22Z,2019-07-19T07:48:23Z,2020-10-24T11:04:16Z,CLOSED,False,156,0,10,https://github.com/Javyre,New Feature: Rounded Corners,1,[],https://github.com/baskerville/bspwm/pull/856,https://github.com/Javyre,10,https://github.com/baskerville/bspwm/pull/856#issuecomment-431816464,"Add rounded corners to windows
New config option: border_radius
Issue: #848
Known bugs: Firefox download dialog box glitch
TODO:

Need review of added config option (I copied it from the border width option. This might not be appropriate)
Should there be rounded corners in non-gapless monocle?

unresolved conversations:
#856 (comment)
#856 (comment)","@phisch scrot with option set
It seems to work but with the top corners not transparent the corners are not transparent... (I do have my compositor running)
(btw sry for my duplicate comments. GH was down and glitched yesterday)",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,856,2018-10-06T16:11:22Z,2019-07-19T07:48:23Z,2020-10-24T11:04:16Z,CLOSED,False,156,0,10,https://github.com/Javyre,New Feature: Rounded Corners,1,[],https://github.com/baskerville/bspwm/pull/856,https://github.com/phisch,11,https://github.com/baskerville/bspwm/pull/856#issuecomment-431825168,"Add rounded corners to windows
New config option: border_radius
Issue: #848
Known bugs: Firefox download dialog box glitch
TODO:

Need review of added config option (I copied it from the border width option. This might not be appropriate)
Should there be rounded corners in non-gapless monocle?

unresolved conversations:
#856 (comment)
#856 (comment)",The bottom corners are also not transparent. GitHub is still having some issues btw. https://status.github.com/messages,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,856,2018-10-06T16:11:22Z,2019-07-19T07:48:23Z,2020-10-24T11:04:16Z,CLOSED,False,156,0,10,https://github.com/Javyre,New Feature: Rounded Corners,1,[],https://github.com/baskerville/bspwm/pull/856,https://github.com/Javyre,12,https://github.com/baskerville/bspwm/pull/856#issuecomment-431831209,"Add rounded corners to windows
New config option: border_radius
Issue: #848
Known bugs: Firefox download dialog box glitch
TODO:

Need review of added config option (I copied it from the border width option. This might not be appropriate)
Should there be rounded corners in non-gapless monocle?

unresolved conversations:
#856 (comment)
#856 (comment)",woops completely missed that thank you,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,856,2018-10-06T16:11:22Z,2019-07-19T07:48:23Z,2020-10-24T11:04:16Z,CLOSED,False,156,0,10,https://github.com/Javyre,New Feature: Rounded Corners,1,[],https://github.com/baskerville/bspwm/pull/856,https://github.com/fr3fou,13,https://github.com/baskerville/bspwm/pull/856#issuecomment-451410407,"Add rounded corners to windows
New config option: border_radius
Issue: #848
Known bugs: Firefox download dialog box glitch
TODO:

Need review of added config option (I copied it from the border width option. This might not be appropriate)
Should there be rounded corners in non-gapless monocle?

unresolved conversations:
#856 (comment)
#856 (comment)",Any news?,True,"{'THUMBS_UP': ['https://github.com/Keitio', 'https://github.com/ShayBox', 'https://github.com/Craio', 'https://github.com/davidv171']}"
baskerville/bspwm,https://github.com/baskerville/bspwm,856,2018-10-06T16:11:22Z,2019-07-19T07:48:23Z,2020-10-24T11:04:16Z,CLOSED,False,156,0,10,https://github.com/Javyre,New Feature: Rounded Corners,1,[],https://github.com/baskerville/bspwm/pull/856,https://github.com/Javyre,14,https://github.com/baskerville/bspwm/pull/856#issuecomment-451710148,"Add rounded corners to windows
New config option: border_radius
Issue: #848
Known bugs: Firefox download dialog box glitch
TODO:

Need review of added config option (I copied it from the border width option. This might not be appropriate)
Should there be rounded corners in non-gapless monocle?

unresolved conversations:
#856 (comment)
#856 (comment)","@fr3fou The main issue atm as I understand it is that the current patch clips the contents of the window to make the rounded corners.
I'm a bit busy at the moment with school so I don't have too much time for playing around with the different possibilities of how this feature could be made to work in a way that satisfies both me and @baskerville...
I will update the patch with the other code touch ups when I get the time.
PS: I updated the top comment if anyone wants to continue the conversation or help with the PR.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,856,2018-10-06T16:11:22Z,2019-07-19T07:48:23Z,2020-10-24T11:04:16Z,CLOSED,False,156,0,10,https://github.com/Javyre,New Feature: Rounded Corners,1,[],https://github.com/baskerville/bspwm/pull/856,https://github.com/ShayBox,15,https://github.com/baskerville/bspwm/pull/856#issuecomment-451723208,"Add rounded corners to windows
New config option: border_radius
Issue: #848
Known bugs: Firefox download dialog box glitch
TODO:

Need review of added config option (I copied it from the border width option. This might not be appropriate)
Should there be rounded corners in non-gapless monocle?

unresolved conversations:
#856 (comment)
#856 (comment)","That's how I assumed this would work, if it just adds a border and rounds that it's not really what I want, I want rounded corners without borders, it just removes a little bit of the window content, at-least that's what I want, i'm sure some people want the borders to be rounded instead as well.",True,"{'THUMBS_UP': ['https://github.com/eti0', 'https://github.com/r2binx', 'https://github.com/Omegastick', 'https://github.com/iacobucci', 'https://github.com/Blakeinstein']}"
baskerville/bspwm,https://github.com/baskerville/bspwm,856,2018-10-06T16:11:22Z,2019-07-19T07:48:23Z,2020-10-24T11:04:16Z,CLOSED,False,156,0,10,https://github.com/Javyre,New Feature: Rounded Corners,1,[],https://github.com/baskerville/bspwm/pull/856,https://github.com/metinUr,16,https://github.com/baskerville/bspwm/pull/856#issuecomment-455252187,"Add rounded corners to windows
New config option: border_radius
Issue: #848
Known bugs: Firefox download dialog box glitch
TODO:

Need review of added config option (I copied it from the border width option. This might not be appropriate)
Should there be rounded corners in non-gapless monocle?

unresolved conversations:
#856 (comment)
#856 (comment)",Is there any expected release date?,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,856,2018-10-06T16:11:22Z,2019-07-19T07:48:23Z,2020-10-24T11:04:16Z,CLOSED,False,156,0,10,https://github.com/Javyre,New Feature: Rounded Corners,1,[],https://github.com/baskerville/bspwm/pull/856,https://github.com/MimaHakurei,17,https://github.com/baskerville/bspwm/pull/856#issuecomment-479091948,"Add rounded corners to windows
New config option: border_radius
Issue: #848
Known bugs: Firefox download dialog box glitch
TODO:

Need review of added config option (I copied it from the border width option. This might not be appropriate)
Should there be rounded corners in non-gapless monocle?

unresolved conversations:
#856 (comment)
#856 (comment)","On more extreme curvature values, the straight-edges of the rectangle and the rounded corners meet in a harsh fashion. Sometimes, a distinct ""pointed edge"" along the joint is visible like in this image:

Assuming that speed or complexity isn't a limiting-factor, this could be addressed with the introduction of a squircle or superellipse algorithm for rounding:

Additional Information: https://hackernoon.com/apples-icons-have-that-shape-for-a-very-good-reason-720d4e7c8a14",True,"{'THUMBS_UP': ['https://github.com/Zeldinkskya', 'https://github.com/arskiy', 'https://github.com/bricewge']}"
baskerville/bspwm,https://github.com/baskerville/bspwm,856,2018-10-06T16:11:22Z,2019-07-19T07:48:23Z,2020-10-24T11:04:16Z,CLOSED,False,156,0,10,https://github.com/Javyre,New Feature: Rounded Corners,1,[],https://github.com/baskerville/bspwm/pull/856,https://github.com/nebulaw2081d,18,https://github.com/baskerville/bspwm/pull/856#issuecomment-507065634,"Add rounded corners to windows
New config option: border_radius
Issue: #848
Known bugs: Firefox download dialog box glitch
TODO:

Need review of added config option (I copied it from the border width option. This might not be appropriate)
Should there be rounded corners in non-gapless monocle?

unresolved conversations:
#856 (comment)
#856 (comment)","What is the status on this? I would like to see it get merged into a ""dev"" branch, so it could gain more exposure. I think putting some kind of warning on incompatibilities when it is launched would be ok before releasing the ""dev"" build.",True,"{'THUMBS_UP': ['https://github.com/lachlantula', 'https://github.com/Matrix89', 'https://github.com/seebye', 'https://github.com/juacq97', 'https://github.com/benlongo', 'https://github.com/panaman67']}"
baskerville/bspwm,https://github.com/baskerville/bspwm,856,2018-10-06T16:11:22Z,2019-07-19T07:48:23Z,2020-10-24T11:04:16Z,CLOSED,False,156,0,10,https://github.com/Javyre,New Feature: Rounded Corners,1,[],https://github.com/baskerville/bspwm/pull/856,https://github.com/baskerville,19,https://github.com/baskerville/bspwm/pull/856#issuecomment-513130349,"Add rounded corners to windows
New config option: border_radius
Issue: #848
Known bugs: Firefox download dialog box glitch
TODO:

Need review of added config option (I copied it from the border width option. This might not be appropriate)
Should there be rounded corners in non-gapless monocle?

unresolved conversations:
#856 (comment)
#856 (comment)",I'm going to follow the advice of the only knowledgeable person who was dragged here and close this pull request.,True,"{'THUMBS_UP': ['https://github.com/cglogic', 'https://github.com/MyNameIsCosmo'], 'CONFUSED': ['https://github.com/subnomo', 'https://github.com/33kk', 'https://github.com/Blakeinstein']}"
baskerville/bspwm,https://github.com/baskerville/bspwm,856,2018-10-06T16:11:22Z,2019-07-19T07:48:23Z,2020-10-24T11:04:16Z,CLOSED,False,156,0,10,https://github.com/Javyre,New Feature: Rounded Corners,1,[],https://github.com/baskerville/bspwm/pull/856,https://github.com/sambazley,20,https://github.com/baskerville/bspwm/pull/856#issuecomment-513212957,"Add rounded corners to windows
New config option: border_radius
Issue: #848
Known bugs: Firefox download dialog box glitch
TODO:

Need review of added config option (I copied it from the border width option. This might not be appropriate)
Should there be rounded corners in non-gapless monocle?

unresolved conversations:
#856 (comment)
#856 (comment)","What's the reason for this never being merged? Because it crops the window contents? If you don't want to lose the contents of the window, set the radius to a more reasonable number. (eg ~5 rather than 20+) I'm sure those few pixels in the corners aren't so important that you need to add an extra border around the window.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,856,2018-10-06T16:11:22Z,2019-07-19T07:48:23Z,2020-10-24T11:04:16Z,CLOSED,False,156,0,10,https://github.com/Javyre,New Feature: Rounded Corners,1,[],https://github.com/baskerville/bspwm/pull/856,https://github.com/nebulaw2081d,21,https://github.com/baskerville/bspwm/pull/856#issuecomment-513229499,"Add rounded corners to windows
New config option: border_radius
Issue: #848
Known bugs: Firefox download dialog box glitch
TODO:

Need review of added config option (I copied it from the border width option. This might not be appropriate)
Should there be rounded corners in non-gapless monocle?

unresolved conversations:
#856 (comment)
#856 (comment)","@sambazley The maintainer never gave a clear reason, but I'm not going to be the one to question his judegement.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,856,2018-10-06T16:11:22Z,2019-07-19T07:48:23Z,2020-10-24T11:04:16Z,CLOSED,False,156,0,10,https://github.com/Javyre,New Feature: Rounded Corners,1,[],https://github.com/baskerville/bspwm/pull/856,https://github.com/MyNameIsCosmo,22,https://github.com/baskerville/bspwm/pull/856#issuecomment-513364480,"Add rounded corners to windows
New config option: border_radius
Issue: #848
Known bugs: Firefox download dialog box glitch
TODO:

Need review of added config option (I copied it from the border width option. This might not be appropriate)
Should there be rounded corners in non-gapless monocle?

unresolved conversations:
#856 (comment)
#856 (comment)","There are comments inline in the code.
#856 (comment)
https://github.com/baskerville/bspwm/pull/856/files/7b0cf3dd2624cf2c390e8f823cdede929a9bb721
Baskerville did not give any hint that this is an unwanted feature, so I'd say take a swing at some of the discussions in inline comments, fork the code, rebase onto master, and come back with a patchset that can be reviewed.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,856,2018-10-06T16:11:22Z,2019-07-19T07:48:23Z,2020-10-24T11:04:16Z,CLOSED,False,156,0,10,https://github.com/Javyre,New Feature: Rounded Corners,1,[],https://github.com/baskerville/bspwm/pull/856,https://github.com/Javyre,23,https://github.com/baskerville/bspwm/pull/856#issuecomment-513433546,"Add rounded corners to windows
New config option: border_radius
Issue: #848
Known bugs: Firefox download dialog box glitch
TODO:

Need review of added config option (I copied it from the border width option. This might not be appropriate)
Should there be rounded corners in non-gapless monocle?

unresolved conversations:
#856 (comment)
#856 (comment)","@baskerville

I'm going to follow the advice of the only knowledgeable person who was dragged here and close this pull request.

Who are you referring to?
I suggested a possible solution and got no answer for eight months.
I personally don't think clipping is a real issue unless you are using this feature for things other than what it was intended for. But nonetheless, it's useless to act mad without first acknowledging the proposed solution.
I've been busy with other things as of late so if someone wants to take a shot tat implementing what I have described that would be great.
The develop branch on my repository is actually for two different additions (that's why you might get weird fullscreen glitches on develop). To try out the rounded corners you should use the round_corners branch",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,856,2018-10-06T16:11:22Z,2019-07-19T07:48:23Z,2020-10-24T11:04:16Z,CLOSED,False,156,0,10,https://github.com/Javyre,New Feature: Rounded Corners,1,[],https://github.com/baskerville/bspwm/pull/856,https://github.com/hackedWifi,24,https://github.com/baskerville/bspwm/pull/856#issuecomment-577051701,"Add rounded corners to windows
New config option: border_radius
Issue: #848
Known bugs: Firefox download dialog box glitch
TODO:

Need review of added config option (I copied it from the border width option. This might not be appropriate)
Should there be rounded corners in non-gapless monocle?

unresolved conversations:
#856 (comment)
#856 (comment)","@dylanaraps has a working BSPWM with rounded corners
https://github.com/dylanaraps/bspwm",True,"{'THUMBS_UP': ['https://github.com/subnomo', 'https://github.com/ShaneEverittM']}"
baskerville/bspwm,https://github.com/baskerville/bspwm,856,2018-10-06T16:11:22Z,2019-07-19T07:48:23Z,2020-10-24T11:04:16Z,CLOSED,False,156,0,10,https://github.com/Javyre,New Feature: Rounded Corners,1,[],https://github.com/baskerville/bspwm/pull/856,https://github.com/j-james,25,https://github.com/baskerville/bspwm/pull/856#issuecomment-713659650,"Add rounded corners to windows
New config option: border_radius
Issue: #848
Known bugs: Firefox download dialog box glitch
TODO:

Need review of added config option (I copied it from the border width option. This might not be appropriate)
Should there be rounded corners in non-gapless monocle?

unresolved conversations:
#856 (comment)
#856 (comment)","@dylanaraps 's patch fails on newer / current versions of BSPWM, so I've put together a new version here:
https://github.com/j-james/bspwm-rounded-corners",True,{'LAUGH': ['https://github.com/dylanaraps']}
baskerville/bspwm,https://github.com/baskerville/bspwm,856,2018-10-06T16:11:22Z,2019-07-19T07:48:23Z,2020-10-24T11:04:16Z,CLOSED,False,156,0,10,https://github.com/Javyre,New Feature: Rounded Corners,1,[],https://github.com/baskerville/bspwm/pull/856,https://github.com/phuhl,26,https://github.com/baskerville/bspwm/pull/856#issuecomment-715898912,"Add rounded corners to windows
New config option: border_radius
Issue: #848
Known bugs: Firefox download dialog box glitch
TODO:

Need review of added config option (I copied it from the border width option. This might not be appropriate)
Should there be rounded corners in non-gapless monocle?

unresolved conversations:
#856 (comment)
#856 (comment)","Yeah, forgot to post it here, but I have a fork, too: https://github.com/phuhl/bspwm-rounded",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,880,2018-11-19T14:23:21Z,,2021-09-05T14:23:04Z,OPEN,False,8,2,3,https://github.com/amosbird,Don't grab pointer when not in float mode,1,[],https://github.com/baskerville/bspwm/pull/880,https://github.com/amosbird,1,https://github.com/baskerville/bspwm/pull/880,"This makes modifier-click avaialble in tiled windows, especially for browsers","This makes modifier-click avaialble in tiled windows, especially for browsers",True,{'THUMBS_DOWN': ['https://github.com/emanuele6']}
baskerville/bspwm,https://github.com/baskerville/bspwm,883,2018-11-23T14:53:04Z,2019-01-27T09:51:21Z,2019-01-27T09:51:21Z,CLOSED,False,18,4,9,https://github.com/sjtio,Add setting: no_presel_feedback,2,[],https://github.com/baskerville/bspwm/pull/883,https://github.com/sjtio,1,https://github.com/baskerville/bspwm/pull/883,Adds a setting called no_presel_feedback which prevents drawing preselection feedback. Defaults to false as most settings do but it may be nicer to name the setting presel_feedback and have it default to true.,Adds a setting called no_presel_feedback which prevents drawing preselection feedback. Defaults to false as most settings do but it may be nicer to name the setting presel_feedback and have it default to true.,True,{'THUMBS_UP': ['https://github.com/MyNameIsCosmo']}
baskerville/bspwm,https://github.com/baskerville/bspwm,883,2018-11-23T14:53:04Z,2019-01-27T09:51:21Z,2019-01-27T09:51:21Z,CLOSED,False,18,4,9,https://github.com/sjtio,Add setting: no_presel_feedback,2,[],https://github.com/baskerville/bspwm/pull/883,https://github.com/MyNameIsCosmo,2,https://github.com/baskerville/bspwm/pull/883#issuecomment-457459438,Adds a setting called no_presel_feedback which prevents drawing preselection feedback. Defaults to false as most settings do but it may be nicer to name the setting presel_feedback and have it default to true.,Is there anything holding this back from being merged?,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,883,2018-11-23T14:53:04Z,2019-01-27T09:51:21Z,2019-01-27T09:51:21Z,CLOSED,False,18,4,9,https://github.com/sjtio,Add setting: no_presel_feedback,2,[],https://github.com/baskerville/bspwm/pull/883,https://github.com/baskerville,3,https://github.com/baskerville/bspwm/pull/883#issuecomment-457506664,Adds a setting called no_presel_feedback which prevents drawing preselection feedback. Defaults to false as most settings do but it may be nicer to name the setting presel_feedback and have it default to true.,"@sjtio Yes, presel_feedback is better.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,883,2018-11-23T14:53:04Z,2019-01-27T09:51:21Z,2019-01-27T09:51:21Z,CLOSED,False,18,4,9,https://github.com/sjtio,Add setting: no_presel_feedback,2,[],https://github.com/baskerville/bspwm/pull/883,https://github.com/sjtio,4,https://github.com/baskerville/bspwm/pull/883#issuecomment-457847492,Adds a setting called no_presel_feedback which prevents drawing preselection feedback. Defaults to false as most settings do but it may be nicer to name the setting presel_feedback and have it default to true.,Done,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,883,2018-11-23T14:53:04Z,2019-01-27T09:51:21Z,2019-01-27T09:51:21Z,CLOSED,False,18,4,9,https://github.com/sjtio,Add setting: no_presel_feedback,2,[],https://github.com/baskerville/bspwm/pull/883,https://github.com/baskerville,5,https://github.com/baskerville/bspwm/pull/883#issuecomment-457849701,Adds a setting called no_presel_feedback which prevents drawing preselection feedback. Defaults to false as most settings do but it may be nicer to name the setting presel_feedback and have it default to true.,Please rebase.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,883,2018-11-23T14:53:04Z,2019-01-27T09:51:21Z,2019-01-27T09:51:21Z,CLOSED,False,18,4,9,https://github.com/sjtio,Add setting: no_presel_feedback,2,[],https://github.com/baskerville/bspwm/pull/883,https://github.com/sjtio,6,https://github.com/baskerville/bspwm/pull/883#issuecomment-457877757,Adds a setting called no_presel_feedback which prevents drawing preselection feedback. Defaults to false as most settings do but it may be nicer to name the setting presel_feedback and have it default to true.,Done,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,883,2018-11-23T14:53:04Z,2019-01-27T09:51:21Z,2019-01-27T09:51:21Z,CLOSED,False,18,4,9,https://github.com/sjtio,Add setting: no_presel_feedback,2,[],https://github.com/baskerville/bspwm/pull/883,https://github.com/baskerville,7,https://github.com/baskerville/bspwm/pull/883#issuecomment-457903806,Adds a setting called no_presel_feedback which prevents drawing preselection feedback. Defaults to false as most settings do but it may be nicer to name the setting presel_feedback and have it default to true.,Thanks.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,895,2018-12-27T03:22:47Z,2019-01-31T19:33:14Z,2019-01-31T19:33:14Z,CLOSED,False,3,0,1,https://github.com/gandalf3,Attempt to keep pseudo-tiled windows from overflowing the screen,2,[],https://github.com/baskerville/bspwm/pull/895,https://github.com/gandalf3,1,https://github.com/baskerville/bspwm/pull/895,"Move centered pseudo-tiled windows around to keep them within the bounds of the
root_rect as much as possible.  If the size of the pseudo-tiled window
exceeds that of root_rect in a given direction, then we let it overflow.
When pseudo-tiled windows are pushed off the screen there's no easy way to view the cut off part. This change simply prevents such windows from ending up partly off-screen (if there is room).","Move centered pseudo-tiled windows around to keep them within the bounds of the
root_rect as much as possible.  If the size of the pseudo-tiled window
exceeds that of root_rect in a given direction, then we let it overflow.
When pseudo-tiled windows are pushed off the screen there's no easy way to view the cut off part. This change simply prevents such windows from ending up partly off-screen (if there is room).",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,895,2018-12-27T03:22:47Z,2019-01-31T19:33:14Z,2019-01-31T19:33:14Z,CLOSED,False,3,0,1,https://github.com/gandalf3,Attempt to keep pseudo-tiled windows from overflowing the screen,2,[],https://github.com/baskerville/bspwm/pull/895,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/895#issuecomment-459475916,"Move centered pseudo-tiled windows around to keep them within the bounds of the
root_rect as much as possible.  If the size of the pseudo-tiled window
exceeds that of root_rect in a given direction, then we let it overflow.
When pseudo-tiled windows are pushed off the screen there's no easy way to view the cut off part. This change simply prevents such windows from ending up partly off-screen (if there is room).",It should be fixed by f30b3bf.,True,{'THUMBS_UP': ['https://github.com/gandalf3']}
baskerville/bspwm,https://github.com/baskerville/bspwm,898,2019-01-09T00:33:16Z,2019-01-20T09:14:41Z,2019-01-20T09:14:41Z,CLOSED,False,4,0,1,https://github.com/anna328p,Update README.md,1,[],https://github.com/baskerville/bspwm/pull/898,https://github.com/anna328p,1,https://github.com/baskerville/bspwm/pull/898,More accurate name,More accurate name,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,904,2019-01-19T19:46:23Z,2019-01-30T10:20:27Z,2019-01-30T14:55:34Z,CLOSED,False,68,1,6,https://github.com/sambazley,Add restart command,3,[],https://github.com/baskerville/bspwm/pull/904,https://github.com/sambazley,1,https://github.com/baskerville/bspwm/pull/904,"Add ability to restart the window manager, without logging out to the display manager. Can be used, for example, to restart after an update.","Add ability to restart the window manager, without logging out to the display manager. Can be used, for example, to restart after an update.",True,"{'HOORAY': ['https://github.com/cjk'], 'THUMBS_UP': ['https://github.com/MyNameIsCosmo']}"
baskerville/bspwm,https://github.com/baskerville/bspwm,904,2019-01-19T19:46:23Z,2019-01-30T10:20:27Z,2019-01-30T14:55:34Z,CLOSED,False,68,1,6,https://github.com/sambazley,Add restart command,3,[],https://github.com/baskerville/bspwm/pull/904,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/904#issuecomment-455851846,"Add ability to restart the window manager, without logging out to the display manager. Can be used, for example, to restart after an update.",I guess I will remove examples/loop after merging this.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,904,2019-01-19T19:46:23Z,2019-01-30T10:20:27Z,2019-01-30T14:55:34Z,CLOSED,False,68,1,6,https://github.com/sambazley,Add restart command,3,[],https://github.com/baskerville/bspwm/pull/904,https://github.com/MyNameIsCosmo,3,https://github.com/baskerville/bspwm/pull/904#issuecomment-457463968,"Add ability to restart the window manager, without logging out to the display manager. Can be used, for example, to restart after an update.","It seems that upon bspc wm -r, this will remove the socket at /tmp/bspwm_0_0-socket (or similar), causing issues with other programs subscribed to the socket.
Maybe the sock_fd could be passed from the ""original"" process to the ""new"" bspwm process, and sock cleanup can be skipped on restart?
I'm unsure how to handle this, but maybe this will be a good reference.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,904,2019-01-19T19:46:23Z,2019-01-30T10:20:27Z,2019-01-30T14:55:34Z,CLOSED,False,68,1,6,https://github.com/sambazley,Add restart command,3,[],https://github.com/baskerville/bspwm/pull/904,https://github.com/baskerville,4,https://github.com/baskerville/bspwm/pull/904#issuecomment-457504504,"Add ability to restart the window manager, without logging out to the display manager. Can be used, for example, to restart after an update.","@MyNameIsCosmo Indeed, it would be great.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,904,2019-01-19T19:46:23Z,2019-01-30T10:20:27Z,2019-01-30T14:55:34Z,CLOSED,False,68,1,6,https://github.com/sambazley,Add restart command,3,[],https://github.com/baskerville/bspwm/pull/904,https://github.com/baskerville,5,https://github.com/baskerville/bspwm/pull/904#issuecomment-457510886,"Add ability to restart the window manager, without logging out to the display manager. Can be used, for example, to restart after an update.","Here's an excerpt from man execve:

File descriptors open in the calling process image remain open in the new process image, except for those for which the close-on-exec flag is set.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,904,2019-01-19T19:46:23Z,2019-01-30T10:20:27Z,2019-01-30T14:55:34Z,CLOSED,False,68,1,6,https://github.com/sambazley,Add restart command,3,[],https://github.com/baskerville/bspwm/pull/904,https://github.com/baskerville,6,https://github.com/baskerville/bspwm/pull/904#issuecomment-457643288,"Add ability to restart the window manager, without logging out to the display manager. Can be used, for example, to restart after an update.","I think it might be best to pass sock_fd as an environment variable to the new process.
Then, query_tree needs to be extended to output the built-in rules. Once this is done, we can avoid calling run_config when -s is set.
We also need to restore the list of subscribers and the pending rules.",True,{'THUMBS_UP': ['https://github.com/MyNameIsCosmo']}
baskerville/bspwm,https://github.com/baskerville/bspwm,904,2019-01-19T19:46:23Z,2019-01-30T10:20:27Z,2019-01-30T14:55:34Z,CLOSED,False,68,1,6,https://github.com/sambazley,Add restart command,3,[],https://github.com/baskerville/bspwm/pull/904,https://github.com/sambazley,7,https://github.com/baskerville/bspwm/pull/904#issuecomment-457654122,"Add ability to restart the window manager, without logging out to the display manager. Can be used, for example, to restart after an update.","Would it be better if we removed the -s option? Instead, we could load the state file if it exists using RESTART_STATE_ENV_VAR, then remove it when we're done with it.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,904,2019-01-19T19:46:23Z,2019-01-30T10:20:27Z,2019-01-30T14:55:34Z,CLOSED,False,68,1,6,https://github.com/sambazley,Add restart command,3,[],https://github.com/baskerville/bspwm/pull/904,https://github.com/baskerville,8,https://github.com/baskerville/bspwm/pull/904#issuecomment-457688995,"Add ability to restart the window manager, without logging out to the display manager. Can be used, for example, to restart after an update.",@sambazley It's fine with me.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,904,2019-01-19T19:46:23Z,2019-01-30T10:20:27Z,2019-01-30T14:55:34Z,CLOSED,False,68,1,6,https://github.com/sambazley,Add restart command,3,[],https://github.com/baskerville/bspwm/pull/904,https://github.com/sambazley,9,https://github.com/baskerville/bspwm/pull/904#issuecomment-457706132,"Add ability to restart the window manager, without logging out to the display manager. Can be used, for example, to restart after an update.","@baskerville Sorry, to clarify are you saying it's fine the way it currently is, or the change is fine with you?",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,904,2019-01-19T19:46:23Z,2019-01-30T10:20:27Z,2019-01-30T14:55:34Z,CLOSED,False,68,1,6,https://github.com/sambazley,Add restart command,3,[],https://github.com/baskerville/bspwm/pull/904,https://github.com/baskerville,10,https://github.com/baskerville/bspwm/pull/904#issuecomment-457717168,"Add ability to restart the window manager, without logging out to the display manager. Can be used, for example, to restart after an update.",You can remove the -s flag.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,904,2019-01-19T19:46:23Z,2019-01-30T10:20:27Z,2019-01-30T14:55:34Z,CLOSED,False,68,1,6,https://github.com/sambazley,Add restart command,3,[],https://github.com/baskerville/bspwm/pull/904,https://github.com/MyNameIsCosmo,11,https://github.com/baskerville/bspwm/pull/904#issuecomment-458812352,"Add ability to restart the window manager, without logging out to the display manager. Can be used, for example, to restart after an update.","I agree on the sock_fd environment variable.
I added a rule query to query_tree in #916
How should restoring the list of subscribers and the pending rules occur? Should there be a query to print the subscribers and pending rules, similar to the state? Should they be included in the state query? Does it matter?",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,904,2019-01-19T19:46:23Z,2019-01-30T10:20:27Z,2019-01-30T14:55:34Z,CLOSED,False,68,1,6,https://github.com/sambazley,Add restart command,3,[],https://github.com/baskerville/bspwm/pull/904,https://github.com/baskerville,12,https://github.com/baskerville/bspwm/pull/904#issuecomment-458864088,"Add ability to restart the window manager, without logging out to the display manager. Can be used, for example, to restart after an update.",@MyNameIsCosmo I'm working on finishing this in a local branch.,True,{'THUMBS_UP': ['https://github.com/MyNameIsCosmo']}
baskerville/bspwm,https://github.com/baskerville/bspwm,904,2019-01-19T19:46:23Z,2019-01-30T10:20:27Z,2019-01-30T14:55:34Z,CLOSED,False,68,1,6,https://github.com/sambazley,Add restart command,3,[],https://github.com/baskerville/bspwm/pull/904,https://github.com/MyNameIsCosmo,13,https://github.com/baskerville/bspwm/pull/904#issuecomment-458973282,"Add ability to restart the window manager, without logging out to the display manager. Can be used, for example, to restart after an update.",Neat! I'll test this out later today.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,908,2019-01-25T04:59:33Z,2019-01-25T09:06:22Z,2019-01-25T09:06:22Z,CLOSED,False,19,8,9,https://github.com/MyNameIsCosmo,Add `ignore_ewmh_struts` config option,2,[],https://github.com/baskerville/bspwm/pull/908,https://github.com/MyNameIsCosmo,1,https://github.com/baskerville/bspwm/pull/908,"Fixes #906
So far seems to work fine.
bspc config ignore_ewmh_struts true to active
Testing with polybar: pkill -USR1 polybar
Somehow, this also fixes an issue I saw in the video in #906 in which the struts from polybar are not respected on first launch of bspwm et al.","Fixes #906
So far seems to work fine.
bspc config ignore_ewmh_struts true to active
Testing with polybar: pkill -USR1 polybar
Somehow, this also fixes an issue I saw in the video in #906 in which the struts from polybar are not respected on first launch of bspwm et al.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,908,2019-01-25T04:59:33Z,2019-01-25T09:06:22Z,2019-01-25T09:06:22Z,CLOSED,False,19,8,9,https://github.com/MyNameIsCosmo,Add `ignore_ewmh_struts` config option,2,[],https://github.com/baskerville/bspwm/pull/908,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/908#issuecomment-457504362,"Fixes #906
So far seems to work fine.
bspc config ignore_ewmh_struts true to active
Testing with polybar: pkill -USR1 polybar
Somehow, this also fixes an issue I saw in the video in #906 in which the struts from polybar are not respected on first launch of bspwm et al.",Thanks.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,912,2019-01-26T15:45:07Z,2019-01-27T10:05:19Z,2019-01-27T10:05:19Z,CLOSED,False,18,8,5,https://github.com/otsheln1k,Reflect single_monocle layout in report. Fixes #730.,1,[],https://github.com/baskerville/bspwm/pull/912,https://github.com/otsheln1k,1,https://github.com/baskerville/bspwm/pull/912,"If single_monocle option is set, there is only one window on desktop, it will look in report as if the layout is monocle.
Also print a report after inserting a receptacle (it seems like in other places a report is printed already) and after setting single_monocle option with bspc config.","If single_monocle option is set, there is only one window on desktop, it will look in report as if the layout is monocle.
Also print a report after inserting a receptacle (it seems like in other places a report is printed already) and after setting single_monocle option with bspc config.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,912,2019-01-26T15:45:07Z,2019-01-27T10:05:19Z,2019-01-27T10:05:19Z,CLOSED,False,18,8,5,https://github.com/otsheln1k,Reflect single_monocle layout in report. Fixes #730.,1,[],https://github.com/baskerville/bspwm/pull/912,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/912#issuecomment-457904648,"If single_monocle option is set, there is only one window on desktop, it will look in report as if the layout is monocle.
Also print a report after inserting a receptacle (it seems like in other places a report is printed already) and after setting single_monocle option with bspc config.",Thanks.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,915,2019-01-29T21:31:55Z,2019-02-01T16:58:35Z,2019-02-01T16:58:36Z,CLOSED,False,15,0,2,https://github.com/MyNameIsCosmo,Add .editorconfig,2,[],https://github.com/baskerville/bspwm/pull/915,https://github.com/MyNameIsCosmo,1,https://github.com/baskerville/bspwm/pull/915,"A convenience for developers who use the EditorConfig plugin with their code editor.
This will help keep new code format consistent between contributors (i.e. urge tabs instead of spaces, tab space of 8 as noted in the Linux Kernel Coding Guide, etc)","A convenience for developers who use the EditorConfig plugin with their code editor.
This will help keep new code format consistent between contributors (i.e. urge tabs instead of spaces, tab space of 8 as noted in the Linux Kernel Coding Guide, etc)",True,{'HEART': ['https://github.com/neeasade']}
baskerville/bspwm,https://github.com/baskerville/bspwm,915,2019-01-29T21:31:55Z,2019-02-01T16:58:35Z,2019-02-01T16:58:36Z,CLOSED,False,15,0,2,https://github.com/MyNameIsCosmo,Add .editorconfig,2,[],https://github.com/baskerville/bspwm/pull/915,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/915#issuecomment-459479511,"A convenience for developers who use the EditorConfig plugin with their code editor.
This will help keep new code format consistent between contributors (i.e. urge tabs instead of spaces, tab space of 8 as noted in the Linux Kernel Coding Guide, etc)","I also deviate from the kernel style regarding the tab width. If you have to specify a width, it should be 4, not 8.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,915,2019-01-29T21:31:55Z,2019-02-01T16:58:35Z,2019-02-01T16:58:36Z,CLOSED,False,15,0,2,https://github.com/MyNameIsCosmo,Add .editorconfig,2,[],https://github.com/baskerville/bspwm/pull/915,https://github.com/MyNameIsCosmo,3,https://github.com/baskerville/bspwm/pull/915#issuecomment-459480713,"A convenience for developers who use the EditorConfig plugin with their code editor.
This will help keep new code format consistent between contributors (i.e. urge tabs instead of spaces, tab space of 8 as noted in the Linux Kernel Coding Guide, etc)","Makes sense, I'm a fan of a width of 4 as well.
Pushed the change.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,915,2019-01-29T21:31:55Z,2019-02-01T16:58:35Z,2019-02-01T16:58:36Z,CLOSED,False,15,0,2,https://github.com/MyNameIsCosmo,Add .editorconfig,2,[],https://github.com/baskerville/bspwm/pull/915,https://github.com/baskerville,4,https://github.com/baskerville/bspwm/pull/915#issuecomment-459791349,"A convenience for developers who use the EditorConfig plugin with their code editor.
This will help keep new code format consistent between contributors (i.e. urge tabs instead of spaces, tab space of 8 as noted in the Linux Kernel Coding Guide, etc)",Thanks.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,916,2019-01-30T00:17:02Z,2019-01-30T10:23:09Z,2019-01-30T10:23:09Z,CLOSED,False,21,0,2,https://github.com/MyNameIsCosmo,add rule query to query_tree,1,[],https://github.com/baskerville/bspwm/pull/916,https://github.com/MyNameIsCosmo,1,https://github.com/baskerville/bspwm/pull/916,"Prints out rules at the end of the query_tree json.
Relates to #904
...
    ""stackingList"": [
        91461
    ],
    ""rules"": [
        {
            ""className"": ""Polybar"",
            ""instance_name"": ""*"",
            ""one_shot"": ""false"",
            ""effect"": ""manage=off""
        },
        {
            ""className"": ""Polybar"",
            ""instance_name"": ""*"",
            ""one_shot"": ""false"",
            ""effect"": ""manage=off state=floating follow=on focus=on""
        }
    ]
}","Prints out rules at the end of the query_tree json.
Relates to #904
...
    ""stackingList"": [
        91461
    ],
    ""rules"": [
        {
            ""className"": ""Polybar"",
            ""instance_name"": ""*"",
            ""one_shot"": ""false"",
            ""effect"": ""manage=off""
        },
        {
            ""className"": ""Polybar"",
            ""instance_name"": ""*"",
            ""one_shot"": ""false"",
            ""effect"": ""manage=off state=floating follow=on focus=on""
        }
    ]
}",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,917,2019-01-30T02:15:55Z,,2020-09-08T14:03:01Z,OPEN,False,24,11,8,https://github.com/MyNameIsCosmo,Add config option record_history,2,[],https://github.com/baskerville/bspwm/pull/917,https://github.com/MyNameIsCosmo,1,https://github.com/baskerville/bspwm/pull/917,"Fixes #909
This PR keeps the bspc wm -h <true/false> command, which now changes the record_history config value.
Additionally, you can call bspc config record_history <true/false> to toggle history recording.","Fixes #909
This PR keeps the bspc wm -h <true/false> command, which now changes the record_history config value.
Additionally, you can call bspc config record_history <true/false> to toggle history recording.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,917,2019-01-30T02:15:55Z,,2020-09-08T14:03:01Z,OPEN,False,24,11,8,https://github.com/MyNameIsCosmo,Add config option record_history,2,[],https://github.com/baskerville/bspwm/pull/917,https://github.com/emanuele6,2,https://github.com/baskerville/bspwm/pull/917#issuecomment-687854239,"Fixes #909
This PR keeps the bspc wm -h <true/false> command, which now changes the record_history config value.
Additionally, you can call bspc config record_history <true/false> to toggle history recording.","What's the point of this patch?
I guess it allows you to know if the history is being recorded with bspc config record_history, since it isn't currently possible to know if the history is being recorded: neither with bspc wm -h nor by parsing the output of bspc wm -d.
But what is the point of having both wm -h and the record_history setting?",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,918,2019-01-30T02:39:25Z,2019-01-30T16:39:24Z,2019-01-30T16:39:24Z,CLOSED,False,2,0,2,https://github.com/MyNameIsCosmo,add default value for ignore_ewmh_struts,1,[],https://github.com/baskerville/bspwm/pull/918,https://github.com/MyNameIsCosmo,1,https://github.com/baskerville/bspwm/pull/918,Add a missing default value to #908,Add a missing default value to #908,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,918,2019-01-30T02:39:25Z,2019-01-30T16:39:24Z,2019-01-30T16:39:24Z,CLOSED,False,2,0,2,https://github.com/MyNameIsCosmo,add default value for ignore_ewmh_struts,1,[],https://github.com/baskerville/bspwm/pull/918,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/918#issuecomment-459014709,Add a missing default value to #908,Thanks.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,919,2019-01-30T18:48:47Z,2019-02-01T12:49:16Z,2019-02-01T12:49:16Z,CLOSED,False,74,15,8,https://github.com/otsheln1k,Fix desktop_layout event (see #912),2,[],https://github.com/baskerville/bspwm/pull/919,https://github.com/otsheln1k,1,https://github.com/baskerville/bspwm/pull/919,"Commit 32ff624 broke desktop_layout events and made them not consistent with reports; sorry for that.
I added a commit that fixes this. Couldn't find a way to reopen #912 so making it another PR.","Commit 32ff624 broke desktop_layout events and made them not consistent with reports; sorry for that.
I added a commit that fixes this. Couldn't find a way to reopen #912 so making it another PR.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,959,2019-04-28T12:08:36Z,2019-04-29T08:02:32Z,2019-04-29T08:02:32Z,CLOSED,False,2,2,2,https://github.com/xaverh,added 'marked' flag to report documentation,1,[],https://github.com/baskerville/bspwm/pull/959,https://github.com/xaverh,1,https://github.com/baskerville/bspwm/pull/959,"""marked"" flagged nodes being reported as ""M"" was missing in the manual.","""marked"" flagged nodes being reported as ""M"" was missing in the manual.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,959,2019-04-28T12:08:36Z,2019-04-29T08:02:32Z,2019-04-29T08:02:32Z,CLOSED,False,2,2,2,https://github.com/xaverh,added 'marked' flag to report documentation,1,[],https://github.com/baskerville/bspwm/pull/959,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/959#issuecomment-487484468,"""marked"" flagged nodes being reported as ""M"" was missing in the manual.",Thanks.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,974,2019-05-31T06:54:06Z,2019-05-31T07:42:28Z,2019-05-31T07:42:28Z,CLOSED,False,136,91,3,https://github.com/Babkock,Fixed my own issue with Browsers closing improperly,2,[],https://github.com/baskerville/bspwm/pull/974,https://github.com/Babkock,1,https://github.com/baskerville/bspwm/pull/974,"A few months ago I made #949 , as it was pretty much the only grievance I had with this software. As you can see, the bug was able to be reproduced by another user. Today I attempted fixing this bug myself, and as far as I know, I succeeded. I have yet to see this behavior with either Firefox or Chromium since using my newly forked bspwm. Here's why I think this bug was happening:

The default key binding for closing a window in sxhkd, sends the command bspc node -c -k to the focused node.
Firefox or Chromium receives the ""close"" message, which starts the browser's cleanup procedure
This procedure is interrupted almost immediately when the process is killed, resulting in the ""Sorry, we're having trouble restoring your session"" on subsequent launches

My changes make it so a Firefox or Chromium window is unable to be killed with -k, only closed with -c. If Firefox or Chromium receives a kill message, it interprets it as a second close message, and closes properly.
I also felt like making some macros for the common error messages in messages.c, they can be found in messages.h.","A few months ago I made #949 , as it was pretty much the only grievance I had with this software. As you can see, the bug was able to be reproduced by another user. Today I attempted fixing this bug myself, and as far as I know, I succeeded. I have yet to see this behavior with either Firefox or Chromium since using my newly forked bspwm. Here's why I think this bug was happening:

The default key binding for closing a window in sxhkd, sends the command bspc node -c -k to the focused node.
Firefox or Chromium receives the ""close"" message, which starts the browser's cleanup procedure
This procedure is interrupted almost immediately when the process is killed, resulting in the ""Sorry, we're having trouble restoring your session"" on subsequent launches

My changes make it so a Firefox or Chromium window is unable to be killed with -k, only closed with -c. If Firefox or Chromium receives a kill message, it interprets it as a second close message, and closes properly.
I also felt like making some macros for the common error messages in messages.c, they can be found in messages.h.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,974,2019-05-31T06:54:06Z,2019-05-31T07:42:28Z,2019-05-31T07:42:28Z,CLOSED,False,136,91,3,https://github.com/Babkock,Fixed my own issue with Browsers closing improperly,2,[],https://github.com/baskerville/bspwm/pull/974,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/974#issuecomment-497610378,"A few months ago I made #949 , as it was pretty much the only grievance I had with this software. As you can see, the bug was able to be reproduced by another user. Today I attempted fixing this bug myself, and as far as I know, I succeeded. I have yet to see this behavior with either Firefox or Chromium since using my newly forked bspwm. Here's why I think this bug was happening:

The default key binding for closing a window in sxhkd, sends the command bspc node -c -k to the focused node.
Firefox or Chromium receives the ""close"" message, which starts the browser's cleanup procedure
This procedure is interrupted almost immediately when the process is killed, resulting in the ""Sorry, we're having trouble restoring your session"" on subsequent launches

My changes make it so a Firefox or Chromium window is unable to be killed with -k, only closed with -c. If Firefox or Chromium receives a kill message, it interprets it as a second close message, and closes properly.
I also felt like making some macros for the common error messages in messages.c, they can be found in messages.h.","The default key binding for closing a window in sxhkd, sends the command bspc node -c -k to the focused node.


No: the example sxhkdrc sends node -c when super + w is pressed and node -k when super + shift + w is pressed.
You probably have modified it without understanding it.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,985,2019-07-12T18:43:33Z,2019-07-12T19:28:11Z,2019-07-12T19:28:27Z,MERGED,True,1,1,1,https://github.com/stoeckmann,Enforce strict mode of jsmn.,1,[],https://github.com/baskerville/bspwm/pull/985,https://github.com/stoeckmann,1,https://github.com/baskerville/bspwm/pull/985,"If no strict mode of jsmn is enforced, then the correct amount of
json elements would have to be checked to avoid segmentation faults
on malformed state files:
$ echo '{ ""focusedMonitorId"" }' > malformed-state
$ bspwm -s malformed-state
Segmentation fault
$ _
Signed-off-by: Tobias Stoeckmann tobias@stoeckmann.org","If no strict mode of jsmn is enforced, then the correct amount of
json elements would have to be checked to avoid segmentation faults
on malformed state files:
$ echo '{ ""focusedMonitorId"" }' > malformed-state
$ bspwm -s malformed-state
Segmentation fault
$ _
Signed-off-by: Tobias Stoeckmann tobias@stoeckmann.org",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,985,2019-07-12T18:43:33Z,2019-07-12T19:28:11Z,2019-07-12T19:28:27Z,MERGED,True,1,1,1,https://github.com/stoeckmann,Enforce strict mode of jsmn.,1,[],https://github.com/baskerville/bspwm/pull/985,https://github.com/stoeckmann,2,https://github.com/baskerville/bspwm/pull/985#issuecomment-510992445,"If no strict mode of jsmn is enforced, then the correct amount of
json elements would have to be checked to avoid segmentation faults
on malformed state files:
$ echo '{ ""focusedMonitorId"" }' > malformed-state
$ bspwm -s malformed-state
Segmentation fault
$ _
Signed-off-by: Tobias Stoeckmann tobias@stoeckmann.org","This alone won't fix the issue, because jsmn itself has a bug. See: zserge/jsmn#158
But after a merge of a new jsmn version this will fix the bspwm side of the issue.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,985,2019-07-12T18:43:33Z,2019-07-12T19:28:11Z,2019-07-12T19:28:27Z,MERGED,True,1,1,1,https://github.com/stoeckmann,Enforce strict mode of jsmn.,1,[],https://github.com/baskerville/bspwm/pull/985,https://github.com/baskerville,3,https://github.com/baskerville/bspwm/pull/985#issuecomment-511005846,"If no strict mode of jsmn is enforced, then the correct amount of
json elements would have to be checked to avoid segmentation faults
on malformed state files:
$ echo '{ ""focusedMonitorId"" }' > malformed-state
$ bspwm -s malformed-state
Segmentation fault
$ _
Signed-off-by: Tobias Stoeckmann tobias@stoeckmann.org",Thanks.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,991,2019-08-03T11:15:17Z,,2019-11-02T13:10:46Z,OPEN,False,17,18,1,https://github.com/ilohmar,Use std `install` for nicer ownership/permissions,1,[],https://github.com/baskerville/bspwm/pull/991,https://github.com/ilohmar,1,https://github.com/baskerville/bspwm/pull/991,"As discussed in #984, this helps with proper permissions and root
ownership when doing the classic sudo make install.","As discussed in #984, this helps with proper permissions and root
ownership when doing the classic sudo make install.",True,"{'THUMBS_UP': ['https://github.com/rwilhelm', 'https://github.com/illiliti', 'https://github.com/mvollrath', 'https://github.com/solomspd']}"
baskerville/bspwm,https://github.com/baskerville/bspwm,991,2019-08-03T11:15:17Z,,2019-11-02T13:10:46Z,OPEN,False,17,18,1,https://github.com/ilohmar,Use std `install` for nicer ownership/permissions,1,[],https://github.com/baskerville/bspwm/pull/991,https://github.com/ilohmar,2,https://github.com/baskerville/bspwm/pull/991#issuecomment-549042433,"As discussed in #984, this helps with proper permissions and root
ownership when doing the classic sudo make install.","Is there anything I can do to help this PR move along?  It seems like an innocent change...
So far I refrained from opening analogous PRs for sxhkd, xdo, and xwinfo, because I wanted to sort out any minor issues in one place first.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,997,2019-08-16T17:58:00Z,2019-08-22T12:14:08Z,2019-08-22T12:14:08Z,CLOSED,False,52,16,4,None,Make subscription streams non-blocking,1,[],https://github.com/baskerville/bspwm/pull/997,None,1,https://github.com/baskerville/bspwm/pull/997,"Fixes #996
But the initial report message is not possible with --fifo this way.","Fixes #996
But the initial report message is not possible with --fifo this way.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1028,2019-11-12T16:37:00Z,2020-07-26T12:56:06Z,2020-07-26T12:56:07Z,CLOSED,False,1,1,1,https://github.com/xhalo32,Escape special ! character in sxhkdrc example,1,[],https://github.com/baskerville/bspwm/pull/1028,https://github.com/xhalo32,1,https://github.com/baskerville/bspwm/pull/1028,"Issue was resolved in #832
But the fix was never put in place","Issue was resolved in #832
But the fix was never put in place",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1028,2019-11-12T16:37:00Z,2020-07-26T12:56:06Z,2020-07-26T12:56:07Z,CLOSED,False,1,1,1,https://github.com/xhalo32,Escape special ! character in sxhkdrc example,1,[],https://github.com/baskerville/bspwm/pull/1028,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/1028#issuecomment-663984595,"Issue was resolved in #832
But the fix was never put in place",! only needs to be escaped within interactive shells.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1032,2019-11-29T20:28:12Z,,2021-02-05T22:32:09Z,OPEN,False,60,1,3,https://github.com/DelusionalLogic,Insert placeholders for stickies,1,[],https://github.com/baskerville/bspwm/pull/1032,https://github.com/DelusionalLogic,1,https://github.com/baskerville/bspwm/pull/1032,"Removing a sticky window from the desktop tree causes the entire layout
to go out the window, which makes sticky essentially useless for tiled
windows. Instead I suggest we insert a receptacle bound to the node when
moving a sticky window around. When moving that sticky window back
we reinsert it into that receptacle. This way we get to keep the layout
we set up, while still moving all the sticky windows around.
When removing the windows (or just the sticky flag) we now have to
remember to remove the placeholders from all desktops on that monitor.
There's probably many more cases where we have to remove the
placeholders. I'd like feedback on that.
I think the functionality here is very useful, but the implementation
doesn't strike me as elegant. I'd like someone more familiar with the
codebase to either provide feedback or adopt this changeset.","Removing a sticky window from the desktop tree causes the entire layout
to go out the window, which makes sticky essentially useless for tiled
windows. Instead I suggest we insert a receptacle bound to the node when
moving a sticky window around. When moving that sticky window back
we reinsert it into that receptacle. This way we get to keep the layout
we set up, while still moving all the sticky windows around.
When removing the windows (or just the sticky flag) we now have to
remember to remove the placeholders from all desktops on that monitor.
There's probably many more cases where we have to remove the
placeholders. I'd like feedback on that.
I think the functionality here is very useful, but the implementation
doesn't strike me as elegant. I'd like someone more familiar with the
codebase to either provide feedback or adopt this changeset.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1035,2019-12-10T11:32:46Z,,2022-06-04T10:40:19Z,OPEN,False,9,0,3,https://github.com/nwwdles,Add support for XIconifyWindow and unminimizing from taskbars,1,[],https://github.com/baskerville/bspwm/pull/1035,https://github.com/nwwdles,1,https://github.com/baskerville/bspwm/pull/1035,"Hello! Currently, minimized windows on bspwm don't really work great with bars that provide task managers (task lists) like tint2, KDE/Xfce panel widgets etc.
Tasklists usually allow you to click on a task to minimize or focus & unminimize a window. On bspwm it works differently: window is focused only if it's not hidden and you get switched to the window's desktop (even if it's hidden).
The patch adds the conventional behavior described above. As a side effect, it also makes focused windows automatically unhide (so now they can also be unhidden with rofi etc.) but other than that it shouldn't introduce any changes for people who don't use task managers.
Edit: I doubt it's going to get merged, e.g. i3 actually reverted the commit that added handling of WM_CHANGE_STATE. (or maybe my patch is just bad idk, i'm not experiencing any issues.) If you want this, you can just apply the patch manually.","Hello! Currently, minimized windows on bspwm don't really work great with bars that provide task managers (task lists) like tint2, KDE/Xfce panel widgets etc.
Tasklists usually allow you to click on a task to minimize or focus & unminimize a window. On bspwm it works differently: window is focused only if it's not hidden and you get switched to the window's desktop (even if it's hidden).
The patch adds the conventional behavior described above. As a side effect, it also makes focused windows automatically unhide (so now they can also be unhidden with rofi etc.) but other than that it shouldn't introduce any changes for people who don't use task managers.
Edit: I doubt it's going to get merged, e.g. i3 actually reverted the commit that added handling of WM_CHANGE_STATE. (or maybe my patch is just bad idk, i'm not experiencing any issues.) If you want this, you can just apply the patch manually.",True,"{'THUMBS_UP': ['https://github.com/SolitudeSF', 'https://github.com/b1scu1t', 'https://github.com/raginmond', 'https://github.com/opalmay']}"
baskerville/bspwm,https://github.com/baskerville/bspwm,1051,2020-01-10T05:01:40Z,2021-04-11T23:31:47Z,2021-04-11T23:31:48Z,CLOSED,False,8,34,4,https://github.com/sambazley,Always use relative resizing,1,[],https://github.com/baskerville/bspwm/pull/1051,https://github.com/sambazley,1,https://github.com/baskerville/bspwm/pull/1051,Fixes #829,Fixes #829,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1064,2020-02-01T20:41:36Z,2020-02-02T17:30:02Z,2020-02-02T17:30:02Z,CLOSED,False,7,0,1,https://github.com/dannycolin,Add community information,1,[],https://github.com/baskerville/bspwm/pull/1064,https://github.com/dannycolin,1,https://github.com/baskerville/bspwm/pull/1064,I've added the subreddit and IRC channel (with the mention needed by Freenode to reclaim the channel) in the README.md,I've added the subreddit and IRC channel (with the mention needed by Freenode to reclaim the channel) in the README.md,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1064,2020-02-01T20:41:36Z,2020-02-02T17:30:02Z,2020-02-02T17:30:02Z,CLOSED,False,7,0,1,https://github.com/dannycolin,Add community information,1,[],https://github.com/baskerville/bspwm/pull/1064,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/1064#issuecomment-581157758,I've added the subreddit and IRC channel (with the mention needed by Freenode to reclaim the channel) in the README.md,Thanks.,True,{'THUMBS_UP': ['https://github.com/dannycolin']}
baskerville/bspwm,https://github.com/baskerville/bspwm,1069,2020-02-28T14:52:08Z,2020-03-09T18:08:56Z,2020-03-09T18:08:57Z,CLOSED,False,110,3,9,https://github.com/thrien,Select modifier for split type and descriptor,2,[],https://github.com/baskerville/bspwm/pull/1069,https://github.com/thrien,1,https://github.com/baskerville/bspwm/pull/1069,"This addresses issue #823
I added two new modifiers for node selection. One testing for horizontal split type and one for vertical split type. I know that this is a little bit redundant because !horizontal is the same as vertical (and vice versa) but i didn't want to choose one and this way it's more user-friendly.
I also added a descriptor for node selection that picks the first descendant of the reference node (i.e it goes up from the reference node until it finds a node that matches the given modifiers).
If you want to know how this is of any help read here #823
It would be nice if someone could look at my function ""find_first_parent_node"" in tree.c and check if i didn't do anything stupid. I'm not really comfortable with programming in C and all i did was mimicing code that was already there.
I called the new descriptor ""parents"" but i'm sure there is a better name for this. Maybe ""first_descendant"" would be more clear, but it is pretty long. Also i'm not sure if the underscore could cause some problems while parsing.
And while we're at it ""find_first_parent_node"" also isn't really a good name.","This addresses issue #823
I added two new modifiers for node selection. One testing for horizontal split type and one for vertical split type. I know that this is a little bit redundant because !horizontal is the same as vertical (and vice versa) but i didn't want to choose one and this way it's more user-friendly.
I also added a descriptor for node selection that picks the first descendant of the reference node (i.e it goes up from the reference node until it finds a node that matches the given modifiers).
If you want to know how this is of any help read here #823
It would be nice if someone could look at my function ""find_first_parent_node"" in tree.c and check if i didn't do anything stupid. I'm not really comfortable with programming in C and all i did was mimicing code that was already there.
I called the new descriptor ""parents"" but i'm sure there is a better name for this. Maybe ""first_descendant"" would be more clear, but it is pretty long. Also i'm not sure if the underscore could cause some problems while parsing.
And while we're at it ""find_first_parent_node"" also isn't really a good name.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1069,2020-02-28T14:52:08Z,2020-03-09T18:08:56Z,2020-03-09T18:08:57Z,CLOSED,False,110,3,9,https://github.com/thrien,Select modifier for split type and descriptor,2,[],https://github.com/baskerville/bspwm/pull/1069,https://github.com/thrien,2,https://github.com/baskerville/bspwm/pull/1069#issuecomment-592554407,"This addresses issue #823
I added two new modifiers for node selection. One testing for horizontal split type and one for vertical split type. I know that this is a little bit redundant because !horizontal is the same as vertical (and vice versa) but i didn't want to choose one and this way it's more user-friendly.
I also added a descriptor for node selection that picks the first descendant of the reference node (i.e it goes up from the reference node until it finds a node that matches the given modifiers).
If you want to know how this is of any help read here #823
It would be nice if someone could look at my function ""find_first_parent_node"" in tree.c and check if i didn't do anything stupid. I'm not really comfortable with programming in C and all i did was mimicing code that was already there.
I called the new descriptor ""parents"" but i'm sure there is a better name for this. Maybe ""first_descendant"" would be more clear, but it is pretty long. Also i'm not sure if the underscore could cause some problems while parsing.
And while we're at it ""find_first_parent_node"" also isn't really a good name.","At the moment the descriptor also allows selecting the referenced node itself.
That might be undesirable and could cause some confusion. It doesn't really matter for my purposes so it would be no problem to change this.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1069,2020-02-28T14:52:08Z,2020-03-09T18:08:56Z,2020-03-09T18:08:57Z,CLOSED,False,110,3,9,https://github.com/thrien,Select modifier for split type and descriptor,2,[],https://github.com/baskerville/bspwm/pull/1069,https://github.com/baskerville,3,https://github.com/baskerville/bspwm/pull/1069#issuecomment-596406942,"This addresses issue #823
I added two new modifiers for node selection. One testing for horizontal split type and one for vertical split type. I know that this is a little bit redundant because !horizontal is the same as vertical (and vice versa) but i didn't want to choose one and this way it's more user-friendly.
I also added a descriptor for node selection that picks the first descendant of the reference node (i.e it goes up from the reference node until it finds a node that matches the given modifiers).
If you want to know how this is of any help read here #823
It would be nice if someone could look at my function ""find_first_parent_node"" in tree.c and check if i didn't do anything stupid. I'm not really comfortable with programming in C and all i did was mimicing code that was already there.
I called the new descriptor ""parents"" but i'm sure there is a better name for this. Maybe ""first_descendant"" would be more clear, but it is pretty long. Also i'm not sure if the underscore could cause some problems while parsing.
And while we're at it ""find_first_parent_node"" also isn't really a good name.","I added two new modifiers for node selection. One testing for horizontal split type and one for vertical split type.

It should be a separate pull request.

I called the new descriptor ""parents"" but i'm sure there is a better name for this. Maybe ""first_descendant"" would be more clear, but it is pretty long.

The proper name would be first_ancestor.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1069,2020-02-28T14:52:08Z,2020-03-09T18:08:56Z,2020-03-09T18:08:57Z,CLOSED,False,110,3,9,https://github.com/thrien,Select modifier for split type and descriptor,2,[],https://github.com/baskerville/bspwm/pull/1069,https://github.com/thrien,4,https://github.com/baskerville/bspwm/pull/1069#issuecomment-596691361,"This addresses issue #823
I added two new modifiers for node selection. One testing for horizontal split type and one for vertical split type. I know that this is a little bit redundant because !horizontal is the same as vertical (and vice versa) but i didn't want to choose one and this way it's more user-friendly.
I also added a descriptor for node selection that picks the first descendant of the reference node (i.e it goes up from the reference node until it finds a node that matches the given modifiers).
If you want to know how this is of any help read here #823
It would be nice if someone could look at my function ""find_first_parent_node"" in tree.c and check if i didn't do anything stupid. I'm not really comfortable with programming in C and all i did was mimicing code that was already there.
I called the new descriptor ""parents"" but i'm sure there is a better name for this. Maybe ""first_descendant"" would be more clear, but it is pretty long. Also i'm not sure if the underscore could cause some problems while parsing.
And while we're at it ""find_first_parent_node"" also isn't really a good name.","Sorry, this is my first pull request and english is not my first language.
I can't really fix my master branch at the moment so it's easier to just close this one.
I will open a new pull requests for each one.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1076,2020-03-09T18:11:42Z,2020-03-16T11:20:25Z,2020-03-16T11:20:25Z,CLOSED,False,24,2,5,https://github.com/thrien,"Added new descriptor ""first_ancestor"" for node selection",1,[],https://github.com/baskerville/bspwm/pull/1076,https://github.com/thrien,1,https://github.com/baskerville/bspwm/pull/1076,I splitted this pull request (#1069) into two,I splitted this pull request (#1069) into two,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1076,2020-03-09T18:11:42Z,2020-03-16T11:20:25Z,2020-03-16T11:20:25Z,CLOSED,False,24,2,5,https://github.com/thrien,"Added new descriptor ""first_ancestor"" for node selection",1,[],https://github.com/baskerville/bspwm/pull/1076,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/1076#issuecomment-599482096,I splitted this pull request (#1069) into two,Thanks.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1077,2020-03-09T18:13:39Z,2020-03-16T11:20:29Z,2020-03-16T11:20:30Z,CLOSED,False,37,1,5,https://github.com/thrien,"Added modifier ""horizontal"" and ""vertical"" for node selection ",1,[],https://github.com/baskerville/bspwm/pull/1077,https://github.com/thrien,1,https://github.com/baskerville/bspwm/pull/1077,I splitted this pull request (#1069) into two,I splitted this pull request (#1069) into two,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1077,2020-03-09T18:13:39Z,2020-03-16T11:20:29Z,2020-03-16T11:20:30Z,CLOSED,False,37,1,5,https://github.com/thrien,"Added modifier ""horizontal"" and ""vertical"" for node selection ",1,[],https://github.com/baskerville/bspwm/pull/1077,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/1077#issuecomment-599482129,I splitted this pull request (#1069) into two,Thanks.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1116,2020-05-12T01:08:00Z,2020-07-26T10:39:19Z,2020-07-26T10:39:19Z,CLOSED,False,25,6,5,https://github.com/mvollrath,Add WM_NAME rule matching,1,[],https://github.com/baskerville/bspwm/pull/1116,https://github.com/mvollrath,1,https://github.com/baskerville/bspwm/pull/1116,"For my use case I need to be able to add window management rules for processes with unique window names which are only known immediately before the process is started.  This change adds optional window name matching.
The only interface that may not be backwards compatible (that I know of) is the output of bspc rule -l","For my use case I need to be able to add window management rules for processes with unique window names which are only known immediately before the process is started.  This change adds optional window name matching.
The only interface that may not be backwards compatible (that I know of) is the output of bspc rule -l",True,"{'THUMBS_UP': ['https://github.com/pejorativefox', 'https://github.com/nwwdles', 'https://github.com/SeerLite', 'https://github.com/nelliott', 'https://github.com/mikedld']}"
baskerville/bspwm,https://github.com/baskerville/bspwm,1116,2020-05-12T01:08:00Z,2020-07-26T10:39:19Z,2020-07-26T10:39:19Z,CLOSED,False,25,6,5,https://github.com/mvollrath,Add WM_NAME rule matching,1,[],https://github.com/baskerville/bspwm/pull/1116,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/1116#issuecomment-663971676,"For my use case I need to be able to add window management rules for processes with unique window names which are only known immediately before the process is started.  This change adds optional window name matching.
The only interface that may not be backwards compatible (that I know of) is the output of bspc rule -l",Thanks.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1118,2020-05-13T20:34:13Z,2020-07-26T10:39:32Z,2020-07-26T10:39:32Z,CLOSED,False,4,4,1,https://github.com/mvollrath,Fix inconsistent WM_CLASS field truncation,1,[],https://github.com/baskerville/bspwm/pull/1118,https://github.com/mvollrath,1,https://github.com/baskerville/bspwm/pull/1118,"Fixes #1117
Changes needed to #1116 if merged.","Fixes #1117
Changes needed to #1116 if merged.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1118,2020-05-13T20:34:13Z,2020-07-26T10:39:32Z,2020-07-26T10:39:32Z,CLOSED,False,4,4,1,https://github.com/mvollrath,Fix inconsistent WM_CLASS field truncation,1,[],https://github.com/baskerville/bspwm/pull/1118,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/1118#issuecomment-663971699,"Fixes #1117
Changes needed to #1116 if merged.",Thanks.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1120,2020-05-15T04:56:22Z,2020-07-26T10:38:34Z,2020-07-26T10:39:57Z,MERGED,True,1,1,1,https://github.com/mvollrath,Fix parsing hidden field,1,[],https://github.com/baskerville/bspwm/pull/1120,https://github.com/mvollrath,1,https://github.com/baskerville/bspwm/pull/1120,"hidden was always set true if present, use the parsed value instead.","hidden was always set true if present, use the parsed value instead.",True,{'THUMBS_UP': ['https://github.com/emanuele6']}
baskerville/bspwm,https://github.com/baskerville/bspwm,1120,2020-05-15T04:56:22Z,2020-07-26T10:38:34Z,2020-07-26T10:39:57Z,MERGED,True,1,1,1,https://github.com/mvollrath,Fix parsing hidden field,1,[],https://github.com/baskerville/bspwm/pull/1120,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/1120#issuecomment-663971734,"hidden was always set true if present, use the parsed value instead.",Thanks!,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1126,2020-05-25T08:05:10Z,2020-07-26T10:40:09Z,2020-07-26T10:40:09Z,CLOSED,False,22,0,3,https://github.com/JBouron,"Fix bug in which ""dead"" subscribers would not be removed right away leading to bspwm running out of file descriptors",1,[],https://github.com/baskerville/bspwm/pull/1126,https://github.com/JBouron,1,https://github.com/baskerville/bspwm/pull/1126,"Fix bug in which ""dead"" subscribers would not be removed right away and would
consume resources and file descriptors which could lead to the bspwm process
running out of available file descriptors and not being able to accept new
incoming connections.
When a process subscribes to bspwm events (i.e. bspc subscribe <event>), bspwm
keeps some state about this subscriber such as the file descriptor in which to
write the events and which events are requested by the subscriber.
When a subscriber dies (i.e. the bspc subscribe ... process is killed) bspwm
does not know it right away. Instead, on the next event being logged, if bspwm
encounters an error when trying to write() into the file descriptor associated
to a subscriber bspwm will consider this subscriber dead and remove it from the
linked list (which will also close() the file descriptor of the subscriber).
This is done in the put_status() function defined in subscribe.c.
This means that bspwm keeps file descriptors on potentially closed streams for
some time.
Normally this is ok, because events are generated often (when focusing nodes,
switching desktop, etc ...), therefore those ""dead"" file descriptors are not
kept around for too long.
However, during a period of inactivity (i.e. the user is not actively using the
computer or never switching nodes or desktops) those file descriptors can be
kept for a long time.
This is especially problematic in the following scenario:
1. User leaves the machine idle.
2. A ""churn"" of subscribers happens, where subscribers come and go.
3. Since the machine is idle, no events are happening and the file
descriptor of all dead subscribers are not closed.
4. bspwm consumes more and more file descriptors as new subscribers are
created.
5. At some point bspwm has too many opened file descriptors and cannot
accepts new incoming connections. The accept() syscall in the mainloop
fails (returning EMFILE) and bspwm is stuck in an infinite loop, not
being able to serve new request. At this point bspwm needs to be killed
and restarted.
While this could be deemed as unlikely (the maximum number of opened files being
1024 AFAIK (Arch Linux)), it turns out that this exact scenario can happen with
polybar (https://github.com/polybar/polybar) and the bspwm module. When a
laptop connected to an external monitor becomes idle, and the screen saver kicks
in, polybar periodically reloads itself (because of xrandr events) and therefore
periodically kill and re-create a subscriber. Since there is no activity on the
bspwm process, all dead instances of the polybar subscriber are not removed and
bspwm eventually runs out of file descriptors and gets stuck in the infinite
loop while consuming 100% cpu.
(Note: This is not a polybar issue, polybar does the right thing here).
The fix is as follows: In the main loop of bspwm, check for any dead subscribers
and remove them (if any). This is accomplished by a new function declared in
subscribe.h: prune_dead_subscribers().
prune_dead_subscribers() will iterate through the linked list of subscribers and
for each of them will try to call write() on their file descriptor with an empty
buffer (i.e. size == 0). If the write() fails (returns -1) then the subscriber
is declared dead and this function can remove it from the list and close the
associated file descriptor.","Fix bug in which ""dead"" subscribers would not be removed right away and would
consume resources and file descriptors which could lead to the bspwm process
running out of available file descriptors and not being able to accept new
incoming connections.
When a process subscribes to bspwm events (i.e. bspc subscribe <event>), bspwm
keeps some state about this subscriber such as the file descriptor in which to
write the events and which events are requested by the subscriber.
When a subscriber dies (i.e. the bspc subscribe ... process is killed) bspwm
does not know it right away. Instead, on the next event being logged, if bspwm
encounters an error when trying to write() into the file descriptor associated
to a subscriber bspwm will consider this subscriber dead and remove it from the
linked list (which will also close() the file descriptor of the subscriber).
This is done in the put_status() function defined in subscribe.c.
This means that bspwm keeps file descriptors on potentially closed streams for
some time.
Normally this is ok, because events are generated often (when focusing nodes,
switching desktop, etc ...), therefore those ""dead"" file descriptors are not
kept around for too long.
However, during a period of inactivity (i.e. the user is not actively using the
computer or never switching nodes or desktops) those file descriptors can be
kept for a long time.
This is especially problematic in the following scenario:
1. User leaves the machine idle.
2. A ""churn"" of subscribers happens, where subscribers come and go.
3. Since the machine is idle, no events are happening and the file
descriptor of all dead subscribers are not closed.
4. bspwm consumes more and more file descriptors as new subscribers are
created.
5. At some point bspwm has too many opened file descriptors and cannot
accepts new incoming connections. The accept() syscall in the mainloop
fails (returning EMFILE) and bspwm is stuck in an infinite loop, not
being able to serve new request. At this point bspwm needs to be killed
and restarted.
While this could be deemed as unlikely (the maximum number of opened files being
1024 AFAIK (Arch Linux)), it turns out that this exact scenario can happen with
polybar (https://github.com/polybar/polybar) and the bspwm module. When a
laptop connected to an external monitor becomes idle, and the screen saver kicks
in, polybar periodically reloads itself (because of xrandr events) and therefore
periodically kill and re-create a subscriber. Since there is no activity on the
bspwm process, all dead instances of the polybar subscriber are not removed and
bspwm eventually runs out of file descriptors and gets stuck in the infinite
loop while consuming 100% cpu.
(Note: This is not a polybar issue, polybar does the right thing here).
The fix is as follows: In the main loop of bspwm, check for any dead subscribers
and remove them (if any). This is accomplished by a new function declared in
subscribe.h: prune_dead_subscribers().
prune_dead_subscribers() will iterate through the linked list of subscribers and
for each of them will try to call write() on their file descriptor with an empty
buffer (i.e. size == 0). If the write() fails (returns -1) then the subscriber
is declared dead and this function can remove it from the list and close the
associated file descriptor.",True,{'THUMBS_UP': ['https://github.com/michaelowens']}
baskerville/bspwm,https://github.com/baskerville/bspwm,1126,2020-05-25T08:05:10Z,2020-07-26T10:40:09Z,2020-07-26T10:40:09Z,CLOSED,False,22,0,3,https://github.com/JBouron,"Fix bug in which ""dead"" subscribers would not be removed right away leading to bspwm running out of file descriptors",1,[],https://github.com/baskerville/bspwm/pull/1126,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/1126#issuecomment-663971755,"Fix bug in which ""dead"" subscribers would not be removed right away and would
consume resources and file descriptors which could lead to the bspwm process
running out of available file descriptors and not being able to accept new
incoming connections.
When a process subscribes to bspwm events (i.e. bspc subscribe <event>), bspwm
keeps some state about this subscriber such as the file descriptor in which to
write the events and which events are requested by the subscriber.
When a subscriber dies (i.e. the bspc subscribe ... process is killed) bspwm
does not know it right away. Instead, on the next event being logged, if bspwm
encounters an error when trying to write() into the file descriptor associated
to a subscriber bspwm will consider this subscriber dead and remove it from the
linked list (which will also close() the file descriptor of the subscriber).
This is done in the put_status() function defined in subscribe.c.
This means that bspwm keeps file descriptors on potentially closed streams for
some time.
Normally this is ok, because events are generated often (when focusing nodes,
switching desktop, etc ...), therefore those ""dead"" file descriptors are not
kept around for too long.
However, during a period of inactivity (i.e. the user is not actively using the
computer or never switching nodes or desktops) those file descriptors can be
kept for a long time.
This is especially problematic in the following scenario:
1. User leaves the machine idle.
2. A ""churn"" of subscribers happens, where subscribers come and go.
3. Since the machine is idle, no events are happening and the file
descriptor of all dead subscribers are not closed.
4. bspwm consumes more and more file descriptors as new subscribers are
created.
5. At some point bspwm has too many opened file descriptors and cannot
accepts new incoming connections. The accept() syscall in the mainloop
fails (returning EMFILE) and bspwm is stuck in an infinite loop, not
being able to serve new request. At this point bspwm needs to be killed
and restarted.
While this could be deemed as unlikely (the maximum number of opened files being
1024 AFAIK (Arch Linux)), it turns out that this exact scenario can happen with
polybar (https://github.com/polybar/polybar) and the bspwm module. When a
laptop connected to an external monitor becomes idle, and the screen saver kicks
in, polybar periodically reloads itself (because of xrandr events) and therefore
periodically kill and re-create a subscriber. Since there is no activity on the
bspwm process, all dead instances of the polybar subscriber are not removed and
bspwm eventually runs out of file descriptors and gets stuck in the infinite
loop while consuming 100% cpu.
(Note: This is not a polybar issue, polybar does the right thing here).
The fix is as follows: In the main loop of bspwm, check for any dead subscribers
and remove them (if any). This is accomplished by a new function declared in
subscribe.h: prune_dead_subscribers().
prune_dead_subscribers() will iterate through the linked list of subscribers and
for each of them will try to call write() on their file descriptor with an empty
buffer (i.e. size == 0). If the write() fails (returns -1) then the subscriber
is declared dead and this function can remove it from the list and close the
associated file descriptor.",Thanks!,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1129,2020-05-26T21:33:09Z,2020-07-26T12:37:19Z,2020-07-26T12:37:20Z,CLOSED,False,0,0,0,https://github.com/emanuele6,Port BSPWM to gcc10,0,[],https://github.com/baskerville/bspwm/pull/1129,https://github.com/emanuele6,1,https://github.com/baskerville/bspwm/pull/1129,"get_color_pixel() needs to be moved from helpers.h to bspwm.h (to build bspc);

Fixes #1119.","get_color_pixel() needs to be moved from helpers.h to bspwm.h (to build bspc);

Fixes #1119.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1130,2020-05-26T21:50:55Z,2020-07-26T12:42:49Z,2020-09-08T00:19:39Z,CLOSED,False,1,1,1,https://github.com/emanuele6,Alternative solution to enable building with gcc-10,1,[],https://github.com/baskerville/bspwm/pull/1130,https://github.com/emanuele6,1,https://github.com/baskerville/bspwm/pull/1130,"NOTE: this solution is ""discouraged"".

Simply enable -fcommon without modifying any code.

Fixes #1119.","NOTE: this solution is ""discouraged"".

Simply enable -fcommon without modifying any code.

Fixes #1119.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1130,2020-05-26T21:50:55Z,2020-07-26T12:42:49Z,2020-09-08T00:19:39Z,CLOSED,False,1,1,1,https://github.com/emanuele6,Alternative solution to enable building with gcc-10,1,[],https://github.com/baskerville/bspwm/pull/1130,https://github.com/emanuele6,2,https://github.com/baskerville/bspwm/pull/1130#issuecomment-663983203,"NOTE: this solution is ""discouraged"".

Simply enable -fcommon without modifying any code.

Fixes #1119.","#1131 has been merged, closing...",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1131,2020-05-27T01:26:17Z,2020-07-26T12:40:49Z,2020-09-08T00:19:31Z,CLOSED,False,196,101,12,https://github.com/emanuele6,Yet another solution to allow building with -fno-common,2,[],https://github.com/baskerville/bspwm/pull/1131,https://github.com/emanuele6,1,https://github.com/baskerville/bspwm/pull/1131,"This solution is more verbose than #1129, but doesn't use #directives.

get_color_pixel() needs to be moved from helpers.h to bspwm.h (to build bspc);
motion_recorder_t is typedef-ined for convenience;

Fixes #1119.","This solution is more verbose than #1129, but doesn't use #directives.

get_color_pixel() needs to be moved from helpers.h to bspwm.h (to build bspc);
motion_recorder_t is typedef-ined for convenience;

Fixes #1119.",True,"{'ROCKET': ['https://github.com/DrSensor', 'https://github.com/rien333']}"
baskerville/bspwm,https://github.com/baskerville/bspwm,1131,2020-05-27T01:26:17Z,2020-07-26T12:40:49Z,2020-09-08T00:19:31Z,CLOSED,False,196,101,12,https://github.com/emanuele6,Yet another solution to allow building with -fno-common,2,[],https://github.com/baskerville/bspwm/pull/1131,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/1131#issuecomment-663983009,"This solution is more verbose than #1129, but doesn't use #directives.

get_color_pixel() needs to be moved from helpers.h to bspwm.h (to build bspc);
motion_recorder_t is typedef-ined for convenience;

Fixes #1119.",Thanks!,True,{'THUMBS_UP': ['https://github.com/emanuele6']}
baskerville/bspwm,https://github.com/baskerville/bspwm,1133,2020-05-30T14:33:17Z,2020-07-26T12:21:31Z,2021-10-01T12:51:56Z,CLOSED,False,2,2,2,https://github.com/ammgws,docs: amend typo in manpage,1,[],https://github.com/baskerville/bspwm/pull/1133,https://github.com/ammgws,1,https://github.com/baskerville/bspwm/pull/1133,Just a typo so I didn't touch the date/source in the header.,Just a typo so I didn't touch the date/source in the header.,True,{'THUMBS_UP': ['https://github.com/DrSensor']}
baskerville/bspwm,https://github.com/baskerville/bspwm,1133,2020-05-30T14:33:17Z,2020-07-26T12:21:31Z,2021-10-01T12:51:56Z,CLOSED,False,2,2,2,https://github.com/ammgws,docs: amend typo in manpage,1,[],https://github.com/baskerville/bspwm/pull/1133,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/1133#issuecomment-663981228,Just a typo so I didn't touch the date/source in the header.,Thanks.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1136,2020-06-03T18:41:01Z,2020-07-26T12:21:22Z,2020-07-26T12:21:22Z,CLOSED,False,1,1,1,https://github.com/anktx,typo,1,[],https://github.com/baskerville/bspwm/pull/1136,https://github.com/anktx,1,https://github.com/baskerville/bspwm/pull/1136,,,True,"{'THUMBS_UP': ['https://github.com/DrSensor', 'https://github.com/emanuele6']}"
baskerville/bspwm,https://github.com/baskerville/bspwm,1136,2020-06-03T18:41:01Z,2020-07-26T12:21:22Z,2020-07-26T12:21:22Z,CLOSED,False,1,1,1,https://github.com/anktx,typo,1,[],https://github.com/baskerville/bspwm/pull/1136,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/1136#issuecomment-663981210,,Thanks.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1140,2020-06-20T03:47:00Z,2020-07-26T12:21:37Z,2020-09-08T00:19:21Z,CLOSED,False,1,1,1,https://github.com/emanuele6,"examples: fix typo in the ""receptacles"" example's README.md",1,[],https://github.com/baskerville/bspwm/pull/1140,https://github.com/emanuele6,1,https://github.com/baskerville/bspwm/pull/1140,,,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1140,2020-06-20T03:47:00Z,2020-07-26T12:21:37Z,2020-09-08T00:19:21Z,CLOSED,False,1,1,1,https://github.com/emanuele6,"examples: fix typo in the ""receptacles"" example's README.md",1,[],https://github.com/baskerville/bspwm/pull/1140,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/1140#issuecomment-663981238,,Thanks.,True,{'LAUGH': ['https://github.com/emanuele6']}
baskerville/bspwm,https://github.com/baskerville/bspwm,1156,2020-07-26T12:39:47Z,2020-07-26T12:49:37Z,2020-09-08T00:19:12Z,CLOSED,False,6,6,2,https://github.com/emanuele6,Man: fix star not escaped in the description of the `bspc rule` command.,1,[],https://github.com/baskerville/bspwm/pull/1156,https://github.com/emanuele6,1,https://github.com/baskerville/bspwm/pull/1156,What is this? A future feature to use titles in rules?,What is this? A future feature to use titles in rules?,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1156,2020-07-26T12:39:47Z,2020-07-26T12:49:37Z,2020-09-08T00:19:12Z,CLOSED,False,6,6,2,https://github.com/emanuele6,Man: fix star not escaped in the description of the `bspc rule` command.,1,[],https://github.com/baskerville/bspwm/pull/1156,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/1156#issuecomment-663983894,What is this? A future feature to use titles in rules?,"Thanks.

What is this? A future feature to use titles in rules?

No it's a new feature, as of 6db8831.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1159,2020-07-27T04:51:47Z,2020-07-27T09:39:21Z,2020-07-27T21:36:08Z,CLOSED,False,1,1,1,https://github.com/SeerLite,Check if sxhkd is already running before running it again in the bspwmrc example,1,[],https://github.com/baskerville/bspwm/pull/1159,https://github.com/SeerLite,1,https://github.com/baskerville/bspwm/pull/1159,"Prevents bspc wm --restart from running another sxhkd instance in the background.
Maybe relevant: thread","Prevents bspc wm --restart from running another sxhkd instance in the background.
Maybe relevant: thread",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1159,2020-07-27T04:51:47Z,2020-07-27T09:39:21Z,2020-07-27T21:36:08Z,CLOSED,False,1,1,1,https://github.com/SeerLite,Check if sxhkd is already running before running it again in the bspwmrc example,1,[],https://github.com/baskerville/bspwm/pull/1159,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/1159#issuecomment-664242494,"Prevents bspc wm --restart from running another sxhkd instance in the background.
Maybe relevant: thread",Thanks.,True,"{'THUMBS_UP': ['https://github.com/emanuele6', 'https://github.com/SeerLite']}"
baskerville/bspwm,https://github.com/baskerville/bspwm,1161,2020-07-30T01:48:10Z,2020-07-31T07:57:03Z,2020-09-08T00:19:02Z,CLOSED,False,16,8,4,https://github.com/emanuele6,Use `direction_t *` to store split_dir in a `rule_consequence_t` instead of using `char [SMALEN]`.,1,[],https://github.com/baskerville/bspwm/pull/1161,https://github.com/emanuele6,1,https://github.com/baskerville/bspwm/pull/1161,"This also prevents bspwm from passing an invalid split_dir to external_rules_command.
Related issue #1162","This also prevents bspwm from passing an invalid split_dir to external_rules_command.
Related issue #1162",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1161,2020-07-30T01:48:10Z,2020-07-31T07:57:03Z,2020-09-08T00:19:02Z,CLOSED,False,16,8,4,https://github.com/emanuele6,Use `direction_t *` to store split_dir in a `rule_consequence_t` instead of using `char [SMALEN]`.,1,[],https://github.com/baskerville/bspwm/pull/1161,https://github.com/emanuele6,2,https://github.com/baskerville/bspwm/pull/1161#issuecomment-666600210,"This also prevents bspwm from passing an invalid split_dir to external_rules_command.
Related issue #1162","What's the point of passing an invalid direction to erc?
The man-page says [split_dir=DIR] where DIR := north|west|south|east (4 possible values), split_dir shouldn't have the value of a complex selector: just north, west, south, east or nothing.
state is very similar to split_dir: the man-page says [state=STATE] where STATE := tiled|pseudo_tiled|floating|fullscreen (4 possible values).
state is only passed to erc when valid though: bspc rule -a '*' state=hello split_dir=hello -> (to erc) state= split_dir=hello.
(layer also behaves like state).
Why should split_dir be different?",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1161,2020-07-30T01:48:10Z,2020-07-31T07:57:03Z,2020-09-08T00:19:02Z,CLOSED,False,16,8,4,https://github.com/emanuele6,Use `direction_t *` to store split_dir in a `rule_consequence_t` instead of using `char [SMALEN]`.,1,[],https://github.com/baskerville/bspwm/pull/1161,https://github.com/baskerville,3,https://github.com/baskerville/bspwm/pull/1161#issuecomment-666989493,"This also prevents bspwm from passing an invalid split_dir to external_rules_command.
Related issue #1162",Thanks.,True,{'THUMBS_UP': ['https://github.com/emanuele6']}
baskerville/bspwm,https://github.com/baskerville/bspwm,1170,2020-08-07T16:32:55Z,2020-08-14T10:17:31Z,2020-08-14T10:17:31Z,CLOSED,False,3,0,1,https://github.com/cbarrete,Honor `pointer_follows_focus` when swapping nodes,1,[],https://github.com/baskerville/bspwm/pull/1170,https://github.com/cbarrete,1,https://github.com/baskerville/bspwm/pull/1170,This wasn't the case when swapping nodes on the same desktop.,This wasn't the case when swapping nodes on the same desktop.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1183,2020-08-27T11:29:23Z,,2020-10-19T08:37:00Z,OPEN,False,63,0,6,https://github.com/Jeffrey-P-McAteer,Added _NET_WM_MOVERESIZE handling for the move case,3,[],https://github.com/baskerville/bspwm/pull/1183,https://github.com/Jeffrey-P-McAteer,1,https://github.com/baskerville/bspwm/pull/1183,"Added _NET_WM_MOVERESIZE handling for the move case and an empty function wm_resize_node in case anyone wants to let windows resize themselves.
This change adds the ability for programs like MPV to request that they be moved, see #864.
Tested by doing:
make bspwm && cp bspwm /tmp/
# Switch to tty2
startx /tmp/bspwm
# launch mpv and w+m1 drag without the modifier key","Added _NET_WM_MOVERESIZE handling for the move case and an empty function wm_resize_node in case anyone wants to let windows resize themselves.
This change adds the ability for programs like MPV to request that they be moved, see #864.
Tested by doing:
make bspwm && cp bspwm /tmp/
# Switch to tty2
startx /tmp/bspwm
# launch mpv and w+m1 drag without the modifier key",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1183,2020-08-27T11:29:23Z,,2020-10-19T08:37:00Z,OPEN,False,63,0,6,https://github.com/Jeffrey-P-McAteer,Added _NET_WM_MOVERESIZE handling for the move case,3,[],https://github.com/baskerville/bspwm/pull/1183,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/1183#issuecomment-711852694,"Added _NET_WM_MOVERESIZE handling for the move case and an empty function wm_resize_node in case anyone wants to let windows resize themselves.
This change adds the ability for programs like MPV to request that they be moved, see #864.
Tested by doing:
make bspwm && cp bspwm /tmp/
# Switch to tty2
startx /tmp/bspwm
# launch mpv and w+m1 drag without the modifier key","I get the following warnings using GCC:
src/events.c: In function 'wm_move_resize_node':
src/events.c:355:3: warning: range expressions in switch statements are non-standard [-Wpedantic]
   case XCB_EWMH_WM_MOVERESIZE_SIZE_TOPLEFT ... XCB_EWMH_WM_MOVERESIZE_SIZE_LEFT:
   ^~~~
src/events.c: In function 'wm_resize_node':
src/events.c:387:49: warning: unused parameter 'e' [-Wunused-parameter]
 void wm_resize_node(xcb_client_message_event_t* e, coordinates_t loc)
                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
src/events.c:387:66: warning: unused parameter 'loc' [-Wunused-parameter]
 void wm_resize_node(xcb_client_message_event_t* e, coordinates_t loc)
                                                    ~~~~~~~~~~~~~~^~~",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1192,2020-09-05T19:01:28Z,2020-09-08T09:20:32Z,2020-09-08T09:21:28Z,CLOSED,False,44,1,4,https://github.com/emanuele6,Add layout and user_layout modifiers to desktop selectors. ,1,[],https://github.com/baskerville/bspwm/pull/1192,https://github.com/emanuele6,1,https://github.com/baskerville/bspwm/pull/1192,"Example use cases:

polybar module that shows an ""M"" when the focused desktop's layout is monocle:

[module/desktop_monocle]
type = custom/script
exec-if = bspc query -D -d focused.monocle
exec = echo M

go to the next monocle desktop:

bspc desktop next.user_monocle -f

spawn the next window in a desktop that is monocle only because of single_monocle (i.e. desktop with only one tiled leaf node):

bspc rule -a \* -o desktop=any.monocle.user_tiled


I also fixed a mistake in the documentation in the second commit. (moved to a separate Pull Request since it isn't related)","Example use cases:

polybar module that shows an ""M"" when the focused desktop's layout is monocle:

[module/desktop_monocle]
type = custom/script
exec-if = bspc query -D -d focused.monocle
exec = echo M

go to the next monocle desktop:

bspc desktop next.user_monocle -f

spawn the next window in a desktop that is monocle only because of single_monocle (i.e. desktop with only one tiled leaf node):

bspc rule -a \* -o desktop=any.monocle.user_tiled


I also fixed a mistake in the documentation in the second commit. (moved to a separate Pull Request since it isn't related)",True,{'THUMBS_UP': ['https://github.com/ortango']}
baskerville/bspwm,https://github.com/baskerville/bspwm,1192,2020-09-05T19:01:28Z,2020-09-08T09:20:32Z,2020-09-08T09:21:28Z,CLOSED,False,44,1,4,https://github.com/emanuele6,Add layout and user_layout modifiers to desktop selectors. ,1,[],https://github.com/baskerville/bspwm/pull/1192,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/1192#issuecomment-688739932,"Example use cases:

polybar module that shows an ""M"" when the focused desktop's layout is monocle:

[module/desktop_monocle]
type = custom/script
exec-if = bspc query -D -d focused.monocle
exec = echo M

go to the next monocle desktop:

bspc desktop next.user_monocle -f

spawn the next window in a desktop that is monocle only because of single_monocle (i.e. desktop with only one tiled leaf node):

bspc rule -a \* -o desktop=any.monocle.user_tiled


I also fixed a mistake in the documentation in the second commit. (moved to a separate Pull Request since it isn't related)",Thanks.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1194,2020-09-06T12:51:25Z,2020-09-08T09:20:27Z,2020-09-08T09:21:19Z,CLOSED,False,1,1,1,https://github.com/emanuele6,Fix `bspc rule -r <^n>` completion for zsh,1,[],https://github.com/baskerville/bspwm/pull/1194,https://github.com/emanuele6,1,https://github.com/baskerville/bspwm/pull/1194,"Indexes were offsetted by one and started from 0.
0 is not a valid index.
Fixes #1193.","Indexes were offsetted by one and started from 0.
0 is not a valid index.
Fixes #1193.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1194,2020-09-06T12:51:25Z,2020-09-08T09:20:27Z,2020-09-08T09:21:19Z,CLOSED,False,1,1,1,https://github.com/emanuele6,Fix `bspc rule -r <^n>` completion for zsh,1,[],https://github.com/baskerville/bspwm/pull/1194,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/1194#issuecomment-688739873,"Indexes were offsetted by one and started from 0.
0 is not a valid index.
Fixes #1193.",Thanks.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1195,2020-09-06T17:20:06Z,2020-09-08T09:20:14Z,2020-09-08T09:21:03Z,CLOSED,False,1,1,1,https://github.com/emanuele6,Fix asciidoc syntax in the manual.,1,[],https://github.com/baskerville/bspwm/pull/1195,https://github.com/emanuele6,1,https://github.com/baskerville/bspwm/pull/1195,"The last asterisk of this line should not be escaped since it is not
paired with another asterisk.
The backslash was being rendered in the man page.","The last asterisk of this line should not be escaped since it is not
paired with another asterisk.
The backslash was being rendered in the man page.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1195,2020-09-06T17:20:06Z,2020-09-08T09:20:14Z,2020-09-08T09:21:03Z,CLOSED,False,1,1,1,https://github.com/emanuele6,Fix asciidoc syntax in the manual.,1,[],https://github.com/baskerville/bspwm/pull/1195,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/1195#issuecomment-688739741,"The last asterisk of this line should not be escaped since it is not
paired with another asterisk.
The backslash was being rendered in the man page.",Thanks.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1197,2020-09-07T00:09:27Z,2020-09-08T09:19:25Z,2020-09-08T09:21:43Z,CLOSED,False,3,0,1,https://github.com/emanuele6,Improve locate_desktop() and locate_monitor().,1,[],https://github.com/baskerville/bspwm/pull/1197,https://github.com/emanuele6,1,https://github.com/baskerville/bspwm/pull/1197,"In locate_desktop(), loc->monitor and loc->desktop are now set to NULL if no desktop is located.
In locate_monitor(), loc->monitor is now set to NULL if no monitor is located.
This prevents bspwm from crashing if..
bspc node -m %invalid_name
..or..
bspc node -d %invalid_name
..is run.
Fixes #1196.","In locate_desktop(), loc->monitor and loc->desktop are now set to NULL if no desktop is located.
In locate_monitor(), loc->monitor is now set to NULL if no monitor is located.
This prevents bspwm from crashing if..
bspc node -m %invalid_name
..or..
bspc node -d %invalid_name
..is run.
Fixes #1196.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1202,2020-09-29T02:55:03Z,,2020-10-01T16:30:30Z,OPEN,False,20,0,1,https://github.com/jallbrit,Add media key example hotkeys to sxhkdrc,1,[],https://github.com/baskerville/bspwm/pull/1202,https://github.com/jallbrit,1,https://github.com/baskerville/bspwm/pull/1202,"The example sxhkdrc is pretty bare bones and could use some simple, system-independent changes. I've added hotkeys for some common laptop media keys like adjusting volume and brightness. This helps bspwm work more out-of-the-box. New users may not expect having to manually map their brightness control/volume adjustment.","The example sxhkdrc is pretty bare bones and could use some simple, system-independent changes. I've added hotkeys for some common laptop media keys like adjusting volume and brightness. This helps bspwm work more out-of-the-box. New users may not expect having to manually map their brightness control/volume adjustment.",True,{'THUMBS_UP': ['https://github.com/SeerLite']}
baskerville/bspwm,https://github.com/baskerville/bspwm,1202,2020-09-29T02:55:03Z,,2020-10-01T16:30:30Z,OPEN,False,20,0,1,https://github.com/jallbrit,Add media key example hotkeys to sxhkdrc,1,[],https://github.com/baskerville/bspwm/pull/1202,https://github.com/emanuele6,2,https://github.com/baskerville/bspwm/pull/1202#issuecomment-700437377,"The example sxhkdrc is pretty bare bones and could use some simple, system-independent changes. I've added hotkeys for some common laptop media keys like adjusting volume and brightness. This helps bspwm work more out-of-the-box. New users may not expect having to manually map their brightness control/volume adjustment.","I don't get why you say that these are system-independent changes; amixer only works with ALSA (which you could say it's very popular and used by a lot of desktop systems), but, even if we ignore that, the /sys API you are using (like all the other /sys APIs) is Linux-specific and won't work on anything that isn't Linux.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1202,2020-09-29T02:55:03Z,,2020-10-01T16:30:30Z,OPEN,False,20,0,1,https://github.com/jallbrit,Add media key example hotkeys to sxhkdrc,1,[],https://github.com/baskerville/bspwm/pull/1202,https://github.com/jallbrit,3,https://github.com/baskerville/bspwm/pull/1202#issuecomment-700731183,"The example sxhkdrc is pretty bare bones and could use some simple, system-independent changes. I've added hotkeys for some common laptop media keys like adjusting volume and brightness. This helps bspwm work more out-of-the-box. New users may not expect having to manually map their brightness control/volume adjustment.","I've updated my comment to remove that phrase. The current sxhkdrc includes commands that are system-dependent but work on a lot of machines (e.g. urxvt, dmenu_run), so I still see value in adding more system-dependent examples (like amixer) even if they aren't present on 100% of target machines.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1202,2020-09-29T02:55:03Z,,2020-10-01T16:30:30Z,OPEN,False,20,0,1,https://github.com/jallbrit,Add media key example hotkeys to sxhkdrc,1,[],https://github.com/baskerville/bspwm/pull/1202,https://github.com/SeerLite,4,https://github.com/baskerville/bspwm/pull/1202#issuecomment-700860643,"The example sxhkdrc is pretty bare bones and could use some simple, system-independent changes. I've added hotkeys for some common laptop media keys like adjusting volume and brightness. This helps bspwm work more out-of-the-box. New users may not expect having to manually map their brightness control/volume adjustment.","I like the idea of these examples! But I feel like making them system-independent isn't really necessary (cause I mean if you're using some BSD you should be able to figure this stuff out by yourself, I think).
Personally, I'd just title the section ""media keys (Linux)"" and only focus on that.
Also, I think using light for brightness might be a little bit clearer for new people. Just a suggestion!",True,{'THUMBS_UP': ['https://github.com/jallbrit']}
baskerville/bspwm,https://github.com/baskerville/bspwm,1202,2020-09-29T02:55:03Z,,2020-10-01T16:30:30Z,OPEN,False,20,0,1,https://github.com/jallbrit,Add media key example hotkeys to sxhkdrc,1,[],https://github.com/baskerville/bspwm/pull/1202,https://github.com/jallbrit,5,https://github.com/baskerville/bspwm/pull/1202#issuecomment-700863936,"The example sxhkdrc is pretty bare bones and could use some simple, system-independent changes. I've added hotkeys for some common laptop media keys like adjusting volume and brightness. This helps bspwm work more out-of-the-box. New users may not expect having to manually map their brightness control/volume adjustment.","I think we should definitely make the commands as portable as possible, while also being realistic. That being said, in my opinion it is more portable to use the echo > /sys method that I currently have over something like light or xbacklight or brightnessctl or whatever, simply because most (if not all) Linux systems can use echo but you have to manually install all those other programs (and most people don't).
I knew that the echo > sys method would be a pain point for this PR, but I feel that it's important to include some form of brightness control because it's such an important feature for laptop bspwm users.",True,{'THUMBS_UP': ['https://github.com/SeerLite']}
baskerville/bspwm,https://github.com/baskerville/bspwm,1202,2020-09-29T02:55:03Z,,2020-10-01T16:30:30Z,OPEN,False,20,0,1,https://github.com/jallbrit,Add media key example hotkeys to sxhkdrc,1,[],https://github.com/baskerville/bspwm/pull/1202,https://github.com/SeerLite,6,https://github.com/baskerville/bspwm/pull/1202#issuecomment-700949069,"The example sxhkdrc is pretty bare bones and could use some simple, system-independent changes. I've added hotkeys for some common laptop media keys like adjusting volume and brightness. This helps bspwm work more out-of-the-box. New users may not expect having to manually map their brightness control/volume adjustment.","Makes sense!
I still find it kinda hard to read at first though. What about splitting it up into multiple lines, like this?
brightness_file=""/sys/class/backlight/*/brightness""; \
original_brightness=$(cat ""$brightness_file""); \
echo $((original_brightness + 15 * {1,5} * {-2,2})) > ""$brightness_file""
It could even work as an example for ""pseudo multi-line"" hotkeys. Again, it's just a suggestion!",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1202,2020-09-29T02:55:03Z,,2020-10-01T16:30:30Z,OPEN,False,20,0,1,https://github.com/jallbrit,Add media key example hotkeys to sxhkdrc,1,[],https://github.com/baskerville/bspwm/pull/1202,https://github.com/emanuele6,7,https://github.com/baskerville/bspwm/pull/1202#issuecomment-701098840,"The example sxhkdrc is pretty bare bones and could use some simple, system-independent changes. I've added hotkeys for some common laptop media keys like adjusting volume and brightness. This helps bspwm work more out-of-the-box. New users may not expect having to manually map their brightness control/volume adjustment.","@SeerLite Have you tried that before suggesting it? That won't work!
You quoted the *, it won't expand: brightness_file=""/sys/class/backlight/*/brightness"", you need to do something like this:
brightness_file=/sys/class/backlight/*/brightness; \
original_brightness=""$(cat $brightness_file)""; \
echo ""$((original_brightness + 15 * {1,5} * {-2,2}))"" > $brightness_file

Even if you fix the mistake you made in your script, this approach is still very problematic.
On my laptop, a 2011 thinkpad T420 with ArchLinux using kernel ""Linux 5.4.68-1-lts"", I have two matches for /sys/class/backlight/*/brightness:
$ printf ""%s\n"" /sys/class/backlight/*/brightness
/sys/class/backlight/acpi_video0/brightness
/sys/class/backlight/intel_backlight/brightness
If we want to make this script not ""laptops which only have one backlight device""-specific, we need more changes (the previous script won't work on my laptop for example):
brightness_file=""$(printf '%s\n' /sys/class/backlight/*/brightness | head -1)""; \
original_brightness=""$(cat ""$brightness_file"")""; \
echo ""$((original_brightness + 15 * {1,5} * {-2,2}))"" > ""$brightness_file""

But hold on, this still won't work on my laptop.
My user doesn't have permissions to write to these file (it only has read permission):
$ getent passwd ""$USER""
emanuele6:x:1000:998::/home/emanuele6:/bin/bash
$ id ""$USER""
uid=1000(emanuele6) gid=998(wheel) groups=998(wheel),5(tty)
$ echo 20 > /sys/class/backlight/acpi_video0/brightness
dash: 3: cannot create /sys/class/backlight/acpi_video0/brightness: Permission denied
$ echo 20 > /sys/class/backlight/intel_backlight/brightness
dash: 4: cannot create /sys/class/backlight/intel_backlight/brightness: Permission denied
So, this approach will only work if you run sxhkd as root or, if you mess with privileges of your user or with permissions of your filesystem (which @jallbrit probably did and forgot about?).

There's still another problem that prevents this from working on my laptop:
$ echo 20 | sudo tee /sys/class/backlight/acpi_video0/brightness
20
tee: /sys/class/backlight/acpi_video0/brightness: Invalid argument
$ echo 20 | sudo tee /sys/class/backlight/intel_backlight/brightness
20
Only one of the two devices actually works (acpi_video0 probably doesn't accept message because it's being controlled by intel_backlight which is a virtual driver?); and since, alphabetically, acpi_video0 comes before intel_backlight, the wrong device will get picked by head -1.

Note that xbacklight uses the Xrandr API to get/set the brightness of displays and that API will work on any system with Xorg and doesn't require special privileges/permissions; example:
XF86MonBrightness{Up,Down}{_, + shift}
	xbacklight -{inc,dec} {15, 30}

The fact that this don't work on my laptop shows that this method is not as ""portable"" as you think since it highly relies on the specific kind of hardware your laptop has.
Also note that as soon as you connect an external monitor which has a backlight, a new devices will be created in /sys/class/backlight which will mess with your script even if you don't normally have two backlights like I do.
Also, I think that LED displays don't have a backlight device, so this approach won't work with them. (NOTE: this one is just speculation, I don't know for sure.)
Using the /sys API in this usecase is really not smart. (It won't work on my Linux laptop!).

EDIT:
Also note that my laptop already reacts to XF86MonBrightnessUp and XF86MonBrightnessDown by increasing and decreasing the brightness for some reasons (at hardware level?). So the binding which uses xbacklight that I showed here are pretty glitchy, but work correctly (because the automatic change is probably just at hardware level and gets overwritten).",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1202,2020-09-29T02:55:03Z,,2020-10-01T16:30:30Z,OPEN,False,20,0,1,https://github.com/jallbrit,Add media key example hotkeys to sxhkdrc,1,[],https://github.com/baskerville/bspwm/pull/1202,https://github.com/jallbrit,8,https://github.com/baskerville/bspwm/pull/1202#issuecomment-701107840,"The example sxhkdrc is pretty bare bones and could use some simple, system-independent changes. I've added hotkeys for some common laptop media keys like adjusting volume and brightness. This helps bspwm work more out-of-the-box. New users may not expect having to manually map their brightness control/volume adjustment.","@emanuele6 thank you for your extensive testing. I took a peek at the brightness file permissions:
-rw-rw-r-- 1 root video 4.0K Jan 12 12:34 brightness

Since my user is part of the video group, I am able to edit the file. I don't recall doing this manually.
xbacklight unfortunately does not work out of the box on my machine (Thinkpad T440s, Linux 5.7.0-3-amd64): xbacklight -get and xbacklight -set 50 both exit with exit code 0 and do not give any output. I will look into why this is.
Unfortunately the XF86MonBrightnessUp/Down keys on my machine also do not do anything in the absence of sxhkd.
That being said, is xbacklight the most portable option?",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1202,2020-09-29T02:55:03Z,,2020-10-01T16:30:30Z,OPEN,False,20,0,1,https://github.com/jallbrit,Add media key example hotkeys to sxhkdrc,1,[],https://github.com/baskerville/bspwm/pull/1202,https://github.com/SeerLite,9,https://github.com/baskerville/bspwm/pull/1202#issuecomment-701111691,"The example sxhkdrc is pretty bare bones and could use some simple, system-independent changes. I've added hotkeys for some common laptop media keys like adjusting volume and brightness. This helps bspwm work more out-of-the-box. New users may not expect having to manually map their brightness control/volume adjustment.","You quoted the *, it won't expand: brightness_file=""/sys/class/backlight/*/brightness""

whoops :S
Also, I completely forgot about the whole group/permissions thing. I remember having to do it manually on Arch, but maybe other distros come with it by default?

That being said, is xbacklight the most portable option?

I think light is a better option. It has always worked fine for me. Quoting from the README itself:

Light is a program to control backlights and other lights under GNU/Linux:

Works where other software has proven unreliable (xbacklight etc.)
Works even in a fully CLI-environment, i.e. it does not rely on X
Provides functionality to automatically control backlights with the highest precision available
Extra features, like setting a minimum brightness value for controllers, or saving/restoring the value for poweroffs/boots.


Careful, though: It also requires the user to be in the video group.
IIRC xbacklight requires a group too, but it's a different one. I think there just isn't a way to make this work out of the box on all distros.
What I'd do is just use light and put a comment saying something like ""note: add your user to the video group for this to work!"".
@emanuele6 What are your thoughts on that?",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1202,2020-09-29T02:55:03Z,,2020-10-01T16:30:30Z,OPEN,False,20,0,1,https://github.com/jallbrit,Add media key example hotkeys to sxhkdrc,1,[],https://github.com/baskerville/bspwm/pull/1202,https://github.com/jallbrit,10,https://github.com/baskerville/bspwm/pull/1202#issuecomment-701112913,"The example sxhkdrc is pretty bare bones and could use some simple, system-independent changes. I've added hotkeys for some common laptop media keys like adjusting volume and brightness. This helps bspwm work more out-of-the-box. New users may not expect having to manually map their brightness control/volume adjustment.","light is available in the apt repo and works out of the box on my machine. It seems clear at this point that either light or xbacklight would be better options than the /sys method.

I think there just isn't a way to make this work out of the box on all distros.

That may be true.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1202,2020-09-29T02:55:03Z,,2020-10-01T16:30:30Z,OPEN,False,20,0,1,https://github.com/jallbrit,Add media key example hotkeys to sxhkdrc,1,[],https://github.com/baskerville/bspwm/pull/1202,https://github.com/emanuele6,11,https://github.com/baskerville/bspwm/pull/1202#issuecomment-701198505,"The example sxhkdrc is pretty bare bones and could use some simple, system-independent changes. I've added hotkeys for some common laptop media keys like adjusting volume and brightness. This helps bspwm work more out-of-the-box. New users may not expect having to manually map their brightness control/volume adjustment.","@SeerLite, as you can see from the output of id ""$USER"" here #1202 (comment), my user is only in the wheel group and in the tty group:
$ id ""$USER""
uid=1000(emanuele6) gid=998(wheel) groups=998(wheel),5(tty)
I can use xbacklight just fine.

xbacklight shouldn't need any specific group for privileges.
Could the problem here possibly be that you guys are running a display manager or something similar as root and that that causes Xorg to only accept xbacklight requests from root?
If that's the case, can you guys try to start X with a simple startx with the same user that supposedly can't use xbacklight using e.g. this .xinitrc file:
#!/bin/sh
exec bspwm
and then try to run xbacklight -dec 20 and see if it works?

Also note that light also requires to be called from a user in the video group or root:
$ light -U 10; echo ""$?""
1
$ sudo light -U 10; echo ""$?""
0
$ sudo usermod -a -Gvideo emanuele6
$ # after a reboot
$ id
uid=1000(emanuele6) gid=998(wheel) groups=998(wheel),5(tty),986(video)
$ light -U 10; echo ""$?""
0",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1202,2020-09-29T02:55:03Z,,2020-10-01T16:30:30Z,OPEN,False,20,0,1,https://github.com/jallbrit,Add media key example hotkeys to sxhkdrc,1,[],https://github.com/baskerville/bspwm/pull/1202,https://github.com/jallbrit,12,https://github.com/baskerville/bspwm/pull/1202#issuecomment-701499099,"The example sxhkdrc is pretty bare bones and could use some simple, system-independent changes. I've added hotkeys for some common laptop media keys like adjusting volume and brightness. This helps bspwm work more out-of-the-box. New users may not expect having to manually map their brightness control/volume adjustment.","Could the problem here possibly be that you guys are running a display manager or something similar as root and that that causes Xorg to only accept xbacklight requests from root?

I am running a display manager (I guess that runs as root?) but even when i try using sudo xbacklight -get or other xbacklight commands, I have the same problem (no output, exit code 0). Unfortunately I have too many windows/tasks going on that I can't really restart X right now, but I would imagine using sudo would have the same effect as running X via startx since I would have all the correct privileges?
Perhaps light requires the video group for a specific purpose, so that it is possible for administrators to control who can adjust the backlight? I'm not sure if this is intentional or just an annoyance. The README only says:

Note: make sure that your user is part of the video group, otherwise you will not get access to the devices.

Also I checked and light does not use the SUID bit (if that affects anything).",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1202,2020-09-29T02:55:03Z,,2020-10-01T16:30:30Z,OPEN,False,20,0,1,https://github.com/jallbrit,Add media key example hotkeys to sxhkdrc,1,[],https://github.com/baskerville/bspwm/pull/1202,https://github.com/SeerLite,13,https://github.com/baskerville/bspwm/pull/1202#issuecomment-701577806,"The example sxhkdrc is pretty bare bones and could use some simple, system-independent changes. I've added hotkeys for some common laptop media keys like adjusting volume and brightness. This helps bspwm work more out-of-the-box. New users may not expect having to manually map their brightness control/volume adjustment.","@jallbrit The Arch wiki says that there are some limitations with xbacklight. (I think those are the main reasons light exists too).
I haven't mentioned this, but my current display actually doesn't support backlight control at all. I've only been speaking from my experience of when I used to have a laptop. This means I can't really test if xbacklight works with startx, sorry about that :",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1202,2020-09-29T02:55:03Z,,2020-10-01T16:30:30Z,OPEN,False,20,0,1,https://github.com/jallbrit,Add media key example hotkeys to sxhkdrc,1,[],https://github.com/baskerville/bspwm/pull/1202,https://github.com/jallbrit,14,https://github.com/baskerville/bspwm/pull/1202#issuecomment-701688344,"The example sxhkdrc is pretty bare bones and could use some simple, system-independent changes. I've added hotkeys for some common laptop media keys like adjusting volume and brightness. This helps bspwm work more out-of-the-box. New users may not expect having to manually map their brightness control/volume adjustment.",I went ahead and committed the change to use light.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1202,2020-09-29T02:55:03Z,,2020-10-01T16:30:30Z,OPEN,False,20,0,1,https://github.com/jallbrit,Add media key example hotkeys to sxhkdrc,1,[],https://github.com/baskerville/bspwm/pull/1202,https://github.com/emanuele6,15,https://github.com/baskerville/bspwm/pull/1202#issuecomment-701735579,"The example sxhkdrc is pretty bare bones and could use some simple, system-independent changes. I've added hotkeys for some common laptop media keys like adjusting volume and brightness. This helps bspwm work more out-of-the-box. New users may not expect having to manually map their brightness control/volume adjustment.","I don't get why there has to be a separate commit for the switch to using light since it's changing something that was introduced by the same PR and why these commits can't just be squashed into a single one, but, ignoring that..
..in the example sxhkd configuration that can be found in baskerville/sxhkd/README.md, there is already an example hotkey for changing the brightness:
{_,shift + ,super + }XF86MonBrightness{Down,Up}
	bright {-1,-10,min,+1,+10,max}
This furhter shows how futile this PR is: this example has nothing to do with bspwm and the same example can already be found in the sxhkd repo.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1202,2020-09-29T02:55:03Z,,2020-10-01T16:30:30Z,OPEN,False,20,0,1,https://github.com/jallbrit,Add media key example hotkeys to sxhkdrc,1,[],https://github.com/baskerville/bspwm/pull/1202,https://github.com/SeerLite,16,https://github.com/baskerville/bspwm/pull/1202#issuecomment-701741472,"The example sxhkdrc is pretty bare bones and could use some simple, system-independent changes. I've added hotkeys for some common laptop media keys like adjusting volume and brightness. This helps bspwm work more out-of-the-box. New users may not expect having to manually map their brightness control/volume adjustment.","Right, but that's the sxhkd README on the sxhkd repo. Not example/base configuration files that are (AFAIK) installed with packages or as documentation. I don't think many people see the examples on the sxhkd repo.
Also, I wouldn't call this PR futile. There's no harm in having more examples, right?
That said, I have never heard of bright and can't find it as any binary/package (on the Arch repos at least :p). It does work as a good example, but I think light is fine.
@jallbrit Btw, you can do light -{U,A} directly",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1202,2020-09-29T02:55:03Z,,2020-10-01T16:30:30Z,OPEN,False,20,0,1,https://github.com/jallbrit,Add media key example hotkeys to sxhkdrc,1,[],https://github.com/baskerville/bspwm/pull/1202,https://github.com/jallbrit,17,https://github.com/baskerville/bspwm/pull/1202#issuecomment-701760575,"The example sxhkdrc is pretty bare bones and could use some simple, system-independent changes. I've added hotkeys for some common laptop media keys like adjusting volume and brightness. This helps bspwm work more out-of-the-box. New users may not expect having to manually map their brightness control/volume adjustment.","I don't get why there has to be a separate commit for the switch to using light since it's changing something that was introduced by the same PR and why these commits can't just be squashed into a single one, but, ignoring that..

It is my understanding that squashing commits changes git history, which would require a git push -f which is generally not recommended. What is the best practice here?

..in the example sxhkd configuration that can be found in baskerville/sxhkd/README.md, there is already an example hotkey for changing the brightness:

While it's great that sxhkd's README includes that helpful info, there is still value in including keybindings in the default sxhkdrc that comes packaged with bspwm. Otherwise we may as well just remove the whole default sxhkdrc and tell people ""oh, well just look at the sxhkrc repo for an example!"" you know?

Btw, you can do light -{U,A} directly

@SeerLite I appreciate the recommendation, but the current syntax...
{_, shift +}XF86MonBrightness{Down,Up}
	echo ""{2,10}"" | xargs light -{U,A}

works because {_, shift +} comes before {Down,Up} so I must first decide between 2 and 10 then decide between -U and -A. Essentially, ordering of the sets of {} is really important here, so basically I reversed the arguments using xarg. If there's a better way to do so, tell me!",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1202,2020-09-29T02:55:03Z,,2020-10-01T16:30:30Z,OPEN,False,20,0,1,https://github.com/jallbrit,Add media key example hotkeys to sxhkdrc,1,[],https://github.com/baskerville/bspwm/pull/1202,https://github.com/emanuele6,18,https://github.com/baskerville/bspwm/pull/1202#issuecomment-701814471,"The example sxhkdrc is pretty bare bones and could use some simple, system-independent changes. I've added hotkeys for some common laptop media keys like adjusting volume and brightness. This helps bspwm work more out-of-the-box. New users may not expect having to manually map their brightness control/volume adjustment.","It is my understanding that squashing commits changes git history, which would require a git push -f which is generally not recommended. What is the best practice here?

Can you justify why git push --force is ""bad practice""? Force-pushing on baskerville/bspwm's master of course is bad, but why do you think deleting the history of a PR branch or of a local branch is bad? You are not changing the history of master...
Once it gets added to master, it is going to have different hashes anyways, no? It will be commited by baskerville and authored by you, it will be commited at a different time, the man page will be recompiled with the new latest commit, &c...


just remove the whole default sxhkdrc


the default sxhkdrc

example :)

Otherwise we may as well just remove the whole default sxhkdrc and tell people ""oh, well just look at the sxhkrc repo for an example!"" you know?

There are useful examples related to bspwm in that example file: the only non-bspwm-specific are the ones for opening a urxvt window and the one to launch dmenu_run (for usability) and the one to reload sxhkd for convenience.
I don't get why you say that since the sxhkd example hotkeys found in baskerville/bspwm are not also in baskerville/sxhkd.
There is already an example hotkey for changing the backlight brightness of LCD monitors in baskerville/sxhkd and it is not bspwm-specific.
I personally wouldn't like looking on the internet for bspwm example and finding generic sxhkd examples, that's just useless information! (or looking for example for something and finding examples for something else along with the examples I want.)
That file is an example, not an actual configuration file that gets used by default if you install bspwm or sxhkd.


If there's a better way to do so, tell me!

In this comment of mine #1202 (comment), you can see that I didn't need to use xargs for the xbacklight, you can use the exact same method with light:
XF86MonBrightness{Up,Down}{_, + shift}
	light -{A,U} {15,30}
An alternative solution would be:
{_,shift + }XF86MonBrightness{Up,Down}
	light {-A 15,-A 30,-U 15,-U 30}",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1202,2020-09-29T02:55:03Z,,2020-10-01T16:30:30Z,OPEN,False,20,0,1,https://github.com/jallbrit,Add media key example hotkeys to sxhkdrc,1,[],https://github.com/baskerville/bspwm/pull/1202,https://github.com/jallbrit,19,https://github.com/baskerville/bspwm/pull/1202#issuecomment-702242203,"The example sxhkdrc is pretty bare bones and could use some simple, system-independent changes. I've added hotkeys for some common laptop media keys like adjusting volume and brightness. This helps bspwm work more out-of-the-box. New users may not expect having to manually map their brightness control/volume adjustment.","Can you justify why git push --force is bad practice? on force-pushing on baskerville/bspwm's master of course is bad, but why do you think deleting the history of a PR branch or of a local branch is bad? You are not changing the history of master...

It's something I've read before but don't have experience with, so that's why I left the question open-ended. I see now that I should squash the commits.
XF86MonBrightness{Up,Down}{_, + shift}
	light -{A,U} {15,30}

This is a better way.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1203,2020-09-29T19:35:05Z,,2020-09-30T02:26:38Z,OPEN,False,4,1,1,https://github.com/SeerLite,Start sxhkd on run level 0 in the example bspwmrc,1,[],https://github.com/baskerville/bspwm/pull/1203,https://github.com/SeerLite,1,https://github.com/baskerville/bspwm/pull/1203,"I only now realized we don't have to check if sxhkd is running before starting, if we use the feature from a54ab70.
It also works as an example so more people notice the feature.","I only now realized we don't have to check if sxhkd is running before starting, if we use the feature from a54ab70.
It also works as an example so more people notice the feature.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1203,2020-09-29T19:35:05Z,,2020-09-30T02:26:38Z,OPEN,False,4,1,1,https://github.com/SeerLite,Start sxhkd on run level 0 in the example bspwmrc,1,[],https://github.com/baskerville/bspwm/pull/1203,https://github.com/emanuele6,2,https://github.com/baskerville/bspwm/pull/1203#issuecomment-701110173,"I only now realized we don't have to check if sxhkd is running before starting, if we use the feature from a54ab70.
It also works as an example so more people notice the feature.","I generally suggest using = instead of -eq to check the run level since we can't know if ""$1"" is an integer.
If one tries to run bspwmrc without arguments from the command line (e.g. ~/config/bspwm/bspwmrc), this error will be printed:

dash: dash: 1: [: Illegal number:;
bash: bash: [: : integer expression expected.

If you use = instead of -eq, this error is avoided because [ """" = 0 ] is just false (while [ """" -eq 0 ] will cause the error) and sxhkd still won't run because the check is false.

But why do this change? What's the benefit?
pgrep -x sxhkd > /dev/null || sxhkd & will automatically relaunch sxhkd if you reaload bspwm after sxhkd crashed.
Wanting bspwm to launch sxhkd only on run level 0 is just personal preference in my opinion, what's the point of this change?",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1203,2020-09-29T19:35:05Z,,2020-09-30T02:26:38Z,OPEN,False,4,1,1,https://github.com/SeerLite,Start sxhkd on run level 0 in the example bspwmrc,1,[],https://github.com/baskerville/bspwm/pull/1203,https://github.com/SeerLite,3,https://github.com/baskerville/bspwm/pull/1203#issuecomment-701119392,"I only now realized we don't have to check if sxhkd is running before starting, if we use the feature from a54ab70.
It also works as an example so more people notice the feature.","what's the point of this change?

The reason I came up with this in the first place is because I noticed there wasn't any example of the run level feature anywhere (or at least I couldn't find it, correct me if I'm wrong!)
I thought making sxhkd use it was a good idea, since it was already in the bspwmrc example.
Thanks for the = vs -eq warning! I'm changing it now!",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1205,2020-10-03T17:10:16Z,,2020-10-03T17:10:16Z,OPEN,False,1,1,1,https://github.com/DRG-developer,make the XCB_CONN_ERROR actually usefull,1,[],https://github.com/baskerville/bspwm/pull/1205,https://github.com/DRG-developer,1,https://github.com/baskerville/bspwm/pull/1205,"i had this issue, and the only way i found the solution was by grepping in the source code for this error msg. turns out i was being stupid and not using startx.","i had this issue, and the only way i found the solution was by grepping in the source code for this error msg. turns out i was being stupid and not using startx.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1223,2020-11-14T15:56:01Z,2020-12-24T09:35:11Z,2020-12-24T09:35:11Z,CLOSED,False,23,3,9,https://github.com/shashurup,Borderless singleton,2,[],https://github.com/baskerville/bspwm/pull/1223,https://github.com/shashurup,1,https://github.com/baskerville/bspwm/pull/1223,"I prefer bright borders so that I see window I'm about to type something like Ctrl+D to is not focused.
However, for reading, my low distraction mode consists of the pseudo-tiled browser window where bright border looks absolutely inappropriate.
Removing individual window border each time I unplug my desk monitors is a bit tiresome so I decided to find a way to do this automatically.  The setting like borderless_monocle seemed promising however, in the multi-monitor configuration it is hard to figure which window is focused. So I came up with a different solution - in the single-monitor configuration there is no reason to display a border when there is just one window on a desktop.
So, here is a new setting.","I prefer bright borders so that I see window I'm about to type something like Ctrl+D to is not focused.
However, for reading, my low distraction mode consists of the pseudo-tiled browser window where bright border looks absolutely inappropriate.
Removing individual window border each time I unplug my desk monitors is a bit tiresome so I decided to find a way to do this automatically.  The setting like borderless_monocle seemed promising however, in the multi-monitor configuration it is hard to figure which window is focused. So I came up with a different solution - in the single-monitor configuration there is no reason to display a border when there is just one window on a desktop.
So, here is a new setting.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1223,2020-11-14T15:56:01Z,2020-12-24T09:35:11Z,2020-12-24T09:35:11Z,CLOSED,False,23,3,9,https://github.com/shashurup,Borderless singleton,2,[],https://github.com/baskerville/bspwm/pull/1223,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/1223#issuecomment-750824134,"I prefer bright borders so that I see window I'm about to type something like Ctrl+D to is not focused.
However, for reading, my low distraction mode consists of the pseudo-tiled browser window where bright border looks absolutely inappropriate.
Removing individual window border each time I unplug my desk monitors is a bit tiresome so I decided to find a way to do this automatically.  The setting like borderless_monocle seemed promising however, in the multi-monitor configuration it is hard to figure which window is focused. So I came up with a different solution - in the single-monitor configuration there is no reason to display a border when there is just one window on a desktop.
So, here is a new setting.",Thanks.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1232,2020-12-04T13:57:14Z,2021-05-28T10:17:38Z,2021-05-29T05:42:09Z,CLOSED,False,32,33,1,https://github.com/emanuele6,Allow negated window modifiers to match non-window nodes,2,[],https://github.com/baskerville/bspwm/pull/1232,https://github.com/emanuele6,1,https://github.com/baskerville/bspwm/pull/1232,"For example, .!floating used to only match nodes that hold a window that are not in floating state; now, .!floating will match any node that is not a window node in floating state.
To use the old behaviour, you can just use the negated window modifier with .window; e.g.:

.!floating -> .!floating.window
.!same_class -> .!same_class.window
.!hidden.!sticky -> .!hidden.!sticky.window

In my opinion, the old behaviour was counterintuitive since, e.g., .tiled and .!tiled were not complementary and because of the way this was reported on the manual page.","For example, .!floating used to only match nodes that hold a window that are not in floating state; now, .!floating will match any node that is not a window node in floating state.
To use the old behaviour, you can just use the negated window modifier with .window; e.g.:

.!floating -> .!floating.window
.!same_class -> .!same_class.window
.!hidden.!sticky -> .!hidden.!sticky.window

In my opinion, the old behaviour was counterintuitive since, e.g., .tiled and .!tiled were not complementary and because of the way this was reported on the manual page.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1232,2020-12-04T13:57:14Z,2021-05-28T10:17:38Z,2021-05-29T05:42:09Z,CLOSED,False,32,33,1,https://github.com/emanuele6,Allow negated window modifiers to match non-window nodes,2,[],https://github.com/baskerville/bspwm/pull/1232,https://github.com/emanuele6,2,https://github.com/baskerville/bspwm/pull/1232#issuecomment-753490272,"For example, .!floating used to only match nodes that hold a window that are not in floating state; now, .!floating will match any node that is not a window node in floating state.
To use the old behaviour, you can just use the negated window modifier with .window; e.g.:

.!floating -> .!floating.window
.!same_class -> .!same_class.window
.!hidden.!sticky -> .!hidden.!sticky.window

In my opinion, the old behaviour was counterintuitive since, e.g., .tiled and .!tiled were not complementary and because of the way this was reported on the manual page.","This is useful because it allows to query all the leaf nodes that occupy tiling space (""non-vacant leaves"" (?)):
local_tiled_leaves=( $(bspc query -N -n '.local.!floating.!fullscreen.!hidden.leaf') )
Since, in the current version, .local.!floating.!fullscreen.leaf is the same as .local.!floating.!fullscreen.window, you need to use two queries (to also get the receptacles):
local_tiled_leaves=( $(bspc query -N -n '.local.!hidden.!floating.!fullscreen') $(bspc query -N -n '.local.!window.leaf') )",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1246,2021-01-09T08:47:16Z,,2021-01-09T08:47:16Z,OPEN,False,3,0,1,https://github.com/cbarrete,Honor `pointer_follows_focus` when node commands change the tree,1,[],https://github.com/baskerville/bspwm/pull/1246,https://github.com/cbarrete,1,https://github.com/baskerville/bspwm/pull/1246,This centers the pointer after e.g. rotating a tree or balancing the node ratios.,This centers the pointer after e.g. rotating a tree or balancing the node ratios.,True,"{'HOORAY': ['https://github.com/cjk', 'https://github.com/D3SK3R']}"
baskerville/bspwm,https://github.com/baskerville/bspwm,1251,2021-01-26T12:31:02Z,,2021-05-23T04:53:57Z,OPEN,False,3,6,2,https://github.com/Nik-Sch,honor_size_hints not for tiled windows (fix #496),1,[],https://github.com/baskerville/bspwm/pull/1251,https://github.com/Nik-Sch,1,https://github.com/baskerville/bspwm/pull/1251,,,True,{'THUMBS_UP': ['https://github.com/g0t00']}
baskerville/bspwm,https://github.com/baskerville/bspwm,1251,2021-01-26T12:31:02Z,,2021-05-23T04:53:57Z,OPEN,False,3,6,2,https://github.com/Nik-Sch,honor_size_hints not for tiled windows (fix #496),1,[],https://github.com/baskerville/bspwm/pull/1251,https://github.com/dimitris-triantafyllidis,2,https://github.com/baskerville/bspwm/pull/1251#issuecomment-846501880,,I think just ignoring honor_size_hints for tiled windows is not a good idea. There should be an option to toggle this behaviour.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1253,2021-01-31T17:45:23Z,2021-05-28T10:17:37Z,2022-01-15T19:05:48Z,CLOSED,False,15,8,2,https://github.com/emanuele6,`node -t ~` can now be used to restore the last state unconditionally.,1,[],https://github.com/baskerville/bspwm/pull/1253,https://github.com/emanuele6,1,https://github.com/baskerville/bspwm/pull/1253,"Currently, to restore the last state (without using query -T -n), you have to use this sequence of ORed commands.
# restore the last state of the focused window
bspc node focused.tiled -t '~tiled' \
    || bspc node focused.pseudo_tiled -t '~pseudo_tiled' \
    || bspc node focused.fullscreen -t '~fullscreen' \
    || bspc node focused.floating -t '~floating'
Simply restoring the last state should not be made that complex, we now allow passing ~ to node -t to restore the last state:
# restore the last state of the focused window
bspc node -t '~'
This also simplifies this kind of operations:
# if the state of the focused window is neither tiled nor pseudo_tiled,
#  change its state to its last state;
#  if its state is still neither pseudo_tiled nor tiled, change its state
#  to tiled.
if
    bspc node focused.fullscreen -t '~fullscreen' \
        || bspc node focused.floating -t '~floating'
then
    bspc node 'focused.!tiled.!pseudo_tiled.window' -t tiled
fi
To:
# if the state of the focused window is neither tiled nor pseudo_tiled,
#  change its state to its last state;
#  if its state is still neither pseudo_tiled nor tiled, change its state
#  to tiled.
bspc node 'focused.!pseudo_tiled.!tiled.window' -t '~' \
    && bspc node 'focused.!pseudo_tiled.!tiled.window' -t tiled","Currently, to restore the last state (without using query -T -n), you have to use this sequence of ORed commands.
# restore the last state of the focused window
bspc node focused.tiled -t '~tiled' \
    || bspc node focused.pseudo_tiled -t '~pseudo_tiled' \
    || bspc node focused.fullscreen -t '~fullscreen' \
    || bspc node focused.floating -t '~floating'
Simply restoring the last state should not be made that complex, we now allow passing ~ to node -t to restore the last state:
# restore the last state of the focused window
bspc node -t '~'
This also simplifies this kind of operations:
# if the state of the focused window is neither tiled nor pseudo_tiled,
#  change its state to its last state;
#  if its state is still neither pseudo_tiled nor tiled, change its state
#  to tiled.
if
    bspc node focused.fullscreen -t '~fullscreen' \
        || bspc node focused.floating -t '~floating'
then
    bspc node 'focused.!tiled.!pseudo_tiled.window' -t tiled
fi
To:
# if the state of the focused window is neither tiled nor pseudo_tiled,
#  change its state to its last state;
#  if its state is still neither pseudo_tiled nor tiled, change its state
#  to tiled.
bspc node 'focused.!pseudo_tiled.!tiled.window' -t '~' \
    && bspc node 'focused.!pseudo_tiled.!tiled.window' -t tiled",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1270,2021-03-08T21:18:22Z,2021-05-28T12:31:55Z,2021-05-28T12:31:55Z,CLOSED,False,5,5,2,https://github.com/mattiabiondi,Fix typo in manpage,1,[],https://github.com/baskerville/bspwm/pull/1270,https://github.com/mattiabiondi,1,https://github.com/baskerville/bspwm/pull/1270,Remove repeated word,Remove repeated word,True,"{'THUMBS_UP': ['https://github.com/emanuele6', 'https://github.com/kokoteen', 'https://github.com/romgille']}"
baskerville/bspwm,https://github.com/baskerville/bspwm,1282,2021-04-10T03:18:14Z,2021-04-17T19:18:28Z,2021-04-17T19:18:28Z,CLOSED,False,1,0,1,https://github.com/sambazley,Fix #1278: find colon after truncating desc,1,[],https://github.com/baskerville/bspwm/pull/1282,https://github.com/sambazley,1,https://github.com/baskerville/bspwm/pull/1282,,,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1283,2021-04-11T23:40:46Z,,2021-04-11T23:40:46Z,OPEN,False,8,34,4,https://github.com/sambazley,Always use relative resizing,1,[],https://github.com/baskerville/bspwm/pull/1283,https://github.com/sambazley,1,https://github.com/baskerville/bspwm/pull/1283,"Reopening #1051 after renaming branch.
Fixes #829.","Reopening #1051 after renaming branch.
Fixes #829.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1284,2021-04-16T11:25:34Z,,2021-04-16T12:18:37Z,OPEN,False,24,4,9,https://github.com/loiccoyle,Separate pointer resize interval #1261,2,[],https://github.com/baskerville/bspwm/pull/1284,https://github.com/loiccoyle,1,https://github.com/baskerville/bspwm/pull/1284,"BSPWM doesn't play too well with resizing OpenGL applications #1261 , I ran into this problem when trying out Alacritty see issue alacritty/alacritty#4813.
The workaround is to lower the pointer_motion_interval which seems to aleviate the issue, but also makes moving floating windows around feel janky which is especially annoying on high refresh rate monitors.
In this PR, I just added a separate pointer_motion_interval_resize setting which allows the user to only limit the resize events, keeping the floating window movement fluid.
This is still not ideal as it seems the root of the problem resides somewhere in the nvidia drivers (?), but that is way above my head.
Hopefully this helps someone.","BSPWM doesn't play too well with resizing OpenGL applications #1261 , I ran into this problem when trying out Alacritty see issue alacritty/alacritty#4813.
The workaround is to lower the pointer_motion_interval which seems to aleviate the issue, but also makes moving floating windows around feel janky which is especially annoying on high refresh rate monitors.
In this PR, I just added a separate pointer_motion_interval_resize setting which allows the user to only limit the resize events, keeping the floating window movement fluid.
This is still not ideal as it seems the root of the problem resides somewhere in the nvidia drivers (?), but that is way above my head.
Hopefully this helps someone.",True,"{'THUMBS_UP': ['https://github.com/gnusenpai', 'https://github.com/kugge', 'https://github.com/blinnk', 'https://github.com/da-h']}"
baskerville/bspwm,https://github.com/baskerville/bspwm,1291,2021-05-13T14:55:10Z,2021-06-01T11:43:47Z,2021-06-11T11:24:34Z,CLOSED,False,29,0,4,https://github.com/samaingw,Change split type (vertical|horizontal) of a node,1,[],https://github.com/baskerville/bspwm/pull/1291,https://github.com/samaingw,1,https://github.com/baskerville/bspwm/pull/1291,"This is neither addressed by rotate nor flip AFAIK.
The goal is to be able to change the split direction of a node, without changing the tree.
Example use case: I have a custom rule to stack things vertically unconditionally. Sometimes it's great, sometimes I prefer a two-column layout, so I just change the split direction of the root node.
Rotating the tree here would change the node (partial) order, which is undesirable in this context.","This is neither addressed by rotate nor flip AFAIK.
The goal is to be able to change the split direction of a node, without changing the tree.
Example use case: I have a custom rule to stack things vertically unconditionally. Sometimes it's great, sometimes I prefer a two-column layout, so I just change the split direction of the root node.
Rotating the tree here would change the node (partial) order, which is undesirable in this context.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1291,2021-05-13T14:55:10Z,2021-06-01T11:43:47Z,2021-06-11T11:24:34Z,CLOSED,False,29,0,4,https://github.com/samaingw,Change split type (vertical|horizontal) of a node,1,[],https://github.com/baskerville/bspwm/pull/1291,https://github.com/emanuele6,2,https://github.com/baskerville/bspwm/pull/1291#issuecomment-850943138,"This is neither addressed by rotate nor flip AFAIK.
The goal is to be able to change the split direction of a node, without changing the tree.
Example use case: I have a custom rule to stack things vertically unconditionally. Sometimes it's great, sometimes I prefer a two-column layout, so I just change the split direction of the root node.
Rotating the tree here would change the node (partial) order, which is undesirable in this context.","This is something that is already possible to do if you didn't know (I do something similar in this script):
case ""$type"" in
    'vertical')
        bspc node ""$node""'#@parent.!vertical' -R -90 \
            && bspc node ""$node""'#@brother' -R 90
        ;;
    'horizontal')
        bspc node ""$node""'#@parent.!horizontal' -R 90 \
            && bspc node ""$node""'#@brother' -R -90
        ;;
esac

I find a little weird that this new command also let's you set the splitType of leaf nodes to ""horizontal"" even though it has no effect and, before this patch (I'm pretty sure), leaf nodes could only have their splitType set to ""vertical"". I also wonder if this could break some internal layout logic.

Anyhow, your implementation of the command is not consistent with other bspwm commands (if it's valid, it always succeeds; even if it does not change any state):
$ bspc query -T -n | jq '.splitType'
""vertical""
$ bspc node -S vertical
$ echo ""$?"" # I expect 1 since nothing should have changed
0
$ bspc query -T -n | jq '.splitType'
""vertical""
$ # I got 0 even though nothing changed
$",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1291,2021-05-13T14:55:10Z,2021-06-01T11:43:47Z,2021-06-11T11:24:34Z,CLOSED,False,29,0,4,https://github.com/samaingw,Change split type (vertical|horizontal) of a node,1,[],https://github.com/baskerville/bspwm/pull/1291,https://github.com/ortango,3,https://github.com/baskerville/bspwm/pull/1291#issuecomment-851089935,"This is neither addressed by rotate nor flip AFAIK.
The goal is to be able to change the split direction of a node, without changing the tree.
Example use case: I have a custom rule to stack things vertically unconditionally. Sometimes it's great, sometimes I prefer a two-column layout, so I just change the split direction of the root node.
Rotating the tree here would change the node (partial) order, which is undesirable in this context.",i think it's similar to set ratio in these regards? you can use -r on leaf nodes (to no effect) and returns 0 as long as the command is valid.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1291,2021-05-13T14:55:10Z,2021-06-01T11:43:47Z,2021-06-11T11:24:34Z,CLOSED,False,29,0,4,https://github.com/samaingw,Change split type (vertical|horizontal) of a node,1,[],https://github.com/baskerville/bspwm/pull/1291,https://github.com/emanuele6,4,https://github.com/baskerville/bspwm/pull/1291#issuecomment-851563540,"This is neither addressed by rotate nor flip AFAIK.
The goal is to be able to change the split direction of a node, without changing the tree.
Example use case: I have a custom rule to stack things vertically unconditionally. Sometimes it's great, sometimes I prefer a two-column layout, so I just change the split direction of the root node.
Rotating the tree here would change the node (partial) order, which is undesirable in this context.","oh, yeah. also -g hidden=off succeeds as long as the command is valid.
some commands follow the ""fail if the state didn't change"" convention (e.g. node -t, desktop -l) but some don't.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1291,2021-05-13T14:55:10Z,2021-06-01T11:43:47Z,2021-06-11T11:24:34Z,CLOSED,False,29,0,4,https://github.com/samaingw,Change split type (vertical|horizontal) of a node,1,[],https://github.com/baskerville/bspwm/pull/1291,https://github.com/samaingw,5,https://github.com/baskerville/bspwm/pull/1291#issuecomment-858772170,"This is neither addressed by rotate nor flip AFAIK.
The goal is to be able to change the split direction of a node, without changing the tree.
Example use case: I have a custom rule to stack things vertically unconditionally. Sometimes it's great, sometimes I prefer a two-column layout, so I just change the split direction of the root node.
Rotating the tree here would change the node (partial) order, which is undesirable in this context.","Thank you @emanuele6 , I wasn't aware of that !
There was both a small typo and a small logic error (vertical and horizontal didn't cancel each other but performed a 180 degree rotation) in your snippet, so I paste the fixed version here for reference:
#!/bin/sh

node=$1
dir=$2

case ""$dir"" in
	'vertical')
		bspc node ""$node""'#@parent.!vertical' -R -90 \
	            && bspc node ""$node""'#@brother' -R 90
		;;
	'horizontal')
		bspc node ""$node""'#@parent.!horizontal' -R 90 \
	            && bspc node ""$node""'#@brother' -R -90
		;;
esac",True,{'THUMBS_UP': ['https://github.com/emanuele6']}
baskerville/bspwm,https://github.com/baskerville/bspwm,1291,2021-05-13T14:55:10Z,2021-06-01T11:43:47Z,2021-06-11T11:24:34Z,CLOSED,False,29,0,4,https://github.com/samaingw,Change split type (vertical|horizontal) of a node,1,[],https://github.com/baskerville/bspwm/pull/1291,https://github.com/ortango,6,https://github.com/baskerville/bspwm/pull/1291#issuecomment-859513347,"This is neither addressed by rotate nor flip AFAIK.
The goal is to be able to change the split direction of a node, without changing the tree.
Example use case: I have a custom rule to stack things vertically unconditionally. Sometimes it's great, sometimes I prefer a two-column layout, so I just change the split direction of the root node.
Rotating the tree here would change the node (partial) order, which is undesirable in this context.","for completeness: wouldn't you need to ""un""rotate the children of the target node to be equivalent to this patch's effect? either way that doesn't work correctly for me (and would always fail if there is no parent).
i think the following is equivalent to changing the splittype of a node (except fails for leaf nodes).
#!/bin/bash
r(){ bspc node ""$1"" -R ""$2""; }
case ""$1"" in
    horizontal) r=90;;
    vertical) r=-90;;
    ''|*) exit 1;;
esac
t=""$(bspc query -N -n ${2:-focused}.!${1}.!leaf)"" &&
r ""$t"" ""$r"" && { ((r*=-1)); r ""${t}#@1"" ""$r""; r ""${t}#@2"" ""$r""; }",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1297,2021-05-26T14:46:06Z,2021-05-27T09:47:21Z,2021-05-27T09:47:21Z,CLOSED,False,2,1,1,https://github.com/dannycolin,update community info,1,[],https://github.com/baskerville/bspwm/pull/1297,https://github.com/dannycolin,1,https://github.com/baskerville/bspwm/pull/1297,"I moved the IRC channel to Libera Chat due to the recent event regarding Freenode.
I also added the information for the Matrix room on matrix.org","I moved the IRC channel to Libera Chat due to the recent event regarding Freenode.
I also added the information for the Matrix room on matrix.org",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1297,2021-05-26T14:46:06Z,2021-05-27T09:47:21Z,2021-05-27T09:47:21Z,CLOSED,False,2,1,1,https://github.com/dannycolin,update community info,1,[],https://github.com/baskerville/bspwm/pull/1297,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/1297#issuecomment-849495937,"I moved the IRC channel to Libera Chat due to the recent event regarding Freenode.
I also added the information for the Matrix room on matrix.org",Thanks.,True,{'HOORAY': ['https://github.com/emanuele6']}
baskerville/bspwm,https://github.com/baskerville/bspwm,1311,2021-07-05T01:45:51Z,2022-02-15T11:06:56Z,2022-02-15T13:45:56Z,CLOSED,False,1,1,1,https://github.com/emanuele6,"Remove pointer_action events from the ""node"" mask.",1,[],https://github.com/baskerville/bspwm/pull/1311,https://github.com/emanuele6,1,https://github.com/baskerville/bspwm/pull/1311,"pointer_action events are included in the node event mask; this is a little weird and I think it is not intended.


open a floating terminal window
run bspc subscribe node
move the terminal window with your mouse
RESULT without this patch:
pointer_action 0x00C00006 0x00C00007 0x008018A2 move begin                      
pointer_action 0x00C00006 0x00C00007 0x008018A2 move end                        
node_geometry 0x00C00006 0x00C00007 0x008018A2 644x388+384+197


RESULT with this patch:
node_geometry 0x00A00002 0x00A00004 0x008000BB 644x388+536+157","pointer_action events are included in the node event mask; this is a little weird and I think it is not intended.


open a floating terminal window
run bspc subscribe node
move the terminal window with your mouse
RESULT without this patch:
pointer_action 0x00C00006 0x00C00007 0x008018A2 move begin                      
pointer_action 0x00C00006 0x00C00007 0x008018A2 move end                        
node_geometry 0x00C00006 0x00C00007 0x008018A2 644x388+384+197


RESULT with this patch:
node_geometry 0x00A00002 0x00A00004 0x008000BB 644x388+536+157",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1311,2021-07-05T01:45:51Z,2022-02-15T11:06:56Z,2022-02-15T13:45:56Z,CLOSED,False,1,1,1,https://github.com/emanuele6,"Remove pointer_action events from the ""node"" mask.",1,[],https://github.com/baskerville/bspwm/pull/1311,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/1311#issuecomment-1040141718,"pointer_action events are included in the node event mask; this is a little weird and I think it is not intended.


open a floating terminal window
run bspc subscribe node
move the terminal window with your mouse
RESULT without this patch:
pointer_action 0x00C00006 0x00C00007 0x008018A2 move begin                      
pointer_action 0x00C00006 0x00C00007 0x008018A2 move end                        
node_geometry 0x00C00006 0x00C00007 0x008018A2 644x388+384+197


RESULT with this patch:
node_geometry 0x00A00002 0x00A00004 0x008000BB 644x388+536+157",Thanks.,True,{'THUMBS_UP': ['https://github.com/emanuele6']}
baskerville/bspwm,https://github.com/baskerville/bspwm,1316,2021-07-26T16:20:39Z,2022-02-15T11:07:02Z,2022-02-15T13:45:45Z,CLOSED,False,7,4,2,https://github.com/emanuele6,Allow cycling the splitting type of a node with `node -y CYCLE_DIR`,1,[],https://github.com/baskerville/bspwm/pull/1316,https://github.com/emanuele6,1,https://github.com/baskerville/bspwm/pull/1316,similar to dekstop -l CYCLE_DIR,similar to dekstop -l CYCLE_DIR,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1316,2021-07-26T16:20:39Z,2022-02-15T11:07:02Z,2022-02-15T13:45:45Z,CLOSED,False,7,4,2,https://github.com/emanuele6,Allow cycling the splitting type of a node with `node -y CYCLE_DIR`,1,[],https://github.com/baskerville/bspwm/pull/1316,https://github.com/emanuele6,2,https://github.com/baskerville/bspwm/pull/1316#issuecomment-886865642,similar to dekstop -l CYCLE_DIR,"I use it in this hotkey that is pretty nice:
# Cycle splitting type of the parent node
super + r
	if bspc query -D focused.tiled > /dev/null; then \
	    bspc node '@brother.!floating.!fullscreen.!hidden.leaf#focused.!floating.!fullscreen#@parent' -y next \
	        || bspc node '@brother.!hidden.!leaf#any.!hidden.!floating.!fullscreen.leaf.descendant_of#focused.!floating.!fullscreen#@parent' -y next; \
	fi

It can also be used to simplify these sxhkd hotkeys:
# super + z -> layout becomes tiled; all splits are balanced and vertical
# super + x -> layout becomes tiled; all splits are balanced and horizontal
super + {z,x}
	bspc desktop 'focused.!user_tiled' -l tiled; \
	while bspc node 'any.local.!{vertical,horizontal}.!leaf' -y next; do :; done; \
	bspc node '@/' -B
#	bspc desktop 'focused.!user_tiled' -l tiled; \
#	t={vertical,horizontal}; \
#	while bspc node 'any.local.!'""$t""'.!leaf' -y ""$t""; do :; done; \
#	bspc node '@/' -B",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1316,2021-07-26T16:20:39Z,2022-02-15T11:07:02Z,2022-02-15T13:45:45Z,CLOSED,False,7,4,2,https://github.com/emanuele6,Allow cycling the splitting type of a node with `node -y CYCLE_DIR`,1,[],https://github.com/baskerville/bspwm/pull/1316,https://github.com/baskerville,3,https://github.com/baskerville/bspwm/pull/1316#issuecomment-1040141825,similar to dekstop -l CYCLE_DIR,Thanks.,True,{'THUMBS_UP': ['https://github.com/emanuele6']}
baskerville/bspwm,https://github.com/baskerville/bspwm,1330,2021-09-05T20:02:47Z,,2022-01-05T23:57:47Z,OPEN,False,3,1,1,https://github.com/FdLSifu,escape the colon (:) character belonging to a window name,2,[],https://github.com/baskerville/bspwm/pull/1330,https://github.com/FdLSifu,1,https://github.com/baskerville/bspwm/pull/1330,"While dealing with bspc rules, I faced windows with name that contains colons (:).
Ex: WM_NAME(STRING) = ""VM1 [Running] - Oracle VM VirtualBox : 1""
A simple fix is to not use strtok for the window name and consider the remaining string (the third token) as the window name.","While dealing with bspc rules, I faced windows with name that contains colons (:).
Ex: WM_NAME(STRING) = ""VM1 [Running] - Oracle VM VirtualBox : 1""
A simple fix is to not use strtok for the window name and consider the remaining string (the third token) as the window name.",True,"{'HEART': ['https://github.com/SeerLite', 'https://github.com/GutsyHeart'], 'THUMBS_UP': ['https://github.com/ortango', 'https://github.com/GutsyHeart']}"
baskerville/bspwm,https://github.com/baskerville/bspwm,1330,2021-09-05T20:02:47Z,,2022-01-05T23:57:47Z,OPEN,False,3,1,1,https://github.com/FdLSifu,escape the colon (:) character belonging to a window name,2,[],https://github.com/baskerville/bspwm/pull/1330,https://github.com/lf-,2,https://github.com/baskerville/bspwm/pull/1330#issuecomment-1006170910,"While dealing with bspc rules, I faced windows with name that contains colons (:).
Ex: WM_NAME(STRING) = ""VM1 [Running] - Oracle VM VirtualBox : 1""
A simple fix is to not use strtok for the window name and consider the remaining string (the third token) as the window name.","Another PR for the same issue, but instead replacing the tokenization function: #1351",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1338,2021-11-15T18:01:41Z,2021-11-16T04:02:37Z,2021-11-16T04:02:37Z,CLOSED,False,20,5,7,https://github.com/MetaStag,Border colors for marked nodes,1,[],https://github.com/baskerville/bspwm/pull/1338,https://github.com/MetaStag,1,https://github.com/baskerville/bspwm/pull/1338,"Hey!
I thought that it would be nice to have a visual indicator for a ""marked"" node to distinguish it from normal nodes.
One can argue that a marked node is mostly only used for swapping and hence a visual indicator is not required to remember which node was marked, but when you mark nodes on other desktops/monitors simultaneously, then it can be really helpful.
Also, note that when you select the marked node, it's border color gets overridden by focused_border_color
I tested bspc config marked_border_color #HEX and it seems to run fine as well!","Hey!
I thought that it would be nice to have a visual indicator for a ""marked"" node to distinguish it from normal nodes.
One can argue that a marked node is mostly only used for swapping and hence a visual indicator is not required to remember which node was marked, but when you mark nodes on other desktops/monitors simultaneously, then it can be really helpful.
Also, note that when you select the marked node, it's border color gets overridden by focused_border_color
I tested bspc config marked_border_color #HEX and it seems to run fine as well!",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1338,2021-11-15T18:01:41Z,2021-11-16T04:02:37Z,2021-11-16T04:02:37Z,CLOSED,False,20,5,7,https://github.com/MetaStag,Border colors for marked nodes,1,[],https://github.com/baskerville/bspwm/pull/1338,https://github.com/emanuele6,2,https://github.com/baskerville/bspwm/pull/1338#issuecomment-969475818,"Hey!
I thought that it would be nice to have a visual indicator for a ""marked"" node to distinguish it from normal nodes.
One can argue that a marked node is mostly only used for swapping and hence a visual indicator is not required to remember which node was marked, but when you mark nodes on other desktops/monitors simultaneously, then it can be really helpful.
Also, note that when you select the marked node, it's border color gets overridden by focused_border_color
I tested bspc config marked_border_color #HEX and it seems to run fine as well!","This patch is unnecessary. This behaviour can already be achieved with something like this (see here):
#!/bin/env bash

: ""${MARKED_NONFOCUSED_BCOLOR:=0xdd0840}""

while bspc subscribe -c 1 node_focus node_flag > /dev/null; do
    bspc config focused_border_color ""$(bspc config focused_border_color)""

    bspc query -N -n '.marked.!hidden.!focused.window' | while read -r; do
        chwb -c ""$MARKED_NONFOCUSED_BCOLOR"" ""$REPLY""
    done
done
And adding marked_border_color, but not locked_border_color and marked_focused_color is an arbitrary decision.
With a script like the one shown above, you can also set colours for ""marked windows that are tiled"", ""marked windows that are floating"", ""marked windows that are floating and also locked"", ""marked windows that are in a desktop with at least 2 other visible windows"", &c and even based on which user is running the process that owns the window without patching bspwm and adding new configuration settings for whatever combination of flags/state/layer/etc that some user happens to want at some point in time.
EDIT: also see #1241",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1338,2021-11-15T18:01:41Z,2021-11-16T04:02:37Z,2021-11-16T04:02:37Z,CLOSED,False,20,5,7,https://github.com/MetaStag,Border colors for marked nodes,1,[],https://github.com/baskerville/bspwm/pull/1338,https://github.com/MetaStag,3,https://github.com/baskerville/bspwm/pull/1338#issuecomment-969836776,"Hey!
I thought that it would be nice to have a visual indicator for a ""marked"" node to distinguish it from normal nodes.
One can argue that a marked node is mostly only used for swapping and hence a visual indicator is not required to remember which node was marked, but when you mark nodes on other desktops/monitors simultaneously, then it can be really helpful.
Also, note that when you select the marked node, it's border color gets overridden by focused_border_color
I tested bspc config marked_border_color #HEX and it seems to run fine as well!","Ah, this is indeed quite more complicated than i was thinking (i did think that there could be a reason why such a simple feature hasn't been added yet)
Maybe to respect everyone's choice on what border colors they want, no extra variables will be set like i just did, and only when a user explicitly sets a border color for a combination they want, it gets set.
A special bspc command could be added, bspc color marked-locked 0xHEX
Just a different approach i thought of without much thought.
As of now it's beyond my ability to implement and test something like this, so i'll be closing this PR now.
Thanks 👍",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1341,2021-11-26T05:04:10Z,2021-11-26T20:07:31Z,2021-11-27T06:55:16Z,CLOSED,False,18,5,1,https://github.com/caraterra,"Add optional includes for BSD, and explicit rules for bspwm and bspc",4,[],https://github.com/baskerville/bspwm/pull/1341,https://github.com/caraterra,1,https://github.com/baskerville/bspwm/pull/1341,"Building BSPWM with make fails on OpenBSD 7.0 and FreeBSD 13.0. Errors include failure to find required headers and libraries, and failure to find make rules for bspwm and bspc. The issues regarding missing headers can be attributed to the differences in where xcb is installed on these systems, and the issue regarding bspwm and bspc can be attributed to the differences in implicit rules between the GNU and BSD versions of make. Adding includes for each OS, and adding an explicit rule for bspwm and bspc seeks to remedy these issues.","Building BSPWM with make fails on OpenBSD 7.0 and FreeBSD 13.0. Errors include failure to find required headers and libraries, and failure to find make rules for bspwm and bspc. The issues regarding missing headers can be attributed to the differences in where xcb is installed on these systems, and the issue regarding bspwm and bspc can be attributed to the differences in implicit rules between the GNU and BSD versions of make. Adding includes for each OS, and adding an explicit rule for bspwm and bspc seeks to remedy these issues.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1341,2021-11-26T05:04:10Z,2021-11-26T20:07:31Z,2021-11-27T06:55:16Z,CLOSED,False,18,5,1,https://github.com/caraterra,"Add optional includes for BSD, and explicit rules for bspwm and bspc",4,[],https://github.com/baskerville/bspwm/pull/1341,https://github.com/caraterra,2,https://github.com/baskerville/bspwm/pull/1341#issuecomment-980388431,"Building BSPWM with make fails on OpenBSD 7.0 and FreeBSD 13.0. Errors include failure to find required headers and libraries, and failure to find make rules for bspwm and bspc. The issues regarding missing headers can be attributed to the differences in where xcb is installed on these systems, and the issue regarding bspwm and bspc can be attributed to the differences in implicit rules between the GNU and BSD versions of make. Adding includes for each OS, and adding an explicit rule for bspwm and bspc seeks to remedy these issues.","Looking at it now, it seems writing a Makefile that is compatible with multiple distributions of make seems like a real uphill battle and is out of the scope of a little fix like this. I'll start again with a clean slate and hopefully be back with a simpler solution. Thanks so much for your time",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1342,2021-11-26T20:41:14Z,2022-05-20T03:51:59Z,2022-05-20T03:51:59Z,CLOSED,False,15,3,1,https://github.com/caraterra,fix: Add conditional to set include and library paths based off OS,2,[],https://github.com/baskerville/bspwm/pull/1342,https://github.com/caraterra,1,https://github.com/baskerville/bspwm/pull/1342,FreeBSD and OpenBSD install the xcb libraries and headers to places that are outside the default include and library paths. This conditional sets them using the output from uname -s.,FreeBSD and OpenBSD install the xcb libraries and headers to places that are outside the default include and library paths. This conditional sets them using the output from uname -s.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1342,2021-11-26T20:41:14Z,2022-05-20T03:51:59Z,2022-05-20T03:51:59Z,CLOSED,False,15,3,1,https://github.com/caraterra,fix: Add conditional to set include and library paths based off OS,2,[],https://github.com/baskerville/bspwm/pull/1342,https://github.com/semarie,2,https://github.com/baskerville/bspwm/pull/1342#issuecomment-980507893,FreeBSD and OpenBSD install the xcb libraries and headers to places that are outside the default include and library paths. This conditional sets them using the output from uname -s.,"I would use conditional affectation (with ?=) for X11INC and X11LIB in order to permit overriding the variable from command-line.
Please note that currrently, bspwm is buildable on OpenBSD by just passing the right environment variables (CFLAGS=-I/usr/X11R6/include LDFLAGS=-L/usr/X11R6/lib) to make. It is how the OpenBSD package is done.",True,{'THUMBS_UP': ['https://github.com/emanuele6']}
baskerville/bspwm,https://github.com/baskerville/bspwm,1342,2021-11-26T20:41:14Z,2022-05-20T03:51:59Z,2022-05-20T03:51:59Z,CLOSED,False,15,3,1,https://github.com/caraterra,fix: Add conditional to set include and library paths based off OS,2,[],https://github.com/baskerville/bspwm/pull/1342,https://github.com/caraterra,3,https://github.com/baskerville/bspwm/pull/1342#issuecomment-980764649,FreeBSD and OpenBSD install the xcb libraries and headers to places that are outside the default include and library paths. This conditional sets them using the output from uname -s.,That makes lots of sense.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1351,2022-01-05T23:56:27Z,,2022-01-06T00:50:48Z,OPEN,False,120,18,9,https://github.com/lf-,bspc rule -a: allow escaping colons in rule tokenization,2,[],https://github.com/baskerville/bspwm/pull/1351,https://github.com/lf-,1,https://github.com/baskerville/bspwm/pull/1351,"Currently, it's impossible to add rules to match windows with colons in their titles/window classes/etc, since the rule parser uses strtok, which does not support escaping colons. This PR introduces and uses a new tokenization function that supports escaping.
Fix #1071.","Currently, it's impossible to add rules to match windows with colons in their titles/window classes/etc, since the rule parser uses strtok, which does not support escaping colons. This PR introduces and uses a new tokenization function that supports escaping.
Fix #1071.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1358,2022-01-29T16:00:19Z,2022-02-15T11:06:05Z,2022-02-15T15:19:50Z,CLOSED,False,2,0,1,https://github.com/Demindiro,Fix windows sometimes not appearing,1,[],https://github.com/baskerville/bspwm/pull/1358,https://github.com/Demindiro,1,https://github.com/baskerville/bspwm/pull/1358,"Fixes: #935

I applied @Rational-Curiosity's patch and AFAICT it works fine.","Fixes: #935

I applied @Rational-Curiosity's patch and AFAICT it works fine.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1358,2022-01-29T16:00:19Z,2022-02-15T11:06:05Z,2022-02-15T15:19:50Z,CLOSED,False,2,0,1,https://github.com/Demindiro,Fix windows sometimes not appearing,1,[],https://github.com/baskerville/bspwm/pull/1358,https://github.com/baskerville,2,https://github.com/baskerville/bspwm/pull/1358#issuecomment-1040140918,"Fixes: #935

I applied @Rational-Curiosity's patch and AFAICT it works fine.",Thanks.,True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1362,2022-02-15T16:15:59Z,,2022-03-02T21:46:04Z,OPEN,False,35,9,3,https://github.com/emanuele6,Properly print arbitrary strings as valid JSON.,1,[],https://github.com/baskerville/bspwm/pull/1362,https://github.com/emanuele6,1,https://github.com/baskerville/bspwm/pull/1362,"..instead of injecting them in the output between a pair of '""' charcters.
This prevents windows with a "" character in their class or instance name (e.g. urxvt -name 'quote ""'), or desktop and monitors with "" character in their name from generating invalid or ""malicious"" JSON.
The main problems that this was causing were:


JSON tools like jq were not able to parse the JSON output of ""query -T"" and ""wm -d"";


if the JSON was invalid (e.g. one extra quote or \ at the end of desktop name), bspwm would not adopt orphans after a ""wm -r"" command.


if the arbitrary strings contained JSON code: e.g.
bspc desktop -n '"",""name"":""hello'
the JSON will be interpreted by bspwm after a reload. (in the example above, that desktop will be renamed to ""hello"" after a reload.)","..instead of injecting them in the output between a pair of '""' charcters.
This prevents windows with a "" character in their class or instance name (e.g. urxvt -name 'quote ""'), or desktop and monitors with "" character in their name from generating invalid or ""malicious"" JSON.
The main problems that this was causing were:


JSON tools like jq were not able to parse the JSON output of ""query -T"" and ""wm -d"";


if the JSON was invalid (e.g. one extra quote or \ at the end of desktop name), bspwm would not adopt orphans after a ""wm -r"" command.


if the arbitrary strings contained JSON code: e.g.
bspc desktop -n '"",""name"":""hello'
the JSON will be interpreted by bspwm after a reload. (in the example above, that desktop will be renamed to ""hello"" after a reload.)",True,{'EYES': ['https://github.com/ortango']}
baskerville/bspwm,https://github.com/baskerville/bspwm,1362,2022-02-15T16:15:59Z,,2022-03-02T21:46:04Z,OPEN,False,35,9,3,https://github.com/emanuele6,Properly print arbitrary strings as valid JSON.,1,[],https://github.com/baskerville/bspwm/pull/1362,https://github.com/emanuele6,2,https://github.com/baskerville/bspwm/pull/1362#issuecomment-1040497411,"..instead of injecting them in the output between a pair of '""' charcters.
This prevents windows with a "" character in their class or instance name (e.g. urxvt -name 'quote ""'), or desktop and monitors with "" character in their name from generating invalid or ""malicious"" JSON.
The main problems that this was causing were:


JSON tools like jq were not able to parse the JSON output of ""query -T"" and ""wm -d"";


if the JSON was invalid (e.g. one extra quote or \ at the end of desktop name), bspwm would not adopt orphans after a ""wm -r"" command.


if the arbitrary strings contained JSON code: e.g.
bspc desktop -n '"",""name"":""hello'
the JSON will be interpreted by bspwm after a reload. (in the example above, that desktop will be renamed to ""hello"" after a reload.)","This patch simply prints all the (C locale) control characters as \u00XX and adds a backslash in front of \ and "" characters, some of the control characters (but not all) have special sequences in JSON: e.g. \n, \t, etc.
JSON string syntax diagram from json.org


We could print these special sequences when possible if we want, but it is not necessary. (passing the JSON through jq will convert them automatically.)
Here is a possible implementation if we want to do it:
#define SPECIAL_SEQUENCE(f, c, json) \
	case c: \
		fputs(json, f); \
		continue;
void print_string_as_json(FILE *f, char *str)
{
	fputc('""', f);
	for (char *ptr = str; *ptr != '\0'; ++ptr) {
		switch (*ptr) {
			SPECIAL_SEQUENCE(f, '""', ""\\\"""")
			SPECIAL_SEQUENCE(f, '\\', ""\\\\"")
			SPECIAL_SEQUENCE(f, '\b', ""\\b"")
			SPECIAL_SEQUENCE(f, '\f', ""\\f"")
			SPECIAL_SEQUENCE(f, '\n', ""\\n"")
			SPECIAL_SEQUENCE(f, '\r', ""\\r"")
			SPECIAL_SEQUENCE(f, '\t', ""\\t"")
		}
		if (*ptr == '\x7f' || (*ptr >= '\x01' && *ptr <= '\x1f')) {
			fprintf(f, ""\\u%04x"", *ptr);
			continue;
		}
		fputc(*ptr, f);
	}
	fputc('""', f);
}
#undef SPECIAL_SEQUENCE",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1362,2022-02-15T16:15:59Z,,2022-03-02T21:46:04Z,OPEN,False,35,9,3,https://github.com/emanuele6,Properly print arbitrary strings as valid JSON.,1,[],https://github.com/baskerville/bspwm/pull/1362,https://github.com/emanuele6,3,https://github.com/baskerville/bspwm/pull/1362#issuecomment-1055738544,"..instead of injecting them in the output between a pair of '""' charcters.
This prevents windows with a "" character in their class or instance name (e.g. urxvt -name 'quote ""'), or desktop and monitors with "" character in their name from generating invalid or ""malicious"" JSON.
The main problems that this was causing were:


JSON tools like jq were not able to parse the JSON output of ""query -T"" and ""wm -d"";


if the JSON was invalid (e.g. one extra quote or \ at the end of desktop name), bspwm would not adopt orphans after a ""wm -r"" command.


if the arbitrary strings contained JSON code: e.g.
bspc desktop -n '"",""name"":""hello'
the JSON will be interpreted by bspwm after a reload. (in the example above, that desktop will be renamed to ""hello"" after a reload.)","I just realised that bspwm is loading back the json strings by copying the bytes between the starting and ending quotes. that should also be changed otherwise these backslash sequences will not be expanded and restarts will cause bspwm to e.g. rename desktops from desktop ""1"" to desktop \""1\"" to desktop \\\""1\\\"" to desktop \\\\\\\""1\\\\\\\"" and so on",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1367,2022-03-08T15:01:16Z,,2022-03-08T15:01:16Z,OPEN,False,26,7,3,https://github.com/virchau13,Add --print-socket-path option,1,[],https://github.com/baskerville/bspwm/pull/1367,https://github.com/virchau13,1,https://github.com/baskerville/bspwm/pull/1367,"This adds an option to bspc which prints the socket path to bspwm and immediately exits.
The reason for this change is twofold:

It allows for a convenient way to get bspwm's socket path.
If the socket path configuration ever changes, then bspc --print-socket-path will still work, whereas manually composing it will not.","This adds an option to bspc which prints the socket path to bspwm and immediately exits.
The reason for this change is twofold:

It allows for a convenient way to get bspwm's socket path.
If the socket path configuration ever changes, then bspc --print-socket-path will still work, whereas manually composing it will not.",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1379,2022-04-23T10:00:51Z,2022-04-23T19:56:25Z,2022-04-23T19:56:25Z,CLOSED,False,10,2,1,https://github.com/emanuele6,Refocus the focused window when receiving a FOCUS_IN event for root,1,[],https://github.com/baskerville/bspwm/pull/1379,https://github.com/emanuele6,1,https://github.com/baskerville/bspwm/pull/1379,"Closes #1378
Fixes #1160","Closes #1378
Fixes #1160",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1380,2022-04-24T01:54:46Z,,2022-05-02T06:50:29Z,OPEN,False,11,3,2,https://github.com/emanuele6,Refocus the focused window when receiving a FOCUS_IN event for root,1,[],https://github.com/baskerville/bspwm/pull/1380,https://github.com/emanuele6,1,https://github.com/baskerville/bspwm/pull/1380,"Closes #1378
Fixes #1160","Closes #1378
Fixes #1160",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1381,2022-04-27T00:27:11Z,2022-04-27T00:34:27Z,2022-04-27T00:34:38Z,CLOSED,False,0,1,1,https://github.com/ThatOneOcto,Update window.c,1,[],https://github.com/baskerville/bspwm/pull/1381,https://github.com/ThatOneOcto,1,https://github.com/baskerville/bspwm/pull/1381,"Fix for unfocused Electron issue
I have tested this and it works","Fix for unfocused Electron issue
I have tested this and it works",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1381,2022-04-27T00:27:11Z,2022-04-27T00:34:27Z,2022-04-27T00:34:38Z,CLOSED,False,0,1,1,https://github.com/ThatOneOcto,Update window.c,1,[],https://github.com/baskerville/bspwm/pull/1381,https://github.com/ThatOneOcto,2,https://github.com/baskerville/bspwm/pull/1381#issuecomment-1110379816,"Fix for unfocused Electron issue
I have tested this and it works","A friend had just sent me a line that I thought was to be deleted, apparently not
I don't code C, he does",True,{}
baskerville/bspwm,https://github.com/baskerville/bspwm,1393,2022-06-04T07:16:04Z,,2022-06-04T07:16:04Z,OPEN,False,3,1,1,https://github.com/emanuele6,Always return 1 when execvp() fails.,1,[],https://github.com/baskerville/bspwm/pull/1393,https://github.com/emanuele6,1,https://github.com/baskerville/bspwm/pull/1393,"bspwm uses execvp() to replace itself with a new instance in response to ""wm -r"", and exits with the return value of that execvp() call if it fails.
execvp() only returns when it fails; and, when it returns, it always returns -1 which is not a valid exit code (it is treated as 255: &0xff).
The return value of execvp() is not really meaningful; let's just exit with `1' if execvp() fails.","bspwm uses execvp() to replace itself with a new instance in response to ""wm -r"", and exits with the return value of that execvp() call if it fails.
execvp() only returns when it fails; and, when it returns, it always returns -1 which is not a valid exit code (it is treated as 255: &0xff).
The return value of execvp() is not really meaningful; let's just exit with `1' if execvp() fails.",True,{}
