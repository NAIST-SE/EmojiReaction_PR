i3/i3,https://github.com/i3/i3,2245,2016-03-08T17:38:49Z,2016-03-12T03:02:43Z,2016-09-25T22:47:24Z,MERGED,True,1,1,1,https://github.com/Osse,Update information on where to find #i3 on IRC,1,[],https://github.com/i3/i3/pull/2245,https://github.com/Osse,1,https://github.com/i3/i3/pull/2245,"I was unsure on whether to update the information in the slides since maybe the should remain as how they were presented, but I saw in the log that they have received similar updates before.","I was unsure on whether to update the information in the slides since maybe the should remain as how they were presented, but I saw in the log that they have received similar updates before.",True,{}
i3/i3,https://github.com/i3/i3,2245,2016-03-08T17:38:49Z,2016-03-12T03:02:43Z,2016-09-25T22:47:24Z,MERGED,True,1,1,1,https://github.com/Osse,Update information on where to find #i3 on IRC,1,[],https://github.com/i3/i3/pull/2245,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/2245#issuecomment-194891280,"I was unsure on whether to update the information in the slides since maybe the should remain as how they were presented, but I saw in the log that they have received similar updates before.","I’ll gladly merge the change to the PACKAGE-MAINTAINER file, but the presentations are historical documents and should be treated as such — they aren’t kept up to date and contain some other mistakes/inaccurate information.
Can you change the PR to only touch the PACKAGE-MAINTAINER file please?",True,{}
i3/i3,https://github.com/i3/i3,2245,2016-03-08T17:38:49Z,2016-03-12T03:02:43Z,2016-09-25T22:47:24Z,MERGED,True,1,1,1,https://github.com/Osse,Update information on where to find #i3 on IRC,1,[],https://github.com/i3/i3/pull/2245,https://github.com/Osse,3,https://github.com/i3/i3/pull/2245#issuecomment-194958776,"I was unsure on whether to update the information in the slides since maybe the should remain as how they were presented, but I saw in the log that they have received similar updates before.",That was my suspicion; no problem.,True,{}
i3/i3,https://github.com/i3/i3,2254,2016-03-12T08:14:16Z,2016-04-10T11:08:05Z,2016-04-10T11:08:05Z,CLOSED,False,114,30,3,https://github.com/cshinaver,config.d folder,4,[],https://github.com/i3/i3/pull/2254,https://github.com/cshinaver,1,https://github.com/i3/i3/pull/2254,This is a first very rough attempt at #1197. I wanted to throw up what I've got so I don't do anything that I'll need to undo later (since there's been a lot of discussion on this feature).,This is a first very rough attempt at #1197. I wanted to throw up what I've got so I don't do anything that I'll need to undo later (since there's been a lot of discussion on this feature).,True,{}
i3/i3,https://github.com/i3/i3,2254,2016-03-12T08:14:16Z,2016-04-10T11:08:05Z,2016-04-10T11:08:05Z,CLOSED,False,114,30,3,https://github.com/cshinaver,config.d folder,4,[],https://github.com/i3/i3/pull/2254,https://github.com/cshinaver,2,https://github.com/i3/i3/pull/2254#issuecomment-195695415,This is a first very rough attempt at #1197. I wanted to throw up what I've got so I don't do anything that I'll need to undo later (since there's been a lot of discussion on this feature).,"Currently, it reads the main config file into memory, appends config.d to the main config file's path, and appends any files in the config.d directory to the main config. They are appended in lexicographical order.",True,{}
i3/i3,https://github.com/i3/i3,2254,2016-03-12T08:14:16Z,2016-04-10T11:08:05Z,2016-04-10T11:08:05Z,CLOSED,False,114,30,3,https://github.com/cshinaver,config.d folder,4,[],https://github.com/i3/i3/pull/2254,https://github.com/cshinaver,3,https://github.com/i3/i3/pull/2254#issuecomment-195695480,This is a first very rough attempt at #1197. I wanted to throw up what I've got so I don't do anything that I'll need to undo later (since there's been a lot of discussion on this feature).,"TODO:

 Add used config.d folder to i3 --moreversion
 Log individual files being parsed
 Log ""finished"" config",True,{}
i3/i3,https://github.com/i3/i3,2254,2016-03-12T08:14:16Z,2016-04-10T11:08:05Z,2016-04-10T11:08:05Z,CLOSED,False,114,30,3,https://github.com/cshinaver,config.d folder,4,[],https://github.com/i3/i3/pull/2254,https://github.com/Airblader,4,https://github.com/i3/i3/pull/2254#issuecomment-207961319,This is a first very rough attempt at #1197. I wanted to throw up what I've got so I don't do anything that I'll need to undo later (since there's been a lot of discussion on this feature).,"Closing this PR since the issue has been closed, see the reasoning there.",True,{}
i3/i3,https://github.com/i3/i3,2259,2016-03-13T21:53:05Z,2016-04-12T10:32:10Z,2016-04-12T10:32:10Z,CLOSED,False,112,3,6,https://github.com/herbygillot,Add command to switch outputs back and forth,1,[],https://github.com/i3/i3/pull/2259,https://github.com/herbygillot,1,https://github.com/i3/i3/pull/2259,"First off, wanted to thank you, the main i3 authors for your work; i3's pretty useful and awesome.
I'm new to i3, X11 and C (pretty much everything), but I wanted to add a command that would allow back and forth focus between outputs.  Even though i3 already has a back-and-forth switch for workspaces, I wanted one specifically for outputs because I want to be able to order my workspace switching order independently of the ability to jump between monitors in a rapid fashion.
I chose ""back and forth"" as that was the closest equivalent behavior that I could find in i3; please let me know what is preferred, or what should corrected/changed.
Thank you.","First off, wanted to thank you, the main i3 authors for your work; i3's pretty useful and awesome.
I'm new to i3, X11 and C (pretty much everything), but I wanted to add a command that would allow back and forth focus between outputs.  Even though i3 already has a back-and-forth switch for workspaces, I wanted one specifically for outputs because I want to be able to order my workspace switching order independently of the ability to jump between monitors in a rapid fashion.
I chose ""back and forth"" as that was the closest equivalent behavior that I could find in i3; please let me know what is preferred, or what should corrected/changed.
Thank you.",True,{}
i3/i3,https://github.com/i3/i3,2264,2016-03-19T16:54:40Z,2016-03-21T19:11:36Z,2016-09-25T22:47:24Z,MERGED,True,12,12,5,https://github.com/ixjlyons,Fix typos in documentation.,1,[],https://github.com/i3/i3/pull/2264,https://github.com/ixjlyons,1,https://github.com/i3/i3/pull/2264,"Trivial fix but at least I'm able to contribute somehow :)
edit: Actually, I went ahead and checked the spelling on all of the top-level docs and caught a few more things. Would you prefer them all in one PR or separate ones for each file?","Trivial fix but at least I'm able to contribute somehow :)
edit: Actually, I went ahead and checked the spelling on all of the top-level docs and caught a few more things. Would you prefer them all in one PR or separate ones for each file?",True,"{'THUMBS_UP': ['https://github.com/acrisci', 'https://github.com/wlhlm', 'https://github.com/hwangcc23']}"
i3/i3,https://github.com/i3/i3,2264,2016-03-19T16:54:40Z,2016-03-21T19:11:36Z,2016-09-25T22:47:24Z,MERGED,True,12,12,5,https://github.com/ixjlyons,Fix typos in documentation.,1,[],https://github.com/i3/i3/pull/2264,https://github.com/jolange,2,https://github.com/i3/i3/pull/2264#issuecomment-198766080,"Trivial fix but at least I'm able to contribute somehow :)
edit: Actually, I went ahead and checked the spelling on all of the top-level docs and caught a few more things. Would you prefer them all in one PR or separate ones for each file?",I guess one PR for doc typos should be fine.,True,{}
i3/i3,https://github.com/i3/i3,2264,2016-03-19T16:54:40Z,2016-03-21T19:11:36Z,2016-09-25T22:47:24Z,MERGED,True,12,12,5,https://github.com/ixjlyons,Fix typos in documentation.,1,[],https://github.com/i3/i3/pull/2264,https://github.com/ixjlyons,3,https://github.com/i3/i3/pull/2264#issuecomment-199075974,"Trivial fix but at least I'm able to contribute somehow :)
edit: Actually, I went ahead and checked the spelling on all of the top-level docs and caught a few more things. Would you prefer them all in one PR or separate ones for each file?","Ok, I edited the title to reflect more general changes and squashed down to one commit.",True,{}
i3/i3,https://github.com/i3/i3,2264,2016-03-19T16:54:40Z,2016-03-21T19:11:36Z,2016-09-25T22:47:24Z,MERGED,True,12,12,5,https://github.com/ixjlyons,Fix typos in documentation.,1,[],https://github.com/i3/i3/pull/2264,https://github.com/ixjlyons,4,https://github.com/i3/i3/pull/2264#issuecomment-199379720,"Trivial fix but at least I'm able to contribute somehow :)
edit: Actually, I went ahead and checked the spelling on all of the top-level docs and caught a few more things. Would you prefer them all in one PR or separate ones for each file?",I don't think there are any controversial changes remaining :) Should be good to go.,True,{}
i3/i3,https://github.com/i3/i3,2265,2016-03-19T21:53:58Z,2016-03-21T21:20:40Z,2016-03-21T21:20:40Z,CLOSED,False,1,1,1,https://github.com/mikkeloscar,i3-dmenu-desktop: Remove quotes around exec cmd,1,[],https://github.com/i3/i3/pull/2265,https://github.com/mikkeloscar,1,https://github.com/i3/i3/pull/2265,"The reason for this patch is discussed more in depth here: swaywm/sway#521
The real issue is that the exec command in i3 doesn't treat quoted arguments the same way as other commands do. For instance exec ""firefox        "" http://google.com is the same as exec firefox http://google.com in i3. This is an unfortunate design, but something that most likely won't change because of backwards compatibility.
Sway aims to be compatible with i3, but we would like to avoid implementing this behavior if it doesn't break too much for the users.
This patch solves some of the issue by making i3-dmenu-desktop compatible with sway, without affecting how it works with i3.","The reason for this patch is discussed more in depth here: swaywm/sway#521
The real issue is that the exec command in i3 doesn't treat quoted arguments the same way as other commands do. For instance exec ""firefox        "" http://google.com is the same as exec firefox http://google.com in i3. This is an unfortunate design, but something that most likely won't change because of backwards compatibility.
Sway aims to be compatible with i3, but we would like to avoid implementing this behavior if it doesn't break too much for the users.
This patch solves some of the issue by making i3-dmenu-desktop compatible with sway, without affecting how it works with i3.",True,{}
i3/i3,https://github.com/i3/i3,2265,2016-03-19T21:53:58Z,2016-03-21T21:20:40Z,2016-03-21T21:20:40Z,CLOSED,False,1,1,1,https://github.com/mikkeloscar,i3-dmenu-desktop: Remove quotes around exec cmd,1,[],https://github.com/i3/i3/pull/2265,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/2265#issuecomment-199435567,"The reason for this patch is discussed more in depth here: swaywm/sway#521
The real issue is that the exec command in i3 doesn't treat quoted arguments the same way as other commands do. For instance exec ""firefox        "" http://google.com is the same as exec firefox http://google.com in i3. This is an unfortunate design, but something that most likely won't change because of backwards compatibility.
Sway aims to be compatible with i3, but we would like to avoid implementing this behavior if it doesn't break too much for the users.
This patch solves some of the issue by making i3-dmenu-desktop compatible with sway, without affecting how it works with i3.","I don’t follow the discussion in the referenced issue (might be because I’m tired from jet lag). Could you do me and other readers of this commit a favor and document the rationale for this commit in the commit description itself please? Currently it just says that the quotes are unnecessary but doesn’t expand on this. Why are they unnecessary? What’s broken currently? With this change, what could break because of the change?",True,{}
i3/i3,https://github.com/i3/i3,2265,2016-03-19T21:53:58Z,2016-03-21T21:20:40Z,2016-03-21T21:20:40Z,CLOSED,False,1,1,1,https://github.com/mikkeloscar,i3-dmenu-desktop: Remove quotes around exec cmd,1,[],https://github.com/i3/i3/pull/2265,https://github.com/mikkeloscar,3,https://github.com/i3/i3/pull/2265#issuecomment-199491747,"The reason for this patch is discussed more in depth here: swaywm/sway#521
The real issue is that the exec command in i3 doesn't treat quoted arguments the same way as other commands do. For instance exec ""firefox        "" http://google.com is the same as exec firefox http://google.com in i3. This is an unfortunate design, but something that most likely won't change because of backwards compatibility.
Sway aims to be compatible with i3, but we would like to avoid implementing this behavior if it doesn't break too much for the users.
This patch solves some of the issue by making i3-dmenu-desktop compatible with sway, without affecting how it works with i3.","I have realized that this won't work for some edge cases in i3, so I'll close it again. Sorry about that.",True,{}
i3/i3,https://github.com/i3/i3,2266,2016-03-20T11:31:41Z,2016-03-24T08:40:19Z,2016-09-25T22:47:24Z,MERGED,True,5,1,1,https://github.com/cedricbu,i3-dmenu-desktop: do not die on failed open,1,[],https://github.com/i3/i3/pull/2266,https://github.com/cedricbu,1,https://github.com/i3/i3/pull/2266,"It is possible for the open() call in slurp() to fail. If it fails, it might be better to skip that file (i.e.: return undef, to mimic the ""Could not read"" error later in the function) rather than just killing the whole execution.
Typically, the open fails on broken symlinks (which might happen if /etc/alternatives/ is getting messy).
To reproduce :
# ln -s /broken ~/.local/share/applications/broken.desktop
Current result :
# i3-dmenu-desktop 
No such file or directory at /usr/bin/i3-dmenu-desktop line 28.

And the dmenu does not appear at all
Expected result:
# i3-dmenu-desktop 
Could not open /home/cedric/.local/share/applications/broken.desktop: No such file or directory at ./i3-dmenu-desktop line 28.

But the dmenu now appears despite the problematic file.","It is possible for the open() call in slurp() to fail. If it fails, it might be better to skip that file (i.e.: return undef, to mimic the ""Could not read"" error later in the function) rather than just killing the whole execution.
Typically, the open fails on broken symlinks (which might happen if /etc/alternatives/ is getting messy).
To reproduce :
# ln -s /broken ~/.local/share/applications/broken.desktop
Current result :
# i3-dmenu-desktop 
No such file or directory at /usr/bin/i3-dmenu-desktop line 28.

And the dmenu does not appear at all
Expected result:
# i3-dmenu-desktop 
Could not open /home/cedric/.local/share/applications/broken.desktop: No such file or directory at ./i3-dmenu-desktop line 28.

But the dmenu now appears despite the problematic file.",True,{'LAUGH': ['https://github.com/gangelop']}
i3/i3,https://github.com/i3/i3,2266,2016-03-20T11:31:41Z,2016-03-24T08:40:19Z,2016-09-25T22:47:24Z,MERGED,True,5,1,1,https://github.com/cedricbu,i3-dmenu-desktop: do not die on failed open,1,[],https://github.com/i3/i3/pull/2266,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/2266#issuecomment-199438839,"It is possible for the open() call in slurp() to fail. If it fails, it might be better to skip that file (i.e.: return undef, to mimic the ""Could not read"" error later in the function) rather than just killing the whole execution.
Typically, the open fails on broken symlinks (which might happen if /etc/alternatives/ is getting messy).
To reproduce :
# ln -s /broken ~/.local/share/applications/broken.desktop
Current result :
# i3-dmenu-desktop 
No such file or directory at /usr/bin/i3-dmenu-desktop line 28.

And the dmenu does not appear at all
Expected result:
# i3-dmenu-desktop 
Could not open /home/cedric/.local/share/applications/broken.desktop: No such file or directory at ./i3-dmenu-desktop line 28.

But the dmenu now appears despite the problematic file.",Looks good overall. Can you address the comment and rebase please so that I can merge the PR?,True,{'LAUGH': ['https://github.com/gangelop']}
i3/i3,https://github.com/i3/i3,2266,2016-03-20T11:31:41Z,2016-03-24T08:40:19Z,2016-09-25T22:47:24Z,MERGED,True,5,1,1,https://github.com/cedricbu,i3-dmenu-desktop: do not die on failed open,1,[],https://github.com/i3/i3/pull/2266,https://github.com/cedricbu,3,https://github.com/i3/i3/pull/2266#issuecomment-200020006,"It is possible for the open() call in slurp() to fail. If it fails, it might be better to skip that file (i.e.: return undef, to mimic the ""Could not read"" error later in the function) rather than just killing the whole execution.
Typically, the open fails on broken symlinks (which might happen if /etc/alternatives/ is getting messy).
To reproduce :
# ln -s /broken ~/.local/share/applications/broken.desktop
Current result :
# i3-dmenu-desktop 
No such file or directory at /usr/bin/i3-dmenu-desktop line 28.

And the dmenu does not appear at all
Expected result:
# i3-dmenu-desktop 
Could not open /home/cedric/.local/share/applications/broken.desktop: No such file or directory at ./i3-dmenu-desktop line 28.

But the dmenu now appears despite the problematic file.",Thanks! Done,True,"{'HEART': ['https://github.com/gangelop', 'https://github.com/cedricbu']}"
i3/i3,https://github.com/i3/i3,2266,2016-03-20T11:31:41Z,2016-03-24T08:40:19Z,2016-09-25T22:47:24Z,MERGED,True,5,1,1,https://github.com/cedricbu,i3-dmenu-desktop: do not die on failed open,1,[],https://github.com/i3/i3/pull/2266,https://github.com/cedricbu,4,https://github.com/i3/i3/pull/2266#issuecomment-200465630,"It is possible for the open() call in slurp() to fail. If it fails, it might be better to skip that file (i.e.: return undef, to mimic the ""Could not read"" error later in the function) rather than just killing the whole execution.
Typically, the open fails on broken symlinks (which might happen if /etc/alternatives/ is getting messy).
To reproduce :
# ln -s /broken ~/.local/share/applications/broken.desktop
Current result :
# i3-dmenu-desktop 
No such file or directory at /usr/bin/i3-dmenu-desktop line 28.

And the dmenu does not appear at all
Expected result:
# i3-dmenu-desktop 
Could not open /home/cedric/.local/share/applications/broken.desktop: No such file or directory at ./i3-dmenu-desktop line 28.

But the dmenu now appears despite the problematic file.",corrected,True,{}
i3/i3,https://github.com/i3/i3,2267,2016-03-21T19:45:50Z,2016-03-21T19:56:06Z,2016-03-21T19:56:06Z,CLOSED,False,37,20,10,https://github.com/Chr1stoph,Pevent that i3-config-wizard generates incomplete config file,11,[],https://github.com/i3/i3/pull/2267,https://github.com/Chr1stoph,1,https://github.com/i3/i3/pull/2267,"Dear i3 team,
i3-config-wizard is a tool of x11-wm/i3 to generate a default configuration file. The last lines of a newly generated file end with
alternatively, you can use the cursor keys:
bindsym $mod+ISO_Level3_Shift focus left
bindsym $mod+Super_R focus down
bindsym $mod+Print focus up
The pull request does not stop at non existing keysymbols. it replace what is possible and leaves the codes for non existing symbols untouched. Please find the patch as text file.
patch-i3-config-wizard_main.txt
Thank you for your kind consideration,
Christoph","Dear i3 team,
i3-config-wizard is a tool of x11-wm/i3 to generate a default configuration file. The last lines of a newly generated file end with
alternatively, you can use the cursor keys:
bindsym $mod+ISO_Level3_Shift focus left
bindsym $mod+Super_R focus down
bindsym $mod+Print focus up
The pull request does not stop at non existing keysymbols. it replace what is possible and leaves the codes for non existing symbols untouched. Please find the patch as text file.
patch-i3-config-wizard_main.txt
Thank you for your kind consideration,
Christoph",True,{}
i3/i3,https://github.com/i3/i3,2267,2016-03-21T19:45:50Z,2016-03-21T19:56:06Z,2016-03-21T19:56:06Z,CLOSED,False,37,20,10,https://github.com/Chr1stoph,Pevent that i3-config-wizard generates incomplete config file,11,[],https://github.com/i3/i3/pull/2267,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2267#issuecomment-199448709,"Dear i3 team,
i3-config-wizard is a tool of x11-wm/i3 to generate a default configuration file. The last lines of a newly generated file end with
alternatively, you can use the cursor keys:
bindsym $mod+ISO_Level3_Shift focus left
bindsym $mod+Super_R focus down
bindsym $mod+Print focus up
The pull request does not stop at non existing keysymbols. it replace what is possible and leaves the codes for non existing symbols untouched. Please find the patch as text file.
patch-i3-config-wizard_main.txt
Thank you for your kind consideration,
Christoph","Please open it as a proper pull request, not an attached patch file. Also, make sure to reference ticket #2141 in the commit message. Lastly, in the ticket discussion we discussed how we want to fix this. It seems like your patch doesn't do that at all.",True,{}
i3/i3,https://github.com/i3/i3,2269,2016-03-22T20:19:20Z,2016-06-06T17:54:52Z,2016-06-06T17:54:52Z,CLOSED,False,24,0,1,https://github.com/joepvd,Debugging procedure hanging i3 add.,3,['waiting'],https://github.com/i3/i3/pull/2269,https://github.com/joepvd,1,https://github.com/i3/i3/pull/2269,"Credits go to Ingo in message
https://www.freelists.org/post/i3-discuss/Seeing-a-hang-on-i3-version-412,3","Credits go to Ingo in message
https://www.freelists.org/post/i3-discuss/Seeing-a-hang-on-i3-version-412,3",True,{}
i3/i3,https://github.com/i3/i3,2269,2016-03-22T20:19:20Z,2016-06-06T17:54:52Z,2016-06-06T17:54:52Z,CLOSED,False,24,0,1,https://github.com/joepvd,Debugging procedure hanging i3 add.,3,['waiting'],https://github.com/i3/i3/pull/2269,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2269#issuecomment-214475976,"Credits go to Ingo in message
https://www.freelists.org/post/i3-discuss/Seeing-a-hang-on-i3-version-412,3",@joepvd Are you going to keep working on this?,True,{}
i3/i3,https://github.com/i3/i3,2277,2016-04-02T08:27:37Z,2016-04-04T06:47:07Z,2016-09-25T22:47:24Z,MERGED,True,1,1,1,https://github.com/xuhdev,Point out the default ipc message type in i3-msg.man,1,[],https://github.com/i3/i3/pull/2277,https://github.com/xuhdev,1,https://github.com/i3/i3/pull/2277,,,True,{}
i3/i3,https://github.com/i3/i3,2277,2016-04-02T08:27:37Z,2016-04-04T06:47:07Z,2016-09-25T22:47:24Z,MERGED,True,1,1,1,https://github.com/xuhdev,Point out the default ipc message type in i3-msg.man,1,[],https://github.com/i3/i3/pull/2277,https://github.com/xuhdev,2,https://github.com/i3/i3/pull/2277#issuecomment-204792755,,@stapelberg Done!,True,{}
i3/i3,https://github.com/i3/i3,2278,2016-04-03T13:03:58Z,2016-04-10T11:09:18Z,2017-02-01T18:30:04Z,MERGED,True,19,13,5,https://github.com/jolange,Version extraction,4,[],https://github.com/i3/i3/pull/2278,https://github.com/jolange,1,https://github.com/i3/i3/pull/2278,"Strategy to handle #1993:

When creating a new release with the script, VERSION and I3_VERSION are updated and checked in, so these are always available in (github) release tarballs. After creating the release tag, I3_VERSION is updated to X.xx-post-dev, which will be used when downloading a non-release tarball.
When building, git version information is used if possible. Otherwise (building from a tarball), the version files are used.

I manually added the current version files to make this work directly for non-release tarballs.","Strategy to handle #1993:

When creating a new release with the script, VERSION and I3_VERSION are updated and checked in, so these are always available in (github) release tarballs. After creating the release tag, I3_VERSION is updated to X.xx-post-dev, which will be used when downloading a non-release tarball.
When building, git version information is used if possible. Otherwise (building from a tarball), the version files are used.

I manually added the current version files to make this work directly for non-release tarballs.",True,{}
i3/i3,https://github.com/i3/i3,2278,2016-04-03T13:03:58Z,2016-04-10T11:09:18Z,2017-02-01T18:30:04Z,MERGED,True,19,13,5,https://github.com/jolange,Version extraction,4,[],https://github.com/i3/i3/pull/2278,https://github.com/jolange,2,https://github.com/i3/i3/pull/2278#issuecomment-206530683,"Strategy to handle #1993:

When creating a new release with the script, VERSION and I3_VERSION are updated and checked in, so these are always available in (github) release tarballs. After creating the release tag, I3_VERSION is updated to X.xx-post-dev, which will be used when downloading a non-release tarball.
When building, git version information is used if possible. Otherwise (building from a tarball), the version files are used.

I manually added the current version files to make this work directly for non-release tarballs.","Ok, done. I'll squash the last two commits and rebase everything if you think this is good to go @stapelberg.",True,{}
i3/i3,https://github.com/i3/i3,2278,2016-04-03T13:03:58Z,2016-04-10T11:09:18Z,2017-02-01T18:30:04Z,MERGED,True,19,13,5,https://github.com/jolange,Version extraction,4,[],https://github.com/i3/i3/pull/2278,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/2278#issuecomment-206738961,"Strategy to handle #1993:

When creating a new release with the script, VERSION and I3_VERSION are updated and checked in, so these are always available in (github) release tarballs. After creating the release tag, I3_VERSION is updated to X.xx-post-dev, which will be used when downloading a non-release tarball.
When building, git version information is used if possible. Otherwise (building from a tarball), the version files are used.

I manually added the current version files to make this work directly for non-release tarballs.","Commented on two nits, should be good to go after you’ve addressed these.",True,{}
i3/i3,https://github.com/i3/i3,2278,2016-04-03T13:03:58Z,2016-04-10T11:09:18Z,2017-02-01T18:30:04Z,MERGED,True,19,13,5,https://github.com/jolange,Version extraction,4,[],https://github.com/i3/i3/pull/2278,https://github.com/jolange,4,https://github.com/i3/i3/pull/2278#issuecomment-207000642,"Strategy to handle #1993:

When creating a new release with the script, VERSION and I3_VERSION are updated and checked in, so these are always available in (github) release tarballs. After creating the release tag, I3_VERSION is updated to X.xx-post-dev, which will be used when downloading a non-release tarball.
When building, git version information is used if possible. Otherwise (building from a tarball), the version files are used.

I manually added the current version files to make this work directly for non-release tarballs.",@stapelberg done.,True,{}
i3/i3,https://github.com/i3/i3,2278,2016-04-03T13:03:58Z,2016-04-10T11:09:18Z,2017-02-01T18:30:04Z,MERGED,True,19,13,5,https://github.com/jolange,Version extraction,4,[],https://github.com/i3/i3/pull/2278,https://github.com/stapelberg,5,https://github.com/i3/i3/pull/2278#issuecomment-207961348,"Strategy to handle #1993:

When creating a new release with the script, VERSION and I3_VERSION are updated and checked in, so these are always available in (github) release tarballs. After creating the release tag, I3_VERSION is updated to X.xx-post-dev, which will be used when downloading a non-release tarball.
When building, git version information is used if possible. Otherwise (building from a tarball), the version files are used.

I manually added the current version files to make this work directly for non-release tarballs.",Thanks!,True,{}
i3/i3,https://github.com/i3/i3,2279,2016-04-03T23:22:59Z,2016-04-04T07:33:59Z,2016-09-25T22:47:24Z,MERGED,True,22,22,19,https://github.com/1ace,Fix spelling mistakes,1,[],https://github.com/i3/i3/pull/2279,https://github.com/1ace,1,https://github.com/i3/i3/pull/2279,,,True,{}
i3/i3,https://github.com/i3/i3,2281,2016-04-06T21:11:00Z,2016-04-07T06:35:29Z,2016-09-25T22:47:24Z,MERGED,True,0,30,1,https://github.com/Airblader,Remove unmaintained CHANGELOG file from i3bar,1,[],https://github.com/i3/i3/pull/2281,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2281,"@stapelberg On a related note, the LICENSE in i3bar also has a year range. I'm not sure whether we can just change that to ""2009"" like in all the other places, too, though, since the LICENSE is attributed to Axel Wagner?","@stapelberg On a related note, the LICENSE in i3bar also has a year range. I'm not sure whether we can just change that to ""2009"" like in all the other places, too, though, since the LICENSE is attributed to Axel Wagner?",True,{}
i3/i3,https://github.com/i3/i3,2281,2016-04-06T21:11:00Z,2016-04-07T06:35:29Z,2016-09-25T22:47:24Z,MERGED,True,0,30,1,https://github.com/Airblader,Remove unmaintained CHANGELOG file from i3bar,1,[],https://github.com/i3/i3/pull/2281,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/2281#issuecomment-206714641,"@stapelberg On a related note, the LICENSE in i3bar also has a year range. I'm not sure whether we can just change that to ""2009"" like in all the other places, too, though, since the LICENSE is attributed to Axel Wagner?","I'm not sure whether we can just change that to ""2009"" like in all the other places, too, though, since the LICENSE is attributed to Axel Wagner?

We should change it to “© 2010 Axel Wagner”, I think. @Merovius, does that sound reasonable? See #1636 for context, we’ve changed copyright notices to use the starting year, not a range of years.",True,{}
i3/i3,https://github.com/i3/i3,2281,2016-04-06T21:11:00Z,2016-04-07T06:35:29Z,2016-09-25T22:47:24Z,MERGED,True,0,30,1,https://github.com/Airblader,Remove unmaintained CHANGELOG file from i3bar,1,[],https://github.com/i3/i3/pull/2281,https://github.com/Merovius,3,https://github.com/i3/i3/pull/2281#issuecomment-207957117,"@stapelberg On a related note, the LICENSE in i3bar also has a year range. I'm not sure whether we can just change that to ""2009"" like in all the other places, too, though, since the LICENSE is attributed to Axel Wagner?",SGTM,True,{}
i3/i3,https://github.com/i3/i3,2281,2016-04-06T21:11:00Z,2016-04-07T06:35:29Z,2016-09-25T22:47:24Z,MERGED,True,0,30,1,https://github.com/Airblader,Remove unmaintained CHANGELOG file from i3bar,1,[],https://github.com/i3/i3/pull/2281,https://github.com/Airblader,4,https://github.com/i3/i3/pull/2281#issuecomment-207958337,"@stapelberg On a related note, the LICENSE in i3bar also has a year range. I'm not sure whether we can just change that to ""2009"" like in all the other places, too, though, since the LICENSE is attributed to Axel Wagner?",#2284,True,{}
i3/i3,https://github.com/i3/i3,2284,2016-04-10T10:37:45Z,2016-04-10T11:15:49Z,2016-09-25T22:47:25Z,MERGED,True,1,1,1,https://github.com/Airblader,Update i3bar LICENSE to conform to other LICENSE files.,1,[],https://github.com/i3/i3/pull/2284,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2284,This change of the LICENSE has been approved by Axel Wagner in #2281.,This change of the LICENSE has been approved by Axel Wagner in #2281.,True,{}
i3/i3,https://github.com/i3/i3,2286,2016-04-11T09:08:35Z,2016-05-08T10:55:27Z,2016-09-25T22:47:25Z,MERGED,True,253,55,12,https://github.com/Airblader,Load X resources,1,[],https://github.com/i3/i3/pull/2286,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2286,,,True,{}
i3/i3,https://github.com/i3/i3,2286,2016-04-11T09:08:35Z,2016-05-08T10:55:27Z,2016-09-25T22:47:25Z,MERGED,True,253,55,12,https://github.com/Airblader,Load X resources,1,[],https://github.com/i3/i3/pull/2286,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2286#issuecomment-208246392,,I will have to adapt Travis for the time being to make it work. I'll also add another test.,True,{}
i3/i3,https://github.com/i3/i3,2286,2016-04-11T09:08:35Z,2016-05-08T10:55:27Z,2016-09-25T22:47:25Z,MERGED,True,253,55,12,https://github.com/Airblader,Load X resources,1,[],https://github.com/i3/i3/pull/2286,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2286#issuecomment-208353051,,"I'm not entirely sure what's happening with Travis, but likely I'm doing something wrong. Unfortunately I have no experience with docker whatsoever. I'd appreciate some help. :)",True,{}
i3/i3,https://github.com/i3/i3,2286,2016-04-11T09:08:35Z,2016-05-08T10:55:27Z,2016-09-25T22:47:25Z,MERGED,True,253,55,12,https://github.com/Airblader,Load X resources,1,[],https://github.com/i3/i3/pull/2286,https://github.com/Airblader,4,https://github.com/i3/i3/pull/2286#issuecomment-208558267,,"@stapelberg I'm lost now. From what I can see, all packages and util-xrm are built and compiled just fine. Do you have any idea why the tests are stalling?",True,{}
i3/i3,https://github.com/i3/i3,2286,2016-04-11T09:08:35Z,2016-05-08T10:55:27Z,2016-09-25T22:47:25Z,MERGED,True,253,55,12,https://github.com/Airblader,Load X resources,1,[],https://github.com/i3/i3/pull/2286,https://github.com/stapelberg,5,https://github.com/i3/i3/pull/2286#issuecomment-210088126,,"It’s not obvious to me why that’s happening. Here are a couple of debug strategies that come to mind:

Comment out all code which actually uses xcb-util-xrm to see if this might be a linking-related issue. Try commenting out all code/makefile changes mentioning xcb-util-xrm just to establish a sane test environment.
Modify the complete-run.pl command to not run all tests, but only run a specific, simple test case.
In case that still hangs, try building the docker container locally and running the tests in it.
In case that works, create a separate GitHub repository for testing travis, configure credentials for Docker (use the travis encrypt command). That way, travis will push the docker container under your credentials and you can download it to see if you can reproduce it within the travis-built docker container (I’d be surprised).",True,{}
i3/i3,https://github.com/i3/i3,2286,2016-04-11T09:08:35Z,2016-05-08T10:55:27Z,2016-09-25T22:47:25Z,MERGED,True,253,55,12,https://github.com/Airblader,Load X resources,1,[],https://github.com/i3/i3/pull/2286,https://github.com/Airblader,6,https://github.com/i3/i3/pull/2286#issuecomment-210101491,,"@stapelberg  OK, so removing only the actual code using the library doesn't change anything, but removing the Makefile stuff fixes it (of course the test now fails).
Unfortunately I'm still without any idea as to what this means. I'm now adding it all back in and have it run with only a simple test case as proposed.",True,{}
i3/i3,https://github.com/i3/i3,2286,2016-04-11T09:08:35Z,2016-05-08T10:55:27Z,2016-09-25T22:47:25Z,MERGED,True,253,55,12,https://github.com/Airblader,Load X resources,1,[],https://github.com/i3/i3/pull/2286,https://github.com/Airblader,7,https://github.com/i3/i3/pull/2286#issuecomment-210104193,,"OK, with a single test it fails like this:
Test output:
[:100] t/002-i3-sync.t: starting
[:100] t/002-i3-sync.t: finished
output for t/002-i3-sync.t:
not ok 1 - No such atom (I3_SOCKET_PATH) at /usr/src/i3/testcases/lib/i3test.pm line 796.
# BEGIN failed--compilation aborted at ./t/002-i3-sync.t line 19.
# 
#   Failed test 'No such atom (I3_SOCKET_PATH) at /usr/src/i3/testcases/lib/i3test.pm line 796.
# BEGIN failed--compilation aborted at ./t/002-i3-sync.t line 19.
# '
#   at /usr/src/i3/testcases/lib/TestWorker.pm line 56.
+ xvfb-run ./complete-run.pl --parallel=1
xvfb-run: error: Xvfb failed to start

Which looks like i3 isn't running, i.e., it probably crashed. The tests run fine on my machine, however.",True,{}
i3/i3,https://github.com/i3/i3,2286,2016-04-11T09:08:35Z,2016-05-08T10:55:27Z,2016-09-25T22:47:25Z,MERGED,True,253,55,12,https://github.com/Airblader,Load X resources,1,[],https://github.com/i3/i3/pull/2286,https://github.com/Airblader,8,https://github.com/i3/i3/pull/2286#issuecomment-210117504,,I'm thinking the issue is the loader. I assume the shared library simply can't be found when i3 is started.,True,{}
i3/i3,https://github.com/i3/i3,2286,2016-04-11T09:08:35Z,2016-05-08T10:55:27Z,2016-09-25T22:47:25Z,MERGED,True,253,55,12,https://github.com/Airblader,Load X resources,1,[],https://github.com/i3/i3/pull/2286,https://github.com/stapelberg,9,https://github.com/i3/i3/pull/2286#issuecomment-210120505,,Try throwing in an ldconfig call.,True,{}
i3/i3,https://github.com/i3/i3,2286,2016-04-11T09:08:35Z,2016-05-08T10:55:27Z,2016-09-25T22:47:25Z,MERGED,True,253,55,12,https://github.com/Airblader,Load X resources,1,[],https://github.com/i3/i3/pull/2286,https://github.com/Airblader,10,https://github.com/i3/i3/pull/2286#issuecomment-210122953,,I think I've fixed it. I simply had to specify the --prefix on autogen to get it installed in a path the loader already knows. Thanks for all the help. Let's hope the next push comes back green so we can talk about the actual change here. :-),True,{}
i3/i3,https://github.com/i3/i3,2286,2016-04-11T09:08:35Z,2016-05-08T10:55:27Z,2016-09-25T22:47:25Z,MERGED,True,253,55,12,https://github.com/Airblader,Load X resources,1,[],https://github.com/i3/i3/pull/2286,https://github.com/Airblader,11,https://github.com/i3/i3/pull/2286#issuecomment-210127194,,@stapelberg Victory at last.,True,{}
i3/i3,https://github.com/i3/i3,2286,2016-04-11T09:08:35Z,2016-05-08T10:55:27Z,2016-09-25T22:47:25Z,MERGED,True,253,55,12,https://github.com/Airblader,Load X resources,1,[],https://github.com/i3/i3/pull/2286,https://github.com/stapelberg,12,https://github.com/i3/i3/pull/2286#issuecomment-210327615,,"Looks good overall.
I want to wait with merging this until the Debian package made it to testing, so that users will be able to install the auto-built packages.",True,{}
i3/i3,https://github.com/i3/i3,2286,2016-04-11T09:08:35Z,2016-05-08T10:55:27Z,2016-09-25T22:47:25Z,MERGED,True,253,55,12,https://github.com/Airblader,Load X resources,1,[],https://github.com/i3/i3/pull/2286,https://github.com/Airblader,13,https://github.com/i3/i3/pull/2286#issuecomment-210840652,,"This currently breaks normal variables, I'll fix it.",True,{}
i3/i3,https://github.com/i3/i3,2286,2016-04-11T09:08:35Z,2016-05-08T10:55:27Z,2016-09-25T22:47:25Z,MERGED,True,253,55,12,https://github.com/Airblader,Load X resources,1,[],https://github.com/i3/i3/pull/2286,https://github.com/Airblader,14,https://github.com/i3/i3/pull/2286#issuecomment-210848029,,"OK, fixed now.",True,{}
i3/i3,https://github.com/i3/i3,2286,2016-04-11T09:08:35Z,2016-05-08T10:55:27Z,2016-09-25T22:47:25Z,MERGED,True,253,55,12,https://github.com/Airblader,Load X resources,1,[],https://github.com/i3/i3/pull/2286,https://github.com/Airblader,15,https://github.com/i3/i3/pull/2286#issuecomment-211072388,,"Reloading the config causes a crash, I'll look at it.",True,{}
i3/i3,https://github.com/i3/i3,2286,2016-04-11T09:08:35Z,2016-05-08T10:55:27Z,2016-09-25T22:47:25Z,MERGED,True,253,55,12,https://github.com/Airblader,Load X resources,1,[],https://github.com/i3/i3/pull/2286,https://github.com/Airblader,16,https://github.com/i3/i3/pull/2286#issuecomment-211072913,,Done. It's paying off to use this until we can actually merge it. :),True,{}
i3/i3,https://github.com/i3/i3,2286,2016-04-11T09:08:35Z,2016-05-08T10:55:27Z,2016-09-25T22:47:25Z,MERGED,True,253,55,12,https://github.com/Airblader,Load X resources,1,[],https://github.com/i3/i3/pull/2286,https://github.com/Airblader,17,https://github.com/i3/i3/pull/2286#issuecomment-212055350,,"@stapelberg Out of curiosity, how long does it typically take a package proposal to make it into Debian testing? Are we talking days, weeks, months or ""any of those is possible depending on xyz""?",True,{}
i3/i3,https://github.com/i3/i3,2286,2016-04-11T09:08:35Z,2016-05-08T10:55:27Z,2016-09-25T22:47:25Z,MERGED,True,253,55,12,https://github.com/Airblader,Load X resources,1,[],https://github.com/i3/i3/pull/2286,https://github.com/stapelberg,18,https://github.com/i3/i3/pull/2286#issuecomment-213725503,,It’s pretty variable and depends mostly on how busy the ftp-masters are I think. Maybe https://ftp-master.debian.org/stat.html gives you a better feeling? I’d wait another week or two before I start pinging people about it :).,True,{}
i3/i3,https://github.com/i3/i3,2286,2016-04-11T09:08:35Z,2016-05-08T10:55:27Z,2016-09-25T22:47:25Z,MERGED,True,253,55,12,https://github.com/Airblader,Load X resources,1,[],https://github.com/i3/i3/pull/2286,https://github.com/Airblader,19,https://github.com/i3/i3/pull/2286#issuecomment-216639169,,@stapelberg It has made it into Debian testing now. :-),True,{}
i3/i3,https://github.com/i3/i3,2286,2016-04-11T09:08:35Z,2016-05-08T10:55:27Z,2016-09-25T22:47:25Z,MERGED,True,253,55,12,https://github.com/Airblader,Load X resources,1,[],https://github.com/i3/i3/pull/2286,https://github.com/stapelberg,20,https://github.com/i3/i3/pull/2286#issuecomment-217361939,,Can you squash d11be18? It looks to me like it doesn’t need to be a separate commit.,True,{}
i3/i3,https://github.com/i3/i3,2286,2016-04-11T09:08:35Z,2016-05-08T10:55:27Z,2016-09-25T22:47:25Z,MERGED,True,253,55,12,https://github.com/Airblader,Load X resources,1,[],https://github.com/i3/i3/pull/2286,https://github.com/Airblader,21,https://github.com/i3/i3/pull/2286#issuecomment-217398553,,I have squashed it all into a single commit now and made the changes.,True,{}
i3/i3,https://github.com/i3/i3,2286,2016-04-11T09:08:35Z,2016-05-08T10:55:27Z,2016-09-25T22:47:25Z,MERGED,True,253,55,12,https://github.com/Airblader,Load X resources,1,[],https://github.com/i3/i3/pull/2286,https://github.com/stapelberg,22,https://github.com/i3/i3/pull/2286#issuecomment-217672166,,Looks good overall.,True,{}
i3/i3,https://github.com/i3/i3,2286,2016-04-11T09:08:35Z,2016-05-08T10:55:27Z,2016-09-25T22:47:25Z,MERGED,True,253,55,12,https://github.com/Airblader,Load X resources,1,[],https://github.com/i3/i3/pull/2286,https://github.com/Airblader,23,https://github.com/i3/i3/pull/2286#issuecomment-217673075,,@stapelberg Done and rebased,True,{}
i3/i3,https://github.com/i3/i3,2287,2016-04-11T13:19:16Z,2016-04-13T17:34:53Z,2017-01-26T10:58:02Z,MERGED,True,7,5,1,https://github.com/layus,Fix punned-pointer warning from gcc,2,[],https://github.com/i3/i3/pull/2287,https://github.com/layus,1,https://github.com/i3/i3/pull/2287,Last issue with #1538.,Last issue with #1538.,True,{}
i3/i3,https://github.com/i3/i3,2287,2016-04-11T13:19:16Z,2016-04-13T17:34:53Z,2017-01-26T10:58:02Z,MERGED,True,7,5,1,https://github.com/layus,Fix punned-pointer warning from gcc,2,[],https://github.com/i3/i3/pull/2287,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/2287#issuecomment-209557540,Last issue with #1538.,Thanks!,True,{}
i3/i3,https://github.com/i3/i3,2290,2016-04-12T16:36:29Z,2016-04-13T17:45:57Z,2021-07-18T10:33:00Z,MERGED,True,50,33,5,https://github.com/Airblader,Only grab the mouse buttons that need to be grabbed.,1,[],https://github.com/i3/i3/pull/2290,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2290,"This is a followup to #2049. While we had fixed that bug by only grabbing
buttons 4 and 5 if there is a whole-window binding for that button, this
did not consider buttons higher than 5 as found on many mice.
Therefore, we now ditch the special handling for scrollwheel buttons and
instead do the same for all buttons higher than 3.
fixes #2271","This is a followup to #2049. While we had fixed that bug by only grabbing
buttons 4 and 5 if there is a whole-window binding for that button, this
did not consider buttons higher than 5 as found on many mice.
Therefore, we now ditch the special handling for scrollwheel buttons and
instead do the same for all buttons higher than 3.
fixes #2271",True,{}
i3/i3,https://github.com/i3/i3,2290,2016-04-12T16:36:29Z,2016-04-13T17:45:57Z,2021-07-18T10:33:00Z,MERGED,True,50,33,5,https://github.com/Airblader,Only grab the mouse buttons that need to be grabbed.,1,[],https://github.com/i3/i3/pull/2290,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2290#issuecomment-208996573,"This is a followup to #2049. While we had fixed that bug by only grabbing
buttons 4 and 5 if there is a whole-window binding for that button, this
did not consider buttons higher than 5 as found on many mice.
Therefore, we now ditch the special handling for scrollwheel buttons and
instead do the same for all buttons higher than 3.
fixes #2271",Despite the tests we have for #2049 already I want to give this a manual test.,True,{}
i3/i3,https://github.com/i3/i3,2290,2016-04-12T16:36:29Z,2016-04-13T17:45:57Z,2021-07-18T10:33:00Z,MERGED,True,50,33,5,https://github.com/Airblader,Only grab the mouse buttons that need to be grabbed.,1,[],https://github.com/i3/i3/pull/2290,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2290#issuecomment-209010975,"This is a followup to #2049. While we had fixed that bug by only grabbing
buttons 4 and 5 if there is a whole-window binding for that button, this
did not consider buttons higher than 5 as found on many mice.
Therefore, we now ditch the special handling for scrollwheel buttons and
instead do the same for all buttons higher than 3.
fixes #2271",It has now been tested.,True,{}
i3/i3,https://github.com/i3/i3,2291,2016-04-12T21:07:56Z,2016-04-13T17:47:28Z,2016-04-13T17:47:28Z,CLOSED,False,18,9,1,https://github.com/Airblader,Multiple fixes for title rendering,3,['waiting'],https://github.com/i3/i3/pull/2291,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2291,"@stapelberg The change #2247 is actually about is not yet in here. As discussed there, we believe removing the weird indentation of titles is favorable. If we convinced you, I'll make another commit for this in this PR.
The commit messages (hopefully) elaborate the changes in these commits rather well.","@stapelberg The change #2247 is actually about is not yet in here. As discussed there, we believe removing the weird indentation of titles is favorable. If we convinced you, I'll make another commit for this in this PR.
The commit messages (hopefully) elaborate the changes in these commits rather well.",True,{}
i3/i3,https://github.com/i3/i3,2291,2016-04-12T21:07:56Z,2016-04-13T17:47:28Z,2016-04-13T17:47:28Z,CLOSED,False,18,9,1,https://github.com/Airblader,Multiple fixes for title rendering,3,['waiting'],https://github.com/i3/i3/pull/2291,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2291#issuecomment-209104636,"@stapelberg The change #2247 is actually about is not yet in here. As discussed there, we believe removing the weird indentation of titles is favorable. If we convinced you, I'll make another commit for this in this PR.
The commit messages (hopefully) elaborate the changes in these commits rather well.","Just for reference, here's what the fixed version looks like:",True,{}
i3/i3,https://github.com/i3/i3,2291,2016-04-12T21:07:56Z,2016-04-13T17:47:28Z,2016-04-13T17:47:28Z,CLOSED,False,18,9,1,https://github.com/Airblader,Multiple fixes for title rendering,3,['waiting'],https://github.com/i3/i3/pull/2291,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2291#issuecomment-209535140,"@stapelberg The change #2247 is actually about is not yet in here. As discussed there, we believe removing the weird indentation of titles is favorable. If we convinced you, I'll make another commit for this in this PR.
The commit messages (hopefully) elaborate the changes in these commits rather well.",The fix is not correct for tabbed layouts. Will adapt it.,True,{}
i3/i3,https://github.com/i3/i3,2291,2016-04-12T21:07:56Z,2016-04-13T17:47:28Z,2016-04-13T17:47:28Z,CLOSED,False,18,9,1,https://github.com/Airblader,Multiple fixes for title rendering,3,['waiting'],https://github.com/i3/i3/pull/2291,https://github.com/Airblader,4,https://github.com/i3/i3/pull/2291#issuecomment-209564213,"@stapelberg The change #2247 is actually about is not yet in here. As discussed there, we believe removing the weird indentation of titles is favorable. If we convinced you, I'll make another commit for this in this PR.
The commit messages (hopefully) elaborate the changes in these commits rather well.","I'm going to have to revert part of this. As much as I think this looks better, for tabbed and stacked layouts it just doesn't work (at this point I wish border width wasn't something that could be different for every container). I've thought about this for a while and just can't figure out a reasonable combination that is consistent.
I'll instead change this PR to fix the rendering bug alone, but not align title and marks on the client window (i.e., I won't indent them by the border width).
Of course, removing the weird indentation from #2247 is still to be decided.",True,{}
i3/i3,https://github.com/i3/i3,2293,2016-04-13T15:01:52Z,2016-04-15T22:47:59Z,2016-04-15T22:47:59Z,CLOSED,False,0,0,0,https://github.com/EvilPudding,Hex in struct Colorpixel.hex to contiguous memory,0,[],https://github.com/i3/i3/pull/2293,https://github.com/EvilPudding,1,https://github.com/i3/i3/pull/2293,"No reason for hex not to be of a constant size, and
no reason to introduce a cache miss by allocating it
separated from the rest of the structure.","No reason for hex not to be of a constant size, and
no reason to introduce a cache miss by allocating it
separated from the rest of the structure.",True,{}
i3/i3,https://github.com/i3/i3,2293,2016-04-13T15:01:52Z,2016-04-15T22:47:59Z,2016-04-15T22:47:59Z,CLOSED,False,0,0,0,https://github.com/EvilPudding,Hex in struct Colorpixel.hex to contiguous memory,0,[],https://github.com/i3/i3/pull/2293,https://github.com/EvilPudding,2,https://github.com/i3/i3/pull/2293#issuecomment-209500661,"No reason for hex not to be of a constant size, and
no reason to introduce a cache miss by allocating it
separated from the rest of the structure.","Not really understanding what is failing, I could not find any other reference to the hex member, what am I missing?",True,{}
i3/i3,https://github.com/i3/i3,2293,2016-04-13T15:01:52Z,2016-04-15T22:47:59Z,2016-04-15T22:47:59Z,CLOSED,False,0,0,0,https://github.com/EvilPudding,Hex in struct Colorpixel.hex to contiguous memory,0,[],https://github.com/i3/i3/pull/2293,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2293#issuecomment-209503188,"No reason for hex not to be of a constant size, and
no reason to introduce a cache miss by allocating it
separated from the rest of the structure.","@EvilPudding I think the failing test is just a blinking test (i.e., some race condition). I'll restart the test (and take a look at that one later).",True,{}
i3/i3,https://github.com/i3/i3,2293,2016-04-13T15:01:52Z,2016-04-15T22:47:59Z,2016-04-15T22:47:59Z,CLOSED,False,0,0,0,https://github.com/EvilPudding,Hex in struct Colorpixel.hex to contiguous memory,0,[],https://github.com/i3/i3/pull/2293,https://github.com/Airblader,4,https://github.com/i3/i3/pull/2293#issuecomment-210529165,"No reason for hex not to be of a constant size, and
no reason to introduce a cache miss by allocating it
separated from the rest of the structure.","By the way, please don't merge the next branch into this but instead use rebasing. That way we don't end up with meaningless merge commits (force pushing to your feature branch is fine).",True,{}
i3/i3,https://github.com/i3/i3,2295,2016-04-13T17:57:52Z,2016-04-16T13:51:45Z,2016-09-25T22:47:25Z,MERGED,True,16,7,1,https://github.com/Airblader,Fix rendering of marks (and smaller fixed),3,[],https://github.com/i3/i3/pull/2295,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2295,"Attempt #2. This time we really only fix the cut off text and an edge case, but don't change how much titles are intended from the left resp. marks from the right.","Attempt #2. This time we really only fix the cut off text and an edge case, but don't change how much titles are intended from the left resp. marks from the right.",True,{}
i3/i3,https://github.com/i3/i3,2295,2016-04-13T17:57:52Z,2016-04-16T13:51:45Z,2016-09-25T22:47:25Z,MERGED,True,16,7,1,https://github.com/Airblader,Fix rendering of marks (and smaller fixed),3,[],https://github.com/i3/i3/pull/2295,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/2295#issuecomment-210326004,"Attempt #2. This time we really only fix the cut off text and an edge case, but don't change how much titles are intended from the left resp. marks from the right.",Can you provide a before/after screenshot which shows the issue that’s being addressed please?,True,{}
i3/i3,https://github.com/i3/i3,2295,2016-04-13T17:57:52Z,2016-04-16T13:51:45Z,2016-09-25T22:47:25Z,MERGED,True,16,7,1,https://github.com/Airblader,Fix rendering of marks (and smaller fixed),3,[],https://github.com/i3/i3/pull/2295,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2295#issuecomment-210543910,"Attempt #2. This time we really only fix the cut off text and an edge case, but don't change how much titles are intended from the left resp. marks from the right.",Sure:,True,{}
i3/i3,https://github.com/i3/i3,2296,2016-04-13T18:25:26Z,2016-04-15T07:26:42Z,2016-09-25T22:47:25Z,MERGED,True,27,1,3,https://github.com/Airblader,Correctly count the number of windows for no_focus.,1,[],https://github.com/i3/i3/pull/2296,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2296,"Previously we counted the number of (direct) children of the workspace to
decide whether no_focus should be applied or not. However, this doesn't
work correctly if there's a single container with multiple windows on the
workspace.
This patch correctly counts all windows on the workspace.
fixes #2292","Previously we counted the number of (direct) children of the workspace to
decide whether no_focus should be applied or not. However, this doesn't
work correctly if there's a single container with multiple windows on the
workspace.
This patch correctly counts all windows on the workspace.
fixes #2292",True,{}
i3/i3,https://github.com/i3/i3,2296,2016-04-13T18:25:26Z,2016-04-15T07:26:42Z,2016-09-25T22:47:25Z,MERGED,True,27,1,3,https://github.com/Airblader,Correctly count the number of windows for no_focus.,1,[],https://github.com/i3/i3/pull/2296,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2296#issuecomment-209580484,"Previously we counted the number of (direct) children of the workspace to
decide whether no_focus should be applied or not. However, this doesn't
work correctly if there's a single container with multiple windows on the
workspace.
This patch correctly counts all windows on the workspace.
fixes #2292",Waiting for feedback from the reporter first.,True,{}
i3/i3,https://github.com/i3/i3,2296,2016-04-13T18:25:26Z,2016-04-15T07:26:42Z,2016-09-25T22:47:25Z,MERGED,True,27,1,3,https://github.com/Airblader,Correctly count the number of windows for no_focus.,1,[],https://github.com/i3/i3/pull/2296,https://github.com/Chocobozzz,3,https://github.com/i3/i3/pull/2296#issuecomment-209595640,"Previously we counted the number of (direct) children of the workspace to
decide whether no_focus should be applied or not. However, this doesn't
work correctly if there's a single container with multiple windows on the
workspace.
This patch correctly counts all windows on the workspace.
fixes #2292",It seems to work perfectly. Thanks a lot.,True,{}
i3/i3,https://github.com/i3/i3,2298,2016-04-15T01:29:20Z,2016-04-15T07:27:43Z,2016-09-25T22:47:25Z,MERGED,True,5,3,2,https://github.com/acrisci,Cast con id as uintptr_t,1,[],https://github.com/i3/i3/pull/2298,https://github.com/acrisci,1,https://github.com/i3/i3/pull/2298,"Use uintptr_t to cast the con id to int instead of long int. This
type is guaranteed to hold the pointer as an int regardless of platform.
fixes #2283","Use uintptr_t to cast the con id to int instead of long int. This
type is guaranteed to hold the pointer as an int regardless of platform.
fixes #2283",True,{}
i3/i3,https://github.com/i3/i3,2298,2016-04-15T01:29:20Z,2016-04-15T07:27:43Z,2016-09-25T22:47:25Z,MERGED,True,5,3,2,https://github.com/acrisci,Cast con id as uintptr_t,1,[],https://github.com/i3/i3/pull/2298,https://github.com/acrisci,2,https://github.com/i3/i3/pull/2298#issuecomment-210242574,"Use uintptr_t to cast the con id to int instead of long int. This
type is guaranteed to hold the pointer as an int regardless of platform.
fixes #2283",Did I miss any?,True,{}
i3/i3,https://github.com/i3/i3,2298,2016-04-15T01:29:20Z,2016-04-15T07:27:43Z,2016-09-25T22:47:25Z,MERGED,True,5,3,2,https://github.com/acrisci,Cast con id as uintptr_t,1,[],https://github.com/i3/i3/pull/2298,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/2298#issuecomment-210327911,"Use uintptr_t to cast the con id to int instead of long int. This
type is guaranteed to hold the pointer as an int regardless of platform.
fixes #2283",I can’t spot any other places either. Thanks!,True,{}
i3/i3,https://github.com/i3/i3,2298,2016-04-15T01:29:20Z,2016-04-15T07:27:43Z,2016-09-25T22:47:25Z,MERGED,True,5,3,2,https://github.com/acrisci,Cast con id as uintptr_t,1,[],https://github.com/i3/i3/pull/2298,https://github.com/cornerman,4,https://github.com/i3/i3/pull/2298#issuecomment-210399490,"Use uintptr_t to cast the con id to int instead of long int. This
type is guaranteed to hold the pointer as an int regardless of platform.
fixes #2283","Cool, thanks! Shouldn't we also take care of this when reading the con_id in a criteria? Currently, this only accepts positive long values. I don't know of a string to uintptr_t function; but maybe using strtoul or strtoull and checking the bounds could work.",True,{}
i3/i3,https://github.com/i3/i3,2298,2016-04-15T01:29:20Z,2016-04-15T07:27:43Z,2016-09-25T22:47:25Z,MERGED,True,5,3,2,https://github.com/acrisci,Cast con id as uintptr_t,1,[],https://github.com/i3/i3/pull/2298,https://github.com/acrisci,5,https://github.com/i3/i3/pull/2298#issuecomment-210450391,"Use uintptr_t to cast the con id to int instead of long int. This
type is guaranteed to hold the pointer as an int regardless of platform.
fixes #2283",@cornerman yeah that seems like good reasoning to me.,True,{}
i3/i3,https://github.com/i3/i3,2298,2016-04-15T01:29:20Z,2016-04-15T07:27:43Z,2016-09-25T22:47:25Z,MERGED,True,5,3,2,https://github.com/acrisci,Cast con id as uintptr_t,1,[],https://github.com/i3/i3/pull/2298,https://github.com/stapelberg,6,https://github.com/i3/i3/pull/2298#issuecomment-210541873,"Use uintptr_t to cast the con id to int instead of long int. This
type is guaranteed to hold the pointer as an int regardless of platform.
fixes #2283",Agreed.,True,{}
i3/i3,https://github.com/i3/i3,2301,2016-04-15T22:52:52Z,2016-08-03T16:43:35Z,2016-09-25T22:47:25Z,MERGED,True,5,2,1,https://github.com/EvilPudding,Minor optimization,2,[],https://github.com/i3/i3/pull/2301,https://github.com/EvilPudding,1,https://github.com/i3/i3/pull/2301,"Did not want to create a new pull request for this, but alas, I amended my last commit, so it forced me to, sorry.","Did not want to create a new pull request for this, but alas, I amended my last commit, so it forced me to, sorry.",True,{}
i3/i3,https://github.com/i3/i3,2301,2016-04-15T22:52:52Z,2016-08-03T16:43:35Z,2016-09-25T22:47:25Z,MERGED,True,5,2,1,https://github.com/EvilPudding,Minor optimization,2,[],https://github.com/i3/i3/pull/2301,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2301#issuecomment-210738412,"Did not want to create a new pull request for this, but alas, I amended my last commit, so it forced me to, sorry.",You just have to force push your branch. :) That's not a good idea on main branches but on pull request branches it's perfectly fine.,True,{}
i3/i3,https://github.com/i3/i3,2301,2016-04-15T22:52:52Z,2016-08-03T16:43:35Z,2016-09-25T22:47:25Z,MERGED,True,5,2,1,https://github.com/EvilPudding,Minor optimization,2,[],https://github.com/i3/i3/pull/2301,https://github.com/EvilPudding,3,https://github.com/i3/i3/pull/2301#issuecomment-210804772,"Did not want to create a new pull request for this, but alas, I amended my last commit, so it forced me to, sorry.","Sorry, I don't understand what you mean, I rebased and force pushed into my branch.",True,{}
i3/i3,https://github.com/i3/i3,2301,2016-04-15T22:52:52Z,2016-08-03T16:43:35Z,2016-09-25T22:47:25Z,MERGED,True,5,2,1,https://github.com/EvilPudding,Minor optimization,2,[],https://github.com/i3/i3/pull/2301,https://github.com/Airblader,4,https://github.com/i3/i3/pull/2301#issuecomment-236896728,"Did not want to create a new pull request for this, but alas, I amended my last commit, so it forced me to, sorry.",@stapelberg What's the status for this PR? Anything we are waiting for? Of course it needs a rebase by now.,True,{}
i3/i3,https://github.com/i3/i3,2301,2016-04-15T22:52:52Z,2016-08-03T16:43:35Z,2016-09-25T22:47:25Z,MERGED,True,5,2,1,https://github.com/EvilPudding,Minor optimization,2,[],https://github.com/i3/i3/pull/2301,https://github.com/stapelberg,5,https://github.com/i3/i3/pull/2301#issuecomment-236916363,"Did not want to create a new pull request for this, but alas, I amended my last commit, so it forced me to, sorry.","Nothing from my end, I think this is good-to-go once rebased.",True,{}
i3/i3,https://github.com/i3/i3,2301,2016-04-15T22:52:52Z,2016-08-03T16:43:35Z,2016-09-25T22:47:25Z,MERGED,True,5,2,1,https://github.com/EvilPudding,Minor optimization,2,[],https://github.com/i3/i3/pull/2301,https://github.com/EvilPudding,6,https://github.com/i3/i3/pull/2301#issuecomment-237038604,"Did not want to create a new pull request for this, but alas, I amended my last commit, so it forced me to, sorry.","You guys are still here? I changed like 3 lines, why you didn't just delete this pull request and copy the changes is beyond me.",True,{}
i3/i3,https://github.com/i3/i3,2301,2016-04-15T22:52:52Z,2016-08-03T16:43:35Z,2016-09-25T22:47:25Z,MERGED,True,5,2,1,https://github.com/EvilPudding,Minor optimization,2,[],https://github.com/i3/i3/pull/2301,https://github.com/Airblader,7,https://github.com/i3/i3/pull/2301#issuecomment-237054392,"Did not want to create a new pull request for this, but alas, I amended my last commit, so it forced me to, sorry.","@EvilPudding I can understand the frustration, it's unfortunate that this PR has been forgotten for this long. Both Michael and I have busy day jobs, as do you, I assume, and speaking at least for myself the past few months have been pretty busy.
As for just taking over the changes: when possible, we avoid this, because we want to properly attribute the changes to the author by using their commit. We're also community-driven, which means we expect the community to make changes they care about rather than taking them away from them and doing the work ourselves instead (though we of course also contribute code ourselves). Sometimes we take over orphaned PRs, for example bug fixes, because those are worth adding; but if possible, we want the author of the code to do the work so their work is attributed to them.
Long story short, thanks for updating the change. Unfortunately you did a merge, which caused a merge commit to appear in the history. To keep a clean history we want to avoid this, so you should revert that merge and do a rebase instead (and then force-push the branch).",True,{}
i3/i3,https://github.com/i3/i3,2301,2016-04-15T22:52:52Z,2016-08-03T16:43:35Z,2016-09-25T22:47:25Z,MERGED,True,5,2,1,https://github.com/EvilPudding,Minor optimization,2,[],https://github.com/i3/i3/pull/2301,https://github.com/EvilPudding,8,https://github.com/i3/i3/pull/2301#issuecomment-237220046,"Did not want to create a new pull request for this, but alas, I amended my last commit, so it forced me to, sorry.","I understand all of that, and I'm not frustrated, I'm admired that you care about such a small pull request.
I think I did it right now.",True,{}
i3/i3,https://github.com/i3/i3,2301,2016-04-15T22:52:52Z,2016-08-03T16:43:35Z,2016-09-25T22:47:25Z,MERGED,True,5,2,1,https://github.com/EvilPudding,Minor optimization,2,[],https://github.com/i3/i3/pull/2301,https://github.com/stapelberg,9,https://github.com/i3/i3/pull/2301#issuecomment-237293712,"Did not want to create a new pull request for this, but alas, I amended my last commit, so it forced me to, sorry.",Thanks!,True,{}
i3/i3,https://github.com/i3/i3,2302,2016-04-15T23:21:52Z,2016-04-16T14:03:33Z,2016-04-16T14:03:33Z,CLOSED,False,13,10,3,https://github.com/EvilPudding,Medium optimization,1,[],https://github.com/i3/i3/pull/2302,https://github.com/EvilPudding,1,https://github.com/i3/i3/pull/2302,"Removed all I3_IPC_MAGIC's calls to strlen.
I3_IPC_MAGIC is a constant string literal, so why not store the size
instead of even inside the same function calling strlen so many times?
Also, strlen loops through the string until it finds the NULL char,
but we know I3_IPC_MAGIC is a string literal, so calling sizeof, which
is calculated at compile time, saves a lot of loops.","Removed all I3_IPC_MAGIC's calls to strlen.
I3_IPC_MAGIC is a constant string literal, so why not store the size
instead of even inside the same function calling strlen so many times?
Also, strlen loops through the string until it finds the NULL char,
but we know I3_IPC_MAGIC is a string literal, so calling sizeof, which
is calculated at compile time, saves a lot of loops.",True,{}
i3/i3,https://github.com/i3/i3,2302,2016-04-15T23:21:52Z,2016-04-16T14:03:33Z,2016-04-16T14:03:33Z,CLOSED,False,13,10,3,https://github.com/EvilPudding,Medium optimization,1,[],https://github.com/i3/i3/pull/2302,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/2302#issuecomment-210821824,"Removed all I3_IPC_MAGIC's calls to strlen.
I3_IPC_MAGIC is a constant string literal, so why not store the size
instead of even inside the same function calling strlen so many times?
Also, strlen loops through the string until it finds the NULL char,
but we know I3_IPC_MAGIC is a string literal, so calling sizeof, which
is calculated at compile time, saves a lot of loops.","I’ll close this as well, see #2303 for discussion.",True,{}
i3/i3,https://github.com/i3/i3,2303,2016-04-15T23:59:23Z,2016-04-16T09:13:00Z,2016-04-17T20:09:38Z,CLOSED,False,10,9,1,https://github.com/EvilPudding,Removed pointless strlens.,1,[],https://github.com/i3/i3/pull/2303,https://github.com/EvilPudding,1,https://github.com/i3/i3/pull/2303,"There is no reason to use strlen on a literal...
I must sound like a broken record, but the code is full of this...","There is no reason to use strlen on a literal...
I must sound like a broken record, but the code is full of this...",True,{}
i3/i3,https://github.com/i3/i3,2303,2016-04-15T23:59:23Z,2016-04-16T09:13:00Z,2016-04-17T20:09:38Z,CLOSED,False,10,9,1,https://github.com/EvilPudding,Removed pointless strlens.,1,[],https://github.com/i3/i3/pull/2303,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2303#issuecomment-210738539,"There is no reason to use strlen on a literal...
I must sound like a broken record, but the code is full of this...","I don't know much about compiler optimization, but I would assume that this will be optimized by the compiler anyway. I don't think there's an actual performance hit here.",True,{}
i3/i3,https://github.com/i3/i3,2303,2016-04-15T23:59:23Z,2016-04-16T09:13:00Z,2016-04-17T20:09:38Z,CLOSED,False,10,9,1,https://github.com/EvilPudding,Removed pointless strlens.,1,[],https://github.com/i3/i3/pull/2303,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/2303#issuecomment-210778875,"There is no reason to use strlen on a literal...
I must sound like a broken record, but the code is full of this...","It’s my understanding that strlen on literals gets optimized away, yes. Optimizations of i3-config-wizard specifically are likely a waste of time — that program is run exactly once per i3 user (on average), and it doesn’t take long to run.",True,{}
i3/i3,https://github.com/i3/i3,2303,2016-04-15T23:59:23Z,2016-04-16T09:13:00Z,2016-04-17T20:09:38Z,CLOSED,False,10,9,1,https://github.com/EvilPudding,Removed pointless strlens.,1,[],https://github.com/i3/i3/pull/2303,https://github.com/EvilPudding,4,https://github.com/i3/i3/pull/2303#issuecomment-210803541,"There is no reason to use strlen on a literal...
I must sound like a broken record, but the code is full of this...","One should never rely on compiler optimizations. strlen means loop the string and find the NULL char, no reason not to merge this, when the original code is silly. sizeof is to be used for this very situation.",True,{}
i3/i3,https://github.com/i3/i3,2303,2016-04-15T23:59:23Z,2016-04-16T09:13:00Z,2016-04-17T20:09:38Z,CLOSED,False,10,9,1,https://github.com/EvilPudding,Removed pointless strlens.,1,[],https://github.com/i3/i3/pull/2303,https://github.com/stapelberg,5,https://github.com/i3/i3/pull/2303#issuecomment-210821774,"There is no reason to use strlen on a literal...
I must sound like a broken record, but the code is full of this...","Given that there are subtle differences between strlen and sizeof, and both result in the same assembler code, I prefer to keep using strlen as it seems more generic to me. See also http://stackoverflow.com/a/15000792/712014",True,{}
i3/i3,https://github.com/i3/i3,2303,2016-04-15T23:59:23Z,2016-04-16T09:13:00Z,2016-04-17T20:09:38Z,CLOSED,False,10,9,1,https://github.com/EvilPudding,Removed pointless strlens.,1,[],https://github.com/i3/i3/pull/2303,https://github.com/EvilPudding,6,https://github.com/i3/i3/pull/2303#issuecomment-210825589,"There is no reason to use strlen on a literal...
I must sound like a broken record, but the code is full of this...","Thank you for linking me to a stackoverflow that agrees with me.

So, only if the string spans the entire array (e.g. char s[] = ""stuff""), would using sizeof for a statically defined array return what you want (and be faster as it wouldn't need to loop through to find the null-terminator) (if the last character is a null-terminator, you will need to subtract 1). If it doesn't span the entire array, it won't return what you want.

I was going to give you links that prove my point, but you did it for me.",True,{}
i3/i3,https://github.com/i3/i3,2303,2016-04-15T23:59:23Z,2016-04-16T09:13:00Z,2016-04-17T20:09:38Z,CLOSED,False,10,9,1,https://github.com/EvilPudding,Removed pointless strlens.,1,[],https://github.com/i3/i3/pull/2303,https://github.com/EvilPudding,7,https://github.com/i3/i3/pull/2303#issuecomment-210825929,"There is no reason to use strlen on a literal...
I must sound like a broken record, but the code is full of this...","And by the way, one of the strlens I removed was on a heap string, and was being repeated inside the same loop, which can't ever be optimized by the compiler. The string was actually being looped through several times to find the null char for no actual reason.",True,{}
i3/i3,https://github.com/i3/i3,2303,2016-04-15T23:59:23Z,2016-04-16T09:13:00Z,2016-04-17T20:09:38Z,CLOSED,False,10,9,1,https://github.com/EvilPudding,Removed pointless strlens.,1,[],https://github.com/i3/i3/pull/2303,https://github.com/Airblader,8,https://github.com/i3/i3/pull/2303#issuecomment-210826948,"There is no reason to use strlen on a literal...
I must sound like a broken record, but the code is full of this...","We're still talking improvements that are likely not even really measurable, certainly not ever noticable by the user. Given that alone, I prefer the obvious strlen over the slightly more clunky sizeof -1. Not that I feel strongly about it, though.",True,{}
i3/i3,https://github.com/i3/i3,2303,2016-04-15T23:59:23Z,2016-04-16T09:13:00Z,2016-04-17T20:09:38Z,CLOSED,False,10,9,1,https://github.com/EvilPudding,Removed pointless strlens.,1,[],https://github.com/i3/i3/pull/2303,https://github.com/EvilPudding,9,https://github.com/i3/i3/pull/2303#issuecomment-210827337,"There is no reason to use strlen on a literal...
I must sound like a broken record, but the code is full of this...","And somehow, strlen seems more generic... It's a function call, while sizeof is a compiler operation. Some compilers know that calling the function on a literal is pointless, so they correct you, but the code is still calling string.h's strlen.",True,{}
i3/i3,https://github.com/i3/i3,2303,2016-04-15T23:59:23Z,2016-04-16T09:13:00Z,2016-04-17T20:09:38Z,CLOSED,False,10,9,1,https://github.com/EvilPudding,Removed pointless strlens.,1,[],https://github.com/i3/i3/pull/2303,https://github.com/EvilPudding,10,https://github.com/i3/i3/pull/2303#issuecomment-210846698,"There is no reason to use strlen on a literal...
I must sound like a broken record, but the code is full of this...","@Airblader There were 3 strlens on a heap string on the same loop, which I improved by storing them onto a variable, and if you people want to show any expert saying you should use strlen over sizeof on literals, go ahead, until now, I've seen terrible code, and a link to a stackoverflow that agrees with me. Please do more research on this. Inside a loop, having 3 strlens on the same non constant string is extremely inefficient, but you won't merge the actual optimization, because you prefer telling C to loop string literals to find it's length (that is how any C programmer should read strlen), only to be corrected by the compiler.",True,{}
i3/i3,https://github.com/i3/i3,2303,2016-04-15T23:59:23Z,2016-04-16T09:13:00Z,2016-04-17T20:09:38Z,CLOSED,False,10,9,1,https://github.com/EvilPudding,Removed pointless strlens.,1,[],https://github.com/i3/i3/pull/2303,https://github.com/Airblader,11,https://github.com/i3/i3/pull/2303#issuecomment-210847260,"There is no reason to use strlen on a literal...
I must sound like a broken record, but the code is full of this...","First of all, you should calm down a little.
I'm not even arguing your point that sizeof is more efficient. I'm arguing the fact that it's relevant in any way. Do you have any reason to believe this is a bottleneck? In the config wizard? Because I don't think so. And considering that, I, personally, just find strlen to be nicer to read. I really don't care about a millisecond of execution time in a wizard that runs once in the entire lifetime of the machine. But as I also said, I don't fight this improvement either. I'm mostly indifferent about it.

only to be corrected by the compiler.

If we should avoid being corrected by the compiler on all costs, we should be writing very different code. I think it's perfectly fine to let the compiler do its job, which includes optimizing the code. Code that we want to write for humans to be readable and understandable.
Of course we don't want to introduce bottlenecks for the sake of readability either, but this does not strike me as anything relevant to the performance of the application.",True,{}
i3/i3,https://github.com/i3/i3,2303,2016-04-15T23:59:23Z,2016-04-16T09:13:00Z,2016-04-17T20:09:38Z,CLOSED,False,10,9,1,https://github.com/EvilPudding,Removed pointless strlens.,1,[],https://github.com/i3/i3/pull/2303,https://github.com/EvilPudding,12,https://github.com/i3/i3/pull/2303#issuecomment-210848824,"There is no reason to use strlen on a literal...
I must sound like a broken record, but the code is full of this...","First of all, I am calm.
It's not the job of the compiler to optimize strlen into sizeof-1, that is a compiler choice, and if you want good C code, you should not just expect the compiler to do that optimization, it is not part of the C standard.
I did not say we should avoid being corrected by the compiler at all costs, changing strlen to sizeof is not a huge cost. Second of all, when you're coding, you have to keep in mind if any function you use is going to have loops inside it, having strlen meaning something for some cases and another for other cases is readability problem. When I was reading the code, I didn't even know I3_IPC_MAGIC was a string literal, I had to go to the definition, all I saw was a function that calls a loop being used multiple times on the same function. Whereas if I had what I introduced, I3_IPC_MAGIC_LEN, I would assume it was correct, because even if it wasn't a string literal, I would know it's being stored in an effective way. To conclude, I do not agree having strlen mean different things in different parts of the code is readable.",True,{}
i3/i3,https://github.com/i3/i3,2303,2016-04-15T23:59:23Z,2016-04-16T09:13:00Z,2016-04-17T20:09:38Z,CLOSED,False,10,9,1,https://github.com/EvilPudding,Removed pointless strlens.,1,[],https://github.com/i3/i3/pull/2303,https://github.com/EvilPudding,13,https://github.com/i3/i3/pull/2303#issuecomment-210921149,"There is no reason to use strlen on a literal...
I must sound like a broken record, but the code is full of this...","Sorry for the way I spoke, I should not have called the code terrible, it's just I'm used to looking at strlen as a generally bad practice, and this doesn't even change much.",True,{}
i3/i3,https://github.com/i3/i3,2303,2016-04-15T23:59:23Z,2016-04-16T09:13:00Z,2016-04-17T20:09:38Z,CLOSED,False,10,9,1,https://github.com/EvilPudding,Removed pointless strlens.,1,[],https://github.com/i3/i3/pull/2303,https://github.com/Airblader,14,https://github.com/i3/i3/pull/2303#issuecomment-211077443,"There is no reason to use strlen on a literal...
I must sound like a broken record, but the code is full of this...","it is not part of the C standard.

I generally see your point, but I think compilers do quite a lot of optimizations that are ""not in the C standard"" that people (rightfully) rely on. Nobody compiles software these days without optimizations and my personal view is that it's totally fine to rely on that in code like this which is not performance critical whatsoever. But again, I do understand where you're coming from.

To conclude, I do not agree having strlen mean different things in different parts of the code is readable.

And it doesn't, so I don't understand this point. It always means ""the length of the string"", whether or not that is constant. In that regard, using strlen actually makes more sense to me, as it'd be a consistent way to achieve this rather than introducing a separate way that only works for specific strings.
As for readability, we could have a ""compromise"" by introducing a macro like
#define STRLEN_CONST(str) (sizeof(str) - 1)

I'd be OK with that, but ultimately @stapelberg decides whether we want any of this or not.",True,{}
i3/i3,https://github.com/i3/i3,2303,2016-04-15T23:59:23Z,2016-04-16T09:13:00Z,2016-04-17T20:09:38Z,CLOSED,False,10,9,1,https://github.com/EvilPudding,Removed pointless strlens.,1,[],https://github.com/i3/i3/pull/2303,https://github.com/EvilPudding,15,https://github.com/i3/i3/pull/2303#issuecomment-211104105,"There is no reason to use strlen on a literal...
I must sound like a broken record, but the code is full of this...","@Airblader Just ignore my pull request, I love i3, and the work you guys do here.
This whole discussion is so minor it's really not worth your time, I mean it.
I've been a real prick complaining about it, just because it triggered my OCD, when all it amounts to is aesthetics basically, which should be completely up to you guys.
Sorry again, keep up the great work!",True,{}
i3/i3,https://github.com/i3/i3,2303,2016-04-15T23:59:23Z,2016-04-16T09:13:00Z,2016-04-17T20:09:38Z,CLOSED,False,10,9,1,https://github.com/EvilPudding,Removed pointless strlens.,1,[],https://github.com/i3/i3/pull/2303,https://github.com/Airblader,16,https://github.com/i3/i3/pull/2303#issuecomment-211105204,"There is no reason to use strlen on a literal...
I must sound like a broken record, but the code is full of this...","@EvilPudding No need to apologize for anything. Even small contributions are contributions and we generally value every single one (and don't mind discussing them). It did sort of go awry here and that's unfortunate, but sometimes opinions differ. Please don't let it stop you from further contributions and thanks for both the time you put in and your words. :)",True,{}
i3/i3,https://github.com/i3/i3,2304,2016-04-16T11:04:32Z,2016-08-20T13:02:20Z,2016-09-12T17:32:45Z,CLOSED,False,1864,906,111,https://github.com/Chr1stoph,I3config,91,[],https://github.com/i3/i3/pull/2304,https://github.com/Chr1stoph,1,https://github.com/i3/i3/pull/2304,"#2141
Changes are related to master.
Generation of the i3-config file is not stopped in case a key symbol could not be resolved. The relevant line is copied with the unresolved number but appended with a comment. When i3 checks the bindings i3-nagbar is triggered in case of an unresolved key mapping.","#2141
Changes are related to master.
Generation of the i3-config file is not stopped in case a key symbol could not be resolved. The relevant line is copied with the unresolved number but appended with a comment. When i3 checks the bindings i3-nagbar is triggered in case of an unresolved key mapping.",True,{}
i3/i3,https://github.com/i3/i3,2304,2016-04-16T11:04:32Z,2016-08-20T13:02:20Z,2016-09-12T17:32:45Z,CLOSED,False,1864,906,111,https://github.com/Chr1stoph,I3config,91,[],https://github.com/i3/i3/pull/2304,https://github.com/Chr1stoph,2,https://github.com/i3/i3/pull/2304#issuecomment-211076145,"#2141
Changes are related to master.
Generation of the i3-config file is not stopped in case a key symbol could not be resolved. The relevant line is copied with the unresolved number but appended with a comment. When i3 checks the bindings i3-nagbar is triggered in case of an unresolved key mapping.","Ok, I think I have to learn https://travis-ci.org/ about the pull request work flow.",True,{}
i3/i3,https://github.com/i3/i3,2304,2016-04-16T11:04:32Z,2016-08-20T13:02:20Z,2016-09-12T17:32:45Z,CLOSED,False,1864,906,111,https://github.com/Chr1stoph,I3config,91,[],https://github.com/i3/i3/pull/2304,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2304#issuecomment-211077183,"#2141
Changes are related to master.
Generation of the i3-config file is not stopped in case a key symbol could not be resolved. The relevant line is copied with the unresolved number but appended with a comment. When i3 checks the bindings i3-nagbar is triggered in case of an unresolved key mapping.","No, you don't really need to understand Travis (just to save you that work). :) Just use clang-format to format the code (or do it by hand, it's really only about placement of braces as far as I can tell). To make changes to the pull request, simply amend to the commit and force-push the branch.",True,{}
i3/i3,https://github.com/i3/i3,2304,2016-04-16T11:04:32Z,2016-08-20T13:02:20Z,2016-09-12T17:32:45Z,CLOSED,False,1864,906,111,https://github.com/Chr1stoph,I3config,91,[],https://github.com/i3/i3/pull/2304,https://github.com/Chr1stoph,4,https://github.com/i3/i3/pull/2304#issuecomment-212036689,"#2141
Changes are related to master.
Generation of the i3-config file is not stopped in case a key symbol could not be resolved. The relevant line is copied with the unresolved number but appended with a comment. When i3 checks the bindings i3-nagbar is triggered in case of an unresolved key mapping.",I have found clang-format on my system. Do you have a recommended configuration which I can apply using the -style option? At least IndentWidth and ColumnLimit do not match to the defaults I have here. I think so because clang format with my local defaults has more remarks on different parts of the code.,True,{}
i3/i3,https://github.com/i3/i3,2304,2016-04-16T11:04:32Z,2016-08-20T13:02:20Z,2016-09-12T17:32:45Z,CLOSED,False,1864,906,111,https://github.com/Chr1stoph,I3config,91,[],https://github.com/i3/i3/pull/2304,https://github.com/Airblader,5,https://github.com/i3/i3/pull/2304#issuecomment-212055161,"#2141
Changes are related to master.
Generation of the i3-config file is not stopped in case a key symbol could not be resolved. The relevant line is copied with the unresolved number but appended with a comment. When i3 checks the bindings i3-nagbar is triggered in case of an unresolved key mapping.","@Chr1stoph You'll need to use clang-format from clang35, specifically. Newer versions won't work right, unfortunately. Having that, just cd into the repository and use
clang-format-3.5 -i $(find . -name ""*.[ch]"" | tr '\n' ' ')

We have our own style settings as part of the repository, so if executed from the correct path, those will be used.",True,{}
i3/i3,https://github.com/i3/i3,2304,2016-04-16T11:04:32Z,2016-08-20T13:02:20Z,2016-09-12T17:32:45Z,CLOSED,False,1864,906,111,https://github.com/Chr1stoph,I3config,91,[],https://github.com/i3/i3/pull/2304,https://github.com/Chr1stoph,6,https://github.com/i3/i3/pull/2304#issuecomment-213914611,"#2141
Changes are related to master.
Generation of the i3-config file is not stopped in case a key symbol could not be resolved. The relevant line is copied with the unresolved number but appended with a comment. When i3 checks the bindings i3-nagbar is triggered in case of an unresolved key mapping.","@Airblader, please excuse me that it took so long to apply the change. I hope Travis is happy now.",True,{}
i3/i3,https://github.com/i3/i3,2304,2016-04-16T11:04:32Z,2016-08-20T13:02:20Z,2016-09-12T17:32:45Z,CLOSED,False,1864,906,111,https://github.com/Chr1stoph,I3config,91,[],https://github.com/i3/i3/pull/2304,https://github.com/Airblader,7,https://github.com/i3/i3/pull/2304#issuecomment-224035922,"#2141
Changes are related to master.
Generation of the i3-config file is not stopped in case a key symbol could not be resolved. The relevant line is copied with the unresolved number but appended with a comment. When i3 checks the bindings i3-nagbar is triggered in case of an unresolved key mapping.",@stapelberg Ping,True,{}
i3/i3,https://github.com/i3/i3,2304,2016-04-16T11:04:32Z,2016-08-20T13:02:20Z,2016-09-12T17:32:45Z,CLOSED,False,1864,906,111,https://github.com/Chr1stoph,I3config,91,[],https://github.com/i3/i3/pull/2304,https://github.com/stapelberg,8,https://github.com/i3/i3/pull/2304#issuecomment-226256358,"#2141
Changes are related to master.
Generation of the i3-config file is not stopped in case a key symbol could not be resolved. The relevant line is copied with the unresolved number but appended with a comment. When i3 checks the bindings i3-nagbar is triggered in case of an unresolved key mapping.",Please also squash your commits and give them a proper title/description.,True,{}
i3/i3,https://github.com/i3/i3,2304,2016-04-16T11:04:32Z,2016-08-20T13:02:20Z,2016-09-12T17:32:45Z,CLOSED,False,1864,906,111,https://github.com/Chr1stoph,I3config,91,[],https://github.com/i3/i3/pull/2304,https://github.com/Chr1stoph,9,https://github.com/i3/i3/pull/2304#issuecomment-226988029,"#2141
Changes are related to master.
Generation of the i3-config file is not stopped in case a key symbol could not be resolved. The relevant line is copied with the unresolved number but appended with a comment. When i3 checks the bindings i3-nagbar is triggered in case of an unresolved key mapping.",@stapelberg I have no idea about the travis result. If I am not wrong the details show the travis output but no claims with respect to the file main.c. Here clang-format35 -style=file on main.c seems to be ok. What shall I do?,True,{}
i3/i3,https://github.com/i3/i3,2304,2016-04-16T11:04:32Z,2016-08-20T13:02:20Z,2016-09-12T17:32:45Z,CLOSED,False,1864,906,111,https://github.com/Chr1stoph,I3config,91,[],https://github.com/i3/i3/pull/2304,https://github.com/stapelberg,10,https://github.com/i3/i3/pull/2304#issuecomment-227667848,"#2141
Changes are related to master.
Generation of the i3-config file is not stopped in case a key symbol could not be resolved. The relevant line is copied with the unresolved number but appended with a comment. When i3 checks the bindings i3-nagbar is triggered in case of an unresolved key mapping.","@stapelberg I have no idea about the travis result. If I am not wrong the details show the travis output but no claims with respect to the file main.c. Here clang-format35 -style=file on main.c seems to be ok. What shall I do?

The issue is not formatting, but the fact that travis can’t find the base image (and new base images cannot be pushed from pull requests). We’ve fixed this issue a while ago in commit 42f5a6c.
However, your pull request by now is so old that it doesn’t include that commit :).
Because of this, and because it’s generally good practice (to avoid merge conflicts), the right solution for this problem is to rebase your work onto the current “next” branch. See https://git-scm.com/book/en/v2/Git-Branching-Rebasing for more details.",True,{}
i3/i3,https://github.com/i3/i3,2304,2016-04-16T11:04:32Z,2016-08-20T13:02:20Z,2016-09-12T17:32:45Z,CLOSED,False,1864,906,111,https://github.com/Chr1stoph,I3config,91,[],https://github.com/i3/i3/pull/2304,https://github.com/Chr1stoph,11,https://github.com/i3/i3/pull/2304#issuecomment-227822690,"#2141
Changes are related to master.
Generation of the i3-config file is not stopped in case a key symbol could not be resolved. The relevant line is copied with the unresolved number but appended with a comment. When i3 checks the bindings i3-nagbar is triggered in case of an unresolved key mapping.","On Wed, Jun 22, 2016 at 12:44:47AM -0700, Michael Stapelberg wrote:


@stapelberg I have no idea about the travis result. If I am not wrong the details show the travis output but no claims with respect to the file main.c. Here clang-format35 -style=file on main.c seems to be ok. What shall I do?

The issue is not formatting, but the fact that travis can’t find the base image (and new base images cannot be pushed from pull requests). We’ve fixed this issue a while ago in commit 42f5a6c.
However, your pull request by now is so old that it doesn’t include that commit :).
Because of this, and because it’s generally good practice (to avoid merge conflicts), the right solution for this problem is to rebase your work onto the current “next” branch. See https://git-scm.com/book/en/v2/Git-Branching-Rebasing for more details.

Ok, https://guides.github.com/introduction/flow/ and others stated to
merge from master. I am not sure if it is possible to rebase
to the ""next"" branch using the browser. If not I will have to
try the quite new git command line tools on FreeBSD.
Or is it possible to delete the branch and create
a correct one?


You are receiving this because you were mentioned.
Reply to this email directly or view it on GitHub:
#2304 (comment)",True,{}
i3/i3,https://github.com/i3/i3,2304,2016-04-16T11:04:32Z,2016-08-20T13:02:20Z,2016-09-12T17:32:45Z,CLOSED,False,1864,906,111,https://github.com/Chr1stoph,I3config,91,[],https://github.com/i3/i3/pull/2304,https://github.com/Airblader,12,https://github.com/i3/i3/pull/2304#issuecomment-227824225,"#2141
Changes are related to master.
Generation of the i3-config file is not stopped in case a key symbol could not be resolved. The relevant line is copied with the unresolved number but appended with a comment. When i3 checks the bindings i3-nagbar is triggered in case of an unresolved key mapping.","@Chr1stoph All you have to do is
# unless already done, add the upstream i3 remote to fetch its current state
git remote add vanilla git@github.com:i3/i3.git
git fetch vanilla

# now rebase next onto your branch
# NOTE: this might cause conflicts which you need to resolve (see instructions by git)
git rebase vanilla/next

# force-push the changes to update the pull request
git push --force",True,{}
i3/i3,https://github.com/i3/i3,2304,2016-04-16T11:04:32Z,2016-08-20T13:02:20Z,2016-09-12T17:32:45Z,CLOSED,False,1864,906,111,https://github.com/Chr1stoph,I3config,91,[],https://github.com/i3/i3/pull/2304,https://github.com/Chr1stoph,13,https://github.com/i3/i3/pull/2304#issuecomment-227841501,"#2141
Changes are related to master.
Generation of the i3-config file is not stopped in case a key symbol could not be resolved. The relevant line is copied with the unresolved number but appended with a comment. When i3 checks the bindings i3-nagbar is triggered in case of an unresolved key mapping.","On Wed, Jun 22, 2016 at 10:52:44AM -0700, Ingo B�rk wrote:

@Chr1stoph All you have to do is
# unless already done, add the upstream i3 remote to fetch its current state
git remote add vanilla git@github.com:i3/i3.git
git fetch vanilla

# now rebase next onto your branch
# NOTE: this might cause conflicts which you need to resolve (see instructions by git)
git rebase vanilla/next

# force-push the changes to update the pull request
git push --force

@Airblader I will try
http://www.freshports.org/devel/git-lite/
I would be happy not to need the nice web interface anymore.

You are receiving this because you were mentioned.
Reply to this email directly or view it on GitHub:
#2304 (comment)",True,{}
i3/i3,https://github.com/i3/i3,2304,2016-04-16T11:04:32Z,2016-08-20T13:02:20Z,2016-09-12T17:32:45Z,CLOSED,False,1864,906,111,https://github.com/Chr1stoph,I3config,91,[],https://github.com/i3/i3/pull/2304,https://github.com/Chr1stoph,14,https://github.com/i3/i3/pull/2304#issuecomment-227858709,"#2141
Changes are related to master.
Generation of the i3-config file is not stopped in case a key symbol could not be resolved. The relevant line is copied with the unresolved number but appended with a comment. When i3 checks the bindings i3-nagbar is triggered in case of an unresolved key mapping.","On Wed, Jun 22, 2016 at 08:51:01PM +0200, Christoph Brinkhaus wrote:

On Wed, Jun 22, 2016 at 10:52:44AM -0700, Ingo B�rk wrote:

@Chr1stoph All you have to do is
# unless already done, add the upstream i3 remote to fetch its current state
git remote add vanilla git@github.com:i3/i3.git
git fetch vanilla

# now rebase next onto your branch
# NOTE: this might cause conflicts which you need to resolve (see instructions by git)
git rebase vanilla/next

# force-push the changes to update the pull request
git push --force

@Airblader I will try
http://www.freshports.org/devel/git-lite/
I would be happy not to need the nice web interface anymore.


Currently I hang here:
$ git config --list
user.name=Chr1stoph
user.email=c.brinkhaus@t-online.de
core.repositoryformatversion=0
core.filemode=true
core.bare=false
core.logallrefupdates=true
remote.vanilla.url=git@github.com:i3/i3.git
remote.vanilla.fetch=+refs/heads/:refs/remotes/vanilla/
$ git fetch vanilla
Permission denied (publickey).
fatal: Could not read from remote repository.
Please make sure you have the correct access rights
and the repository exists.
I will read https://git-scm.com/.
Is think no need to link somehow to
https://github.com/Chr1stoph/i3/tree/i3config ?



You are receiving this because you were mentioned.
Reply to this email directly or view it on GitHub:
#2304 (comment)",True,{}
i3/i3,https://github.com/i3/i3,2304,2016-04-16T11:04:32Z,2016-08-20T13:02:20Z,2016-09-12T17:32:45Z,CLOSED,False,1864,906,111,https://github.com/Chr1stoph,I3config,91,[],https://github.com/i3/i3/pull/2304,https://github.com/Airblader,15,https://github.com/i3/i3/pull/2304#issuecomment-227859542,"#2141
Changes are related to master.
Generation of the i3-config file is not stopped in case a key symbol could not be resolved. The relevant line is copied with the unresolved number but appended with a comment. When i3 checks the bindings i3-nagbar is triggered in case of an unresolved key mapping.","@Chr1stoph Using git@github.com:i3/i3.git will only work if you use an SSH key with git that is associated to your Github account. If you don't, don't worry, just do
git remote remove vanilla
git remote add vanilla https://github.com/i3/i3.git

# and continue as above",True,{}
i3/i3,https://github.com/i3/i3,2304,2016-04-16T11:04:32Z,2016-08-20T13:02:20Z,2016-09-12T17:32:45Z,CLOSED,False,1864,906,111,https://github.com/Chr1stoph,I3config,91,[],https://github.com/i3/i3/pull/2304,https://github.com/Chr1stoph,16,https://github.com/i3/i3/pull/2304#issuecomment-228102832,"#2141
Changes are related to master.
Generation of the i3-config file is not stopped in case a key symbol could not be resolved. The relevant line is copied with the unresolved number but appended with a comment. When i3 checks the bindings i3-nagbar is triggered in case of an unresolved key mapping.","On Wed, Jun 22, 2016 at 01:01:23PM -0700, Ingo B�rk wrote:

@Chr1stoph Using git@github.com:i3/i3.git will only work if you use an SSH key with git that is associated to your Github account. If you don't, don't worry, just do
git remote remove vanilla
git remote add vanilla https://github.com/i3/i3.git
@Airblader This worked well. Now I have a directory .git with the
entries FETCH_HEAD, HEAD, branches, config, description,
hooks, info, logs, objects, refs


There is no code, there are references or so to many i3 versions.

and continue as above
Now the next output is $ git rebase vanilla/next
fatal: Needed a single revision


Currently I do not understand where the reference to the
pull is which should be on
https://github.com/Chr1stoph/i3/tree/i3config
Without this reference I have no idea how git should find
out what to rebase. My guess is that there must be either
a pointer to the address above. Or I have to synchronize
the folder where I have launched the git commands with
the address above, may be by git-clone or git-fetch.
I think I miss something very basic. The kind of mistake
one does only once...


You are receiving this because you were mentioned.
Reply to this email directly or view it on GitHub:
#2304 (comment)",True,{}
i3/i3,https://github.com/i3/i3,2304,2016-04-16T11:04:32Z,2016-08-20T13:02:20Z,2016-09-12T17:32:45Z,CLOSED,False,1864,906,111,https://github.com/Chr1stoph,I3config,91,[],https://github.com/i3/i3/pull/2304,https://github.com/Airblader,17,https://github.com/i3/i3/pull/2304#issuecomment-228152793,"#2141
Changes are related to master.
Generation of the i3-config file is not stopped in case a key symbol could not be resolved. The relevant line is copied with the unresolved number but appended with a comment. When i3 checks the bindings i3-nagbar is triggered in case of an unresolved key mapping.","Sorry, I assume you were working in a local checkout of your own repository. If that's not the case, let's just start ""fresh"".
# Or change to anything else, since this one will be wiped upon reboot.
cd /tmp

# let's clone your own repository and check out the feature branch
git clone https://github.com/Chr1stoph/i3.git
git fetch --all
git checkout i3config

# now we do what we wanted to do above
git remote add vanilla https://github.com/i3/i3.git
git fetch vanilla
git rebase vanilla/next
git push --force",True,{}
i3/i3,https://github.com/i3/i3,2304,2016-04-16T11:04:32Z,2016-08-20T13:02:20Z,2016-09-12T17:32:45Z,CLOSED,False,1864,906,111,https://github.com/Chr1stoph,I3config,91,[],https://github.com/i3/i3/pull/2304,https://github.com/Chr1stoph,18,https://github.com/i3/i3/pull/2304#issuecomment-229727453,"#2141
Changes are related to master.
Generation of the i3-config file is not stopped in case a key symbol could not be resolved. The relevant line is copied with the unresolved number but appended with a comment. When i3 checks the bindings i3-nagbar is triggered in case of an unresolved key mapping.","On Thu, Jun 23, 2016 at 12:07:30PM -0700, Ingo B�rk wrote:

Sorry, I assume you were working in a local checkout of your own repository. If that's not the case, let's just start ""fresh"".
# Or change to anything else, since this one will be wiped upon reboot.
cd /tmp

# let's clone your own repository and check out the feature branch
git clone https://github.com/Chr1stoph/i3.git
@Airblader to took me lots of trials to find out that
I need to do a simple cd i3 here. The good thing is that I
learned somehow and start to use git for my local things;-).
git fetch --all
git checkout i3config

# now we do what we wanted to do above
git remote add vanilla https://github.com/i3/i3.git
git fetch vanilla
git rebase vanilla/next
This gives some errors as expected. But I am not sure how to
fix everything. The missing patch appears in .git/rebase-apply/patch.
The first example is the user guide where the diff is


diff --git a/docs/userguide b/docs/userguide
index
13dae4fe087f5798ae05cc49cf4ed6fce60abba1..b077eb66d42e49cc9a70361c615be4a9691e9b10
100644
--- a/docs/userguide
+++ b/docs/userguide
@@ -2134,10 +2134,10 @@ and the following placeholders which will be
replaced:
+%title+::
The X11 window title (_NET_WM_NAME or WM_NAME as fallback).
-+%class+:
++%class+::
The X11 window class (second part of WM_CLASS). This corresponds to
the
+class+ criterion, see <<command_criteria>>.
-+%instance+:
++%instance+::
The X11 window instance (first part of WM_CLASS). This corresponds to
the
+instance+ criterion, see <<command_criteria>>.
The only line in i3/docs/userguide where the word ""placeholder""
appears is in line 2217. This is likely difficult to patch because of
the huge offset. I do not understand where the diff comes from.
I think I can download the userguide out of the next branch
and try to make the version of my pullrequest look less different.
Will that cause the patch file be different?
What happens if i simply take the next version and replace
the version of the pullrequest with that one?
Later there are also some patches of *.c files which I need to
handle as well. I have not yet read the section about merge in
https://git-scm.com/book. May be this gives answers, too.

git push --force

---
You are receiving this because you were mentioned.
Reply to this email directly or view it on GitHub:
https://github.com/i3/i3/pull/2304#issuecomment-228152793",True,{}
i3/i3,https://github.com/i3/i3,2304,2016-04-16T11:04:32Z,2016-08-20T13:02:20Z,2016-09-12T17:32:45Z,CLOSED,False,1864,906,111,https://github.com/Chr1stoph,I3config,91,[],https://github.com/i3/i3/pull/2304,https://github.com/Airblader,19,https://github.com/i3/i3/pull/2304#issuecomment-229789050,"#2141
Changes are related to master.
Generation of the i3-config file is not stopped in case a key symbol could not be resolved. The relevant line is copied with the unresolved number but appended with a comment. When i3 checks the bindings i3-nagbar is triggered in case of an unresolved key mapping.","The missing patch appears in .git/rebase-apply/patch.

On a general note, you don't need to worry about the .git folder at all. It's just for git-internal things. :-)
When you executed the rebase command and run into trouble, you now need to use git mergetool. For that you should configure it with something decent (though I personally use vimdiff for the mergetool) and you should definitely read up on how to merge changes first. This is the part where I can't just write down commands – you now have to combine changes correctly. :-)
You can perhaps also try rebasing out in a tutorial like this one first (or how to use git in general). It's a pretty nice thing to do!",True,{}
i3/i3,https://github.com/i3/i3,2304,2016-04-16T11:04:32Z,2016-08-20T13:02:20Z,2016-09-12T17:32:45Z,CLOSED,False,1864,906,111,https://github.com/Chr1stoph,I3config,91,[],https://github.com/i3/i3/pull/2304,https://github.com/Chr1stoph,20,https://github.com/i3/i3/pull/2304#issuecomment-229981402,"#2141
Changes are related to master.
Generation of the i3-config file is not stopped in case a key symbol could not be resolved. The relevant line is copied with the unresolved number but appended with a comment. When i3 checks the bindings i3-nagbar is triggered in case of an unresolved key mapping.","On Thu, Jun 30, 2016 at 02:07:15PM -0700, Ingo Bürk wrote:


The missing patch appears in .git/rebase-apply/patch.
@Airblader
On a general note, you don't need to worry about the .git folder at all. It's just for git-internal things. :-)
The message mentioned that file. It is good to know that I do not have
to care about its internals.

When you executed the rebase command and run into trouble, you now need to use git mergetool. For that you should configure it with something decent (though I personally use vimdiff for the mergetool) and you should definitely read up on how to merge changes first. This is the part where I can't just write down commands – you now have to combine changes correctly. :-)
To be able to use vimdiff is a good news.
You can perhaps also try rebasing out in a tutorial like this one first (or how to use git in general). It's a pretty nice thing to do!
I will check the link. Thank you for your patiance.

You are receiving this because you were mentioned.
Reply to this email directly or view it on GitHub:
#2304 (comment)",True,{}
i3/i3,https://github.com/i3/i3,2304,2016-04-16T11:04:32Z,2016-08-20T13:02:20Z,2016-09-12T17:32:45Z,CLOSED,False,1864,906,111,https://github.com/Chr1stoph,I3config,91,[],https://github.com/i3/i3/pull/2304,https://github.com/Chr1stoph,21,https://github.com/i3/i3/pull/2304#issuecomment-230560399,"#2141
Changes are related to master.
Generation of the i3-config file is not stopped in case a key symbol could not be resolved. The relevant line is copied with the unresolved number but appended with a comment. When i3 checks the bindings i3-nagbar is triggered in case of an unresolved key mapping.","On Fri, Jul 01, 2016 at 05:48:57PM +0200, Christoph Brinkhaus wrote:

On Thu, Jun 30, 2016 at 02:07:15PM -0700, Ingo Bürk wrote:


The missing patch appears in .git/rebase-apply/patch.
@Airblader
On a general note, you don't need to worry about the .git folder at all. It's just for git-internal things. :-)
The message mentioned that file. It is good to know that I do not have
to care about its internals.

When you executed the rebase command and run into trouble, you now need to use git mergetool. For that you should configure it with something decent (though I personally use vimdiff for the mergetool) and you should definitely read up on how to merge changes first. This is the part where I can't just write down commands – you now have to combine changes correctly. :-)
To be able to use vimdiff is a good news.
You can perhaps also try rebasing out in a tutorial like this one first (or how to use git in general). It's a pretty nice thing to do!
I will check the link. Thank you for your patiance.

@Airblader First I did some tests with rebase on a local folder to get
used to the procedure. Strange has be that src/bindings.c as the only
file in the test repository rebased without interaction. But it is
clearly useful to get an idea how things are shown in vimdiff launched
by git mergetool.

Now everything might have been successfull. I have to check if the
changes are in, if it can be build and if everything finally works.",True,{}
i3/i3,https://github.com/i3/i3,2304,2016-04-16T11:04:32Z,2016-08-20T13:02:20Z,2016-09-12T17:32:45Z,CLOSED,False,1864,906,111,https://github.com/Chr1stoph,I3config,91,[],https://github.com/i3/i3/pull/2304,https://github.com/Chr1stoph,22,https://github.com/i3/i3/pull/2304#issuecomment-230862345,"#2141
Changes are related to master.
Generation of the i3-config file is not stopped in case a key symbol could not be resolved. The relevant line is copied with the unresolved number but appended with a comment. When i3 checks the bindings i3-nagbar is triggered in case of an unresolved key mapping.","On Tue, Jul 05, 2016 at 08:22:28PM +0200, Christoph Brinkhaus wrote:

On Fri, Jul 01, 2016 at 05:48:57PM +0200, Christoph Brinkhaus wrote:

On Thu, Jun 30, 2016 at 02:07:15PM -0700, Ingo Bürk wrote:


The missing patch appears in .git/rebase-apply/patch.
@Airblader
On a general note, you don't need to worry about the .git folder at all. It's just for git-internal things. :-)
The message mentioned that file. It is good to know that I do not have
to care about its internals.

When you executed the rebase command and run into trouble, you now need to use git mergetool. For that you should configure it with something decent (though I personally use vimdiff for the mergetool) and you should definitely read up on how to merge changes first. This is the part where I can't just write down commands – you now have to combine changes correctly. :-)
To be able to use vimdiff is a good news.
You can perhaps also try rebasing out in a tutorial like this one first (or how to use git in general). It's a pretty nice thing to do!
I will check the link. Thank you for your patiance.

@Airblader First I did some tests with rebase on a local folder to get
used to the procedure. Strange has be that src/bindings.c as the only
file in the test repository rebased without interaction. But it is
clearly useful to get an idea how things are shown in vimdiff launched
by git mergetool.

Now everything might have been successfull. I have to check if the
changes are in, if it can be build and if everything finally works.

@Airblader Now there is the next problem. in i3config
src/config_parser.c includes xcb/xcb_xrm.h. There are also other lines
where xcb_xrm appears. In the original sorces of FreeBSD xcb_xrm does
not appear anywhere.
Of course it does not compile because of the missing header file.
But I guess src/config_parser.c is corrupted somehow.
When I check src/config_parser.c using the browser xcb_xrm only
appears in i3config. Not in next and not in master. Do you have any
idea what I could have done wrong? And how to fix it?",True,{}
i3/i3,https://github.com/i3/i3,2304,2016-04-16T11:04:32Z,2016-08-20T13:02:20Z,2016-09-12T17:32:45Z,CLOSED,False,1864,906,111,https://github.com/Chr1stoph,I3config,91,[],https://github.com/i3/i3/pull/2304,https://github.com/Airblader,23,https://github.com/i3/i3/pull/2304#issuecomment-230865552,"#2141
Changes are related to master.
Generation of the i3-config file is not stopped in case a key symbol could not be resolved. The relevant line is copied with the unresolved number but appended with a comment. When i3 checks the bindings i3-nagbar is triggered in case of an unresolved key mapping.","Now everything might have been successfull.

No, the PR is definitely broken right now. It contains 90 commits and over 100 changed files, which is definitely not correct.

In the original sorces of FreeBSD xcb_xrm does
not appear anywhere.

What FreeBSD sources and why are you looking at anything from FreeBSD? There is only one source code against which you should provide a PR and that's the repository hosted here on Github. xcb_xrm being in the code is definitely correct.
Sorry, I'm really not sure what you're doing. You fork the Github repository, clone your own fork, make your changes against it on some branch, push that branch and create the PR. If things changed here, you add it as a separate remote, rebase the branch and resolve conflicts. That's really all that has to happen, but you must've done something else.",True,{}
i3/i3,https://github.com/i3/i3,2304,2016-04-16T11:04:32Z,2016-08-20T13:02:20Z,2016-09-12T17:32:45Z,CLOSED,False,1864,906,111,https://github.com/Chr1stoph,I3config,91,[],https://github.com/i3/i3/pull/2304,https://github.com/Chr1stoph,24,https://github.com/i3/i3/pull/2304#issuecomment-230875219,"#2141
Changes are related to master.
Generation of the i3-config file is not stopped in case a key symbol could not be resolved. The relevant line is copied with the unresolved number but appended with a comment. When i3 checks the bindings i3-nagbar is triggered in case of an unresolved key mapping.","On Wed, Jul 06, 2016 at 11:40:31AM -0700, Ingo B�rk wrote:


Now everything might have been successfull.

No, the PR is definitely broken right now. It contains 90 commits and over 100 changed files, which is definitely not correct.

In the original sorces of FreeBSD xcb_xrm does
not appear anywhere.

What FreeBSD sources and why are you looking at anything from FreeBSD?
Because it runs on FreeBSD without special patches or so. Therefore I
think it should work again when I compile it under FreeBSD. Of course
the repository is github.
There is only one source code against which you should provide a PR and that's the repository hosted here on Github. xcb_xrm being in the code is definitely correct.

Ok, xcb_xrm appears in
https://github.com/i3/i3/tree/next/src/config-parser.c
But I can not find the file xcb/xcb_xrm.h.
I guess
https://github.com/Chr1stoph/i3/blob/next/src/config_parser.c
is from the time when I started the pull request or so.

Sorry, I'm really not sure what you're doing. You fork the Github repository, clone your own fork, make your changes against it on some branch, push that branch and create the PR. If things changed here, you add it as a separate remote, rebase the branch and resolve conflicts. That's really all that has to happen, but you must've done something else.
It is strange, especially since I changed just two files.",True,{}
i3/i3,https://github.com/i3/i3,2304,2016-04-16T11:04:32Z,2016-08-20T13:02:20Z,2016-09-12T17:32:45Z,CLOSED,False,1864,906,111,https://github.com/Chr1stoph,I3config,91,[],https://github.com/i3/i3/pull/2304,https://github.com/Airblader,25,https://github.com/i3/i3/pull/2304#issuecomment-230875706,"#2141
Changes are related to master.
Generation of the i3-config file is not stopped in case a key symbol could not be resolved. The relevant line is copied with the unresolved number but appended with a comment. When i3 checks the bindings i3-nagbar is triggered in case of an unresolved key mapping.","But I can not find the file xcb/xcb_xrm.h.

That's because it's not a file from i3, it's an external library that I wrote. The library likely doesn't exist in FreeBSD yet. An issue FreeBSD will have to solve at some point.

It is strange, especially since I changed just two files.

It's the result of some incorrect rebase / merge. But I didn't sit next to you, so I can't really say what exactly went wrong. Maybe at some point it'd just be better to start with a new feature branch and redo the changes?",True,{}
i3/i3,https://github.com/i3/i3,2304,2016-04-16T11:04:32Z,2016-08-20T13:02:20Z,2016-09-12T17:32:45Z,CLOSED,False,1864,906,111,https://github.com/Chr1stoph,I3config,91,[],https://github.com/i3/i3/pull/2304,https://github.com/Chr1stoph,26,https://github.com/i3/i3/pull/2304#issuecomment-230878258,"#2141
Changes are related to master.
Generation of the i3-config file is not stopped in case a key symbol could not be resolved. The relevant line is copied with the unresolved number but appended with a comment. When i3 checks the bindings i3-nagbar is triggered in case of an unresolved key mapping.","On Wed, Jul 06, 2016 at 09:15:09PM +0200, Christoph Brinkhaus wrote:

On Wed, Jul 06, 2016 at 11:40:31AM -0700, Ingo B�rk wrote:


Now everything might have been successfull.

No, the PR is definitely broken right now. It contains 90 commits and over 100 changed files, which is definitely not correct.

In the original sorces of FreeBSD xcb_xrm does
not appear anywhere.

What FreeBSD sources and why are you looking at anything from FreeBSD?
Because it runs on FreeBSD without special patches or so. Therefore I
think it should work again when I compile it under FreeBSD. Of course
the repository is github.
There is only one source code against which you should provide a PR and that's the repository hosted here on Github. xcb_xrm being in the code is definitely correct.

Ok, xcb_xrm appears in
https://github.com/i3/i3/tree/next/src/config-parser.c
But I can not find the file xcb/xcb_xrm.h.
Now I found it here using a web search engine:
https://github.com/Airblader/xcb-util-xrm/tree/master/include
Does i3 requires xcb-util-xrm as a depenency?
Some of these utilities are installed here, too.
But it might be behind Debian.
I guess
https://github.com/Chr1stoph/i3/blob/next/src/config_parser.c
is from the time when I started the pull request or so.

Sorry, I'm really not sure what you're doing. You fork the Github repository, clone your own fork, make your changes against it on some branch, push that branch and create the PR. If things changed here, you add it as a separate remote, rebase the branch and resolve conflicts. That's really all that has to happen, but you must've done something else.
It is strange, especially since I changed just two files.",True,{}
i3/i3,https://github.com/i3/i3,2304,2016-04-16T11:04:32Z,2016-08-20T13:02:20Z,2016-09-12T17:32:45Z,CLOSED,False,1864,906,111,https://github.com/Chr1stoph,I3config,91,[],https://github.com/i3/i3/pull/2304,https://github.com/Airblader,27,https://github.com/i3/i3/pull/2304#issuecomment-230879878,"#2141
Changes are related to master.
Generation of the i3-config file is not stopped in case a key symbol could not be resolved. The relevant line is copied with the unresolved number but appended with a comment. When i3 checks the bindings i3-nagbar is triggered in case of an unresolved key mapping.","Does i3 requires xcb-util-xrm as a depenency?

Yes. The current release, 4.12, does not yet have the dependency. The next release, 4.13, will have the dependency.
Debian already provides a package for xcb-util-xrm in Debian testing. I'm not aware of FreeBSD (or any BSD for that matter) having created a package for it yet. I let them know a long time ago. They'll notice at the very latest once they want to update the i3 package.",True,{}
i3/i3,https://github.com/i3/i3,2304,2016-04-16T11:04:32Z,2016-08-20T13:02:20Z,2016-09-12T17:32:45Z,CLOSED,False,1864,906,111,https://github.com/Chr1stoph,I3config,91,[],https://github.com/i3/i3/pull/2304,https://github.com/Chr1stoph,28,https://github.com/i3/i3/pull/2304#issuecomment-230881038,"#2141
Changes are related to master.
Generation of the i3-config file is not stopped in case a key symbol could not be resolved. The relevant line is copied with the unresolved number but appended with a comment. When i3 checks the bindings i3-nagbar is triggered in case of an unresolved key mapping.","On Wed, Jul 06, 2016 at 12:17:32PM -0700, Ingo B�rk wrote:


But I can not find the file xcb/xcb_xrm.h.

That's because it's not a file from i3, it's an external library that I wrote.

It is strange, especially since I changed just two files.

It's the result of some incorrect rebase / merge. But I didn't sit next to you, so I can't really say what exactly went wrong. Maybe at some point it'd just be better to start with a new feature branch and redo the changes?
I am happy that you suggest this. I think it should mean cleanup
i3config, clone next, apply the small changes.

You are receiving this because you were mentioned.
Reply to this email directly or view it on GitHub:
#2304 (comment)",True,{}
i3/i3,https://github.com/i3/i3,2304,2016-04-16T11:04:32Z,2016-08-20T13:02:20Z,2016-09-12T17:32:45Z,CLOSED,False,1864,906,111,https://github.com/Chr1stoph,I3config,91,[],https://github.com/i3/i3/pull/2304,https://github.com/Chr1stoph,29,https://github.com/i3/i3/pull/2304#issuecomment-230885707,"#2141
Changes are related to master.
Generation of the i3-config file is not stopped in case a key symbol could not be resolved. The relevant line is copied with the unresolved number but appended with a comment. When i3 checks the bindings i3-nagbar is triggered in case of an unresolved key mapping.","On Wed, Jul 06, 2016 at 12:25:13PM -0700, Ingo B�rk wrote:


Does i3 requires xcb-util-xrm as a depenency?

Yes. The current release, 4.12, does not yet have the dependency. The next release, 4.13, will have the dependency.
Currently there is
x11/xcb                   Tool for managing x11 cut-buffers
x11/xcb-proto             The X protocol C-language Binding (XCB) protocol
x11/xcb-util              Module with libxcb/libX11 extension/replacement libraries
x11/xcb-util-cursor       XCB cursor library
x11/xcb-util-image        Port of Xlib's XImage and XShmImage functions
x11/xcb-util-keysyms      Standard X key constants and conversion to/from keycodes
x11/xcb-util-renderutil   Convenience functions for the Render extension
x11/xcb-util-wm           Framework for window manager implementation
Debian already provides a package for xcb-util-xrm in Debian testing. I'm not aware of FreeBSD (or any BSD for that matter) having created a package for it yet.
May be xcb-util-xrm is more important than my lousy small patch.
I will contact the maintainer of x11/xcb-util
and ask for the opinion. i3 has more than one FreeBSD user.

You are receiving this because you were mentioned.
Reply to this email directly or view it on GitHub:
#2304 (comment)",True,{}
i3/i3,https://github.com/i3/i3,2304,2016-04-16T11:04:32Z,2016-08-20T13:02:20Z,2016-09-12T17:32:45Z,CLOSED,False,1864,906,111,https://github.com/Chr1stoph,I3config,91,[],https://github.com/i3/i3/pull/2304,https://github.com/Airblader,30,https://github.com/i3/i3/pull/2304#issuecomment-230887042,"#2141
Changes are related to master.
Generation of the i3-config file is not stopped in case a key symbol could not be resolved. The relevant line is copied with the unresolved number but appended with a comment. When i3 checks the bindings i3-nagbar is triggered in case of an unresolved key mapping.","May be xcb-util-xrm is more important than my lousy small patch.

I don't understand what you mean with that. The next i3 release will have this dependency, that's a patch that's already been merged. I have no idea what source of i3 you are looking at where xcb-util-xrm is not used. Whichever it is, it's not up to date. The only repository that matters for pull requests is this one.
But that in no way means that your patch cannot be merged. Sorry, I just really do not understand what is happening right now.

I will contact the maintainer of x11/xcb-util

What for?",True,{}
i3/i3,https://github.com/i3/i3,2304,2016-04-16T11:04:32Z,2016-08-20T13:02:20Z,2016-09-12T17:32:45Z,CLOSED,False,1864,906,111,https://github.com/Chr1stoph,I3config,91,[],https://github.com/i3/i3/pull/2304,https://github.com/Chr1stoph,31,https://github.com/i3/i3/pull/2304#issuecomment-230890545,"#2141
Changes are related to master.
Generation of the i3-config file is not stopped in case a key symbol could not be resolved. The relevant line is copied with the unresolved number but appended with a comment. When i3 checks the bindings i3-nagbar is triggered in case of an unresolved key mapping.","On Wed, Jul 06, 2016 at 12:53:28PM -0700, Ingo B�rk wrote:


May be xcb-util-xrm is more important than my lousy small patch.

I don't understand what you mean with that. The next i3 release will have this dependency, that's a patch that's already been merged. I have no idea what source of i3 you are looking at where xcb-util-xrm is not used. Whichever it is, it's not up to date. The only repository that matters for pull requests is this one.

I will contact the maintainer of x11/xcb-util

What for?
If i3 will have a version 4.13 and requires x11/xcb-util-xrm which
does not existi, this is a problem for FreeBSD.
Regarding i3 the source is as usual. But the dependency must be
fullfilled. Please excuse me if I am wrong. From my understanding
xcb-util-xrm is not provided by i3 but from a different repository.

You are receiving this because you were mentioned.
Reply to this email directly or view it on GitHub:
#2304 (comment)",True,{}
i3/i3,https://github.com/i3/i3,2304,2016-04-16T11:04:32Z,2016-08-20T13:02:20Z,2016-09-12T17:32:45Z,CLOSED,False,1864,906,111,https://github.com/Chr1stoph,I3config,91,[],https://github.com/i3/i3/pull/2304,https://github.com/Airblader,32,https://github.com/i3/i3/pull/2304#issuecomment-230891063,"#2141
Changes are related to master.
Generation of the i3-config file is not stopped in case a key symbol could not be resolved. The relevant line is copied with the unresolved number but appended with a comment. When i3 checks the bindings i3-nagbar is triggered in case of an unresolved key mapping.","No, you are correct. But they will notice this when trying to provide the i4-4.13 package because they won't be able to build. But yeah, please do let them know upfront, that certainly doesn't hurt.",True,{}
i3/i3,https://github.com/i3/i3,2304,2016-04-16T11:04:32Z,2016-08-20T13:02:20Z,2016-09-12T17:32:45Z,CLOSED,False,1864,906,111,https://github.com/Chr1stoph,I3config,91,[],https://github.com/i3/i3/pull/2304,https://github.com/Chr1stoph,33,https://github.com/i3/i3/pull/2304#issuecomment-230897174,"#2141
Changes are related to master.
Generation of the i3-config file is not stopped in case a key symbol could not be resolved. The relevant line is copied with the unresolved number but appended with a comment. When i3 checks the bindings i3-nagbar is triggered in case of an unresolved key mapping.","On Wed, Jul 06, 2016 at 01:08:55PM -0700, Ingo B�rk wrote:

No, you are correct. But they will notice this when trying to provide the i4-4.13 package because they won't be able to build. But yeah, please do let them know upfront, that certainly doesn't hurt.
Ok, the maintainer of i3 already knows about that.
Currently I ask myself what I am doing here...

Christoph


You are receiving this because you were mentioned.
Reply to this email directly or view it on GitHub:
#2304 (comment)",True,{}
i3/i3,https://github.com/i3/i3,2304,2016-04-16T11:04:32Z,2016-08-20T13:02:20Z,2016-09-12T17:32:45Z,CLOSED,False,1864,906,111,https://github.com/Chr1stoph,I3config,91,[],https://github.com/i3/i3/pull/2304,https://github.com/Chr1stoph,34,https://github.com/i3/i3/pull/2304#issuecomment-234028476,"#2141
Changes are related to master.
Generation of the i3-config file is not stopped in case a key symbol could not be resolved. The relevant line is copied with the unresolved number but appended with a comment. When i3 checks the bindings i3-nagbar is triggered in case of an unresolved key mapping.","On Wed, Jul 06, 2016 at 09:29:32PM +0200, Christoph Brinkhaus wrote:

On Wed, Jul 06, 2016 at 12:17:32PM -0700, Ingo B�rk wrote:


But I can not find the file xcb/xcb_xrm.h.

That's because it's not a file from i3, it's an external library that I wrote.
@Airblader The next brach of i3 works now including the xcb_xrm
library.

It is strange, especially since I changed just two files.

It's the result of some incorrect rebase / merge. But I didn't sit next to you, so I can't really say what exactly went wrong. Maybe at some point it'd just be better to start with a new feature branch and redo the changes?
I am happy that you suggest this. I think it should mean cleanup
i3config, clone next, apply the small changes.
The complete repository I have forked seems to be difficult.
The ""next"" branch of the fork is completely different from
the ""next"" branch of i3. Is it possible to synchronize them?


If not I am not sure if it is the best to close the current PR,
destroy the fork and create a completely new one.



You are receiving this because you were mentioned.
Reply to this email directly or view it on GitHub:
#2304 (comment)",True,{}
i3/i3,https://github.com/i3/i3,2304,2016-04-16T11:04:32Z,2016-08-20T13:02:20Z,2016-09-12T17:32:45Z,CLOSED,False,1864,906,111,https://github.com/Chr1stoph,I3config,91,[],https://github.com/i3/i3/pull/2304,https://github.com/Chr1stoph,35,https://github.com/i3/i3/pull/2304#issuecomment-234059813,"#2141
Changes are related to master.
Generation of the i3-config file is not stopped in case a key symbol could not be resolved. The relevant line is copied with the unresolved number but appended with a comment. When i3 checks the bindings i3-nagbar is triggered in case of an unresolved key mapping.","On Wed, Jul 20, 2016 at 07:55:22PM +0200, Christoph Brinkhaus wrote:

On Wed, Jul 06, 2016 at 09:29:32PM +0200, Christoph Brinkhaus wrote:

On Wed, Jul 06, 2016 at 12:17:32PM -0700, Ingo B�rk wrote:


But I can not find the file xcb/xcb_xrm.h.

That's because it's not a file from i3, it's an external library that I wrote.
@Airblader The next brach of i3 works now including the xcb_xrm
library.

It is strange, especially since I changed just two files.

It's the result of some incorrect rebase / merge. But I didn't sit next to you, so I can't really say what exactly went wrong. Maybe at some point it'd just be better to start with a new feature branch and redo the changes?
I am happy that you suggest this. I think it should mean cleanup
i3config, clone next, apply the small changes.
The complete repository I have forked seems to be difficult.
The ""next"" branch of the fork is completely different from
the ""next"" branch of i3. Is it possible to synchronize them?


If not I am not sure if it is the best to close the current PR,
destroy the fork and create a completely new one.
@Airblader I have found
https://gun.io/blog/how-to-github-fork-branch-and-pull-request/
which is from 2012 but hopefully still up to date.
I will try this procedure but copy next instead of master.",True,{}
i3/i3,https://github.com/i3/i3,2304,2016-04-16T11:04:32Z,2016-08-20T13:02:20Z,2016-09-12T17:32:45Z,CLOSED,False,1864,906,111,https://github.com/Chr1stoph,I3config,91,[],https://github.com/i3/i3/pull/2304,https://github.com/Airblader,36,https://github.com/i3/i3/pull/2304#issuecomment-241198993,"#2141
Changes are related to master.
Generation of the i3-config file is not stopped in case a key symbol could not be resolved. The relevant line is copied with the unresolved number but appended with a comment. When i3 checks the bindings i3-nagbar is triggered in case of an unresolved key mapping.","I'm going to go ahead and close this PR now. @Chr1stoph When you have figured it out, please just open a new PR for the change there. This one has become too messy for my taste and progress is really slow, plus the incorrect rebase has put a lot of people on this issue.",True,{}
i3/i3,https://github.com/i3/i3,2304,2016-04-16T11:04:32Z,2016-08-20T13:02:20Z,2016-09-12T17:32:45Z,CLOSED,False,1864,906,111,https://github.com/Chr1stoph,I3config,91,[],https://github.com/i3/i3/pull/2304,https://github.com/Chr1stoph,37,https://github.com/i3/i3/pull/2304#issuecomment-246426575,"#2141
Changes are related to master.
Generation of the i3-config file is not stopped in case a key symbol could not be resolved. The relevant line is copied with the unresolved number but appended with a comment. When i3 checks the bindings i3-nagbar is triggered in case of an unresolved key mapping.","On Sat, Aug 20, 2016 at 06:02:23AM -0700, Ingo B�rk wrote:

I'm going to go ahead and close this PR now. @Chr1stoph When you have figured it out, please just open a new PR for the change there. This one has become too messy for my taste and progress is really slow, plus the incorrect rebase has put a lot of people on this issue.
@Airblader, this is fine with me. I hope I can clean up everything
sooner or later. Thank you again for the support regarding github.",True,{}
i3/i3,https://github.com/i3/i3,2305,2016-04-16T19:50:32Z,2016-04-23T11:36:59Z,2016-09-25T22:47:25Z,MERGED,True,0,240,2,https://github.com/Airblader,Remove skipped tests.,1,[],https://github.com/i3/i3/pull/2305,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2305,"We simply remove these tests since they are sufficiently covered
by other testcases.
relates to #2289","We simply remove these tests since they are sufficiently covered
by other testcases.
relates to #2289",True,{}
i3/i3,https://github.com/i3/i3,2306,2016-04-17T12:10:48Z,2016-04-26T07:20:42Z,2016-09-25T22:47:25Z,MERGED,True,31,1,2,https://github.com/kneitinger,Modify construction of config variables list to ensure they match by longest lexeme.,1,[],https://github.com/i3/i3/pull/2306,https://github.com/kneitinger,1,https://github.com/i3/i3/pull/2306,"Does not change default behavior when two variable declarations use the exact same name.
fixes #2235","Does not change default behavior when two variable declarations use the exact same name.
fixes #2235",True,{}
i3/i3,https://github.com/i3/i3,2306,2016-04-17T12:10:48Z,2016-04-26T07:20:42Z,2016-09-25T22:47:25Z,MERGED,True,31,1,2,https://github.com/kneitinger,Modify construction of config variables list to ensure they match by longest lexeme.,1,[],https://github.com/i3/i3/pull/2306,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/2306#issuecomment-213725303,"Does not change default behavior when two variable declarations use the exact same name.
fixes #2235",Thanks for the pull request. Can you amend it to also include a test case which exercises this code path to make sure we don’t introduce a regression later?,True,{}
i3/i3,https://github.com/i3/i3,2306,2016-04-17T12:10:48Z,2016-04-26T07:20:42Z,2016-09-25T22:47:25Z,MERGED,True,31,1,2,https://github.com/kneitinger,Modify construction of config variables list to ensure they match by longest lexeme.,1,[],https://github.com/i3/i3/pull/2306,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2306#issuecomment-213945919,"Does not change default behavior when two variable declarations use the exact same name.
fixes #2235","@kneitinger Please use rebasing and not merging to avoid polluting the history with merge commits. Also, when you made the changes, drop a comment so that we get notified. :)",True,{}
i3/i3,https://github.com/i3/i3,2306,2016-04-17T12:10:48Z,2016-04-26T07:20:42Z,2016-09-25T22:47:25Z,MERGED,True,31,1,2,https://github.com/kneitinger,Modify construction of config variables list to ensure they match by longest lexeme.,1,[],https://github.com/i3/i3/pull/2306,https://github.com/kneitinger,4,https://github.com/i3/i3/pull/2306#issuecomment-214014375,"Does not change default behavior when two variable declarations use the exact same name.
fixes #2235","That all makes sense!
I believe I rebased the commits in the intended way, but I'm somewhat inexperienced with that operation so let me know if it needs to be done in a different way.  Thanks :)",True,{}
i3/i3,https://github.com/i3/i3,2306,2016-04-17T12:10:48Z,2016-04-26T07:20:42Z,2016-09-25T22:47:25Z,MERGED,True,31,1,2,https://github.com/kneitinger,Modify construction of config variables list to ensure they match by longest lexeme.,1,[],https://github.com/i3/i3/pull/2306,https://github.com/Airblader,5,https://github.com/i3/i3/pull/2306#issuecomment-214022183,"Does not change default behavior when two variable declarations use the exact same name.
fixes #2235","@kneitinger Unfortunately, something is still wrong – it shows commits that don't belong in your pull request. Typically, this is what you want to do:

Fork i3 on Github and clone your fork to your machine.
Add the upstream remote via git remote add upstream https://github.com/i3/i3.git
Create your feature branch off of next and create your commit(s).

Now, if changes have been pushed to upstream meanwhile, you can do
# first fetch the changes from upstream
git fetch --all
# rebase your feature branch onto the updated upstream branch
git rebase upstream/next

Most of the time, this should work without any problems and you can then push your branch again via git push --force (the force is needed because you rebased). If you do run into a conflict, git will tell you the necessary steps to resolve them.
Now, this is of course a bit too late here and your branch is now in a dirty state. You can fix it like so (or many other ways, but I figure this one is easy to understand):
# First, let's save your hard work by copying it into a patch file
git format-patch -1 520b13

# Next up, we simply reset your branch (which nukes your commit, but that's why we saved it)
git remote add upstream https://github.com/i3/i3.git
git fetch upstream
git reset --hard upstream/next

# Let's reapply your commit
git am *.patch
rm *.patch

# All set! Now check the git log once to make sure that your commit is on the very top and then push it
git log
git push --force

Thanks for your patience and, of course, your contribution. :-)",True,{}
i3/i3,https://github.com/i3/i3,2306,2016-04-17T12:10:48Z,2016-04-26T07:20:42Z,2016-09-25T22:47:25Z,MERGED,True,31,1,2,https://github.com/kneitinger,Modify construction of config variables list to ensure they match by longest lexeme.,1,[],https://github.com/i3/i3/pull/2306,https://github.com/kneitinger,6,https://github.com/i3/i3/pull/2306#issuecomment-214639936,"Does not change default behavior when two variable declarations use the exact same name.
fixes #2235","Yes! Thank you so much for explaining that to me, it makes a lot of sense (and simplifies things)!  Anyway, I believe that this is now in the correct state :D",True,{}
i3/i3,https://github.com/i3/i3,2308,2016-04-19T19:19:43Z,2016-04-23T11:43:23Z,2016-09-25T22:47:25Z,MERGED,True,1,1,1,https://github.com/Airblader,"Update ""mark"" to ""marks"" in i3-save-tree.",1,[],https://github.com/i3/i3/pull/2308,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2308,"When allowing multiple marks on a container, we renamed the ""mark""
field to ""marks"". This breaks i3-save-tree which will now filter out
the marks on a window because it doesn't match anymore. This commit
fixes that issue.
Thanks to /u/xenomachina for hinting to this issue.","When allowing multiple marks on a container, we renamed the ""mark""
field to ""marks"". This breaks i3-save-tree which will now filter out
the marks on a window because it doesn't match anymore. This commit
fixes that issue.
Thanks to /u/xenomachina for hinting to this issue.",True,{}
i3/i3,https://github.com/i3/i3,2313,2016-04-23T20:06:56Z,2016-04-30T21:04:58Z,2016-09-25T22:46:56Z,MERGED,True,48,9,1,https://github.com/Airblader,i3-input: Proper position in non-standard cases.,1,[],https://github.com/i3/i3/pull/2313,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2313,"This commit fixes two issues:

We detect the EWMH support window from the root window. If this window
currently has the input focus, we ignore this. We do this because this
window is not a window the user is aware of and positioning relative to
it makes no sense.
We also detect whether the current input focus is in an i3-frame window.
This can happen, e.g., when selecting a parent (split) container. Since
frame windows are direct children of the root window, we must not
translate its coordinates or we get weird results and i3-input ends up
off-screen (see #2312). For all other windows, including those without
any WM_CLASS, we proceed as before.

fixes #2312","This commit fixes two issues:

We detect the EWMH support window from the root window. If this window
currently has the input focus, we ignore this. We do this because this
window is not a window the user is aware of and positioning relative to
it makes no sense.
We also detect whether the current input focus is in an i3-frame window.
This can happen, e.g., when selecting a parent (split) container. Since
frame windows are direct children of the root window, we must not
translate its coordinates or we get weird results and i3-input ends up
off-screen (see #2312). For all other windows, including those without
any WM_CLASS, we proceed as before.

fixes #2312",True,{}
i3/i3,https://github.com/i3/i3,2313,2016-04-23T20:06:56Z,2016-04-30T21:04:58Z,2016-09-25T22:46:56Z,MERGED,True,48,9,1,https://github.com/Airblader,i3-input: Proper position in non-standard cases.,1,[],https://github.com/i3/i3/pull/2313,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/2313#issuecomment-214028321,"This commit fixes two issues:

We detect the EWMH support window from the root window. If this window
currently has the input focus, we ignore this. We do this because this
window is not a window the user is aware of and positioning relative to
it makes no sense.
We also detect whether the current input focus is in an i3-frame window.
This can happen, e.g., when selecting a parent (split) container. Since
frame windows are direct children of the root window, we must not
translate its coordinates or we get weird results and i3-input ends up
off-screen (see #2312). For all other windows, including those without
any WM_CLASS, we proceed as before.

fixes #2312",Looks good overall.,True,{}
i3/i3,https://github.com/i3/i3,2313,2016-04-23T20:06:56Z,2016-04-30T21:04:58Z,2016-09-25T22:46:56Z,MERGED,True,48,9,1,https://github.com/Airblader,i3-input: Proper position in non-standard cases.,1,[],https://github.com/i3/i3/pull/2313,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2313#issuecomment-215991516,"This commit fixes two issues:

We detect the EWMH support window from the root window. If this window
currently has the input focus, we ignore this. We do this because this
window is not a window the user is aware of and positioning relative to
it makes no sense.
We also detect whether the current input focus is in an i3-frame window.
This can happen, e.g., when selecting a parent (split) container. Since
frame windows are direct children of the root window, we must not
translate its coordinates or we get weird results and i3-input ends up
off-screen (see #2312). For all other windows, including those without
any WM_CLASS, we proceed as before.

fixes #2312",@stapelberg Done.,True,{}
i3/i3,https://github.com/i3/i3,2314,2016-04-24T00:44:15Z,2017-01-13T19:43:24Z,2018-03-15T19:51:45Z,CLOSED,False,132,10,6,https://github.com/acrisci,Feature/net wm state focused,2,['waiting'],https://github.com/i3/i3/pull/2314,https://github.com/acrisci,1,https://github.com/i3/i3/pull/2314,"_NET_WM_STATE_FOCUSED is set on _NET_WM_STATE to indicate that the
window is focused. It must be set when the window is newly focused and
removed once the window no longer has focus.

_NET_WM_STATE_FOCUSED indicates whether the window's decorations are
drawn in an active state. Clients MUST regard it as a read-only hint.
It cannot be set at map time or changed via a _NET_WM_STATE client
message.

For example, this is used by GTK applications to show the decoration in
an active or inactive state. This change can be tested by opening a GTK
application (like evince), focusing the window and unfocusing the
window, and observing a change in the window decorations.
Fixes #2273","_NET_WM_STATE_FOCUSED is set on _NET_WM_STATE to indicate that the
window is focused. It must be set when the window is newly focused and
removed once the window no longer has focus.

_NET_WM_STATE_FOCUSED indicates whether the window's decorations are
drawn in an active state. Clients MUST regard it as a read-only hint.
It cannot be set at map time or changed via a _NET_WM_STATE client
message.

For example, this is used by GTK applications to show the decoration in
an active or inactive state. This change can be tested by opening a GTK
application (like evince), focusing the window and unfocusing the
window, and observing a change in the window decorations.
Fixes #2273",True,{}
i3/i3,https://github.com/i3/i3,2314,2016-04-24T00:44:15Z,2017-01-13T19:43:24Z,2018-03-15T19:51:45Z,CLOSED,False,132,10,6,https://github.com/acrisci,Feature/net wm state focused,2,['waiting'],https://github.com/i3/i3/pull/2314,https://github.com/acrisci,2,https://github.com/i3/i3/pull/2314#issuecomment-213858421,"_NET_WM_STATE_FOCUSED is set on _NET_WM_STATE to indicate that the
window is focused. It must be set when the window is newly focused and
removed once the window no longer has focus.

_NET_WM_STATE_FOCUSED indicates whether the window's decorations are
drawn in an active state. Clients MUST regard it as a read-only hint.
It cannot be set at map time or changed via a _NET_WM_STATE client
message.

For example, this is used by GTK applications to show the decoration in
an active or inactive state. This change can be tested by opening a GTK
application (like evince), focusing the window and unfocusing the
window, and observing a change in the window decorations.
Fixes #2273",@Airblader I made logic changes to t/253-multiple-net-wm-state-atoms.t.,True,{}
i3/i3,https://github.com/i3/i3,2314,2016-04-24T00:44:15Z,2017-01-13T19:43:24Z,2018-03-15T19:51:45Z,CLOSED,False,132,10,6,https://github.com/acrisci,Feature/net wm state focused,2,['waiting'],https://github.com/i3/i3/pull/2314,https://github.com/acrisci,3,https://github.com/i3/i3/pull/2314#issuecomment-234814366,"_NET_WM_STATE_FOCUSED is set on _NET_WM_STATE to indicate that the
window is focused. It must be set when the window is newly focused and
removed once the window no longer has focus.

_NET_WM_STATE_FOCUSED indicates whether the window's decorations are
drawn in an active state. Clients MUST regard it as a read-only hint.
It cannot be set at map time or changed via a _NET_WM_STATE client
message.

For example, this is used by GTK applications to show the decoration in
an active or inactive state. This change can be tested by opening a GTK
application (like evince), focusing the window and unfocusing the
window, and observing a change in the window decorations.
Fixes #2273",Ok I updated this so it passes the build so it should be good to go.,True,{}
i3/i3,https://github.com/i3/i3,2314,2016-04-24T00:44:15Z,2017-01-13T19:43:24Z,2018-03-15T19:51:45Z,CLOSED,False,132,10,6,https://github.com/acrisci,Feature/net wm state focused,2,['waiting'],https://github.com/i3/i3/pull/2314,https://github.com/stapelberg,4,https://github.com/i3/i3/pull/2314#issuecomment-236376903,"_NET_WM_STATE_FOCUSED is set on _NET_WM_STATE to indicate that the
window is focused. It must be set when the window is newly focused and
removed once the window no longer has focus.

_NET_WM_STATE_FOCUSED indicates whether the window's decorations are
drawn in an active state. Clients MUST regard it as a read-only hint.
It cannot be set at map time or changed via a _NET_WM_STATE client
message.

For example, this is used by GTK applications to show the decoration in
an active or inactive state. This change can be tested by opening a GTK
application (like evince), focusing the window and unfocusing the
window, and observing a change in the window decorations.
Fixes #2273",Looks good overall.,True,{}
i3/i3,https://github.com/i3/i3,2317,2016-04-24T14:00:51Z,2016-04-26T07:09:07Z,2016-09-25T22:46:56Z,MERGED,True,12,1,1,https://github.com/Airblader,Focus a newly managed container only if it doesn't use the globally a…,1,[],https://github.com/i3/i3/pull/2317,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2317,"…ctive input model.
fixes #1784","…ctive input model.
fixes #1784",True,{}
i3/i3,https://github.com/i3/i3,2317,2016-04-24T14:00:51Z,2016-04-26T07:09:07Z,2016-09-25T22:46:56Z,MERGED,True,12,1,1,https://github.com/Airblader,Focus a newly managed container only if it doesn't use the globally a…,1,[],https://github.com/i3/i3/pull/2317,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2317#issuecomment-213962444,"…ctive input model.
fixes #1784","Just FYI, this is how Openbox handles it as well, see openbox/client.c:
            /* Don't steal focus from globally active clients.
               I stole this idea from KWin. It seems nice.
            */
            else if (!(focus_client->can_focus || focus_client->focus_notify))
            {    
                steal = FALSE;
                ob_debug(""Not focusing the window because a globally ""
                         ""active client has focus"");
            }",True,{}
i3/i3,https://github.com/i3/i3,2317,2016-04-24T14:00:51Z,2016-04-26T07:09:07Z,2016-09-25T22:46:56Z,MERGED,True,12,1,1,https://github.com/Airblader,Focus a newly managed container only if it doesn't use the globally a…,1,[],https://github.com/i3/i3/pull/2317,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2317#issuecomment-214475302,"…ctive input model.
fixes #1784",@stapelberg Good to go here.,True,{}
i3/i3,https://github.com/i3/i3,2319,2016-04-24T19:44:39Z,2017-01-13T19:43:28Z,2017-03-12T19:47:59Z,CLOSED,False,5,5,1,https://github.com/acrisci,"i3bar: accept ""primary"" for output config option",1,['waiting'],https://github.com/i3/i3/pull/2319,https://github.com/acrisci,1,https://github.com/i3/i3/pull/2319,"If ""primary"" is given in a bar block output directive and there is a
primary output configured, handle that output.
fixes #2311","If ""primary"" is given in a bar block output directive and there is a
primary output configured, handle that output.
fixes #2311",True,"{'HEART': ['https://github.com/wlhlm'], 'THUMBS_UP': ['https://github.com/joehillen', 'https://github.com/acrisci']}"
i3/i3,https://github.com/i3/i3,2319,2016-04-24T19:44:39Z,2017-01-13T19:43:28Z,2017-03-12T19:47:59Z,CLOSED,False,5,5,1,https://github.com/acrisci,"i3bar: accept ""primary"" for output config option",1,['waiting'],https://github.com/i3/i3/pull/2319,https://github.com/acrisci,2,https://github.com/i3/i3/pull/2319#issuecomment-214027784,"If ""primary"" is given in a bar block output directive and there is a
primary output configured, handle that output.
fixes #2311","There is now the problem of if primary is changed with xrandr --output HDMI-0 --primary, the old output that is no longer primary is still handled but it should be destroyed.",True,{}
i3/i3,https://github.com/i3/i3,2319,2016-04-24T19:44:39Z,2017-01-13T19:43:28Z,2017-03-12T19:47:59Z,CLOSED,False,5,5,1,https://github.com/acrisci,"i3bar: accept ""primary"" for output config option",1,['waiting'],https://github.com/i3/i3/pull/2319,https://github.com/wlhlm,3,https://github.com/i3/i3/pull/2319#issuecomment-214045870,"If ""primary"" is given in a bar block output directive and there is a
primary output configured, handle that output.
fixes #2311","Thank you very much for implementing this!
I was looking into this myself, but I'm not too familiar with the i3 codebase and X/XCB programming in general. Also I wasn't too sure if the feature request was ""accepted"" or not.
Anyways, try this patch, it should fix the problem mentioned above:
diff --git a/docs/userguide b/docs/userguide
index f46a0be..6a4c39e 100644
--- a/docs/userguide
+++ b/docs/userguide
@@ -1340,7 +1340,7 @@ directive multiple times.

 *Syntax*:
 ---------------
-output <output>
+output primary|<output>
 ---------------

 *Example*:
@@ -1362,8 +1362,20 @@ bar {
         statusline #ffffff
     }
 }
+
+# show bar on the primary monitor and on HDMI2
+bar {
+    output primary
+    output HDMI2
+    status_command i3status
+}
 -------------------------------

+Note that you might not have a primary output configured yet. To do so, run:
+-------------------------
+xrandr --output <output> --primary
+-------------------------
+
 === Tray output

 i3bar by default provides a system tray area where programs such as
diff --git a/i3bar/src/ipc.c b/i3bar/src/ipc.c
index 3489866..636789d 100644
--- a/i3bar/src/ipc.c
+++ b/i3bar/src/ipc.c
@@ -63,12 +63,18 @@ void got_subscribe_reply(char *reply) {
  *
  */
 void got_output_reply(char *reply) {
+    DLOG(""Clearing old output configuration...\n"");
+    i3_output *o_walk;
+    SLIST_FOREACH(o_walk, outputs, slist) {
+        destroy_window(o_walk);
+    }
+    FREE_SLIST(outputs, i3_output);
+
     DLOG(""Parsing outputs JSON...\n"");
     parse_outputs_json(reply);
     DLOG(""Reconfiguring windows...\n"");
     reconfig_windows(false);

-    i3_output *o_walk;
     SLIST_FOREACH(o_walk, outputs, slist) {
         kick_tray_clients(o_walk);
     }
diff --git a/i3bar/src/outputs.c b/i3bar/src/outputs.c
index b53d8cc..d1a367b 100644
--- a/i3bar/src/outputs.c
+++ b/i3bar/src/outputs.c
@@ -189,11 +189,12 @@ static int outputs_end_map_cb(void *params_) {
     if (config.num_outputs > 0) {
         bool handle_output = false;
         for (int c = 0; c < config.num_outputs; c++) {
-            if (strcasecmp(params->outputs_walk->name, config.outputs[c]) != 0)
-                continue;
-
-            handle_output = true;
-            break;
+            if (strcasecmp(params->outputs_walk->name, config.outputs[c]) == 0 ||
+                    (strcasecmp(config.outputs[c], ""primary"") == 0 &&
+                     params->outputs_walk->primary)) {
+                handle_output = true;
+                break;
+            }
         }
         if (!handle_output) {
             DLOG(""Ignoring output \""%s\"", not configured to handle it.\n"",

EDIT: Update patch to include documentation changes",True,{}
i3/i3,https://github.com/i3/i3,2319,2016-04-24T19:44:39Z,2017-01-13T19:43:28Z,2017-03-12T19:47:59Z,CLOSED,False,5,5,1,https://github.com/acrisci,"i3bar: accept ""primary"" for output config option",1,['waiting'],https://github.com/i3/i3/pull/2319,https://github.com/acrisci,4,https://github.com/i3/i3/pull/2319#issuecomment-215869439,"If ""primary"" is given in a bar block output directive and there is a
primary output configured, handle that output.
fixes #2311","Thanks, I'll incorporate those changes in the pr.",True,{}
i3/i3,https://github.com/i3/i3,2319,2016-04-24T19:44:39Z,2017-01-13T19:43:28Z,2017-03-12T19:47:59Z,CLOSED,False,5,5,1,https://github.com/acrisci,"i3bar: accept ""primary"" for output config option",1,['waiting'],https://github.com/i3/i3/pull/2319,https://github.com/wlhlm,5,https://github.com/i3/i3/pull/2319#issuecomment-231555165,"If ""primary"" is given in a bar block output directive and there is a
primary output configured, handle that output.
fixes #2311","Hey @acrisci are you still working on this? I have no problem taking this over. I'd love to have this integrated into develop, if @stapelberg thinks it's worthwhile to add.",True,{}
i3/i3,https://github.com/i3/i3,2319,2016-04-24T19:44:39Z,2017-01-13T19:43:28Z,2017-03-12T19:47:59Z,CLOSED,False,5,5,1,https://github.com/acrisci,"i3bar: accept ""primary"" for output config option",1,['waiting'],https://github.com/i3/i3/pull/2319,https://github.com/acrisci,6,https://github.com/i3/i3/pull/2319#issuecomment-234815368,"If ""primary"" is given in a bar block output directive and there is a
primary output configured, handle that output.
fixes #2311",Ok I finally fixed this. It should be good to go.,True,{}
i3/i3,https://github.com/i3/i3,2319,2016-04-24T19:44:39Z,2017-01-13T19:43:28Z,2017-03-12T19:47:59Z,CLOSED,False,5,5,1,https://github.com/acrisci,"i3bar: accept ""primary"" for output config option",1,['waiting'],https://github.com/i3/i3/pull/2319,https://github.com/stapelberg,7,https://github.com/i3/i3/pull/2319#issuecomment-236385196,"If ""primary"" is given in a bar block output directive and there is a
primary output configured, handle that output.
fixes #2311","I’m a bit confused — when opening https://github.com/i3/i3/pull/2319/files I only see changes to i3bar/src/outputs.c. What about all the changes which @wlhlm suggested in #2319 (comment), particularly the documentation update? And what about clearing the old output configuration, is that not necessary?",True,{}
i3/i3,https://github.com/i3/i3,2319,2016-04-24T19:44:39Z,2017-01-13T19:43:28Z,2017-03-12T19:47:59Z,CLOSED,False,5,5,1,https://github.com/acrisci,"i3bar: accept ""primary"" for output config option",1,['waiting'],https://github.com/i3/i3/pull/2319,https://github.com/wolfm89,8,https://github.com/i3/i3/pull/2319#issuecomment-285970251,"If ""primary"" is given in a bar block output directive and there is a
primary output configured, handle that output.
fixes #2311",When is this pull request going to be reviewed? I'd really love that feature.,True,{}
i3/i3,https://github.com/i3/i3,2319,2016-04-24T19:44:39Z,2017-01-13T19:43:28Z,2017-03-12T19:47:59Z,CLOSED,False,5,5,1,https://github.com/acrisci,"i3bar: accept ""primary"" for output config option",1,['waiting'],https://github.com/i3/i3/pull/2319,https://github.com/Airblader,9,https://github.com/i3/i3/pull/2319#issuecomment-285970392,"If ""primary"" is given in a bar block output directive and there is a
primary output configured, handle that output.
fixes #2311",It has been reviewed and rejected because nobody responded to the feedback. Feel free to pick up the work and open a new PR addressing the open points.,True,{'THUMBS_UP': ['https://github.com/wolfm89']}
i3/i3,https://github.com/i3/i3,2323,2016-04-25T18:41:20Z,2016-05-05T12:18:27Z,2016-09-25T22:46:56Z,MERGED,True,6,6,4,https://github.com/Airblader,Remove redundant depth argument from x_con_init().,1,[],https://github.com/i3/i3/pull/2323,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2323,,,True,{}
i3/i3,https://github.com/i3/i3,2323,2016-04-25T18:41:20Z,2016-05-05T12:18:27Z,2016-09-25T22:46:56Z,MERGED,True,6,6,4,https://github.com/Airblader,Remove redundant depth argument from x_con_init().,1,[],https://github.com/i3/i3/pull/2323,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/2323#issuecomment-214642758,,"Is this going to make the possible revert discussed in #2316 harder? If yes, I’d like to wait with merging.",True,{}
i3/i3,https://github.com/i3/i3,2323,2016-04-25T18:41:20Z,2016-05-05T12:18:27Z,2016-09-25T22:46:56Z,MERGED,True,6,6,4,https://github.com/Airblader,Remove redundant depth argument from x_con_init().,1,[],https://github.com/i3/i3/pull/2323,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2323#issuecomment-214672524,,"Since we don't need to revert the entire commit I think there's no overlap here, but given that this is just a tiny cleanup, let's wait just to be on the safe side.",True,{}
i3/i3,https://github.com/i3/i3,2323,2016-04-25T18:41:20Z,2016-05-05T12:18:27Z,2016-09-25T22:46:56Z,MERGED,True,6,6,4,https://github.com/Airblader,Remove redundant depth argument from x_con_init().,1,[],https://github.com/i3/i3/pull/2323,https://github.com/Airblader,4,https://github.com/i3/i3/pull/2323#issuecomment-216617110,,"@stapelberg We know now that this won't conflict even if we were to do the partial revert, so we can merge it, I think.",True,{}
i3/i3,https://github.com/i3/i3,2323,2016-04-25T18:41:20Z,2016-05-05T12:18:27Z,2016-09-25T22:46:56Z,MERGED,True,6,6,4,https://github.com/Airblader,Remove redundant depth argument from x_con_init().,1,[],https://github.com/i3/i3/pull/2323,https://github.com/yshui,5,https://github.com/i3/i3/pull/2323#issuecomment-227618614,,"Uhm, sorry. As the author of the original change, I'm asking why are you removing this?
This is needed if we are not going to use 32-bit depth for all windows (which is the revert you are talking about, right?).",True,{}
i3/i3,https://github.com/i3/i3,2323,2016-04-25T18:41:20Z,2016-05-05T12:18:27Z,2016-09-25T22:46:56Z,MERGED,True,6,6,4,https://github.com/Airblader,Remove redundant depth argument from x_con_init().,1,[],https://github.com/i3/i3/pull/2323,https://github.com/Airblader,6,https://github.com/i3/i3/pull/2323#issuecomment-227637938,,"No, see the comment above. Since we wouldn't need to revert entirely, this won't conflict.",True,{}
i3/i3,https://github.com/i3/i3,2323,2016-04-25T18:41:20Z,2016-05-05T12:18:27Z,2016-09-25T22:46:56Z,MERGED,True,6,6,4,https://github.com/Airblader,Remove redundant depth argument from x_con_init().,1,[],https://github.com/i3/i3/pull/2323,https://github.com/yshui,7,https://github.com/i3/i3/pull/2323#issuecomment-227658583,,What part are you planning to revert? You are going to revert to a state where no frame window is using the 32bit depth?,True,{}
i3/i3,https://github.com/i3/i3,2323,2016-04-25T18:41:20Z,2016-05-05T12:18:27Z,2016-09-25T22:46:56Z,MERGED,True,6,6,4,https://github.com/Airblader,Remove redundant depth argument from x_con_init().,1,[],https://github.com/i3/i3/pull/2323,https://github.com/Airblader,8,https://github.com/i3/i3/pull/2323#issuecomment-227659101,,"We're currently not planning on reverting anything. We are keeping the option open if more problems arise, but as of now, after many months of 4.12, only a single Raspberry user has reported issues. So IMHO there's no need for the revert right now. The patch that ""reverts"" support is described in the issue linked above.",True,{}
i3/i3,https://github.com/i3/i3,2323,2016-04-25T18:41:20Z,2016-05-05T12:18:27Z,2016-09-25T22:46:56Z,MERGED,True,6,6,4,https://github.com/Airblader,Remove redundant depth argument from x_con_init().,1,[],https://github.com/i3/i3/pull/2323,https://github.com/yshui,9,https://github.com/i3/i3/pull/2323#issuecomment-227660618,,"That makes sense.
Thanks.",True,{}
i3/i3,https://github.com/i3/i3,2330,2016-04-30T21:14:12Z,2016-05-01T16:59:50Z,2016-09-25T22:46:56Z,MERGED,True,2,19,1,https://github.com/Airblader,Remove title indentation in nested containers.,1,[],https://github.com/i3/i3/pull/2330,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2330,"This commit removes the title indentation in certain nested container
situations. The behavior was considered broken as it didn't seem to
make sense and it was unclear why this was introduced.
Given that nobody on i3-discuss@ complained about removing this logic
within two weeks, we are now removing it to make the title rendering
code a little less complex.
fixes #2247","This commit removes the title indentation in certain nested container
situations. The behavior was considered broken as it didn't seem to
make sense and it was unclear why this was introduced.
Given that nobody on i3-discuss@ complained about removing this logic
within two weeks, we are now removing it to make the title rendering
code a little less complex.
fixes #2247",True,{}
i3/i3,https://github.com/i3/i3,2331,2016-05-01T01:48:11Z,2016-08-28T16:28:55Z,2016-08-28T16:28:55Z,CLOSED,False,62,13,5,https://github.com/woodensquares,Multiple X screens and keyboard focus (issue #2082),1,[],https://github.com/i3/i3/pull/2331,https://github.com/woodensquares,1,https://github.com/i3/i3/pull/2331,"Let me know if you think this approach would be clean enough, if so I will investigate about seeing if I can get a test case working with multiple Xephyrs (as the test would have to simulate moving the mouse/keyboard in-between screens) and I will resubmit once I have that. The normal test suite runs clean, but of course it does not cover multiple X screen issues.","Let me know if you think this approach would be clean enough, if so I will investigate about seeing if I can get a test case working with multiple Xephyrs (as the test would have to simulate moving the mouse/keyboard in-between screens) and I will resubmit once I have that. The normal test suite runs clean, but of course it does not cover multiple X screen issues.",True,{'THUMBS_UP': ['https://github.com/Airblader']}
i3/i3,https://github.com/i3/i3,2331,2016-05-01T01:48:11Z,2016-08-28T16:28:55Z,2016-08-28T16:28:55Z,CLOSED,False,62,13,5,https://github.com/woodensquares,Multiple X screens and keyboard focus (issue #2082),1,[],https://github.com/i3/i3/pull/2331,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2331#issuecomment-216008336,"Let me know if you think this approach would be clean enough, if so I will investigate about seeing if I can get a test case working with multiple Xephyrs (as the test would have to simulate moving the mouse/keyboard in-between screens) and I will resubmit once I have that. The normal test suite runs clean, but of course it does not cover multiple X screen issues.","I've only given it a quick look, but in principle this looks good to me (I haven't tested it). I think you'll find writing a test to be rather difficult, I don't think the test infrastructure is set up to do this at the moment. I'd personally accept not having a test for it, though, of course, it would be quite nice if we did.",True,{}
i3/i3,https://github.com/i3/i3,2331,2016-05-01T01:48:11Z,2016-08-28T16:28:55Z,2016-08-28T16:28:55Z,CLOSED,False,62,13,5,https://github.com/woodensquares,Multiple X screens and keyboard focus (issue #2082),1,[],https://github.com/i3/i3/pull/2331,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2331#issuecomment-216008467,"Let me know if you think this approach would be clean enough, if so I will investigate about seeing if I can get a test case working with multiple Xephyrs (as the test would have to simulate moving the mouse/keyboard in-between screens) and I will resubmit once I have that. The normal test suite runs clean, but of course it does not cover multiple X screen issues.","One more thing, please be a little bit more specific in the commit message and describe the nature of the change in detail. Also, if you add a separate line to the commit message saying ""fixes #2082"", Github will connect the issue and PR and close the issue once the PR is merged.",True,{}
i3/i3,https://github.com/i3/i3,2331,2016-05-01T01:48:11Z,2016-08-28T16:28:55Z,2016-08-28T16:28:55Z,CLOSED,False,62,13,5,https://github.com/woodensquares,Multiple X screens and keyboard focus (issue #2082),1,[],https://github.com/i3/i3/pull/2331,https://github.com/woodensquares,4,https://github.com/i3/i3/pull/2331#issuecomment-216011718,"Let me know if you think this approach would be clean enough, if so I will investigate about seeing if I can get a test case working with multiple Xephyrs (as the test would have to simulate moving the mouse/keyboard in-between screens) and I will resubmit once I have that. The normal test suite runs clean, but of course it does not cover multiple X screen issues.","I have addressed your comments, squashed and changed the commit message, let me know if this is better, this said I would prefer to keep testing this a bit more if you don't mind just in case I have missed something (I run two X screens full time and use them quite a bit so if there are issues I should theoretically hit them hopefully)
Actually never mind, I see you have a few more comments, will take care of those",True,{}
i3/i3,https://github.com/i3/i3,2331,2016-05-01T01:48:11Z,2016-08-28T16:28:55Z,2016-08-28T16:28:55Z,CLOSED,False,62,13,5,https://github.com/woodensquares,Multiple X screens and keyboard focus (issue #2082),1,[],https://github.com/i3/i3/pull/2331,https://github.com/Airblader,5,https://github.com/i3/i3/pull/2331#issuecomment-216011878,"Let me know if you think this approach would be clean enough, if so I will investigate about seeing if I can get a test case working with multiple Xephyrs (as the test would have to simulate moving the mouse/keyboard in-between screens) and I will resubmit once I have that. The normal test suite runs clean, but of course it does not cover multiple X screen issues.","this said I would prefer to keep testing this a bit more if you don't mind

Absolutely. We're in no hurry, so take however much time you want to test it (Michael will be the one deciding on the merge anyway – I'm just here to leave my two cents). :-)",True,{}
i3/i3,https://github.com/i3/i3,2331,2016-05-01T01:48:11Z,2016-08-28T16:28:55Z,2016-08-28T16:28:55Z,CLOSED,False,62,13,5,https://github.com/woodensquares,Multiple X screens and keyboard focus (issue #2082),1,[],https://github.com/i3/i3/pull/2331,https://github.com/woodensquares,6,https://github.com/i3/i3/pull/2331#issuecomment-216017198,"Let me know if you think this approach would be clean enough, if so I will investigate about seeing if I can get a test case working with multiple Xephyrs (as the test would have to simulate moving the mouse/keyboard in-between screens) and I will resubmit once I have that. The normal test suite runs clean, but of course it does not cover multiple X screen issues.","will do, anyways in the meantime I have updated the pull with your latest comments, not sure if anybody here is using i3 on multiple X screens, but if anybody feels like testing this let me know if you see any issues",True,{}
i3/i3,https://github.com/i3/i3,2331,2016-05-01T01:48:11Z,2016-08-28T16:28:55Z,2016-08-28T16:28:55Z,CLOSED,False,62,13,5,https://github.com/woodensquares,Multiple X screens and keyboard focus (issue #2082),1,[],https://github.com/i3/i3/pull/2331,https://github.com/woodensquares,7,https://github.com/i3/i3/pull/2331#issuecomment-217605706,"Let me know if you think this approach would be clean enough, if so I will investigate about seeing if I can get a test case working with multiple Xephyrs (as the test would have to simulate moving the mouse/keyboard in-between screens) and I will resubmit once I have that. The normal test suite runs clean, but of course it does not cover multiple X screen issues.","Just chiming in after a week everything seems to be working well, the only unintuitive corner case-ish behavior I was able to trigger was this:
have a terminal open in both :0.0 and :0.1, in :0.1's terminal run sleep 10 ; exit, press enter then move the mouse to the one in :0.0, confirm that keyboard focus is there and wait, when the terminal in :0.1 will close the keyboard focus will leave and go to that screen
this is the log from i3 (both logs, from the i3 on :0.0 and :0.1) when this happens
https://gist.github.com/woodensquares/5aab31f7f05ddc3ae5c423cb5047f4bf
none of my code changes seem to be exercised by this, it's not a big deal, moving the mouse to another monitor and back fixes it, but it is surprising that the focus gets stolen by the other screen when a window there closes. Besides this corner case everything has been working well for me.",True,{}
i3/i3,https://github.com/i3/i3,2331,2016-05-01T01:48:11Z,2016-08-28T16:28:55Z,2016-08-28T16:28:55Z,CLOSED,False,62,13,5,https://github.com/woodensquares,Multiple X screens and keyboard focus (issue #2082),1,[],https://github.com/i3/i3/pull/2331,https://github.com/Airblader,8,https://github.com/i3/i3/pull/2331#issuecomment-236896909,"Let me know if you think this approach would be clean enough, if so I will investigate about seeing if I can get a test case working with multiple Xephyrs (as the test would have to simulate moving the mouse/keyboard in-between screens) and I will resubmit once I have that. The normal test suite runs clean, but of course it does not cover multiple X screen issues.",What's the status on this?,True,{}
i3/i3,https://github.com/i3/i3,2331,2016-05-01T01:48:11Z,2016-08-28T16:28:55Z,2016-08-28T16:28:55Z,CLOSED,False,62,13,5,https://github.com/woodensquares,Multiple X screens and keyboard focus (issue #2082),1,[],https://github.com/i3/i3/pull/2331,https://github.com/woodensquares,9,https://github.com/i3/i3/pull/2331#issuecomment-239788143,"Let me know if you think this approach would be clean enough, if so I will investigate about seeing if I can get a test case working with multiple Xephyrs (as the test would have to simulate moving the mouse/keyboard in-between screens) and I will resubmit once I have that. The normal test suite runs clean, but of course it does not cover multiple X screen issues.","sorry for the delay, was on vacation, I am still using this patch and it's been working fine for me over the months with the issue listed above with a window closing on a different screen that will steal the focus, which I was not able to fix.
Given that it is pretty niche to have more than one X screen it's really up to you if you think if it's worth mainlining this or leaving it as an open issues for the (likely very few) interested parties that would then patch i3 themselves if needed",True,{}
i3/i3,https://github.com/i3/i3,2331,2016-05-01T01:48:11Z,2016-08-28T16:28:55Z,2016-08-28T16:28:55Z,CLOSED,False,62,13,5,https://github.com/woodensquares,Multiple X screens and keyboard focus (issue #2082),1,[],https://github.com/i3/i3/pull/2331,https://github.com/Airblader,10,https://github.com/i3/i3/pull/2331#issuecomment-239880645,"Let me know if you think this approach would be clean enough, if so I will investigate about seeing if I can get a test case working with multiple Xephyrs (as the test would have to simulate moving the mouse/keyboard in-between screens) and I will resubmit once I have that. The normal test suite runs clean, but of course it does not cover multiple X screen issues.","I'm not opposed to merging this, but it's up to @stapelberg. In any case before a merge this needs a rebase.",True,{}
i3/i3,https://github.com/i3/i3,2331,2016-05-01T01:48:11Z,2016-08-28T16:28:55Z,2016-08-28T16:28:55Z,CLOSED,False,62,13,5,https://github.com/woodensquares,Multiple X screens and keyboard focus (issue #2082),1,[],https://github.com/i3/i3/pull/2331,https://github.com/stapelberg,11,https://github.com/i3/i3/pull/2331#issuecomment-240026676,"Let me know if you think this approach would be clean enough, if so I will investigate about seeing if I can get a test case working with multiple Xephyrs (as the test would have to simulate moving the mouse/keyboard in-between screens) and I will resubmit once I have that. The normal test suite runs clean, but of course it does not cover multiple X screen issues.","I’m leaning towards not merging this PR for now:

i3 doesn’t aim to support multi-screen setups. It’s not clear to me whether this PR is really all that’s necessary, or whether there are other corner cases that need to be addressed as well.
Even if the PR is all that’s needed for now, there might be regressions in the future because our core developers don’t use a multi-screen setup. This point could be addressed by extending the test suite, which would only be acceptable under the condition that doing so doesn’t significantly slow down the test suite. Even if the test suite was modified that way, it’s not clear who would maintain this feature and fix issues — I’m not keen on signing the core developers up to support a feature they don’t need.

I also don’t have a good intuition on user demand for this change. I’m guessing only a tiny minority of i3 users would benefit from this change.",True,{}
i3/i3,https://github.com/i3/i3,2331,2016-05-01T01:48:11Z,2016-08-28T16:28:55Z,2016-08-28T16:28:55Z,CLOSED,False,62,13,5,https://github.com/woodensquares,Multiple X screens and keyboard focus (issue #2082),1,[],https://github.com/i3/i3/pull/2331,https://github.com/Airblader,12,https://github.com/i3/i3/pull/2331#issuecomment-240027374,"Let me know if you think this approach would be clean enough, if so I will investigate about seeing if I can get a test case working with multiple Xephyrs (as the test would have to simulate moving the mouse/keyboard in-between screens) and I will resubmit once I have that. The normal test suite runs clean, but of course it does not cover multiple X screen issues.","I didn't really intend to take this PR as a ""we now support it"" change, but just as an improvement to the situation. Given that the changes aren't significantly complex, it would've been OK for me.
Since I'm not affected myself I of course don't feel strongly. We could also open a ""voting issue"" where we ask people coming across this to leave a vote if they're affected and then revisit with 4.14?",True,{}
i3/i3,https://github.com/i3/i3,2331,2016-05-01T01:48:11Z,2016-08-28T16:28:55Z,2016-08-28T16:28:55Z,CLOSED,False,62,13,5,https://github.com/woodensquares,Multiple X screens and keyboard focus (issue #2082),1,[],https://github.com/i3/i3/pull/2331,https://github.com/stapelberg,13,https://github.com/i3/i3/pull/2331#issuecomment-240028224,"Let me know if you think this approach would be clean enough, if so I will investigate about seeing if I can get a test case working with multiple Xephyrs (as the test would have to simulate moving the mouse/keyboard in-between screens) and I will resubmit once I have that. The normal test suite runs clean, but of course it does not cover multiple X screen issues.","I didn't really intend to take this PR as a ""we now support it"" change, but just as an improvement to the situation.

We currently don’t have that concept in i3 (at least AFAIR). We only have things that are supported, and things which are explicitly not supported but required for testing. We don’t currently have things that should work but if they break it’s too bad.

We could also open a ""voting issue"" where we ask people coming across this to leave a vote if they're affected and then revisit with 4.14?

That seems like a good way to judge user interest, yes.",True,{}
i3/i3,https://github.com/i3/i3,2331,2016-05-01T01:48:11Z,2016-08-28T16:28:55Z,2016-08-28T16:28:55Z,CLOSED,False,62,13,5,https://github.com/woodensquares,Multiple X screens and keyboard focus (issue #2082),1,[],https://github.com/i3/i3/pull/2331,https://github.com/Airblader,14,https://github.com/i3/i3/pull/2331#issuecomment-241198862,"Let me know if you think this approach would be clean enough, if so I will investigate about seeing if I can get a test case working with multiple Xephyrs (as the test would have to simulate moving the mouse/keyboard in-between screens) and I will resubmit once I have that. The normal test suite runs clean, but of course it does not cover multiple X screen issues.","We currently don’t have that concept in i3 (at least AFAIR).

I think we do – with compositing. Many i3 users use compositing and quite often i3 is only »usable« for them with a compositor. But at the same time we don't actively work on better / actual compositing support.",True,{}
i3/i3,https://github.com/i3/i3,2331,2016-05-01T01:48:11Z,2016-08-28T16:28:55Z,2016-08-28T16:28:55Z,CLOSED,False,62,13,5,https://github.com/woodensquares,Multiple X screens and keyboard focus (issue #2082),1,[],https://github.com/i3/i3/pull/2331,https://github.com/stapelberg,15,https://github.com/i3/i3/pull/2331#issuecomment-241280953,"Let me know if you think this approach would be clean enough, if so I will investigate about seeing if I can get a test case working with multiple Xephyrs (as the test would have to simulate moving the mouse/keyboard in-between screens) and I will resubmit once I have that. The normal test suite runs clean, but of course it does not cover multiple X screen issues.","I’d say compositing is explicitly not supported. It’s a sad fact that using a compositor sometimes seems required to work around bugs that are believed to reside outside of i3. People who run a compositor are not using a supported setup, but nevertheless it might work better for them than a supported setup.
I wonder if we’re getting too far down the rabbit hole with regards to definitions in this discussion, though, so let’s try to step back: even if one wants to see compositors as a precedent for not-supported-but-not-entirely-unsupported, I’d still argue we should try hard to not increase the number of such cases :).",True,{}
i3/i3,https://github.com/i3/i3,2331,2016-05-01T01:48:11Z,2016-08-28T16:28:55Z,2016-08-28T16:28:55Z,CLOSED,False,62,13,5,https://github.com/woodensquares,Multiple X screens and keyboard focus (issue #2082),1,[],https://github.com/i3/i3/pull/2331,https://github.com/Airblader,16,https://github.com/i3/i3/pull/2331#issuecomment-242014600,"Let me know if you think this approach would be clean enough, if so I will investigate about seeing if I can get a test case working with multiple Xephyrs (as the test would have to simulate moving the mouse/keyboard in-between screens) and I will resubmit once I have that. The normal test suite runs clean, but of course it does not cover multiple X screen issues.",Fair enough. Shall we close this then?,True,{}
i3/i3,https://github.com/i3/i3,2331,2016-05-01T01:48:11Z,2016-08-28T16:28:55Z,2016-08-28T16:28:55Z,CLOSED,False,62,13,5,https://github.com/woodensquares,Multiple X screens and keyboard focus (issue #2082),1,[],https://github.com/i3/i3/pull/2331,https://github.com/stapelberg,17,https://github.com/i3/i3/pull/2331#issuecomment-242983993,"Let me know if you think this approach would be clean enough, if so I will investigate about seeing if I can get a test case working with multiple Xephyrs (as the test would have to simulate moving the mouse/keyboard in-between screens) and I will resubmit once I have that. The normal test suite runs clean, but of course it does not cover multiple X screen issues.",Yep.,True,{}
i3/i3,https://github.com/i3/i3,2332,2016-05-01T17:47:01Z,2016-05-05T18:46:34Z,2016-09-25T22:46:56Z,MERGED,True,2,2,1,https://github.com/Airblader,Use the last known timestamp when calling xcb_set_input_focus().,1,[],https://github.com/i3/i3/pull/2332,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2332,"In most cases this won't make a difference, but consider the following
scenario:

Some application acquires input focus on its own (which the window manager
is not involved in, so it will ""always"" work).
Before the FocusIn / FocusOut events are processed by i3, the
workflow to push X changes is run, resulting in xcb_set_input_focus()
being called.

Using XCB_CURRENT_TIME, this means i3 will ""win"" and override the focus,
even though it simply wasn't aware (yet) that focus had already been taken
over by someone else. When processing the FocusIn / FocusOut events, i3
assumes that the focus is already set which results in a broken focus
state as i3 assumes some container has the input focus when it doesn't.
With the new behavior, i3's attempt to set the input focus will fail if
the FocusIn / FocusOut events have not yet processed. Once they are processed,
the focus state will be automatically corrected.
fixes #2322","In most cases this won't make a difference, but consider the following
scenario:

Some application acquires input focus on its own (which the window manager
is not involved in, so it will ""always"" work).
Before the FocusIn / FocusOut events are processed by i3, the
workflow to push X changes is run, resulting in xcb_set_input_focus()
being called.

Using XCB_CURRENT_TIME, this means i3 will ""win"" and override the focus,
even though it simply wasn't aware (yet) that focus had already been taken
over by someone else. When processing the FocusIn / FocusOut events, i3
assumes that the focus is already set which results in a broken focus
state as i3 assumes some container has the input focus when it doesn't.
With the new behavior, i3's attempt to set the input focus will fail if
the FocusIn / FocusOut events have not yet processed. Once they are processed,
the focus state will be automatically corrected.
fixes #2322",True,{}
i3/i3,https://github.com/i3/i3,2332,2016-05-01T17:47:01Z,2016-05-05T18:46:34Z,2016-09-25T22:46:56Z,MERGED,True,2,2,1,https://github.com/Airblader,Use the last known timestamp when calling xcb_set_input_focus().,1,[],https://github.com/i3/i3/pull/2332,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2332#issuecomment-216058361,"In most cases this won't make a difference, but consider the following
scenario:

Some application acquires input focus on its own (which the window manager
is not involved in, so it will ""always"" work).
Before the FocusIn / FocusOut events are processed by i3, the
workflow to push X changes is run, resulting in xcb_set_input_focus()
being called.

Using XCB_CURRENT_TIME, this means i3 will ""win"" and override the focus,
even though it simply wasn't aware (yet) that focus had already been taken
over by someone else. When processing the FocusIn / FocusOut events, i3
assumes that the focus is already set which results in a broken focus
state as i3 assumes some container has the input focus when it doesn't.
With the new behavior, i3's attempt to set the input focus will fail if
the FocusIn / FocusOut events have not yet processed. Once they are processed,
the focus state will be automatically corrected.
fixes #2322","On a side note, both awesome and Openbox do this as well. I've also checked that i3 updates last_timestamp in exactly the same cases as awesome.",True,{}
i3/i3,https://github.com/i3/i3,2335,2016-05-02T19:40:46Z,2017-01-13T19:43:31Z,2017-10-17T19:32:59Z,CLOSED,False,144,18,7,https://github.com/acrisci,Add the ipc shutdown event,1,['waiting'],https://github.com/i3/i3/pull/2335,https://github.com/acrisci,1,https://github.com/i3/i3/pull/2335,"This event is triggered when the connection to the ipc is about to
shutdown because of a user action such as with a restart or exit
command. The change field indicates why the ipc is shutting down. It
can be either ""restart"" or ""exit"".
fixes #2318","This event is triggered when the connection to the ipc is about to
shutdown because of a user action such as with a restart or exit
command. The change field indicates why the ipc is shutting down. It
can be either ""restart"" or ""exit"".
fixes #2318",True,{}
i3/i3,https://github.com/i3/i3,2335,2016-05-02T19:40:46Z,2017-01-13T19:43:31Z,2017-10-17T19:32:59Z,CLOSED,False,144,18,7,https://github.com/acrisci,Add the ipc shutdown event,1,['waiting'],https://github.com/i3/i3/pull/2335,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/2335#issuecomment-217360500,"This event is triggered when the connection to the ipc is about to
shutdown because of a user action such as with a restart or exit
command. The change field indicates why the ipc is shutting down. It
can be either ""restart"" or ""exit"".
fixes #2318",This makes the tests fail. Can you add an appropriate skip statement that verifies AnyEvent::I3 is new enough? See e.g. t/220-ipc-window-title.t for an example.,True,{}
i3/i3,https://github.com/i3/i3,2335,2016-05-02T19:40:46Z,2017-01-13T19:43:31Z,2017-10-17T19:32:59Z,CLOSED,False,144,18,7,https://github.com/acrisci,Add the ipc shutdown event,1,['waiting'],https://github.com/i3/i3/pull/2335,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2335#issuecomment-224035781,"This event is triggered when the connection to the ipc is about to
shutdown because of a user action such as with a restart or exit
command. The change field indicates why the ipc is shutting down. It
can be either ""restart"" or ""exit"".
fixes #2318",@acrisci You've opened a bunch of initial pull requests which all fail Travis. Are you going to keep working on these?,True,{}
i3/i3,https://github.com/i3/i3,2335,2016-05-02T19:40:46Z,2017-01-13T19:43:31Z,2017-10-17T19:32:59Z,CLOSED,False,144,18,7,https://github.com/acrisci,Add the ipc shutdown event,1,['waiting'],https://github.com/i3/i3/pull/2335,https://github.com/acrisci,4,https://github.com/i3/i3/pull/2335#issuecomment-227480346,"This event is triggered when the connection to the ipc is about to
shutdown because of a user action such as with a restart or exit
command. The change field indicates why the ipc is shutting down. It
can be either ""restart"" or ""exit"".
fixes #2318",Yeah sorry I've been kind of busy. Will try to finish this soon.,True,{}
i3/i3,https://github.com/i3/i3,2335,2016-05-02T19:40:46Z,2017-01-13T19:43:31Z,2017-10-17T19:32:59Z,CLOSED,False,144,18,7,https://github.com/acrisci,Add the ipc shutdown event,1,['waiting'],https://github.com/i3/i3/pull/2335,https://github.com/acrisci,5,https://github.com/i3/i3/pull/2335#issuecomment-234809418,"This event is triggered when the connection to the ipc is about to
shutdown because of a user action such as with a restart or exit
command. The change field indicates why the ipc is shutting down. It
can be either ""restart"" or ""exit"".
fixes #2318","Ok, I finally fixed this up.",True,{}
i3/i3,https://github.com/i3/i3,2335,2016-05-02T19:40:46Z,2017-01-13T19:43:31Z,2017-10-17T19:32:59Z,CLOSED,False,144,18,7,https://github.com/acrisci,Add the ipc shutdown event,1,['waiting'],https://github.com/i3/i3/pull/2335,https://github.com/stapelberg,6,https://github.com/i3/i3/pull/2335#issuecomment-236375732,"This event is triggered when the connection to the ipc is about to
shutdown because of a user action such as with a restart or exit
command. The change field indicates why the ipc is shutting down. It
can be either ""restart"" or ""exit"".
fixes #2318",Looks good overall.,True,{}
i3/i3,https://github.com/i3/i3,2335,2016-05-02T19:40:46Z,2017-01-13T19:43:31Z,2017-10-17T19:32:59Z,CLOSED,False,144,18,7,https://github.com/acrisci,Add the ipc shutdown event,1,['waiting'],https://github.com/i3/i3/pull/2335,https://github.com/acrisci,7,https://github.com/i3/i3/pull/2335#issuecomment-238005412,"This event is triggered when the connection to the ipc is about to
shutdown because of a user action such as with a restart or exit
command. The change field indicates why the ipc is shutting down. It
can be either ""restart"" or ""exit"".
fixes #2318",Ok I made the changes and it's ready for another review.,True,{}
i3/i3,https://github.com/i3/i3,2335,2016-05-02T19:40:46Z,2017-01-13T19:43:31Z,2017-10-17T19:32:59Z,CLOSED,False,144,18,7,https://github.com/acrisci,Add the ipc shutdown event,1,['waiting'],https://github.com/i3/i3/pull/2335,https://github.com/Airblader,8,https://github.com/i3/i3/pull/2335#issuecomment-238036819,"This event is triggered when the connection to the ipc is about to
shutdown because of a user action such as with a restart or exit
command. The change field indicates why the ipc is shutting down. It
can be either ""restart"" or ""exit"".
fixes #2318","You didn't actually undo the incorrect formatting, did you? We really shouldn't use 3.7, the breaks are really ugly. We have an open issue to move to a current version.",True,{}
i3/i3,https://github.com/i3/i3,2335,2016-05-02T19:40:46Z,2017-01-13T19:43:31Z,2017-10-17T19:32:59Z,CLOSED,False,144,18,7,https://github.com/acrisci,Add the ipc shutdown event,1,['waiting'],https://github.com/i3/i3/pull/2335,https://github.com/acrisci,9,https://github.com/i3/i3/pull/2335#issuecomment-238051175,"This event is triggered when the connection to the ipc is about to
shutdown because of a user action such as with a restart or exit
command. The change field indicates why the ipc is shutting down. It
can be either ""restart"" or ""exit"".
fixes #2318",OK wasn't paying that close attention to formatting. Is there documentation for this?,True,{}
i3/i3,https://github.com/i3/i3,2335,2016-05-02T19:40:46Z,2017-01-13T19:43:31Z,2017-10-17T19:32:59Z,CLOSED,False,144,18,7,https://github.com/acrisci,Add the ipc shutdown event,1,['waiting'],https://github.com/i3/i3/pull/2335,https://github.com/Airblader,10,https://github.com/i3/i3/pull/2335#issuecomment-238055205,"This event is triggered when the connection to the ipc is about to
shutdown because of a user action such as with a restart or exit
command. The change field indicates why the ipc is shutting down. It
can be either ""restart"" or ""exit"".
fixes #2318","Is there documentation for this?

We use clang35 with the .clang-format file in the repository. I don't think there's further documentation.
We do have #2174, though I personally don't agree with @stapelberg's suggestion there anymore. I know code style is more about having a consistent style than it is about what that style is, but personally I think the formatting clang37 uses (out of the box, anyway) is really, really bad, and I'd not want to have it. I think we should try to configure newer versions of clang to keep the code formatted the way it is today.",True,{}
i3/i3,https://github.com/i3/i3,2335,2016-05-02T19:40:46Z,2017-01-13T19:43:31Z,2017-10-17T19:32:59Z,CLOSED,False,144,18,7,https://github.com/acrisci,Add the ipc shutdown event,1,['waiting'],https://github.com/i3/i3/pull/2335,https://github.com/Airblader,11,https://github.com/i3/i3/pull/2335#issuecomment-252249795,"This event is triggered when the connection to the ipc is about to
shutdown because of a user action such as with a restart or exit
command. The change field indicates why the ipc is shutting down. It
can be either ""restart"" or ""exit"".
fixes #2318",@acrisci It's been two months (and longer for other PRs). Are you going to continue working on these PRs?,True,{}
i3/i3,https://github.com/i3/i3,2335,2016-05-02T19:40:46Z,2017-01-13T19:43:31Z,2017-10-17T19:32:59Z,CLOSED,False,144,18,7,https://github.com/acrisci,Add the ipc shutdown event,1,['waiting'],https://github.com/i3/i3/pull/2335,https://github.com/Airblader,12,https://github.com/i3/i3/pull/2335#issuecomment-271980563,"This event is triggered when the connection to the ipc is about to
shutdown because of a user action such as with a restart or exit
command. The change field indicates why the ipc is shutting down. It
can be either ""restart"" or ""exit"".
fixes #2318","@acrisci I'd appreciate some feedback on this. My impression is that you no longer work on i3, but switched your focus to sway instead. In that case we can close the PRs.",True,{}
i3/i3,https://github.com/i3/i3,2335,2016-05-02T19:40:46Z,2017-01-13T19:43:31Z,2017-10-17T19:32:59Z,CLOSED,False,144,18,7,https://github.com/acrisci,Add the ipc shutdown event,1,['waiting'],https://github.com/i3/i3/pull/2335,https://github.com/rsynnest,13,https://github.com/i3/i3/pull/2335#issuecomment-337343380,"This event is triggered when the connection to the ipc is about to
shutdown because of a user action such as with a restart or exit
command. The change field indicates why the ipc is shutting down. It
can be either ""restart"" or ""exit"".
fixes #2318","@Airblader From reading the comments I understand that this PR was valid but was in limbo due to a formatting issue with clang-format 3.5 -> 3.7.
Since you guys have moved to clang3.8 and accepted linebreaks (judging by #2547) , any chance you could reopen/merge this PR?
I ask because there are several bugs in an i3 plugin that should hopefully be fixed by this specific PR ( denesb/xfce4-i3-workspaces-plugin#30 altdesktop/i3ipc-glib#11 denesb/xfce4-i3-workspaces-plugin#25 denesb/xfce4-i3-workspaces-plugin#20 denesb/xfce4-i3-workspaces-plugin#7 ).
If you'd rather I submit a new PR I'd be happy to do so.",True,{}
i3/i3,https://github.com/i3/i3,2335,2016-05-02T19:40:46Z,2017-01-13T19:43:31Z,2017-10-17T19:32:59Z,CLOSED,False,144,18,7,https://github.com/acrisci,Add the ipc shutdown event,1,['waiting'],https://github.com/i3/i3/pull/2335,https://github.com/Airblader,14,https://github.com/i3/i3/pull/2335#issuecomment-337344911,"This event is triggered when the connection to the ipc is about to
shutdown because of a user action such as with a restart or exit
command. The change field indicates why the ipc is shutting down. It
can be either ""restart"" or ""exit"".
fixes #2318","I don't have the link right now, but there was a new PR for the shutdown event which has been merged and is in 4.14. You can see on the IPC docs on the website that there is a shutdown event.",True,{'THUMBS_UP': ['https://github.com/rsynnest']}
i3/i3,https://github.com/i3/i3,2336,2016-05-02T20:08:54Z,2016-05-07T22:33:11Z,2016-05-07T22:33:11Z,CLOSED,False,141,40,17,https://github.com/Airblader,Introduce title_alignment directive for window title alignment.,2,[],https://github.com/i3/i3/pull/2336,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2336,"This commit introduces a new config directive, title_alignment, which
controls how window titles are rendered (left, center, right).
fixes #1750","This commit introduces a new config directive, title_alignment, which
controls how window titles are rendered (left, center, right).
fixes #1750",True,{}
i3/i3,https://github.com/i3/i3,2336,2016-05-02T20:08:54Z,2016-05-07T22:33:11Z,2016-05-07T22:33:11Z,CLOSED,False,141,40,17,https://github.com/Airblader,Introduce title_alignment directive for window title alignment.,2,[],https://github.com/i3/i3/pull/2336,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2336#issuecomment-217672914,"This commit introduces a new config directive, title_alignment, which
controls how window titles are rendered (left, center, right).
fixes #1750","I'm closing this since the discussion isn't at a point I thought it was at yet. The PR is referenced in the issue, so we can revisit it if we want to. In the meantime there's no point in keeping it open.",True,{}
i3/i3,https://github.com/i3/i3,2337,2016-05-03T11:18:55Z,2016-05-08T10:49:25Z,2019-08-13T00:04:34Z,MERGED,True,124,81,3,https://github.com/Airblader,Properly close disabled outputs restored during a restart.,1,[],https://github.com/i3/i3/pull/2337,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2337,"If an output is disabled during a restart, for example because a binding
such as
bindsym $mod+Shift+r exec ""xrandr --auto"", restart

is used, it can happen that we first write the layout to disk and only
then receive the RandR change events. This leads to a situation where
the restored tree will contain these outputs, but the restarted i3
process will not receive the RandR events, thus the internal output in i3
is marked disabled.
This patch finds these cases after a restart and force-disables the
affected outputs.
fixes #2326","If an output is disabled during a restart, for example because a binding
such as
bindsym $mod+Shift+r exec ""xrandr --auto"", restart

is used, it can happen that we first write the layout to disk and only
then receive the RandR change events. This leads to a situation where
the restored tree will contain these outputs, but the restarted i3
process will not receive the RandR events, thus the internal output in i3
is marked disabled.
This patch finds these cases after a restart and force-disables the
affected outputs.
fixes #2326",True,{}
i3/i3,https://github.com/i3/i3,2337,2016-05-03T11:18:55Z,2016-05-08T10:49:25Z,2019-08-13T00:04:34Z,MERGED,True,124,81,3,https://github.com/Airblader,Properly close disabled outputs restored during a restart.,1,[],https://github.com/i3/i3/pull/2337,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2337#issuecomment-216499414,"If an output is disabled during a restart, for example because a binding
such as
bindsym $mod+Shift+r exec ""xrandr --auto"", restart

is used, it can happen that we first write the layout to disk and only
then receive the RandR change events. This leads to a situation where
the restored tree will contain these outputs, but the restarted i3
process will not receive the RandR events, thus the internal output in i3
is marked disabled.
This patch finds these cases after a restart and force-disables the
affected outputs.
fixes #2326",@zhou13 Can you please try the patch provided through this pull request as well? I've modified the approach slightly and want to ensure the fix still works. :-),True,{}
i3/i3,https://github.com/i3/i3,2337,2016-05-03T11:18:55Z,2016-05-08T10:49:25Z,2019-08-13T00:04:34Z,MERGED,True,124,81,3,https://github.com/Airblader,Properly close disabled outputs restored during a restart.,1,[],https://github.com/i3/i3/pull/2337,https://github.com/zhou13,3,https://github.com/i3/i3/pull/2337#issuecomment-217016771,"If an output is disabled during a restart, for example because a binding
such as
bindsym $mod+Shift+r exec ""xrandr --auto"", restart

is used, it can happen that we first write the layout to disk and only
then receive the RandR change events. This leads to a situation where
the restored tree will contain these outputs, but the restarted i3
process will not receive the RandR events, thus the internal output in i3
is marked disabled.
This patch finds these cases after a restart and force-disables the
affected outputs.
fixes #2326",I can confirm that this fix still works.,True,{}
i3/i3,https://github.com/i3/i3,2337,2016-05-03T11:18:55Z,2016-05-08T10:49:25Z,2019-08-13T00:04:34Z,MERGED,True,124,81,3,https://github.com/Airblader,Properly close disabled outputs restored during a restart.,1,[],https://github.com/i3/i3/pull/2337,https://github.com/Airblader,4,https://github.com/i3/i3/pull/2337#issuecomment-217018622,"If an output is disabled during a restart, for example because a binding
such as
bindsym $mod+Shift+r exec ""xrandr --auto"", restart

is used, it can happen that we first write the layout to disk and only
then receive the RandR change events. This leads to a situation where
the restored tree will contain these outputs, but the restarted i3
process will not receive the RandR events, thus the internal output in i3
is marked disabled.
This patch finds these cases after a restart and force-disables the
affected outputs.
fixes #2326","Great, thanks!",True,{}
i3/i3,https://github.com/i3/i3,2337,2016-05-03T11:18:55Z,2016-05-08T10:49:25Z,2019-08-13T00:04:34Z,MERGED,True,124,81,3,https://github.com/Airblader,Properly close disabled outputs restored during a restart.,1,[],https://github.com/i3/i3/pull/2337,https://github.com/stapelberg,5,https://github.com/i3/i3/pull/2337#issuecomment-217371411,"If an output is disabled during a restart, for example because a binding
such as
bindsym $mod+Shift+r exec ""xrandr --auto"", restart

is used, it can happen that we first write the layout to disk and only
then receive the RandR change events. This leads to a situation where
the restored tree will contain these outputs, but the restarted i3
process will not receive the RandR events, thus the internal output in i3
is marked disabled.
This patch finds these cases after a restart and force-disables the
affected outputs.
fixes #2326",Looks good overall.,True,{}
i3/i3,https://github.com/i3/i3,2337,2016-05-03T11:18:55Z,2016-05-08T10:49:25Z,2019-08-13T00:04:34Z,MERGED,True,124,81,3,https://github.com/Airblader,Properly close disabled outputs restored during a restart.,1,[],https://github.com/i3/i3/pull/2337,https://github.com/Airblader,6,https://github.com/i3/i3/pull/2337#issuecomment-217398822,"If an output is disabled during a restart, for example because a binding
such as
bindsym $mod+Shift+r exec ""xrandr --auto"", restart

is used, it can happen that we first write the layout to disk and only
then receive the RandR change events. This leads to a situation where
the restored tree will contain these outputs, but the restarted i3
process will not receive the RandR events, thus the internal output in i3
is marked disabled.
This patch finds these cases after a restart and force-disables the
affected outputs.
fixes #2326",@stapelberg Fixed.,True,{}
i3/i3,https://github.com/i3/i3,2337,2016-05-03T11:18:55Z,2016-05-08T10:49:25Z,2019-08-13T00:04:34Z,MERGED,True,124,81,3,https://github.com/Airblader,Properly close disabled outputs restored during a restart.,1,[],https://github.com/i3/i3/pull/2337,https://github.com/Airblader,7,https://github.com/i3/i3/pull/2337#issuecomment-217672861,"If an output is disabled during a restart, for example because a binding
such as
bindsym $mod+Shift+r exec ""xrandr --auto"", restart

is used, it can happen that we first write the layout to disk and only
then receive the RandR change events. This leads to a situation where
the restored tree will contain these outputs, but the restarted i3
process will not receive the RandR events, thus the internal output in i3
is marked disabled.
This patch finds these cases after a restart and force-disables the
affected outputs.
fixes #2326",@stapelberg Done.,True,{}
i3/i3,https://github.com/i3/i3,2337,2016-05-03T11:18:55Z,2016-05-08T10:49:25Z,2019-08-13T00:04:34Z,MERGED,True,124,81,3,https://github.com/Airblader,Properly close disabled outputs restored during a restart.,1,[],https://github.com/i3/i3/pull/2337,https://github.com/markbil,8,https://github.com/i3/i3/pull/2337#issuecomment-520221644,"If an output is disabled during a restart, for example because a binding
such as
bindsym $mod+Shift+r exec ""xrandr --auto"", restart

is used, it can happen that we first write the layout to disk and only
then receive the RandR change events. This leads to a situation where
the restored tree will contain these outputs, but the restarted i3
process will not receive the RandR events, thus the internal output in i3
is marked disabled.
This patch finds these cases after a restart and force-disables the
affected outputs.
fixes #2326",@Airblader has this fix been merged? I am running i3 version 4.14.1 (2017-09-24) - installed via apt on ubuntu - but experiencing the exact same issue as described in #2326. thank you!,True,{}
i3/i3,https://github.com/i3/i3,2337,2016-05-03T11:18:55Z,2016-05-08T10:49:25Z,2019-08-13T00:04:34Z,MERGED,True,124,81,3,https://github.com/Airblader,Properly close disabled outputs restored during a restart.,1,[],https://github.com/i3/i3/pull/2337,https://github.com/Airblader,9,https://github.com/i3/i3/pull/2337#issuecomment-520232145,"If an output is disabled during a restart, for example because a binding
such as
bindsym $mod+Shift+r exec ""xrandr --auto"", restart

is used, it can happen that we first write the layout to disk and only
then receive the RandR change events. This leads to a situation where
the restored tree will contain these outputs, but the restarted i3
process will not receive the RandR events, thus the internal output in i3
is marked disabled.
This patch finds these cases after a restart and force-disables the
affected outputs.
fixes #2326","@markbil Yes, it has been merged. If you're experiencing it still please reproduce it on the latest release version and open a new issue with the corresponding information. Thanks!",True,{}
i3/i3,https://github.com/i3/i3,2337,2016-05-03T11:18:55Z,2016-05-08T10:49:25Z,2019-08-13T00:04:34Z,MERGED,True,124,81,3,https://github.com/Airblader,Properly close disabled outputs restored during a restart.,1,[],https://github.com/i3/i3/pull/2337,https://github.com/markbil,10,https://github.com/i3/i3/pull/2337#issuecomment-520639168,"If an output is disabled during a restart, for example because a binding
such as
bindsym $mod+Shift+r exec ""xrandr --auto"", restart

is used, it can happen that we first write the layout to disk and only
then receive the RandR change events. This leads to a situation where
the restored tree will contain these outputs, but the restarted i3
process will not receive the RandR events, thus the internal output in i3
is marked disabled.
This patch finds these cases after a restart and force-disables the
affected outputs.
fixes #2326",@Airblader done. this is my first bug report for i3. let me know if anything is unclear.,True,{}
i3/i3,https://github.com/i3/i3,2338,2016-05-03T18:11:28Z,2016-05-05T12:18:04Z,2016-09-25T22:46:56Z,MERGED,True,0,235,9,https://github.com/Airblader,"Remove dead code guarded with ""#if 0 … #endif""",1,[],https://github.com/i3/i3/pull/2338,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2338,"This code has been neutralized for many years now and served no purpose
other than cluttering up the code. We obviously don't need it and it's
out of date anyway.
If there's ever any reason to restore (parts of) it, we have git for
that. But we don't need to keep commented out code around.","This code has been neutralized for many years now and served no purpose
other than cluttering up the code. We obviously don't need it and it's
out of date anyway.
If there's ever any reason to restore (parts of) it, we have git for
that. But we don't need to keep commented out code around.",True,{}
i3/i3,https://github.com/i3/i3,2340,2016-05-05T10:21:08Z,2016-09-26T16:45:58Z,2016-09-26T18:36:07Z,MERGED,True,75,3,5,https://github.com/cornerman,do not match docks in config and command criteria,1,[],https://github.com/i3/i3/pull/2340,https://github.com/cornerman,1,https://github.com/i3/i3/pull/2340,"When currently matching windows with criteria in the config or in a command, the dock clients are also matched. For example, running i3-msg [class=""i3bar""] fullscreen crashes i3 and i3-msg [class="".*""] move workspace current moves all windows including the i3bar windows as normal containers to the current workspace.
This seems wrong, as I cannot focus dock clients and therefore do not see a reason why criteria should match them to issue commands on them. So, I have changed the match struct to not match dock clients for command and config criteria. The matching for loading and restoring layout is left unchanged, as I was not sure whether it should apply here, too.","When currently matching windows with criteria in the config or in a command, the dock clients are also matched. For example, running i3-msg [class=""i3bar""] fullscreen crashes i3 and i3-msg [class="".*""] move workspace current moves all windows including the i3bar windows as normal containers to the current workspace.
This seems wrong, as I cannot focus dock clients and therefore do not see a reason why criteria should match them to issue commands on them. So, I have changed the match struct to not match dock clients for command and config criteria. The matching for loading and restoring layout is left unchanged, as I was not sure whether it should apply here, too.",True,{}
i3/i3,https://github.com/i3/i3,2340,2016-05-05T10:21:08Z,2016-09-26T16:45:58Z,2016-09-26T18:36:07Z,MERGED,True,75,3,5,https://github.com/cornerman,do not match docks in config and command criteria,1,[],https://github.com/i3/i3/pull/2340,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2340#issuecomment-217120492,"When currently matching windows with criteria in the config or in a command, the dock clients are also matched. For example, running i3-msg [class=""i3bar""] fullscreen crashes i3 and i3-msg [class="".*""] move workspace current moves all windows including the i3bar windows as normal containers to the current workspace.
This seems wrong, as I cannot focus dock clients and therefore do not see a reason why criteria should match them to issue commands on them. So, I have changed the match struct to not match dock clients for command and config criteria. The matching for loading and restoring layout is left unchanged, as I was not sure whether it should apply here, too.","I have mixed feelings about unconditionally excluding dock windows from match criteria. I think I prefer each command deciding on its own which window / container it can apply to, with repetition being avoided by proper refactoring.
On the other hand, we've had problems with this multiple times in the past and the only command that I could see be useful for dock windows at the moment is kill, and even that only in scripts and as a very theoretical usecase.",True,{}
i3/i3,https://github.com/i3/i3,2340,2016-05-05T10:21:08Z,2016-09-26T16:45:58Z,2016-09-26T18:36:07Z,MERGED,True,75,3,5,https://github.com/cornerman,do not match docks in config and command criteria,1,[],https://github.com/i3/i3/pull/2340,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2340#issuecomment-217120806,"When currently matching windows with criteria in the config or in a command, the dock clients are also matched. For example, running i3-msg [class=""i3bar""] fullscreen crashes i3 and i3-msg [class="".*""] move workspace current moves all windows including the i3bar windows as normal containers to the current workspace.
This seems wrong, as I cannot focus dock clients and therefore do not see a reason why criteria should match them to issue commands on them. So, I have changed the match struct to not match dock clients for command and config criteria. The matching for loading and restoring layout is left unchanged, as I was not sure whether it should apply here, too.","Addendum: I think the best argument in favor of this change at the moment is the class=.* match. But this could also be solved otherwise, for example with a nodock criterion, or even con_type=leaf|nested|dock.
It should also be noted that class=.* will not actually apply to all windows, but only to those that set WM_CLASS.",True,{}
i3/i3,https://github.com/i3/i3,2340,2016-05-05T10:21:08Z,2016-09-26T16:45:58Z,2016-09-26T18:36:07Z,MERGED,True,75,3,5,https://github.com/cornerman,do not match docks in config and command criteria,1,[],https://github.com/i3/i3/pull/2340,https://github.com/cornerman,4,https://github.com/i3/i3/pull/2340#issuecomment-217121571,"When currently matching windows with criteria in the config or in a command, the dock clients are also matched. For example, running i3-msg [class=""i3bar""] fullscreen crashes i3 and i3-msg [class="".*""] move workspace current moves all windows including the i3bar windows as normal containers to the current workspace.
This seems wrong, as I cannot focus dock clients and therefore do not see a reason why criteria should match them to issue commands on them. So, I have changed the match struct to not match dock clients for command and config criteria. The matching for loading and restoring layout is left unchanged, as I was not sure whether it should apply here, too.","I understand the problem with unconditionally excluding dock clients, but, as you said, especially the class=.* match is probably undesired by the user. I also only see a usecase for the kill command on dock clients, but that could also be achieved with xkill.
Not sure whether adding an option to the crtiteria would be worth it. But if you decide for an extra option, I would be in favor of excluding dock clients by default. Then, it might be a good idea to revisit the commands and check which ones can actually operate on docks.",True,{}
i3/i3,https://github.com/i3/i3,2340,2016-05-05T10:21:08Z,2016-09-26T16:45:58Z,2016-09-26T18:36:07Z,MERGED,True,75,3,5,https://github.com/cornerman,do not match docks in config and command criteria,1,[],https://github.com/i3/i3/pull/2340,https://github.com/Airblader,5,https://github.com/i3/i3/pull/2340#issuecomment-217122121,"When currently matching windows with criteria in the config or in a command, the dock clients are also matched. For example, running i3-msg [class=""i3bar""] fullscreen crashes i3 and i3-msg [class="".*""] move workspace current moves all windows including the i3bar windows as normal containers to the current workspace.
This seems wrong, as I cannot focus dock clients and therefore do not see a reason why criteria should match them to issue commands on them. So, I have changed the match struct to not match dock clients for command and config criteria. The matching for loading and restoring layout is left unchanged, as I was not sure whether it should apply here, too.","especially the class=.* match is probably undesired by the user

But as I explained above, this match doesn't actually do what the user expects it to do anyway. I don't think it's a good idea for a user to match this way.

but that could also be achieved with xkill.

But that's not an i3 command.

But if you decide for an extra option, I would be in favor of excluding dock clients by default.

All match criteria are ANDed, there's no way to OR them, so this wouldn't help.",True,{}
i3/i3,https://github.com/i3/i3,2340,2016-05-05T10:21:08Z,2016-09-26T16:45:58Z,2016-09-26T18:36:07Z,MERGED,True,75,3,5,https://github.com/cornerman,do not match docks in config and command criteria,1,[],https://github.com/i3/i3/pull/2340,https://github.com/Airblader,6,https://github.com/i3/i3/pull/2340#issuecomment-217122839,"When currently matching windows with criteria in the config or in a command, the dock clients are also matched. For example, running i3-msg [class=""i3bar""] fullscreen crashes i3 and i3-msg [class="".*""] move workspace current moves all windows including the i3bar windows as normal containers to the current workspace.
This seems wrong, as I cannot focus dock clients and therefore do not see a reason why criteria should match them to issue commands on them. So, I have changed the match struct to not match dock clients for command and config criteria. The matching for loading and restoring layout is left unchanged, as I was not sure whether it should apply here, too.","I retract my first point in the previous comment. WM_CLASS is a mandatory property of any mapped window, so we should take the position that we can in fact expect it to be present on windows. Which means a user should be able to expect class=.* to match ""all windows"".
The other point still stands, though, excluding docks by default would render an additional criterion useless unless we implement a full conjunctive normal form.
I'm not decisively against this change, by the way; as I said, I just have mixed feelings at the moment.",True,{}
i3/i3,https://github.com/i3/i3,2340,2016-05-05T10:21:08Z,2016-09-26T16:45:58Z,2016-09-26T18:36:07Z,MERGED,True,75,3,5,https://github.com/cornerman,do not match docks in config and command criteria,1,[],https://github.com/i3/i3/pull/2340,https://github.com/cornerman,7,https://github.com/i3/i3/pull/2340#issuecomment-217125129,"When currently matching windows with criteria in the config or in a command, the dock clients are also matched. For example, running i3-msg [class=""i3bar""] fullscreen crashes i3 and i3-msg [class="".*""] move workspace current moves all windows including the i3bar windows as normal containers to the current workspace.
This seems wrong, as I cannot focus dock clients and therefore do not see a reason why criteria should match them to issue commands on them. So, I have changed the match struct to not match dock clients for command and config criteria. The matching for loading and restoring layout is left unchanged, as I was not sure whether it should apply here, too.","All match criteria are ANDed, there's no way to OR them, so this wouldn't help.

I do not see the problem with excluding dock clients by default. As you said, one could add an additional criterion for docks and whether you switch dock clients off or on shouldn't make a difference, does it?",True,{}
i3/i3,https://github.com/i3/i3,2340,2016-05-05T10:21:08Z,2016-09-26T16:45:58Z,2016-09-26T18:36:07Z,MERGED,True,75,3,5,https://github.com/cornerman,do not match docks in config and command criteria,1,[],https://github.com/i3/i3/pull/2340,https://github.com/cornerman,8,https://github.com/i3/i3/pull/2340#issuecomment-217126453,"When currently matching windows with criteria in the config or in a command, the dock clients are also matched. For example, running i3-msg [class=""i3bar""] fullscreen crashes i3 and i3-msg [class="".*""] move workspace current moves all windows including the i3bar windows as normal containers to the current workspace.
This seems wrong, as I cannot focus dock clients and therefore do not see a reason why criteria should match them to issue commands on them. So, I have changed the match struct to not match dock clients for command and config criteria. The matching for loading and restoring layout is left unchanged, as I was not sure whether it should apply here, too.","I'm not decisively against this change, by the way; as I said, I just have mixed feelings at the moment.

Sure, no need to rush things. Also, I am not really familiar with layout loading but should this be done there as well?",True,{}
i3/i3,https://github.com/i3/i3,2340,2016-05-05T10:21:08Z,2016-09-26T16:45:58Z,2016-09-26T18:36:07Z,MERGED,True,75,3,5,https://github.com/cornerman,do not match docks in config and command criteria,1,[],https://github.com/i3/i3/pull/2340,https://github.com/acrisci,9,https://github.com/i3/i3/pull/2340#issuecomment-217317089,"When currently matching windows with criteria in the config or in a command, the dock clients are also matched. For example, running i3-msg [class=""i3bar""] fullscreen crashes i3 and i3-msg [class="".*""] move workspace current moves all windows including the i3bar windows as normal containers to the current workspace.
This seems wrong, as I cannot focus dock clients and therefore do not see a reason why criteria should match them to issue commands on them. So, I have changed the match struct to not match dock clients for command and config criteria. The matching for loading and restoring layout is left unchanged, as I was not sure whether it should apply here, too.","If i3bar is the only dock client we are talking about, then of course it makes sense to exclude dock clients because i3bar should imo never be the target of commands. kill might be the only close to valid command, but we support all the reasons why you would do that with features like reload, restart, and the commands to hide the bar.
Are there any other dock windows in common use to take into consideration? Can we imagine a dock window for which it would be valid to move between workspaces, or other commands like that?
If the ""select all windows"" use case is the only thing we want to support, instead of nerfing criteria, how about simply introducing a new kind of selection criteria just for this purpose?
i3-msg '[all_windows] kill'

And then we can define a ""window"" for this purpose to exclude dock windows.
I'm just thinking aloud here.",True,{}
i3/i3,https://github.com/i3/i3,2340,2016-05-05T10:21:08Z,2016-09-26T16:45:58Z,2016-09-26T18:36:07Z,MERGED,True,75,3,5,https://github.com/cornerman,do not match docks in config and command criteria,1,[],https://github.com/i3/i3/pull/2340,https://github.com/acrisci,10,https://github.com/i3/i3/pull/2340#issuecomment-217318392,"When currently matching windows with criteria in the config or in a command, the dock clients are also matched. For example, running i3-msg [class=""i3bar""] fullscreen crashes i3 and i3-msg [class="".*""] move workspace current moves all windows including the i3bar windows as normal containers to the current workspace.
This seems wrong, as I cannot focus dock clients and therefore do not see a reason why criteria should match them to issue commands on them. So, I have changed the match struct to not match dock clients for command and config criteria. The matching for loading and restoring layout is left unchanged, as I was not sure whether it should apply here, too.","So it appears that dock windows actually should not be moved (unless they themselves request to be moved).
_NET_WM_STRUT_PARTIAL determines the location of the dock window at the edge of the screen so the wm cannot move the dock window.
So my thinking now is that dock windows are essentially like unmanaged windows, since they cannot accept focus or be moved by the window manager. So maybe criteria should only be applied to proper managed windows. Pretty much every command makes the assumption that the window is managed (including kill, since you can make the case that we should probably not be killing an unmanaged window from i3 at all).
I think that is strong reasoning for excluding dock windows from criteria.",True,{}
i3/i3,https://github.com/i3/i3,2340,2016-05-05T10:21:08Z,2016-09-26T16:45:58Z,2016-09-26T18:36:07Z,MERGED,True,75,3,5,https://github.com/cornerman,do not match docks in config and command criteria,1,[],https://github.com/i3/i3/pull/2340,https://github.com/Airblader,11,https://github.com/i3/i3/pull/2340#issuecomment-241198792,"When currently matching windows with criteria in the config or in a command, the dock clients are also matched. For example, running i3-msg [class=""i3bar""] fullscreen crashes i3 and i3-msg [class="".*""] move workspace current moves all windows including the i3bar windows as normal containers to the current workspace.
This seems wrong, as I cannot focus dock clients and therefore do not see a reason why criteria should match them to issue commands on them. So, I have changed the match struct to not match dock clients for command and config criteria. The matching for loading and restoring layout is left unchanged, as I was not sure whether it should apply here, too.",@stapelberg This PR has been around for a while now. Should we go ahead with it and get the PR rebased?,True,{}
i3/i3,https://github.com/i3/i3,2340,2016-05-05T10:21:08Z,2016-09-26T16:45:58Z,2016-09-26T18:36:07Z,MERGED,True,75,3,5,https://github.com/cornerman,do not match docks in config and command criteria,1,[],https://github.com/i3/i3/pull/2340,https://github.com/stapelberg,12,https://github.com/i3/i3/pull/2340#issuecomment-241980126,"When currently matching windows with criteria in the config or in a command, the dock clients are also matched. For example, running i3-msg [class=""i3bar""] fullscreen crashes i3 and i3-msg [class="".*""] move workspace current moves all windows including the i3bar windows as normal containers to the current workspace.
This seems wrong, as I cannot focus dock clients and therefore do not see a reason why criteria should match them to issue commands on them. So, I have changed the match struct to not match dock clients for command and config criteria. The matching for loading and restoring layout is left unchanged, as I was not sure whether it should apply here, too.","Yes.
@cornerman Could you rebase please?",True,{}
i3/i3,https://github.com/i3/i3,2340,2016-05-05T10:21:08Z,2016-09-26T16:45:58Z,2016-09-26T18:36:07Z,MERGED,True,75,3,5,https://github.com/cornerman,do not match docks in config and command criteria,1,[],https://github.com/i3/i3/pull/2340,https://github.com/cornerman,13,https://github.com/i3/i3/pull/2340#issuecomment-242503695,"When currently matching windows with criteria in the config or in a command, the dock clients are also matched. For example, running i3-msg [class=""i3bar""] fullscreen crashes i3 and i3-msg [class="".*""] move workspace current moves all windows including the i3bar windows as normal containers to the current workspace.
This seems wrong, as I cannot focus dock clients and therefore do not see a reason why criteria should match them to issue commands on them. So, I have changed the match struct to not match dock clients for command and config criteria. The matching for loading and restoring layout is left unchanged, as I was not sure whether it should apply here, too.","@stapelberg Done!
Though one test is failing on travis, all tests pass on my machine.",True,{}
i3/i3,https://github.com/i3/i3,2340,2016-05-05T10:21:08Z,2016-09-26T16:45:58Z,2016-09-26T18:36:07Z,MERGED,True,75,3,5,https://github.com/cornerman,do not match docks in config and command criteria,1,[],https://github.com/i3/i3/pull/2340,https://github.com/stapelberg,14,https://github.com/i3/i3/pull/2340#issuecomment-242985630,"When currently matching windows with criteria in the config or in a command, the dock clients are also matched. For example, running i3-msg [class=""i3bar""] fullscreen crashes i3 and i3-msg [class="".*""] move workspace current moves all windows including the i3bar windows as normal containers to the current workspace.
This seems wrong, as I cannot focus dock clients and therefore do not see a reason why criteria should match them to issue commands on them. So, I have changed the match struct to not match dock clients for command and config criteria. The matching for loading and restoring layout is left unchanged, as I was not sure whether it should apply here, too.","I’ll have to insist on getting the tests passing on travis, as travis is instrumental for judging whether contributions are safe to merge. Given that the test failed in both runs (gcc and clang) and over two separate attempts (when you pushed, and after I restarted the test just now), it does not seem to be a one-time flake.
See https://github.com/i3/i3/blob/next/.travis.yml for details on our travis setup. You should be able to run the Docker containers from https://hub.docker.com/r/i3wm/ to get the same environment that we use on travis.
Let me know if you still have trouble reproducing the issue.",True,{}
i3/i3,https://github.com/i3/i3,2340,2016-05-05T10:21:08Z,2016-09-26T16:45:58Z,2016-09-26T18:36:07Z,MERGED,True,75,3,5,https://github.com/cornerman,do not match docks in config and command criteria,1,[],https://github.com/i3/i3/pull/2340,https://github.com/stapelberg,15,https://github.com/i3/i3/pull/2340#issuecomment-249624288,"When currently matching windows with criteria in the config or in a command, the dock clients are also matched. For example, running i3-msg [class=""i3bar""] fullscreen crashes i3 and i3-msg [class="".*""] move workspace current moves all windows including the i3bar windows as normal containers to the current workspace.
This seems wrong, as I cannot focus dock clients and therefore do not see a reason why criteria should match them to issue commands on them. So, I have changed the match struct to not match dock clients for command and config criteria. The matching for loading and restoring layout is left unchanged, as I was not sure whether it should apply here, too.",Can you rebase please?,True,{}
i3/i3,https://github.com/i3/i3,2340,2016-05-05T10:21:08Z,2016-09-26T16:45:58Z,2016-09-26T18:36:07Z,MERGED,True,75,3,5,https://github.com/cornerman,do not match docks in config and command criteria,1,[],https://github.com/i3/i3/pull/2340,https://github.com/cornerman,16,https://github.com/i3/i3/pull/2340#issuecomment-249625338,"When currently matching windows with criteria in the config or in a command, the dock clients are also matched. For example, running i3-msg [class=""i3bar""] fullscreen crashes i3 and i3-msg [class="".*""] move workspace current moves all windows including the i3bar windows as normal containers to the current workspace.
This seems wrong, as I cannot focus dock clients and therefore do not see a reason why criteria should match them to issue commands on them. So, I have changed the match struct to not match dock clients for command and config criteria. The matching for loading and restoring layout is left unchanged, as I was not sure whether it should apply here, too.",@stapelberg yes!,True,{}
i3/i3,https://github.com/i3/i3,2343,2016-05-05T19:34:12Z,2016-05-05T21:10:50Z,2016-05-05T21:28:39Z,CLOSED,False,2,0,1,https://github.com/daniellockyer,i3-input@main.c: free a duplicated string if we exit early,1,[],https://github.com/i3/i3/pull/2343,https://github.com/daniellockyer,1,https://github.com/i3/i3/pull/2343,,,True,{}
i3/i3,https://github.com/i3/i3,2343,2016-05-05T19:34:12Z,2016-05-05T21:10:50Z,2016-05-05T21:28:39Z,CLOSED,False,2,0,1,https://github.com/daniellockyer,i3-input@main.c: free a duplicated string if we exit early,1,[],https://github.com/i3/i3/pull/2343,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/2343#issuecomment-217281112,,"This is not a memleak. When returning from main, the process exits and the operating system reclaims the memory. We don’t free memory before exiting in other parts of i3 either.",True,{}
i3/i3,https://github.com/i3/i3,2344,2016-05-05T20:21:07Z,2016-06-06T17:53:10Z,2016-06-06T17:53:10Z,CLOSED,False,1,1,1,https://github.com/madroach,Use posixly correct getopt in i3-msg,1,[],https://github.com/i3/i3/pull/2344,https://github.com/madroach,1,https://github.com/i3/i3/pull/2344,"This allows calling 'i3-msg mark --toggle test' without '--' or quoting.
resolves #2339","This allows calling 'i3-msg mark --toggle test' without '--' or quoting.
resolves #2339",True,{'THUMBS_UP': ['https://github.com/Airblader']}
i3/i3,https://github.com/i3/i3,2344,2016-05-05T20:21:07Z,2016-06-06T17:53:10Z,2016-06-06T17:53:10Z,CLOSED,False,1,1,1,https://github.com/madroach,Use posixly correct getopt in i3-msg,1,[],https://github.com/i3/i3/pull/2344,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2344#issuecomment-217267198,"This allows calling 'i3-msg mark --toggle test' without '--' or quoting.
resolves #2339",If this is all it takes then I'll gladly change my opinion :-),True,{}
i3/i3,https://github.com/i3/i3,2344,2016-05-05T20:21:07Z,2016-06-06T17:53:10Z,2016-06-06T17:53:10Z,CLOSED,False,1,1,1,https://github.com/madroach,Use posixly correct getopt in i3-msg,1,[],https://github.com/i3/i3/pull/2344,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/2344#issuecomment-217372404,"This allows calling 'i3-msg mark --toggle test' without '--' or quoting.
resolves #2339","I’m not sure this is a good idea, actually.
I think I’d prefer it if users who like this behavior would set the POSIXLY_CORRECT environment variable instead of forcing all users of i3-msg to the posixly correct behavior.",True,{}
i3/i3,https://github.com/i3/i3,2344,2016-05-05T20:21:07Z,2016-06-06T17:53:10Z,2016-06-06T17:53:10Z,CLOSED,False,1,1,1,https://github.com/madroach,Use posixly correct getopt in i3-msg,1,[],https://github.com/i3/i3/pull/2344,https://github.com/madroach,4,https://github.com/i3/i3/pull/2344#issuecomment-217485273,"This allows calling 'i3-msg mark --toggle test' without '--' or quoting.
resolves #2339","I'm used to the 'first positional argument cancels option processing' behaviour similar commands like sudo, doas, xargs use. It is the reasonable behaviour for this kind of command.
Ever tried touch foo -bar? or mv foo -foobar. Seems like few commands actually use the non-posix behaviour. The non-posix commands usually pay close attention to the order and association of options with positional parameters. sox comes to mind. i3-msg does not belong in that class of commands, but rather fits well with xargs and sudo.
Where's the downside of it? In what way do you think are people without POSIXLY_CORRECT forced to type different commands?",True,{}
i3/i3,https://github.com/i3/i3,2344,2016-05-05T20:21:07Z,2016-06-06T17:53:10Z,2016-06-06T17:53:10Z,CLOSED,False,1,1,1,https://github.com/madroach,Use posixly correct getopt in i3-msg,1,[],https://github.com/i3/i3/pull/2344,https://github.com/jolange,5,https://github.com/i3/i3/pull/2344#issuecomment-217653476,"This allows calling 'i3-msg mark --toggle test' without '--' or quoting.
resolves #2339","I don't have a strong preference here, but it certainly changes behaviour: i3-msg floating toggle --quiet would no longer work.",True,{}
i3/i3,https://github.com/i3/i3,2344,2016-05-05T20:21:07Z,2016-06-06T17:53:10Z,2016-06-06T17:53:10Z,CLOSED,False,1,1,1,https://github.com/madroach,Use posixly correct getopt in i3-msg,1,[],https://github.com/i3/i3/pull/2344,https://github.com/stapelberg,6,https://github.com/i3/i3/pull/2344#issuecomment-217671544,"This allows calling 'i3-msg mark --toggle test' without '--' or quoting.
resolves #2339","Where's the downside of it?

My biggest concern is what @jolange mentioned: we’d be changing i3-msg’s behavior in such a way that it might break existing user’s scripts. Currently, I’m favoring not risking any breakage over changing the behavior to better suit an individual user.",True,{}
i3/i3,https://github.com/i3/i3,2344,2016-05-05T20:21:07Z,2016-06-06T17:53:10Z,2016-06-06T17:53:10Z,CLOSED,False,1,1,1,https://github.com/madroach,Use posixly correct getopt in i3-msg,1,[],https://github.com/i3/i3/pull/2344,https://github.com/Airblader,7,https://github.com/i3/i3/pull/2344#issuecomment-224035603,"This allows calling 'i3-msg mark --toggle test' without '--' or quoting.
resolves #2339","It's been a month without any further arguments on why to favor this change, so I'll close the PR.",True,{}
i3/i3,https://github.com/i3/i3,2345,2016-05-08T17:22:06Z,2016-05-11T18:11:04Z,2016-09-25T22:46:56Z,MERGED,True,74,31,2,https://github.com/Airblader,Split list of config directives in tests.,1,[],https://github.com/i3/i3/pull/2345,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2345,This makes adding new directives less prone to merge conflicts.,This makes adding new directives less prone to merge conflicts.,True,{}
i3/i3,https://github.com/i3/i3,2345,2016-05-08T17:22:06Z,2016-05-11T18:11:04Z,2016-09-25T22:46:56Z,MERGED,True,74,31,2,https://github.com/Airblader,Split list of config directives in tests.,1,[],https://github.com/i3/i3/pull/2345,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2345#issuecomment-218529074,This makes adding new directives less prone to merge conflicts.,@stapelberg Updated!,True,{}
i3/i3,https://github.com/i3/i3,2349,2016-05-11T17:02:04Z,2016-05-11T18:11:35Z,2016-09-25T22:46:56Z,MERGED,True,4,5,1,https://github.com/Airblader,Don't trigger binding on window border click unless --border is given.,1,[],https://github.com/i3/i3/pull/2349,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2349,"Prior to this commit a binding specifying only --whole-window would
trigger even when clicking on the window border. However, this should
only happen if --border is specified.
fixes #2348","Prior to this commit a binding specifying only --whole-window would
trigger even when clicking on the window border. However, this should
only happen if --border is specified.
fixes #2348",True,{}
i3/i3,https://github.com/i3/i3,2350,2016-05-12T18:19:27Z,2016-06-15T18:19:16Z,2016-09-25T22:46:56Z,MERGED,True,57,24,8,https://github.com/madroach,Fix building and testing on OpenBSD,4,[],https://github.com/i3/i3/pull/2350,https://github.com/madroach,1,https://github.com/i3/i3/pull/2350,"Those changes allow building on OpenBSD whose pthread implementation in not feature complete.
in sd-daemon.c there is this !defined(__linux__) check. I couldn't find any Linuxism in the following code and it builds just fine on OpenBSD. Maybe remove the check altogether instead of just checking for OpenBSD?","Those changes allow building on OpenBSD whose pthread implementation in not feature complete.
in sd-daemon.c there is this !defined(__linux__) check. I couldn't find any Linuxism in the following code and it builds just fine on OpenBSD. Maybe remove the check altogether instead of just checking for OpenBSD?",True,{}
i3/i3,https://github.com/i3/i3,2350,2016-05-12T18:19:27Z,2016-06-15T18:19:16Z,2016-09-25T22:46:56Z,MERGED,True,57,24,8,https://github.com/madroach,Fix building and testing on OpenBSD,4,[],https://github.com/i3/i3/pull/2350,https://github.com/madroach,2,https://github.com/i3/i3/pull/2350#issuecomment-218845912,"Those changes allow building on OpenBSD whose pthread implementation in not feature complete.
in sd-daemon.c there is this !defined(__linux__) check. I couldn't find any Linuxism in the following code and it builds just fine on OpenBSD. Maybe remove the check altogether instead of just checking for OpenBSD?",travis complains about the code formatting. What's wrong with it in i3-dump-log/main.c?,True,{}
i3/i3,https://github.com/i3/i3,2350,2016-05-12T18:19:27Z,2016-06-15T18:19:16Z,2016-09-25T22:46:56Z,MERGED,True,57,24,8,https://github.com/madroach,Fix building and testing on OpenBSD,4,[],https://github.com/i3/i3/pull/2350,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2350#issuecomment-218848441,"Those changes allow building on OpenBSD whose pthread implementation in not feature complete.
in sd-daemon.c there is this !defined(__linux__) check. I couldn't find any Linuxism in the following code and it builds just fine on OpenBSD. Maybe remove the check altogether instead of just checking for OpenBSD?","@madroach Travis actually tells you what's wrong :)
+ git diff --exit-code
diff --git a/i3-dump-log/main.c b/i3-dump-log/main.c
index b63e90b..665dc4a 100644
--- a/i3-dump-log/main.c
+++ b/i3-dump-log/main.c
@@ -75,7 +75,8 @@ int main(int argc, char *argv[]) {
         {""follow"", no_argument, 0, 'f'},
 #endif
         {""help"", no_argument, 0, 'h'},
-        {0, 0, 0, 0}};
+        {0, 0, 0, 0}
+    };

 #if !defined(__OpenBSD__)
     char *options_string = ""s:vfVh"";",True,{}
i3/i3,https://github.com/i3/i3,2350,2016-05-12T18:19:27Z,2016-06-15T18:19:16Z,2016-09-25T22:46:56Z,MERGED,True,57,24,8,https://github.com/madroach,Fix building and testing on OpenBSD,4,[],https://github.com/i3/i3/pull/2350,https://github.com/Airblader,4,https://github.com/i3/i3/pull/2350#issuecomment-218848648,"Those changes allow building on OpenBSD whose pthread implementation in not feature complete.
in sd-daemon.c there is this !defined(__linux__) check. I couldn't find any Linuxism in the following code and it builds just fine on OpenBSD. Maybe remove the check altogether instead of just checking for OpenBSD?","Also, not speaking about the change itself, but for a merge please squash the commits and keep the patch clean without merge commits.",True,{}
i3/i3,https://github.com/i3/i3,2350,2016-05-12T18:19:27Z,2016-06-15T18:19:16Z,2016-09-25T22:46:56Z,MERGED,True,57,24,8,https://github.com/madroach,Fix building and testing on OpenBSD,4,[],https://github.com/i3/i3/pull/2350,https://github.com/stapelberg,5,https://github.com/i3/i3/pull/2350#issuecomment-220445000,"Those changes allow building on OpenBSD whose pthread implementation in not feature complete.
in sd-daemon.c there is this !defined(__linux__) check. I couldn't find any Linuxism in the following code and it builds just fine on OpenBSD. Maybe remove the check altogether instead of just checking for OpenBSD?","@madroach The tests still fail:

Global symbol ""$i3"" requires explicit package name (did you forget to declare ""my $i3""?) at ./t/180-fd-leaks.t line 25.

Can you fix the test case and give us a note when the pull request is ready to review please?",True,{}
i3/i3,https://github.com/i3/i3,2350,2016-05-12T18:19:27Z,2016-06-15T18:19:16Z,2016-09-25T22:46:56Z,MERGED,True,57,24,8,https://github.com/madroach,Fix building and testing on OpenBSD,4,[],https://github.com/i3/i3/pull/2350,https://github.com/madroach,6,https://github.com/i3/i3/pull/2350#issuecomment-222174282,"Those changes allow building on OpenBSD whose pthread implementation in not feature complete.
in sd-daemon.c there is this !defined(__linux__) check. I couldn't find any Linuxism in the following code and it builds just fine on OpenBSD. Maybe remove the check altogether instead of just checking for OpenBSD?",As far as I am concerned this is ready to be merged. Feel free to commit it as a single commit. Or should I prepare a single diff and commit message?,True,{}
i3/i3,https://github.com/i3/i3,2350,2016-05-12T18:19:27Z,2016-06-15T18:19:16Z,2016-09-25T22:46:56Z,MERGED,True,57,24,8,https://github.com/madroach,Fix building and testing on OpenBSD,4,[],https://github.com/i3/i3/pull/2350,https://github.com/Airblader,7,https://github.com/i3/i3/pull/2350#issuecomment-222175257,"Those changes allow building on OpenBSD whose pthread implementation in not feature complete.
in sd-daemon.c there is this !defined(__linux__) check. I couldn't find any Linuxism in the following code and it builds just fine on OpenBSD. Maybe remove the check altogether instead of just checking for OpenBSD?","It'd be great if you could squash the commits into a single commit with a proper commit message, thank you. :-) I've also left another comment which I found just now.",True,{}
i3/i3,https://github.com/i3/i3,2350,2016-05-12T18:19:27Z,2016-06-15T18:19:16Z,2016-09-25T22:46:56Z,MERGED,True,57,24,8,https://github.com/madroach,Fix building and testing on OpenBSD,4,[],https://github.com/i3/i3/pull/2350,https://github.com/madroach,8,https://github.com/i3/i3/pull/2350#issuecomment-222192874,"Those changes allow building on OpenBSD whose pthread implementation in not feature complete.
in sd-daemon.c there is this !defined(__linux__) check. I couldn't find any Linuxism in the following code and it builds just fine on OpenBSD. Maybe remove the check altogether instead of just checking for OpenBSD?","From 1fae8b0f4c6355ea7faa145c090f3af8caad025e Mon Sep 17 00:00:00 2001
From: Christopher Zimmermann <madroach@gmerlin.de>
Date: Fri, 27 May 2016 18:28:05 +0200
Subject: [PATCH] Fixes for building and testing on OpenBSD

[...]",True,{}
i3/i3,https://github.com/i3/i3,2350,2016-05-12T18:19:27Z,2016-06-15T18:19:16Z,2016-09-25T22:46:56Z,MERGED,True,57,24,8,https://github.com/madroach,Fix building and testing on OpenBSD,4,[],https://github.com/i3/i3/pull/2350,https://github.com/Airblader,9,https://github.com/i3/i3/pull/2350#issuecomment-222193389,"Those changes allow building on OpenBSD whose pthread implementation in not feature complete.
in sd-daemon.c there is this !defined(__linux__) check. I couldn't find any Linuxism in the following code and it builds just fine on OpenBSD. Maybe remove the check altogether instead of just checking for OpenBSD?","I assume you pasted this as a patch file because you don't know this, but: you can just squash the commits and then force push the branch. Github will then update the pull request automatically.",True,{}
i3/i3,https://github.com/i3/i3,2350,2016-05-12T18:19:27Z,2016-06-15T18:19:16Z,2016-09-25T22:46:56Z,MERGED,True,57,24,8,https://github.com/madroach,Fix building and testing on OpenBSD,4,[],https://github.com/i3/i3/pull/2350,https://github.com/madroach,10,https://github.com/i3/i3/pull/2350#issuecomment-222240002,"Those changes allow building on OpenBSD whose pthread implementation in not feature complete.
in sd-daemon.c there is this !defined(__linux__) check. I couldn't find any Linuxism in the following code and it builds just fine on OpenBSD. Maybe remove the check altogether instead of just checking for OpenBSD?","Ok, heres the sqashed commit; but what's wrong with the clang build? To me this looks like an error in the docker framework.",True,{}
i3/i3,https://github.com/i3/i3,2350,2016-05-12T18:19:27Z,2016-06-15T18:19:16Z,2016-09-25T22:46:56Z,MERGED,True,57,24,8,https://github.com/madroach,Fix building and testing on OpenBSD,4,[],https://github.com/i3/i3/pull/2350,https://github.com/Airblader,11,https://github.com/i3/i3/pull/2350#issuecomment-222603344,"Those changes allow building on OpenBSD whose pthread implementation in not feature complete.
in sd-daemon.c there is this !defined(__linux__) check. I couldn't find any Linuxism in the following code and it builds just fine on OpenBSD. Maybe remove the check altogether instead of just checking for OpenBSD?",@madroach I just restarted the build which fixed it. Happens sometimes. We only have to wait for Michael now who is probably just busy at the moment (he's the only one doing merges). In the meantime do you mind rebasing your commit to the current head? Thank you :),True,{}
i3/i3,https://github.com/i3/i3,2350,2016-05-12T18:19:27Z,2016-06-15T18:19:16Z,2016-09-25T22:46:56Z,MERGED,True,57,24,8,https://github.com/madroach,Fix building and testing on OpenBSD,4,[],https://github.com/i3/i3/pull/2350,https://github.com/stapelberg,12,https://github.com/i3/i3/pull/2350#issuecomment-222821711,"Those changes allow building on OpenBSD whose pthread implementation in not feature complete.
in sd-daemon.c there is this !defined(__linux__) check. I couldn't find any Linuxism in the following code and it builds just fine on OpenBSD. Maybe remove the check altogether instead of just checking for OpenBSD?","While squashing commits to keep the history clean is the correct practice, I’d like for the individual changes in this pull request to be individual commits (one commit per logical change).
The changes themselve look good, but can you please address the following nits before I merge them?

shmlog: don't use pthread on OpenBSD since it does not provide all required features

Is there an OpenBSD issue which we can reference so that we can revert this commit once OpenBSD’s pthread implementation catches up?

sd-daemon.c: no special feature is required from the OS for socket activation. Why depend on systemd or linux?!?

Instead of asking a question, I’d prefer if we could tell people what we are doing with some level of confidence. I suggest something like “sd-daemon.c: successfully tested on OpenBSD”.",True,{}
i3/i3,https://github.com/i3/i3,2350,2016-05-12T18:19:27Z,2016-06-15T18:19:16Z,2016-09-25T22:46:56Z,MERGED,True,57,24,8,https://github.com/madroach,Fix building and testing on OpenBSD,4,[],https://github.com/i3/i3/pull/2350,https://github.com/Airblader,13,https://github.com/i3/i3/pull/2350#issuecomment-225960518,"Those changes allow building on OpenBSD whose pthread implementation in not feature complete.
in sd-daemon.c there is this !defined(__linux__) check. I couldn't find any Linuxism in the following code and it builds just fine on OpenBSD. Maybe remove the check altogether instead of just checking for OpenBSD?",@stapelberg I've pushed Travis and the build succeeded now.,True,{}
i3/i3,https://github.com/i3/i3,2359,2016-05-21T02:28:25Z,2016-05-25T10:58:33Z,2016-05-25T10:58:33Z,CLOSED,False,92,8,10,https://github.com/einalex,adding custom container names (for composite and window containers),2,[],https://github.com/i3/i3/pull/2359,https://github.com/einalex,1,https://github.com/i3/i3/pull/2359,"This should help with issue #860
It adds an additional attribute 'custom_name' to the Con struct and adjusts the rename command to allow setting and unsetting it for the currently selected container. (rename window[ ])
If a custom name is set it will be displayed in places where the container is represented somehow.
Custom names also get saved in JSON with the rest of the container and so will survive in place restarting of i3.
I chose to add an additional attribute instead of using the 'name' attribute because this allows to still display the class instance in the tree representation when no custom name has been set.
A prior attempt at using the 'name' attribute ended in the tree representation getting littered with window names. The container name seems to get set when the window changes its name.
I'd be happy to adjust this patch if needed.","This should help with issue #860
It adds an additional attribute 'custom_name' to the Con struct and adjusts the rename command to allow setting and unsetting it for the currently selected container. (rename window[ ])
If a custom name is set it will be displayed in places where the container is represented somehow.
Custom names also get saved in JSON with the rest of the container and so will survive in place restarting of i3.
I chose to add an additional attribute instead of using the 'name' attribute because this allows to still display the class instance in the tree representation when no custom name has been set.
A prior attempt at using the 'name' attribute ended in the tree representation getting littered with window names. The container name seems to get set when the window changes its name.
I'd be happy to adjust this patch if needed.",True,{}
i3/i3,https://github.com/i3/i3,2359,2016-05-21T02:28:25Z,2016-05-25T10:58:33Z,2016-05-25T10:58:33Z,CLOSED,False,92,8,10,https://github.com/einalex,adding custom container names (for composite and window containers),2,[],https://github.com/i3/i3/pull/2359,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2359#issuecomment-220758698,"This should help with issue #860
It adds an additional attribute 'custom_name' to the Con struct and adjusts the rename command to allow setting and unsetting it for the currently selected container. (rename window[ ])
If a custom name is set it will be displayed in places where the container is represented somehow.
Custom names also get saved in JSON with the rest of the container and so will survive in place restarting of i3.
I chose to add an additional attribute instead of using the 'name' attribute because this allows to still display the class instance in the tree representation when no custom name has been set.
A prior attempt at using the 'name' attribute ended in the tree representation getting littered with window names. The container name seems to get set when the window changes its name.
I'd be happy to adjust this patch if needed.",What does this do that title_format doesn't do?,True,{}
i3/i3,https://github.com/i3/i3,2359,2016-05-21T02:28:25Z,2016-05-25T10:58:33Z,2016-05-25T10:58:33Z,CLOSED,False,92,8,10,https://github.com/einalex,adding custom container names (for composite and window containers),2,[],https://github.com/i3/i3/pull/2359,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2359#issuecomment-220758767,"This should help with issue #860
It adds an additional attribute 'custom_name' to the Con struct and adjusts the rename command to allow setting and unsetting it for the currently selected container. (rename window[ ])
If a custom name is set it will be displayed in places where the container is represented somehow.
Custom names also get saved in JSON with the rest of the container and so will survive in place restarting of i3.
I chose to add an additional attribute instead of using the 'name' attribute because this allows to still display the class instance in the tree representation when no custom name has been set.
A prior attempt at using the 'name' attribute ended in the tree representation getting littered with window names. The container name seems to get set when the window changes its name.
I'd be happy to adjust this patch if needed.","On another note, changing the windows name is not a good idea and violates the spec. The spec offers the visible name property for that which we already support with title_format.",True,{}
i3/i3,https://github.com/i3/i3,2359,2016-05-21T02:28:25Z,2016-05-25T10:58:33Z,2016-05-25T10:58:33Z,CLOSED,False,92,8,10,https://github.com/einalex,adding custom container names (for composite and window containers),2,[],https://github.com/i3/i3/pull/2359,https://github.com/einalex,4,https://github.com/i3/i3/pull/2359#issuecomment-220771343,"This should help with issue #860
It adds an additional attribute 'custom_name' to the Con struct and adjusts the rename command to allow setting and unsetting it for the currently selected container. (rename window[ ])
If a custom name is set it will be displayed in places where the container is represented somehow.
Custom names also get saved in JSON with the rest of the container and so will survive in place restarting of i3.
I chose to add an additional attribute instead of using the 'name' attribute because this allows to still display the class instance in the tree representation when no custom name has been set.
A prior attempt at using the 'name' attribute ended in the tree representation getting littered with window names. The container name seems to get set when the window changes its name.
I'd be happy to adjust this patch if needed.","It allows you to set names for containers - including containers that do not have a window - individually.
For example it allows you to set a name for a composite container in which you would normaly display a tree.
You could also set the name of any container in a tree, leaf or node and have your chosen name appear in the tree at the appropriate place.
In my experience setting the name of the window doesn't help you very much as windows will keep changing their name overriding your settings in the process.
I agree that the window manager shouldn't arbitrarily change window names. I do not agree that the window's choice should take priority over the user's choice though.",True,{}
i3/i3,https://github.com/i3/i3,2359,2016-05-21T02:28:25Z,2016-05-25T10:58:33Z,2016-05-25T10:58:33Z,CLOSED,False,92,8,10,https://github.com/einalex,adding custom container names (for composite and window containers),2,[],https://github.com/i3/i3/pull/2359,https://github.com/Airblader,5,https://github.com/i3/i3/pull/2359#issuecomment-220771589,"This should help with issue #860
It adds an additional attribute 'custom_name' to the Con struct and adjusts the rename command to allow setting and unsetting it for the currently selected container. (rename window[ ])
If a custom name is set it will be displayed in places where the container is represented somehow.
Custom names also get saved in JSON with the rest of the container and so will survive in place restarting of i3.
I chose to add an additional attribute instead of using the 'name' attribute because this allows to still display the class instance in the tree representation when no custom name has been set.
A prior attempt at using the 'name' attribute ended in the tree representation getting littered with window names. The container name seems to get set when the window changes its name.
I'd be happy to adjust this patch if needed.","It allows you to set names for containers - including containers that do not have a window - individually.

Again, how is this not covered by title_format already? This directive can also be specified on nested containers. See here: http://i.imgur.com/8or0plP.png

In my experience setting the name of the window doesn't help you very much as windows will keep changing their name overriding your settings in the process.

That's what _NET_WM_VISIBLE_NAME is for and title_format sets this property (and also displays the custom title). Plus title_format supports placeholders for, e.g., the original title.",True,{}
i3/i3,https://github.com/i3/i3,2359,2016-05-21T02:28:25Z,2016-05-25T10:58:33Z,2016-05-25T10:58:33Z,CLOSED,False,92,8,10,https://github.com/einalex,adding custom container names (for composite and window containers),2,[],https://github.com/i3/i3/pull/2359,https://github.com/einalex,6,https://github.com/i3/i3/pull/2359#issuecomment-220772018,"This should help with issue #860
It adds an additional attribute 'custom_name' to the Con struct and adjusts the rename command to allow setting and unsetting it for the currently selected container. (rename window[ ])
If a custom name is set it will be displayed in places where the container is represented somehow.
Custom names also get saved in JSON with the rest of the container and so will survive in place restarting of i3.
I chose to add an additional attribute instead of using the 'name' attribute because this allows to still display the class instance in the tree representation when no custom name has been set.
A prior attempt at using the 'name' attribute ended in the tree representation getting littered with window names. The container name seems to get set when the window changes its name.
I'd be happy to adjust this patch if needed.","I didn't realize you could use title format without the placeholders.Yes it works well. Still the custom title set with title_format doesn't show up in the tree. That is a downside in my eyes.
I would appreciate it if you could mark the corresponding issues as fixed.",True,{}
i3/i3,https://github.com/i3/i3,2359,2016-05-21T02:28:25Z,2016-05-25T10:58:33Z,2016-05-25T10:58:33Z,CLOSED,False,92,8,10,https://github.com/einalex,adding custom container names (for composite and window containers),2,[],https://github.com/i3/i3/pull/2359,https://github.com/Airblader,7,https://github.com/i3/i3/pull/2359#issuecomment-220845735,"This should help with issue #860
It adds an additional attribute 'custom_name' to the Con struct and adjusts the rename command to allow setting and unsetting it for the currently selected container. (rename window[ ])
If a custom name is set it will be displayed in places where the container is represented somehow.
Custom names also get saved in JSON with the rest of the container and so will survive in place restarting of i3.
I chose to add an additional attribute instead of using the 'name' attribute because this allows to still display the class instance in the tree representation when no custom name has been set.
A prior attempt at using the 'name' attribute ended in the tree representation getting littered with window names. The container name seems to get set when the window changes its name.
I'd be happy to adjust this patch if needed.","That is a downside in my eyes.

I understand where you are coming from and that you'd want this. Of course it could be an idea to use the title in the tree representation, but I think this would too easily lead to ""too long"" representations. A config directive seems too much complexity for too little benefit to me. I could think of a bunch of other compromises, but they all boil down to not being worth it in my eyes. But if you have a proposal and feel strongly about it, please feel free to open this as a feature request so it can be discussed more.",True,{}
i3/i3,https://github.com/i3/i3,2359,2016-05-21T02:28:25Z,2016-05-25T10:58:33Z,2016-05-25T10:58:33Z,CLOSED,False,92,8,10,https://github.com/einalex,adding custom container names (for composite and window containers),2,[],https://github.com/i3/i3/pull/2359,https://github.com/Airblader,8,https://github.com/i3/i3/pull/2359#issuecomment-221540129,"This should help with issue #860
It adds an additional attribute 'custom_name' to the Con struct and adjusts the rename command to allow setting and unsetting it for the currently selected container. (rename window[ ])
If a custom name is set it will be displayed in places where the container is represented somehow.
Custom names also get saved in JSON with the rest of the container and so will survive in place restarting of i3.
I chose to add an additional attribute instead of using the 'name' attribute because this allows to still display the class instance in the tree representation when no custom name has been set.
A prior attempt at using the 'name' attribute ended in the tree representation getting littered with window names. The container name seems to get set when the window changes its name.
I'd be happy to adjust this patch if needed.","I would appreciate it if you could mark the corresponding issues as fixed.

I take that as confirmation that it's OK to close this PR.",True,{}
i3/i3,https://github.com/i3/i3,2362,2016-05-22T19:30:04Z,2016-05-28T14:44:20Z,2016-09-25T22:46:56Z,MERGED,True,1,1,1,https://github.com/tmerr,Resolve #2361,1,[],https://github.com/i3/i3/pull/2362,https://github.com/tmerr,1,https://github.com/i3/i3/pull/2362,Fix out of date documentation,Fix out of date documentation,True,{}
i3/i3,https://github.com/i3/i3,2366,2016-05-30T15:42:43Z,2016-05-31T20:58:23Z,2016-09-25T22:46:56Z,MERGED,True,8,0,1,https://github.com/Airblader,Explicitly terminate fallback in set_from_resource.,1,[],https://github.com/i3/i3/pull/2366,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2366,,,True,{}
i3/i3,https://github.com/i3/i3,2367,2016-05-30T18:15:50Z,2016-05-31T20:57:58Z,2016-09-25T22:46:57Z,MERGED,True,2,1,2,https://github.com/arthurzam,Added qterminal to i3-sensible-terminal,1,[],https://github.com/i3/i3/pull/2367,https://github.com/arthurzam,1,https://github.com/i3/i3/pull/2367,,,True,{}
i3/i3,https://github.com/i3/i3,2370,2016-06-07T07:47:18Z,2016-06-07T08:07:55Z,2016-06-07T08:07:55Z,CLOSED,False,30,2,1,https://github.com/samsaga2,i3-nagbar: added timeout arg,2,[],https://github.com/i3/i3/pull/2370,https://github.com/samsaga2,1,https://github.com/i3/i3/pull/2370,"I've added a timeout (in seconds) to i3-nagbar. It's useful to show some messages without the user interaction.

i3-nagbar -m ""Your toast is ready"" -t warning -x 4","I've added a timeout (in seconds) to i3-nagbar. It's useful to show some messages without the user interaction.

i3-nagbar -m ""Your toast is ready"" -t warning -x 4",True,{}
i3/i3,https://github.com/i3/i3,2370,2016-06-07T07:47:18Z,2016-06-07T08:07:55Z,2016-06-07T08:07:55Z,CLOSED,False,30,2,1,https://github.com/samsaga2,i3-nagbar: added timeout arg,2,[],https://github.com/i3/i3/pull/2370,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2370#issuecomment-224208724,"I've added a timeout (in seconds) to i3-nagbar. It's useful to show some messages without the user interaction.

i3-nagbar -m ""Your toast is ready"" -t warning -x 4","i3-nagbar isn't a notification daemon, so I oppose this change. Why not use something like dunst for this which implements a standardized specification for notifications and a much better user experience?",True,{}
i3/i3,https://github.com/i3/i3,2370,2016-06-07T07:47:18Z,2016-06-07T08:07:55Z,2016-06-07T08:07:55Z,CLOSED,False,30,2,1,https://github.com/samsaga2,i3-nagbar: added timeout arg,2,[],https://github.com/i3/i3/pull/2370,https://github.com/samsaga2,3,https://github.com/i3/i3/pull/2370#issuecomment-224209124,"I've added a timeout (in seconds) to i3-nagbar. It's useful to show some messages without the user interaction.

i3-nagbar -m ""Your toast is ready"" -t warning -x 4",You are right. I did not know dunst.,True,{}
i3/i3,https://github.com/i3/i3,2376,2016-06-14T17:47:36Z,2016-06-15T20:25:22Z,2016-09-25T22:46:57Z,MERGED,True,47,18,5,https://github.com/Airblader,Introduced a new GET_BINDING_MODES message type and reply.,1,[],https://github.com/i3/i3/pull/2376,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2376,"This type dumps all currently configured binding modes.
fixes #2375","This type dumps all currently configured binding modes.
fixes #2375",True,{}
i3/i3,https://github.com/i3/i3,2380,2016-06-20T08:50:00Z,2016-09-13T05:38:42Z,2016-09-13T05:38:42Z,CLOSED,False,133,0,6,https://github.com/yshui,"Add support for _NET_WM_STATE_MAXIMIZED_{HORZ, VERT}",1,['waiting'],https://github.com/i3/i3/pull/2380,https://github.com/yshui,1,https://github.com/i3/i3/pull/2380,"Some applications will adjust their window layout according to its maximized state.
For example, in Google Chrome, there's no space between the tabs and the top of the window when its maximized, saving some vertical space (see attached screenshot if you still can't understand).
When maximized:

When not:","Some applications will adjust their window layout according to its maximized state.
For example, in Google Chrome, there's no space between the tabs and the top of the window when its maximized, saving some vertical space (see attached screenshot if you still can't understand).
When maximized:

When not:",True,{}
i3/i3,https://github.com/i3/i3,2380,2016-06-20T08:50:00Z,2016-09-13T05:38:42Z,2016-09-13T05:38:42Z,CLOSED,False,133,0,6,https://github.com/yshui,"Add support for _NET_WM_STATE_MAXIMIZED_{HORZ, VERT}",1,['waiting'],https://github.com/i3/i3/pull/2380,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2380#issuecomment-227089050,"Some applications will adjust their window layout according to its maximized state.
For example, in Google Chrome, there's no space between the tabs and the top of the window when its maximized, saving some vertical space (see attached screenshot if you still can't understand).
When maximized:

When not:","Relevant: #1874
reddit with this user: https://www.reddit.com/r/i3wm/comments/4oh58a/troubles_with_chrome/
I'm a little surprised to see you provide a PR after you never replied back to my last comment on reddit. Of course, providing a PR is fine, but I think there's just still a discussion open about how this should be supported. We just generally recommend discussing the issue first to avoid rejecting PRs.
But it's too late for that now, therefore:

Can you please describe in words (and in the commit message) how these atoms are used in i3 with your implementation? I.e., under which circumstance should (and will with your change) i3 consider a window maximized in a direction?
Can you give a rationale for other scenarios so we can get a sense of whether this makes sense?

As for the change itself, we definitely require tests for this. I haven't looked at the code itself yet because I see no point until we decided whether this should be supported at all and if so, how exactly. We can't tailor the solution to work with a single application, we need to consider the big picture.",True,{}
i3/i3,https://github.com/i3/i3,2380,2016-06-20T08:50:00Z,2016-09-13T05:38:42Z,2016-09-13T05:38:42Z,CLOSED,False,133,0,6,https://github.com/yshui,"Add support for _NET_WM_STATE_MAXIMIZED_{HORZ, VERT}",1,['waiting'],https://github.com/i3/i3/pull/2380,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2380#issuecomment-227089740,"Some applications will adjust their window layout according to its maximized state.
For example, in Google Chrome, there's no space between the tabs and the top of the window when its maximized, saving some vertical space (see attached screenshot if you still can't understand).
When maximized:

When not:","Also, I'm not convinced the Chrome case isn't a configuration issue. I don't have this gap:

I think this is just GTK configuration one can disable. For example, my GTK3 config has
.window-frame {
  box-shadow: none;
  margin: 0
}

I haven't checked whether this is what removes this gap, though. Just a suspicion.",True,{}
i3/i3,https://github.com/i3/i3,2380,2016-06-20T08:50:00Z,2016-09-13T05:38:42Z,2016-09-13T05:38:42Z,CLOSED,False,133,0,6,https://github.com/yshui,"Add support for _NET_WM_STATE_MAXIMIZED_{HORZ, VERT}",1,['waiting'],https://github.com/i3/i3/pull/2380,https://github.com/yshui,4,https://github.com/i3/i3/pull/2380#issuecomment-227090715,"Some applications will adjust their window layout according to its maximized state.
For example, in Google Chrome, there's no space between the tabs and the top of the window when its maximized, saving some vertical space (see attached screenshot if you still can't understand).
When maximized:

When not:","@Airblader

We just generally recommend discussing the issue first to avoid rejecting PRs.

It's fine. This didn't take much time to write. And even if you reject this I would still need this myself.

Also, I'm not convinced the Chrome case isn't a configuration issue

The gap is probably theme related. I can observe same behavior under different WM/DE.

Can you please describe in words (and in the commit message) how these atoms are used in i3 with your implementation?

This is explained quite clearly by comments in con_is_maximized() (as well as by the code itself).

Can you give a rationale for other scenarios so we can get a sense of whether this makes sense?

I can't really find another scenarios right now. But this implements part of the standard, and does not add much penalty performance-wise.",True,{}
i3/i3,https://github.com/i3/i3,2380,2016-06-20T08:50:00Z,2016-09-13T05:38:42Z,2016-09-13T05:38:42Z,CLOSED,False,133,0,6,https://github.com/yshui,"Add support for _NET_WM_STATE_MAXIMIZED_{HORZ, VERT}",1,['waiting'],https://github.com/i3/i3/pull/2380,https://github.com/yshui,5,https://github.com/i3/i3/pull/2380#issuecomment-227091200,"Some applications will adjust their window layout according to its maximized state.
For example, in Google Chrome, there's no space between the tabs and the top of the window when its maximized, saving some vertical space (see attached screenshot if you still can't understand).
When maximized:

When not:",@Airblader I guess you probably set the 'Use system title bar and borders' in Chrome?,True,{}
i3/i3,https://github.com/i3/i3,2380,2016-06-20T08:50:00Z,2016-09-13T05:38:42Z,2016-09-13T05:38:42Z,CLOSED,False,133,0,6,https://github.com/yshui,"Add support for _NET_WM_STATE_MAXIMIZED_{HORZ, VERT}",1,['waiting'],https://github.com/i3/i3/pull/2380,https://github.com/Airblader,6,https://github.com/i3/i3/pull/2380#issuecomment-227092301,"Some applications will adjust their window layout according to its maximized state.
For example, in Google Chrome, there's no space between the tabs and the top of the window when its maximized, saving some vertical space (see attached screenshot if you still can't understand).
When maximized:

When not:","The gap is probably theme related. I can observe same behavior under different WM/DE.

The point is, I would argue that this change may in fact be wrong. We don't want to set an atom because it makes Chrome look nicer for someone. We would want to set the atom because we feel the situation appropriately represents what i3 considers ""maximized"". And that requires that we properly define what we should consider maximized and whether a concept of maximized even makes sense for a tiling window manager like i3 at all. It also means that we should look at a bunch of example trees.
And I'm not convinced that this concept applies the way you implement it, cmp. with the spec:

A window manager is expected to remember the geometry of a maximized window and restore it upon de-maximization.

There is no such thing for the windows you consider maximized. We only have this for fullscreen windows (which already use another, dedicated atom). How would you argue that your implementation represents this part of the spec?
On the other hand, we could also interpret

Maximizing a window should give it as much of the screen area as possible (this may not be the full screen area, but only a smaller 'workarea', since the window manager may have reserved certain areas for other windows)

to mean that all tiled windows should be considered maximized (that's really what the tiling paradigm does).
So overall, again, I feel that your change doesn't implement the spec, but workarounds an issue you have with a specific application. It doesn't seem to me that it appropriately reflects the intention of the concept described in EWMH. On a side note, the EWMH also has _NET_SUPPORTED which explicitly allows window managers to not support parts of the spec it deems not useful or not implementable. We don't claim to support these atoms there, so we are not violating the spec at the moment.

This is explained quite clearly by comments in con_is_maximized() (as well as by the code itself).

Code can be wrong. I prefer a textual description of the intention of the change, again also in the commit message, so we can check whether that is how we want to represent this concept and whether the implementation matches that intention.",True,{}
i3/i3,https://github.com/i3/i3,2380,2016-06-20T08:50:00Z,2016-09-13T05:38:42Z,2016-09-13T05:38:42Z,CLOSED,False,133,0,6,https://github.com/yshui,"Add support for _NET_WM_STATE_MAXIMIZED_{HORZ, VERT}",1,['waiting'],https://github.com/i3/i3/pull/2380,https://github.com/yshui,7,https://github.com/i3/i3/pull/2380#issuecomment-227094586,"Some applications will adjust their window layout according to its maximized state.
For example, in Google Chrome, there's no space between the tabs and the top of the window when its maximized, saving some vertical space (see attached screenshot if you still can't understand).
When maximized:

When not:","@Airblader

Code can be wrong.

I could argue natural languages are vague and often ambiguous so reading the code is better, but anyway. My intention is that, if a window is put in container that takes the maximal amount of vertical/horizontal space, it should be considered vertically/horizontally maximized.
A maximized container does not share vertical/horizontal space with another one. In other words, a maximized container is not in a splith/splitv container with more than one child.",True,{}
i3/i3,https://github.com/i3/i3,2380,2016-06-20T08:50:00Z,2016-09-13T05:38:42Z,2016-09-13T05:38:42Z,CLOSED,False,133,0,6,https://github.com/yshui,"Add support for _NET_WM_STATE_MAXIMIZED_{HORZ, VERT}",1,['waiting'],https://github.com/i3/i3/pull/2380,https://github.com/Airblader,8,https://github.com/i3/i3/pull/2380#issuecomment-227098886,"Some applications will adjust their window layout according to its maximized state.
For example, in Google Chrome, there's no space between the tabs and the top of the window when its maximized, saving some vertical space (see attached screenshot if you still can't understand).
When maximized:

When not:","My intention is that, if a window is put in container that takes the maximal amount of vertical/horizontal space, it should be considered vertically/horizontally maximized.

I think intuitively this makes sense because it's what users are used from floating window managers. My concerns above are still valid, however. These atoms are really only part of a larger maximization feature which i3, being a tiling window manager, simply doesn't have.
My concern lies less within the (indeed not all too significant) complexity of the change, but the fact that we implement a concept partially in a specific way to accommodate the insignificant needs of a single application; needs we know can be fulfilled otherwise and needs I'm not sure one shouldn't blame on the application for relying on something the window manager doesn't claim to support. Effectively, this could cause problems if we have better, actual usecases for these atoms down the road as it would then potentially become a backwards incompatible change.
That's why I think we should have more examples of applications using this hint (and looking at how they use it) and that's also the reason I closed my ticket proposing to support these atoms. Looking for applications that utilize this hint may be a way to get there.
Anyhow, that's my opinion. I think I've said what I want to say; I'm happy to support this as long as we know that we support it in a sensible way. I'll leave this decision up to @stapelberg now.",True,{}
i3/i3,https://github.com/i3/i3,2380,2016-06-20T08:50:00Z,2016-09-13T05:38:42Z,2016-09-13T05:38:42Z,CLOSED,False,133,0,6,https://github.com/yshui,"Add support for _NET_WM_STATE_MAXIMIZED_{HORZ, VERT}",1,['waiting'],https://github.com/i3/i3/pull/2380,https://github.com/yshui,9,https://github.com/i3/i3/pull/2380#issuecomment-227251229,"Some applications will adjust their window layout according to its maximized state.
For example, in Google Chrome, there's no space between the tabs and the top of the window when its maximized, saving some vertical space (see attached screenshot if you still can't understand).
When maximized:

When not:","My concern lies less within the (indeed not all too significant) complexity of the change, but the fact that we implement a concept partially in a specific way

I think your concern is the ""restoring geometry on de-maximization"" part, right? I can implement that. We just need to agree on what ""de-maximization"" means. I think it's reasonable to think making a container float as de-maximization.",True,{}
i3/i3,https://github.com/i3/i3,2380,2016-06-20T08:50:00Z,2016-09-13T05:38:42Z,2016-09-13T05:38:42Z,CLOSED,False,133,0,6,https://github.com/yshui,"Add support for _NET_WM_STATE_MAXIMIZED_{HORZ, VERT}",1,['waiting'],https://github.com/i3/i3/pull/2380,https://github.com/Airblader,10,https://github.com/i3/i3/pull/2380#issuecomment-227263617,"Some applications will adjust their window layout according to its maximized state.
For example, in Google Chrome, there's no space between the tabs and the top of the window when its maximized, saving some vertical space (see attached screenshot if you still can't understand).
When maximized:

When not:","We just need to agree on what ""de-maximization"" means. I think it's reasonable to think making a container float as de-maximization.

That implies that floating windows are the ""normal"" state and tiled windows are just maximized windows. That fits neither to your implementation (which allows tiled windows to be non-maximized), nor does it fit the i3 philosophy (which is that tiled windows are the default).
I think that the concept of maximaztion, and therefore maximized windows, just simply doesn't apply to a tiling window manager such as i3. I'm open to change that view, I just haven't hard any argument yet that convinced me. I'd even be willing to change my mind if we had intriguing usecases of applications using this hint. So far all we have is one application and a few pixels, with a different solution that works just as well. That's not compelling enough for me.",True,{}
i3/i3,https://github.com/i3/i3,2380,2016-06-20T08:50:00Z,2016-09-13T05:38:42Z,2016-09-13T05:38:42Z,CLOSED,False,133,0,6,https://github.com/yshui,"Add support for _NET_WM_STATE_MAXIMIZED_{HORZ, VERT}",1,['waiting'],https://github.com/i3/i3/pull/2380,https://github.com/yshui,11,https://github.com/i3/i3/pull/2380#issuecomment-227271807,"Some applications will adjust their window layout according to its maximized state.
For example, in Google Chrome, there's no space between the tabs and the top of the window when its maximized, saving some vertical space (see attached screenshot if you still can't understand).
When maximized:

When not:","That implies that floating windows are the ""normal"" state and tiled windows are just maximized windows.

Er, no. tiled windows are maximized only when it takes max amount of vertical/horizontal space. So when a maximized tiled window goes to floating, it's geometry last time it's floating is restored. Otherwise it will keep it's geometry when it's tiled.

nor does it fit the i3 philosophy (which is that tiled windows are the default).

Why can't you think i3 as ""maximized by default""? ""maximized"" is not a conflicting concept with ""normal"".",True,{}
i3/i3,https://github.com/i3/i3,2380,2016-06-20T08:50:00Z,2016-09-13T05:38:42Z,2016-09-13T05:38:42Z,CLOSED,False,133,0,6,https://github.com/yshui,"Add support for _NET_WM_STATE_MAXIMIZED_{HORZ, VERT}",1,['waiting'],https://github.com/i3/i3/pull/2380,https://github.com/Airblader,12,https://github.com/i3/i3/pull/2380#issuecomment-227272589,"Some applications will adjust their window layout according to its maximized state.
For example, in Google Chrome, there's no space between the tabs and the top of the window when its maximized, saving some vertical space (see attached screenshot if you still can't understand).
When maximized:

When not:","Why can't you think i3 as ""maximized by default""? ""maximized"" is not a conflicting concept with ""normal"".

Mh, I think I could get behind that kind of argument. I think it would even justify not having a ""de-maximization"" mechanism (I really think making it floating is not what we should consider de-maximized). I guess strictly speaking the spec doesn't demand that the concept of maximized windows requires a mechanism to (de-)maximize windows by the user.",True,{}
i3/i3,https://github.com/i3/i3,2380,2016-06-20T08:50:00Z,2016-09-13T05:38:42Z,2016-09-13T05:38:42Z,CLOSED,False,133,0,6,https://github.com/yshui,"Add support for _NET_WM_STATE_MAXIMIZED_{HORZ, VERT}",1,['waiting'],https://github.com/i3/i3/pull/2380,https://github.com/yshui,13,https://github.com/i3/i3/pull/2380#issuecomment-227273225,"Some applications will adjust their window layout according to its maximized state.
For example, in Google Chrome, there's no space between the tabs and the top of the window when its maximized, saving some vertical space (see attached screenshot if you still can't understand).
When maximized:

When not:","@Airblader

I really think making it floating is not what we should consider de-maximized

I could agree, but I think restoring floating geometry might be something people would want.",True,{}
i3/i3,https://github.com/i3/i3,2380,2016-06-20T08:50:00Z,2016-09-13T05:38:42Z,2016-09-13T05:38:42Z,CLOSED,False,133,0,6,https://github.com/yshui,"Add support for _NET_WM_STATE_MAXIMIZED_{HORZ, VERT}",1,['waiting'],https://github.com/i3/i3/pull/2380,https://github.com/Airblader,14,https://github.com/i3/i3/pull/2380#issuecomment-227273999,"Some applications will adjust their window layout according to its maximized state.
For example, in Google Chrome, there's no space between the tabs and the top of the window when its maximized, saving some vertical space (see attached screenshot if you still can't understand).
When maximized:

When not:","Yes, but we already have #2378 for that, let's worry about it there. :-)",True,{}
i3/i3,https://github.com/i3/i3,2380,2016-06-20T08:50:00Z,2016-09-13T05:38:42Z,2016-09-13T05:38:42Z,CLOSED,False,133,0,6,https://github.com/yshui,"Add support for _NET_WM_STATE_MAXIMIZED_{HORZ, VERT}",1,['waiting'],https://github.com/i3/i3/pull/2380,https://github.com/Airblader,15,https://github.com/i3/i3/pull/2380#issuecomment-227345007,"Some applications will adjust their window layout according to its maximized state.
For example, in Google Chrome, there's no space between the tabs and the top of the window when its maximized, saving some vertical space (see attached screenshot if you still can't understand).
When maximized:

When not:","I've reviewed the code now. Tests also need to be written still, though you may want to wait for Michael to decide whether this will be merged at all. Travis is obviously not happy yet either.",True,{}
i3/i3,https://github.com/i3/i3,2380,2016-06-20T08:50:00Z,2016-09-13T05:38:42Z,2016-09-13T05:38:42Z,CLOSED,False,133,0,6,https://github.com/yshui,"Add support for _NET_WM_STATE_MAXIMIZED_{HORZ, VERT}",1,['waiting'],https://github.com/i3/i3/pull/2380,https://github.com/yshui,16,https://github.com/i3/i3/pull/2380#issuecomment-227529000,"Some applications will adjust their window layout according to its maximized state.
For example, in Google Chrome, there's no space between the tabs and the top of the window when its maximized, saving some vertical space (see attached screenshot if you still can't understand).
When maximized:

When not:","Fixed most of your concerns.
Also, ping @stapelberg ?",True,{}
i3/i3,https://github.com/i3/i3,2380,2016-06-20T08:50:00Z,2016-09-13T05:38:42Z,2016-09-13T05:38:42Z,CLOSED,False,133,0,6,https://github.com/yshui,"Add support for _NET_WM_STATE_MAXIMIZED_{HORZ, VERT}",1,['waiting'],https://github.com/i3/i3/pull/2380,https://github.com/Airblader,17,https://github.com/i3/i3/pull/2380#issuecomment-227535917,"Some applications will adjust their window layout according to its maximized state.
For example, in Google Chrome, there's no space between the tabs and the top of the window when its maximized, saving some vertical space (see attached screenshot if you still can't understand).
When maximized:

When not:","Also, ping @stapelberg ?

He seems to be quite busy lately, so it might take a bit. But he will definitely look at it. :-) Don't forget about them tests!",True,{}
i3/i3,https://github.com/i3/i3,2380,2016-06-20T08:50:00Z,2016-09-13T05:38:42Z,2016-09-13T05:38:42Z,CLOSED,False,133,0,6,https://github.com/yshui,"Add support for _NET_WM_STATE_MAXIMIZED_{HORZ, VERT}",1,['waiting'],https://github.com/i3/i3/pull/2380,https://github.com/stapelberg,18,https://github.com/i3/i3/pull/2380#issuecomment-227658141,"Some applications will adjust their window layout according to its maximized state.
For example, in Google Chrome, there's no space between the tabs and the top of the window when its maximized, saving some vertical space (see attached screenshot if you still can't understand).
When maximized:

When not:","I think the change should be okay, fundamentally. I have a couple of comments (see the diff), and of course it might be that we discover a compelling reason to revert the commit after it has gone out to users to test.",True,{}
i3/i3,https://github.com/i3/i3,2380,2016-06-20T08:50:00Z,2016-09-13T05:38:42Z,2016-09-13T05:38:42Z,CLOSED,False,133,0,6,https://github.com/yshui,"Add support for _NET_WM_STATE_MAXIMIZED_{HORZ, VERT}",1,['waiting'],https://github.com/i3/i3/pull/2380,https://github.com/Airblader,19,https://github.com/i3/i3/pull/2380#issuecomment-229202213,"Some applications will adjust their window layout according to its maximized state.
For example, in Google Chrome, there's no space between the tabs and the top of the window when its maximized, saving some vertical space (see attached screenshot if you still can't understand).
When maximized:

When not:",@yshui Please drop a comment when you incorporated comments since we won't be notified otherwise. The tests still need fixed and a rebase is in order. :-),True,{}
i3/i3,https://github.com/i3/i3,2380,2016-06-20T08:50:00Z,2016-09-13T05:38:42Z,2016-09-13T05:38:42Z,CLOSED,False,133,0,6,https://github.com/yshui,"Add support for _NET_WM_STATE_MAXIMIZED_{HORZ, VERT}",1,['waiting'],https://github.com/i3/i3/pull/2380,https://github.com/yshui,20,https://github.com/i3/i3/pull/2380#issuecomment-229393418,"Some applications will adjust their window layout according to its maximized state.
For example, in Google Chrome, there's no space between the tabs and the top of the window when its maximized, saving some vertical space (see attached screenshot if you still can't understand).
When maximized:

When not:","@Airblader Oh, sorry. I didn't know GitHub doesn't have notification for new commits..
BTW, should I write new tests? Or do I just need to fix the old ones?",True,{}
i3/i3,https://github.com/i3/i3,2380,2016-06-20T08:50:00Z,2016-09-13T05:38:42Z,2016-09-13T05:38:42Z,CLOSED,False,133,0,6,https://github.com/yshui,"Add support for _NET_WM_STATE_MAXIMIZED_{HORZ, VERT}",1,['waiting'],https://github.com/i3/i3/pull/2380,https://github.com/Airblader,21,https://github.com/i3/i3/pull/2380#issuecomment-236897312,"Some applications will adjust their window layout according to its maximized state.
For example, in Google Chrome, there's no space between the tabs and the top of the window when its maximized, saving some vertical space (see attached screenshot if you still can't understand).
When maximized:

When not:",@yshui I think we should definitely have tests here that verify that containers have the correct combination of these atoms set depending on the layout.,True,{}
i3/i3,https://github.com/i3/i3,2380,2016-06-20T08:50:00Z,2016-09-13T05:38:42Z,2016-09-13T05:38:42Z,CLOSED,False,133,0,6,https://github.com/yshui,"Add support for _NET_WM_STATE_MAXIMIZED_{HORZ, VERT}",1,['waiting'],https://github.com/i3/i3/pull/2380,https://github.com/Airblader,22,https://github.com/i3/i3/pull/2380#issuecomment-246473712,"Some applications will adjust their window layout according to its maximized state.
For example, in Google Chrome, there's no space between the tabs and the top of the window when its maximized, saving some vertical space (see attached screenshot if you still can't understand).
When maximized:

When not:",@yshui Are you going to continue work on this?,True,{}
i3/i3,https://github.com/i3/i3,2380,2016-06-20T08:50:00Z,2016-09-13T05:38:42Z,2016-09-13T05:38:42Z,CLOSED,False,133,0,6,https://github.com/yshui,"Add support for _NET_WM_STATE_MAXIMIZED_{HORZ, VERT}",1,['waiting'],https://github.com/i3/i3/pull/2380,https://github.com/yshui,23,https://github.com/i3/i3/pull/2380#issuecomment-246554950,"Some applications will adjust their window layout according to its maximized state.
For example, in Google Chrome, there's no space between the tabs and the top of the window when its maximized, saving some vertical space (see attached screenshot if you still can't understand).
When maximized:

When not:","Sorry, but I'm not using i3wm anymore.",True,{}
i3/i3,https://github.com/i3/i3,2380,2016-06-20T08:50:00Z,2016-09-13T05:38:42Z,2016-09-13T05:38:42Z,CLOSED,False,133,0,6,https://github.com/yshui,"Add support for _NET_WM_STATE_MAXIMIZED_{HORZ, VERT}",1,['waiting'],https://github.com/i3/i3/pull/2380,https://github.com/Airblader,24,https://github.com/i3/i3/pull/2380#issuecomment-246579724,"Some applications will adjust their window layout according to its maximized state.
For example, in Google Chrome, there's no space between the tabs and the top of the window when its maximized, saving some vertical space (see attached screenshot if you still can't understand).
When maximized:

When not:","Alright, thanks for answering. :)",True,{}
i3/i3,https://github.com/i3/i3,2384,2016-06-21T02:07:29Z,2016-06-22T06:39:25Z,2016-09-25T22:46:57Z,MERGED,True,35,1,1,https://github.com/yshui,Handle _MOTIF_WM_HINTS changes,1,[],https://github.com/i3/i3/pull/2384,https://github.com/yshui,1,https://github.com/i3/i3/pull/2384,Fixes #2382,Fixes #2382,True,{}
i3/i3,https://github.com/i3/i3,2384,2016-06-21T02:07:29Z,2016-06-22T06:39:25Z,2016-09-25T22:46:57Z,MERGED,True,35,1,1,https://github.com/yshui,Handle _MOTIF_WM_HINTS changes,1,[],https://github.com/i3/i3/pull/2384,https://github.com/yshui,2,https://github.com/i3/i3/pull/2384#issuecomment-227561062,Fixes #2382,Fixed.,True,{}
i3/i3,https://github.com/i3/i3,2386,2016-06-22T23:33:38Z,2016-06-25T19:35:36Z,2019-04-05T08:41:41Z,MERGED,True,1,1,1,https://github.com/yshui,Don't change border style if BS_NORMAL is requested in motif hints,1,[],https://github.com/i3/i3/pull/2386,https://github.com/yshui,1,https://github.com/i3/i3/pull/2386,Fixes #2385,Fixes #2385,True,{}
i3/i3,https://github.com/i3/i3,2386,2016-06-22T23:33:38Z,2016-06-25T19:35:36Z,2019-04-05T08:41:41Z,MERGED,True,1,1,1,https://github.com/yshui,Don't change border style if BS_NORMAL is requested in motif hints,1,[],https://github.com/i3/i3/pull/2386,https://github.com/acrisci,2,https://github.com/i3/i3/pull/2386#issuecomment-227915341,Fixes #2385,"I'm ok with this. We basically have no documentation on how these hints should be interpreted, so we are free to do what makes sense. We can interpret ""normal"" to mean the user default. I can't think of any situation where that would cause a problem.",True,{}
i3/i3,https://github.com/i3/i3,2386,2016-06-22T23:33:38Z,2016-06-25T19:35:36Z,2019-04-05T08:41:41Z,MERGED,True,1,1,1,https://github.com/yshui,Don't change border style if BS_NORMAL is requested in motif hints,1,[],https://github.com/i3/i3/pull/2386,https://github.com/yshui,3,https://github.com/i3/i3/pull/2386#issuecomment-227917972,Fixes #2385,@acrisci And this seems to be the intention of the original motif hints patch. It's my mistake to not check for BS_NORMAL.,True,{}
i3/i3,https://github.com/i3/i3,2386,2016-06-22T23:33:38Z,2016-06-25T19:35:36Z,2019-04-05T08:41:41Z,MERGED,True,1,1,1,https://github.com/yshui,Don't change border style if BS_NORMAL is requested in motif hints,1,[],https://github.com/i3/i3/pull/2386,https://github.com/shachaf,4,https://github.com/i3/i3/pull/2386#issuecomment-480150170,Fixes #2385,"With this change, when a window sets itself borderless using motif hints, it can't set itself back to bordered. Is that intended? It's not compatible with Metacity, which the comment says is the goal, and it doesn't seem right to me.
If I understand the rationale of the change correctly, maybe it would be better to interpret BS_NORMAL as ""what the border style would have been with no hints"", rather than ""what the border currently is""?",True,{}
i3/i3,https://github.com/i3/i3,2386,2016-06-22T23:33:38Z,2016-06-25T19:35:36Z,2019-04-05T08:41:41Z,MERGED,True,1,1,1,https://github.com/yshui,Don't change border style if BS_NORMAL is requested in motif hints,1,[],https://github.com/i3/i3/pull/2386,https://github.com/Airblader,5,https://github.com/i3/i3/pull/2386#issuecomment-480196442,Fixes #2385,"It's tricky to decide what to do here; on the one hand, some users probably prefer this to be enitrely managed by i3, but others might want Motif hints to be respected.
In any case, let's not discuss it in a merged PR. Can you please open a new issue referencing this issue/PR and outlining the case? Thanks!",True,{}
i3/i3,https://github.com/i3/i3,2392,2016-07-08T20:46:55Z,2016-07-30T18:35:13Z,2016-07-30T21:52:27Z,CLOSED,False,3,1,1,https://github.com/bebehei,break test 528 by changing workspaces,1,[],https://github.com/i3/i3/pull/2392,https://github.com/bebehei,1,https://github.com/i3/i3/pull/2392,FYI for bug #2383,FYI for bug #2383,True,{}
i3/i3,https://github.com/i3/i3,2392,2016-07-08T20:46:55Z,2016-07-30T18:35:13Z,2016-07-30T21:52:27Z,CLOSED,False,3,1,1,https://github.com/bebehei,break test 528 by changing workspaces,1,[],https://github.com/i3/i3/pull/2392,https://github.com/bebehei,2,https://github.com/i3/i3/pull/2392#issuecomment-231469708,FYI for bug #2383,"Switching the workspaces with workspace next or workspace prev should not care about the actual display, where the workspace is located.",True,{}
i3/i3,https://github.com/i3/i3,2392,2016-07-08T20:46:55Z,2016-07-30T18:35:13Z,2016-07-30T21:52:27Z,CLOSED,False,3,1,1,https://github.com/bebehei,break test 528 by changing workspaces,1,[],https://github.com/i3/i3/pull/2392,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/2392#issuecomment-236381837,FYI for bug #2383,"Can you integrate this as a commit into pull request #2393 please? In general, we don’t want to merge pull requests which make the tests fail, and having both commits in the same PR helps us and future readers to understand the change you’re making.",True,{}
i3/i3,https://github.com/i3/i3,2392,2016-07-08T20:46:55Z,2016-07-30T18:35:13Z,2016-07-30T21:52:27Z,CLOSED,False,3,1,1,https://github.com/bebehei,break test 528 by changing workspaces,1,[],https://github.com/i3/i3/pull/2392,https://github.com/bebehei,4,https://github.com/i3/i3/pull/2392#issuecomment-236391895,FYI for bug #2383,Sry. I forgot to close this stub by myself. Thanks for doing it.,True,{}
i3/i3,https://github.com/i3/i3,2393,2016-07-09T11:04:47Z,2016-08-28T16:28:25Z,2020-04-13T12:12:57Z,MERGED,True,201,71,3,https://github.com/bebehei,fix #2383 for numbered workspaces,5,[],https://github.com/i3/i3/pull/2393,https://github.com/bebehei,1,https://github.com/i3/i3/pull/2393,,,True,{}
i3/i3,https://github.com/i3/i3,2393,2016-07-09T11:04:47Z,2016-08-28T16:28:25Z,2020-04-13T12:12:57Z,MERGED,True,201,71,3,https://github.com/bebehei,fix #2383 for numbered workspaces,5,[],https://github.com/i3/i3/pull/2393,https://github.com/bebehei,2,https://github.com/i3/i3/pull/2393#issuecomment-231529109,,"this fixes #2383 for numbered workspaces. It still switches for named workspaces in a different way as the documentation suggests.
For any extra details, consider reading #2383.
Travis Job 1 failed because of docker. Could you please restart it?",True,{}
i3/i3,https://github.com/i3/i3,2393,2016-07-09T11:04:47Z,2016-08-28T16:28:25Z,2020-04-13T12:12:57Z,MERGED,True,201,71,3,https://github.com/bebehei,fix #2383 for numbered workspaces,5,[],https://github.com/i3/i3/pull/2393,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/2393#issuecomment-236381912,,"I’ll wait for @Airblader’s assessment on whether this is a correct fix for issue #2383, but aside from that, could you please modify the commit description to describe what you’re changing instead of just referencing the issue? We’d like to have the git history self-contained.
Thanks!",True,{}
i3/i3,https://github.com/i3/i3,2393,2016-07-09T11:04:47Z,2016-08-28T16:28:25Z,2020-04-13T12:12:57Z,MERGED,True,201,71,3,https://github.com/bebehei,fix #2383 for numbered workspaces,5,[],https://github.com/i3/i3/pull/2393,https://github.com/bebehei,4,https://github.com/i3/i3/pull/2393#issuecomment-236447209,,"tests added and enhanced (found an uncovered bug)

The test configuration may not see straightforward, but it covers most corner cases now.


 rebased
 @Airblader's OK.",True,{}
i3/i3,https://github.com/i3/i3,2393,2016-07-09T11:04:47Z,2016-08-28T16:28:25Z,2020-04-13T12:12:57Z,MERGED,True,201,71,3,https://github.com/bebehei,fix #2383 for numbered workspaces,5,[],https://github.com/i3/i3/pull/2393,https://github.com/Airblader,5,https://github.com/i3/i3/pull/2393#issuecomment-236896198,,"@stapelberg I'm having trouble verifying this because from my point of view we haven't really decided on the correct behavior in the ticket, have we? I'd actually sort of refer to your judgement of how these commands should operate, I don't have a strong opinion about it… :-)",True,{}
i3/i3,https://github.com/i3/i3,2393,2016-07-09T11:04:47Z,2016-08-28T16:28:25Z,2020-04-13T12:12:57Z,MERGED,True,201,71,3,https://github.com/bebehei,fix #2383 for numbered workspaces,5,[],https://github.com/i3/i3/pull/2393,https://github.com/bebehei,6,https://github.com/i3/i3/pull/2393#issuecomment-237569567,,"@stapelberg I'm having trouble verifying this because from my point of view we haven't really decided on the correct behavior in the ticket, have we? I'd actually sort of refer to your judgement of how these commands should operate, I don't have a strong opinion about it… :-)

Quoting @stapelberg #2383:

It’s intentional that numbered workspaces are sorted, whereas named workspaces are kept in the order in which they are created, both in i3bar and when switching workspaces using workspace next.

Isn't this a clear enough definition? Or do you need to understand my changes? Shall I elaborate them?",True,{}
i3/i3,https://github.com/i3/i3,2393,2016-07-09T11:04:47Z,2016-08-28T16:28:25Z,2020-04-13T12:12:57Z,MERGED,True,201,71,3,https://github.com/bebehei,fix #2383 for numbered workspaces,5,[],https://github.com/i3/i3/pull/2393,https://github.com/Airblader,7,https://github.com/i3/i3/pull/2393#issuecomment-237841478,,"Ah, I must've indeed missed that somehow. It looks good to me, mostly going off the tests here. :-)",True,{}
i3/i3,https://github.com/i3/i3,2393,2016-07-09T11:04:47Z,2016-08-28T16:28:25Z,2020-04-13T12:12:57Z,MERGED,True,201,71,3,https://github.com/bebehei,fix #2383 for numbered workspaces,5,[],https://github.com/i3/i3/pull/2393,https://github.com/Airblader,8,https://github.com/i3/i3/pull/2393#issuecomment-241198741,,@stapelberg Should we go ahead with this?,True,{}
i3/i3,https://github.com/i3/i3,2393,2016-07-09T11:04:47Z,2016-08-28T16:28:25Z,2020-04-13T12:12:57Z,MERGED,True,201,71,3,https://github.com/bebehei,fix #2383 for numbered workspaces,5,[],https://github.com/i3/i3/pull/2393,https://github.com/stapelberg,9,https://github.com/i3/i3/pull/2393#issuecomment-241979994,,"Sure.
@bebehei Could you rebase please?",True,{}
i3/i3,https://github.com/i3/i3,2393,2016-07-09T11:04:47Z,2016-08-28T16:28:25Z,2020-04-13T12:12:57Z,MERGED,True,201,71,3,https://github.com/bebehei,fix #2383 for numbered workspaces,5,[],https://github.com/i3/i3/pull/2393,https://github.com/bebehei,10,https://github.com/i3/i3/pull/2393#issuecomment-242003298,,@stapelberg rebased.,True,{}
i3/i3,https://github.com/i3/i3,2397,2016-07-19T15:39:39Z,2016-07-19T18:28:42Z,2016-09-25T22:46:57Z,MERGED,True,1,1,1,https://github.com/Denton-L,Add uxterm to terminal list,1,[],https://github.com/i3/i3/pull/2397,https://github.com/Denton-L,1,https://github.com/i3/i3/pull/2397,,,True,{}
i3/i3,https://github.com/i3/i3,2404,2016-07-25T19:15:08Z,2016-07-30T17:30:26Z,2016-09-25T22:46:57Z,MERGED,True,2,0,2,https://github.com/Denton-L,Update manpages,1,[],https://github.com/i3/i3/pull/2404,https://github.com/Denton-L,1,https://github.com/i3/i3/pull/2404,,,True,{}
i3/i3,https://github.com/i3/i3,2419,2016-08-07T13:26:02Z,2016-08-13T20:46:27Z,2016-09-25T22:46:57Z,MERGED,True,3,7,4,https://github.com/eplanet,Deleting VERSION and extracting it from I3_VERSION instead,1,[],https://github.com/i3/i3/pull/2419,https://github.com/eplanet,1,https://github.com/i3/i3/pull/2419,"In accordance with what was asked in !146 from i3status, here the PR to make the same change.
Result with git clone:
$ ./i3 -v
i3 version 4.12-85-g012de8c (2016-08-03, branch ""next"") © 2009 Michael Stapelberg and contributors
Result with tarball:
$ ./i3 -v
i3 version 4.12-non-git © 2009 Michael Stapelberg and contributors
Note that I updated release.sh but did not run it since it would perform several git commands, and no dry-run is possible. But the change is very limited and then could not go wrong.","In accordance with what was asked in !146 from i3status, here the PR to make the same change.
Result with git clone:
$ ./i3 -v
i3 version 4.12-85-g012de8c (2016-08-03, branch ""next"") © 2009 Michael Stapelberg and contributors
Result with tarball:
$ ./i3 -v
i3 version 4.12-non-git © 2009 Michael Stapelberg and contributors
Note that I updated release.sh but did not run it since it would perform several git commands, and no dry-run is possible. But the change is very limited and then could not go wrong.",True,{}
i3/i3,https://github.com/i3/i3,2431,2016-08-22T13:32:11Z,2016-10-07T18:53:41Z,2016-10-07T18:53:41Z,CLOSED,False,11,6,2,https://github.com/nimaje,Move cleanup code into atexit funtion (`src/main.c:i3_exit`).,2,['waiting'],https://github.com/i3/i3/pull/2431,https://github.com/nimaje,1,https://github.com/i3/i3/pull/2431,"Cleanup should happen on all exits, not only on i3-msg exit.

e.g. I normally call poweroff in a running i3 -> i3 is killed by a signal -> ipc_socket is not unlinked.


As this only moves some code from a function which calls exit(0) into
a function called from atexit this should work (NOT TESTED).","Cleanup should happen on all exits, not only on i3-msg exit.

e.g. I normally call poweroff in a running i3 -> i3 is killed by a signal -> ipc_socket is not unlinked.


As this only moves some code from a function which calls exit(0) into
a function called from atexit this should work (NOT TESTED).",True,{}
i3/i3,https://github.com/i3/i3,2431,2016-08-22T13:32:11Z,2016-10-07T18:53:41Z,2016-10-07T18:53:41Z,CLOSED,False,11,6,2,https://github.com/nimaje,Move cleanup code into atexit funtion (`src/main.c:i3_exit`).,2,['waiting'],https://github.com/i3/i3/pull/2431,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2431#issuecomment-241419605,"Cleanup should happen on all exits, not only on i3-msg exit.

e.g. I normally call poweroff in a running i3 -> i3 is killed by a signal -> ipc_socket is not unlinked.


As this only moves some code from a function which calls exit(0) into
a function called from atexit this should work (NOT TESTED).","Please don't write ""NOT TESTED"" in the commit message. If it's not tested, it won't be merged.",True,{}
i3/i3,https://github.com/i3/i3,2431,2016-08-22T13:32:11Z,2016-10-07T18:53:41Z,2016-10-07T18:53:41Z,CLOSED,False,11,6,2,https://github.com/nimaje,Move cleanup code into atexit funtion (`src/main.c:i3_exit`).,2,['waiting'],https://github.com/i3/i3/pull/2431,https://github.com/nimaje,3,https://github.com/i3/i3/pull/2431#issuecomment-241429704,"Cleanup should happen on all exits, not only on i3-msg exit.

e.g. I normally call poweroff in a running i3 -> i3 is killed by a signal -> ipc_socket is not unlinked.


As this only moves some code from a function which calls exit(0) into
a function called from atexit this should work (NOT TESTED).","Sorry I saw that there is a travis testing and wanted to discuss this change (there is a test for existing of the tmpdir after i3 has exited https://travis-ci.org/i3/i3/jobs/154155169#L3450, ok it tests if the old tmpdir gets cleaned at restart, but tests for the new after it calls exit_gracefully($pid))
This pr only moves some code I didn't expected that tests fail.
Don't konw wath causes this https://travis-ci.org/i3/i3/jobs/154155169#L4483
I can test locally but I would have to install some things first.",True,{}
i3/i3,https://github.com/i3/i3,2431,2016-08-22T13:32:11Z,2016-10-07T18:53:41Z,2016-10-07T18:53:41Z,CLOSED,False,11,6,2,https://github.com/nimaje,Move cleanup code into atexit funtion (`src/main.c:i3_exit`).,2,['waiting'],https://github.com/i3/i3/pull/2431,https://github.com/Airblader,4,https://github.com/i3/i3/pull/2431#issuecomment-241436296,"Cleanup should happen on all exits, not only on i3-msg exit.

e.g. I normally call poweroff in a running i3 -> i3 is killed by a signal -> ipc_socket is not unlinked.


As this only moves some code from a function which calls exit(0) into
a function called from atexit this should work (NOT TESTED).","I didn't so much mean the automatic tests. If you author a change I would expect you run the changed binary locally for a bit to see if it works. A smoke / sanity test, if you will. Since you hadn't built the project I guess you didn't runt the binary either.
Travis fails because a test is failing (see line 475)",True,{}
i3/i3,https://github.com/i3/i3,2431,2016-08-22T13:32:11Z,2016-10-07T18:53:41Z,2016-10-07T18:53:41Z,CLOSED,False,11,6,2,https://github.com/nimaje,Move cleanup code into atexit funtion (`src/main.c:i3_exit`).,2,['waiting'],https://github.com/i3/i3/pull/2431,https://github.com/nimaje,5,https://github.com/i3/i3/pull/2431#issuecomment-241441392,"Cleanup should happen on all exits, not only on i3-msg exit.

e.g. I normally call poweroff in a running i3 -> i3 is killed by a signal -> ipc_socket is not unlinked.


As this only moves some code from a function which calls exit(0) into
a function called from atexit this should work (NOT TESTED).","Ok will do that soon.
I wanted to first discuss the change, but I understand your point.",True,{}
i3/i3,https://github.com/i3/i3,2431,2016-08-22T13:32:11Z,2016-10-07T18:53:41Z,2016-10-07T18:53:41Z,CLOSED,False,11,6,2,https://github.com/nimaje,Move cleanup code into atexit funtion (`src/main.c:i3_exit`).,2,['waiting'],https://github.com/i3/i3/pull/2431,https://github.com/Airblader,6,https://github.com/i3/i3/pull/2431#issuecomment-241446888,"Cleanup should happen on all exits, not only on i3-msg exit.

e.g. I normally call poweroff in a running i3 -> i3 is killed by a signal -> ipc_socket is not unlinked.


As this only moves some code from a function which calls exit(0) into
a function called from atexit this should work (NOT TESTED).","It's fine if you want to discuss it first, but you hadn't mentioned that originally so I viewed it as a request for merge.",True,{}
i3/i3,https://github.com/i3/i3,2431,2016-08-22T13:32:11Z,2016-10-07T18:53:41Z,2016-10-07T18:53:41Z,CLOSED,False,11,6,2,https://github.com/nimaje,Move cleanup code into atexit funtion (`src/main.c:i3_exit`).,2,['waiting'],https://github.com/i3/i3/pull/2431,https://github.com/nimaje,7,https://github.com/i3/i3/pull/2431#issuecomment-241488358,"Cleanup should happen on all exits, not only on i3-msg exit.

e.g. I normally call poweroff in a running i3 -> i3 is killed by a signal -> ipc_socket is not unlinked.


As this only moves some code from a function which calls exit(0) into
a function called from atexit this should work (NOT TESTED).","ok locally tested.
Seems like everything works, except it only removes the files in /tmp with i3-msg exit or i3-msg restart not if i3 is killed via a signal.
As this change breaks a travis test this cleanup is new although it is moved from where i3-msg exit should be defined.
Locally I have corrected the test to exit i3 after checking the tmpdirs not before.
I made this pr because i3 doesn't cleanup in /tmp with my useage and the code in src/command.c:cmd_exit looked like the right cleanup code (and like code which should be called at any exit).",True,{}
i3/i3,https://github.com/i3/i3,2431,2016-08-22T13:32:11Z,2016-10-07T18:53:41Z,2016-10-07T18:53:41Z,CLOSED,False,11,6,2,https://github.com/nimaje,Move cleanup code into atexit funtion (`src/main.c:i3_exit`).,2,['waiting'],https://github.com/i3/i3/pull/2431,https://github.com/Airblader,8,https://github.com/i3/i3/pull/2431#issuecomment-246473838,"Cleanup should happen on all exits, not only on i3-msg exit.

e.g. I normally call poweroff in a running i3 -> i3 is killed by a signal -> ipc_socket is not unlinked.


As this only moves some code from a function which calls exit(0) into
a function called from atexit this should work (NOT TESTED).",@nimaje Are you going to continue work on this?,True,{}
i3/i3,https://github.com/i3/i3,2431,2016-08-22T13:32:11Z,2016-10-07T18:53:41Z,2016-10-07T18:53:41Z,CLOSED,False,11,6,2,https://github.com/nimaje,Move cleanup code into atexit funtion (`src/main.c:i3_exit`).,2,['waiting'],https://github.com/i3/i3/pull/2431,https://github.com/nimaje,9,https://github.com/i3/i3/pull/2431#issuecomment-246830367,"Cleanup should happen on all exits, not only on i3-msg exit.

e.g. I normally call poweroff in a running i3 -> i3 is killed by a signal -> ipc_socket is not unlinked.


As this only moves some code from a function which calls exit(0) into
a function called from atexit this should work (NOT TESTED).",Yes,True,{}
i3/i3,https://github.com/i3/i3,2431,2016-08-22T13:32:11Z,2016-10-07T18:53:41Z,2016-10-07T18:53:41Z,CLOSED,False,11,6,2,https://github.com/nimaje,Move cleanup code into atexit funtion (`src/main.c:i3_exit`).,2,['waiting'],https://github.com/i3/i3/pull/2431,https://github.com/Airblader,10,https://github.com/i3/i3/pull/2431#issuecomment-252249592,"Cleanup should happen on all exits, not only on i3-msg exit.

e.g. I normally call poweroff in a running i3 -> i3 is killed by a signal -> ipc_socket is not unlinked.


As this only moves some code from a function which calls exit(0) into
a function called from atexit this should work (NOT TESTED).","@nimaje Not to bother you, but it's been another 3.5 weeks. If you'll continue on it that's fine, but I'm just checking in because otherwise we can close the PR.",True,{}
i3/i3,https://github.com/i3/i3,2431,2016-08-22T13:32:11Z,2016-10-07T18:53:41Z,2016-10-07T18:53:41Z,CLOSED,False,11,6,2,https://github.com/nimaje,Move cleanup code into atexit funtion (`src/main.c:i3_exit`).,2,['waiting'],https://github.com/i3/i3/pull/2431,https://github.com/nimaje,11,https://github.com/i3/i3/pull/2431#issuecomment-252332580,"Cleanup should happen on all exits, not only on i3-msg exit.

e.g. I normally call poweroff in a running i3 -> i3 is killed by a signal -> ipc_socket is not unlinked.


As this only moves some code from a function which calls exit(0) into
a function called from atexit this should work (NOT TESTED).","I give up on this for now, maybe I look later on this again.
I don't know why it changes the test result (this implies exit_gracefully($pid) always hits 'kill with signal case' in failed test and these changes work, but on my machine it doesn't call i3_exit at exit from signal).
You could try if it works for you if you want.
To try:

start a binary with this changes (suggestion in xephyr)
use i3 --get-socketpath
kill i3 with SIGINT (e.g. kill -2 i3pid where i3pid is the last number in output of step 2)
check whether the socketfile (output of step 2) exists.
It shouldn't exist anymore",True,{}
i3/i3,https://github.com/i3/i3,2443,2016-09-09T22:40:30Z,2016-09-12T10:15:38Z,2017-01-10T08:41:42Z,CLOSED,False,23,2,1,https://github.com/nmschulte,Fix NumLock changes when using Shift,2,[],https://github.com/i3/i3/pull/2443,https://github.com/nmschulte,1,https://github.com/i3/i3/pull/2443,"I don't think this fixes all of the issues, but this does seem to fix the issue related to bindsyms w/ Shift not working when the numeric lock is enabled.  I noticed that some of the bindsyms used in ""modes"" do not work w/ numeric lock still.
bindsym $mod1+b exec notify-send ""$mod1+b""
bindsym $mod1+Shift+b exec notify-send ""$mod1+Shift+b""","I don't think this fixes all of the issues, but this does seem to fix the issue related to bindsyms w/ Shift not working when the numeric lock is enabled.  I noticed that some of the bindsyms used in ""modes"" do not work w/ numeric lock still.
bindsym $mod1+b exec notify-send ""$mod1+b""
bindsym $mod1+Shift+b exec notify-send ""$mod1+Shift+b""",True,{}
i3/i3,https://github.com/i3/i3,2443,2016-09-09T22:40:30Z,2016-09-12T10:15:38Z,2017-01-10T08:41:42Z,CLOSED,False,23,2,1,https://github.com/nmschulte,Fix NumLock changes when using Shift,2,[],https://github.com/i3/i3/pull/2443,https://github.com/nmschulte,2,https://github.com/i3/i3/pull/2443#issuecomment-246061013,"I don't think this fixes all of the issues, but this does seem to fix the issue related to bindsyms w/ Shift not working when the numeric lock is enabled.  I noticed that some of the bindsyms used in ""modes"" do not work w/ numeric lock still.
bindsym $mod1+b exec notify-send ""$mod1+b""
bindsym $mod1+Shift+b exec notify-send ""$mod1+Shift+b""","I don't know much about the XKB/X keyboard stack, but from reviewing the code and a referencing the docs for the used API, along w/ the changes causing issue, this is what I came up with.  It seems like this is just a ""thinko,"" and some of the prior cases were missed w/ the new logic.
It's not clear to me why this doesn't fix the ""modal"" bindings, though.
Also, I didn't update the tests.",True,{}
i3/i3,https://github.com/i3/i3,2443,2016-09-09T22:40:30Z,2016-09-12T10:15:38Z,2017-01-10T08:41:42Z,CLOSED,False,23,2,1,https://github.com/nmschulte,Fix NumLock changes when using Shift,2,[],https://github.com/i3/i3/pull/2443,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/2443#issuecomment-246305938,"I don't think this fixes all of the issues, but this does seem to fix the issue related to bindsyms w/ Shift not working when the numeric lock is enabled.  I noticed that some of the bindsyms used in ""modes"" do not work w/ numeric lock still.
bindsym $mod1+b exec notify-send ""$mod1+b""
bindsym $mod1+Shift+b exec notify-send ""$mod1+Shift+b""","I think this is obsoleted by commit 0469716. Please let me know in case I missed something, ideally on issue #2418 itself.",True,{}
i3/i3,https://github.com/i3/i3,2443,2016-09-09T22:40:30Z,2016-09-12T10:15:38Z,2017-01-10T08:41:42Z,CLOSED,False,23,2,1,https://github.com/nmschulte,Fix NumLock changes when using Shift,2,[],https://github.com/i3/i3/pull/2443,https://github.com/stapelberg,4,https://github.com/i3/i3/pull/2443#issuecomment-246479914,"I don't think this fixes all of the issues, but this does seem to fix the issue related to bindsyms w/ Shift not working when the numeric lock is enabled.  I noticed that some of the bindsyms used in ""modes"" do not work w/ numeric lock still.
bindsym $mod1+b exec notify-send ""$mod1+b""
bindsym $mod1+Shift+b exec notify-send ""$mod1+Shift+b""",Merged this manually (with another fix applied on top). Thanks!,True,{'THUMBS_UP': ['https://github.com/nmschulte']}
i3/i3,https://github.com/i3/i3,2445,2016-09-11T09:22:20Z,2016-09-12T20:02:54Z,2016-09-12T20:02:54Z,CLOSED,False,7,0,2,https://github.com/simonnagl,Hint to use $TERMINAL with i3-sesible-terminal,1,[],https://github.com/i3/i3/pull/2445,https://github.com/simonnagl,1,https://github.com/i3/i3/pull/2445,"I had the issue because of wrong configuration the preferred terminal was no longer in the $PATH.
I did not know this option of i3-sensible-terminal. I fried of mine helped me out.
I hope this can help some people in the future.","I had the issue because of wrong configuration the preferred terminal was no longer in the $PATH.
I did not know this option of i3-sensible-terminal. I fried of mine helped me out.
I hope this can help some people in the future.",True,{}
i3/i3,https://github.com/i3/i3,2445,2016-09-11T09:22:20Z,2016-09-12T20:02:54Z,2016-09-12T20:02:54Z,CLOSED,False,7,0,2,https://github.com/simonnagl,Hint to use $TERMINAL with i3-sesible-terminal,1,[],https://github.com/i3/i3/pull/2445,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2445#issuecomment-246171053,"I had the issue because of wrong configuration the preferred terminal was no longer in the $PATH.
I did not know this option of i3-sensible-terminal. I fried of mine helped me out.
I hope this can help some people in the future.",I don't get it. Why use i3-sensible-terminal at all if you're gonna force which terminal to use anyway?,True,{}
i3/i3,https://github.com/i3/i3,2445,2016-09-11T09:22:20Z,2016-09-12T20:02:54Z,2016-09-12T20:02:54Z,CLOSED,False,7,0,2,https://github.com/simonnagl,Hint to use $TERMINAL with i3-sesible-terminal,1,[],https://github.com/i3/i3/pull/2445,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/2445#issuecomment-246260584,"I had the issue because of wrong configuration the preferred terminal was no longer in the $PATH.
I did not know this option of i3-sensible-terminal. I fried of mine helped me out.
I hope this can help some people in the future.","As @Airblader mentioned, it’d be more efficient to use e.g. bindsym $mod+Return exec exec /usr/bin/urxvtc directly (note the double exec to avoid extraneous shell processes with e.g. dash).
i3-sensible-terminal only uses the TERMINAL environment variable in case you already have that in your environment for some reason (perhaps you don’t like to touch program-specific configuration files).",True,{}
i3/i3,https://github.com/i3/i3,2445,2016-09-11T09:22:20Z,2016-09-12T20:02:54Z,2016-09-12T20:02:54Z,CLOSED,False,7,0,2,https://github.com/simonnagl,Hint to use $TERMINAL with i3-sesible-terminal,1,[],https://github.com/i3/i3/pull/2445,https://github.com/Airblader,4,https://github.com/i3/i3/pull/2445#issuecomment-246473300,"I had the issue because of wrong configuration the preferred terminal was no longer in the $PATH.
I did not know this option of i3-sensible-terminal. I fried of mine helped me out.
I hope this can help some people in the future.",I'll close this for the aforementioned reasons.,True,{}
i3/i3,https://github.com/i3/i3,2450,2016-09-12T20:00:17Z,2016-09-14T07:13:18Z,2016-09-25T22:46:57Z,MERGED,True,18,7,2,https://github.com/Airblader,Fix colormap handling for containers.,1,[],https://github.com/i3/i3/pull/2450,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2450,"This commit correctly handles colormaps by

Using the static default colormap we determine on startup if the
con has the corresponding depth. This avoids creating pointless
colormaps.
Not freeing the default colormap to not have stray colormaps on
containers. This fixes an issue with certain programs such as xwd.
Creating a custom colormap when necessary and freeing it when the
container is killed.

fixes #2435","This commit correctly handles colormaps by

Using the static default colormap we determine on startup if the
con has the corresponding depth. This avoids creating pointless
colormaps.
Not freeing the default colormap to not have stray colormaps on
containers. This fixes an issue with certain programs such as xwd.
Creating a custom colormap when necessary and freeing it when the
container is killed.

fixes #2435",True,{}
i3/i3,https://github.com/i3/i3,2450,2016-09-12T20:00:17Z,2016-09-14T07:13:18Z,2016-09-25T22:46:57Z,MERGED,True,18,7,2,https://github.com/Airblader,Fix colormap handling for containers.,1,[],https://github.com/i3/i3/pull/2450,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2450#issuecomment-246483448,"This commit correctly handles colormaps by

Using the static default colormap we determine on startup if the
con has the corresponding depth. This avoids creating pointless
colormaps.
Not freeing the default colormap to not have stray colormaps on
containers. This fixes an issue with certain programs such as xwd.
Creating a custom colormap when necessary and freeing it when the
container is killed.

fixes #2435",I think we also need to dump this property so we can restore it after an in-place restart. Otherwise we leave garbage in the server.,True,{}
i3/i3,https://github.com/i3/i3,2450,2016-09-12T20:00:17Z,2016-09-14T07:13:18Z,2016-09-25T22:46:57Z,MERGED,True,18,7,2,https://github.com/Airblader,Fix colormap handling for containers.,1,[],https://github.com/i3/i3/pull/2450,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2450#issuecomment-246501365,"This commit correctly handles colormaps by

Using the static default colormap we determine on startup if the
con has the corresponding depth. This avoids creating pointless
colormaps.
Not freeing the default colormap to not have stray colormaps on
containers. This fixes an issue with certain programs such as xwd.
Creating a custom colormap when necessary and freeing it when the
container is killed.

fixes #2435","Actually I can't quite explain why, but not doing so seems to be correct. At least when I attempt to dump & parse it, I get pretty bad glitching. Perhaps colormaps are freed by the server if the client disconnects? Either way, everything seems to be OK.",True,{}
i3/i3,https://github.com/i3/i3,2450,2016-09-12T20:00:17Z,2016-09-14T07:13:18Z,2016-09-25T22:46:57Z,MERGED,True,18,7,2,https://github.com/Airblader,Fix colormap handling for containers.,1,[],https://github.com/i3/i3/pull/2450,https://github.com/Airblader,4,https://github.com/i3/i3/pull/2450#issuecomment-246832185,"This commit correctly handles colormaps by

Using the static default colormap we determine on startup if the
con has the corresponding depth. This avoids creating pointless
colormaps.
Not freeing the default colormap to not have stray colormaps on
containers. This fixes an issue with certain programs such as xwd.
Creating a custom colormap when necessary and freeing it when the
container is killed.

fixes #2435","@stapelberg OK, should be good to go now.",True,{}
i3/i3,https://github.com/i3/i3,2453,2016-09-14T20:20:57Z,2016-09-24T15:16:03Z,2016-11-21T10:31:14Z,MERGED,True,3,1,1,https://github.com/stapelberg,travis/cleanup-bintray: use dpkg --compare-versions,1,[],https://github.com/i3/i3/pull/2453,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2453,"…instead of lexicographically sorting strings, which fails for the
following situation:
4.12-96-g086276b
4.12-97-g59c070b
4.12-108-gb850cfb

This bug resulted in new packages being built and uploaded, then
immediately deleted.
Thanks to eeemsi for reporting the issue.","…instead of lexicographically sorting strings, which fails for the
following situation:
4.12-96-g086276b
4.12-97-g59c070b
4.12-108-gb850cfb

This bug resulted in new packages being built and uploaded, then
immediately deleted.
Thanks to eeemsi for reporting the issue.",True,{}
i3/i3,https://github.com/i3/i3,2453,2016-09-14T20:20:57Z,2016-09-24T15:16:03Z,2016-11-21T10:31:14Z,MERGED,True,3,1,1,https://github.com/stapelberg,travis/cleanup-bintray: use dpkg --compare-versions,1,[],https://github.com/i3/i3/pull/2453,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/2453#issuecomment-247141041,"…instead of lexicographically sorting strings, which fails for the
following situation:
4.12-96-g086276b
4.12-97-g59c070b
4.12-108-gb850cfb

This bug resulted in new packages being built and uploaded, then
immediately deleted.
Thanks to eeemsi for reporting the issue.",@Airblader Could you take a look at this PR please? :),True,{}
i3/i3,https://github.com/i3/i3,2453,2016-09-14T20:20:57Z,2016-09-24T15:16:03Z,2016-11-21T10:31:14Z,MERGED,True,3,1,1,https://github.com/stapelberg,travis/cleanup-bintray: use dpkg --compare-versions,1,[],https://github.com/i3/i3/pull/2453,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2453#issuecomment-247142614,"…instead of lexicographically sorting strings, which fails for the
following situation:
4.12-96-g086276b
4.12-97-g59c070b
4.12-108-gb850cfb

This bug resulted in new packages being built and uploaded, then
immediately deleted.
Thanks to eeemsi for reporting the issue.","Just for reference, assigning the review to somebody also triggers a notification, so an explicit comment isn't necessarily needed (but of course adds context) :-)",True,{}
i3/i3,https://github.com/i3/i3,2457,2016-09-17T16:08:35Z,2016-09-27T05:39:17Z,2016-11-13T18:49:01Z,MERGED,True,40,8,3,https://github.com/Airblader,Assign the sticky value for _NET_WM_DESKTOP on scratchpad windows.,1,[],https://github.com/i3/i3/pull/2457,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2457,fixes #2456,fixes #2456,True,{}
i3/i3,https://github.com/i3/i3,2457,2016-09-17T16:08:35Z,2016-09-27T05:39:17Z,2016-11-13T18:49:01Z,MERGED,True,40,8,3,https://github.com/Airblader,Assign the sticky value for _NET_WM_DESKTOP on scratchpad windows.,1,[],https://github.com/i3/i3/pull/2457,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2457#issuecomment-247787716,fixes #2456,I can't make sense of the failing tests. They pass reproducibly on my machine and executing what seems to be failing (moving a workspace to scratchpad) manually on my machine also works fine. I'll have to dig deeper on why it's failing.,True,{}
i3/i3,https://github.com/i3/i3,2457,2016-09-17T16:08:35Z,2016-09-27T05:39:17Z,2016-11-13T18:49:01Z,MERGED,True,40,8,3,https://github.com/Airblader,Assign the sticky value for _NET_WM_DESKTOP on scratchpad windows.,1,[],https://github.com/i3/i3/pull/2457,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2457#issuecomment-247801945,fixes #2456,"OK, so this is starting to become super weird. Through some test commits I have identified that if the line
xcb_change_property(conn, XCB_PROP_MODE_REPLACE, window, A__NET_WM_DESKTOP, XCB_ATOM_CARDINAL, 32, 1, (uint32_t[]){wm_desktop});

is executed in the scratchpad case, the test fails. And since it times out I assume i3 crashes. Given that everything in that line is used before, I am currently at a complete loss of ideas as to what is failing.",True,{}
i3/i3,https://github.com/i3/i3,2457,2016-09-17T16:08:35Z,2016-09-27T05:39:17Z,2016-11-13T18:49:01Z,MERGED,True,40,8,3,https://github.com/Airblader,Assign the sticky value for _NET_WM_DESKTOP on scratchpad windows.,1,[],https://github.com/i3/i3/pull/2457,https://github.com/Airblader,4,https://github.com/i3/i3/pull/2457#issuecomment-247845674,fixes #2456,"I've put some extra does_i3_live in the failing test case. Oddly, this made the tests pass for gcc, but fail at the same point in clang. It also shows that the test fails before it even really started – the only i3 command executed at that point for this test case is fresh_workspace, not even the windows have been opened yet.",True,{}
i3/i3,https://github.com/i3/i3,2457,2016-09-17T16:08:35Z,2016-09-27T05:39:17Z,2016-11-13T18:49:01Z,MERGED,True,40,8,3,https://github.com/Airblader,Assign the sticky value for _NET_WM_DESKTOP on scratchpad windows.,1,[],https://github.com/i3/i3/pull/2457,https://github.com/Airblader,5,https://github.com/i3/i3/pull/2457#issuecomment-247846329,fixes #2456,It seems like opening the fresh workspace is what causes the crash. Since I cannot reproduce this either through running tests locally nor doing it myself on my system I'm still having a hard time finding the root cause of the crash.,True,{}
i3/i3,https://github.com/i3/i3,2457,2016-09-17T16:08:35Z,2016-09-27T05:39:17Z,2016-11-13T18:49:01Z,MERGED,True,40,8,3,https://github.com/Airblader,Assign the sticky value for _NET_WM_DESKTOP on scratchpad windows.,1,[],https://github.com/i3/i3/pull/2457,https://github.com/Airblader,6,https://github.com/i3/i3/pull/2457#issuecomment-247848622,fixes #2456,"OK, I found an issue now which I believe to be the root cause of the crash, though I don't quite know where the crash happens yet (probably some assertion). When we restart, we see the _NET_WM_DESKTOP value and assume the window is sticky. Once that window is taken from the scratchpad it is now sticky – boom.",True,{}
i3/i3,https://github.com/i3/i3,2457,2016-09-17T16:08:35Z,2016-09-27T05:39:17Z,2016-11-13T18:49:01Z,MERGED,True,40,8,3,https://github.com/Airblader,Assign the sticky value for _NET_WM_DESKTOP on scratchpad windows.,1,[],https://github.com/i3/i3/pull/2457,https://github.com/Airblader,7,https://github.com/i3/i3/pull/2457#issuecomment-247849343,fixes #2456,@stapelberg Finally done. Nothing like some good old foo debugging on a remote machine…,True,{}
i3/i3,https://github.com/i3/i3,2457,2016-09-17T16:08:35Z,2016-09-27T05:39:17Z,2016-11-13T18:49:01Z,MERGED,True,40,8,3,https://github.com/Airblader,Assign the sticky value for _NET_WM_DESKTOP on scratchpad windows.,1,[],https://github.com/i3/i3/pull/2457,https://github.com/stapelberg,8,https://github.com/i3/i3/pull/2457#issuecomment-249617486,fixes #2456,Can you rebase please?,True,{}
i3/i3,https://github.com/i3/i3,2457,2016-09-17T16:08:35Z,2016-09-27T05:39:17Z,2016-11-13T18:49:01Z,MERGED,True,40,8,3,https://github.com/Airblader,Assign the sticky value for _NET_WM_DESKTOP on scratchpad windows.,1,[],https://github.com/i3/i3/pull/2457,https://github.com/Airblader,9,https://github.com/i3/i3/pull/2457#issuecomment-249657303,fixes #2456,@stapelberg Rebased.,True,{}
i3/i3,https://github.com/i3/i3,2457,2016-09-17T16:08:35Z,2016-09-27T05:39:17Z,2016-11-13T18:49:01Z,MERGED,True,40,8,3,https://github.com/Airblader,Assign the sticky value for _NET_WM_DESKTOP on scratchpad windows.,1,[],https://github.com/i3/i3/pull/2457,https://github.com/stapelberg,10,https://github.com/i3/i3/pull/2457#issuecomment-249743404,fixes #2456,"Sorry, the other PR I merged earlier actually conflicts with this one. Could you rebase again please?",True,{}
i3/i3,https://github.com/i3/i3,2457,2016-09-17T16:08:35Z,2016-09-27T05:39:17Z,2016-11-13T18:49:01Z,MERGED,True,40,8,3,https://github.com/Airblader,Assign the sticky value for _NET_WM_DESKTOP on scratchpad windows.,1,[],https://github.com/i3/i3/pull/2457,https://github.com/Airblader,11,https://github.com/i3/i3/pull/2457#issuecomment-249770918,fixes #2456,@stapelberg Fixed,True,{}
i3/i3,https://github.com/i3/i3,2458,2016-09-17T16:08:57Z,2016-09-27T01:32:05Z,2016-11-13T18:49:01Z,MERGED,True,31,5,2,https://github.com/Airblader,Handle _NET_ACTIVE_WINDOW for scratchpad windows.,1,['waiting'],https://github.com/i3/i3/pull/2458,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2458,"We call scratchpad_show() on _NET_ACTIVE_WINDOW requests if the request
came from a pager. This is consistent with the i3 »focus« command because
we assume the user requested to see the window, so we do the only
sensible thing.
fixes #2455","We call scratchpad_show() on _NET_ACTIVE_WINDOW requests if the request
came from a pager. This is consistent with the i3 »focus« command because
we assume the user requested to see the window, so we do the only
sensible thing.
fixes #2455",True,{}
i3/i3,https://github.com/i3/i3,2458,2016-09-17T16:08:57Z,2016-09-27T01:32:05Z,2016-11-13T18:49:01Z,MERGED,True,31,5,2,https://github.com/Airblader,Handle _NET_ACTIVE_WINDOW for scratchpad windows.,1,['waiting'],https://github.com/i3/i3/pull/2458,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/2458#issuecomment-249616664,"We call scratchpad_show() on _NET_ACTIVE_WINDOW requests if the request
came from a pager. This is consistent with the i3 »focus« command because
we assume the user requested to see the window, so we do the only
sensible thing.
fixes #2455",Could you add a testcase for this please?,True,{}
i3/i3,https://github.com/i3/i3,2458,2016-09-17T16:08:57Z,2016-09-27T01:32:05Z,2016-11-13T18:49:01Z,MERGED,True,31,5,2,https://github.com/Airblader,Handle _NET_ACTIVE_WINDOW for scratchpad windows.,1,['waiting'],https://github.com/i3/i3/pull/2458,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2458#issuecomment-249662049,"We call scratchpad_show() on _NET_ACTIVE_WINDOW requests if the request
came from a pager. This is consistent with the i3 »focus« command because
we assume the user requested to see the window, so we do the only
sensible thing.
fixes #2455",There is a test for the old behavior which still seems to pass. I'll look into that.,True,{}
i3/i3,https://github.com/i3/i3,2458,2016-09-17T16:08:57Z,2016-09-27T01:32:05Z,2016-11-13T18:49:01Z,MERGED,True,31,5,2,https://github.com/Airblader,Handle _NET_ACTIVE_WINDOW for scratchpad windows.,1,['waiting'],https://github.com/i3/i3/pull/2458,https://github.com/Airblader,4,https://github.com/i3/i3/pull/2458#issuecomment-249668653,"We call scratchpad_show() on _NET_ACTIVE_WINDOW requests if the request
came from a pager. This is consistent with the i3 »focus« command because
we assume the user requested to see the window, so we do the only
sensible thing.
fixes #2455",@stapelberg I've added a test. The old test still passed because I forgot the change only applies to pagers. :-),True,{}
i3/i3,https://github.com/i3/i3,2462,2016-09-19T22:25:22Z,2016-09-24T17:53:02Z,2016-09-25T22:46:57Z,MERGED,True,2,1,1,https://github.com/Airblader,Fix link in the documentation.,1,[],https://github.com/i3/i3/pull/2462,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2462,"This replaces the dead pull request #2242. Thanks to @pniederlag for noticing the
issue and providing the original PR.","This replaces the dead pull request #2242. Thanks to @pniederlag for noticing the
issue and providing the original PR.",True,{}
i3/i3,https://github.com/i3/i3,2462,2016-09-19T22:25:22Z,2016-09-24T17:53:02Z,2016-09-25T22:46:57Z,MERGED,True,2,1,1,https://github.com/Airblader,Fix link in the documentation.,1,[],https://github.com/i3/i3/pull/2462,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2462#issuecomment-249374582,"This replaces the dead pull request #2242. Thanks to @pniederlag for noticing the
issue and providing the original PR.",@stapelberg Rebased,True,{}
i3/i3,https://github.com/i3/i3,2469,2016-09-23T13:13:18Z,2016-09-27T01:30:18Z,2016-09-27T05:31:39Z,MERGED,True,78,16,9,https://github.com/Airblader,Use Xft.dpi for DPI if available.,2,[],https://github.com/i3/i3/pull/2469,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2469,fixes #2465,fixes #2465,True,{}
i3/i3,https://github.com/i3/i3,2469,2016-09-23T13:13:18Z,2016-09-27T01:30:18Z,2016-09-27T05:31:39Z,MERGED,True,78,16,9,https://github.com/Airblader,Use Xft.dpi for DPI if available.,2,[],https://github.com/i3/i3/pull/2469,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2469#issuecomment-249390122,fixes #2465,"@stapelberg OK, you can look at this now.",True,{}
i3/i3,https://github.com/i3/i3,2469,2016-09-23T13:13:18Z,2016-09-27T01:30:18Z,2016-09-27T05:31:39Z,MERGED,True,78,16,9,https://github.com/Airblader,Use Xft.dpi for DPI if available.,2,[],https://github.com/i3/i3/pull/2469,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/2469#issuecomment-249621636,fixes #2465,Can you rebase please?,True,{}
i3/i3,https://github.com/i3/i3,2469,2016-09-23T13:13:18Z,2016-09-27T01:30:18Z,2016-09-27T05:31:39Z,MERGED,True,78,16,9,https://github.com/Airblader,Use Xft.dpi for DPI if available.,2,[],https://github.com/i3/i3/pull/2469,https://github.com/Airblader,4,https://github.com/i3/i3/pull/2469#issuecomment-249657326,fixes #2465,@stapelberg Rebased.,True,{}
i3/i3,https://github.com/i3/i3,2471,2016-09-23T21:38:49Z,2016-09-26T15:01:30Z,2016-09-26T18:36:13Z,MERGED,True,3,0,1,https://github.com/koebi,fix i3bar crashing when I3SOCK present,2,[],https://github.com/i3/i3/pull/2471,https://github.com/koebi,1,https://github.com/i3/i3/pull/2471,"When I3SOCK is present, socket_path might be a pointer to an
environment variable, which cannot be free'd in line 157. This
commit duplicates the string if I3SOCK is present, thus making
socket_path a free-able pointer again.
fixes #2468","When I3SOCK is present, socket_path might be a pointer to an
environment variable, which cannot be free'd in line 157. This
commit duplicates the string if I3SOCK is present, thus making
socket_path a free-able pointer again.
fixes #2468",True,{}
i3/i3,https://github.com/i3/i3,2471,2016-09-23T21:38:49Z,2016-09-26T15:01:30Z,2016-09-26T18:36:13Z,MERGED,True,3,0,1,https://github.com/koebi,fix i3bar crashing when I3SOCK present,2,[],https://github.com/i3/i3/pull/2471,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/2471#issuecomment-249371711,"When I3SOCK is present, socket_path might be a pointer to an
environment variable, which cannot be free'd in line 157. This
commit duplicates the string if I3SOCK is present, thus making
socket_path a free-able pointer again.
fixes #2468",Can you rebase to the next branch please? I can’t merge this otherwise :).,True,{}
i3/i3,https://github.com/i3/i3,2471,2016-09-23T21:38:49Z,2016-09-26T15:01:30Z,2016-09-26T18:36:13Z,MERGED,True,3,0,1,https://github.com/koebi,fix i3bar crashing when I3SOCK present,2,[],https://github.com/i3/i3/pull/2471,https://github.com/koebi,3,https://github.com/i3/i3/pull/2471#issuecomment-249522934,"When I3SOCK is present, socket_path might be a pointer to an
environment variable, which cannot be free'd in line 157. This
commit duplicates the string if I3SOCK is present, thus making
socket_path a free-able pointer again.
fixes #2468","gh says this is merge-able, and I think it is based on next. I am not sure though, I had some trouble with git earlier on…",True,{}
i3/i3,https://github.com/i3/i3,2472,2016-09-24T15:35:19Z,2016-09-27T02:04:13Z,2016-09-27T05:31:29Z,MERGED,True,3,5,3,https://github.com/stapelberg,Unconditionally depend on libpcre >= 8.10,1,[],https://github.com/i3/i3/pull/2472,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2472,"Even Debian oldstable has 8.30, so let’s get rid of conditional
compilation where we don’t actually need it.","Even Debian oldstable has 8.30, so let’s get rid of conditional
compilation where we don’t actually need it.",True,{}
i3/i3,https://github.com/i3/i3,2472,2016-09-24T15:35:19Z,2016-09-27T02:04:13Z,2016-09-27T05:31:29Z,MERGED,True,3,5,3,https://github.com/stapelberg,Unconditionally depend on libpcre >= 8.10,1,[],https://github.com/i3/i3/pull/2472,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/2472#issuecomment-249384249,"Even Debian oldstable has 8.30, so let’s get rid of conditional
compilation where we don’t actually need it.","The travis build is failing because of the Perl transition in Debian, so I’ll hold off a few days before going forward with this PR.",True,{}
i3/i3,https://github.com/i3/i3,2473,2016-09-24T15:49:51Z,2016-09-24T16:48:32Z,2016-11-21T10:31:49Z,MERGED,True,16,81,13,https://github.com/stapelberg,Remove compatibility definitions for xcb-util < 0.3.8,1,[],https://github.com/i3/i3/pull/2473,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2473,Even Debian oldstable has xcb-util 0.3.8.,Even Debian oldstable has xcb-util 0.3.8.,True,{}
i3/i3,https://github.com/i3/i3,2474,2016-09-24T19:12:22Z,2016-09-24T19:24:47Z,2016-11-21T10:30:56Z,MERGED,True,8,6,3,https://github.com/stapelberg,"travis: build ubuntu packages for xenial, not wily",1,[],https://github.com/i3/i3/pull/2474,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2474,"The extra rm command when configuring the repository is necessary
because of https://bugs.debian.org/838779.","The extra rm command when configuring the repository is necessary
because of https://bugs.debian.org/838779.",True,{}
i3/i3,https://github.com/i3/i3,2476,2016-09-25T17:09:01Z,2017-01-21T12:24:09Z,2017-01-21T12:24:10Z,CLOSED,False,28,10,6,https://github.com/BenoitAverty,Add the option to toggle between stacked/tabbed layout,2,[],https://github.com/i3/i3/pull/2476,https://github.com/BenoitAverty,1,https://github.com/i3/i3/pull/2476,"This PR adds a parameter called ""stack_tab"" to the ""layout toggle"" command. This makes it possible to toggle between stacked and tabbed layouts, muck like the ""layout toggle split"" works for splitv/splith layouts.
I don't like the name of the parameter very much, but I didn't have a better idea, so suggestions are welcome on that point :)
A possible improvement would be to remember the last layout used between stacked and tabbed, so that running the layout toggle stack_tab command when the layout is neither of them sets the layout to the last one used (again, much like the layout toggle split works).
I added test cases and documentation, but if I forgot anything feel free to tell me and I'll add what's missing.
Thanks for the work on i3, I'm falling in love with it :)","This PR adds a parameter called ""stack_tab"" to the ""layout toggle"" command. This makes it possible to toggle between stacked and tabbed layouts, muck like the ""layout toggle split"" works for splitv/splith layouts.
I don't like the name of the parameter very much, but I didn't have a better idea, so suggestions are welcome on that point :)
A possible improvement would be to remember the last layout used between stacked and tabbed, so that running the layout toggle stack_tab command when the layout is neither of them sets the layout to the last one used (again, much like the layout toggle split works).
I added test cases and documentation, but if I forgot anything feel free to tell me and I'll add what's missing.
Thanks for the work on i3, I'm falling in love with it :)",True,{}
i3/i3,https://github.com/i3/i3,2476,2016-09-25T17:09:01Z,2017-01-21T12:24:09Z,2017-01-21T12:24:10Z,CLOSED,False,28,10,6,https://github.com/BenoitAverty,Add the option to toggle between stacked/tabbed layout,2,[],https://github.com/i3/i3/pull/2476,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2476#issuecomment-249435544,"This PR adds a parameter called ""stack_tab"" to the ""layout toggle"" command. This makes it possible to toggle between stacked and tabbed layouts, muck like the ""layout toggle split"" works for splitv/splith layouts.
I don't like the name of the parameter very much, but I didn't have a better idea, so suggestions are welcome on that point :)
A possible improvement would be to remember the last layout used between stacked and tabbed, so that running the layout toggle stack_tab command when the layout is neither of them sets the layout to the last one used (again, much like the layout toggle split works).
I added test cases and documentation, but if I forgot anything feel free to tell me and I'll add what's missing.
Thanks for the work on i3, I'm falling in love with it :)",Travis is failing due to wrong formatting.,True,{}
i3/i3,https://github.com/i3/i3,2476,2016-09-25T17:09:01Z,2017-01-21T12:24:09Z,2017-01-21T12:24:10Z,CLOSED,False,28,10,6,https://github.com/BenoitAverty,Add the option to toggle between stacked/tabbed layout,2,[],https://github.com/i3/i3/pull/2476,https://github.com/BenoitAverty,3,https://github.com/i3/i3/pull/2476#issuecomment-249442951,"This PR adds a parameter called ""stack_tab"" to the ""layout toggle"" command. This makes it possible to toggle between stacked and tabbed layouts, muck like the ""layout toggle split"" works for splitv/splith layouts.
I don't like the name of the parameter very much, but I didn't have a better idea, so suggestions are welcome on that point :)
A possible improvement would be to remember the last layout used between stacked and tabbed, so that running the layout toggle stack_tab command when the layout is neither of them sets the layout to the last one used (again, much like the layout toggle split works).
I added test cases and documentation, but if I forgot anything feel free to tell me and I'll add what's missing.
Thanks for the work on i3, I'm falling in love with it :)","Hi Airblader, thank you for the review.
I apologize for the lack of feature request and the formatting, I was in a hurry and forgot to check the contributing guide :-/
I fixed the formatting.
Do you want me to open an issue corresponding to the PR or do we continue the discussion here ?",True,{}
i3/i3,https://github.com/i3/i3,2476,2016-09-25T17:09:01Z,2017-01-21T12:24:09Z,2017-01-21T12:24:10Z,CLOSED,False,28,10,6,https://github.com/BenoitAverty,Add the option to toggle between stacked/tabbed layout,2,[],https://github.com/i3/i3/pull/2476,https://github.com/Airblader,4,https://github.com/i3/i3/pull/2476#issuecomment-249443053,"This PR adds a parameter called ""stack_tab"" to the ""layout toggle"" command. This makes it possible to toggle between stacked and tabbed layouts, muck like the ""layout toggle split"" works for splitv/splith layouts.
I don't like the name of the parameter very much, but I didn't have a better idea, so suggestions are welcome on that point :)
A possible improvement would be to remember the last layout used between stacked and tabbed, so that running the layout toggle stack_tab command when the layout is neither of them sets the layout to the last one used (again, much like the layout toggle split works).
I added test cases and documentation, but if I forgot anything feel free to tell me and I'll add what's missing.
Thanks for the work on i3, I'm falling in love with it :)","No, we can deal with it here for now. We mostly recommend opening an issue to avoid doing work that ends up not merged because we reject the feature. You've written the code already now, so it's too late for that (but of course we might still end up not merging it.)",True,{}
i3/i3,https://github.com/i3/i3,2476,2016-09-25T17:09:01Z,2017-01-21T12:24:09Z,2017-01-21T12:24:10Z,CLOSED,False,28,10,6,https://github.com/BenoitAverty,Add the option to toggle between stacked/tabbed layout,2,[],https://github.com/i3/i3/pull/2476,https://github.com/BenoitAverty,5,https://github.com/i3/i3/pull/2476#issuecomment-251319166,"This PR adds a parameter called ""stack_tab"" to the ""layout toggle"" command. This makes it possible to toggle between stacked and tabbed layouts, muck like the ""layout toggle split"" works for splitv/splith layouts.
I don't like the name of the parameter very much, but I didn't have a better idea, so suggestions are welcome on that point :)
A possible improvement would be to remember the last layout used between stacked and tabbed, so that running the layout toggle stack_tab command when the layout is neither of them sets the layout to the last one used (again, much like the layout toggle split works).
I added test cases and documentation, but if I forgot anything feel free to tell me and I'll add what's missing.
Thanks for the work on i3, I'm falling in love with it :)","Hi,
I may have some time in the coming days to work on this PR. I'd like to implement the memorization of the last layout between stacked/tabbed, so that the last one used is set when using the toggle command from a split layout.
Do you think this PR has a good change of being merged? Otherwise I'll probably implement this a bit later.
For the name of the parameter, I had several ideas, none of which are completely satisfactory.

Just stacking or stack, because the windows are stacking instead of tiling. Problem : confusion with existing term in i3.
overlap, for a new term but not completely appropriate because it suggests a partial overlap (maybe that's just me)
stack_mode or tab_mode

another completely different option would be to allow complete choice on the layouts that are included when toggling. For example, we'd allow this in the config file:
#useless because almost identical to layout toggle split
bindsym $mod+w layout toggle splith,splitv

#This would make the function I want
bindsym $mod+w layout toggle stacking,tabbed

# More customization would be possible
bindsym $mod+w layout toggle stacking,splitv,splith

That seems a bit more complicated though, and not necessarily very useful if we find a good name for the current PR.
What do you think ?",True,"{'THUMBS_UP': ['https://github.com/s3rb31', 'https://github.com/nmschulte']}"
i3/i3,https://github.com/i3/i3,2476,2016-09-25T17:09:01Z,2017-01-21T12:24:09Z,2017-01-21T12:24:10Z,CLOSED,False,28,10,6,https://github.com/BenoitAverty,Add the option to toggle between stacked/tabbed layout,2,[],https://github.com/i3/i3/pull/2476,https://github.com/s3rb31,6,https://github.com/i3/i3/pull/2476#issuecomment-260216948,"This PR adds a parameter called ""stack_tab"" to the ""layout toggle"" command. This makes it possible to toggle between stacked and tabbed layouts, muck like the ""layout toggle split"" works for splitv/splith layouts.
I don't like the name of the parameter very much, but I didn't have a better idea, so suggestions are welcome on that point :)
A possible improvement would be to remember the last layout used between stacked and tabbed, so that running the layout toggle stack_tab command when the layout is neither of them sets the layout to the last one used (again, much like the layout toggle split works).
I added test cases and documentation, but if I forgot anything feel free to tell me and I'll add what's missing.
Thanks for the work on i3, I'm falling in love with it :)","This is good. Let's expand on this ;)
I really like the idea of the layout toggle option being capable of cycling through all of the layouts based on user definition. We already have the keywords for layout. Why not make layout toggle accept a (comma) seperated list? (e.g. layout toggle split,tabbed or layout stacking,tabbed,splith)
I think this would allow a much more flexible way of cycling through the layouts, it wouldn't even introduce new terminology and it would adress the original PR ""on-the-fly"".
I'd like to hear what you think. Greetings",True,{}
i3/i3,https://github.com/i3/i3,2476,2016-09-25T17:09:01Z,2017-01-21T12:24:09Z,2017-01-21T12:24:10Z,CLOSED,False,28,10,6,https://github.com/BenoitAverty,Add the option to toggle between stacked/tabbed layout,2,[],https://github.com/i3/i3/pull/2476,https://github.com/BenoitAverty,7,https://github.com/i3/i3/pull/2476#issuecomment-260273231,"This PR adds a parameter called ""stack_tab"" to the ""layout toggle"" command. This makes it possible to toggle between stacked and tabbed layouts, muck like the ""layout toggle split"" works for splitv/splith layouts.
I don't like the name of the parameter very much, but I didn't have a better idea, so suggestions are welcome on that point :)
A possible improvement would be to remember the last layout used between stacked and tabbed, so that running the layout toggle stack_tab command when the layout is neither of them sets the layout to the last one used (again, much like the layout toggle split works).
I added test cases and documentation, but if I forgot anything feel free to tell me and I'll add what's missing.
Thanks for the work on i3, I'm falling in love with it :)","Yes that was my last suggestion in my previous message. I like the Idea, but the code for the PR becomes more complex, and I'm not sure the added value justifies it.",True,{}
i3/i3,https://github.com/i3/i3,2476,2016-09-25T17:09:01Z,2017-01-21T12:24:09Z,2017-01-21T12:24:10Z,CLOSED,False,28,10,6,https://github.com/BenoitAverty,Add the option to toggle between stacked/tabbed layout,2,[],https://github.com/i3/i3/pull/2476,https://github.com/s3rb31,8,https://github.com/i3/i3/pull/2476#issuecomment-260326052,"This PR adds a parameter called ""stack_tab"" to the ""layout toggle"" command. This makes it possible to toggle between stacked and tabbed layouts, muck like the ""layout toggle split"" works for splitv/splith layouts.
I don't like the name of the parameter very much, but I didn't have a better idea, so suggestions are welcome on that point :)
A possible improvement would be to remember the last layout used between stacked and tabbed, so that running the layout toggle stack_tab command when the layout is neither of them sets the layout to the last one used (again, much like the layout toggle split works).
I added test cases and documentation, but if I forgot anything feel free to tell me and I'll add what's missing.
Thanks for the work on i3, I'm falling in love with it :)","Let me look at the code in detail today and see if I can do something.
work in progress (some code ready, need time to post ...)",True,{}
i3/i3,https://github.com/i3/i3,2476,2016-09-25T17:09:01Z,2017-01-21T12:24:09Z,2017-01-21T12:24:10Z,CLOSED,False,28,10,6,https://github.com/BenoitAverty,Add the option to toggle between stacked/tabbed layout,2,[],https://github.com/i3/i3/pull/2476,https://github.com/Airblader,9,https://github.com/i3/i3/pull/2476#issuecomment-272531393,"This PR adds a parameter called ""stack_tab"" to the ""layout toggle"" command. This makes it possible to toggle between stacked and tabbed layouts, muck like the ""layout toggle split"" works for splitv/splith layouts.
I don't like the name of the parameter very much, but I didn't have a better idea, so suggestions are welcome on that point :)
A possible improvement would be to remember the last layout used between stacked and tabbed, so that running the layout toggle stack_tab command when the layout is neither of them sets the layout to the last one used (again, much like the layout toggle split works).
I added test cases and documentation, but if I forgot anything feel free to tell me and I'll add what's missing.
Thanks for the work on i3, I'm falling in love with it :)",What's the status here? Anybody still working on it?,True,{}
i3/i3,https://github.com/i3/i3,2476,2016-09-25T17:09:01Z,2017-01-21T12:24:09Z,2017-01-21T12:24:10Z,CLOSED,False,28,10,6,https://github.com/BenoitAverty,Add the option to toggle between stacked/tabbed layout,2,[],https://github.com/i3/i3/pull/2476,https://github.com/s3rb31,10,https://github.com/i3/i3/pull/2476#issuecomment-272564704,"This PR adds a parameter called ""stack_tab"" to the ""layout toggle"" command. This makes it possible to toggle between stacked and tabbed layouts, muck like the ""layout toggle split"" works for splitv/splith layouts.
I don't like the name of the parameter very much, but I didn't have a better idea, so suggestions are welcome on that point :)
A possible improvement would be to remember the last layout used between stacked and tabbed, so that running the layout toggle stack_tab command when the layout is neither of them sets the layout to the last one used (again, much like the layout toggle split works).
I added test cases and documentation, but if I forgot anything feel free to tell me and I'll add what's missing.
Thanks for the work on i3, I'm falling in love with it :)","Yes, sorry for the late response. This slipped out of my field of vision over the new year, thanks for the heads up. Well, I have some observations:
First, I don't think it is possible to use comma (,) as a seperator for this feature without some (read: heavy) modification to the config parser. This is because the comma seperates commands in the i3 config file. If it is possible I'd be glad about some advice how to do it. If it is not possible, my question would be what other single characters are acceptable as a delimiter? For testing I used slash (/) ..
Further, I am not sure on how to define the the parser specs for the new possible arguments to layout toggle. One possibility would be something along these lines:
# layout default|stacked|stacking|tabbed|splitv|splith
state LAYOUT:
  layout_mode = 'default', 'stacked', 'stacking', 'tabbed', 'splitv', 'splith'
      -> call cmd_layout($layout_mode)
  'toggle'
      -> LAYOUT_TOGGLE

# layout toggle [split|all]
state LAYOUT_TOGGLE:
  end
      -> call cmd_layout_toggle($toggle_mode)
  toggle_mode = 'split', 'all'
      -> call cmd_layout_toggle($toggle_mode)
  # new entry
  toggle_custom = string
      -> call cmd_layout_toggle($toggle_custom)

This would simply pass everything as one argument, but then it would not be possible to detect any wrong arguments for the layout toggle command (and the entry above our new one would be redundant).
Another option would be to pass the modes via N different arguments wich could be checked one by one, then. But I find this looks quite hackish as you have the same possible options for every argument.
So it would be nice if someone who knows the parser quite good could give some thoughts about how this could be implemented the most elegant way.
Another solution I just came up with right now would be to use the solution from above and introduce another level in the parser spec, so that the split and all all options for layout toggle remain checkable. Something like this:
# layout default|stacked|stacking|tabbed|splitv|splith
state LAYOUT:
  layout_mode = 'default', 'stacked', 'stacking', 'tabbed', 'splitv', 'splith'
      -> call cmd_layout($layout_mode)
  'toggle'
      -> LAYOUT_TOGGLE

# layout toggle [split|all]
state LAYOUT_TOGGLE:
  end
      -> call cmd_layout_toggle($toggle_mode)
  toggle_mode = 'split', 'all'
      -> call cmd_layout_toggle($toggle_mode)
  'custom'
      -> LAYOUT_TOGGLE_CUSTOM

# layout toggle custom <args>
state LAYOUT_TOGGLE_CUSTOM:
  toggle_mode = string
      -> call cmd_layout_toggle($toggle_mode)

If it is an option to pass one single argument, seperated by a specific delimiter, then I already have some code based on strtok.
It will split the passed argument via a specified delimiter, build an array of layout_ts (int) from the passed argument, and set the layout to the one following the current active layout within the array, or, if the current layout is not inside the array, the first entry.
But the post is already long so I'll wait for people to join the discussion on the above observations and deduce on how to tackle this thing and if what I posted is the right direction.
Greetings",True,{'THUMBS_UP': ['https://github.com/nmschulte']}
i3/i3,https://github.com/i3/i3,2476,2016-09-25T17:09:01Z,2017-01-21T12:24:09Z,2017-01-21T12:24:10Z,CLOSED,False,28,10,6,https://github.com/BenoitAverty,Add the option to toggle between stacked/tabbed layout,2,[],https://github.com/i3/i3/pull/2476,https://github.com/Airblader,11,https://github.com/i3/i3/pull/2476#issuecomment-272567207,"This PR adds a parameter called ""stack_tab"" to the ""layout toggle"" command. This makes it possible to toggle between stacked and tabbed layouts, muck like the ""layout toggle split"" works for splitv/splith layouts.
I don't like the name of the parameter very much, but I didn't have a better idea, so suggestions are welcome on that point :)
A possible improvement would be to remember the last layout used between stacked and tabbed, so that running the layout toggle stack_tab command when the layout is neither of them sets the layout to the last one used (again, much like the layout toggle split works).
I added test cases and documentation, but if I forgot anything feel free to tell me and I'll add what's missing.
Thanks for the work on i3, I'm falling in love with it :)","First, I don't think it is possible to use comma (,) as a seperator for this feature without some (read: heavy) modification to the config parser.

You're right and IMHO we shouldn't change this behavior. I think a good alternative would be +. Alternatively, and I like this the most, I think, we separate them by space and just read in the entire rest of the line and split it in the handler function. Losing the ability to report the parser error directly is fine with me. So it'd look like this:
bindsym $mod+x layout toggle splith tabbed stacked

I think it should be possible to change the parser to deal with this in a better way (introduce passing arrays to the handler function) and to get back the parser error reporting, but I wouldn't develop that in this PR and instead do a followup PR for it.

and the entry above our new one would be redundant

Just as a small note: no, they wouldn't be, for the reason you stated yourself – better parser errors. :-)",True,{}
i3/i3,https://github.com/i3/i3,2476,2016-09-25T17:09:01Z,2017-01-21T12:24:09Z,2017-01-21T12:24:10Z,CLOSED,False,28,10,6,https://github.com/BenoitAverty,Add the option to toggle between stacked/tabbed layout,2,[],https://github.com/i3/i3/pull/2476,https://github.com/Airblader,12,https://github.com/i3/i3/pull/2476#issuecomment-272571327,"This PR adds a parameter called ""stack_tab"" to the ""layout toggle"" command. This makes it possible to toggle between stacked and tabbed layouts, muck like the ""layout toggle split"" works for splitv/splith layouts.
I don't like the name of the parameter very much, but I didn't have a better idea, so suggestions are welcome on that point :)
A possible improvement would be to remember the last layout used between stacked and tabbed, so that running the layout toggle stack_tab command when the layout is neither of them sets the layout to the last one used (again, much like the layout toggle split works).
I added test cases and documentation, but if I forgot anything feel free to tell me and I'll add what's missing.
Thanks for the work on i3, I'm falling in love with it :)",@s3rb31 Did you delete a comment? Or is Github just slow with database replication? :-),True,{}
i3/i3,https://github.com/i3/i3,2476,2016-09-25T17:09:01Z,2017-01-21T12:24:09Z,2017-01-21T12:24:10Z,CLOSED,False,28,10,6,https://github.com/BenoitAverty,Add the option to toggle between stacked/tabbed layout,2,[],https://github.com/i3/i3/pull/2476,https://github.com/s3rb31,13,https://github.com/i3/i3/pull/2476#issuecomment-272572210,"This PR adds a parameter called ""stack_tab"" to the ""layout toggle"" command. This makes it possible to toggle between stacked and tabbed layouts, muck like the ""layout toggle split"" works for splitv/splith layouts.
I don't like the name of the parameter very much, but I didn't have a better idea, so suggestions are welcome on that point :)
A possible improvement would be to remember the last layout used between stacked and tabbed, so that running the layout toggle stack_tab command when the layout is neither of them sets the layout to the last one used (again, much like the layout toggle split works).
I added test cases and documentation, but if I forgot anything feel free to tell me and I'll add what's missing.
Thanks for the work on i3, I'm falling in love with it :)","and the entry above our new one would be redundant



Just as a small note: no, they wouldn't be, for the reason you stated yourself – better parser errors. :-)

I think that dont understand this. If we have this:
state LAYOUT_TOGGLE:
  end
      -> call cmd_layout_toggle($toggle_mode)
  toggle_mode = 'split', 'all'
      -> call cmd_layout_toggle($toggle_mode)
  toggle_custom = string
      -> call cmd_layout_toggle($toggle_custom)

How would the parser then differentiate between an arbitrary string (which would cause no error) and a disallowed word? split and all would also be captured by the string which would make the explicit definition superfluous. That was what I meant to say.
But if thats not a problem, everything is fine. I like your idea by simply staying with spaces but treating it as a single argument. This way we keep a uniform look in the config file and handle the special sauce within the implementation.
I'll implement what we've got so far, and post the code I have during this weekend!
PS. Touching the parser is something I would leave to someone other since I don't code in Perl. But I absolutely agree. It would be very nice if the parser would support arrays.
Edit: Yes I deleted this post before because I accidentally hit enter. I hate it when enter is send ... xD",True,{}
i3/i3,https://github.com/i3/i3,2476,2016-09-25T17:09:01Z,2017-01-21T12:24:09Z,2017-01-21T12:24:10Z,CLOSED,False,28,10,6,https://github.com/BenoitAverty,Add the option to toggle between stacked/tabbed layout,2,[],https://github.com/i3/i3/pull/2476,https://github.com/Airblader,14,https://github.com/i3/i3/pull/2476#issuecomment-272572730,"This PR adds a parameter called ""stack_tab"" to the ""layout toggle"" command. This makes it possible to toggle between stacked and tabbed layouts, muck like the ""layout toggle split"" works for splitv/splith layouts.
I don't like the name of the parameter very much, but I didn't have a better idea, so suggestions are welcome on that point :)
A possible improvement would be to remember the last layout used between stacked and tabbed, so that running the layout toggle stack_tab command when the layout is neither of them sets the layout to the last one used (again, much like the layout toggle split works).
I added test cases and documentation, but if I forgot anything feel free to tell me and I'll add what's missing.
Thanks for the work on i3, I'm falling in love with it :)","How would the parser then differentiate between an arbitrary string (which would cause no error) and a disallowed word? split and all would also be captured by the string which would make the explicit definition superfluous.

Right, I didn't think about it enough. :-) I think I'd still prefer the explicit (redundant) lines in the spec because it documents as much of the allowed values as possible that way.

I'll implement what we've got so far, and post the code I have during this weekend!

Great, thanks!

PS. Touching the parser is something I would leave to someone other since I don't code in Perl. But I absoluteley agree. It would be very nice if the parser would support arrays.

No problem whatsoever. Like I said, cleaning this up in a separate PR is better, anyway.

Edit: Yes I deleted this post before because I accidentally hit enter. I hate it when Enter is Send ... xD

:-)",True,{}
i3/i3,https://github.com/i3/i3,2476,2016-09-25T17:09:01Z,2017-01-21T12:24:09Z,2017-01-21T12:24:10Z,CLOSED,False,28,10,6,https://github.com/BenoitAverty,Add the option to toggle between stacked/tabbed layout,2,[],https://github.com/i3/i3/pull/2476,https://github.com/s3rb31,15,https://github.com/i3/i3/pull/2476#issuecomment-272745517,"This PR adds a parameter called ""stack_tab"" to the ""layout toggle"" command. This makes it possible to toggle between stacked and tabbed layouts, muck like the ""layout toggle split"" works for splitv/splith layouts.
I don't like the name of the parameter very much, but I didn't have a better idea, so suggestions are welcome on that point :)
A possible improvement would be to remember the last layout used between stacked and tabbed, so that running the layout toggle stack_tab command when the layout is neither of them sets the layout to the last one used (again, much like the layout toggle split works).
I added test cases and documentation, but if I forgot anything feel free to tell me and I'll add what's missing.
Thanks for the work on i3, I'm falling in love with it :)","Hello everyone,

I think I'd still prefer the explicit (redundant) lines in the spec because it documents as much of the allowed values as possible that way.

I did not know it either, but the parser seems to detect even partial words if they appear in the beginning. If it is not commented out, it will execute the partial detection and output an error:
15.01.2017 21:21:51 - IPC: received: *layout toggle splith splitv*
15.01.2017 21:21:51 - commands_parser.c:parse_command:267 - COMMAND: *layout toggle splith splitv*
15.01.2017 21:21:51 - commands.c:cmd_criteria_init:173 - Initializing criteria, current_match = 0x677a20
15.01.2017 21:21:51 - commands.c:cmd_layout_toggle:1545 - toggling layout (mode = split)
15.01.2017 21:21:51 - con.c:con_toggle_layout:1713 - con_toggle_layout(0x202db10, split), parent = 0x1ffde00
15.01.2017 21:21:51 - con.c:con_set_layout:1617 - con_set_layout(0x202db10, 5), con->type = 2
15.01.2017 21:21:51 - ERROR: Expected one of these tokens: <end>, '[', 'move', 'exec', 'exit', 'restart', 'reload', 'shmlog', 'debuglog', 'border', 'layout', 'append_layout', 'workspace', 'focus', 'kill', 'open', 'fullscreen', 'sticky', 'split', 'floating', 'mark', 'unmark', 'resize', 'rename', 'nop', 'scratchpad', 'title_format', 'mode', 'bar'
15.01.2017 21:21:51 - ERROR: Your command: layout toggle splith splitv
15.01.2017 21:21:51 - ERROR:                                  ^^^^^^^^

But having them commented out would still document the possible values and since there is no other purpose for it I think thats okay? (Maybe this behaviour is something you want to evaluate further?)
Currently I am working with this code (applied on current next). I am testing it with the modified testcase. If there is anything I missed in the test I'd be glad about some hint.
Of course this solution will lead into the else-block starting at src/con.c:1767 for any arguments to layout toggle not containing the delimiter (apart from split of course) resulting in 'layout toggle default'.
I think this could be improved by toggling between the given layout and the previous one for anything else than all and default. But that would require another field like last_split_layout to save the previous layout. I havent really thought about this much but it sounds nice to me. Would like to hear what others think about this.
PS. I am not sure on how to contribute to this PR? Should I create an additional PR on @BenoitAverty's fork?",True,{}
i3/i3,https://github.com/i3/i3,2476,2016-09-25T17:09:01Z,2017-01-21T12:24:09Z,2017-01-21T12:24:10Z,CLOSED,False,28,10,6,https://github.com/BenoitAverty,Add the option to toggle between stacked/tabbed layout,2,[],https://github.com/i3/i3/pull/2476,https://github.com/Airblader,16,https://github.com/i3/i3/pull/2476#issuecomment-272961015,"This PR adds a parameter called ""stack_tab"" to the ""layout toggle"" command. This makes it possible to toggle between stacked and tabbed layouts, muck like the ""layout toggle split"" works for splitv/splith layouts.
I don't like the name of the parameter very much, but I didn't have a better idea, so suggestions are welcome on that point :)
A possible improvement would be to remember the last layout used between stacked and tabbed, so that running the layout toggle stack_tab command when the layout is neither of them sets the layout to the last one used (again, much like the layout toggle split works).
I added test cases and documentation, but if I forgot anything feel free to tell me and I'll add what's missing.
Thanks for the work on i3, I'm falling in love with it :)","But having them commented out would still document the possible values and since there is no other purpose for it I think thats okay?

Ah, okay, I didn't think about partial matches either. No, in that case I'd prefer not to have commented-out code.
I'm currently thinking that we should get the array-argument stuff in either with or prior to this PR. I don't like the manual parsing much. But that'll be up to @stapelberg; perhaps he'd be OK with it.

PS. I am not sure on how to contribute to this PR? Should I create an additional PR on @BenoitAverty's fork?

Yes, please create your own PR for this.",True,{}
i3/i3,https://github.com/i3/i3,2476,2016-09-25T17:09:01Z,2017-01-21T12:24:09Z,2017-01-21T12:24:10Z,CLOSED,False,28,10,6,https://github.com/BenoitAverty,Add the option to toggle between stacked/tabbed layout,2,[],https://github.com/i3/i3/pull/2476,https://github.com/s3rb31,17,https://github.com/i3/i3/pull/2476#issuecomment-273939711,"This PR adds a parameter called ""stack_tab"" to the ""layout toggle"" command. This makes it possible to toggle between stacked and tabbed layouts, muck like the ""layout toggle split"" works for splitv/splith layouts.
I don't like the name of the parameter very much, but I didn't have a better idea, so suggestions are welcome on that point :)
A possible improvement would be to remember the last layout used between stacked and tabbed, so that running the layout toggle stack_tab command when the layout is neither of them sets the layout to the last one used (again, much like the layout toggle split works).
I added test cases and documentation, but if I forgot anything feel free to tell me and I'll add what's missing.
Thanks for the work on i3, I'm falling in love with it :)","Yes, please create your own PR for this.

Just did it. Have a look at #2649 ✌️",True,{}
i3/i3,https://github.com/i3/i3,2476,2016-09-25T17:09:01Z,2017-01-21T12:24:09Z,2017-01-21T12:24:10Z,CLOSED,False,28,10,6,https://github.com/BenoitAverty,Add the option to toggle between stacked/tabbed layout,2,[],https://github.com/i3/i3/pull/2476,https://github.com/Airblader,18,https://github.com/i3/i3/pull/2476#issuecomment-274258571,"This PR adds a parameter called ""stack_tab"" to the ""layout toggle"" command. This makes it possible to toggle between stacked and tabbed layouts, muck like the ""layout toggle split"" works for splitv/splith layouts.
I don't like the name of the parameter very much, but I didn't have a better idea, so suggestions are welcome on that point :)
A possible improvement would be to remember the last layout used between stacked and tabbed, so that running the layout toggle stack_tab command when the layout is neither of them sets the layout to the last one used (again, much like the layout toggle split works).
I added test cases and documentation, but if I forgot anything feel free to tell me and I'll add what's missing.
Thanks for the work on i3, I'm falling in love with it :)",Closing in favor of the new PR,True,{}
i3/i3,https://github.com/i3/i3,2477,2016-09-25T22:18:00Z,2016-09-27T01:31:16Z,2016-09-27T05:31:48Z,MERGED,True,4,7,1,https://github.com/Airblader,Check output crossing on ENTER_NOTIFY to dockarea.,1,[],https://github.com/i3/i3/pull/2477,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2477,"When receiving an ENTER_NOTIFY event on a dock client we returned as to not
focus the dock client (cf. #321 and #323). However, we still need to check
for crossing output boundaries and if that happened focus the new output.
Otherwise it can happen that the cursor is on a different output than the
focused output. When opening a window, this would open it on the old output
and then warp the mouse there. This effect will be even worse if the window
is immediately moved with 'move position mouse' as the window will end up
in its correct position on the new output and the cursor warped to the old
output.
relates to #2081","When receiving an ENTER_NOTIFY event on a dock client we returned as to not
focus the dock client (cf. #321 and #323). However, we still need to check
for crossing output boundaries and if that happened focus the new output.
Otherwise it can happen that the cursor is on a different output than the
focused output. When opening a window, this would open it on the old output
and then warp the mouse there. This effect will be even worse if the window
is immediately moved with 'move position mouse' as the window will end up
in its correct position on the new output and the cursor warped to the old
output.
relates to #2081",True,{}
i3/i3,https://github.com/i3/i3,2477,2016-09-25T22:18:00Z,2016-09-27T01:31:16Z,2016-09-27T05:31:48Z,MERGED,True,4,7,1,https://github.com/Airblader,Check output crossing on ENTER_NOTIFY to dockarea.,1,[],https://github.com/i3/i3/pull/2477,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/2477#issuecomment-249623036,"When receiving an ENTER_NOTIFY event on a dock client we returned as to not
focus the dock client (cf. #321 and #323). However, we still need to check
for crossing output boundaries and if that happened focus the new output.
Otherwise it can happen that the cursor is on a different output than the
focused output. When opening a window, this would open it on the old output
and then warp the mouse there. This effect will be even worse if the window
is immediately moved with 'move position mouse' as the window will end up
in its correct position on the new output and the cursor warped to the old
output.
relates to #2081",Can you rebase please?,True,{}
i3/i3,https://github.com/i3/i3,2477,2016-09-25T22:18:00Z,2016-09-27T01:31:16Z,2016-09-27T05:31:48Z,MERGED,True,4,7,1,https://github.com/Airblader,Check output crossing on ENTER_NOTIFY to dockarea.,1,[],https://github.com/i3/i3/pull/2477,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2477#issuecomment-249657780,"When receiving an ENTER_NOTIFY event on a dock client we returned as to not
focus the dock client (cf. #321 and #323). However, we still need to check
for crossing output boundaries and if that happened focus the new output.
Otherwise it can happen that the cursor is on a different output than the
focused output. When opening a window, this would open it on the old output
and then warp the mouse there. This effect will be even worse if the window
is immediately moved with 'move position mouse' as the window will end up
in its correct position on the new output and the cursor warped to the old
output.
relates to #2081",@stapelberg Rebased.,True,{}
i3/i3,https://github.com/i3/i3,2479,2016-09-26T15:30:49Z,2016-09-26T23:12:13Z,2016-09-27T05:31:34Z,MERGED,True,7,4,2,https://github.com/stapelberg,Make tests work with Perl ≥ 5.24 (now in Debian sid),2,[],https://github.com/i3/i3/pull/2479,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2479,,,True,{}
i3/i3,https://github.com/i3/i3,2480,2016-09-27T02:06:10Z,2016-09-27T19:57:00Z,2016-11-21T10:31:02Z,MERGED,True,12,90,8,https://github.com/stapelberg,Remove conditional compilation for cairo/pangocairo,1,[],https://github.com/i3/i3/pull/2480,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2480,"We strive to avoid conditional compilation in i3 as much as possible.
cairo and pangocairo have been around long enough in the versions that
we need that it’s time to unconditionally depend on them.
Also update DEPENDS with the last-known-good-versions while at it.","We strive to avoid conditional compilation in i3 as much as possible.
cairo and pangocairo have been around long enough in the versions that
we need that it’s time to unconditionally depend on them.
Also update DEPENDS with the last-known-good-versions while at it.",True,{}
i3/i3,https://github.com/i3/i3,2481,2016-09-27T19:41:00Z,2016-09-28T02:04:00Z,2016-11-13T18:49:01Z,MERGED,True,68,4,6,https://github.com/Airblader,Added new criteria 'tiling' / 'floating'.,1,[],https://github.com/i3/i3/pull/2481,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2481,"These criteria allow selecting only windows in a specific mode, i.e.,
tiling and floating, respectively.
fixes #2406","These criteria allow selecting only windows in a specific mode, i.e.,
tiling and floating, respectively.
fixes #2406",True,{}
i3/i3,https://github.com/i3/i3,2483,2016-09-29T20:16:17Z,2016-09-30T15:28:02Z,2016-11-13T18:49:01Z,MERGED,True,63,42,7,https://github.com/Airblader,Implement special value 'current' for output.,1,[],https://github.com/i3/i3/pull/2483,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2483,"This commit introduces the special 'current' value for outputs in both of

move con to output current
move workspace to output current

fixes #2357","This commit introduces the special 'current' value for outputs in both of

move con to output current
move workspace to output current

fixes #2357",True,{}
i3/i3,https://github.com/i3/i3,2488,2016-10-02T20:31:34Z,2016-10-03T12:53:56Z,2016-10-03T12:53:56Z,MERGED,True,1,1,1,https://github.com/Ferdi265,Bugfix: NULL dereference when stickying _NET_WM_DESKTOP_ALL windows,1,[],https://github.com/i3/i3/pull/2488,https://github.com/Ferdi265,1,https://github.com/i3/i3/pull/2488,"This PR fixes a bug where i3 will crash when starting some programs that set _NET_WM_DESKTOP_ALL.
In these cases, ws will be NULL here, triggering a null pointer dereference.
This bug was originally tested and found by me with lemonbar and was introduced in commit a15ce8c: Assign the sticky value for _NET_WM_DESKTOP on scratchpad windows. (#2457)
Sorry if this PR is not perfectly up to standards, this is my first time contributing to i3.","This PR fixes a bug where i3 will crash when starting some programs that set _NET_WM_DESKTOP_ALL.
In these cases, ws will be NULL here, triggering a null pointer dereference.
This bug was originally tested and found by me with lemonbar and was introduced in commit a15ce8c: Assign the sticky value for _NET_WM_DESKTOP on scratchpad windows. (#2457)
Sorry if this PR is not perfectly up to standards, this is my first time contributing to i3.",True,{}
i3/i3,https://github.com/i3/i3,2488,2016-10-02T20:31:34Z,2016-10-03T12:53:56Z,2016-10-03T12:53:56Z,MERGED,True,1,1,1,https://github.com/Ferdi265,Bugfix: NULL dereference when stickying _NET_WM_DESKTOP_ALL windows,1,[],https://github.com/i3/i3/pull/2488,https://github.com/Ferdi265,2,https://github.com/i3/i3/pull/2488#issuecomment-250995168,"This PR fixes a bug where i3 will crash when starting some programs that set _NET_WM_DESKTOP_ALL.
In these cases, ws will be NULL here, triggering a null pointer dereference.
This bug was originally tested and found by me with lemonbar and was introduced in commit a15ce8c: Assign the sticky value for _NET_WM_DESKTOP on scratchpad windows. (#2457)
Sorry if this PR is not perfectly up to standards, this is my first time contributing to i3.",Sure thing :),True,{}
i3/i3,https://github.com/i3/i3,2489,2016-10-03T14:25:30Z,2016-10-19T06:41:10Z,2016-11-13T18:49:01Z,MERGED,True,5,0,1,https://github.com/pstray,"Add ""output"" to IPC events referencing a container",1,[],https://github.com/i3/i3/pull/2489,https://github.com/pstray,1,https://github.com/i3/i3/pull/2489,"Add output to all events in ipc that references a container.
Closes #2478","Add output to all events in ipc that references a container.
Closes #2478",True,{}
i3/i3,https://github.com/i3/i3,2489,2016-10-03T14:25:30Z,2016-10-19T06:41:10Z,2016-11-13T18:49:01Z,MERGED,True,5,0,1,https://github.com/pstray,"Add ""output"" to IPC events referencing a container",1,[],https://github.com/i3/i3/pull/2489,https://github.com/pstray,2,https://github.com/i3/i3/pull/2489#issuecomment-253928312,"Add output to all events in ipc that references a container.
Closes #2478","So, good to go?",True,{}
i3/i3,https://github.com/i3/i3,2489,2016-10-03T14:25:30Z,2016-10-19T06:41:10Z,2016-11-13T18:49:01Z,MERGED,True,5,0,1,https://github.com/pstray,"Add ""output"" to IPC events referencing a container",1,[],https://github.com/i3/i3/pull/2489,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/2489#issuecomment-254419340,"Add output to all events in ipc that references a container.
Closes #2478","@Airblader I’d appreciate it if you could handle the review of this PR, given that you’ve been involved with the review so far.
@pstray Can you please squash your changes into a single commit? We’d like to keep the git history clean.",True,{}
i3/i3,https://github.com/i3/i3,2489,2016-10-03T14:25:30Z,2016-10-19T06:41:10Z,2016-11-13T18:49:01Z,MERGED,True,5,0,1,https://github.com/pstray,"Add ""output"" to IPC events referencing a container",1,[],https://github.com/i3/i3/pull/2489,https://github.com/Airblader,4,https://github.com/i3/i3/pull/2489#issuecomment-254515708,"Add output to all events in ipc that references a container.
Closes #2478","@pstray If you push the commit you need to leave a comment because pushing doesn't trigger a notification. :-)
@stapelberg Should be good to go now.",True,{}
i3/i3,https://github.com/i3/i3,2489,2016-10-03T14:25:30Z,2016-10-19T06:41:10Z,2016-11-13T18:49:01Z,MERGED,True,5,0,1,https://github.com/pstray,"Add ""output"" to IPC events referencing a container",1,[],https://github.com/i3/i3/pull/2489,https://github.com/pstray,5,https://github.com/i3/i3/pull/2489#issuecomment-254516187,"Add output to all events in ipc that references a container.
Closes #2478",@Airblader good to know :),True,{}
i3/i3,https://github.com/i3/i3,2490,2016-10-03T22:12:24Z,2016-10-04T06:53:49Z,2017-09-04T06:30:30Z,MERGED,True,1,1,1,https://github.com/stapelberg,Remove extraneous newline when printing core_pattern,1,[],https://github.com/i3/i3/pull/2490,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2490,This was accidentally changed in commit 94a09b3,This was accidentally changed in commit 94a09b3,True,{}
i3/i3,https://github.com/i3/i3,2491,2016-10-03T23:50:34Z,2016-10-07T13:16:01Z,2016-10-07T13:16:01Z,CLOSED,False,10,1,4,https://github.com/strake,Optionally set layout of container in focus rather than parent,1,"['waiting', 'needs info']",https://github.com/i3/i3/pull/2491,https://github.com/strake,1,https://github.com/i3/i3/pull/2491,"I have been using this patch personally for years, so i thought i ought to finally send it upstream.","I have been using this patch personally for years, so i thought i ought to finally send it upstream.",True,{}
i3/i3,https://github.com/i3/i3,2491,2016-10-03T23:50:34Z,2016-10-07T13:16:01Z,2016-10-07T13:16:01Z,CLOSED,False,10,1,4,https://github.com/strake,Optionally set layout of container in focus rather than parent,1,"['waiting', 'needs info']",https://github.com/i3/i3/pull/2491,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2491#issuecomment-251320524,"I have been using this patch personally for years, so i thought i ought to finally send it upstream.","This PR has a couple of severe issues, most importantly that it isn't actually configurable but just defaults to being activated.
But before we address them let's decide on whether it should be merged. To decide so I think you should describe the use case and motivation for it.",True,{}
i3/i3,https://github.com/i3/i3,2491,2016-10-03T23:50:34Z,2016-10-07T13:16:01Z,2016-10-07T13:16:01Z,CLOSED,False,10,1,4,https://github.com/strake,Optionally set layout of container in focus rather than parent,1,"['waiting', 'needs info']",https://github.com/i3/i3/pull/2491,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2491#issuecomment-252249033,"I have been using this patch personally for years, so i thought i ought to finally send it upstream.",Given the vastly incomplete state I'm closing the PR now. If you want this merged please open a feature request answering the questions above so we can first discuss it. Thanks!,True,{}
i3/i3,https://github.com/i3/i3,2492,2016-10-05T07:50:26Z,2016-10-05T16:46:33Z,2016-11-13T18:49:01Z,MERGED,True,1,1,1,https://github.com/stapelberg,Fix _i3_version debugging symbol,1,[],https://github.com/i3/i3/pull/2492,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2492,"The idea was to ensure the symbol would always be present. For that, we need
__attribute__((used)), not __attribute__((unused)). Further, ensure the
variable has static storage, as the used attribute only applies to variables
with static storage. See also http://stackoverflow.com/a/29545417/712014","The idea was to ensure the symbol would always be present. For that, we need
__attribute__((used)), not __attribute__((unused)). Further, ensure the
variable has static storage, as the used attribute only applies to variables
with static storage. See also http://stackoverflow.com/a/29545417/712014",True,{}
i3/i3,https://github.com/i3/i3,2495,2016-10-08T11:42:00Z,2016-10-11T18:46:25Z,2016-11-13T18:49:01Z,MERGED,True,28,15,1,https://github.com/Airblader,Handle ResizeRequests for tray clients.,1,[],https://github.com/i3/i3/pull/2495,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2495,"Some tray clients such as VLC use override_redirect on their tray window. As per
specification this means i3bar won't receive a ConfigureRequest, but instead a
ResizeRequest will be triggered. If not selected, the X server will simply confirm
the request which leads to a broken tray window size.
This commit selects and handles the event just like a configure request is handled.
fixes #2494","Some tray clients such as VLC use override_redirect on their tray window. As per
specification this means i3bar won't receive a ConfigureRequest, but instead a
ResizeRequest will be triggered. If not selected, the X server will simply confirm
the request which leads to a broken tray window size.
This commit selects and handles the event just like a configure request is handled.
fixes #2494",True,{}
i3/i3,https://github.com/i3/i3,2496,2016-10-10T20:54:30Z,2017-05-15T19:35:11Z,2021-07-18T10:31:44Z,MERGED,True,809,56,14,https://github.com/Airblader,Implement 'swap' command.,2,[],https://github.com/i3/i3/pull/2496,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2496,"This patch introduces a new command 'swap' that swaps two containers so
that they assume each other's position and geometry.
fixes #917","This patch introduces a new command 'swap' that swaps two containers so
that they assume each other's position and geometry.
fixes #917",True,{}
i3/i3,https://github.com/i3/i3,2496,2016-10-10T20:54:30Z,2017-05-15T19:35:11Z,2021-07-18T10:31:44Z,MERGED,True,809,56,14,https://github.com/Airblader,Implement 'swap' command.,2,[],https://github.com/i3/i3/pull/2496,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2496#issuecomment-252744885,"This patch introduces a new command 'swap' that swaps two containers so
that they assume each other's position and geometry.
fixes #917",I also published a proof of concept implementation for #1758 using this feature here: https://github.com/Airblader/i3-sticky,True,{}
i3/i3,https://github.com/i3/i3,2496,2016-10-10T20:54:30Z,2017-05-15T19:35:11Z,2021-07-18T10:31:44Z,MERGED,True,809,56,14,https://github.com/Airblader,Implement 'swap' command.,2,[],https://github.com/i3/i3/pull/2496,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2496#issuecomment-252756662,"This patch introduces a new command 'swap' that swaps two containers so
that they assume each other's position and geometry.
fixes #917","And here in action, just because I think it's pretty cool: https://www.youtube.com/watch?v=kPGXqFPnswc",True,{}
i3/i3,https://github.com/i3/i3,2496,2016-10-10T20:54:30Z,2017-05-15T19:35:11Z,2021-07-18T10:31:44Z,MERGED,True,809,56,14,https://github.com/Airblader,Implement 'swap' command.,2,[],https://github.com/i3/i3/pull/2496,https://github.com/Airblader,4,https://github.com/i3/i3/pull/2496#issuecomment-253014403,"This patch introduces a new command 'swap' that swaps two containers so
that they assume each other's position and geometry.
fixes #917","@stapelberg OK, I'll try to explain the focus behavior I'm going for now. I'd love if you could give it some thought because if you disagree, it'd be a substantial change so knowing early on is better (albeit I'm far past early already.)
There's basically three scenarios:

One of the two swapees is currently focused (or a parent thereof, I'll omit this from here on out) but they're on the same workspace.
One of the two swapees is currently focused, but the other one is on another workspace.
None of the swapees is focused.

And here's the intended focus behavior after swapping:

The previously focused container stays focused (which is in another physical location on the same workspace now.)
The non-focused swapee is focused in place of the other one. We cannot keep focus unless we switch workspaces, which is a drastic change. Keeping focus in the same physical location and the other involved swapee seems most intuitive to me.
The previously focused container stays focused and the swapees are inserted into the parents' focus stacks in the place where their counterpart used to be.

Edit: Oh and also this is clearly not meant to go into 4.13. It will require some time on next for sure.",True,{}
i3/i3,https://github.com/i3/i3,2496,2016-10-10T20:54:30Z,2017-05-15T19:35:11Z,2021-07-18T10:31:44Z,MERGED,True,809,56,14,https://github.com/Airblader,Implement 'swap' command.,2,[],https://github.com/i3/i3/pull/2496,https://github.com/Airblader,5,https://github.com/i3/i3/pull/2496#issuecomment-253313137,"This patch introduces a new command 'swap' that swaps two containers so
that they assume each other's position and geometry.
fixes #917","@stapelberg Well now I really hope you agree because I think this is ready for review now. I'll also do some more local testing, though.",True,{}
i3/i3,https://github.com/i3/i3,2496,2016-10-10T20:54:30Z,2017-05-15T19:35:11Z,2021-07-18T10:31:44Z,MERGED,True,809,56,14,https://github.com/Airblader,Implement 'swap' command.,2,[],https://github.com/i3/i3/pull/2496,https://github.com/Airblader,6,https://github.com/i3/i3/pull/2496#issuecomment-253640718,"This patch introduces a new command 'swap' that swaps two containers so
that they assume each other's position and geometry.
fixes #917","I should add another test for swapping a fullscreen container.
Edit: Never mind, the code currently doesn't allow this. Also something I'd like to add, but let's put this into a separate PR.
List for followup PRs:

 Replace list of arguments in _con_move_to_con
 Make it work with floating windows
 Make it work with fullscreen windows",True,{}
i3/i3,https://github.com/i3/i3,2496,2016-10-10T20:54:30Z,2017-05-15T19:35:11Z,2021-07-18T10:31:44Z,MERGED,True,809,56,14,https://github.com/Airblader,Implement 'swap' command.,2,[],https://github.com/i3/i3/pull/2496,https://github.com/stapelberg,7,https://github.com/i3/i3/pull/2496#issuecomment-255958207,"This patch introduces a new command 'swap' that swaps two containers so
that they assume each other's position and geometry.
fixes #917",The focus behavior sounds good to me on first glance.,True,{}
i3/i3,https://github.com/i3/i3,2496,2016-10-10T20:54:30Z,2017-05-15T19:35:11Z,2021-07-18T10:31:44Z,MERGED,True,809,56,14,https://github.com/Airblader,Implement 'swap' command.,2,[],https://github.com/i3/i3/pull/2496,https://github.com/Airblader,8,https://github.com/i3/i3/pull/2496#issuecomment-256086620,"This patch introduces a new command 'swap' that swaps two containers so
that they assume each other's position and geometry.
fixes #917",@stapelberg I'm extremely busy at work at the moment. I'll revisit this PR when I get time which might be a couple of weeks.,True,{}
i3/i3,https://github.com/i3/i3,2496,2016-10-10T20:54:30Z,2017-05-15T19:35:11Z,2021-07-18T10:31:44Z,MERGED,True,809,56,14,https://github.com/Airblader,Implement 'swap' command.,2,[],https://github.com/i3/i3/pull/2496,https://github.com/Airblader,9,https://github.com/i3/i3/pull/2496#issuecomment-301004389,"This patch introduces a new command 'swap' that swaps two containers so
that they assume each other's position and geometry.
fixes #917","@stapelberg I think this is good to go now, so perhaps you could review it again. Once merged I'll create issues for the followup improvements, but for now I'd like to get some experience with this feature before a next release.",True,{}
i3/i3,https://github.com/i3/i3,2496,2016-10-10T20:54:30Z,2017-05-15T19:35:11Z,2021-07-18T10:31:44Z,MERGED,True,809,56,14,https://github.com/Airblader,Implement 'swap' command.,2,[],https://github.com/i3/i3/pull/2496,https://github.com/Airblader,10,https://github.com/i3/i3/pull/2496#issuecomment-301573248,"This patch introduces a new command 'swap' that swaps two containers so
that they assume each other's position and geometry.
fixes #917",@stapelberg The nit is fixed.,True,{}
i3/i3,https://github.com/i3/i3,2503,2016-10-13T12:51:18Z,2016-10-18T06:32:41Z,2016-11-13T18:49:01Z,MERGED,True,84,8,3,https://github.com/Airblader,Implement new window::mark IPC event.,1,[],https://github.com/i3/i3/pull/2503,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2503,"This introduces a new type of 'window' event sent wit change:mark whenever
a mark on a window changes.
fixes #2501","This introduces a new type of 'window' event sent wit change:mark whenever
a mark on a window changes.
fixes #2501",True,{}
i3/i3,https://github.com/i3/i3,2503,2016-10-13T12:51:18Z,2016-10-18T06:32:41Z,2016-11-13T18:49:01Z,MERGED,True,84,8,3,https://github.com/Airblader,Implement new window::mark IPC event.,1,[],https://github.com/i3/i3/pull/2503,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2503#issuecomment-253504184,"This introduces a new type of 'window' event sent wit change:mark whenever
a mark on a window changes.
fixes #2501","I chose to send a separate event for each change of a mark even if all marks on a con are removed to set a new mark (i.e., one action resulting in multiple events) for two reasons:

It's easier.
If we later on want to provide information which mark changed we'd only add information, but not change how the events are sent.",True,{}
i3/i3,https://github.com/i3/i3,2505,2016-10-13T21:51:54Z,2016-10-18T06:29:32Z,2016-11-13T18:49:01Z,MERGED,True,5,3,1,https://github.com/Airblader,Disable pango markup for plain-text input in i3bar.,1,[],https://github.com/i3/i3/pull/2505,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2505,fixes #2498,fixes #2498,True,{}
i3/i3,https://github.com/i3/i3,2506,2016-10-13T23:29:32Z,2016-10-13T23:36:11Z,2016-10-13T23:36:51Z,CLOSED,False,4,1,1,https://github.com/Hummer12007,Apply pango markup to blocks only when set (#2498),1,[],https://github.com/i3/i3/pull/2506,https://github.com/Hummer12007,1,https://github.com/i3/i3/pull/2506,"Previously, pango markup was applied regardless of settings for the block
#2498","Previously, pango markup was applied regardless of settings for the block
#2498",True,{}
i3/i3,https://github.com/i3/i3,2507,2016-10-16T20:57:46Z,2016-10-25T06:56:12Z,2016-11-13T18:49:01Z,MERGED,True,3005,1011,197,https://github.com/stapelberg,Switch to autotools (GNU build system),14,[],https://github.com/i3/i3/pull/2507,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2507,"I suggest to review commit-by-commit.
Refer to the commit description of  3f33edf (main commit of this pull request) for rationale.
The website will be updated accordingly once this is merged.","I suggest to review commit-by-commit.
Refer to the commit description of  3f33edf (main commit of this pull request) for rationale.
The website will be updated accordingly once this is merged.",True,"{'THUMBS_UP': ['https://github.com/Airblader', 'https://github.com/schinken', 'https://github.com/nmschulte', 'https://github.com/sardemff7']}"
i3/i3,https://github.com/i3/i3,2507,2016-10-16T20:57:46Z,2016-10-25T06:56:12Z,2016-11-13T18:49:01Z,MERGED,True,3005,1011,197,https://github.com/stapelberg,Switch to autotools (GNU build system),14,[],https://github.com/i3/i3/pull/2507,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2507#issuecomment-254074928,"I suggest to review commit-by-commit.
Refer to the commit description of  3f33edf (main commit of this pull request) for rationale.
The website will be updated accordingly once this is merged.","Yeah, it sure is a surprise. :-) Given the size of the PR it'll take me a bit to review, though I'll probably not review it too in-depth anyway. When it comes to compiling every build is the best test there is. Plus I don't really know much about autotools.",True,{}
i3/i3,https://github.com/i3/i3,2507,2016-10-16T20:57:46Z,2016-10-25T06:56:12Z,2016-11-13T18:49:01Z,MERGED,True,3005,1011,197,https://github.com/stapelberg,Switch to autotools (GNU build system),14,[],https://github.com/i3/i3/pull/2507,https://github.com/acrisci,3,https://github.com/i3/i3/pull/2507#issuecomment-254076970,"I suggest to review commit-by-commit.
Refer to the commit description of  3f33edf (main commit of this pull request) for rationale.
The website will be updated accordingly once this is merged.",I never thought I would live to see the day.,True,{}
i3/i3,https://github.com/i3/i3,2507,2016-10-16T20:57:46Z,2016-10-25T06:56:12Z,2016-11-13T18:49:01Z,MERGED,True,3005,1011,197,https://github.com/stapelberg,Switch to autotools (GNU build system),14,[],https://github.com/i3/i3/pull/2507,https://github.com/acrisci,4,https://github.com/i3/i3/pull/2507#issuecomment-254077035,"I suggest to review commit-by-commit.
Refer to the commit description of  3f33edf (main commit of this pull request) for rationale.
The website will be updated accordingly once this is merged.",I hear @sardemff7 knows a lot about autotools...,True,{}
i3/i3,https://github.com/i3/i3,2507,2016-10-16T20:57:46Z,2016-10-25T06:56:12Z,2016-11-13T18:49:01Z,MERGED,True,3005,1011,197,https://github.com/stapelberg,Switch to autotools (GNU build system),14,[],https://github.com/i3/i3/pull/2507,https://github.com/Airblader,5,https://github.com/i3/i3/pull/2507#issuecomment-254319549,"I suggest to review commit-by-commit.
Refer to the commit description of  3f33edf (main commit of this pull request) for rationale.
The website will be updated accordingly once this is merged.","“make install” installs the same files (plus documentation and manpages)

So this is a change to before, right? We didn't use to install man pages because, if I recall correctly, you said the path for man pages isn't consistent. Is this obsolete? Edit: Running make and make install I can't see *.1 files being generated anywhere. Edit: Solved, I was missing a dependency, apparently.
Also, a quick attempt to prepare my AUR packages for the merge causes countless warnings of the type
warning: #warning _FORTIFY_SOURCE requires compiling with optimization (-O)

I'm not sure whether this is an issue in my package, though. :-)",True,{}
i3/i3,https://github.com/i3/i3,2507,2016-10-16T20:57:46Z,2016-10-25T06:56:12Z,2016-11-13T18:49:01Z,MERGED,True,3005,1011,197,https://github.com/stapelberg,Switch to autotools (GNU build system),14,[],https://github.com/i3/i3/pull/2507,https://github.com/Airblader,6,https://github.com/i3/i3/pull/2507#issuecomment-254321045,"I suggest to review commit-by-commit.
Refer to the commit description of  3f33edf (main commit of this pull request) for rationale.
The website will be updated accordingly once this is merged.",The LICENSE file isn't copied into the build folder. I think it should. Same for I3_VERSION (?),True,{}
i3/i3,https://github.com/i3/i3,2507,2016-10-16T20:57:46Z,2016-10-25T06:56:12Z,2016-11-13T18:49:01Z,MERGED,True,3005,1011,197,https://github.com/stapelberg,Switch to autotools (GNU build system),14,[],https://github.com/i3/i3/pull/2507,https://github.com/sardemff7,7,https://github.com/i3/i3/pull/2507#issuecomment-254471925,"I suggest to review commit-by-commit.
Refer to the commit description of  3f33edf (main commit of this pull request) for rationale.
The website will be updated accordingly once this is merged.","@Airblader

I'm not sure whether this is an issue in my package, though. :-)

Yes, -O should not be upstream. Period. A really really smart default at best.

The LICENSE file isn't copied into the build folder. I think it should. Same for I3_VERSION (?)

No, build folder is for build-generated files, if you need a disted file, just pick it from the source folder. :-)",True,{}
i3/i3,https://github.com/i3/i3,2507,2016-10-16T20:57:46Z,2016-10-25T06:56:12Z,2016-11-13T18:49:01Z,MERGED,True,3005,1011,197,https://github.com/stapelberg,Switch to autotools (GNU build system),14,[],https://github.com/i3/i3/pull/2507,https://github.com/Airblader,8,https://github.com/i3/i3/pull/2507#issuecomment-254515362,"I suggest to review commit-by-commit.
Refer to the commit description of  3f33edf (main commit of this pull request) for rationale.
The website will be updated accordingly once this is merged.","@sardemff7 Thanks for the input. My build system is configured to use -O2, but somehow it isn't applied when building my changed package. I'll have to look into that, but that's my problem. :-)",True,{}
i3/i3,https://github.com/i3/i3,2507,2016-10-16T20:57:46Z,2016-10-25T06:56:12Z,2016-11-13T18:49:01Z,MERGED,True,3005,1011,197,https://github.com/stapelberg,Switch to autotools (GNU build system),14,[],https://github.com/i3/i3/pull/2507,https://github.com/Airblader,9,https://github.com/i3/i3/pull/2507#issuecomment-254577487,"I suggest to review commit-by-commit.
Refer to the commit description of  3f33edf (main commit of this pull request) for rationale.
The website will be updated accordingly once this is merged.","@sardemff7 I've tried to resolve my problem with the warnings I mentioned above and came across this and similar posts. They suggest this warning is triggered if the configure scripts are extremely old. Is this the case here?
I'm virtually building the package as @stapelberg's commit message recommends and I somewhat refuse to believe that Arch's default makepkg configuration is broken such that it surfaces with the i3 package but not countless other packages built using autoconf. :-) So I'd like to understand why my package build should have to override compiler settings.",True,{}
i3/i3,https://github.com/i3/i3,2507,2016-10-16T20:57:46Z,2016-10-25T06:56:12Z,2016-11-13T18:49:01Z,MERGED,True,3005,1011,197,https://github.com/stapelberg,Switch to autotools (GNU build system),14,[],https://github.com/i3/i3/pull/2507,https://github.com/Airblader,10,https://github.com/i3/i3/pull/2507#issuecomment-254586201,"I suggest to review commit-by-commit.
Refer to the commit description of  3f33edf (main commit of this pull request) for rationale.
The website will be updated accordingly once this is merged.","Is it possible that the /etc folder is put into the wrong folder? It ends up beneath /usr for me, which seems wrong.",True,{}
i3/i3,https://github.com/i3/i3,2507,2016-10-16T20:57:46Z,2016-10-25T06:56:12Z,2016-11-13T18:49:01Z,MERGED,True,3005,1011,197,https://github.com/stapelberg,Switch to autotools (GNU build system),14,[],https://github.com/i3/i3/pull/2507,https://github.com/sardemff7,11,https://github.com/i3/i3/pull/2507#issuecomment-254624824,"I suggest to review commit-by-commit.
Refer to the commit description of  3f33edf (main commit of this pull request) for rationale.
The website will be updated accordingly once this is merged.","*FLAGS are not upstream, they never should be, ever. These variables are for users. At package level, the user is the packager.
If you put -D_FORTIFY_SOURCE in CPPFLAGS, it is your responsibility alone to add -O2 too. If Arch have -D_FORTIFY_SOURCE in a global makepkg.conf, they must have -O2 too.
If this flag comes from the build system, then you should have a default in AM_CPPFLAGS, but not CPPFLAGS.
I don’t know for your /etc issue. If prefix is /usr, Autoconf should use /etc and not ${prefix}/etc.
But again, if the packaging system use its own values, it should take care of all cases.",True,{}
i3/i3,https://github.com/i3/i3,2507,2016-10-16T20:57:46Z,2016-10-25T06:56:12Z,2016-11-13T18:49:01Z,MERGED,True,3005,1011,197,https://github.com/stapelberg,Switch to autotools (GNU build system),14,[],https://github.com/i3/i3/pull/2507,https://github.com/Airblader,12,https://github.com/i3/i3/pull/2507#issuecomment-254633132,"I suggest to review commit-by-commit.
Refer to the commit description of  3f33edf (main commit of this pull request) for rationale.
The website will be updated accordingly once this is merged.","@sardemff7 Arch has -D_FORTIFY_SOURCE=2 in CPPFLAGS and -O2 in CFLAGS. If you say that this is an issue with Arch's default config I'll take this up with the Arch mailing list. Thanks for the input. :-)

I don’t know for your /etc issue. If prefix is /usr, Autoconf should use /etc and not ${prefix}/etc.

Using --sysconfdir=/etc in my PKGBUILD works. But I'd still say the commit message is breaking its promise here. Perhaps it should be more clear on specifying the necessary parameters for configure to actually get the same file layout as with the old make-based system independent of what just happens to be the default value.
The old make-based system actually had logic for this:
ifndef SYSCONFDIR
  ifeq ($(PREFIX),/usr)
    SYSCONFDIR=/etc
  else
    SYSCONFDIR=$(PREFIX)/etc
  endif
endif

Edit: I've got everything working now in the sense that my PKGBUILD produces exactly the same package as before.",True,{}
i3/i3,https://github.com/i3/i3,2507,2016-10-16T20:57:46Z,2016-10-25T06:56:12Z,2016-11-13T18:49:01Z,MERGED,True,3005,1011,197,https://github.com/stapelberg,Switch to autotools (GNU build system),14,[],https://github.com/i3/i3/pull/2507,https://github.com/sardemff7,13,https://github.com/i3/i3/pull/2507#issuecomment-254639962,"I suggest to review commit-by-commit.
Refer to the commit description of  3f33edf (main commit of this pull request) for rationale.
The website will be updated accordingly once this is merged.","Autoconf has the same kind of code, it surprises me that it doesn’t work.",True,{}
i3/i3,https://github.com/i3/i3,2507,2016-10-16T20:57:46Z,2016-10-25T06:56:12Z,2016-11-13T18:49:01Z,MERGED,True,3005,1011,197,https://github.com/stapelberg,Switch to autotools (GNU build system),14,[],https://github.com/i3/i3/pull/2507,https://github.com/acrisci,14,https://github.com/i3/i3/pull/2507#issuecomment-255544046,"I suggest to review commit-by-commit.
Refer to the commit description of  3f33edf (main commit of this pull request) for rationale.
The website will be updated accordingly once this is merged.","I would like to see an autogen.sh file which can generate the project minimally by calling:
autoreconf --force --install --verbose

and whatever else you need. This is good for people who are not familiar with the GNU build system.
Here is an example from one of my projects that emulates the Gnome way of doing it (although you won't need the gtkdoc stuff).",True,{}
i3/i3,https://github.com/i3/i3,2507,2016-10-16T20:57:46Z,2016-10-25T06:56:12Z,2016-11-13T18:49:01Z,MERGED,True,3005,1011,197,https://github.com/stapelberg,Switch to autotools (GNU build system),14,[],https://github.com/i3/i3/pull/2507,https://github.com/acrisci,15,https://github.com/i3/i3/pull/2507#issuecomment-255544448,"I suggest to review commit-by-commit.
Refer to the commit description of  3f33edf (main commit of this pull request) for rationale.
The website will be updated accordingly once this is merged.","Also I think that the project is reaching the level of complexity that a separate task runner script could be a good idea for things like building, generating, releasing, running with special options, doing tests, etc. I've been doing doing this for all my projects recently and I find that it works much better than documentation for demonstrating how certain things are done in the project. I'll write a POC for that.",True,{}
i3/i3,https://github.com/i3/i3,2507,2016-10-16T20:57:46Z,2016-10-25T06:56:12Z,2016-11-13T18:49:01Z,MERGED,True,3005,1011,197,https://github.com/stapelberg,Switch to autotools (GNU build system),14,[],https://github.com/i3/i3/pull/2507,https://github.com/stapelberg,16,https://github.com/i3/i3/pull/2507#issuecomment-255596658,"I suggest to review commit-by-commit.
Refer to the commit description of  3f33edf (main commit of this pull request) for rationale.
The website will be updated accordingly once this is merged.","Thanks everyone for the review and discussion. I’ll address @sardemff7’s review comments in a second. If I forgot to address something else that came up in the discussion (i.e. not in the review itself), please let me know.


“make install” installs the same files (plus documentation and manpages)

So this is a change to before, right? We didn't use to install man pages because, if I recall correctly, you said the path for man pages isn't consistent. Is this obsolete?

@Airblader You recall correctly, and yes, I’d say this is obsolete: all distributions have tooling to invoke configure in such a way that the correct manpage path is passed. So, we still don’t know for sure where they’ll end up, but I have very high confidence that packagers/distribution will naturally end up doing the right thing.


[about --prefix=/usr not resulting in --sysconfdir=/etc]

Autoconf has the same kind of code, it surprises me that it doesn’t work.

@sardemff7 Can you point me to that code? I can’t see it in autoconf 2.69. In fact, testing with GNU hello 2.10 (which, IIUC, poses a reference example), when running ./configure --prefix=/usr && make lib/configmake.h, I see echo '#define SYSCONFDIR ""/usr/etc""'; in the output.

I would like to see an autogen.sh file which can generate the project minimally by calling:
autoreconf --force --install --verbose

and whatever else you need. This is good for people who are not familiar with the GNU build system.

@acrisci I’m a bit on the fence about this. Here are a couple of thoughts:

The file would likely literally contain exec autoreconf -fi, so it won’t save a lot of typing (caveat: of course I can’t guarantee that we’ll never need any other tools). The only advantage I can see is that some people might only be familiar with autogen.sh, not with running autoreconf -fi directly.
I remember that when I didn’t know how the GNU build system worked, I didn’t realize that running the autogen.sh script is what I should have done.
We don’t want novice users to deal with building i3 anyway, as we strongly encourage people to use their distribution’s packages.


Also I think that the project is reaching the level of complexity that a separate task runner script could be a good idea for things like building, generating, releasing, running with special options, doing tests, etc.

@acrisci This sounds like the exact opposite of where I’d like to go. I want the GNU build system be the (hopefully familiar, or at least worthy of time/knowledge investment) interface we present to our developers. But let’s discuss this in a separate issue please, this PR is already complex enough as-is :).",True,{}
i3/i3,https://github.com/i3/i3,2507,2016-10-16T20:57:46Z,2016-10-25T06:56:12Z,2016-11-13T18:49:01Z,MERGED,True,3005,1011,197,https://github.com/stapelberg,Switch to autotools (GNU build system),14,[],https://github.com/i3/i3/pull/2507,https://github.com/stapelberg,17,https://github.com/i3/i3/pull/2507#issuecomment-255608008,"I suggest to review commit-by-commit.
Refer to the commit description of  3f33edf (main commit of this pull request) for rationale.
The website will be updated accordingly once this is merged.","Alright, pushed my changes — please take another look and let me know what needs to be addressed now (as opposed to incremental improvements after this is merged).",True,{}
i3/i3,https://github.com/i3/i3,2507,2016-10-16T20:57:46Z,2016-10-25T06:56:12Z,2016-11-13T18:49:01Z,MERGED,True,3005,1011,197,https://github.com/stapelberg,Switch to autotools (GNU build system),14,[],https://github.com/i3/i3/pull/2507,https://github.com/Airblader,18,https://github.com/i3/i3/pull/2507#issuecomment-255834377,"I suggest to review commit-by-commit.
Refer to the commit description of  3f33edf (main commit of this pull request) for rationale.
The website will be updated accordingly once this is merged.",LGTM as far as I can tell,True,{}
i3/i3,https://github.com/i3/i3,2507,2016-10-16T20:57:46Z,2016-10-25T06:56:12Z,2016-11-13T18:49:01Z,MERGED,True,3005,1011,197,https://github.com/stapelberg,Switch to autotools (GNU build system),14,[],https://github.com/i3/i3/pull/2507,https://github.com/sardemff7,19,https://github.com/i3/i3/pull/2507#issuecomment-255885234,"I suggest to review commit-by-commit.
Refer to the commit description of  3f33edf (main commit of this pull request) for rationale.
The website will be updated accordingly once this is merged.","My bad, the /etc thing is code from the doc for distributions to put nice default values.",True,{}
i3/i3,https://github.com/i3/i3,2507,2016-10-16T20:57:46Z,2016-10-25T06:56:12Z,2016-11-13T18:49:01Z,MERGED,True,3005,1011,197,https://github.com/stapelberg,Switch to autotools (GNU build system),14,[],https://github.com/i3/i3/pull/2507,https://github.com/stapelberg,20,https://github.com/i3/i3/pull/2507#issuecomment-255952550,"I suggest to review commit-by-commit.
Refer to the commit description of  3f33edf (main commit of this pull request) for rationale.
The website will be updated accordingly once this is merged.","Thanks for clarifying. I’ll let @Airblader figure out whether Arch should use site defaults or otherwise change their build system to make this common case easier.
Given that there are no new comments, I’ll merge this PR now and we’ll sort out any incremental improvements afterwards.",True,{}
i3/i3,https://github.com/i3/i3,2508,2016-10-17T11:00:24Z,2016-11-28T21:09:39Z,2019-01-23T17:44:12Z,MERGED,True,123,59,6,https://github.com/Airblader,Respect minimum size hints for floating windows.,1,[],https://github.com/i3/i3/pull/2508,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2508,"This commit introduces proper support for the minimum size on floating
windows by ensuring that it is respected during mapping, later changes as
well as resizes.
Furthermore, this commit fixes minor issues with how the hints are handled
during calculations.
fixes #2436","This commit introduces proper support for the minimum size on floating
windows by ensuring that it is respected during mapping, later changes as
well as resizes.
Furthermore, this commit fixes minor issues with how the hints are handled
during calculations.
fixes #2436",True,{}
i3/i3,https://github.com/i3/i3,2508,2016-10-17T11:00:24Z,2016-11-28T21:09:39Z,2019-01-23T17:44:12Z,MERGED,True,123,59,6,https://github.com/Airblader,Respect minimum size hints for floating windows.,1,[],https://github.com/i3/i3/pull/2508,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2508#issuecomment-254177217,"This commit introduces proper support for the minimum size on floating
windows by ensuring that it is respected during mapping, later changes as
well as resizes.
Furthermore, this commit fixes minor issues with how the hints are handled
during calculations.
fixes #2436","I want to put a bit more thought into this first, but I'll open it for review already – also so I can leave a few explanatory comments.",True,{}
i3/i3,https://github.com/i3/i3,2508,2016-10-17T11:00:24Z,2016-11-28T21:09:39Z,2019-01-23T17:44:12Z,MERGED,True,123,59,6,https://github.com/Airblader,Respect minimum size hints for floating windows.,1,[],https://github.com/i3/i3/pull/2508,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2508#issuecomment-262061374,"This commit introduces proper support for the minimum size on floating
windows by ensuring that it is respected during mapping, later changes as
well as resizes.
Furthermore, this commit fixes minor issues with how the hints are handled
during calculations.
fixes #2436","@stapelberg Given that we just had a release, I think I'd prefer reviewing and getting this merged now. The PR had worked fine for me, but I think we'll need the community to test it on a broader basis.",True,{}
i3/i3,https://github.com/i3/i3,2508,2016-10-17T11:00:24Z,2016-11-28T21:09:39Z,2019-01-23T17:44:12Z,MERGED,True,123,59,6,https://github.com/Airblader,Respect minimum size hints for floating windows.,1,[],https://github.com/i3/i3/pull/2508,https://github.com/a-pav,4,https://github.com/i3/i3/pull/2508#issuecomment-441708867,"This commit introduces proper support for the minimum size on floating
windows by ensuring that it is respected during mapping, later changes as
well as resizes.
Furthermore, this commit fixes minor issues with how the hints are handled
during calculations.
fixes #2436","Hi,
Can you guide me to create a path that won't respect size hints?
I don't need this behaviour.",True,{}
i3/i3,https://github.com/i3/i3,2508,2016-10-17T11:00:24Z,2016-11-28T21:09:39Z,2019-01-23T17:44:12Z,MERGED,True,123,59,6,https://github.com/Airblader,Respect minimum size hints for floating windows.,1,[],https://github.com/i3/i3/pull/2508,https://github.com/Airblader,5,https://github.com/i3/i3/pull/2508#issuecomment-441711749,"This commit introduces proper support for the minimum size on floating
windows by ensuring that it is respected during mapping, later changes as
well as resizes.
Furthermore, this commit fixes minor issues with how the hints are handled
during calculations.
fixes #2436",Revert the commit locally and compile from source.,True,{'THUMBS_UP': ['https://github.com/a-pav']}
i3/i3,https://github.com/i3/i3,2508,2016-10-17T11:00:24Z,2016-11-28T21:09:39Z,2019-01-23T17:44:12Z,MERGED,True,123,59,6,https://github.com/Airblader,Respect minimum size hints for floating windows.,1,[],https://github.com/i3/i3/pull/2508,https://github.com/a-pav,6,https://github.com/i3/i3/pull/2508#issuecomment-456890563,"This commit introduces proper support for the minimum size on floating
windows by ensuring that it is respected during mapping, later changes as
well as resizes.
Furthermore, this commit fixes minor issues with how the hints are handled
during calculations.
fixes #2436","@Airblader I'm sorry I gotta ask, why this behaviour isn't configurable?
By the way, am I good to go by just make && sudo make install after I squashed this commit?
If not please be kind and help me further with building and installing from source.",True,{}
i3/i3,https://github.com/i3/i3,2508,2016-10-17T11:00:24Z,2016-11-28T21:09:39Z,2019-01-23T17:44:12Z,MERGED,True,123,59,6,https://github.com/Airblader,Respect minimum size hints for floating windows.,1,[],https://github.com/i3/i3/pull/2508,https://github.com/Airblader,7,https://github.com/i3/i3/pull/2508#issuecomment-456891798,"This commit introduces proper support for the minimum size on floating
windows by ensuring that it is respected during mapping, later changes as
well as resizes.
Furthermore, this commit fixes minor issues with how the hints are handled
during calculations.
fixes #2436","How to compile i3 is described in the hacking howto you can find on the website, however it may vary slightly on different distros. I'd recommend looking at how the package of your distro gets built and using those instructions.

I'm sorry I gotta ask, why this behaviour isn't configurable?

It's a specification, and the specification says this is a must. We don't want to make every part of the entire specification configurable, especially if doing so violates it.",True,{'THUMBS_UP': ['https://github.com/a-pav']}
i3/i3,https://github.com/i3/i3,2508,2016-10-17T11:00:24Z,2016-11-28T21:09:39Z,2019-01-23T17:44:12Z,MERGED,True,123,59,6,https://github.com/Airblader,Respect minimum size hints for floating windows.,1,[],https://github.com/i3/i3/pull/2508,https://github.com/a-pav,8,https://github.com/i3/i3/pull/2508#issuecomment-456898143,"This commit introduces proper support for the minimum size on floating
windows by ensuring that it is respected during mapping, later changes as
well as resizes.
Furthermore, this commit fixes minor issues with how the hints are handled
during calculations.
fixes #2436","@Airblader Thanks man. I wasn't able to find the hacking howto.
Maybe I will look at how it gets installed on my machine. But since I'm a total ignorant about the whole thing and I'm using ubuntu, think I'll be good by just following the hacking howto.

It's a specification, and the specification says this is a must. We don't want to make every part of the entire specification configurable, especially if doing so violates it.

I understand, thanks again.",True,{}
i3/i3,https://github.com/i3/i3,2510,2016-10-18T16:10:36Z,2016-10-18T16:13:56Z,2016-10-18T16:14:29Z,CLOSED,False,11,4,3,https://github.com/thufschmitt,Allow specifying a different config file when reloading,1,[],https://github.com/i3/i3/pull/2510,https://github.com/thufschmitt,1,https://github.com/i3/i3/pull/2510,"This pr adds an optional ""config_file"" parameter to the ""reload""
command, to reload i3 with a different config file than the one it was
started with.","This pr adds an optional ""config_file"" parameter to the ""reload""
command, to reload i3 with a different config file than the one it was
started with.",True,{}
i3/i3,https://github.com/i3/i3,2510,2016-10-18T16:10:36Z,2016-10-18T16:13:56Z,2016-10-18T16:14:29Z,CLOSED,False,11,4,3,https://github.com/thufschmitt,Allow specifying a different config file when reloading,1,[],https://github.com/i3/i3/pull/2510,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2510#issuecomment-254559098,"This pr adds an optional ""config_file"" parameter to the ""reload""
command, to reload i3 with a different config file than the one it was
started with.",Please see #1849 where this has been discussed and rejected. You'll also find ways there to achieve this without a change in i3.,True,{}
i3/i3,https://github.com/i3/i3,2516,2016-10-25T07:06:48Z,2016-10-25T18:54:42Z,2016-11-21T10:31:17Z,MERGED,True,1,0,1,https://github.com/stapelberg,debian: add missing dh-autoreconf to Build-Depends,1,[],https://github.com/i3/i3/pull/2516,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2516,,,True,{}
i3/i3,https://github.com/i3/i3,2517,2016-10-25T20:22:05Z,2016-10-25T20:35:30Z,2016-11-21T10:30:36Z,MERGED,True,1,1,1,https://github.com/stapelberg,Bugfix: escape I3_VERSION when read from file,1,[],https://github.com/i3/i3/pull/2517,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2517,"I3_VERSION is used as string literal in config.h, i.e.:
#define I3_VERSION …

Where “…” is replaced with the contents of I3_VERSION.
For our travis builds, we persist the version number to I3_VERSION,
i.e.:
$ cat I3_VERSION
4.12-150-g8ddc187 (2016-10-25, branch ""next"")

Previously, config.h would end up with:
#define I3_VERSION ""4.12-150-g8ddc187 (2016-10-25, branch ""next"")""

Note the unquoted double quotes around “next”, which are invalid in
C string literals.
Hence, this commit uses sed to escape double quotes, question marks and
backslashes (see also http://stackoverflow.com/a/12208808/712014).
The @<:@ and @:>@ quadrigraphs that m4 expands to [ and ], respectively,
see also http://stackoverflow.com/a/2309394/712014","I3_VERSION is used as string literal in config.h, i.e.:
#define I3_VERSION …

Where “…” is replaced with the contents of I3_VERSION.
For our travis builds, we persist the version number to I3_VERSION,
i.e.:
$ cat I3_VERSION
4.12-150-g8ddc187 (2016-10-25, branch ""next"")

Previously, config.h would end up with:
#define I3_VERSION ""4.12-150-g8ddc187 (2016-10-25, branch ""next"")""

Note the unquoted double quotes around “next”, which are invalid in
C string literals.
Hence, this commit uses sed to escape double quotes, question marks and
backslashes (see also http://stackoverflow.com/a/12208808/712014).
The @<:@ and @:>@ quadrigraphs that m4 expands to [ and ], respectively,
see also http://stackoverflow.com/a/2309394/712014",True,{}
i3/i3,https://github.com/i3/i3,2518,2016-10-26T06:47:46Z,2016-10-26T17:48:56Z,2016-11-21T10:31:40Z,MERGED,True,7,2,2,https://github.com/stapelberg,More travis fixes,2,[],https://github.com/i3/i3/pull/2518,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2518,"These slipped through the cracks :|. For the next bigger change, we definitely need a better travis testing story.","These slipped through the cracks :|. For the next bigger change, we definitely need a better travis testing story.",True,{}
i3/i3,https://github.com/i3/i3,2521,2016-10-28T21:31:17Z,2016-10-28T21:41:13Z,2016-11-21T10:30:39Z,MERGED,True,4,4,2,https://github.com/stapelberg,travis: use correct path to debian packages,1,[],https://github.com/i3/i3/pull/2521,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2521,,,True,{}
i3/i3,https://github.com/i3/i3,2522,2016-10-29T15:44:13Z,2016-11-08T08:56:46Z,2016-11-13T19:12:08Z,MERGED,True,12,4,2,https://github.com/hwangcc23,Fix an use-after-free bug,1,[],https://github.com/i3/i3/pull/2522,https://github.com/hwangcc23,1,https://github.com/i3/i3/pull/2522,"Fix the issue #2421 (#2421).
floating_enable() invokes tree_close_internal() to free con->parent.
After con->parent is freed in tree_close_internal() but before con->parent is reassigned by the caller, con->parent may be dereferenced and causes i3 crash.
The backtrace below is an example.
The already-freed pointer is dereferenced again through the pointer ""focused"" in x_push_changes().
Reassign con->parent before calling tree_close_internal() to fix this use-after-free bug.
0x0000000000416372 in con_get_workspace (con=0x7ab9c0) at ../i3/src/con.c:375
0x0000000000416103 in con_has_managed_window (con=0x7ab9c0) at ../i3/src/con.c:266
0x000000000042b413 in x_push_changes (con=0x78d190) at ../i3/src/x.c:1132
0x0000000l0004533e8 in tree_render () at ../i3/src/tree.c:504
0x0000000000452b4f in tree_close_internal (con=0x7b67c0, kill_window=DONT_KILL_WINDOW, dont_kill_parent=false, force_set_focus=false)
../i3/src/tree.c:314
0x00000000004196f0 in con_on_remove_child (con=0x7b67c0) at ../i3/src/con.c:1801
0x0000000000452eb7 in tree_close_internal (con=0x783840, kill_window=DONT_KILL_WINDOW, dont_kill_parent=false, force_set_focus=false)
../i3/src/tree.c:364
0x0000000000431516 in floating_enable (con=0x7ab9c0, automatic=false) at ../i3/src/floating.c:183
0x0000000000431eed in toggle_floating_mode (con=0x7ab9c0, automatic=false) at ../i3/src/floating.c:379
0x0000000000420d92 in cmd_floating (current_match=0x679a20 , cmd_output=0x679aa0 , floating_mode=0x7ab8c0 ""toggle"")
../i3/src/commands.c:1088
0x000000000043e5ae in GENERATED_call (call_identifier=60, result=0x679aa0 ) at include/GENERATED_command_call.h:486
0x000000000043ee19 in next_state (token=0x675d70 ) at ../i3/src/commands_parser.c:187
0x000000000043f2fb in parse_command (input=0x7b4fe0 ""floating toggle"", gen=0x0) at ../i3/src/commands_parser.c:308
0x00000000004125f8 in run_binding (bind=0x784260, con=0x0) at ../i3/src/bindings.c:792
0x000000000042bace in handle_key_press (event=0x7a01a0) at ../i3/src/key_press.c:33
0x000000000044e6aa in handle_event (type=2, event=0x7a01a0) at ../i3/src/handlers.c:1420
0x0000000000439533 in xcb_check_cb (loop=0x7ffff532f8e0, w=0x68c140, revents=32768) at ../i3/src/main.c:133
0x00007ffff5125d73 in ev_invoke_pending () from /usr/lib/x86_64-linux-gnu/libev.so.4
0x00007ffff51293de in ev_run () from /usr/lib/x86_64-linux-gnu/libev.so.4
0x0000000000439418 in ev_loop (loop=0x7ffff532f8e0, flags=0) at /usr/include/ev.h:835
0x000000000043d51d in main (argc=3, argv=0x7fffffffe0a8) at ../i3/src/main.c:913","Fix the issue #2421 (#2421).
floating_enable() invokes tree_close_internal() to free con->parent.
After con->parent is freed in tree_close_internal() but before con->parent is reassigned by the caller, con->parent may be dereferenced and causes i3 crash.
The backtrace below is an example.
The already-freed pointer is dereferenced again through the pointer ""focused"" in x_push_changes().
Reassign con->parent before calling tree_close_internal() to fix this use-after-free bug.
0x0000000000416372 in con_get_workspace (con=0x7ab9c0) at ../i3/src/con.c:375
0x0000000000416103 in con_has_managed_window (con=0x7ab9c0) at ../i3/src/con.c:266
0x000000000042b413 in x_push_changes (con=0x78d190) at ../i3/src/x.c:1132
0x0000000l0004533e8 in tree_render () at ../i3/src/tree.c:504
0x0000000000452b4f in tree_close_internal (con=0x7b67c0, kill_window=DONT_KILL_WINDOW, dont_kill_parent=false, force_set_focus=false)
../i3/src/tree.c:314
0x00000000004196f0 in con_on_remove_child (con=0x7b67c0) at ../i3/src/con.c:1801
0x0000000000452eb7 in tree_close_internal (con=0x783840, kill_window=DONT_KILL_WINDOW, dont_kill_parent=false, force_set_focus=false)
../i3/src/tree.c:364
0x0000000000431516 in floating_enable (con=0x7ab9c0, automatic=false) at ../i3/src/floating.c:183
0x0000000000431eed in toggle_floating_mode (con=0x7ab9c0, automatic=false) at ../i3/src/floating.c:379
0x0000000000420d92 in cmd_floating (current_match=0x679a20 , cmd_output=0x679aa0 , floating_mode=0x7ab8c0 ""toggle"")
../i3/src/commands.c:1088
0x000000000043e5ae in GENERATED_call (call_identifier=60, result=0x679aa0 ) at include/GENERATED_command_call.h:486
0x000000000043ee19 in next_state (token=0x675d70 ) at ../i3/src/commands_parser.c:187
0x000000000043f2fb in parse_command (input=0x7b4fe0 ""floating toggle"", gen=0x0) at ../i3/src/commands_parser.c:308
0x00000000004125f8 in run_binding (bind=0x784260, con=0x0) at ../i3/src/bindings.c:792
0x000000000042bace in handle_key_press (event=0x7a01a0) at ../i3/src/key_press.c:33
0x000000000044e6aa in handle_event (type=2, event=0x7a01a0) at ../i3/src/handlers.c:1420
0x0000000000439533 in xcb_check_cb (loop=0x7ffff532f8e0, w=0x68c140, revents=32768) at ../i3/src/main.c:133
0x00007ffff5125d73 in ev_invoke_pending () from /usr/lib/x86_64-linux-gnu/libev.so.4
0x00007ffff51293de in ev_run () from /usr/lib/x86_64-linux-gnu/libev.so.4
0x0000000000439418 in ev_loop (loop=0x7ffff532f8e0, flags=0) at /usr/include/ev.h:835
0x000000000043d51d in main (argc=3, argv=0x7fffffffe0a8) at ../i3/src/main.c:913",True,{}
i3/i3,https://github.com/i3/i3,2522,2016-10-29T15:44:13Z,2016-11-08T08:56:46Z,2016-11-13T19:12:08Z,MERGED,True,12,4,2,https://github.com/hwangcc23,Fix an use-after-free bug,1,[],https://github.com/i3/i3/pull/2522,https://github.com/hwangcc23,2,https://github.com/i3/i3/pull/2522#issuecomment-257155696,"Fix the issue #2421 (#2421).
floating_enable() invokes tree_close_internal() to free con->parent.
After con->parent is freed in tree_close_internal() but before con->parent is reassigned by the caller, con->parent may be dereferenced and causes i3 crash.
The backtrace below is an example.
The already-freed pointer is dereferenced again through the pointer ""focused"" in x_push_changes().
Reassign con->parent before calling tree_close_internal() to fix this use-after-free bug.
0x0000000000416372 in con_get_workspace (con=0x7ab9c0) at ../i3/src/con.c:375
0x0000000000416103 in con_has_managed_window (con=0x7ab9c0) at ../i3/src/con.c:266
0x000000000042b413 in x_push_changes (con=0x78d190) at ../i3/src/x.c:1132
0x0000000l0004533e8 in tree_render () at ../i3/src/tree.c:504
0x0000000000452b4f in tree_close_internal (con=0x7b67c0, kill_window=DONT_KILL_WINDOW, dont_kill_parent=false, force_set_focus=false)
../i3/src/tree.c:314
0x00000000004196f0 in con_on_remove_child (con=0x7b67c0) at ../i3/src/con.c:1801
0x0000000000452eb7 in tree_close_internal (con=0x783840, kill_window=DONT_KILL_WINDOW, dont_kill_parent=false, force_set_focus=false)
../i3/src/tree.c:364
0x0000000000431516 in floating_enable (con=0x7ab9c0, automatic=false) at ../i3/src/floating.c:183
0x0000000000431eed in toggle_floating_mode (con=0x7ab9c0, automatic=false) at ../i3/src/floating.c:379
0x0000000000420d92 in cmd_floating (current_match=0x679a20 , cmd_output=0x679aa0 , floating_mode=0x7ab8c0 ""toggle"")
../i3/src/commands.c:1088
0x000000000043e5ae in GENERATED_call (call_identifier=60, result=0x679aa0 ) at include/GENERATED_command_call.h:486
0x000000000043ee19 in next_state (token=0x675d70 ) at ../i3/src/commands_parser.c:187
0x000000000043f2fb in parse_command (input=0x7b4fe0 ""floating toggle"", gen=0x0) at ../i3/src/commands_parser.c:308
0x00000000004125f8 in run_binding (bind=0x784260, con=0x0) at ../i3/src/bindings.c:792
0x000000000042bace in handle_key_press (event=0x7a01a0) at ../i3/src/key_press.c:33
0x000000000044e6aa in handle_event (type=2, event=0x7a01a0) at ../i3/src/handlers.c:1420
0x0000000000439533 in xcb_check_cb (loop=0x7ffff532f8e0, w=0x68c140, revents=32768) at ../i3/src/main.c:133
0x00007ffff5125d73 in ev_invoke_pending () from /usr/lib/x86_64-linux-gnu/libev.so.4
0x00007ffff51293de in ev_run () from /usr/lib/x86_64-linux-gnu/libev.so.4
0x0000000000439418 in ev_loop (loop=0x7ffff532f8e0, flags=0) at /usr/include/ev.h:835
0x000000000043d51d in main (argc=3, argv=0x7fffffffe0a8) at ../i3/src/main.c:913","Couldn't tree_close_internal handle this itself?

This can be done.
For example, change the prototype of tree_close_internal: bool tree_close_internal(Con **con, ...
But I think it is better to let the caller handles his Con list by himself.

haven't checked if you modified all callers

I modified all callers who have this problem. :)",True,{}
i3/i3,https://github.com/i3/i3,2524,2016-10-31T09:44:22Z,2016-12-09T07:37:49Z,2016-12-09T07:42:40Z,MERGED,True,2,2,2,https://github.com/jwilk,Fix name of mcedit,1,[],https://github.com/i3/i3/pull/2524,https://github.com/jwilk,1,https://github.com/i3/i3/pull/2524,"It's mcedit, not mc-edit.","It's mcedit, not mc-edit.",True,{}
i3/i3,https://github.com/i3/i3,2524,2016-10-31T09:44:22Z,2016-12-09T07:37:49Z,2016-12-09T07:42:40Z,MERGED,True,2,2,2,https://github.com/jwilk,Fix name of mcedit,1,[],https://github.com/i3/i3/pull/2524,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/2524#issuecomment-257258881,"It's mcedit, not mc-edit.",Could it be that some distributions ship it as mc-edit? Should we have both here?,True,{}
i3/i3,https://github.com/i3/i3,2524,2016-10-31T09:44:22Z,2016-12-09T07:37:49Z,2016-12-09T07:42:40Z,MERGED,True,2,2,2,https://github.com/jwilk,Fix name of mcedit,1,[],https://github.com/i3/i3/pull/2524,https://github.com/jwilk,3,https://github.com/i3/i3/pull/2524#issuecomment-257267001,"It's mcedit, not mc-edit.","I doubt mc-edit is a thing. There's exactly one hit on DCS (i3 itself), no hits on RPM search; I couldn't find anything relevant on Google either.
@hboetes, it was apparently you who added mc-edit to the list of editors (ac3541c).
Was it a typo for mcedit or is there actually a distro that ships it under this name?",True,{}
i3/i3,https://github.com/i3/i3,2524,2016-10-31T09:44:22Z,2016-12-09T07:37:49Z,2016-12-09T07:42:40Z,MERGED,True,2,2,2,https://github.com/jwilk,Fix name of mcedit,1,[],https://github.com/i3/i3/pull/2524,https://github.com/hboetes,4,https://github.com/i3/i3/pull/2524#issuecomment-257288700,"It's mcedit, not mc-edit.","I can’t look it up right now, but the intention was the editor that is
provided by the midnight commander package.",True,{}
i3/i3,https://github.com/i3/i3,2524,2016-10-31T09:44:22Z,2016-12-09T07:37:49Z,2016-12-09T07:42:40Z,MERGED,True,2,2,2,https://github.com/jwilk,Fix name of mcedit,1,[],https://github.com/i3/i3/pull/2524,https://github.com/Airblader,5,https://github.com/i3/i3/pull/2524#issuecomment-264519784,"It's mcedit, not mc-edit.",@jwilk @hboetes What's the status here?,True,{}
i3/i3,https://github.com/i3/i3,2524,2016-10-31T09:44:22Z,2016-12-09T07:37:49Z,2016-12-09T07:42:40Z,MERGED,True,2,2,2,https://github.com/jwilk,Fix name of mcedit,1,[],https://github.com/i3/i3/pull/2524,https://github.com/hboetes,6,https://github.com/i3/i3/pull/2524#issuecomment-264555453,"It's mcedit, not mc-edit.","Right, the proper name is ‘mcedit’ indeed.",True,{}
i3/i3,https://github.com/i3/i3,2524,2016-10-31T09:44:22Z,2016-12-09T07:37:49Z,2016-12-09T07:42:40Z,MERGED,True,2,2,2,https://github.com/jwilk,Fix name of mcedit,1,[],https://github.com/i3/i3/pull/2524,https://github.com/Airblader,7,https://github.com/i3/i3/pull/2524#issuecomment-264575331,"It's mcedit, not mc-edit.",@stapelberg Then this should be good to go.,True,{}
i3/i3,https://github.com/i3/i3,2526,2016-10-31T21:15:25Z,2016-11-07T20:29:54Z,2016-11-07T20:29:54Z,CLOSED,False,1,0,1,https://github.com/Airblader,Added build/ to .gitignore.,1,[],https://github.com/i3/i3/pull/2526,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2526,,,True,{}
i3/i3,https://github.com/i3/i3,2526,2016-10-31T21:15:25Z,2016-11-07T20:29:54Z,2016-11-07T20:29:54Z,CLOSED,False,1,0,1,https://github.com/Airblader,Added build/ to .gitignore.,1,[],https://github.com/i3/i3/pull/2526,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/2526#issuecomment-258707233,,"This seems like a straight-forward addition at first glance, but consider that the name of the build directory can be user-defined, and actually defaults to the architecture triplet (e.g. x86_64-pc-linux-gnu in my case). “build” is merely what I recommended in the commit description, because it seems like a convention.
One could argue that adding the most common build directory names to .gitignore is strictly better than not having them, but I’d like to take a second to discuss this in more detail and see if we can’t find a better solution.
In fact, I’m wondering whether we could have configure automatically add the name of the build directory to .git/info/exclude (only in case there is a .git directory next to configure, of course)? That way, any build directory name would work, and .git/info/exclude is local to the checkout, not to the repository.",True,{}
i3/i3,https://github.com/i3/i3,2526,2016-10-31T21:15:25Z,2016-11-07T20:29:54Z,2016-11-07T20:29:54Z,CLOSED,False,1,0,1,https://github.com/Airblader,Added build/ to .gitignore.,1,[],https://github.com/i3/i3/pull/2526,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2526#issuecomment-258709247,,I really mostly only care about this for local builds of us developers. For package builds it doesn't matter at all since the checkout is ususally a throw-away checkout the user never gets to see anyway. I just don't want my tree to dirty because of this directory when I work on i3. I don't think there's much benefit in putting a lot of effort into this.,True,{}
i3/i3,https://github.com/i3/i3,2526,2016-10-31T21:15:25Z,2016-11-07T20:29:54Z,2016-11-07T20:29:54Z,CLOSED,False,1,0,1,https://github.com/Airblader,Added build/ to .gitignore.,1,[],https://github.com/i3/i3/pull/2526,https://github.com/stapelberg,4,https://github.com/i3/i3/pull/2526#issuecomment-258710088,,"I’m not talking about package builds, I also had just developers in mind. i3 developers (which is more people than just us core contributors) might just use ./configure (getting the triplet build directory name) or a custom build directory name entirely.",True,{}
i3/i3,https://github.com/i3/i3,2526,2016-10-31T21:15:25Z,2016-11-07T20:29:54Z,2016-11-07T20:29:54Z,CLOSED,False,1,0,1,https://github.com/Airblader,Added build/ to .gitignore.,1,[],https://github.com/i3/i3/pull/2526,https://github.com/Airblader,5,https://github.com/i3/i3/pull/2526#issuecomment-258710269,,"Yeah, but I don't really see an issue with that. If they don't care about the dirty tree, that's fine. If they do, they can use build as a name. I don't think that's too much to ask of a developer. I still don't really think jumping through hoops does anybody any good here. All we need is one (empty) directory we can use for compiling that git won't track.",True,{}
i3/i3,https://github.com/i3/i3,2526,2016-10-31T21:15:25Z,2016-11-07T20:29:54Z,2016-11-07T20:29:54Z,CLOSED,False,1,0,1,https://github.com/Airblader,Added build/ to .gitignore.,1,[],https://github.com/i3/i3/pull/2526,https://github.com/Airblader,6,https://github.com/i3/i3/pull/2526#issuecomment-258710385,,"… of course if somebody later wants to improve this with such a mechanism, that's cool with me. Right now I just want build to be excluded until somebody gives us a reason for why that simple solution isn't sufficient in their case. :-)",True,{}
i3/i3,https://github.com/i3/i3,2526,2016-10-31T21:15:25Z,2016-11-07T20:29:54Z,2016-11-07T20:29:54Z,CLOSED,False,1,0,1,https://github.com/Airblader,Added build/ to .gitignore.,1,[],https://github.com/i3/i3/pull/2526,https://github.com/stapelberg,7,https://github.com/i3/i3/pull/2526#issuecomment-258711333,,"Here’s my suggestion (to be added just before the final echo in configure.ac):
git_dir=`git rev-parse --git-dir 2>/dev/null`
if test -n ""$git_dir""; then
       srcdir=`dirname ""$git_dir""`
       exclude_dir=`pwd | sed ""s,^$srcdir,,g""`
       if ! grep -q ""^$exclude_dir"" ""$git_dir/info/exclude""; then
               echo ""$exclude_dir"" >> ""$git_dir/info/exclude""
       fi
fi
Do you want to incorporate that into your pull request or shall I file a new one?",True,{}
i3/i3,https://github.com/i3/i3,2526,2016-10-31T21:15:25Z,2016-11-07T20:29:54Z,2016-11-07T20:29:54Z,CLOSED,False,1,0,1,https://github.com/Airblader,Added build/ to .gitignore.,1,[],https://github.com/i3/i3/pull/2526,https://github.com/Airblader,8,https://github.com/i3/i3/pull/2526#issuecomment-258717399,,"It's your code entirely, so I think the commit should be authored by you. :-) That said, can we get build/ in there anyway? As a generic meaningful name that I can easily memorize and type across any machine I work with? :-)",True,{}
i3/i3,https://github.com/i3/i3,2526,2016-10-31T21:15:25Z,2016-11-07T20:29:54Z,2016-11-07T20:29:54Z,CLOSED,False,1,0,1,https://github.com/Airblader,Added build/ to .gitignore.,1,[],https://github.com/i3/i3/pull/2526,https://github.com/stapelberg,9,https://github.com/i3/i3/pull/2526#issuecomment-258767324,,"It's your code entirely, so I think the commit should be authored by you. :-)

done: #2543

That said, can we get build/ in there anyway? As a generic meaningful name that I can easily memorize and type across any machine I work with? :-)

I don’t follow — why is that necessary? With my PR, build directories will already be git-ignored…?",True,{}
i3/i3,https://github.com/i3/i3,2526,2016-10-31T21:15:25Z,2016-11-07T20:29:54Z,2016-11-07T20:29:54Z,CLOSED,False,1,0,1,https://github.com/Airblader,Added build/ to .gitignore.,1,[],https://github.com/i3/i3/pull/2526,https://github.com/Airblader,10,https://github.com/i3/i3/pull/2526#issuecomment-258952114,,"With my PR, build directories will already be git-ignored…?

Yes, but the name is relatively hard to remember and can differ across machines. As someone using multiple machines I'd be happier to have one consistent name I can rely on (and type easily). I think having build in gitignore really doesn't hurt anyone and hence it's a low-cost nice-to-have. The autogenerated autotools ignores have similar things as well.
If you, however, disagree then I don't think it's worth talking about it much more and I'll just hack it into my local checkouts. :-)",True,{}
i3/i3,https://github.com/i3/i3,2526,2016-10-31T21:15:25Z,2016-11-07T20:29:54Z,2016-11-07T20:29:54Z,CLOSED,False,1,0,1,https://github.com/Airblader,Added build/ to .gitignore.,1,[],https://github.com/i3/i3/pull/2526,https://github.com/stapelberg,11,https://github.com/i3/i3/pull/2526#issuecomment-258952831,,"I still don’t follow.
If you want to name your build directory “build”, then go ahead. As soon as you run cd build && ../configure (which you need to do anyway in order to build), the directory will be git-ignored.
Am I misunderstanding something?",True,{}
i3/i3,https://github.com/i3/i3,2526,2016-10-31T21:15:25Z,2016-11-07T20:29:54Z,2016-11-07T20:29:54Z,CLOSED,False,1,0,1,https://github.com/Airblader,Added build/ to .gitignore.,1,[],https://github.com/i3/i3/pull/2526,https://github.com/Airblader,12,https://github.com/i3/i3/pull/2526#issuecomment-258953157,,"Am I misunderstanding something?

No, apparently I was. If that's how it works that is totally fine with me. Thanks!",True,{}
i3/i3,https://github.com/i3/i3,2530,2016-11-02T20:45:10Z,2016-11-03T07:18:19Z,2016-11-13T18:49:01Z,MERGED,True,5,1,2,https://github.com/Airblader,Fix two memory leaks.,1,[],https://github.com/i3/i3/pull/2530,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2530,"This still leaves
==27513==ERROR: LeakSanitizer: detected memory leaks

Direct leak of 35 byte(s) in 1 object(s) allocated from:
    #0 0x7fbe4b50fe60 in __interceptor_malloc /build/gcc-multilib/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:62
    #1 0x7fbe47db5c37 in _IO_vasprintf (/usr/lib/libc.so.6+0x6fc37)

but that doesn't seem to come from us.","This still leaves
==27513==ERROR: LeakSanitizer: detected memory leaks

Direct leak of 35 byte(s) in 1 object(s) allocated from:
    #0 0x7fbe4b50fe60 in __interceptor_malloc /build/gcc-multilib/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:62
    #1 0x7fbe47db5c37 in _IO_vasprintf (/usr/lib/libc.so.6+0x6fc37)

but that doesn't seem to come from us.",True,{}
i3/i3,https://github.com/i3/i3,2530,2016-11-02T20:45:10Z,2016-11-03T07:18:19Z,2016-11-13T18:49:01Z,MERGED,True,5,1,2,https://github.com/Airblader,Fix two memory leaks.,1,[],https://github.com/i3/i3/pull/2530,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2530#issuecomment-258023760,"This still leaves
==27513==ERROR: LeakSanitizer: detected memory leaks

Direct leak of 35 byte(s) in 1 object(s) allocated from:
    #0 0x7fbe4b50fe60 in __interceptor_malloc /build/gcc-multilib/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:62
    #1 0x7fbe47db5c37 in _IO_vasprintf (/usr/lib/libc.so.6+0x6fc37)

but that doesn't seem to come from us.","Actually I do think that comes from us, but I'm not sure yet where from exactly. The only relevant sasprintf call in src/main.c looks fine to me.",True,{}
i3/i3,https://github.com/i3/i3,2530,2016-11-02T20:45:10Z,2016-11-03T07:18:19Z,2016-11-13T18:49:01Z,MERGED,True,5,1,2,https://github.com/Airblader,Fix two memory leaks.,1,[],https://github.com/i3/i3/pull/2530,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2530#issuecomment-258028471,"This still leaves
==27513==ERROR: LeakSanitizer: detected memory leaks

Direct leak of 35 byte(s) in 1 object(s) allocated from:
    #0 0x7fbe4b50fe60 in __interceptor_malloc /build/gcc-multilib/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:62
    #1 0x7fbe47db5c37 in _IO_vasprintf (/usr/lib/libc.so.6+0x6fc37)

but that doesn't seem to come from us.","OK, I found the last one. It was the unfree'd socket path.",True,{}
i3/i3,https://github.com/i3/i3,2536,2016-11-04T10:53:49Z,2016-11-05T10:32:40Z,2016-11-13T18:49:01Z,MERGED,True,1,1,1,https://github.com/jwilk,Fix typo,1,[],https://github.com/i3/i3/pull/2536,https://github.com/jwilk,1,https://github.com/i3/i3/pull/2536,Found using anorack.,Found using anorack.,True,{}
i3/i3,https://github.com/i3/i3,2537,2016-11-04T13:17:08Z,2016-11-05T10:32:16Z,2016-11-13T18:49:02Z,MERGED,True,3,3,1,https://github.com/joshrosso,Update config.keycodes link to proper location in user guide,1,[],https://github.com/i3/i3/pull/2537,https://github.com/joshrosso,1,https://github.com/i3/i3/pull/2537,"Links to i3's config.keycodes in the User's guide navigates to a 404.
This commit updates the reference to the /etc/config.keycodes
file in GitHub.","Links to i3's config.keycodes in the User's guide navigates to a 404.
This commit updates the reference to the /etc/config.keycodes
file in GitHub.",True,{}
i3/i3,https://github.com/i3/i3,2537,2016-11-04T13:17:08Z,2016-11-05T10:32:16Z,2016-11-13T18:49:02Z,MERGED,True,3,3,1,https://github.com/joshrosso,Update config.keycodes link to proper location in user guide,1,[],https://github.com/i3/i3/pull/2537,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/2537#issuecomment-258603311,"Links to i3's config.keycodes in the User's guide navigates to a 404.
This commit updates the reference to the /etc/config.keycodes
file in GitHub.",Thanks!,True,{}
i3/i3,https://github.com/i3/i3,2542,2016-11-06T01:00:38Z,2016-11-06T16:14:37Z,2021-07-18T10:28:36Z,MERGED,True,3,2,1,https://github.com/Airblader,Fix memory leak in i3-msg.,1,[],https://github.com/i3/i3/pull/2542,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2542,relates to #2541,relates to #2541,True,{}
i3/i3,https://github.com/i3/i3,2543,2016-11-07T07:47:01Z,2016-11-07T19:49:26Z,2016-11-21T10:31:26Z,MERGED,True,9,0,1,https://github.com/stapelberg,configure: add build directory to gitignore,1,[],https://github.com/i3/i3/pull/2543,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2543,see also PR #2526,see also PR #2526,True,{}
i3/i3,https://github.com/i3/i3,2545,2016-11-08T20:47:24Z,2016-11-21T10:32:00Z,2016-11-21T10:32:00Z,CLOSED,False,2,2,1,https://github.com/stapelberg,release.sh: update for v4.13 release,1,[],https://github.com/i3/i3/pull/2545,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2545,,,True,{}
i3/i3,https://github.com/i3/i3,2547,2016-11-08T21:24:41Z,2016-11-08T21:46:43Z,2016-11-21T10:30:42Z,MERGED,True,907,837,24,https://github.com/stapelberg,switch to clang-format-3.8,1,[],https://github.com/i3/i3/pull/2547,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2547,"https://llvm.org/bugs/show_bug.cgi?id=30353 was filed for the unintended
line break between in e.g. “TAILQ_ENTRY(foo)\nbar;”.
Until that’s fixed or a workaround is known, we’ll live with line
breaks. To make it a bit easier for readers to see what’s going on, I
added extra line breaks around each such struct member/variable
definition, so that they at least visually are a single unit.
fixes #2174","https://llvm.org/bugs/show_bug.cgi?id=30353 was filed for the unintended
line break between in e.g. “TAILQ_ENTRY(foo)\nbar;”.
Until that’s fixed or a workaround is known, we’ll live with line
breaks. To make it a bit easier for readers to see what’s going on, I
added extra line breaks around each such struct member/variable
definition, so that they at least visually are a single unit.
fixes #2174",True,{}
i3/i3,https://github.com/i3/i3,2550,2016-11-08T21:47:31Z,2016-11-08T22:04:46Z,2016-11-21T10:30:33Z,MERGED,True,1,1,1,https://github.com/stapelberg,travis: switch to container-based trusty,1,[],https://github.com/i3/i3/pull/2550,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2550,fixes #2546,fixes #2546,True,{}
i3/i3,https://github.com/i3/i3,2551,2016-11-09T21:39:57Z,2016-11-16T21:48:05Z,2016-11-16T21:48:05Z,MERGED,True,2,2,2,https://github.com/bapt,Freebsd fixes,2,[],https://github.com/i3/i3/pull/2551,https://github.com/bapt,1,https://github.com/i3/i3/pull/2551,,,True,{}
i3/i3,https://github.com/i3/i3,2553,2016-11-10T08:08:24Z,2016-11-10T08:25:30Z,2016-11-21T10:30:59Z,MERGED,True,1,0,1,https://github.com/stapelberg,release.sh: add reminder to announce on reddit,1,[],https://github.com/i3/i3/pull/2553,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2553,,,True,{}
i3/i3,https://github.com/i3/i3,2553,2016-11-10T08:08:24Z,2016-11-10T08:25:30Z,2016-11-21T10:30:59Z,MERGED,True,1,0,1,https://github.com/stapelberg,release.sh: add reminder to announce on reddit,1,[],https://github.com/i3/i3/pull/2553,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2553#issuecomment-259626779,,Can we also add a reminder to update the Github milestones? That's what i3bot will rely on.,True,{}
i3/i3,https://github.com/i3/i3,2553,2016-11-10T08:08:24Z,2016-11-10T08:25:30Z,2016-11-21T10:30:59Z,MERGED,True,1,0,1,https://github.com/stapelberg,release.sh: add reminder to announce on reddit,1,[],https://github.com/i3/i3/pull/2553,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/2553#issuecomment-259629330,,"Can we also add a reminder to update the Github milestones? That's what i3bot will rely on.

Sure. Can you send a PR to that effect, describing precisely which steps are necessary?",True,{}
i3/i3,https://github.com/i3/i3,2556,2016-11-11T12:06:55Z,2016-11-12T14:34:54Z,2016-11-12T14:34:54Z,MERGED,True,17,13,4,https://github.com/mihaicmn,Use the DPI setting within the i3bar,1,[],https://github.com/i3/i3/pull/2556,https://github.com/mihaicmn,1,https://github.com/i3/i3/pull/2556,,,True,{'THUMBS_UP': ['https://github.com/Airblader']}
i3/i3,https://github.com/i3/i3,2556,2016-11-11T12:06:55Z,2016-11-12T14:34:54Z,2016-11-12T14:34:54Z,MERGED,True,17,13,4,https://github.com/mihaicmn,Use the DPI setting within the i3bar,1,[],https://github.com/i3/i3/pull/2556,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2556#issuecomment-259951738,,"I like the change, but please make sure the formatting is correct. :-)",True,{}
i3/i3,https://github.com/i3/i3,2556,2016-11-11T12:06:55Z,2016-11-12T14:34:54Z,2016-11-12T14:34:54Z,MERGED,True,17,13,4,https://github.com/mihaicmn,Use the DPI setting within the i3bar,1,[],https://github.com/i3/i3/pull/2556,https://github.com/mihaicmn,3,https://github.com/i3/i3/pull/2556#issuecomment-259960176,,Is there any procedure that has to be followed to format the code?,True,{}
i3/i3,https://github.com/i3/i3,2556,2016-11-11T12:06:55Z,2016-11-12T14:34:54Z,2016-11-12T14:34:54Z,MERGED,True,17,13,4,https://github.com/mihaicmn,Use the DPI setting within the i3bar,1,[],https://github.com/i3/i3/pull/2556,https://github.com/Airblader,4,https://github.com/i3/i3/pull/2556#issuecomment-259960443,,"You just run clang-format on the code, i.e.,
clang-format -i $(find . -name ""*.[ch]"" | tr '\n' ' ')",True,{}
i3/i3,https://github.com/i3/i3,2556,2016-11-11T12:06:55Z,2016-11-12T14:34:54Z,2016-11-12T14:34:54Z,MERGED,True,17,13,4,https://github.com/mihaicmn,Use the DPI setting within the i3bar,1,[],https://github.com/i3/i3/pull/2556,https://github.com/Airblader,5,https://github.com/i3/i3/pull/2556#issuecomment-260092779,,"The changes look good to me, but can you please squash them into a single commit so we can keep the git log clean?",True,{}
i3/i3,https://github.com/i3/i3,2560,2016-11-13T15:42:49Z,2016-11-13T18:45:39Z,2016-11-13T18:45:39Z,MERGED,True,3,0,1,https://github.com/hwangcc23,Fix memory leaks,1,[],https://github.com/i3/i3/pull/2560,https://github.com/hwangcc23,1,https://github.com/i3/i3/pull/2560,"Fix memory leaks when executing 'i3 --moreversion'.
=================================================================
==14852==ERROR: LeakSanitizer: detected memory leaks
Direct leak of 159 byte(s) in 1 object(s) allocated from:
#0 0x7fea40855602 in malloc (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x98602)
#1 0x4c4c4a in smalloc ../../i3/libi3/safewrappers.c:24
#2 0x4c3aee in ipc_recv_message ../../i3/libi3/ipc_recv_message.c:61
#3 0x44dc2e in display_running_version ../../i3/src/display_version.c:94
#4 0x472947 in main ../../i3/src/main.c:269
#5 0x7fea3d0c982f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)
Direct leak of 39 byte(s) in 2 object(s) allocated from:
#0 0x7fea40855602 in malloc (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x98602)
#1 0x7fea3d11f7d7 in vasprintf (/lib/x86_64-linux-gnu/libc.so.6+0x767d7)
SUMMARY: AddressSanitizer: 198 byte(s) leaked in 3 allocation(s).","Fix memory leaks when executing 'i3 --moreversion'.
=================================================================
==14852==ERROR: LeakSanitizer: detected memory leaks
Direct leak of 159 byte(s) in 1 object(s) allocated from:
#0 0x7fea40855602 in malloc (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x98602)
#1 0x4c4c4a in smalloc ../../i3/libi3/safewrappers.c:24
#2 0x4c3aee in ipc_recv_message ../../i3/libi3/ipc_recv_message.c:61
#3 0x44dc2e in display_running_version ../../i3/src/display_version.c:94
#4 0x472947 in main ../../i3/src/main.c:269
#5 0x7fea3d0c982f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)
Direct leak of 39 byte(s) in 2 object(s) allocated from:
#0 0x7fea40855602 in malloc (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x98602)
#1 0x7fea3d11f7d7 in vasprintf (/lib/x86_64-linux-gnu/libc.so.6+0x767d7)
SUMMARY: AddressSanitizer: 198 byte(s) leaked in 3 allocation(s).",True,{}
i3/i3,https://github.com/i3/i3,2561,2016-11-13T18:43:20Z,2016-11-21T20:41:43Z,2016-11-21T20:41:43Z,MERGED,True,4,0,1,https://github.com/Airblader,Added instructions to update Github milestones after release.,1,[],https://github.com/i3/i3/pull/2561,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2561,,,True,{}
i3/i3,https://github.com/i3/i3,2561,2016-11-13T18:43:20Z,2016-11-21T20:41:43Z,2016-11-21T20:41:43Z,MERGED,True,4,0,1,https://github.com/Airblader,Added instructions to update Github milestones after release.,1,[],https://github.com/i3/i3/pull/2561,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2561#issuecomment-260496373,,@stapelberg Done,True,{}
i3/i3,https://github.com/i3/i3,2561,2016-11-13T18:43:20Z,2016-11-21T20:41:43Z,2016-11-21T20:41:43Z,MERGED,True,4,0,1,https://github.com/Airblader,Added instructions to update Github milestones after release.,1,[],https://github.com/i3/i3/pull/2561,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2561#issuecomment-262059697,,@stapelberg Fixed now.,True,{}
i3/i3,https://github.com/i3/i3,2567,2016-11-14T11:55:01Z,2016-11-15T17:26:53Z,2016-11-15T17:26:53Z,MERGED,True,6,2,1,https://github.com/mihaicmn,Fix incorrect reply to ipc command,1,[],https://github.com/i3/i3/pull/2567,https://github.com/mihaicmn,1,https://github.com/i3/i3/pull/2567,Fixes issue #2565,Fixes issue #2565,True,{}
i3/i3,https://github.com/i3/i3,2567,2016-11-14T11:55:01Z,2016-11-15T17:26:53Z,2016-11-15T17:26:53Z,MERGED,True,6,2,1,https://github.com/mihaicmn,Fix incorrect reply to ipc command,1,[],https://github.com/i3/i3/pull/2567,https://github.com/mihaicmn,2,https://github.com/i3/i3/pull/2567#issuecomment-260426189,Fixes issue #2565,There are some failing tests but they seem unrelated to my changes. Could someone please take a look?,True,{}
i3/i3,https://github.com/i3/i3,2567,2016-11-14T11:55:01Z,2016-11-15T17:26:53Z,2016-11-15T17:26:53Z,MERGED,True,6,2,1,https://github.com/mihaicmn,Fix incorrect reply to ipc command,1,[],https://github.com/i3/i3/pull/2567,https://github.com/mihaicmn,3,https://github.com/i3/i3/pull/2567#issuecomment-260499939,Fixes issue #2565,Thank you Ingo!,True,{}
i3/i3,https://github.com/i3/i3,2571,2016-11-19T12:45:59Z,2016-11-19T22:45:23Z,2016-11-21T10:30:23Z,MERGED,True,6,0,1,https://github.com/stapelberg,configure.ac: verify macros in m4/ are being replaced (Thanks sur5r),1,[],https://github.com/i3/i3/pull/2571,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2571,"See the comment for more details, and see the motivating blog post:
https://blogs.noname-ev.de/sur5r/index.php?/archives/7-Another-instance-of-AC_DEFINE-being-undefined.html","See the comment for more details, and see the motivating blog post:
https://blogs.noname-ev.de/sur5r/index.php?/archives/7-Another-instance-of-AC_DEFINE-being-undefined.html",True,{}
i3/i3,https://github.com/i3/i3,2573,2016-11-20T20:19:26Z,2016-11-21T07:20:14Z,2016-11-21T07:20:36Z,MERGED,True,543,2,5,https://github.com/stapelberg,tests: add inject_randr15,1,[],https://github.com/i3/i3/pull/2573,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2573,"This tool is similar to xtrace in usage in that it intercepts traffic to
the X server. The motivating feature for writing the tool is its ability
to inject prepared reply messages instead of the server’s reply. In
this particular case, we’ll inject a RRGetMonitors reply to test i3’s
RandR 1.5 code paths.
The added testcase is a noop for now, but with the code that’s lingering
in the randr15 branch, i3 does actually detect monitors as per the
injected reply:
2016-11-20 21:10:05 - randr.c:__randr_query_outputs:618 -
  RandR 1.5 available, querying monitors
2016-11-20 21:10:05 - randr.c:__randr_query_outputs:628 -
  1 RandR monitors found (timestamp 0)
2016-11-20 21:10:05 - randr.c:__randr_query_outputs:646 -
  name DP3, x 0, y 0, width 3840 px, height 2160 px, width 520 mm,
  height 290 mm, primary 1, automatic 1

This is preparation work for issue #1799","This tool is similar to xtrace in usage in that it intercepts traffic to
the X server. The motivating feature for writing the tool is its ability
to inject prepared reply messages instead of the server’s reply. In
this particular case, we’ll inject a RRGetMonitors reply to test i3’s
RandR 1.5 code paths.
The added testcase is a noop for now, but with the code that’s lingering
in the randr15 branch, i3 does actually detect monitors as per the
injected reply:
2016-11-20 21:10:05 - randr.c:__randr_query_outputs:618 -
  RandR 1.5 available, querying monitors
2016-11-20 21:10:05 - randr.c:__randr_query_outputs:628 -
  1 RandR monitors found (timestamp 0)
2016-11-20 21:10:05 - randr.c:__randr_query_outputs:646 -
  name DP3, x 0, y 0, width 3840 px, height 2160 px, width 520 mm,
  height 290 mm, primary 1, automatic 1

This is preparation work for issue #1799",True,{}
i3/i3,https://github.com/i3/i3,2574,2016-11-21T08:11:21Z,2016-11-21T08:37:17Z,2016-11-21T10:31:32Z,MERGED,True,0,71,2,https://github.com/stapelberg,Remove some now-unused functions from xcb.[ch],1,[],https://github.com/i3/i3/pull/2574,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2574,"xcb_draw_line is unused since commit
d7f9700
xcb_draw_rect is unused since commit
a79d33f
xcb_raise_window is unused since commit
7208d01
xcb_warp_pointer is unused since commit
755c618","xcb_draw_line is unused since commit
d7f9700
xcb_draw_rect is unused since commit
a79d33f
xcb_raise_window is unused since commit
7208d01
xcb_warp_pointer is unused since commit
755c618",True,{}
i3/i3,https://github.com/i3/i3,2575,2016-11-21T08:15:35Z,2016-11-21T08:37:11Z,2016-11-21T10:31:30Z,MERGED,True,0,264,4,https://github.com/stapelberg,Remove unused src/debug.c,1,[],https://github.com/i3/i3/pull/2575,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2575,,,True,{}
i3/i3,https://github.com/i3/i3,2578,2016-11-21T10:29:58Z,2016-11-21T10:41:15Z,2016-11-21T10:41:16Z,MERGED,True,6,0,1,https://github.com/stapelberg,Fix memory leak: free marks when destroying containers,1,[],https://github.com/i3/i3/pull/2578,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2578,,,True,{}
i3/i3,https://github.com/i3/i3,2580,2016-11-21T10:53:10Z,2016-11-28T17:20:46Z,2016-11-28T17:20:46Z,MERGED,True,258,52,12,https://github.com/stapelberg,Implement RandR 1.5 support,1,[],https://github.com/i3/i3/pull/2580,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2580,"This comes with the intentionally undocumented --disable-randr15 command
line flag and disable-randr15 configuration directive. We will add
documentation before the release if and only if it turns out that users
actually need to use this flag in their setups. Ideally, nobody would
need to use the flag and everything would just keep working, but it’s
better to be safe than sorry.
fixes #1799","This comes with the intentionally undocumented --disable-randr15 command
line flag and disable-randr15 configuration directive. We will add
documentation before the release if and only if it turns out that users
actually need to use this flag in their setups. Ideally, nobody would
need to use the flag and everything would just keep working, but it’s
better to be safe than sorry.
fixes #1799",True,{}
i3/i3,https://github.com/i3/i3,2580,2016-11-21T10:53:10Z,2016-11-28T17:20:46Z,2016-11-28T17:20:46Z,MERGED,True,258,52,12,https://github.com/stapelberg,Implement RandR 1.5 support,1,[],https://github.com/i3/i3/pull/2580,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/2580#issuecomment-263333679,"This comes with the intentionally undocumented --disable-randr15 command
line flag and disable-randr15 configuration directive. We will add
documentation before the release if and only if it turns out that users
actually need to use this flag in their setups. Ideally, nobody would
need to use the flag and everything would just keep working, but it’s
better to be safe than sorry.
fixes #1799","Tested this with my MST monitor at work.
When changing displays, i3bar doesn’t update correctly for some reason which I haven’t had time to debug yet. The symptom is that the i3bar instances for DP1-9 and DP1-9 end up on eDP1. When restarting i3 (and hence i3bar), the problem disappears.
I think we can fix that later, and gather some experience with RandR 1.5 now.",True,{}
i3/i3,https://github.com/i3/i3,2581,2016-11-21T10:55:05Z,2016-11-21T11:02:43Z,2016-11-21T11:02:43Z,MERGED,True,0,1,1,https://github.com/stapelberg,remove debug.h from Makefile.am,1,[],https://github.com/i3/i3/pull/2581,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2581,,,True,{}
i3/i3,https://github.com/i3/i3,2582,2016-11-21T11:02:31Z,2016-11-21T11:16:06Z,2016-11-23T10:30:15Z,MERGED,True,2,2,1,https://github.com/stapelberg,release.sh: update for v4.13 release,1,[],https://github.com/i3/i3/pull/2582,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2582,"Accidentally closed #2545 without merging, so here is the same change again :).","Accidentally closed #2545 without merging, so here is the same change again :).",True,{}
i3/i3,https://github.com/i3/i3,2585,2016-11-21T20:43:05Z,2016-11-28T21:07:45Z,2016-11-28T21:07:45Z,MERGED,True,2,0,2,https://github.com/mihaicmn,Use the DPI setting within the i3-config-wizard and i3-nagbar,1,[],https://github.com/i3/i3/pull/2585,https://github.com/mihaicmn,1,https://github.com/i3/i3/pull/2585,Also fixes #2461,Also fixes #2461,True,{}
i3/i3,https://github.com/i3/i3,2585,2016-11-21T20:43:05Z,2016-11-28T21:07:45Z,2016-11-28T21:07:45Z,MERGED,True,2,0,2,https://github.com/mihaicmn,Use the DPI setting within the i3-config-wizard and i3-nagbar,1,[],https://github.com/i3/i3/pull/2585,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2585#issuecomment-262061598,Also fixes #2461,I'm both happy to see that reading Xft.dpi makes a couple of things that much easier and sad to see that I missed all these opportunities initially (and thus for 4.13). :-),True,{}
i3/i3,https://github.com/i3/i3,2586,2016-11-24T09:14:52Z,2016-12-02T18:06:39Z,2016-12-02T18:06:39Z,MERGED,True,2,0,1,https://github.com/cresh,"Building on macos needs libiconv, add a check for it.",1,[],https://github.com/i3/i3/pull/2586,https://github.com/cresh,1,https://github.com/i3/i3/pull/2586,,,True,{}
i3/i3,https://github.com/i3/i3,2586,2016-11-24T09:14:52Z,2016-12-02T18:06:39Z,2016-12-02T18:06:39Z,MERGED,True,2,0,1,https://github.com/cresh,"Building on macos needs libiconv, add a check for it.",1,[],https://github.com/i3/i3/pull/2586,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2586#issuecomment-262726886,,What does this library contain that i3 uses?,True,{}
i3/i3,https://github.com/i3/i3,2586,2016-11-24T09:14:52Z,2016-12-02T18:06:39Z,2016-12-02T18:06:39Z,MERGED,True,2,0,1,https://github.com/cresh,"Building on macos needs libiconv, add a check for it.",1,[],https://github.com/i3/i3/pull/2586,https://github.com/cresh,3,https://github.com/i3/i3/pull/2586#issuecomment-262727566,,"Without -liconv, linking on macos fails with
Undefined symbols for architecture x86_64:
  ""_iconv"", referenced from:
      _convert_ucs2_to_utf8 in libi3.a(libi3_a-ucs2_conversion.o)
      _convert_utf8_to_ucs2 in libi3.a(libi3_a-ucs2_conversion.o)
  ""_iconv_open"", referenced from:
      _convert_ucs2_to_utf8 in libi3.a(libi3_a-ucs2_conversion.o)
      _convert_utf8_to_ucs2 in libi3.a(libi3_a-ucs2_conversion.o)
ld: symbol(s) not found for architecture x86_64",True,{}
i3/i3,https://github.com/i3/i3,2586,2016-11-24T09:14:52Z,2016-12-02T18:06:39Z,2016-12-02T18:06:39Z,MERGED,True,2,0,1,https://github.com/cresh,"Building on macos needs libiconv, add a check for it.",1,[],https://github.com/i3/i3/pull/2586,https://github.com/Airblader,4,https://github.com/i3/i3/pull/2586#issuecomment-262756965,,"Right, thanks. We actually include that header for all systems, so I'm not sure whether doing this only for  MacOS is correct or whether all need it. @stapelberg",True,{}
i3/i3,https://github.com/i3/i3,2586,2016-11-24T09:14:52Z,2016-12-02T18:06:39Z,2016-12-02T18:06:39Z,MERGED,True,2,0,1,https://github.com/cresh,"Building on macos needs libiconv, add a check for it.",1,[],https://github.com/i3/i3/pull/2586,https://github.com/stapelberg,5,https://github.com/i3/i3/pull/2586#issuecomment-263394413,,"Not all operating systems need it — on Linux, glibc provides iconv. The preceding AC_SEARCH_LIBS([shm_open], [rt]) call is actually very similar: on some operating systems, linking with -lrt is not necessary.
We should try not to add operating system-specific code to configure.ac, as the whole point of the GNU build system is to be portable :).
@cresh Could you remove the conditional please?",True,{}
i3/i3,https://github.com/i3/i3,2586,2016-11-24T09:14:52Z,2016-12-02T18:06:39Z,2016-12-02T18:06:39Z,MERGED,True,2,0,1,https://github.com/cresh,"Building on macos needs libiconv, add a check for it.",1,[],https://github.com/i3/i3/pull/2586,https://github.com/Airblader,6,https://github.com/i3/i3/pull/2586#issuecomment-264519576,,"@stapelberg The change has been done.
@cresh When you make the changes please drop a comment as we don't get notified by Github for commits, unfortunately.",True,{}
i3/i3,https://github.com/i3/i3,2591,2016-11-29T19:47:16Z,2016-11-30T07:19:37Z,2016-12-10T15:17:19Z,MERGED,True,2,1,1,https://github.com/jolange,`move` syntax clarification,1,[],https://github.com/i3/i3/pull/2591,https://github.com/jolange,1,https://github.com/i3/i3/pull/2591,"Both x and y position need to be specified. The notation [<px> px] [<px> px] is misleading, because neither the x- nor the y-coordinate are optional.","Both x and y position need to be specified. The notation [<px> px] [<px> px] is misleading, because neither the x- nor the y-coordinate are optional.",True,{}
i3/i3,https://github.com/i3/i3,2591,2016-11-29T19:47:16Z,2016-11-30T07:19:37Z,2016-12-10T15:17:19Z,MERGED,True,2,1,1,https://github.com/jolange,`move` syntax clarification,1,[],https://github.com/i3/i3/pull/2591,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2591#issuecomment-263700445,"Both x and y position need to be specified. The notation [<px> px] [<px> px] is misleading, because neither the x- nor the y-coordinate are optional.","The change looks good to me, except for squashing.",True,{}
i3/i3,https://github.com/i3/i3,2591,2016-11-29T19:47:16Z,2016-11-30T07:19:37Z,2016-12-10T15:17:19Z,MERGED,True,2,1,1,https://github.com/jolange,`move` syntax clarification,1,[],https://github.com/i3/i3/pull/2591,https://github.com/jolange,3,https://github.com/i3/i3/pull/2591#issuecomment-263701363,"Both x and y position need to be specified. The notation [<px> px] [<px> px] is misleading, because neither the x- nor the y-coordinate are optional.",@Airblader done.,True,{}
i3/i3,https://github.com/i3/i3,2593,2016-11-30T11:01:25Z,2016-11-30T11:20:35Z,2016-11-30T11:21:18Z,CLOSED,False,3,3,1,https://github.com/mikaelbrun,User's guide X resources,32,[],https://github.com/i3/i3/pull/2593,https://github.com/mikaelbrun,1,https://github.com/i3/i3/pull/2593,"I find the example in the User's guide X resources little confusing.
It would be easier to understand if the code block was devided in two. One for the .Xresources file and one for the i3 config file. And maybe you could add the syntax for the .xinitrc file?
Example:
.Xresources
! Using wildcard
*color0: #305910
! or using specific resource name
i3wm.bgColor: #000000

.config/i3/config
# Setting from wildcard
set_from_resource $text color0 #FFFFFF
# or from specific resource name
set_from_resource $bgColor i3wm.bgColor #000000

.xinitrc
[[ -f ~/.Xresources ]] && xrdb -merge -I$HOME ~/.Xresources","I find the example in the User's guide X resources little confusing.
It would be easier to understand if the code block was devided in two. One for the .Xresources file and one for the i3 config file. And maybe you could add the syntax for the .xinitrc file?
Example:
.Xresources
! Using wildcard
*color0: #305910
! or using specific resource name
i3wm.bgColor: #000000

.config/i3/config
# Setting from wildcard
set_from_resource $text color0 #FFFFFF
# or from specific resource name
set_from_resource $bgColor i3wm.bgColor #000000

.xinitrc
[[ -f ~/.Xresources ]] && xrdb -merge -I$HOME ~/.Xresources",True,{}
i3/i3,https://github.com/i3/i3,2593,2016-11-30T11:01:25Z,2016-11-30T11:20:35Z,2016-11-30T11:21:18Z,CLOSED,False,3,3,1,https://github.com/mikaelbrun,User's guide X resources,32,[],https://github.com/i3/i3/pull/2593,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2593#issuecomment-263849415,"I find the example in the User's guide X resources little confusing.
It would be easier to understand if the code block was devided in two. One for the .Xresources file and one for the i3 config file. And maybe you could add the syntax for the .xinitrc file?
Example:
.Xresources
! Using wildcard
*color0: #305910
! or using specific resource name
i3wm.bgColor: #000000

.config/i3/config
# Setting from wildcard
set_from_resource $text color0 #FFFFFF
# or from specific resource name
set_from_resource $bgColor i3wm.bgColor #000000

.xinitrc
[[ -f ~/.Xresources ]] && xrdb -merge -I$HOME ~/.Xresources",This pull request is really broken. Please make sure you create a branch from next and file the pull request correctly.,True,{}
i3/i3,https://github.com/i3/i3,2593,2016-11-30T11:01:25Z,2016-11-30T11:20:35Z,2016-11-30T11:21:18Z,CLOSED,False,3,3,1,https://github.com/mikaelbrun,User's guide X resources,32,[],https://github.com/i3/i3/pull/2593,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2593#issuecomment-263849552,"I find the example in the User's guide X resources little confusing.
It would be easier to understand if the code block was devided in two. One for the .Xresources file and one for the i3 config file. And maybe you could add the syntax for the .xinitrc file?
Example:
.Xresources
! Using wildcard
*color0: #305910
! or using specific resource name
i3wm.bgColor: #000000

.config/i3/config
# Setting from wildcard
set_from_resource $text color0 #FFFFFF
# or from specific resource name
set_from_resource $bgColor i3wm.bgColor #000000

.xinitrc
[[ -f ~/.Xresources ]] && xrdb -merge -I$HOME ~/.Xresources","Actually your description looks more like a request than a pull request. If you only want to suggest a change, create an issue for it. Creating a pull request with the actual changes would of course be better.",True,{}
i3/i3,https://github.com/i3/i3,2596,2016-12-01T20:24:49Z,2016-12-02T17:53:59Z,2016-12-02T17:53:59Z,MERGED,True,1,1,1,https://github.com/ybznek,Fix read of uninitialized memory,1,[],https://github.com/i3/i3/pull/2596,https://github.com/ybznek,1,https://github.com/i3/i3/pull/2596,"Previous code was reading whole array, it was ""slower"" and it
read uninitialized memory","Previous code was reading whole array, it was ""slower"" and it
read uninitialized memory",True,{}
i3/i3,https://github.com/i3/i3,2596,2016-12-01T20:24:49Z,2016-12-02T17:53:59Z,2016-12-02T17:53:59Z,MERGED,True,1,1,1,https://github.com/ybznek,Fix read of uninitialized memory,1,[],https://github.com/i3/i3/pull/2596,https://github.com/ybznek,2,https://github.com/i3/i3/pull/2596#issuecomment-264413340,"Previous code was reading whole array, it was ""slower"" and it
read uninitialized memory","Hi, is this fail really caused by my change?",True,{}
i3/i3,https://github.com/i3/i3,2598,2016-12-02T17:55:13Z,2016-12-02T18:05:44Z,2016-12-02T18:05:44Z,MERGED,True,0,32,1,https://github.com/Airblader,Do not set input focus in i3-input.,1,[],https://github.com/i3/i3/pull/2598,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2598,"This commit removes all traces of setting and reverting the input focus
in i3-input. We don't need to do this because grabbing the keyboard is
sufficient to have the attention we need.
Changing the input focus and reverting it can cause situations where i3
executes the IPC command before processing the FocusIn events. This leads
to i3's input focus change to be rejected due to the timing, leading to
an inconsistent focus state.
fixes #2597","This commit removes all traces of setting and reverting the input focus
in i3-input. We don't need to do this because grabbing the keyboard is
sufficient to have the attention we need.
Changing the input focus and reverting it can cause situations where i3
executes the IPC command before processing the FocusIn events. This leads
to i3's input focus change to be rejected due to the timing, leading to
an inconsistent focus state.
fixes #2597",True,{}
i3/i3,https://github.com/i3/i3,2598,2016-12-02T17:55:13Z,2016-12-02T18:05:44Z,2016-12-02T18:05:44Z,MERGED,True,0,32,1,https://github.com/Airblader,Do not set input focus in i3-input.,1,[],https://github.com/i3/i3/pull/2598,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2598#issuecomment-264518139,"This commit removes all traces of setting and reverting the input focus
in i3-input. We don't need to do this because grabbing the keyboard is
sufficient to have the attention we need.
Changing the input focus and reverting it can cause situations where i3
executes the IPC command before processing the FocusIn events. This leads
to i3's input focus change to be rejected due to the timing, leading to
an inconsistent focus state.
fixes #2597",Nothing like fixing a bug by doing nothing but removing code.,True,{}
i3/i3,https://github.com/i3/i3,2598,2016-12-02T17:55:13Z,2016-12-02T18:05:44Z,2016-12-02T18:05:44Z,MERGED,True,0,32,1,https://github.com/Airblader,Do not set input focus in i3-input.,1,[],https://github.com/i3/i3/pull/2598,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2598#issuecomment-264519294,"This commit removes all traces of setting and reverting the input focus
in i3-input. We don't need to do this because grabbing the keyboard is
sufficient to have the attention we need.
Changing the input focus and reverting it can cause situations where i3
executes the IPC command before processing the FocusIn events. This leads
to i3's input focus change to be rejected due to the timing, leading to
an inconsistent focus state.
fixes #2597",@stapelberg Tests are green.,True,{}
i3/i3,https://github.com/i3/i3,2616,2016-12-26T15:41:03Z,2017-09-14T18:05:49Z,2017-09-14T18:05:50Z,CLOSED,False,21,9,4,https://github.com/sandsmark,Raise floating window to top when it gets focus,3,['waiting'],https://github.com/i3/i3/pull/2616,https://github.com/sandsmark,1,https://github.com/i3/i3/pull/2616,fixes #2572,fixes #2572,True,{}
i3/i3,https://github.com/i3/i3,2616,2016-12-26T15:41:03Z,2017-09-14T18:05:49Z,2017-09-14T18:05:50Z,CLOSED,False,21,9,4,https://github.com/sandsmark,Raise floating window to top when it gets focus,3,['waiting'],https://github.com/i3/i3/pull/2616,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2616#issuecomment-269222205,fixes #2572,"Thanks for your contribution. See my review comments. As a final remark, please include in the commit message itself that and which issue the commit fixes.",True,{}
i3/i3,https://github.com/i3/i3,2616,2016-12-26T15:41:03Z,2017-09-14T18:05:49Z,2017-09-14T18:05:50Z,CLOSED,False,21,9,4,https://github.com/sandsmark,Raise floating window to top when it gets focus,3,['waiting'],https://github.com/i3/i3/pull/2616,https://github.com/sandsmark,3,https://github.com/i3/i3/pull/2616#issuecomment-269223367,fixes #2572,"I'll have to brush up on my perl before writing a test if that is necessary, I haven't written perl in a couple of years.",True,{}
i3/i3,https://github.com/i3/i3,2616,2016-12-26T15:41:03Z,2017-09-14T18:05:49Z,2017-09-14T18:05:50Z,CLOSED,False,21,9,4,https://github.com/sandsmark,Raise floating window to top when it gets focus,3,['waiting'],https://github.com/i3/i3/pull/2616,https://github.com/sandsmark,4,https://github.com/i3/i3/pull/2616#issuecomment-269321736,fixes #2572,"The failing test fails even without my patch, but sometimes work if I add in some sleep()s before and after creating the fixed size windows.",True,{}
i3/i3,https://github.com/i3/i3,2616,2016-12-26T15:41:03Z,2017-09-14T18:05:49Z,2017-09-14T18:05:50Z,CLOSED,False,21,9,4,https://github.com/sandsmark,Raise floating window to top when it gets focus,3,['waiting'],https://github.com/i3/i3/pull/2616,https://github.com/sandsmark,5,https://github.com/i3/i3/pull/2616#issuecomment-269322415,fixes #2572,"Test was broken by a301396
Found it by bisecting.",True,{'THUMBS_UP': ['https://github.com/Airblader']}
i3/i3,https://github.com/i3/i3,2616,2016-12-26T15:41:03Z,2017-09-14T18:05:49Z,2017-09-14T18:05:50Z,CLOSED,False,21,9,4,https://github.com/sandsmark,Raise floating window to top when it gets focus,3,['waiting'],https://github.com/i3/i3/pull/2616,https://github.com/Airblader,6,https://github.com/i3/i3/pull/2616#issuecomment-269323396,fixes #2572,"Thanks for the test fix, but I'd prefer this in a separate PR given that it's unrelated. On a side note, any idea why this is necessary? We do only send 5+7 values which is why I changed it originally. Mhm…",True,{}
i3/i3,https://github.com/i3/i3,2616,2016-12-26T15:41:03Z,2017-09-14T18:05:49Z,2017-09-14T18:05:50Z,CLOSED,False,21,9,4,https://github.com/sandsmark,Raise floating window to top when it gets focus,3,['waiting'],https://github.com/i3/i3/pull/2616,https://github.com/sandsmark,7,https://github.com/i3/i3/pull/2616#issuecomment-269323580,fixes #2572,"I was a bit puzzled myself, I'm asking around for people that know perl better than I do.
And I'd rather just keep it in this PR as it is so small and blocks this change, and creating a new branch etc. for a new PR is more work. :-P",True,{}
i3/i3,https://github.com/i3/i3,2616,2016-12-26T15:41:03Z,2017-09-14T18:05:49Z,2017-09-14T18:05:50Z,CLOSED,False,21,9,4,https://github.com/sandsmark,Raise floating window to top when it gets focus,3,['waiting'],https://github.com/i3/i3/pull/2616,https://github.com/Airblader,8,https://github.com/i3/i3/pull/2616#issuecomment-269324462,fixes #2572,"I was a bit puzzled myself, I'm asking around for people that know perl better than I do.

I assume it's more of an X than a Perl question. :-)

And I'd rather just keep it in this PR as it is so small and blocks this change, and creating a new branch etc. for a new PR is more work. :-P

Understandable. In general we want PRs to be logically separated which also makes reverting PRs easier (as in: we don't revert unrelated changes we want to keep). Given that it's a simple test fix I can live with keeping it in here, but I can't speak for what @stapelberg will say. :-)
By the way: I like the new approach of doing this in the FocusIn handler much better. Good job! :-) Given that floating_raise_con is currently only called once and we're now duplicating the calling piece of code, however, I think it might be better to just move that fullscreen logic into the function itself and avoid that duplication. What do you think?",True,{}
i3/i3,https://github.com/i3/i3,2616,2016-12-26T15:41:03Z,2017-09-14T18:05:49Z,2017-09-14T18:05:50Z,CLOSED,False,21,9,4,https://github.com/sandsmark,Raise floating window to top when it gets focus,3,['waiting'],https://github.com/i3/i3/pull/2616,https://github.com/sandsmark,9,https://github.com/i3/i3/pull/2616#issuecomment-269327671,fixes #2572,"well, the pack() shouldn't take more than what is available, but it seems like it puts in a 0 at the end (changing it to 'C5N*' and adding a 0 works as well). I assume this is the missing win_gravity, but the ordering of the parameters makes no sense to me. Re-ordering to match this makes it completely broken: https://tronche.com/gui/x/icccm/sec-4.html#s-4.1.2.3
and I agree about moving the checking code to the right place, I'll update my patch.",True,{}
i3/i3,https://github.com/i3/i3,2616,2016-12-26T15:41:03Z,2017-09-14T18:05:49Z,2017-09-14T18:05:50Z,CLOSED,False,21,9,4,https://github.com/sandsmark,Raise floating window to top when it gets focus,3,['waiting'],https://github.com/i3/i3/pull/2616,https://github.com/sandsmark,10,https://github.com/i3/i3/pull/2616#issuecomment-269328362,fixes #2572,"ah, never mind about the fullscreen checking. in the click handler it also needs the fullscreen check for moving, resizing, etc., so I'm not sure how it could be consolidated without making the code worse.",True,{}
i3/i3,https://github.com/i3/i3,2616,2016-12-26T15:41:03Z,2017-09-14T18:05:49Z,2017-09-14T18:05:50Z,CLOSED,False,21,9,4,https://github.com/sandsmark,Raise floating window to top when it gets focus,3,['waiting'],https://github.com/i3/i3/pull/2616,https://github.com/Airblader,11,https://github.com/i3/i3/pull/2616#issuecomment-269328710,fixes #2572,"Ah, right. I forgot about that. Never mind then. :-)",True,{}
i3/i3,https://github.com/i3/i3,2616,2016-12-26T15:41:03Z,2017-09-14T18:05:49Z,2017-09-14T18:05:50Z,CLOSED,False,21,9,4,https://github.com/sandsmark,Raise floating window to top when it gets focus,3,['waiting'],https://github.com/i3/i3/pull/2616,https://github.com/sandsmark,12,https://github.com/i3/i3/pull/2616#issuecomment-269360587,fixes #2572,"Found another issue, where newly created floating windows that don't get focus get stacked on top. I attempted to solve it, but I couldn't get the TAILQ_INSERT_BEFORE() to not crash when trying to put in the new window underneath the focused con...",True,{}
i3/i3,https://github.com/i3/i3,2616,2016-12-26T15:41:03Z,2017-09-14T18:05:49Z,2017-09-14T18:05:50Z,CLOSED,False,21,9,4,https://github.com/sandsmark,Raise floating window to top when it gets focus,3,['waiting'],https://github.com/i3/i3/pull/2616,https://github.com/sandsmark,13,https://github.com/i3/i3/pull/2616#issuecomment-269474045,fixes #2572,"The set_focus seems to correctly imply whether the newly created floating window is/gets focused, so the only issue is to insert the new con in the right place in floating_windows (right below the currently focused floating con). So this new patch actually works, the only issue is that unfocused new floating cons always gets pushed to the bottom, not just beneath the currently focused con. Unless I'm misunderstanding you.
FWIW, what I'm trying to fix here is https://git.reviewboard.kde.org/r/129706/. So my first patch here fixed the first version there, but my last patch there doesn't work with this first patch. :-)",True,{}
i3/i3,https://github.com/i3/i3,2616,2016-12-26T15:41:03Z,2017-09-14T18:05:49Z,2017-09-14T18:05:50Z,CLOSED,False,21,9,4,https://github.com/sandsmark,Raise floating window to top when it gets focus,3,['waiting'],https://github.com/i3/i3/pull/2616,https://github.com/Airblader,14,https://github.com/i3/i3/pull/2616#issuecomment-278121869,fixes #2572,@sandsmark I'm sorry this has been hanging for a while now. Let's get back to it! What's the current status on the PR?,True,{}
i3/i3,https://github.com/i3/i3,2616,2016-12-26T15:41:03Z,2017-09-14T18:05:49Z,2017-09-14T18:05:50Z,CLOSED,False,21,9,4,https://github.com/sandsmark,Raise floating window to top when it gets focus,3,['waiting'],https://github.com/i3/i3/pull/2616,https://github.com/sandsmark,15,https://github.com/i3/i3/pull/2616#issuecomment-279148119,fixes #2572,"Sorry, been pretty busy with dayjob recently, haven't really had time to work on this. I'll try to pick it up soonish.",True,{}
i3/i3,https://github.com/i3/i3,2616,2016-12-26T15:41:03Z,2017-09-14T18:05:49Z,2017-09-14T18:05:50Z,CLOSED,False,21,9,4,https://github.com/sandsmark,Raise floating window to top when it gets focus,3,['waiting'],https://github.com/i3/i3/pull/2616,https://github.com/Airblader,16,https://github.com/i3/i3/pull/2616#issuecomment-329563154,fixes #2572,I'm going to close this for now. If you do pick up on the PR again please let us know and we can reopen (or send a new one).,True,{}
i3/i3,https://github.com/i3/i3,2620,2016-12-31T23:01:28Z,2017-01-02T14:56:29Z,2017-01-02T14:56:29Z,MERGED,True,4,0,1,https://github.com/Airblader,Free allocated X resource value.,1,[],https://github.com/i3/i3/pull/2620,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2620,This fixes a little memory leak.,This fixes a little memory leak.,True,{}
i3/i3,https://github.com/i3/i3,2620,2016-12-31T23:01:28Z,2017-01-02T14:56:29Z,2017-01-02T14:56:29Z,MERGED,True,4,0,1,https://github.com/Airblader,Free allocated X resource value.,1,[],https://github.com/i3/i3/pull/2620,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2620#issuecomment-269885650,This fixes a little memory leak.,"There seems to be a really bad memory leak in i3bar. I'm leaking dozens of MB in a few minutes and it doesn't seem to end. I'm not convinced it's an i3bar issue, but I'm still looking into it. If somebody could monitor i3bar on their end to see if it's just me that'd be pretty cool.",True,{}
i3/i3,https://github.com/i3/i3,2620,2016-12-31T23:01:28Z,2017-01-02T14:56:29Z,2017-01-02T14:56:29Z,MERGED,True,4,0,1,https://github.com/Airblader,Free allocated X resource value.,1,[],https://github.com/i3/i3/pull/2620,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2620#issuecomment-269885964,This fixes a little memory leak.,"Not using a pango font I get a constant and low memory usage, opposed to the 0.5 GB I already accumulated in the past twenty minutes or so when using a pango font.
However, it's interesting that only i3bar has the issue, not i3 itself despite font handling being in libi3.",True,{}
i3/i3,https://github.com/i3/i3,2620,2016-12-31T23:01:28Z,2017-01-02T14:56:29Z,2017-01-02T14:56:29Z,MERGED,True,4,0,1,https://github.com/Airblader,Free allocated X resource value.,1,[],https://github.com/i3/i3/pull/2620,https://github.com/Airblader,4,https://github.com/i3/i3/pull/2620#issuecomment-269886548,This fixes a little memory leak.,"The leak seems to have come to a halt at 444 MB now. Which is still way beyond what i3bar should need. I'm fairly convinced this is a bug in pango or fontconfig, though.",True,{}
i3/i3,https://github.com/i3/i3,2621,2017-01-02T15:13:14Z,2017-01-03T08:38:46Z,2017-01-03T08:38:46Z,MERGED,True,3,0,1,https://github.com/stapelberg,.github/CONTRIBUTING.md: explain that compositors are unsupported,1,[],https://github.com/i3/i3/pull/2621,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2621,,,True,{'THUMBS_UP': ['https://github.com/nmschulte']}
i3/i3,https://github.com/i3/i3,2624,2017-01-04T09:42:00Z,2017-01-11T19:47:19Z,2017-01-11T19:47:19Z,MERGED,True,179,157,2,https://github.com/Airblader,Rewrite the signal handler dialogs.,1,[],https://github.com/i3/i3/pull/2624,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2624,"This commit is a rewrite of the popup dialogs used when i3 crashes. We now
use our draw_util suite and both properly react to EXPOSE events and clean
up the windows when the handler exits.
As a side-effect, this fixes #2422","This commit is a rewrite of the popup dialogs used when i3 crashes. We now
use our draw_util suite and both properly react to EXPOSE events and clean
up the windows when the handler exits.
As a side-effect, this fixes #2422",True,{}
i3/i3,https://github.com/i3/i3,2624,2017-01-04T09:42:00Z,2017-01-11T19:47:19Z,2017-01-11T19:47:19Z,MERGED,True,179,157,2,https://github.com/Airblader,Rewrite the signal handler dialogs.,1,[],https://github.com/i3/i3/pull/2624,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2624#issuecomment-270332143,"This commit is a rewrite of the popup dialogs used when i3 crashes. We now
use our draw_util suite and both properly react to EXPOSE events and clean
up the windows when the handler exits.
As a side-effect, this fixes #2422",Screenshot:,True,{}
i3/i3,https://github.com/i3/i3,2624,2017-01-04T09:42:00Z,2017-01-11T19:47:19Z,2017-01-11T19:47:19Z,MERGED,True,179,157,2,https://github.com/Airblader,Rewrite the signal handler dialogs.,1,[],https://github.com/i3/i3/pull/2624,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2624#issuecomment-270332970,"This commit is a rewrite of the popup dialogs used when i3 crashes. We now
use our draw_util suite and both properly react to EXPOSE events and clean
up the windows when the handler exits.
As a side-effect, this fixes #2422",I've also noticed that with the conditional compilation gone from the draw utils we can remove some function arguments there now. I'll take care of that once this is merged.,True,{}
i3/i3,https://github.com/i3/i3,2624,2017-01-04T09:42:00Z,2017-01-11T19:47:19Z,2017-01-11T19:47:19Z,MERGED,True,179,157,2,https://github.com/Airblader,Rewrite the signal handler dialogs.,1,[],https://github.com/i3/i3/pull/2624,https://github.com/stapelberg,4,https://github.com/i3/i3/pull/2624#issuecomment-271516348,"This commit is a rewrite of the popup dialogs used when i3 crashes. We now
use our draw_util suite and both properly react to EXPOSE events and clean
up the windows when the handler exits.
As a side-effect, this fixes #2422",Travis fails because you forgot to clang-format after your latest change :),True,{}
i3/i3,https://github.com/i3/i3,2624,2017-01-04T09:42:00Z,2017-01-11T19:47:19Z,2017-01-11T19:47:19Z,MERGED,True,179,157,2,https://github.com/Airblader,Rewrite the signal handler dialogs.,1,[],https://github.com/i3/i3/pull/2624,https://github.com/psychon,5,https://github.com/i3/i3/pull/2624#issuecomment-271516926,"This commit is a rewrite of the popup dialogs used when i3 crashes. We now
use our draw_util suite and both properly react to EXPOSE events and clean
up the windows when the handler exits.
As a side-effect, this fixes #2422",Sorry for breaking things! :-),True,{}
i3/i3,https://github.com/i3/i3,2624,2017-01-04T09:42:00Z,2017-01-11T19:47:19Z,2017-01-11T19:47:19Z,MERGED,True,179,157,2,https://github.com/Airblader,Rewrite the signal handler dialogs.,1,[],https://github.com/i3/i3/pull/2624,https://github.com/Airblader,6,https://github.com/i3/i3/pull/2624#issuecomment-271517308,"This commit is a rewrite of the popup dialogs used when i3 crashes. We now
use our draw_util suite and both properly react to EXPOSE events and clean
up the windows when the handler exits.
As a side-effect, this fixes #2422",I don't usually clang-format it because I just type it correctly. This is what I get for being hasty about making the change. :-) I'll fix it later.,True,{}
i3/i3,https://github.com/i3/i3,2624,2017-01-04T09:42:00Z,2017-01-11T19:47:19Z,2017-01-11T19:47:19Z,MERGED,True,179,157,2,https://github.com/Airblader,Rewrite the signal handler dialogs.,1,[],https://github.com/i3/i3/pull/2624,https://github.com/Airblader,7,https://github.com/i3/i3/pull/2624#issuecomment-271669154,"This commit is a rewrite of the popup dialogs used when i3 crashes. We now
use our draw_util suite and both properly react to EXPOSE events and clean
up the windows when the handler exits.
As a side-effect, this fixes #2422",@stapelberg Done and rebased,True,{}
i3/i3,https://github.com/i3/i3,2625,2017-01-07T22:17:51Z,2017-01-10T08:29:06Z,2017-01-10T08:29:10Z,MERGED,True,7,2,1,https://github.com/Drahflow,Report errors raised during error log creation,1,[],https://github.com/i3/i3/pull/2625,https://github.com/Drahflow,1,https://github.com/i3/i3/pull/2625,This PR fixes a null pointer dereference after fopen on the errorlog failed (in my case because of wrong permissions).,This PR fixes a null pointer dereference after fopen on the errorlog failed (in my case because of wrong permissions).,True,{}
i3/i3,https://github.com/i3/i3,2625,2017-01-07T22:17:51Z,2017-01-10T08:29:06Z,2017-01-10T08:29:10Z,MERGED,True,7,2,1,https://github.com/Drahflow,Report errors raised during error log creation,1,[],https://github.com/i3/i3/pull/2625,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/2625#issuecomment-271514899,This PR fixes a null pointer dereference after fopen on the errorlog failed (in my case because of wrong permissions).,Thanks!,True,{}
i3/i3,https://github.com/i3/i3,2626,2017-01-09T18:45:55Z,2017-01-10T08:22:23Z,2017-01-10T08:24:49Z,MERGED,True,3,3,1,https://github.com/jolange,linking vim_like_marks from show_marks documentation,1,[],https://github.com/i3/i3/pull/2626,https://github.com/jolange,1,https://github.com/i3/i3/pull/2626,"Someone on IRC asked what ""marks"" mean here. Since it's the first occurrence of marks in the userguide, this should be linked IMO.","Someone on IRC asked what ""marks"" mean here. Since it's the first occurrence of marks in the userguide, this should be linked IMO.",True,{}
i3/i3,https://github.com/i3/i3,2626,2017-01-09T18:45:55Z,2017-01-10T08:22:23Z,2017-01-10T08:24:49Z,MERGED,True,3,3,1,https://github.com/jolange,linking vim_like_marks from show_marks documentation,1,[],https://github.com/i3/i3/pull/2626,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2626#issuecomment-271383250,"Someone on IRC asked what ""marks"" mean here. Since it's the first occurrence of marks in the userguide, this should be linked IMO.",Thank you!,True,{}
i3/i3,https://github.com/i3/i3,2628,2017-01-10T02:00:42Z,2017-01-10T08:34:20Z,2017-01-10T08:36:22Z,MERGED,True,5,4,1,https://github.com/nmschulte,Fix build outside repo,2,[],https://github.com/i3/i3/pull/2628,https://github.com/nmschulte,1,https://github.com/i3/i3/pull/2628,"The Autoconf script's logic wasn't accounting for building outside of the working tree w/ respect to version detection; this led to a build error.
nmschulte@desmas-l:~/builds/i3$ ~/src/i3/configure

nmschulte@desmas-l:~/builds/i3$ make

This also updates the auto build-dir exclusion logic to only apply if within the git working tree, and uses those semantic CLI options from git rev-parse, to improve legibility.","The Autoconf script's logic wasn't accounting for building outside of the working tree w/ respect to version detection; this led to a build error.
nmschulte@desmas-l:~/builds/i3$ ~/src/i3/configure

nmschulte@desmas-l:~/builds/i3$ make

This also updates the auto build-dir exclusion logic to only apply if within the git working tree, and uses those semantic CLI options from git rev-parse, to improve legibility.",True,{}
i3/i3,https://github.com/i3/i3,2628,2017-01-10T02:00:42Z,2017-01-10T08:34:20Z,2017-01-10T08:36:22Z,MERGED,True,5,4,1,https://github.com/nmschulte,Fix build outside repo,2,[],https://github.com/i3/i3/pull/2628,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/2628#issuecomment-271515863,"The Autoconf script's logic wasn't accounting for building outside of the working tree w/ respect to version detection; this led to a build error.
nmschulte@desmas-l:~/builds/i3$ ~/src/i3/configure

nmschulte@desmas-l:~/builds/i3$ make

This also updates the auto build-dir exclusion logic to only apply if within the git working tree, and uses those semantic CLI options from git rev-parse, to improve legibility.",Thanks!,True,{'THUMBS_UP': ['https://github.com/nmschulte']}
i3/i3,https://github.com/i3/i3,2629,2017-01-11T02:49:48Z,2017-01-11T19:47:09Z,2017-01-11T19:47:09Z,MERGED,True,1,1,1,https://github.com/nmschulte,fix conditional in configure script,1,[],https://github.com/i3/i3/pull/2629,https://github.com/nmschulte,1,https://github.com/i3/i3/pull/2629,oops.,oops.,True,{}
i3/i3,https://github.com/i3/i3,2632,2017-01-13T07:50:24Z,2017-01-13T17:28:30Z,2017-01-13T17:28:30Z,MERGED,True,4,1,1,https://github.com/Airblader,Free trayclient when removing it.,1,[],https://github.com/i3/i3/pull/2632,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2632,fixes #2619,fixes #2619,True,{}
i3/i3,https://github.com/i3/i3,2633,2017-01-13T08:08:32Z,2017-01-13T17:33:29Z,2021-07-18T10:28:13Z,MERGED,True,11,1,2,https://github.com/Airblader,Validate that a binding mode is not defined more than once.,1,[],https://github.com/i3/i3/pull/2633,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2633,"While defining the same mode usually wouldn't hurt and, in fact, the old behavior
allows to split the definition of a binding mode into several blocks, this
can lead to user errors where they accidentally define a mode twice and don't understand
why the mode behaves a certain way (this has been observed in real life :-)).
There's no good usecase for splitting a single binding mode into multiple blocks, thus
the new behavior is better.
fixes #2615","While defining the same mode usually wouldn't hurt and, in fact, the old behavior
allows to split the definition of a binding mode into several blocks, this
can lead to user errors where they accidentally define a mode twice and don't understand
why the mode behaves a certain way (this has been observed in real life :-)).
There's no good usecase for splitting a single binding mode into multiple blocks, thus
the new behavior is better.
fixes #2615",True,{}
i3/i3,https://github.com/i3/i3,2633,2017-01-13T08:08:32Z,2017-01-13T17:33:29Z,2021-07-18T10:28:13Z,MERGED,True,11,1,2,https://github.com/Airblader,Validate that a binding mode is not defined more than once.,1,[],https://github.com/i3/i3/pull/2633,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2633#issuecomment-272437454,"While defining the same mode usually wouldn't hurt and, in fact, the old behavior
allows to split the definition of a binding mode into several blocks, this
can lead to user errors where they accidentally define a mode twice and don't understand
why the mode behaves a certain way (this has been observed in real life :-)).
There's no good usecase for splitting a single binding mode into multiple blocks, thus
the new behavior is better.
fixes #2615",@aaschmid :-),True,{}
i3/i3,https://github.com/i3/i3,2634,2017-01-13T08:51:36Z,2017-01-13T17:30:51Z,2021-07-18T10:27:23Z,MERGED,True,152,0,3,https://github.com/Airblader,Added support for _NET_MOVERESIZE_WINDOW.,1,[],https://github.com/i3/i3/pull/2634,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2634,fixes #2603,fixes #2603,True,{}
i3/i3,https://github.com/i3/i3,2635,2017-01-13T13:09:42Z,2017-01-13T17:34:10Z,2017-01-13T17:34:10Z,MERGED,True,45,46,6,https://github.com/Airblader,Remove unused function arguments.,1,[],https://github.com/i3/i3/pull/2635,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2635,"The connection is no longer necessary since the non-cairo paths have
been removed.","The connection is no longer necessary since the non-cairo paths have
been removed.",True,{}
i3/i3,https://github.com/i3/i3,2636,2017-01-13T13:13:29Z,2017-01-13T17:34:59Z,2021-07-18T10:27:08Z,MERGED,True,25,7,6,https://github.com/Airblader,Only react on the last Expose event in a series of events.,1,[],https://github.com/i3/i3/pull/2636,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2636,"Thanks to @psychon for pointing this out during the review of PR #2624.
This commit extends this change to all other occurences of Expose events
within i3.","Thanks to @psychon for pointing this out during the review of PR #2624.
This commit extends this change to all other occurences of Expose events
within i3.",True,{}
i3/i3,https://github.com/i3/i3,2637,2017-01-13T13:30:18Z,2017-01-13T17:34:29Z,2017-01-13T17:34:29Z,MERGED,True,2,2,1,https://github.com/Airblader,Fix blinking test.,1,[],https://github.com/i3/i3/pull/2637,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2637,Thanks to @sandsmark for figuring this out.,Thanks to @sandsmark for figuring this out.,True,{}
i3/i3,https://github.com/i3/i3,2638,2017-01-13T17:38:56Z,2017-01-13T18:01:37Z,2017-01-13T18:01:37Z,MERGED,True,1,2,1,https://github.com/Airblader,Don't exit() on redefined binding mode.,1,[],https://github.com/i3/i3/pull/2638,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2638,"Doing a hard exit() is a rather harsh action for something i3 can handle
perfectly fine and is only meant to be a check to make debugging easier
for users in certain situations.","Doing a hard exit() is a rather harsh action for something i3 can handle
perfectly fine and is only meant to be a check to make debugging easier
for users in certain situations.",True,{}
i3/i3,https://github.com/i3/i3,2638,2017-01-13T17:38:56Z,2017-01-13T18:01:37Z,2017-01-13T18:01:37Z,MERGED,True,1,2,1,https://github.com/Airblader,Don't exit() on redefined binding mode.,1,[],https://github.com/i3/i3/pull/2638,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2638#issuecomment-272499120,"Doing a hard exit() is a rather harsh action for something i3 can handle
perfectly fine and is only meant to be a check to make debugging easier
for users in certain situations.","@stapelberg Since I just killed my session when merging it all together in i3-gaps, compiling and restarting i3 (from having multiple modes for testing earlier), I'll agree and softened up the check.",True,{}
i3/i3,https://github.com/i3/i3,2638,2017-01-13T17:38:56Z,2017-01-13T18:01:37Z,2017-01-13T18:01:37Z,MERGED,True,1,2,1,https://github.com/Airblader,Don't exit() on redefined binding mode.,1,[],https://github.com/i3/i3/pull/2638,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/2638#issuecomment-272499997,"Doing a hard exit() is a rather harsh action for something i3 can handle
perfectly fine and is only meant to be a check to make debugging easier
for users in certain situations.",Could we also remove the exit in line 127 while we’re at it?,True,{}
i3/i3,https://github.com/i3/i3,2638,2017-01-13T17:38:56Z,2017-01-13T18:01:37Z,2017-01-13T18:01:37Z,MERGED,True,1,2,1,https://github.com/Airblader,Don't exit() on redefined binding mode.,1,[],https://github.com/i3/i3/pull/2638,https://github.com/Airblader,4,https://github.com/i3/i3/pull/2638#issuecomment-272500390,"Doing a hard exit() is a rather harsh action for something i3 can handle
perfectly fine and is only meant to be a check to make debugging easier
for users in certain situations.","@stapelberg Done. We should at least return, though, so the user cannot overwrite the default mode.",True,{}
i3/i3,https://github.com/i3/i3,2639,2017-01-13T19:34:10Z,2017-01-16T22:00:02Z,2017-01-16T22:00:02Z,MERGED,True,7,4,1,https://github.com/Airblader,Ensure that marks and the title are displayed even if the window titl…,1,[],https://github.com/i3/i3/pull/2639,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2639,"…e is empty.
Previously rendering marks and the title were skipped if the title is empty. With marks
this is obviously wrong, with the title it is also wrong because title_format might be
set.","…e is empty.
Previously rendering marks and the title were skipped if the title is empty. With marks
this is obviously wrong, with the title it is also wrong because title_format might be
set.",True,{}
i3/i3,https://github.com/i3/i3,2644,2017-01-17T02:00:30Z,2017-01-21T15:25:22Z,2017-01-21T15:25:22Z,MERGED,True,62,109,1,https://github.com/mihaicmn,Migrate i3-nagbar to draw_util,1,[],https://github.com/i3/i3/pull/2644,https://github.com/mihaicmn,1,https://github.com/i3/i3/pull/2644,See #2642 for details.,See #2642 for details.,True,{}
i3/i3,https://github.com/i3/i3,2644,2017-01-17T02:00:30Z,2017-01-21T15:25:22Z,2017-01-21T15:25:22Z,MERGED,True,62,109,1,https://github.com/mihaicmn,Migrate i3-nagbar to draw_util,1,[],https://github.com/i3/i3/pull/2644,https://github.com/mihaicmn,2,https://github.com/i3/i3/pull/2644#issuecomment-273266317,See #2642 for details.,@Airblader thank you for the feedback. I updated the PR based on your comments.,True,{}
i3/i3,https://github.com/i3/i3,2644,2017-01-17T02:00:30Z,2017-01-21T15:25:22Z,2017-01-21T15:25:22Z,MERGED,True,62,109,1,https://github.com/mihaicmn,Migrate i3-nagbar to draw_util,1,[],https://github.com/i3/i3/pull/2644,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/2644#issuecomment-274267832,See #2642 for details.,@Airblader What’s your verdict? Is this good to go?,True,{}
i3/i3,https://github.com/i3/i3,2645,2017-01-17T03:31:57Z,2017-01-21T15:30:32Z,2017-01-21T15:30:32Z,MERGED,True,23,21,1,https://github.com/mihaicmn,Migrate i3-input to draw_util,1,[],https://github.com/i3/i3/pull/2645,https://github.com/mihaicmn,1,https://github.com/i3/i3/pull/2645,See #2642 for details.,See #2642 for details.,True,{}
i3/i3,https://github.com/i3/i3,2645,2017-01-17T03:31:57Z,2017-01-21T15:30:32Z,2017-01-21T15:30:32Z,MERGED,True,23,21,1,https://github.com/mihaicmn,Migrate i3-input to draw_util,1,[],https://github.com/i3/i3/pull/2645,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/2645#issuecomment-274267812,See #2642 for details.,@Airblader Could you take a look at this please? I think you’re more familiar with draw_util. Thanks!,True,{}
i3/i3,https://github.com/i3/i3,2646,2017-01-18T22:52:03Z,2017-01-21T15:53:10Z,2017-01-21T15:53:10Z,MERGED,True,20,38,1,https://github.com/mihaicmn,Migrate placeholder windows to draw_util,1,[],https://github.com/i3/i3/pull/2646,https://github.com/mihaicmn,1,https://github.com/i3/i3/pull/2646,See #2642 for details.,See #2642 for details.,True,{}
i3/i3,https://github.com/i3/i3,2646,2017-01-18T22:52:03Z,2017-01-21T15:53:10Z,2017-01-21T15:53:10Z,MERGED,True,20,38,1,https://github.com/mihaicmn,Migrate placeholder windows to draw_util,1,[],https://github.com/i3/i3/pull/2646,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/2646#issuecomment-274267849,See #2642 for details.,@Airblader Could you take a look at this please? I think you’re more familiar with draw_util. Thanks!,True,{}
i3/i3,https://github.com/i3/i3,2647,2017-01-19T13:04:09Z,2017-01-21T12:21:32Z,2017-01-21T12:21:32Z,MERGED,True,2,2,1,https://github.com/fred777,Update userguide,1,[],https://github.com/i3/i3/pull/2647,https://github.com/fred777,1,https://github.com/i3/i3/pull/2647,"key identifier Esc is invalid, use Escape instead","key identifier Esc is invalid, use Escape instead",True,{}
i3/i3,https://github.com/i3/i3,2647,2017-01-19T13:04:09Z,2017-01-21T12:21:32Z,2017-01-21T12:21:32Z,MERGED,True,2,2,1,https://github.com/fred777,Update userguide,1,[],https://github.com/i3/i3/pull/2647,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/2647#issuecomment-274258447,"key identifier Esc is invalid, use Escape instead",Thanks!,True,{}
i3/i3,https://github.com/i3/i3,2649,2017-01-20T00:01:47Z,2017-02-23T23:58:20Z,2017-02-23T23:58:28Z,MERGED,True,173,30,7,https://github.com/s3rb31,layout toggle: take any combination of layouts as arguments (continuation of #2476),2,[],https://github.com/i3/i3/pull/2649,https://github.com/s3rb31,1,https://github.com/i3/i3/pull/2649,"Okay so here is the new PR on the layout toggle thing.
I have added two commits. The first one condenses the code and makes it much less redundant as the  cycle algorithm can handle the split part without much modification. The second one updates the documentation.
As @Airblader mentioned in the foregoing discussion (#2476) all of this might stay proof of concept, until there is a proper way to pass arrays of arguments to functions and validate them via the parser specification.
So now, some feedback! :P I am curious to see what others think about the code and about some ideas on how to implement something that makes it possible to define variadic functions in the parser specification.
Greetings
Edit: I just forgot to delete the obsolete specification as suggested by Airblader. Fixed now.","Okay so here is the new PR on the layout toggle thing.
I have added two commits. The first one condenses the code and makes it much less redundant as the  cycle algorithm can handle the split part without much modification. The second one updates the documentation.
As @Airblader mentioned in the foregoing discussion (#2476) all of this might stay proof of concept, until there is a proper way to pass arrays of arguments to functions and validate them via the parser specification.
So now, some feedback! :P I am curious to see what others think about the code and about some ideas on how to implement something that makes it possible to define variadic functions in the parser specification.
Greetings
Edit: I just forgot to delete the obsolete specification as suggested by Airblader. Fixed now.",True,"{'THUMBS_UP': ['https://github.com/joehillen', 'https://github.com/BenoitAverty'], 'HOORAY': ['https://github.com/joehillen']}"
i3/i3,https://github.com/i3/i3,2649,2017-01-20T00:01:47Z,2017-02-23T23:58:20Z,2017-02-23T23:58:28Z,MERGED,True,173,30,7,https://github.com/s3rb31,layout toggle: take any combination of layouts as arguments (continuation of #2476),2,[],https://github.com/i3/i3/pull/2649,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2649#issuecomment-274279452,"Okay so here is the new PR on the layout toggle thing.
I have added two commits. The first one condenses the code and makes it much less redundant as the  cycle algorithm can handle the split part without much modification. The second one updates the documentation.
As @Airblader mentioned in the foregoing discussion (#2476) all of this might stay proof of concept, until there is a proper way to pass arrays of arguments to functions and validate them via the parser specification.
So now, some feedback! :P I am curious to see what others think about the code and about some ideas on how to implement something that makes it possible to define variadic functions in the parser specification.
Greetings
Edit: I just forgot to delete the obsolete specification as suggested by Airblader. Fixed now.",Also we should log an error if the string contains a token we don't recognize.,True,{}
i3/i3,https://github.com/i3/i3,2649,2017-01-20T00:01:47Z,2017-02-23T23:58:20Z,2017-02-23T23:58:28Z,MERGED,True,173,30,7,https://github.com/s3rb31,layout toggle: take any combination of layouts as arguments (continuation of #2476),2,[],https://github.com/i3/i3/pull/2649,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2649#issuecomment-276331404,"Okay so here is the new PR on the layout toggle thing.
I have added two commits. The first one condenses the code and makes it much less redundant as the  cycle algorithm can handle the split part without much modification. The second one updates the documentation.
As @Airblader mentioned in the foregoing discussion (#2476) all of this might stay proof of concept, until there is a proper way to pass arrays of arguments to functions and validate them via the parser specification.
So now, some feedback! :P I am curious to see what others think about the code and about some ideas on how to implement something that makes it possible to define variadic functions in the parser specification.
Greetings
Edit: I just forgot to delete the obsolete specification as suggested by Airblader. Fixed now.",@s3rb31 I see you pushed more commits. When you made changes please leave a comment. Unfortunately we don't get notifications for pushed commits on PRs. :-),True,{}
i3/i3,https://github.com/i3/i3,2649,2017-01-20T00:01:47Z,2017-02-23T23:58:20Z,2017-02-23T23:58:28Z,MERGED,True,173,30,7,https://github.com/s3rb31,layout toggle: take any combination of layouts as arguments (continuation of #2476),2,[],https://github.com/i3/i3/pull/2649,https://github.com/Airblader,4,https://github.com/i3/i3/pull/2649#issuecomment-276331815,"Okay so here is the new PR on the layout toggle thing.
I have added two commits. The first one condenses the code and makes it much less redundant as the  cycle algorithm can handle the split part without much modification. The second one updates the documentation.
As @Airblader mentioned in the foregoing discussion (#2476) all of this might stay proof of concept, until there is a proper way to pass arrays of arguments to functions and validate them via the parser specification.
So now, some feedback! :P I am curious to see what others think about the code and about some ideas on how to implement something that makes it possible to define variadic functions in the parser specification.
Greetings
Edit: I just forgot to delete the obsolete specification as suggested by Airblader. Fixed now.","@stapelberg I think you can review this now.
@s3rb31 One thing left to do is to squash the commits into a nice feature commit with a proper commit message. You may want to wait for @stapelberg's review, though.",True,{}
i3/i3,https://github.com/i3/i3,2649,2017-01-20T00:01:47Z,2017-02-23T23:58:20Z,2017-02-23T23:58:28Z,MERGED,True,173,30,7,https://github.com/s3rb31,layout toggle: take any combination of layouts as arguments (continuation of #2476),2,[],https://github.com/i3/i3/pull/2649,https://github.com/s3rb31,5,https://github.com/i3/i3/pull/2649#issuecomment-276335913,"Okay so here is the new PR on the layout toggle thing.
I have added two commits. The first one condenses the code and makes it much less redundant as the  cycle algorithm can handle the split part without much modification. The second one updates the documentation.
As @Airblader mentioned in the foregoing discussion (#2476) all of this might stay proof of concept, until there is a proper way to pass arrays of arguments to functions and validate them via the parser specification.
So now, some feedback! :P I am curious to see what others think about the code and about some ideas on how to implement something that makes it possible to define variadic functions in the parser specification.
Greetings
Edit: I just forgot to delete the obsolete specification as suggested by Airblader. Fixed now.","@s3rb31 I see you pushed more commits. When you made changes please leave a comment. Unfortunately we don't get notifications for pushed commits on PRs. :-)

Sure. I didn't know there're no notifications for new commits ...

@s3rb31 One thing left to do is to squash the commits into a nice feature commit with a proper commit message. You may want to wait for @stapelberg's review, though.

No problem, do you have an example commit, so that I can see what a proper commit message looks like? I am not very experienced with git, so to squash them together I'd do a soft reset with the last N commits and then recommit and push them? Will that remove all the other commits?",True,{}
i3/i3,https://github.com/i3/i3,2649,2017-01-20T00:01:47Z,2017-02-23T23:58:20Z,2017-02-23T23:58:28Z,MERGED,True,173,30,7,https://github.com/s3rb31,layout toggle: take any combination of layouts as arguments (continuation of #2476),2,[],https://github.com/i3/i3/pull/2649,https://github.com/Airblader,6,https://github.com/i3/i3/pull/2649#issuecomment-276337781,"Okay so here is the new PR on the layout toggle thing.
I have added two commits. The first one condenses the code and makes it much less redundant as the  cycle algorithm can handle the split part without much modification. The second one updates the documentation.
As @Airblader mentioned in the foregoing discussion (#2476) all of this might stay proof of concept, until there is a proper way to pass arrays of arguments to functions and validate them via the parser specification.
So now, some feedback! :P I am curious to see what others think about the code and about some ideas on how to implement something that makes it possible to define variadic functions in the parser specification.
Greetings
Edit: I just forgot to delete the obsolete specification as suggested by Airblader. Fixed now.","do you have an example commit, so that I can see what a proper commit message looks like?

It doesn't need to be too fancy. Just a quick explanation of what it's about and what issue it fixes. Here's an example:
commit 04dcf42397a7cf0e1284a2c6b16fb40c15af1f3e
Author: Tony Crisci <tony@dubstepdish.com>
Date:   Sun Jan 22 17:08:32 2017 -0500

    Add the ipc shutdown event (#2652)
    
    This event is triggered when the connection to the ipc is about to
    shutdown because of a user action such as with a `restart` or `exit`
    command. The `change` field indicates why the ipc is shutting down. It
    can be either ""restart"" or ""exit"".
    
    fixes #2318


so to squash them together I'd do a soft reset with the last N commits and then recommit and push them?

You can just do git rebase -i HEAD~7 (since you have 7 commits). That'll let you edit the commits which are listed one per line (they'll be in »chronological« order). You can replace the »pick« with a »squash« (or just »s«) for a commit to squash it into the previous commit.
So you'll want to do that for all of your PR's commits except the first one (you don't want to squash that into someone else's commit). Just save that file (depending on what editor you use, typically it's nano so you save via Ctrl+X) and git will do the squashing.
After that you need to force-push the branch (but make sure with git log -p first, just to be sure you did it right). Here's also a short tutorial on it: https://ariejan.net/2011/07/05/git-squash-your-latests-commits-into-one/
Of course a soft reset and committing again is also an option, but might as well improve your git-fu. :-)",True,{}
i3/i3,https://github.com/i3/i3,2649,2017-01-20T00:01:47Z,2017-02-23T23:58:20Z,2017-02-23T23:58:28Z,MERGED,True,173,30,7,https://github.com/s3rb31,layout toggle: take any combination of layouts as arguments (continuation of #2476),2,[],https://github.com/i3/i3/pull/2649,https://github.com/s3rb31,7,https://github.com/i3/i3/pull/2649#issuecomment-276428397,"Okay so here is the new PR on the layout toggle thing.
I have added two commits. The first one condenses the code and makes it much less redundant as the  cycle algorithm can handle the split part without much modification. The second one updates the documentation.
As @Airblader mentioned in the foregoing discussion (#2476) all of this might stay proof of concept, until there is a proper way to pass arrays of arguments to functions and validate them via the parser specification.
So now, some feedback! :P I am curious to see what others think about the code and about some ideas on how to implement something that makes it possible to define variadic functions in the parser specification.
Greetings
Edit: I just forgot to delete the obsolete specification as suggested by Airblader. Fixed now.","Okay, I think I figured it out. I'll be sitting tight for a review and then recommit. ;)",True,{}
i3/i3,https://github.com/i3/i3,2649,2017-01-20T00:01:47Z,2017-02-23T23:58:20Z,2017-02-23T23:58:28Z,MERGED,True,173,30,7,https://github.com/s3rb31,layout toggle: take any combination of layouts as arguments (continuation of #2476),2,[],https://github.com/i3/i3/pull/2649,https://github.com/s3rb31,8,https://github.com/i3/i3/pull/2649#issuecomment-277519601,"Okay so here is the new PR on the layout toggle thing.
I have added two commits. The first one condenses the code and makes it much less redundant as the  cycle algorithm can handle the split part without much modification. The second one updates the documentation.
As @Airblader mentioned in the foregoing discussion (#2476) all of this might stay proof of concept, until there is a proper way to pass arrays of arguments to functions and validate them via the parser specification.
So now, some feedback! :P I am curious to see what others think about the code and about some ideas on how to implement something that makes it possible to define variadic functions in the parser specification.
Greetings
Edit: I just forgot to delete the obsolete specification as suggested by Airblader. Fixed now.","Okay, I adressed the review. Should I wait some more time with squashing or is it okay like this?",True,{}
i3/i3,https://github.com/i3/i3,2649,2017-01-20T00:01:47Z,2017-02-23T23:58:20Z,2017-02-23T23:58:28Z,MERGED,True,173,30,7,https://github.com/s3rb31,layout toggle: take any combination of layouts as arguments (continuation of #2476),2,[],https://github.com/i3/i3/pull/2649,https://github.com/stapelberg,9,https://github.com/i3/i3/pull/2649#issuecomment-277523437,"Okay so here is the new PR on the layout toggle thing.
I have added two commits. The first one condenses the code and makes it much less redundant as the  cycle algorithm can handle the split part without much modification. The second one updates the documentation.
As @Airblader mentioned in the foregoing discussion (#2476) all of this might stay proof of concept, until there is a proper way to pass arrays of arguments to functions and validate them via the parser specification.
So now, some feedback! :P I am curious to see what others think about the code and about some ideas on how to implement something that makes it possible to define variadic functions in the parser specification.
Greetings
Edit: I just forgot to delete the obsolete specification as suggested by Airblader. Fixed now.","Should I wait some more time with squashing or is it okay like this?

The docs look good. It makes sense to start squashing now, even if we’re still changing the code.
Thanks!",True,{}
i3/i3,https://github.com/i3/i3,2649,2017-01-20T00:01:47Z,2017-02-23T23:58:20Z,2017-02-23T23:58:28Z,MERGED,True,173,30,7,https://github.com/s3rb31,layout toggle: take any combination of layouts as arguments (continuation of #2476),2,[],https://github.com/i3/i3/pull/2649,https://github.com/s3rb31,10,https://github.com/i3/i3/pull/2649#issuecomment-280866588,"Okay so here is the new PR on the layout toggle thing.
I have added two commits. The first one condenses the code and makes it much less redundant as the  cycle algorithm can handle the split part without much modification. The second one updates the documentation.
As @Airblader mentioned in the foregoing discussion (#2476) all of this might stay proof of concept, until there is a proper way to pass arrays of arguments to functions and validate them via the parser specification.
So now, some feedback! :P I am curious to see what others think about the code and about some ideas on how to implement something that makes it possible to define variadic functions in the parser specification.
Greetings
Edit: I just forgot to delete the obsolete specification as suggested by Airblader. Fixed now.","Hey everyone,
I've redone the layout comparision without memory allocation, please have a look! I think the code looks much cleaner now and should be less error prone. Thanks for the improvement to @stapelberg ;)
Greetings",True,{}
i3/i3,https://github.com/i3/i3,2649,2017-01-20T00:01:47Z,2017-02-23T23:58:20Z,2017-02-23T23:58:28Z,MERGED,True,173,30,7,https://github.com/s3rb31,layout toggle: take any combination of layouts as arguments (continuation of #2476),2,[],https://github.com/i3/i3/pull/2649,https://github.com/s3rb31,11,https://github.com/i3/i3/pull/2649#issuecomment-280933096,"Okay so here is the new PR on the layout toggle thing.
I have added two commits. The first one condenses the code and makes it much less redundant as the  cycle algorithm can handle the split part without much modification. The second one updates the documentation.
As @Airblader mentioned in the foregoing discussion (#2476) all of this might stay proof of concept, until there is a proper way to pass arrays of arguments to functions and validate them via the parser specification.
So now, some feedback! :P I am curious to see what others think about the code and about some ideas on how to implement something that makes it possible to define variadic functions in the parser specification.
Greetings
Edit: I just forgot to delete the obsolete specification as suggested by Airblader. Fixed now.","Okay, I fixed most of the things. I also added a testcase for multiple delimiters following each other. Please have a look again.",True,{}
i3/i3,https://github.com/i3/i3,2649,2017-01-20T00:01:47Z,2017-02-23T23:58:20Z,2017-02-23T23:58:28Z,MERGED,True,173,30,7,https://github.com/s3rb31,layout toggle: take any combination of layouts as arguments (continuation of #2476),2,[],https://github.com/i3/i3/pull/2649,https://github.com/s3rb31,12,https://github.com/i3/i3/pull/2649#issuecomment-281220567,"Okay so here is the new PR on the layout toggle thing.
I have added two commits. The first one condenses the code and makes it much less redundant as the  cycle algorithm can handle the split part without much modification. The second one updates the documentation.
As @Airblader mentioned in the foregoing discussion (#2476) all of this might stay proof of concept, until there is a proper way to pass arrays of arguments to functions and validate them via the parser specification.
So now, some feedback! :P I am curious to see what others think about the code and about some ideas on how to implement something that makes it possible to define variadic functions in the parser specification.
Greetings
Edit: I just forgot to delete the obsolete specification as suggested by Airblader. Fixed now.","Okay, I've implemented a function to map from the layout name to the corresponding layout_t value. I decided to put it in src/util.c because it seemed to fit in there better. If you want to have it in src/con.c please tell me and I will put it there.
Travis is failing because of checking layout_t against -1 (unsigned vs signed). But it is necessary to differentiate further between L_DEFAULT and a really invalid value because L_DEFAULT is a possible value in cmd_layout in src/commands.c.
I'd be glad if someone could tell me how to resolve this. We could simply cast the layout_t value to int, but that does seem a little hacky. I'd rather define an error/max value inside the enum. For example L_ERROR = -1 or L_MAX = 7. What do you think about this?",True,{}
i3/i3,https://github.com/i3/i3,2649,2017-01-20T00:01:47Z,2017-02-23T23:58:20Z,2017-02-23T23:58:28Z,MERGED,True,173,30,7,https://github.com/s3rb31,layout toggle: take any combination of layouts as arguments (continuation of #2476),2,[],https://github.com/i3/i3/pull/2649,https://github.com/Airblader,13,https://github.com/i3/i3/pull/2649#issuecomment-281269107,"Okay so here is the new PR on the layout toggle thing.
I have added two commits. The first one condenses the code and makes it much less redundant as the  cycle algorithm can handle the split part without much modification. The second one updates the documentation.
As @Airblader mentioned in the foregoing discussion (#2476) all of this might stay proof of concept, until there is a proper way to pass arrays of arguments to functions and validate them via the parser specification.
So now, some feedback! :P I am curious to see what others think about the code and about some ideas on how to implement something that makes it possible to define variadic functions in the parser specification.
Greetings
Edit: I just forgot to delete the obsolete specification as suggested by Airblader. Fixed now.","decided to put it in src/util.c because it seemed to fit in there better.

My expectation of this file would be to contain functions that are not domain-specific, but it already does contain quite a bit of domain-specific code, so I think this is fine.

I'd be glad if someone could tell me how to resolve this.

The »C way« to do this is to use out parameters and a return code:
bool layout_from_name(const char *layout_str, layout_t *out) {
    // … code …
    if(something_that_finds_a_layout) {
        *out = L_SPLITV;
        return true;
    }

    return false;
}

layout_t layout;
if(!layout_from_name(layout_str, &layout)) {
    // couldn't be found
}",True,{}
i3/i3,https://github.com/i3/i3,2649,2017-01-20T00:01:47Z,2017-02-23T23:58:20Z,2017-02-23T23:58:28Z,MERGED,True,173,30,7,https://github.com/s3rb31,layout toggle: take any combination of layouts as arguments (continuation of #2476),2,[],https://github.com/i3/i3/pull/2649,https://github.com/Airblader,14,https://github.com/i3/i3/pull/2649#issuecomment-282148192,"Okay so here is the new PR on the layout toggle thing.
I have added two commits. The first one condenses the code and makes it much less redundant as the  cycle algorithm can handle the split part without much modification. The second one updates the documentation.
As @Airblader mentioned in the foregoing discussion (#2476) all of this might stay proof of concept, until there is a proper way to pass arrays of arguments to functions and validate them via the parser specification.
So now, some feedback! :P I am curious to see what others think about the code and about some ideas on how to implement something that makes it possible to define variadic functions in the parser specification.
Greetings
Edit: I just forgot to delete the obsolete specification as suggested by Airblader. Fixed now.","And please don't forget to just drop a comment when you've changed it, otherwise I don't know when to look in here! Thanks again!",True,{}
i3/i3,https://github.com/i3/i3,2649,2017-01-20T00:01:47Z,2017-02-23T23:58:20Z,2017-02-23T23:58:28Z,MERGED,True,173,30,7,https://github.com/s3rb31,layout toggle: take any combination of layouts as arguments (continuation of #2476),2,[],https://github.com/i3/i3/pull/2649,https://github.com/s3rb31,15,https://github.com/i3/i3/pull/2649#issuecomment-282158108,"Okay so here is the new PR on the layout toggle thing.
I have added two commits. The first one condenses the code and makes it much less redundant as the  cycle algorithm can handle the split part without much modification. The second one updates the documentation.
As @Airblader mentioned in the foregoing discussion (#2476) all of this might stay proof of concept, until there is a proper way to pass arrays of arguments to functions and validate them via the parser specification.
So now, some feedback! :P I am curious to see what others think about the code and about some ideas on how to implement something that makes it possible to define variadic functions in the parser specification.
Greetings
Edit: I just forgot to delete the obsolete specification as suggested by Airblader. Fixed now.","Thanks for your patience. :-) This is looking really good now.

Thanks for all the very nice feedback and your patience too. It's a pleasure to work on this project!

There's one tiny little nit left. If you can take care of that one last thing I think we are ready to merge this!

I just fixed it. I think that should be it!

And please don't forget to just drop a comment when you've changed it, otherwise I don't know when to look in here! Thanks again!

You're just too fast for me. ;) I was waiting for Travis and got distracted then ...",True,{}
i3/i3,https://github.com/i3/i3,2649,2017-01-20T00:01:47Z,2017-02-23T23:58:20Z,2017-02-23T23:58:28Z,MERGED,True,173,30,7,https://github.com/s3rb31,layout toggle: take any combination of layouts as arguments (continuation of #2476),2,[],https://github.com/i3/i3/pull/2649,https://github.com/Airblader,16,https://github.com/i3/i3/pull/2649#issuecomment-282161277,"Okay so here is the new PR on the layout toggle thing.
I have added two commits. The first one condenses the code and makes it much less redundant as the  cycle algorithm can handle the split part without much modification. The second one updates the documentation.
As @Airblader mentioned in the foregoing discussion (#2476) all of this might stay proof of concept, until there is a proper way to pass arrays of arguments to functions and validate them via the parser specification.
So now, some feedback! :P I am curious to see what others think about the code and about some ideas on how to implement something that makes it possible to define variadic functions in the parser specification.
Greetings
Edit: I just forgot to delete the obsolete specification as suggested by Airblader. Fixed now.",Thanks again!,True,{'THUMBS_UP': ['https://github.com/s3rb31']}
i3/i3,https://github.com/i3/i3,2652,2017-01-22T20:08:51Z,2017-01-22T22:08:33Z,2017-01-22T22:08:33Z,MERGED,True,133,8,7,https://github.com/acrisci,Add the ipc shutdown event,1,[],https://github.com/i3/i3/pull/2652,https://github.com/acrisci,1,https://github.com/i3/i3/pull/2652,"This event is triggered when the connection to the ipc is about to
shutdown because of a user action such as with a restart or exit
command. The change field indicates why the ipc is shutting down. It
can be either ""restart"" or ""exit"".
fixes #2318","This event is triggered when the connection to the ipc is about to
shutdown because of a user action such as with a restart or exit
command. The change field indicates why the ipc is shutting down. It
can be either ""restart"" or ""exit"".
fixes #2318",True,{}
i3/i3,https://github.com/i3/i3,2653,2017-01-22T21:46:10Z,2017-09-14T18:04:09Z,2017-12-12T16:07:16Z,CLOSED,False,379,60,10,https://github.com/acrisci,[wip] Tiling drag,20,['waiting'],https://github.com/i3/i3/pull/2653,https://github.com/acrisci,1,https://github.com/i3/i3/pull/2653,"A continuation of #2178
TODO

 Support stacks and tabs
 Don't always create new splits
 Drag onto the root window
 Drop indicator for inner/outer regions
 Implement outer region drop
 Initiate tiling drag from titlebar
 Emit move event properly on tiling drop
 Refactor insert_con_into() into con.c
 Configure color of drop indicator
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Tests","A continuation of #2178
TODO

 Support stacks and tabs
 Don't always create new splits
 Drag onto the root window
 Drop indicator for inner/outer regions
 Implement outer region drop
 Initiate tiling drag from titlebar
 Emit move event properly on tiling drop
 Refactor insert_con_into() into con.c
 Configure color of drop indicator
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Tests",True,"{'THUMBS_UP': ['https://github.com/Airblader', 'https://github.com/tomas2t', 'https://github.com/dikiaap', 'https://github.com/orestisfl', 'https://github.com/marioortizmanero']}"
i3/i3,https://github.com/i3/i3,2653,2017-01-22T21:46:10Z,2017-09-14T18:04:09Z,2017-12-12T16:07:16Z,CLOSED,False,379,60,10,https://github.com/acrisci,[wip] Tiling drag,20,['waiting'],https://github.com/i3/i3/pull/2653,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2653#issuecomment-274363594,"A continuation of #2178
TODO

 Support stacks and tabs
 Don't always create new splits
 Drag onto the root window
 Drop indicator for inner/outer regions
 Implement outer region drop
 Initiate tiling drag from titlebar
 Emit move event properly on tiling drop
 Refactor insert_con_into() into con.c
 Configure color of drop indicator
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Tests","Glad to see this being continued. I think this is a really cool feature to have in i3.
FYI @MForster",True,{}
i3/i3,https://github.com/i3/i3,2653,2017-01-22T21:46:10Z,2017-09-14T18:04:09Z,2017-12-12T16:07:16Z,CLOSED,False,379,60,10,https://github.com/acrisci,[wip] Tiling drag,20,['waiting'],https://github.com/i3/i3/pull/2653,https://github.com/MForster,3,https://github.com/i3/i3/pull/2653#issuecomment-274363652,"A continuation of #2178
TODO

 Support stacks and tabs
 Don't always create new splits
 Drag onto the root window
 Drop indicator for inner/outer regions
 Implement outer region drop
 Initiate tiling drag from titlebar
 Emit move event properly on tiling drop
 Refactor insert_con_into() into con.c
 Configure color of drop indicator
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Tests",Awesome! 👍,True,{}
i3/i3,https://github.com/i3/i3,2653,2017-01-22T21:46:10Z,2017-09-14T18:04:09Z,2017-12-12T16:07:16Z,CLOSED,False,379,60,10,https://github.com/acrisci,[wip] Tiling drag,20,['waiting'],https://github.com/i3/i3/pull/2653,https://github.com/acrisci,4,https://github.com/i3/i3/pull/2653#issuecomment-274371597,"A continuation of #2178
TODO

 Support stacks and tabs
 Don't always create new splits
 Drag onto the root window
 Drop indicator for inner/outer regions
 Implement outer region drop
 Initiate tiling drag from titlebar
 Emit move event properly on tiling drop
 Refactor insert_con_into() into con.c
 Configure color of drop indicator
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Tests","There is definitely an interesting UX problem here. I'll share my initial thoughts. Any input is appreciated.
I think we should define two separate drop regions. There will be an ""inner region"" and an ""outer region"" on the edges.
Which region you drop in will determine whether it will do a split, or insert it as a sibling within the parent container.
These will then be divided into four quadrants. The quadrant will determine the direction of the move.
         +------------------------------------------------+
         |XX                                             X|
         |  X           SIBLING ABOVE                  XX |
         |   X+--------------------------------------+X   |
         |    |                                      |    |
         |    |               SPLIT ABOVE            |    |
         |    |                                      |    |
         |    |                  +                   |    |
         |    |                  |                   |    |
         |    |                  |                   |    |
         |    |                  |                   |    |
SIBLING LEFT  |SPLIT LEFT        |        SPLIT RIGHT|   SIBLING RIGHT
         |    |          +----------------+          |    |
         |    |                  |                   |    |
         |    |                  |                   |    |
         |    |                  |                   |    |
         |    |                  |                   |    |
         |    |                  +                   |    |
         |    |                                      |    |
         |    |               SPLIT BELOW            |    |
         |    |                                      |    |
         |    +--------------------------------------+    |
         |XX X         SIBLING BELOW                  X X |
         +-X----------------------------------------------+


This is just the first thing I thought of. Does that make sense?",True,{}
i3/i3,https://github.com/i3/i3,2653,2017-01-22T21:46:10Z,2017-09-14T18:04:09Z,2017-12-12T16:07:16Z,CLOSED,False,379,60,10,https://github.com/acrisci,[wip] Tiling drag,20,['waiting'],https://github.com/i3/i3/pull/2653,https://github.com/Airblader,5,https://github.com/i3/i3/pull/2653#issuecomment-274417545,"A continuation of #2178
TODO

 Support stacks and tabs
 Don't always create new splits
 Drag onto the root window
 Drop indicator for inner/outer regions
 Implement outer region drop
 Initiate tiling drag from titlebar
 Emit move event properly on tiling drop
 Refactor insert_con_into() into con.c
 Configure color of drop indicator
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Tests","Yeah, that makes sense to me. I wonder whether we could use regions to switch the container to stacked or tabbed as well. Might be too complex a mental model, though.",True,{}
i3/i3,https://github.com/i3/i3,2653,2017-01-22T21:46:10Z,2017-09-14T18:04:09Z,2017-12-12T16:07:16Z,CLOSED,False,379,60,10,https://github.com/acrisci,[wip] Tiling drag,20,['waiting'],https://github.com/i3/i3/pull/2653,https://github.com/acrisci,6,https://github.com/i3/i3/pull/2653#issuecomment-274688869,"A continuation of #2178
TODO

 Support stacks and tabs
 Don't always create new splits
 Drag onto the root window
 Drop indicator for inner/outer regions
 Implement outer region drop
 Initiate tiling drag from titlebar
 Emit move event properly on tiling drop
 Refactor insert_con_into() into con.c
 Configure color of drop indicator
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Tests",The outer/inner indicator is now implemented but not the actual movement.,True,{}
i3/i3,https://github.com/i3/i3,2653,2017-01-22T21:46:10Z,2017-09-14T18:04:09Z,2017-12-12T16:07:16Z,CLOSED,False,379,60,10,https://github.com/acrisci,[wip] Tiling drag,20,['waiting'],https://github.com/i3/i3/pull/2653,https://github.com/acrisci,7,https://github.com/i3/i3/pull/2653#issuecomment-274689308,"A continuation of #2178
TODO

 Support stacks and tabs
 Don't always create new splits
 Drag onto the root window
 Drop indicator for inner/outer regions
 Implement outer region drop
 Initiate tiling drag from titlebar
 Emit move event properly on tiling drop
 Refactor insert_con_into() into con.c
 Configure color of drop indicator
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Tests","I think mouse features are probably less useful when you need to press a key to initiate them. I'd like to initiate a drag with the mouse only.
What if dragging from the title bar initiated the tiling drag (in addition to the modifier)? That would be consistent with normal gui conventions where dragging a title bar is a movement action.",True,{}
i3/i3,https://github.com/i3/i3,2653,2017-01-22T21:46:10Z,2017-09-14T18:04:09Z,2017-12-12T16:07:16Z,CLOSED,False,379,60,10,https://github.com/acrisci,[wip] Tiling drag,20,['waiting'],https://github.com/i3/i3/pull/2653,https://github.com/Airblader,8,https://github.com/i3/i3/pull/2653#issuecomment-274746446,"A continuation of #2178
TODO

 Support stacks and tabs
 Don't always create new splits
 Drag onto the root window
 Drop indicator for inner/outer regions
 Implement outer region drop
 Initiate tiling drag from titlebar
 Emit move event properly on tiling drop
 Refactor insert_con_into() into con.c
 Configure color of drop indicator
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Tests",SGTM.,True,{}
i3/i3,https://github.com/i3/i3,2653,2017-01-22T21:46:10Z,2017-09-14T18:04:09Z,2017-12-12T16:07:16Z,CLOSED,False,379,60,10,https://github.com/acrisci,[wip] Tiling drag,20,['waiting'],https://github.com/i3/i3/pull/2653,https://github.com/acrisci,9,https://github.com/i3/i3/pull/2653#issuecomment-275879922,"A continuation of #2178
TODO

 Support stacks and tabs
 Don't always create new splits
 Drag onto the root window
 Drop indicator for inner/outer regions
 Implement outer region drop
 Initiate tiling drag from titlebar
 Emit move event properly on tiling drop
 Refactor insert_con_into() into con.c
 Configure color of drop indicator
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Tests",The outer region drop behavior is ready to test. (still not working on stacks though),True,{}
i3/i3,https://github.com/i3/i3,2653,2017-01-22T21:46:10Z,2017-09-14T18:04:09Z,2017-12-12T16:07:16Z,CLOSED,False,379,60,10,https://github.com/acrisci,[wip] Tiling drag,20,['waiting'],https://github.com/i3/i3/pull/2653,https://github.com/Airblader,10,https://github.com/i3/i3/pull/2653#issuecomment-275881050,"A continuation of #2178
TODO

 Support stacks and tabs
 Don't always create new splits
 Drag onto the root window
 Drop indicator for inner/outer regions
 Implement outer region drop
 Initiate tiling drag from titlebar
 Emit move event properly on tiling drop
 Refactor insert_con_into() into con.c
 Configure color of drop indicator
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Tests","I think one general issue with the dragging feature is that percentages aren't kept. It's a pretty tough issue that I've tackled in my swap command PR (which is still open). I'm not sure we really do need to »fix«/support it for the dragging feature. (I guess what I mean here is that in a H[A B] layout, dragging A behind B should basically be a swap, right?)
Also, i3 crashes if I move the mouse over i3bar while dragging a window.",True,{}
i3/i3,https://github.com/i3/i3,2653,2017-01-22T21:46:10Z,2017-09-14T18:04:09Z,2017-12-12T16:07:16Z,CLOSED,False,379,60,10,https://github.com/acrisci,[wip] Tiling drag,20,['waiting'],https://github.com/i3/i3/pull/2653,https://github.com/Airblader,11,https://github.com/i3/i3/pull/2653#issuecomment-275881222,"A continuation of #2178
TODO

 Support stacks and tabs
 Don't always create new splits
 Drag onto the root window
 Drop indicator for inner/outer regions
 Implement outer region drop
 Initiate tiling drag from titlebar
 Emit move event properly on tiling drop
 Refactor insert_con_into() into con.c
 Configure color of drop indicator
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Tests","Please disregard what I said about percentages. Not only don't we need to fix anything here, but it just doesn't even make sense since in general dragging windows changes the tree.",True,{}
i3/i3,https://github.com/i3/i3,2653,2017-01-22T21:46:10Z,2017-09-14T18:04:09Z,2017-12-12T16:07:16Z,CLOSED,False,379,60,10,https://github.com/acrisci,[wip] Tiling drag,20,['waiting'],https://github.com/i3/i3/pull/2653,https://github.com/acrisci,12,https://github.com/i3/i3/pull/2653#issuecomment-275881371,"A continuation of #2178
TODO

 Support stacks and tabs
 Don't always create new splits
 Drag onto the root window
 Drop indicator for inner/outer regions
 Implement outer region drop
 Initiate tiling drag from titlebar
 Emit move event properly on tiling drop
 Refactor insert_con_into() into con.c
 Configure color of drop indicator
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Tests",@Airblader can you think of what needs to be done besides my TODOs on the OP? Do we need tests?,True,{}
i3/i3,https://github.com/i3/i3,2653,2017-01-22T21:46:10Z,2017-09-14T18:04:09Z,2017-12-12T16:07:16Z,CLOSED,False,379,60,10,https://github.com/acrisci,[wip] Tiling drag,20,['waiting'],https://github.com/i3/i3/pull/2653,https://github.com/Airblader,13,https://github.com/i3/i3/pull/2653#issuecomment-275881735,"A continuation of #2178
TODO

 Support stacks and tabs
 Don't always create new splits
 Drag onto the root window
 Drop indicator for inner/outer regions
 Implement outer region drop
 Initiate tiling drag from titlebar
 Emit move event properly on tiling drop
 Refactor insert_con_into() into con.c
 Configure color of drop indicator
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Tests","@acrisci I'll have to take a look at the change itself (which I didn't yet). In general tests are always a good thing to have. As it stands this is probably a little tricky to test. I do think tests are really useful here because they provide documentation of what the different scenarios should behave like.
I wonder whether we should also provide this feature as a command along the lines of
drag [window|container] [to] sibling|split left|right|top|bottom for <con_id>

which would have the added extra benefit of making it testable without simulating mouse behavior.
Apart from that I've played around with it for a few minutes now. Except for that one crash it seems to work fine even in the few edge cases I could immediately think of. But it did bring me back to my previous idea about drop locations to create tabbed and stacked containers (but perhaps let's just keep this as a future idea for now).
One minor thing coming to mind would be to allow separate customization of the drop indicator via its own color.drop_indicator directive (with the fallback to the focused window or something).",True,{}
i3/i3,https://github.com/i3/i3,2653,2017-01-22T21:46:10Z,2017-09-14T18:04:09Z,2017-12-12T16:07:16Z,CLOSED,False,379,60,10,https://github.com/acrisci,[wip] Tiling drag,20,['waiting'],https://github.com/i3/i3/pull/2653,https://github.com/Airblader,14,https://github.com/i3/i3/pull/2653#issuecomment-275882006,"A continuation of #2178
TODO

 Support stacks and tabs
 Don't always create new splits
 Drag onto the root window
 Drop indicator for inner/outer regions
 Implement outer region drop
 Initiate tiling drag from titlebar
 Emit move event properly on tiling drop
 Refactor insert_con_into() into con.c
 Configure color of drop indicator
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Tests",i3 crashes if a window closes while the dragging is indicating to drop it onto that window.,True,{}
i3/i3,https://github.com/i3/i3,2653,2017-01-22T21:46:10Z,2017-09-14T18:04:09Z,2017-12-12T16:07:16Z,CLOSED,False,379,60,10,https://github.com/acrisci,[wip] Tiling drag,20,['waiting'],https://github.com/i3/i3/pull/2653,https://github.com/acrisci,15,https://github.com/i3/i3/pull/2653#issuecomment-275883026,"A continuation of #2178
TODO

 Support stacks and tabs
 Don't always create new splits
 Drag onto the root window
 Drop indicator for inner/outer regions
 Implement outer region drop
 Initiate tiling drag from titlebar
 Emit move event properly on tiling drop
 Refactor insert_con_into() into con.c
 Configure color of drop indicator
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Tests","I think we can use XTEST (or xdotool) to simulate a mouse click then warp the pointer and release the mouse. That's kind of involved, but this feature is complicated enough that maybe that is worth it. The infrastructure could be done in such a way that the other dragging code could be tested as well.
The drag command itself won't cover the case that you just mentioned here or the other crash with the bar either.
I think the outer region should be increased as well, but I'm not sure exactly how large it should be. I'm beginning to think that the outer region drop will be used more than the inner region drop.",True,{}
i3/i3,https://github.com/i3/i3,2653,2017-01-22T21:46:10Z,2017-09-14T18:04:09Z,2017-12-12T16:07:16Z,CLOSED,False,379,60,10,https://github.com/acrisci,[wip] Tiling drag,20,['waiting'],https://github.com/i3/i3/pull/2653,https://github.com/Airblader,16,https://github.com/i3/i3/pull/2653#issuecomment-275883317,"A continuation of #2178
TODO

 Support stacks and tabs
 Don't always create new splits
 Drag onto the root window
 Drop indicator for inner/outer regions
 Implement outer region drop
 Initiate tiling drag from titlebar
 Emit move event properly on tiling drop
 Refactor insert_con_into() into con.c
 Configure color of drop indicator
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Tests","The drag command won't cover the case that you just mentioned here or the other crash with the bar either.

I don't really strongly advocate implementing the command. Using XTEST is perfectly fine with me as well. :-)

I think the outer region should be increased as well, but I'm not sure exactly how large it should be.

I agree that they seemed a little small. We don't have to get it perfect right away. Let's play with it a little.",True,{}
i3/i3,https://github.com/i3/i3,2653,2017-01-22T21:46:10Z,2017-09-14T18:04:09Z,2017-12-12T16:07:16Z,CLOSED,False,379,60,10,https://github.com/acrisci,[wip] Tiling drag,20,['waiting'],https://github.com/i3/i3/pull/2653,https://github.com/Airblader,17,https://github.com/i3/i3/pull/2653#issuecomment-329551982,"A continuation of #2178
TODO

 Support stacks and tabs
 Don't always create new splits
 Drag onto the root window
 Drop indicator for inner/outer regions
 Implement outer region drop
 Initiate tiling drag from titlebar
 Emit move event properly on tiling drop
 Refactor insert_con_into() into con.c
 Configure color of drop indicator
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Tests",@acrisci Do you plan on working on this still?,True,{}
i3/i3,https://github.com/i3/i3,2653,2017-01-22T21:46:10Z,2017-09-14T18:04:09Z,2017-12-12T16:07:16Z,CLOSED,False,379,60,10,https://github.com/acrisci,[wip] Tiling drag,20,['waiting'],https://github.com/i3/i3/pull/2653,https://github.com/acrisci,18,https://github.com/i3/i3/pull/2653#issuecomment-329560512,"A continuation of #2178
TODO

 Support stacks and tabs
 Don't always create new splits
 Drag onto the root window
 Drop indicator for inner/outer regions
 Implement outer region drop
 Initiate tiling drag from titlebar
 Emit move event properly on tiling drop
 Refactor insert_con_into() into con.c
 Configure color of drop indicator
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Tests","I think I just have too much going on right now to work on this, but I wish someone would continue this work because I think it has the potential to be a good feature.",True,{}
i3/i3,https://github.com/i3/i3,2653,2017-01-22T21:46:10Z,2017-09-14T18:04:09Z,2017-12-12T16:07:16Z,CLOSED,False,379,60,10,https://github.com/acrisci,[wip] Tiling drag,20,['waiting'],https://github.com/i3/i3/pull/2653,https://github.com/Airblader,19,https://github.com/i3/i3/pull/2653#issuecomment-329562708,"A continuation of #2178
TODO

 Support stacks and tabs
 Don't always create new splits
 Drag onto the root window
 Drop indicator for inner/outer regions
 Implement outer region drop
 Initiate tiling drag from titlebar
 Emit move event properly on tiling drop
 Refactor insert_con_into() into con.c
 Configure color of drop indicator
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Tests",Thanks. I do agree as well that this would be really cool and hope someone will continue. I also agree on not having enough time at the moment. :-) I'll close this for now since we have the open issue #2643 for it.,True,{}
i3/i3,https://github.com/i3/i3,2653,2017-01-22T21:46:10Z,2017-09-14T18:04:09Z,2017-12-12T16:07:16Z,CLOSED,False,379,60,10,https://github.com/acrisci,[wip] Tiling drag,20,['waiting'],https://github.com/i3/i3/pull/2653,https://github.com/orestisfl,20,https://github.com/i3/i3/pull/2653#issuecomment-351098181,"A continuation of #2178
TODO

 Support stacks and tabs
 Don't always create new splits
 Drag onto the root window
 Drop indicator for inner/outer regions
 Implement outer region drop
 Initiate tiling drag from titlebar
 Emit move event properly on tiling drop
 Refactor insert_con_into() into con.c
 Configure color of drop indicator
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Tests",Watchers of this PR: I opened a continuation in #3085.,True,{}
i3/i3,https://github.com/i3/i3,2654,2017-01-22T21:48:52Z,2017-01-25T07:18:14Z,2017-01-25T07:18:14Z,MERGED,True,54,59,1,https://github.com/mihaicmn,Migrate i3-config-wizard to draw_util,1,[],https://github.com/i3/i3/pull/2654,https://github.com/mihaicmn,1,https://github.com/i3/i3/pull/2654,See #2642 for details.,See #2642 for details.,True,{}
i3/i3,https://github.com/i3/i3,2654,2017-01-22T21:48:52Z,2017-01-25T07:18:14Z,2017-01-25T07:18:14Z,MERGED,True,54,59,1,https://github.com/mihaicmn,Migrate i3-config-wizard to draw_util,1,[],https://github.com/i3/i3/pull/2654,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2654#issuecomment-274363662,See #2642 for details.,"Despite my comments, before merging I'm going to give this a shot on my machine and then let @stapelberg know.",True,{}
i3/i3,https://github.com/i3/i3,2654,2017-01-22T21:48:52Z,2017-01-25T07:18:14Z,2017-01-25T07:18:14Z,MERGED,True,54,59,1,https://github.com/mihaicmn,Migrate i3-config-wizard to draw_util,1,[],https://github.com/i3/i3/pull/2654,https://github.com/mihaicmn,3,https://github.com/i3/i3/pull/2654#issuecomment-274369001,See #2642 for details.,@Airblader I updated the code.,True,{}
i3/i3,https://github.com/i3/i3,2654,2017-01-22T21:48:52Z,2017-01-25T07:18:14Z,2017-01-25T07:18:14Z,MERGED,True,54,59,1,https://github.com/mihaicmn,Migrate i3-config-wizard to draw_util,1,[],https://github.com/i3/i3/pull/2654,https://github.com/Airblader,4,https://github.com/i3/i3/pull/2654#issuecomment-274607518,See #2642 for details.,I'm actually not sure when I can get around to setting up testing this on my machine. Do you mind posting a screenshot of what it looks like?,True,{}
i3/i3,https://github.com/i3/i3,2654,2017-01-22T21:48:52Z,2017-01-25T07:18:14Z,2017-01-25T07:18:14Z,MERGED,True,54,59,1,https://github.com/mihaicmn,Migrate i3-config-wizard to draw_util,1,[],https://github.com/i3/i3/pull/2654,https://github.com/mihaicmn,5,https://github.com/i3/i3/pull/2654#issuecomment-274616012,See #2642 for details.,,True,{}
i3/i3,https://github.com/i3/i3,2655,2017-01-23T01:38:09Z,2017-01-23T07:40:09Z,2017-01-23T07:40:09Z,MERGED,True,11,0,1,https://github.com/acrisci,Testcases: Check for required binaries,1,[],https://github.com/i3/i3/pull/2655,https://github.com/acrisci,1,https://github.com/i3/i3/pull/2655,"Fail fast in case test binaries are not built and provide instructions on
how to build them.","Fail fast in case test binaries are not built and provide instructions on
how to build them.",True,{}
i3/i3,https://github.com/i3/i3,2656,2017-01-23T12:16:11Z,2017-01-24T16:40:33Z,2017-01-29T23:07:26Z,MERGED,True,3,3,1,https://github.com/tobias-haenel,Added missing cases for workspace event,1,[],https://github.com/i3/i3/pull/2656,https://github.com/tobias-haenel,1,https://github.com/i3/i3/pull/2656,"The possible values ""rename"", ""reload"" and ""restored"" of the property
'change' from the workspace event were missing in the ipc documentation.
Because no events of those types contain an old workspace, this was trivial.","The possible values ""rename"", ""reload"" and ""restored"" of the property
'change' from the workspace event were missing in the ipc documentation.
Because no events of those types contain an old workspace, this was trivial.",True,{}
i3/i3,https://github.com/i3/i3,2665,2017-01-30T14:12:22Z,2017-02-01T07:39:10Z,2017-02-01T07:39:10Z,CLOSED,False,41,3,6,https://github.com/kilbith,[WIP] Add new option: hide_tab_container,1,['waiting'],https://github.com/i3/i3/pull/2665,https://github.com/kilbith,1,https://github.com/i3/i3/pull/2665,"Addresses #2664
Not sure if it's the perfect approach to implement that. I'm willing to add more documentation if you're keen with the idea.","Addresses #2664
Not sure if it's the perfect approach to implement that. I'm willing to add more documentation if you're keen with the idea.",True,{}
i3/i3,https://github.com/i3/i3,2665,2017-01-30T14:12:22Z,2017-02-01T07:39:10Z,2017-02-01T07:39:10Z,CLOSED,False,41,3,6,https://github.com/kilbith,[WIP] Add new option: hide_tab_container,1,['waiting'],https://github.com/i3/i3/pull/2665,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2665#issuecomment-276073074,"Addresses #2664
Not sure if it's the perfect approach to implement that. I'm willing to add more documentation if you're keen with the idea.","This approach is definitel not clean. However, before discussing a PR we should discuss the feature itself.",True,{}
i3/i3,https://github.com/i3/i3,2665,2017-01-30T14:12:22Z,2017-02-01T07:39:10Z,2017-02-01T07:39:10Z,CLOSED,False,41,3,6,https://github.com/kilbith,[WIP] Add new option: hide_tab_container,1,['waiting'],https://github.com/i3/i3/pull/2665,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/2665#issuecomment-276592003,"Addresses #2664
Not sure if it's the perfect approach to implement that. I'm willing to add more documentation if you're keen with the idea.","Thanks for the pull request. I’ll have to decline merging it, however. See #2664 for rationale.",True,{}
i3/i3,https://github.com/i3/i3,2668,2017-02-02T18:46:52Z,2017-02-05T09:04:36Z,2017-02-05T09:51:14Z,MERGED,True,5,0,1,https://github.com/jolange,restart bar status command on config reload,1,[],https://github.com/i3/i3/pull/2668,https://github.com/jolange,1,https://github.com/i3/i3/pull/2668,Closes #2651,Closes #2651,True,{}
i3/i3,https://github.com/i3/i3,2668,2017-02-02T18:46:52Z,2017-02-05T09:04:36Z,2017-02-05T09:51:14Z,MERGED,True,5,0,1,https://github.com/jolange,restart bar status command on config reload,1,[],https://github.com/i3/i3/pull/2668,https://github.com/jolange,2,https://github.com/i3/i3/pull/2668#issuecomment-277430013,Closes #2651,"Yep. If the right infrastructure is there already, you just need to find out where things are happening ;-)",True,{}
i3/i3,https://github.com/i3/i3,2669,2017-02-02T19:12:06Z,2017-02-05T09:07:22Z,2017-02-05T09:07:22Z,MERGED,True,6,6,1,https://github.com/mmlb,docs: focus_follow_mouse only happens at window border crossings,1,[],https://github.com/i3/i3/pull/2669,https://github.com/mmlb,1,https://github.com/i3/i3/pull/2669,see #2666,see #2666,True,{}
i3/i3,https://github.com/i3/i3,2672,2017-02-05T05:46:52Z,2017-02-13T07:42:37Z,2017-02-13T07:42:37Z,CLOSED,False,3,3,1,https://github.com/syrrim,"numslock no longer affects bindings, fixes #2523",2,['waiting'],https://github.com/i3/i3/pull/2672,https://github.com/syrrim,1,https://github.com/i3/i3/pull/2672,,,True,{}
i3/i3,https://github.com/i3/i3,2672,2017-02-05T05:46:52Z,2017-02-13T07:42:37Z,2017-02-13T07:42:37Z,CLOSED,False,3,3,1,https://github.com/syrrim,"numslock no longer affects bindings, fixes #2523",2,['waiting'],https://github.com/i3/i3/pull/2672,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2672#issuecomment-278120291,,The change breaks a test and I also don't think it's correct. We can't just always dismiss the NumLock key.,True,{}
i3/i3,https://github.com/i3/i3,2672,2017-02-05T05:46:52Z,2017-02-13T07:42:37Z,2017-02-13T07:42:37Z,CLOSED,False,3,3,1,https://github.com/syrrim,"numslock no longer affects bindings, fixes #2523",2,['waiting'],https://github.com/i3/i3/pull/2672,https://github.com/syrrim,3,https://github.com/i3/i3/pull/2672#issuecomment-278226915,,"As a note, we already ignore the capslock key. The numslock key doesn't seem like that far of a leap to me. It has the same property of being easy to enable by mistake. My keyboard in particular has no light indicating its state, so I never know if I have numslock on or off.",True,{}
i3/i3,https://github.com/i3/i3,2672,2017-02-05T05:46:52Z,2017-02-13T07:42:37Z,2017-02-13T07:42:37Z,CLOSED,False,3,3,1,https://github.com/syrrim,"numslock no longer affects bindings, fixes #2523",2,['waiting'],https://github.com/i3/i3/pull/2672,https://github.com/Airblader,4,https://github.com/i3/i3/pull/2672#issuecomment-278408210,,"The change to not always discard the NumLock key was intentional, see d77d401",True,{}
i3/i3,https://github.com/i3/i3,2672,2017-02-05T05:46:52Z,2017-02-13T07:42:37Z,2017-02-13T07:42:37Z,CLOSED,False,3,3,1,https://github.com/syrrim,"numslock no longer affects bindings, fixes #2523",2,['waiting'],https://github.com/i3/i3/pull/2672,https://github.com/stapelberg,5,https://github.com/i3/i3/pull/2672#issuecomment-279314831,,"Simply ignoring the key is not the correct solution, at least not without a lengthy explanation as to why that must be the only option. As @Airblader mentioned, our change to respect the key was intentional in order to enable a use-case.",True,{}
i3/i3,https://github.com/i3/i3,2674,2017-02-05T12:32:35Z,2017-02-05T17:57:44Z,2017-02-05T17:57:44Z,MERGED,True,17,0,1,None,Trying to explain the workspace number behavior,1,[],https://github.com/i3/i3/pull/2674,None,1,https://github.com/i3/i3/pull/2674,"The documentation did not explain how workspace number ""1: www"" is working.
Related to #2663","The documentation did not explain how workspace number ""1: www"" is working.
Related to #2663",True,{}
i3/i3,https://github.com/i3/i3,2674,2017-02-05T12:32:35Z,2017-02-05T17:57:44Z,2017-02-05T17:57:44Z,MERGED,True,17,0,1,None,Trying to explain the workspace number behavior,1,[],https://github.com/i3/i3/pull/2674,None,2,https://github.com/i3/i3/pull/2674#issuecomment-277527572,"The documentation did not explain how workspace number ""1: www"" is working.
Related to #2663",I've added a paragraph describing the creation case.,True,{}
i3/i3,https://github.com/i3/i3,2674,2017-02-05T12:32:35Z,2017-02-05T17:57:44Z,2017-02-05T17:57:44Z,MERGED,True,17,0,1,None,Trying to explain the workspace number behavior,1,[],https://github.com/i3/i3/pull/2674,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/2674#issuecomment-277527880,"The documentation did not explain how workspace number ""1: www"" is working.
Related to #2663",Could you squash the commits into 1 single commit before I merge please?,True,{}
i3/i3,https://github.com/i3/i3,2674,2017-02-05T12:32:35Z,2017-02-05T17:57:44Z,2017-02-05T17:57:44Z,MERGED,True,17,0,1,None,Trying to explain the workspace number behavior,1,[],https://github.com/i3/i3/pull/2674,None,4,https://github.com/i3/i3/pull/2674#issuecomment-277533919,"The documentation did not explain how workspace number ""1: www"" is working.
Related to #2663",Commits squashed.,True,{}
i3/i3,https://github.com/i3/i3,2675,2017-02-05T13:20:33Z,2017-02-06T18:10:42Z,2017-02-06T18:10:46Z,MERGED,True,30,0,1,https://github.com/stapelberg,document our project governance model,1,[],https://github.com/i3/i3/pull/2675,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2675,This PR depends on i3/i3.github.io#30,This PR depends on i3/i3.github.io#30,True,{}
i3/i3,https://github.com/i3/i3,2679,2017-02-12T07:35:57Z,2017-02-12T19:24:35Z,2017-02-12T21:05:29Z,MERGED,True,24,0,1,https://github.com/Airblader,Add troubleshooting for title attributes during layout restoring.,1,[],https://github.com/i3/i3/pull/2679,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2679,,,True,{}
i3/i3,https://github.com/i3/i3,2679,2017-02-12T07:35:57Z,2017-02-12T19:24:35Z,2017-02-12T21:05:29Z,MERGED,True,24,0,1,https://github.com/Airblader,Add troubleshooting for title attributes during layout restoring.,1,[],https://github.com/i3/i3/pull/2679,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2679#issuecomment-279202228,,@nmschulte Since you're fairly active lately perhaps you can review this? :-),True,{}
i3/i3,https://github.com/i3/i3,2679,2017-02-12T07:35:57Z,2017-02-12T19:24:35Z,2017-02-12T21:05:29Z,MERGED,True,24,0,1,https://github.com/Airblader,Add troubleshooting for title attributes during layout restoring.,1,[],https://github.com/i3/i3/pull/2679,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2679#issuecomment-279202239,,"For context, this came up (once again) here: https://www.reddit.com/r/i3wm/comments/5tk1sy/layout_restore_help/",True,{}
i3/i3,https://github.com/i3/i3,2679,2017-02-12T07:35:57Z,2017-02-12T19:24:35Z,2017-02-12T21:05:29Z,MERGED,True,24,0,1,https://github.com/Airblader,Add troubleshooting for title attributes during layout restoring.,1,[],https://github.com/i3/i3/pull/2679,https://github.com/Airblader,4,https://github.com/i3/i3/pull/2679#issuecomment-279228238,,"Thanks. I agree that item 2 sounds like a bug, so please feel free and open an issue for it. I do believe the documentation is still helpful because it's a fairly common problem people run into. Most people won't use a -T flag and not all emulators have that anyway. :-)
We have an open issue to also swallow on window title changes; fixing that will make this documentation obsolete, so I've added a comment to the ticket.",True,{}
i3/i3,https://github.com/i3/i3,2679,2017-02-12T07:35:57Z,2017-02-12T19:24:35Z,2017-02-12T21:05:29Z,MERGED,True,24,0,1,https://github.com/Airblader,Add troubleshooting for title attributes during layout restoring.,1,[],https://github.com/i3/i3/pull/2679,https://github.com/Airblader,5,https://github.com/i3/i3/pull/2679#issuecomment-279228341,,"@stapelberg Github won't let me merge without a review by someone with write access to the repository, so unfortunately @nmschulte's review doesn't count. How should we deal with this for changes I authored without having to involve you? This effectively would leave only @acrisci to be able to greenlight the merge.",True,{}
i3/i3,https://github.com/i3/i3,2679,2017-02-12T07:35:57Z,2017-02-12T19:24:35Z,2017-02-12T21:05:29Z,MERGED,True,24,0,1,https://github.com/Airblader,Add troubleshooting for title attributes during layout restoring.,1,[],https://github.com/i3/i3/pull/2679,https://github.com/stapelberg,6,https://github.com/i3/i3/pull/2679#issuecomment-279241626,,"@stapelberg Github won't let me merge without a review by someone with write access to the repository, so unfortunately @nmschulte's review doesn't count. How should we deal with this for changes I authored without having to involve you?

For now, I’d like to keep “all changes must be reviewed” as a policy. In practice, reviews of your contributions are usually very quick. I think my availability for such reviews will get better within the next few weeks. One thing that would help is if you commented “rubber-stamp approval, @stapelberg”, in this order — that should make it into my inbox and signal that only a cursory glance is required :).",True,{}
i3/i3,https://github.com/i3/i3,2679,2017-02-12T07:35:57Z,2017-02-12T19:24:35Z,2017-02-12T21:05:29Z,MERGED,True,24,0,1,https://github.com/Airblader,Add troubleshooting for title attributes during layout restoring.,1,[],https://github.com/i3/i3/pull/2679,https://github.com/Airblader,7,https://github.com/i3/i3/pull/2679#issuecomment-279241712,,I agree that the policy should be kept (code reviews are crucial). I'll try to get review help from people like @nmschulte (assuming he's OK with it :-) ) and then proceed as you requested.,True,{}
i3/i3,https://github.com/i3/i3,2679,2017-02-12T07:35:57Z,2017-02-12T19:24:35Z,2017-02-12T21:05:29Z,MERGED,True,24,0,1,https://github.com/Airblader,Add troubleshooting for title attributes during layout restoring.,1,[],https://github.com/i3/i3/pull/2679,https://github.com/nmschulte,8,https://github.com/i3/i3/pull/2679#issuecomment-279248921,,"Certainly, please don't hesitate to request reviews from me: I'm happy and willing to contribute.",True,{'THUMBS_UP': ['https://github.com/Airblader']}
i3/i3,https://github.com/i3/i3,2680,2017-02-12T19:50:26Z,2017-02-20T17:06:58Z,2017-02-20T17:06:58Z,MERGED,True,29,13,3,https://github.com/Airblader,[#2677] Allow using left/right scrolling like up/down scrolling.,2,[],https://github.com/i3/i3/pull/2680,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2680,Not ready to be merged because untested.,Not ready to be merged because untested.,True,{}
i3/i3,https://github.com/i3/i3,2680,2017-02-12T19:50:26Z,2017-02-20T17:06:58Z,2017-02-20T17:06:58Z,MERGED,True,29,13,3,https://github.com/Airblader,[#2677] Allow using left/right scrolling like up/down scrolling.,2,[],https://github.com/i3/i3/pull/2680,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2680#issuecomment-280901950,Not ready to be merged because untested.,@nmschulte :-),True,{}
i3/i3,https://github.com/i3/i3,2680,2017-02-12T19:50:26Z,2017-02-20T17:06:58Z,2017-02-20T17:06:58Z,MERGED,True,29,13,3,https://github.com/Airblader,[#2677] Allow using left/right scrolling like up/down scrolling.,2,[],https://github.com/i3/i3/pull/2680,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2680#issuecomment-280905102,Not ready to be merged because untested.,"rubber-stamp approval, @stapelberg",True,{}
i3/i3,https://github.com/i3/i3,2684,2017-02-16T16:09:08Z,2017-02-16T16:23:30Z,2017-02-17T08:56:26Z,CLOSED,False,2,0,1,https://github.com/layus,Temporary fix for #2276,1,[],https://github.com/i3/i3/pull/2684,https://github.com/layus,1,https://github.com/i3/i3/pull/2684,"@Airblader  It would be really nice to have this merged. I know it is not a proper fix, but at least we would not experience repeated segfaults in the meantime. #2276 has been open for a full year. How long will it take to receive a proper fix ?","@Airblader  It would be really nice to have this merged. I know it is not a proper fix, but at least we would not experience repeated segfaults in the meantime. #2276 has been open for a full year. How long will it take to receive a proper fix ?",True,{}
i3/i3,https://github.com/i3/i3,2684,2017-02-16T16:09:08Z,2017-02-16T16:23:30Z,2017-02-17T08:56:26Z,CLOSED,False,2,0,1,https://github.com/layus,Temporary fix for #2276,1,[],https://github.com/i3/i3/pull/2684,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2684#issuecomment-280379695,"@Airblader  It would be really nice to have this merged. I know it is not a proper fix, but at least we would not experience repeated segfaults in the meantime. #2276 has been open for a full year. How long will it take to receive a proper fix ?","Thanks for your contribution.
I'm going to decline this because I'd like to avoid merging workarounds. They tend to make something better in the short run, but overall it hides an issue that isn't understood and might only lead to making it even harder to figure out the problem.

How long will it take to receive a proper fix ?

As soon as somebody spent the time to figure out the root cause and comes up with the fix for it (which doesn't necessarily have to be the same person). Everybody is welcome to do so. :-)
That said, if the issue is a big pain for you and you don't want to invest the time, you can run your patch locally. I hope you understand why I don't want to merge it, though.",True,{}
i3/i3,https://github.com/i3/i3,2684,2017-02-16T16:09:08Z,2017-02-16T16:23:30Z,2017-02-17T08:56:26Z,CLOSED,False,2,0,1,https://github.com/layus,Temporary fix for #2276,1,[],https://github.com/i3/i3/pull/2684,https://github.com/layus,3,https://github.com/i3/i3/pull/2684#issuecomment-280380889,"@Airblader  It would be really nice to have this merged. I know it is not a proper fix, but at least we would not experience repeated segfaults in the meantime. #2276 has been open for a full year. How long will it take to receive a proper fix ?","Yep, I understand. I can indeed patch locally, but I find this quite deceptive for other users who may encounter the same issue.",True,{}
i3/i3,https://github.com/i3/i3,2684,2017-02-16T16:09:08Z,2017-02-16T16:23:30Z,2017-02-17T08:56:26Z,CLOSED,False,2,0,1,https://github.com/layus,Temporary fix for #2276,1,[],https://github.com/i3/i3/pull/2684,https://github.com/Airblader,4,https://github.com/i3/i3/pull/2684#issuecomment-280381418,"@Airblader  It would be really nice to have this merged. I know it is not a proper fix, but at least we would not experience repeated segfaults in the meantime. #2276 has been open for a full year. How long will it take to receive a proper fix ?","Once you have the workaround in upstream, nobody wants to spend time on the issue ever again, though. :-)",True,{}
i3/i3,https://github.com/i3/i3,2684,2017-02-16T16:09:08Z,2017-02-16T16:23:30Z,2017-02-17T08:56:26Z,CLOSED,False,2,0,1,https://github.com/layus,Temporary fix for #2276,1,[],https://github.com/i3/i3/pull/2684,https://github.com/layus,5,https://github.com/i3/i3/pull/2684#issuecomment-280592594,"@Airblader  It would be really nice to have this merged. I know it is not a proper fix, but at least we would not experience repeated segfaults in the meantime. #2276 has been open for a full year. How long will it take to receive a proper fix ?","Unless the issue comes out again. Otherwise the workaround is a real fix, even if no-one knows why ;-). Half kidding here",True,{}
i3/i3,https://github.com/i3/i3,2684,2017-02-16T16:09:08Z,2017-02-16T16:23:30Z,2017-02-17T08:56:26Z,CLOSED,False,2,0,1,https://github.com/layus,Temporary fix for #2276,1,[],https://github.com/i3/i3/pull/2684,https://github.com/Airblader,6,https://github.com/i3/i3/pull/2684#issuecomment-280592840,"@Airblader  It would be really nice to have this merged. I know it is not a proper fix, but at least we would not experience repeated segfaults in the meantime. #2276 has been open for a full year. How long will it take to receive a proper fix ?","Once you stop understanding the software you deliver, you're in big trouble. :-)",True,{}
i3/i3,https://github.com/i3/i3,2685,2017-02-17T08:02:18Z,2017-02-17T08:06:40Z,2017-02-17T08:06:41Z,MERGED,True,2,5,1,https://github.com/Airblader,Copy the entire window content on Expose events.,1,[],https://github.com/i3/i3/pull/2685,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2685,"With commit d58dbc3 we started ignoring Expose events in a sequence
except for the last one. Since we only copied the affected part of
the window in the Expose event handler, this caused incorrectly
rendered window decorations.
Instead of reverting to the old behavior, we now copy the entire window
content on this single, last event with the following rationale:

It's cheaper to copy a larger chunk once than multiple smaller
chunks doing one server roundtrip each.
That's how we do it when rendering out decoration on decoration
changes as well.

fixes #2683","With commit d58dbc3 we started ignoring Expose events in a sequence
except for the last one. Since we only copied the affected part of
the window in the Expose event handler, this caused incorrectly
rendered window decorations.
Instead of reverting to the old behavior, we now copy the entire window
content on this single, last event with the following rationale:

It's cheaper to copy a larger chunk once than multiple smaller
chunks doing one server roundtrip each.
That's how we do it when rendering out decoration on decoration
changes as well.

fixes #2683",True,{}
i3/i3,https://github.com/i3/i3,2685,2017-02-17T08:02:18Z,2017-02-17T08:06:40Z,2017-02-17T08:06:41Z,MERGED,True,2,5,1,https://github.com/Airblader,Copy the entire window content on Expose events.,1,[],https://github.com/i3/i3/pull/2685,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2685#issuecomment-280581689,"With commit d58dbc3 we started ignoring Expose events in a sequence
except for the last one. Since we only copied the affected part of
the window in the Expose event handler, this caused incorrectly
rendered window decorations.
Instead of reverting to the old behavior, we now copy the entire window
content on this single, last event with the following rationale:

It's cheaper to copy a larger chunk once than multiple smaller
chunks doing one server roundtrip each.
That's how we do it when rendering out decoration on decoration
changes as well.

fixes #2683",@nmschulte :-),True,{}
i3/i3,https://github.com/i3/i3,2690,2017-02-22T11:13:55Z,2017-02-22T11:15:57Z,2017-02-22T11:15:57Z,CLOSED,False,13,0,1,https://github.com/sudo-nice,docs: explain adding containers into stcratchpad,1,[],https://github.com/i3/i3/pull/2690,https://github.com/sudo-nice,1,https://github.com/i3/i3/pull/2690,,,True,{}
i3/i3,https://github.com/i3/i3,2690,2017-02-22T11:13:55Z,2017-02-22T11:15:57Z,2017-02-22T11:15:57Z,CLOSED,False,13,0,1,https://github.com/sudo-nice,docs: explain adding containers into stcratchpad,1,[],https://github.com/i3/i3/pull/2690,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2690#issuecomment-281640892,,"Thanks for your contribution. I'm going to have to reject this because floating nested containers are not something we actually (want to) support, it just more or less happens to work. For this reason I don't want to document this behavior, because that would turn it into supported behavior.",True,{}
i3/i3,https://github.com/i3/i3,2692,2017-02-24T00:02:40Z,2017-02-24T07:36:32Z,2017-02-24T07:36:32Z,MERGED,True,2,2,1,https://github.com/Airblader,Fixes a small mixup in the assertion description.,1,[],https://github.com/i3/i3/pull/2692,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2692,relates to PR #2649,relates to PR #2649,True,{}
i3/i3,https://github.com/i3/i3,2692,2017-02-24T00:02:40Z,2017-02-24T07:36:32Z,2017-02-24T07:36:32Z,MERGED,True,2,2,1,https://github.com/Airblader,Fixes a small mixup in the assertion description.,1,[],https://github.com/i3/i3/pull/2692,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2692#issuecomment-282162128,relates to PR #2649,@s3rb31 Saw this virtually ten seconds after merging the PR. :-),True,{'LAUGH': ['https://github.com/s3rb31']}
i3/i3,https://github.com/i3/i3,2692,2017-02-24T00:02:40Z,2017-02-24T07:36:32Z,2017-02-24T07:36:32Z,MERGED,True,2,2,1,https://github.com/Airblader,Fixes a small mixup in the assertion description.,1,[],https://github.com/i3/i3/pull/2692,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2692#issuecomment-282162830,relates to PR #2649,"rubber-stamp approval, @stapelberg",True,{}
i3/i3,https://github.com/i3/i3,2698,2017-03-06T06:42:56Z,2017-03-06T06:50:50Z,2017-03-06T06:50:59Z,MERGED,True,2,0,1,https://github.com/tmerr,docs/ipc: Document the 'primary' flag,1,[],https://github.com/i3/i3/pull/2698,https://github.com/tmerr,1,https://github.com/i3/i3/pull/2698,Resolves #2697,Resolves #2697,True,{}
i3/i3,https://github.com/i3/i3,2698,2017-03-06T06:42:56Z,2017-03-06T06:50:50Z,2017-03-06T06:50:59Z,MERGED,True,2,0,1,https://github.com/tmerr,docs/ipc: Document the 'primary' flag,1,[],https://github.com/i3/i3/pull/2698,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2698#issuecomment-284316232,Resolves #2697,Thanks!,True,{}
i3/i3,https://github.com/i3/i3,2703,2017-03-10T09:42:46Z,2017-05-02T07:08:43Z,2017-05-02T07:08:43Z,MERGED,True,44,22,9,https://github.com/Airblader,Introduce --exclude-titlebar flag for mouse bindings.,1,[],https://github.com/i3/i3/pull/2703,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2703,"This introduces the flag --exclude-titlebar for mouse bindings which
allows bindings like
bindsym --whole-window --border --exclude-titlebar button3 focus

fixes #2347","This introduces the flag --exclude-titlebar for mouse bindings which
allows bindings like
bindsym --whole-window --border --exclude-titlebar button3 focus

fixes #2347",True,{}
i3/i3,https://github.com/i3/i3,2703,2017-03-10T09:42:46Z,2017-05-02T07:08:43Z,2017-05-02T07:08:43Z,MERGED,True,44,22,9,https://github.com/Airblader,Introduce --exclude-titlebar flag for mouse bindings.,1,[],https://github.com/i3/i3/pull/2703,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2703#issuecomment-285623649,"This introduces the flag --exclude-titlebar for mouse bindings which
allows bindings like
bindsym --whole-window --border --exclude-titlebar button3 focus

fixes #2347",I still have to actually test this.,True,{}
i3/i3,https://github.com/i3/i3,2703,2017-03-10T09:42:46Z,2017-05-02T07:08:43Z,2017-05-02T07:08:43Z,MERGED,True,44,22,9,https://github.com/Airblader,Introduce --exclude-titlebar flag for mouse bindings.,1,[],https://github.com/i3/i3/pull/2703,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2703#issuecomment-298257777,"This introduces the flag --exclude-titlebar for mouse bindings which
allows bindings like
bindsym --whole-window --border --exclude-titlebar button3 focus

fixes #2347","I've finally come around to test this.
rubber-stamp approval, @stapelberg",True,{}
i3/i3,https://github.com/i3/i3,2705,2017-03-12T22:17:06Z,2017-04-03T08:08:57Z,2017-04-03T08:08:57Z,CLOSED,False,26,7,3,https://github.com/wolfm89,i3bar: accept 'primary' for output config option,1,['waiting'],https://github.com/i3/i3/pull/2705,https://github.com/wolfm89,1,https://github.com/i3/i3/pull/2705,"This adds the previously adressed but unresolved feature to accept 'primary' as output option in the i3bar config.
fixes #2311
@Airblader @acrisci","This adds the previously adressed but unresolved feature to accept 'primary' as output option in the i3bar config.
fixes #2311
@Airblader @acrisci",True,{}
i3/i3,https://github.com/i3/i3,2705,2017-03-12T22:17:06Z,2017-04-03T08:08:57Z,2017-04-03T08:08:57Z,CLOSED,False,26,7,3,https://github.com/wolfm89,i3bar: accept 'primary' for output config option,1,['waiting'],https://github.com/i3/i3/pull/2705,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2705#issuecomment-287057404,"This adds the previously adressed but unresolved feature to accept 'primary' as output option in the i3bar config.
fixes #2311
@Airblader @acrisci","Can you make Travis pass, please?",True,{}
i3/i3,https://github.com/i3/i3,2705,2017-03-12T22:17:06Z,2017-04-03T08:08:57Z,2017-04-03T08:08:57Z,CLOSED,False,26,7,3,https://github.com/wolfm89,i3bar: accept 'primary' for output config option,1,['waiting'],https://github.com/i3/i3/pull/2705,https://github.com/nmschulte,3,https://github.com/i3/i3/pull/2705#issuecomment-291026143,"This adds the previously adressed but unresolved feature to accept 'primary' as output option in the i3bar config.
fixes #2311
@Airblader @acrisci","I've fixed the offending src, here: https://github.com/nmschulte/i3/tree/feature/output-primary
See #2725.",True,{}
i3/i3,https://github.com/i3/i3,2705,2017-03-12T22:17:06Z,2017-04-03T08:08:57Z,2017-04-03T08:08:57Z,CLOSED,False,26,7,3,https://github.com/wolfm89,i3bar: accept 'primary' for output config option,1,['waiting'],https://github.com/i3/i3/pull/2705,https://github.com/Airblader,4,https://github.com/i3/i3/pull/2705#issuecomment-291075440,"This adds the previously adressed but unresolved feature to accept 'primary' as output option in the i3bar config.
fixes #2311
@Airblader @acrisci",Thanks. I'll close this PR and give the new one a look soon.,True,{}
i3/i3,https://github.com/i3/i3,2720,2017-03-26T14:08:46Z,2017-03-30T13:19:50Z,2017-03-30T13:19:58Z,MERGED,True,4,1,2,https://github.com/Arlon1,Adding new terminals to i3-sensible-terminal,1,[],https://github.com/i3/i3/pull/2720,https://github.com/Arlon1,1,https://github.com/i3/i3/pull/2720,,,True,{}
i3/i3,https://github.com/i3/i3,2720,2017-03-26T14:08:46Z,2017-03-30T13:19:50Z,2017-03-30T13:19:58Z,MERGED,True,4,1,2,https://github.com/Arlon1,Adding new terminals to i3-sensible-terminal,1,[],https://github.com/i3/i3/pull/2720,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2720#issuecomment-290408116,,Thank you!,True,{}
i3/i3,https://github.com/i3/i3,2725,2017-04-03T00:30:16Z,2017-04-07T06:54:07Z,2017-04-07T14:57:59Z,MERGED,True,26,7,3,https://github.com/nmschulte,Feature/output primary,2,[],https://github.com/i3/i3/pull/2725,https://github.com/nmschulte,1,https://github.com/i3/i3/pull/2725,"#2705 with the clang-format fixes
fixes #2311
@lebenlechzer","#2705 with the clang-format fixes
fixes #2311
@lebenlechzer",True,{}
i3/i3,https://github.com/i3/i3,2725,2017-04-03T00:30:16Z,2017-04-07T06:54:07Z,2017-04-07T14:57:59Z,MERGED,True,26,7,3,https://github.com/nmschulte,Feature/output primary,2,[],https://github.com/i3/i3/pull/2725,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2725#issuecomment-292456792,"#2705 with the clang-format fixes
fixes #2311
@lebenlechzer",Thanks!,True,{}
i3/i3,https://github.com/i3/i3,2731,2017-04-07T02:29:18Z,2017-04-11T09:32:09Z,2017-04-11T09:32:09Z,MERGED,True,15,10,1,https://github.com/nmschulte,Check X11 create window call,1,['waiting'],https://github.com/i3/i3/pull/2731,https://github.com/nmschulte,1,https://github.com/i3/i3/pull/2731,"no idea if you want this, but here it is for #2729","no idea if you want this, but here it is for #2729",True,{}
i3/i3,https://github.com/i3/i3,2731,2017-04-07T02:29:18Z,2017-04-11T09:32:09Z,2017-04-11T09:32:09Z,MERGED,True,15,10,1,https://github.com/nmschulte,Check X11 create window call,1,['waiting'],https://github.com/i3/i3/pull/2731,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2731#issuecomment-292456519,"no idea if you want this, but here it is for #2729",The formatting is wrong now. :-),True,{}
i3/i3,https://github.com/i3/i3,2731,2017-04-07T02:29:18Z,2017-04-11T09:32:09Z,2017-04-11T09:32:09Z,MERGED,True,15,10,1,https://github.com/nmschulte,Check X11 create window call,1,['waiting'],https://github.com/i3/i3/pull/2731,https://github.com/DmitryHetman,3,https://github.com/i3/i3/pull/2731#issuecomment-293097051,"no idea if you want this, but here it is for #2729",X11 obsolete.,True,{}
i3/i3,https://github.com/i3/i3,2731,2017-04-07T02:29:18Z,2017-04-11T09:32:09Z,2017-04-11T09:32:09Z,MERGED,True,15,10,1,https://github.com/nmschulte,Check X11 create window call,1,['waiting'],https://github.com/i3/i3/pull/2731,https://github.com/Airblader,4,https://github.com/i3/i3/pull/2731#issuecomment-293203714,"no idea if you want this, but here it is for #2729","@nmschulte Please don't forget to leave a comment when you updated a PR, otherwise I won't be notified. :-)",True,{}
i3/i3,https://github.com/i3/i3,2735,2017-04-11T05:18:34Z,2017-04-13T19:16:35Z,2017-04-13T20:53:45Z,CLOSED,False,17,1,5,https://github.com/nmschulte,add title_vertical_margin configuration,1,[],https://github.com/i3/i3/pull/2735,https://github.com/nmschulte,1,https://github.com/i3/i3/pull/2735,"for #2734, allows to specify the additional vertical margin over the font height used when rendering titlebars
I'm sure this will need work before, if ever, it goes in.  beyond just the concept, these need consideration:

 userguide update
 parser tests
 review of config parser state modifications
 overflow/upper limit on titlebar height","for #2734, allows to specify the additional vertical margin over the font height used when rendering titlebars
I'm sure this will need work before, if ever, it goes in.  beyond just the concept, these need consideration:

 userguide update
 parser tests
 review of config parser state modifications
 overflow/upper limit on titlebar height",True,{}
i3/i3,https://github.com/i3/i3,2735,2017-04-11T05:18:34Z,2017-04-13T19:16:35Z,2017-04-13T20:53:45Z,CLOSED,False,17,1,5,https://github.com/nmschulte,add title_vertical_margin configuration,1,[],https://github.com/i3/i3/pull/2735,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2735#issuecomment-293497077,"for #2734, allows to specify the additional vertical margin over the font height used when rendering titlebars
I'm sure this will need work before, if ever, it goes in.  beyond just the concept, these need consideration:

 userguide update
 parser tests
 review of config parser state modifications
 overflow/upper limit on titlebar height",I don't really like the idea of making this pixel value configurable. I think the better option is to disable titles for stacked / tabbed containers (per configuration).,True,{}
i3/i3,https://github.com/i3/i3,2735,2017-04-11T05:18:34Z,2017-04-13T19:16:35Z,2017-04-13T20:53:45Z,CLOSED,False,17,1,5,https://github.com/nmschulte,add title_vertical_margin configuration,1,[],https://github.com/i3/i3/pull/2735,https://github.com/nmschulte,3,https://github.com/i3/i3/pull/2735#issuecomment-293684354,"for #2734, allows to specify the additional vertical margin over the font height used when rendering titlebars
I'm sure this will need work before, if ever, it goes in.  beyond just the concept, these need consideration:

 userguide update
 parser tests
 review of config parser state modifications
 overflow/upper limit on titlebar height","disable titles for stacked / tabbed containers

It seems wrong to limit this feature to stacking or tabbing containers; is there something about splitting containers that precludes this from being useful there?
Note, originally, I interpreted the issue to be about the window titles within a container, but it seems the request is to elide the container title, and retain its windows'.  I think I understand now; I assume the code-paths for workspace-contained windows and container-contained windows is clear cut and effecting this condition will be straight-forward.
I can effect this change no problem, but I think I've missed something related to testing of the config file syntax; the automated tests note these failures: -- the first is related to hide_edge_borders (and the test uses hide_edge_border (no trailing s), but I think maybe this is the intentional error for the test)

not ok 22 - errors dont harm subsequent statements
not ok 25 - error message (2+2 context) ok
not ok 26 - error message (0+0 context) ok
not ok 27 - error message (1+0 context) ok
not ok 29 - error message (0+2 context) ok",True,{}
i3/i3,https://github.com/i3/i3,2735,2017-04-11T05:18:34Z,2017-04-13T19:16:35Z,2017-04-13T20:53:45Z,CLOSED,False,17,1,5,https://github.com/nmschulte,add title_vertical_margin configuration,1,[],https://github.com/i3/i3/pull/2735,https://github.com/Airblader,4,https://github.com/i3/i3/pull/2735#issuecomment-293810345,"for #2734, allows to specify the additional vertical margin over the font height used when rendering titlebars
I'm sure this will need work before, if ever, it goes in.  beyond just the concept, these need consideration:

 userguide update
 parser tests
 review of config parser state modifications
 overflow/upper limit on titlebar height","It seems wrong to limit this feature to stacking or tabbing containers; is there something about splitting containers that precludes this from being useful there?

Normal window titles can already be hidden. Only for tabbed and stacked containers with more than one child we currently force window titles no matter what the border configuration is.",True,{}
i3/i3,https://github.com/i3/i3,2735,2017-04-11T05:18:34Z,2017-04-13T19:16:35Z,2017-04-13T20:53:45Z,CLOSED,False,17,1,5,https://github.com/nmschulte,add title_vertical_margin configuration,1,[],https://github.com/i3/i3/pull/2735,https://github.com/nmschulte,5,https://github.com/i3/i3/pull/2735#issuecomment-293996236,"for #2734, allows to specify the additional vertical margin over the font height used when rendering titlebars
I'm sure this will need work before, if ever, it goes in.  beyond just the concept, these need consideration:

 userguide update
 parser tests
 review of config parser state modifications
 overflow/upper limit on titlebar height",Closed in favor of a new PR.,True,{}
i3/i3,https://github.com/i3/i3,2735,2017-04-11T05:18:34Z,2017-04-13T19:16:35Z,2017-04-13T20:53:45Z,CLOSED,False,17,1,5,https://github.com/nmschulte,add title_vertical_margin configuration,1,[],https://github.com/i3/i3/pull/2735,https://github.com/jolange,6,https://github.com/i3/i3/pull/2735#issuecomment-294018041,"for #2734, allows to specify the additional vertical margin over the font height used when rendering titlebars
I'm sure this will need work before, if ever, it goes in.  beyond just the concept, these need consideration:

 userguide update
 parser tests
 review of config parser state modifications
 overflow/upper limit on titlebar height","I think the better option is to disable titles for stacked / tabbed containers (per configuration).

But that has been rejected in the past, right? (E.g.  #2664)",True,{'THUMBS_UP': ['https://github.com/nmschulte']}
i3/i3,https://github.com/i3/i3,2735,2017-04-11T05:18:34Z,2017-04-13T19:16:35Z,2017-04-13T20:53:45Z,CLOSED,False,17,1,5,https://github.com/nmschulte,add title_vertical_margin configuration,1,[],https://github.com/i3/i3/pull/2735,https://github.com/nmschulte,7,https://github.com/i3/i3/pull/2735#issuecomment-294018605,"for #2734, allows to specify the additional vertical margin over the font height used when rendering titlebars
I'm sure this will need work before, if ever, it goes in.  beyond just the concept, these need consideration:

 userguide update
 parser tests
 review of config parser state modifications
 overflow/upper limit on titlebar height","Possible difference: this change is to hide the title part only, not the entire bar.  The change you cite is to remove the bar entirely.",True,{}
i3/i3,https://github.com/i3/i3,2739,2017-04-13T02:08:44Z,2017-04-13T04:41:25Z,2017-04-13T04:41:25Z,CLOSED,False,17,0,1,https://github.com/sqwishy,i3-random-terminal,1,[],https://github.com/i3/i3/pull/2739,https://github.com/sqwishy,1,https://github.com/i3/i3/pull/2739,This is important for when i3 needs a terminal but which one should be a surprise.,This is important for when i3 needs a terminal but which one should be a surprise.,True,{'THUMBS_UP': ['https://github.com/nickhuber']}
i3/i3,https://github.com/i3/i3,2739,2017-04-13T02:08:44Z,2017-04-13T04:41:25Z,2017-04-13T04:41:25Z,CLOSED,False,17,0,1,https://github.com/sqwishy,i3-random-terminal,1,[],https://github.com/i3/i3/pull/2739,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2739#issuecomment-293779319,This is important for when i3 needs a terminal but which one should be a surprise.,"I'm not sure this is a joke or serious, but I don't see any reason to have such script I'm i3.",True,{'HEART': ['https://github.com/sqwishy']}
i3/i3,https://github.com/i3/i3,2752,2017-04-27T15:43:40Z,2017-04-28T15:34:22Z,2017-04-28T15:34:29Z,MERGED,True,243,6,3,https://github.com/mihaicmn,Fix changing of root workspace layout from stacked/tabbed,1,[],https://github.com/i3/i3/pull/2752,https://github.com/mihaicmn,1,https://github.com/i3/i3/pull/2752,"Whenever the layout of an empty workspace is changed we need to update the workspace_layout accordingly.
Fixes #2464.","Whenever the layout of an empty workspace is changed we need to update the workspace_layout accordingly.
Fixes #2464.",True,{}
i3/i3,https://github.com/i3/i3,2752,2017-04-27T15:43:40Z,2017-04-28T15:34:22Z,2017-04-28T15:34:29Z,MERGED,True,243,6,3,https://github.com/mihaicmn,Fix changing of root workspace layout from stacked/tabbed,1,[],https://github.com/i3/i3/pull/2752,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2752#issuecomment-298030937,"Whenever the layout of an empty workspace is changed we need to update the workspace_layout accordingly.
Fixes #2464.",Thank you!,True,{}
i3/i3,https://github.com/i3/i3,2756,2017-04-29T16:28:44Z,2017-04-30T21:16:46Z,2017-04-30T21:16:46Z,CLOSED,False,21,7,4,https://github.com/muhmud,Feature Request: Key Release IPC message for Mod keys,2,['waiting'],https://github.com/i3/i3/pull/2756,https://github.com/muhmud,1,https://github.com/i3/i3/pull/2756,"As requested, pull request for this issue of the same name.","As requested, pull request for this issue of the same name.",True,{}
i3/i3,https://github.com/i3/i3,2756,2017-04-29T16:28:44Z,2017-04-30T21:16:46Z,2017-04-30T21:16:46Z,CLOSED,False,21,7,4,https://github.com/muhmud,Feature Request: Key Release IPC message for Mod keys,2,['waiting'],https://github.com/i3/i3/pull/2756,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2756#issuecomment-298256228,"As requested, pull request for this issue of the same name.","Please update the documentation.
Please add tests to verify this behavior.
Please rebase and squash the commits so the git history stays clean and the patch can be applied.
Please remove the incorrectly introduced tabs.",True,{}
i3/i3,https://github.com/i3/i3,2756,2017-04-29T16:28:44Z,2017-04-30T21:16:46Z,2017-04-30T21:16:46Z,CLOSED,False,21,7,4,https://github.com/muhmud,Feature Request: Key Release IPC message for Mod keys,2,['waiting'],https://github.com/i3/i3/pull/2756,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2756#issuecomment-298256715,"As requested, pull request for this issue of the same name.","I'm actually even somewhat second-guessing my decision. I – mistakenly – assumed we already had such an event for the keydown itself. But currently we only have the binding event. What if we have a binding using --release (possibly just mapped to nop), shouldn't the binding event in this scenario come at the correct time?",True,{}
i3/i3,https://github.com/i3/i3,2756,2017-04-29T16:28:44Z,2017-04-30T21:16:46Z,2017-04-30T21:16:46Z,CLOSED,False,21,7,4,https://github.com/muhmud,Feature Request: Key Release IPC message for Mod keys,2,['waiting'],https://github.com/i3/i3/pull/2756,https://github.com/Airblader,4,https://github.com/i3/i3/pull/2756#issuecomment-298257736,"As requested, pull request for this issue of the same name.","The more I think about it the less I think we should actually implement this. There's nothing i3-specific about this, so I feel like this would be suited better for an external script or tool to watch for these events. That way it's also agnostic to the window manager.
I'm sorry for the initial »Go« for this. I hope it didn't cause too much trouble since you already said you had the patch locally available.",True,{}
i3/i3,https://github.com/i3/i3,2757,2017-04-30T13:23:24Z,2017-05-02T08:06:01Z,2017-05-02T08:06:01Z,MERGED,True,25,1,1,https://github.com/Jereq,Fix i3-dmenu-desktop quoted command name,1,"['waiting', 'discussion']",https://github.com/i3/i3/pull/2757,https://github.com/Jereq,1,https://github.com/i3/i3/pull/2757,"According to the Desktop Entry Specification
https://specifications.freedesktop.org/desktop-entry-spec/desktop-entry-spec-latest.html#exec-variables
the executable name or path of the executable may be quoted. This is not
properly respected when i3-dmenu-desktop extracts the command name from
the Exec entry.
Examples of values that fail and what they currently result in:

""bar"" -> ""bar""
""foo/bar"" -> bar""
""foo foobar/bar"" -> ""foo
""foo\sbar"" -> ""foo\sbar""
foo\sbar -> foo\sbar
""foo\\\\bar"" -> ""foo\\\\bar""","According to the Desktop Entry Specification
https://specifications.freedesktop.org/desktop-entry-spec/desktop-entry-spec-latest.html#exec-variables
the executable name or path of the executable may be quoted. This is not
properly respected when i3-dmenu-desktop extracts the command name from
the Exec entry.
Examples of values that fail and what they currently result in:

""bar"" -> ""bar""
""foo/bar"" -> bar""
""foo foobar/bar"" -> ""foo
""foo\sbar"" -> ""foo\sbar""
foo\sbar -> foo\sbar
""foo\\\\bar"" -> ""foo\\\\bar""",True,{}
i3/i3,https://github.com/i3/i3,2757,2017-04-30T13:23:24Z,2017-05-02T08:06:01Z,2017-05-02T08:06:01Z,MERGED,True,25,1,1,https://github.com/Jereq,Fix i3-dmenu-desktop quoted command name,1,"['waiting', 'discussion']",https://github.com/i3/i3/pull/2757,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2757#issuecomment-298256011,"According to the Desktop Entry Specification
https://specifications.freedesktop.org/desktop-entry-spec/desktop-entry-spec-latest.html#exec-variables
the executable name or path of the executable may be quoted. This is not
properly respected when i3-dmenu-desktop extracts the command name from
the Exec entry.
Examples of values that fail and what they currently result in:

""bar"" -> ""bar""
""foo/bar"" -> bar""
""foo foobar/bar"" -> ""foo
""foo\sbar"" -> ""foo\sbar""
foo\sbar -> foo\sbar
""foo\\\\bar"" -> ""foo\\\\bar""","Also see #2329. As explained there, we want to avoid breaking user configs unless we have a specific bug that happens rather than a theoretical one (albeit not conforming to the standard is, indeed, not ideal). Do you have such a situation?",True,{}
i3/i3,https://github.com/i3/i3,2757,2017-04-30T13:23:24Z,2017-05-02T08:06:01Z,2017-05-02T08:06:01Z,MERGED,True,25,1,1,https://github.com/Jereq,Fix i3-dmenu-desktop quoted command name,1,"['waiting', 'discussion']",https://github.com/i3/i3/pull/2757,https://github.com/Jereq,3,https://github.com/i3/i3/pull/2757#issuecomment-298259884,"According to the Desktop Entry Specification
https://specifications.freedesktop.org/desktop-entry-spec/desktop-entry-spec-latest.html#exec-variables
the executable name or path of the executable may be quoted. This is not
properly respected when i3-dmenu-desktop extracts the command name from
the Exec entry.
Examples of values that fail and what they currently result in:

""bar"" -> ""bar""
""foo/bar"" -> bar""
""foo foobar/bar"" -> ""foo
""foo\sbar"" -> ""foo\sbar""
foo\sbar -> foo\sbar
""foo\\\\bar"" -> ""foo\\\\bar""","Hi,
Thanks for the response.
I believe #2329 is describing a different, but related issue. #2329 discusses how the command is forwarded to i3, while this is specifically about how the command is parsed to get the executable name out. As such, this should have less room for breaking existing configs.
I tried to come up with scenarios where this would cause problems, and the only one I can see is if someone relies on one of the faulty examples I listed above when using dmenu. It would be a bit weird, but it is possible.
This will not affect how the programs are launched, once found in dmenu. That was the main reason I only changed how the command to name translation works, rather than ""fixing"" the string value parsing more generally (which would be needed to fully conform to the spec).
This is also not a theoretical bug. Jetbrains creates .desktop files with quoted paths for at least two of their IDEs. The  following is an example:
[Desktop Entry]
Version=1.0
Type=Application
Name=IntelliJ IDEA Community Edition
Icon=/opt/idea-IC-163.7743.44/bin/idea.png
Exec=""/opt/idea-IC-163.7743.44/bin/idea.sh"" %f
Comment=The Drive to Develop
Categories=Development;IDE;
Terminal=false
StartupWMClass=jetbrains-idea-ce

This example triggers the second example above resulting in idea.sh"" appearing in dmenu. Depending on the installation path, example 3 and 6 can be triggered as well.
BR
// Sebastian",True,{}
i3/i3,https://github.com/i3/i3,2757,2017-04-30T13:23:24Z,2017-05-02T08:06:01Z,2017-05-02T08:06:01Z,MERGED,True,25,1,1,https://github.com/Jereq,Fix i3-dmenu-desktop quoted command name,1,"['waiting', 'discussion']",https://github.com/i3/i3/pull/2757,https://github.com/Airblader,4,https://github.com/i3/i3/pull/2757#issuecomment-298543030,"According to the Desktop Entry Specification
https://specifications.freedesktop.org/desktop-entry-spec/desktop-entry-spec-latest.html#exec-variables
the executable name or path of the executable may be quoted. This is not
properly respected when i3-dmenu-desktop extracts the command name from
the Exec entry.
Examples of values that fail and what they currently result in:

""bar"" -> ""bar""
""foo/bar"" -> bar""
""foo foobar/bar"" -> ""foo
""foo\sbar"" -> ""foo\sbar""
foo\sbar -> foo\sbar
""foo\\\\bar"" -> ""foo\\\\bar""","I see, I misunderstood the PR when giving it a quick look. Thanks for the explanation!",True,{}
i3/i3,https://github.com/i3/i3,2759,2017-04-30T21:21:48Z,2017-05-04T21:08:51Z,2017-05-04T21:08:51Z,MERGED,True,9,0,1,https://github.com/Airblader,Added a hint about the required config v4 version hint.,1,[],https://github.com/i3/i3/pull/2759,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2759,fixes #2751,fixes #2751,True,{}
i3/i3,https://github.com/i3/i3,2759,2017-04-30T21:21:48Z,2017-05-04T21:08:51Z,2017-05-04T21:08:51Z,MERGED,True,9,0,1,https://github.com/Airblader,Added a hint about the required config v4 version hint.,1,[],https://github.com/i3/i3/pull/2759,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2759#issuecomment-298258043,fixes #2751,"rubber-stamp approval, @stapelberg",True,{}
i3/i3,https://github.com/i3/i3,2759,2017-04-30T21:21:48Z,2017-05-04T21:08:51Z,2017-05-04T21:08:51Z,MERGED,True,9,0,1,https://github.com/Airblader,Added a hint about the required config v4 version hint.,1,[],https://github.com/i3/i3/pull/2759,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2759#issuecomment-299286980,fixes #2751,@stapelberg I've rephrased it now.,True,{}
i3/i3,https://github.com/i3/i3,2760,2017-04-30T21:26:36Z,2017-05-02T07:11:36Z,2017-05-02T07:11:36Z,MERGED,True,4,0,1,https://github.com/Airblader,Query workspaces again in i3bar when an output change occured.,1,[],https://github.com/i3/i3/pull/2760,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2760,"As of 2f0f8b1, i3bar will properly clean up on output change events.
However, this requires us to query the workspaces again to avoid a
display error in i3bar.
fixes #2740
fixes #2743","As of 2f0f8b1, i3bar will properly clean up on output change events.
However, this requires us to query the workspaces again to avoid a
display error in i3bar.
fixes #2740
fixes #2743",True,{}
i3/i3,https://github.com/i3/i3,2760,2017-04-30T21:26:36Z,2017-05-02T07:11:36Z,2017-05-02T07:11:36Z,MERGED,True,4,0,1,https://github.com/Airblader,Query workspaces again in i3bar when an output change occured.,1,[],https://github.com/i3/i3/pull/2760,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2760#issuecomment-298258279,"As of 2f0f8b1, i3bar will properly clean up on output change events.
However, this requires us to query the workspaces again to avoid a
display error in i3bar.
fixes #2740
fixes #2743","rubber-stamp approval, @stapelberg",True,{}
i3/i3,https://github.com/i3/i3,2761,2017-05-02T11:17:28Z,2017-05-17T08:39:43Z,2017-05-17T09:21:32Z,MERGED,True,1,1,1,https://github.com/mdirkse,Change golang ipc lib reference to one that is maintained.,1,[],https://github.com/i3/i3/pull/2761,https://github.com/mdirkse,1,https://github.com/i3/i3/pull/2761,"Hello i3 maintainers,
I recently started work on a small golang utility for i3 that's meant to replace a rather ugly bash script I wrote years ago. I wanted to use the IPC and the docs showed me the way to https://github.com/proxypoke/i3ipc. It seemed pretty complete until I noticed that the version call didn't return the loaded_config_file_name field. So I forked the project and created a pull request that added this field to the response.
While looking at the list of pull requests I noticed that one had been open since 2014 and the most recent issue posed the very relevant question if the project was still maintained. As the last update is from over 3 years ago, I think we can safely say that the answer to that question is ""no"".
I propose that the i3 site changes its recommendation to my fork of the original library, one which I will maintain. The change shouldn't be made, however, before I do the following things:

 Enable travisci (and get the builds green)
 Update the library to reflect the latest version of the IPC data model
 Fix issues reported by goreportcard.com
 Add travisci, godoc and goreportcard buttons
 Fix links to godoc (go.pkgdoc.org -> godoc.org)
 Update docs where necessary to remove references to the old project","Hello i3 maintainers,
I recently started work on a small golang utility for i3 that's meant to replace a rather ugly bash script I wrote years ago. I wanted to use the IPC and the docs showed me the way to https://github.com/proxypoke/i3ipc. It seemed pretty complete until I noticed that the version call didn't return the loaded_config_file_name field. So I forked the project and created a pull request that added this field to the response.
While looking at the list of pull requests I noticed that one had been open since 2014 and the most recent issue posed the very relevant question if the project was still maintained. As the last update is from over 3 years ago, I think we can safely say that the answer to that question is ""no"".
I propose that the i3 site changes its recommendation to my fork of the original library, one which I will maintain. The change shouldn't be made, however, before I do the following things:

 Enable travisci (and get the builds green)
 Update the library to reflect the latest version of the IPC data model
 Fix issues reported by goreportcard.com
 Add travisci, godoc and goreportcard buttons
 Fix links to godoc (go.pkgdoc.org -> godoc.org)
 Update docs where necessary to remove references to the old project",True,{}
i3/i3,https://github.com/i3/i3,2761,2017-05-02T11:17:28Z,2017-05-17T08:39:43Z,2017-05-17T09:21:32Z,MERGED,True,1,1,1,https://github.com/mdirkse,Change golang ipc lib reference to one that is maintained.,1,[],https://github.com/i3/i3/pull/2761,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2761#issuecomment-298634944,"Hello i3 maintainers,
I recently started work on a small golang utility for i3 that's meant to replace a rather ugly bash script I wrote years ago. I wanted to use the IPC and the docs showed me the way to https://github.com/proxypoke/i3ipc. It seemed pretty complete until I noticed that the version call didn't return the loaded_config_file_name field. So I forked the project and created a pull request that added this field to the response.
While looking at the list of pull requests I noticed that one had been open since 2014 and the most recent issue posed the very relevant question if the project was still maintained. As the last update is from over 3 years ago, I think we can safely say that the answer to that question is ""no"".
I propose that the i3 site changes its recommendation to my fork of the original library, one which I will maintain. The change shouldn't be made, however, before I do the following things:

 Enable travisci (and get the builds green)
 Update the library to reflect the latest version of the IPC data model
 Fix issues reported by goreportcard.com
 Add travisci, godoc and goreportcard buttons
 Fix links to godoc (go.pkgdoc.org -> godoc.org)
 Update docs where necessary to remove references to the old project","Thanks for migrating the PR. Since you're asking yourself not to merge this yet, please just leave a comment here once you think you're ready so I get notified. :-)",True,{}
i3/i3,https://github.com/i3/i3,2761,2017-05-02T11:17:28Z,2017-05-17T08:39:43Z,2017-05-17T09:21:32Z,MERGED,True,1,1,1,https://github.com/mdirkse,Change golang ipc lib reference to one that is maintained.,1,[],https://github.com/i3/i3/pull/2761,https://github.com/mdirkse,3,https://github.com/i3/i3/pull/2761#issuecomment-301933879,"Hello i3 maintainers,
I recently started work on a small golang utility for i3 that's meant to replace a rather ugly bash script I wrote years ago. I wanted to use the IPC and the docs showed me the way to https://github.com/proxypoke/i3ipc. It seemed pretty complete until I noticed that the version call didn't return the loaded_config_file_name field. So I forked the project and created a pull request that added this field to the response.
While looking at the list of pull requests I noticed that one had been open since 2014 and the most recent issue posed the very relevant question if the project was still maintained. As the last update is from over 3 years ago, I think we can safely say that the answer to that question is ""no"".
I propose that the i3 site changes its recommendation to my fork of the original library, one which I will maintain. The change shouldn't be made, however, before I do the following things:

 Enable travisci (and get the builds green)
 Update the library to reflect the latest version of the IPC data model
 Fix issues reported by goreportcard.com
 Add travisci, godoc and goreportcard buttons
 Fix links to godoc (go.pkgdoc.org -> godoc.org)
 Update docs where necessary to remove references to the old project",All done. @Airblader I think I'm ready! :),True,{}
i3/i3,https://github.com/i3/i3,2761,2017-05-02T11:17:28Z,2017-05-17T08:39:43Z,2017-05-17T09:21:32Z,MERGED,True,1,1,1,https://github.com/mdirkse,Change golang ipc lib reference to one that is maintained.,1,[],https://github.com/i3/i3/pull/2761,https://github.com/Airblader,4,https://github.com/i3/i3/pull/2761#issuecomment-302024934,"Hello i3 maintainers,
I recently started work on a small golang utility for i3 that's meant to replace a rather ugly bash script I wrote years ago. I wanted to use the IPC and the docs showed me the way to https://github.com/proxypoke/i3ipc. It seemed pretty complete until I noticed that the version call didn't return the loaded_config_file_name field. So I forked the project and created a pull request that added this field to the response.
While looking at the list of pull requests I noticed that one had been open since 2014 and the most recent issue posed the very relevant question if the project was still maintained. As the last update is from over 3 years ago, I think we can safely say that the answer to that question is ""no"".
I propose that the i3 site changes its recommendation to my fork of the original library, one which I will maintain. The change shouldn't be made, however, before I do the following things:

 Enable travisci (and get the builds green)
 Update the library to reflect the latest version of the IPC data model
 Fix issues reported by goreportcard.com
 Add travisci, godoc and goreportcard buttons
 Fix links to godoc (go.pkgdoc.org -> godoc.org)
 Update docs where necessary to remove references to the old project",Thanks!,True,{}
i3/i3,https://github.com/i3/i3,2762,2017-05-03T22:38:08Z,2017-05-04T13:23:16Z,2017-05-04T15:33:40Z,MERGED,True,2,2,1,https://github.com/mdirkse,Fix invalid JSON,1,[],https://github.com/i3/i3/pull/2762,https://github.com/mdirkse,1,https://github.com/i3/i3/pull/2762,I was using the example JSON as input for tests that I'm writing for https://github.com/mdirkse/i3ipc-go and found two errors.,I was using the example JSON as input for tests that I'm writing for https://github.com/mdirkse/i3ipc-go and found two errors.,True,{}
i3/i3,https://github.com/i3/i3,2762,2017-05-03T22:38:08Z,2017-05-04T13:23:16Z,2017-05-04T15:33:40Z,MERGED,True,2,2,1,https://github.com/mdirkse,Fix invalid JSON,1,[],https://github.com/i3/i3/pull/2762,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2762#issuecomment-299183479,I was using the example JSON as input for tests that I'm writing for https://github.com/mdirkse/i3ipc-go and found two errors.,Thanks!,True,{}
i3/i3,https://github.com/i3/i3,2766,2017-05-07T13:46:30Z,2017-05-12T13:39:41Z,2017-05-12T13:39:41Z,MERGED,True,66,40,2,https://github.com/MachFour,i3-nagbar: add button flag to execute action with /bin/sh directly,1,['waiting'],https://github.com/i3/i3/pull/2766,https://github.com/MachFour,1,https://github.com/i3/i3/pull/2766,"Implementation of ideas in #2765.
This change adds a new button type to i3-nagbar that allows execution of the user's command directly using /bin/sh rather than going though i3-sensible-terminal.
Documentation has been added to the manpage, and the output of i3-nagbar --help.","Implementation of ideas in #2765.
This change adds a new button type to i3-nagbar that allows execution of the user's command directly using /bin/sh rather than going though i3-sensible-terminal.
Documentation has been added to the manpage, and the output of i3-nagbar --help.",True,{}
i3/i3,https://github.com/i3/i3,2766,2017-05-07T13:46:30Z,2017-05-12T13:39:41Z,2017-05-12T13:39:41Z,MERGED,True,66,40,2,https://github.com/MachFour,i3-nagbar: add button flag to execute action with /bin/sh directly,1,['waiting'],https://github.com/i3/i3/pull/2766,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2766#issuecomment-300167713,"Implementation of ideas in #2765.
This change adds a new button type to i3-nagbar that allows execution of the user's command directly using /bin/sh rather than going though i3-sensible-terminal.
Documentation has been added to the manpage, and the output of i3-nagbar --help.","I haven't forgotten about this, but I'm a little low on time right now. Just letting you know that I will review it.",True,{}
i3/i3,https://github.com/i3/i3,2766,2017-05-07T13:46:30Z,2017-05-12T13:39:41Z,2017-05-12T13:39:41Z,MERGED,True,66,40,2,https://github.com/MachFour,i3-nagbar: add button flag to execute action with /bin/sh directly,1,['waiting'],https://github.com/i3/i3/pull/2766,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2766#issuecomment-301004521,"Implementation of ideas in #2765.
This change adds a new button type to i3-nagbar that allows execution of the user's command directly using /bin/sh rather than going though i3-sensible-terminal.
Documentation has been added to the manpage, and the output of i3-nagbar --help.",Also please make sure to leave a comment when you fixed it so I am notified. Thanks!,True,{}
i3/i3,https://github.com/i3/i3,2766,2017-05-07T13:46:30Z,2017-05-12T13:39:41Z,2017-05-12T13:39:41Z,MERGED,True,66,40,2,https://github.com/MachFour,i3-nagbar: add button flag to execute action with /bin/sh directly,1,['waiting'],https://github.com/i3/i3/pull/2766,https://github.com/MachFour,4,https://github.com/i3/i3/pull/2766#issuecomment-301053173,"Implementation of ideas in #2765.
This change adds a new button type to i3-nagbar that allows execution of the user's command directly using /bin/sh rather than going though i3-sensible-terminal.
Documentation has been added to the manpage, and the output of i3-nagbar --help.","You're right, of course it should be a bool. I had my C programming hat on!
Fixed now :)",True,{}
i3/i3,https://github.com/i3/i3,2766,2017-05-07T13:46:30Z,2017-05-12T13:39:41Z,2017-05-12T13:39:41Z,MERGED,True,66,40,2,https://github.com/MachFour,i3-nagbar: add button flag to execute action with /bin/sh directly,1,['waiting'],https://github.com/i3/i3/pull/2766,https://github.com/Airblader,5,https://github.com/i3/i3/pull/2766#issuecomment-301053463,"Implementation of ideas in #2765.
This change adds a new button type to i3-nagbar that allows execution of the user's command directly using /bin/sh rather than going though i3-sensible-terminal.
Documentation has been added to the manpage, and the output of i3-nagbar --help.","Can you also squash those commits and include a reference to the ticket? Ideally a ""fixes #…"" so that Github can cross-reference PR and issue as well. Thanks! :-)",True,{}
i3/i3,https://github.com/i3/i3,2766,2017-05-07T13:46:30Z,2017-05-12T13:39:41Z,2017-05-12T13:39:41Z,MERGED,True,66,40,2,https://github.com/MachFour,i3-nagbar: add button flag to execute action with /bin/sh directly,1,['waiting'],https://github.com/i3/i3/pull/2766,https://github.com/MachFour,6,https://github.com/i3/i3/pull/2766#issuecomment-301057212,"Implementation of ideas in #2765.
This change adds a new button type to i3-nagbar that allows execution of the user's command directly using /bin/sh rather than going though i3-sensible-terminal.
Documentation has been added to the manpage, and the output of i3-nagbar --help.","Yes, of course. I think I did the squash correctly but could you please double check?",True,{}
i3/i3,https://github.com/i3/i3,2769,2017-05-12T07:07:30Z,2017-05-12T17:26:35Z,2017-05-12T17:26:36Z,MERGED,True,3,0,1,https://github.com/Airblader,Force container to be redrawn upon moving to another container.,1,[],https://github.com/i3/i3/pull/2769,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2769,"This is necessary as otherwise urgent containers can be broken
after moving them.
This is a finding within #2496.","This is necessary as otherwise urgent containers can be broken
after moving them.
This is a finding within #2496.",True,{}
i3/i3,https://github.com/i3/i3,2769,2017-05-12T07:07:30Z,2017-05-12T17:26:35Z,2017-05-12T17:26:36Z,MERGED,True,3,0,1,https://github.com/Airblader,Force container to be redrawn upon moving to another container.,1,[],https://github.com/i3/i3/pull/2769,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2769#issuecomment-301001190,"This is necessary as otherwise urgent containers can be broken
after moving them.
This is a finding within #2496.","rubber-stamp approval, @stapelberg",True,{}
i3/i3,https://github.com/i3/i3,2771,2017-05-14T08:10:28Z,2017-05-16T16:39:38Z,2017-05-16T16:39:40Z,MERGED,True,28,7,2,https://github.com/hwangcc23,Support to get the primary output,1,['waiting'],https://github.com/i3/i3/pull/2771,https://github.com/hwangcc23,1,https://github.com/i3/i3/pull/2771,"This makes primary output available for assign or move commands.
Fix the issue #2764(#2764).","This makes primary output available for assign or move commands.
Fix the issue #2764(#2764).",True,{}
i3/i3,https://github.com/i3/i3,2771,2017-05-14T08:10:28Z,2017-05-16T16:39:38Z,2017-05-16T16:39:40Z,MERGED,True,28,7,2,https://github.com/hwangcc23,Support to get the primary output,1,['waiting'],https://github.com/i3/i3/pull/2771,https://github.com/hwangcc23,2,https://github.com/i3/i3/pull/2771#issuecomment-301811350,"This makes primary output available for assign or move commands.
Fix the issue #2764(#2764).","There are a couple of minor comments, see review.

@Airblader
Thanks for the review. Code is updated.

Also, can we please add a test for at least one of the commands just so this path is tested?

There is a problem: I need to use 'xrandr' to configure a primary output, but I cannot use 'xrandr' with Xephyr.
See #1638.",True,{}
i3/i3,https://github.com/i3/i3,2771,2017-05-14T08:10:28Z,2017-05-16T16:39:38Z,2017-05-16T16:39:40Z,MERGED,True,28,7,2,https://github.com/hwangcc23,Support to get the primary output,1,['waiting'],https://github.com/i3/i3/pull/2771,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2771#issuecomment-301840958,"This makes primary output available for assign or move commands.
Fix the issue #2764(#2764).",Thanks!,True,{}
i3/i3,https://github.com/i3/i3,2772,2017-05-15T03:02:28Z,2017-05-29T06:37:44Z,2017-05-29T06:54:26Z,MERGED,True,5,3,1,https://github.com/qbe,prevent multiple menu items per .desktop entry,1,[],https://github.com/i3/i3/pull/2772,https://github.com/qbe,1,https://github.com/i3/i3/pull/2772,"If a .desktop entry is being added to the list of Menu items by its ""Name"" field, it should not be added again by its command or filename.
If it is being added by its command, it should not be added again by its filename.","If a .desktop entry is being added to the list of Menu items by its ""Name"" field, it should not be added again by its command or filename.
If it is being added by its command, it should not be added again by its filename.",True,{}
i3/i3,https://github.com/i3/i3,2773,2017-05-17T23:51:47Z,2017-05-18T07:51:46Z,2017-05-18T07:51:49Z,MERGED,True,1,1,1,https://github.com/lasers,docs/ipc: Fix typo,1,[],https://github.com/i3/i3/pull/2773,https://github.com/lasers,1,https://github.com/i3/i3/pull/2773,This fixes a sring typo.,This fixes a sring typo.,True,{}
i3/i3,https://github.com/i3/i3,2773,2017-05-17T23:51:47Z,2017-05-18T07:51:46Z,2017-05-18T07:51:49Z,MERGED,True,1,1,1,https://github.com/lasers,docs/ipc: Fix typo,1,[],https://github.com/i3/i3/pull/2773,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2773#issuecomment-302328973,This fixes a sring typo.,Thanks!,True,{}
i3/i3,https://github.com/i3/i3,2777,2017-05-21T15:14:59Z,2017-05-22T06:50:58Z,2017-05-22T06:50:58Z,MERGED,True,47,1,1,https://github.com/hwangcc23,Update testsuite docs,1,[],https://github.com/i3/i3/pull/2777,https://github.com/hwangcc23,1,https://github.com/i3/i3/pull/2777,"After moved to autotools, the method to run the i3 testsuite is changed.
Update the testsuite document to reflect the change.","After moved to autotools, the method to run the i3 testsuite is changed.
Update the testsuite document to reflect the change.",True,{}
i3/i3,https://github.com/i3/i3,2777,2017-05-21T15:14:59Z,2017-05-22T06:50:58Z,2017-05-22T06:50:58Z,MERGED,True,47,1,1,https://github.com/hwangcc23,Update testsuite docs,1,[],https://github.com/i3/i3/pull/2777,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2777#issuecomment-303013752,"After moved to autotools, the method to run the i3 testsuite is changed.
Update the testsuite document to reflect the change.",Thanks. This fixes #2640,True,{}
i3/i3,https://github.com/i3/i3,2779,2017-05-22T15:09:52Z,2017-05-23T06:47:12Z,2017-05-23T06:47:12Z,MERGED,True,47,2,2,https://github.com/hwangcc23,Fix the i3 crash caused by mark + restart commands,1,[],https://github.com/i3/i3/pull/2779,https://github.com/hwangcc23,1,https://github.com/i3/i3/pull/2779,"This patch fixes the issue #2511(#2511).
1). Memorize the marks, but only call con_mark once the container has finished parsing. (Credit: This is @Airblader's patch.)
2). Add a test case 267-regress-mark-restart.t for regression test to check if mark and restart command crash i3.","This patch fixes the issue #2511(#2511).
1). Memorize the marks, but only call con_mark once the container has finished parsing. (Credit: This is @Airblader's patch.)
2). Add a test case 267-regress-mark-restart.t for regression test to check if mark and restart command crash i3.",True,{}
i3/i3,https://github.com/i3/i3,2779,2017-05-22T15:09:52Z,2017-05-23T06:47:12Z,2017-05-23T06:47:12Z,MERGED,True,47,2,2,https://github.com/hwangcc23,Fix the i3 crash caused by mark + restart commands,1,[],https://github.com/i3/i3/pull/2779,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2779#issuecomment-303304928,"This patch fixes the issue #2511(#2511).
1). Memorize the marks, but only call con_mark once the container has finished parsing. (Credit: This is @Airblader's patch.)
2). Add a test case 267-regress-mark-restart.t for regression test to check if mark and restart command crash i3.",@stapelberg Since this is effectively my patch I think it'd be better if you could review this.,True,{}
i3/i3,https://github.com/i3/i3,2781,2017-05-22T19:27:19Z,2017-05-22T19:32:05Z,2017-05-22T19:32:10Z,MERGED,True,131,28,2,https://github.com/stapelberg,Apply numlock fallback to bindcode where necessary,1,[],https://github.com/i3/i3/pull/2781,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2781,"This was broken with commit d77d401
fixes #2559","This was broken with commit d77d401
fixes #2559",True,{}
i3/i3,https://github.com/i3/i3,2781,2017-05-22T19:27:19Z,2017-05-22T19:32:05Z,2017-05-22T19:32:10Z,MERGED,True,131,28,2,https://github.com/stapelberg,Apply numlock fallback to bindcode where necessary,1,[],https://github.com/i3/i3/pull/2781,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/2781#issuecomment-303197613,"This was broken with commit d77d401
fixes #2559","Alright, then, in it goes. Feel free to revert at any point in case it causes trouble.",True,{}
i3/i3,https://github.com/i3/i3,2782,2017-05-23T06:29:41Z,2017-05-23T06:40:05Z,2017-05-23T06:40:06Z,MERGED,True,47,2,2,https://github.com/stapelberg,Fix --release bindings broken by previous commit,1,[],https://github.com/i3/i3/pull/2782,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2782,fixes #2559,fixes #2559,True,{}
i3/i3,https://github.com/i3/i3,2784,2017-05-24T18:46:48Z,2017-05-24T19:43:34Z,2017-05-24T19:43:34Z,MERGED,True,37,22,2,https://github.com/stapelberg,"compare modifiers for equality, not subset",4,[],https://github.com/i3/i3/pull/2784,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2784,Please see the individual commit messages.,Please see the individual commit messages.,True,{}
i3/i3,https://github.com/i3/i3,2795,2017-05-31T09:36:37Z,2017-06-12T09:01:58Z,2017-06-12T09:02:09Z,MERGED,True,4,4,1,https://github.com/Adaephon-GH,Fix manpage on configuration lookup order,1,[],https://github.com/i3/i3/pull/2795,https://github.com/Adaephon-GH,1,https://github.com/i3/i3/pull/2795,"The lookup order stated in the i3 manpage was is contratiction to the
actual lookup order, which was introduced with commit
bfa12a5.
Since that commit (6.5 years ago) the ""traditional"" paths took precedence
over XDG_CONFIG paths.","The lookup order stated in the i3 manpage was is contratiction to the
actual lookup order, which was introduced with commit
bfa12a5.
Since that commit (6.5 years ago) the ""traditional"" paths took precedence
over XDG_CONFIG paths.",True,{}
i3/i3,https://github.com/i3/i3,2795,2017-05-31T09:36:37Z,2017-06-12T09:01:58Z,2017-06-12T09:02:09Z,MERGED,True,4,4,1,https://github.com/Adaephon-GH,Fix manpage on configuration lookup order,1,[],https://github.com/i3/i3/pull/2795,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2795#issuecomment-307731192,"The lookup order stated in the i3 manpage was is contratiction to the
actual lookup order, which was introduced with commit
bfa12a5.
Since that commit (6.5 years ago) the ""traditional"" paths took precedence
over XDG_CONFIG paths.","Sorry for the delay on this, but thanks for the update. :-)",True,{}
i3/i3,https://github.com/i3/i3,2796,2017-05-31T14:55:55Z,2017-05-31T18:33:40Z,2017-05-31T18:33:40Z,MERGED,True,2,0,1,https://github.com/Armael,Add a link to the ocaml-i3ipc library,1,[],https://github.com/i3/i3/pull/2796,https://github.com/Armael,1,https://github.com/i3/i3/pull/2796,"I personally use and maintain the library, so I thought it would be nice to document its existence :-).","I personally use and maintain the library, so I thought it would be nice to document its existence :-).",True,{}
i3/i3,https://github.com/i3/i3,2799,2017-06-02T14:28:41Z,2017-06-12T09:00:29Z,2017-06-12T09:00:29Z,MERGED,True,41,0,1,https://github.com/hwangcc23,Add compilation instructions to the hacking howto,1,[],https://github.com/i3/i3/pull/2799,https://github.com/hwangcc23,1,https://github.com/i3/i3/pull/2799,Fix #2792.,Fix #2792.,True,{}
i3/i3,https://github.com/i3/i3,2799,2017-06-02T14:28:41Z,2017-06-12T09:00:29Z,2017-06-12T09:00:29Z,MERGED,True,41,0,1,https://github.com/hwangcc23,Add compilation instructions to the hacking howto,1,[],https://github.com/i3/i3/pull/2799,https://github.com/hwangcc23,2,https://github.com/i3/i3/pull/2799#issuecomment-305982054,Fix #2792.,@Airblader Thanks for the review. It is revised.,True,{}
i3/i3,https://github.com/i3/i3,2808,2017-06-11T16:02:33Z,2017-06-13T13:15:50Z,2017-06-13T13:15:50Z,MERGED,True,17,7,2,https://github.com/hwangcc23,Fix 'rename workspace to tosomething',1,[],https://github.com/i3/i3/pull/2808,https://github.com/hwangcc23,1,https://github.com/i3/i3/pull/2808,"See the issue #2802.
Revise the state machine for the 'rename workspace' command.
These scenarios are considered:
a). 'rename workspace to to bla'
state transitions: RENAME -> RENAME_WORKSPACE -> RENAME_WORKSPACE_LIKELY_TO -> RENAME_WORKSPACE_LIKELY_TO_NEW_NAME
b). 'rename workspace to tosomething'
state transitions: RENAME -> RENAME_WORKSPACE -> RENAME_WORKSPACE_LIKELY_TO
c). 'rename workspace to to'
state transitions: RENAME -> RENAME_WORKSPACE -> RENAME_WORKSPACE_LIKELY_TO
d). 'rename workspace to bla'
state transitions: RENAME -> RENAME_WORKSPACE -> RENAME_WORKSPACE_LIKELY_TO
e). 'rename workspace bla to foo'
state transitions: RENAME -> RENAME_WORKSPACE -> RENAME_WORKSPACE_TO -> RENAME_WORKSPACE_TO_NEW_NAME","See the issue #2802.
Revise the state machine for the 'rename workspace' command.
These scenarios are considered:
a). 'rename workspace to to bla'
state transitions: RENAME -> RENAME_WORKSPACE -> RENAME_WORKSPACE_LIKELY_TO -> RENAME_WORKSPACE_LIKELY_TO_NEW_NAME
b). 'rename workspace to tosomething'
state transitions: RENAME -> RENAME_WORKSPACE -> RENAME_WORKSPACE_LIKELY_TO
c). 'rename workspace to to'
state transitions: RENAME -> RENAME_WORKSPACE -> RENAME_WORKSPACE_LIKELY_TO
d). 'rename workspace to bla'
state transitions: RENAME -> RENAME_WORKSPACE -> RENAME_WORKSPACE_LIKELY_TO
e). 'rename workspace bla to foo'
state transitions: RENAME -> RENAME_WORKSPACE -> RENAME_WORKSPACE_TO -> RENAME_WORKSPACE_TO_NEW_NAME",True,{}
i3/i3,https://github.com/i3/i3,2808,2017-06-11T16:02:33Z,2017-06-13T13:15:50Z,2017-06-13T13:15:50Z,MERGED,True,17,7,2,https://github.com/hwangcc23,Fix 'rename workspace to tosomething',1,[],https://github.com/i3/i3/pull/2808,https://github.com/hwangcc23,2,https://github.com/i3/i3/pull/2808#issuecomment-307639121,"See the issue #2802.
Revise the state machine for the 'rename workspace' command.
These scenarios are considered:
a). 'rename workspace to to bla'
state transitions: RENAME -> RENAME_WORKSPACE -> RENAME_WORKSPACE_LIKELY_TO -> RENAME_WORKSPACE_LIKELY_TO_NEW_NAME
b). 'rename workspace to tosomething'
state transitions: RENAME -> RENAME_WORKSPACE -> RENAME_WORKSPACE_LIKELY_TO
c). 'rename workspace to to'
state transitions: RENAME -> RENAME_WORKSPACE -> RENAME_WORKSPACE_LIKELY_TO
d). 'rename workspace to bla'
state transitions: RENAME -> RENAME_WORKSPACE -> RENAME_WORKSPACE_LIKELY_TO
e). 'rename workspace bla to foo'
state transitions: RENAME -> RENAME_WORKSPACE -> RENAME_WORKSPACE_TO -> RENAME_WORKSPACE_TO_NEW_NAME","@Airblader The build job of Travis CI with the compiler gcc is always failed in these days. It failed in my PR #2799 and #2808. I guess it is not caused by my changes. Could you check it? Thanks.
Error message:

The command ""docker pull ${BASENAME} || ./travis/docker-build-and-push.sh ${BASENAME} travis/travis-base.Dockerfile"" failed and exited with 100 during .",True,{}
i3/i3,https://github.com/i3/i3,2808,2017-06-11T16:02:33Z,2017-06-13T13:15:50Z,2017-06-13T13:15:50Z,MERGED,True,17,7,2,https://github.com/hwangcc23,Fix 'rename workspace to tosomething',1,[],https://github.com/i3/i3/pull/2808,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2808#issuecomment-307730764,"See the issue #2802.
Revise the state machine for the 'rename workspace' command.
These scenarios are considered:
a). 'rename workspace to to bla'
state transitions: RENAME -> RENAME_WORKSPACE -> RENAME_WORKSPACE_LIKELY_TO -> RENAME_WORKSPACE_LIKELY_TO_NEW_NAME
b). 'rename workspace to tosomething'
state transitions: RENAME -> RENAME_WORKSPACE -> RENAME_WORKSPACE_LIKELY_TO
c). 'rename workspace to to'
state transitions: RENAME -> RENAME_WORKSPACE -> RENAME_WORKSPACE_LIKELY_TO
d). 'rename workspace to bla'
state transitions: RENAME -> RENAME_WORKSPACE -> RENAME_WORKSPACE_LIKELY_TO
e). 'rename workspace bla to foo'
state transitions: RENAME -> RENAME_WORKSPACE -> RENAME_WORKSPACE_TO -> RENAME_WORKSPACE_TO_NEW_NAME","Regarding the breaking build, I restarted the job for the other PR and it worked. It looked like there was just a network problem.",True,{}
i3/i3,https://github.com/i3/i3,2808,2017-06-11T16:02:33Z,2017-06-13T13:15:50Z,2017-06-13T13:15:50Z,MERGED,True,17,7,2,https://github.com/hwangcc23,Fix 'rename workspace to tosomething',1,[],https://github.com/i3/i3/pull/2808,https://github.com/Airblader,4,https://github.com/i3/i3/pull/2808#issuecomment-307731795,"See the issue #2802.
Revise the state machine for the 'rename workspace' command.
These scenarios are considered:
a). 'rename workspace to to bla'
state transitions: RENAME -> RENAME_WORKSPACE -> RENAME_WORKSPACE_LIKELY_TO -> RENAME_WORKSPACE_LIKELY_TO_NEW_NAME
b). 'rename workspace to tosomething'
state transitions: RENAME -> RENAME_WORKSPACE -> RENAME_WORKSPACE_LIKELY_TO
c). 'rename workspace to to'
state transitions: RENAME -> RENAME_WORKSPACE -> RENAME_WORKSPACE_LIKELY_TO
d). 'rename workspace to bla'
state transitions: RENAME -> RENAME_WORKSPACE -> RENAME_WORKSPACE_LIKELY_TO
e). 'rename workspace bla to foo'
state transitions: RENAME -> RENAME_WORKSPACE -> RENAME_WORKSPACE_TO -> RENAME_WORKSPACE_TO_NEW_NAME","@hwangcc23 Can you adapt the commit message so it actually states that this ""fixes #2802""?",True,{}
i3/i3,https://github.com/i3/i3,2808,2017-06-11T16:02:33Z,2017-06-13T13:15:50Z,2017-06-13T13:15:50Z,MERGED,True,17,7,2,https://github.com/hwangcc23,Fix 'rename workspace to tosomething',1,[],https://github.com/i3/i3/pull/2808,https://github.com/hwangcc23,5,https://github.com/i3/i3/pull/2808#issuecomment-307807118,"See the issue #2802.
Revise the state machine for the 'rename workspace' command.
These scenarios are considered:
a). 'rename workspace to to bla'
state transitions: RENAME -> RENAME_WORKSPACE -> RENAME_WORKSPACE_LIKELY_TO -> RENAME_WORKSPACE_LIKELY_TO_NEW_NAME
b). 'rename workspace to tosomething'
state transitions: RENAME -> RENAME_WORKSPACE -> RENAME_WORKSPACE_LIKELY_TO
c). 'rename workspace to to'
state transitions: RENAME -> RENAME_WORKSPACE -> RENAME_WORKSPACE_LIKELY_TO
d). 'rename workspace to bla'
state transitions: RENAME -> RENAME_WORKSPACE -> RENAME_WORKSPACE_LIKELY_TO
e). 'rename workspace bla to foo'
state transitions: RENAME -> RENAME_WORKSPACE -> RENAME_WORKSPACE_TO -> RENAME_WORKSPACE_TO_NEW_NAME",@Airblader done,True,{}
i3/i3,https://github.com/i3/i3,2813,2017-06-14T18:45:07Z,2017-09-14T20:19:22Z,2019-05-06T09:13:11Z,CLOSED,False,29,9,8,https://github.com/tohojo,[WIP/RFC] Add mouse_warping=always config option,1,[],https://github.com/i3/i3/pull/2813,https://github.com/tohojo,1,https://github.com/i3/i3/pull/2813,"This adds an option to set mouse_warping to 'always', which will warp the cursor
to the middle of the window whenever focus is changed, not just when changing
between different outputs.
I find this behaviour to work better with focus follows mouse (mouse pointer is always in the focused window).
There are still some rough edges that need to be ironed out; most notably, changing windows by scrolling the mouse wheel on a titlebar shouldn't warp the pointer. But before looking into fixing that I wanted to check whether this was a patch you will accept, assuming I fix those issues?","This adds an option to set mouse_warping to 'always', which will warp the cursor
to the middle of the window whenever focus is changed, not just when changing
between different outputs.
I find this behaviour to work better with focus follows mouse (mouse pointer is always in the focused window).
There are still some rough edges that need to be ironed out; most notably, changing windows by scrolling the mouse wheel on a titlebar shouldn't warp the pointer. But before looking into fixing that I wanted to check whether this was a patch you will accept, assuming I fix those issues?",True,"{'THUMBS_UP': ['https://github.com/wondratsch', 'https://github.com/Qu4Z', 'https://github.com/fredden', 'https://github.com/I60R', 'https://github.com/stefanpl', 'https://github.com/mikelward']}"
i3/i3,https://github.com/i3/i3,2813,2017-06-14T18:45:07Z,2017-09-14T20:19:22Z,2019-05-06T09:13:11Z,CLOSED,False,29,9,8,https://github.com/tohojo,[WIP/RFC] Add mouse_warping=always config option,1,[],https://github.com/i3/i3/pull/2813,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2813#issuecomment-308528772,"This adds an option to set mouse_warping to 'always', which will warp the cursor
to the middle of the window whenever focus is changed, not just when changing
between different outputs.
I find this behaviour to work better with focus follows mouse (mouse pointer is always in the focused window).
There are still some rough edges that need to be ironed out; most notably, changing windows by scrolling the mouse wheel on a titlebar shouldn't warp the pointer. But before looking into fixing that I wanted to check whether this was a patch you will accept, assuming I fix those issues?","Just a first random thought: I can somewhat understand the desire for this when not using focus follows mouse, but you say you specifically prefer it using that? That surprises me; I'd think it would be extremely annoying to have the mouse jump around while using it.",True,{}
i3/i3,https://github.com/i3/i3,2813,2017-06-14T18:45:07Z,2017-09-14T20:19:22Z,2019-05-06T09:13:11Z,CLOSED,False,29,9,8,https://github.com/tohojo,[WIP/RFC] Add mouse_warping=always config option,1,[],https://github.com/i3/i3/pull/2813,https://github.com/tohojo,3,https://github.com/i3/i3/pull/2813#issuecomment-308532100,"This adds an option to set mouse_warping to 'always', which will warp the cursor
to the middle of the window whenever focus is changed, not just when changing
between different outputs.
I find this behaviour to work better with focus follows mouse (mouse pointer is always in the focused window).
There are still some rough edges that need to be ironed out; most notably, changing windows by scrolling the mouse wheel on a titlebar shouldn't warp the pointer. But before looking into fixing that I wanted to check whether this was a patch you will accept, assuming I fix those issues?","Ingo Bürk <notifications@github.com> writes:
 Just a first random thought: I can somewhat understand the desire for
 this when not using focus follows mouse, but you say you specifically
 prefer it using that? That surprises me; I'd think it would be
 extremely annoying to have the mouse jump around while using it.
Yeah, I've been using such a config with xmonad for years, and seem to
have gotten into the habit of alternating between switch focus with the
mouse and the keyboard. So I'd find myself switching focus with the
keyboard, then later using the mouse to ""point myself"" back to another
window. But because the mouse pointer was already over that window, I'd
just end up twiddling the pointer a bit, and focus would not change, so
I'd be typing back in the other window.

This was annoying me enough that I ended up writing this patch,
basically :)
…
-Toke",True,{'THUMBS_UP': ['https://github.com/mikelward']}
i3/i3,https://github.com/i3/i3,2813,2017-06-14T18:45:07Z,2017-09-14T20:19:22Z,2019-05-06T09:13:11Z,CLOSED,False,29,9,8,https://github.com/tohojo,[WIP/RFC] Add mouse_warping=always config option,1,[],https://github.com/i3/i3/pull/2813,https://github.com/tohojo,4,https://github.com/i3/i3/pull/2813#issuecomment-308535756,"This adds an option to set mouse_warping to 'always', which will warp the cursor
to the middle of the window whenever focus is changed, not just when changing
between different outputs.
I find this behaviour to work better with focus follows mouse (mouse pointer is always in the focused window).
There are still some rough edges that need to be ironed out; most notably, changing windows by scrolling the mouse wheel on a titlebar shouldn't warp the pointer. But before looking into fixing that I wanted to check whether this was a patch you will accept, assuming I fix those issues?","I'm using an IBM style pointing stick, BTW, which means going back and forward between mouse and keyboard does not entail moving my hands (which I suppose is why I developed this habit).",True,{}
i3/i3,https://github.com/i3/i3,2813,2017-06-14T18:45:07Z,2017-09-14T20:19:22Z,2019-05-06T09:13:11Z,CLOSED,False,29,9,8,https://github.com/tohojo,[WIP/RFC] Add mouse_warping=always config option,1,[],https://github.com/i3/i3/pull/2813,https://github.com/Airblader,5,https://github.com/i3/i3/pull/2813#issuecomment-329551831,"This adds an option to set mouse_warping to 'always', which will warp the cursor
to the middle of the window whenever focus is changed, not just when changing
between different outputs.
I find this behaviour to work better with focus follows mouse (mouse pointer is always in the focused window).
There are still some rough edges that need to be ironed out; most notably, changing windows by scrolling the mouse wheel on a titlebar shouldn't warp the pointer. But before looking into fixing that I wanted to check whether this was a patch you will accept, assuming I fix those issues?",@stapelberg What should we do with this?,True,{}
i3/i3,https://github.com/i3/i3,2813,2017-06-14T18:45:07Z,2017-09-14T20:19:22Z,2019-05-06T09:13:11Z,CLOSED,False,29,9,8,https://github.com/tohojo,[WIP/RFC] Add mouse_warping=always config option,1,[],https://github.com/i3/i3/pull/2813,https://github.com/stapelberg,6,https://github.com/i3/i3/pull/2813#issuecomment-329597340,"This adds an option to set mouse_warping to 'always', which will warp the cursor
to the middle of the window whenever focus is changed, not just when changing
between different outputs.
I find this behaviour to work better with focus follows mouse (mouse pointer is always in the focused window).
There are still some rough edges that need to be ironed out; most notably, changing windows by scrolling the mouse wheel on a titlebar shouldn't warp the pointer. But before looking into fixing that I wanted to check whether this was a patch you will accept, assuming I fix those issues?",I don’t think the complexity and lingering intricacies of supporting this feature are worth it — sorry.,True,{}
i3/i3,https://github.com/i3/i3,2813,2017-06-14T18:45:07Z,2017-09-14T20:19:22Z,2019-05-06T09:13:11Z,CLOSED,False,29,9,8,https://github.com/tohojo,[WIP/RFC] Add mouse_warping=always config option,1,[],https://github.com/i3/i3/pull/2813,https://github.com/stefanpl,7,https://github.com/i3/i3/pull/2813#issuecomment-489556785,"This adds an option to set mouse_warping to 'always', which will warp the cursor
to the middle of the window whenever focus is changed, not just when changing
between different outputs.
I find this behaviour to work better with focus follows mouse (mouse pointer is always in the focused window).
There are still some rough edges that need to be ironed out; most notably, changing windows by scrolling the mouse wheel on a titlebar shouldn't warp the pointer. But before looking into fixing that I wanted to check whether this was a patch you will accept, assuming I fix those issues?",@oliversturm wrote a nice little script using xdotool to achieve this functionality. Have a look at #2971. Works great for me!,True,{}
i3/i3,https://github.com/i3/i3,2820,2017-06-22T15:01:41Z,2017-06-23T06:31:08Z,2017-06-23T06:31:08Z,MERGED,True,2,0,1,https://github.com/hwangcc23,i3-msg: Return an exit code upon missing -t arg,1,[],https://github.com/i3/i3/pull/2820,https://github.com/hwangcc23,1,https://github.com/i3/i3/pull/2820,"If getopt() returns '?' (option with a missing argument), exit the program with an error code rather than continuing the execution.
Fix the issue #2804 (#2804).","If getopt() returns '?' (option with a missing argument), exit the program with an error code rather than continuing the execution.
Fix the issue #2804 (#2804).",True,{}
i3/i3,https://github.com/i3/i3,2827,2017-07-06T19:46:38Z,2017-07-09T11:23:42Z,2017-07-09T11:23:42Z,MERGED,True,1,2,1,https://github.com/akash-akya,Fix 'Mouse binding don't work',1,[],https://github.com/i3/i3/pull/2827,https://github.com/akash-akya,1,https://github.com/i3/i3/pull/2827,"For mouse buttons we are not considering the masks. I changed to treat it as normal key.
Currently because of the default CapsLock mask, CapsLock specialized mouse click wont have effect.
But do we need it?","For mouse buttons we are not considering the masks. I changed to treat it as normal key.
Currently because of the default CapsLock mask, CapsLock specialized mouse click wont have effect.
But do we need it?",True,{}
i3/i3,https://github.com/i3/i3,2827,2017-07-06T19:46:38Z,2017-07-09T11:23:42Z,2017-07-09T11:23:42Z,MERGED,True,1,2,1,https://github.com/akash-akya,Fix 'Mouse binding don't work',1,[],https://github.com/i3/i3/pull/2827,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/2827#issuecomment-313636362,"For mouse buttons we are not considering the masks. I changed to treat it as normal key.
Currently because of the default CapsLock mask, CapsLock specialized mouse click wont have effect.
But do we need it?","Sorry, I don’t have time to get into the headspace to review this in the next 2 weeks or so.
@Airblader If this looks good to you, feel free to merge it and see if it breaks anything — maybe send an email to i3-discuss inviting mouse binding users to test this change.",True,{}
i3/i3,https://github.com/i3/i3,2827,2017-07-06T19:46:38Z,2017-07-09T11:23:42Z,2017-07-09T11:23:42Z,MERGED,True,1,2,1,https://github.com/akash-akya,Fix 'Mouse binding don't work',1,[],https://github.com/i3/i3/pull/2827,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2827#issuecomment-313914095,"For mouse buttons we are not considering the masks. I changed to treat it as normal key.
Currently because of the default CapsLock mask, CapsLock specialized mouse click wont have effect.
But do we need it?","Since the OP said it fixes the issue for them and it sounds reasonable to me, let's go ahead and try it.",True,{}
i3/i3,https://github.com/i3/i3,2831,2017-07-10T11:05:33Z,2017-07-11T14:06:46Z,2017-07-11T14:06:46Z,MERGED,True,2,1,2,https://github.com/dvejmz,Add KDE konsole terminal fallback to i3-sensible-terminal,1,[],https://github.com/i3/i3/pull/2831,https://github.com/dvejmz,1,https://github.com/i3/i3/pull/2831,"Seeing GNOME and Xfce have their default terminal implementations listed as fallbacks in the i3-sensible-terminal wrapper script, I figured we could also add KDE's Konsole.","Seeing GNOME and Xfce have their default terminal implementations listed as fallbacks in the i3-sensible-terminal wrapper script, I figured we could also add KDE's Konsole.",True,{}
i3/i3,https://github.com/i3/i3,2831,2017-07-10T11:05:33Z,2017-07-11T14:06:46Z,2017-07-11T14:06:46Z,MERGED,True,2,1,2,https://github.com/dvejmz,Add KDE konsole terminal fallback to i3-sensible-terminal,1,[],https://github.com/i3/i3/pull/2831,https://github.com/dvejmz,2,https://github.com/i3/i3/pull/2831#issuecomment-314077131,"Seeing GNOME and Xfce have their default terminal implementations listed as fallbacks in the i3-sensible-terminal wrapper script, I figured we could also add KDE's Konsole.",@Airblader Done :),True,{}
i3/i3,https://github.com/i3/i3,2831,2017-07-10T11:05:33Z,2017-07-11T14:06:46Z,2017-07-11T14:06:46Z,MERGED,True,2,1,2,https://github.com/dvejmz,Add KDE konsole terminal fallback to i3-sensible-terminal,1,[],https://github.com/i3/i3/pull/2831,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2831#issuecomment-314077286,"Seeing GNOME and Xfce have their default terminal implementations listed as fallbacks in the i3-sensible-terminal wrapper script, I figured we could also add KDE's Konsole.",Can you please also squash the commits to keep the history clean? Thank you :-),True,{}
i3/i3,https://github.com/i3/i3,2831,2017-07-10T11:05:33Z,2017-07-11T14:06:46Z,2017-07-11T14:06:46Z,MERGED,True,2,1,2,https://github.com/dvejmz,Add KDE konsole terminal fallback to i3-sensible-terminal,1,[],https://github.com/i3/i3/pull/2831,https://github.com/dvejmz,4,https://github.com/i3/i3/pull/2831#issuecomment-314079122,"Seeing GNOME and Xfce have their default terminal implementations listed as fallbacks in the i3-sensible-terminal wrapper script, I figured we could also add KDE's Konsole.","@Airblader Fixed, sorry about that!",True,{}
i3/i3,https://github.com/i3/i3,2831,2017-07-10T11:05:33Z,2017-07-11T14:06:46Z,2017-07-11T14:06:46Z,MERGED,True,2,1,2,https://github.com/dvejmz,Add KDE konsole terminal fallback to i3-sensible-terminal,1,[],https://github.com/i3/i3/pull/2831,https://github.com/Airblader,5,https://github.com/i3/i3/pull/2831#issuecomment-314378687,"Seeing GNOME and Xfce have their default terminal implementations listed as fallbacks in the i3-sensible-terminal wrapper script, I figured we could also add KDE's Konsole.","It looks good to me now. However, Travis is refusing to build the PR because it detected abuse. I've contacted the Travis support, so we'll have to wait a little longer, unfortunately.",True,{}
i3/i3,https://github.com/i3/i3,2831,2017-07-10T11:05:33Z,2017-07-11T14:06:46Z,2017-07-11T14:06:46Z,MERGED,True,2,1,2,https://github.com/dvejmz,Add KDE konsole terminal fallback to i3-sensible-terminal,1,[],https://github.com/i3/i3/pull/2831,https://github.com/Airblader,6,https://github.com/i3/i3/pull/2831#issuecomment-314434858,"Seeing GNOME and Xfce have their default terminal implementations listed as fallbacks in the i3-sensible-terminal wrapper script, I figured we could also add KDE's Konsole.",Should be fixed now. Closing and reopening to trigger Travis.,True,{'THUMBS_UP': ['https://github.com/dvejmz']}
i3/i3,https://github.com/i3/i3,2836,2017-07-12T15:06:24Z,2017-07-13T04:55:23Z,2017-07-13T04:55:23Z,MERGED,True,1,2,2,https://github.com/acrisci,Move SYSCONFDIR definition to makefile,1,[],https://github.com/i3/i3/pull/2836,https://github.com/acrisci,1,https://github.com/i3/i3/pull/2836,"Official autoconf docs contraindicate the use of the $sysconfdir
variable in configure.ac. For reference:
https://www.gnu.org/software/autoconf/manual/autoconf-2.63/html_node/Installation-Directory-Variables.html
The macro SYSCONFDIR (ordinarilly set to ""/etc"") is required to find
a system configuration file installed with i3. In some build setups,
this may not be defined properly in when the configure script is
compiled.
Instead, define this variable in AM_CPPFLAGS as the documentation
indicates.
fixes #2832","Official autoconf docs contraindicate the use of the $sysconfdir
variable in configure.ac. For reference:
https://www.gnu.org/software/autoconf/manual/autoconf-2.63/html_node/Installation-Directory-Variables.html
The macro SYSCONFDIR (ordinarilly set to ""/etc"") is required to find
a system configuration file installed with i3. In some build setups,
this may not be defined properly in when the configure script is
compiled.
Instead, define this variable in AM_CPPFLAGS as the documentation
indicates.
fixes #2832",True,{}
i3/i3,https://github.com/i3/i3,2836,2017-07-12T15:06:24Z,2017-07-13T04:55:23Z,2017-07-13T04:55:23Z,MERGED,True,1,2,2,https://github.com/acrisci,Move SYSCONFDIR definition to makefile,1,[],https://github.com/i3/i3/pull/2836,https://github.com/acrisci,2,https://github.com/i3/i3/pull/2836#issuecomment-314800793,"Official autoconf docs contraindicate the use of the $sysconfdir
variable in configure.ac. For reference:
https://www.gnu.org/software/autoconf/manual/autoconf-2.63/html_node/Installation-Directory-Variables.html
The macro SYSCONFDIR (ordinarilly set to ""/etc"") is required to find
a system configuration file installed with i3. In some build setups,
this may not be defined properly in when the configure script is
compiled.
Instead, define this variable in AM_CPPFLAGS as the documentation
indicates.
fixes #2832",I tried to test that the behavior was the same for the install location of the configuration files to the sysconfdir but I might have missed some edgecases.,True,{}
i3/i3,https://github.com/i3/i3,2837,2017-07-12T15:59:47Z,2017-11-05T16:38:09Z,2017-11-05T16:38:09Z,CLOSED,False,4,1,1,https://github.com/acrisci,Improve git detection in configure.ac,1,['waiting'],https://github.com/i3/i3/pull/2837,https://github.com/acrisci,1,https://github.com/i3/i3/pull/2837,"During the configure step, if the git binary is not on the system, the
*_VERSION variables will not be set properly which will cause a build
error.
Fix this bug by falling back to the non-git version detection scheme
when git is not installed.
fixes #2833","During the configure step, if the git binary is not on the system, the
*_VERSION variables will not be set properly which will cause a build
error.
Fix this bug by falling back to the non-git version detection scheme
when git is not installed.
fixes #2833",True,{'THUMBS_UP': ['https://github.com/teto']}
i3/i3,https://github.com/i3/i3,2837,2017-07-12T15:59:47Z,2017-11-05T16:38:09Z,2017-11-05T16:38:09Z,CLOSED,False,4,1,1,https://github.com/acrisci,Improve git detection in configure.ac,1,['waiting'],https://github.com/i3/i3/pull/2837,https://github.com/acrisci,2,https://github.com/i3/i3/pull/2837#issuecomment-314860655,"During the configure step, if the git binary is not on the system, the
*_VERSION variables will not be set properly which will cause a build
error.
Fix this bug by falling back to the non-git version detection scheme
when git is not installed.
fixes #2833","Interesting...
#   Failed test 'human readable version contains branch name'
#   at /usr/src/i3/build/../../i3/testcases/t/193-ipc-version.t line 35.
#                   '4.13-non-git'
#",True,{}
i3/i3,https://github.com/i3/i3,2837,2017-07-12T15:59:47Z,2017-11-05T16:38:09Z,2017-11-05T16:38:09Z,CLOSED,False,4,1,1,https://github.com/acrisci,Improve git detection in configure.ac,1,['waiting'],https://github.com/i3/i3/pull/2837,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2837#issuecomment-329552143,"During the configure step, if the git binary is not on the system, the
*_VERSION variables will not be set properly which will cause a build
error.
Fix this bug by falling back to the non-git version detection scheme
when git is not installed.
fixes #2833",What's the status here?,True,{}
i3/i3,https://github.com/i3/i3,2838,2017-07-12T21:56:21Z,2017-07-13T04:50:06Z,2017-07-13T04:50:06Z,MERGED,True,7,2,2,https://github.com/acrisci,Ensure colors are in hex,2,[],https://github.com/i3/i3/pull/2838,https://github.com/acrisci,1,https://github.com/i3/i3/pull/2838,"i3bar error messages violate the i3bar protocol by specifying a color name (""red"") instead of a hex value. This causes memory errors in draw_util_hex_to_color().
See #2829 for a full discussion.","i3bar error messages violate the i3bar protocol by specifying a color name (""red"") instead of a hex value. This causes memory errors in draw_util_hex_to_color().
See #2829 for a full discussion.",True,{}
i3/i3,https://github.com/i3/i3,2839,2017-07-15T21:13:11Z,2017-07-16T00:35:53Z,2017-07-16T10:06:30Z,CLOSED,False,153,15,6,https://github.com/errge,[WIP/RFC] Handle a case of a soon to be gone window calling XSetInputFocus,1,['waiting'],https://github.com/i3/i3/pull/2839,https://github.com/errge,1,https://github.com/i3/i3/pull/2839,"This is a rare case happening mostly for emacs-helm users.  It
can be reproduced without any special emacs configuration using
the x-focus-frame function and then immediately quitting emacs.
The problem was that in this case emacs calls XSetInputFocus with
revert to parent setting, which afterwards at the exit of emacs causes
keyboard focus to be lost and not set to the ewmh support window.
About my proposed patch: I know it's big and disgusting, but the whole test
set runs without error and I also added a new testcase.
Actually, changing back the last_timestamp to XCB_CURRENT_TIME
around the ewmh_window focusing in x.c is enough to make the bug gone, but
according to the git log there are other problems if we use XCB_CURRENT_TIME
for ewmh_window focusing.
Therefore I have set out to fix the actual bug that is being triggered by emacs.
Why my patch grew this big, is because when I detect the unmapping event that
can trigger this bug, I have to get a new xserver timestamp.  And the only way to
do this (at least this is how openbox is doing it) is to set a property and wait for
the resulting event.  But while I'm waiting for the event, I have to queue up the
events that otherwise would be lost forever and then reapply them at the beginning
of the queue.
Another option would be to introduce a new global variable called something like
""should_we_use_current_time_for_focusing_after_unmap"" and set this to true
before tree_render in handle_unmap_notify_event and set back to false afterwards.
That will be definitely a much more easy to review changeset, if you are not worried
about the additional global variable.
Another option would be, that I make the ""pushbackable event queue"" a separate
refactoring that implements a ""look_for_specific_event_in_queue_without_popping""
function.  Once we have this refactoring, the actual bugfix changeset will be nice.
I'd like to ask for your kind input regarding this and a discussion around which way
should we go from here.","This is a rare case happening mostly for emacs-helm users.  It
can be reproduced without any special emacs configuration using
the x-focus-frame function and then immediately quitting emacs.
The problem was that in this case emacs calls XSetInputFocus with
revert to parent setting, which afterwards at the exit of emacs causes
keyboard focus to be lost and not set to the ewmh support window.
About my proposed patch: I know it's big and disgusting, but the whole test
set runs without error and I also added a new testcase.
Actually, changing back the last_timestamp to XCB_CURRENT_TIME
around the ewmh_window focusing in x.c is enough to make the bug gone, but
according to the git log there are other problems if we use XCB_CURRENT_TIME
for ewmh_window focusing.
Therefore I have set out to fix the actual bug that is being triggered by emacs.
Why my patch grew this big, is because when I detect the unmapping event that
can trigger this bug, I have to get a new xserver timestamp.  And the only way to
do this (at least this is how openbox is doing it) is to set a property and wait for
the resulting event.  But while I'm waiting for the event, I have to queue up the
events that otherwise would be lost forever and then reapply them at the beginning
of the queue.
Another option would be to introduce a new global variable called something like
""should_we_use_current_time_for_focusing_after_unmap"" and set this to true
before tree_render in handle_unmap_notify_event and set back to false afterwards.
That will be definitely a much more easy to review changeset, if you are not worried
about the additional global variable.
Another option would be, that I make the ""pushbackable event queue"" a separate
refactoring that implements a ""look_for_specific_event_in_queue_without_popping""
function.  Once we have this refactoring, the actual bugfix changeset will be nice.
I'd like to ask for your kind input regarding this and a discussion around which way
should we go from here.",True,{}
i3/i3,https://github.com/i3/i3,2839,2017-07-15T21:13:11Z,2017-07-16T00:35:53Z,2017-07-16T10:06:30Z,CLOSED,False,153,15,6,https://github.com/errge,[WIP/RFC] Handle a case of a soon to be gone window calling XSetInputFocus,1,['waiting'],https://github.com/i3/i3/pull/2839,https://github.com/acrisci,2,https://github.com/i3/i3/pull/2839#issuecomment-315570775,"This is a rare case happening mostly for emacs-helm users.  It
can be reproduced without any special emacs configuration using
the x-focus-frame function and then immediately quitting emacs.
The problem was that in this case emacs calls XSetInputFocus with
revert to parent setting, which afterwards at the exit of emacs causes
keyboard focus to be lost and not set to the ewmh support window.
About my proposed patch: I know it's big and disgusting, but the whole test
set runs without error and I also added a new testcase.
Actually, changing back the last_timestamp to XCB_CURRENT_TIME
around the ewmh_window focusing in x.c is enough to make the bug gone, but
according to the git log there are other problems if we use XCB_CURRENT_TIME
for ewmh_window focusing.
Therefore I have set out to fix the actual bug that is being triggered by emacs.
Why my patch grew this big, is because when I detect the unmapping event that
can trigger this bug, I have to get a new xserver timestamp.  And the only way to
do this (at least this is how openbox is doing it) is to set a property and wait for
the resulting event.  But while I'm waiting for the event, I have to queue up the
events that otherwise would be lost forever and then reapply them at the beginning
of the queue.
Another option would be to introduce a new global variable called something like
""should_we_use_current_time_for_focusing_after_unmap"" and set this to true
before tree_render in handle_unmap_notify_event and set back to false afterwards.
That will be definitely a much more easy to review changeset, if you are not worried
about the additional global variable.
Another option would be, that I make the ""pushbackable event queue"" a separate
refactoring that implements a ""look_for_specific_event_in_queue_without_popping""
function.  Once we have this refactoring, the actual bugfix changeset will be nice.
I'd like to ask for your kind input regarding this and a discussion around which way
should we go from here.","I can reproduce this with emacs -Q --eval '(progn (x-focus-frame nil) (kill-emacs))'.
In src/xfns.c of the emacs source code is the function x_focus_frame() with this comment:

/* In certain situations, when the window manager follows a
   click-to-focus policy, there seems to be no way around calling
   XSetInputFocus to give another frame the input focus .
In an ideal world, XSetInputFocus should generally be avoided so
that applications don't interfere with the window manager's focus
policy.  But I think it's okay to use when it's clearly done
following a user-command.  */

I believe that in emacs terminology, a ""frame"" refers to a top-level managed window.
I think you could make the case that any application that calls XSetInputFocus on a top-level window is broken. The client should be using the _NET_ACTIVE_WINDOW client request and following the icccm spec for input focus. If that resolves the issue, it is preferable to the solution presented here.",True,{}
i3/i3,https://github.com/i3/i3,2839,2017-07-15T21:13:11Z,2017-07-16T00:35:53Z,2017-07-16T10:06:30Z,CLOSED,False,153,15,6,https://github.com/errge,[WIP/RFC] Handle a case of a soon to be gone window calling XSetInputFocus,1,['waiting'],https://github.com/i3/i3/pull/2839,https://github.com/acrisci,3,https://github.com/i3/i3/pull/2839#issuecomment-315572532,"This is a rare case happening mostly for emacs-helm users.  It
can be reproduced without any special emacs configuration using
the x-focus-frame function and then immediately quitting emacs.
The problem was that in this case emacs calls XSetInputFocus with
revert to parent setting, which afterwards at the exit of emacs causes
keyboard focus to be lost and not set to the ewmh support window.
About my proposed patch: I know it's big and disgusting, but the whole test
set runs without error and I also added a new testcase.
Actually, changing back the last_timestamp to XCB_CURRENT_TIME
around the ewmh_window focusing in x.c is enough to make the bug gone, but
according to the git log there are other problems if we use XCB_CURRENT_TIME
for ewmh_window focusing.
Therefore I have set out to fix the actual bug that is being triggered by emacs.
Why my patch grew this big, is because when I detect the unmapping event that
can trigger this bug, I have to get a new xserver timestamp.  And the only way to
do this (at least this is how openbox is doing it) is to set a property and wait for
the resulting event.  But while I'm waiting for the event, I have to queue up the
events that otherwise would be lost forever and then reapply them at the beginning
of the queue.
Another option would be to introduce a new global variable called something like
""should_we_use_current_time_for_focusing_after_unmap"" and set this to true
before tree_render in handle_unmap_notify_event and set back to false afterwards.
That will be definitely a much more easy to review changeset, if you are not worried
about the additional global variable.
Another option would be, that I make the ""pushbackable event queue"" a separate
refactoring that implements a ""look_for_specific_event_in_queue_without_popping""
function.  Once we have this refactoring, the actual bugfix changeset will be nice.
I'd like to ask for your kind input regarding this and a discussion around which way
should we go from here.","This patch to emacs resolves the issue:
diff --git a/src/xfns.c b/src/xfns.c
index d8bf974..5d11096 100644
--- a/src/xfns.c
+++ b/src/xfns.c
@@ -4113,10 +4113,7 @@ x_focus_frame (struct frame *f, bool noactivate)
     }
   else
     {
-      XSetInputFocus (FRAME_X_DISPLAY (f), FRAME_X_WINDOW (f),
-		      RevertToParent, CurrentTime);
-      if (!noactivate)
-	x_ewmh_activate_frame (f);
+        x_ewmh_activate_frame (f);
     }
 
   x_uncatch_errors ();
The x_ewmh_activate_frame() function uses _NET_ACTIVE_WINDOW to focus the window. This is the correct way to request the window manager focus your window. It should be used when the _NET_ACTIVE_WINDOW atom is present in NET_SUPPORTED property of the root window.
Please open an issue with emacs and link to it here and I will help you make the case for this change.",True,{}
i3/i3,https://github.com/i3/i3,2839,2017-07-15T21:13:11Z,2017-07-16T00:35:53Z,2017-07-16T10:06:30Z,CLOSED,False,153,15,6,https://github.com/errge,[WIP/RFC] Handle a case of a soon to be gone window calling XSetInputFocus,1,['waiting'],https://github.com/i3/i3/pull/2839,https://github.com/errge,4,https://github.com/i3/i3/pull/2839#issuecomment-315572898,"This is a rare case happening mostly for emacs-helm users.  It
can be reproduced without any special emacs configuration using
the x-focus-frame function and then immediately quitting emacs.
The problem was that in this case emacs calls XSetInputFocus with
revert to parent setting, which afterwards at the exit of emacs causes
keyboard focus to be lost and not set to the ewmh support window.
About my proposed patch: I know it's big and disgusting, but the whole test
set runs without error and I also added a new testcase.
Actually, changing back the last_timestamp to XCB_CURRENT_TIME
around the ewmh_window focusing in x.c is enough to make the bug gone, but
according to the git log there are other problems if we use XCB_CURRENT_TIME
for ewmh_window focusing.
Therefore I have set out to fix the actual bug that is being triggered by emacs.
Why my patch grew this big, is because when I detect the unmapping event that
can trigger this bug, I have to get a new xserver timestamp.  And the only way to
do this (at least this is how openbox is doing it) is to set a property and wait for
the resulting event.  But while I'm waiting for the event, I have to queue up the
events that otherwise would be lost forever and then reapply them at the beginning
of the queue.
Another option would be to introduce a new global variable called something like
""should_we_use_current_time_for_focusing_after_unmap"" and set this to true
before tree_render in handle_unmap_notify_event and set back to false afterwards.
That will be definitely a much more easy to review changeset, if you are not worried
about the additional global variable.
Another option would be, that I make the ""pushbackable event queue"" a separate
refactoring that implements a ""look_for_specific_event_in_queue_without_popping""
function.  Once we have this refactoring, the actual bugfix changeset will be nice.
I'd like to ask for your kind input regarding this and a discussion around which way
should we go from here.","@acrisci You are 100% wrong here, sorry to say.
In general, it's a very very bad idea to blame the project that is having comments when they are not sure that they are doing the right thing and point at that comments saying ""even they think it's bad, so it must be bad"".  I think you should be much more quick to blame a project, which have exchanged last_timestamp and XCB_CURRENT_TIME forth and back at least 4 times in the last 2 years and there are no comments at all around that code.  No commiters left a comment why the change is being made or why do they think the same solution gonna work this time around if it didn't work previously.  Emacs committers left a clue, so now you are blaming them.  Look into the i3 source code history around the ""Still no window focused, better set focus"" in x.c and see how many times XCB_CURRENT_TIME and last_timestamp is being exchanged because of random bugs.  On odd years we have last_timestamp, on even years we have XCB_CURRENT_TIME.  Most probably I don't have to do anything and i3 will work in 2018.
Also, I think you didn't understand the things that i3 is doing wrong, because my comment was too long and you were immediately concentrating on what Emacs is doing wrong, so let me explain one more time with an example, imaginary timeline:

1980-01-01: i3 started
1980-01-02: emacs is started
1980-01-10: user needs a terminal, uses it for 5 minuets, so the X event timestamp is recorded in i3 memory as last_timestamp
1981: user is using emacs the whole time, maybe uses XSetInputFocus once on the already activated window (frame in emacs terminology)
1982-2006: user is using emacs during the whole time, no X events for i3
2007-01-01: user quits emacs, which leaves the workspace empty, that causes X to lose input focus
2007-01-01: i3 realizes that there is an emergency and there are no windows handling keyboard focus and i3 is unusable in this state, so to fix the emergency i3 sends the following message to X: ""please activate my EWMH window, my current clock is 1980-01-10, use this clock information to handle race conditions correctly"".

Put another way, your reproduction command will also work with sit-for 86400, if you don't touch your computer for a day.  Don't you think, that's strange?  The fact that this bug is only happening with i3 and not with other tiling window managers is also a fact that you should consider.
Are you still sure that Emacs is doing the wrong thing here?  I mean EWMH and ICCCM standards are here for a couple of years already, but I'm pretty sure X11 timestamping is a more basic concept and in this corner case i3 completely shits the bed regarding that.
And if your solution to this problem is to remove XSetInputFocus from the client application, then you shouldn't patch Emacs, but the X server, to refuse those calls.  It was always clear to me, that I can change Emacs to not call XSetInputFocus, but I was thinking if I do all the work and ask for advice politely on how to proceed, then you guys are interested in contributions, but I was wrong...",True,{}
i3/i3,https://github.com/i3/i3,2839,2017-07-15T21:13:11Z,2017-07-16T00:35:53Z,2017-07-16T10:06:30Z,CLOSED,False,153,15,6,https://github.com/errge,[WIP/RFC] Handle a case of a soon to be gone window calling XSetInputFocus,1,['waiting'],https://github.com/i3/i3/pull/2839,https://github.com/errge,5,https://github.com/i3/i3/pull/2839#issuecomment-315573178,"This is a rare case happening mostly for emacs-helm users.  It
can be reproduced without any special emacs configuration using
the x-focus-frame function and then immediately quitting emacs.
The problem was that in this case emacs calls XSetInputFocus with
revert to parent setting, which afterwards at the exit of emacs causes
keyboard focus to be lost and not set to the ewmh support window.
About my proposed patch: I know it's big and disgusting, but the whole test
set runs without error and I also added a new testcase.
Actually, changing back the last_timestamp to XCB_CURRENT_TIME
around the ewmh_window focusing in x.c is enough to make the bug gone, but
according to the git log there are other problems if we use XCB_CURRENT_TIME
for ewmh_window focusing.
Therefore I have set out to fix the actual bug that is being triggered by emacs.
Why my patch grew this big, is because when I detect the unmapping event that
can trigger this bug, I have to get a new xserver timestamp.  And the only way to
do this (at least this is how openbox is doing it) is to set a property and wait for
the resulting event.  But while I'm waiting for the event, I have to queue up the
events that otherwise would be lost forever and then reapply them at the beginning
of the queue.
Another option would be to introduce a new global variable called something like
""should_we_use_current_time_for_focusing_after_unmap"" and set this to true
before tree_render in handle_unmap_notify_event and set back to false afterwards.
That will be definitely a much more easy to review changeset, if you are not worried
about the additional global variable.
Another option would be, that I make the ""pushbackable event queue"" a separate
refactoring that implements a ""look_for_specific_event_in_queue_without_popping""
function.  Once we have this refactoring, the actual bugfix changeset will be nice.
I'd like to ask for your kind input regarding this and a discussion around which way
should we go from here.","""Explanations exist; they have existed for all time; there is always a well-known solution to every human problem — neat, plausible, and wrong.""  Usually quoted as: For every complex problem there is an answer that is clear, simple, and wrong.
I will not go to the GNU Emacs mailing list and ask them to do something that even I know is WRONG, just because it's neat, plausible, short, quick and easy.  I provided a testcase, I explained the problem, I offered to do the free coding for you to change my patch to your liking (after already spending 2 days just on the debugging).  If you want to use your own reputation, feel free to go around and write to every mailing list that governs a project that uses XSetInputFocus, I don't think it will be a fun (or useful) thing to do.",True,{}
i3/i3,https://github.com/i3/i3,2839,2017-07-15T21:13:11Z,2017-07-16T00:35:53Z,2017-07-16T10:06:30Z,CLOSED,False,153,15,6,https://github.com/errge,[WIP/RFC] Handle a case of a soon to be gone window calling XSetInputFocus,1,['waiting'],https://github.com/i3/i3/pull/2839,https://github.com/acrisci,6,https://github.com/i3/i3/pull/2839#issuecomment-315574139,"This is a rare case happening mostly for emacs-helm users.  It
can be reproduced without any special emacs configuration using
the x-focus-frame function and then immediately quitting emacs.
The problem was that in this case emacs calls XSetInputFocus with
revert to parent setting, which afterwards at the exit of emacs causes
keyboard focus to be lost and not set to the ewmh support window.
About my proposed patch: I know it's big and disgusting, but the whole test
set runs without error and I also added a new testcase.
Actually, changing back the last_timestamp to XCB_CURRENT_TIME
around the ewmh_window focusing in x.c is enough to make the bug gone, but
according to the git log there are other problems if we use XCB_CURRENT_TIME
for ewmh_window focusing.
Therefore I have set out to fix the actual bug that is being triggered by emacs.
Why my patch grew this big, is because when I detect the unmapping event that
can trigger this bug, I have to get a new xserver timestamp.  And the only way to
do this (at least this is how openbox is doing it) is to set a property and wait for
the resulting event.  But while I'm waiting for the event, I have to queue up the
events that otherwise would be lost forever and then reapply them at the beginning
of the queue.
Another option would be to introduce a new global variable called something like
""should_we_use_current_time_for_focusing_after_unmap"" and set this to true
before tree_render in handle_unmap_notify_event and set back to false afterwards.
That will be definitely a much more easy to review changeset, if you are not worried
about the additional global variable.
Another option would be, that I make the ""pushbackable event queue"" a separate
refactoring that implements a ""look_for_specific_event_in_queue_without_popping""
function.  Once we have this refactoring, the actual bugfix changeset will be nice.
I'd like to ask for your kind input regarding this and a discussion around which way
should we go from here.",I apologize if I have upset you. It's obvious that you put a lot of effort into this and I should have been more sensitive to that in my comments.,True,{}
i3/i3,https://github.com/i3/i3,2839,2017-07-15T21:13:11Z,2017-07-16T00:35:53Z,2017-07-16T10:06:30Z,CLOSED,False,153,15,6,https://github.com/errge,[WIP/RFC] Handle a case of a soon to be gone window calling XSetInputFocus,1,['waiting'],https://github.com/i3/i3/pull/2839,https://github.com/Airblader,7,https://github.com/i3/i3/pull/2839#issuecomment-315591721,"This is a rare case happening mostly for emacs-helm users.  It
can be reproduced without any special emacs configuration using
the x-focus-frame function and then immediately quitting emacs.
The problem was that in this case emacs calls XSetInputFocus with
revert to parent setting, which afterwards at the exit of emacs causes
keyboard focus to be lost and not set to the ewmh support window.
About my proposed patch: I know it's big and disgusting, but the whole test
set runs without error and I also added a new testcase.
Actually, changing back the last_timestamp to XCB_CURRENT_TIME
around the ewmh_window focusing in x.c is enough to make the bug gone, but
according to the git log there are other problems if we use XCB_CURRENT_TIME
for ewmh_window focusing.
Therefore I have set out to fix the actual bug that is being triggered by emacs.
Why my patch grew this big, is because when I detect the unmapping event that
can trigger this bug, I have to get a new xserver timestamp.  And the only way to
do this (at least this is how openbox is doing it) is to set a property and wait for
the resulting event.  But while I'm waiting for the event, I have to queue up the
events that otherwise would be lost forever and then reapply them at the beginning
of the queue.
Another option would be to introduce a new global variable called something like
""should_we_use_current_time_for_focusing_after_unmap"" and set this to true
before tree_render in handle_unmap_notify_event and set back to false afterwards.
That will be definitely a much more easy to review changeset, if you are not worried
about the additional global variable.
Another option would be, that I make the ""pushbackable event queue"" a separate
refactoring that implements a ""look_for_specific_event_in_queue_without_popping""
function.  Once we have this refactoring, the actual bugfix changeset will be nice.
I'd like to ask for your kind input regarding this and a discussion around which way
should we go from here.","All that being said, I do agree that the client is broken here. A client that forcefully rips focus control from the window manager without any regard to other clients should be expected to at least properly clean up after itself.
The specifications exist for good reasons and in these times clients should be expected to follow them — or considered to be broken.",True,{}
i3/i3,https://github.com/i3/i3,2839,2017-07-15T21:13:11Z,2017-07-16T00:35:53Z,2017-07-16T10:06:30Z,CLOSED,False,153,15,6,https://github.com/errge,[WIP/RFC] Handle a case of a soon to be gone window calling XSetInputFocus,1,['waiting'],https://github.com/i3/i3/pull/2839,https://github.com/errge,8,https://github.com/i3/i3/pull/2839#issuecomment-315593794,"This is a rare case happening mostly for emacs-helm users.  It
can be reproduced without any special emacs configuration using
the x-focus-frame function and then immediately quitting emacs.
The problem was that in this case emacs calls XSetInputFocus with
revert to parent setting, which afterwards at the exit of emacs causes
keyboard focus to be lost and not set to the ewmh support window.
About my proposed patch: I know it's big and disgusting, but the whole test
set runs without error and I also added a new testcase.
Actually, changing back the last_timestamp to XCB_CURRENT_TIME
around the ewmh_window focusing in x.c is enough to make the bug gone, but
according to the git log there are other problems if we use XCB_CURRENT_TIME
for ewmh_window focusing.
Therefore I have set out to fix the actual bug that is being triggered by emacs.
Why my patch grew this big, is because when I detect the unmapping event that
can trigger this bug, I have to get a new xserver timestamp.  And the only way to
do this (at least this is how openbox is doing it) is to set a property and wait for
the resulting event.  But while I'm waiting for the event, I have to queue up the
events that otherwise would be lost forever and then reapply them at the beginning
of the queue.
Another option would be to introduce a new global variable called something like
""should_we_use_current_time_for_focusing_after_unmap"" and set this to true
before tree_render in handle_unmap_notify_event and set back to false afterwards.
That will be definitely a much more easy to review changeset, if you are not worried
about the additional global variable.
Another option would be, that I make the ""pushbackable event queue"" a separate
refactoring that implements a ""look_for_specific_event_in_queue_without_popping""
function.  Once we have this refactoring, the actual bugfix changeset will be nice.
I'd like to ask for your kind input regarding this and a discussion around which way
should we go from here.","OK, thanks, I moved to i3 because I don't want to touch my mouse.  If breaking with Emacs in a way, that you can only recover with your mouse and only if you have a backup window to click to is considered normal in i3 and it's not a bug, then I will have to look around, good to know.
Also, if sending out requests to the X server with a day old timestamp is not considered a bug, then I don't know what will be.
I feel like that you guys don't care about the bug, just hate the many added lines, if I provide you with a one-liner addition that has nothing to do with the bug, but in practice fixes this behavior for most of the users, will you at least consider looking at that?  Instead of bashing the programs that I have been using for 15 years?  To apply the logic here: 1 line fix in i3 is less than 3-5 in Emacs, after all.
Willing to share it on a new PR, but only if discussion will be around how it is good or bad for i3 and how it breaks or fixes things, not if you come at me for the programs I use or go into other politics, like playing a mini standard committee.",True,{}
i3/i3,https://github.com/i3/i3,2839,2017-07-15T21:13:11Z,2017-07-16T00:35:53Z,2017-07-16T10:06:30Z,CLOSED,False,153,15,6,https://github.com/errge,[WIP/RFC] Handle a case of a soon to be gone window calling XSetInputFocus,1,['waiting'],https://github.com/i3/i3/pull/2839,https://github.com/Airblader,9,https://github.com/i3/i3/pull/2839#issuecomment-315599024,"This is a rare case happening mostly for emacs-helm users.  It
can be reproduced without any special emacs configuration using
the x-focus-frame function and then immediately quitting emacs.
The problem was that in this case emacs calls XSetInputFocus with
revert to parent setting, which afterwards at the exit of emacs causes
keyboard focus to be lost and not set to the ewmh support window.
About my proposed patch: I know it's big and disgusting, but the whole test
set runs without error and I also added a new testcase.
Actually, changing back the last_timestamp to XCB_CURRENT_TIME
around the ewmh_window focusing in x.c is enough to make the bug gone, but
according to the git log there are other problems if we use XCB_CURRENT_TIME
for ewmh_window focusing.
Therefore I have set out to fix the actual bug that is being triggered by emacs.
Why my patch grew this big, is because when I detect the unmapping event that
can trigger this bug, I have to get a new xserver timestamp.  And the only way to
do this (at least this is how openbox is doing it) is to set a property and wait for
the resulting event.  But while I'm waiting for the event, I have to queue up the
events that otherwise would be lost forever and then reapply them at the beginning
of the queue.
Another option would be to introduce a new global variable called something like
""should_we_use_current_time_for_focusing_after_unmap"" and set this to true
before tree_render in handle_unmap_notify_event and set back to false afterwards.
That will be definitely a much more easy to review changeset, if you are not worried
about the additional global variable.
Another option would be, that I make the ""pushbackable event queue"" a separate
refactoring that implements a ""look_for_specific_event_in_queue_without_popping""
function.  Once we have this refactoring, the actual bugfix changeset will be nice.
I'd like to ask for your kind input regarding this and a discussion around which way
should we go from here.","If breaking with Emacs in a way, that you can only recover with your mouse and only if you have a backup window to click to is considered normal in i3 and it's not a bug

It certainly is a bug – in emacs.

Also, if sending out requests to the X server with a day old timestamp is not considered a bug

The timestamp mechanism exists precisely to avoid race conditions. Disregarding the mechanism because the timestamp is too old voids its entire purpose.
There is no reason for emacs to behave this way. There is no reason why emacs can't go through the window manager to request focus instead of violently ripping focus away. And if emacs for whatever reason decides to ignore the window manager's authority, they should at least be expected to properly clean up the mess they left behind.

if I provide you with a one-liner addition that has nothing to do with the bug, but in practice fixes this behavior for most of the users, will you at least consider looking at that?

We will look at every patch we get sent (and are happy to discuss changed before you go through the trouble of writing the patch), but we will not merge it just because it's simple or just because it works around an issue; we merge fixes for things that need to be fixed in i3. Even if it's a big patch.

Instead of bashing the programs that I have been using for 15 years?

No one has said anything against emacs other than the fact that we think it has a bug. For which @acrisci  even provided a patch already.
I don't care much for your aggressions and unfounded attacks that we don't care about bugs, bash clients or go into any kind of politics and for this reason I am going to lock this discussion for not being productive. If you want to discuss a potential change, please open an issue where we can discuss it and we will do so, provided you can keep out the ad-hominems.",True,{}
i3/i3,https://github.com/i3/i3,2841,2017-07-17T03:01:07Z,2017-07-17T16:26:29Z,2017-07-17T16:26:30Z,CLOSED,False,25,3,2,https://github.com/jwdeitch,nagbar: autodismiss after given seconds,1,[],https://github.com/i3/i3/pull/2841,https://github.com/jwdeitch,1,https://github.com/i3/i3/pull/2841,Requires compiling with -lpthreads,Requires compiling with -lpthreads,True,{}
i3/i3,https://github.com/i3/i3,2841,2017-07-17T03:01:07Z,2017-07-17T16:26:29Z,2017-07-17T16:26:30Z,CLOSED,False,25,3,2,https://github.com/jwdeitch,nagbar: autodismiss after given seconds,1,[],https://github.com/i3/i3/pull/2841,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2841#issuecomment-315667872,Requires compiling with -lpthreads,"Thanks for the contribution. Can you explain what this change is needed for? The nagbar is supposed to do its title justice, so automatically closing it goes against its purpose.",True,{}
i3/i3,https://github.com/i3/i3,2841,2017-07-17T03:01:07Z,2017-07-17T16:26:29Z,2017-07-17T16:26:30Z,CLOSED,False,25,3,2,https://github.com/jwdeitch,nagbar: autodismiss after given seconds,1,[],https://github.com/i3/i3/pull/2841,https://github.com/jwdeitch,3,https://github.com/i3/i3/pull/2841#issuecomment-315669524,Requires compiling with -lpthreads,"In my particular use-case, I have configured a keybinding to take a screenshot of a region on my screen and upload to S3. I wanted a way to notify me that the upload was complete and that the link was in my clipboard, without requiring my input. I can also see this being useful with emails, irc pings, etc.",True,{}
i3/i3,https://github.com/i3/i3,2841,2017-07-17T03:01:07Z,2017-07-17T16:26:29Z,2017-07-17T16:26:30Z,CLOSED,False,25,3,2,https://github.com/jwdeitch,nagbar: autodismiss after given seconds,1,[],https://github.com/i3/i3/pull/2841,https://github.com/Airblader,4,https://github.com/i3/i3/pull/2841#issuecomment-315671171,Requires compiling with -lpthreads,"Out of curiosity, why not run an actual notification daemon like Dunst and using send-notify to do this?
i3-nagbar isn't really meant for transient notifications, but rather for nagging the user that an action is required (for example, config errors).",True,{}
i3/i3,https://github.com/i3/i3,2841,2017-07-17T03:01:07Z,2017-07-17T16:26:29Z,2017-07-17T16:26:30Z,CLOSED,False,25,3,2,https://github.com/jwdeitch,nagbar: autodismiss after given seconds,1,[],https://github.com/i3/i3/pull/2841,https://github.com/acrisci,5,https://github.com/i3/i3/pull/2841#issuecomment-315790137,Requires compiling with -lpthreads,"I think I agree with @Airblader here. Nagbar has a pretty limited use case within the project, primarily to notify users of configuration errors. It's not intended to be a general purpose application for notifications.
It sounds like your problem is much better solved by a real notification daemon. Lots of people like dunst but xfce also has a very nice standalone notification app. See man notify-send for more information.",True,{}
i3/i3,https://github.com/i3/i3,2841,2017-07-17T03:01:07Z,2017-07-17T16:26:29Z,2017-07-17T16:26:30Z,CLOSED,False,25,3,2,https://github.com/jwdeitch,nagbar: autodismiss after given seconds,1,[],https://github.com/i3/i3/pull/2841,https://github.com/jwdeitch,6,https://github.com/i3/i3/pull/2841#issuecomment-315805317,Requires compiling with -lpthreads,Makes sense. Thanks for the feedback!,True,{}
i3/i3,https://github.com/i3/i3,2847,2017-07-30T05:41:29Z,2017-07-31T09:48:10Z,2017-07-31T09:48:13Z,MERGED,True,4,4,1,https://github.com/tmerr,Document missing case of workspace event,2,[],https://github.com/i3/i3/pull/2847,https://github.com/tmerr,1,https://github.com/i3/i3/pull/2847,"After #2656 it looks like the only workspace event that's missing from the docs is workspace:move.
$ grep -r ipc_send_workspace_event
src/commands.c:        ipc_send_workspace_event(""restored"", parent, NULL);
src/commands.c:    ipc_send_workspace_event(""reload"", NULL, NULL);
src/commands.c:    ipc_send_workspace_event(""rename"", workspace, NULL);
src/move.c:    ipc_send_workspace_event(""focus"", ws, old_ws);
src/workspace.c:        ipc_send_workspace_event(""init"", workspace, NULL);
src/workspace.c:    ipc_send_workspace_event(""focus"", workspace, current);
src/workspace.c:        ipc_send_workspace_event(""urgent"", ws, NULL);
src/workspace.c:        ipc_send_workspace_event(""init"", ws, NULL);
src/workspace.c:    ipc_send_workspace_event(""move"", ws, NULL);
src/ipc.c:void ipc_send_workspace_event(const char *change, Con *current, Con *old) {
include/ipc.h:void ipc_send_workspace_event(const char *change, Con *current, Con *old);

So this should probably be added to the docs yeah?","After #2656 it looks like the only workspace event that's missing from the docs is workspace:move.
$ grep -r ipc_send_workspace_event
src/commands.c:        ipc_send_workspace_event(""restored"", parent, NULL);
src/commands.c:    ipc_send_workspace_event(""reload"", NULL, NULL);
src/commands.c:    ipc_send_workspace_event(""rename"", workspace, NULL);
src/move.c:    ipc_send_workspace_event(""focus"", ws, old_ws);
src/workspace.c:        ipc_send_workspace_event(""init"", workspace, NULL);
src/workspace.c:    ipc_send_workspace_event(""focus"", workspace, current);
src/workspace.c:        ipc_send_workspace_event(""urgent"", ws, NULL);
src/workspace.c:        ipc_send_workspace_event(""init"", ws, NULL);
src/workspace.c:    ipc_send_workspace_event(""move"", ws, NULL);
src/ipc.c:void ipc_send_workspace_event(const char *change, Con *current, Con *old) {
include/ipc.h:void ipc_send_workspace_event(const char *change, Con *current, Con *old);

So this should probably be added to the docs yeah?",True,{}
i3/i3,https://github.com/i3/i3,2847,2017-07-30T05:41:29Z,2017-07-31T09:48:10Z,2017-07-31T09:48:13Z,MERGED,True,4,4,1,https://github.com/tmerr,Document missing case of workspace event,2,[],https://github.com/i3/i3/pull/2847,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2847#issuecomment-319020765,"After #2656 it looks like the only workspace event that's missing from the docs is workspace:move.
$ grep -r ipc_send_workspace_event
src/commands.c:        ipc_send_workspace_event(""restored"", parent, NULL);
src/commands.c:    ipc_send_workspace_event(""reload"", NULL, NULL);
src/commands.c:    ipc_send_workspace_event(""rename"", workspace, NULL);
src/move.c:    ipc_send_workspace_event(""focus"", ws, old_ws);
src/workspace.c:        ipc_send_workspace_event(""init"", workspace, NULL);
src/workspace.c:    ipc_send_workspace_event(""focus"", workspace, current);
src/workspace.c:        ipc_send_workspace_event(""urgent"", ws, NULL);
src/workspace.c:        ipc_send_workspace_event(""init"", ws, NULL);
src/workspace.c:    ipc_send_workspace_event(""move"", ws, NULL);
src/ipc.c:void ipc_send_workspace_event(const char *change, Con *current, Con *old) {
include/ipc.h:void ipc_send_workspace_event(const char *change, Con *current, Con *old);

So this should probably be added to the docs yeah?",Thanks!,True,{}
i3/i3,https://github.com/i3/i3,2849,2017-07-30T16:02:06Z,2017-10-15T20:23:41Z,2018-08-16T17:58:15Z,MERGED,True,72,1,2,https://github.com/9ary,Create a new split container when switching a workspace container to split layout,3,['waiting'],https://github.com/i3/i3/pull/2849,https://github.com/9ary,1,https://github.com/i3/i3/pull/2849,"The behavior before 52ce8c8 was to do it regardless of what layout we're
switching to.
Fixes #2846
Like I said in the issue thread, I need to check things out a bit more if tests are wanted, but I'm leaving this here in the meantime.","The behavior before 52ce8c8 was to do it regardless of what layout we're
switching to.
Fixes #2846
Like I said in the issue thread, I need to check things out a bit more if tests are wanted, but I'm leaving this here in the meantime.",True,{}
i3/i3,https://github.com/i3/i3,2849,2017-07-30T16:02:06Z,2017-10-15T20:23:41Z,2018-08-16T17:58:15Z,MERGED,True,72,1,2,https://github.com/9ary,Create a new split container when switching a workspace container to split layout,3,['waiting'],https://github.com/i3/i3/pull/2849,https://github.com/acrisci,2,https://github.com/i3/i3/pull/2849#issuecomment-318911451,"The behavior before 52ce8c8 was to do it regardless of what layout we're
switching to.
Fixes #2846
Like I said in the issue thread, I need to check things out a bit more if tests are wanted, but I'm leaving this here in the meantime.",Yeah we definitely need a regression test for this.,True,{}
i3/i3,https://github.com/i3/i3,2849,2017-07-30T16:02:06Z,2017-10-15T20:23:41Z,2018-08-16T17:58:15Z,MERGED,True,72,1,2,https://github.com/9ary,Create a new split container when switching a workspace container to split layout,3,['waiting'],https://github.com/i3/i3/pull/2849,https://github.com/9ary,3,https://github.com/i3/i3/pull/2849#issuecomment-318927786,"The behavior before 52ce8c8 was to do it regardless of what layout we're
switching to.
Fixes #2846
Like I said in the issue thread, I need to check things out a bit more if tests are wanted, but I'm leaving this here in the meantime.","I'm unable to get the test suite running.
Work directory is /home/streetwalrus/.cpanm/work/1501446269.21773
You have make /usr/bin/make
You have LWP 6.26
You have /usr/bin/tar: tar (GNU tar) 1.29
Copyright (C) 2015 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by John Gilmore and Jay Fenlason.
You have /usr/bin/unzip
--> Working on .
Entering /home/streetwalrus/i3/testcases
Configuring /home/streetwalrus/i3/testcases
Running Makefile.PL
Warning: NAME must be a package name
Generating a Unix-style Makefile
Writing Makefile for i3-testsuite
Writing MYMETA.yml and MYMETA.json
-> OK
Checking dependencies from MYMETA.json ...
Checking if you have IPC::Run 0 ... Yes (0.96)
Checking if you have Inline 0 ... Yes (0.80)
Checking if you have AnyEvent 0 ... Yes (7.14)
Checking if you have Test::More 0.94 ... Yes (1.302073)
Checking if you have AnyEvent::I3 0.16 ... Yes (0.17)
Checking if you have ExtUtils::MakeMaker 0 ... Yes (7.24)
Checking if you have ExtUtils::PkgConfig 0 ... Yes (1.16)
Checking if you have X11::XCB 0.12 ... Yes (0.16)
Checking if you have Inline::C 0 ... Yes (0.78)
Building and testing i3-testsuite-
Running Mkbootstrap for testsuite ()
chmod 644 ""testsuite.bs""
""/usr/bin/perl"" -MExtUtils::Command::MM -e 'cp_nonempty' -- testsuite.bs blib/arch/auto/i3-testsuite/testsuite.bs 644
rm -f blib/arch/auto/i3-testsuite/testsuite.so
cc  -shared -Wl,-O1,--sort-common,--as-needed,-z,relro -L/usr/local/lib -fstack-protector-strong testsuite.o  -o blib/arch/auto/i3-testsuite/testsuite.so  \
      \
  
cc: error: testsuite.o: No such file or directory
make: *** [Makefile:470: blib/arch/auto/i3-testsuite/testsuite.so] Error 1
-> FAIL Installing . failed. See /home/streetwalrus/.cpanm/work/1501446269.21773/build.log for details. Retry with --force to force install it.

Any idea?",True,{}
i3/i3,https://github.com/i3/i3,2849,2017-07-30T16:02:06Z,2017-10-15T20:23:41Z,2018-08-16T17:58:15Z,MERGED,True,72,1,2,https://github.com/9ary,Create a new split container when switching a workspace container to split layout,3,['waiting'],https://github.com/i3/i3/pull/2849,https://github.com/hwangcc23,4,https://github.com/i3/i3/pull/2849#issuecomment-320513136,"The behavior before 52ce8c8 was to do it regardless of what layout we're
switching to.
Fixes #2846
Like I said in the issue thread, I need to check things out a bit more if tests are wanted, but I'm leaving this here in the meantime.","@Streetwalrus I don't see this error before. What is the command you used to activate the testsuite?
P.S. I have written a test case for the regression test. Feel free to reference it or use it directly.
https://github.com/hwangcc23/i3/commit/f234bf3428a16b4c7b94c5659ed839a8e01f796e",True,{}
i3/i3,https://github.com/i3/i3,2849,2017-07-30T16:02:06Z,2017-10-15T20:23:41Z,2018-08-16T17:58:15Z,MERGED,True,72,1,2,https://github.com/9ary,Create a new split container when switching a workspace container to split layout,3,['waiting'],https://github.com/i3/i3/pull/2849,https://github.com/9ary,5,https://github.com/i3/i3/pull/2849#issuecomment-320513655,"The behavior before 52ce8c8 was to do it regardless of what layout we're
switching to.
Fixes #2846
Like I said in the issue thread, I need to check things out a bit more if tests are wanted, but I'm leaving this here in the meantime.","I ran cpanm . as instructed in the documentation. The issue could be that I was trying to run it as a regular user to avoid installing things to my system that aren't managed by pacman.
Thanks for writing that test. I think it would be better this way though:

Get a fresh workspace
Set the layout to something
Create one window (or two)
Try to switch to another layout
Check if successful
Repeat for either 4 transitions (with 4 distinct targets) or all 12 possible transitions

I don't think layout toggle split really matters here, considering the code in question doesn't care about toggling, only about setting a new layout.",True,{'THUMBS_UP': ['https://github.com/hwangcc23']}
i3/i3,https://github.com/i3/i3,2849,2017-07-30T16:02:06Z,2017-10-15T20:23:41Z,2018-08-16T17:58:15Z,MERGED,True,72,1,2,https://github.com/9ary,Create a new split container when switching a workspace container to split layout,3,['waiting'],https://github.com/i3/i3/pull/2849,https://github.com/hwangcc23,6,https://github.com/i3/i3/pull/2849#issuecomment-323104521,"The behavior before 52ce8c8 was to do it regardless of what layout we're
switching to.
Fixes #2846
Like I said in the issue thread, I need to check things out a bit more if tests are wanted, but I'm leaving this here in the meantime.","@Streetwalrus Do you still work on this?
I have written some test cases for testing all transitions. Feel free to reference them, or ask me to send the PR.
hwangcc23@49f2d81",True,{}
i3/i3,https://github.com/i3/i3,2849,2017-07-30T16:02:06Z,2017-10-15T20:23:41Z,2018-08-16T17:58:15Z,MERGED,True,72,1,2,https://github.com/9ary,Create a new split container when switching a workspace container to split layout,3,['waiting'],https://github.com/i3/i3/pull/2849,https://github.com/9ary,7,https://github.com/i3/i3/pull/2849#issuecomment-323122530,"The behavior before 52ce8c8 was to do it regardless of what layout we're
switching to.
Fixes #2846
Like I said in the issue thread, I need to check things out a bit more if tests are wanted, but I'm leaving this here in the meantime.",Thanks a lot. I'll cherry-pick them into the pr if that's ok with you.,True,{}
i3/i3,https://github.com/i3/i3,2849,2017-07-30T16:02:06Z,2017-10-15T20:23:41Z,2018-08-16T17:58:15Z,MERGED,True,72,1,2,https://github.com/9ary,Create a new split container when switching a workspace container to split layout,3,['waiting'],https://github.com/i3/i3/pull/2849,https://github.com/hwangcc23,8,https://github.com/i3/i3/pull/2849#issuecomment-323256876,"The behavior before 52ce8c8 was to do it regardless of what layout we're
switching to.
Fixes #2846
Like I said in the issue thread, I need to check things out a bit more if tests are wanted, but I'm leaving this here in the meantime.",@Streetwalrus OK.  :),True,{}
i3/i3,https://github.com/i3/i3,2849,2017-07-30T16:02:06Z,2017-10-15T20:23:41Z,2018-08-16T17:58:15Z,MERGED,True,72,1,2,https://github.com/9ary,Create a new split container when switching a workspace container to split layout,3,['waiting'],https://github.com/i3/i3/pull/2849,https://github.com/9ary,9,https://github.com/i3/i3/pull/2849#issuecomment-323302271,"The behavior before 52ce8c8 was to do it regardless of what layout we're
switching to.
Fixes #2846
Like I said in the issue thread, I need to check things out a bit more if tests are wanted, but I'm leaving this here in the meantime.","@hwangcc23, I've just looked at your tests, in order to reproduce the bug, you need to set the initial layout before spawning the first window, then change it afterwards. You don't really need two windows to check that the layout was successfully changed either.",True,{}
i3/i3,https://github.com/i3/i3,2849,2017-07-30T16:02:06Z,2017-10-15T20:23:41Z,2018-08-16T17:58:15Z,MERGED,True,72,1,2,https://github.com/9ary,Create a new split container when switching a workspace container to split layout,3,['waiting'],https://github.com/i3/i3/pull/2849,https://github.com/hwangcc23,10,https://github.com/i3/i3/pull/2849#issuecomment-323379561,"The behavior before 52ce8c8 was to do it regardless of what layout we're
switching to.
Fixes #2846
Like I said in the issue thread, I need to check things out a bit more if tests are wanted, but I'm leaving this here in the meantime.",hwangcc23@c7437c8,True,{}
i3/i3,https://github.com/i3/i3,2849,2017-07-30T16:02:06Z,2017-10-15T20:23:41Z,2018-08-16T17:58:15Z,MERGED,True,72,1,2,https://github.com/9ary,Create a new split container when switching a workspace container to split layout,3,['waiting'],https://github.com/i3/i3/pull/2849,https://github.com/9ary,11,https://github.com/i3/i3/pull/2849#issuecomment-324752652,"The behavior before 52ce8c8 was to do it regardless of what layout we're
switching to.
Fixes #2846
Like I said in the issue thread, I need to check things out a bit more if tests are wanted, but I'm leaving this here in the meantime.",Bump. Not sure why Travis failed as the tests seem fine in the log.,True,{}
i3/i3,https://github.com/i3/i3,2849,2017-07-30T16:02:06Z,2017-10-15T20:23:41Z,2018-08-16T17:58:15Z,MERGED,True,72,1,2,https://github.com/9ary,Create a new split container when switching a workspace container to split layout,3,['waiting'],https://github.com/i3/i3/pull/2849,https://github.com/Airblader,12,https://github.com/i3/i3/pull/2849#issuecomment-329552536,"The behavior before 52ce8c8 was to do it regardless of what layout we're
switching to.
Fixes #2846
Like I said in the issue thread, I need to check things out a bit more if tests are wanted, but I'm leaving this here in the meantime.","@Streetwalrus I'm a bit lost – what is the status here? Can it be reviewed from your perspective? If so, please rebase it so that the rests run again; we fixed a lot over the last few days regarding the travis setup.",True,{}
i3/i3,https://github.com/i3/i3,2849,2017-07-30T16:02:06Z,2017-10-15T20:23:41Z,2018-08-16T17:58:15Z,MERGED,True,72,1,2,https://github.com/9ary,Create a new split container when switching a workspace container to split layout,3,['waiting'],https://github.com/i3/i3/pull/2849,https://github.com/9ary,13,https://github.com/i3/i3/pull/2849#issuecomment-329579119,"The behavior before 52ce8c8 was to do it regardless of what layout we're
switching to.
Fixes #2846
Like I said in the issue thread, I need to check things out a bit more if tests are wanted, but I'm leaving this here in the meantime.","As far as I'm concerned the patch is fine, I've been running it ever since I've opened this PR (frequently merging master). I'll rebase it right away.",True,{}
i3/i3,https://github.com/i3/i3,2849,2017-07-30T16:02:06Z,2017-10-15T20:23:41Z,2018-08-16T17:58:15Z,MERGED,True,72,1,2,https://github.com/9ary,Create a new split container when switching a workspace container to split layout,3,['waiting'],https://github.com/i3/i3/pull/2849,https://github.com/9ary,14,https://github.com/i3/i3/pull/2849#issuecomment-329950930,"The behavior before 52ce8c8 was to do it regardless of what layout we're
switching to.
Fixes #2846
Like I said in the issue thread, I need to check things out a bit more if tests are wanted, but I'm leaving this here in the meantime.","@hwangcc23 since you wrote the tests, would you like to look into that?",True,{}
i3/i3,https://github.com/i3/i3,2849,2017-07-30T16:02:06Z,2017-10-15T20:23:41Z,2018-08-16T17:58:15Z,MERGED,True,72,1,2,https://github.com/9ary,Create a new split container when switching a workspace container to split layout,3,['waiting'],https://github.com/i3/i3/pull/2849,https://github.com/hwangcc23,15,https://github.com/i3/i3/pull/2849#issuecomment-330241924,"The behavior before 52ce8c8 was to do it regardless of what layout we're
switching to.
Fixes #2846
Like I said in the issue thread, I need to check things out a bit more if tests are wanted, but I'm leaving this here in the meantime.","@Streetwalrus It is fixed. Please cherry-pick them again.
hwangcc23@b5a0bc1",True,{}
i3/i3,https://github.com/i3/i3,2849,2017-07-30T16:02:06Z,2017-10-15T20:23:41Z,2018-08-16T17:58:15Z,MERGED,True,72,1,2,https://github.com/9ary,Create a new split container when switching a workspace container to split layout,3,['waiting'],https://github.com/i3/i3/pull/2849,https://github.com/9ary,16,https://github.com/i3/i3/pull/2849#issuecomment-330335748,"The behavior before 52ce8c8 was to do it regardless of what layout we're
switching to.
Fixes #2846
Like I said in the issue thread, I need to check things out a bit more if tests are wanted, but I'm leaving this here in the meantime.","Pulled in the new commit and rebased. @Airblader, you requested something else than the typo but apparently deleted the comment?",True,{}
i3/i3,https://github.com/i3/i3,2849,2017-07-30T16:02:06Z,2017-10-15T20:23:41Z,2018-08-16T17:58:15Z,MERGED,True,72,1,2,https://github.com/9ary,Create a new split container when switching a workspace container to split layout,3,['waiting'],https://github.com/i3/i3/pull/2849,https://github.com/9ary,17,https://github.com/i3/i3/pull/2849#issuecomment-336257263,"The behavior before 52ce8c8 was to do it regardless of what layout we're
switching to.
Fixes #2846
Like I said in the issue thread, I need to check things out a bit more if tests are wanted, but I'm leaving this here in the meantime.","The test is currently failing because when the initial layout of a workspace is not a split, this skips changing the layout. Removing this check seems to make another test fail.
The toggle split test also seems to assume that the screen is in the landscape orientation, a portrait screen would have the default split be vertical, which would make it fail.",True,{}
i3/i3,https://github.com/i3/i3,2849,2017-07-30T16:02:06Z,2017-10-15T20:23:41Z,2018-08-16T17:58:15Z,MERGED,True,72,1,2,https://github.com/9ary,Create a new split container when switching a workspace container to split layout,3,['waiting'],https://github.com/i3/i3/pull/2849,https://github.com/9ary,18,https://github.com/i3/i3/pull/2849#issuecomment-336262014,"The behavior before 52ce8c8 was to do it regardless of what layout we're
switching to.
Fixes #2846
Like I said in the issue thread, I need to check things out a bit more if tests are wanted, but I'm leaving this here in the meantime.","I ended up following the behavior in con_set_layout, which is simply to default to a horizontal split.",True,{}
i3/i3,https://github.com/i3/i3,2849,2017-07-30T16:02:06Z,2017-10-15T20:23:41Z,2018-08-16T17:58:15Z,MERGED,True,72,1,2,https://github.com/9ary,Create a new split container when switching a workspace container to split layout,3,['waiting'],https://github.com/i3/i3/pull/2849,https://github.com/Airblader,19,https://github.com/i3/i3/pull/2849#issuecomment-336362022,"The behavior before 52ce8c8 was to do it regardless of what layout we're
switching to.
Fixes #2846
Like I said in the issue thread, I need to check things out a bit more if tests are wanted, but I'm leaving this here in the meantime.",All those test cases are the same with a few different values plugged in. Can we refactor them to iterate over those values and have the actual implementation of the test only once?,True,{}
i3/i3,https://github.com/i3/i3,2849,2017-07-30T16:02:06Z,2017-10-15T20:23:41Z,2018-08-16T17:58:15Z,MERGED,True,72,1,2,https://github.com/9ary,Create a new split container when switching a workspace container to split layout,3,['waiting'],https://github.com/i3/i3/pull/2849,https://github.com/domenkozar,20,https://github.com/i3/i3/pull/2849#issuecomment-336421356,"The behavior before 52ce8c8 was to do it regardless of what layout we're
switching to.
Fixes #2846
Like I said in the issue thread, I need to check things out a bit more if tests are wanted, but I'm leaving this here in the meantime.",FYI: layout splitv still works.,True,{}
i3/i3,https://github.com/i3/i3,2849,2017-07-30T16:02:06Z,2017-10-15T20:23:41Z,2018-08-16T17:58:15Z,MERGED,True,72,1,2,https://github.com/9ary,Create a new split container when switching a workspace container to split layout,3,['waiting'],https://github.com/i3/i3/pull/2849,https://github.com/9ary,21,https://github.com/i3/i3/pull/2849#issuecomment-336433450,"The behavior before 52ce8c8 was to do it regardless of what layout we're
switching to.
Fixes #2846
Like I said in the issue thread, I need to check things out a bit more if tests are wanted, but I'm leaving this here in the meantime.","Can we refactor them to iterate over those values and have the actual implementation of the test only once?

I'll check it out. Guess it's time to learn some Perl.",True,{}
i3/i3,https://github.com/i3/i3,2849,2017-07-30T16:02:06Z,2017-10-15T20:23:41Z,2018-08-16T17:58:15Z,MERGED,True,72,1,2,https://github.com/9ary,Create a new split container when switching a workspace container to split layout,3,['waiting'],https://github.com/i3/i3/pull/2849,https://github.com/9ary,22,https://github.com/i3/i3/pull/2849#issuecomment-336623215,"The behavior before 52ce8c8 was to do it regardless of what layout we're
switching to.
Fixes #2846
Like I said in the issue thread, I need to check things out a bit more if tests are wanted, but I'm leaving this here in the meantime.",This should do the trick.,True,{}
i3/i3,https://github.com/i3/i3,2849,2017-07-30T16:02:06Z,2017-10-15T20:23:41Z,2018-08-16T17:58:15Z,MERGED,True,72,1,2,https://github.com/9ary,Create a new split container when switching a workspace container to split layout,3,['waiting'],https://github.com/i3/i3/pull/2849,https://github.com/cpick,23,https://github.com/i3/i3/pull/2849#issuecomment-413632341,"The behavior before 52ce8c8 was to do it regardless of what layout we're
switching to.
Fixes #2846
Like I said in the issue thread, I need to check things out a bit more if tests are wanted, but I'm leaving this here in the meantime.","For anyone running Ubuntu Bionic, I created a PPA that applies this patch to the 4.14.1-1 version of i3 that bionic ships with:
sudo add-apt-repository ppa:cpick/i3
sudo apt update
sudo apt install i3",True,{}
i3/i3,https://github.com/i3/i3,2859,2017-08-19T15:53:41Z,2017-08-19T16:19:52Z,2017-08-19T16:23:00Z,MERGED,True,5,4,2,https://github.com/stapelberg,Fix tests,2,[],https://github.com/i3/i3/pull/2859,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2859,We need to merge both commits at the same time to get the tests to pass on travis.,We need to merge both commits at the same time to get the tests to pass on travis.,True,{}
i3/i3,https://github.com/i3/i3,2860,2017-08-19T16:21:48Z,2017-08-19T16:32:05Z,2017-08-19T16:34:16Z,MERGED,True,911,5,20,https://github.com/stapelberg,Merge the AnyEvent-I3 repository into i3/AnyEvent-I3,56,[],https://github.com/i3/i3/pull/2860,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2860,"That way, we can use newly introduced commands in the testsuite immediately, instead of having to wait until individual developers update their environment’s copy of AnyEvent::I3.
My next PR will introduce changes to src/ipc.c and AnyEvent-I3/ and testcases/, and everyone will be able to immediately verify the changes :).
I’ll push the (prefixed) AnyEvent-I3 tags after this is merged.","That way, we can use newly introduced commands in the testsuite immediately, instead of having to wait until individual developers update their environment’s copy of AnyEvent::I3.
My next PR will introduce changes to src/ipc.c and AnyEvent-I3/ and testcases/, and everyone will be able to immediately verify the changes :).
I’ll push the (prefixed) AnyEvent-I3 tags after this is merged.",True,{}
i3/i3,https://github.com/i3/i3,2860,2017-08-19T16:21:48Z,2017-08-19T16:32:05Z,2017-08-19T16:34:16Z,MERGED,True,911,5,20,https://github.com/stapelberg,Merge the AnyEvent-I3 repository into i3/AnyEvent-I3,56,[],https://github.com/i3/i3/pull/2860,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/2860#issuecomment-323533147,"That way, we can use newly introduced commands in the testsuite immediately, instead of having to wait until individual developers update their environment’s copy of AnyEvent::I3.
My next PR will introduce changes to src/ipc.c and AnyEvent-I3/ and testcases/, and everyone will be able to immediately verify the changes :).
I’ll push the (prefixed) AnyEvent-I3 tags after this is merged.","Yep, no changes in there — I literally merged the old commits into the repo. In the depths of the git CLI, there probably is a command to verify what I’m proposing here is bit-for-bit identical with the contents of the AnyEvent-I3 repository :).",True,{}
i3/i3,https://github.com/i3/i3,2861,2017-08-19T17:15:23Z,2017-08-19T17:23:03Z,2017-08-19T17:23:06Z,MERGED,True,180,16,10,https://github.com/stapelberg,Introduce the GET_CONFIG IPC request,3,[],https://github.com/i3/i3/pull/2861,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2861,,,True,{}
i3/i3,https://github.com/i3/i3,2862,2017-08-19T21:58:57Z,2017-08-19T22:19:46Z,2017-08-19T22:20:16Z,MERGED,True,11,9,3,https://github.com/stapelberg,Bugfix: consider inactive monitors when querying,1,[],https://github.com/i3/i3/pull/2862,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2862,"fixes #2815
fixes #2594","fixes #2815
fixes #2594",True,{}
i3/i3,https://github.com/i3/i3,2862,2017-08-19T21:58:57Z,2017-08-19T22:19:46Z,2017-08-19T22:20:16Z,MERGED,True,11,9,3,https://github.com/stapelberg,Bugfix: consider inactive monitors when querying,1,[],https://github.com/i3/i3/pull/2862,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2862#issuecomment-323550882,"fixes #2815
fixes #2594",I'll leave merging up to you since I don't know if you want to merge it for 4.14.,True,{}
i3/i3,https://github.com/i3/i3,2862,2017-08-19T21:58:57Z,2017-08-19T22:19:46Z,2017-08-19T22:20:16Z,MERGED,True,11,9,3,https://github.com/stapelberg,Bugfix: consider inactive monitors when querying,1,[],https://github.com/i3/i3/pull/2862,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/2862#issuecomment-323550923,"fixes #2815
fixes #2594","I'll leave merging up to you since I don't know if you want to merge it for 4.14.

Yeah, this should go in before 4.14 — we shouldn’t introduce a known-buggy RandR 1.5 implementation :)",True,{}
i3/i3,https://github.com/i3/i3,2863,2017-08-20T10:17:15Z,2017-08-20T10:25:07Z,2017-08-20T10:25:47Z,MERGED,True,6,0,1,https://github.com/stapelberg,i3bar: Bugfix: avoid freeze after VisibilityNotify,1,[],https://github.com/i3/i3/pull/2863,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2863,fixes #2790,fixes #2790,True,{}
i3/i3,https://github.com/i3/i3,2863,2017-08-20T10:17:15Z,2017-08-20T10:25:07Z,2017-08-20T10:25:47Z,MERGED,True,6,0,1,https://github.com/stapelberg,i3bar: Bugfix: avoid freeze after VisibilityNotify,1,[],https://github.com/i3/i3/pull/2863,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2863#issuecomment-323576344,fixes #2790,That's a really nice catch,True,{}
i3/i3,https://github.com/i3/i3,2864,2017-08-20T11:01:51Z,2017-08-20T11:16:54Z,2017-08-20T11:16:58Z,MERGED,True,17,10,3,https://github.com/stapelberg,Improve error messages for incorrect config lines starting with “set”,6,[],https://github.com/i3/i3/pull/2864,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2864,fixes #2564,fixes #2564,True,{}
i3/i3,https://github.com/i3/i3,2864,2017-08-20T11:01:51Z,2017-08-20T11:16:54Z,2017-08-20T11:16:58Z,MERGED,True,17,10,3,https://github.com/stapelberg,Improve error messages for incorrect config lines starting with “set”,6,[],https://github.com/i3/i3/pull/2864,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2864#issuecomment-323578219,fixes #2564,"I'm only on mobile right now, so apologies if this is trivially answered by looking at more code, but why do we introduce this new boolean rather than using has_errors?",True,{}
i3/i3,https://github.com/i3/i3,2864,2017-08-20T11:01:51Z,2017-08-20T11:16:54Z,2017-08-20T11:16:58Z,MERGED,True,17,10,3,https://github.com/stapelberg,Improve error messages for incorrect config lines starting with “set”,6,[],https://github.com/i3/i3/pull/2864,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/2864#issuecomment-323578274,fixes #2564,context is only defined after the whole variable expansion thing is done. I figured it’d be easier to introduce a new variable than to verify the change in lifespan of an existing one.,True,{}
i3/i3,https://github.com/i3/i3,2865,2017-08-20T12:33:33Z,2017-08-20T12:56:45Z,2017-08-20T12:56:47Z,MERGED,True,58,2,2,https://github.com/stapelberg,Focus windows upon ConfigureWindow with stack-mode=Above,1,[],https://github.com/i3/i3/pull/2865,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2865,"fixes #2708
fixes #2745","fixes #2708
fixes #2745",True,{}
i3/i3,https://github.com/i3/i3,2866,2017-08-20T12:57:46Z,2017-08-20T13:30:28Z,2017-08-20T13:30:31Z,MERGED,True,7,4,2,https://github.com/stapelberg,i3bar: only restart child when command changed,1,[],https://github.com/i3/i3/pull/2866,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2866,"this is a follow-up to
98f202d
fixes #2689
cc @jolange","this is a follow-up to
98f202d
fixes #2689
cc @jolange",True,{}
i3/i3,https://github.com/i3/i3,2867,2017-08-20T13:32:38Z,2017-08-20T15:07:23Z,2017-08-20T15:07:27Z,MERGED,True,67,1,2,https://github.com/stapelberg,Respect dont_warp flag when moving containers,1,[],https://github.com/i3/i3/pull/2867,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2867,"fixes #2681
fixes #2592","fixes #2681
fixes #2592",True,{}
i3/i3,https://github.com/i3/i3,2867,2017-08-20T13:32:38Z,2017-08-20T15:07:23Z,2017-08-20T15:07:27Z,MERGED,True,67,1,2,https://github.com/stapelberg,Respect dont_warp flag when moving containers,1,[],https://github.com/i3/i3/pull/2867,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/2867#issuecomment-323590681,"fixes #2681
fixes #2592",Done.,True,{}
i3/i3,https://github.com/i3/i3,2868,2017-08-20T16:02:24Z,2017-08-20T16:07:35Z,2017-08-20T16:08:33Z,MERGED,True,41,0,1,https://github.com/stapelberg,t/264-keypress-numlock: add mouse binding test,1,[],https://github.com/i3/i3/pull/2868,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2868,fixes #2523,fixes #2523,True,{}
i3/i3,https://github.com/i3/i3,2875,2017-08-23T13:57:34Z,2017-09-04T16:43:43Z,2017-09-04T16:43:43Z,MERGED,True,1,1,1,https://github.com/botovq,Avoid use of uninitialized in init_dpi_end,1,[],https://github.com/i3/i3/pull/2875,https://github.com/botovq,1,https://github.com/i3/i3/pull/2875,"If conn == NULL or display == NULL, init_dpi() jumps to init_dpi_end
before (declaring and) initializing resource. In init_dpi_end, there
is a free(resource) call conditionally on resource != NULL, so this
may lead to a bogus free. Found by clang -Wsometimes-uninitialized.","If conn == NULL or display == NULL, init_dpi() jumps to init_dpi_end
before (declaring and) initializing resource. In init_dpi_end, there
is a free(resource) call conditionally on resource != NULL, so this
may lead to a bogus free. Found by clang -Wsometimes-uninitialized.",True,{}
i3/i3,https://github.com/i3/i3,2877,2017-08-24T15:24:07Z,2017-08-28T07:43:42Z,2017-08-28T07:43:42Z,MERGED,True,4,0,1,https://github.com/hwangcc23,Update doc for dependency Module::Install,1,[],https://github.com/i3/i3/pull/2877,https://github.com/hwangcc23,1,https://github.com/i3/i3/pull/2877,"After moving to AnyEvent-I3, a new testsuite dependency is introduced: Module::Install.
Update the doc for this.
See the issue #2876.","After moving to AnyEvent-I3, a new testsuite dependency is introduced: Module::Install.
Update the doc for this.
See the issue #2876.",True,{}
i3/i3,https://github.com/i3/i3,2882,2017-08-26T09:33:52Z,2017-08-26T09:38:07Z,2017-08-26T10:39:01Z,MERGED,True,3,3,1,https://github.com/jolange,docs markup fixes,1,[],https://github.com/i3/i3/pull/2882,https://github.com/jolange,1,https://github.com/i3/i3/pull/2882,"… I collected some time ago. Should maybe be fixed, now that the 4.14 release is approaching.","… I collected some time ago. Should maybe be fixed, now that the 4.14 release is approaching.",True,{}
i3/i3,https://github.com/i3/i3,2882,2017-08-26T09:33:52Z,2017-08-26T09:38:07Z,2017-08-26T10:39:01Z,MERGED,True,3,3,1,https://github.com/jolange,docs markup fixes,1,[],https://github.com/i3/i3/pull/2882,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2882#issuecomment-325108258,"… I collected some time ago. Should maybe be fixed, now that the 4.14 release is approaching.",Thanks!,True,{}
i3/i3,https://github.com/i3/i3,2887,2017-08-28T02:21:14Z,2017-09-15T19:26:36Z,2017-09-15T19:26:36Z,MERGED,True,129,29,8,https://github.com/orestisfl,Allow assign to workspace by number,1,[],https://github.com/i3/i3/pull/2887,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/2887,"I haven't properly tested this, just a WIP take on the problem.
fixes #2590","I haven't properly tested this, just a WIP take on the problem.
fixes #2590",True,{}
i3/i3,https://github.com/i3/i3,2887,2017-08-28T02:21:14Z,2017-09-15T19:26:36Z,2017-09-15T19:26:36Z,MERGED,True,129,29,8,https://github.com/orestisfl,Allow assign to workspace by number,1,[],https://github.com/i3/i3/pull/2887,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/2887#issuecomment-325514240,"I haven't properly tested this, just a WIP take on the problem.
fixes #2590","I've been using my branch for the last day and the change seems to work as intended. Does the ""waiting"" label refer to testcases?",True,{}
i3/i3,https://github.com/i3/i3,2887,2017-08-28T02:21:14Z,2017-09-15T19:26:36Z,2017-09-15T19:26:36Z,MERGED,True,129,29,8,https://github.com/orestisfl,Allow assign to workspace by number,1,[],https://github.com/i3/i3/pull/2887,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2887#issuecomment-325557097,"I haven't properly tested this, just a WIP take on the problem.
fixes #2590",It refers to the fact that you called it a WIP. :-),True,{}
i3/i3,https://github.com/i3/i3,2887,2017-08-28T02:21:14Z,2017-09-15T19:26:36Z,2017-09-15T19:26:36Z,MERGED,True,129,29,8,https://github.com/orestisfl,Allow assign to workspace by number,1,[],https://github.com/i3/i3/pull/2887,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/2887#issuecomment-326950172,"I haven't properly tested this, just a WIP take on the problem.
fixes #2590","I have added some testcases. I can also ""dry"" the testcase code a bit, commiting now.",True,{}
i3/i3,https://github.com/i3/i3,2887,2017-08-28T02:21:14Z,2017-09-15T19:26:36Z,2017-09-15T19:26:36Z,MERGED,True,129,29,8,https://github.com/orestisfl,Allow assign to workspace by number,1,[],https://github.com/i3/i3/pull/2887,https://github.com/orestisfl,5,https://github.com/i3/i3/pull/2887#issuecomment-326950985,"I haven't properly tested this, just a WIP take on the problem.
fixes #2590",And can also merge the 2 cfg_assign functions,True,{}
i3/i3,https://github.com/i3/i3,2887,2017-08-28T02:21:14Z,2017-09-15T19:26:36Z,2017-09-15T19:26:36Z,MERGED,True,129,29,8,https://github.com/orestisfl,Allow assign to workspace by number,1,[],https://github.com/i3/i3/pull/2887,https://github.com/orestisfl,6,https://github.com/i3/i3/pull/2887#issuecomment-326967740,"I haven't properly tested this, just a WIP take on the problem.
fixes #2590",I don't know why the travis/check-spelling.pl script fails and I can't run it locally.,True,{}
i3/i3,https://github.com/i3/i3,2887,2017-08-28T02:21:14Z,2017-09-15T19:26:36Z,2017-09-15T19:26:36Z,MERGED,True,129,29,8,https://github.com/orestisfl,Allow assign to workspace by number,1,[],https://github.com/i3/i3/pull/2887,https://github.com/orestisfl,7,https://github.com/i3/i3/pull/2887#issuecomment-327340145,"I haven't properly tested this, just a WIP take on the problem.
fixes #2590","Just to be clear, I don't consider this a WIP anymore. I am pretty confident that the feature is complete functionality-wise.",True,{}
i3/i3,https://github.com/i3/i3,2887,2017-08-28T02:21:14Z,2017-09-15T19:26:36Z,2017-09-15T19:26:36Z,MERGED,True,129,29,8,https://github.com/orestisfl,Allow assign to workspace by number,1,[],https://github.com/i3/i3/pull/2887,https://github.com/Airblader,8,https://github.com/i3/i3/pull/2887#issuecomment-327389730,"I haven't properly tested this, just a WIP take on the problem.
fixes #2590","Yes, we'll just need to review it and get the tests running. I haven't had time to do so yet. I'll remove the label, though.",True,{}
i3/i3,https://github.com/i3/i3,2887,2017-08-28T02:21:14Z,2017-09-15T19:26:36Z,2017-09-15T19:26:36Z,MERGED,True,129,29,8,https://github.com/orestisfl,Allow assign to workspace by number,1,[],https://github.com/i3/i3/pull/2887,https://github.com/orestisfl,9,https://github.com/i3/i3/pull/2887#issuecomment-329644509,"I haven't properly tested this, just a WIP take on the problem.
fixes #2590",Done,True,{'HEART': ['https://github.com/tarcisioe']}
i3/i3,https://github.com/i3/i3,2888,2017-08-28T07:24:31Z,2017-08-28T10:07:41Z,2017-08-28T10:07:41Z,MERGED,True,8,0,2,https://github.com/stapelberg,Fix memory leak,2,[],https://github.com/i3/i3/pull/2888,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2888,,,True,{}
i3/i3,https://github.com/i3/i3,2889,2017-08-28T07:37:06Z,2017-08-28T10:07:57Z,2017-08-28T10:07:57Z,MERGED,True,50,10,2,https://github.com/stapelberg,Respect focus_on_window_activation for ConfigureRequests,1,[],https://github.com/i3/i3/pull/2889,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2889,fixes #2873,fixes #2873,True,{}
i3/i3,https://github.com/i3/i3,2891,2017-08-31T14:59:32Z,2017-09-04T16:44:14Z,2017-09-04T16:44:14Z,MERGED,True,2,0,1,https://github.com/hwangcc23,Properly initialize sigaction struct,1,[],https://github.com/i3/i3/pull/2891,https://github.com/hwangcc23,1,https://github.com/i3/i3/pull/2891,"The code in handle_signal() wasn't clearing the struct sigaction before passing it to sigaction().
This meant that we would block a random set of signals while executing the default handler, or jump to the uninitialized sa_sigaction (instead of sa_handler).
Initialize properly as we do in setup_signal_handler().","The code in handle_signal() wasn't clearing the struct sigaction before passing it to sigaction().
This meant that we would block a random set of signals while executing the default handler, or jump to the uninitialized sa_sigaction (instead of sa_handler).
Initialize properly as we do in setup_signal_handler().",True,{}
i3/i3,https://github.com/i3/i3,2893,2017-08-31T20:35:32Z,2017-08-31T20:50:01Z,2017-09-04T06:30:18Z,MERGED,True,40,66,2,https://github.com/stapelberg,"Revert ""i3-nagbar: add button flag to execute action with /bin/sh directly""",1,[],https://github.com/i3/i3/pull/2893,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2893,"Reverts #2766
fixes #2765","Reverts #2766
fixes #2765",True,{}
i3/i3,https://github.com/i3/i3,2896,2017-09-04T16:32:12Z,2017-09-05T07:01:54Z,2017-09-05T07:01:54Z,MERGED,True,1,1,1,https://github.com/Airblader,Invert condition to log debug message in correct situation,1,[],https://github.com/i3/i3/pull/2896,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2896,,,True,{}
i3/i3,https://github.com/i3/i3,2898,2017-09-04T18:42:47Z,2017-09-06T05:34:15Z,2017-09-10T10:37:54Z,MERGED,True,56,1,4,https://github.com/orestisfl,Fix crash with swap and invalid con_id,1,[],https://github.com/i3/i3/pull/2898,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/2898,"Fixes issue #2895.
I don't know if there is a more elegant way but at least it fixes the crash and seems to generally work.","Fixes issue #2895.
I don't know if there is a more elegant way but at least it fixes the crash and seems to generally work.",True,{}
i3/i3,https://github.com/i3/i3,2898,2017-09-04T18:42:47Z,2017-09-06T05:34:15Z,2017-09-10T10:37:54Z,MERGED,True,56,1,4,https://github.com/orestisfl,Fix crash with swap and invalid con_id,1,[],https://github.com/i3/i3/pull/2898,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2898#issuecomment-327020818,"Fixes issue #2895.
I don't know if there is a more elegant way but at least it fixes the crash and seems to generally work.","Also, after the changes have been addressed, we'll need to squash the commits together.",True,{}
i3/i3,https://github.com/i3/i3,2898,2017-09-04T18:42:47Z,2017-09-06T05:34:15Z,2017-09-10T10:37:54Z,MERGED,True,56,1,4,https://github.com/orestisfl,Fix crash with swap and invalid con_id,1,[],https://github.com/i3/i3/pull/2898,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2898#issuecomment-327020945,"Fixes issue #2895.
I don't know if there is a more elegant way but at least it fixes the crash and seems to generally work.","One last thing, please drop a comment when you made the changes so that we get notified!",True,{}
i3/i3,https://github.com/i3/i3,2898,2017-09-04T18:42:47Z,2017-09-06T05:34:15Z,2017-09-10T10:37:54Z,MERGED,True,56,1,4,https://github.com/orestisfl,Fix crash with swap and invalid con_id,1,[],https://github.com/i3/i3/pull/2898,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/2898#issuecomment-327025236,"Fixes issue #2895.
I don't know if there is a more elegant way but at least it fixes the crash and seems to generally work.",I think everything is addressed. Should i squash everything together?,True,{}
i3/i3,https://github.com/i3/i3,2898,2017-09-04T18:42:47Z,2017-09-06T05:34:15Z,2017-09-10T10:37:54Z,MERGED,True,56,1,4,https://github.com/orestisfl,Fix crash with swap and invalid con_id,1,[],https://github.com/i3/i3/pull/2898,https://github.com/Airblader,5,https://github.com/i3/i3/pull/2898#issuecomment-327286808,"Fixes issue #2895.
I don't know if there is a more elegant way but at least it fixes the crash and seems to generally work.",LGTM now. Can you squash it? Thanks!,True,{}
i3/i3,https://github.com/i3/i3,2898,2017-09-04T18:42:47Z,2017-09-06T05:34:15Z,2017-09-10T10:37:54Z,MERGED,True,56,1,4,https://github.com/orestisfl,Fix crash with swap and invalid con_id,1,[],https://github.com/i3/i3/pull/2898,https://github.com/orestisfl,6,https://github.com/i3/i3/pull/2898#issuecomment-327290132,"Fixes issue #2895.
I don't know if there is a more elegant way but at least it fixes the crash and seems to generally work.",Done,True,{}
i3/i3,https://github.com/i3/i3,2898,2017-09-04T18:42:47Z,2017-09-06T05:34:15Z,2017-09-10T10:37:54Z,MERGED,True,56,1,4,https://github.com/orestisfl,Fix crash with swap and invalid con_id,1,[],https://github.com/i3/i3/pull/2898,https://github.com/Airblader,7,https://github.com/i3/i3/pull/2898#issuecomment-327292576,"Fixes issue #2895.
I don't know if there is a more elegant way but at least it fixes the crash and seems to generally work.","Thank you!
@stapelberg I'll wait with merging this, actually; this should go into 4.14.1. Do you usually merge directly to master in this case or cherry-pick the commit?",True,{}
i3/i3,https://github.com/i3/i3,2898,2017-09-04T18:42:47Z,2017-09-06T05:34:15Z,2017-09-10T10:37:54Z,MERGED,True,56,1,4,https://github.com/orestisfl,Fix crash with swap and invalid con_id,1,[],https://github.com/i3/i3/pull/2898,https://github.com/stapelberg,8,https://github.com/i3/i3/pull/2898#issuecomment-327379555,"Fixes issue #2895.
I don't know if there is a more elegant way but at least it fixes the crash and seems to generally work.","We always merge into next, and cherry-pick into master if necessary.",True,{}
i3/i3,https://github.com/i3/i3,2898,2017-09-04T18:42:47Z,2017-09-06T05:34:15Z,2017-09-10T10:37:54Z,MERGED,True,56,1,4,https://github.com/orestisfl,Fix crash with swap and invalid con_id,1,[],https://github.com/i3/i3/pull/2898,https://github.com/stapelberg,9,https://github.com/i3/i3/pull/2898#issuecomment-327379849,"Fixes issue #2895.
I don't know if there is a more elegant way but at least it fixes the crash and seems to generally work.",This is now cherry-picked.,True,{}
i3/i3,https://github.com/i3/i3,2899,2017-09-06T15:03:11Z,2017-09-06T15:08:03Z,2017-09-06T15:10:48Z,MERGED,True,1,1,1,https://github.com/orestisfl,Fix typo in 265-swap.t,1,[],https://github.com/i3/i3/pull/2899,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/2899,,,True,{}
i3/i3,https://github.com/i3/i3,2901,2017-09-07T01:10:25Z,2017-09-07T12:55:38Z,2017-09-10T10:35:56Z,MERGED,True,3,0,2,https://github.com/orestisfl,Set marks to NULL after freeing ,2,[],https://github.com/i3/i3/pull/2901,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/2901,Fixes #2900.,Fixes #2900.,True,{}
i3/i3,https://github.com/i3/i3,2901,2017-09-07T01:10:25Z,2017-09-07T12:55:38Z,2017-09-10T10:35:56Z,MERGED,True,3,0,2,https://github.com/orestisfl,Set marks to NULL after freeing ,2,[],https://github.com/i3/i3/pull/2901,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/2901#issuecomment-327655800,Fixes #2900.,"Ok, I just realized that:

My testcase wasn't really for swap.
You already had a testcase that didn't catch the issue.",True,{}
i3/i3,https://github.com/i3/i3,2901,2017-09-07T01:10:25Z,2017-09-07T12:55:38Z,2017-09-10T10:35:56Z,MERGED,True,3,0,2,https://github.com/orestisfl,Set marks to NULL after freeing ,2,[],https://github.com/i3/i3/pull/2901,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2901#issuecomment-327687495,Fixes #2900.,@stapelberg This should probably also go into a bugfix release.,True,{}
i3/i3,https://github.com/i3/i3,2901,2017-09-07T01:10:25Z,2017-09-07T12:55:38Z,2017-09-10T10:35:56Z,MERGED,True,3,0,2,https://github.com/orestisfl,Set marks to NULL after freeing ,2,[],https://github.com/i3/i3/pull/2901,https://github.com/stapelberg,4,https://github.com/i3/i3/pull/2901#issuecomment-327695015,Fixes #2900.,Agreed. Let’s see if travis eventually decides to test this PR :),True,{}
i3/i3,https://github.com/i3/i3,2901,2017-09-07T01:10:25Z,2017-09-07T12:55:38Z,2017-09-10T10:35:56Z,MERGED,True,3,0,2,https://github.com/orestisfl,Set marks to NULL after freeing ,2,[],https://github.com/i3/i3/pull/2901,https://github.com/orestisfl,5,https://github.com/i3/i3/pull/2901#issuecomment-327719872,Fixes #2900.,done,True,{}
i3/i3,https://github.com/i3/i3,2901,2017-09-07T01:10:25Z,2017-09-07T12:55:38Z,2017-09-10T10:35:56Z,MERGED,True,3,0,2,https://github.com/orestisfl,Set marks to NULL after freeing ,2,[],https://github.com/i3/i3/pull/2901,https://github.com/budRich,6,https://github.com/i3/i3/pull/2901#issuecomment-327736971,Fixes #2900.,Excellent.,True,{}
i3/i3,https://github.com/i3/i3,2901,2017-09-07T01:10:25Z,2017-09-07T12:55:38Z,2017-09-10T10:35:56Z,MERGED,True,3,0,2,https://github.com/orestisfl,Set marks to NULL after freeing ,2,[],https://github.com/i3/i3/pull/2901,https://github.com/stapelberg,7,https://github.com/i3/i3/pull/2901#issuecomment-327790835,Fixes #2900.,…and cherry-picked into master. Thanks!,True,{'HOORAY': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,2902,2017-09-07T03:20:15Z,2017-09-16T11:07:22Z,2017-09-16T11:13:42Z,MERGED,True,153,28,3,https://github.com/orestisfl,Make swap work with fullscreen windows,2,[],https://github.com/i3/i3/pull/2902,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/2902,Fixes #2811,Fixes #2811,True,{}
i3/i3,https://github.com/i3/i3,2902,2017-09-07T03:20:15Z,2017-09-16T11:07:22Z,2017-09-16T11:13:42Z,MERGED,True,153,28,3,https://github.com/orestisfl,Make swap work with fullscreen windows,2,[],https://github.com/i3/i3/pull/2902,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2902#issuecomment-327897311,Fixes #2811,"Regarding geometry the behavior of swap is to exchange geometries, so I think it makes sense to do the same for fullscreen windows, yes.",True,{'THUMBS_UP': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,2902,2017-09-07T03:20:15Z,2017-09-16T11:07:22Z,2017-09-16T11:13:42Z,MERGED,True,153,28,3,https://github.com/orestisfl,Make swap work with fullscreen windows,2,[],https://github.com/i3/i3/pull/2902,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2902#issuecomment-327897966,Fixes #2811,"Have you also (manually) tested this with more exotic layouts? I know this is a weird thing, but it technically works and can lead to crashes if not careful: what about nested fullscreen containers and swapping child containers in it?
For example: open, open, split v, open, focus parent, fullscreen enable will fullscreen a stack of two vertical containers. What happens if you now swap only one of those two for a window on another workspace? What if that other window was fullscreened on its workspace?",True,{'THUMBS_UP': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,2902,2017-09-07T03:20:15Z,2017-09-16T11:07:22Z,2017-09-16T11:13:42Z,MERGED,True,153,28,3,https://github.com/orestisfl,Make swap work with fullscreen windows,2,[],https://github.com/i3/i3/pull/2902,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/2902#issuecomment-327935410,Fixes #2811,"I just tested with lots of windows (there is an unrelated visual bug there). No crashes, behavior is as expected imo.
Before fullscreen.
After fullscreen.
After workspace 2 and i3-msg swap mark A.
There is this thing where focus in image 2 and 3 is not the same but I think that it is not an issue with my changes because:

It behaves the same with and without fullscreen mode.
i3 doesn't maintain multiple selected windows (like in image 2) when you change workspace. I hope I haven't confused the terminology here. To say it in a simplest manner when multiple green windows are selected and then you change to another workspace and go back again only one green window is selected.

I also implemented your example in a testcase.",True,{}
i3/i3,https://github.com/i3/i3,2902,2017-09-07T03:20:15Z,2017-09-16T11:07:22Z,2017-09-16T11:13:42Z,MERGED,True,153,28,3,https://github.com/orestisfl,Make swap work with fullscreen windows,2,[],https://github.com/i3/i3/pull/2902,https://github.com/orestisfl,5,https://github.com/i3/i3/pull/2902#issuecomment-328285862,Fixes #2811,"This obviously needs some squashing and minor code improvements but I think the base functionality is right.
I have also implemented something for issue #2810. Should I commit here, open a new PR or wait for this to be merged? If we work on both issues at the same time we can also test for cases of swapping fullscreen + floating windows.",True,{}
i3/i3,https://github.com/i3/i3,2902,2017-09-07T03:20:15Z,2017-09-16T11:07:22Z,2017-09-16T11:13:42Z,MERGED,True,153,28,3,https://github.com/orestisfl,Make swap work with fullscreen windows,2,[],https://github.com/i3/i3/pull/2902,https://github.com/Airblader,6,https://github.com/i3/i3/pull/2902#issuecomment-328287736,Fixes #2811,"Let's keep the PRs separate, please. You can open the other one already if you want, you'll just have to rebase after this one is merged. That's up to you. :-)
I'd like to review but also manually try this out, I'll just have to get around to it. Perhaps I can find the time tomorrow.",True,{}
i3/i3,https://github.com/i3/i3,2902,2017-09-07T03:20:15Z,2017-09-16T11:07:22Z,2017-09-16T11:13:42Z,MERGED,True,153,28,3,https://github.com/orestisfl,Make swap work with fullscreen windows,2,[],https://github.com/i3/i3/pull/2902,https://github.com/Airblader,7,https://github.com/i3/i3/pull/2902#issuecomment-328344861,Fixes #2811,"The change itself looks good to me, though I haven't gotten around to testing it myself. Can you already try to clean this PR up for a final review, i.e.,

squash the commits
rebase onto the current HEAD
get rid of any TODOs etc. in the tests

Thank you!",True,{}
i3/i3,https://github.com/i3/i3,2902,2017-09-07T03:20:15Z,2017-09-16T11:07:22Z,2017-09-16T11:13:42Z,MERGED,True,153,28,3,https://github.com/orestisfl,Make swap work with fullscreen windows,2,[],https://github.com/i3/i3/pull/2902,https://github.com/orestisfl,8,https://github.com/i3/i3/pull/2902#issuecomment-328345393,Fixes #2811,"Yes, I will do it tomorrow. In the meanwhile, do you have an opinion for #2902 (review)?",True,{}
i3/i3,https://github.com/i3/i3,2902,2017-09-07T03:20:15Z,2017-09-16T11:07:22Z,2017-09-16T11:13:42Z,MERGED,True,153,28,3,https://github.com/orestisfl,Make swap work with fullscreen windows,2,[],https://github.com/i3/i3/pull/2902,https://github.com/orestisfl,9,https://github.com/i3/i3/pull/2902#issuecomment-328584384,Fixes #2811,Cleaned,True,{}
i3/i3,https://github.com/i3/i3,2908,2017-09-08T23:43:09Z,2017-09-09T15:32:35Z,2017-09-09T15:32:35Z,MERGED,True,1,1,1,https://github.com/heftig,Use OVER operator for drawing text,1,[],https://github.com/i3/i3/pull/2908,https://github.com/heftig,1,https://github.com/i3/i3/pull/2908,"For opaque text, SOURCE is not any different from OVER. However, when
drawing color glyphs (which consist of RGBA pixels instead of strokes)
SOURCE's handling of alpha is not what we want.
I stumbled across this because cairo 1.15.8 seems to clear the surface
before drawing color emoji if the operator is SOURCE, deleting every-
thing drawn before. Arguably, the area outside the glyph bounds should
not be touched, but even if this is a cairo bug the problem of alpha
within the glyph remains.","For opaque text, SOURCE is not any different from OVER. However, when
drawing color glyphs (which consist of RGBA pixels instead of strokes)
SOURCE's handling of alpha is not what we want.
I stumbled across this because cairo 1.15.8 seems to clear the surface
before drawing color emoji if the operator is SOURCE, deleting every-
thing drawn before. Arguably, the area outside the glyph bounds should
not be touched, but even if this is a cairo bug the problem of alpha
within the glyph remains.",True,"{'THUMBS_UP': ['https://github.com/stapelberg', 'https://github.com/qvint']}"
i3/i3,https://github.com/i3/i3,2908,2017-09-08T23:43:09Z,2017-09-09T15:32:35Z,2017-09-09T15:32:35Z,MERGED,True,1,1,1,https://github.com/heftig,Use OVER operator for drawing text,1,[],https://github.com/i3/i3/pull/2908,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2908#issuecomment-328239541,"For opaque text, SOURCE is not any different from OVER. However, when
drawing color glyphs (which consist of RGBA pixels instead of strokes)
SOURCE's handling of alpha is not what we want.
I stumbled across this because cairo 1.15.8 seems to clear the surface
before drawing color emoji if the operator is SOURCE, deleting every-
thing drawn before. Arguably, the area outside the glyph bounds should
not be touched, but even if this is a cairo bug the problem of alpha
within the glyph remains.",Can you provide example screenshots of what this change looks like?,True,{}
i3/i3,https://github.com/i3/i3,2908,2017-09-08T23:43:09Z,2017-09-09T15:32:35Z,2017-09-09T15:32:35Z,MERGED,True,1,1,1,https://github.com/heftig,Use OVER operator for drawing text,1,[],https://github.com/i3/i3/pull/2908,https://github.com/heftig,3,https://github.com/i3/i3/pull/2908#issuecomment-328240415,"For opaque text, SOURCE is not any different from OVER. However, when
drawing color glyphs (which consist of RGBA pixels instead of strokes)
SOURCE's handling of alpha is not what we want.
I stumbled across this because cairo 1.15.8 seems to clear the surface
before drawing color emoji if the operator is SOURCE, deleting every-
thing drawn before. Arguably, the area outside the glyph bounds should
not be touched, but even if this is a cairo bug the problem of alpha
within the glyph remains.",I used the base config and added an emoji into the status bar. It doesn't look any different except without this patch all the text to the left of the emoji is missing.,True,{}
i3/i3,https://github.com/i3/i3,2908,2017-09-08T23:43:09Z,2017-09-09T15:32:35Z,2017-09-09T15:32:35Z,MERGED,True,1,1,1,https://github.com/heftig,Use OVER operator for drawing text,1,[],https://github.com/i3/i3/pull/2908,https://github.com/Airblader,4,https://github.com/i3/i3/pull/2908#issuecomment-328241314,"For opaque text, SOURCE is not any different from OVER. However, when
drawing color glyphs (which consist of RGBA pixels instead of strokes)
SOURCE's handling of alpha is not what we want.
I stumbled across this because cairo 1.15.8 seems to clear the surface
before drawing color emoji if the operator is SOURCE, deleting every-
thing drawn before. Arguably, the area outside the glyph bounds should
not be touched, but even if this is a cairo bug the problem of alpha
within the glyph remains.","When you add ""except..."" to ""it doesn't look any different"", then it means it does look different. If it didn't, we wouldn't need a patch, right? :-) I'd like to see the visual change before and after, thus I think screenshots would make sense.",True,{}
i3/i3,https://github.com/i3/i3,2908,2017-09-08T23:43:09Z,2017-09-09T15:32:35Z,2017-09-09T15:32:35Z,MERGED,True,1,1,1,https://github.com/heftig,Use OVER operator for drawing text,1,[],https://github.com/i3/i3/pull/2908,https://github.com/heftig,5,https://github.com/i3/i3/pull/2908#issuecomment-328245072,"For opaque text, SOURCE is not any different from OVER. However, when
drawing color glyphs (which consist of RGBA pixels instead of strokes)
SOURCE's handling of alpha is not what we want.
I stumbled across this because cairo 1.15.8 seems to clear the surface
before drawing color emoji if the operator is SOURCE, deleting every-
thing drawn before. Arguably, the area outside the glyph bounds should
not be touched, but even if this is a cairo bug the problem of alpha
within the glyph remains.","Old Cairo:

New Cairo:

New Cairo, i3 patched:",True,{}
i3/i3,https://github.com/i3/i3,2908,2017-09-08T23:43:09Z,2017-09-09T15:32:35Z,2017-09-09T15:32:35Z,MERGED,True,1,1,1,https://github.com/heftig,Use OVER operator for drawing text,1,[],https://github.com/i3/i3/pull/2908,https://github.com/stapelberg,6,https://github.com/i3/i3/pull/2908#issuecomment-328275405,"For opaque text, SOURCE is not any different from OVER. However, when
drawing color glyphs (which consist of RGBA pixels instead of strokes)
SOURCE's handling of alpha is not what we want.
I stumbled across this because cairo 1.15.8 seems to clear the surface
before drawing color emoji if the operator is SOURCE, deleting every-
thing drawn before. Arguably, the area outside the glyph bounds should
not be touched, but even if this is a cairo bug the problem of alpha
within the glyph remains.","Thanks for the fix!
Could you rebase this onto the next branch to pick up commit 3137064 please?
These steps should do the trick:
git pull --rebase
git push -f git@github.com:heftig/i3 next",True,{}
i3/i3,https://github.com/i3/i3,2908,2017-09-08T23:43:09Z,2017-09-09T15:32:35Z,2017-09-09T15:32:35Z,MERGED,True,1,1,1,https://github.com/heftig,Use OVER operator for drawing text,1,[],https://github.com/i3/i3/pull/2908,https://github.com/heftig,7,https://github.com/i3/i3/pull/2908#issuecomment-328284113,"For opaque text, SOURCE is not any different from OVER. However, when
drawing color glyphs (which consist of RGBA pixels instead of strokes)
SOURCE's handling of alpha is not what we want.
I stumbled across this because cairo 1.15.8 seems to clear the surface
before drawing color emoji if the operator is SOURCE, deleting every-
thing drawn before. Arguably, the area outside the glyph bounds should
not be touched, but even if this is a cairo bug the problem of alpha
within the glyph remains.",Done.,True,{}
i3/i3,https://github.com/i3/i3,2908,2017-09-08T23:43:09Z,2017-09-09T15:32:35Z,2017-09-09T15:32:35Z,MERGED,True,1,1,1,https://github.com/heftig,Use OVER operator for drawing text,1,[],https://github.com/i3/i3/pull/2908,https://github.com/stapelberg,8,https://github.com/i3/i3/pull/2908#issuecomment-328284428,"For opaque text, SOURCE is not any different from OVER. However, when
drawing color glyphs (which consist of RGBA pixels instead of strokes)
SOURCE's handling of alpha is not what we want.
I stumbled across this because cairo 1.15.8 seems to clear the surface
before drawing color emoji if the operator is SOURCE, deleting every-
thing drawn before. Arguably, the area outside the glyph bounds should
not be touched, but even if this is a cairo bug the problem of alpha
within the glyph remains.",Thank you!,True,{}
i3/i3,https://github.com/i3/i3,2910,2017-09-09T03:51:25Z,2017-09-10T05:43:54Z,2017-09-10T05:43:54Z,MERGED,True,12,0,1,https://github.com/CyberShadow,Add README.md,2,[],https://github.com/i3/i3/pull/2910,https://github.com/CyberShadow,1,https://github.com/i3/i3/pull/2910,"As discussed in #2907, this adds a README file to the project root.
In addition to the links to the website and contributing guide, I took the liberty to add the project logo, and some badges for Travis CI status and issue/PR closure stats.","As discussed in #2907, this adds a README file to the project root.
In addition to the links to the website and contributing guide, I took the liberty to add the project logo, and some badges for Travis CI status and issue/PR closure stats.",True,{}
i3/i3,https://github.com/i3/i3,2910,2017-09-09T03:51:25Z,2017-09-10T05:43:54Z,2017-09-10T05:43:54Z,MERGED,True,12,0,1,https://github.com/CyberShadow,Add README.md,2,[],https://github.com/i3/i3/pull/2910,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/2910#issuecomment-328266684,"As discussed in #2907, this adds a README file to the project root.
In addition to the links to the website and contributing guide, I took the liberty to add the project logo, and some badges for Travis CI status and issue/PR closure stats.","Could you rebase this onto the next branch to pick up commit 3137064 please?
These steps should do the trick:
git pull
git rebase next
git push -f git@github.com:CyberShadow/i3 pull-20170909-033500",True,{}
i3/i3,https://github.com/i3/i3,2910,2017-09-09T03:51:25Z,2017-09-10T05:43:54Z,2017-09-10T05:43:54Z,MERGED,True,12,0,1,https://github.com/CyberShadow,Add README.md,2,[],https://github.com/i3/i3/pull/2910,https://github.com/CyberShadow,3,https://github.com/i3/i3/pull/2910#issuecomment-328305496,"As discussed in #2907, this adds a README file to the project root.
In addition to the links to the website and contributing guide, I took the liberty to add the project logo, and some badges for Travis CI status and issue/PR closure stats.","Could you rebase this onto the next branch to pick up commit 3137064 please?

Done.

Let's shorten this to just ""A tiling window manager"".

Done.

Should this really say ""Issue stats"" twice?

Well, I used the Markdown verbatim as provided by the website, and both badges do link to the same page, but there's no harm in changing it. Done.

Let's perhaps add ""for X11"".

Done.",True,{}
i3/i3,https://github.com/i3/i3,2911,2017-09-09T04:58:49Z,2017-09-09T09:41:08Z,2017-09-09T09:41:14Z,MERGED,True,5,0,2,https://github.com/stapelberg,i3bar: ensure get_buffer does not leak memory,2,[],https://github.com/i3/i3/pull/2911,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2911,"This fixes an AddressSanitizer warning which recently popped up.
related to #2907","This fixes an AddressSanitizer warning which recently popped up.
related to #2907",True,{'THUMBS_UP': ['https://github.com/CyberShadow']}
i3/i3,https://github.com/i3/i3,2913,2017-09-09T06:32:41Z,2017-09-10T11:02:11Z,2017-09-10T11:02:11Z,MERGED,True,1,1,1,https://github.com/CyberShadow,docs/testsuite: Correct Xephyr package name on Arch Linux,1,[],https://github.com/i3/i3/pull/2913,https://github.com/CyberShadow,1,https://github.com/i3/i3/pull/2913,"The package is called xorg-server-xephyr, not xorg-xserver-xephyr.","The package is called xorg-server-xephyr, not xorg-xserver-xephyr.",True,{}
i3/i3,https://github.com/i3/i3,2913,2017-09-09T06:32:41Z,2017-09-10T11:02:11Z,2017-09-10T11:02:11Z,MERGED,True,1,1,1,https://github.com/CyberShadow,docs/testsuite: Correct Xephyr package name on Arch Linux,1,[],https://github.com/i3/i3/pull/2913,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/2913#issuecomment-328275296,"The package is called xorg-server-xephyr, not xorg-xserver-xephyr.",Could you rebase this PR as well please? #2910 (comment),True,{}
i3/i3,https://github.com/i3/i3,2913,2017-09-09T06:32:41Z,2017-09-10T11:02:11Z,2017-09-10T11:02:11Z,MERGED,True,1,1,1,https://github.com/CyberShadow,docs/testsuite: Correct Xephyr package name on Arch Linux,1,[],https://github.com/i3/i3/pull/2913,https://github.com/CyberShadow,3,https://github.com/i3/i3/pull/2913#issuecomment-328334456,"The package is called xorg-server-xephyr, not xorg-xserver-xephyr.","Done. Sorry, forgot about this one earlier.",True,{}
i3/i3,https://github.com/i3/i3,2915,2017-09-09T09:44:49Z,2017-09-09T12:47:33Z,2017-09-10T10:36:15Z,MERGED,True,7,0,1,https://github.com/orestisfl,Add files generated by make check in AnyEvent-I3/ to .gitignore,1,[],https://github.com/i3/i3/pull/2915,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/2915,,,True,{}
i3/i3,https://github.com/i3/i3,2916,2017-09-09T12:14:51Z,2017-09-09T12:22:16Z,2017-09-09T12:22:17Z,MERGED,True,13,0,1,https://github.com/stapelberg,Include AnyEvent-I3 directory in dist tarballs,1,[],https://github.com/i3/i3/pull/2916,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2916,fixes #2905,fixes #2905,True,{}
i3/i3,https://github.com/i3/i3,2917,2017-09-09T14:34:13Z,2017-09-09T16:30:18Z,2017-09-09T16:30:21Z,MERGED,True,0,11,3,https://github.com/stapelberg,travis: remove clang-analyze,1,[],https://github.com/i3/i3/pull/2917,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2917,"• The output currently contains a large number of false-positives and — AFAICT —
no actual issues.
• Upstream shows little interest in addressing the long-standing issues with the
TAILQ macros, so the false-positive situation probably won’t change soon:
https://bugs.llvm.org/show_bug.cgi?id=18222
Currently, we largely spend travis CPU cycles on this, for no additional value.","• The output currently contains a large number of false-positives and — AFAICT —
no actual issues.
• Upstream shows little interest in addressing the long-standing issues with the
TAILQ macros, so the false-positive situation probably won’t change soon:
https://bugs.llvm.org/show_bug.cgi?id=18222
Currently, we largely spend travis CPU cycles on this, for no additional value.",True,{}
i3/i3,https://github.com/i3/i3,2920,2017-09-09T21:57:32Z,2017-09-13T08:58:39Z,2017-09-13T09:07:52Z,MERGED,True,270,82,18,https://github.com/CyberShadow,Consider RandR 1.5's monitors' output names in addition to monitor names,13,[],https://github.com/i3/i3/pull/2920,https://github.com/CyberShadow,1,https://github.com/i3/i3/pull/2920,"Fixes #2909.
I suggest reviewing commit by commit.
TODO:

 Replace OUTPUT_NAME macro with output_primary_name function
 Add IPC field for alternative output names
 Make i3bar use the new IPC field
 Update documentation
 Add test?","Fixes #2909.
I suggest reviewing commit by commit.
TODO:

 Replace OUTPUT_NAME macro with output_primary_name function
 Add IPC field for alternative output names
 Make i3bar use the new IPC field
 Update documentation
 Add test?",True,{}
i3/i3,https://github.com/i3/i3,2920,2017-09-09T21:57:32Z,2017-09-13T08:58:39Z,2017-09-13T09:07:52Z,MERGED,True,270,82,18,https://github.com/CyberShadow,Consider RandR 1.5's monitors' output names in addition to monitor names,13,[],https://github.com/i3/i3/pull/2920,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/2920#issuecomment-328322506,"Fixes #2909.
I suggest reviewing commit by commit.
TODO:

 Replace OUTPUT_NAME macro with output_primary_name function
 Add IPC field for alternative output names
 Make i3bar use the new IPC field
 Update documentation
 Add test?","For a commit-by-commit review, it’d be helpful if you could squash the history accordingly. I.e., don’t add commits to address review changes, rather modify your history and force-push. See git rebase -i.",True,{}
i3/i3,https://github.com/i3/i3,2920,2017-09-09T21:57:32Z,2017-09-13T08:58:39Z,2017-09-13T09:07:52Z,MERGED,True,270,82,18,https://github.com/CyberShadow,Consider RandR 1.5's monitors' output names in addition to monitor names,13,[],https://github.com/i3/i3/pull/2920,https://github.com/CyberShadow,3,https://github.com/i3/i3/pull/2920#issuecomment-328322615,"Fixes #2909.
I suggest reviewing commit by commit.
TODO:

 Replace OUTPUT_NAME macro with output_primary_name function
 Add IPC field for alternative output names
 Make i3bar use the new IPC field
 Update documentation
 Add test?","For a commit-by-commit review, it’d be helpful if you could squash the history accordingly. I.e., don’t add commits to address review changes, rather modify your history and force-push. See git rebase -i.

That's how I would do it normally, however in this particular case it's not easily possible to directly replace output->name with a function call, as unlike a macro, a function's return value is not an lvalue. Instead, I could squash 071c48f, d0266a7, and 95254e4 into a single commit. Never mind, there is a better way (update only those instances of output->name which don't need an lvalue in the first commit), will do this tomorrow.",True,{}
i3/i3,https://github.com/i3/i3,2920,2017-09-09T21:57:32Z,2017-09-13T08:58:39Z,2017-09-13T09:07:52Z,MERGED,True,270,82,18,https://github.com/CyberShadow,Consider RandR 1.5's monitors' output names in addition to monitor names,13,[],https://github.com/i3/i3/pull/2920,https://github.com/CyberShadow,4,https://github.com/i3/i3/pull/2920#issuecomment-328511577,"Fixes #2909.
I suggest reviewing commit by commit.
TODO:

 Replace OUTPUT_NAME macro with output_primary_name function
 Add IPC field for alternative output names
 Make i3bar use the new IPC field
 Update documentation
 Add test?","@stapelberg OK, I think this is ready for a closer look now.
I decided to try a different approach: instead of changing the IPC and updating i3bar to match, I made i3 canonicalize output names in the get_bar_config IPC reply. This saves having to do the same kind of changes in i3bar to make it keep track of all output names. Let me know what you think.
Remaining matters:


It Works On My Machine™, but any thoughts about writing a test for this? I had a look at the existing inject_randr15 machinery, but unless there's a way to ask the X server to create dummy outputs, looks like it would need to be extended to also handle RRGetOutputInfo. Perhaps we can just make it return the CRTC number (not totally sure how that works) of the X server's existing output, and make sure whatever its name is, it's still matched when it's in i3's configuration? Alternatively, perhaps instead of inject_randr15, ask the X server to create a monitor object using RRSetMonitor / xrandr --setmonitor (I guess that would require RandR 1.5 in Xephyr/Xvfb)?


Does this need any documentation changes anywhere?",True,{}
i3/i3,https://github.com/i3/i3,2920,2017-09-09T21:57:32Z,2017-09-13T08:58:39Z,2017-09-13T09:07:52Z,MERGED,True,270,82,18,https://github.com/CyberShadow,Consider RandR 1.5's monitors' output names in addition to monitor names,13,[],https://github.com/i3/i3/pull/2920,https://github.com/stapelberg,5,https://github.com/i3/i3/pull/2920#issuecomment-328517573,"Fixes #2909.
I suggest reviewing commit by commit.
TODO:

 Replace OUTPUT_NAME macro with output_primary_name function
 Add IPC field for alternative output names
 Make i3bar use the new IPC field
 Update documentation
 Add test?","I decided to try a different approach: instead of changing the IPC and updating i3bar to match, I made i3 canonicalize output names in the get_bar_config IPC reply. This saves having to do the same kind of changes in i3bar to make it keep track of all output names. Let me know what you think.

This is a good idea indeed!

I had a look at the existing inject_randr15 machinery, but unless there's a way to ask the X server to create dummy outputs, looks like it would need to be extended to also handle RRGetOutputInfo

Extending it is fine. We can add any request we need.

ask the X server to create a monitor object using RRSetMonitor / xrandr --setmonitor (I guess that would require RandR 1.5 in Xephyr/Xvfb)?

We use that in t/533-randr15.t, and it’s a bit unfortunate in hindsight: it modifies the environment, i.e. other tests can’t be expected to function the same way they function if they were started before t/533-randr.t. I’d like to not repeat this mistake more often, so a way which doesn’t modify the environment would be better.

Does this need any documentation changes anywhere?

Yeah, please update the userguide to clarify that output names can be the name of a monitor or one of the individual output names which constitute that monitor. (Is that clear? Improvements welcome.)",True,{}
i3/i3,https://github.com/i3/i3,2920,2017-09-09T21:57:32Z,2017-09-13T08:58:39Z,2017-09-13T09:07:52Z,MERGED,True,270,82,18,https://github.com/CyberShadow,Consider RandR 1.5's monitors' output names in addition to monitor names,13,[],https://github.com/i3/i3/pull/2920,https://github.com/CyberShadow,6,https://github.com/i3/i3/pull/2920#issuecomment-328526697,"Fixes #2909.
I suggest reviewing commit by commit.
TODO:

 Replace OUTPUT_NAME macro with output_primary_name function
 Add IPC field for alternative output names
 Make i3bar use the new IPC field
 Update documentation
 Add test?","Extending it is fine.

I was hoping you wouldn't say that ;) I'll look into it.",True,{}
i3/i3,https://github.com/i3/i3,2920,2017-09-09T21:57:32Z,2017-09-13T08:58:39Z,2017-09-13T09:07:52Z,MERGED,True,270,82,18,https://github.com/CyberShadow,Consider RandR 1.5's monitors' output names in addition to monitor names,13,[],https://github.com/i3/i3/pull/2920,https://github.com/CyberShadow,7,https://github.com/i3/i3/pull/2920#issuecomment-328797669,"Fixes #2909.
I suggest reviewing commit by commit.
TODO:

 Replace OUTPUT_NAME macro with output_primary_name function
 Add IPC field for alternative output names
 Make i3bar use the new IPC field
 Update documentation
 Add test?","Extending it is fine.

Done.

Yeah, please update the userguide to clarify that output names can be the name of a monitor or one of the individual output names which constitute that monitor. (Is that clear? Improvements welcome.)

Done.",True,{}
i3/i3,https://github.com/i3/i3,2920,2017-09-09T21:57:32Z,2017-09-13T08:58:39Z,2017-09-13T09:07:52Z,MERGED,True,270,82,18,https://github.com/CyberShadow,Consider RandR 1.5's monitors' output names in addition to monitor names,13,[],https://github.com/i3/i3/pull/2920,https://github.com/stapelberg,8,https://github.com/i3/i3/pull/2920#issuecomment-329103983,"Fixes #2909.
I suggest reviewing commit by commit.
TODO:

 Replace OUTPUT_NAME macro with output_primary_name function
 Add IPC field for alternative output names
 Make i3bar use the new IPC field
 Update documentation
 Add test?",Thanks a lot for this contribution!,True,{}
i3/i3,https://github.com/i3/i3,2920,2017-09-09T21:57:32Z,2017-09-13T08:58:39Z,2017-09-13T09:07:52Z,MERGED,True,270,82,18,https://github.com/CyberShadow,Consider RandR 1.5's monitors' output names in addition to monitor names,13,[],https://github.com/i3/i3/pull/2920,https://github.com/CyberShadow,9,https://github.com/i3/i3/pull/2920#issuecomment-329106329,"Fixes #2909.
I suggest reviewing commit by commit.
TODO:

 Replace OUTPUT_NAME macro with output_primary_name function
 Add IPC field for alternative output names
 Make i3bar use the new IPC field
 Update documentation
 Add test?",It's been a pleasure. Thanks for the review.,True,{}
i3/i3,https://github.com/i3/i3,2922,2017-09-10T06:38:14Z,2017-09-10T09:25:44Z,2017-09-10T09:25:47Z,MERGED,True,5,1,1,https://github.com/stapelberg,testcases/Makefile.PL: tell MakeMaker this is a pure-Perl distribution,1,[],https://github.com/i3/i3/pull/2922,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2922,fixes #2914,fixes #2914,True,{}
i3/i3,https://github.com/i3/i3,2923,2017-09-10T06:46:00Z,2017-09-10T11:41:47Z,2017-09-10T11:41:50Z,MERGED,True,249,289,6,https://github.com/stapelberg,Testsuite: avoid starting new i3 instances where possible,5,[],https://github.com/i3/i3/pull/2923,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2923,This significantly reduces the time required to run the testsuite.,This significantly reduces the time required to run the testsuite.,True,{}
i3/i3,https://github.com/i3/i3,2923,2017-09-10T06:46:00Z,2017-09-10T11:41:47Z,2017-09-10T11:41:50Z,MERGED,True,249,289,6,https://github.com/stapelberg,Testsuite: avoid starting new i3 instances where possible,5,[],https://github.com/i3/i3/pull/2923,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/2923#issuecomment-328330939,This significantly reduces the time required to run the testsuite.,"That’s a fair concern. I’ve added the kill_all_windows convenience function, which is now invoked between all the tests. Please take another look.",True,{}
i3/i3,https://github.com/i3/i3,2925,2017-09-10T14:14:34Z,2017-09-10T15:03:10Z,2020-06-22T06:26:51Z,MERGED,True,1,1,1,https://github.com/Airblader,"Revert ""Use OVER operator for drawing text (#2908)""",1,[],https://github.com/i3/i3/pull/2925,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2925,This reverts commit 1616046.,This reverts commit 1616046.,True,{}
i3/i3,https://github.com/i3/i3,2925,2017-09-10T14:14:34Z,2017-09-10T15:03:10Z,2020-06-22T06:26:51Z,MERGED,True,1,1,1,https://github.com/Airblader,"Revert ""Use OVER operator for drawing text (#2908)""",1,[],https://github.com/i3/i3/pull/2925,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2925#issuecomment-328345434,This reverts commit 1616046.,"@heftig
Your change in #2908 causes problems for me where for example the binding mode indicator no longer displays any text (same for status blocks with urgent property or urgent workspace buttons). Can you also reproduce this in your machine? My cairo version is 1.14.10.",True,{}
i3/i3,https://github.com/i3/i3,2925,2017-09-10T14:14:34Z,2017-09-10T15:03:10Z,2020-06-22T06:26:51Z,MERGED,True,1,1,1,https://github.com/Airblader,"Revert ""Use OVER operator for drawing text (#2908)""",1,[],https://github.com/i3/i3/pull/2925,https://github.com/heftig,3,https://github.com/i3/i3/pull/2925#issuecomment-328354372,This reverts commit 1616046.,Can you give me instructions on how to reproduce? I'm not actually an user of i3.,True,{}
i3/i3,https://github.com/i3/i3,2925,2017-09-10T14:14:34Z,2017-09-10T15:03:10Z,2020-06-22T06:26:51Z,MERGED,True,1,1,1,https://github.com/Airblader,"Revert ""Use OVER operator for drawing text (#2908)""",1,[],https://github.com/i3/i3/pull/2925,https://github.com/heftig,4,https://github.com/i3/i3/pull/2925#issuecomment-328355978,This reverts commit 1616046.,"Urgent window and workspace button (cairo 1.14.10, patched i3 4.14):

So it seems to work for me.",True,{}
i3/i3,https://github.com/i3/i3,2925,2017-09-10T14:14:34Z,2017-09-10T15:03:10Z,2020-06-22T06:26:51Z,MERGED,True,1,1,1,https://github.com/Airblader,"Revert ""Use OVER operator for drawing text (#2908)""",1,[],https://github.com/i3/i3/pull/2925,https://github.com/Airblader,5,https://github.com/i3/i3/pull/2925#issuecomment-328358822,This reverts commit 1616046.,"OK, so I actually run a fork which allows RGBA, thus the code in question looks like this (pre-patch):
    /* Do the drawing */
    cairo_set_operator(cr, CAIRO_OPERATOR_SOURCE);
    cairo_set_source_rgba(cr, pango_font_red, pango_font_green, pango_font_blue, pango_font_alpha);

I did reproduce this with upstream i3 earlier before submitting the commit revert, but at the moment I can only reproduce it on my fork (so I may have made a mistake earlier when reproducing it) where I use a fully transparent color for the text; I guess this explains why with OVER, the text is no longer visible, as now cairo (correctly) just doesn't draw anything anymore.
I at least would shine more light on cairo here as I think the behavior your PR fixed reeks a lot like a bug in cairo (why should cairo clear the entire surface when drawing a glyph in one specific spot?).
@psychon Do you know why cairo clears the entire surface when drawing a color glyph as described in #2908 using the SOURCE operator? Is this a bug?
Now, as you pointed out, either way the problem would persist within the glyph's boundaries. In my fork using SOURCE was a very conscious decision because it makes choosing the RGBA colors more intuitive (you don't have to worry about blending effects) and more powerful (you can make an area completely transparent).",True,{}
i3/i3,https://github.com/i3/i3,2925,2017-09-10T14:14:34Z,2017-09-10T15:03:10Z,2020-06-22T06:26:51Z,MERGED,True,1,1,1,https://github.com/Airblader,"Revert ""Use OVER operator for drawing text (#2908)""",1,[],https://github.com/i3/i3/pull/2925,https://github.com/psychon,6,https://github.com/i3/i3/pull/2925#issuecomment-328365163,This reverts commit 1616046.,"Hm. Could one of you write to the cairo mailing list about ""this glyph thing""? It would be better if I don't have to play man-in-the-middle here. If you want me to guess: The cairo code has a temporary surface for color glyphs and draws this to the target surface. With OVER this does just the right thing. With SOURCE (or any other unbounded operator), it does not. So if my guess is right, then this is a design bug.
@Airblader What alpha values are you using in your fork? Could you give me the values that are given to cairo_set_source_rgba? If your alpha is 0, well, drawing alpha 0 with OVER is a no-op (you are drawing something that is fully transparent, i.e. invisible).",True,{}
i3/i3,https://github.com/i3/i3,2925,2017-09-10T14:14:34Z,2017-09-10T15:03:10Z,2020-06-22T06:26:51Z,MERGED,True,1,1,1,https://github.com/Airblader,"Revert ""Use OVER operator for drawing text (#2908)""",1,[],https://github.com/i3/i3/pull/2925,https://github.com/heftig,7,https://github.com/i3/i3/pull/2925#issuecomment-328367435,This reverts commit 1616046.,"I was really confused because—as I mentioned—SOURCE and OVER are equal for opaque drawing. Since this concerns a fork that uses alpha text, can we revert the revert on the main branch? The fork can continue to use SOURCE and/or look for a better solution.",True,{}
i3/i3,https://github.com/i3/i3,2925,2017-09-10T14:14:34Z,2017-09-10T15:03:10Z,2020-06-22T06:26:51Z,MERGED,True,1,1,1,https://github.com/Airblader,"Revert ""Use OVER operator for drawing text (#2908)""",1,[],https://github.com/i3/i3/pull/2925,https://github.com/Airblader,8,https://github.com/i3/i3/pull/2925#issuecomment-328367740,This reverts commit 1616046.,"@psychon Yes, in my vase it's an alpha value of 0. I do get that with OVER this is expectedly a no-op, no argument here. :-) It's just unsatisfying that this also affects color glyphs. I specifically use SOURCE in my fork because it allows two things:

The actual color will be exactly what you draw with independently of some blend (i.e., if I draw #ff55aaef, then this is exactly the color I will end up with, whether I draw on a white, black or teal surface) which is user for users to handle.
It allows drawing transparent areas over colored ones such that they can be completely transparent. With OVER, there is no way to do this.
Anything you can achieve by using OVER, you can also achieve by using SOURCE, but not vice versa.

That's why I chose SOURCE in my fork, but for color glyphs this now causes issues. Within the bounds of the glyph this is probably how it should be expected to work, though, so I'm really unsure what we should do here. That's not a question I was asking to you, though. :-)",True,{}
i3/i3,https://github.com/i3/i3,2925,2017-09-10T14:14:34Z,2017-09-10T15:03:10Z,2020-06-22T06:26:51Z,MERGED,True,1,1,1,https://github.com/Airblader,"Revert ""Use OVER operator for drawing text (#2908)""",1,[],https://github.com/i3/i3/pull/2925,https://github.com/Airblader,9,https://github.com/i3/i3/pull/2925#issuecomment-328367820,This reverts commit 1616046.,@heftig Although it currently affects the fork the decision is still an important one here. Switching to OVER effectively means we can never support alpha values on text colors in the future. That's quite a restriction to impose. At least not support them in the way I chose to do it in the fork for the reasons mentioned above. I think it's worth thinking about this one even for upstream i3.,True,{}
i3/i3,https://github.com/i3/i3,2925,2017-09-10T14:14:34Z,2017-09-10T15:03:10Z,2020-06-22T06:26:51Z,MERGED,True,1,1,1,https://github.com/Airblader,"Revert ""Use OVER operator for drawing text (#2908)""",1,[],https://github.com/i3/i3/pull/2925,https://github.com/psychon,10,https://github.com/i3/i3/pull/2925#issuecomment-328461832,This reverts commit 1616046.,"Okay, so I wrote that mail to the cairo mailing list for you: https://lists.cairographics.org/archives/cairo/2017-September/028328.html",True,{'THUMBS_UP': ['https://github.com/Airblader']}
i3/i3,https://github.com/i3/i3,2925,2017-09-10T14:14:34Z,2017-09-10T15:03:10Z,2020-06-22T06:26:51Z,MERGED,True,1,1,1,https://github.com/Airblader,"Revert ""Use OVER operator for drawing text (#2908)""",1,[],https://github.com/i3/i3/pull/2925,https://github.com/Airblader,11,https://github.com/i3/i3/pull/2925#issuecomment-328466074,This reverts commit 1616046.,Thank you!,True,{}
i3/i3,https://github.com/i3/i3,2925,2017-09-10T14:14:34Z,2017-09-10T15:03:10Z,2020-06-22T06:26:51Z,MERGED,True,1,1,1,https://github.com/Airblader,"Revert ""Use OVER operator for drawing text (#2908)""",1,[],https://github.com/i3/i3/pull/2925,https://github.com/heftig,12,https://github.com/i3/i3/pull/2925#issuecomment-328515896,This reverts commit 1616046.,"cairo_set_source_rgb/_rgba sets the source pattern for drawing to an unbounded plane of a single color.
For drawing normal glyphs, Cairo gets A8 images (""coverage maps"") from FreeType and uses them as the mask for the operation.
For drawing color glyphs, Cairo gets RGBA8 images from FreeType and uses them as the source for the operation. The mask becomes unbounded.
Normally you shouldn't encounter any color glyphs when drawing emoji-less text. However, if the user has misconfigured fontconfig to prefer emoji fonts for sans-serif or similar, this may be broken, as suddenly normal characters without emoji presentation will get the color glyphs.
For emoji characters and sequences pango automatically switches to the emoji font family. Fontconfig's default config defines several emoji fonts to serve this family. Hence, you get color glyphs for emoji characters even if the fonts you selected do not include the emoji fonts.
However, there's still a way around this. This patch should set up fontconfig to reject all color fonts in all cases:
diff --git i/Makefile.am w/Makefile.am
index f1ba3f6375c151cb..0231a565a0963f50 100644
--- i/Makefile.am
+++ w/Makefile.am
@@ -266,24 +266,27 @@ i3_LDADD = \
 	$(XKBCOMMON_LIBS) \
 	$(YAJL_LIBS) \
 	$(LIBPCRE_LIBS) \
+	$(FONTCONFIG_LIBS) \
 	$(PANGOCAIRO_LIBS) \
 	$(PTHREAD_LIBS) \
 	$(CODE_COVERAGE_LDFLAGS)
 
 libi3_CFLAGS = \
 	$(AM_CFLAGS) \
 	$(XCB_CFLAGS) \
 	$(XCB_UTIL_CFLAGS) \
 	$(XCB_UTIL_XRM_CFLAGS) \
 	$(YAJL_CFLAGS) \
+	$(FONTCONFIG_CFLAGS) \
 	$(PANGOCAIRO_CFLAGS)
 
 libi3_LIBS = \
 	$(top_builddir)/libi3.a \
 	$(XCB_LIBS) \
 	$(XCB_UTIL_LIBS) \
 	$(XCB_UTIL_XRM_LIBS) \
 	$(YAJL_LIBS) \
+	$(FONTCONFIG_LIBS) \
 	$(PANGOCAIRO_LIBS)
 
 libi3_a_CFLAGS = \
@@ -372,14 +375,16 @@ i3bar_i3bar_CFLAGS = \
 	$(libi3_CFLAGS) \
 	$(XCB_CFLAGS) \
 	$(XKBCOMMON_CFLAGS) \
+	$(FONTCONFIG_CFLAGS) \
 	$(PANGOCAIRO_CFLAGS) \
 	$(YAJL_CFLAGS)
 
 i3bar_i3bar_LDADD = \
 	$(libi3_LIBS) \
 	$(XCB_LIBS) \
 	$(XCB_UTIL_CURSOR_LIBS) \
 	$(XKBCOMMON_LIBS) \
+	$(FONTCONFIG_LIBS) \
 	$(PANGOCAIRO_LIBS) \
 	$(YAJL_LIBS)
 
diff --git i/configure.ac w/configure.ac
index 7d274e36b209e4fe..163c5baa60371cd4 100644
--- i/configure.ac
+++ w/configure.ac
@@ -99,6 +99,7 @@ PKG_CHECK_MODULES([XCB_UTIL_XRM], [xcb-xrm])
 PKG_CHECK_MODULES([XKBCOMMON], [xkbcommon xkbcommon-x11])
 PKG_CHECK_MODULES([YAJL], [yajl])
 PKG_CHECK_MODULES([LIBPCRE], [libpcre >= 8.10])
+PKG_CHECK_MODULES([FONTCONFIG], [fontconfig])
 PKG_CHECK_MODULES([PANGOCAIRO], [cairo >= 1.14.4 pangocairo])
 
 # Checks for programs.
diff --git i/libi3/font.c w/libi3/font.c
index 81091ea74a31da11..b07a7f4163092827 100644
--- i/libi3/font.c
+++ w/libi3/font.c
@@ -16,7 +16,9 @@
 
 #include <cairo/cairo-xcb.h>
 #include <pango/pangocairo.h>
+#include <fontconfig/fontconfig.h>
 
+static bool initialized_fontconfig = false;
 static const i3Font *savedFont = NULL;
 
 static xcb_visualtype_t *root_visual_type;
@@ -152,25 +154,61 @@ static int predict_text_width_pango(const char *text, size_t text_len, bool pang
     return width;
 }
 
+static void initialize_fontconfig (void)
+{
+    FcConfig *config = FcConfigCreate ();
+    FcBool res;
+
+    if (!FcConfigParseAndLoad(config, FcConfigFilename(NULL), FcTrue)) {
+        ELOG(""Failed to load default fontconfig\n"");
+        goto bail;
+    }
+
+    res = FcConfigParseAndLoadFromMemory(config,
+        ""<fontconfig>""
+        ""  <selectfont><rejectfont>""
+        ""    <pattern><patelt name=\""color\""><bool>True</bool></patelt></pattern>""
+        ""  </rejectfont></selectfont>""
+        ""</fontconfig>"", FcTrue);
+    if (!res) {
+        ELOG(""Failed to add color-rejecting fontconfig\n"");
+        goto bail;
+    }
+
+    if (!FcConfigSetCurrent(config)) {
+        ELOG(""Failed to activate custom fontconfig\n"");
+        goto bail;
+    }
+
+bail:
+    /* Always clean up our reference (FcConfigSetCurrent takes its own) */
+    FcConfigDestroy(config);
+}
+
 /*
  * Loads a font for usage, also getting its metrics. If fallback is true,
  * the fonts 'fixed' or '-misc-*' will be loaded instead of exiting. If any
  * font was previously loaded, it will be freed.
  *
  */
 i3Font load_font(const char *pattern, const bool fallback) {
     /* if any font was previously loaded, free it now */
     free_font();
 
     i3Font font;
     font.type = FONT_TYPE_NONE;
 
     /* No XCB connction, return early because we're just validating the
      * configuration file. */
     if (conn == NULL) {
         return font;
     }
 
+    if (!initialized_fontconfig) {
+        initialize_fontconfig();
+        initialized_fontconfig = true;
+    }
+
     /* Try to load a pango font if specified */
     if (strlen(pattern) > strlen(""pango:"") && !strncmp(pattern, ""pango:"", strlen(""pango:""))) {
         const char *font_pattern = pattern + strlen(""pango:"");",True,{}
i3/i3,https://github.com/i3/i3,2925,2017-09-10T14:14:34Z,2017-09-10T15:03:10Z,2020-06-22T06:26:51Z,MERGED,True,1,1,1,https://github.com/Airblader,"Revert ""Use OVER operator for drawing text (#2908)""",1,[],https://github.com/i3/i3/pull/2925,https://github.com/heftig,13,https://github.com/i3/i3/pull/2925#issuecomment-328612332,This reverts commit 1616046.,"Made a patch to cairo that might solve the problem if it's accepted (in some form):
https://bugs.freedesktop.org/show_bug.cgi?id=102661",True,{}
i3/i3,https://github.com/i3/i3,2925,2017-09-10T14:14:34Z,2017-09-10T15:03:10Z,2020-06-22T06:26:51Z,MERGED,True,1,1,1,https://github.com/Airblader,"Revert ""Use OVER operator for drawing text (#2908)""",1,[],https://github.com/i3/i3/pull/2925,https://github.com/psychon,14,https://github.com/i3/i3/pull/2925#issuecomment-328757331,This reverts commit 1616046.,"A different patch was accepted, so apparently this is now fixed in cairo (but still does not have any unit tests, I think :-( )",True,{}
i3/i3,https://github.com/i3/i3,2925,2017-09-10T14:14:34Z,2017-09-10T15:03:10Z,2020-06-22T06:26:51Z,MERGED,True,1,1,1,https://github.com/Airblader,"Revert ""Use OVER operator for drawing text (#2908)""",1,[],https://github.com/i3/i3/pull/2925,https://github.com/Jesin,15,https://github.com/i3/i3/pull/2925#issuecomment-411591110,This reverts commit 1616046.,Should this be re-applied now that it's fixed in Cairo?,True,{}
i3/i3,https://github.com/i3/i3,2925,2017-09-10T14:14:34Z,2017-09-10T15:03:10Z,2020-06-22T06:26:51Z,MERGED,True,1,1,1,https://github.com/Airblader,"Revert ""Use OVER operator for drawing text (#2908)""",1,[],https://github.com/i3/i3/pull/2925,https://github.com/xzfc,16,https://github.com/i3/i3/pull/2925#issuecomment-556411728,This reverts commit 1616046.,"Can we re-revert it back?
Advantages of OVER over SOURCE (pun intended):

Subpixel font rendering (#3604)
No transparent garbage around color emoji characters (see the titlebar renders below)

@Airblader, I see your reasoning in #2925 (comment). This affects only i3-gaps (and hypothetical future version of vanilla i3) and only if a user has configured RGBA font colors. Thus I propose to use OVER by default and fallback to SOURCE in the said case. Not an ideal solution, but it covers more cases.
Patch for i3-gaps:
-    cairo_set_operator(cr, CAIRO_OPERATOR_SOURCE);
+    cairo_set_operator(cr, pango_font_alpha == 1.0 ? CAIRO_OPERATOR_OVER : CAIRO_OPERATOR_SOURCE);
Renders
gaps-before.png
gaps-after.png
render script
Left/right columns: disabled/enabled subpixel antialiasing in fonts.conf.
Rows: various titlebar background/text colors.",True,{'THUMBS_UP': ['https://github.com/qvint']}
i3/i3,https://github.com/i3/i3,2925,2017-09-10T14:14:34Z,2017-09-10T15:03:10Z,2020-06-22T06:26:51Z,MERGED,True,1,1,1,https://github.com/Airblader,"Revert ""Use OVER operator for drawing text (#2908)""",1,[],https://github.com/i3/i3/pull/2925,https://github.com/stapelberg,17,https://github.com/i3/i3/pull/2925#issuecomment-587154846,This reverts commit 1616046.,"Can we re-revert it back?

Can you send a PR for that please?",True,{}
i3/i3,https://github.com/i3/i3,2925,2017-09-10T14:14:34Z,2017-09-10T15:03:10Z,2020-06-22T06:26:51Z,MERGED,True,1,1,1,https://github.com/Airblader,"Revert ""Use OVER operator for drawing text (#2908)""",1,[],https://github.com/i3/i3/pull/2925,https://github.com/xzfc,18,https://github.com/i3/i3/pull/2925#issuecomment-587211779,This reverts commit 1616046.,Done: #3947,True,{'THUMBS_UP': ['https://github.com/Jesin']}
i3/i3,https://github.com/i3/i3,2926,2017-09-10T19:05:19Z,2017-09-10T20:08:05Z,2017-09-10T20:08:08Z,MERGED,True,18,2,3,https://github.com/stapelberg,Unflake tests,3,[],https://github.com/i3/i3/pull/2926,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2926,"Each of these commits fixes one source of flakyness.
AFAICT, there are still a few others, but these should be a strict improvement already.","Each of these commits fixes one source of flakyness.
AFAICT, there are still a few others, but these should be a strict improvement already.",True,{}
i3/i3,https://github.com/i3/i3,2928,2017-09-11T13:18:22Z,2017-09-11T18:49:48Z,2017-09-11T18:49:48Z,MERGED,True,78,80,1,https://github.com/CyberShadow,"docs/hacking-howto: Promote ""Using git / sending patches"" section",3,[],https://github.com/i3/i3/pull/2928,https://github.com/CyberShadow,1,https://github.com/i3/i3/pull/2928,Fixes #2907.,Fixes #2907.,True,{}
i3/i3,https://github.com/i3/i3,2928,2017-09-11T13:18:22Z,2017-09-11T18:49:48Z,2017-09-11T18:49:48Z,MERGED,True,78,80,1,https://github.com/CyberShadow,"docs/hacking-howto: Promote ""Using git / sending patches"" section",3,[],https://github.com/i3/i3/pull/2928,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2928#issuecomment-328619138,Fixes #2907.,"Can you squash those commits, please?",True,{}
i3/i3,https://github.com/i3/i3,2928,2017-09-11T13:18:22Z,2017-09-11T18:49:48Z,2017-09-11T18:49:48Z,MERGED,True,78,80,1,https://github.com/CyberShadow,"docs/hacking-howto: Promote ""Using git / sending patches"" section",3,[],https://github.com/i3/i3/pull/2928,https://github.com/CyberShadow,3,https://github.com/i3/i3/pull/2928#issuecomment-328620014,Fixes #2907.,"Are you sure? I did this change as one commit first, then I redid it as separate commits so it's possible to actually read the diff.
You can also squash it while merging in GitHub's UI, no?",True,{}
i3/i3,https://github.com/i3/i3,2928,2017-09-11T13:18:22Z,2017-09-11T18:49:48Z,2017-09-11T18:49:48Z,MERGED,True,78,80,1,https://github.com/CyberShadow,"docs/hacking-howto: Promote ""Using git / sending patches"" section",3,[],https://github.com/i3/i3/pull/2928,https://github.com/Airblader,4,https://github.com/i3/i3/pull/2928#issuecomment-328620609,Fixes #2907.,Squashing shouldn't affect the overall diff. Since you only moved a few sections we don't need more than one commit for that.,True,{}
i3/i3,https://github.com/i3/i3,2928,2017-09-11T13:18:22Z,2017-09-11T18:49:48Z,2017-09-11T18:49:48Z,MERGED,True,78,80,1,https://github.com/CyberShadow,"docs/hacking-howto: Promote ""Using git / sending patches"" section",3,[],https://github.com/i3/i3/pull/2928,https://github.com/CyberShadow,5,https://github.com/i3/i3/pull/2928#issuecomment-328621474,Fixes #2907.,"Squashing shouldn't affect the overall diff.

That's why there are multiple commits. It's not possible to discern the smaller changes from the overall diff (or that of a single squashed commit).

Since you only moved a few sections we don't need more than one commit for that.

Not really. Sorry, have you read the commit messages? Or do you mean that the changes that weren't just literally moving a single block of text around are too minor to be in their own commits?",True,{}
i3/i3,https://github.com/i3/i3,2928,2017-09-11T13:18:22Z,2017-09-11T18:49:48Z,2017-09-11T18:49:48Z,MERGED,True,78,80,1,https://github.com/CyberShadow,"docs/hacking-howto: Promote ""Using git / sending patches"" section",3,[],https://github.com/i3/i3/pull/2928,https://github.com/Airblader,6,https://github.com/i3/i3/pull/2928#issuecomment-328622626,Fixes #2907.,"Ah, I actually misses that you made changes other than moving the section. You're completely right in this case, of course.",True,{}
i3/i3,https://github.com/i3/i3,2932,2017-09-11T19:14:50Z,2017-09-11T19:31:30Z,2017-09-12T22:53:32Z,MERGED,True,0,1,1,https://github.com/orestisfl,Fix userguide bug,1,[],https://github.com/i3/i3/pull/2932,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/2932,"Fixes #2931.
I am pretty sure this line is at fault but I don't know how to produce the userguide to test it. Is there a way?","Fixes #2931.
I am pretty sure this line is at fault but I don't know how to produce the userguide to test it. Is there a way?",True,{}
i3/i3,https://github.com/i3/i3,2932,2017-09-11T19:14:50Z,2017-09-11T19:31:30Z,2017-09-12T22:53:32Z,MERGED,True,0,1,1,https://github.com/orestisfl,Fix userguide bug,1,[],https://github.com/i3/i3/pull/2932,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/2932#issuecomment-328633085,"Fixes #2931.
I am pretty sure this line is at fault but I don't know how to produce the userguide to test it. Is there a way?","This was it actually. I found the travis/docs script but run it from another branch, that's why I closed it.
before
after",True,{}
i3/i3,https://github.com/i3/i3,2932,2017-09-11T19:14:50Z,2017-09-11T19:31:30Z,2017-09-12T22:53:32Z,MERGED,True,0,1,1,https://github.com/orestisfl,Fix userguide bug,1,[],https://github.com/i3/i3/pull/2932,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2932#issuecomment-328633928,"Fixes #2931.
I am pretty sure this line is at fault but I don't know how to produce the userguide to test it. Is there a way?",@stapelberg We need to put this into the bugfix as well.,True,{}
i3/i3,https://github.com/i3/i3,2932,2017-09-11T19:14:50Z,2017-09-11T19:31:30Z,2017-09-12T22:53:32Z,MERGED,True,0,1,1,https://github.com/orestisfl,Fix userguide bug,1,[],https://github.com/i3/i3/pull/2932,https://github.com/stapelberg,4,https://github.com/i3/i3/pull/2932#issuecomment-328634509,"Fixes #2931.
I am pretty sure this line is at fault but I don't know how to produce the userguide to test it. Is there a way?","Yeah, I’ll do a cherry-pick of fixes to master once we have the RandR 1.5 bug fixed.",True,{}
i3/i3,https://github.com/i3/i3,2935,2017-09-12T09:30:22Z,2017-09-13T13:07:22Z,2017-09-13T20:41:55Z,MERGED,True,46,5,3,https://github.com/orestisfl,Make sure that parse_config input terminates with '\0',2,[],https://github.com/i3/i3/pull/2935,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/2935,Fixes #2934,Fixes #2934,True,{}
i3/i3,https://github.com/i3/i3,2935,2017-09-12T09:30:22Z,2017-09-13T13:07:22Z,2017-09-13T20:41:55Z,MERGED,True,46,5,3,https://github.com/orestisfl,Make sure that parse_config input terminates with '\0',2,[],https://github.com/i3/i3/pull/2935,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/2935#issuecomment-329128720,Fixes #2934,Test added,True,{}
i3/i3,https://github.com/i3/i3,2935,2017-09-12T09:30:22Z,2017-09-13T13:07:22Z,2017-09-13T20:41:55Z,MERGED,True,46,5,3,https://github.com/orestisfl,Make sure that parse_config input terminates with '\0',2,[],https://github.com/i3/i3/pull/2935,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/2935#issuecomment-329153097,Fixes #2934,Done,True,{}
i3/i3,https://github.com/i3/i3,2935,2017-09-12T09:30:22Z,2017-09-13T13:07:22Z,2017-09-13T20:41:55Z,MERGED,True,46,5,3,https://github.com/orestisfl,Make sure that parse_config input terminates with '\0',2,[],https://github.com/i3/i3/pull/2935,https://github.com/stapelberg,4,https://github.com/i3/i3/pull/2935#issuecomment-329161810,Fixes #2934,Thank you!,True,{'HOORAY': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,2937,2017-09-12T10:24:19Z,2017-09-14T20:10:17Z,2017-09-23T16:36:22Z,MERGED,True,1,1,1,https://github.com/orestisfl,Add -name argument for Xephyr,1,[],https://github.com/i3/i3/pull/2937,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/2937,"This way you can assign the test windows to an empty workspace to avoid
interacting with them:
assign [instance=""(?i)i3test""] workspace testing
The value is configurable through complete-run.pl.","This way you can assign the test windows to an empty workspace to avoid
interacting with them:
assign [instance=""(?i)i3test""] workspace testing
The value is configurable through complete-run.pl.",True,{}
i3/i3,https://github.com/i3/i3,2937,2017-09-12T10:24:19Z,2017-09-14T20:10:17Z,2017-09-23T16:36:22Z,MERGED,True,1,1,1,https://github.com/orestisfl,Add -name argument for Xephyr,1,[],https://github.com/i3/i3/pull/2937,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/2937#issuecomment-329006495,"This way you can assign the test windows to an empty workspace to avoid
interacting with them:
assign [instance=""(?i)i3test""] workspace testing
The value is configurable through complete-run.pl.",Split the commits up,True,{}
i3/i3,https://github.com/i3/i3,2937,2017-09-12T10:24:19Z,2017-09-14T20:10:17Z,2017-09-23T16:36:22Z,MERGED,True,1,1,1,https://github.com/orestisfl,Add -name argument for Xephyr,1,[],https://github.com/i3/i3/pull/2937,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/2937#issuecomment-329587346,"This way you can assign the test windows to an empty workspace to avoid
interacting with them:
assign [instance=""(?i)i3test""] workspace testing
The value is configurable through complete-run.pl.",Done,True,{}
i3/i3,https://github.com/i3/i3,2940,2017-09-12T20:11:44Z,2017-09-12T20:16:37Z,2017-09-12T20:16:40Z,MERGED,True,2,0,1,https://github.com/stapelberg,testsuite: install Module::Install so that AnyEvent-I3/Makefile.PL works,1,[],https://github.com/i3/i3/pull/2940,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2940,"As per https://perlmaven.com/cant-locate-inc-module-install-in-inc, the inc/
directory should not be under version control.
fixes #2914","As per https://perlmaven.com/cant-locate-inc-module-install-in-inc, the inc/
directory should not be under version control.
fixes #2914",True,{}
i3/i3,https://github.com/i3/i3,2941,2017-09-13T12:44:48Z,2018-03-31T18:34:18Z,2018-03-31T18:34:41Z,MERGED,True,286,90,6,https://github.com/orestisfl,Fix focus order in floating_disable & floating_enable for unfocused windows,5,[],https://github.com/i3/i3/pull/2941,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/2941,"Fixes #2938
Fixes #1975","Fixes #2938
Fixes #1975",True,{}
i3/i3,https://github.com/i3/i3,2941,2017-09-13T12:44:48Z,2018-03-31T18:34:18Z,2018-03-31T18:34:41Z,MERGED,True,286,90,6,https://github.com/orestisfl,Fix focus order in floating_disable & floating_enable for unfocused windows,5,[],https://github.com/i3/i3/pull/2941,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2941#issuecomment-329168559,"Fixes #2938
Fixes #1975","I don't expect test cases for this, but what happens in the following situations now?

One floating window on another workspace, but it is not the focused one within the workspace. What has focus in that workspace after unfloating it?
Two floating windows on another workspace and the focused one is unfloated
Two floating windows on another workspace and the one not focused is unfloated

My expectation would be that

the unfloated window will never be focused (on that workspace)
the unfloated window is focused (on that workspace)
the still floating window is focused (on that workspace)",True,{}
i3/i3,https://github.com/i3/i3,2941,2017-09-13T12:44:48Z,2018-03-31T18:34:18Z,2018-03-31T18:34:41Z,MERGED,True,286,90,6,https://github.com/orestisfl,Fix focus order in floating_disable & floating_enable for unfocused windows,5,[],https://github.com/i3/i3/pull/2941,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/2941#issuecomment-329172590,"Fixes #2938
Fixes #1975","I don't expect test cases for this

Why not? I was looking ideas for more testcases.

👍
👍
👎 Will investigate. The exact configuration is: tiled, floating1 floating2 & focus stack: floating2 > floating1 > tiled. For focus stack: floating2 > tiled > floating1 we already have the expected behavior.",True,{}
i3/i3,https://github.com/i3/i3,2941,2017-09-13T12:44:48Z,2018-03-31T18:34:18Z,2018-03-31T18:34:41Z,MERGED,True,286,90,6,https://github.com/orestisfl,Fix focus order in floating_disable & floating_enable for unfocused windows,5,[],https://github.com/i3/i3/pull/2941,https://github.com/Airblader,4,https://github.com/i3/i3/pull/2941#issuecomment-329173243,"Fixes #2938
Fixes #1975","By all means, feel free to add testcases. I just wanted to make clear that I'm only asking about the behavior. :-)",True,{}
i3/i3,https://github.com/i3/i3,2941,2017-09-13T12:44:48Z,2018-03-31T18:34:18Z,2018-03-31T18:34:41Z,MERGED,True,286,90,6,https://github.com/orestisfl,Fix focus order in floating_disable & floating_enable for unfocused windows,5,[],https://github.com/i3/i3/pull/2941,https://github.com/orestisfl,5,https://github.com/i3/i3/pull/2941#issuecomment-329184072,"Fixes #2938
Fixes #1975",The problem is that I wasn't checking for floating containers in my loop. Will push after I write the tests.,True,{}
i3/i3,https://github.com/i3/i3,2941,2017-09-13T12:44:48Z,2018-03-31T18:34:18Z,2018-03-31T18:34:41Z,MERGED,True,286,90,6,https://github.com/orestisfl,Fix focus order in floating_disable & floating_enable for unfocused windows,5,[],https://github.com/i3/i3/pull/2941,https://github.com/orestisfl,6,https://github.com/i3/i3/pull/2941#issuecomment-329189493,"Fixes #2938
Fixes #1975",Up! I actually fixed it by removing code.,True,{}
i3/i3,https://github.com/i3/i3,2941,2017-09-13T12:44:48Z,2018-03-31T18:34:18Z,2018-03-31T18:34:41Z,MERGED,True,286,90,6,https://github.com/orestisfl,Fix focus order in floating_disable & floating_enable for unfocused windows,5,[],https://github.com/i3/i3/pull/2941,https://github.com/orestisfl,7,https://github.com/i3/i3/pull/2941#issuecomment-329463136,"Fixes #2938
Fixes #1975","Squashed, added fix for floating_enable(). Probably looking for more test case ideas.",True,{}
i3/i3,https://github.com/i3/i3,2941,2017-09-13T12:44:48Z,2018-03-31T18:34:18Z,2018-03-31T18:34:41Z,MERGED,True,286,90,6,https://github.com/orestisfl,Fix focus order in floating_disable & floating_enable for unfocused windows,5,[],https://github.com/i3/i3/pull/2941,https://github.com/orestisfl,8,https://github.com/i3/i3/pull/2941#issuecomment-329637372,"Fixes #2938
Fixes #1975",Updated,True,{}
i3/i3,https://github.com/i3/i3,2941,2017-09-13T12:44:48Z,2018-03-31T18:34:18Z,2018-03-31T18:34:41Z,MERGED,True,286,90,6,https://github.com/orestisfl,Fix focus order in floating_disable & floating_enable for unfocused windows,5,[],https://github.com/i3/i3/pull/2941,https://github.com/orestisfl,9,https://github.com/i3/i3/pull/2941#issuecomment-329707121,"Fixes #2938
Fixes #1975",Still has problems. Don't merge. Will edit this comment.,True,{}
i3/i3,https://github.com/i3/i3,2941,2017-09-13T12:44:48Z,2018-03-31T18:34:18Z,2018-03-31T18:34:41Z,MERGED,True,286,90,6,https://github.com/orestisfl,Fix focus order in floating_disable & floating_enable for unfocused windows,5,[],https://github.com/i3/i3/pull/2941,https://github.com/orestisfl,10,https://github.com/i3/i3/pull/2941#issuecomment-329960021,"Fixes #2938
Fixes #1975",Updated. The new testcases crash my previous implementation.,True,{}
i3/i3,https://github.com/i3/i3,2941,2017-09-13T12:44:48Z,2018-03-31T18:34:18Z,2018-03-31T18:34:41Z,MERGED,True,286,90,6,https://github.com/orestisfl,Fix focus order in floating_disable & floating_enable for unfocused windows,5,[],https://github.com/i3/i3/pull/2941,https://github.com/orestisfl,11,https://github.com/i3/i3/pull/2941#issuecomment-330602916,"Fixes #2938
Fixes #1975",@Airblader please remove the waiting label.,True,{}
i3/i3,https://github.com/i3/i3,2941,2017-09-13T12:44:48Z,2018-03-31T18:34:18Z,2018-03-31T18:34:41Z,MERGED,True,286,90,6,https://github.com/orestisfl,Fix focus order in floating_disable & floating_enable for unfocused windows,5,[],https://github.com/i3/i3/pull/2941,https://github.com/orestisfl,12,https://github.com/i3/i3/pull/2941#issuecomment-330804440,"Fixes #2938
Fixes #1975","After #2969 (comment) I modified the code of insert_con_into to fix the problems of move I described and reused the function in floating_disable. It is in a very early stage and I can't clean it up right now but it might be a better alternative:
https://github.com/orestisf1993/i3/tree/issue-2938-insert_into
I'll see if I can reuse it for floating_enable too.",True,{}
i3/i3,https://github.com/i3/i3,2941,2017-09-13T12:44:48Z,2018-03-31T18:34:18Z,2018-03-31T18:34:41Z,MERGED,True,286,90,6,https://github.com/orestisfl,Fix focus order in floating_disable & floating_enable for unfocused windows,5,[],https://github.com/i3/i3/pull/2941,https://github.com/orestisfl,13,https://github.com/i3/i3/pull/2941#issuecomment-331858510,"Fixes #2938
Fixes #1975",Just pushed a commit that also fixes #1975. Will write a test for this and I could move it on a separate PR after #2975.,True,{}
i3/i3,https://github.com/i3/i3,2941,2017-09-13T12:44:48Z,2018-03-31T18:34:18Z,2018-03-31T18:34:41Z,MERGED,True,286,90,6,https://github.com/orestisfl,Fix focus order in floating_disable & floating_enable for unfocused windows,5,[],https://github.com/i3/i3/pull/2941,https://github.com/Airblader,14,https://github.com/i3/i3/pull/2941#issuecomment-341986469,"Fixes #2938
Fixes #1975","Sorry, I'm currently a little lost on as to what your status for the PR ist (?) :-)",True,{}
i3/i3,https://github.com/i3/i3,2941,2017-09-13T12:44:48Z,2018-03-31T18:34:18Z,2018-03-31T18:34:41Z,MERGED,True,286,90,6,https://github.com/orestisfl,Fix focus order in floating_disable & floating_enable for unfocused windows,5,[],https://github.com/i3/i3/pull/2941,https://github.com/orestisfl,15,https://github.com/i3/i3/pull/2941#issuecomment-343228913,"Fixes #2938
Fixes #1975",I'd like to use insert_con_into from #2975 instead of the current implementation.,True,{}
i3/i3,https://github.com/i3/i3,2941,2017-09-13T12:44:48Z,2018-03-31T18:34:18Z,2018-03-31T18:34:41Z,MERGED,True,286,90,6,https://github.com/orestisfl,Fix focus order in floating_disable & floating_enable for unfocused windows,5,[],https://github.com/i3/i3/pull/2941,https://github.com/Airblader,16,https://github.com/i3/i3/pull/2941#issuecomment-343654366,"Fixes #2938
Fixes #1975","Fair enough, let's continue there first.",True,{}
i3/i3,https://github.com/i3/i3,2941,2017-09-13T12:44:48Z,2018-03-31T18:34:18Z,2018-03-31T18:34:41Z,MERGED,True,286,90,6,https://github.com/orestisfl,Fix focus order in floating_disable & floating_enable for unfocused windows,5,[],https://github.com/i3/i3/pull/2941,https://github.com/orestisfl,17,https://github.com/i3/i3/pull/2941#issuecomment-373683014,"Fixes #2938
Fixes #1975","I've incorporated insert_con_into into floating_disable. Will investigate if floating_enable can be tidied up too but I think the PR can be reviewed right now.
I'll also run this patch on my machine for a while since it's a pretty risky PR.",True,{}
i3/i3,https://github.com/i3/i3,2941,2017-09-13T12:44:48Z,2018-03-31T18:34:18Z,2018-03-31T18:34:41Z,MERGED,True,286,90,6,https://github.com/orestisfl,Fix focus order in floating_disable & floating_enable for unfocused windows,5,[],https://github.com/i3/i3/pull/2941,https://github.com/orestisfl,18,https://github.com/i3/i3/pull/2941#issuecomment-376001185,"Fixes #2938
Fixes #1975",Up. This will need some time to be reviewed but we can slowly work on it.,True,{}
i3/i3,https://github.com/i3/i3,2941,2017-09-13T12:44:48Z,2018-03-31T18:34:18Z,2018-03-31T18:34:41Z,MERGED,True,286,90,6,https://github.com/orestisfl,Fix focus order in floating_disable & floating_enable for unfocused windows,5,[],https://github.com/i3/i3/pull/2941,https://github.com/Airblader,19,https://github.com/i3/i3/pull/2941#issuecomment-376286124,"Fixes #2938
Fixes #1975",I have some vacation in a week and will try to take a look at this then.,True,{}
i3/i3,https://github.com/i3/i3,2941,2017-09-13T12:44:48Z,2018-03-31T18:34:18Z,2018-03-31T18:34:41Z,MERGED,True,286,90,6,https://github.com/orestisfl,Fix focus order in floating_disable & floating_enable for unfocused windows,5,[],https://github.com/i3/i3/pull/2941,https://github.com/Airblader,20,https://github.com/i3/i3/pull/2941#issuecomment-377535819,"Fixes #2938
Fixes #1975",Can you resolve the conflicts? :-),True,{}
i3/i3,https://github.com/i3/i3,2942,2017-09-13T15:35:13Z,2017-09-13T16:38:47Z,2017-09-13T16:38:50Z,MERGED,True,260,94,10,https://github.com/stapelberg,Improve append_layout’s invalid JSON handling,3,[],https://github.com/i3/i3/pull/2942,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2942,,,True,{}
i3/i3,https://github.com/i3/i3,2943,2017-09-13T16:26:59Z,2017-09-13T16:38:28Z,2017-09-13T16:38:30Z,MERGED,True,11,0,1,https://github.com/stapelberg,Add .editorconfig (see editorconfig.org),1,[],https://github.com/i3/i3/pull/2943,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2943,"This file uses the same settings which we currently have in our vim modeline,
but can be picked up by many different editors without having to add and
maintain editor-specific modelines in all of our source files.","This file uses the same settings which we currently have in our vim modeline,
but can be picked up by many different editors without having to add and
maintain editor-specific modelines in all of our source files.",True,{}
i3/i3,https://github.com/i3/i3,2945,2017-09-14T11:17:03Z,2017-09-14T20:08:37Z,2017-09-14T20:08:42Z,MERGED,True,233,562,65,https://github.com/stapelberg,simplify tests which use launch_with_config precisely once,4,[],https://github.com/i3/i3/pull/2945,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2945,"I suggest reviewing commit-by-commit.
I had hoped for this change to have more effect, but at least on my machine, there is no measurable change in execution time. I’m still submitting it for the code reduction.","I suggest reviewing commit-by-commit.
I had hoped for this change to have more effect, but at least on my machine, there is no measurable change in execution time. I’m still submitting it for the code reduction.",True,{}
i3/i3,https://github.com/i3/i3,2946,2017-09-14T11:32:38Z,2017-09-14T15:48:37Z,2017-09-14T15:48:40Z,MERGED,True,3,0,1,https://github.com/stapelberg,tests: unflake t/257-keypress-group1-fallback.t,1,[],https://github.com/i3/i3/pull/2946,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2946,fixes #2944,fixes #2944,True,{}
i3/i3,https://github.com/i3/i3,2947,2017-09-14T12:59:50Z,2017-09-14T15:49:03Z,2017-09-14T15:49:06Z,MERGED,True,0,0,23,https://github.com/stapelberg,Reorder tests to not use the same number,1,[],https://github.com/i3/i3/pull/2947,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2947,"Distinct numbers make re-running individual tests easier by helping with
tab-completion.
Completeness verified using:
for i in $(seq 0 600)
do
  files=$(ls testcases/t/$(printf ""%03d"" $i)-*.t 2>&- | wc -l)
  [ ""$files"" != ""0"" ] && [ ""$files"" != ""1"" ] && echo ""clash: $i""
done","Distinct numbers make re-running individual tests easier by helping with
tab-completion.
Completeness verified using:
for i in $(seq 0 600)
do
  files=$(ls testcases/t/$(printf ""%03d"" $i)-*.t 2>&- | wc -l)
  [ ""$files"" != ""0"" ] && [ ""$files"" != ""1"" ] && echo ""clash: $i""
done",True,{}
i3/i3,https://github.com/i3/i3,2949,2017-09-14T15:27:22Z,2017-09-14T15:48:22Z,2017-09-14T15:48:26Z,MERGED,True,1,1,1,https://github.com/stapelberg,travis: install xrandr in Docker container for t/533-randr15.t,1,[],https://github.com/i3/i3/pull/2949,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2949,,,True,{}
i3/i3,https://github.com/i3/i3,2950,2017-09-14T15:53:51Z,2017-09-15T09:31:34Z,2017-09-16T13:19:42Z,MERGED,True,67,3,4,https://github.com/CyberShadow,Fix erratic behavior with single container child jumping outputs,2,[],https://github.com/i3/i3/pull/2950,https://github.com/CyberShadow,1,https://github.com/i3/i3/pull/2950,"This fixes a regression introduced in commit 4e88c10: when attempting to move the single child of a container in the direction of another output, i3 would move the window to the output, despite the window not being at the edge of its output, instead of moving it to its parent container.
The bug occurred because the check for moving containers across outputs with non-default workspace layouts (issue #1603) did not actually verify that the moved window lies at the edge of the workspace, despite what its comment said.
Fixes #2466.","This fixes a regression introduced in commit 4e88c10: when attempting to move the single child of a container in the direction of another output, i3 would move the window to the output, despite the window not being at the edge of its output, instead of moving it to its parent container.
The bug occurred because the check for moving containers across outputs with non-default workspace layouts (issue #1603) did not actually verify that the moved window lies at the edge of the workspace, despite what its comment said.
Fixes #2466.",True,{}
i3/i3,https://github.com/i3/i3,2950,2017-09-14T15:53:51Z,2017-09-15T09:31:34Z,2017-09-16T13:19:42Z,MERGED,True,67,3,4,https://github.com/CyberShadow,Fix erratic behavior with single container child jumping outputs,2,[],https://github.com/i3/i3/pull/2950,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2950#issuecomment-329551379,"This fixes a regression introduced in commit 4e88c10: when attempting to move the single child of a container in the direction of another output, i3 would move the window to the output, despite the window not being at the edge of its output, instead of moving it to its parent container.
The bug occurred because the check for moving containers across outputs with non-default workspace layouts (issue #1603) did not actually verify that the moved window lies at the edge of the workspace, despite what its comment said.
Fixes #2466.","Thanks for the PR! This looks mostly good to me.
@stapelberg We should probably rebase this to also have the changes to the tests you made, right? Also, we should perhaps put this in the bugfix.",True,{}
i3/i3,https://github.com/i3/i3,2951,2017-09-14T19:20:26Z,2017-10-13T07:18:50Z,2017-10-13T07:18:53Z,MERGED,True,47,7,3,https://github.com/stapelberg,tests: run under Xvfb by default (if available),1,[],https://github.com/i3/i3/pull/2951,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2951,This shaves off two seconds of wall-clock time (10s → 8s).,This shaves off two seconds of wall-clock time (10s → 8s).,True,{}
i3/i3,https://github.com/i3/i3,2951,2017-09-14T19:20:26Z,2017-10-13T07:18:50Z,2017-10-13T07:18:53Z,MERGED,True,47,7,3,https://github.com/stapelberg,tests: run under Xvfb by default (if available),1,[],https://github.com/i3/i3/pull/2951,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2951#issuecomment-329584084,This shaves off two seconds of wall-clock time (10s → 8s).,"What happens now if I explicitly wrap xvfb around the call?
Also the tedtsuite docs need to be adapted for this.",True,{}
i3/i3,https://github.com/i3/i3,2951,2017-09-14T19:20:26Z,2017-10-13T07:18:50Z,2017-10-13T07:18:53Z,MERGED,True,47,7,3,https://github.com/stapelberg,tests: run under Xvfb by default (if available),1,[],https://github.com/i3/i3/pull/2951,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/2951#issuecomment-329585066,This shaves off two seconds of wall-clock time (10s → 8s).,"Explicitly wrapping xvfb-run seems to result in a hang :).
I updated docs/testsuite. Let me know if I missed any other spot.",True,{}
i3/i3,https://github.com/i3/i3,2951,2017-09-14T19:20:26Z,2017-10-13T07:18:50Z,2017-10-13T07:18:53Z,MERGED,True,47,7,3,https://github.com/stapelberg,tests: run under Xvfb by default (if available),1,[],https://github.com/i3/i3/pull/2951,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/2951#issuecomment-329632568,This shaves off two seconds of wall-clock time (10s → 8s).,"Explicitly wrapping xvfb-run seems to result in a hang :)

This should be fixed with #2952.
The hang happened with Xvfb on display "":100"" because the X99 socket (used by xvfb-run by default) was sorted above X100. X100 was the socket used by the Xvfb instance started inside complete-run.pl because the for loop starts from 99, tries to open Xvfb on display 99, fails and increments $n to 100.",True,{}
i3/i3,https://github.com/i3/i3,2951,2017-09-14T19:20:26Z,2017-10-13T07:18:50Z,2017-10-13T07:18:53Z,MERGED,True,47,7,3,https://github.com/stapelberg,tests: run under Xvfb by default (if available),1,[],https://github.com/i3/i3/pull/2951,https://github.com/orestisfl,5,https://github.com/i3/i3/pull/2951#issuecomment-330480391,This shaves off two seconds of wall-clock time (10s → 8s).,"Random thought: why run nested xvfb AND xephyr? Why not switch to plain xvfb and then try to use xephyr if it's not available?
A quick change passes all the tests except 533-randr15.t (which could probably be fixed), it's smaller and has approximately the same runtime.
diff --git a/testcases/lib/StartXServer.pm b/testcases/lib/StartXServer.pm
index 49976394..7a4217d9 100644
--- a/testcases/lib/StartXServer.pm
+++ b/testcases/lib/StartXServer.pm
@@ -104,8 +104,7 @@ sub start_xserver {
     my @sockets_waiting;
     for (1 .. $parallel) {
         my $socket = fork_xserver($keep_xserver_output, $displaynum,
-                'Xephyr', "":$displaynum"", '-screen', '1280x800',
-                '-nolisten', 'tcp', '-name', ""i3test"");
+                'Xvfb', "":$displaynum"", '-nolisten', 'tcp');
         push(@displays, "":$displaynum"");
         push(@sockets_waiting, $socket);
         $displaynum++;",True,{}
i3/i3,https://github.com/i3/i3,2951,2017-09-14T19:20:26Z,2017-10-13T07:18:50Z,2017-10-13T07:18:53Z,MERGED,True,47,7,3,https://github.com/stapelberg,tests: run under Xvfb by default (if available),1,[],https://github.com/i3/i3/pull/2951,https://github.com/stapelberg,6,https://github.com/i3/i3/pull/2951#issuecomment-331620336,This shaves off two seconds of wall-clock time (10s → 8s).,"Random thought: why run nested xvfb AND xephyr? Why not switch to plain xvfb and then try to use xephyr if it's not available?

Good point! I just tried this, but it turns out that using Xvfb directly is significantly slower on my system (6 seconds instead of 4 seconds). I’m not sure yet why that is.",True,{}
i3/i3,https://github.com/i3/i3,2951,2017-09-14T19:20:26Z,2017-10-13T07:18:50Z,2017-10-13T07:18:53Z,MERGED,True,47,7,3,https://github.com/stapelberg,tests: run under Xvfb by default (if available),1,[],https://github.com/i3/i3/pull/2951,https://github.com/orestisfl,7,https://github.com/i3/i3/pull/2951#issuecomment-331620727,This shaves off two seconds of wall-clock time (10s → 8s).,I think xvfb starting up has some significant overhead. Try xvfb-run echo hello. Xephyr seems to be pretty fast instead.,True,{}
i3/i3,https://github.com/i3/i3,2951,2017-09-14T19:20:26Z,2017-10-13T07:18:50Z,2017-10-13T07:18:53Z,MERGED,True,47,7,3,https://github.com/stapelberg,tests: run under Xvfb by default (if available),1,[],https://github.com/i3/i3/pull/2951,https://github.com/stapelberg,8,https://github.com/i3/i3/pull/2951#issuecomment-336371347,This shaves off two seconds of wall-clock time (10s → 8s).,"Let’s go ahead with this as-is, we can always improve it later on.",True,{}
i3/i3,https://github.com/i3/i3,2952,2017-09-14T22:58:29Z,2017-09-15T09:21:36Z,2017-09-24T15:17:26Z,MERGED,True,1,1,1,https://github.com/orestisfl,Use numeric comparison for $displaynum,1,[],https://github.com/i3/i3/pull/2952,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/2952,"Eg in the case of sockets:

X0
X99
X100

X99 would be picked instead of X100.","Eg in the case of sockets:

X0
X99
X100

X99 would be picked instead of X100.",True,{}
i3/i3,https://github.com/i3/i3,2953,2017-09-15T03:06:26Z,2017-09-27T16:31:40Z,2017-09-27T16:31:40Z,MERGED,True,137,25,10,https://github.com/CyberShadow,"Add ""focus_wrapping"" option",3,[],https://github.com/i3/i3/pull/2953,https://github.com/CyberShadow,1,https://github.com/i3/i3/pull/2953,"This implements enhancement request #2352.
The actual change is trivial:
 void tree_next(char way, orientation_t orientation) {
-    _tree_next(focused, way, orientation, true);
+    _tree_next(focused, way, orientation, config.focus_wrapping);
 }
The rest is bureaucracy. :)","This implements enhancement request #2352.
The actual change is trivial:
 void tree_next(char way, orientation_t orientation) {
-    _tree_next(focused, way, orientation, true);
+    _tree_next(focused, way, orientation, config.focus_wrapping);
 }
The rest is bureaucracy. :)",True,"{'HOORAY': ['https://github.com/apetresc', 'https://github.com/teeuwen', 'https://github.com/kbtz', 'https://github.com/jgkamat', 'https://github.com/sophiehuiberts']}"
i3/i3,https://github.com/i3/i3,2953,2017-09-15T03:06:26Z,2017-09-27T16:31:40Z,2017-09-27T16:31:40Z,MERGED,True,137,25,10,https://github.com/CyberShadow,"Add ""focus_wrapping"" option",3,[],https://github.com/i3/i3/pull/2953,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2953#issuecomment-329879350,"This implements enhancement request #2352.
The actual change is trivial:
 void tree_next(char way, orientation_t orientation) {
-    _tree_next(focused, way, orientation, true);
+    _tree_next(focused, way, orientation, config.focus_wrapping);
 }
The rest is bureaucracy. :)","The change looks good to me. I'm not a huge fan of having both focus_wrapping and force_focus_wrapping and would prefer a single forcus_wrapping yes|no|force instead; but removing force_focus_wrapping would be a breaking change.
@stapelberg How do you feel about that? We could do what we did in other places and add focus_wrapping force as an alias to force_focus_wrapping yes, focus the documentation on the new syntax and only keep a small mention of the old syntax for trackability when someone searches for it.",True,{}
i3/i3,https://github.com/i3/i3,2953,2017-09-15T03:06:26Z,2017-09-27T16:31:40Z,2017-09-27T16:31:40Z,MERGED,True,137,25,10,https://github.com/CyberShadow,"Add ""focus_wrapping"" option",3,[],https://github.com/i3/i3/pull/2953,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/2953#issuecomment-330136342,"This implements enhancement request #2352.
The actual change is trivial:
 void tree_next(char way, orientation_t orientation) {
-    _tree_next(focused, way, orientation, true);
+    _tree_next(focused, way, orientation, config.focus_wrapping);
 }
The rest is bureaucracy. :)","@stapelberg How do you feel about that? We could do what we did in other places and add focus_wrapping force as an alias to force_focus_wrapping yes, focus the documentation on the new syntax and only keep a small mention of the old syntax for trackability when someone searches for it.

Sounds good!",True,{}
i3/i3,https://github.com/i3/i3,2953,2017-09-15T03:06:26Z,2017-09-27T16:31:40Z,2017-09-27T16:31:40Z,MERGED,True,137,25,10,https://github.com/CyberShadow,"Add ""focus_wrapping"" option",3,[],https://github.com/i3/i3/pull/2953,https://github.com/CyberShadow,4,https://github.com/i3/i3/pull/2953#issuecomment-330980829,"This implements enhancement request #2352.
The actual change is trivial:
 void tree_next(char way, orientation_t orientation) {
-    _tree_next(focused, way, orientation, true);
+    _tree_next(focused, way, orientation, config.focus_wrapping);
 }
The rest is bureaucracy. :)","Sorry for the delay - I got involved with another project which has been rather time-consuming. I hope to make time to get back to this soon.

We could do what we did in other places

What's an example option which has been changed in this way that I can use as a reference?",True,{}
i3/i3,https://github.com/i3/i3,2953,2017-09-15T03:06:26Z,2017-09-27T16:31:40Z,2017-09-27T16:31:40Z,MERGED,True,137,25,10,https://github.com/CyberShadow,"Add ""focus_wrapping"" option",3,[],https://github.com/i3/i3/pull/2953,https://github.com/Airblader,5,https://github.com/i3/i3/pull/2953#issuecomment-330981080,"This implements enhancement request #2352.
The actual change is trivial:
 void tree_next(char way, orientation_t orientation) {
-    _tree_next(focused, way, orientation, true);
+    _tree_next(focused, way, orientation, config.focus_wrapping);
 }
The rest is bureaucracy. :)",The special value 1pixel for border is an example.,True,{}
i3/i3,https://github.com/i3/i3,2953,2017-09-15T03:06:26Z,2017-09-27T16:31:40Z,2017-09-27T16:31:40Z,MERGED,True,137,25,10,https://github.com/CyberShadow,"Add ""focus_wrapping"" option",3,[],https://github.com/i3/i3/pull/2953,https://github.com/CyberShadow,6,https://github.com/i3/i3/pull/2953#issuecomment-331585706,"This implements enhancement request #2352.
The actual change is trivial:
 void tree_next(char way, orientation_t orientation) {
-    _tree_next(focused, way, orientation, true);
+    _tree_next(focused, way, orientation, config.focus_wrapping);
 }
The rest is bureaucracy. :)","Thanks, feedback addressed. I wasn't sure if I should add a test for testing the new option names - let me know if I should.",True,{}
i3/i3,https://github.com/i3/i3,2954,2017-09-16T12:15:08Z,2018-11-07T13:13:43Z,2018-11-07T13:16:34Z,MERGED,True,324,131,4,https://github.com/orestisfl,Rewrite con_swap to work only with queue operations,1,[],https://github.com/i3/i3/pull/2954,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/2954,"Fixes #2810
Fixes #3280
Task list:

 Handle sticky windows. This needs some discussion:

Should we allow swap for sticky windows?
Should sticky windows exchange stickyness?


 Testcases fail without #2941 (or without another solution for #2938). Resolve that before merging. If you want to pass the tests this PR introduces:

checkout #2941
rebase with origin/next
apply this patch


 Resolve one TODO in a testcase comment
 Test #3280.","Fixes #2810
Fixes #3280
Task list:

 Handle sticky windows. This needs some discussion:

Should we allow swap for sticky windows?
Should sticky windows exchange stickyness?


 Testcases fail without #2941 (or without another solution for #2938). Resolve that before merging. If you want to pass the tests this PR introduces:

checkout #2941
rebase with origin/next
apply this patch


 Resolve one TODO in a testcase comment
 Test #3280.",True,{}
i3/i3,https://github.com/i3/i3,2954,2017-09-16T12:15:08Z,2018-11-07T13:13:43Z,2018-11-07T13:16:34Z,MERGED,True,324,131,4,https://github.com/orestisfl,Rewrite con_swap to work only with queue operations,1,[],https://github.com/i3/i3/pull/2954,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2954#issuecomment-330033470,"Fixes #2810
Fixes #3280
Task list:

 Handle sticky windows. This needs some discussion:

Should we allow swap for sticky windows?
Should sticky windows exchange stickyness?


 Testcases fail without #2941 (or without another solution for #2938). Resolve that before merging. If you want to pass the tests this PR introduces:

checkout #2941
rebase with origin/next
apply this patch


 Resolve one TODO in a testcase comment
 Test #3280.","My opinion on your questions:

Should we allow swap for sticky windows?

Yes, I don't see why not. If it's a problem or requires a lot more work, we should move it to a separate PR, though.

Should sticky windows exchange stickyness?

No, I don't think so. Stickyness is a property of the window and the window is swapped elsewhere. Swapping is really only about the geometry aspect. We have the same behavior for, e.g., marks.",True,{}
i3/i3,https://github.com/i3/i3,2954,2017-09-16T12:15:08Z,2018-11-07T13:13:43Z,2018-11-07T13:16:34Z,MERGED,True,324,131,4,https://github.com/orestisfl,Rewrite con_swap to work only with queue operations,1,[],https://github.com/i3/i3/pull/2954,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/2954#issuecomment-330045060,"Fixes #2810
Fixes #3280
Task list:

 Handle sticky windows. This needs some discussion:

Should we allow swap for sticky windows?
Should sticky windows exchange stickyness?


 Testcases fail without #2941 (or without another solution for #2938). Resolve that before merging. If you want to pass the tests this PR introduces:

checkout #2941
rebase with origin/next
apply this patch


 Resolve one TODO in a testcase comment
 Test #3280.","Ok, I think that the sticky situation is as it should be right now. Added a testcase for that.
Will need to investigate the cmp_floating_rect issues in the tests.",True,{}
i3/i3,https://github.com/i3/i3,2954,2017-09-16T12:15:08Z,2018-11-07T13:13:43Z,2018-11-07T13:16:34Z,MERGED,True,324,131,4,https://github.com/orestisfl,Rewrite con_swap to work only with queue operations,1,[],https://github.com/i3/i3/pull/2954,https://github.com/Airblader,4,https://github.com/i3/i3/pull/2954#issuecomment-358433959,"Fixes #2810
Fixes #3280
Task list:

 Handle sticky windows. This needs some discussion:

Should we allow swap for sticky windows?
Should sticky windows exchange stickyness?


 Testcases fail without #2941 (or without another solution for #2938). Resolve that before merging. If you want to pass the tests this PR introduces:

checkout #2941
rebase with origin/next
apply this patch


 Resolve one TODO in a testcase comment
 Test #3280.",@orestisf1993 Are you continuing your work on this?,True,{}
i3/i3,https://github.com/i3/i3,2954,2017-09-16T12:15:08Z,2018-11-07T13:13:43Z,2018-11-07T13:16:34Z,MERGED,True,324,131,4,https://github.com/orestisfl,Rewrite con_swap to work only with queue operations,1,[],https://github.com/i3/i3/pull/2954,https://github.com/orestisfl,5,https://github.com/i3/i3/pull/2954#issuecomment-358441385,"Fixes #2810
Fixes #3280
Task list:

 Handle sticky windows. This needs some discussion:

Should we allow swap for sticky windows?
Should sticky windows exchange stickyness?


 Testcases fail without #2941 (or without another solution for #2938). Resolve that before merging. If you want to pass the tests this PR introduces:

checkout #2941
rebase with origin/next
apply this patch


 Resolve one TODO in a testcase comment
 Test #3280.","This is the start of my rabbit hole:
#2954 -> #2941 -> #2975 -> #3087",True,{}
i3/i3,https://github.com/i3/i3,2954,2017-09-16T12:15:08Z,2018-11-07T13:13:43Z,2018-11-07T13:16:34Z,MERGED,True,324,131,4,https://github.com/orestisfl,Rewrite con_swap to work only with queue operations,1,[],https://github.com/i3/i3/pull/2954,https://github.com/orestisfl,6,https://github.com/i3/i3/pull/2954#issuecomment-377721841,"Fixes #2810
Fixes #3280
Task list:

 Handle sticky windows. This needs some discussion:

Should we allow swap for sticky windows?
Should sticky windows exchange stickyness?


 Testcases fail without #2941 (or without another solution for #2938). Resolve that before merging. If you want to pass the tests this PR introduces:

checkout #2941
rebase with origin/next
apply this patch


 Resolve one TODO in a testcase comment
 Test #3280.","Well, this works but it looks ugly because there is a lot of flickering because of disabling/enabling tiling containers.
I don't know how easily avoidable this is, we could have a mechanism to disable x_push_changes temporarily and then reenable them on function exit:
diff --git a/include/x.h b/include/x.h
index 3e81bc36..8c493952 100644
--- a/include/x.h
+++ b/include/x.h
@@ -83,6 +83,9 @@ void x_deco_recurse(Con *con);
  */
 void x_push_node(Con *con);
 
+void x_push_changes_lock(void);
+void x_push_changes_unlock(void);
+
 /**
  * Pushes all changes (state of each node, see x_push_node() and the window
  * stack) to X11.
diff --git a/src/con.c b/src/con.c
index 01671fc1..b8e6b408 100644
--- a/src/con.c
+++ b/src/con.c
@@ -2336,6 +2336,8 @@ bool con_swap(Con *first, Con *second) {
         return false;
     }
 
+    x_push_changes_lock();
+
     Con *old_focus = focused;
 
     Con *first_ws = con_get_workspace(first);
@@ -2489,5 +2491,6 @@ swap_end:
         free(second_floating_rect);
     }
 
+    x_push_changes_unlock();
     return result;
 }
diff --git a/src/x.c b/src/x.c
index 629520d4..6161f327 100644
--- a/src/x.c
+++ b/src/x.c
@@ -992,6 +992,26 @@ static bool is_con_attached(Con *con) {
     return false;
 }
 
+static bool block_changes;
+
+void x_push_changes_lock(void) {
+    if (block_changes)
+        return;
+    block_changes = true;
+}
+
+void x_push_changes_unlock(void) {
+    if (!block_changes)
+        return;
+    block_changes = false;
+    if (render_lock_count)
+        tree_render();
+    render_lock_count = 0;
+}
+
 /*
  * Pushes all changes (state of each node, see x_push_node() and the window
  * stack) to X11.
@@ -1004,6 +1024,11 @@ static bool is_con_attached(Con *con) {
  *
  */
 void x_push_changes(Con *con) {
+    if (block_changes && con == croot) {
+        return;
+    }
+
     con_state *state;
     xcb_query_pointer_cookie_t pointercookie;

I don't know how I feel about this though.",True,{}
i3/i3,https://github.com/i3/i3,2954,2017-09-16T12:15:08Z,2018-11-07T13:13:43Z,2018-11-07T13:16:34Z,MERGED,True,324,131,4,https://github.com/orestisfl,Rewrite con_swap to work only with queue operations,1,[],https://github.com/i3/i3/pull/2954,https://github.com/Airblader,7,https://github.com/i3/i3/pull/2954#issuecomment-378503520,"Fixes #2810
Fixes #3280
Task list:

 Handle sticky windows. This needs some discussion:

Should we allow swap for sticky windows?
Should sticky windows exchange stickyness?


 Testcases fail without #2941 (or without another solution for #2938). Resolve that before merging. If you want to pass the tests this PR introduces:

checkout #2941
rebase with origin/next
apply this patch


 Resolve one TODO in a testcase comment
 Test #3280.","To clarify, does that ""lock pushing changes"" mechanism actually make the situation better?",True,{}
i3/i3,https://github.com/i3/i3,2954,2017-09-16T12:15:08Z,2018-11-07T13:13:43Z,2018-11-07T13:16:34Z,MERGED,True,324,131,4,https://github.com/orestisfl,Rewrite con_swap to work only with queue operations,1,[],https://github.com/i3/i3/pull/2954,https://github.com/orestisfl,8,https://github.com/i3/i3/pull/2954#issuecomment-378513941,"Fixes #2810
Fixes #3280
Task list:

 Handle sticky windows. This needs some discussion:

Should we allow swap for sticky windows?
Should sticky windows exchange stickyness?


 Testcases fail without #2941 (or without another solution for #2938). Resolve that before merging. If you want to pass the tests this PR introduces:

checkout #2941
rebase with origin/next
apply this patch


 Resolve one TODO in a testcase comment
 Test #3280.","Yes, here is a recording:
before &
after
(I had to capture at 60 fps)",True,{}
i3/i3,https://github.com/i3/i3,2954,2017-09-16T12:15:08Z,2018-11-07T13:13:43Z,2018-11-07T13:16:34Z,MERGED,True,324,131,4,https://github.com/orestisfl,Rewrite con_swap to work only with queue operations,1,[],https://github.com/i3/i3/pull/2954,https://github.com/Airblader,9,https://github.com/i3/i3/pull/2954#issuecomment-378527067,"Fixes #2810
Fixes #3280
Task list:

 Handle sticky windows. This needs some discussion:

Should we allow swap for sticky windows?
Should sticky windows exchange stickyness?


 Testcases fail without #2941 (or without another solution for #2938). Resolve that before merging. If you want to pass the tests this PR introduces:

checkout #2941
rebase with origin/next
apply this patch


 Resolve one TODO in a testcase comment
 Test #3280.","I see, that's quite the difference indeed. I can see that the locking mechanism is an easy solution, but I share your concerns on it. Is this something we can solve with some refactoring in the floating_[enable|disable] logic?",True,{}
i3/i3,https://github.com/i3/i3,2954,2017-09-16T12:15:08Z,2018-11-07T13:13:43Z,2018-11-07T13:16:34Z,MERGED,True,324,131,4,https://github.com/orestisfl,Rewrite con_swap to work only with queue operations,1,[],https://github.com/i3/i3/pull/2954,https://github.com/orestisfl,10,https://github.com/i3/i3/pull/2954#issuecomment-382869493,"Fixes #2810
Fixes #3280
Task list:

 Handle sticky windows. This needs some discussion:

Should we allow swap for sticky windows?
Should sticky windows exchange stickyness?


 Testcases fail without #2941 (or without another solution for #2938). Resolve that before merging. If you want to pass the tests this PR introduces:

checkout #2941
rebase with origin/next
apply this patch


 Resolve one TODO in a testcase comment
 Test #3280.","The following x_push_changes are called:
#0  0x00005555557faa0f in x_push_changes (con=0x614000003040) at ../../i3/src/x.c:1006
#1  0x00005555557d918c in tree_render () at ../../i3/src/tree.c:514
#2  0x00005555557d7821 in tree_close_internal (con=0x614000009240, kill_window=DONT_KILL_WINDOW, dont_kill_parent=false, force_set_focus=false) at ../../i3/src/tree.c:322
#3  0x00005555557373aa in con_on_remove_child (con=0x614000009240) at ../../i3/src/con.c:1983
#4  0x00005555557a9f77 in insert_con_into (con=0x614000004c40, target=0x61400000ca40, position=AFTER) at ../../i3/src/move.c:170
#5  0x0000555555761d5e in floating_disable (con=0x614000004c40, automatic=false) at ../../i3/src/floating.c:380
#6  0x0000555555739daa in get_floating_rect_and_disable (con=0x614000004c40) at ../../i3/src/con.c:2305
#7  0x000055555573a295 in con_swap (first=0x61400000ca40, second=0x614000004c40) at ../../i3/src/con.c:2349

This seems hard to avoid by modifying floating_disable way.
#0  0x00005555557faa0f in x_push_changes (con=0x614000003040) at ../../i3/src/x.c:1006
#1  0x00005555557d918c in tree_render () at ../../i3/src/tree.c:514
#2  0x00005555557d7821 in tree_close_internal (con=0x614000031440, kill_window=DONT_KILL_WINDOW, dont_kill_parent=false, force_set_focus=false) at ../../i3/src/tree.c:322
#3  0x000055555572ab26 in con_close (con=0x614000031440, kill_window=DONT_KILL_WINDOW) at ../../i3/src/con.c:296
#4  0x000055555573c008 in con_swap (first=0x61400000ca40, second=0x614000004c40) at ../../i3/src/con.c:2476

I think it's safe to move this con_close to the end, it could be an improvement since the floating windows will have taken their final positions.
#0  0x00005555557faa0f in x_push_changes (con=0x614000003040) at ../../i3/src/x.c:1006
#1  0x00005555557d918c in tree_render () at ../../i3/src/tree.c:514
#2  0x000055555576671c in floating_reposition (con=0x614000032240, newrect=...) at ../../i3/src/floating.c:886
#3  0x000055555573c126 in con_swap (first=0x61400000ca40, second=0x614000004c40) at ../../i3/src/con.c:2483

#0  0x00005555557faa0f in x_push_changes (con=0x614000003040) at ../../i3/src/x.c:1006
#1  0x00005555557d918c in tree_render () at ../../i3/src/tree.c:514
#2  0x000055555576671c in floating_reposition (con=0x614000033a40, newrect=...) at ../../i3/src/floating.c:886
#3  0x000055555573c232 in con_swap (first=0x61400000ca40, second=0x614000004c40) at ../../i3/src/con.c:2488

These two would have been called either way.",True,{}
i3/i3,https://github.com/i3/i3,2954,2017-09-16T12:15:08Z,2018-11-07T13:13:43Z,2018-11-07T13:16:34Z,MERGED,True,324,131,4,https://github.com/orestisfl,Rewrite con_swap to work only with queue operations,1,[],https://github.com/i3/i3/pull/2954,https://github.com/orestisfl,11,https://github.com/i3/i3/pull/2954#issuecomment-428580070,"Fixes #2810
Fixes #3280
Task list:

 Handle sticky windows. This needs some discussion:

Should we allow swap for sticky windows?
Should sticky windows exchange stickyness?


 Testcases fail without #2941 (or without another solution for #2938). Resolve that before merging. If you want to pass the tests this PR introduces:

checkout #2941
rebase with origin/next
apply this patch


 Resolve one TODO in a testcase comment
 Test #3280.","Kinda rewrote con_swap to deal with our issues.
This is how #3280 looks like after the changes:
before swap:

after swap:",True,{}
i3/i3,https://github.com/i3/i3,2954,2017-09-16T12:15:08Z,2018-11-07T13:13:43Z,2018-11-07T13:16:34Z,MERGED,True,324,131,4,https://github.com/orestisfl,Rewrite con_swap to work only with queue operations,1,[],https://github.com/i3/i3/pull/2954,https://github.com/Airblader,12,https://github.com/i3/i3/pull/2954#issuecomment-433393269,"Fixes #2810
Fixes #3280
Task list:

 Handle sticky windows. This needs some discussion:

Should we allow swap for sticky windows?
Should sticky windows exchange stickyness?


 Testcases fail without #2941 (or without another solution for #2938). Resolve that before merging. If you want to pass the tests this PR introduces:

checkout #2941
rebase with origin/next
apply this patch


 Resolve one TODO in a testcase comment
 Test #3280.","I'd like to make sure we give this some testing on the next branch for a bit before release.
@stapelberg Do we have plans for a release in the near future?",True,{}
i3/i3,https://github.com/i3/i3,2954,2017-09-16T12:15:08Z,2018-11-07T13:13:43Z,2018-11-07T13:16:34Z,MERGED,True,324,131,4,https://github.com/orestisfl,Rewrite con_swap to work only with queue operations,1,[],https://github.com/i3/i3/pull/2954,https://github.com/stapelberg,13,https://github.com/i3/i3/pull/2954#issuecomment-433500668,"Fixes #2810
Fixes #3280
Task list:

 Handle sticky windows. This needs some discussion:

Should we allow swap for sticky windows?
Should sticky windows exchange stickyness?


 Testcases fail without #2941 (or without another solution for #2938). Resolve that before merging. If you want to pass the tests this PR introduces:

checkout #2941
rebase with origin/next
apply this patch


 Resolve one TODO in a testcase comment
 Test #3280.","Yeah, we’re a bit late and should do one. I’ll have some spare time for that next week.",True,{}
i3/i3,https://github.com/i3/i3,2954,2017-09-16T12:15:08Z,2018-11-07T13:13:43Z,2018-11-07T13:16:34Z,MERGED,True,324,131,4,https://github.com/orestisfl,Rewrite con_swap to work only with queue operations,1,[],https://github.com/i3/i3/pull/2954,https://github.com/Airblader,14,https://github.com/i3/i3/pull/2954#issuecomment-436260827,"Fixes #2810
Fixes #3280
Task list:

 Handle sticky windows. This needs some discussion:

Should we allow swap for sticky windows?
Should sticky windows exchange stickyness?


 Testcases fail without #2941 (or without another solution for #2938). Resolve that before merging. If you want to pass the tests this PR introduces:

checkout #2941
rebase with origin/next
apply this patch


 Resolve one TODO in a testcase comment
 Test #3280.","@orestisf1993 Just double-checking that this PR is ready from your side and the concerns with the ""lock mechanism"" no longer apply?",True,{}
i3/i3,https://github.com/i3/i3,2954,2017-09-16T12:15:08Z,2018-11-07T13:13:43Z,2018-11-07T13:16:34Z,MERGED,True,324,131,4,https://github.com/orestisfl,Rewrite con_swap to work only with queue operations,1,[],https://github.com/i3/i3/pull/2954,https://github.com/orestisfl,15,https://github.com/i3/i3/pull/2954#issuecomment-436261407,"Fixes #2810
Fixes #3280
Task list:

 Handle sticky windows. This needs some discussion:

Should we allow swap for sticky windows?
Should sticky windows exchange stickyness?


 Testcases fail without #2941 (or without another solution for #2938). Resolve that before merging. If you want to pass the tests this PR introduces:

checkout #2941
rebase with origin/next
apply this patch


 Resolve one TODO in a testcase comment
 Test #3280.",yup,True,{}
i3/i3,https://github.com/i3/i3,2955,2017-09-16T15:18:29Z,2017-09-16T15:28:44Z,2017-09-16T15:28:47Z,MERGED,True,10,0,1,https://github.com/stapelberg,"ipc: tree reply: document focus, nodes and floating_nodes",1,[],https://github.com/i3/i3/pull/2955,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2955,"These haven’t ever changed, but were only included in the example, not in the
list, so people might not have realized that these are safe for use.","These haven’t ever changed, but were only included in the example, not in the
list, so people might not have realized that these are safe for use.",True,{}
i3/i3,https://github.com/i3/i3,2956,2017-09-16T15:57:59Z,2017-09-17T13:25:01Z,2017-09-17T13:25:04Z,MERGED,True,44,47,7,https://github.com/stapelberg,ipc: rename COMMAND to RUN_COMMAND for consistency,1,[],https://github.com/i3/i3/pull/2956,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2956,"All other message types are verbs, only our first-ever message COMMAND wasn’t.
While we’re here, also change the message type dictionary into a table with
clickable links to the corresponding reply type.
Authors of downstream IPC libraries are encouraged to keep the old name around
so as to not break existing code, but mark it as deprecated.","All other message types are verbs, only our first-ever message COMMAND wasn’t.
While we’re here, also change the message type dictionary into a table with
clickable links to the corresponding reply type.
Authors of downstream IPC libraries are encouraged to keep the old name around
so as to not break existing code, but mark it as deprecated.",True,{}
i3/i3,https://github.com/i3/i3,2959,2017-09-16T17:59:06Z,2017-09-22T14:24:27Z,2018-03-19T10:46:46Z,MERGED,True,204,32,10,https://github.com/orestisfl,Allow assign to output,5,[],https://github.com/i3/i3/pull/2959,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/2959,"Implements the ""assign"" part of issue #2764.
TODO:

 Tests
 Documentation. Multiple examples, eg assign [...] output right.","Implements the ""assign"" part of issue #2764.
TODO:

 Tests
 Documentation. Multiple examples, eg assign [...] output right.",True,{}
i3/i3,https://github.com/i3/i3,2959,2017-09-16T17:59:06Z,2017-09-22T14:24:27Z,2018-03-19T10:46:46Z,MERGED,True,204,32,10,https://github.com/orestisfl,Allow assign to output,5,[],https://github.com/i3/i3/pull/2959,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2959#issuecomment-330033612,"Implements the ""assign"" part of issue #2764.
TODO:

 Tests
 Documentation. Multiple examples, eg assign [...] output right.","The concept LGTM, awaiting the updates. :-)",True,{}
i3/i3,https://github.com/i3/i3,2959,2017-09-16T17:59:06Z,2017-09-22T14:24:27Z,2018-03-19T10:46:46Z,MERGED,True,204,32,10,https://github.com/orestisfl,Allow assign to output,5,[],https://github.com/i3/i3/pull/2959,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/2959#issuecomment-330041121,"Implements the ""assign"" part of issue #2764.
TODO:

 Tests
 Documentation. Multiple examples, eg assign [...] output right.",Up,True,{}
i3/i3,https://github.com/i3/i3,2959,2017-09-16T17:59:06Z,2017-09-22T14:24:27Z,2018-03-19T10:46:46Z,MERGED,True,204,32,10,https://github.com/orestisfl,Allow assign to output,5,[],https://github.com/i3/i3/pull/2959,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/2959#issuecomment-330602906,"Implements the ""assign"" part of issue #2764.
TODO:

 Tests
 Documentation. Multiple examples, eg assign [...] output right.",@Airblader please remove the waiting label.,True,{}
i3/i3,https://github.com/i3/i3,2960,2017-09-16T20:56:26Z,2017-09-17T10:05:04Z,2017-09-17T10:05:04Z,MERGED,True,3,3,3,https://github.com/orestisfl,Fix possible errors related to free(),3,[],https://github.com/i3/i3/pull/2960,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/2960,variable 'buf' is used uninitialized whenever 'if' condition is true,variable 'buf' is used uninitialized whenever 'if' condition is true,True,{}
i3/i3,https://github.com/i3/i3,2961,2017-09-17T12:17:09Z,2017-09-18T15:15:29Z,2017-09-18T15:15:32Z,MERGED,True,60,0,1,https://github.com/stapelberg,ipc: document how to detect i3’s byte order in memory-safe languages,1,[],https://github.com/i3/i3/pull/2961,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2961,"related to issue #2958
cc @Merovius @acrisci @Airblader","related to issue #2958
cc @Merovius @acrisci @Airblader",True,{}
i3/i3,https://github.com/i3/i3,2961,2017-09-17T12:17:09Z,2017-09-18T15:15:29Z,2017-09-18T15:15:32Z,MERGED,True,60,0,1,https://github.com/stapelberg,ipc: document how to detect i3’s byte order in memory-safe languages,1,[],https://github.com/i3/i3/pull/2961,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/2961#issuecomment-330044211,"related to issue #2958
cc @Merovius @acrisci @Airblader","For the record: I tested this on linux/amd64 (little endian) and linux/mips (big endian). If there are any other platforms which would be interesting to test, please let me know.",True,{}
i3/i3,https://github.com/i3/i3,2961,2017-09-17T12:17:09Z,2017-09-18T15:15:29Z,2017-09-18T15:15:32Z,MERGED,True,60,0,1,https://github.com/stapelberg,ipc: document how to detect i3’s byte order in memory-safe languages,1,[],https://github.com/i3/i3/pull/2961,https://github.com/acrisci,3,https://github.com/i3/i3/pull/2961#issuecomment-330044648,"related to issue #2958
cc @Merovius @acrisci @Airblader",I've never tested i3ipc-python on other architectures but I've never gotten any complaints about byte order.,True,{}
i3/i3,https://github.com/i3/i3,2961,2017-09-17T12:17:09Z,2017-09-18T15:15:29Z,2017-09-18T15:15:32Z,MERGED,True,60,0,1,https://github.com/stapelberg,ipc: document how to detect i3’s byte order in memory-safe languages,1,[],https://github.com/i3/i3/pull/2961,https://github.com/stapelberg,4,https://github.com/i3/i3/pull/2961#issuecomment-330254803,"related to issue #2958
cc @Merovius @acrisci @Airblader","I've never tested i3ipc-python on other architectures but I've never gotten any complaints about byte order.

You got one now :) altdesktop/i3ipc-python#67 (I also sent a PR to fix it)",True,{}
i3/i3,https://github.com/i3/i3,2963,2017-09-18T07:09:29Z,2017-09-18T11:03:55Z,2017-09-18T11:03:59Z,MERGED,True,98,22,3,https://github.com/kentfredric,Migrate tooling to ExtUtils::MakeMaker,1,[],https://github.com/i3/i3/pull/2963,https://github.com/kentfredric,1,https://github.com/i3/i3/pull/2963,"This tends to have a lot more boiler plate, but it doesn't require any of the Module::Install dependencies to be shipped.
As usual, creating a cpan dist is:
perl Makefile.PL
make
make dist
make disttest
And then ship the tar.gz off to cpan.
tar -tf AnyEvent-I3-0.18.tar.gz 
AnyEvent-I3-0.18/
AnyEvent-I3-0.18/Changes
AnyEvent-I3-0.18/lib/
AnyEvent-I3-0.18/lib/AnyEvent/
AnyEvent-I3-0.18/lib/AnyEvent/I3.pm
AnyEvent-I3-0.18/Makefile.PL
AnyEvent-I3-0.18/t/
AnyEvent-I3-0.18/t/pod-coverage.t
AnyEvent-I3-0.18/t/00-load.t
AnyEvent-I3-0.18/t/manifest.t
AnyEvent-I3-0.18/t/01-workspaces.t
AnyEvent-I3-0.18/t/02-sugar.t
AnyEvent-I3-0.18/t/boilerplate.t
AnyEvent-I3-0.18/t/pod.t
AnyEvent-I3-0.18/README
AnyEvent-I3-0.18/MANIFEST.SKIP
AnyEvent-I3-0.18/META.yml
AnyEvent-I3-0.18/META.json
AnyEvent-I3-0.18/MANIFEST
Notes:

I preserved your strange formatting of the author field as that's how you had it on the last release in the metadata.
I fixed the publicised license field to be ""perl"" instead of ""gpl"", as the text on your LICENSE section says its dual-licensed as GPL2+Artistic 1, which is what ""perl"" basically means.
I've leveraged a fair bit of the META2.0 spec to publish a bit of data that would previously just be impossible with Module::Install, like custom homepage, bug tracker values, and VCS values. ( All of which are used by metacpan and friends )
And I've pointed bug tracker to github issues, despite the documentation saying RT mostly as an example, but I can revert it on request, this is more just getting you the ability to see what is possible.
Makefile.PL is ordered in order of ""things you might want to change"" to ""things you shouldn't ever need to change""","This tends to have a lot more boiler plate, but it doesn't require any of the Module::Install dependencies to be shipped.
As usual, creating a cpan dist is:
perl Makefile.PL
make
make dist
make disttest
And then ship the tar.gz off to cpan.
tar -tf AnyEvent-I3-0.18.tar.gz 
AnyEvent-I3-0.18/
AnyEvent-I3-0.18/Changes
AnyEvent-I3-0.18/lib/
AnyEvent-I3-0.18/lib/AnyEvent/
AnyEvent-I3-0.18/lib/AnyEvent/I3.pm
AnyEvent-I3-0.18/Makefile.PL
AnyEvent-I3-0.18/t/
AnyEvent-I3-0.18/t/pod-coverage.t
AnyEvent-I3-0.18/t/00-load.t
AnyEvent-I3-0.18/t/manifest.t
AnyEvent-I3-0.18/t/01-workspaces.t
AnyEvent-I3-0.18/t/02-sugar.t
AnyEvent-I3-0.18/t/boilerplate.t
AnyEvent-I3-0.18/t/pod.t
AnyEvent-I3-0.18/README
AnyEvent-I3-0.18/MANIFEST.SKIP
AnyEvent-I3-0.18/META.yml
AnyEvent-I3-0.18/META.json
AnyEvent-I3-0.18/MANIFEST
Notes:

I preserved your strange formatting of the author field as that's how you had it on the last release in the metadata.
I fixed the publicised license field to be ""perl"" instead of ""gpl"", as the text on your LICENSE section says its dual-licensed as GPL2+Artistic 1, which is what ""perl"" basically means.
I've leveraged a fair bit of the META2.0 spec to publish a bit of data that would previously just be impossible with Module::Install, like custom homepage, bug tracker values, and VCS values. ( All of which are used by metacpan and friends )
And I've pointed bug tracker to github issues, despite the documentation saying RT mostly as an example, but I can revert it on request, this is more just getting you the ability to see what is possible.
Makefile.PL is ordered in order of ""things you might want to change"" to ""things you shouldn't ever need to change""",True,{}
i3/i3,https://github.com/i3/i3,2963,2017-09-18T07:09:29Z,2017-09-18T11:03:55Z,2017-09-18T11:03:59Z,MERGED,True,98,22,3,https://github.com/kentfredric,Migrate tooling to ExtUtils::MakeMaker,1,[],https://github.com/i3/i3/pull/2963,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/2963#issuecomment-330188091,"This tends to have a lot more boiler plate, but it doesn't require any of the Module::Install dependencies to be shipped.
As usual, creating a cpan dist is:
perl Makefile.PL
make
make dist
make disttest
And then ship the tar.gz off to cpan.
tar -tf AnyEvent-I3-0.18.tar.gz 
AnyEvent-I3-0.18/
AnyEvent-I3-0.18/Changes
AnyEvent-I3-0.18/lib/
AnyEvent-I3-0.18/lib/AnyEvent/
AnyEvent-I3-0.18/lib/AnyEvent/I3.pm
AnyEvent-I3-0.18/Makefile.PL
AnyEvent-I3-0.18/t/
AnyEvent-I3-0.18/t/pod-coverage.t
AnyEvent-I3-0.18/t/00-load.t
AnyEvent-I3-0.18/t/manifest.t
AnyEvent-I3-0.18/t/01-workspaces.t
AnyEvent-I3-0.18/t/02-sugar.t
AnyEvent-I3-0.18/t/boilerplate.t
AnyEvent-I3-0.18/t/pod.t
AnyEvent-I3-0.18/README
AnyEvent-I3-0.18/MANIFEST.SKIP
AnyEvent-I3-0.18/META.yml
AnyEvent-I3-0.18/META.json
AnyEvent-I3-0.18/MANIFEST
Notes:

I preserved your strange formatting of the author field as that's how you had it on the last release in the metadata.
I fixed the publicised license field to be ""perl"" instead of ""gpl"", as the text on your LICENSE section says its dual-licensed as GPL2+Artistic 1, which is what ""perl"" basically means.
I've leveraged a fair bit of the META2.0 spec to publish a bit of data that would previously just be impossible with Module::Install, like custom homepage, bug tracker values, and VCS values. ( All of which are used by metacpan and friends )
And I've pointed bug tracker to github issues, despite the documentation saying RT mostly as an example, but I can revert it on request, this is more just getting you the ability to see what is possible.
Makefile.PL is ordered in order of ""things you might want to change"" to ""things you shouldn't ever need to change""",Thank you very much!,True,{}
i3/i3,https://github.com/i3/i3,2964,2017-09-18T07:34:48Z,2017-09-18T16:02:39Z,2018-03-19T10:46:38Z,MERGED,True,2,0,1,https://github.com/orestisfl,291-swap.t: make tests fail less,1,[],https://github.com/i3/i3/pull/2964,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/2964,,,True,{}
i3/i3,https://github.com/i3/i3,2964,2017-09-18T07:34:48Z,2017-09-18T16:02:39Z,2018-03-19T10:46:38Z,MERGED,True,2,0,1,https://github.com/orestisfl,291-swap.t: make tests fail less,1,[],https://github.com/i3/i3/pull/2964,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/2964#issuecomment-330235468,,Removed the unrelated changes. @stapelberg is the new sync usage in reasonable places now?,True,{}
i3/i3,https://github.com/i3/i3,2964,2017-09-18T07:34:48Z,2017-09-18T16:02:39Z,2018-03-19T10:46:38Z,MERGED,True,2,0,1,https://github.com/orestisfl,291-swap.t: make tests fail less,1,[],https://github.com/i3/i3/pull/2964,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/2964#issuecomment-330244164,,"Looks much better, thank you very much!",True,{}
i3/i3,https://github.com/i3/i3,2965,2017-09-18T08:55:31Z,2017-09-18T14:36:58Z,2017-09-18T14:37:00Z,MERGED,True,32,1,2,https://github.com/stapelberg,Bugfix: don’t invalidate layout upon invalid 'layout toggle' params,1,[],https://github.com/i3/i3/pull/2965,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2965,fixes #2903,fixes #2903,True,"{'HEART': ['https://github.com/maxh-', 'https://github.com/cornerman']}"
i3/i3,https://github.com/i3/i3,2965,2017-09-18T08:55:31Z,2017-09-18T14:36:58Z,2017-09-18T14:37:00Z,MERGED,True,32,1,2,https://github.com/stapelberg,Bugfix: don’t invalidate layout upon invalid 'layout toggle' params,1,[],https://github.com/i3/i3/pull/2965,https://github.com/maxh-,2,https://github.com/i3/i3/pull/2965#issuecomment-330163274,fixes #2903,Much appreciated!!,True,{}
i3/i3,https://github.com/i3/i3,2966,2017-09-18T09:03:53Z,2017-09-18T14:37:35Z,2017-09-18T14:37:41Z,MERGED,True,4,0,1,https://github.com/stapelberg,Bugfix: avert crash by fixing focus when creating output containers,1,[],https://github.com/i3/i3/pull/2966,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2966,fixes #2854,fixes #2854,True,{}
i3/i3,https://github.com/i3/i3,2967,2017-09-18T13:38:40Z,2017-09-18T14:36:35Z,2017-09-18T14:36:38Z,MERGED,True,4,1,1,https://github.com/stapelberg,"docs/ipc: ""urgent"": complete the list of container types",1,[],https://github.com/i3/i3/pull/2967,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2967,Thanks chressie!,Thanks chressie!,True,{'THUMBS_UP': ['https://github.com/maxh-']}
i3/i3,https://github.com/i3/i3,2967,2017-09-18T13:38:40Z,2017-09-18T14:36:35Z,2017-09-18T14:36:38Z,MERGED,True,4,1,1,https://github.com/stapelberg,"docs/ipc: ""urgent"": complete the list of container types",1,[],https://github.com/i3/i3/pull/2967,https://github.com/maxh-,2,https://github.com/i3/i3/pull/2967#issuecomment-330225853,Thanks chressie!,Does the focus array mean that windows get added there as they are focused?,True,{}
i3/i3,https://github.com/i3/i3,2967,2017-09-18T13:38:40Z,2017-09-18T14:36:35Z,2017-09-18T14:36:38Z,MERGED,True,4,1,1,https://github.com/stapelberg,"docs/ipc: ""urgent"": complete the list of container types",1,[],https://github.com/i3/i3/pull/2967,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/2967#issuecomment-330226525,Thanks chressie!,"Does the focus array mean that windows get added there as they are focused?

That’s unrelated to this change, so let’s move this discussion elsewhere if you have further questions: yes, the focus array contains an up-to-date list of node IDs in focus order, i.e. it changes whenever you change focus.",True,{}
i3/i3,https://github.com/i3/i3,2969,2017-09-19T07:50:20Z,2017-12-18T07:54:46Z,2018-03-19T10:46:34Z,MERGED,True,207,107,8,https://github.com/orestisfl,Make 'focus' disable blocking fullscreen windows,5,[],https://github.com/i3/i3/pull/2969,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/2969,"This is my take on the issue. Before I move on I'd like some feedback on my take and the comments in the last commit message. The reason I didn't touch con_fullscreen_permits_focusing() is that too many stuff depend on it.
If this looks ok then I will:

 Mention that focus disable fullscreen in the userguide.
 Fix focus floating as well.

Fixes issue #1819.","This is my take on the issue. Before I move on I'd like some feedback on my take and the comments in the last commit message. The reason I didn't touch con_fullscreen_permits_focusing() is that too many stuff depend on it.
If this looks ok then I will:

 Mention that focus disable fullscreen in the userguide.
 Fix focus floating as well.

Fixes issue #1819.",True,{'HEART': ['https://github.com/cornerman']}
i3/i3,https://github.com/i3/i3,2969,2017-09-19T07:50:20Z,2017-12-18T07:54:46Z,2018-03-19T10:46:34Z,MERGED,True,207,107,8,https://github.com/orestisfl,Make 'focus' disable blocking fullscreen windows,5,[],https://github.com/i3/i3/pull/2969,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/2969#issuecomment-330546802,"This is my take on the issue. Before I move on I'd like some feedback on my take and the comments in the last commit message. The reason I didn't touch con_fullscreen_permits_focusing() is that too many stuff depend on it.
If this looks ok then I will:

 Mention that focus disable fullscreen in the userguide.
 Fix focus floating as well.

Fixes issue #1819.",Pushed changes for focus floating | tiling | mode_toggle.,True,{}
i3/i3,https://github.com/i3/i3,2969,2017-09-19T07:50:20Z,2017-12-18T07:54:46Z,2018-03-19T10:46:34Z,MERGED,True,207,107,8,https://github.com/orestisfl,Make 'focus' disable blocking fullscreen windows,5,[],https://github.com/i3/i3/pull/2969,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2969#issuecomment-330589333,"This is my take on the issue. Before I move on I'd like some feedback on my take and the comments in the last commit message. The reason I didn't touch con_fullscreen_permits_focusing() is that too many stuff depend on it.
If this looks ok then I will:

 Mention that focus disable fullscreen in the userguide.
 Fix focus floating as well.

Fixes issue #1819.","I'm not sure I like the approach. Before going into other ideas, is there a reason why it cannot just be »whenever con_focus is called on a container that is currently not focused but lives on a workspace with a fullscreened window, unfullscreen that window«?",True,{}
i3/i3,https://github.com/i3/i3,2969,2017-09-19T07:50:20Z,2017-12-18T07:54:46Z,2018-03-19T10:46:34Z,MERGED,True,207,107,8,https://github.com/orestisfl,Make 'focus' disable blocking fullscreen windows,5,[],https://github.com/i3/i3/pull/2969,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/2969#issuecomment-330601494,"This is my take on the issue. Before I move on I'd like some feedback on my take and the comments in the last commit message. The reason I didn't touch con_fullscreen_permits_focusing() is that too many stuff depend on it.
If this looks ok then I will:

 Mention that focus disable fullscreen in the userguide.
 Fix focus floating as well.

Fixes issue #1819.","I don't think it's a great idea because it's a very core function and we will be adding more side effects there and cause lot's of headaches. The only side effect it currently has is urgency hints and it already is buggy: H [ V [ A B ] C] focus C, set the urgent flag on A without focusing, i3-msg '[con_mark=A]' move right: urgent flag is lost.
Anyway, I'll try to make it work with con_focus and see if I can pass the tests with a reasonable amount of work.",True,{}
i3/i3,https://github.com/i3/i3,2969,2017-09-19T07:50:20Z,2017-12-18T07:54:46Z,2018-03-19T10:46:34Z,MERGED,True,207,107,8,https://github.com/orestisfl,Make 'focus' disable blocking fullscreen windows,5,[],https://github.com/i3/i3/pull/2969,https://github.com/Airblader,5,https://github.com/i3/i3/pull/2969#issuecomment-330629561,"This is my take on the issue. Before I move on I'd like some feedback on my take and the comments in the last commit message. The reason I didn't touch con_fullscreen_permits_focusing() is that too many stuff depend on it.
If this looks ok then I will:

 Mention that focus disable fullscreen in the userguide.
 Fix focus floating as well.

Fixes issue #1819.","But I don't quite see (yet) why the behavior change only applies to commands. A static outside function runs the risk of not using it in the places where it has to be used.
In general when I focus a container I should expect the function to do everything that has to be done to do so properly.
Of course I'd try to stay away from complicated stuff to serve all kinds of edge cases, hence me asking whether such cases even exist — naively, the change would sound simple to me.
@stapelberg What do you think about the current approach of handling this in commands.c?",True,{}
i3/i3,https://github.com/i3/i3,2969,2017-09-19T07:50:20Z,2017-12-18T07:54:46Z,2018-03-19T10:46:34Z,MERGED,True,207,107,8,https://github.com/orestisfl,Make 'focus' disable blocking fullscreen windows,5,[],https://github.com/i3/i3/pull/2969,https://github.com/orestisfl,6,https://github.com/i3/i3/pull/2969#issuecomment-330668431,"This is my take on the issue. Before I move on I'd like some feedback on my take and the comments in the last commit message. The reason I didn't touch con_fullscreen_permits_focusing() is that too many stuff depend on it.
If this looks ok then I will:

 Mention that focus disable fullscreen in the userguide.
 Fix focus floating as well.

Fixes issue #1819.","IMO the current focus stack thing has some problems because of con_focus abuse. move_tree is a function that misbehaves for sure but the same erroneous logic could have been applied to other places as well.
Consider the layout: H [ V1 [ A B ] V2 [ C D E ] ]. Mark A as A. Focus in order A->B->C->D->E. Run i3-msg '[con_mark=A]' move right (from E). Start closing terminals. Focus order should be E->D->C->A->B (will explain why A > B)*. Instead it is E->A->D->C->B. As an extra problem A loses it's urgency flag. Reason is that move_tree calls con_focus and bumps A's focus order to the top and then cmd_move_direction bumps E's order again to the top.
I encountered the same situation with floating windows in #2941. I tried to explain my logic in a comment there.
When node A is moved from V1 to V2 we should compare the focus order of the parents (in this case V2 > V1) and put A either in the tail or the head of the new parent.
*: This is the reason why A > B, we maintain focus order relative to the parent. If V2 is focused then all nodes of V2 are to be focused before any of the nodes in V1.
Anyway, to do what you are proposing we should split con_focus to a function that is actually used to focus specific containers (our case) and a function that fixes the focus stack (eg the way move_tree uses con_focus currently). Without the split a problem more relevant to our issue here is that moving a normal container to a workspace with a fullscreen container (eg to a different output) will unfullscreen the latter container.",True,{}
i3/i3,https://github.com/i3/i3,2969,2017-09-19T07:50:20Z,2017-12-18T07:54:46Z,2018-03-19T10:46:34Z,MERGED,True,207,107,8,https://github.com/orestisfl,Make 'focus' disable blocking fullscreen windows,5,[],https://github.com/i3/i3/pull/2969,https://github.com/Airblader,7,https://github.com/i3/i3/pull/2969#issuecomment-330759201,"This is my take on the issue. Before I move on I'd like some feedback on my take and the comments in the last commit message. The reason I didn't touch con_fullscreen_permits_focusing() is that too many stuff depend on it.
If this looks ok then I will:

 Mention that focus disable fullscreen in the userguide.
 Fix focus floating as well.

Fixes issue #1819.","Without the split a problem more relevant to our issue here is that moving a normal container to a workspace with a fullscreen container (eg to a different output) will unfullscreen the latter container.

Why is this an issue? Isn't that the behavior we should expect?
Anyway, I just think we should carefully review the best way to tackle these issues. I'd like to avoid getting into a monkey-patching situation. That's why I think @stapelberg should join in here. :-)",True,{}
i3/i3,https://github.com/i3/i3,2969,2017-09-19T07:50:20Z,2017-12-18T07:54:46Z,2018-03-19T10:46:34Z,MERGED,True,207,107,8,https://github.com/orestisfl,Make 'focus' disable blocking fullscreen windows,5,[],https://github.com/i3/i3/pull/2969,https://github.com/stapelberg,8,https://github.com/i3/i3/pull/2969#issuecomment-331619270,"This is my take on the issue. Before I move on I'd like some feedback on my take and the comments in the last commit message. The reason I didn't touch con_fullscreen_permits_focusing() is that too many stuff depend on it.
If this looks ok then I will:

 Mention that focus disable fullscreen in the userguide.
 Fix focus floating as well.

Fixes issue #1819.","IIUC, the tension here is between con_focus being used as a building block for other commands (e.g. move), and it being used directly for the focus command.
I agree that it would be cleaner if con_focus just did the right thing, but at this point, even I cannot keep in my head all the implicit assumptions we make when calling con_focus as a building block. Hence, I don’t think we should require cleaning up con_focus in the context of this change.
Adding a cmd_con_focus wrapper in src/commands.c (similar to what the PR currently does) actually seems like a good middle ground to me. We should document the nature of the two functions, though: explicitly call cmd_con_focus the helper which should be used by all focus commands, and explicitly call con_focus the i3-internal building block for other commands.
Does that sound reasonable?",True,{}
i3/i3,https://github.com/i3/i3,2969,2017-09-19T07:50:20Z,2017-12-18T07:54:46Z,2018-03-19T10:46:34Z,MERGED,True,207,107,8,https://github.com/orestisfl,Make 'focus' disable blocking fullscreen windows,5,[],https://github.com/i3/i3/pull/2969,https://github.com/Airblader,9,https://github.com/i3/i3/pull/2969#issuecomment-331619393,"This is my take on the issue. Before I move on I'd like some feedback on my take and the comments in the last commit message. The reason I didn't touch con_fullscreen_permits_focusing() is that too many stuff depend on it.
If this looks ok then I will:

 Mention that focus disable fullscreen in the userguide.
 Fix focus floating as well.

Fixes issue #1819.","Yeah, OK. It comes with a grain of salt, but it's fine with me. :-)",True,{}
i3/i3,https://github.com/i3/i3,2969,2017-09-19T07:50:20Z,2017-12-18T07:54:46Z,2018-03-19T10:46:34Z,MERGED,True,207,107,8,https://github.com/orestisfl,Make 'focus' disable blocking fullscreen windows,5,[],https://github.com/i3/i3/pull/2969,https://github.com/orestisfl,10,https://github.com/i3/i3/pull/2969#issuecomment-331619804,"This is my take on the issue. Before I move on I'd like some feedback on my take and the comments in the last commit message. The reason I didn't touch con_fullscreen_permits_focusing() is that too many stuff depend on it.
If this looks ok then I will:

 Mention that focus disable fullscreen in the userguide.
 Fix focus floating as well.

Fixes issue #1819.","... explicitly call cmd_con_focus the helper which should be used by all focus commands

Do we want to have this logic for all focus commands after all?",True,{}
i3/i3,https://github.com/i3/i3,2969,2017-09-19T07:50:20Z,2017-12-18T07:54:46Z,2018-03-19T10:46:34Z,MERGED,True,207,107,8,https://github.com/orestisfl,Make 'focus' disable blocking fullscreen windows,5,[],https://github.com/i3/i3/pull/2969,https://github.com/stapelberg,11,https://github.com/i3/i3/pull/2969#issuecomment-331620423,"This is my take on the issue. Before I move on I'd like some feedback on my take and the comments in the last commit message. The reason I didn't touch con_fullscreen_permits_focusing() is that too many stuff depend on it.
If this looks ok then I will:

 Mention that focus disable fullscreen in the userguide.
 Fix focus floating as well.

Fixes issue #1819.","Do we want to have this logic for all focus commands after all?

I’d say for all focus commands, yes. Is there any reason against it?",True,{}
i3/i3,https://github.com/i3/i3,2969,2017-09-19T07:50:20Z,2017-12-18T07:54:46Z,2018-03-19T10:46:34Z,MERGED,True,207,107,8,https://github.com/orestisfl,Make 'focus' disable blocking fullscreen windows,5,[],https://github.com/i3/i3/pull/2969,https://github.com/orestisfl,12,https://github.com/i3/i3/pull/2969#issuecomment-331621306,"This is my take on the issue. Before I move on I'd like some feedback on my take and the comments in the last commit message. The reason I didn't touch con_fullscreen_permits_focusing() is that too many stuff depend on it.
If this looks ok then I will:

 Mention that focus disable fullscreen in the userguide.
 Fix focus floating as well.

Fixes issue #1819.",Actually I already covered all uses of con_focus for cmd_focus_X commands. focus left etc don't use con_focus.,True,{}
i3/i3,https://github.com/i3/i3,2969,2017-09-19T07:50:20Z,2017-12-18T07:54:46Z,2018-03-19T10:46:34Z,MERGED,True,207,107,8,https://github.com/orestisfl,Make 'focus' disable blocking fullscreen windows,5,[],https://github.com/i3/i3/pull/2969,https://github.com/orestisfl,13,https://github.com/i3/i3/pull/2969#issuecomment-331624462,"This is my take on the issue. Before I move on I'd like some feedback on my take and the comments in the last commit message. The reason I didn't touch con_fullscreen_permits_focusing() is that too many stuff depend on it.
If this looks ok then I will:

 Mention that focus disable fullscreen in the userguide.
 Fix focus floating as well.

Fixes issue #1819.",Updated userguide.,True,{}
i3/i3,https://github.com/i3/i3,2969,2017-09-19T07:50:20Z,2017-12-18T07:54:46Z,2018-03-19T10:46:34Z,MERGED,True,207,107,8,https://github.com/orestisfl,Make 'focus' disable blocking fullscreen windows,5,[],https://github.com/i3/i3/pull/2969,https://github.com/orestisfl,14,https://github.com/i3/i3/pull/2969#issuecomment-350717908,"This is my take on the issue. Before I move on I'd like some feedback on my take and the comments in the last commit message. The reason I didn't touch con_fullscreen_permits_focusing() is that too many stuff depend on it.
If this looks ok then I will:

 Mention that focus disable fullscreen in the userguide.
 Fix focus floating as well.

Fixes issue #1819.","@stapelberg I've made the changes you requested.
I've also added a new error reply with 28c9fbc, tell me if you don't like it.",True,{}
i3/i3,https://github.com/i3/i3,2969,2017-09-19T07:50:20Z,2017-12-18T07:54:46Z,2018-03-19T10:46:34Z,MERGED,True,207,107,8,https://github.com/orestisfl,Make 'focus' disable blocking fullscreen windows,5,[],https://github.com/i3/i3/pull/2969,https://github.com/stapelberg,15,https://github.com/i3/i3/pull/2969#issuecomment-350722748,"This is my take on the issue. Before I move on I'd like some feedback on my take and the comments in the last commit message. The reason I didn't touch con_fullscreen_permits_focusing() is that too many stuff depend on it.
If this looks ok then I will:

 Mention that focus disable fullscreen in the userguide.
 Fix focus floating as well.

Fixes issue #1819.",Thanks! I’ll take a closer look in the evening.,True,{}
i3/i3,https://github.com/i3/i3,2969,2017-09-19T07:50:20Z,2017-12-18T07:54:46Z,2018-03-19T10:46:34Z,MERGED,True,207,107,8,https://github.com/orestisfl,Make 'focus' disable blocking fullscreen windows,5,[],https://github.com/i3/i3/pull/2969,https://github.com/orestisfl,16,https://github.com/i3/i3/pull/2969#issuecomment-350794514,"This is my take on the issue. Before I move on I'd like some feedback on my take and the comments in the last commit message. The reason I didn't touch con_fullscreen_permits_focusing() is that too many stuff depend on it.
If this looks ok then I will:

 Mention that focus disable fullscreen in the userguide.
 Fix focus floating as well.

Fixes issue #1819.",up,True,{}
i3/i3,https://github.com/i3/i3,2969,2017-09-19T07:50:20Z,2017-12-18T07:54:46Z,2018-03-19T10:46:34Z,MERGED,True,207,107,8,https://github.com/orestisfl,Make 'focus' disable blocking fullscreen windows,5,[],https://github.com/i3/i3/pull/2969,https://github.com/stapelberg,17,https://github.com/i3/i3/pull/2969#issuecomment-352350712,"This is my take on the issue. Before I move on I'd like some feedback on my take and the comments in the last commit message. The reason I didn't touch con_fullscreen_permits_focusing() is that too many stuff depend on it.
If this looks ok then I will:

 Mention that focus disable fullscreen in the userguide.
 Fix focus floating as well.

Fixes issue #1819.",Thanks!,True,{}
i3/i3,https://github.com/i3/i3,2970,2017-09-19T14:50:48Z,2017-09-19T16:57:56Z,2017-09-19T16:58:06Z,MERGED,True,60,8,3,https://github.com/CyberShadow,Do not canonicalize special output names ,4,[],https://github.com/i3/i3/pull/2970,https://github.com/CyberShadow,1,https://github.com/i3/i3/pull/2970,Fixes #2948.,Fixes #2948.,True,{}
i3/i3,https://github.com/i3/i3,2970,2017-09-19T14:50:48Z,2017-09-19T16:57:56Z,2017-09-19T16:58:06Z,MERGED,True,60,8,3,https://github.com/CyberShadow,Do not canonicalize special output names ,4,[],https://github.com/i3/i3/pull/2970,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/2970#issuecomment-330604293,Fixes #2948.,Thank you very much!,True,{}
i3/i3,https://github.com/i3/i3,2973,2017-09-21T07:56:23Z,2017-12-09T14:47:50Z,2017-12-09T14:47:50Z,CLOSED,False,1,1,1,https://github.com/ViktorWalter,Fixed issue of crashing when opening some new workspace referred to by number.,1,['waiting'],https://github.com/i3/i3/pull/2973,https://github.com/ViktorWalter,1,https://github.com/i3/i3/pull/2973,"i3 has a bug, where if I refer to the workspaces by number (names change dynamically in my use-case), then sometimes on switching to a yet unopened workspace leads to crash and logout.
I traced this issue to the src/workspace.c source, where the function _workspace_show(Con *workspace) accesses the previous workspace, after it was destroyed in this function, leading to access violation. Changing output_push_sticky_windows(old_focus) to output_push_sticky_windows(focused) fixes the issue. Other use-cases than mine may theoretically be affected.
I have originally made this pull request on the fork i3-gaps, and was told to bring it upstream.","i3 has a bug, where if I refer to the workspaces by number (names change dynamically in my use-case), then sometimes on switching to a yet unopened workspace leads to crash and logout.
I traced this issue to the src/workspace.c source, where the function _workspace_show(Con *workspace) accesses the previous workspace, after it was destroyed in this function, leading to access violation. Changing output_push_sticky_windows(old_focus) to output_push_sticky_windows(focused) fixes the issue. Other use-cases than mine may theoretically be affected.
I have originally made this pull request on the fork i3-gaps, and was told to bring it upstream.",True,{}
i3/i3,https://github.com/i3/i3,2973,2017-09-21T07:56:23Z,2017-12-09T14:47:50Z,2017-12-09T14:47:50Z,CLOSED,False,1,1,1,https://github.com/ViktorWalter,Fixed issue of crashing when opening some new workspace referred to by number.,1,['waiting'],https://github.com/i3/i3/pull/2973,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/2973#issuecomment-331095824,"i3 has a bug, where if I refer to the workspaces by number (names change dynamically in my use-case), then sometimes on switching to a yet unopened workspace leads to crash and logout.
I traced this issue to the src/workspace.c source, where the function _workspace_show(Con *workspace) accesses the previous workspace, after it was destroyed in this function, leading to access violation. Changing output_push_sticky_windows(old_focus) to output_push_sticky_windows(focused) fixes the issue. Other use-cases than mine may theoretically be affected.
I have originally made this pull request on the fork i3-gaps, and was told to bring it upstream.",Since this breaks a test can you please give the steps to reproduce the issue?,True,{}
i3/i3,https://github.com/i3/i3,2973,2017-09-21T07:56:23Z,2017-12-09T14:47:50Z,2017-12-09T14:47:50Z,CLOSED,False,1,1,1,https://github.com/ViktorWalter,Fixed issue of crashing when opening some new workspace referred to by number.,1,['waiting'],https://github.com/i3/i3/pull/2973,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2973#issuecomment-331096675,"i3 has a bug, where if I refer to the workspaces by number (names change dynamically in my use-case), then sometimes on switching to a yet unopened workspace leads to crash and logout.
I traced this issue to the src/workspace.c source, where the function _workspace_show(Con *workspace) accesses the previous workspace, after it was destroyed in this function, leading to access violation. Changing output_push_sticky_windows(old_focus) to output_push_sticky_windows(focused) fixes the issue. Other use-cases than mine may theoretically be affected.
I have originally made this pull request on the fork i3-gaps, and was told to bring it upstream.","While I do believe that there might be a bug here, I also think the fix just isn't correct. The call is now done for a different workspace, which is wrong.",True,{}
i3/i3,https://github.com/i3/i3,2973,2017-09-21T07:56:23Z,2017-12-09T14:47:50Z,2017-12-09T14:47:50Z,CLOSED,False,1,1,1,https://github.com/ViktorWalter,Fixed issue of crashing when opening some new workspace referred to by number.,1,['waiting'],https://github.com/i3/i3/pull/2973,https://github.com/ViktorWalter,4,https://github.com/i3/i3/pull/2973#issuecomment-331102495,"i3 has a bug, where if I refer to the workspaces by number (names change dynamically in my use-case), then sometimes on switching to a yet unopened workspace leads to crash and logout.
I traced this issue to the src/workspace.c source, where the function _workspace_show(Con *workspace) accesses the previous workspace, after it was destroyed in this function, leading to access violation. Changing output_push_sticky_windows(old_focus) to output_push_sticky_windows(focused) fixes the issue. Other use-cases than mine may theoretically be affected.
I have originally made this pull request on the fork i3-gaps, and was told to bring it upstream.","I don't know about the test, but I am pretty sure that the call should have been done for the new focus in the first place, unless I am misunderstanding the purpose of ouput_push_sticky_windows. According to the comment, it iterates over all outputs, and pushes sticky windows to the currently visible workspace on that output. Doesn't that mean, that if the argument was to be old_focus, it would attempt to push those stickies to the previous workspace, even if that workspace was destroyed?
Edit:
Ok, it seams tha the output_push_sticky_windows only uses the input to check its parent against the current context. This still causes access violation if the input was destroyed.",True,{}
i3/i3,https://github.com/i3/i3,2973,2017-09-21T07:56:23Z,2017-12-09T14:47:50Z,2017-12-09T14:47:50Z,CLOSED,False,1,1,1,https://github.com/ViktorWalter,Fixed issue of crashing when opening some new workspace referred to by number.,1,['waiting'],https://github.com/i3/i3/pull/2973,https://github.com/ViktorWalter,5,https://github.com/i3/i3/pull/2973#issuecomment-331103860,"i3 has a bug, where if I refer to the workspaces by number (names change dynamically in my use-case), then sometimes on switching to a yet unopened workspace leads to crash and logout.
I traced this issue to the src/workspace.c source, where the function _workspace_show(Con *workspace) accesses the previous workspace, after it was destroyed in this function, leading to access violation. Changing output_push_sticky_windows(old_focus) to output_push_sticky_windows(focused) fixes the issue. Other use-cases than mine may theoretically be affected.
I have originally made this pull request on the fork i3-gaps, and was told to bring it upstream.","Also, the steps to reproduce: in my case this caused the crash wihout fail: Set shortcuts to switch workspaces by referring to them by numbers, not names. Do not give the workspaces any initial names.
Say you have three monitors, with workspaces 1 - 3 automatically assigned to them right after login. Now, before starting any programs, switch to workspace 5. If that doesn't bring it down, switching to ws. 2 afterwards almost definitely will.
It took me a while to figure it out, since the occurence was seemingly random and made me lose work without warning.",True,{}
i3/i3,https://github.com/i3/i3,2973,2017-09-21T07:56:23Z,2017-12-09T14:47:50Z,2017-12-09T14:47:50Z,CLOSED,False,1,1,1,https://github.com/ViktorWalter,Fixed issue of crashing when opening some new workspace referred to by number.,1,['waiting'],https://github.com/i3/i3/pull/2973,https://github.com/orestisfl,6,https://github.com/i3/i3/pull/2973#issuecomment-331679060,"i3 has a bug, where if I refer to the workspaces by number (names change dynamically in my use-case), then sometimes on switching to a yet unopened workspace leads to crash and logout.
I traced this issue to the src/workspace.c source, where the function _workspace_show(Con *workspace) accesses the previous workspace, after it was destroyed in this function, leading to access violation. Changing output_push_sticky_windows(old_focus) to output_push_sticky_windows(focused) fixes the issue. Other use-cases than mine may theoretically be affected.
I have originally made this pull request on the fork i3-gaps, and was told to bring it upstream.","I've tried reproducing this with no success. IIUC, what you are describing is a very common setup among i3 users so I'd be surprised if these simple steps could trigger such a bug. Can you please share a minimal working example config (which when used can reliably reproduce the issue without any unnecessary fluff). Preferably using fake outputs.",True,{}
i3/i3,https://github.com/i3/i3,2973,2017-09-21T07:56:23Z,2017-12-09T14:47:50Z,2017-12-09T14:47:50Z,CLOSED,False,1,1,1,https://github.com/ViktorWalter,Fixed issue of crashing when opening some new workspace referred to by number.,1,['waiting'],https://github.com/i3/i3/pull/2973,https://github.com/Airblader,7,https://github.com/i3/i3/pull/2973#issuecomment-350475902,"i3 has a bug, where if I refer to the workspaces by number (names change dynamically in my use-case), then sometimes on switching to a yet unopened workspace leads to crash and logout.
I traced this issue to the src/workspace.c source, where the function _workspace_show(Con *workspace) accesses the previous workspace, after it was destroyed in this function, leading to access violation. Changing output_push_sticky_windows(old_focus) to output_push_sticky_windows(focused) fixes the issue. Other use-cases than mine may theoretically be affected.
I have originally made this pull request on the fork i3-gaps, and was told to bring it upstream.",I'm going to close this because I think the approach is incorrect and more investigation has to be done.,True,{}
i3/i3,https://github.com/i3/i3,2975,2017-09-22T10:25:49Z,2018-03-16T08:31:54Z,2018-03-19T10:46:30Z,MERGED,True,156,7,3,https://github.com/orestisfl,Fix move's focus bugs,2,[],https://github.com/i3/i3/pull/2975,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/2975,This will also be used for #2941 if accepted.,This will also be used for #2941 if accepted.,True,{}
i3/i3,https://github.com/i3/i3,2975,2017-09-22T10:25:49Z,2018-03-16T08:31:54Z,2018-03-19T10:46:30Z,MERGED,True,156,7,3,https://github.com/orestisfl,Fix move's focus bugs,2,[],https://github.com/i3/i3/pull/2975,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/2975#issuecomment-331647964,This will also be used for #2941 if accepted.,Added the functions.,True,{}
i3/i3,https://github.com/i3/i3,2975,2017-09-22T10:25:49Z,2018-03-16T08:31:54Z,2018-03-19T10:46:30Z,MERGED,True,156,7,3,https://github.com/orestisfl,Fix move's focus bugs,2,[],https://github.com/i3/i3/pull/2975,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/2975#issuecomment-331698234,This will also be used for #2941 if accepted.,@Airblader I've been wondering if it gets harder to track changes to a bigger PR after lots of reviews. Would you prefer it if I pushed --fixup= and --squash= type of commits and then rebased before the final merge?,True,{}
i3/i3,https://github.com/i3/i3,2975,2017-09-22T10:25:49Z,2018-03-16T08:31:54Z,2018-03-19T10:46:30Z,MERGED,True,156,7,3,https://github.com/orestisfl,Fix move's focus bugs,2,[],https://github.com/i3/i3/pull/2975,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/2975#issuecomment-331700305,This will also be used for #2941 if accepted.,Up,True,{}
i3/i3,https://github.com/i3/i3,2975,2017-09-22T10:25:49Z,2018-03-16T08:31:54Z,2018-03-19T10:46:30Z,MERGED,True,156,7,3,https://github.com/orestisfl,Fix move's focus bugs,2,[],https://github.com/i3/i3/pull/2975,https://github.com/Airblader,5,https://github.com/i3/i3/pull/2975#issuecomment-332636154,This will also be used for #2941 if accepted.,"LGTM now, but I'd like @stapelberg to at least glance over it as well.",True,{}
i3/i3,https://github.com/i3/i3,2975,2017-09-22T10:25:49Z,2018-03-16T08:31:54Z,2018-03-19T10:46:30Z,MERGED,True,156,7,3,https://github.com/orestisfl,Fix move's focus bugs,2,[],https://github.com/i3/i3/pull/2975,https://github.com/orestisfl,6,https://github.com/i3/i3/pull/2975#issuecomment-333112045,This will also be used for #2941 if accepted.,:| move.c's attach_to_workspace suffers from the same issues.,True,{}
i3/i3,https://github.com/i3/i3,2975,2017-09-22T10:25:49Z,2018-03-16T08:31:54Z,2018-03-19T10:46:30Z,MERGED,True,156,7,3,https://github.com/orestisfl,Fix move's focus bugs,2,[],https://github.com/i3/i3/pull/2975,https://github.com/Airblader,7,https://github.com/i3/i3/pull/2975#issuecomment-343654409,This will also be used for #2941 if accepted.,What's the status on this one? Anything open from your point of view or should we get into the review process to merge this?,True,{}
i3/i3,https://github.com/i3/i3,2975,2017-09-22T10:25:49Z,2018-03-16T08:31:54Z,2018-03-19T10:46:30Z,MERGED,True,156,7,3,https://github.com/orestisfl,Fix move's focus bugs,2,[],https://github.com/i3/i3/pull/2975,https://github.com/orestisfl,8,https://github.com/i3/i3/pull/2975#issuecomment-343659446,This will also be used for #2941 if accepted.,"Yes you can continue the review process. I have left some items open from @stapelberg's review because I am not so sure about them.
As I pointed out attach_to_workspace has issues as well but they don't need to be fixed here.",True,{}
i3/i3,https://github.com/i3/i3,2975,2017-09-22T10:25:49Z,2018-03-16T08:31:54Z,2018-03-19T10:46:30Z,MERGED,True,156,7,3,https://github.com/orestisfl,Fix move's focus bugs,2,[],https://github.com/i3/i3/pull/2975,https://github.com/Airblader,9,https://github.com/i3/i3/pull/2975#issuecomment-346548517,This will also be used for #2941 if accepted.,"I'm sorry it's been almost two weeks again, I'm just really lacking time right now. Perhaps @stapelberg can review it since it's his comments that are open anyway. :-)",True,{}
i3/i3,https://github.com/i3/i3,2975,2017-09-22T10:25:49Z,2018-03-16T08:31:54Z,2018-03-19T10:46:30Z,MERGED,True,156,7,3,https://github.com/orestisfl,Fix move's focus bugs,2,[],https://github.com/i3/i3/pull/2975,https://github.com/orestisfl,10,https://github.com/i3/i3/pull/2975#issuecomment-373468994,This will also be used for #2941 if accepted.,"Up. I've added a new branch regarding focus_before. I found the problem because I couldn't find a case where parent == lca and focus_before == 1.
I think I changed everything @stapelberg mentioned.",True,{}
i3/i3,https://github.com/i3/i3,2977,2017-09-22T16:56:02Z,2017-09-23T08:40:35Z,2017-09-24T15:19:24Z,MERGED,True,37,6,3,https://github.com/orestisfl,Check container existance during drag events,2,[],https://github.com/i3/i3/pull/2977,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/2977,"Fixes #1627
I'd love to write a testcase for this but I don't know how and didn't find anything similar in the current tests. Any pointers?","Fixes #1627
I'd love to write a testcase for this but I don't know how and didn't find anything similar in the current tests. Any pointers?",True,{}
i3/i3,https://github.com/i3/i3,2977,2017-09-22T16:56:02Z,2017-09-23T08:40:35Z,2017-09-24T15:19:24Z,MERGED,True,37,6,3,https://github.com/orestisfl,Check container existance during drag events,2,[],https://github.com/i3/i3/pull/2977,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/2977#issuecomment-331504243,"Fixes #1627
I'd love to write a testcase for this but I don't know how and didn't find anything similar in the current tests. Any pointers?",Check failed because of clang-format version difference. Dropped e1929db.,True,{}
i3/i3,https://github.com/i3/i3,2977,2017-09-22T16:56:02Z,2017-09-23T08:40:35Z,2017-09-24T15:19:24Z,MERGED,True,37,6,3,https://github.com/orestisfl,Check container existance during drag events,2,[],https://github.com/i3/i3/pull/2977,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2977#issuecomment-331551270,"Fixes #1627
I'd love to write a testcase for this but I don't know how and didn't find anything similar in the current tests. Any pointers?","As for the test, I think we can live without one here. It's likely to be a very race condition prone test anyway. Solving that would probably mean jumping through a lot of hoops.",True,{}
i3/i3,https://github.com/i3/i3,2977,2017-09-22T16:56:02Z,2017-09-23T08:40:35Z,2017-09-24T15:19:24Z,MERGED,True,37,6,3,https://github.com/orestisfl,Check container existance during drag events,2,[],https://github.com/i3/i3/pull/2977,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/2977#issuecomment-331586134,"Fixes #1627
I'd love to write a testcase for this but I don't know how and didn't find anything similar in the current tests. Any pointers?",... This breaks resizing tiling windows. Closing until I resolve this.,True,{}
i3/i3,https://github.com/i3/i3,2977,2017-09-22T16:56:02Z,2017-09-23T08:40:35Z,2017-09-24T15:19:24Z,MERGED,True,37,6,3,https://github.com/orestisfl,Check container existance during drag events,2,[],https://github.com/i3/i3/pull/2977,https://github.com/orestisfl,5,https://github.com/i3/i3/pull/2977#issuecomment-331588793,"Fixes #1627
I'd love to write a testcase for this but I don't know how and didn't find anything similar in the current tests. Any pointers?","Ok:
 /* The container that is being dragged or resized, or NULL if this is a
 * drag of the resize handle. */

Btw, I found a similar bug (in next) for resizing tiling windows and enabling floating.",True,{}
i3/i3,https://github.com/i3/i3,2977,2017-09-22T16:56:02Z,2017-09-23T08:40:35Z,2017-09-24T15:19:24Z,MERGED,True,37,6,3,https://github.com/orestisfl,Check container existance during drag events,2,[],https://github.com/i3/i3/pull/2977,https://github.com/orestisfl,6,https://github.com/i3/i3/pull/2977#issuecomment-331619427,"Fixes #1627
I'd love to write a testcase for this but I don't know how and didn't find anything similar in the current tests. Any pointers?",Done,True,{}
i3/i3,https://github.com/i3/i3,2977,2017-09-22T16:56:02Z,2017-09-23T08:40:35Z,2017-09-24T15:19:24Z,MERGED,True,37,6,3,https://github.com/orestisfl,Check container existance during drag events,2,[],https://github.com/i3/i3/pull/2977,https://github.com/Airblader,7,https://github.com/i3/i3/pull/2977#issuecomment-331619499,"Fixes #1627
I'd love to write a testcase for this but I don't know how and didn't find anything similar in the current tests. Any pointers?",Thanks! Waiting for Travis to merge,True,{}
i3/i3,https://github.com/i3/i3,2978,2017-09-22T19:25:24Z,2017-09-23T08:21:17Z,2018-03-19T10:46:22Z,MERGED,True,41,6,5,https://github.com/orestisfl,Issue 2572,2,[],https://github.com/i3/i3/pull/2978,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/2978,"Fixes #2572.
Based on #2616 (@sandsmark).
Differences from the original PR:

con_focus changes apply only to containers with CT_FLOATING_CON since con_focus is called recursively. This way the t/143-regress-floating-restart.t bug isn't reintroduced (#2616 (comment)).
handle_focus_in changes needed for the original issue. Tested with xdotool windowfocus ....
A small testcase.","Fixes #2572.
Based on #2616 (@sandsmark).
Differences from the original PR:

con_focus changes apply only to containers with CT_FLOATING_CON since con_focus is called recursively. This way the t/143-regress-floating-restart.t bug isn't reintroduced (#2616 (comment)).
handle_focus_in changes needed for the original issue. Tested with xdotool windowfocus ....
A small testcase.",True,{}
i3/i3,https://github.com/i3/i3,2978,2017-09-22T19:25:24Z,2017-09-23T08:21:17Z,2018-03-19T10:46:22Z,MERGED,True,41,6,5,https://github.com/orestisfl,Issue 2572,2,[],https://github.com/i3/i3/pull/2978,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/2978#issuecomment-331540451,"Fixes #2572.
Based on #2616 (@sandsmark).
Differences from the original PR:

con_focus changes apply only to containers with CT_FLOATING_CON since con_focus is called recursively. This way the t/143-regress-floating-restart.t bug isn't reintroduced (#2616 (comment)).
handle_focus_in changes needed for the original issue. Tested with xdotool windowfocus ....
A small testcase.",I think the handle_focus_in change can be limited to floating containers only. Will check latter if this is preferable.,True,{}
i3/i3,https://github.com/i3/i3,2978,2017-09-22T19:25:24Z,2017-09-23T08:21:17Z,2018-03-19T10:46:22Z,MERGED,True,41,6,5,https://github.com/orestisfl,Issue 2572,2,[],https://github.com/i3/i3/pull/2978,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/2978#issuecomment-331584150,"Fixes #2572.
Based on #2616 (@sandsmark).
Differences from the original PR:

con_focus changes apply only to containers with CT_FLOATING_CON since con_focus is called recursively. This way the t/143-regress-floating-restart.t bug isn't reintroduced (#2616 (comment)).
handle_focus_in changes needed for the original issue. Tested with xdotool windowfocus ....
A small testcase.",Up.,True,{}
i3/i3,https://github.com/i3/i3,2980,2017-09-24T07:44:15Z,2017-11-05T16:42:32Z,2018-03-19T10:46:17Z,MERGED,True,98,15,2,https://github.com/orestisfl,Use con_descend_focused for workspaces in _tree_next,1,[],https://github.com/i3/i3/pull/2980,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/2980,"Fixes #1160.
This is an alternative to orestisfl@4a920e4 that doesn't modify floating focus behavior.
I'll also write tests once the main approach is decided.","Fixes #1160.
This is an alternative to orestisfl@4a920e4 that doesn't modify floating focus behavior.
I'll also write tests once the main approach is decided.",True,{}
i3/i3,https://github.com/i3/i3,2980,2017-09-24T07:44:15Z,2017-11-05T16:42:32Z,2018-03-19T10:46:17Z,MERGED,True,98,15,2,https://github.com/orestisfl,Use con_descend_focused for workspaces in _tree_next,1,[],https://github.com/i3/i3/pull/2980,https://github.com/Airblader,2,https://github.com/i3/i3/pull/2980#issuecomment-331697449,"Fixes #1160.
This is an alternative to orestisfl@4a920e4 that doesn't modify floating focus behavior.
I'll also write tests once the main approach is decided.","Although the changed testcase does look odd at first glance, this would be more in line with the behavior for H[ term1* H[ term2 term3* ] ] (where the asterisk denotes the focused window within its parent). focus right in this case (from term1) will currently focus term3. Hence I think the change in this PR makes sense.
@stapelberg What do you think?",True,{}
i3/i3,https://github.com/i3/i3,2980,2017-09-24T07:44:15Z,2017-11-05T16:42:32Z,2018-03-19T10:46:17Z,MERGED,True,98,15,2,https://github.com/orestisfl,Use con_descend_focused for workspaces in _tree_next,1,[],https://github.com/i3/i3/pull/2980,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/2980#issuecomment-332578764,"Fixes #1160.
This is an alternative to orestisfl@4a920e4 that doesn't modify floating focus behavior.
I'll also write tests once the main approach is decided.","I agree that this change makes sense, for the same reason that @Airblader mentioned.",True,{}
i3/i3,https://github.com/i3/i3,2980,2017-09-24T07:44:15Z,2017-11-05T16:42:32Z,2018-03-19T10:46:17Z,MERGED,True,98,15,2,https://github.com/orestisfl,Use con_descend_focused for workspaces in _tree_next,1,[],https://github.com/i3/i3/pull/2980,https://github.com/Airblader,4,https://github.com/i3/i3/pull/2980#issuecomment-332634735,"Fixes #1160.
This is an alternative to orestisfl@4a920e4 that doesn't modify floating focus behavior.
I'll also write tests once the main approach is decided.",@orestisf1993 So the way I understood it you wanted to write more tests?,True,{}
i3/i3,https://github.com/i3/i3,2980,2017-09-24T07:44:15Z,2017-11-05T16:42:32Z,2018-03-19T10:46:17Z,MERGED,True,98,15,2,https://github.com/orestisfl,Use con_descend_focused for workspaces in _tree_next,1,[],https://github.com/i3/i3/pull/2980,https://github.com/orestisfl,5,https://github.com/i3/i3/pull/2980#issuecomment-332638207,"Fixes #1160.
This is an alternative to orestisfl@4a920e4 that doesn't modify floating focus behavior.
I'll also write tests once the main approach is decided.",Yes I wanted your opinion on the other approach as well but I'll write the tests tomorrow.,True,{}
i3/i3,https://github.com/i3/i3,2980,2017-09-24T07:44:15Z,2017-11-05T16:42:32Z,2018-03-19T10:46:17Z,MERGED,True,98,15,2,https://github.com/orestisfl,Use con_descend_focused for workspaces in _tree_next,1,[],https://github.com/i3/i3/pull/2980,https://github.com/orestisfl,6,https://github.com/i3/i3/pull/2980#issuecomment-332843305,"Fixes #1160.
This is an alternative to orestisfl@4a920e4 that doesn't modify floating focus behavior.
I'll also write tests once the main approach is decided.",Added the tests.,True,{}
i3/i3,https://github.com/i3/i3,2981,2017-09-24T08:22:01Z,2017-09-24T11:11:02Z,2017-09-24T11:11:04Z,MERGED,True,787,787,275,https://github.com/stapelberg,Replace http:// with https:// where applicable,2,[],https://github.com/i3/i3/pull/2981,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2981,"I suggest reviewing commit-by-commit, as one commit is auto-generated and touches every test.
This will fix mixed-mode content issues on https://build.i3wm.org and is good practice in general.","I suggest reviewing commit-by-commit, as one commit is auto-generated and touches every test.
This will fix mixed-mode content issues on https://build.i3wm.org and is good practice in general.",True,{}
i3/i3,https://github.com/i3/i3,2984,2017-09-24T13:46:38Z,2017-09-24T15:25:42Z,2017-09-24T15:25:45Z,MERGED,True,16,1,1,https://github.com/stapelberg,docs/ipc: document the GET_CONFIG request,1,[],https://github.com/i3/i3/pull/2984,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2984,"This was neglected in commit a6d8ed9
related to #2856","This was neglected in commit a6d8ed9
related to #2856",True,{}
i3/i3,https://github.com/i3/i3,2985,2017-09-25T01:45:25Z,2017-09-25T07:09:57Z,2017-09-25T07:09:57Z,MERGED,True,1,1,1,https://github.com/orestisfl,Correct remaining string length for fill_rmlvo_from_root,1,[],https://github.com/i3/i3/pull/2985,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/2985,Fixes #2538.,Fixes #2538.,True,{}
i3/i3,https://github.com/i3/i3,2987,2017-09-25T06:57:23Z,2017-09-25T07:04:32Z,2017-09-25T07:04:34Z,MERGED,True,14,8,2,https://github.com/stapelberg,update debian/changelog and release.sh after release,1,[],https://github.com/i3/i3/pull/2987,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/2987,,,True,{}
i3/i3,https://github.com/i3/i3,2989,2017-09-25T14:26:53Z,2017-09-25T16:11:16Z,2017-09-25T16:11:16Z,MERGED,True,1,0,1,https://github.com/gahr,WIFEXITED needs sys/wait.h,1,[],https://github.com/i3/i3/pull/2989,https://github.com/gahr,1,https://github.com/i3/i3/pull/2989,,,True,{}
i3/i3,https://github.com/i3/i3,2992,2017-09-26T00:01:12Z,2017-09-27T19:47:53Z,2017-09-27T19:47:53Z,MERGED,True,2,2,1,https://github.com/orestisfl,i3bar: fix segfault when no status_command is provided,1,[],https://github.com/i3/i3/pull/2992,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/2992,"Fixes #2933.
To reproduce add
bar {
}

in your config file and run i3-msg bar mode toggle.","Fixes #2933.
To reproduce add
bar {
}

in your config file and run i3-msg bar mode toggle.",True,{}
i3/i3,https://github.com/i3/i3,2995,2017-09-27T12:26:53Z,2017-09-27T19:46:01Z,2018-03-19T10:46:07Z,MERGED,True,3,1,1,https://github.com/orestisfl,dump-asy.pl: use correct tmp dirname instead of hardcoded /tmp,1,[],https://github.com/i3/i3/pull/2995,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/2995,"For example, on some systems, $rep might be saved in /tmp/$USER/ instead
of /tmp/.","For example, on some systems, $rep might be saved in /tmp/$USER/ instead
of /tmp/.",True,{}
i3/i3,https://github.com/i3/i3,2997,2017-09-27T19:43:50Z,2017-09-28T20:12:53Z,2017-09-28T20:12:53Z,MERGED,True,1,0,1,https://github.com/Airblader,Deal with UTF8 in perl-workspaces.pl.,1,[],https://github.com/i3/i3/pull/2997,https://github.com/Airblader,1,https://github.com/i3/i3/pull/2997,fixes #2996,fixes #2996,True,{}
i3/i3,https://github.com/i3/i3,2997,2017-09-27T19:43:50Z,2017-09-28T20:12:53Z,2017-09-28T20:12:53Z,MERGED,True,1,0,1,https://github.com/Airblader,Deal with UTF8 in perl-workspaces.pl.,1,[],https://github.com/i3/i3/pull/2997,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/2997#issuecomment-332741626,fixes #2996,"nit: the commit message says perl-workspaces.pl, but the file is called per-workspace-layout.pl :)
Otherwise, this change is fine.",True,{}
i3/i3,https://github.com/i3/i3,2997,2017-09-27T19:43:50Z,2017-09-28T20:12:53Z,2017-09-28T20:12:53Z,MERGED,True,1,0,1,https://github.com/Airblader,Deal with UTF8 in perl-workspaces.pl.,1,[],https://github.com/i3/i3/pull/2997,https://github.com/Airblader,3,https://github.com/i3/i3/pull/2997#issuecomment-332904528,fixes #2996,Updated the commit message. :-),True,{}
i3/i3,https://github.com/i3/i3,2998,2017-09-29T00:00:21Z,2018-01-14T17:22:44Z,2018-03-06T06:19:33Z,MERGED,True,159,51,15,https://github.com/orestisfl,Don't raise floating windows when focused because of focus_follows_mouse,2,['waiting'],https://github.com/i3/i3/pull/2998,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/2998,"Fixes #2990.
I am not too happy with the _con_focus name, I'd love to hear better suggestions for the change. If the code logic is ok and once we conclude on a name I'll properly reformat con.{c,h} (spacing, comments etc).","Fixes #2990.
I am not too happy with the _con_focus name, I'd love to hear better suggestions for the change. If the code logic is ok and once we conclude on a name I'll properly reformat con.{c,h} (spacing, comments etc).",True,{}
i3/i3,https://github.com/i3/i3,2998,2017-09-29T00:00:21Z,2018-01-14T17:22:44Z,2018-03-06T06:19:33Z,MERGED,True,159,51,15,https://github.com/orestisfl,Don't raise floating windows when focused because of focus_follows_mouse,2,['waiting'],https://github.com/i3/i3/pull/2998,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/2998#issuecomment-338909541,"Fixes #2990.
I am not too happy with the _con_focus name, I'd love to hear better suggestions for the change. If the code logic is ok and once we conclude on a name I'll properly reformat con.{c,h} (spacing, comments etc).","Sorry for letting this linger for so long.
I think what we should do instead of introducing an option to con_focus is to pull the raise logic into a separate function and call it where appropriate — i.e. whenever we programmatically change focus, not as a reaction to a FocusIn event.",True,{}
i3/i3,https://github.com/i3/i3,2998,2017-09-29T00:00:21Z,2018-01-14T17:22:44Z,2018-03-06T06:19:33Z,MERGED,True,159,51,15,https://github.com/orestisfl,Don't raise floating windows when focused because of focus_follows_mouse,2,['waiting'],https://github.com/i3/i3/pull/2998,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/2998#issuecomment-338922965,"Fixes #2990.
I am not too happy with the _con_focus name, I'd love to hear better suggestions for the change. If the code logic is ok and once we conclude on a name I'll properly reformat con.{c,h} (spacing, comments etc).",Shouldn't we keep FocusIn events? This will reintroduce #2572.,True,{}
i3/i3,https://github.com/i3/i3,2998,2017-09-29T00:00:21Z,2018-01-14T17:22:44Z,2018-03-06T06:19:33Z,MERGED,True,159,51,15,https://github.com/orestisfl,Don't raise floating windows when focused because of focus_follows_mouse,2,['waiting'],https://github.com/i3/i3/pull/2998,https://github.com/stapelberg,4,https://github.com/i3/i3/pull/2998#issuecomment-338928438,"Fixes #2990.
I am not too happy with the _con_focus name, I'd love to hear better suggestions for the change. If the code logic is ok and once we conclude on a name I'll properly reformat con.{c,h} (spacing, comments etc).","I thought #2572 is about reacting to a menu-triggered raise, e.g. via the Window menu in GIMP. That would trigger a programmatic change, not a FocusIn. Am I misunderstanding that issue?",True,{}
i3/i3,https://github.com/i3/i3,2998,2017-09-29T00:00:21Z,2018-01-14T17:22:44Z,2018-03-06T06:19:33Z,MERGED,True,159,51,15,https://github.com/orestisfl,Don't raise floating windows when focused because of focus_follows_mouse,2,['waiting'],https://github.com/i3/i3/pull/2998,https://github.com/orestisfl,5,https://github.com/i3/i3/pull/2998#issuecomment-338932949,"Fixes #2990.
I am not too happy with the _con_focus name, I'd love to hear better suggestions for the change. If the code logic is ok and once we conclude on a name I'll properly reformat con.{c,h} (spacing, comments etc).","Hmm, I am not sure actually. I just checked by making the con_focus call in handle_focus_in not raise floating windows. Now, with xdotool windowfocus ... floating windows are not raised to the top. Isn't this a case that we want them to be raised to the top?",True,{}
i3/i3,https://github.com/i3/i3,2998,2017-09-29T00:00:21Z,2018-01-14T17:22:44Z,2018-03-06T06:19:33Z,MERGED,True,159,51,15,https://github.com/orestisfl,Don't raise floating windows when focused because of focus_follows_mouse,2,['waiting'],https://github.com/i3/i3/pull/2998,https://github.com/stapelberg,6,https://github.com/i3/i3/pull/2998#issuecomment-338935343,"Fixes #2990.
I am not too happy with the _con_focus name, I'd love to hear better suggestions for the change. If the code logic is ok and once we conclude on a name I'll properly reformat con.{c,h} (spacing, comments etc).","No: xdotool windowfocus sends SetInputFocus.
The way to programmatically request focus from the window manager is via a _NET_ACTIVE_WINDOW ClientMessage sent to the root window. xdotool implements that as xdotool windowactivate.",True,{}
i3/i3,https://github.com/i3/i3,2998,2017-09-29T00:00:21Z,2018-01-14T17:22:44Z,2018-03-06T06:19:33Z,MERGED,True,159,51,15,https://github.com/orestisfl,Don't raise floating windows when focused because of focus_follows_mouse,2,['waiting'],https://github.com/i3/i3/pull/2998,https://github.com/orestisfl,7,https://github.com/i3/i3/pull/2998#issuecomment-338943885,"Fixes #2990.
I am not too happy with the _con_focus name, I'd love to hear better suggestions for the change. If the code logic is ok and once we conclude on a name I'll properly reformat con.{c,h} (spacing, comments etc).","Yes you are correct. But I think FocusIn events are not the cause of #2990, MotionNotify and/or EnterNotify are.",True,{}
i3/i3,https://github.com/i3/i3,2998,2017-09-29T00:00:21Z,2018-01-14T17:22:44Z,2018-03-06T06:19:33Z,MERGED,True,159,51,15,https://github.com/orestisfl,Don't raise floating windows when focused because of focus_follows_mouse,2,['waiting'],https://github.com/i3/i3/pull/2998,https://github.com/stapelberg,8,https://github.com/i3/i3/pull/2998#issuecomment-338945289,"Fixes #2990.
I am not too happy with the _con_focus name, I'd love to hear better suggestions for the change. If the code logic is ok and once we conclude on a name I'll properly reformat con.{c,h} (spacing, comments etc).","We’d definitely get EnterNotify, but I think FocusIn events are also generated. It could be that we don’t receive them because we temporarily change the event mask when sending SetInputFocus — I’d have to look that up.",True,{}
i3/i3,https://github.com/i3/i3,2998,2017-09-29T00:00:21Z,2018-01-14T17:22:44Z,2018-03-06T06:19:33Z,MERGED,True,159,51,15,https://github.com/orestisfl,Don't raise floating windows when focused because of focus_follows_mouse,2,['waiting'],https://github.com/i3/i3/pull/2998,https://github.com/orestisfl,9,https://github.com/i3/i3/pull/2998#issuecomment-338947445,"Fixes #2990.
I am not too happy with the _con_focus name, I'd love to hear better suggestions for the change. If the code logic is ok and once we conclude on a name I'll properly reformat con.{c,h} (spacing, comments etc).","I think this comment explains it:

  
    
      i3/src/handlers.c
    
    
        Lines 1202 to 1208
      in
      4f75161
    
  
  
    

        
          
           /* 
        

        
          
            * Handles FocusIn events which are generated by clients (i3’s focus changes 
        

        
          
            * don’t generate FocusIn events due to a different EventMask) and updates the 
        

        
          
            * decorations accordingly. 
        

        
          
            * 
        

        
          
            */ 
        

        
          
           static void handle_focus_in(xcb_focus_in_event_t *event) {",True,{}
i3/i3,https://github.com/i3/i3,2998,2017-09-29T00:00:21Z,2018-01-14T17:22:44Z,2018-03-06T06:19:33Z,MERGED,True,159,51,15,https://github.com/orestisfl,Don't raise floating windows when focused because of focus_follows_mouse,2,['waiting'],https://github.com/i3/i3/pull/2998,https://github.com/jolange,10,https://github.com/i3/i3/pull/2998#issuecomment-345544579,"Fixes #2990.
I am not too happy with the _con_focus name, I'd love to hear better suggestions for the change. If the code logic is ok and once we conclude on a name I'll properly reformat con.{c,h} (spacing, comments etc).","What's the status here? I'm very interested in a solution to #2990, because it makes the current i3 version unusable for me.",True,"{'THUMBS_UP': ['https://github.com/busimus', 'https://github.com/bmbove', 'https://github.com/SERVCUBED', 'https://github.com/alindt']}"
i3/i3,https://github.com/i3/i3,2998,2017-09-29T00:00:21Z,2018-01-14T17:22:44Z,2018-03-06T06:19:33Z,MERGED,True,159,51,15,https://github.com/orestisfl,Don't raise floating windows when focused because of focus_follows_mouse,2,['waiting'],https://github.com/i3/i3/pull/2998,https://github.com/stapelberg,11,https://github.com/i3/i3/pull/2998#issuecomment-345963017,"Fixes #2990.
I am not too happy with the _con_focus name, I'd love to hear better suggestions for the change. If the code logic is ok and once we conclude on a name I'll properly reformat con.{c,h} (spacing, comments etc).","I think what we should do instead of introducing an option to con_focus is to pull the raise logic into a separate function and call it where appropriate — i.e. whenever we programmatically change focus, not as a reaction to a FocusIn event.

That comment is still not addressed AFAICT.",True,{}
i3/i3,https://github.com/i3/i3,2998,2017-09-29T00:00:21Z,2018-01-14T17:22:44Z,2018-03-06T06:19:33Z,MERGED,True,159,51,15,https://github.com/orestisfl,Don't raise floating windows when focused because of focus_follows_mouse,2,['waiting'],https://github.com/i3/i3/pull/2998,https://github.com/orestisfl,12,https://github.com/i3/i3/pull/2998#issuecomment-348807232,"Fixes #2990.
I am not too happy with the _con_focus name, I'd love to hear better suggestions for the change. If the code logic is ok and once we conclude on a name I'll properly reformat con.{c,h} (spacing, comments etc).","I think what we should do instead of introducing an option to con_focus is to pull the raise logic into a separate function and call it where appropriate — i.e. whenever we programmatically change focus, not as a reaction to a FocusIn event.

Doesn't this mean that we would have to make changes in most parts of the code where con_focus is called?",True,{}
i3/i3,https://github.com/i3/i3,2998,2017-09-29T00:00:21Z,2018-01-14T17:22:44Z,2018-03-06T06:19:33Z,MERGED,True,159,51,15,https://github.com/orestisfl,Don't raise floating windows when focused because of focus_follows_mouse,2,['waiting'],https://github.com/i3/i3/pull/2998,https://github.com/stapelberg,13,https://github.com/i3/i3/pull/2998#issuecomment-348812224,"Fixes #2990.
I am not too happy with the _con_focus name, I'd love to hear better suggestions for the change. If the code logic is ok and once we conclude on a name I'll properly reformat con.{c,h} (spacing, comments etc).","Yes, we’ll need to identify where the raise function should be called (as opposed to just the focus function).",True,{}
i3/i3,https://github.com/i3/i3,2998,2017-09-29T00:00:21Z,2018-01-14T17:22:44Z,2018-03-06T06:19:33Z,MERGED,True,159,51,15,https://github.com/orestisfl,Don't raise floating windows when focused because of focus_follows_mouse,2,['waiting'],https://github.com/i3/i3/pull/2998,https://github.com/orestisfl,14,https://github.com/i3/i3/pull/2998#issuecomment-349166626,"Fixes #2990.
I am not too happy with the _con_focus name, I'd love to hear better suggestions for the change. If the code logic is ok and once we conclude on a name I'll properly reformat con.{c,h} (spacing, comments etc).","My problem with this approach is that we'll have to review each call of con_focus (about 50 of them) and see if it makes sense to add extra code to raise a possible floating container. Except for the 2 or 3 calls that cause #2990 I think that the other con_focus calls that also raise are either harmless (exclusively for tiling windows) or reasonable defaults until they cause a problem.
I propose to:

Make _con_focus a static
Keep con_focus as is in this PR
Add con_focus_background (or whatever appropriate name) that just calls _con_focus(con, false);
Use that when we explicitly don't want to raise floating containers",True,{}
i3/i3,https://github.com/i3/i3,2998,2017-09-29T00:00:21Z,2018-01-14T17:22:44Z,2018-03-06T06:19:33Z,MERGED,True,159,51,15,https://github.com/orestisfl,Don't raise floating windows when focused because of focus_follows_mouse,2,['waiting'],https://github.com/i3/i3/pull/2998,https://github.com/orestisfl,15,https://github.com/i3/i3/pull/2998#issuecomment-349483749,"Fixes #2990.
I am not too happy with the _con_focus name, I'd love to hear better suggestions for the change. If the code logic is ok and once we conclude on a name I'll properly reformat con.{c,h} (spacing, comments etc).",I pushed my proposal from #2998 (comment),True,{}
i3/i3,https://github.com/i3/i3,2998,2017-09-29T00:00:21Z,2018-01-14T17:22:44Z,2018-03-06T06:19:33Z,MERGED,True,159,51,15,https://github.com/orestisfl,Don't raise floating windows when focused because of focus_follows_mouse,2,['waiting'],https://github.com/i3/i3/pull/2998,https://github.com/stapelberg,16,https://github.com/i3/i3/pull/2998#issuecomment-350642103,"Fixes #2990.
I am not too happy with the _con_focus name, I'd love to hear better suggestions for the change. If the code logic is ok and once we conclude on a name I'll properly reformat con.{c,h} (spacing, comments etc).","Thanks for your continued work on this PR.

My problem with this approach is that we'll have to review each call of con_focus (about 50 of them) and see if it makes sense to add extra code to raise a possible floating container. Except for the 2 or 3 calls that cause #2990 I think that the other con_focus calls that also raise are either harmless (exclusively for tiling windows) or reasonable defaults until they cause a problem.

I don’t follow. You already did the review of each call: you identified the ones which should not raise. Why don’t you use string-replace on all con_focus calls to make them con_focus; con_raise;, then remove the raise from the 3 calls where we don’t want to raise? :)",True,{}
i3/i3,https://github.com/i3/i3,2998,2017-09-29T00:00:21Z,2018-01-14T17:22:44Z,2018-03-06T06:19:33Z,MERGED,True,159,51,15,https://github.com/orestisfl,Don't raise floating windows when focused because of focus_follows_mouse,2,['waiting'],https://github.com/i3/i3/pull/2998,https://github.com/orestisfl,17,https://github.com/i3/i3/pull/2998#issuecomment-350704039,"Fixes #2990.
I am not too happy with the _con_focus name, I'd love to hear better suggestions for the change. If the code logic is ok and once we conclude on a name I'll properly reformat con.{c,h} (spacing, comments etc).","My arguments against your approach are:
It increases boilerplate code for almost all calls of con_focus.
It can be misleading: there might be some places where we know that we are focusing a tiling container (eg in con_swap). Combining this with a raise call could confuse the reader.
Your approach will also need to introduce a new function since floating_raise_con already assumes floating containers. This new function will also need to use recursion (con_inside_floating) to identify the correct floating container.",True,{}
i3/i3,https://github.com/i3/i3,2998,2017-09-29T00:00:21Z,2018-01-14T17:22:44Z,2018-03-06T06:19:33Z,MERGED,True,159,51,15,https://github.com/orestisfl,Don't raise floating windows when focused because of focus_follows_mouse,2,['waiting'],https://github.com/i3/i3/pull/2998,https://github.com/stapelberg,18,https://github.com/i3/i3/pull/2998#issuecomment-350706357,"Fixes #2990.
I am not too happy with the _con_focus name, I'd love to hear better suggestions for the change. If the code logic is ok and once we conclude on a name I'll properly reformat con.{c,h} (spacing, comments etc).","It increases boilerplate code for almost all calls of con_focus.

I’m willing to live with that if it means avoiding options in con_focus.

It can be misleading: there might be some places where we know that we are focusing a tiling container (eg in con_swap). Combining this with a raise call could confuse the reader.

Let’s not add raise calls in places where we know we operate on tiling containers, then. Also, let’s add a comment to the raise function documenting that it’s a no-op on tiling containers and safe to remove in that case.",True,{}
i3/i3,https://github.com/i3/i3,2998,2017-09-29T00:00:21Z,2018-01-14T17:22:44Z,2018-03-06T06:19:33Z,MERGED,True,159,51,15,https://github.com/orestisfl,Don't raise floating windows when focused because of focus_follows_mouse,2,['waiting'],https://github.com/i3/i3/pull/2998,https://github.com/orestisfl,19,https://github.com/i3/i3/pull/2998#issuecomment-350715014,"Fixes #2990.
I am not too happy with the _con_focus name, I'd love to hear better suggestions for the change. If the code logic is ok and once we conclude on a name I'll properly reformat con.{c,h} (spacing, comments etc).","I’m willing to live with that if it means avoiding options in con_focus.

What's so bad with the option in _con_focus?",True,{}
i3/i3,https://github.com/i3/i3,2998,2017-09-29T00:00:21Z,2018-01-14T17:22:44Z,2018-03-06T06:19:33Z,MERGED,True,159,51,15,https://github.com/orestisfl,Don't raise floating windows when focused because of focus_follows_mouse,2,['waiting'],https://github.com/i3/i3/pull/2998,https://github.com/stapelberg,20,https://github.com/i3/i3/pull/2998#issuecomment-350717210,"Fixes #2990.
I am not too happy with the _con_focus name, I'd love to hear better suggestions for the change. If the code logic is ok and once we conclude on a name I'll properly reformat con.{c,h} (spacing, comments etc).","It makes a very core piece of the code much harder to follow.
Function parameters which change the function behavior are the most prevalent anti-pattern in the i3 code base by far, so I’m really against introducing any more. Past refactorings and bug fixes have shown that these are very tricky to deal with.
A better alternative is to have well-scoped functionality in small functions, which is what I’m advocating for here.",True,{}
i3/i3,https://github.com/i3/i3,2998,2017-09-29T00:00:21Z,2018-01-14T17:22:44Z,2018-03-06T06:19:33Z,MERGED,True,159,51,15,https://github.com/orestisfl,Don't raise floating windows when focused because of focus_follows_mouse,2,['waiting'],https://github.com/i3/i3/pull/2998,https://github.com/orestisfl,21,https://github.com/i3/i3/pull/2998#issuecomment-350731426,"Fixes #2990.
I am not too happy with the _con_focus name, I'd love to hear better suggestions for the change. If the code logic is ok and once we conclude on a name I'll properly reformat con.{c,h} (spacing, comments etc).","I think it's not such a big issue here since the caller doesn't have to figure out the parameters like with         con_move_to_workspace(con, ws, true, false, false). I also don't agree with a solution that introduces more code duplication, another prevalent problem in the i3 code base.
Would you agree to replace con_focus with:
void con_activate(Con *con){
    con_focus(con);
    con_raise(con); /* the new raise function */
}

?
This way we are making ""focusing"" and ""activating"" a window separate concepts, like in xdotool. You can hover over a window to ""focus"" it but you need to click it in order to ""activate"" it.
We could also move some workspace_show and urgency code inside con_activate.",True,{}
i3/i3,https://github.com/i3/i3,2998,2017-09-29T00:00:21Z,2018-01-14T17:22:44Z,2018-03-06T06:19:33Z,MERGED,True,159,51,15,https://github.com/orestisfl,Don't raise floating windows when focused because of focus_follows_mouse,2,['waiting'],https://github.com/i3/i3/pull/2998,https://github.com/stapelberg,22,https://github.com/i3/i3/pull/2998#issuecomment-350760161,"Fixes #2990.
I am not too happy with the _con_focus name, I'd love to hear better suggestions for the change. If the code logic is ok and once we conclude on a name I'll properly reformat con.{c,h} (spacing, comments etc).","Sounds good, let’s give that a shot.",True,{}
i3/i3,https://github.com/i3/i3,2998,2017-09-29T00:00:21Z,2018-01-14T17:22:44Z,2018-03-06T06:19:33Z,MERGED,True,159,51,15,https://github.com/orestisfl,Don't raise floating windows when focused because of focus_follows_mouse,2,['waiting'],https://github.com/i3/i3/pull/2998,https://github.com/orestisfl,23,https://github.com/i3/i3/pull/2998#issuecomment-350899806,"Fixes #2990.
I am not too happy with the _con_focus name, I'd love to hear better suggestions for the change. If the code logic is ok and once we conclude on a name I'll properly reformat con.{c,h} (spacing, comments etc).","An alternative to prevent the project-wide rename and the inconsistency between the focus command and the ""activate"" concept I talked about would be to:
void con_focus(Con *con){
    con_input_focus(con);   /* or con_focus_background or whatever name */
    con_raise(con);
}

would you prefer that?",True,{}
i3/i3,https://github.com/i3/i3,2998,2017-09-29T00:00:21Z,2018-01-14T17:22:44Z,2018-03-06T06:19:33Z,MERGED,True,159,51,15,https://github.com/orestisfl,Don't raise floating windows when focused because of focus_follows_mouse,2,['waiting'],https://github.com/i3/i3/pull/2998,https://github.com/stapelberg,24,https://github.com/i3/i3/pull/2998#issuecomment-352350854,"Fixes #2990.
I am not too happy with the _con_focus name, I'd love to hear better suggestions for the change. If the code logic is ok and once we conclude on a name I'll properly reformat con.{c,h} (spacing, comments etc).","would you prefer that?

No, I think I prefer the activate concept actually :)",True,{}
i3/i3,https://github.com/i3/i3,2998,2017-09-29T00:00:21Z,2018-01-14T17:22:44Z,2018-03-06T06:19:33Z,MERGED,True,159,51,15,https://github.com/orestisfl,Don't raise floating windows when focused because of focus_follows_mouse,2,['waiting'],https://github.com/i3/i3/pull/2998,https://github.com/orestisfl,25,https://github.com/i3/i3/pull/2998#issuecomment-357513190,"Fixes #2990.
I am not too happy with the _con_focus name, I'd love to hear better suggestions for the change. If the code logic is ok and once we conclude on a name I'll properly reformat con.{c,h} (spacing, comments etc).",I've pushed the rename. Let's check the changes to see if it doesn't make sense in some places.,True,{}
i3/i3,https://github.com/i3/i3,2998,2017-09-29T00:00:21Z,2018-01-14T17:22:44Z,2018-03-06T06:19:33Z,MERGED,True,159,51,15,https://github.com/orestisfl,Don't raise floating windows when focused because of focus_follows_mouse,2,['waiting'],https://github.com/i3/i3/pull/2998,https://github.com/stapelberg,26,https://github.com/i3/i3/pull/2998#issuecomment-357527120,"Fixes #2990.
I am not too happy with the _con_focus name, I'd love to hear better suggestions for the change. If the code logic is ok and once we conclude on a name I'll properly reformat con.{c,h} (spacing, comments etc).",Looks good to me. We can fix calls one-by-one whenever we discover one where the window should not be raised.,True,{}
i3/i3,https://github.com/i3/i3,2998,2017-09-29T00:00:21Z,2018-01-14T17:22:44Z,2018-03-06T06:19:33Z,MERGED,True,159,51,15,https://github.com/orestisfl,Don't raise floating windows when focused because of focus_follows_mouse,2,['waiting'],https://github.com/i3/i3/pull/2998,https://github.com/Sonique,27,https://github.com/i3/i3/pull/2998#issuecomment-357912018,"Fixes #2990.
I am not too happy with the _con_focus name, I'd love to hear better suggestions for the change. If the code logic is ok and once we conclude on a name I'll properly reformat con.{c,h} (spacing, comments etc).",So how can I use it in my i3wm configuration? Pretty annoying issue :),True,{}
i3/i3,https://github.com/i3/i3,2998,2017-09-29T00:00:21Z,2018-01-14T17:22:44Z,2018-03-06T06:19:33Z,MERGED,True,159,51,15,https://github.com/orestisfl,Don't raise floating windows when focused because of focus_follows_mouse,2,['waiting'],https://github.com/i3/i3/pull/2998,https://github.com/Airblader,28,https://github.com/i3/i3/pull/2998#issuecomment-357958305,"Fixes #2990.
I am not too happy with the _con_focus name, I'd love to hear better suggestions for the change. If the code logic is ok and once we conclude on a name I'll properly reformat con.{c,h} (spacing, comments etc).",@Sonique There's no need for configuration. If you run a version compiled with this patch it should work.,True,{}
i3/i3,https://github.com/i3/i3,2998,2017-09-29T00:00:21Z,2018-01-14T17:22:44Z,2018-03-06T06:19:33Z,MERGED,True,159,51,15,https://github.com/orestisfl,Don't raise floating windows when focused because of focus_follows_mouse,2,['waiting'],https://github.com/i3/i3/pull/2998,https://github.com/languitar,29,https://github.com/i3/i3/pull/2998#issuecomment-370570349,"Fixes #2990.
I am not too happy with the _con_focus name, I'd love to hear better suggestions for the change. If the code logic is ok and once we conclude on a name I'll properly reformat con.{c,h} (spacing, comments etc).",Is there any plan when a new release will be made including this fix? The current behavior drives me crazy...,True,"{'THUMBS_UP': ['https://github.com/bmbove', 'https://github.com/scottwernervt']}"
i3/i3,https://github.com/i3/i3,2998,2017-09-29T00:00:21Z,2018-01-14T17:22:44Z,2018-03-06T06:19:33Z,MERGED,True,159,51,15,https://github.com/orestisfl,Don't raise floating windows when focused because of focus_follows_mouse,2,['waiting'],https://github.com/i3/i3/pull/2998,https://github.com/Airblader,30,https://github.com/i3/i3/pull/2998#issuecomment-370676334,"Fixes #2990.
I am not too happy with the _con_focus name, I'd love to hear better suggestions for the change. If the code logic is ok and once we conclude on a name I'll properly reformat con.{c,h} (spacing, comments etc).",We're aiming to release over the next few days.,True,{}
i3/i3,https://github.com/i3/i3,3000,2017-09-29T19:58:28Z,2017-09-29T21:02:18Z,2017-09-29T21:02:21Z,MERGED,True,4,0,1,https://github.com/stapelberg,"docs/ipc: include new Go package, reference example byteorder code",1,[],https://github.com/i3/i3/pull/3000,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3000,,,True,{}
i3/i3,https://github.com/i3/i3,3002,2017-09-30T01:31:01Z,2017-11-05T17:10:30Z,2020-06-26T12:43:48Z,CLOSED,False,11,6,2,https://github.com/orestisfl,tree_flatten: remove redundant stacked / tabbed containers,1,['waiting'],https://github.com/i3/i3/pull/3002,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3002,"Fixes #3001.
Before merging I'd like to:

 Run this patch for a few days on my system
 Write tests.

Submitting this PR to receive some first feedback.","Fixes #3001.
Before merging I'd like to:

 Run this patch for a few days on my system
 Write tests.

Submitting this PR to receive some first feedback.",True,{}
i3/i3,https://github.com/i3/i3,3002,2017-09-30T01:31:01Z,2017-11-05T17:10:30Z,2020-06-26T12:43:48Z,CLOSED,False,11,6,2,https://github.com/orestisfl,tree_flatten: remove redundant stacked / tabbed containers,1,['waiting'],https://github.com/i3/i3/pull/3002,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3002#issuecomment-341986364,"Fixes #3001.
Before merging I'd like to:

 Run this patch for a few days on my system
 Write tests.

Submitting this PR to receive some first feedback.",I think tests would be really good to have here. :-),True,{}
i3/i3,https://github.com/i3/i3,3002,2017-09-30T01:31:01Z,2017-11-05T17:10:30Z,2020-06-26T12:43:48Z,CLOSED,False,11,6,2,https://github.com/orestisfl,tree_flatten: remove redundant stacked / tabbed containers,1,['waiting'],https://github.com/i3/i3/pull/3002,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/3002#issuecomment-341987950,"Fixes #3001.
Before merging I'd like to:

 Run this patch for a few days on my system
 Write tests.

Submitting this PR to receive some first feedback.",Isn't this going to be rejected according to the discussion in #3001?,True,{}
i3/i3,https://github.com/i3/i3,3002,2017-09-30T01:31:01Z,2017-11-05T17:10:30Z,2020-06-26T12:43:48Z,CLOSED,False,11,6,2,https://github.com/orestisfl,tree_flatten: remove redundant stacked / tabbed containers,1,['waiting'],https://github.com/i3/i3/pull/3002,https://github.com/Airblader,4,https://github.com/i3/i3/pull/3002#issuecomment-341988473,"Fixes #3001.
Before merging I'd like to:

 Run this patch for a few days on my system
 Write tests.

Submitting this PR to receive some first feedback.","Yeah, that makes sense. I didn't spend much time looking at this right now because I figured tests would help clear it up. I guess we haven't actually decided on rejecting this yet either. However, I think it makes sense to close the PR for now and discuss it on the issue (where I think @stapelberg should chime in). We can reopen the PR when needed. Sound good?",True,{}
i3/i3,https://github.com/i3/i3,3002,2017-09-30T01:31:01Z,2017-11-05T17:10:30Z,2020-06-26T12:43:48Z,CLOSED,False,11,6,2,https://github.com/orestisfl,tree_flatten: remove redundant stacked / tabbed containers,1,['waiting'],https://github.com/i3/i3/pull/3002,https://github.com/orestisfl,5,https://github.com/i3/i3/pull/3002#issuecomment-341988647,"Fixes #3001.
Before merging I'd like to:

 Run this patch for a few days on my system
 Write tests.

Submitting this PR to receive some first feedback.",Sounds good,True,{}
i3/i3,https://github.com/i3/i3,3004,2017-09-30T08:50:42Z,2017-09-30T17:17:21Z,2017-09-30T17:17:21Z,MERGED,True,1,1,1,https://github.com/orestisfl,dump-asy.pl: use layout instead of orientation for names,1,[],https://github.com/i3/i3/pull/3004,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3004,Kinda more informative,Kinda more informative,True,{}
i3/i3,https://github.com/i3/i3,3005,2017-09-30T09:40:45Z,2017-09-30T17:16:44Z,2017-09-30T17:16:46Z,MERGED,True,624,748,32,https://github.com/stapelberg,Implement the tick event,3,[],https://github.com/i3/i3/pull/3005,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3005,"I included the xtest_sync_with_i3 implementation in this PR because the tick implementation exposes flakiness more aggressively: previously, flakiness was somewhat mitigated by our timeout (except when the timeout was not sufficient, of course).
The changes to the tests themselves are fairly mechanical.","I included the xtest_sync_with_i3 implementation in this PR because the tick implementation exposes flakiness more aggressively: previously, flakiness was somewhat mitigated by our timeout (except when the timeout was not sufficient, of course).
The changes to the tests themselves are fairly mechanical.",True,{}
i3/i3,https://github.com/i3/i3,3005,2017-09-30T09:40:45Z,2017-09-30T17:16:44Z,2017-09-30T17:16:46Z,MERGED,True,624,748,32,https://github.com/stapelberg,Implement the tick event,3,[],https://github.com/i3/i3/pull/3005,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/3005#issuecomment-333297417,"I included the xtest_sync_with_i3 implementation in this PR because the tick implementation exposes flakiness more aggressively: previously, flakiness was somewhat mitigated by our timeout (except when the timeout was not sufficient, of course).
The changes to the tests themselves are fairly mechanical.","The Travis build failed because of 525-i3bar-mouse-bindings.t’s flakiness: synchronizing with i3 is not sufficient, we need to synchronize with i3bar. I’ll try to address this.",True,{}
i3/i3,https://github.com/i3/i3,3006,2017-09-30T13:18:18Z,2017-09-30T17:15:59Z,2017-09-30T17:16:02Z,MERGED,True,2,0,1,https://github.com/stapelberg,Fix memory leak when config conversion fails,1,[],https://github.com/i3/i3/pull/3006,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3006,"This happens on an empty config file, for example.","This happens on an empty config file, for example.",True,{}
i3/i3,https://github.com/i3/i3,3007,2017-09-30T14:35:25Z,2017-09-30T17:16:22Z,2017-09-30T17:16:24Z,MERGED,True,5,2,3,https://github.com/stapelberg,Fix compilation warnings on all Debian architectures.,1,[],https://github.com/i3/i3/pull/3007,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3007,"stbuf.st_size is of type off_t, which the standard defines as “extended signed
integral type”¹, and for which there is no correct printf format string. Hence,
we need to cast it into a hopefully-large-enough type (ugh) and use the
corresponding format string. In our case, int64_t should do it, as config files
really shouldn’t be anywhere close to those numbers.
① http://pubs.opengroup.org/onlinepubs/007908799/xsh/systypes.h.html","stbuf.st_size is of type off_t, which the standard defines as “extended signed
integral type”¹, and for which there is no correct printf format string. Hence,
we need to cast it into a hopefully-large-enough type (ugh) and use the
corresponding format string. In our case, int64_t should do it, as config files
really shouldn’t be anywhere close to those numbers.
① http://pubs.opengroup.org/onlinepubs/007908799/xsh/systypes.h.html",True,{}
i3/i3,https://github.com/i3/i3,3008,2017-10-01T16:46:22Z,2017-10-05T20:03:34Z,2017-10-05T20:03:37Z,MERGED,True,5,5,3,https://github.com/stapelberg,Fix AnyEvent->timer call,1,[],https://github.com/i3/i3/pull/3008,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3008,"And make the remaining AnyEvent->condvar and AnyEvent->timer calls
consistent.","And make the remaining AnyEvent->condvar and AnyEvent->timer calls
consistent.",True,{}
i3/i3,https://github.com/i3/i3,3016,2017-10-09T17:23:52Z,2017-10-09T20:24:34Z,2017-10-09T20:24:34Z,CLOSED,False,1,1,1,None,Use default colormap only with default visual,1,[],https://github.com/i3/i3/pull/3016,None,1,https://github.com/i3/i3/pull/3016,"Related to #2729. Tested with NixOS and it seems good.
I used section 18.2.5 here for reference: https://xcb.freedesktop.org/xlibtoxcbtranslationguide/","Related to #2729. Tested with NixOS and it seems good.
I used section 18.2.5 here for reference: https://xcb.freedesktop.org/xlibtoxcbtranslationguide/",True,{}
i3/i3,https://github.com/i3/i3,3016,2017-10-09T17:23:52Z,2017-10-09T20:24:34Z,2017-10-09T20:24:34Z,CLOSED,False,1,1,1,None,Use default colormap only with default visual,1,[],https://github.com/i3/i3/pull/3016,None,2,https://github.com/i3/i3/pull/3016#issuecomment-335274807,"Related to #2729. Tested with NixOS and it seems good.
I used section 18.2.5 here for reference: https://xcb.freedesktop.org/xlibtoxcbtranslationguide/","Nevermind, this breaks everything else, hah...",True,{}
i3/i3,https://github.com/i3/i3,3016,2017-10-09T17:23:52Z,2017-10-09T20:24:34Z,2017-10-09T20:24:34Z,CLOSED,False,1,1,1,None,Use default colormap only with default visual,1,[],https://github.com/i3/i3/pull/3016,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3016#issuecomment-335275405,"Related to #2729. Tested with NixOS and it seems good.
I used section 18.2.5 here for reference: https://xcb.freedesktop.org/xlibtoxcbtranslationguide/",I assume that means we should close this. :-),True,{}
i3/i3,https://github.com/i3/i3,3018,2017-10-14T21:57:46Z,2017-10-15T10:17:23Z,2017-10-15T10:17:26Z,MERGED,True,2,1,1,https://github.com/stapelberg,userguide: explain why Mod4 is usually preferred,1,[],https://github.com/i3/i3/pull/3018,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3018,,,True,{}
i3/i3,https://github.com/i3/i3,3019,2017-10-15T10:25:37Z,2017-10-15T12:22:42Z,2017-10-15T12:22:45Z,MERGED,True,4,4,2,https://github.com/stapelberg,"docs: full-size, so-called",1,[],https://github.com/i3/i3/pull/3019,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3019,"As per Michael Siegel, who studied the English language :).","As per Michael Siegel, who studied the English language :).",True,{}
i3/i3,https://github.com/i3/i3,3021,2017-10-15T23:45:25Z,2017-11-09T19:18:24Z,2018-10-27T07:50:55Z,MERGED,True,17,4,1,https://github.com/xzfc,Bugfix: avert endless loop on unexpected EOF at ipc messages,1,[],https://github.com/i3/i3/pull/3021,https://github.com/xzfc,1,https://github.com/i3/i3/pull/3021,"Fix freeze on invalid ipc commands like
echo -n $'i3-ipc\0\0\0\xa\0\0\0\0focus left' | socat - `i3 --get-socketpath`

Also, treat incomplete headers as IPC violation. Example of incomplete header:
echo -n i3-ip | socat - `i3 --get-socketpath`","Fix freeze on invalid ipc commands like
echo -n $'i3-ipc\0\0\0\xa\0\0\0\0focus left' | socat - `i3 --get-socketpath`

Also, treat incomplete headers as IPC violation. Example of incomplete header:
echo -n i3-ip | socat - `i3 --get-socketpath`",True,{}
i3/i3,https://github.com/i3/i3,3021,2017-10-15T23:45:25Z,2017-11-09T19:18:24Z,2018-10-27T07:50:55Z,MERGED,True,17,4,1,https://github.com/xzfc,Bugfix: avert endless loop on unexpected EOF at ipc messages,1,[],https://github.com/i3/i3/pull/3021,https://github.com/xzfc,2,https://github.com/i3/i3/pull/3021#issuecomment-343258134,"Fix freeze on invalid ipc commands like
echo -n $'i3-ipc\0\0\0\xa\0\0\0\0focus left' | socat - `i3 --get-socketpath`

Also, treat incomplete headers as IPC violation. Example of incomplete header:
echo -n i3-ip | socat - `i3 --get-socketpath`",Updated.,True,{}
i3/i3,https://github.com/i3/i3,3021,2017-10-15T23:45:25Z,2017-11-09T19:18:24Z,2018-10-27T07:50:55Z,MERGED,True,17,4,1,https://github.com/xzfc,Bugfix: avert endless loop on unexpected EOF at ipc messages,1,[],https://github.com/i3/i3/pull/3021,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/3021#issuecomment-343261833,"Fix freeze on invalid ipc commands like
echo -n $'i3-ipc\0\0\0\xa\0\0\0\0focus left' | socat - `i3 --get-socketpath`

Also, treat incomplete headers as IPC violation. Example of incomplete header:
echo -n i3-ip | socat - `i3 --get-socketpath`","Neat, thanks!",True,{}
i3/i3,https://github.com/i3/i3,3022,2017-10-17T01:31:44Z,2017-12-03T18:51:26Z,2017-12-04T03:54:05Z,MERGED,True,43,22,7,https://github.com/orestisfl,Fix i3bar leaks,3,[],https://github.com/i3/i3/pull/3022,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3022,,,True,{}
i3/i3,https://github.com/i3/i3,3022,2017-10-17T01:31:44Z,2017-12-03T18:51:26Z,2017-12-04T03:54:05Z,MERGED,True,43,22,7,https://github.com/orestisfl,Fix i3bar leaks,3,[],https://github.com/i3/i3/pull/3022,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3022#issuecomment-348525398,,up,True,{}
i3/i3,https://github.com/i3/i3,3022,2017-10-17T01:31:44Z,2017-12-03T18:51:26Z,2017-12-04T03:54:05Z,MERGED,True,43,22,7,https://github.com/orestisfl,Fix i3bar leaks,3,[],https://github.com/i3/i3/pull/3022,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3022#issuecomment-348800294,,@orestisf1993 Can you take a look at the failing test?,True,{}
i3/i3,https://github.com/i3/i3,3022,2017-10-17T01:31:44Z,2017-12-03T18:51:26Z,2017-12-04T03:54:05Z,MERGED,True,43,22,7,https://github.com/orestisfl,Fix i3bar leaks,3,[],https://github.com/i3/i3/pull/3022,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/3022#issuecomment-348804731,,Should be ok now.,True,{}
i3/i3,https://github.com/i3/i3,3022,2017-10-17T01:31:44Z,2017-12-03T18:51:26Z,2017-12-04T03:54:05Z,MERGED,True,43,22,7,https://github.com/orestisfl,Fix i3bar leaks,3,[],https://github.com/i3/i3/pull/3022,https://github.com/Airblader,5,https://github.com/i3/i3/pull/3022#issuecomment-348805032,,Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3023,2017-10-17T23:11:32Z,2017-11-05T16:27:49Z,2018-03-19T10:45:25Z,MERGED,True,75,10,5,https://github.com/orestisfl,Add support to resize floating container in percentage,1,[],https://github.com/i3/i3/pull/3023,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3023,"resize set is modified to accept both 'px' and 'ppt' height and width.
Fixes #2816.","resize set is modified to accept both 'px' and 'ppt' height and width.
Fixes #2816.",True,"{'HEART': ['https://github.com/alexherbo2', 'https://github.com/Huddo121']}"
i3/i3,https://github.com/i3/i3,3023,2017-10-17T23:11:32Z,2017-11-05T16:27:49Z,2018-03-19T10:45:25Z,MERGED,True,75,10,5,https://github.com/orestisfl,Add support to resize floating container in percentage,1,[],https://github.com/i3/i3/pull/3023,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3023#issuecomment-341985633,"resize set is modified to accept both 'px' and 'ppt' height and width.
Fixes #2816.","LGTM, so I'll merge it now. Thanks!",True,{'HOORAY': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,3027,2017-10-22T10:29:19Z,2017-10-22T20:16:16Z,2017-10-22T20:16:19Z,MERGED,True,2,0,1,https://github.com/stapelberg,_NET_ACTIVE_WINDOW: invalidate focus to force SetInputFocus call,1,[],https://github.com/i3/i3/pull/3027,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3027,"The sender of the _NET_ACTIVE_WINDOW client message might know better when to
set focus than i3, as i3 does not know about unmanaged (override_redirect=1)
windows.
related to i3/i3lock#35","The sender of the _NET_ACTIVE_WINDOW client message might know better when to
set focus than i3, as i3 does not know about unmanaged (override_redirect=1)
windows.
related to i3/i3lock#35",True,{}
i3/i3,https://github.com/i3/i3,3027,2017-10-22T10:29:19Z,2017-10-22T20:16:16Z,2017-10-22T20:16:19Z,MERGED,True,2,0,1,https://github.com/stapelberg,_NET_ACTIVE_WINDOW: invalidate focus to force SetInputFocus call,1,[],https://github.com/i3/i3/pull/3027,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3027#issuecomment-338470384,"The sender of the _NET_ACTIVE_WINDOW client message might know better when to
set focus than i3, as i3 does not know about unmanaged (override_redirect=1)
windows.
related to i3/i3lock#35",I don't understand this change. This path is never reached for unmanaged windows?,True,{}
i3/i3,https://github.com/i3/i3,3027,2017-10-22T10:29:19Z,2017-10-22T20:16:16Z,2017-10-22T20:16:19Z,MERGED,True,2,0,1,https://github.com/stapelberg,_NET_ACTIVE_WINDOW: invalidate focus to force SetInputFocus call,1,[],https://github.com/i3/i3/pull/3027,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/3027#issuecomment-338471809,"The sender of the _NET_ACTIVE_WINDOW client message might know better when to
set focus than i3, as i3 does not know about unmanaged (override_redirect=1)
windows.
related to i3/i3lock#35","Correct, and it doesn’t need to be. In i3lock, we’re using the _NET_ACTIVE_WINDOW ClientMessage on the managed window which had focus before i3lock took it. Without this change, though, i3 won’t send a SetInputFocus request, because it didn’t notice the focus changes by the unmanaged window.",True,{}
i3/i3,https://github.com/i3/i3,3027,2017-10-22T10:29:19Z,2017-10-22T20:16:16Z,2017-10-22T20:16:19Z,MERGED,True,2,0,1,https://github.com/stapelberg,_NET_ACTIVE_WINDOW: invalidate focus to force SetInputFocus call,1,[],https://github.com/i3/i3/pull/3027,https://github.com/Airblader,4,https://github.com/i3/i3/pull/3027#issuecomment-338474522,"The sender of the _NET_ACTIVE_WINDOW client message might know better when to
set focus than i3, as i3 does not know about unmanaged (override_redirect=1)
windows.
related to i3/i3lock#35","IMHO we are supporting broken client behavior with this change, just that in this case the broken client is i3lock. The reason we need this change is because the client caused us to be out of sync. Wouldn't a correct fix to avoid running out of sync, e.g., by processing FocusOut events? Openbox seems to do this, but unfortunately it is rather involved since one has to coordinate with FocusIn events.
But I think I've already lost the argument that we are turning i3lock into a broken client, so let's move on. At the very least the one positive thing about this change is that it's a safety net for when the request originates not from the broken client, but somewhere else.",True,{}
i3/i3,https://github.com/i3/i3,3027,2017-10-22T10:29:19Z,2017-10-22T20:16:16Z,2017-10-22T20:16:19Z,MERGED,True,2,0,1,https://github.com/stapelberg,_NET_ACTIVE_WINDOW: invalidate focus to force SetInputFocus call,1,[],https://github.com/i3/i3/pull/3027,https://github.com/stapelberg,5,https://github.com/i3/i3/pull/3027#issuecomment-338475044,"The sender of the _NET_ACTIVE_WINDOW client message might know better when to
set focus than i3, as i3 does not know about unmanaged (override_redirect=1)
windows.
related to i3/i3lock#35","IIUC, maintaining sync would result in 1 fewer force-focus at the expense of more complicated code paths. If it turns out that this 1 force-focus is a problem, we can always switch to the maintain-sync approach :).",True,{}
i3/i3,https://github.com/i3/i3,3028,2017-10-23T19:08:13Z,2017-10-25T06:56:03Z,2017-10-25T06:56:06Z,MERGED,True,74,99,9,https://github.com/stapelberg,Eliminate causes of flakyness,6,[],https://github.com/i3/i3/pull/3028,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3028,"Commit-by-commit review encouraged :)
related to #3009","Commit-by-commit review encouraged :)
related to #3009",True,{}
i3/i3,https://github.com/i3/i3,3030,2017-10-25T20:33:45Z,2017-11-05T16:37:53Z,2017-11-05T16:37:53Z,MERGED,True,1,1,1,https://github.com/tylerbrazier,config: use ascii single quote,1,[],https://github.com/i3/i3/pull/3030,https://github.com/tylerbrazier,1,https://github.com/i3/i3/pull/3030,"The unicode quote doesn’t render very well in terminals that don't
support unicode","The unicode quote doesn’t render very well in terminals that don't
support unicode",True,{}
i3/i3,https://github.com/i3/i3,3036,2017-11-05T14:50:41Z,2018-01-08T22:25:09Z,2018-01-08T22:25:09Z,MERGED,True,218,9,4,https://github.com/livanh,Implement 'resize set width|height <ppt> ppt' command,1,['waiting'],https://github.com/i3/i3/pull/3036,https://github.com/livanh,1,https://github.com/i3/i3/pull/3036,"This patch allows resizing tiling containers to exactly the given size (in ppt). The sintax is as in the title. The patch includes only the code now, I will update documentation if needed before merging.","This patch allows resizing tiling containers to exactly the given size (in ppt). The sintax is as in the title. The patch includes only the code now, I will update documentation if needed before merging.",True,{}
i3/i3,https://github.com/i3/i3,3036,2017-11-05T14:50:41Z,2018-01-08T22:25:09Z,2018-01-08T22:25:09Z,MERGED,True,218,9,4,https://github.com/livanh,Implement 'resize set width|height <ppt> ppt' command,1,['waiting'],https://github.com/i3/i3/pull/3036,https://github.com/livanh,2,https://github.com/i3/i3/pull/3036#issuecomment-341988171,"This patch allows resizing tiling containers to exactly the given size (in ppt). The sintax is as in the title. The patch includes only the code now, I will update documentation if needed before merging.","I did't notice the discussion in #2608. If I understand it correctly, this would be a partial solution to that issue. At this time I'm not interested in doing the remaining part (i.e. associating some weight to each window), but it is an interesting idea nonetheless.",True,{}
i3/i3,https://github.com/i3/i3,3036,2017-11-05T14:50:41Z,2018-01-08T22:25:09Z,2018-01-08T22:25:09Z,MERGED,True,218,9,4,https://github.com/livanh,Implement 'resize set width|height <ppt> ppt' command,1,['waiting'],https://github.com/i3/i3/pull/3036,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3036#issuecomment-341988535,"This patch allows resizing tiling containers to exactly the given size (in ppt). The sintax is as in the title. The patch includes only the code now, I will update documentation if needed before merging.","For the record, I don't think we'd implement something like the proposed weights idea. If at all, I think we'd stick with something like this.",True,{}
i3/i3,https://github.com/i3/i3,3036,2017-11-05T14:50:41Z,2018-01-08T22:25:09Z,2018-01-08T22:25:09Z,MERGED,True,218,9,4,https://github.com/livanh,Implement 'resize set width|height <ppt> ppt' command,1,['waiting'],https://github.com/i3/i3/pull/3036,https://github.com/livanh,4,https://github.com/i3/i3/pull/3036#issuecomment-341990275,"This patch allows resizing tiling containers to exactly the given size (in ppt). The sintax is as in the title. The patch includes only the code now, I will update documentation if needed before merging.","I just tried and it works also with for_window matching, as asked in #2608. Let me know if you decide to merge and what changes are needed.",True,{}
i3/i3,https://github.com/i3/i3,3036,2017-11-05T14:50:41Z,2018-01-08T22:25:09Z,2018-01-08T22:25:09Z,MERGED,True,218,9,4,https://github.com/livanh,Implement 'resize set width|height <ppt> ppt' command,1,['waiting'],https://github.com/i3/i3/pull/3036,https://github.com/pevu,5,https://github.com/i3/i3/pull/3036#issuecomment-350244615,"This patch allows resizing tiling containers to exactly the given size (in ppt). The sintax is as in the title. The patch includes only the code now, I will update documentation if needed before merging.","Please merge, I'd like to have this as well. Right now I have to write hacky wrapper scripts to get the same functionality, as I've seen other people do too.",True,{}
i3/i3,https://github.com/i3/i3,3036,2017-11-05T14:50:41Z,2018-01-08T22:25:09Z,2018-01-08T22:25:09Z,MERGED,True,218,9,4,https://github.com/livanh,Implement 'resize set width|height <ppt> ppt' command,1,['waiting'],https://github.com/i3/i3/pull/3036,https://github.com/Airblader,6,https://github.com/i3/i3/pull/3036#issuecomment-350475697,"This patch allows resizing tiling containers to exactly the given size (in ppt). The sintax is as in the title. The patch includes only the code now, I will update documentation if needed before merging.","I'm willing to merge this feature, however there's a few things:

I'd prefer the syntax resize set 35 ppt 50 ppt which is in line with the current px symbol (which is optional). Otherwise we have two different syntax variations for doing the same thing.
The userguide has to be updates (docs/userguide).
This is easily testable, so we should have some tests for this.
I've added a few review comments which should be addressed (as much as they make sense after the other points above).",True,{}
i3/i3,https://github.com/i3/i3,3036,2017-11-05T14:50:41Z,2018-01-08T22:25:09Z,2018-01-08T22:25:09Z,MERGED,True,218,9,4,https://github.com/livanh,Implement 'resize set width|height <ppt> ppt' command,1,['waiting'],https://github.com/i3/i3/pull/3036,https://github.com/pevu,7,https://github.com/i3/i3/pull/3036#issuecomment-350476495,"This patch allows resizing tiling containers to exactly the given size (in ppt). The sintax is as in the title. The patch includes only the code now, I will update documentation if needed before merging.","But what if you only wanted to adjust the height of the container? I thought this is for tiling containers, where usually either the height or the width is changed, not both at the same time.",True,{}
i3/i3,https://github.com/i3/i3,3036,2017-11-05T14:50:41Z,2018-01-08T22:25:09Z,2018-01-08T22:25:09Z,MERGED,True,218,9,4,https://github.com/livanh,Implement 'resize set width|height <ppt> ppt' command,1,['waiting'],https://github.com/i3/i3/pull/3036,https://github.com/Airblader,8,https://github.com/i3/i3/pull/3036#issuecomment-350476936,"This patch allows resizing tiling containers to exactly the given size (in ppt). The sintax is as in the title. The patch includes only the code now, I will update documentation if needed before merging.",Point taken. I still feel it'd be good to have the option to change both in an atomic operation. Perhaps we could use a placeholder value representing a nop. @stapelberg What do you think?,True,{}
i3/i3,https://github.com/i3/i3,3036,2017-11-05T14:50:41Z,2018-01-08T22:25:09Z,2018-01-08T22:25:09Z,MERGED,True,218,9,4,https://github.com/livanh,Implement 'resize set width|height <ppt> ppt' command,1,['waiting'],https://github.com/i3/i3/pull/3036,https://github.com/livanh,9,https://github.com/i3/i3/pull/3036#issuecomment-350498779,"This patch allows resizing tiling containers to exactly the given size (in ppt). The sintax is as in the title. The patch includes only the code now, I will update documentation if needed before merging.","My intended use is the same as @pevu, i.e. only resize in one direction. I can change the code to use the syntax you proposed (with a nop placeholder), but I'd like to clarify two points first:

What happens if the unit (px/ppt) is omitted? Should we assume px for backwards compatibility, or turn it into an error?
Is it ok to call cmd_resize_tiling_width_height internally, or is it better to make a dedicated function?",True,{}
i3/i3,https://github.com/i3/i3,3036,2017-11-05T14:50:41Z,2018-01-08T22:25:09Z,2018-01-08T22:25:09Z,MERGED,True,218,9,4,https://github.com/livanh,Implement 'resize set width|height <ppt> ppt' command,1,['waiting'],https://github.com/i3/i3/pull/3036,https://github.com/Airblader,10,https://github.com/i3/i3/pull/3036#issuecomment-350498939,"This patch allows resizing tiling containers to exactly the given size (in ppt). The sintax is as in the title. The patch includes only the code now, I will update documentation if needed before merging.","with a nop placeholder

Please note that we should first discuss what that placeholder looks like and if that's really what we want to go for. Hence me tagging @stapelberg to discuss it. :-)

What happens if the unit (px/ppt) is omitted? Should we assume px for backwards compatibility, or turn it into an error?

We don't like breaking things, so we would be falling back to px here.

Is it ok to call cmd_resize_tiling_width_height internally, or is it better to make a dedicated function?

I actually think calling it is OK.",True,{}
i3/i3,https://github.com/i3/i3,3036,2017-11-05T14:50:41Z,2018-01-08T22:25:09Z,2018-01-08T22:25:09Z,MERGED,True,218,9,4,https://github.com/livanh,Implement 'resize set width|height <ppt> ppt' command,1,['waiting'],https://github.com/i3/i3/pull/3036,https://github.com/stapelberg,11,https://github.com/i3/i3/pull/3036#issuecomment-350642742,"This patch allows resizing tiling containers to exactly the given size (in ppt). The sintax is as in the title. The patch includes only the code now, I will update documentation if needed before merging.",I agree with @Airblader: setting width/height in the same command seems reasonable to me.,True,{}
i3/i3,https://github.com/i3/i3,3036,2017-11-05T14:50:41Z,2018-01-08T22:25:09Z,2018-01-08T22:25:09Z,MERGED,True,218,9,4,https://github.com/livanh,Implement 'resize set width|height <ppt> ppt' command,1,['waiting'],https://github.com/i3/i3/pull/3036,https://github.com/livanh,12,https://github.com/i3/i3/pull/3036#issuecomment-352269333,"This patch allows resizing tiling containers to exactly the given size (in ppt). The sintax is as in the title. The patch includes only the code now, I will update documentation if needed before merging.","I think I did everything, except for the testcase. That would require some study and experimentation, which I do not have time to do today.
As for the placeholder, I simply assumed a value of zero or less to mean ""nop"" for the corresponding direction, as they would not make sense anyway.
However, I just noticed that there is a conflict with #3023 (already merged), where ""set  ppt  ppt"" means to resize a floating container in percentage points. A possible way out would be to move my logic into cmd_resize_set, and follow the path for floating or tiling containers depending on the currently focused container. Does it make sense?",True,{}
i3/i3,https://github.com/i3/i3,3036,2017-11-05T14:50:41Z,2018-01-08T22:25:09Z,2018-01-08T22:25:09Z,MERGED,True,218,9,4,https://github.com/livanh,Implement 'resize set width|height <ppt> ppt' command,1,['waiting'],https://github.com/i3/i3/pull/3036,https://github.com/livanh,13,https://github.com/i3/i3/pull/3036#issuecomment-353862316,"This patch allows resizing tiling containers to exactly the given size (in ppt). The sintax is as in the title. The patch includes only the code now, I will update documentation if needed before merging.","I rebased over the latest next branch, moved the code into cmd_resize_set, removed the old parts, and added a test case. I can also squash the commits for a cleaner history, if you want.
For the comment on resize_find_tiling_participants, I tried using it, but it's not exactly the same. Sometimes the command works as expected, and sometimes it does nothing.
By looking at the code, the main difference seems to be in the con_num_children(target->parent) == 1 condition. I actually copied this code from somewhere else in the file. If we can decide that one variant is definitely better than the other, I can handle this as a separate refactoring task.",True,{}
i3/i3,https://github.com/i3/i3,3036,2017-11-05T14:50:41Z,2018-01-08T22:25:09Z,2018-01-08T22:25:09Z,MERGED,True,218,9,4,https://github.com/livanh,Implement 'resize set width|height <ppt> ppt' command,1,['waiting'],https://github.com/i3/i3/pull/3036,https://github.com/stapelberg,14,https://github.com/i3/i3/pull/3036#issuecomment-354956786,"This patch allows resizing tiling containers to exactly the given size (in ppt). The sintax is as in the title. The patch includes only the code now, I will update documentation if needed before merging.","For the comment on resize_find_tiling_participants, I tried using it, but it's not exactly the same. Sometimes the command works as expected, and sometimes it does nothing.
By looking at the code, the main difference seems to be in the con_num_children(target->parent) == 1 condition. I actually copied this code from somewhere else in the file.

So there is another duplicate of this functionality? Can you point me to it please?

If we can decide that one variant is definitely better than the other, I can handle this as a separate refactoring task.

I’m a bit worried about pushing it to a later point in time, because then we might easily forget about it :).
Naively, I would argue that a variant which works in all the cases is better than the others. Could you please look into sending a PR which reduces duplication, so that we can make use of the new function in this PR?
Thanks!",True,{}
i3/i3,https://github.com/i3/i3,3036,2017-11-05T14:50:41Z,2018-01-08T22:25:09Z,2018-01-08T22:25:09Z,MERGED,True,218,9,4,https://github.com/livanh,Implement 'resize set width|height <ppt> ppt' command,1,['waiting'],https://github.com/i3/i3/pull/3036,https://github.com/livanh,15,https://github.com/i3/i3/pull/3036#issuecomment-355755208,"This patch allows resizing tiling containers to exactly the given size (in ppt). The sintax is as in the title. The patch includes only the code now, I will update documentation if needed before merging.",Please see #3111,True,{}
i3/i3,https://github.com/i3/i3,3036,2017-11-05T14:50:41Z,2018-01-08T22:25:09Z,2018-01-08T22:25:09Z,MERGED,True,218,9,4,https://github.com/livanh,Implement 'resize set width|height <ppt> ppt' command,1,['waiting'],https://github.com/i3/i3/pull/3036,https://github.com/stapelberg,16,https://github.com/i3/i3/pull/3036#issuecomment-356042232,"This patch allows resizing tiling containers to exactly the given size (in ppt). The sintax is as in the title. The patch includes only the code now, I will update documentation if needed before merging.","Could you clean up the git history of this PR please? See git’s “interactive rebase” feature. In the end, we’d like to have one git commit per logical change. Changes based on the code review don’t need to be reflected in the history. Thanks!",True,{}
i3/i3,https://github.com/i3/i3,3036,2017-11-05T14:50:41Z,2018-01-08T22:25:09Z,2018-01-08T22:25:09Z,MERGED,True,218,9,4,https://github.com/livanh,Implement 'resize set width|height <ppt> ppt' command,1,['waiting'],https://github.com/i3/i3/pull/3036,https://github.com/livanh,17,https://github.com/i3/i3/pull/3036#issuecomment-356099439,"This patch allows resizing tiling containers to exactly the given size (in ppt). The sintax is as in the title. The patch includes only the code now, I will update documentation if needed before merging.","I made everything into one commit, since we don't really need the initial syntax anymore. Is that ok?",True,{}
i3/i3,https://github.com/i3/i3,3036,2017-11-05T14:50:41Z,2018-01-08T22:25:09Z,2018-01-08T22:25:09Z,MERGED,True,218,9,4,https://github.com/livanh,Implement 'resize set width|height <ppt> ppt' command,1,['waiting'],https://github.com/i3/i3/pull/3036,https://github.com/stapelberg,18,https://github.com/i3/i3/pull/3036#issuecomment-356116195,"This patch allows resizing tiling containers to exactly the given size (in ppt). The sintax is as in the title. The patch includes only the code now, I will update documentation if needed before merging.",Yep. Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3039,2017-11-09T22:01:56Z,2017-12-03T17:40:40Z,2017-12-03T20:06:38Z,CLOSED,False,20,0,1,https://github.com/eplanet,Update README with build info,1,[],https://github.com/i3/i3/pull/3039,https://github.com/eplanet,1,https://github.com/i3/i3/pull/3039,"I think it's better to provide a little more essential information for people that fork/clone the repository so they can concentrate on contributing rather than installing the requirements.
I just tested that from scratch in an empty Debian Stretch.","I think it's better to provide a little more essential information for people that fork/clone the repository so they can concentrate on contributing rather than installing the requirements.
I just tested that from scratch in an empty Debian Stretch.",True,{}
i3/i3,https://github.com/i3/i3,3039,2017-11-09T22:01:56Z,2017-12-03T17:40:40Z,2017-12-03T20:06:38Z,CLOSED,False,20,0,1,https://github.com/eplanet,Update README with build info,1,[],https://github.com/i3/i3/pull/3039,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3039#issuecomment-343309381,"I think it's better to provide a little more essential information for people that fork/clone the repository so they can concentrate on contributing rather than installing the requirements.
I just tested that from scratch in an empty Debian Stretch.","If this is aimed at contributors, isn't it a sensible assumption that they generally installed i3 as a package at some point already? Then they already have all the dependencies.
We recently discussed the Readme for another PR. The basic problem is that we have a single source of truth, the docs folder, and would like to avoid duplicating things. That's why the Readme now links to the docs place on der website, which does already explain how to compile. Why is that not sufficient?",True,{}
i3/i3,https://github.com/i3/i3,3039,2017-11-09T22:01:56Z,2017-12-03T17:40:40Z,2017-12-03T20:06:38Z,CLOSED,False,20,0,1,https://github.com/eplanet,Update README with build info,1,[],https://github.com/i3/i3/pull/3039,https://github.com/eplanet,3,https://github.com/i3/i3/pull/3039#issuecomment-343313185,"I think it's better to provide a little more essential information for people that fork/clone the repository so they can concentrate on contributing rather than installing the requirements.
I just tested that from scratch in an empty Debian Stretch.","Installing i3 doesn't install the required build dependencies. There's no obvious listing of the build requirements neither in the hacking-howto nor the Build-Depends of the package (that doesn't exist). That's why I thought adding these informations would be worth, especially in the README since a good majority of OS projects on github do that (including i3status for that matter).
The website is great and I understand the interest of pointing to it, so maybe I could port that PR to hacking-howto directly?",True,{}
i3/i3,https://github.com/i3/i3,3039,2017-11-09T22:01:56Z,2017-12-03T17:40:40Z,2017-12-03T20:06:38Z,CLOSED,False,20,0,1,https://github.com/eplanet,Update README with build info,1,[],https://github.com/i3/i3/pull/3039,https://github.com/Airblader,4,https://github.com/i3/i3/pull/3039#issuecomment-343654338,"I think it's better to provide a little more essential information for people that fork/clone the repository so they can concentrate on contributing rather than installing the requirements.
I just tested that from scratch in an empty Debian Stretch.","I've given this some more thought; in general, I agree that the README is the preferable place these days. My issue is mostly with the duplication. It's a shame the documents in the docs folder cannot be rendered as markdown by Github as this would probably simplify this situation quite a bit.
But assuming we won't be migrating everything from the website into the README, perhaps moving it to the hacking-howto is the more consistent choice here. Listing build dependencies is probably a good idea. However, I'd like @stapelberg to weigh in on this.",True,{}
i3/i3,https://github.com/i3/i3,3039,2017-11-09T22:01:56Z,2017-12-03T17:40:40Z,2017-12-03T20:06:38Z,CLOSED,False,20,0,1,https://github.com/eplanet,Update README with build info,1,[],https://github.com/i3/i3/pull/3039,https://github.com/stapelberg,5,https://github.com/i3/i3/pull/3039#issuecomment-343655048,"I think it's better to provide a little more essential information for people that fork/clone the repository so they can concentrate on contributing rather than installing the requirements.
I just tested that from scratch in an empty Debian Stretch.","The hacking-howto already contains the build instructions, we should link to it.
The preferred command to install i3 build-dependencies is apt build-dep i3-wm (ideally when using our repositories, so that recently introduced build-deps are covered).
I don’t think that belongs into the README, though. People should just install i3 from their package manager in the general case, or from our repos if they need a newer version. For the development use-case, let’s just refer to the hacking-howto and/or the DEPENDS file, which already lists all build-deps.",True,{}
i3/i3,https://github.com/i3/i3,3039,2017-11-09T22:01:56Z,2017-12-03T17:40:40Z,2017-12-03T20:06:38Z,CLOSED,False,20,0,1,https://github.com/eplanet,Update README with build info,1,[],https://github.com/i3/i3/pull/3039,https://github.com/Airblader,6,https://github.com/i3/i3/pull/3039#issuecomment-348800070,"I think it's better to provide a little more essential information for people that fork/clone the repository so they can concentrate on contributing rather than installing the requirements.
I just tested that from scratch in an empty Debian Stretch.",@stapelberg So based on your answer I guess we'll close the PR (doing so now),True,{}
i3/i3,https://github.com/i3/i3,3040,2017-11-11T18:32:54Z,2017-11-13T21:01:07Z,2017-11-13T23:55:33Z,MERGED,True,2,0,2,https://github.com/jchook,$mod+r toggles resize mode,1,[],https://github.com/i3/i3/pull/3040,https://github.com/jchook,1,https://github.com/i3/i3/pull/3040,"Changes the default meaning of $mod+r from ""enable resize mode"" to ""toggle resize mode"".
Read more: #3034","Changes the default meaning of $mod+r from ""enable resize mode"" to ""toggle resize mode"".
Read more: #3034",True,"{'THUMBS_UP': ['https://github.com/apetresc', 'https://github.com/Jesin']}"
i3/i3,https://github.com/i3/i3,3040,2017-11-11T18:32:54Z,2017-11-13T21:01:07Z,2017-11-13T23:55:33Z,MERGED,True,2,0,2,https://github.com/jchook,$mod+r toggles resize mode,1,[],https://github.com/i3/i3/pull/3040,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3040#issuecomment-344056484,"Changes the default meaning of $mod+r from ""enable resize mode"" to ""toggle resize mode"".
Read more: #3034",Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3040,2017-11-11T18:32:54Z,2017-11-13T21:01:07Z,2017-11-13T23:55:33Z,MERGED,True,2,0,2,https://github.com/jchook,$mod+r toggles resize mode,1,[],https://github.com/i3/i3/pull/3040,https://github.com/jchook,3,https://github.com/i3/i3/pull/3040#issuecomment-344099135,"Changes the default meaning of $mod+r from ""enable resize mode"" to ""toggle resize mode"".
Read more: #3034",Thank you!,True,{}
i3/i3,https://github.com/i3/i3,3041,2017-11-12T01:12:02Z,2017-11-17T14:09:51Z,2017-12-03T00:17:24Z,MERGED,True,2,2,1,https://github.com/d-e-s-o,docs/userguide: Correct mark/goto i3-input commands,1,[],https://github.com/i3/i3/pull/3041,https://github.com/d-e-s-o,1,https://github.com/i3/i3/pull/3041,"The userguide still mentions an old 'goto' command which no longer
exists and will be ignored silently (when used in the i3 config) or
causes an error to be reported (when invoked from the command line).
This change updates the userguide to correct this problem. In addition
to that it also updates the i3-input command shown to no longer use the
deprecated -p flag but -F instead.","The userguide still mentions an old 'goto' command which no longer
exists and will be ignored silently (when used in the i3 config) or
causes an error to be reported (when invoked from the command line).
This change updates the userguide to correct this problem. In addition
to that it also updates the i3-input command shown to no longer use the
deprecated -p flag but -F instead.",True,{}
i3/i3,https://github.com/i3/i3,3041,2017-11-12T01:12:02Z,2017-11-17T14:09:51Z,2017-12-03T00:17:24Z,MERGED,True,2,2,1,https://github.com/d-e-s-o,docs/userguide: Correct mark/goto i3-input commands,1,[],https://github.com/i3/i3/pull/3041,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3041#issuecomment-345253349,"The userguide still mentions an old 'goto' command which no longer
exists and will be ignored silently (when used in the i3 config) or
causes an error to be reported (when invoked from the command line).
This change updates the userguide to correct this problem. In addition
to that it also updates the i3-input command shown to no longer use the
deprecated -p flag but -F instead.",Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3042,2017-11-12T08:50:42Z,2017-11-12T12:38:53Z,2017-11-12T12:38:59Z,MERGED,True,2,1,2,https://github.com/Mayeu,add the kitty terminal in i3-sensible-terminal,1,[],https://github.com/i3/i3/pull/3042,https://github.com/Mayeu,1,https://github.com/i3/i3/pull/3042,This commit add the Kitty terminal in the list of terminals known to i3-sensible-terminal.,This commit add the Kitty terminal in the list of terminals known to i3-sensible-terminal.,True,{}
i3/i3,https://github.com/i3/i3,3042,2017-11-12T08:50:42Z,2017-11-12T12:38:53Z,2017-11-12T12:38:59Z,MERGED,True,2,1,2,https://github.com/Mayeu,add the kitty terminal in i3-sensible-terminal,1,[],https://github.com/i3/i3/pull/3042,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3042#issuecomment-343734343,This commit add the Kitty terminal in the list of terminals known to i3-sensible-terminal.,Thanks!,True,"{'THUMBS_UP': ['https://github.com/Mayeu'], 'HOORAY': ['https://github.com/Mayeu']}"
i3/i3,https://github.com/i3/i3,3050,2017-11-18T17:50:04Z,2017-11-18T18:19:25Z,2017-11-23T22:32:45Z,MERGED,True,1,1,1,https://github.com/d-e-s-o,fix typo in src/main.c,1,[],https://github.com/i3/i3/pull/3050,https://github.com/d-e-s-o,1,https://github.com/i3/i3/pull/3050,,,True,{}
i3/i3,https://github.com/i3/i3,3050,2017-11-18T17:50:04Z,2017-11-18T18:19:25Z,2017-11-23T22:32:45Z,MERGED,True,1,1,1,https://github.com/d-e-s-o,fix typo in src/main.c,1,[],https://github.com/i3/i3/pull/3050,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3050#issuecomment-345460628,,Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3051,2017-11-18T18:15:20Z,2017-11-18T22:06:45Z,2017-12-03T00:18:01Z,CLOSED,False,60,30,5,https://github.com/d-e-s-o,i3bar: make better use of compile time string length evaluation,1,[],https://github.com/i3/i3/pull/3051,https://github.com/d-e-s-o,1,https://github.com/i3/i3/pull/3051,"The i3bar program contains a couple of locations where we use strlen on
a string that clearly is known at compile time and contained in the
binary. There is no point in doing so when the same information can be
retrieved statically by means of the sizeof operator.
This change fixes those occurrences. It also replaces a couple of magic
lengths with their symbolic counterparts and makes use of the return
value provided by the printf family of functions to avoid duplicated
string length assessment.","The i3bar program contains a couple of locations where we use strlen on
a string that clearly is known at compile time and contained in the
binary. There is no point in doing so when the same information can be
retrieved statically by means of the sizeof operator.
This change fixes those occurrences. It also replaces a couple of magic
lengths with their symbolic counterparts and makes use of the return
value provided by the printf family of functions to avoid duplicated
string length assessment.",True,{}
i3/i3,https://github.com/i3/i3,3051,2017-11-18T18:15:20Z,2017-11-18T22:06:45Z,2017-12-03T00:18:01Z,CLOSED,False,60,30,5,https://github.com/d-e-s-o,i3bar: make better use of compile time string length evaluation,1,[],https://github.com/i3/i3/pull/3051,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3051#issuecomment-345460599,"The i3bar program contains a couple of locations where we use strlen on
a string that clearly is known at compile time and contained in the
binary. There is no point in doing so when the same information can be
retrieved statically by means of the sizeof operator.
This change fixes those occurrences. It also replaces a couple of magic
lengths with their symbolic counterparts and makes use of the return
value provided by the printf family of functions to avoid duplicated
string length assessment.","AFAIK, any respectable compiler will replace the strlen on a constant string at compile time already, making this (part of the) change unnecessary; since it just adds boilerplate we don't need, I'm not inclined to merge that.
Replacing the magic numbers does sound like a good idea, but we should use strlen there as well.",True,{}
i3/i3,https://github.com/i3/i3,3051,2017-11-18T18:15:20Z,2017-11-18T22:06:45Z,2017-12-03T00:18:01Z,CLOSED,False,60,30,5,https://github.com/d-e-s-o,i3bar: make better use of compile time string length evaluation,1,[],https://github.com/i3/i3/pull/3051,https://github.com/d-e-s-o,3,https://github.com/i3/i3/pull/3051#issuecomment-345474979,"The i3bar program contains a couple of locations where we use strlen on
a string that clearly is known at compile time and contained in the
binary. There is no point in doing so when the same information can be
retrieved statically by means of the sizeof operator.
This change fixes those occurrences. It also replaces a couple of magic
lengths with their symbolic counterparts and makes use of the return
value provided by the printf family of functions to avoid duplicated
string length assessment.","Fair enough, I sort of expected such a response ;) Use of raw string literals without any syntactic connection in different places is not much better than that of magic numbers in my opinion, but up to you.",True,{}
i3/i3,https://github.com/i3/i3,3051,2017-11-18T18:15:20Z,2017-11-18T22:06:45Z,2017-12-03T00:18:01Z,CLOSED,False,60,30,5,https://github.com/d-e-s-o,i3bar: make better use of compile time string length evaluation,1,[],https://github.com/i3/i3/pull/3051,https://github.com/Airblader,4,https://github.com/i3/i3/pull/3051#issuecomment-345475165,"The i3bar program contains a couple of locations where we use strlen on
a string that clearly is known at compile time and contained in the
binary. There is no point in doing so when the same information can be
retrieved statically by means of the sizeof operator.
This change fixes those occurrences. It also replaces a couple of magic
lengths with their symbolic counterparts and makes use of the return
value provided by the printf family of functions to avoid duplicated
string length assessment.","Use of raw string literals without any syntactic connection in different places is not much better than that of magic numbers in my opinion

It is better in the sense that it makes it more clear what the number means and is likely to be more noticeable if, say, you are changing the value of the string you are looking for.",True,{}
i3/i3,https://github.com/i3/i3,3052,2017-11-18T22:08:35Z,2017-11-29T07:22:51Z,2017-12-03T00:18:14Z,MERGED,True,9,9,1,https://github.com/d-e-s-o,i3bar: replace magic numbers with more meaningful constructs,1,[],https://github.com/i3/i3/pull/3052,https://github.com/d-e-s-o,1,https://github.com/i3/i3/pull/3052,"In i3bar/src/config.c we compare string lengths agains magic numbers.
This change replaces those numbers with the lengths of the strings they
represent.","In i3bar/src/config.c we compare string lengths agains magic numbers.
This change replaces those numbers with the lengths of the strings they
represent.",True,{}
i3/i3,https://github.com/i3/i3,3052,2017-11-18T22:08:35Z,2017-11-29T07:22:51Z,2017-12-03T00:18:14Z,MERGED,True,9,9,1,https://github.com/d-e-s-o,i3bar: replace magic numbers with more meaningful constructs,1,[],https://github.com/i3/i3/pull/3052,https://github.com/d-e-s-o,2,https://github.com/i3/i3/pull/3052#issuecomment-347727508,"In i3bar/src/config.c we compare string lengths agains magic numbers.
This change replaces those numbers with the lengths of the strings they
represent.","Hey Ingo, would you mind reviewing this change? @Airblader",True,{}
i3/i3,https://github.com/i3/i3,3057,2017-11-24T05:46:14Z,2017-11-29T07:29:48Z,2017-12-02T15:52:19Z,MERGED,True,132,18,3,https://github.com/d-e-s-o,Perform proper cleanup for signals with 'Term' action,3,[],https://github.com/i3/i3/pull/3057,https://github.com/d-e-s-o,1,https://github.com/i3/i3/pull/3057,"Issue #3049 describes a case where terminating i3 by means of SIGTERM
causes it to leak the runtime directory and all its contents. There are
multiple issues at play: first, any cleanup handlers registered via
atexit are never invoked when a signal terminates the program (see
atexit(3)). Hence, the log SHM log cleanup performed in i3_exit is not
invoked in that case. Second, compared to the shutdown path for the
'exit' command, we do not unlink the UNIX domain socket we create,
causing it to be leaked as well. Third, a handler for SIGTERM is not
registered at all despite handle_signal claiming to be the handler for
all 'Term' signals.
This change addresses all three problems and results in a graceful exit
including cleanup to happen when we receive a signal with the default
action 'Term'. It addresses issue #3049.","Issue #3049 describes a case where terminating i3 by means of SIGTERM
causes it to leak the runtime directory and all its contents. There are
multiple issues at play: first, any cleanup handlers registered via
atexit are never invoked when a signal terminates the program (see
atexit(3)). Hence, the log SHM log cleanup performed in i3_exit is not
invoked in that case. Second, compared to the shutdown path for the
'exit' command, we do not unlink the UNIX domain socket we create,
causing it to be leaked as well. Third, a handler for SIGTERM is not
registered at all despite handle_signal claiming to be the handler for
all 'Term' signals.
This change addresses all three problems and results in a graceful exit
including cleanup to happen when we receive a signal with the default
action 'Term'. It addresses issue #3049.",True,{}
i3/i3,https://github.com/i3/i3,3057,2017-11-24T05:46:14Z,2017-11-29T07:29:48Z,2017-12-02T15:52:19Z,MERGED,True,132,18,3,https://github.com/d-e-s-o,Perform proper cleanup for signals with 'Term' action,3,[],https://github.com/i3/i3/pull/3057,https://github.com/d-e-s-o,2,https://github.com/i3/i3/pull/3057#issuecomment-346898493,"Issue #3049 describes a case where terminating i3 by means of SIGTERM
causes it to leak the runtime directory and all its contents. There are
multiple issues at play: first, any cleanup handlers registered via
atexit are never invoked when a signal terminates the program (see
atexit(3)). Hence, the log SHM log cleanup performed in i3_exit is not
invoked in that case. Second, compared to the shutdown path for the
'exit' command, we do not unlink the UNIX domain socket we create,
causing it to be leaked as well. Third, a handler for SIGTERM is not
registered at all despite handle_signal claiming to be the handler for
all 'Term' signals.
This change addresses all three problems and results in a graceful exit
including cleanup to happen when we receive a signal with the default
action 'Term'. It addresses issue #3049.","The tests seem to hang, could you take a look at that please?

How can I access test-suite.log from the Travis run? Are we sure it's the newly added test that is hanging? I am asking because at 'next' top of tree complete-run.pl hang for me. I had to backtrack a bit to get the tests running (no changes applied). There is seemingly only a single test run (?) which suggests it being my test, but I cannot verify that.",True,{}
i3/i3,https://github.com/i3/i3,3057,2017-11-24T05:46:14Z,2017-11-29T07:29:48Z,2017-12-02T15:52:19Z,MERGED,True,132,18,3,https://github.com/d-e-s-o,Perform proper cleanup for signals with 'Term' action,3,[],https://github.com/i3/i3/pull/3057,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/3057#issuecomment-346929715,"Issue #3049 describes a case where terminating i3 by means of SIGTERM
causes it to leak the runtime directory and all its contents. There are
multiple issues at play: first, any cleanup handlers registered via
atexit are never invoked when a signal terminates the program (see
atexit(3)). Hence, the log SHM log cleanup performed in i3_exit is not
invoked in that case. Second, compared to the shutdown path for the
'exit' command, we do not unlink the UNIX domain socket we create,
causing it to be leaked as well. Third, a handler for SIGTERM is not
registered at all despite handle_signal claiming to be the handler for
all 'Term' signals.
This change addresses all three problems and results in a graceful exit
including cleanup to happen when we receive a signal with the default
action 'Term'. It addresses issue #3049.","How can I access test-suite.log from the Travis run? Are we sure it's the newly added test that is hanging?

The log is printed by default (see travis/run-tests.sh), but not when the run times out entirely.
You can use Docker to get the same environment which travis uses: https://hub.docker.com/u/i3wm/

I am asking because at 'next' top of tree complete-run.pl hang for me. I had to backtrack a bit to get the tests running (no changes applied).

Can you report a separate issue for that? The tests work fine for me on the next branch. Are you sure you have all dependencies installed?

There is seemingly only a single test run (?) which suggests it being my test, but I cannot verify that.

There is always only one test from the perspective of “make check”, and that test is to run i3’s test suite, which in turn runs all the individual files.
However, I checked out your branch on my computer, and while the tests work fine on next, they fail frequently with your changes.",True,{}
i3/i3,https://github.com/i3/i3,3057,2017-11-24T05:46:14Z,2017-11-29T07:29:48Z,2017-12-02T15:52:19Z,MERGED,True,132,18,3,https://github.com/d-e-s-o,Perform proper cleanup for signals with 'Term' action,3,[],https://github.com/i3/i3/pull/3057,https://github.com/d-e-s-o,4,https://github.com/i3/i3/pull/3057#issuecomment-346958167,"Issue #3049 describes a case where terminating i3 by means of SIGTERM
causes it to leak the runtime directory and all its contents. There are
multiple issues at play: first, any cleanup handlers registered via
atexit are never invoked when a signal terminates the program (see
atexit(3)). Hence, the log SHM log cleanup performed in i3_exit is not
invoked in that case. Second, compared to the shutdown path for the
'exit' command, we do not unlink the UNIX domain socket we create,
causing it to be leaked as well. Third, a handler for SIGTERM is not
registered at all despite handle_signal claiming to be the handler for
all 'Term' signals.
This change addresses all three problems and results in a graceful exit
including cleanup to happen when we receive a signal with the default
action 'Term'. It addresses issue #3049.","The tests seem to hang, could you take a look at that please?

I believe that may be due to signal-unsafe code in the signal handler. I've reworked the change a bit to use libev's signal watchers which should not have that problem.


I am asking because at 'next' top of tree complete-run.pl hang for me. I had to backtrack a bit to get the tests running (no changes applied).



Can you report a separate issue for that? The tests work fine for me on the next branch. Are you sure you have all dependencies installed?

I believe I may have been too impatient. The tests get stuck on occasion for 30s or so but if I wait long enough it will eventually succeed. Nevertheless on the CL I tested on this wasn't the case at all. Unfortunately, I do not recall which CL that was, as I rebased before creating a pull request. As that is only intermittent I won't dig into history...

However, I checked out your branch on my computer, and while the tests work fine on next, they fail frequently with your changes.

I think the problem is with the refactoring happening in testcases/lib/i3test.pm.in. I reverted that. The reason I had it in the first place is because we are setting global state ($i3_pid) from a normal function and in parallel runs this is causing problems because we kill a child twice (or so is my understanding). Now why it fails with the refactoring is still beyond me. There is something magical about $i3_pid. The mere moving of its assignment is making tests fail (intermittently).",True,{}
i3/i3,https://github.com/i3/i3,3057,2017-11-24T05:46:14Z,2017-11-29T07:29:48Z,2017-12-02T15:52:19Z,MERGED,True,132,18,3,https://github.com/d-e-s-o,Perform proper cleanup for signals with 'Term' action,3,[],https://github.com/i3/i3/pull/3057,https://github.com/d-e-s-o,5,https://github.com/i3/i3/pull/3057#issuecomment-347547412,"Issue #3049 describes a case where terminating i3 by means of SIGTERM
causes it to leak the runtime directory and all its contents. There are
multiple issues at play: first, any cleanup handlers registered via
atexit are never invoked when a signal terminates the program (see
atexit(3)). Hence, the log SHM log cleanup performed in i3_exit is not
invoked in that case. Second, compared to the shutdown path for the
'exit' command, we do not unlink the UNIX domain socket we create,
causing it to be leaked as well. Third, a handler for SIGTERM is not
registered at all despite handle_signal claiming to be the handler for
all 'Term' signals.
This change addresses all three problems and results in a graceful exit
including cleanup to happen when we receive a signal with the default
action 'Term'. It addresses issue #3049.","Hi Michael, would you mind having a look at the latest version of the change? I'd like to get closure on this pull request, if possible.",True,{}
i3/i3,https://github.com/i3/i3,3057,2017-11-24T05:46:14Z,2017-11-29T07:29:48Z,2017-12-02T15:52:19Z,MERGED,True,132,18,3,https://github.com/d-e-s-o,Perform proper cleanup for signals with 'Term' action,3,[],https://github.com/i3/i3/pull/3057,https://github.com/stapelberg,6,https://github.com/i3/i3/pull/3057#issuecomment-347775871,"Issue #3049 describes a case where terminating i3 by means of SIGTERM
causes it to leak the runtime directory and all its contents. There are
multiple issues at play: first, any cleanup handlers registered via
atexit are never invoked when a signal terminates the program (see
atexit(3)). Hence, the log SHM log cleanup performed in i3_exit is not
invoked in that case. Second, compared to the shutdown path for the
'exit' command, we do not unlink the UNIX domain socket we create,
causing it to be leaked as well. Third, a handler for SIGTERM is not
registered at all despite handle_signal claiming to be the handler for
all 'Term' signals.
This change addresses all three problems and results in a graceful exit
including cleanup to happen when we receive a signal with the default
action 'Term'. It addresses issue #3049.",Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3058,2017-11-24T05:49:30Z,2017-11-29T07:33:28Z,2017-12-02T15:52:21Z,MERGED,True,20,30,5,https://github.com/d-e-s-o,do not check for NULL in FREE macro,1,[],https://github.com/i3/i3/pull/3058,https://github.com/d-e-s-o,1,https://github.com/i3/i3/pull/3058,"free(3) is safe to invoke on a NULL pointer, in which case no action is
taken. This change adjusts the FREE macros to omit this unnecessary
check.","free(3) is safe to invoke on a NULL pointer, in which case no action is
taken. This change adjusts the FREE macros to omit this unnecessary
check.",True,{}
i3/i3,https://github.com/i3/i3,3058,2017-11-24T05:49:30Z,2017-11-29T07:33:28Z,2017-12-02T15:52:21Z,MERGED,True,20,30,5,https://github.com/d-e-s-o,do not check for NULL in FREE macro,1,[],https://github.com/i3/i3/pull/3058,https://github.com/d-e-s-o,2,https://github.com/i3/i3/pull/3058#issuecomment-347727709,"free(3) is safe to invoke on a NULL pointer, in which case no action is
taken. This change adjusts the FREE macros to omit this unnecessary
check.",Anybody? Trivial and non-invasive.,True,{}
i3/i3,https://github.com/i3/i3,3059,2017-11-26T16:28:06Z,2017-11-27T07:34:11Z,2017-11-27T07:34:14Z,MERGED,True,113,82,8,https://github.com/stapelberg,i3-dump-log: enable shmlog on demand,3,[],https://github.com/i3/i3/pull/3059,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3059,,,True,{}
i3/i3,https://github.com/i3/i3,3065,2017-12-01T15:13:49Z,2017-12-03T17:46:35Z,2018-03-19T10:44:57Z,MERGED,True,34,0,2,https://github.com/orestisfl,Skip internal workspaces with 'move workspace to output',1,[],https://github.com/i3/i3/pull/3065,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3065,Fixes #3064.,Fixes #3064.,True,{}
i3/i3,https://github.com/i3/i3,3066,2017-12-04T22:24:24Z,2017-12-05T06:29:10Z,2018-03-19T10:44:40Z,MERGED,True,7,1,1,https://github.com/orestisfl,complete-run.pl: accept the xvfb option from command line,1,[],https://github.com/i3/i3/pull/3066,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3066,,,True,{}
i3/i3,https://github.com/i3/i3,3066,2017-12-04T22:24:24Z,2017-12-05T06:29:10Z,2018-03-19T10:44:40Z,MERGED,True,7,1,1,https://github.com/orestisfl,complete-run.pl: accept the xvfb option from command line,1,[],https://github.com/i3/i3/pull/3066,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3066#issuecomment-349208967,,Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3070,2017-12-08T00:43:46Z,2017-12-08T13:29:17Z,2018-03-19T10:44:33Z,MERGED,True,104,18,10,https://github.com/orestisfl,Add '--release' flag for bindsym in the bar block,1,[],https://github.com/i3/i3/pull/3070,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3070,"i3bar's handle_button is modified to also handle XCB_BUTTON_RELEASE
events. During these button release events, only custom commands are
checked to avoid sending multiple workspace ipc messages.
The way this patch is implemented will allow to assign a custom command
for both the press and release of the same button:
bar {
  ...
  bindsym buttonX exec command1
  bindsym --release buttonX exec command2
}

Fixes #3068.
TODO:

 update documentation
 tests

but I am opening the PR to get some first opinions.","i3bar's handle_button is modified to also handle XCB_BUTTON_RELEASE
events. During these button release events, only custom commands are
checked to avoid sending multiple workspace ipc messages.
The way this patch is implemented will allow to assign a custom command
for both the press and release of the same button:
bar {
  ...
  bindsym buttonX exec command1
  bindsym --release buttonX exec command2
}

Fixes #3068.
TODO:

 update documentation
 tests

but I am opening the PR to get some first opinions.",True,{'HEART': ['https://github.com/AloisMahdal']}
i3/i3,https://github.com/i3/i3,3070,2017-12-08T00:43:46Z,2017-12-08T13:29:17Z,2018-03-19T10:44:33Z,MERGED,True,104,18,10,https://github.com/orestisfl,Add '--release' flag for bindsym in the bar block,1,[],https://github.com/i3/i3/pull/3070,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3070#issuecomment-350230051,"i3bar's handle_button is modified to also handle XCB_BUTTON_RELEASE
events. During these button release events, only custom commands are
checked to avoid sending multiple workspace ipc messages.
The way this patch is implemented will allow to assign a custom command
for both the press and release of the same button:
bar {
  ...
  bindsym buttonX exec command1
  bindsym --release buttonX exec command2
}

Fixes #3068.
TODO:

 update documentation
 tests

but I am opening the PR to get some first opinions.",up,True,{}
i3/i3,https://github.com/i3/i3,3070,2017-12-08T00:43:46Z,2017-12-08T13:29:17Z,2018-03-19T10:44:33Z,MERGED,True,104,18,10,https://github.com/orestisfl,Add '--release' flag for bindsym in the bar block,1,[],https://github.com/i3/i3/pull/3070,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3070#issuecomment-350263154,"i3bar's handle_button is modified to also handle XCB_BUTTON_RELEASE
events. During these button release events, only custom commands are
checked to avoid sending multiple workspace ipc messages.
The way this patch is implemented will allow to assign a custom command
for both the press and release of the same button:
bar {
  ...
  bindsym buttonX exec command1
  bindsym --release buttonX exec command2
}

Fixes #3068.
TODO:

 update documentation
 tests

but I am opening the PR to get some first opinions.",Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3073,2017-12-09T14:14:28Z,2017-12-09T14:34:13Z,2017-12-09T14:34:13Z,MERGED,True,3,2,1,https://github.com/veselov,"Fixes #3072, Xft.dpi can be floating point",1,[],https://github.com/i3/i3/pull/3073,https://github.com/veselov,1,https://github.com/i3/i3/pull/3073,,,True,{}
i3/i3,https://github.com/i3/i3,3074,2017-12-09T14:47:42Z,2017-12-09T14:52:02Z,2018-03-19T10:44:28Z,MERGED,True,4,4,2,https://github.com/orestisfl,Fix workspace_show-related issues,3,[],https://github.com/i3/i3/pull/3074,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3074,Fixes #2921.,Fixes #2921.,True,{}
i3/i3,https://github.com/i3/i3,3074,2017-12-09T14:47:42Z,2017-12-09T14:52:02Z,2018-03-19T10:44:28Z,MERGED,True,4,4,2,https://github.com/orestisfl,Fix workspace_show-related issues,3,[],https://github.com/i3/i3/pull/3074,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3074#issuecomment-350476155,Fixes #2921.,Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3076,2017-12-09T18:17:55Z,2017-12-09T18:42:30Z,2018-03-19T10:44:23Z,MERGED,True,14,2,2,https://github.com/orestisfl,minor V3 to v4 issues,2,[],https://github.com/i3/i3/pull/3076,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3076,,,True,{}
i3/i3,https://github.com/i3/i3,3078,2017-12-10T13:18:47Z,2017-12-10T21:02:11Z,2018-03-19T10:44:16Z,MERGED,True,48,1,3,https://github.com/orestisfl,Fix sticky-related crash (#3075),1,[],https://github.com/i3/i3/pull/3078,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3078,"The first commit is unrelated, I can remove it. For an explanation of problem & solution check the second commit message.
Fixes #3075.","The first commit is unrelated, I can remove it. For an explanation of problem & solution check the second commit message.
Fixes #3075.",True,{}
i3/i3,https://github.com/i3/i3,3078,2017-12-10T13:18:47Z,2017-12-10T21:02:11Z,2018-03-19T10:44:16Z,MERGED,True,48,1,3,https://github.com/orestisfl,Fix sticky-related crash (#3075),1,[],https://github.com/i3/i3/pull/3078,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3078#issuecomment-350575827,"The first commit is unrelated, I can remove it. For an explanation of problem & solution check the second commit message.
Fixes #3075.",up,True,{}
i3/i3,https://github.com/i3/i3,3079,2017-12-10T22:43:49Z,2017-12-12T15:49:49Z,2018-03-19T10:44:01Z,MERGED,True,4,5,1,https://github.com/orestisfl, generate-command-parser.pl: remove trailing characters,2,[],https://github.com/i3/i3/pull/3079,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3079,,,True,{}
i3/i3,https://github.com/i3/i3,3079,2017-12-10T22:43:49Z,2017-12-12T15:49:49Z,2018-03-19T10:44:01Z,MERGED,True,4,5,1,https://github.com/orestisfl, generate-command-parser.pl: remove trailing characters,2,[],https://github.com/i3/i3/pull/3079,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3079#issuecomment-351092410,,Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3080,2017-12-10T22:48:17Z,2018-01-17T20:26:10Z,2018-03-19T10:43:55Z,MERGED,True,18,30,1,https://github.com/orestisfl, Reduce repetition in cmd_move_con_to_workspace* ,2,[],https://github.com/i3/i3/pull/3080,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3080,,,True,{}
i3/i3,https://github.com/i3/i3,3080,2017-12-10T22:48:17Z,2018-01-17T20:26:10Z,2018-03-19T10:43:55Z,MERGED,True,18,30,1,https://github.com/orestisfl, Reduce repetition in cmd_move_con_to_workspace* ,2,[],https://github.com/i3/i3/pull/3080,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3080#issuecomment-351091432,,"I get the reasoning for the change, but I'm not actually sure I favor it. It somewhat outsources the handling of matches in a less transparent way such that I'm not sure the couple of (repeated) lines saved is worth the indirection of the extra call here.",True,{}
i3/i3,https://github.com/i3/i3,3080,2017-12-10T22:48:17Z,2018-01-17T20:26:10Z,2018-03-19T10:43:55Z,MERGED,True,18,30,1,https://github.com/orestisfl, Reduce repetition in cmd_move_con_to_workspace* ,2,[],https://github.com/i3/i3/pull/3080,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/3080#issuecomment-351094256,,"IMO It's not only about the saved lines, it is made easily clear for the reader (without having to compare each function) that in the end, all cmd_move_con_to_workspace* do the same thing after they've acquired the target workspace.",True,{}
i3/i3,https://github.com/i3/i3,3080,2017-12-10T22:48:17Z,2018-01-17T20:26:10Z,2018-03-19T10:43:55Z,MERGED,True,18,30,1,https://github.com/orestisfl, Reduce repetition in cmd_move_con_to_workspace* ,2,[],https://github.com/i3/i3/pull/3080,https://github.com/Airblader,4,https://github.com/i3/i3/pull/3080#issuecomment-351095174,,"I think my argument at the moment would be that as a reader, I would see
cmd_move_con_to_workspace(ws);

and wonder: which con? just to be even further surprised that it's (potentially) more than one container. Admittedly, giving it a different name might resolve that issue.",True,{}
i3/i3,https://github.com/i3/i3,3080,2017-12-10T22:48:17Z,2018-01-17T20:26:10Z,2018-03-19T10:43:55Z,MERGED,True,18,30,1,https://github.com/orestisfl, Reduce repetition in cmd_move_con_to_workspace* ,2,[],https://github.com/i3/i3/pull/3080,https://github.com/orestisfl,5,https://github.com/i3/i3/pull/3080#issuecomment-351096330,,Yeah the name is bad in retrospect. I'll find a better name.,True,{}
i3/i3,https://github.com/i3/i3,3080,2017-12-10T22:48:17Z,2018-01-17T20:26:10Z,2018-03-19T10:43:55Z,MERGED,True,18,30,1,https://github.com/orestisfl, Reduce repetition in cmd_move_con_to_workspace* ,2,[],https://github.com/i3/i3/pull/3080,https://github.com/orestisfl,6,https://github.com/i3/i3/pull/3080#issuecomment-351669752,,"move_matches_to_workspace
move_matching_windows_to_workspace
move_current_matches_to_workspace

?",True,{}
i3/i3,https://github.com/i3/i3,3080,2017-12-10T22:48:17Z,2018-01-17T20:26:10Z,2018-03-19T10:43:55Z,MERGED,True,18,30,1,https://github.com/orestisfl, Reduce repetition in cmd_move_con_to_workspace* ,2,[],https://github.com/i3/i3/pull/3080,https://github.com/Airblader,7,https://github.com/i3/i3/pull/3080#issuecomment-353941953,,The first one sounds reasonable to me.,True,{}
i3/i3,https://github.com/i3/i3,3080,2017-12-10T22:48:17Z,2018-01-17T20:26:10Z,2018-03-19T10:43:55Z,MERGED,True,18,30,1,https://github.com/orestisfl, Reduce repetition in cmd_move_con_to_workspace* ,2,[],https://github.com/i3/i3/pull/3080,https://github.com/orestisfl,8,https://github.com/i3/i3/pull/3080#issuecomment-354163693,,Up,True,{}
i3/i3,https://github.com/i3/i3,3080,2017-12-10T22:48:17Z,2018-01-17T20:26:10Z,2018-03-19T10:43:55Z,MERGED,True,18,30,1,https://github.com/orestisfl, Reduce repetition in cmd_move_con_to_workspace* ,2,[],https://github.com/i3/i3/pull/3080,https://github.com/Airblader,9,https://github.com/i3/i3/pull/3080#issuecomment-358433686,,Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3081,2017-12-11T00:01:09Z,2017-12-26T08:58:57Z,2018-04-07T22:41:42Z,CLOSED,False,14,15,4,https://github.com/orestisfl,Introduce ipc_send_workspace_event_from_gen,1,[],https://github.com/i3/i3/pull/3081,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3081,(From #3078),(From #3078),True,{}
i3/i3,https://github.com/i3/i3,3081,2017-12-11T00:01:09Z,2017-12-26T08:58:57Z,2018-04-07T22:41:42Z,CLOSED,False,14,15,4,https://github.com/orestisfl,Introduce ipc_send_workspace_event_from_gen,1,[],https://github.com/i3/i3/pull/3081,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3081#issuecomment-353941687,(From #3078),"I'm actually going to reject this PR. I get the sentiment to avoid repetition, but the introduction of this function feels forced and not very natural. I think we introduce more indirection than we gain from this.",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3085,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename",True,"{'THUMBS_UP': ['https://github.com/Airblader', 'https://github.com/jwdeitch', 'https://github.com/inkhey', 'https://github.com/futile', 'https://github.com/zerrxs', 'https://github.com/chapmanjacobd', 'https://github.com/nccurry', 'https://github.com/balping', 'https://github.com/soumya92', 'https://github.com/juancampa', 'https://github.com/jsegitz', 'https://github.com/lig', 'https://github.com/rattletat', 'https://github.com/MaximeCheramy', 'https://github.com/marioortizmanero', 'https://github.com/danielakhterov', 'https://github.com/mteplyi', 'https://github.com/aali195', 'https://github.com/VCJames', 'https://github.com/simonvanderveldt', 'https://github.com/thiagowfx', 'https://github.com/rubencaro', 'https://github.com/sake', 'https://github.com/glebliutsko', 'https://github.com/Syphdias', 'https://github.com/shellshock1953', 'https://github.com/LevitatingBusinessMan', 'https://github.com/Jacajack', 'https://github.com/rustatian', 'https://github.com/anotherbugmaster', 'https://github.com/tulth', 'https://github.com/stephan-t', 'https://github.com/freakinhippie', 'https://github.com/rontav', 'https://github.com/tiramiseb', 'https://github.com/Conky5', 'https://github.com/msvalina', 'https://github.com/acheronfail', 'https://github.com/jubnzv', 'https://github.com/chsjr1996', 'https://github.com/NiclasEriksen', 'https://github.com/louwers', 'https://github.com/vitaly-zdanevich', 'https://github.com/sahilrajput03', 'https://github.com/Aohzan', 'https://github.com/RealTheSunCat', 'https://github.com/TheLastZombie', 'https://github.com/opalmay', 'https://github.com/feerzlay', 'https://github.com/kaanyalova'], 'LAUGH': ['https://github.com/ewatt', 'https://github.com/chsjr1996', 'https://github.com/RealTheSunCat'], 'HEART': ['https://github.com/msvalina', 'https://github.com/acheronfail', 'https://github.com/chsjr1996', 'https://github.com/RealTheSunCat', 'https://github.com/tuanbass', 'https://github.com/Lqp1']}"
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3085#issuecomment-351094469,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","Emit move event properly on tiling drop.

I think @acrisci just meant that when you drop-move a window, we need to emit the regular window::move event. Perhaps this wasn't the case in the other PR(s) yet, perhaps it just hadn't been tested yet; I'm not sure.

Configure color of drop indicator

Let's hold off on that for now. I think the focused color is a reasonable choice. When the need arises we can still make it configurable.

I am not sure if fb4fa33 is needed. Investigate?

Perhaps @MForster can add some insight here. :-) I haven't looked into it yet.

Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame (?).

Yes, let's please squash; but we can wait with that until we merge. To retain attributions, the commit message should just mention the other authors having worked on this previously.

Add a way to disable the whole thing?

That's a very good point. Yes, I think we should have this option.

I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.

Perhaps leave a comment at the existing two PRs so the people subscribed there get a notification that this has been picked up upon again? You can also drop an email to the mailing list and / or call for testers on reddit.",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/3085#issuecomment-351102236,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.

You can also drop an email to the mailing list and / or call for testers on reddit.

We can probably do this when this is ready to merge (or after it is merged in a separate branch for limited time? dunno). I predict that writing excessive tests for this will take some time.
For now, it would be great if you and/or @stapelberg can run this.",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/MForster,4,https://github.com/i3/i3/pull/3085#issuecomment-351119539,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","I am not sure if fb4fa33 is needed. Investigate?

Perhaps @MForster can add some insight here. :-) I haven't looked into it yet.

I'm sure that it it was necessary when I implemented it :-). There may be simpler solutions.",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/orestisfl,5,https://github.com/i3/i3/pull/3085#issuecomment-351676693,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","I've been trying to write the tests. Maybe @stapelberg can help with my problem:
#!perl
use i3test i3_config => <<EOT;
# i3 config file (v4)
font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1

focus_follows_mouse no
floating_modifier Mod1

# 2 side by side outputs
fake-outputs 1000x500+0+0,1000x500+1000+0
EOT
use i3test::XTEST;

sub start_drag {
    my ($pos_x, $pos_y) = @_;

    $x->root->warp_pointer($pos_x, $pos_y);
    xtest_sync_with_i3;

    xtest_key_press(64);        # Alt_L
    xtest_button_press(1, $pos_x, $pos_y);
    xtest_sync_with_i3;
}

sub end_drag {
    my ($pos_x, $pos_y) = @_;

    $x->root->warp_pointer($pos_x, $pos_y);
    xtest_sync_with_i3;

    xtest_button_release(1, $pos_x, $pos_y);
    xtest_key_release(64);      # Alt_L
    xtest_sync_with_i3;
}

my $ws2 = fresh_workspace(output => 1);
my $ws1 = fresh_workspace(output => 0);
open_window;
my $A = get_focused($ws1);

start_drag(50, 50);
end_drag(1050, 50);

is(get_focused($ws2), $A, 'A moved to the right workspace');

done_testing;
I have tried every sync permutation for the end_drag subroutine. I think the sync after warp_pointer is needed but including it will sometimes make the test stuck, waiting for the sync forever.",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/orestisfl,6,https://github.com/i3/i3/pull/3085#issuecomment-351679560,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","Hmm, I think it gets stuck because i3 is inside drag_pointer's ev_run and doesn't reply to the sync message. I'll see if I can work around that.",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/orestisfl,7,https://github.com/i3/i3/pull/3085#issuecomment-365994855,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","Possible feature: special keybind that when used with tiling windows it turns them to floating.
From https://www.reddit.com/r/i3wm/comments/7xrmxu/move_nonfloating_window_using_the_mouse/",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/orestisfl,8,https://github.com/i3/i3/pull/3085#issuecomment-371792147,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","@stapelberg, since you are fairly active lately, do you have any input regarding the problem I described above?
Thanks.",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/stapelberg,9,https://github.com/i3/i3/pull/3085#issuecomment-372405475,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","Sorry for the late reply.
I think your assessment is correct: we don’t correctly handle the sync event from within the drag_pointer event loop. It should be an easy addition to do so, though :). Let me know if you can’t get that to work, and thanks for being diligent regarding the tests — I think this will be our first test case performing any kind of dragging.",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/orestisfl,10,https://github.com/i3/i3/pull/3085#issuecomment-372513397,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","They generally seem to be handled but they get stuck sometimes. The test sometimes hangs for 10-20 seconds and then continues. This is the gdb log.
(gdb) p (xcb_generic_event_t*) xcb_poll_for_event(conn)
$1 = (xcb_generic_event_t *) 0x604000016350
(gdb) p $1->response_type & 0x7F
$2 = 28
(gdb) p (xcb_generic_event_t*) xcb_poll_for_event(conn)
$3 = (xcb_generic_event_t *) 0x604000016390
(gdb) p $3->response_type & 0x7F
$4 = 33
(gdb) bt
#0  0x00007f801996df90 in epoll_pwait () at /usr/lib/libc.so.6
#1  0x00007f801a1a4e95 in  () at /usr/lib/libev.so.4
#2  0x00007f801a1a7455 in ev_run () at /usr/lib/libev.so.4
#3  0x0000555fa2b54f39 in drag_pointer (con=0x614000002440, event=0x604000013a10, confine_to=0, border=BORDER_TOP, cursor=8, callback=0x555fa2ba1f34 <drag_callback>, extra=0x7ffc393e7f60) at ../../i3/src/floating.c:848
#4  0x0000555fa2ba3043 in tiling_drag (con=0x614000002440, event=0x604000013a10) at ../../i3/src/tiling_drag.c:187
#5  0x0000555fa2b03d3f in route_click (con=0x614000002440, event=0x604000013a10, mod_pressed=true, dest=CLICK_INSIDE) at ../../i3/src/click.c:261
#6  0x0000555fa2b046cc in handle_button_press (event=0x604000013a10) at ../../i3/src/click.c:364
#7  0x0000555fa2b61707 in handle_event (type=4, event=0x604000013a10) at ../../i3/src/handlers.c:1551
#8  0x0000555fa2b71f9c in xcb_prepare_cb (loop=0x7f801a3ada40, w=0x60300000d6f0, revents=16384) at ../../i3/src/main.c:133
#9  0x00007f801a1a44e3 in ev_invoke_pending () at /usr/lib/libev.so.4
#10 0x00007f801a1a7fe1 in ev_run () at /usr/lib/libev.so.4
#11 0x0000555fa2b71d45 in ev_loop (loop=0x7f801a3ada40, flags=0) at /usr/include/ev.h:835
#12 0x0000555fa2b7a95c in main (argc=9, argv=0x7ffc393e9848) at ../../i3/src/main.c:964

It seems like it's possible to have leftover X events but ev_run doesn't get interrupted?
I'll continue tomorrow.",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/stapelberg,11,https://github.com/i3/i3/pull/3085#issuecomment-372562480,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","Just checking — your git working directory does contain commit 0d8b671, yes? If not, that would be my suspicion.",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/orestisfl,12,https://github.com/i3/i3/pull/3085#issuecomment-372591296,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","Yes, I had rebased with the latest next.",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/orestisfl,13,https://github.com/i3/i3/pull/3085#issuecomment-372671083,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","I wonder if we are going against libev's documentation here:

You must not call ev_run (or similar functions that enter the current event loop) or ev_loop_fork from either ev_prepare or ev_check watchers. Other loops than the current one are fine, however. The rationale behind this is that you do not need to check for recursion in those watchers, i.e. the sequence will always be ev_prepare, blocking, ev_check so if you have one watcher of each kind they will always be called in pairs bracketing the blocking call.",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/stapelberg,14,https://github.com/i3/i3/pull/3085#issuecomment-372808949,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","Fair point. If you can find a cleaner way to implement this, pull requests are very welcome :)",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/orestisfl,15,https://github.com/i3/i3/pull/3085#issuecomment-372833494,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","Tbh, I don't really understand the rationale behind the quoted text, I don't think that the current implementation causes any problems as far as I can tell. I'll see if I can come up with a cleaner solution though.
For this PR though my problem is that I still don't completely understand why the i3sync event gets lost. I have tried some hacks that improved the situation a bit (eg an additional ev_idle or ev_check makes the 1-minute hang more rare) but I am still searching for a complete solution.
Since you are significantly more experienced with libev any ideas for the possible solution/cause might help.",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/stapelberg,16,https://github.com/i3/i3/pull/3085#issuecomment-373640441,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename",Can you give me the steps required to reproduce the issue please?,True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/orestisfl,17,https://github.com/i3/i3/pull/3085#issuecomment-373642520,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename",I've pushed a test that should exhibit this behaviour.,True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/stapelberg,18,https://github.com/i3/i3/pull/3085#issuecomment-374514180,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","I looked into this a little bit, and I’m fairly convinced that the issue is that we’re draining the events in 
  
    
      i3/src/floating.c
    
    
         Line 695
      in
      ddc80ab
    
  
  
    

        
          
           while ((event = xcb_poll_for_event(conn)) != NULL) { 
        
    
  

, but don’t handle the case where new events become available as part of the dragloop callback in 
  
    
      i3/src/floating.c
    
    
         Line 763
      in
      ddc80ab
    
  
  
    

        
          
           dragloop->callback( 
        
    
  

: to process replies, xcb needs to read from the X11 connection, which might mean reading new events.
Indeed, adding a quick and dirty “drain:” label in front of the while loop and jumping to it before the final xcb_flush(conn) call in xcb_drag_prepare_cb fixes the hang for me.
Note that this doesn’t eliminate all causes of flakiness for 295-tiling-drag.t for me. One other issue is that you’re calling xtest_sync_with_i3 after calling $x->root->warp_pointer, which uses the wrong X11 connection: the XTEST code has a separate X11 connection. So, make that sync_with_i3. Even with that fix, the test is still flaky: sometimes i3 does not seem to receive any pointer update events. Not entirely sure why.
I hope this helps you make some progress on this. Let me know if you need further help.",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/orestisfl,19,https://github.com/i3/i3/pull/3085#issuecomment-374655620,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","Thanks! I had done something similar with your drain but I didn't know about i3_sync. I combined:

the drain label
the sync fix
ev_run once -> ev_loop

I ran it hundreds of times with a loop and it never hanged.",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/orestisfl,20,https://github.com/i3/i3/pull/3085#issuecomment-377776209,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","I think we should make the functionality a bit more complex for this to be more useful. I don't like the (original) idea of always introducing splits though because it could get annoying quick.
I am thinking something like:

Inner area works like move to mark - what we are doing right now.
Outer area should always put the dragged container in the same parent with the target. If the orientation matches, don't introduce a new split (current behaviour). If it doesn't put them in a new split.
Maybe use another area that covers the parent container, drawn over more than one windows.
Eg with V[A B] C when I want to move C to the left of V the drop indicator should cover the left side of A and B.

We could also use the swap command for $mod + Shift. Sway does something like that: continuously moves the window you are dragging. So, if the layout is A B C D dragging C onto A will make the new layout C A B D. Instead of that we could only swap with the target, so dragging C onto A would make the layout C B A D. Or have a way to do both, this is not too complex.
@Airblader since you are interested in this feature can you test it locally for a bit to provide your thoughts?",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/Airblader,21,https://github.com/i3/i3/pull/3085#issuecomment-378503983,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","I would love to, but I'm just a bit short on time. :-( This issue originally generated a lot of interest in the community. Perhaps we should advertise it again for some discussion?",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/orestisfl,22,https://github.com/i3/i3/pull/3085#issuecomment-379487507,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename",How it looks right now: https://gfycat.com/UnevenFocusedBaleenwhale,True,"{'THUMBS_UP': ['https://github.com/ashinkarov', 'https://github.com/stapelberg', 'https://github.com/futile', 'https://github.com/Airblader', 'https://github.com/zerrxs', 'https://github.com/soumya92', 'https://github.com/nccurry', 'https://github.com/ngphuoc']}"
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/sirsurthur,23,https://github.com/i3/i3/pull/3085#issuecomment-379489894,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename",Gif looks cool. Great work !,True,"{'HEART': ['https://github.com/orestisfl'], 'THUMBS_UP': ['https://github.com/ashinkarov']}"
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/stapelberg,24,https://github.com/i3/i3/pull/3085#issuecomment-379497937,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename",Looks really good indeed!,True,"{'HOORAY': ['https://github.com/orestisfl', 'https://github.com/zerrxs']}"
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/Airblader,25,https://github.com/i3/i3/pull/3085#issuecomment-379550964,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","Looks really cool indeed! I saw some questions in your original post:

For consistency: should dragging unfocused floating containers also not make them focused?

I think it's reasonable and expected that dragging a window also focuses it.

Rearrange tabbed / stacked by dropping on the title?

Sure, why not. But we can also do it in a second PR.",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/orestisfl,26,https://github.com/i3/i3/pull/3085#issuecomment-381437037,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","hmm, I am getting flakyness with the tests again :/",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/Airblader,27,https://github.com/i3/i3/pull/3085#issuecomment-399415290,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename",@orestisf1993 What's the status here?,True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/orestisfl,28,https://github.com/i3/i3/pull/3085#issuecomment-399422128,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","I am still getting flakyness in the tests and I haven't found the cause for it yet. Maybe we can change the testing approach? Eg, assume the mouse will work correctly and call the tiling functions through an IPC command, eg tiling_drag 50 50 100 100 (original x y & target x y).",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/Airblader,29,https://github.com/i3/i3/pull/3085#issuecomment-399445175,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename",That'd be fine with me.,True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/orestisfl,30,https://github.com/i3/i3/pull/3085#issuecomment-399761329,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename",I removed the 'stale' label since I plan to finish this. Would be a shame to close this when the main code is almost ready.,True,"{'THUMBS_UP': ['https://github.com/Airblader', 'https://github.com/eater', 'https://github.com/zerrxs']}"
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/tksfz,31,https://github.com/i3/i3/pull/3085#issuecomment-423786633,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename",I was among the people who initially requested this feature. I'm really looking forward to this! Go go go!,True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/orestisfl,32,https://github.com/i3/i3/pull/3085#issuecomment-423788263,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","You can always apply the changes locally, I don't know of any bugs currently. Feedback would be very welcome as well.
The reason this has slowed down is that while testing I spot some issues elsewhere that have to be fixed and then I have to continue working on the tests etc.",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/livanh,33,https://github.com/i3/i3/pull/3085#issuecomment-429242819,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","I really want to see this in i3. Take your time, but don't give up! I'll test it locally and report any weird thing I might notice.",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/Airblader,34,https://github.com/i3/i3/pull/3085#issuecomment-471666410,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","@orestisf1993 A year later, do we still expect work on this to continue? :-)",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/orestisfl,35,https://github.com/i3/i3/pull/3085#issuecomment-473012767,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","I wanted to continue with #3503 first so that I can write more reliable tests regarding tree layouts but we can postpone more complicated tests for later and aim to merge this as it is.
I'll restart contributing to i3 soon, so I am pretty certain that I'll finish work on this.",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/Airblader,36,https://github.com/i3/i3/pull/3085#issuecomment-473655909,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","I'm fine with postponing to improve the PR with other changes first. If you say this continues, that's good enough for me. :-)",True,"{'THUMBS_UP': ['https://github.com/Konkrad', 'https://github.com/lig', 'https://github.com/shellshock1953']}"
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/simplykiwi,37,https://github.com/i3/i3/pull/3085#issuecomment-482765649,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","Oh I'm super excited to have found that this work is in progress, and really hope it continues. I just moved from SwayWM to i3 due to changing away from Wayland, and Sway has this drag feature that I am already sorely missing. It makes it so quick and easy to reorder your tiles and rearrange how they work. Definitely would love to see this moved forward, thank you all!",True,"{'THUMBS_UP': ['https://github.com/panaman67', 'https://github.com/Ursescu', 'https://github.com/Jesin', 'https://github.com/GhostKraft', 'https://github.com/shellshock1953']}"
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/clapbr,38,https://github.com/i3/i3/pull/3085#issuecomment-488119007,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","I am quadriplegic and use a trackball+pointer so I can only use 2-key combinations or 1 key+mouse combination like this PR implements. This feature made me possible to use i3 confortably, thank you very much.
I've been using it as a daily driver for the last week moving windows around exclusively with this feature and never encountered any issue.",True,"{'THUMBS_UP': ['https://github.com/Airblader', 'https://github.com/Jesin', 'https://github.com/Ursescu', 'https://github.com/orestisfl', 'https://github.com/muisje', 'https://github.com/shellshock1953']}"
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/Airblader,39,https://github.com/i3/i3/pull/3085#issuecomment-488120115,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","@clapbr Thank you for testing the PR and reporting back how it is working for you, thus is very valuable feedback!",True,"{'THUMBS_UP': ['https://github.com/clapbr', 'https://github.com/Ursescu', 'https://github.com/orestisfl', 'https://github.com/muisje', 'https://github.com/shellshock1953']}"
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/snikz,40,https://github.com/i3/i3/pull/3085#issuecomment-490461653,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","Ive tested this for a week now, and it would be a really good addition if you dropped a window in the middle of another window they changed position. It somewhat works in some situations, but should be a 1 to 1 change of position and size.
Other than that it works really well.",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/Ursescu,41,https://github.com/i3/i3/pull/3085#issuecomment-519112342,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","Hi guys I love this feature (tested on personal machine). What is the current status for this PR, any chances that will get this in the next release ?",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/orestisfl,42,https://github.com/i3/i3/pull/3085#issuecomment-519410862,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","Status pretty much the same. Planning to get back to it in late August or
in September. Hopefully will finish before the next release.

Thanks for testing it and if you have any feedback they are more than
welcome.
…
On Wed, Aug 7, 2019, 17:04 Ursescu Ionut ***@***.***> wrote:
 Hi guys I love this feature (tested on personal machine). What is the
 current status for this PR, any chances that will get this in the next
 release ?

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#3085?email_source=notifications&email_token=ABMCZPSRHYIIDGSWQVB5AADQDLI6ZA5CNFSM4EH3YDJ2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD3YQNFQ#issuecomment-519112342>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/ABMCZPTGY5HUY7WUHBI3533QDLI6ZANCNFSM4EH3YDJQ>
 .",True,"{'THUMBS_UP': ['https://github.com/marioortizmanero', 'https://github.com/lig', 'https://github.com/MaximeCheramy', 'https://github.com/mteplyi', 'https://github.com/Ursescu', 'https://github.com/GhostKraft', 'https://github.com/shellshock1953']}"
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/clapbr,43,https://github.com/i3/i3/pull/3085#issuecomment-531606037,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename",Is the small conflict with current git easily fixable?,True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/orestisfl,44,https://github.com/i3/i3/pull/3085#issuecomment-541552782,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename",@clapbr I fixed the conflict,True,"{'THUMBS_UP': ['https://github.com/rontav', 'https://github.com/Ursescu'], 'HEART': ['https://github.com/clapbr']}"
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/orestisfl,45,https://github.com/i3/i3/pull/3085#issuecomment-542113346,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","@snikz

Ive tested this for a week now, and it would be a really good addition if you dropped a window in the middle of another window they changed position. It somewhat works in some situations, but should be a 1 to 1 change of position and size.
Other than that it works really well.

Does the swap command do what you want? To try it select a target. run i3-msg mark a, then select the other container and run the command i3-msg swap with mark a.
If yes, I plan to also support swap for tiling drop by holding the Shift modifier. Not in this PR though but it should be trivial enough once this gets merged.",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/Diegovsky,46,https://github.com/i3/i3/pull/3085#issuecomment-613183798,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename",Is this pull request still working? I wanted to give it a drive and return some feedback,True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/botiapa,47,https://github.com/i3/i3/pull/3085#issuecomment-663369147,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename",Any progress on this PR? Would love to test it if needed.,True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/SemjonWilke,48,https://github.com/i3/i3/pull/3085#issuecomment-706087812,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename",@orestisfl Are you still working on this?,True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/orestisfl,49,https://github.com/i3/i3/pull/3085#issuecomment-706105039,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename",I haven't had time to work on this but I regularly think about finishing this.,True,"{'THUMBS_UP': ['https://github.com/SemjonWilke', 'https://github.com/Jacajack', 'https://github.com/wlhlm', 'https://github.com/Syphdias', 'https://github.com/vibhas77', 'https://github.com/JMendyk', 'https://github.com/anotherbugmaster', 'https://github.com/tulth', 'https://github.com/freakinhippie', 'https://github.com/mrjamesloganshirley', 'https://github.com/Ursescu', 'https://github.com/ilohmar', 'https://github.com/rontav', 'https://github.com/glebliutsko']}"
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/orestisfl,50,https://github.com/i3/i3/pull/3085#issuecomment-753547747,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename",@Airblader I rebased. Not sure if there is any point in adding more tests here since this uses i3 internals and is hard to test because of mouse movements. Main thing left is documentation.,True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/adam4235,51,https://github.com/i3/i3/pull/3085#issuecomment-756303857,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename",I'd be happy to test this and give feedback.  Does that mean I need to build the code?  I tried downloading the branch and building it according to the instructions here but I got some errors.  Where should I ask for help with the build?  (I've never built i3 before.),True,{'THUMBS_UP': ['https://github.com/Airblader']}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/orestisfl,52,https://github.com/i3/i3/pull/3085#issuecomment-756653793,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","@adam4235 Thanks, that would be helpful. What errors did you get? Make sure you also have installed the dependencies that you will need: https://github.com/Airblader/i3/wiki/Building-from-source",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/Airblader,53,https://github.com/i3/i3/pull/3085#issuecomment-756658053,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","If your distribution has some git/vcs package for i3, a good alternative would also be to use that but just exchange the git URL used for building.",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/Ursescu,54,https://github.com/i3/i3/pull/3085#issuecomment-756660544,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","Hi, I would also like to test this out. (I actually did when this first came out, but my distro package manager removed my hand crafted i3-package). I would like to know if this is a conflict free merge on top of i3-gaps (what I am currently using).",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/Airblader,55,https://github.com/i3/i3/pull/3085#issuecomment-756664873,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","@Ursescu Seems that way. I've pushed the branch tiling-drag on the i3-gaps repository which is the current i3-gaps HEAD with this branch merged in. (Edit: to clarify, I only did this for convenience for people who want to try this out but use i3-gaps, I don't intend to maintain that branch; we either merge it here or nowhere)",True,"{'THUMBS_UP': ['https://github.com/orestisfl', 'https://github.com/Ursescu']}"
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/adam4235,56,https://github.com/i3/i3/pull/3085#issuecomment-756753525,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","@adam4235 Thanks, that would be helpful. What errors did you get? Make sure you also have installed the dependencies that you will need: https://github.com/Airblader/i3/wiki/Building-from-source

Thanks, it was a dependency issue and I got it built now.  I'd suggest that the Hacking How To should be updated with the dependencies or a link to them.",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/adam4235,57,https://github.com/i3/i3/pull/3085#issuecomment-756939033,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","I've been trying it out for a bit.  First, some background on the way I use i3: I set ""workspace_layout tabbed"" in my config file, and mostly just have a bunch of windows in that tab group, with only one filling the screen at a time, and switch between them, like a bunch of maximized windows in a floating window manager.  If I want to see 2 at a time horizontally, I move a window to the right of all the other windows, or move it below to arrange vertically.  I rarely / never use h/v split containers, because my use cases aren't complicated enough to need them.
Here are some initial impressions of the tiling drag:
-I wasn't expecting to have to hold the Windows ($mod) key to do the dragging.  My naive expectation was to be able to click and drag the title bar of a window in order to move that window, i.e. drag it to the right edge of the screen to split horizontally and to the bottom of the screen to split vertically.  In fact, at first I didn't think I was using the modified i3 executable because nothing happened when I tried to do that.  (Ideally, it would also make sense to drag one title bar onto another title bar to switch their places in a tabbed layout, but that seems like it should be a separate change.)
Since people from floating window managers are used to moving windows by clicking and dragging the titlebar, it would make sense for clicking and dragging the titlebar to also move windows in a tiling window manager, for a different definition of ""move"".
-Once I arranged windows horizontally or vertically by moving a window to the right or below, I had some difficulty putting it back.  After trial and error it seems that in normal circumstances the way to do that is to drag one window to the middle of the other one.  However, in some cases I ended up creating a V or H split by accident, and once I did I found it difficult to get rid of since I never use them.  I was expecting dragging one to the center of the other to do so, as it does when I've arranged them horizontally / vertically by a move command, but dragging to the center did nothing once I had (accidentally) created a split container.  After reading the design at this comment, I figured out that I had created the H/V split by moving to the wrong region, and to get it back I had to drag to the outer region to do a move.
-Relatedly, if I have many windows open and want to split one horizontally, I can't do that with a tiling drag, or for that matter, the keyboard, from within my tabbed layout, unless the one I want to split is the rightmost (or leftmost) in the tabbed group.  I have to move the window all the way to the right (or left) and then do one more move to cause the split.  I normally do this by pushing a keyboard shortcut repeatedly to move the window all the way to to the right until it splits (maybe this is a suboptimal and weird way of doing this and is unrelated to this bug?).  With the mouse, this would take many drag and drops and isn't feasible.  But, if it were the case that dragging the titlebar of a window over other titlebars in a tabbed layout caused them to switch places, then I could drag the window all the way to the right and let go to do the horizontal split.
Hopefully that provides some feedback from the perspective of someone who uses i3 in a naive / simplistic way.  Basically, my simplistic use case would be to drag a window to the right to move it to the right beside my other windows, or drag it down to move it below the other windows.  Then when I'm done looking at 2 windows at once, drag it back over the other windows to put it back.  It would be great if there was an option to just have 4 regions to drag to, instead of 8, so that this simple use case wouldn't accidentally introduce weird effects.",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/clapbr,58,https://github.com/i3/i3/pull/3085#issuecomment-756948486,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","-I wasn't expecting to have to hold the Windows ($mod) key to do the dragging. My naive expectation was to be able to click and drag the title bar of a window in order to move that window, i.e. drag it to the right edge of the screen to split horizontally and to the bottom of the screen to split vertically. In fact, at first I didn't think I was using the modified i3 executable because nothing happened when I tried to do that. (Ideally, it would also make sense to drag one title bar onto another title bar to switch their places in a tabbed layout, but that seems like it should be a separate change.)
Since people from floating window managers are used to moving windows by clicking and dragging the titlebar, it would make sense for clicking and dragging the titlebar to also move windows in a tiling window manager, for a different definition of ""move"".

That's how sway does it FWIW. Works great for me (quadriplegic with a trackball)",True,{'THUMBS_UP': ['https://github.com/adam4235']}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/Airblader,59,https://github.com/i3/i3/pull/3085#issuecomment-756956117,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","Thanks @adam4235 for the feedback! That's very valuable.

I wasn't expecting to have to hold the Windows ($mod) key to do the dragging.

I agree with that expectation. It's also consistent with dragging floating windows. Unless there's a reason I'm not aware of (@orestisfl ?) we should change that.",True,{'THUMBS_UP': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/orestisfl,60,https://github.com/i3/i3/pull/3085#issuecomment-757140438,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","@Airblader I see the TODOs have a checked ""Initiate tiling drag from titlebar"". It probably broke somewhere in the process. I'll see what's wrong.",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/orestisfl,61,https://github.com/i3/i3/pull/3085#issuecomment-757230269,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename",Oh I think there is an important reason why tiling drag cannot be initiated from the titlebar: dragging the titlebar resizes inside vertical containers,True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/adam4235,62,https://github.com/i3/i3/pull/3085#issuecomment-757355337,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","Oh I think there is an important reason why tiling drag cannot be initiated from the titlebar: dragging the titlebar resizes inside vertical containers

Hmm, I note that there is currently a discrepancy in resizing windows with the mouse.  When resizing windows that are arranged horizontally, I have to grab a tiny border between them (it's so tiny that I sometimes miss and have to try again).  But when resizing windows that are arranged vertically, I can grab the title bar, which is much larger.  (I think some people use i3-gaps to get around this discrepancy.)
I also note that in floating window managers, and for that matter floating windows in i3, resizing involves grabbing a border.
Would it be fair to say that the reason clicking and dragging the title bar currently causes a resize is because, until now, there was nothing else for it to do?",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/Airblader,63,https://github.com/i3/i3/pull/3085#issuecomment-757359723,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","I think I agree with what I assume @adam4235 is getting at; for vertical splits, we could only let the border do the resize, but dragging the titlebar itself could do the tiling drag. I think that's a reasonable change since horizontal splits behave that way and thus this is more or less making it more consistent and using the fruits of that for the new feature. WDYT @orestisfl ?",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/Ursescu,64,https://github.com/i3/i3/pull/3085#issuecomment-757473645,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","@Airblader Thanks for the i3 gaps branch, worked like a charm.
For now I have one observation, I would like that when I want to move a window on one edge of the screen, I can drag the mouse to the end of the monitor. I think this is a problem with gaps because when I put the cursor on the gap at the edge, the tilling window drag white guideline will disappear.

  
    
    

    test.mp4",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/Airblader,65,https://github.com/i3/i3/pull/3085#issuecomment-757684016,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","Yeah, unfortunately I think i3-gaps will require some additional changes for this after it is merged into i3. This is a good thing to be aware of. I don't know I'll have the time to address this myself, so either @orestisfl wants to fix this in i3-gaps afterwards as well or I might have to stub out this feature until someone can contribute a fix. We'll see.",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/orestisfl,66,https://github.com/i3/i3/pull/3085#issuecomment-763820512,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","I think I agree with what I assume @adam4235 is getting at; for vertical splits, we could only let the border do the resize, but dragging the titlebar itself could do the tiling drag. I think that's a reasonable change since horizontal splits behave that way and thus this is more or less making it more consistent and using the fruits of that for the new feature. WDYT @orestisfl ?

But there is no border on the container with the title. You would have to focus the window on top first and then drag its border.",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/ra-om,67,https://github.com/i3/i3/pull/3085#issuecomment-815376265,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","I think I agree with what I assume @adam4235 is getting at; for vertical splits, we could only let the border do the resize, but dragging the titlebar itself could do the tiling drag. I think that's a reasonable change since horizontal splits behave that way and thus this is more or less making it more consistent and using the fruits of that for the new feature. WDYT @orestisfl ?

But there is no border on the container with the title. You would have to focus the window on top first and then drag its border.

With focus_follows_mouse disabled, if you click right on the border on the unfocused window you can still resize on the first click. I don't see a problem.",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/ra-om,68,https://github.com/i3/i3/pull/3085#issuecomment-817326998,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","I've made a script that provides most of this functionality, including tab/stack support. The only significant lack I think are the visual indicators in real-time.

roughly the zones where the window is going to end up, each margin is 40% of the window's dimension.
The script is designed to right-click then drag the window, but it's easy to change to any other button.
https://github.com/ra-om/scripts
Bind the file mouse-id to i3's config and point it to MoveWindowsWithMouse, I was too lazy to reimplement the little bash script in python.
I lack the time and knowledge to help implement this PR, but maybe this'll be enough for the impatient.",True,"{'THUMBS_UP': ['https://github.com/SemjonWilke', 'https://github.com/msvalina']}"
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/orestisfl,69,https://github.com/i3/i3/pull/3085#issuecomment-963637310,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","@Airblader ok, ready (again)",True,{'EYES': ['https://github.com/Syphdias']}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/stapelberg,70,https://github.com/i3/i3/pull/3085#issuecomment-964890475,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","Got a chance to try this out. Here are a few notes:

The highlighting of the drag destination is good, but I wonder if we could add short explanatory text, like “add to this container” or “create new split container”? It’s not 100% intuitive to me which target does what (I think I figured out most targets, but…), and I bet the same is true for many users, too :) (Could be done in a follow-up change, too.)
I managed to crash i3 with certain drags. Not sure if the PR should already be crash-free, so let me know if you can’t reproduce and I can grab more details.",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/orestisfl,71,https://github.com/i3/i3/pull/3085#issuecomment-964899319,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","Michael, thank you for your points.

That's a nice idea but I would prefer to have it as a follow-up.
Yes, this should be crash-free maybe I introduced a bug with recent changes. Would love to have some reproduction instructions.",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/stapelberg,72,https://github.com/i3/i3/pull/3085#issuecomment-964901468,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename",Sounds good. I’ll try again to reproduce the crashes and let you know. Good work on this PR!,True,{'THUMBS_UP': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/orestisfl,73,https://github.com/i3/i3/pull/3085#issuecomment-965792051,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","Improved IMO behavior regarding tabbed / stacked parents when using the outer indicator. Now, con will move next to the tabbed target.
old: https://user-images.githubusercontent.com/5778622/141200767-eb3721a3-9c85-4956-a48f-34b7fe4cf510.mp4
new: https://user-images.githubusercontent.com/5778622/141200124-9f0359d1-c61d-4e2f-9465-ecec609c653b.mp4",True,"{'HEART': ['https://github.com/NiclasEriksen', 'https://github.com/sthen', 'https://github.com/SemjonWilke', 'https://github.com/Ursescu']}"
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/stapelberg,74,https://github.com/i3/i3/pull/3085#issuecomment-987120609,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","Sounds good. I’ll try again to reproduce the crashes and let you know. Good work on this PR!

Here’s the backtrace:
https://gist.github.com/stapelberg/e81415dca5287ebbbe3de326e09bafb7
Here’s the log:
https://logs.i3wm.org/logs/6283859616333824.bz2
I just attached a debugger and started dragging windows around without much thought. The debugger stopped soon enough. (Not sure if this helps to reproduce, just wanted to mention it.)
Let me know if the above isn’t sufficient and I can try going at this in a more deliberate way.",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/orestisfl,75,https://github.com/i3/i3/pull/3085#issuecomment-987204964,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","Thanks Michael. Now it's trivial to reproduce :) Surprised this didn't happen to me.
Pushed a fix.",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/stapelberg,76,https://github.com/i3/i3/pull/3085#issuecomment-997229325,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","Pushed a fix.

Thanks, I can no longer trigger a crash now :)",True,"{'THUMBS_UP': ['https://github.com/orestisfl', 'https://github.com/Ursescu', 'https://github.com/victordiaz', 'https://github.com/RealTheSunCat'], 'HOORAY': ['https://github.com/SemjonWilke']}"
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/victordiaz,77,https://github.com/i3/i3/pull/3085#issuecomment-1097713333,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename",any advancement on this? I think it might be incredibly useful for mouse-based workflows!,True,"{'THUMBS_UP': ['https://github.com/jubnzv', 'https://github.com/Konkrad']}"
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/orestisfl,78,https://github.com/i3/i3/pull/3085#issuecomment-1097889067,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename",Waiting for a review AFAIK,True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/Airblader,79,https://github.com/i3/i3/pull/3085#issuecomment-1098763314,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename",I will try to review this soon (understandably this is a bit more work here). Of course it would be extremely helpful for others to run this locally to capture any potential crashes.,True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/Airblader,80,https://github.com/i3/i3/pull/3085#issuecomment-1110633016,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename",@orestisfl Would you be able to merge & test this in i3-gaps as well to make sure everything works (no idea whether this is even any effort).,True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/dechimp,81,https://github.com/i3/i3/pull/3085#issuecomment-1110933219,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename",I've been daily-driving i3 on @orestisfl's branch for over a month without noticing any issues. I have multiple monitors as well. Excited to see this merge.,True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/opalmay,82,https://github.com/i3/i3/pull/3085#issuecomment-1113957808,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","I've been running this with i3-gaps, it mostly works, but dragging into the middle section doesn't consistently act like moving containers to marks. Maybe I'm misusing it or misunderstanding the feature somehow.",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/orestisfl,83,https://github.com/i3/i3/pull/3085#issuecomment-1113964581,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","Can you give examples please?
…
On Sat, 30 Apr 2022, 11:35 opalmay, ***@***.***> wrote:
 I've been running this with i3-gaps, it mostly works, but dragging into
 the middle section doesn't consistently act like moving containers to
 marks. Maybe I'm misusing it or misunderstanding the feature somehow.

 —
 Reply to this email directly, view it on GitHub
 <#3085 (comment)>, or
 unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ABMCZPT32DX5CIEV6P6GZWDVHT5EVANCNFSM4EH3YDJQ>
 .
 You are receiving this because you were mentioned.Message ID:
 ***@***.***>",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/phwelo,84,https://github.com/i3/i3/pull/3085#issuecomment-1116803953,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","Can you give examples please?
…
On Sat, 30 Apr 2022, 11:35 opalmay, @.> wrote: I've been running this with i3-gaps, it mostly works, but dragging into the middle section doesn't consistently act like moving containers to marks. Maybe I'm misusing it or misunderstanding the feature somehow. — Reply to this email directly, view it on GitHub <#3085 (comment)>, or unsubscribe https://github.com/notifications/unsubscribe-auth/ABMCZPT32DX5CIEV6P6GZWDVHT5EVANCNFSM4EH3YDJQ . You are receiving this because you were mentioned.Message ID: @.>

I am testing this on gaps-next.  The middle-box inconsistencies are certainly there.  I tried to capture them in a video here https://youtu.be/s9-4OS-GgvA
As far as I can tell so far, it seems like dragging to any other position besides center works great.  unfortunately it's hard to predict the behavior of the center mark right now.",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/RealTheSunCat,85,https://github.com/i3/i3/pull/3085#issuecomment-1136006018,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","I'm running this fork and love how it works! However it seems resizing tiled windows seems to have a chance of crashing. I can reproduce a crash by opening two windows side-by-side and resizing them repeatedly for a few seconds. This didn't happen on stock i3 built from here.
i3 gives me an option to save a backtrace, but I'm not certain where this is saved. If I find it, I'll attach it in an edit to this comment.",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/stapelberg,86,https://github.com/i3/i3/pull/3085#issuecomment-1136070411,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","Please see https://i3wm.org/docs/debugging.html#_on_crashes_obtaining_a_backtrace for details regarding the backtrace. Thanks for providing one, that would be super helpful!",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/RealTheSunCat,87,https://github.com/i3/i3/pull/3085#issuecomment-1136399930,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","Well this is awkward... the backtrace file just contains the text No stack.
I have GDB installed, and I checked that the i3 executable was not stripped.",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/dechimp,88,https://github.com/i3/i3/pull/3085#issuecomment-1136405836,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","Kind of curious what causes the crashes for you.  I've been daily-driving
orestisfl/i3 for 3+ months and havent noticed anything abnormal.
…
On Tue, May 24, 2022 at 2:28 PM RealTheSunCat ***@***.***> wrote:
 Well this is awkward... the backtrace file just contains the text No
 stack.
 I have GDB installed, and I checked that the i3 executable was not
 stripped.

 —
 Reply to this email directly, view it on GitHub
 <#3085 (comment)>, or
 unsubscribe
 <https://github.com/notifications/unsubscribe-auth/AAFWJVZ65HX2ZKSRD3H34UDVLU3XDANCNFSM4EH3YDJQ>
 .
 You are receiving this because you are subscribed to this thread.Message
 ID: ***@***.***>",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/RealTheSunCat,89,https://github.com/i3/i3/pull/3085#issuecomment-1136417743,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","Me, too! It's weirdly consistent, as well. I am able to reproduce it by just opening a new window and resizing it a couple of times. After restarting i3 in place (pressing r), it does not crash anymore.
I've attached a video of the crash.
https://user-images.githubusercontent.com/44881120/170129578-9cdb706a-8df1-439e-98c7-65c14627ad44.mp4",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/stapelberg,90,https://github.com/i3/i3/pull/3085#issuecomment-1137452772,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","Well this is awkward... the backtrace file just contains the text No stack.
I have GDB installed, and I checked that the i3 executable was not stripped.

Weird. When you switch to a text console (or SSH into your machine) and attach gdb to the i3 process, does backtrace full result in stack traces?

I am able to reproduce it by just opening a new window and resizing it a couple of times. After restarting i3 in place (pressing r), it does not crash anymore.

Can you add a new user account to your computer (so that all configs are back to their defaults) and reproduce it with a fresh i3 config, too? If yes, can you provide a debug log of your i3 session up until the crash? That might contain enough clues to track this down. See https://i3wm.org/docs/debugging.html for details on logging.",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/orestisfl,91,https://github.com/i3/i3/pull/3085#issuecomment-1137478774,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","Well this is awkward... the backtrace file just contains the text No stack. I have GDB installed, and I checked that the i3 executable was not stripped.

You probably need echo 0 | sudo tee /proc/sys/kernel/yama/ptrace_scope",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/RealTheSunCat,92,https://github.com/i3/i3/pull/3085#issuecomment-1139062850,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","You probably need echo 0 | sudo tee /proc/sys/kernel/yama/ptrace_scope

Ah-ha! That allowed me to get a backtrace! I've attached it here:
i3-backtrace.717.0.txt

Can you add a new user account to your computer (so that all configs are back to their defaults) and reproduce it with a fresh i3 config, too?

I created a new user with an empty home, and was unable to reproduce it... so it's probably something about my setup that causes this crash. Hrm. I'm willing to spend the time to help debug this, but I don't remember exactly how I set up what I'm currently running, so I'm not sure I can easily recreate a MWE.",True,{}
i3/i3,https://github.com/i3/i3,3085,2017-12-12T13:04:52Z,,2022-05-27T19:55:37Z,OPEN,False,849,23,13,https://github.com/orestisfl,"Tiling drag, take 3",5,[],https://github.com/i3/i3/pull/3085,https://github.com/RealTheSunCat,93,https://github.com/i3/i3/pull/3085#issuecomment-1139985818,"Fixes #2643.
This is a continuation of #2653.
I have changed the behaviour for the inner region from #2653. The inner region now behaves like move container to mark and supports no direction. This reduces the changes to core con.c functions and is simpler. It was also enough for the support of stacked & tabbed containers without any extra work.
The code needs some polishing here and there but I hope that the core functionality works as intended with zero crashes. I have opened this PR to get some first feedback and hopefully get some people to run the code on their machines.
Current status
TODOs
(removed completed items from #2653):

 Support stacks and tabs
 Drag onto the root window
 Initiate tiling drag from titlebar This would break resizing
 Emit move event properly on tiling drop.❓I need some help here, I don't know what the original intention was?
 Refactor insert_con_into() into con.c Why?
 Configure color of drop indicator❓ (even though using the focused color seems like a reasonable default, do we want to add the extra configuration?)
 Bug: i3 crashes if a window closes while the dragging is indicating to drop it onto that window.
 Accidentally mod + clicking a window can be annoying. Maybe only show the indicator after we have dragged the container outside of its original position.
 Add a way to disable the whole thing
 Only focus con if it had focus. To change this, route_click should also be modified since focus changes there.
 I think the indicator sizes need some work. The outer indicators are big in small windows and small in big windows.
 I am not sure if fb4fa33 is needed. Investigate?
 Moving an unfocused container from another output shouldn't make it focused #3200
 Resize from title bar w/ mouse broke I think
 For consistency: should dragging unfocused floating containers also not make them focused?
 Rearrange tabbed / stacked by dropping on the title? => out of scope
 dragging & swapping ? -- can be done in future PR
 Documentation: indicators + disable option.
 Squash commits better to remove unneeded changes from con.c, potentially cluttering git blame.
 Switch to meson
 Update release notes

Tests

 #3193
 dragging onto a bar
 dragging onto an empty workspace
 move events
 dragging onto a container that closes before the drag is complete
 config option
 dragging onto stacked / tabbed containers => out of scope
 more complicated layouts with a combination of orientations etc
 moving an unfocused container doesn't make it focused
 moving an unfocused container from another output doesn't make it focused
 moving fullscreen containers
 focus order
 update filename","You probably need echo 0 | sudo tee /proc/sys/kernel/yama/ptrace_scope

Yup, that gave me a real backtrace, thanks! Would be nice to add this to the i3 docs. I've attached it here. Looks like the resize_graphical_handler is causing the crash here.

Can you add a new user account to your computer (so that all configs are back to their defaults) and reproduce it with a fresh i3 config, too?

Huh! I added an account with an empty home, and this does not occur. I guess this means something is wrong with my setup specifically. I'm willing to help debug this, although recreating my setup step-by-step on this new account would be difficult as I have a lot of parts that I added since first installing it.",True,{'THUMBS_UP': ['https://github.com/SemjonWilke']}
i3/i3,https://github.com/i3/i3,3087,2017-12-13T14:34:58Z,2018-02-27T06:59:38Z,2018-03-19T10:43:49Z,MERGED,True,197,19,5,https://github.com/orestisfl, Fix focus order issues when encapsulating workspaces,2,[],https://github.com/i3/i3/pull/3087,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3087,"I found this issue while adding new tests for #2975. I think the testcases are enough to explain the problem.
I don't know if the solution can be more elegant.","I found this issue while adding new tests for #2975. I think the testcases are enough to explain the problem.
I don't know if the solution can be more elegant.",True,{}
i3/i3,https://github.com/i3/i3,3087,2017-12-13T14:34:58Z,2018-02-27T06:59:38Z,2018-03-19T10:43:49Z,MERGED,True,197,19,5,https://github.com/orestisfl, Fix focus order issues when encapsulating workspaces,2,[],https://github.com/i3/i3/pull/3087,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3087#issuecomment-366939874,"I found this issue while adding new tests for #2975. I think the testcases are enough to explain the problem.
I don't know if the solution can be more elegant.",Any opinions on this?,True,{}
i3/i3,https://github.com/i3/i3,3087,2017-12-13T14:34:58Z,2018-02-27T06:59:38Z,2018-03-19T10:43:49Z,MERGED,True,197,19,5,https://github.com/orestisfl, Fix focus order issues when encapsulating workspaces,2,[],https://github.com/i3/i3/pull/3087,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/3087#issuecomment-368587488,"I found this issue while adding new tests for #2975. I think the testcases are enough to explain the problem.
I don't know if the solution can be more elegant.",Up. I can also resolve the conflicts if you want.,True,{}
i3/i3,https://github.com/i3/i3,3087,2017-12-13T14:34:58Z,2018-02-27T06:59:38Z,2018-03-19T10:43:49Z,MERGED,True,197,19,5,https://github.com/orestisfl, Fix focus order issues when encapsulating workspaces,2,[],https://github.com/i3/i3/pull/3087,https://github.com/Airblader,4,https://github.com/i3/i3/pull/3087#issuecomment-368646172,"I found this issue while adding new tests for #2975. I think the testcases are enough to explain the problem.
I don't know if the solution can be more elegant.","Yeah, please resolve the conflicts. :-)",True,{}
i3/i3,https://github.com/i3/i3,3087,2017-12-13T14:34:58Z,2018-02-27T06:59:38Z,2018-03-19T10:43:49Z,MERGED,True,197,19,5,https://github.com/orestisfl, Fix focus order issues when encapsulating workspaces,2,[],https://github.com/i3/i3/pull/3087,https://github.com/orestisfl,5,https://github.com/i3/i3/pull/3087#issuecomment-368651894,"I found this issue while adding new tests for #2975. I think the testcases are enough to explain the problem.
I don't know if the solution can be more elegant.",Up,True,{}
i3/i3,https://github.com/i3/i3,3095,2017-12-20T12:28:39Z,2017-12-20T17:33:22Z,2017-12-20T17:33:29Z,MERGED,True,26,4,4,https://github.com/pallavagarwal07,Add support for relative coordinates in i3bar click events,1,[],https://github.com/i3/i3/pull/3095,https://github.com/pallavagarwal07,1,https://github.com/i3/i3/pull/3095,"The JSON in the stdin of the status_command would get 4 new parameters:
x_rel  - relative position of click w.r.t. block (x coord)
y_rel  - relative position of click w.r.t. block (y coord)
width  - width of block
height - height of block

This was discussed in #2767","The JSON in the stdin of the status_command would get 4 new parameters:
x_rel  - relative position of click w.r.t. block (x coord)
y_rel  - relative position of click w.r.t. block (y coord)
width  - width of block
height - height of block

This was discussed in #2767",True,{'THUMBS_UP': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,3095,2017-12-20T12:28:39Z,2017-12-20T17:33:22Z,2017-12-20T17:33:29Z,MERGED,True,26,4,4,https://github.com/pallavagarwal07,Add support for relative coordinates in i3bar click events,1,[],https://github.com/i3/i3/pull/3095,https://github.com/pallavagarwal07,2,https://github.com/i3/i3/pull/3095#issuecomment-353122684,"The JSON in the stdin of the status_command would get 4 new parameters:
x_rel  - relative position of click w.r.t. block (x coord)
y_rel  - relative position of click w.r.t. block (y coord)
width  - width of block
height - height of block

This was discussed in #2767","Since we are changing the JSON format, shouldn't the version number be updated? Right now the version number is always ""version"": 1.",True,{}
i3/i3,https://github.com/i3/i3,3095,2017-12-20T12:28:39Z,2017-12-20T17:33:22Z,2017-12-20T17:33:29Z,MERGED,True,26,4,4,https://github.com/pallavagarwal07,Add support for relative coordinates in i3bar click events,1,[],https://github.com/i3/i3/pull/3095,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3095#issuecomment-353124919,"The JSON in the stdin of the status_command would get 4 new parameters:
x_rel  - relative position of click w.r.t. block (x coord)
y_rel  - relative position of click w.r.t. block (y coord)
width  - width of block
height - height of block

This was discussed in #2767","Thanks. Can you start the list items uppercased, though? Also, please squash those commits into a single one that also mentions ""fixes #2767"" and we're good to go I think. :-)
We don't need to increment the version since this is a backwards compatible change.",True,{}
i3/i3,https://github.com/i3/i3,3095,2017-12-20T12:28:39Z,2017-12-20T17:33:22Z,2017-12-20T17:33:29Z,MERGED,True,26,4,4,https://github.com/pallavagarwal07,Add support for relative coordinates in i3bar click events,1,[],https://github.com/i3/i3/pull/3095,https://github.com/pallavagarwal07,4,https://github.com/i3/i3/pull/3095#issuecomment-353129667,"The JSON in the stdin of the status_command would get 4 new parameters:
x_rel  - relative position of click w.r.t. block (x coord)
y_rel  - relative position of click w.r.t. block (y coord)
width  - width of block
height - height of block

This was discussed in #2767",Done,True,{}
i3/i3,https://github.com/i3/i3,3095,2017-12-20T12:28:39Z,2017-12-20T17:33:22Z,2017-12-20T17:33:29Z,MERGED,True,26,4,4,https://github.com/pallavagarwal07,Add support for relative coordinates in i3bar click events,1,[],https://github.com/i3/i3/pull/3095,https://github.com/Airblader,5,https://github.com/i3/i3/pull/3095#issuecomment-353130202,"The JSON in the stdin of the status_command would get 4 new parameters:
x_rel  - relative position of click w.r.t. block (x coord)
y_rel  - relative position of click w.r.t. block (y coord)
width  - width of block
height - height of block

This was discussed in #2767",Thank you!,True,{}
i3/i3,https://github.com/i3/i3,3097,2017-12-20T18:46:52Z,2018-03-10T18:18:45Z,2018-03-10T18:18:45Z,MERGED,True,9,0,2,https://github.com/Airblader,Refocus focused window for FOCUS_IN events on the root window.,1,[],https://github.com/i3/i3/pull/3097,https://github.com/Airblader,1,https://github.com/i3/i3/pull/3097,"This deals with (admittedly somewhat misbehaving) clients which
use XSetInputFocus to take focus, but then don't properly restore
focus. This has been observed with TK apps, but also, e.g., Steam.
fixes #2722
fixes #3096","This deals with (admittedly somewhat misbehaving) clients which
use XSetInputFocus to take focus, but then don't properly restore
focus. This has been observed with TK apps, but also, e.g., Steam.
fixes #2722
fixes #3096",True,{}
i3/i3,https://github.com/i3/i3,3097,2017-12-20T18:46:52Z,2018-03-10T18:18:45Z,2018-03-10T18:18:45Z,MERGED,True,9,0,2,https://github.com/Airblader,Refocus focused window for FOCUS_IN events on the root window.,1,[],https://github.com/i3/i3/pull/3097,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3097#issuecomment-353149093,"This deals with (admittedly somewhat misbehaving) clients which
use XSetInputFocus to take focus, but then don't properly restore
focus. This has been observed with TK apps, but also, e.g., Steam.
fixes #2722
fixes #3096","Currently only to have the PR already, I'd like someone to run this for a few days first.",True,{}
i3/i3,https://github.com/i3/i3,3097,2017-12-20T18:46:52Z,2018-03-10T18:18:45Z,2018-03-10T18:18:45Z,MERGED,True,9,0,2,https://github.com/Airblader,Refocus focused window for FOCUS_IN events on the root window.,1,[],https://github.com/i3/i3/pull/3097,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/3097#issuecomment-353154103,"This deals with (admittedly somewhat misbehaving) clients which
use XSetInputFocus to take focus, but then don't properly restore
focus. This has been observed with TK apps, but also, e.g., Steam.
fixes #2722
fixes #3096",I'll run the patch. I don't use steam though (only from time to time and the bug did indeed affect me) or any other offending application.,True,{}
i3/i3,https://github.com/i3/i3,3097,2017-12-20T18:46:52Z,2018-03-10T18:18:45Z,2018-03-10T18:18:45Z,MERGED,True,9,0,2,https://github.com/Airblader,Refocus focused window for FOCUS_IN events on the root window.,1,[],https://github.com/i3/i3/pull/3097,https://github.com/Airblader,4,https://github.com/i3/i3/pull/3097#issuecomment-353156731,"This deals with (admittedly somewhat misbehaving) clients which
use XSetInputFocus to take focus, but then don't properly restore
focus. This has been observed with TK apps, but also, e.g., Steam.
fixes #2722
fixes #3096",I'd mostly want someone to run the patch to make sure there's no side effects causing regressions. So not using those apps is totally fine. Thanks for volunteering!,True,{}
i3/i3,https://github.com/i3/i3,3097,2017-12-20T18:46:52Z,2018-03-10T18:18:45Z,2018-03-10T18:18:45Z,MERGED,True,9,0,2,https://github.com/Airblader,Refocus focused window for FOCUS_IN events on the root window.,1,[],https://github.com/i3/i3/pull/3097,https://github.com/orestisfl,5,https://github.com/i3/i3/pull/3097#issuecomment-353862061,"This deals with (admittedly somewhat misbehaving) clients which
use XSetInputFocus to take focus, but then don't properly restore
focus. This has been observed with TK apps, but also, e.g., Steam.
fixes #2722
fixes #3096","I was stuck in a state where clicking on an empty workspace would not focus it. I restarted and the problem disappeared. Don't know how to reproduce or if it was caused by your patch (I also use the tiling drag patch and some others in parallel).
Just something to keep in mind.",True,{}
i3/i3,https://github.com/i3/i3,3097,2017-12-20T18:46:52Z,2018-03-10T18:18:45Z,2018-03-10T18:18:45Z,MERGED,True,9,0,2,https://github.com/Airblader,Refocus focused window for FOCUS_IN events on the root window.,1,[],https://github.com/i3/i3/pull/3097,https://github.com/Airblader,6,https://github.com/i3/i3/pull/3097#issuecomment-353941376,"This deals with (admittedly somewhat misbehaving) clients which
use XSetInputFocus to take focus, but then don't properly restore
focus. This has been observed with TK apps, but also, e.g., Steam.
fixes #2722
fixes #3096","I think you might have a point here. What happens with this patch in a multi-monitor setup? Say you have two outputs O1 and O2. O1 has a window, which is focused. O2 shows an empty workspace. Now you move the mouse from O2 to O2. What happens here?",True,{}
i3/i3,https://github.com/i3/i3,3097,2017-12-20T18:46:52Z,2018-03-10T18:18:45Z,2018-03-10T18:18:45Z,MERGED,True,9,0,2,https://github.com/Airblader,Refocus focused window for FOCUS_IN events on the root window.,1,[],https://github.com/i3/i3/pull/3097,https://github.com/orestisfl,7,https://github.com/i3/i3/pull/3097#issuecomment-354106531,"This deals with (admittedly somewhat misbehaving) clients which
use XSetInputFocus to take focus, but then don't properly restore
focus. This has been observed with TK apps, but also, e.g., Steam.
fixes #2722
fixes #3096","It doesn't happen reliably. I've only noticed it with mouse clicks, not mouse movement since I don't use focus_follows_mouse. I'll try running i3 without your patch for a few days to see if the issue is elsewhere.",True,{}
i3/i3,https://github.com/i3/i3,3097,2017-12-20T18:46:52Z,2018-03-10T18:18:45Z,2018-03-10T18:18:45Z,MERGED,True,9,0,2,https://github.com/Airblader,Refocus focused window for FOCUS_IN events on the root window.,1,[],https://github.com/i3/i3/pull/3097,https://github.com/ashkitten,8,https://github.com/i3/i3/pull/3097#issuecomment-354566132,"This deals with (admittedly somewhat misbehaving) clients which
use XSetInputFocus to take focus, but then don't properly restore
focus. This has been observed with TK apps, but also, e.g., Steam.
fixes #2722
fixes #3096",fwiw i'm not seeing any side effects on my end,True,{}
i3/i3,https://github.com/i3/i3,3097,2017-12-20T18:46:52Z,2018-03-10T18:18:45Z,2018-03-10T18:18:45Z,MERGED,True,9,0,2,https://github.com/Airblader,Refocus focused window for FOCUS_IN events on the root window.,1,[],https://github.com/i3/i3/pull/3097,https://github.com/orestisfl,9,https://github.com/i3/i3/pull/3097#issuecomment-354566362,"This deals with (admittedly somewhat misbehaving) clients which
use XSetInputFocus to take focus, but then don't properly restore
focus. This has been observed with TK apps, but also, e.g., Steam.
fixes #2722
fixes #3096",Do you use a second monitor?,True,{}
i3/i3,https://github.com/i3/i3,3097,2017-12-20T18:46:52Z,2018-03-10T18:18:45Z,2018-03-10T18:18:45Z,MERGED,True,9,0,2,https://github.com/Airblader,Refocus focused window for FOCUS_IN events on the root window.,1,[],https://github.com/i3/i3/pull/3097,https://github.com/ashkitten,10,https://github.com/i3/i3/pull/3097#issuecomment-354566977,"This deals with (admittedly somewhat misbehaving) clients which
use XSetInputFocus to take focus, but then don't properly restore
focus. This has been observed with TK apps, but also, e.g., Steam.
fixes #2722
fixes #3096",I do use a second monitor,True,{}
i3/i3,https://github.com/i3/i3,3097,2017-12-20T18:46:52Z,2018-03-10T18:18:45Z,2018-03-10T18:18:45Z,MERGED,True,9,0,2,https://github.com/Airblader,Refocus focused window for FOCUS_IN events on the root window.,1,[],https://github.com/i3/i3/pull/3097,https://github.com/orestisfl,11,https://github.com/i3/i3/pull/3097#issuecomment-355009282,"This deals with (admittedly somewhat misbehaving) clients which
use XSetInputFocus to take focus, but then don't properly restore
focus. This has been observed with TK apps, but also, e.g., Steam.
fixes #2722
fixes #3096",I can't really reproduce my problem right now.,True,{}
i3/i3,https://github.com/i3/i3,3097,2017-12-20T18:46:52Z,2018-03-10T18:18:45Z,2018-03-10T18:18:45Z,MERGED,True,9,0,2,https://github.com/Airblader,Refocus focused window for FOCUS_IN events on the root window.,1,[],https://github.com/i3/i3/pull/3097,https://github.com/Airblader,12,https://github.com/i3/i3/pull/3097#issuecomment-355010117,"This deals with (admittedly somewhat misbehaving) clients which
use XSetInputFocus to take focus, but then don't properly restore
focus. This has been observed with TK apps, but also, e.g., Steam.
fixes #2722
fixes #3096",What you saw might be related to #2778 or the issues related to that one. I think we should treat it as such for now and maybe go ahead with merging this. @stapelberg Agreed?,True,{}
i3/i3,https://github.com/i3/i3,3097,2017-12-20T18:46:52Z,2018-03-10T18:18:45Z,2018-03-10T18:18:45Z,MERGED,True,9,0,2,https://github.com/Airblader,Refocus focused window for FOCUS_IN events on the root window.,1,[],https://github.com/i3/i3/pull/3097,https://github.com/orestisfl,13,https://github.com/i3/i3/pull/3097#issuecomment-355011871,"This deals with (admittedly somewhat misbehaving) clients which
use XSetInputFocus to take focus, but then don't properly restore
focus. This has been observed with TK apps, but also, e.g., Steam.
fixes #2722
fixes #3096","(for the record I am neither for or against merging this, just documenting my problem)

What you saw might be related to #2778 or the issues related to that one

No, it's not like this. I can click other windows just not inside the non-focused, visible workspace.",True,{}
i3/i3,https://github.com/i3/i3,3097,2017-12-20T18:46:52Z,2018-03-10T18:18:45Z,2018-03-10T18:18:45Z,MERGED,True,9,0,2,https://github.com/Airblader,Refocus focused window for FOCUS_IN events on the root window.,1,[],https://github.com/i3/i3/pull/3097,https://github.com/Airblader,14,https://github.com/i3/i3/pull/3097#issuecomment-355105173,"This deals with (admittedly somewhat misbehaving) clients which
use XSetInputFocus to take focus, but then don't properly restore
focus. This has been observed with TK apps, but also, e.g., Steam.
fixes #2722
fixes #3096","OK. Actually we should look into that, it does sound like something that might be caused by this patch.",True,{}
i3/i3,https://github.com/i3/i3,3097,2017-12-20T18:46:52Z,2018-03-10T18:18:45Z,2018-03-10T18:18:45Z,MERGED,True,9,0,2,https://github.com/Airblader,Refocus focused window for FOCUS_IN events on the root window.,1,[],https://github.com/i3/i3/pull/3097,https://github.com/orestisfl,15,https://github.com/i3/i3/pull/3097#issuecomment-355674444,"This deals with (admittedly somewhat misbehaving) clients which
use XSetInputFocus to take focus, but then don't properly restore
focus. This has been observed with TK apps, but also, e.g., Steam.
fixes #2722
fixes #3096","Ok it happened again. I still have no idea how to reproduce it. My observation this time is that when it happens, it stays. Eg I can change workspaces using keys etc but I can never click on an empty workspace.
Clicking on windows, i3bar works as expected.",True,{}
i3/i3,https://github.com/i3/i3,3097,2017-12-20T18:46:52Z,2018-03-10T18:18:45Z,2018-03-10T18:18:45Z,MERGED,True,9,0,2,https://github.com/Airblader,Refocus focused window for FOCUS_IN events on the root window.,1,[],https://github.com/i3/i3/pull/3097,https://github.com/Airblader,16,https://github.com/i3/i3/pull/3097#issuecomment-356208785,"This deals with (admittedly somewhat misbehaving) clients which
use XSetInputFocus to take focus, but then don't properly restore
focus. This has been observed with TK apps, but also, e.g., Steam.
fixes #2722
fixes #3096",Perhaps this is some kind of race condition where focused is a closing client and we end up trying to focus a window that no longer exists. Or something like that.,True,{}
i3/i3,https://github.com/i3/i3,3097,2017-12-20T18:46:52Z,2018-03-10T18:18:45Z,2018-03-10T18:18:45Z,MERGED,True,9,0,2,https://github.com/Airblader,Refocus focused window for FOCUS_IN events on the root window.,1,[],https://github.com/i3/i3/pull/3097,https://github.com/siikamiika,17,https://github.com/i3/i3/pull/3097#issuecomment-359351938,"This deals with (admittedly somewhat misbehaving) clients which
use XSetInputFocus to take focus, but then don't properly restore
focus. This has been observed with TK apps, but also, e.g., Steam.
fixes #2722
fixes #3096","Some information probably related to this bug. i3 version 4.14.1, dual monitor
When I bindsym a script that invokes dmenu, like bindsym $mod+something exec script, dmenu doesn't (usually) respond to input. I can regain control over i3 by clicking another workspace with mouse. The script works fine when it isn't called by i3, though.
script:
#!/bin/bash
INPUT=$(echo | dmenu)
...
Similar thing happens with a tkinter python script, but it's possible to work around it by calling xdotool windowactivate $id ($id is the output of xdotool getactivewindow before creating the tkinter widget), then sleeping 0.1 sec and then calling root.destroy(). I don't know if there is some other, preferred way to let go of focus.
Edit:
the TK script (without the workaround) breaks focus handling regardless of how it's started, with i3 bindsym or not. It also accepts input when it's open but blocks other input after it's closed.
Also, i3-dmenu-desktop works fine while script (above) doesn't, as I saw @orestisf1993 mention that this comes and stays but I can't restart i3 right now to test if it goes away.",True,{}
i3/i3,https://github.com/i3/i3,3097,2017-12-20T18:46:52Z,2018-03-10T18:18:45Z,2018-03-10T18:18:45Z,MERGED,True,9,0,2,https://github.com/Airblader,Refocus focused window for FOCUS_IN events on the root window.,1,[],https://github.com/i3/i3/pull/3097,https://github.com/Airblader,18,https://github.com/i3/i3/pull/3097#issuecomment-370474029,"This deals with (admittedly somewhat misbehaving) clients which
use XSetInputFocus to take focus, but then don't properly restore
focus. This has been observed with TK apps, but also, e.g., Steam.
fixes #2722
fixes #3096","@stapelberg The majority of the feedback was positive, so perhaps we should merge this for now. If we do find proof that @orestisf1993 saw something caused by this we can fix it, but for now it seems to help more people than it does bad. What do you think?",True,{}
i3/i3,https://github.com/i3/i3,3097,2017-12-20T18:46:52Z,2018-03-10T18:18:45Z,2018-03-10T18:18:45Z,MERGED,True,9,0,2,https://github.com/Airblader,Refocus focused window for FOCUS_IN events on the root window.,1,[],https://github.com/i3/i3/pull/3097,https://github.com/stapelberg,19,https://github.com/i3/i3/pull/3097#issuecomment-370575872,"This deals with (admittedly somewhat misbehaving) clients which
use XSetInputFocus to take focus, but then don't properly restore
focus. This has been observed with TK apps, but also, e.g., Steam.
fixes #2722
fixes #3096","Sounds good, thanks!",True,{}
i3/i3,https://github.com/i3/i3,3097,2017-12-20T18:46:52Z,2018-03-10T18:18:45Z,2018-03-10T18:18:45Z,MERGED,True,9,0,2,https://github.com/Airblader,Refocus focused window for FOCUS_IN events on the root window.,1,[],https://github.com/i3/i3/pull/3097,https://github.com/stapelberg,20,https://github.com/i3/i3/pull/3097#issuecomment-370576290,"This deals with (admittedly somewhat misbehaving) clients which
use XSetInputFocus to take focus, but then don't properly restore
focus. This has been observed with TK apps, but also, e.g., Steam.
fixes #2722
fixes #3096","…though, maybe we should cut a release before?",True,{}
i3/i3,https://github.com/i3/i3,3097,2017-12-20T18:46:52Z,2018-03-10T18:18:45Z,2018-03-10T18:18:45Z,MERGED,True,9,0,2,https://github.com/Airblader,Refocus focused window for FOCUS_IN events on the root window.,1,[],https://github.com/i3/i3/pull/3097,https://github.com/Airblader,21,https://github.com/i3/i3/pull/3097#issuecomment-370576691,"This deals with (admittedly somewhat misbehaving) clients which
use XSetInputFocus to take focus, but then don't properly restore
focus. This has been observed with TK apps, but also, e.g., Steam.
fixes #2722
fixes #3096","Sure, that's fine by me!",True,{}
i3/i3,https://github.com/i3/i3,3097,2017-12-20T18:46:52Z,2018-03-10T18:18:45Z,2018-03-10T18:18:45Z,MERGED,True,9,0,2,https://github.com/Airblader,Refocus focused window for FOCUS_IN events on the root window.,1,[],https://github.com/i3/i3/pull/3097,https://github.com/Airblader,22,https://github.com/i3/i3/pull/3097#issuecomment-372051548,"This deals with (admittedly somewhat misbehaving) clients which
use XSetInputFocus to take focus, but then don't properly restore
focus. This has been observed with TK apps, but also, e.g., Steam.
fixes #2722
fixes #3096",@stapelberg This can be merged now then.,True,{}
i3/i3,https://github.com/i3/i3,3100,2017-12-24T08:51:22Z,2017-12-25T08:52:10Z,2017-12-25T09:25:09Z,MERGED,True,3,1,1,https://github.com/jolange,free last_motion_notify before returning,1,[],https://github.com/i3/i3/pull/3100,https://github.com/jolange,1,https://github.com/i3/i3/pull/3100,fixes #3086,fixes #3086,True,{}
i3/i3,https://github.com/i3/i3,3100,2017-12-24T08:51:22Z,2017-12-25T08:52:10Z,2017-12-25T09:25:09Z,MERGED,True,3,1,1,https://github.com/jolange,free last_motion_notify before returning,1,[],https://github.com/i3/i3/pull/3100,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3100#issuecomment-353850304,fixes #3086,Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3101,2017-12-25T09:45:32Z,2018-01-02T08:34:55Z,2018-01-02T08:36:01Z,MERGED,True,67,40,2,https://github.com/tpraxl,Add workspace vars to support DRY when customizing,2,[],https://github.com/i3/i3/pull/3101,https://github.com/tpraxl,1,https://github.com/i3/i3/pull/3101,"Relabeling the workspaces required the user to update the labels at least in two places of the i3 config file (switch to workspace + move focused container to workspace) to keep a consistent state.
This got even worse when the user started to reference the workspaces elsewhere, e.g. for assigning containers to specific workspaces.
This change supports the DRY principle for users. Relabeling the workspaces is now merely a matter of changing the respective variable ($ws1, $ws2, … $ws10).","Relabeling the workspaces required the user to update the labels at least in two places of the i3 config file (switch to workspace + move focused container to workspace) to keep a consistent state.
This got even worse when the user started to reference the workspaces elsewhere, e.g. for assigning containers to specific workspaces.
This change supports the DRY principle for users. Relabeling the workspaces is now merely a matter of changing the respective variable ($ws1, $ws2, … $ws10).",True,{}
i3/i3,https://github.com/i3/i3,3101,2017-12-25T09:45:32Z,2018-01-02T08:34:55Z,2018-01-02T08:36:01Z,MERGED,True,67,40,2,https://github.com/tpraxl,Add workspace vars to support DRY when customizing,2,[],https://github.com/i3/i3/pull/3101,https://github.com/tpraxl,2,https://github.com/i3/i3/pull/3101#issuecomment-354541651,"Relabeling the workspaces required the user to update the labels at least in two places of the i3 config file (switch to workspace + move focused container to workspace) to keep a consistent state.
This got even worse when the user started to reference the workspaces elsewhere, e.g. for assigning containers to specific workspaces.
This change supports the DRY principle for users. Relabeling the workspaces is now merely a matter of changing the respective variable ($ws1, $ws2, … $ws10).",@Airblader Just in case you didn't notice: the requested changes have been made.,True,{}
i3/i3,https://github.com/i3/i3,3101,2017-12-25T09:45:32Z,2018-01-02T08:34:55Z,2018-01-02T08:36:01Z,MERGED,True,67,40,2,https://github.com/tpraxl,Add workspace vars to support DRY when customizing,2,[],https://github.com/i3/i3/pull/3101,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3101#issuecomment-354542338,"Relabeling the workspaces required the user to update the labels at least in two places of the i3 config file (switch to workspace + move focused container to workspace) to keep a consistent state.
This got even worse when the user started to reference the workspaces elsewhere, e.g. for assigning containers to specific workspaces.
This change supports the DRY principle for users. Relabeling the workspaces is now merely a matter of changing the respective variable ($ws1, $ws2, … $ws10).","Yes, I will get to this soon. The holidays are keeping me a bit busy. It's on my list though, don't worry. :-)",True,{'THUMBS_UP': ['https://github.com/tpraxl']}
i3/i3,https://github.com/i3/i3,3101,2017-12-25T09:45:32Z,2018-01-02T08:34:55Z,2018-01-02T08:36:01Z,MERGED,True,67,40,2,https://github.com/tpraxl,Add workspace vars to support DRY when customizing,2,[],https://github.com/i3/i3/pull/3101,https://github.com/tpraxl,4,https://github.com/i3/i3/pull/3101#issuecomment-354542460,"Relabeling the workspaces required the user to update the labels at least in two places of the i3 config file (switch to workspace + move focused container to workspace) to keep a consistent state.
This got even worse when the user started to reference the workspaces elsewhere, e.g. for assigning containers to specific workspaces.
This change supports the DRY principle for users. Relabeling the workspaces is now merely a matter of changing the respective variable ($ws1, $ws2, … $ws10).",@Airblader Very well. Thanks. Wish you a Happy New Year.,True,{}
i3/i3,https://github.com/i3/i3,3101,2017-12-25T09:45:32Z,2018-01-02T08:34:55Z,2018-01-02T08:36:01Z,MERGED,True,67,40,2,https://github.com/tpraxl,Add workspace vars to support DRY when customizing,2,[],https://github.com/i3/i3/pull/3101,https://github.com/Airblader,5,https://github.com/i3/i3/pull/3101#issuecomment-354720789,"Relabeling the workspaces required the user to update the labels at least in two places of the i3 config file (switch to workspace + move focused container to workspace) to keep a consistent state.
This got even worse when the user started to reference the workspaces elsewhere, e.g. for assigning containers to specific workspaces.
This change supports the DRY principle for users. Relabeling the workspaces is now merely a matter of changing the respective variable ($ws1, $ws2, … $ws10).",Thanks!,True,{'THUMBS_UP': ['https://github.com/tpraxl']}
i3/i3,https://github.com/i3/i3,3102,2017-12-26T11:06:10Z,2018-01-17T20:24:53Z,2018-01-17T20:29:56Z,MERGED,True,9,20,1,https://github.com/jolange,tiling resize: remove minimum size (was 5%),1,[],https://github.com/i3/i3/pull/3102,https://github.com/jolange,1,https://github.com/i3/i3/pull/3102,"fixes #3071
Let's see if this causes any tests to fail. I somehow screwed up my local testing setup and did not manage to repair it yet.","fixes #3071
Let's see if this causes any tests to fail. I somehow screwed up my local testing setup and did not manage to repair it yet.",True,{}
i3/i3,https://github.com/i3/i3,3102,2017-12-26T11:06:10Z,2018-01-17T20:24:53Z,2018-01-17T20:29:56Z,MERGED,True,9,20,1,https://github.com/jolange,tiling resize: remove minimum size (was 5%),1,[],https://github.com/i3/i3/pull/3102,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3102#issuecomment-358433308,"fixes #3071
Let's see if this causes any tests to fail. I somehow screwed up my local testing setup and did not manage to repair it yet.",Thanks & sorry for the wait!,True,{}
i3/i3,https://github.com/i3/i3,3104,2017-12-27T08:30:32Z,2018-01-17T20:24:01Z,2018-01-17T20:29:38Z,MERGED,True,21,21,8,https://github.com/jolange,Testcase warnings,2,[],https://github.com/i3/i3/pull/3104,https://github.com/jolange,1,https://github.com/i3/i3/pull/3104,Fixed some warnings: redeclared and uninitialized variables.,Fixed some warnings: redeclared and uninitialized variables.,True,{}
i3/i3,https://github.com/i3/i3,3104,2017-12-27T08:30:32Z,2018-01-17T20:24:01Z,2018-01-17T20:29:38Z,MERGED,True,21,21,8,https://github.com/jolange,Testcase warnings,2,[],https://github.com/i3/i3/pull/3104,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3104#issuecomment-358433088,Fixed some warnings: redeclared and uninitialized variables.,Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3105,2017-12-27T16:53:12Z,2017-12-27T17:22:32Z,2017-12-28T02:35:44Z,MERGED,True,2,1,1,https://github.com/clonejo,Docs: state that pango markup in i3bar requires the use of a pango font.,1,[],https://github.com/i3/i3/pull/3105,https://github.com/clonejo,1,https://github.com/i3/i3/pull/3105,I was using the default font and it took me some hours to figure this out. Did not see it mentioned anywhere.,I was using the default font and it took me some hours to figure this out. Did not see it mentioned anywhere.,True,{}
i3/i3,https://github.com/i3/i3,3105,2017-12-27T16:53:12Z,2017-12-27T17:22:32Z,2017-12-28T02:35:44Z,MERGED,True,2,1,1,https://github.com/clonejo,Docs: state that pango markup in i3bar requires the use of a pango font.,1,[],https://github.com/i3/i3/pull/3105,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3105#issuecomment-354146218,I was using the default font and it took me some hours to figure this out. Did not see it mentioned anywhere.,Thank!,True,{}
i3/i3,https://github.com/i3/i3,3110,2018-01-05T00:19:00Z,2018-01-05T17:43:52Z,2018-01-05T17:43:52Z,MERGED,True,2,2,2,https://github.com/dikiaap,Add comment $mod+r in back to normal when resize window,1,[],https://github.com/i3/i3/pull/3110,https://github.com/dikiaap,1,https://github.com/i3/i3/pull/3110,,,True,{}
i3/i3,https://github.com/i3/i3,3110,2018-01-05T00:19:00Z,2018-01-05T17:43:52Z,2018-01-05T17:43:52Z,MERGED,True,2,2,2,https://github.com/dikiaap,Add comment $mod+r in back to normal when resize window,1,[],https://github.com/i3/i3/pull/3110,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3110#issuecomment-355618062,,Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3111,2018-01-06T15:23:53Z,2018-01-06T16:59:28Z,2018-01-06T16:59:31Z,MERGED,True,18,34,4,https://github.com/livanh,Avoid some code duplication,1,[],https://github.com/i3/i3/pull/3111,https://github.com/livanh,1,https://github.com/i3/i3/pull/3111,"Some code and checks in cmd_resize_tiling_width_height() can be replaced with a call to resize_find_tiling_participants(). To get the same behavior, resize_find_tiling_participants() is extended so it can also look for a resize target in two direction simultaneously: left+right or top+bottom.
The need for this change emerged in the discussion of #3036, it and can be reused in that PR as well.","Some code and checks in cmd_resize_tiling_width_height() can be replaced with a call to resize_find_tiling_participants(). To get the same behavior, resize_find_tiling_participants() is extended so it can also look for a resize target in two direction simultaneously: left+right or top+bottom.
The need for this change emerged in the discussion of #3036, it and can be reused in that PR as well.",True,{}
i3/i3,https://github.com/i3/i3,3111,2018-01-06T15:23:53Z,2018-01-06T16:59:28Z,2018-01-06T16:59:31Z,MERGED,True,18,34,4,https://github.com/livanh,Avoid some code duplication,1,[],https://github.com/i3/i3/pull/3111,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/3111#issuecomment-355760054,"Some code and checks in cmd_resize_tiling_width_height() can be replaced with a call to resize_find_tiling_participants(). To get the same behavior, resize_find_tiling_participants() is extended so it can also look for a resize target in two direction simultaneously: left+right or top+bottom.
The need for this change emerged in the discussion of #3036, it and can be reused in that PR as well.",Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3113,2018-01-06T22:19:59Z,2018-01-06T22:24:33Z,2022-02-07T16:52:38Z,MERGED,True,1,0,1,https://github.com/Airblader,Send success response for nop.,1,[],https://github.com/i3/i3/pull/3113,https://github.com/Airblader,1,https://github.com/i3/i3/pull/3113,fixes #3112,fixes #3112,True,{'THUMBS_UP': ['https://github.com/woodruffw']}
i3/i3,https://github.com/i3/i3,3123,2018-01-24T23:41:34Z,2018-07-06T22:07:32Z,2018-07-06T22:07:32Z,CLOSED,False,275,132,13,https://github.com/vesim987,[WIP] Left and right dockarea,3,"['waiting', 'stale']",https://github.com/i3/i3/pull/3123,https://github.com/vesim987,1,https://github.com/i3/i3/pull/3123,"This PR add support for vertical dock client.
TODO:

handle_strut_partial_change seem's to doesn't work
do something with dock overlapping
refactor render_output
write tests

fixes: #1129","This PR add support for vertical dock client.
TODO:

handle_strut_partial_change seem's to doesn't work
do something with dock overlapping
refactor render_output
write tests

fixes: #1129",True,"{'HEART': ['https://github.com/febs'], 'THUMBS_UP': ['https://github.com/op8867555']}"
i3/i3,https://github.com/i3/i3,3123,2018-01-24T23:41:34Z,2018-07-06T22:07:32Z,2018-07-06T22:07:32Z,CLOSED,False,275,132,13,https://github.com/vesim987,[WIP] Left and right dockarea,3,"['waiting', 'stale']",https://github.com/i3/i3/pull/3123,https://github.com/vesim987,2,https://github.com/i3/i3/pull/3123#issuecomment-360312142,"This PR add support for vertical dock client.
TODO:

handle_strut_partial_change seem's to doesn't work
do something with dock overlapping
refactor render_output
write tests

fixes: #1129","Oh, i broke commit history. How i can fix it?",True,{}
i3/i3,https://github.com/i3/i3,3123,2018-01-24T23:41:34Z,2018-07-06T22:07:32Z,2018-07-06T22:07:32Z,CLOSED,False,275,132,13,https://github.com/vesim987,[WIP] Left and right dockarea,3,"['waiting', 'stale']",https://github.com/i3/i3/pull/3123,https://github.com/okraits,3,https://github.com/i3/i3/pull/3123#issuecomment-360377208,"This PR add support for vertical dock client.
TODO:

handle_strut_partial_change seem's to doesn't work
do something with dock overlapping
refactor render_output
write tests

fixes: #1129",I guess you need to rebase your branch against the next branch.,True,{}
i3/i3,https://github.com/i3/i3,3123,2018-01-24T23:41:34Z,2018-07-06T22:07:32Z,2018-07-06T22:07:32Z,CLOSED,False,275,132,13,https://github.com/vesim987,[WIP] Left and right dockarea,3,"['waiting', 'stale']",https://github.com/i3/i3/pull/3123,https://github.com/Airblader,4,https://github.com/i3/i3/pull/3123#issuecomment-360385368,"This PR add support for vertical dock client.
TODO:

handle_strut_partial_change seem's to doesn't work
do something with dock overlapping
refactor render_output
write tests

fixes: #1129","Thanks for taking a shot at this! I really think this would be a cool feature to have in i3. As @okraits mentioned you'll need to rebase.
Once that is sorted out, two very high-level comments (I haven't reviewed the PR in detail yet):

It'd be good if you could write, in text form, some explanation as to how vertical dock clients fit into the container structure of i3 now. For one it'll help us understand, but I also think we'll need to document this a bit in, say, the hacking howto, as this is a change to the fundamental container structure.
Please don't rename things on the IPC (I just saw a ""dockarea"" → ""hdockarea""). This breaks compatibility which we'd like to avoid when possible. Having ""dockarea"" and ""vdockarea"" is not the ideal situation, but it's better than breaking IPC clients.

Let us know via comment when you rebased the PR!",True,{}
i3/i3,https://github.com/i3/i3,3123,2018-01-24T23:41:34Z,2018-07-06T22:07:32Z,2018-07-06T22:07:32Z,CLOSED,False,275,132,13,https://github.com/vesim987,[WIP] Left and right dockarea,3,"['waiting', 'stale']",https://github.com/i3/i3/pull/3123,https://github.com/vesim987,5,https://github.com/i3/i3/pull/3123#issuecomment-360479945,"This PR add support for vertical dock client.
TODO:

handle_strut_partial_change seem's to doesn't work
do something with dock overlapping
refactor render_output
write tests

fixes: #1129","@Airblader I've fixed this branch. There was ~170 commits difference... idk how I did this. I've just created new branch, and applied my latest commit, and renamed it.",True,{}
i3/i3,https://github.com/i3/i3,3123,2018-01-24T23:41:34Z,2018-07-06T22:07:32Z,2018-07-06T22:07:32Z,CLOSED,False,275,132,13,https://github.com/vesim987,[WIP] Left and right dockarea,3,"['waiting', 'stale']",https://github.com/i3/i3/pull/3123,https://github.com/Airblader,6,https://github.com/i3/i3/pull/3123#issuecomment-360712493,"This PR add support for vertical dock client.
TODO:

handle_strut_partial_change seem's to doesn't work
do something with dock overlapping
refactor render_output
write tests

fixes: #1129","add left and right position to i3bar

Please don't do this in this PR. It's a completely separate topic and one that has to be decided separately as well. I currently don't think we want a vertical mode for i3bar because we have no good answer to what the statusline should look like.",True,{}
i3/i3,https://github.com/i3/i3,3123,2018-01-24T23:41:34Z,2018-07-06T22:07:32Z,2018-07-06T22:07:32Z,CLOSED,False,275,132,13,https://github.com/vesim987,[WIP] Left and right dockarea,3,"['waiting', 'stale']",https://github.com/i3/i3/pull/3123,https://github.com/vesim987,7,https://github.com/i3/i3/pull/3123#issuecomment-360799796,"This PR add support for vertical dock client.
TODO:

handle_strut_partial_change seem's to doesn't work
do something with dock overlapping
refactor render_output
write tests

fixes: #1129",@Airblader do you have idea how to rewrite this part: https://github.com/vesim987/i3/blob/vertical-dockarea/src/handlers.c#L1376-L1415,True,{}
i3/i3,https://github.com/i3/i3,3123,2018-01-24T23:41:34Z,2018-07-06T22:07:32Z,2018-07-06T22:07:32Z,CLOSED,False,275,132,13,https://github.com/vesim987,[WIP] Left and right dockarea,3,"['waiting', 'stale']",https://github.com/i3/i3/pull/3123,https://github.com/op8867555,8,https://github.com/i3/i3/pull/3123#issuecomment-364640255,"This PR add support for vertical dock client.
TODO:

handle_strut_partial_change seem's to doesn't work
do something with dock overlapping
refactor render_output
write tests

fixes: #1129","Hi there, any progress on this? I tried this PR and found some problems:

Incorrect bar position when using multiple monitors
Incorrect bar position when running multiple bars
is_docked is not restore when loading json layout which would crash i3 when reloading

Here is some changes to fixes problems above:
vesim987/i3@vertical-dockarea...op8867555:6f4ba84f540a4ac74bef8fd09a2f495911e913ed
I'm new to i3, please take a look and point me out if I didn't do it right. :)",True,{}
i3/i3,https://github.com/i3/i3,3123,2018-01-24T23:41:34Z,2018-07-06T22:07:32Z,2018-07-06T22:07:32Z,CLOSED,False,275,132,13,https://github.com/vesim987,[WIP] Left and right dockarea,3,"['waiting', 'stale']",https://github.com/i3/i3/pull/3123,https://github.com/Airblader,9,https://github.com/i3/i3/pull/3123#issuecomment-399415203,"This PR add support for vertical dock client.
TODO:

handle_strut_partial_change seem's to doesn't work
do something with dock overlapping
refactor render_output
write tests

fixes: #1129",@vesim987 Are you continuing your work on this?,True,{}
i3/i3,https://github.com/i3/i3,3131,2018-02-07T08:01:53Z,2018-02-11T14:48:56Z,2018-02-11T16:44:15Z,MERGED,True,1,1,1,https://github.com/EdwardBetts,Correct spelling a mistake.,1,[],https://github.com/i3/i3/pull/3131,https://github.com/EdwardBetts,1,https://github.com/i3/i3/pull/3131,,,True,{}
i3/i3,https://github.com/i3/i3,3135,2018-02-11T13:28:07Z,2018-02-15T15:29:30Z,2018-02-15T15:29:30Z,MERGED,True,118,0,2,https://github.com/op8867555,Update EWMH atoms when closing inactive workspace,1,[],https://github.com/i3/i3/pull/3135,https://github.com/op8867555,1,https://github.com/i3/i3/pull/3135,"This PR is an attempt to fix #3126 by simply update EWMH atoms when an UnmapNotify received.
If it is ok, I'm thinking about writing tests for this, which one is better: creating a separated testcase or modifying existing ones?","This PR is an attempt to fix #3126 by simply update EWMH atoms when an UnmapNotify received.
If it is ok, I'm thinking about writing tests for this, which one is better: creating a separated testcase or modifying existing ones?",True,{}
i3/i3,https://github.com/i3/i3,3135,2018-02-11T13:28:07Z,2018-02-15T15:29:30Z,2018-02-15T15:29:30Z,MERGED,True,118,0,2,https://github.com/op8867555,Update EWMH atoms when closing inactive workspace,1,[],https://github.com/i3/i3/pull/3135,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3135#issuecomment-364757241,"This PR is an attempt to fix #3126 by simply update EWMH atoms when an UnmapNotify received.
If it is ok, I'm thinking about writing tests for this, which one is better: creating a separated testcase or modifying existing ones?","Thanks for taking a look at this! I think theoretically speaking the more appropriate place to do this would be somewhere in the logic that modifies the tree and actually closes the now empty and not active workspace, seeing how the EWMH atoms are regarding dekstops and not the individual window.",True,{}
i3/i3,https://github.com/i3/i3,3135,2018-02-11T13:28:07Z,2018-02-15T15:29:30Z,2018-02-15T15:29:30Z,MERGED,True,118,0,2,https://github.com/op8867555,Update EWMH atoms when closing inactive workspace,1,[],https://github.com/i3/i3/pull/3135,https://github.com/op8867555,3,https://github.com/i3/i3/pull/3135#issuecomment-364777916,"This PR is an attempt to fix #3126 by simply update EWMH atoms when an UnmapNotify received.
If it is ok, I'm thinking about writing tests for this, which one is better: creating a separated testcase or modifying existing ones?",I moved the code to tree_close_internal which modifying the tree and it only updates when closing a workspace container now.,True,{}
i3/i3,https://github.com/i3/i3,3135,2018-02-11T13:28:07Z,2018-02-15T15:29:30Z,2018-02-15T15:29:30Z,MERGED,True,118,0,2,https://github.com/op8867555,Update EWMH atoms when closing inactive workspace,1,[],https://github.com/i3/i3/pull/3135,https://github.com/Airblader,4,https://github.com/i3/i3/pull/3135#issuecomment-365036307,"This PR is an attempt to fix #3126 by simply update EWMH atoms when an UnmapNotify received.
If it is ok, I'm thinking about writing tests for this, which one is better: creating a separated testcase or modifying existing ones?","The change looks fine to me now. As far as tests go, a new test would be better here I think. Also, when you did that, please squash the commits together into a single commit. Thanks!",True,{}
i3/i3,https://github.com/i3/i3,3135,2018-02-11T13:28:07Z,2018-02-15T15:29:30Z,2018-02-15T15:29:30Z,MERGED,True,118,0,2,https://github.com/op8867555,Update EWMH atoms when closing inactive workspace,1,[],https://github.com/i3/i3/pull/3135,https://github.com/op8867555,5,https://github.com/i3/i3/pull/3135#issuecomment-365144398,"This PR is an attempt to fix #3126 by simply update EWMH atoms when an UnmapNotify received.
If it is ok, I'm thinking about writing tests for this, which one is better: creating a separated testcase or modifying existing ones?",Add the test and commits are squashed now. :),True,{}
i3/i3,https://github.com/i3/i3,3135,2018-02-11T13:28:07Z,2018-02-15T15:29:30Z,2018-02-15T15:29:30Z,MERGED,True,118,0,2,https://github.com/op8867555,Update EWMH atoms when closing inactive workspace,1,[],https://github.com/i3/i3/pull/3135,https://github.com/Airblader,6,https://github.com/i3/i3/pull/3135#issuecomment-365961997,"This PR is an attempt to fix #3126 by simply update EWMH atoms when an UnmapNotify received.
If it is ok, I'm thinking about writing tests for this, which one is better: creating a separated testcase or modifying existing ones?",Thank you!,True,{}
i3/i3,https://github.com/i3/i3,3138,2018-02-12T14:19:23Z,2018-02-19T06:03:04Z,2018-02-19T08:16:27Z,MERGED,True,55,34,5,https://github.com/clawoflight,"[WIP] Add default_{,floating_}border",1,[],https://github.com/i3/i3/pull/3138,https://github.com/clawoflight,1,https://github.com/i3/i3/pull/3138,"Implementation of #2702

 copy/rename new_{window,float} and associated states in parser-config/config.spec
 rename cfg_new_{window,float} in config_directives.c and update calls in tests
 extend the test case in 201-config-parser.t
 update the user guide","Implementation of #2702

 copy/rename new_{window,float} and associated states in parser-config/config.spec
 rename cfg_new_{window,float} in config_directives.c and update calls in tests
 extend the test case in 201-config-parser.t
 update the user guide",True,{}
i3/i3,https://github.com/i3/i3,3138,2018-02-12T14:19:23Z,2018-02-19T06:03:04Z,2018-02-19T08:16:27Z,MERGED,True,55,34,5,https://github.com/clawoflight,"[WIP] Add default_{,floating_}border",1,[],https://github.com/i3/i3/pull/3138,https://github.com/clawoflight,2,https://github.com/i3/i3/pull/3138#issuecomment-364936790,"Implementation of #2702

 copy/rename new_{window,float} and associated states in parser-config/config.spec
 rename cfg_new_{window,float} in config_directives.c and update calls in tests
 extend the test case in 201-config-parser.t
 update the user guide","While working on this, I found that there was no test coverage of the state DEFAULT_BORDER_PIXELS_PX (e.g. new_window pixel 10(px)? -- should I add that?",True,{}
i3/i3,https://github.com/i3/i3,3138,2018-02-12T14:19:23Z,2018-02-19T06:03:04Z,2018-02-19T08:16:27Z,MERGED,True,55,34,5,https://github.com/clawoflight,"[WIP] Add default_{,floating_}border",1,[],https://github.com/i3/i3/pull/3138,https://github.com/clawoflight,3,https://github.com/i3/i3/pull/3138#issuecomment-364939598,"Implementation of #2702

 copy/rename new_{window,float} and associated states in parser-config/config.spec
 rename cfg_new_{window,float} in config_directives.c and update calls in tests
 extend the test case in 201-config-parser.t
 update the user guide","I would welcome help getting the tests to run - they wouldn't run locally either, but that was before doing any change. Are the tests broken in next?",True,{}
i3/i3,https://github.com/i3/i3,3138,2018-02-12T14:19:23Z,2018-02-19T06:03:04Z,2018-02-19T08:16:27Z,MERGED,True,55,34,5,https://github.com/clawoflight,"[WIP] Add default_{,floating_}border",1,[],https://github.com/i3/i3/pull/3138,https://github.com/Airblader,4,https://github.com/i3/i3/pull/3138#issuecomment-365035451,"Implementation of #2702

 copy/rename new_{window,float} and associated states in parser-config/config.spec
 rename cfg_new_{window,float} in config_directives.c and update calls in tests
 extend the test case in 201-config-parser.t
 update the user guide","Are the tests broken in next?

No, AFAICT they are fine. Also, the failing tests make sense to me. You need to add the new config directives in one place so they are part of the expected output (which prints all config directives as possible options).
Apart from that and the userguide, this LGTM",True,{}
i3/i3,https://github.com/i3/i3,3138,2018-02-12T14:19:23Z,2018-02-19T06:03:04Z,2018-02-19T08:16:27Z,MERGED,True,55,34,5,https://github.com/clawoflight,"[WIP] Add default_{,floating_}border",1,[],https://github.com/i3/i3/pull/3138,https://github.com/clawoflight,5,https://github.com/i3/i3/pull/3138#issuecomment-365050823,"Implementation of #2702

 copy/rename new_{window,float} and associated states in parser-config/config.spec
 rename cfg_new_{window,float} in config_directives.c and update calls in tests
 extend the test case in 201-config-parser.t
 update the user guide","It may be that I did not fix all tests, but my problem is that I couldn't get them to run before starting to work on this... Which makes it hard to find what I missed now.",True,{}
i3/i3,https://github.com/i3/i3,3138,2018-02-12T14:19:23Z,2018-02-19T06:03:04Z,2018-02-19T08:16:27Z,MERGED,True,55,34,5,https://github.com/clawoflight,"[WIP] Add default_{,floating_}border",1,[],https://github.com/i3/i3/pull/3138,https://github.com/orestisfl,6,https://github.com/i3/i3/pull/3138#issuecomment-365051875,"Implementation of #2702

 copy/rename new_{window,float} and associated states in parser-config/config.spec
 rename cfg_new_{window,float} in config_directives.c and update calls in tests
 extend the test case in 201-config-parser.t
 update the user guide",The testsuite is documented: https://i3wm.org/docs/testsuite.html. Where did you have problems while following the instructions?,True,{}
i3/i3,https://github.com/i3/i3,3138,2018-02-12T14:19:23Z,2018-02-19T06:03:04Z,2018-02-19T08:16:27Z,MERGED,True,55,34,5,https://github.com/clawoflight,"[WIP] Add default_{,floating_}border",1,[],https://github.com/i3/i3/pull/3138,https://github.com/clawoflight,7,https://github.com/i3/i3/pull/3138#issuecomment-365052863,"Implementation of #2702

 copy/rename new_{window,float} and associated states in parser-config/config.spec
 rename cfg_new_{window,float} in config_directives.c and update calls in tests
 extend the test case in 201-config-parser.t
 update the user guide","I never managed to run them without 1 failure, even before changing anything.
Specifically, this is what happens (on clean next):
test-suite.log
Asked around on IRC, but no-one got back to me.",True,{}
i3/i3,https://github.com/i3/i3,3138,2018-02-12T14:19:23Z,2018-02-19T06:03:04Z,2018-02-19T08:16:27Z,MERGED,True,55,34,5,https://github.com/clawoflight,"[WIP] Add default_{,floating_}border",1,[],https://github.com/i3/i3/pull/3138,https://github.com/clawoflight,8,https://github.com/i3/i3/pull/3138#issuecomment-365946478,"Implementation of #2702

 copy/rename new_{window,float} and associated states in parser-config/config.spec
 rename cfg_new_{window,float} in config_directives.c and update calls in tests
 extend the test case in 201-config-parser.t
 update the user guide","Right, so I got the tests to run in CI - but I can still not run them locally.
This is what I get:

#   Failed test 'Error. You have specified 'C' as an Inline programming language.
# 
# I currently only know about the following languages:
#     Foo, foo
# 
# If you have installed a support module for this language, try deleting the
# config-x86_64-linux-thread-multi-5.026001 file from the following Inline DIRECTORY, and run again:
# 
#     /home/bennett/Github/i3/build/_Inline
# 
# (And if that works, please file a bug report.)
# 
#  at /home/bennett/Github/i3/build/../../i3/testcases/lib/i3test/XTEST.pm line 45.
# BEGIN failed--compilation aborted at /home/bennett/Github/i3/build/../../i3/testcases/lib/i3test/XTEST.pm line 45.
# Compilation failed in require at /home/bennett/Github/i3/build/../../i3/testcases/t/257-keypress-group1-fallback.t line 30.
# BEGIN failed--compilation aborted at /home/bennett/Github/i3/build/../../i3/testcases/t/257-keypress-group1-fallback.t line 30.
# '
#   at /home/bennett/Github/i3/build/../../i3/testcases/lib/TestWorker.pm line 53.

Any ideas? I thought I needed to install perl-inline-c (I'm on Arch), but that hasn't solved it.",True,{}
i3/i3,https://github.com/i3/i3,3138,2018-02-12T14:19:23Z,2018-02-19T06:03:04Z,2018-02-19T08:16:27Z,MERGED,True,55,34,5,https://github.com/clawoflight,"[WIP] Add default_{,floating_}border",1,[],https://github.com/i3/i3/pull/3138,https://github.com/clawoflight,9,https://github.com/i3/i3/pull/3138#issuecomment-365954364,"Implementation of #2702

 copy/rename new_{window,float} and associated states in parser-config/config.spec
 rename cfg_new_{window,float} in config_directives.c and update calls in tests
 extend the test case in 201-config-parser.t
 update the user guide","I finally got them to run by trying random things such as deleting ~/perl5, ~/.cpan, and rebuilding the perl code. In the end, it worked after running make check (which failed), then complete-run.pl, which succeeded for the first time.
Now, make check seems to work consistently...
Maybe I should edit docs/testsuite to mention the inline c requirement?",True,{}
i3/i3,https://github.com/i3/i3,3138,2018-02-12T14:19:23Z,2018-02-19T06:03:04Z,2018-02-19T08:16:27Z,MERGED,True,55,34,5,https://github.com/clawoflight,"[WIP] Add default_{,floating_}border",1,[],https://github.com/i3/i3/pull/3138,https://github.com/Airblader,10,https://github.com/i3/i3/pull/3138#issuecomment-365958991,"Implementation of #2702

 copy/rename new_{window,float} and associated states in parser-config/config.spec
 rename cfg_new_{window,float} in config_directives.c and update calls in tests
 extend the test case in 201-config-parser.t
 update the user guide","Maybe I should edit docs/testsuite to mention the inline c requirement?

Sure, but let's do it in a separate PR! :-)
The changes LGTM now. Could you just squash them? Then we can go ahead and merge.",True,{}
i3/i3,https://github.com/i3/i3,3138,2018-02-12T14:19:23Z,2018-02-19T06:03:04Z,2018-02-19T08:16:27Z,MERGED,True,55,34,5,https://github.com/clawoflight,"[WIP] Add default_{,floating_}border",1,[],https://github.com/i3/i3/pull/3138,https://github.com/orestisfl,11,https://github.com/i3/i3/pull/3138#issuecomment-365960219,"Implementation of #2702

 copy/rename new_{window,float} and associated states in parser-config/config.spec
 rename cfg_new_{window,float} in config_directives.c and update calls in tests
 extend the test case in 201-config-parser.t
 update the user guide","cpanm finds the inline c requirement on my machine:
==> Found dependencies: Inline, X11::XCB, ExtUtils::PkgConfig, Inline::C",True,{}
i3/i3,https://github.com/i3/i3,3138,2018-02-12T14:19:23Z,2018-02-19T06:03:04Z,2018-02-19T08:16:27Z,MERGED,True,55,34,5,https://github.com/clawoflight,"[WIP] Add default_{,floating_}border",1,[],https://github.com/i3/i3/pull/3138,https://github.com/clawoflight,12,https://github.com/i3/i3/pull/3138#issuecomment-365961616,"Implementation of #2702

 copy/rename new_{window,float} and associated states in parser-config/config.spec
 rename cfg_new_{window,float} in config_directives.c and update calls in tests
 extend the test case in 201-config-parser.t
 update the user guide","Squashed and force-pushed :-)
@orestisf1993 interesting... I did use cpan, could that be the difference?",True,{}
i3/i3,https://github.com/i3/i3,3138,2018-02-12T14:19:23Z,2018-02-19T06:03:04Z,2018-02-19T08:16:27Z,MERGED,True,55,34,5,https://github.com/clawoflight,"[WIP] Add default_{,floating_}border",1,[],https://github.com/i3/i3/pull/3138,https://github.com/orestisfl,13,https://github.com/i3/i3/pull/3138#issuecomment-365962671,"Implementation of #2702

 copy/rename new_{window,float} and associated states in parser-config/config.spec
 rename cfg_new_{window,float} in config_directives.c and update calls in tests
 extend the test case in 201-config-parser.t
 update the user guide","Still finds it here:
----      Unsatisfied dependencies detected during      ----
    ExtUtils::PkgConfig [requires]
    Inline [requires]
    Inline::C [requires]
    X11::XCB [requires]",True,{}
i3/i3,https://github.com/i3/i3,3138,2018-02-12T14:19:23Z,2018-02-19T06:03:04Z,2018-02-19T08:16:27Z,MERGED,True,55,34,5,https://github.com/clawoflight,"[WIP] Add default_{,floating_}border",1,[],https://github.com/i3/i3/pull/3138,https://github.com/clawoflight,14,https://github.com/i3/i3/pull/3138#issuecomment-365964470,"Implementation of #2702

 copy/rename new_{window,float} and associated states in parser-config/config.spec
 rename cfg_new_{window,float} in config_directives.c and update calls in tests
 extend the test case in 201-config-parser.t
 update the user guide",Interesting...,True,{}
i3/i3,https://github.com/i3/i3,3138,2018-02-12T14:19:23Z,2018-02-19T06:03:04Z,2018-02-19T08:16:27Z,MERGED,True,55,34,5,https://github.com/clawoflight,"[WIP] Add default_{,floating_}border",1,[],https://github.com/i3/i3/pull/3138,https://github.com/clawoflight,15,https://github.com/i3/i3/pull/3138#issuecomment-365975669,"Implementation of #2702

 copy/rename new_{window,float} and associated states in parser-config/config.spec
 rename cfg_new_{window,float} in config_directives.c and update calls in tests
 extend the test case in 201-config-parser.t
 update the user guide","@Airblader This is done, not sure what to do about Inline::C though. I can run tests locally now, so maybe I'll just keep that in the back of my head until someone else has that problem.",True,{}
i3/i3,https://github.com/i3/i3,3138,2018-02-12T14:19:23Z,2018-02-19T06:03:04Z,2018-02-19T08:16:27Z,MERGED,True,55,34,5,https://github.com/clawoflight,"[WIP] Add default_{,floating_}border",1,[],https://github.com/i3/i3/pull/3138,https://github.com/Airblader,16,https://github.com/i3/i3/pull/3138#issuecomment-366596214,"Implementation of #2702

 copy/rename new_{window,float} and associated states in parser-config/config.spec
 rename cfg_new_{window,float} in config_directives.c and update calls in tests
 extend the test case in 201-config-parser.t
 update the user guide",Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3140,2018-02-13T07:16:23Z,2018-02-19T14:36:42Z,2018-02-19T14:36:46Z,CLOSED,False,2,1,2,None,Added gVim to i3-sensible-editor,5,['waiting'],https://github.com/i3/i3/pull/3140,None,1,https://github.com/i3/i3/pull/3140,,,True,{}
i3/i3,https://github.com/i3/i3,3140,2018-02-13T07:16:23Z,2018-02-19T14:36:42Z,2018-02-19T14:36:46Z,CLOSED,False,2,1,2,None,Added gVim to i3-sensible-editor,5,['waiting'],https://github.com/i3/i3/pull/3140,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3140#issuecomment-365211434,,Can you please also update the list in the man page (man/i3-sensible-editor.man) and then squash it into a single commit? Thank you!,True,{}
i3/i3,https://github.com/i3/i3,3140,2018-02-13T07:16:23Z,2018-02-19T14:36:42Z,2018-02-19T14:36:46Z,CLOSED,False,2,1,2,None,Added gVim to i3-sensible-editor,5,['waiting'],https://github.com/i3/i3/pull/3140,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3140#issuecomment-366595781,,"Hi, please don't forget to also squash the commits. The change looks good now. Thanks!",True,{}
i3/i3,https://github.com/i3/i3,3141,2018-02-15T13:50:15Z,2018-02-26T20:51:32Z,2018-10-01T22:32:49Z,CLOSED,False,4,2,1,https://github.com/giuscri,Fix compatibility issue with git<=1.8.5-rc0,1,[],https://github.com/i3/i3/pull/3141,https://github.com/giuscri,1,https://github.com/i3/i3/pull/3141,-C  was introduced in 1.8.5-rc0.,-C  was introduced in 1.8.5-rc0.,True,{}
i3/i3,https://github.com/i3/i3,3141,2018-02-15T13:50:15Z,2018-02-26T20:51:32Z,2018-10-01T22:32:49Z,CLOSED,False,4,2,1,https://github.com/giuscri,Fix compatibility issue with git<=1.8.5-rc0,1,[],https://github.com/i3/i3/pull/3141,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3141#issuecomment-365957629,-C  was introduced in 1.8.5-rc0.,git 1.8.5-rc0 has been released 4.5 years ago. Given that i3 depends on libraries that haven't even existed until 1.5 years ago (xcb-util-xrm) I wonder why we need this compatibility. Why not update git? There have been many crucial security fixes in git since then as well.,True,{}
i3/i3,https://github.com/i3/i3,3141,2018-02-15T13:50:15Z,2018-02-26T20:51:32Z,2018-10-01T22:32:49Z,CLOSED,False,4,2,1,https://github.com/giuscri,Fix compatibility issue with git<=1.8.5-rc0,1,[],https://github.com/i3/i3/pull/3141,https://github.com/giuscri,3,https://github.com/i3/i3/pull/3141#issuecomment-365961742,-C  was introduced in 1.8.5-rc0.,"It's possible that some distributions are released with such an old version/users are not encouraged to update.
Build date of this rpm package https://rpmfind.net/linux/RPM/centos/updates/7.4.1708/x86_64/Packages/git-1.8.3.1-12.el7_4.x86_64.html is Wed Aug 23 17:40:16 2017
Also user @gfazio reported this problem today, in #2833",True,{}
i3/i3,https://github.com/i3/i3,3141,2018-02-15T13:50:15Z,2018-02-26T20:51:32Z,2018-10-01T22:32:49Z,CLOSED,False,4,2,1,https://github.com/giuscri,Fix compatibility issue with git<=1.8.5-rc0,1,[],https://github.com/i3/i3/pull/3141,https://github.com/jolange,4,https://github.com/i3/i3/pull/3141#issuecomment-366524293,-C  was introduced in 1.8.5-rc0.,"The currently supported enterprise linux versions of course all got quite old git versions (e.g. git 1.7.1 on EL6). But as you said, there are other dependencies that cause trouble anyway...",True,{}
i3/i3,https://github.com/i3/i3,3141,2018-02-15T13:50:15Z,2018-02-26T20:51:32Z,2018-10-01T22:32:49Z,CLOSED,False,4,2,1,https://github.com/giuscri,Fix compatibility issue with git<=1.8.5-rc0,1,[],https://github.com/i3/i3/pull/3141,https://github.com/Airblader,5,https://github.com/i3/i3/pull/3141#issuecomment-366524533,-C  was introduced in 1.8.5-rc0.,"So how are these problems addressed (by actual i3 users)? If supporting such old git versions actually makes sense for some users I'm not opposed, but if they only get one step further in the compilation and then get stuck on missing libraries anyway, there's no point. One can always compile an equally old version of i3… :-)",True,{}
i3/i3,https://github.com/i3/i3,3141,2018-02-15T13:50:15Z,2018-02-26T20:51:32Z,2018-10-01T22:32:49Z,CLOSED,False,4,2,1,https://github.com/giuscri,Fix compatibility issue with git<=1.8.5-rc0,1,[],https://github.com/i3/i3/pull/3141,https://github.com/jolange,6,https://github.com/i3/i3/pull/3141#issuecomment-366525115,-C  was introduced in 1.8.5-rc0.,"So how are these problems addressed (by actual i3 users)? [...] One can always compile an equally old version of i3… :-)

Exactly that way (at least for my part).

If supporting such old git versions actually makes sense for some users

I don't recall many people complaining yet, so it does not seem to be a huge problem.",True,{}
i3/i3,https://github.com/i3/i3,3141,2018-02-15T13:50:15Z,2018-02-26T20:51:32Z,2018-10-01T22:32:49Z,CLOSED,False,4,2,1,https://github.com/giuscri,Fix compatibility issue with git<=1.8.5-rc0,1,[],https://github.com/i3/i3/pull/3141,https://github.com/Airblader,7,https://github.com/i3/i3/pull/3141#issuecomment-366596688,-C  was introduced in 1.8.5-rc0.,"@jolange Thanks for the input. The change in this PR is so trivial that I'm inclined to just merge it, but at the same time it feels odd for the mentioned reasons.
I'll wait a bit for @gfazio's answer in the issue to hear at least a second user opinion it as well to see whether there was a good reason to have such an old git.",True,{}
i3/i3,https://github.com/i3/i3,3141,2018-02-15T13:50:15Z,2018-02-26T20:51:32Z,2018-10-01T22:32:49Z,CLOSED,False,4,2,1,https://github.com/giuscri,Fix compatibility issue with git<=1.8.5-rc0,1,[],https://github.com/i3/i3/pull/3141,https://github.com/Airblader,8,https://github.com/i3/i3/pull/3141#issuecomment-368645814,-C  was introduced in 1.8.5-rc0.,"Given that there's no reply, I'll close this for now.",True,{}
i3/i3,https://github.com/i3/i3,3141,2018-02-15T13:50:15Z,2018-02-26T20:51:32Z,2018-10-01T22:32:49Z,CLOSED,False,4,2,1,https://github.com/giuscri,Fix compatibility issue with git<=1.8.5-rc0,1,[],https://github.com/i3/i3/pull/3141,https://github.com/jirib,9,https://github.com/i3/i3/pull/3141#issuecomment-426086351,-C  was introduced in 1.8.5-rc0.,"Thx, this fixes i3 on Centos 7 which as git-1.8.3.1-14.el7_5.x86_64.",True,{}
i3/i3,https://github.com/i3/i3,3142,2018-02-19T02:45:15Z,2018-02-19T05:58:44Z,2018-02-19T07:00:33Z,MERGED,True,0,1,1,https://github.com/jcrben,Remove hardcoded 2013 date from user guide,1,[],https://github.com/i3/i3/pull/3142,https://github.com/jcrben,1,https://github.com/i3/i3/pull/3142,"The front page and docs landing page emphasize documentation, but the user guide looks like it hasn't been updated since 2013. It seems from the history of the file that this 2013 date is misleading. Hopefully I'm not missing something.","The front page and docs landing page emphasize documentation, but the user guide looks like it hasn't been updated since 2013. It seems from the history of the file that this 2013 date is misleading. Hopefully I'm not missing something.",True,{}
i3/i3,https://github.com/i3/i3,3143,2018-02-19T14:27:55Z,2018-02-19T14:30:21Z,2018-02-19T14:30:27Z,CLOSED,False,3,1,2,None,Patch 3,4,[],https://github.com/i3/i3/pull/3143,None,1,https://github.com/i3/i3/pull/3143,,,True,{}
i3/i3,https://github.com/i3/i3,3143,2018-02-19T14:27:55Z,2018-02-19T14:30:21Z,2018-02-19T14:30:27Z,CLOSED,False,3,1,2,None,Patch 3,4,[],https://github.com/i3/i3/pull/3143,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3143#issuecomment-366708954,,Hi! Thanks for the PR. Can you please squash and rebase the commit so there's only a single (and no merge) commit?,True,{}
i3/i3,https://github.com/i3/i3,3144,2018-02-19T14:36:01Z,2018-02-19T14:42:31Z,2018-02-19T14:42:31Z,MERGED,True,3,1,2,None,Added guake and tilda.,1,[],https://github.com/i3/i3/pull/3144,None,1,https://github.com/i3/i3/pull/3144,,,True,{}
i3/i3,https://github.com/i3/i3,3144,2018-02-19T14:36:01Z,2018-02-19T14:42:31Z,2018-02-19T14:42:31Z,MERGED,True,3,1,2,None,Added guake and tilda.,1,[],https://github.com/i3/i3/pull/3144,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3144#issuecomment-366711261,,"Thanks! For the record, you don't have to close & reopen a PR, you can just force-push to your branch. :-)",True,{}
i3/i3,https://github.com/i3/i3,3144,2018-02-19T14:36:01Z,2018-02-19T14:42:31Z,2018-02-19T14:42:31Z,MERGED,True,3,1,2,None,Added guake and tilda.,1,[],https://github.com/i3/i3/pull/3144,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3144#issuecomment-366711291,,Just waiting for Travis.,True,{}
i3/i3,https://github.com/i3/i3,3145,2018-02-19T14:42:51Z,2018-02-19T15:03:56Z,2018-02-19T15:03:56Z,MERGED,True,2,1,2,None,Added gVim to i3-sensible-editor,1,[],https://github.com/i3/i3/pull/3145,None,1,https://github.com/i3/i3/pull/3145,,,True,{}
i3/i3,https://github.com/i3/i3,3147,2018-02-21T22:02:27Z,2018-02-24T08:48:04Z,2018-02-24T09:08:48Z,MERGED,True,7,1,1,https://github.com/walker0643,dump-asy: add prerequisites check; fix empty container names warnings,1,[],https://github.com/i3/i3/pull/3147,https://github.com/walker0643,1,https://github.com/i3/i3/pull/3147,"Since the script isn't installed via package manager with the benefit of dependency checks, the first chunk makes sure that both asymptote and gv are installed before allowing the script to fail with less useful error output.
The second chunk squelches the warnings created by empty container names.","Since the script isn't installed via package manager with the benefit of dependency checks, the first chunk makes sure that both asymptote and gv are installed before allowing the script to fail with less useful error output.
The second chunk squelches the warnings created by empty container names.",True,{}
i3/i3,https://github.com/i3/i3,3147,2018-02-21T22:02:27Z,2018-02-24T08:48:04Z,2018-02-24T09:08:48Z,MERGED,True,7,1,1,https://github.com/walker0643,dump-asy: add prerequisites check; fix empty container names warnings,1,[],https://github.com/i3/i3/pull/3147,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3147#issuecomment-367615280,"Since the script isn't installed via package manager with the benefit of dependency checks, the first chunk makes sure that both asymptote and gv are installed before allowing the script to fail with less useful error output.
The second chunk squelches the warnings created by empty container names.",The script is useful without gv imo.,True,{}
i3/i3,https://github.com/i3/i3,3147,2018-02-21T22:02:27Z,2018-02-24T08:48:04Z,2018-02-24T09:08:48Z,MERGED,True,7,1,1,https://github.com/walker0643,dump-asy: add prerequisites check; fix empty container names warnings,1,[],https://github.com/i3/i3/pull/3147,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3147#issuecomment-368212259,"Since the script isn't installed via package manager with the benefit of dependency checks, the first chunk makes sure that both asymptote and gv are installed before allowing the script to fail with less useful error output.
The second chunk squelches the warnings created by empty container names.","It may be useful without, but currently it hard-relies on it. We can always change it so it only uses gv under certain circumstances, of course.",True,{}
i3/i3,https://github.com/i3/i3,3147,2018-02-21T22:02:27Z,2018-02-24T08:48:04Z,2018-02-24T09:08:48Z,MERGED,True,7,1,1,https://github.com/walker0643,dump-asy: add prerequisites check; fix empty container names warnings,1,[],https://github.com/i3/i3/pull/3147,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/3147#issuecomment-368213421,"Since the script isn't installed via package manager with the benefit of dependency checks, the first chunk makes sure that both asymptote and gv are installed before allowing the script to fail with less useful error output.
The second chunk squelches the warnings created by empty container names.","It didn't rely on it since it could finish all other stuff before trying to call it. Anyway, I guess I can add a --no-gv flag if it bothers me.",True,{}
i3/i3,https://github.com/i3/i3,3147,2018-02-21T22:02:27Z,2018-02-24T08:48:04Z,2018-02-24T09:08:48Z,MERGED,True,7,1,1,https://github.com/walker0643,dump-asy: add prerequisites check; fix empty container names warnings,1,[],https://github.com/i3/i3/pull/3147,https://github.com/Airblader,5,https://github.com/i3/i3/pull/3147#issuecomment-368213679,"Since the script isn't installed via package manager with the benefit of dependency checks, the first chunk makes sure that both asymptote and gv are installed before allowing the script to fail with less useful error output.
The second chunk squelches the warnings created by empty container names.","Yes, it does something else first, but then executes a command that is bound to fail. Hence its a hard dependency.
Adding a flag and thus making the check optional is fine with me if you want to do that. :)",True,{}
i3/i3,https://github.com/i3/i3,3150,2018-02-24T07:25:32Z,2018-02-24T08:42:15Z,2018-02-24T08:42:15Z,MERGED,True,5,0,1,https://github.com/stapelberg,debian: install contrib/ scripts as examples (Thanks anarcat),1,[],https://github.com/i3/i3/pull/3150,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3150,,,True,{}
i3/i3,https://github.com/i3/i3,3151,2018-02-24T07:58:58Z,2018-02-24T08:41:50Z,2018-02-24T08:41:50Z,MERGED,True,4,0,1,https://github.com/stapelberg,debian: explicitly use gzip compression,1,[],https://github.com/i3/i3/pull/3151,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3151,fixes #3146,fixes #3146,True,{}
i3/i3,https://github.com/i3/i3,3152,2018-02-25T12:50:38Z,2018-02-25T12:55:30Z,2018-02-25T12:55:34Z,MERGED,True,5,0,1,https://github.com/stapelberg,Makefile: include contrib/ in dist tarballs,1,[],https://github.com/i3/i3/pull/3152,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3152,unbreaks the debian package build,unbreaks the debian package build,True,{}
i3/i3,https://github.com/i3/i3,3153,2018-02-26T01:32:21Z,2018-02-26T20:51:00Z,2018-03-19T10:43:44Z,MERGED,True,2,2,1,https://github.com/orestisfl,Don't raise floating windows when workspace is shown,1,[],https://github.com/i3/i3/pull/3153,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3153,"From: #2990 (comment)
Haven't given it much thought but I think this should be the desired behaviour.","From: #2990 (comment)
Haven't given it much thought but I think this should be the desired behaviour.",True,{}
i3/i3,https://github.com/i3/i3,3165,2018-03-09T07:26:58Z,2018-03-09T07:40:20Z,2018-03-09T07:40:20Z,MERGED,True,3,1,1,https://github.com/stapelberg,Bugfix: ignore ConfigureNotify with width == 0 || height == 0,1,[],https://github.com/i3/i3/pull/3165,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3165,fixes #3132,fixes #3132,True,{}
i3/i3,https://github.com/i3/i3,3166,2018-03-09T21:14:58Z,2018-03-10T18:11:55Z,2018-03-10T18:12:00Z,MERGED,True,1,1,1,https://github.com/Hritik14,Fixed typo,1,[],https://github.com/i3/i3/pull/3166,https://github.com/Hritik14,1,https://github.com/i3/i3/pull/3166,,,True,{}
i3/i3,https://github.com/i3/i3,3166,2018-03-09T21:14:58Z,2018-03-10T18:11:55Z,2018-03-10T18:12:00Z,MERGED,True,1,1,1,https://github.com/Hritik14,Fixed typo,1,[],https://github.com/i3/i3/pull/3166,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3166#issuecomment-372051236,,Thanks for the fix!,True,{}
i3/i3,https://github.com/i3/i3,3167,2018-03-10T04:54:30Z,2018-03-11T15:33:10Z,2018-03-12T03:19:05Z,MERGED,True,40,9,10,https://github.com/hwangcc23,Add strip_workspace_name,1,[],https://github.com/i3/i3/pull/3167,https://github.com/hwangcc23,1,https://github.com/i3/i3/pull/3167,"See the issue #3163 (#3163).
Add strip_workspace_name to strip off the workspace name.","See the issue #3163 (#3163).
Add strip_workspace_name to strip off the workspace name.",True,{}
i3/i3,https://github.com/i3/i3,3167,2018-03-10T04:54:30Z,2018-03-11T15:33:10Z,2018-03-12T03:19:05Z,MERGED,True,40,9,10,https://github.com/hwangcc23,Add strip_workspace_name,1,[],https://github.com/i3/i3/pull/3167,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3167#issuecomment-372033775,"See the issue #3163 (#3163).
Add strip_workspace_name to strip off the workspace name.",Thanks for the PR! I'll wait with merging unlike the next release we are currently planning (merge freeze).,True,{}
i3/i3,https://github.com/i3/i3,3167,2018-03-10T04:54:30Z,2018-03-11T15:33:10Z,2018-03-12T03:19:05Z,MERGED,True,40,9,10,https://github.com/hwangcc23,Add strip_workspace_name,1,[],https://github.com/i3/i3/pull/3167,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3167#issuecomment-372124132,"See the issue #3163 (#3163).
Add strip_workspace_name to strip off the workspace name.",Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3167,2018-03-10T04:54:30Z,2018-03-11T15:33:10Z,2018-03-12T03:19:05Z,MERGED,True,40,9,10,https://github.com/hwangcc23,Add strip_workspace_name,1,[],https://github.com/i3/i3/pull/3167,https://github.com/ckdarby,4,https://github.com/i3/i3/pull/3167#issuecomment-372138692,"See the issue #3163 (#3163).
Add strip_workspace_name to strip off the workspace name.","@hwangcc23 Thanks, I appreciate you resolving this for me. I looked at trying to contribute these changes myself but couldn't build from source properly. I also don't do much C development.",True,{}
i3/i3,https://github.com/i3/i3,3168,2018-03-10T17:53:55Z,2018-03-10T18:08:20Z,2018-03-10T18:08:20Z,MERGED,True,7,6,1,https://github.com/stapelberg,Release fixes,4,[],https://github.com/i3/i3/pull/3168,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3168,,,True,{}
i3/i3,https://github.com/i3/i3,3170,2018-03-10T20:36:11Z,2018-03-10T20:37:53Z,2018-03-10T20:47:54Z,MERGED,True,8,7,2,https://github.com/stapelberg,Fix incorrect merge *sigh*,1,[],https://github.com/i3/i3/pull/3170,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3170,Not sure how this happened.,Not sure how this happened.,True,{}
i3/i3,https://github.com/i3/i3,3170,2018-03-10T20:36:11Z,2018-03-10T20:37:53Z,2018-03-10T20:47:54Z,MERGED,True,8,7,2,https://github.com/stapelberg,Fix incorrect merge *sigh*,1,[],https://github.com/i3/i3/pull/3170,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3170#issuecomment-372064607,Not sure how this happened.,Interesting… does this mean we'll need a 4.15.1?,True,{}
i3/i3,https://github.com/i3/i3,3170,2018-03-10T20:36:11Z,2018-03-10T20:37:53Z,2018-03-10T20:47:54Z,MERGED,True,8,7,2,https://github.com/stapelberg,Fix incorrect merge *sigh*,1,[],https://github.com/i3/i3/pull/3170,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/3170#issuecomment-372064892,Not sure how this happened.,"No, but I just accidentally cherry-picked commit 69eec7e into master. Let me revert this and come up with a fixed PR.",True,{}
i3/i3,https://github.com/i3/i3,3170,2018-03-10T20:36:11Z,2018-03-10T20:37:53Z,2018-03-10T20:47:54Z,MERGED,True,8,7,2,https://github.com/stapelberg,Fix incorrect merge *sigh*,1,[],https://github.com/i3/i3/pull/3170,https://github.com/Airblader,4,https://github.com/i3/i3/pull/3170#issuecomment-372065183,Not sure how this happened.,"No, but I just accidentally cherry-picked commit 69eec7e into master.

facepalm I forgot that it was a post-release merge, so I assumed it just got messed up in the pre-release merge…",True,{}
i3/i3,https://github.com/i3/i3,3171,2018-03-10T20:46:22Z,2018-03-10T20:48:14Z,2018-04-07T22:31:41Z,MERGED,True,0,8,1,https://github.com/stapelberg,"Partially revert ""Fix incorrect merge *sigh*""",1,[],https://github.com/i3/i3/pull/3171,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3171,,,True,{}
i3/i3,https://github.com/i3/i3,3172,2018-03-11T17:06:04Z,2018-03-11T18:54:40Z,2018-03-12T00:11:27Z,MERGED,True,2,1,1,https://github.com/klorax,Docs [#3164]: Clarification about X resource value,1,[],https://github.com/i3/i3/pull/3172,https://github.com/klorax,1,https://github.com/i3/i3/pull/3172,"Clarification about X resource value: they are loaded verbatim and must therefore be in the format that i3 uses.
Solves #3164.","Clarification about X resource value: they are loaded verbatim and must therefore be in the format that i3 uses.
Solves #3164.",True,{}
i3/i3,https://github.com/i3/i3,3172,2018-03-11T17:06:04Z,2018-03-11T18:54:40Z,2018-03-12T00:11:27Z,MERGED,True,2,1,1,https://github.com/klorax,Docs [#3164]: Clarification about X resource value,1,[],https://github.com/i3/i3/pull/3172,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3172#issuecomment-372139319,"Clarification about X resource value: they are loaded verbatim and must therefore be in the format that i3 uses.
Solves #3164.",Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3175,2018-03-14T10:19:58Z,2018-03-14T13:23:40Z,2018-03-19T10:43:40Z,MERGED,True,74,10,1,https://github.com/orestisfl,dump-asy.pl: Add options,3,[],https://github.com/i3/i3/pull/3175,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3175,Related to #3147.,Related to #3147.,True,{}
i3/i3,https://github.com/i3/i3,3175,2018-03-14T10:19:58Z,2018-03-14T13:23:40Z,2018-03-19T10:43:40Z,MERGED,True,74,10,1,https://github.com/orestisfl,dump-asy.pl: Add options,3,[],https://github.com/i3/i3/pull/3175,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3175#issuecomment-372996262,Related to #3147.,Will reopen,True,{}
i3/i3,https://github.com/i3/i3,3175,2018-03-14T10:19:58Z,2018-03-14T13:23:40Z,2018-03-19T10:43:40Z,MERGED,True,74,10,1,https://github.com/orestisfl,dump-asy.pl: Add options,3,[],https://github.com/i3/i3/pull/3175,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3175#issuecomment-373019089,Related to #3147.,Thanks :-),True,{}
i3/i3,https://github.com/i3/i3,3176,2018-03-14T13:03:12Z,2018-03-14T13:24:01Z,2018-03-19T10:43:36Z,MERGED,True,2,1,1,https://github.com/orestisfl,dump-asy.pl: Add marks,1,[],https://github.com/i3/i3/pull/3176,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3176,,,True,{}
i3/i3,https://github.com/i3/i3,3177,2018-03-15T19:37:40Z,2018-03-15T19:41:48Z,2018-03-19T10:43:30Z,MERGED,True,16,16,8,https://github.com/orestisfl,Remove trailing whitespace from Perl scripts,1,[],https://github.com/i3/i3/pull/3177,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3177,,,True,{}
i3/i3,https://github.com/i3/i3,3178,2018-03-15T22:05:10Z,2018-03-23T13:50:47Z,2018-04-07T22:39:57Z,MERGED,True,131,10,8,https://github.com/orestisfl,Support _NET_WM_STATE_FOCUSED,2,[],https://github.com/i3/i3/pull/3178,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3178,"Continuation of #2314.
Fixes #2273.
I admit that I don't fully understand all the gory details but the original PR seemed to be close to being accepted and I'd like to see this merged with i3. The fixup commit has my changes from the original discussion.","Continuation of #2314.
Fixes #2273.
I admit that I don't fully understand all the gory details but the original PR seemed to be close to being accepted and I'd like to see this merged with i3. The fixup commit has my changes from the original discussion.",True,{}
i3/i3,https://github.com/i3/i3,3178,2018-03-15T22:05:10Z,2018-03-23T13:50:47Z,2018-04-07T22:39:57Z,MERGED,True,131,10,8,https://github.com/orestisfl,Support _NET_WM_STATE_FOCUSED,2,[],https://github.com/i3/i3/pull/3178,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3178#issuecomment-373956783,"Continuation of #2314.
Fixes #2273.
I admit that I don't fully understand all the gory details but the original PR seemed to be close to being accepted and I'd like to see this merged with i3. The fixup commit has my changes from the original discussion.",up,True,{}
i3/i3,https://github.com/i3/i3,3178,2018-03-15T22:05:10Z,2018-03-23T13:50:47Z,2018-04-07T22:39:57Z,MERGED,True,131,10,8,https://github.com/orestisfl,Support _NET_WM_STATE_FOCUSED,2,[],https://github.com/i3/i3/pull/3178,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3178#issuecomment-375671217,"Continuation of #2314.
Fixes #2273.
I admit that I don't fully understand all the gory details but the original PR seemed to be close to being accepted and I'd like to see this merged with i3. The fixup commit has my changes from the original discussion.","As a fun side effect, I fully expect this change to cause some trouble for compton users, see this (which most users don't currently do). Something to be aware of when questions start popping up on the subreddit about transparency and the like not working correctly anymore for fullscreen / sticky windows.",True,{}
i3/i3,https://github.com/i3/i3,3179,2018-03-16T01:58:14Z,2018-06-22T12:39:03Z,2018-06-22T13:00:43Z,MERGED,True,107,18,2,https://github.com/orestisfl,Correctly handle bindings for the same key with and without --release ,4,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3179,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3179,"Actually #2733's title is different from what I am fixing. I'll reread the thread tomorrow but bindcode --release works fine currently.
I am fixing the issue described in #2733 (comment).
I also wrote a small explanation in the second commit message.

 I have
mode ""resize"" {
...
    bindsym r --release exec --no-startup-id ~/bin/draw-resize.sh $(xdotool getactivewindow), mode ""default""
}
bindsym $mod+r mode ""resize""

in my config. The first time I $mod+r it works as intended. The second time I $mod+r the r --release bindsym gets triggered immediately. This does not happen w/ next. Need to investigate.
 Tests from #3179 (comment)

Fixes #2733","Actually #2733's title is different from what I am fixing. I'll reread the thread tomorrow but bindcode --release works fine currently.
I am fixing the issue described in #2733 (comment).
I also wrote a small explanation in the second commit message.

 I have
mode ""resize"" {
...
    bindsym r --release exec --no-startup-id ~/bin/draw-resize.sh $(xdotool getactivewindow), mode ""default""
}
bindsym $mod+r mode ""resize""

in my config. The first time I $mod+r it works as intended. The second time I $mod+r the r --release bindsym gets triggered immediately. This does not happen w/ next. Need to investigate.
 Tests from #3179 (comment)

Fixes #2733",True,{'THUMBS_UP': ['https://github.com/ThomasBrierley']}
i3/i3,https://github.com/i3/i3,3179,2018-03-16T01:58:14Z,2018-06-22T12:39:03Z,2018-06-22T13:00:43Z,MERGED,True,107,18,2,https://github.com/orestisfl,Correctly handle bindings for the same key with and without --release ,4,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3179,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3179#issuecomment-373936858,"Actually #2733's title is different from what I am fixing. I'll reread the thread tomorrow but bindcode --release works fine currently.
I am fixing the issue described in #2733 (comment).
I also wrote a small explanation in the second commit message.

 I have
mode ""resize"" {
...
    bindsym r --release exec --no-startup-id ~/bin/draw-resize.sh $(xdotool getactivewindow), mode ""default""
}
bindsym $mod+r mode ""resize""

in my config. The first time I $mod+r it works as intended. The second time I $mod+r the r --release bindsym gets triggered immediately. This does not happen w/ next. Need to investigate.
 Tests from #3179 (comment)

Fixes #2733","So if it doesn't fix the issue mentioned in the commit message, we should change the commit message (to a ""relates to"")? Otherwise it'll auto-close the issue.",True,{}
i3/i3,https://github.com/i3/i3,3179,2018-03-16T01:58:14Z,2018-06-22T12:39:03Z,2018-06-22T13:00:43Z,MERGED,True,107,18,2,https://github.com/orestisfl,Correctly handle bindings for the same key with and without --release ,4,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3179,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/3179#issuecomment-373954718,"Actually #2733's title is different from what I am fixing. I'll reread the thread tomorrow but bindcode --release works fine currently.
I am fixing the issue described in #2733 (comment).
I also wrote a small explanation in the second commit message.

 I have
mode ""resize"" {
...
    bindsym r --release exec --no-startup-id ~/bin/draw-resize.sh $(xdotool getactivewindow), mode ""default""
}
bindsym $mod+r mode ""resize""

in my config. The first time I $mod+r it works as intended. The second time I $mod+r the r --release bindsym gets triggered immediately. This does not happen w/ next. Need to investigate.
 Tests from #3179 (comment)

Fixes #2733","What I mean is that bindcode --release works fine in next.
I reread the whole thread since my understanding of the issue was not 100% correct.
bindsym + bindsym --release
#2733 (comment)
bindsym $mod+b exec notify-send ""press""
bindsym --release $mod+b exec notify-send ""release""

works in next.
bindcode + bindcode --release with non-mod keys
#2733 (comment)
bindcode 66 exec notify-send ""press""
bindcode --release 66 exec notify-send ""release""

works in next.
bindcode + bindcode --release with mod keys
#2733 (comment)
bindcode 133 exec notify-send ""press""
bindcode --release 133 exec notify-send ""release""

doesn't work in next, fixed in this PR.
Reason: once 133 (Super_L) is pressed the first bind with ->release == B_UPON_KEYPRESS is matched and the loop exits in

  
    
      i3/src/bindings.c
    
    
         Line 290
      in
      a9512c6
    
  
  
    

        
          
           break; 
        
    
  


the other bind with ->release == B_UPON_KEYRELEASE is never changed to B_UPON_KEYRELEASE_IGNORE_MODS.
The mods don't match in

  
    
      i3/src/bindings.c
    
    
        Lines 256 to 257
      in
      a9512c6
    
  
  
    

        
          
           const uint32_t modifiers_mask = (binding_keycode->modifiers & 0x0000FFFF); 
        

        
          
           const bool mods_match = (modifiers_mask == modifiers_state); 
        
    
  


since it's a mod key bindcode (I think, this is pretty confusing).
bindsym + bindsym --release with mod keys
bindsym Super_L exec notify-send ""press""
bindsym --release Super_L exec notify-send ""release""

doesn't work in next but didn't work in the first version of this PR either, didn't notice.
Reason is that in this line

  
    
      i3/src/bindings.c
    
    
         Line 239
      in
      a9512c6
    
  
  
    

        
          
           if (binding_keycode->keycode == input_keycode && mods_match) { 
        
    
  


B_UPON_KEYRELEASE_IGNORE_MODS is not checked.
This caused another bug. From 548d740:


press $mod, press x, release x, release $mod
press $mod, press x, release $mod, release x


case (2.) didn't work, now it should be fixed. Is there an issue for this?
I don't feel really confident about merging this since bindings are not tested very well, let's give it some time.",True,{}
i3/i3,https://github.com/i3/i3,3179,2018-03-16T01:58:14Z,2018-06-22T12:39:03Z,2018-06-22T13:00:43Z,MERGED,True,107,18,2,https://github.com/orestisfl,Correctly handle bindings for the same key with and without --release ,4,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3179,https://github.com/Airblader,4,https://github.com/i3/i3/pull/3179#issuecomment-374214287,"Actually #2733's title is different from what I am fixing. I'll reread the thread tomorrow but bindcode --release works fine currently.
I am fixing the issue described in #2733 (comment).
I also wrote a small explanation in the second commit message.

 I have
mode ""resize"" {
...
    bindsym r --release exec --no-startup-id ~/bin/draw-resize.sh $(xdotool getactivewindow), mode ""default""
}
bindsym $mod+r mode ""resize""

in my config. The first time I $mod+r it works as intended. The second time I $mod+r the r --release bindsym gets triggered immediately. This does not happen w/ next. Need to investigate.
 Tests from #3179 (comment)

Fixes #2733","I don't feel really confident about merging this since bindings are not tested very well, let's give it some time.

Thanks, I appreciate that.
Maybe @stapelberg can chime in here, the bindings are more his area. :-)",True,{}
i3/i3,https://github.com/i3/i3,3179,2018-03-16T01:58:14Z,2018-06-22T12:39:03Z,2018-06-22T13:00:43Z,MERGED,True,107,18,2,https://github.com/orestisfl,Correctly handle bindings for the same key with and without --release ,4,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3179,https://github.com/orestisfl,5,https://github.com/i3/i3/pull/3179#issuecomment-374217760,"Actually #2733's title is different from what I am fixing. I'll reread the thread tomorrow but bindcode --release works fine currently.
I am fixing the issue described in #2733 (comment).
I also wrote a small explanation in the second commit message.

 I have
mode ""resize"" {
...
    bindsym r --release exec --no-startup-id ~/bin/draw-resize.sh $(xdotool getactivewindow), mode ""default""
}
bindsym $mod+r mode ""resize""

in my config. The first time I $mod+r it works as intended. The second time I $mod+r the r --release bindsym gets triggered immediately. This does not happen w/ next. Need to investigate.
 Tests from #3179 (comment)

Fixes #2733","I could start adding some more binding tests. Not just for the changes, the whole thing.",True,{}
i3/i3,https://github.com/i3/i3,3179,2018-03-16T01:58:14Z,2018-06-22T12:39:03Z,2018-06-22T13:00:43Z,MERGED,True,107,18,2,https://github.com/orestisfl,Correctly handle bindings for the same key with and without --release ,4,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3179,https://github.com/Airblader,6,https://github.com/i3/i3/pull/3179#issuecomment-374218041,"Actually #2733's title is different from what I am fixing. I'll reread the thread tomorrow but bindcode --release works fine currently.
I am fixing the issue described in #2733 (comment).
I also wrote a small explanation in the second commit message.

 I have
mode ""resize"" {
...
    bindsym r --release exec --no-startup-id ~/bin/draw-resize.sh $(xdotool getactivewindow), mode ""default""
}
bindsym $mod+r mode ""resize""

in my config. The first time I $mod+r it works as intended. The second time I $mod+r the r --release bindsym gets triggered immediately. This does not happen w/ next. Need to investigate.
 Tests from #3179 (comment)

Fixes #2733",That'd be wonderful. Perhaps we do it in a separate PR?,True,{}
i3/i3,https://github.com/i3/i3,3179,2018-03-16T01:58:14Z,2018-06-22T12:39:03Z,2018-06-22T13:00:43Z,MERGED,True,107,18,2,https://github.com/orestisfl,Correctly handle bindings for the same key with and without --release ,4,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3179,https://github.com/stapelberg,7,https://github.com/i3/i3/pull/3179#issuecomment-374258314,"Actually #2733's title is different from what I am fixing. I'll reread the thread tomorrow but bindcode --release works fine currently.
I am fixing the issue described in #2733 (comment).
I also wrote a small explanation in the second commit message.

 I have
mode ""resize"" {
...
    bindsym r --release exec --no-startup-id ~/bin/draw-resize.sh $(xdotool getactivewindow), mode ""default""
}
bindsym $mod+r mode ""resize""

in my config. The first time I $mod+r it works as intended. The second time I $mod+r the r --release bindsym gets triggered immediately. This does not happen w/ next. Need to investigate.
 Tests from #3179 (comment)

Fixes #2733","More tests are always appreciated :). I haven’t looked at the code in question, but I’d be fine merging a bindcode-related change at the beginning of the development cycle (which is where we are right now). Most users use bindsym, so potential breakages are fairly limited.",True,{}
i3/i3,https://github.com/i3/i3,3179,2018-03-16T01:58:14Z,2018-06-22T12:39:03Z,2018-06-22T13:00:43Z,MERGED,True,107,18,2,https://github.com/orestisfl,Correctly handle bindings for the same key with and without --release ,4,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3179,https://github.com/orestisfl,8,https://github.com/i3/i3/pull/3179#issuecomment-374261240,"Actually #2733's title is different from what I am fixing. I'll reread the thread tomorrow but bindcode --release works fine currently.
I am fixing the issue described in #2733 (comment).
I also wrote a small explanation in the second commit message.

 I have
mode ""resize"" {
...
    bindsym r --release exec --no-startup-id ~/bin/draw-resize.sh $(xdotool getactivewindow), mode ""default""
}
bindsym $mod+r mode ""resize""

in my config. The first time I $mod+r it works as intended. The second time I $mod+r the r --release bindsym gets triggered immediately. This does not happen w/ next. Need to investigate.
 Tests from #3179 (comment)

Fixes #2733","Actually, 258-keypress-release.t and 290-keypress-numlock.t test a bunch of cases after all, don't know if there are many stuff missing unrelated to this PR.
Maybe:

Test different order from 548d740
Test duplicate bindsym/bindcode (+permutations). In all cases the first binding should be called and an error should be produced.
With
set $mod Mod4 # super_l
bindsym Super_L nop 1
bindsym --release nop 2
bindsym $mod + a nop 3
bindsym --release $mod + a nop 4


$mod press => nop 1
$mod release => nop 2
$mod press => nop 1
a press => nop 3
a release => nop 4
$mod release => ???",True,{}
i3/i3,https://github.com/i3/i3,3179,2018-03-16T01:58:14Z,2018-06-22T12:39:03Z,2018-06-22T13:00:43Z,MERGED,True,107,18,2,https://github.com/orestisfl,Correctly handle bindings for the same key with and without --release ,4,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3179,https://github.com/orestisfl,9,https://github.com/i3/i3/pull/3179#issuecomment-374353941,"Actually #2733's title is different from what I am fixing. I'll reread the thread tomorrow but bindcode --release works fine currently.
I am fixing the issue described in #2733 (comment).
I also wrote a small explanation in the second commit message.

 I have
mode ""resize"" {
...
    bindsym r --release exec --no-startup-id ~/bin/draw-resize.sh $(xdotool getactivewindow), mode ""default""
}
bindsym $mod+r mode ""resize""

in my config. The first time I $mod+r it works as intended. The second time I $mod+r the r --release bindsym gets triggered immediately. This does not happen w/ next. Need to investigate.
 Tests from #3179 (comment)

Fixes #2733","I have
mode ""resize"" {
...
   bindsym r --release exec --no-startup-id ~/bin/draw-resize.sh $(xdotool getactivewindow), mode ""default""
}
bindsym $mod+r mode ""resize""

in my config. The first time I $mod+r it works as intended. The second time I $mod+r the r --release bindsym gets triggered immediately. This does not happen w/ next. Need to investigate.

ha! This can happen in next too but with bindcode --release. Try:
# i3 config file (v4)
set $mod Mod4
mode ""resize"" {
    bindcode --release 27 mode ""default""
}
bindsym $mod+r mode ""resize""",True,{}
i3/i3,https://github.com/i3/i3,3179,2018-03-16T01:58:14Z,2018-06-22T12:39:03Z,2018-06-22T13:00:43Z,MERGED,True,107,18,2,https://github.com/orestisfl,Correctly handle bindings for the same key with and without --release ,4,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3179,https://github.com/Airblader,10,https://github.com/i3/i3/pull/3179#issuecomment-399414948,"Actually #2733's title is different from what I am fixing. I'll reread the thread tomorrow but bindcode --release works fine currently.
I am fixing the issue described in #2733 (comment).
I also wrote a small explanation in the second commit message.

 I have
mode ""resize"" {
...
    bindsym r --release exec --no-startup-id ~/bin/draw-resize.sh $(xdotool getactivewindow), mode ""default""
}
bindsym $mod+r mode ""resize""

in my config. The first time I $mod+r it works as intended. The second time I $mod+r the r --release bindsym gets triggered immediately. This does not happen w/ next. Need to investigate.
 Tests from #3179 (comment)

Fixes #2733",@orestisf1993 What's the status here?,True,{}
i3/i3,https://github.com/i3/i3,3179,2018-03-16T01:58:14Z,2018-06-22T12:39:03Z,2018-06-22T13:00:43Z,MERGED,True,107,18,2,https://github.com/orestisfl,Correctly handle bindings for the same key with and without --release ,4,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3179,https://github.com/orestisfl,11,https://github.com/i3/i3/pull/3179#issuecomment-399422911,"Actually #2733's title is different from what I am fixing. I'll reread the thread tomorrow but bindcode --release works fine currently.
I am fixing the issue described in #2733 (comment).
I also wrote a small explanation in the second commit message.

 I have
mode ""resize"" {
...
    bindsym r --release exec --no-startup-id ~/bin/draw-resize.sh $(xdotool getactivewindow), mode ""default""
}
bindsym $mod+r mode ""resize""

in my config. The first time I $mod+r it works as intended. The second time I $mod+r the r --release bindsym gets triggered immediately. This does not happen w/ next. Need to investigate.
 Tests from #3179 (comment)

Fixes #2733","I've been running this patch for a while, seems fine. I think we can review this.",True,{}
i3/i3,https://github.com/i3/i3,3180,2018-03-16T18:18:43Z,2018-03-17T06:31:49Z,2018-03-17T06:31:58Z,MERGED,True,2,1,2,https://github.com/chrisduerr,Add alacritty to `i3-sensible-terminal`,1,[],https://github.com/i3/i3/pull/3180,https://github.com/chrisduerr,1,https://github.com/i3/i3/pull/3180,"This adds the alacritty terminal emulator to the
i3-sensible-terminal script.
Alacritty is still in its very early stages but it looks like it's not
going away for now, so this is a proposal to add it to
i3-sensible-terminal for that little bit of convenience.
If there are any limitations/requirements that need to be met before a
new terminal emulator is added to i3-sensible-terminal, please let me
know.","This adds the alacritty terminal emulator to the
i3-sensible-terminal script.
Alacritty is still in its very early stages but it looks like it's not
going away for now, so this is a proposal to add it to
i3-sensible-terminal for that little bit of convenience.
If there are any limitations/requirements that need to be met before a
new terminal emulator is added to i3-sensible-terminal, please let me
know.",True,{}
i3/i3,https://github.com/i3/i3,3180,2018-03-16T18:18:43Z,2018-03-17T06:31:49Z,2018-03-17T06:31:58Z,MERGED,True,2,1,2,https://github.com/chrisduerr,Add alacritty to `i3-sensible-terminal`,1,[],https://github.com/i3/i3/pull/3180,https://github.com/chrisduerr,2,https://github.com/i3/i3/pull/3180#issuecomment-373829616,"This adds the alacritty terminal emulator to the
i3-sensible-terminal script.
Alacritty is still in its very early stages but it looks like it's not
going away for now, so this is a proposal to add it to
i3-sensible-terminal for that little bit of convenience.
If there are any limitations/requirements that need to be met before a
new terminal emulator is added to i3-sensible-terminal, please let me
know.","Oh, my bad, I probably should have looked at the PRs that have been made for the previous terminal emulators and I could have seen that.
Should be all good now! :)",True,{}
i3/i3,https://github.com/i3/i3,3180,2018-03-16T18:18:43Z,2018-03-17T06:31:49Z,2018-03-17T06:31:58Z,MERGED,True,2,1,2,https://github.com/chrisduerr,Add alacritty to `i3-sensible-terminal`,1,[],https://github.com/i3/i3/pull/3180,https://github.com/chrisduerr,3,https://github.com/i3/i3/pull/3180#issuecomment-373855442,"This adds the alacritty terminal emulator to the
i3-sensible-terminal script.
Alacritty is still in its very early stages but it looks like it's not
going away for now, so this is a proposal to add it to
i3-sensible-terminal for that little bit of convenience.
If there are any limitations/requirements that need to be met before a
new terminal emulator is added to i3-sensible-terminal, please let me
know.",Should be good to go now 👍,True,{}
i3/i3,https://github.com/i3/i3,3180,2018-03-16T18:18:43Z,2018-03-17T06:31:49Z,2018-03-17T06:31:58Z,MERGED,True,2,1,2,https://github.com/chrisduerr,Add alacritty to `i3-sensible-terminal`,1,[],https://github.com/i3/i3/pull/3180,https://github.com/Airblader,4,https://github.com/i3/i3/pull/3180#issuecomment-373898388,"This adds the alacritty terminal emulator to the
i3-sensible-terminal script.
Alacritty is still in its very early stages but it looks like it's not
going away for now, so this is a proposal to add it to
i3-sensible-terminal for that little bit of convenience.
If there are any limitations/requirements that need to be met before a
new terminal emulator is added to i3-sensible-terminal, please let me
know.",Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3182,2018-03-17T13:09:27Z,2018-03-17T13:10:25Z,2018-03-17T13:10:25Z,CLOSED,False,1,1,1,https://github.com/dpflug,Correct misspelling,1,[],https://github.com/i3/i3/pull/3182,https://github.com/dpflug,1,https://github.com/i3/i3/pull/3182,Fixes #3181,Fixes #3181,True,{}
i3/i3,https://github.com/i3/i3,3182,2018-03-17T13:09:27Z,2018-03-17T13:10:25Z,2018-03-17T13:10:25Z,CLOSED,False,1,1,1,https://github.com/dpflug,Correct misspelling,1,[],https://github.com/i3/i3/pull/3182,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3182#issuecomment-373918971,Fixes #3181,"Thanks for sending a PR. Please see my comment in the issue for why I'm closing it, though :-)",True,{}
i3/i3,https://github.com/i3/i3,3184,2018-03-17T18:59:50Z,2018-03-23T18:17:13Z,2018-04-07T22:39:46Z,MERGED,True,53,40,3,https://github.com/orestisfl,floating_enable & floating_maybe_reassign_ws changes,4,[],https://github.com/i3/i3/pull/3184,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3184,"This needs some discussion.
In 
  
    
      i3/src/floating.c
    
    
        Lines 285 to 304
      in
      a9512c6
    
  
  
    

        
          
               /* Sanity check: Are the coordinates on the appropriate output? If not, we 
        

        
          
                * need to change them */ 
        

        
          
               Output *current_output = get_output_containing(nc->rect.x + 
        

        
          
                                                                  (nc->rect.width / 2), 
        

        
          
                                                              nc->rect.y + (nc->rect.height / 2)); 
        

        
          
            
        

        
          
               Con *correct_output = con_get_output(ws); 
        

        
          
               if (!current_output || current_output->con != correct_output) { 
        

        
          
                   DLOG(""This floating window is on the wrong output, fixing coordinates (currently (%d, %d))\n"", 
        

        
          
                        nc->rect.x, nc->rect.y); 
        

        
          
            
        

        
          
                   /* If moving from one output to another, keep the relative position 
        

        
          
                    * consistent (e.g. a centered dialog will remain centered). */ 
        

        
          
                   if (current_output) 
        

        
          
                       floating_fix_coordinates(nc, &current_output->con->rect, &correct_output->rect); 
        

        
          
                   else { 
        

        
          
                       nc->rect.x = correct_output->rect.x; 
        

        
          
                       nc->rect.y = correct_output->rect.y; 
        

        
          
                   } 
        

        
          
               } 
        
    
  


we check if the floating container spawns in a different output (/workspace).
Why do we use relative coordinates? When a window opens in a different output, is the relative position valuable?
Later in floating_enable 
  
    
      i3/src/floating.c
    
    
        Lines 323 to 327
      in
      a9512c6
    
  
  
    

        
          
               /* Check if we need to re-assign it to a different workspace because of its 
        

        
          
                * coordinates and exit if that was done successfully. */ 
        

        
          
               if (floating_maybe_reassign_ws(nc)) { 
        

        
          
                   goto done; 
        

        
          
               } 
        
    
  


we follow a different logic since we call floating_maybe_reassign_ws() which will reassign the new container to a different output.
Some history:

commit f613df4 that fixes #297 adds the floating_maybe_reassign_ws() call in the end of floating_enable.
commit 247e115 that fixes #452 adds the relative coordinates part.
maybe related to #1335.
related to #2661.

Fixes #1341.","This needs some discussion.
In 
  
    
      i3/src/floating.c
    
    
        Lines 285 to 304
      in
      a9512c6
    
  
  
    

        
          
               /* Sanity check: Are the coordinates on the appropriate output? If not, we 
        

        
          
                * need to change them */ 
        

        
          
               Output *current_output = get_output_containing(nc->rect.x + 
        

        
          
                                                                  (nc->rect.width / 2), 
        

        
          
                                                              nc->rect.y + (nc->rect.height / 2)); 
        

        
          
            
        

        
          
               Con *correct_output = con_get_output(ws); 
        

        
          
               if (!current_output || current_output->con != correct_output) { 
        

        
          
                   DLOG(""This floating window is on the wrong output, fixing coordinates (currently (%d, %d))\n"", 
        

        
          
                        nc->rect.x, nc->rect.y); 
        

        
          
            
        

        
          
                   /* If moving from one output to another, keep the relative position 
        

        
          
                    * consistent (e.g. a centered dialog will remain centered). */ 
        

        
          
                   if (current_output) 
        

        
          
                       floating_fix_coordinates(nc, &current_output->con->rect, &correct_output->rect); 
        

        
          
                   else { 
        

        
          
                       nc->rect.x = correct_output->rect.x; 
        

        
          
                       nc->rect.y = correct_output->rect.y; 
        

        
          
                   } 
        

        
          
               } 
        
    
  


we check if the floating container spawns in a different output (/workspace).
Why do we use relative coordinates? When a window opens in a different output, is the relative position valuable?
Later in floating_enable 
  
    
      i3/src/floating.c
    
    
        Lines 323 to 327
      in
      a9512c6
    
  
  
    

        
          
               /* Check if we need to re-assign it to a different workspace because of its 
        

        
          
                * coordinates and exit if that was done successfully. */ 
        

        
          
               if (floating_maybe_reassign_ws(nc)) { 
        

        
          
                   goto done; 
        

        
          
               } 
        
    
  


we follow a different logic since we call floating_maybe_reassign_ws() which will reassign the new container to a different output.
Some history:

commit f613df4 that fixes #297 adds the floating_maybe_reassign_ws() call in the end of floating_enable.
commit 247e115 that fixes #452 adds the relative coordinates part.
maybe related to #1335.
related to #2661.

Fixes #1341.",True,{}
i3/i3,https://github.com/i3/i3,3184,2018-03-17T18:59:50Z,2018-03-23T18:17:13Z,2018-04-07T22:39:46Z,MERGED,True,53,40,3,https://github.com/orestisfl,floating_enable & floating_maybe_reassign_ws changes,4,[],https://github.com/i3/i3/pull/3184,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3184#issuecomment-375630823,"This needs some discussion.
In 
  
    
      i3/src/floating.c
    
    
        Lines 285 to 304
      in
      a9512c6
    
  
  
    

        
          
               /* Sanity check: Are the coordinates on the appropriate output? If not, we 
        

        
          
                * need to change them */ 
        

        
          
               Output *current_output = get_output_containing(nc->rect.x + 
        

        
          
                                                                  (nc->rect.width / 2), 
        

        
          
                                                              nc->rect.y + (nc->rect.height / 2)); 
        

        
          
            
        

        
          
               Con *correct_output = con_get_output(ws); 
        

        
          
               if (!current_output || current_output->con != correct_output) { 
        

        
          
                   DLOG(""This floating window is on the wrong output, fixing coordinates (currently (%d, %d))\n"", 
        

        
          
                        nc->rect.x, nc->rect.y); 
        

        
          
            
        

        
          
                   /* If moving from one output to another, keep the relative position 
        

        
          
                    * consistent (e.g. a centered dialog will remain centered). */ 
        

        
          
                   if (current_output) 
        

        
          
                       floating_fix_coordinates(nc, &current_output->con->rect, &correct_output->rect); 
        

        
          
                   else { 
        

        
          
                       nc->rect.x = correct_output->rect.x; 
        

        
          
                       nc->rect.y = correct_output->rect.y; 
        

        
          
                   } 
        

        
          
               } 
        
    
  


we check if the floating container spawns in a different output (/workspace).
Why do we use relative coordinates? When a window opens in a different output, is the relative position valuable?
Later in floating_enable 
  
    
      i3/src/floating.c
    
    
        Lines 323 to 327
      in
      a9512c6
    
  
  
    

        
          
               /* Check if we need to re-assign it to a different workspace because of its 
        

        
          
                * coordinates and exit if that was done successfully. */ 
        

        
          
               if (floating_maybe_reassign_ws(nc)) { 
        

        
          
                   goto done; 
        

        
          
               } 
        
    
  


we follow a different logic since we call floating_maybe_reassign_ws() which will reassign the new container to a different output.
Some history:

commit f613df4 that fixes #297 adds the floating_maybe_reassign_ws() call in the end of floating_enable.
commit 247e115 that fixes #452 adds the relative coordinates part.
maybe related to #1335.
related to #2661.

Fixes #1341.","Why do we use relative coordinates?

Doesn't rect contain absolute coordinates? That's how I remember it, anyway.",True,{}
i3/i3,https://github.com/i3/i3,3185,2018-03-18T00:15:39Z,2018-03-21T07:38:42Z,2018-04-07T22:40:09Z,MERGED,True,21,26,6,https://github.com/orestisfl,Remove 'method' from cmd_move_window_to_position,2,[],https://github.com/i3/i3/pull/3185,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3185,,,True,{}
i3/i3,https://github.com/i3/i3,3185,2018-03-18T00:15:39Z,2018-03-21T07:38:42Z,2018-04-07T22:40:09Z,MERGED,True,21,26,6,https://github.com/orestisfl,Remove 'method' from cmd_move_window_to_position,2,[],https://github.com/i3/i3/pull/3185,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3185#issuecomment-373979589,,"This could break some workflows. Unless if you are talking about something like move to relative position ….
I wonder if the original intention was to actually be able to move the window out of bounds.",True,{}
i3/i3,https://github.com/i3/i3,3185,2018-03-18T00:15:39Z,2018-03-21T07:38:42Z,2018-04-07T22:40:09Z,MERGED,True,21,26,6,https://github.com/orestisfl,Remove 'method' from cmd_move_window_to_position,2,[],https://github.com/i3/i3/pull/3185,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/3185#issuecomment-373981198,,"Unless if you are talking about something like move to relative position ….

Even though this can be executed with move [direction] <pixels> px for floating windows.",True,{}
i3/i3,https://github.com/i3/i3,3185,2018-03-18T00:15:39Z,2018-03-21T07:38:42Z,2018-04-07T22:40:09Z,MERGED,True,21,26,6,https://github.com/orestisfl,Remove 'method' from cmd_move_window_to_position,2,[],https://github.com/i3/i3/pull/3185,https://github.com/Airblader,4,https://github.com/i3/i3/pull/3185#issuecomment-374213748,,"This could break some workflows

While that's true and unfortunate, I do think we should not keep broken behavior broken for the sake of not breaking workflows. The absolute flag should dictate whether the given coordinates are relative to the workspace or the root window. I do think it makes sense to have both properly implemented, given that the command syntax for it is already there. What do you think?",True,{}
i3/i3,https://github.com/i3/i3,3185,2018-03-18T00:15:39Z,2018-03-21T07:38:42Z,2018-04-07T22:40:09Z,MERGED,True,21,26,6,https://github.com/orestisfl,Remove 'method' from cmd_move_window_to_position,2,[],https://github.com/i3/i3/pull/3185,https://github.com/orestisfl,5,https://github.com/i3/i3/pull/3185#issuecomment-374228019,,"I don't think that move position was ever meant to support relative movement. Especially since directional commands for floating containers exist since 2009 but the move position px px was implemented in 2012 and tests also checked for absolute coordinates (f78f137).
It is also not mentioned in the userguide:
# Moves the container either to a specific location
# or to the center of the screen. If 'absolute' is
# used, it is moved to the center of all outputs.
move [absolute] position <pos_x> [px] <pos_y> [px]
move [absolute] position center

[absolute] is mentioned only for center and it exists for position <pos_x> ... because of the parser:

move absolute position center
move position center
move position <pos_x> [px] <pos_y> [px]
Now absolute must be accepted by position <pos_x> [px] <pos_y> [px] for absolute position center to work.",True,{}
i3/i3,https://github.com/i3/i3,3185,2018-03-18T00:15:39Z,2018-03-21T07:38:42Z,2018-04-07T22:40:09Z,MERGED,True,21,26,6,https://github.com/orestisfl,Remove 'method' from cmd_move_window_to_position,2,[],https://github.com/i3/i3/pull/3185,https://github.com/Airblader,6,https://github.com/i3/i3/pull/3185#issuecomment-374249892,,"Yeah, I get all that. But the semantics of absolute are clear from the command where it works, so a user might well expect it to work in the position case as well.
At the very least we should clearly point out in the userguide that absolute has no effect for position commands.",True,{}
i3/i3,https://github.com/i3/i3,3185,2018-03-18T00:15:39Z,2018-03-21T07:38:42Z,2018-04-07T22:40:09Z,MERGED,True,21,26,6,https://github.com/orestisfl,Remove 'method' from cmd_move_window_to_position,2,[],https://github.com/i3/i3/pull/3185,https://github.com/orestisfl,7,https://github.com/i3/i3/pull/3185#issuecomment-374431601,,Updated the userguide.,True,{}
i3/i3,https://github.com/i3/i3,3185,2018-03-18T00:15:39Z,2018-03-21T07:38:42Z,2018-04-07T22:40:09Z,MERGED,True,21,26,6,https://github.com/orestisfl,Remove 'method' from cmd_move_window_to_position,2,[],https://github.com/i3/i3/pull/3185,https://github.com/orestisfl,8,https://github.com/i3/i3/pull/3185#issuecomment-374629743,,up,True,{}
i3/i3,https://github.com/i3/i3,3186,2018-03-18T01:42:14Z,2018-03-18T06:51:51Z,2018-03-18T06:52:05Z,MERGED,True,4,2,1,https://github.com/orestisfl,i3-msg: only print input + errorposition if they exist,1,[],https://github.com/i3/i3/pull/3186,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3186,"Before:
$ i3-msg floating disable, move window to position 100 px 100 px
ERROR: Your command: (null)
ERROR:               (null)
ERROR: Cannot change position of a window/container because it is not floating.
[{""success"":true},{""success"":false,""error"":""Cannot change position of a window/container because it is not floating.""}]

After:
$ i3-msg floating disable, move window to position 100 px 100 px
ERROR: Cannot change position of a window/container because it is not floating.
[{""success"":true},{""success"":false,""error"":""Cannot change position of a window/container because it is not floating.""}]","Before:
$ i3-msg floating disable, move window to position 100 px 100 px
ERROR: Your command: (null)
ERROR:               (null)
ERROR: Cannot change position of a window/container because it is not floating.
[{""success"":true},{""success"":false,""error"":""Cannot change position of a window/container because it is not floating.""}]

After:
$ i3-msg floating disable, move window to position 100 px 100 px
ERROR: Cannot change position of a window/container because it is not floating.
[{""success"":true},{""success"":false,""error"":""Cannot change position of a window/container because it is not floating.""}]",True,{}
i3/i3,https://github.com/i3/i3,3186,2018-03-18T01:42:14Z,2018-03-18T06:51:51Z,2018-03-18T06:52:05Z,MERGED,True,4,2,1,https://github.com/orestisfl,i3-msg: only print input + errorposition if they exist,1,[],https://github.com/i3/i3/pull/3186,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3186#issuecomment-373976826,"Before:
$ i3-msg floating disable, move window to position 100 px 100 px
ERROR: Your command: (null)
ERROR:               (null)
ERROR: Cannot change position of a window/container because it is not floating.
[{""success"":true},{""success"":false,""error"":""Cannot change position of a window/container because it is not floating.""}]

After:
$ i3-msg floating disable, move window to position 100 px 100 px
ERROR: Cannot change position of a window/container because it is not floating.
[{""success"":true},{""success"":false,""error"":""Cannot change position of a window/container because it is not floating.""}]",Thanks as always! :-),True,{}
i3/i3,https://github.com/i3/i3,3187,2018-03-19T00:04:39Z,2018-03-19T06:03:47Z,2018-03-19T10:43:17Z,MERGED,True,3,1,2,https://github.com/orestisfl,Fix memleak: FREE(assign->dest.output),1,[],https://github.com/i3/i3/pull/3187,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3187,😇,😇,True,{}
i3/i3,https://github.com/i3/i3,3188,2018-03-19T01:03:28Z,2018-03-19T06:04:46Z,2018-03-19T10:42:21Z,MERGED,True,9,3,1,https://github.com/orestisfl,Free ran_assignments,1,[],https://github.com/i3/i3/pull/3188,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3188,"When we run reload all the assignments are freed:

  
    
      i3/src/config.c
    
    
        Lines 99 to 109
      in
      e3e0911
    
  
  
    

        
          
           struct Assignment *assign; 
        

        
          
           while (!TAILQ_EMPTY(&assignments)) { 
        

        
          
               assign = TAILQ_FIRST(&assignments); 
        

        
          
               if (assign->type == A_TO_WORKSPACE) 
        

        
          
                   FREE(assign->dest.workspace); 
        

        
          
               else if (assign->type == A_COMMAND) 
        

        
          
                   FREE(assign->dest.command); 
        

        
          
               match_free(&(assign->match)); 
        

        
          
               TAILQ_REMOVE(&assignments, assign, assignments); 
        

        
          
               FREE(assign); 
        

        
          
           } 
        
    
  


Assignments are saved to each window after they are executed:

  
    
      i3/src/assignments.c
    
    
        Lines 41 to 46
      in
      e3e0911
    
  
  
    

        
          
                   /* Store that we ran this assignment to not execute it again. We have 
        

        
          
                    * to do this before running the actual command to prevent infinite 
        

        
          
                    * loops. */ 
        

        
          
                   window->nr_assignments++; 
        

        
          
                   window->ran_assignments = srealloc(window->ran_assignments, sizeof(Assignment *) * window->nr_assignments); 
        

        
          
                   window->ran_assignments[window->nr_assignments - 1] = current; 
        
    
  


This means that the pointers stored in window->ran_assignments are
invalid (shouldn't be dangerous currently but could lead to a segfault
if the code is modified) after a reload.","When we run reload all the assignments are freed:

  
    
      i3/src/config.c
    
    
        Lines 99 to 109
      in
      e3e0911
    
  
  
    

        
          
           struct Assignment *assign; 
        

        
          
           while (!TAILQ_EMPTY(&assignments)) { 
        

        
          
               assign = TAILQ_FIRST(&assignments); 
        

        
          
               if (assign->type == A_TO_WORKSPACE) 
        

        
          
                   FREE(assign->dest.workspace); 
        

        
          
               else if (assign->type == A_COMMAND) 
        

        
          
                   FREE(assign->dest.command); 
        

        
          
               match_free(&(assign->match)); 
        

        
          
               TAILQ_REMOVE(&assignments, assign, assignments); 
        

        
          
               FREE(assign); 
        

        
          
           } 
        
    
  


Assignments are saved to each window after they are executed:

  
    
      i3/src/assignments.c
    
    
        Lines 41 to 46
      in
      e3e0911
    
  
  
    

        
          
                   /* Store that we ran this assignment to not execute it again. We have 
        

        
          
                    * to do this before running the actual command to prevent infinite 
        

        
          
                    * loops. */ 
        

        
          
                   window->nr_assignments++; 
        

        
          
                   window->ran_assignments = srealloc(window->ran_assignments, sizeof(Assignment *) * window->nr_assignments); 
        

        
          
                   window->ran_assignments[window->nr_assignments - 1] = current; 
        
    
  


This means that the pointers stored in window->ran_assignments are
invalid (shouldn't be dangerous currently but could lead to a segfault
if the code is modified) after a reload.",True,{}
i3/i3,https://github.com/i3/i3,3189,2018-03-19T01:18:39Z,2018-03-19T13:32:55Z,2018-03-21T10:23:45Z,MERGED,True,9,12,1,https://github.com/orestisfl,run_assignments: check for A_COMMAND early,1,[],https://github.com/i3/i3/pull/3189,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3189,"git diff -w
diff --git a/src/assignments.c b/src/assignments.c
index a0f5d5a7..abacc0a3 100644
--- a/src/assignments.c
+++ b/src/assignments.c
@@ -22,7 +22,7 @@ void run_assignments(i3Window *window) {
     /* Check if any assignments match */
     Assignment *current;
     TAILQ_FOREACH(current, &assignments, assignments) {
-        if (!match_matches_window(&(current->match), window))
+        if (current->type != A_COMMAND || !match_matches_window(&(current->match), window))
             continue;
 
         bool skip = false;
@@ -45,9 +45,7 @@ void run_assignments(i3Window *window) {
         window->ran_assignments = srealloc(window->ran_assignments, sizeof(Assignment *) * window->nr_assignments);
         window->ran_assignments[window->nr_assignments - 1] = current;
 
-        DLOG(""matching assignment, would do:\n"");
-        if (current->type == A_COMMAND) {
-            DLOG(""execute command %s\n"", current->dest.command);
+        DLOG(""matching assignment, execute command %s\n"", current->dest.command);
         char *full_command;
         sasprintf(&full_command, ""[id=\""%d\""] %s"", window->id, current->dest.command);
         CommandResult *result = parse_command(full_command, NULL);
@@ -58,7 +56,6 @@ void run_assignments(i3Window *window) {
 
         command_result_free(result);
     }
-    }
 
     /* If any of the commands required re-rendering, we will do that now. */
     if (needs_tree_render)","git diff -w
diff --git a/src/assignments.c b/src/assignments.c
index a0f5d5a7..abacc0a3 100644
--- a/src/assignments.c
+++ b/src/assignments.c
@@ -22,7 +22,7 @@ void run_assignments(i3Window *window) {
     /* Check if any assignments match */
     Assignment *current;
     TAILQ_FOREACH(current, &assignments, assignments) {
-        if (!match_matches_window(&(current->match), window))
+        if (current->type != A_COMMAND || !match_matches_window(&(current->match), window))
             continue;
 
         bool skip = false;
@@ -45,9 +45,7 @@ void run_assignments(i3Window *window) {
         window->ran_assignments = srealloc(window->ran_assignments, sizeof(Assignment *) * window->nr_assignments);
         window->ran_assignments[window->nr_assignments - 1] = current;
 
-        DLOG(""matching assignment, would do:\n"");
-        if (current->type == A_COMMAND) {
-            DLOG(""execute command %s\n"", current->dest.command);
+        DLOG(""matching assignment, execute command %s\n"", current->dest.command);
         char *full_command;
         sasprintf(&full_command, ""[id=\""%d\""] %s"", window->id, current->dest.command);
         CommandResult *result = parse_command(full_command, NULL);
@@ -58,7 +56,6 @@ void run_assignments(i3Window *window) {
 
         command_result_free(result);
     }
-    }
 
     /* If any of the commands required re-rendering, we will do that now. */
     if (needs_tree_render)",True,{}
i3/i3,https://github.com/i3/i3,3191,2018-03-19T16:32:53Z,2018-03-20T07:39:25Z,2018-03-21T10:23:37Z,MERGED,True,1,2,1,https://github.com/orestisfl,Fix userguide link,1,[],https://github.com/i3/i3/pull/3191,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3191,"[[move_to_outputs]] doesn't work currently:
https://i3wm.org/docs/userguide.html#move_to_outputs
This does:
https://i3wm.org/docs/userguide.html#_moving_containers_workspaces_to_randr_outputs
This combines a 'BlockId Element' with an 'anchor'. Both should work
now.","[[move_to_outputs]] doesn't work currently:
https://i3wm.org/docs/userguide.html#move_to_outputs
This does:
https://i3wm.org/docs/userguide.html#_moving_containers_workspaces_to_randr_outputs
This combines a 'BlockId Element' with an 'anchor'. Both should work
now.",True,{}
i3/i3,https://github.com/i3/i3,3192,2018-03-20T13:14:12Z,2018-03-29T09:16:13Z,2018-03-29T09:16:59Z,MERGED,True,11,21,1,https://github.com/Exagone313,Fix potential memory leak,1,[],https://github.com/i3/i3/pull/3192,https://github.com/Exagone313,1,https://github.com/i3/i3/pull/3192,"xkb_state_new uses calloc and may fail in a rare case, which would cause a memory leak (for dummy_state_* variables).
Note that xkb_state_unref checks if the parameter given is not null (!state) before freeing.
Calls to xkb_state_new have been grouped to remove code duplication.","xkb_state_new uses calloc and may fail in a rare case, which would cause a memory leak (for dummy_state_* variables).
Note that xkb_state_unref checks if the parameter given is not null (!state) before freeing.
Calls to xkb_state_new have been grouped to remove code duplication.",True,{}
i3/i3,https://github.com/i3/i3,3192,2018-03-20T13:14:12Z,2018-03-29T09:16:13Z,2018-03-29T09:16:59Z,MERGED,True,11,21,1,https://github.com/Exagone313,Fix potential memory leak,1,[],https://github.com/i3/i3/pull/3192,https://github.com/Exagone313,2,https://github.com/i3/i3/pull/3192#issuecomment-376476931,"xkb_state_new uses calloc and may fail in a rare case, which would cause a memory leak (for dummy_state_* variables).
Note that xkb_state_unref checks if the parameter given is not null (!state) before freeing.
Calls to xkb_state_new have been grouped to remove code duplication.",I updated it.,True,{}
i3/i3,https://github.com/i3/i3,3193,2018-03-21T07:45:45Z,2018-03-26T15:59:35Z,2018-07-12T00:54:49Z,MERGED,True,16,8,1,https://github.com/orestisfl,xcb_drag_prepare_cb: drain events,1,[],https://github.com/i3/i3/pull/3193,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3193,"As discussed in PR #3085, X11 events can appear while dragloop->callback() is running.
I can ""verify"" the results here with some new tests for floating dragging.
It might also be worth investigating why ev_run -> ev_loop makes a difference.","As discussed in PR #3085, X11 events can appear while dragloop->callback() is running.
I can ""verify"" the results here with some new tests for floating dragging.
It might also be worth investigating why ev_run -> ev_loop makes a difference.",True,{}
i3/i3,https://github.com/i3/i3,3193,2018-03-21T07:45:45Z,2018-03-26T15:59:35Z,2018-07-12T00:54:49Z,MERGED,True,16,8,1,https://github.com/orestisfl,xcb_drag_prepare_cb: drain events,1,[],https://github.com/i3/i3/pull/3193,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3193#issuecomment-374856338,"As discussed in PR #3085, X11 events can appear while dragloop->callback() is running.
I can ""verify"" the results here with some new tests for floating dragging.
It might also be worth investigating why ev_run -> ev_loop makes a difference.","To clarify, you are not yet done with the PR because you want to add tests still?",True,{}
i3/i3,https://github.com/i3/i3,3193,2018-03-21T07:45:45Z,2018-03-26T15:59:35Z,2018-07-12T00:54:49Z,MERGED,True,16,8,1,https://github.com/orestisfl,xcb_drag_prepare_cb: drain events,1,[],https://github.com/i3/i3/pull/3193,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/3193#issuecomment-374859601,"As discussed in PR #3085, X11 events can appear while dragloop->callback() is running.
I can ""verify"" the results here with some new tests for floating dragging.
It might also be worth investigating why ev_run -> ev_loop makes a difference.","The tests will be for floating dragging that will work because of the change here. If I write them, I will create some convenience functions to be used by #3085 also.
Whether this happens inside this PR is up to you.
Another reason I don't really like this change here is that it is more ""trial and error"" (the ev_loop part) rather than understanding why it works.",True,{}
i3/i3,https://github.com/i3/i3,3193,2018-03-21T07:45:45Z,2018-03-26T15:59:35Z,2018-07-12T00:54:49Z,MERGED,True,16,8,1,https://github.com/orestisfl,xcb_drag_prepare_cb: drain events,1,[],https://github.com/i3/i3/pull/3193,https://github.com/Airblader,4,https://github.com/i3/i3/pull/3193#issuecomment-374923244,"As discussed in PR #3085, X11 events can appear while dragloop->callback() is running.
I can ""verify"" the results here with some new tests for floating dragging.
It might also be worth investigating why ev_run -> ev_loop makes a difference.","I don't understand it either, but since @stapelberg and you both confirmed that it works better, I'd be fine with merging it for now. I'm still not entirely sure whether getting this merged as-is is your goal, though. :-)",True,{}
i3/i3,https://github.com/i3/i3,3193,2018-03-21T07:45:45Z,2018-03-26T15:59:35Z,2018-07-12T00:54:49Z,MERGED,True,16,8,1,https://github.com/orestisfl,xcb_drag_prepare_cb: drain events,1,[],https://github.com/i3/i3/pull/3193,https://github.com/orestisfl,5,https://github.com/i3/i3/pull/3193#issuecomment-374940683,"As discussed in PR #3085, X11 events can appear while dragloop->callback() is running.
I can ""verify"" the results here with some new tests for floating dragging.
It might also be worth investigating why ev_run -> ev_loop makes a difference.","@stapelberg hasn't tested (maybe not even seen?) the ev_loop part. The drain part is understandable: while dragloop is running more events are produced (written in the file descriptor that ev_io is watching), we don't catch them (because ev_loop is not running?).
I'll play with some floating drag tests and maybe write the tiling drag ones concurrently to see if the issue is present in a different situation.",True,{}
i3/i3,https://github.com/i3/i3,3193,2018-03-21T07:45:45Z,2018-03-26T15:59:35Z,2018-07-12T00:54:49Z,MERGED,True,16,8,1,https://github.com/orestisfl,xcb_drag_prepare_cb: drain events,1,[],https://github.com/i3/i3/pull/3193,https://github.com/orestisfl,6,https://github.com/i3/i3/pull/3193#issuecomment-375969953,"As discussed in PR #3085, X11 events can appear while dragloop->callback() is running.
I can ""verify"" the results here with some new tests for floating dragging.
It might also be worth investigating why ev_run -> ev_loop makes a difference.",Up.,True,{}
i3/i3,https://github.com/i3/i3,3193,2018-03-21T07:45:45Z,2018-03-26T15:59:35Z,2018-07-12T00:54:49Z,MERGED,True,16,8,1,https://github.com/orestisfl,xcb_drag_prepare_cb: drain events,1,[],https://github.com/i3/i3/pull/3193,https://github.com/stapelberg,7,https://github.com/i3/i3/pull/3193#issuecomment-376218073,"As discussed in PR #3085, X11 events can appear while dragloop->callback() is running.
I can ""verify"" the results here with some new tests for floating dragging.
It might also be worth investigating why ev_run -> ev_loop makes a difference.",Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/moodboom,1,https://github.com/i3/i3/pull/3194,Updated [resize grow] to be able to harvest pct from all other windows in the same container,Updated [resize grow] to be able to harvest pct from all other windows in the same container,True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/moodboom,2,https://github.com/i3/i3/pull/3194#issuecomment-374922199,Updated [resize grow] to be able to harvest pct from all other windows in the same container,I have a question about the best way to deal with [min_pct].  Can we make that a configuration instead of a hardcoded value?,True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3194#issuecomment-374922857,Updated [resize grow] to be able to harvest pct from all other windows in the same container,"I haven't yet looked at the PR, but what is min_pct for, anyway? From my original understanding of the proposal I don't see why we'd need something like that. It has always been about resizing other windows when one of the windows has reached its minimum size already.
I'd definitely prefer not having to add any configuration for this.",True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/moodboom,4,https://github.com/i3/i3/pull/3194#issuecomment-374924094,Updated [resize grow] to be able to harvest pct from all other windows in the same container,"It looked to me like the original code bailed out if the request pushed the window into negative size.  So it would bail out randomly at some point where you WOULD have crossed into negative.  To get the resizing math right, I needed to know the actual precise preferred minimum size, which I assume would be something greater than zero.  The previous code always checked against zero.  Correct me if I'm wrong, that's my first take on it.",True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/moodboom,5,https://github.com/i3/i3/pull/3194#issuecomment-374924659,Updated [resize grow] to be able to harvest pct from all other windows in the same container,"I'm not sure why Travis reported failure, the log looked okay to me, maybe I missed something?",True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/orestisfl,6,https://github.com/i3/i3/pull/3194#issuecomment-374924953,Updated [resize grow] to be able to harvest pct from all other windows in the same container,Run clang-format -i src/commands.c,True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/moodboom,7,https://github.com/i3/i3/pull/3194#issuecomment-374925097,Updated [resize grow] to be able to harvest pct from all other windows in the same container,Ah ok thank you @orestisf1993.,True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/Airblader,8,https://github.com/i3/i3/pull/3194#issuecomment-374930543,Updated [resize grow] to be able to harvest pct from all other windows in the same container,"We explicitly got rid of some minimum width threshold not too long ago because there's just no way to please both small and large screen users, whether you use absolute or relative values (sorry, just remembered this right now). The idea there was that we don't have a good reason to have configuration for it since we can just use 0%.
With this change, I guess we would have a reason to re-introduce a minimum width. But of course we can't just reintroduce the problem in #3071. The problem with making this configurable is that some users will want it absolute, others percentage-based and soon enough people will want it to be a per-window setting etc.
I don't yet have an answer of what I'd prefer to do.",True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/moodboom,9,https://github.com/i3/i3/pull/3194#issuecomment-374931571,Updated [resize grow] to be able to harvest pct from all other windows in the same container,"Absolutely understood.  That's why I was wondering about adding it (as a configuration), as it will be different for different use cases I would think.  Everyone sets their parameters of [resize grow ...] differently.  We could set it as an additional parameter to [resize grow], but then it will get messy if it is ever needed elsewhere as well.",True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/moodboom,10,https://github.com/i3/i3/pull/3194#issuecomment-374932818,Updated [resize grow] to be able to harvest pct from all other windows in the same container,"What about optional configurations, that can specify a pct_min or a px_min, and if neither are provided we default to zero?
One problem with using zero is that I've seen apps (gnome-terminal, nautilus) crash and misbehave if they get that small.",True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/moodboom,11,https://github.com/i3/i3/pull/3194#issuecomment-375082939,Updated [resize grow] to be able to harvest pct from all other windows in the same container,"I tested further, and a min_pct of zero crashes i3.  A small value (eg 0.0001) works fine, but again, some windows misbehave and don't recover if they get that small.  Not i3's fault really, but seems best to defend against it.
After reading previous discussions, I understand the desire to keep things simple.  Any extra complexity has side effect.  To keep things as minimal as possible, I could add one config, min_pct, that would be optional, and default to something small (eg: .01).",True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/moodboom,12,https://github.com/i3/i3/pull/3194#issuecomment-375120352,Updated [resize grow] to be able to harvest pct from all other windows in the same container,"Note that with
    double min_pct = fabs(ppt / 100.0 / children);
my windows get quite small and I see the misbehavior I've mentioned when windows get extremely small.
I'm still hoping we can add a min_pct configuration, but we can go with whatever you guys think best.",True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/orestisfl,13,https://github.com/i3/i3/pull/3194#issuecomment-375120868,Updated [resize grow] to be able to harvest pct from all other windows in the same container,Does this happen on next too?,True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/moodboom,14,https://github.com/i3/i3/pull/3194#issuecomment-375122329,Updated [resize grow] to be able to harvest pct from all other windows in the same container,"To be honest, I have been juggling between i3 next and i3 gaps gaps-next, and mostly testing with gaps-next.  Shall I try in next, if you think that may be subtly different?",True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/orestisfl,15,https://github.com/i3/i3/pull/3194#issuecomment-375124250,Updated [resize grow] to be able to harvest pct from all other windows in the same container,"You can run i3 inside Xephyr, allowing you to change branches, make changes etc painlessly.
I have a script here if you think it can help you.
I don't know the exact changes of i3-gaps but it would be nice to consider not breaking the i3-gaps users' workflow.
Anyway, do your windows get problematically small when you resize them on either next branch currently?",True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/moodboom,16,https://github.com/i3/i3/pull/3194#issuecomment-375124678,Updated [resize grow] to be able to harvest pct from all other windows in the same container,"Yes it will shrink even smaller than shown, and apps like gnome-terminal do not recover and redraw correctly afterwards.",True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/moodboom,17,https://github.com/i3/i3/pull/3194#issuecomment-375125193,Updated [resize grow] to be able to harvest pct from all other windows in the same container,"I should mention that I bind grow and shrink directly to modified arrow keys, and click them quickly to resize, so I use a very small growth percent of 3%.",True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/orestisfl,18,https://github.com/i3/i3/pull/3194#issuecomment-375128527,Updated [resize grow] to be able to harvest pct from all other windows in the same container,"Yeah, I am not sure about the current (next) behaviour either:

There are 3 terminals here, it gets buggy.
Actually, double min_pct = fabs(ppt / 100.0 / children) is not equivalent with the next behaviour after all. Containers can get almost 0 percent right now.",True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/moodboom,19,https://github.com/i3/i3/pull/3194#issuecomment-375133148,Updated [resize grow] to be able to harvest pct from all other windows in the same container,So I'm back to leaning towards a min_pct config.  What do you guys think?,True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/orestisfl,20,https://github.com/i3/i3/pull/3194#issuecomment-375140204,Updated [resize grow] to be able to harvest pct from all other windows in the same container,"Eg from emacs crash when it gets too small:
X protocol error: BadDrawable (invalid Pixmap or Window parameter) on protocol request 70
When compiled with GTK, Emacs cannot recover from X disconnects.
This is a GTK bug: https://bugzilla.gnome.org/show_bug.cgi?id=85715
For details, see etc/PROBLEMS.
Fatal error 6: Aborted",True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/moodboom,21,https://github.com/i3/i3/pull/3194#issuecomment-375154325,Updated [resize grow] to be able to harvest pct from all other windows in the same container,"Yep it appears I need to prevent really small sizes.  I would think there are cases now where i3 allows a nearly-minimum-size window to be shrunken and those problems would occur, right?",True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/moodboom,22,https://github.com/i3/i3/pull/3194#issuecomment-375168107,Updated [resize grow] to be able to harvest pct from all other windows in the same container,What if I used a minimum pct min_pct equal to the resize amount?  Does that seem reasonable in all cases?,True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/Airblader,23,https://github.com/i3/i3/pull/3194#issuecomment-375189162,Updated [resize grow] to be able to harvest pct from all other windows in the same container,"Just as an explanation, when we got rid of the minimum size the argument was that all we need to prevent are zero sizes (which may rightfully break clients), but anything above zero is up to the user: generally, they wouldn't want to resize a window down to, say, one pixel anyway. And a client breaking permanently after being resized to a small but positive size is something where I'd consider the client to be broken; we cannot possibly accommodate that in the window manager.
I do like the suggestion of using the resize percentage as the minimum width (in some way or another) because I'd still like to avoid adding configuration for this. Can we go with that for now?
I haven't yet had time to look at the PR itself.",True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/moodboom,24,https://github.com/i3/i3/pull/3194#issuecomment-375241827,Updated [resize grow] to be able to harvest pct from all other windows in the same container,"Sure that sounds good.  That's how it is coded at the moment, and is working well for me for now, let me know what you guys think.",True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/moodboom,25,https://github.com/i3/i3/pull/3194#issuecomment-375341667,Updated [resize grow] to be able to harvest pct from all other windows in the same container,"If you guys still want an automatic min_size, how about using the resize ppt, with validation that clips low and high values?  No less than .005, no more than .3.
Or I can add an official min_pct config, with a reasonable default of 5%.  In my opinion, it seems to be a logical thing to make configurable in a window manager that supports so many possible screen layouts.  Is there a use case that would be negatively impacted by such a configuration?",True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/moodboom,26,https://github.com/i3/i3/pull/3194#issuecomment-375354430,Updated [resize grow] to be able to harvest pct from all other windows in the same container,"Sorry, coding on phone is not a good idea.  :-)  I'll work on this later.  I think I need to re-add orestisf1993's suggestion to divide by the number of children to get successful auto min_pct.",True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/moodboom,27,https://github.com/i3/i3/pull/3194#issuecomment-375463664,Updated [resize grow] to be able to harvest pct from all other windows in the same container,"Are the test failures due to the tests expecting old behavior?  It seems like that may be the case, but maybe you all are more familiar with the test suite and can help me with that.
Resizing seem to be working well enough here considering the constraints.  I think I've gotten min_pct as ""automatic"" as I can.  A really large ppt grow will only bring the target to take up an equal share of the screen, not optimal but not horrible I guess.  It still seems inferior to adding configuration.  I'll wait for further feedback.  Thanks all.",True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/orestisfl,28,https://github.com/i3/i3/pull/3194#issuecomment-375466020,Updated [resize grow] to be able to harvest pct from all other windows in the same container,"No, the test should work. The failing test opens 4 windows and grows one of them to 50% with resize grow width 10 px or 25 ppt.",True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/moodboom,29,https://github.com/i3/i3/pull/3194#issuecomment-375472825,Updated [resize grow] to be able to harvest pct from all other windows in the same container,"Correct me if I'm wrong, but I believe that the test will fail then with the new math.  min_pct will be set to fmax(.03,fmin(.25,fabs(.25))) = .25.  The ""other"" windows will not shrink as much as the test expects.  But it's doing what is expected with the new math.
As I mentioned, I'm not thrilled with the automatic behavior in all cases.",True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/orestisfl,30,https://github.com/i3/i3/pull/3194#issuecomment-375473832,Updated [resize grow] to be able to harvest pct from all other windows in the same container,"I mean, the use case the test represents should still be a valid one. I don't agree with the new formula, kinda restrictive don't you think?",True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/moodboom,31,https://github.com/i3/i3/pull/3194#issuecomment-375475629,Updated [resize grow] to be able to harvest pct from all other windows in the same container,Yes I agree it is.  I'd like to add the config.  What are your thoughts on that?,True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/orestisfl,32,https://github.com/i3/i3/pull/3194#issuecomment-375485178,Updated [resize grow] to be able to harvest pct from all other windows in the same container,I'd like to give some time for Ingo or Michael to respond.,True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/moodboom,33,https://github.com/i3/i3/pull/3194#issuecomment-375485865,Updated [resize grow] to be able to harvest pct from all other windows in the same container,"Sounds good, thanks @orestisf1993",True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/moodboom,34,https://github.com/i3/i3/pull/3194#issuecomment-375499458,Updated [resize grow] to be able to harvest pct from all other windows in the same container,"@orestisf1993 maybe this auto min_pct is a little better, it's closer to your suggestion.",True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/Airblader,35,https://github.com/i3/i3/pull/3194#issuecomment-375759532,Updated [resize grow] to be able to harvest pct from all other windows in the same container,"I'm still a bit undecided on it, to be honest. Out of curiosity, why is there the restriction to 0.03 in there? The other values can't ever reach zero, anyway, right?
Maybe a possible way forward would be getting some people to run this patch for a while to see how well it works out in everyday usage for different people; e.g., by asking on the mailing list and the subreddit. I'd like to rule out making things worse for some people here.",True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/moodboom,36,https://github.com/i3/i3/pull/3194#issuecomment-375776397,Updated [resize grow] to be able to harvest pct from all other windows in the same container,"Thanks @Airblader will do.  I'll post a request to the subreddit and the mailing list.
The 0.03 is in there because if in general a window gets too small, things generally act up.  The previous approach of failing the grow if anything went negative was restrictive enough to prevent that in many cases.
I can remove it but it will more often result in very small sizes, if the grow ppt is small or there are a large number of small windows.  What would you prefer?
In my usage, I have found that a single user-modifiable min_pct config value is more precise than the auto behavior.",True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/Airblader,37,https://github.com/i3/i3/pull/3194#issuecomment-375777604,Updated [resize grow] to be able to harvest pct from all other windows in the same container,"I can remove it but it will more often result in very small sizes, if the grow ppt is small or there are a large number of small windows. What would you prefer?

I'd prefer removing it for now for the test and see how well it works without. The problem with a 0.03 is exactly the reason we removed the 5% limit we had previously: people have very differently sized monitors and there's just no single fixed number that fits everyone. And with the 0.03, we are practically re-introducing this limit since it'd be >= 0.03.

In my usage, I have found that a single user-modifiable min_pct config value is more precise than the auto behavior.

Yes, and I really get understand that a configuration for this seems to make it easier. However, more configuration also means more mental complexity, which is why we try to avoid making things configurable that don't need to be configurable. If we find that there is no way around it, we can consider it; I'm not yet convinced that we can't find a good way to do it automatically. :-) Also, adding a configuration later on in a second step is easy, but removing one we didn't need to begin with is a breaking change.",True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/moodboom,38,https://github.com/i3/i3/pull/3194#issuecomment-375779718,Updated [resize grow] to be able to harvest pct from all other windows in the same container,"@Airblader sounds great, thanks again!",True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/moodboom,39,https://github.com/i3/i3/pull/3194#issuecomment-381272787,Updated [resize grow] to be able to harvest pct from all other windows in the same container,"Quick update:

The request for feedback has 10 upvotes but no comments.
I've been using it successfully here for three weeks with no issues, using a 6% minimum size.",True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/moodboom,40,https://github.com/i3/i3/pull/3194#issuecomment-390438973,Updated [resize grow] to be able to harvest pct from all other windows in the same container,Rebased onto latest i3 next commits.,True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/moodboom,41,https://github.com/i3/i3/pull/3194#issuecomment-407269669,Updated [resize grow] to be able to harvest pct from all other windows in the same container,"UPDATE: This continues to perform well for me at 6% minimum size.  I have found that providing a specific min_pct configuration value is very helpful to make daily layout management more efficient, and prevent the current issues users are having with terminals crashing due to becoming (uselessly) small.",True,"{'THUMBS_UP': ['https://github.com/Everlag', 'https://github.com/yagarea']}"
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/orestisfl,42,https://github.com/i3/i3/pull/3194#issuecomment-415861900,Updated [resize grow] to be able to harvest pct from all other windows in the same container,What if we ensured that each container will have at least 1 pixel? Kinda like px_resize_to_percent.,True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/moodboom,43,https://github.com/i3/i3/pull/3194#issuecomment-417672051,Updated [resize grow] to be able to harvest pct from all other windows in the same container,"@orestisf1993 we could ensure 1 pix, that would help prevent i3-related crashes without adding any new configuration.
But it would not address the following, which I feel are important:

the window manager will easily allow windows to become ""unuseably small"", which makes the UI unfriendly
many applications crash when made ""unuseably small""; this problem will likely persist for the near future

I could set up the 1-pixel-minimum limit to get this pull request approved, and tackle these other issues later, if you like.",True,{}
i3/i3,https://github.com/i3/i3,3194,2018-03-21T12:34:59Z,,2018-11-10T21:05:30Z,OPEN,False,70,12,1,https://github.com/moodboom,Updated [resize grow] to harvest from other windows,14,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3194,https://github.com/orestisfl,44,https://github.com/i3/i3/pull/3194#issuecomment-417703697,Updated [resize grow] to be able to harvest pct from all other windows in the same container,"I could set up the 1-pixel-minimum limit to get this pull request approved, and tackle these other issues later, if you like.

I think we could discuss this in a separate issue / PR and adjust the other resize functions as well.
Getting the final pixel size for split containers from con->percent isn't straightforward. I've added some code recently that dealt with this, see #3389.",True,{}
i3/i3,https://github.com/i3/i3,3195,2018-03-23T13:47:52Z,2018-03-23T13:52:49Z,2018-03-24T16:36:49Z,MERGED,True,35,1,2,https://github.com/orestisfl,Improve directional moving of fullscreen containers,1,[],https://github.com/i3/i3/pull/3195,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3195,Fixes #2993.,Fixes #2993.,True,{}
i3/i3,https://github.com/i3/i3,3196,2018-03-23T17:27:45Z,2018-03-24T17:49:27Z,2018-03-24T17:53:06Z,MERGED,True,1,19,1,https://github.com/orestisfl,_con_move_to_con cleanup,3,[],https://github.com/i3/i3/pull/3196,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3196,See review commit by review commit,See review commit by review commit,True,{}
i3/i3,https://github.com/i3/i3,3198,2018-03-24T12:28:33Z,2018-03-24T12:48:00Z,2018-03-24T16:36:47Z,MERGED,True,7,11,1,https://github.com/orestisfl,_workspace_show -> workspace_show,1,[],https://github.com/i3/i3/pull/3198,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3198,"a9b57a4 removed the extra parameter of
workspace_show.","a9b57a4 removed the extra parameter of
workspace_show.",True,{}
i3/i3,https://github.com/i3/i3,3199,2018-03-24T13:15:43Z,2018-03-24T17:39:38Z,2018-03-24T17:40:03Z,MERGED,True,2,4,1,https://github.com/orestisfl,workspace_show: remove redundant if,1,[],https://github.com/i3/i3/pull/3199,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3199,,,True,{}
i3/i3,https://github.com/i3/i3,3200,2018-03-25T01:51:53Z,2018-03-29T10:06:30Z,2018-03-29T10:08:54Z,MERGED,True,50,2,3,https://github.com/orestisfl,_con_move_to_con: don't change focus when moving to active workspace,1,[],https://github.com/i3/i3/pull/3200,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3200,,,True,{}
i3/i3,https://github.com/i3/i3,3200,2018-03-25T01:51:53Z,2018-03-29T10:06:30Z,2018-03-29T10:08:54Z,MERGED,True,50,2,3,https://github.com/orestisfl,_con_move_to_con: don't change focus when moving to active workspace,1,[],https://github.com/i3/i3/pull/3200,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3200#issuecomment-375940253,,Ah this proved harder than it looked. I'll look into the failing tests.,True,{}
i3/i3,https://github.com/i3/i3,3200,2018-03-25T01:51:53Z,2018-03-29T10:06:30Z,2018-03-29T10:08:54Z,MERGED,True,50,2,3,https://github.com/orestisfl,_con_move_to_con: don't change focus when moving to active workspace,1,[],https://github.com/i3/i3/pull/3200,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/3200#issuecomment-376605676,,Not a super pretty solution but _con_move_to_con is used / con_move_to_workspace is used in a bunch of places.,True,{}
i3/i3,https://github.com/i3/i3,3200,2018-03-25T01:51:53Z,2018-03-29T10:06:30Z,2018-03-29T10:08:54Z,MERGED,True,50,2,3,https://github.com/orestisfl,_con_move_to_con: don't change focus when moving to active workspace,1,[],https://github.com/i3/i3/pull/3200,https://github.com/Airblader,4,https://github.com/i3/i3/pull/3200#issuecomment-376861105,,Looks like Travis had a hiccup there. Can you just push some change + push undoing that again so re-trigger Travis?,True,{}
i3/i3,https://github.com/i3/i3,3200,2018-03-25T01:51:53Z,2018-03-29T10:06:30Z,2018-03-29T10:08:54Z,MERGED,True,50,2,3,https://github.com/orestisfl,_con_move_to_con: don't change focus when moving to active workspace,1,[],https://github.com/i3/i3/pull/3200,https://github.com/orestisfl,5,https://github.com/i3/i3/pull/3200#issuecomment-376866263,,up,True,{}
i3/i3,https://github.com/i3/i3,3202,2018-03-25T11:30:11Z,2018-03-25T12:31:40Z,2018-03-25T12:37:25Z,MERGED,True,50,3,2,https://github.com/orestisfl,Prefer fullscreen floating containers when on directional focus,1,[],https://github.com/i3/i3/pull/3202,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3202,Fixes #3201,Fixes #3201,True,{}
i3/i3,https://github.com/i3/i3,3202,2018-03-25T11:30:11Z,2018-03-25T12:31:40Z,2018-03-25T12:37:25Z,MERGED,True,50,3,2,https://github.com/orestisfl,Prefer fullscreen floating containers when on directional focus,1,[],https://github.com/i3/i3/pull/3202,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3202#issuecomment-375964370,Fixes #3201,up,True,{}
i3/i3,https://github.com/i3/i3,3203,2018-03-25T17:08:34Z,2018-03-25T18:12:17Z,2018-03-25T18:19:34Z,MERGED,True,9,11,4,https://github.com/orestisfl,memory leaks,4,[],https://github.com/i3/i3/pull/3203,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3203,,,True,{}
i3/i3,https://github.com/i3/i3,3204,2018-03-25T19:44:42Z,2018-03-26T19:35:13Z,2018-03-26T19:38:32Z,MERGED,True,27,2,2,https://github.com/orestisfl,_con_move_to_con: focus_next isn't always con_next_focused(con),1,[],https://github.com/i3/i3/pull/3204,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3204,"con_next_focused uses con's parent. But since con can be inside an unfocused container this means that one of it's siblings could become focused in the current workspace.
There is another small issue with focus_next: since we descend when focusing later, moving an unrelated container while a parent container is selected will discard the user's selection.","con_next_focused uses con's parent. But since con can be inside an unfocused container this means that one of it's siblings could become focused in the current workspace.
There is another small issue with focus_next: since we descend when focusing later, moving an unrelated container while a parent container is selected will discard the user's selection.",True,{}
i3/i3,https://github.com/i3/i3,3204,2018-03-25T19:44:42Z,2018-03-26T19:35:13Z,2018-03-26T19:38:32Z,MERGED,True,27,2,2,https://github.com/orestisfl,_con_move_to_con: focus_next isn't always con_next_focused(con),1,[],https://github.com/i3/i3/pull/3204,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3204#issuecomment-376285980,"con_next_focused uses con's parent. But since con can be inside an unfocused container this means that one of it's siblings could become focused in the current workspace.
There is another small issue with focus_next: since we descend when focusing later, moving an unrelated container while a parent container is selected will discard the user's selection.","(sorry if the requested review sends an extra notification, it was a missclick)",True,{}
i3/i3,https://github.com/i3/i3,3204,2018-03-25T19:44:42Z,2018-03-26T19:35:13Z,2018-03-26T19:38:32Z,MERGED,True,27,2,2,https://github.com/orestisfl,_con_move_to_con: focus_next isn't always con_next_focused(con),1,[],https://github.com/i3/i3/pull/3204,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3204#issuecomment-376286381,"con_next_focused uses con's parent. But since con can be inside an unfocused container this means that one of it's siblings could become focused in the current workspace.
There is another small issue with focus_next: since we descend when focusing later, moving an unrelated container while a parent container is selected will discard the user's selection.",Don't worry about it :-) I usually instantly delete all but one email regarding the same issue anyway.,True,{}
i3/i3,https://github.com/i3/i3,3205,2018-03-27T00:54:55Z,2018-03-27T07:02:29Z,2018-04-07T22:38:34Z,MERGED,True,2,3,1,https://github.com/orestisfl,cmd_append_layout: resolve_tilde already allocates memory,1,[],https://github.com/i3/i3/pull/3205,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3205,Fixes a small memory leak with all append_layout commands.,Fixes a small memory leak with all append_layout commands.,True,{}
i3/i3,https://github.com/i3/i3,3207,2018-03-27T19:39:53Z,2018-03-29T10:06:06Z,2018-03-29T10:08:38Z,MERGED,True,57,64,6,https://github.com/orestisfl,Introduce get_workspace_by_* functions,2,[],https://github.com/i3/i3/pull/3207,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3207,Could also be get_existing_workspace_by_*,Could also be get_existing_workspace_by_*,True,{}
i3/i3,https://github.com/i3/i3,3207,2018-03-27T19:39:53Z,2018-03-29T10:06:06Z,2018-03-29T10:08:38Z,MERGED,True,57,64,6,https://github.com/orestisfl,Introduce get_workspace_by_* functions,2,[],https://github.com/i3/i3/pull/3207,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3207#issuecomment-376861380,Could also be get_existing_workspace_by_*,"Yeah, let's rename them, please. Otherwise it's unclear whether they implicitly create the workspace.",True,{}
i3/i3,https://github.com/i3/i3,3207,2018-03-27T19:39:53Z,2018-03-29T10:06:06Z,2018-03-29T10:08:38Z,MERGED,True,57,64,6,https://github.com/orestisfl,Introduce get_workspace_by_* functions,2,[],https://github.com/i3/i3/pull/3207,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/3207#issuecomment-376867304,Could also be get_existing_workspace_by_*,up,True,{}
i3/i3,https://github.com/i3/i3,3210,2018-03-29T02:45:45Z,2018-03-30T10:57:42Z,2018-03-30T10:57:42Z,MERGED,True,33,3,2,https://github.com/notjuliee,add --modifier flag to i3-config-wizard (#3136),3,[],https://github.com/i3/i3/pull/3210,https://github.com/notjuliee,1,https://github.com/i3/i3/pull/3210,"The --modifier flag accepts either alt or win, and will generate the
configuration file without opening a window
Fixes #3136.","The --modifier flag accepts either alt or win, and will generate the
configuration file without opening a window
Fixes #3136.",True,{}
i3/i3,https://github.com/i3/i3,3210,2018-03-29T02:45:45Z,2018-03-30T10:57:42Z,2018-03-30T10:57:42Z,MERGED,True,33,3,2,https://github.com/notjuliee,add --modifier flag to i3-config-wizard (#3136),3,[],https://github.com/i3/i3/pull/3210,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3210#issuecomment-377476537,"The --modifier flag accepts either alt or win, and will generate the
configuration file without opening a window
Fixes #3136.","@Airblader can I use the github ""Squash and Merge"" feature or should the author squash the commits manually?",True,{}
i3/i3,https://github.com/i3/i3,3210,2018-03-29T02:45:45Z,2018-03-30T10:57:42Z,2018-03-30T10:57:42Z,MERGED,True,33,3,2,https://github.com/notjuliee,add --modifier flag to i3-config-wizard (#3136),3,[],https://github.com/i3/i3/pull/3210,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3210#issuecomment-377500852,"The --modifier flag accepts either alt or win, and will generate the
configuration file without opening a window
Fixes #3136.","We typically ask the author to do this, but I don't see a reason for why you can't use Github's feature if you want to do so. The other day on i3status I even resolved merge conflicts myself. :-)",True,{}
i3/i3,https://github.com/i3/i3,3211,2018-03-29T10:19:21Z,2018-03-29T10:19:33Z,2018-03-29T10:19:33Z,CLOSED,False,108,27,5,https://github.com/orestisfl,(Draft) save ran_assignments after reload,1,[],https://github.com/i3/i3/pull/3211,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3211,"Fixes #3190.
Here for safe keeping.
If anyone has ideas for improvements, please share.","Fixes #3190.
Here for safe keeping.
If anyone has ideas for improvements, please share.",True,{}
i3/i3,https://github.com/i3/i3,3213,2018-03-29T14:56:30Z,2018-03-30T10:48:13Z,2018-03-30T11:04:26Z,MERGED,True,2,5,1,https://github.com/orestisfl,Fix memory leak when _XKB_RULES_NAMES can't be found,1,[],https://github.com/i3/i3/pull/3213,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3213,"(see commit)
Fixes #2535.","(see commit)
Fixes #2535.",True,{}
i3/i3,https://github.com/i3/i3,3214,2018-03-30T19:13:31Z,2018-03-30T19:33:04Z,2018-03-30T19:33:04Z,MERGED,True,173,48,12,https://github.com/stapelberg,unflake t/525-i3bar-mouse-bindings.t,4,[],https://github.com/i3/i3/pull/3214,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3214,"Our current synchronization methods were not sufficient, and hence t/525-i3bar-mouse-bindings.t was flaky: thus far, we could synchronize our X11 connection with i3 or i3bar, but we could not synchronize i3bar’s IPC connection with i3. This pull requests introduces the “sync” IPC command to address that shortcoming.
Further, it turns out we need to synchronize with both i3 and i3bar, so the pull request also fixes that.
With the pull request applied, I have not been able to get t/525-i3bar-mouse-bindings.t to fail.
related to #3009","Our current synchronization methods were not sufficient, and hence t/525-i3bar-mouse-bindings.t was flaky: thus far, we could synchronize our X11 connection with i3 or i3bar, but we could not synchronize i3bar’s IPC connection with i3. This pull requests introduces the “sync” IPC command to address that shortcoming.
Further, it turns out we need to synchronize with both i3 and i3bar, so the pull request also fixes that.
With the pull request applied, I have not been able to get t/525-i3bar-mouse-bindings.t to fail.
related to #3009",True,{'HEART': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,3215,2018-03-31T23:12:36Z,2018-04-03T18:42:01Z,2018-04-03T18:53:05Z,MERGED,True,82,7,2,https://github.com/orestisfl,Small window decoration scrolling bugfix,2,[],https://github.com/i3/i3/pull/3215,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3215,,,True,{}
i3/i3,https://github.com/i3/i3,3215,2018-03-31T23:12:36Z,2018-04-03T18:42:01Z,2018-04-03T18:53:05Z,MERGED,True,82,7,2,https://github.com/orestisfl,Small window decoration scrolling bugfix,2,[],https://github.com/i3/i3/pull/3215,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3215#issuecomment-377751176,,Change looks good and I really appreciate your commit messages. Should we add a test for this?,True,{}
i3/i3,https://github.com/i3/i3,3215,2018-03-31T23:12:36Z,2018-04-03T18:42:01Z,2018-04-03T18:53:05Z,MERGED,True,82,7,2,https://github.com/orestisfl,Small window decoration scrolling bugfix,2,[],https://github.com/i3/i3/pull/3215,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/3215#issuecomment-377774001,,Added the tests,True,{}
i3/i3,https://github.com/i3/i3,3221,2018-04-04T05:44:02Z,2018-04-05T08:32:39Z,2018-04-05T08:32:46Z,MERGED,True,36,11,4,https://github.com/ograff,Issue 3208,1,[],https://github.com/i3/i3/pull/3221,https://github.com/ograff,1,https://github.com/i3/i3/pull/3221,These two commits fix and test the issue of interpreting output assignments as directions when renaming a workspace.,These two commits fix and test the issue of interpreting output assignments as directions when renaming a workspace.,True,{'THUMBS_UP': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,3221,2018-04-04T05:44:02Z,2018-04-05T08:32:39Z,2018-04-05T08:32:46Z,MERGED,True,36,11,4,https://github.com/ograff,Issue 3208,1,[],https://github.com/i3/i3/pull/3221,https://github.com/ograff,2,https://github.com/i3/i3/pull/3221#issuecomment-378487070,These two commits fix and test the issue of interpreting output assignments as directions when renaming a workspace.,"The test I added passes with this fix, and fails if this fix is not included, evidenced by https://travis-ci.org/ograff/i3/jobs/361975157",True,"{'THUMBS_UP': ['https://github.com/Airblader', 'https://github.com/orestisfl']}"
i3/i3,https://github.com/i3/i3,3221,2018-04-04T05:44:02Z,2018-04-05T08:32:39Z,2018-04-05T08:32:46Z,MERGED,True,36,11,4,https://github.com/ograff,Issue 3208,1,[],https://github.com/i3/i3/pull/3221,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3221#issuecomment-378506472,These two commits fix and test the issue of interpreting output assignments as directions when renaming a workspace.,"Awesome, thanks! It looks good to me. @orestisf1993 What do you think?
If we had to use the function in more places it would make sense to once again refactor finding the output into a function (which then calls the function taking the parsed output), but we can worry about that when we come to that scenario.",True,{}
i3/i3,https://github.com/i3/i3,3221,2018-04-04T05:44:02Z,2018-04-05T08:32:39Z,2018-04-05T08:32:46Z,MERGED,True,36,11,4,https://github.com/ograff,Issue 3208,1,[],https://github.com/i3/i3/pull/3221,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/3221#issuecomment-378541850,These two commits fix and test the issue of interpreting output assignments as directions when renaming a workspace.,"I think we can close #3208 with this PR and move the rest of the problems mentioned in a new issue.
@ograff do you feel like opening a new issue describing the other problems you found?",True,{'THUMBS_UP': ['https://github.com/Airblader']}
i3/i3,https://github.com/i3/i3,3221,2018-04-04T05:44:02Z,2018-04-05T08:32:39Z,2018-04-05T08:32:46Z,MERGED,True,36,11,4,https://github.com/ograff,Issue 3208,1,[],https://github.com/i3/i3/pull/3221,https://github.com/Airblader,5,https://github.com/i3/i3/pull/3221#issuecomment-378597605,These two commits fix and test the issue of interpreting output assignments as directions when renaming a workspace.,"I like the idea of splitting the issues. When doing so, please also adjust the commit message to say fixes #3208.",True,{}
i3/i3,https://github.com/i3/i3,3221,2018-04-04T05:44:02Z,2018-04-05T08:32:39Z,2018-04-05T08:32:46Z,MERGED,True,36,11,4,https://github.com/ograff,Issue 3208,1,[],https://github.com/i3/i3/pull/3221,https://github.com/ograff,6,https://github.com/i3/i3/pull/3221#issuecomment-378829026,These two commits fix and test the issue of interpreting output assignments as directions when renaming a workspace.,Follow up issue located at #3228.,True,{}
i3/i3,https://github.com/i3/i3,3221,2018-04-04T05:44:02Z,2018-04-05T08:32:39Z,2018-04-05T08:32:46Z,MERGED,True,36,11,4,https://github.com/ograff,Issue 3208,1,[],https://github.com/i3/i3/pull/3221,https://github.com/orestisfl,7,https://github.com/i3/i3/pull/3221#issuecomment-378860351,These two commits fix and test the issue of interpreting output assignments as directions when renaming a workspace.,Thank you!,True,{}
i3/i3,https://github.com/i3/i3,3223,2018-04-04T15:26:39Z,2018-04-05T08:59:35Z,2018-04-05T11:49:42Z,MERGED,True,6,29,5,https://github.com/orestisfl, Prefer compiler warnings to assertions for unhandled switch cases,2,[],https://github.com/i3/i3/pull/3223,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3223,,,True,{}
i3/i3,https://github.com/i3/i3,3223,2018-04-04T15:26:39Z,2018-04-05T08:59:35Z,2018-04-05T11:49:42Z,MERGED,True,6,29,5,https://github.com/orestisfl, Prefer compiler warnings to assertions for unhandled switch cases,2,[],https://github.com/i3/i3/pull/3223,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3223#issuecomment-378829129,,"I understand the idea behind using the compiler information, but it requires this to actually be checked somehow. Which I'd only want to do if we can do this automatically (in Travis). Can we get the compiler to error out on this warning in Travis?",True,{}
i3/i3,https://github.com/i3/i3,3223,2018-04-04T15:26:39Z,2018-04-05T08:59:35Z,2018-04-05T11:49:42Z,MERGED,True,6,29,5,https://github.com/orestisfl, Prefer compiler warnings to assertions for unhandled switch cases,2,[],https://github.com/i3/i3/pull/3223,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/3223#issuecomment-378851613,,"Travis compiles with Werror. I actually made a mistake before and the build
failed. I can push a fake commit to double check that it fails.
…
On Thu, Apr 5, 2018, 09:02 Ingo Bürk ***@***.***> wrote:
 I understand the idea behind using the compiler information, but it
 requires this to actually be checked somehow. Which I'd only want to do if
 we can do this automatically (in Travis). Can we get the compiler to error
 out on this warning in Travis?

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#3223 (comment)>, or mute the
 thread
 <https://github.com/notifications/unsubscribe-auth/AFgsvtbn9WuI4Js7LbGFDtoPD-zAecclks5tlbOOgaJpZM4THAit>
 .",True,{}
i3/i3,https://github.com/i3/i3,3223,2018-04-04T15:26:39Z,2018-04-05T08:59:35Z,2018-04-05T11:49:42Z,MERGED,True,6,29,5,https://github.com/orestisfl, Prefer compiler warnings to assertions for unhandled switch cases,2,[],https://github.com/i3/i3/pull/3223,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/3223#issuecomment-378854556,,Here: https://travis-ci.org/i3/i3/builds/362505860,True,{}
i3/i3,https://github.com/i3/i3,3223,2018-04-04T15:26:39Z,2018-04-05T08:59:35Z,2018-04-05T11:49:42Z,MERGED,True,6,29,5,https://github.com/orestisfl, Prefer compiler warnings to assertions for unhandled switch cases,2,[],https://github.com/i3/i3/pull/3223,https://github.com/orestisfl,5,https://github.com/i3/i3/pull/3223#issuecomment-378855034,,"Unfortunately gcc is pretty old there, are there any plans to upgrade?
EDIT: and if there are, can we please update clang-format too?",True,{}
i3/i3,https://github.com/i3/i3,3223,2018-04-04T15:26:39Z,2018-04-05T08:59:35Z,2018-04-05T11:49:42Z,MERGED,True,6,29,5,https://github.com/orestisfl, Prefer compiler warnings to assertions for unhandled switch cases,2,[],https://github.com/i3/i3/pull/3223,https://github.com/Airblader,6,https://github.com/i3/i3/pull/3223#issuecomment-378867434,,"Thanks!
I think as long as it fails with clang it's good enough for now. If we can update gcc without any issues, I don't mind doing it.",True,{}
i3/i3,https://github.com/i3/i3,3223,2018-04-04T15:26:39Z,2018-04-05T08:59:35Z,2018-04-05T11:49:42Z,MERGED,True,6,29,5,https://github.com/orestisfl, Prefer compiler warnings to assertions for unhandled switch cases,2,[],https://github.com/i3/i3/pull/3223,https://github.com/orestisfl,7,https://github.com/i3/i3/pull/3223#issuecomment-378869234,,"Well, updating gcc shouldn't introduce any issues. I have no idea how travis works though. Is this something that only Michael can do?",True,{}
i3/i3,https://github.com/i3/i3,3223,2018-04-04T15:26:39Z,2018-04-05T08:59:35Z,2018-04-05T11:49:42Z,MERGED,True,6,29,5,https://github.com/orestisfl, Prefer compiler warnings to assertions for unhandled switch cases,2,[],https://github.com/i3/i3/pull/3223,https://github.com/Airblader,8,https://github.com/i3/i3/pull/3223#issuecomment-378869698,,"No, it's driven by the .travis.yml file. Likely the issue is just that the Travis environment has no newer version by default.",True,{'THUMBS_UP': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,3224,2018-04-04T16:46:03Z,2019-03-11T18:35:15Z,2019-03-11T18:35:16Z,CLOSED,False,55,34,2,https://github.com/HarmtH,Improve scratchpad focus handling on focus request,1,"['waiting', 'stale']",https://github.com/i3/i3/pull/3224,https://github.com/HarmtH,1,https://github.com/i3/i3/pull/3224,"Closes #3218
This also sets the urgency hint when a scratchpad window request focus and focus behavior is set to 'smart' or 'urgent'. That will become more useful when #628 gets attention.","Closes #3218
This also sets the urgency hint when a scratchpad window request focus and focus behavior is set to 'smart' or 'urgent'. That will become more useful when #628 gets attention.",True,{}
i3/i3,https://github.com/i3/i3,3224,2018-04-04T16:46:03Z,2019-03-11T18:35:15Z,2019-03-11T18:35:16Z,CLOSED,False,55,34,2,https://github.com/HarmtH,Improve scratchpad focus handling on focus request,1,"['waiting', 'stale']",https://github.com/i3/i3/pull/3224,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3224#issuecomment-379302231,"Closes #3218
This also sets the urgency hint when a scratchpad window request focus and focus behavior is set to 'smart' or 'urgent'. That will become more useful when #628 gets attention.","You added a comment to the enum, so I have a comment for that. Sorry! :-) Please also do write a comment here when you made the change so we get notified. Thanks again!",True,{}
i3/i3,https://github.com/i3/i3,3224,2018-04-04T16:46:03Z,2019-03-11T18:35:15Z,2019-03-11T18:35:16Z,CLOSED,False,55,34,2,https://github.com/HarmtH,Improve scratchpad focus handling on focus request,1,"['waiting', 'stale']",https://github.com/i3/i3/pull/3224,https://github.com/HarmtH,3,https://github.com/i3/i3/pull/3224#issuecomment-380924902,"Closes #3218
This also sets the urgency hint when a scratchpad window request focus and focus behavior is set to 'smart' or 'urgent'. That will become more useful when #628 gets attention.",Changed it :-),True,{}
i3/i3,https://github.com/i3/i3,3224,2018-04-04T16:46:03Z,2019-03-11T18:35:15Z,2019-03-11T18:35:16Z,CLOSED,False,55,34,2,https://github.com/HarmtH,Improve scratchpad focus handling on focus request,1,"['waiting', 'stale']",https://github.com/i3/i3/pull/3224,https://github.com/Airblader,4,https://github.com/i3/i3/pull/3224#issuecomment-381121912,"Closes #3218
This also sets the urgency hint when a scratchpad window request focus and focus behavior is set to 'smart' or 'urgent'. That will become more useful when #628 gets attention.","Sorry, one more thing; we already have some testcases for this (testcases/t/240-focus-on-window-activation.t). It'd be great if we could cover this with a test as well. It should be fairly simple to write the testcase and you only have to extend the function defined in the testcase to allow specifying the source of the request.",True,{}
i3/i3,https://github.com/i3/i3,3224,2018-04-04T16:46:03Z,2019-03-11T18:35:15Z,2019-03-11T18:35:16Z,CLOSED,False,55,34,2,https://github.com/HarmtH,Improve scratchpad focus handling on focus request,1,"['waiting', 'stale']",https://github.com/i3/i3/pull/3224,https://github.com/Airblader,5,https://github.com/i3/i3/pull/3224#issuecomment-399414734,"Closes #3218
This also sets the urgency hint when a scratchpad window request focus and focus behavior is set to 'smart' or 'urgent'. That will become more useful when #628 gets attention.","@HarmtH Are you going to continue working on this? I think it'd be really cool to get this through the door, especially considering the work that already went into it. :-)",True,{}
i3/i3,https://github.com/i3/i3,3224,2018-04-04T16:46:03Z,2019-03-11T18:35:15Z,2019-03-11T18:35:16Z,CLOSED,False,55,34,2,https://github.com/HarmtH,Improve scratchpad focus handling on focus request,1,"['waiting', 'stale']",https://github.com/i3/i3/pull/3224,https://github.com/HarmtH,6,https://github.com/i3/i3/pull/3224#issuecomment-399954106,"Closes #3218
This also sets the urgency hint when a scratchpad window request focus and focus behavior is set to 'smart' or 'urgent'. That will become more useful when #628 gets attention.","Yes, will try to finish it soon.",True,{}
i3/i3,https://github.com/i3/i3,3224,2018-04-04T16:46:03Z,2019-03-11T18:35:15Z,2019-03-11T18:35:16Z,CLOSED,False,55,34,2,https://github.com/HarmtH,Improve scratchpad focus handling on focus request,1,"['waiting', 'stale']",https://github.com/i3/i3/pull/3224,https://github.com/Airblader,7,https://github.com/i3/i3/pull/3224#issuecomment-471666697,"Closes #3218
This also sets the urgency hint when a scratchpad window request focus and focus behavior is set to 'smart' or 'urgent'. That will become more useful when #628 gets attention.",I'm closing this for inactivity now. If you update the PR please just let us know or reopen it as a new one. Thank you!,True,{}
i3/i3,https://github.com/i3/i3,3230,2018-04-06T16:05:41Z,2018-04-21T15:57:55Z,2018-04-23T04:01:23Z,MERGED,True,61,12,4,https://github.com/hwangcc23,"Make ""scratchpad show"" return correct info",1,['waiting'],https://github.com/i3/i3/pull/3230,https://github.com/hwangcc23,1,https://github.com/i3/i3/pull/3230,Fix the issue #3227(#3227).,Fix the issue #3227(#3227).,True,{}
i3/i3,https://github.com/i3/i3,3230,2018-04-06T16:05:41Z,2018-04-21T15:57:55Z,2018-04-23T04:01:23Z,MERGED,True,61,12,4,https://github.com/hwangcc23,"Make ""scratchpad show"" return correct info",1,['waiting'],https://github.com/i3/i3/pull/3230,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3230#issuecomment-379300852,Fix the issue #3227(#3227).,"I'm sorry, I don't understand the fix. We want to return whether we have successfully shown a window or not. That means we need to use the information coming from scratchpad_show.",True,{}
i3/i3,https://github.com/i3/i3,3230,2018-04-06T16:05:41Z,2018-04-21T15:57:55Z,2018-04-23T04:01:23Z,MERGED,True,61,12,4,https://github.com/hwangcc23,"Make ""scratchpad show"" return correct info",1,['waiting'],https://github.com/i3/i3/pull/3230,https://github.com/hwangcc23,3,https://github.com/i3/i3/pull/3230#issuecomment-379309003,Fix the issue #3227(#3227).,"Sorry. Misunderstood the problem.
Up.",True,{}
i3/i3,https://github.com/i3/i3,3230,2018-04-06T16:05:41Z,2018-04-21T15:57:55Z,2018-04-23T04:01:23Z,MERGED,True,61,12,4,https://github.com/hwangcc23,"Make ""scratchpad show"" return correct info",1,['waiting'],https://github.com/i3/i3/pull/3230,https://github.com/hwangcc23,4,https://github.com/i3/i3/pull/3230#issuecomment-379803851,Fix the issue #3227(#3227).,"I am having trouble on implementing the test code for IPC.
Is there anyone having the suggestion or hint?
Thanks.
Here is my test code. I cannot get the returned value of 'scratchpad show' correctly in the test code.
sub scratchpad_show_subtest {
    my ($expect) = @_;
    my @events = events_for(
        sub { cmd 'scratchpad show' },
        'floating_nodes');
    my @temp = grep { $_->{scratchpad_state} eq 'change' } @events;
    is(scalar @temp, $expect, 'Success');
}
fresh_workspace;
open_window;
cmd 'move scratchpad';
subtest 'scratchpad show', \&scratchpad_show_subtest, 1;",True,{}
i3/i3,https://github.com/i3/i3,3230,2018-04-06T16:05:41Z,2018-04-21T15:57:55Z,2018-04-23T04:01:23Z,MERGED,True,61,12,4,https://github.com/hwangcc23,"Make ""scratchpad show"" return correct info",1,['waiting'],https://github.com/i3/i3/pull/3230,https://github.com/orestisfl,5,https://github.com/i3/i3/pull/3230#issuecomment-381862319,Fix the issue #3227(#3227).,"@hwangcc23
fresh_workspace;
open_window;
cmd 'move scratchpad';
my $result = cmd 'scratchpad show';
is($result->[0]->{success}, 1, 'call to scratchpad succeeded');

kill_all_windows;
$result = cmd 'scratchpad show';
is($result->[0]->{success}, 0, 'call to scratchpad failed');",True,{'HEART': ['https://github.com/hwangcc23']}
i3/i3,https://github.com/i3/i3,3230,2018-04-06T16:05:41Z,2018-04-21T15:57:55Z,2018-04-23T04:01:23Z,MERGED,True,61,12,4,https://github.com/hwangcc23,"Make ""scratchpad show"" return correct info",1,['waiting'],https://github.com/i3/i3/pull/3230,https://github.com/hwangcc23,6,https://github.com/i3/i3/pull/3230#issuecomment-382039327,Fix the issue #3227(#3227).,Up,True,{}
i3/i3,https://github.com/i3/i3,3230,2018-04-06T16:05:41Z,2018-04-21T15:57:55Z,2018-04-23T04:01:23Z,MERGED,True,61,12,4,https://github.com/hwangcc23,"Make ""scratchpad show"" return correct info",1,['waiting'],https://github.com/i3/i3/pull/3230,https://github.com/hwangcc23,7,https://github.com/i3/i3/pull/3230#issuecomment-382401443,Fix the issue #3227(#3227).,"@orestisf1993 Thanks for the review.
Up.",True,{}
i3/i3,https://github.com/i3/i3,3230,2018-04-06T16:05:41Z,2018-04-21T15:57:55Z,2018-04-23T04:01:23Z,MERGED,True,61,12,4,https://github.com/hwangcc23,"Make ""scratchpad show"" return correct info",1,['waiting'],https://github.com/i3/i3/pull/3230,https://github.com/hwangcc23,8,https://github.com/i3/i3/pull/3230#issuecomment-383118754,Fix the issue #3227(#3227).,Requested changes are all done.,True,{}
i3/i3,https://github.com/i3/i3,3230,2018-04-06T16:05:41Z,2018-04-21T15:57:55Z,2018-04-23T04:01:23Z,MERGED,True,61,12,4,https://github.com/hwangcc23,"Make ""scratchpad show"" return correct info",1,['waiting'],https://github.com/i3/i3/pull/3230,https://github.com/orestisfl,9,https://github.com/i3/i3/pull/3230#issuecomment-383121678,Fix the issue #3227(#3227).,Thanks. I'd merge it but I'll let @Airblader have a final look.,True,{}
i3/i3,https://github.com/i3/i3,3230,2018-04-06T16:05:41Z,2018-04-21T15:57:55Z,2018-04-23T04:01:23Z,MERGED,True,61,12,4,https://github.com/hwangcc23,"Make ""scratchpad show"" return correct info",1,['waiting'],https://github.com/i3/i3/pull/3230,https://github.com/Airblader,10,https://github.com/i3/i3/pull/3230#issuecomment-383308583,Fix the issue #3227(#3227).,Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3231,2018-04-07T19:03:27Z,2018-04-07T19:13:42Z,2018-04-07T19:15:36Z,MERGED,True,45,1,2,https://github.com/orestisfl,Fix crash when moving container to marked workspace,1,[],https://github.com/i3/i3/pull/3231,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3231,,,True,{}
i3/i3,https://github.com/i3/i3,3231,2018-04-07T19:03:27Z,2018-04-07T19:13:42Z,2018-04-07T19:15:36Z,MERGED,True,45,1,2,https://github.com/orestisfl,Fix crash when moving container to marked workspace,1,[],https://github.com/i3/i3/pull/3231,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3231#issuecomment-379491785,,I've been getting this issue lately where crashing tests hang complete-run.pl instead of throwing an error.,True,{}
i3/i3,https://github.com/i3/i3,3235,2018-04-10T04:06:31Z,2018-11-06T13:54:36Z,2018-11-06T13:54:36Z,CLOSED,False,72,5,2,https://github.com/efenwick97,Fix for issue 3003,1,[],https://github.com/i3/i3/pull/3235,https://github.com/efenwick97,1,https://github.com/i3/i3/pull/3235,"Fix for Issue 3003.
This PR modifies the behavior of the tree_flatten function in src/tree.c to allow for the flattening of a single container. If a child has a different layout than the parent of the current container only the current container will be flattened and the child will be appended to the parent. If the child and parent of the current container are the same then the children of child should be added to parent and both the current container and the child container should be flattened.","Fix for Issue 3003.
This PR modifies the behavior of the tree_flatten function in src/tree.c to allow for the flattening of a single container. If a child has a different layout than the parent of the current container only the current container will be flattened and the child will be appended to the parent. If the child and parent of the current container are the same then the children of child should be added to parent and both the current container and the child container should be flattened.",True,{'THUMBS_UP': ['https://github.com/BVollmerhaus']}
i3/i3,https://github.com/i3/i3,3235,2018-04-10T04:06:31Z,2018-11-06T13:54:36Z,2018-11-06T13:54:36Z,CLOSED,False,72,5,2,https://github.com/efenwick97,Fix for issue 3003,1,[],https://github.com/i3/i3/pull/3235,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3235#issuecomment-399414523,"Fix for Issue 3003.
This PR modifies the behavior of the tree_flatten function in src/tree.c to allow for the flattening of a single container. If a child has a different layout than the parent of the current container only the current container will be flattened and the child will be appended to the parent. If the child and parent of the current container are the same then the children of child should be added to parent and both the current container and the child container should be flattened.",@orestisf1993 Do you want to review (and merge) it? :-),True,{}
i3/i3,https://github.com/i3/i3,3235,2018-04-10T04:06:31Z,2018-11-06T13:54:36Z,2018-11-06T13:54:36Z,CLOSED,False,72,5,2,https://github.com/efenwick97,Fix for issue 3003,1,[],https://github.com/i3/i3/pull/3235,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/3235#issuecomment-399424528,"Fix for Issue 3003.
This PR modifies the behavior of the tree_flatten function in src/tree.c to allow for the flattening of a single container. If a child has a different layout than the parent of the current container only the current container will be flattened and the child will be appended to the parent. If the child and parent of the current container are the same then the children of child should be added to parent and both the current container and the child container should be flattened.","I think we should discuss what we want to do with redundant containers, see #3001, the case this PR handles (see comment in tree_flatten) and https://www.reddit.com/r/i3wm/comments/8rdwqb/what_is_this/.",True,{}
i3/i3,https://github.com/i3/i3,3235,2018-04-10T04:06:31Z,2018-11-06T13:54:36Z,2018-11-06T13:54:36Z,CLOSED,False,72,5,2,https://github.com/efenwick97,Fix for issue 3003,1,[],https://github.com/i3/i3/pull/3235,https://github.com/Airblader,4,https://github.com/i3/i3/pull/3235#issuecomment-399446065,"Fix for Issue 3003.
This PR modifies the behavior of the tree_flatten function in src/tree.c to allow for the flattening of a single container. If a child has a different layout than the parent of the current container only the current container will be flattened and the child will be appended to the parent. If the child and parent of the current container are the same then the children of child should be added to parent and both the current container and the child container should be flattened.","and https://www.reddit.com/r/i3wm/comments/8rdwqb/what_is_this/.

I don't think there's anything to change in that case. It's certainly unusual that someone would intentionally go to this layout, but it's not unreasonable (stacking stacked containers can improve the focus navigation).",True,{}
i3/i3,https://github.com/i3/i3,3235,2018-04-10T04:06:31Z,2018-11-06T13:54:36Z,2018-11-06T13:54:36Z,CLOSED,False,72,5,2,https://github.com/efenwick97,Fix for issue 3003,1,[],https://github.com/i3/i3/pull/3235,https://github.com/orestisfl,5,https://github.com/i3/i3/pull/3235#issuecomment-423725834,"Fix for Issue 3003.
This PR modifies the behavior of the tree_flatten function in src/tree.c to allow for the flattening of a single container. If a child has a different layout than the parent of the current container only the current container will be flattened and the child will be appended to the parent. If the child and parent of the current container are the same then the children of child should be added to parent and both the current container and the child container should be flattened.","Stacking stacked containers is fine, the problem appears when you use layout stacked (once) in an empty workspace:

Another problematic situation is this:

open 3 windows
layout tabbed
move down


Also, like in #3001, I still think that containers with only one non-leaf child are redundant.
Instead of continuously patching tree_flatten, making it more complex, I think we should first specify formally which containers should be considered redundant and then reimplement tree_flatten to fix its problems.",True,{}
i3/i3,https://github.com/i3/i3,3235,2018-04-10T04:06:31Z,2018-11-06T13:54:36Z,2018-11-06T13:54:36Z,CLOSED,False,72,5,2,https://github.com/efenwick97,Fix for issue 3003,1,[],https://github.com/i3/i3/pull/3235,https://github.com/Airblader,6,https://github.com/i3/i3/pull/3235#issuecomment-436260035,"Fix for Issue 3003.
This PR modifies the behavior of the tree_flatten function in src/tree.c to allow for the flattening of a single container. If a child has a different layout than the parent of the current container only the current container will be flattened and the child will be appended to the parent. If the child and parent of the current container are the same then the children of child should be added to parent and both the current container and the child container should be flattened.",For now closing this until we have progressed in #3503 where this PR is tracked as well.,True,{}
i3/i3,https://github.com/i3/i3,3236,2018-04-10T14:22:59Z,2018-04-14T12:39:55Z,2018-04-16T02:42:59Z,MERGED,True,11,4,4,https://github.com/hwangcc23,Add an i3bar flag: --verbose,1,['waiting'],https://github.com/i3/i3/pull/3236,https://github.com/hwangcc23,1,https://github.com/i3/i3/pull/3236,Fix the issue #3220. (#3220),Fix the issue #3220. (#3220),True,{}
i3/i3,https://github.com/i3/i3,3236,2018-04-10T14:22:59Z,2018-04-14T12:39:55Z,2018-04-16T02:42:59Z,MERGED,True,11,4,4,https://github.com/hwangcc23,Add an i3bar flag: --verbose,1,['waiting'],https://github.com/i3/i3/pull/3236,https://github.com/hwangcc23,2,https://github.com/i3/i3/pull/3236#issuecomment-380457901,Fix the issue #3220. (#3220),Up,True,{}
i3/i3,https://github.com/i3/i3,3236,2018-04-10T14:22:59Z,2018-04-14T12:39:55Z,2018-04-16T02:42:59Z,MERGED,True,11,4,4,https://github.com/hwangcc23,Add an i3bar flag: --verbose,1,['waiting'],https://github.com/i3/i3/pull/3236,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/3236#issuecomment-380516134,Fix the issue #3220. (#3220),"We should also update the docs: 
  
    
      i3/docs/debugging
    
    
         Line 161
      in
      b688164
    
  
  
    

        
          
           == Debugging i3bar 
        
    
  


We could also modify 
  
    
      i3/src/main.c
    
    
         Line 952
      in
      b688164
    
  
  
    

        
          
           sasprintf(&command, ""%s --bar_id=%s --socket=\""%s\"""", 
        
    
  

 to use -V whenever verbose is configured since i3bar's output is included in stderr when you start i3. It won't show up in the logs though.",True,{'THUMBS_UP': ['https://github.com/hwangcc23']}
i3/i3,https://github.com/i3/i3,3236,2018-04-10T14:22:59Z,2018-04-14T12:39:55Z,2018-04-16T02:42:59Z,MERGED,True,11,4,4,https://github.com/hwangcc23,Add an i3bar flag: --verbose,1,['waiting'],https://github.com/i3/i3/pull/3236,https://github.com/hwangcc23,4,https://github.com/i3/i3/pull/3236#issuecomment-381176487,Fix the issue #3220. (#3220),Up,True,{}
i3/i3,https://github.com/i3/i3,3236,2018-04-10T14:22:59Z,2018-04-14T12:39:55Z,2018-04-16T02:42:59Z,MERGED,True,11,4,4,https://github.com/hwangcc23,Add an i3bar flag: --verbose,1,['waiting'],https://github.com/i3/i3/pull/3236,https://github.com/Airblader,5,https://github.com/i3/i3/pull/3236#issuecomment-381326416,Fix the issue #3220. (#3220),Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3240,2018-04-13T16:09:53Z,2018-08-24T07:43:21Z,2018-08-24T07:43:21Z,CLOSED,False,148,40,7,https://github.com/andrewla,Resize tile px,9,['stale'],https://github.com/i3/i3/pull/3240,https://github.com/andrewla,1,https://github.com/i3/i3/pull/3240,"Allows resizing of tiled containers by px instead of just by ppt.  Syntax is just appended to current resize command, and will be backwards compatible if px is not specified.
Fixes #3239","Allows resizing of tiled containers by px instead of just by ppt.  Syntax is just appended to current resize command, and will be backwards compatible if px is not specified.
Fixes #3239",True,{}
i3/i3,https://github.com/i3/i3,3240,2018-04-13T16:09:53Z,2018-08-24T07:43:21Z,2018-08-24T07:43:21Z,CLOSED,False,148,40,7,https://github.com/andrewla,Resize tile px,9,['stale'],https://github.com/i3/i3/pull/3240,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3240#issuecomment-382865669,"Allows resizing of tiled containers by px instead of just by ppt.  Syntax is just appended to current resize command, and will be backwards compatible if px is not specified.
Fixes #3239",Can you address the failing tests?,True,{}
i3/i3,https://github.com/i3/i3,3240,2018-04-13T16:09:53Z,2018-08-24T07:43:21Z,2018-08-24T07:43:21Z,CLOSED,False,148,40,7,https://github.com/andrewla,Resize tile px,9,['stale'],https://github.com/i3/i3/pull/3240,https://github.com/andrewla,3,https://github.com/i3/i3/pull/3240#issuecomment-383953685,"Allows resizing of tiled containers by px instead of just by ppt.  Syntax is just appended to current resize command, and will be backwards compatible if px is not specified.
Fixes #3239","Took a bit of debugging to figure out why it wasn't resizing correctly in this case, and some learning about how the actual layout code works, rather than just assuming magic.",True,{}
i3/i3,https://github.com/i3/i3,3240,2018-04-13T16:09:53Z,2018-08-24T07:43:21Z,2018-08-24T07:43:21Z,CLOSED,False,148,40,7,https://github.com/andrewla,Resize tile px,9,['stale'],https://github.com/i3/i3/pull/3240,https://github.com/andrewla,4,https://github.com/i3/i3/pull/3240#issuecomment-384005891,"Allows resizing of tiled containers by px instead of just by ppt.  Syntax is just appended to current resize command, and will be backwards compatible if px is not specified.
Fixes #3239","NB: I have fixed existing tests, but have not added anything to test new functionality.  Now that I have all the testing framework working on my machine (kudos to perlbrew!) instead of using Travis I should be able to operate faster.
That said, the backwards compatibility of the change is well-demonstrated here; as long as both ppt and px are specified the behavior is unchanged.",True,{}
i3/i3,https://github.com/i3/i3,3240,2018-04-13T16:09:53Z,2018-08-24T07:43:21Z,2018-08-24T07:43:21Z,CLOSED,False,148,40,7,https://github.com/andrewla,Resize tile px,9,['stale'],https://github.com/i3/i3/pull/3240,https://github.com/orestisfl,5,https://github.com/i3/i3/pull/3240#issuecomment-384011968,"Allows resizing of tiled containers by px instead of just by ppt.  Syntax is just appended to current resize command, and will be backwards compatible if px is not specified.
Fixes #3239","AFAIK, we can't test this change",True,{}
i3/i3,https://github.com/i3/i3,3240,2018-04-13T16:09:53Z,2018-08-24T07:43:21Z,2018-08-24T07:43:21Z,CLOSED,False,148,40,7,https://github.com/andrewla,Resize tile px,9,['stale'],https://github.com/i3/i3/pull/3240,https://github.com/andrewla,6,https://github.com/i3/i3/pull/3240#issuecomment-384038823,"Allows resizing of tiled containers by px instead of just by ppt.  Syntax is just appended to current resize command, and will be backwards compatible if px is not specified.
Fixes #3239","I didn't mean to imply that I expected anyone else to write tests for this change, merely saying that I don't think this change is ready to merge until I write some tests covering the new functionality.
That's assuming that you see fit to accept the change at all; #3239 covers my justification for having made the change.  I like the change as well because it simplifies some of the resizing logic even for the ppt case.",True,{'THUMBS_UP': ['https://github.com/ow97']}
i3/i3,https://github.com/i3/i3,3240,2018-04-13T16:09:53Z,2018-08-24T07:43:21Z,2018-08-24T07:43:21Z,CLOSED,False,148,40,7,https://github.com/andrewla,Resize tile px,9,['stale'],https://github.com/i3/i3/pull/3240,https://github.com/orestisfl,7,https://github.com/i3/i3/pull/3240#issuecomment-384041040,"Allows resizing of tiled containers by px instead of just by ppt.  Syntax is just appended to current resize command, and will be backwards compatible if px is not specified.
Fixes #3239","I am sorry, I thought this was another PR which was untestable. Apologies
for the noise.
…
On Tue, Apr 24, 2018, 21:45 Andrew Laucius ***@***.***> wrote:
 I didn't mean to imply that I expected anyone else to write tests for this
 change, merely saying that I don't think this change is ready to merge
 until I write some tests covering the new functionality.

 That's assuming that you see fit to accept the change at all; #3239
 <#3239> covers my justification for having
 made the change. I like the change as well because it simplifies some of
 the resizing logic even for the ppt case.

 —
 You are receiving this because you commented.
 Reply to this email directly, view it on GitHub
 <#3240 (comment)>, or mute the
 thread
 <https://github.com/notifications/unsubscribe-auth/AFgsvo24fgZ60ztQTWUE-e0SGjgf2wDOks5tr3LSgaJpZM4TTtW9>
 .",True,{}
i3/i3,https://github.com/i3/i3,3240,2018-04-13T16:09:53Z,2018-08-24T07:43:21Z,2018-08-24T07:43:21Z,CLOSED,False,148,40,7,https://github.com/andrewla,Resize tile px,9,['stale'],https://github.com/i3/i3/pull/3240,https://github.com/Airblader,8,https://github.com/i3/i3/pull/3240#issuecomment-399414141,"Allows resizing of tiled containers by px instead of just by ppt.  Syntax is just appended to current resize command, and will be backwards compatible if px is not specified.
Fixes #3239",@andrewla Can you address the failing tests please?,True,{}
i3/i3,https://github.com/i3/i3,3240,2018-04-13T16:09:53Z,2018-08-24T07:43:21Z,2018-08-24T07:43:21Z,CLOSED,False,148,40,7,https://github.com/andrewla,Resize tile px,9,['stale'],https://github.com/i3/i3/pull/3240,https://github.com/andrewla,9,https://github.com/i3/i3/pull/3240#issuecomment-401109505,"Allows resizing of tiled containers by px instead of just by ppt.  Syntax is just appended to current resize command, and will be backwards compatible if px is not specified.
Fixes #3239","Sorry, this has been on my back burner.  I fixed the existing test, but during testing of new functionality I uncovered a bug that I had some trouble hunting down -- namely that resizing in a shrinking direction does so by one less pixel than it should, due to rippling rounding errors caused by the way that window sizes are calculated.",True,{}
i3/i3,https://github.com/i3/i3,3240,2018-04-13T16:09:53Z,2018-08-24T07:43:21Z,2018-08-24T07:43:21Z,CLOSED,False,148,40,7,https://github.com/andrewla,Resize tile px,9,['stale'],https://github.com/i3/i3/pull/3240,https://github.com/michaelnew,10,https://github.com/i3/i3/pull/3240#issuecomment-415156364,"Allows resizing of tiled containers by px instead of just by ppt.  Syntax is just appended to current resize command, and will be backwards compatible if px is not specified.
Fixes #3239","Sorry to be that guy, but... any progress on this? It seems awfully close and it would be such a shame to not get it merged. This is a feature I've been really missing for a long time.",True,"{'THUMBS_UP': ['https://github.com/ow97', 'https://github.com/JMendyk']}"
i3/i3,https://github.com/i3/i3,3240,2018-04-13T16:09:53Z,2018-08-24T07:43:21Z,2018-08-24T07:43:21Z,CLOSED,False,148,40,7,https://github.com/andrewla,Resize tile px,9,['stale'],https://github.com/i3/i3/pull/3240,https://github.com/orestisfl,11,https://github.com/i3/i3/pull/3240#issuecomment-415617754,"Allows resizing of tiled containers by px instead of just by ppt.  Syntax is just appended to current resize command, and will be backwards compatible if px is not specified.
Fixes #3239",I am continuing this in #3372 with support for other commands as well.,True,{}
i3/i3,https://github.com/i3/i3,3243,2018-04-15T19:36:21Z,2018-04-15T19:43:53Z,2018-04-15T19:44:00Z,MERGED,True,3,3,3,https://github.com/avindra,man: Fix title markers,1,[],https://github.com/i3/i3/pull/3243,https://github.com/avindra,1,https://github.com/i3/i3/pull/3243,"The title marker lines have to be aligned with the previous lines.
The error was caught by asciidoctor, which tends to be picker than
asciidoc.
I'm submitting on behalf of Takashi (@tiwai).","The title marker lines have to be aligned with the previous lines.
The error was caught by asciidoctor, which tends to be picker than
asciidoc.
I'm submitting on behalf of Takashi (@tiwai).",True,{}
i3/i3,https://github.com/i3/i3,3243,2018-04-15T19:36:21Z,2018-04-15T19:43:53Z,2018-04-15T19:44:00Z,MERGED,True,3,3,3,https://github.com/avindra,man: Fix title markers,1,[],https://github.com/i3/i3/pull/3243,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3243#issuecomment-381432659,"The title marker lines have to be aligned with the previous lines.
The error was caught by asciidoctor, which tends to be picker than
asciidoc.
I'm submitting on behalf of Takashi (@tiwai).",Thanks!,True,{'THUMBS_UP': ['https://github.com/avindra']}
i3/i3,https://github.com/i3/i3,3244,2018-04-15T22:43:13Z,2018-04-16T09:59:50Z,2018-04-16T10:00:34Z,MERGED,True,4,2,1,https://github.com/orestisfl,i3bar: don't reset verbosity when parsing config values,1,[],https://github.com/i3/i3/pull/3244,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3244,"When i3bar is called with the -V flag but there is no verbose yes
directive in the bar {} config, the verbosity config value is reset.
This will introduce the opposite, negligible issue: you can't disable
i3bar's verbosity by deleting the verbose yes directive in the bar {}
config. To fix this we would need an enum for config.verbose.
Closes #3220.","When i3bar is called with the -V flag but there is no verbose yes
directive in the bar {} config, the verbosity config value is reset.
This will introduce the opposite, negligible issue: you can't disable
i3bar's verbosity by deleting the verbose yes directive in the bar {}
config. To fix this we would need an enum for config.verbose.
Closes #3220.",True,{}
i3/i3,https://github.com/i3/i3,3245,2018-04-16T03:14:37Z,2018-05-01T08:25:14Z,2018-05-01T08:25:22Z,MERGED,True,30,4,2,https://github.com/ograff,Don't refocus on a workspace cleaned up by `workspace_show` during rename (#3228),2,[],https://github.com/i3/i3/pull/3245,https://github.com/ograff,1,https://github.com/i3/i3/pull/3245,"When moving a workspace to the current output by way of a rename, if the
current workspace is empty, it will be removed by workspace_show.
Attempting to restore focus to this removed workspace causes a crash.
Follow the pattern in workspace.c:996 to only restore the original focus if the
original workspace still exists.
Add a test to ensure that the renamed workspace moves to its appropriate
output and that a crash does not occur.
Fixes #3228","When moving a workspace to the current output by way of a rename, if the
current workspace is empty, it will be removed by workspace_show.
Attempting to restore focus to this removed workspace causes a crash.
Follow the pattern in workspace.c:996 to only restore the original focus if the
original workspace still exists.
Add a test to ensure that the renamed workspace moves to its appropriate
output and that a crash does not occur.
Fixes #3228",True,{}
i3/i3,https://github.com/i3/i3,3245,2018-04-16T03:14:37Z,2018-05-01T08:25:14Z,2018-05-01T08:25:22Z,MERGED,True,30,4,2,https://github.com/ograff,Don't refocus on a workspace cleaned up by `workspace_show` during rename (#3228),2,[],https://github.com/i3/i3/pull/3245,https://github.com/ograff,2,https://github.com/i3/i3/pull/3245#issuecomment-381468784,"When moving a workspace to the current output by way of a rename, if the
current workspace is empty, it will be removed by workspace_show.
Attempting to restore focus to this removed workspace causes a crash.
Follow the pattern in workspace.c:996 to only restore the original focus if the
original workspace still exists.
Add a test to ensure that the renamed workspace moves to its appropriate
output and that a crash does not occur.
Fixes #3228","Once it completes, https://travis-ci.org/ograff/i3/builds/366972985 should show that the test case fails without the implementation fixes, and the Travis check on this PR passing should show that same test case passing.",True,{}
i3/i3,https://github.com/i3/i3,3245,2018-04-16T03:14:37Z,2018-05-01T08:25:14Z,2018-05-01T08:25:22Z,MERGED,True,30,4,2,https://github.com/ograff,Don't refocus on a workspace cleaned up by `workspace_show` during rename (#3228),2,[],https://github.com/i3/i3/pull/3245,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/3245#issuecomment-381710546,"When moving a workspace to the current output by way of a rename, if the
current workspace is empty, it will be removed by workspace_show.
Attempting to restore focus to this removed workspace causes a crash.
Follow the pattern in workspace.c:996 to only restore the original focus if the
original workspace still exists.
Add a test to ensure that the renamed workspace moves to its appropriate
output and that a crash does not occur.
Fixes #3228",tip: git commit has --fixup and --squash flags and you can then run git rebase --autosquash -i. Might be more convenient.,True,{'THUMBS_UP': ['https://github.com/ograff']}
i3/i3,https://github.com/i3/i3,3245,2018-04-16T03:14:37Z,2018-05-01T08:25:14Z,2018-05-01T08:25:22Z,MERGED,True,30,4,2,https://github.com/ograff,Don't refocus on a workspace cleaned up by `workspace_show` during rename (#3228),2,[],https://github.com/i3/i3/pull/3245,https://github.com/ograff,4,https://github.com/i3/i3/pull/3245#issuecomment-381718204,"When moving a workspace to the current output by way of a rename, if the
current workspace is empty, it will be removed by workspace_show.
Attempting to restore focus to this removed workspace causes a crash.
Follow the pattern in workspace.c:996 to only restore the original focus if the
original workspace still exists.
Add a test to ensure that the renamed workspace moves to its appropriate
output and that a crash does not occur.
Fixes #3228",Good tip! I've pushed the fixed up versions,True,{}
i3/i3,https://github.com/i3/i3,3245,2018-04-16T03:14:37Z,2018-05-01T08:25:14Z,2018-05-01T08:25:22Z,MERGED,True,30,4,2,https://github.com/ograff,Don't refocus on a workspace cleaned up by `workspace_show` during rename (#3228),2,[],https://github.com/i3/i3/pull/3245,https://github.com/ograff,5,https://github.com/i3/i3/pull/3245#issuecomment-382409269,"When moving a workspace to the current output by way of a rename, if the
current workspace is empty, it will be removed by workspace_show.
Attempting to restore focus to this removed workspace causes a crash.
Follow the pattern in workspace.c:996 to only restore the original focus if the
original workspace still exists.
Add a test to ensure that the renamed workspace moves to its appropriate
output and that a crash does not occur.
Fixes #3228","I'll make those changes. Do you have a preference when reviewing towards
fixup commits that are rebased after review is complete, or just ammending
immediately?
…
On Wed, Apr 18, 2018, 3:42 AM Orestis ***@***.***> wrote:
 ***@***.**** requested changes on this pull request.

 I think we can merge this. Some minor comments.
 ------------------------------

 In src/commands.c
 <#3245 (comment)>:

 > @@ -2011,15 +2013,36 @@ void cmd_rename_workspace(I3_CMD, const char *old_name, const char *new_name) {
          }
          workspace_move_to_output(workspace, target_output);

 -        if (previously_focused)
 +        bool can_restore_focus = previously_focused != 0;
 +        /* NB: If previously_focused is a workspace we can't
 +         * work directly with it since it might have been cleaned up by
 +         * workspace_show() already, depending on the
 +         * focus order/number of other workspaces on the output.
 +         * Instead, we loop through the available workspaces and only focus
 +         * previously_focused if we still find it. */
 +        if (previously_focused_is_workspace) {
 +            Con *con = NULL;

 This branch can be made more idiomatic:

 Con *output, *workspace = NULL;
 TAILQ_FOREACH(output, &(croot->nodes_head), nodes) {
     GREP_FIRST(workspace, output_get_content(output), child == previously_focused);
 }
 can_restore_focus &= (workspace != NULL);

 you can remove previously_focused_parent with this.

 (confirm since I didn't compile)
 ------------------------------

 In src/commands.c
 <#3245 (comment)>:

 > @@ -2011,15 +2013,36 @@ void cmd_rename_workspace(I3_CMD, const char *old_name, const char *new_name) {
          }
          workspace_move_to_output(workspace, target_output);

 -        if (previously_focused)
 +        bool can_restore_focus = previously_focused != 0;

 compare with NULL since it is a pointer

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#3245 (review)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AAOnrZ9b4EUSDXSmiYyWtH2FpeBjz92vks5tpu5PgaJpZM4TVznh>
 .",True,{}
i3/i3,https://github.com/i3/i3,3245,2018-04-16T03:14:37Z,2018-05-01T08:25:14Z,2018-05-01T08:25:22Z,MERGED,True,30,4,2,https://github.com/ograff,Don't refocus on a workspace cleaned up by `workspace_show` during rename (#3228),2,[],https://github.com/i3/i3/pull/3245,https://github.com/orestisfl,6,https://github.com/i3/i3/pull/3245#issuecomment-382454599,"When moving a workspace to the current output by way of a rename, if the
current workspace is empty, it will be removed by workspace_show.
Attempting to restore focus to this removed workspace causes a crash.
Follow the pattern in workspace.c:996 to only restore the original focus if the
original workspace still exists.
Add a test to ensure that the renamed workspace moves to its appropriate
output and that a crash does not occur.
Fixes #3228",I like new commits because AFAIK it is the easier way to check what changed since the last review.,True,{}
i3/i3,https://github.com/i3/i3,3245,2018-04-16T03:14:37Z,2018-05-01T08:25:14Z,2018-05-01T08:25:22Z,MERGED,True,30,4,2,https://github.com/ograff,Don't refocus on a workspace cleaned up by `workspace_show` during rename (#3228),2,[],https://github.com/i3/i3/pull/3245,https://github.com/ograff,7,https://github.com/i3/i3/pull/3245#issuecomment-383173418,"When moving a workspace to the current output by way of a rename, if the
current workspace is empty, it will be removed by workspace_show.
Attempting to restore focus to this removed workspace causes a crash.
Follow the pattern in workspace.c:996 to only restore the original focus if the
original workspace still exists.
Add a test to ensure that the renamed workspace moves to its appropriate
output and that a crash does not occur.
Fixes #3228","Changes up, compiled and tested",True,{}
i3/i3,https://github.com/i3/i3,3245,2018-04-16T03:14:37Z,2018-05-01T08:25:14Z,2018-05-01T08:25:22Z,MERGED,True,30,4,2,https://github.com/ograff,Don't refocus on a workspace cleaned up by `workspace_show` during rename (#3228),2,[],https://github.com/i3/i3/pull/3245,https://github.com/ograff,8,https://github.com/i3/i3/pull/3245#issuecomment-384155356,"When moving a workspace to the current output by way of a rename, if the
current workspace is empty, it will be removed by workspace_show.
Attempting to restore focus to this removed workspace causes a crash.
Follow the pattern in workspace.c:996 to only restore the original focus if the
original workspace still exists.
Add a test to ensure that the renamed workspace moves to its appropriate
output and that a crash does not occur.
Fixes #3228","@orestisf1993 I noticed you CC'd me on #3254, did you want me to rebase this on that?",True,{}
i3/i3,https://github.com/i3/i3,3245,2018-04-16T03:14:37Z,2018-05-01T08:25:14Z,2018-05-01T08:25:22Z,MERGED,True,30,4,2,https://github.com/ograff,Don't refocus on a workspace cleaned up by `workspace_show` during rename (#3228),2,[],https://github.com/i3/i3/pull/3245,https://github.com/orestisfl,9,https://github.com/i3/i3/pull/3245#issuecomment-384353985,"When moving a workspace to the current output by way of a rename, if the
current workspace is empty, it will be removed by workspace_show.
Attempting to restore focus to this removed workspace causes a crash.
Follow the pattern in workspace.c:996 to only restore the original focus if the
original workspace still exists.
Add a test to ensure that the renamed workspace moves to its appropriate
output and that a crash does not occur.
Fixes #3228","No, but the PR is related to the changes you've made so far so I thought you might be interested in it.",True,{}
i3/i3,https://github.com/i3/i3,3245,2018-04-16T03:14:37Z,2018-05-01T08:25:14Z,2018-05-01T08:25:22Z,MERGED,True,30,4,2,https://github.com/ograff,Don't refocus on a workspace cleaned up by `workspace_show` during rename (#3228),2,[],https://github.com/i3/i3/pull/3245,https://github.com/ograff,10,https://github.com/i3/i3/pull/3245#issuecomment-385595252,"When moving a workspace to the current output by way of a rename, if the
current workspace is empty, it will be removed by workspace_show.
Attempting to restore focus to this removed workspace causes a crash.
Follow the pattern in workspace.c:996 to only restore the original focus if the
original workspace still exists.
Add a test to ensure that the renamed workspace moves to its appropriate
output and that a crash does not occur.
Fixes #3228",Squashed and new changes added. I'll take a look at that other PR!,True,{}
i3/i3,https://github.com/i3/i3,3245,2018-04-16T03:14:37Z,2018-05-01T08:25:14Z,2018-05-01T08:25:22Z,MERGED,True,30,4,2,https://github.com/ograff,Don't refocus on a workspace cleaned up by `workspace_show` during rename (#3228),2,[],https://github.com/i3/i3/pull/3245,https://github.com/orestisfl,11,https://github.com/i3/i3/pull/3245#issuecomment-385623985,"When moving a workspace to the current output by way of a rename, if the
current workspace is empty, it will be removed by workspace_show.
Attempting to restore focus to this removed workspace causes a crash.
Follow the pattern in workspace.c:996 to only restore the original focus if the
original workspace still exists.
Add a test to ensure that the renamed workspace moves to its appropriate
output and that a crash does not occur.
Fixes #3228",Thank you!,True,{}
i3/i3,https://github.com/i3/i3,3246,2018-04-16T18:23:23Z,2018-04-17T11:13:19Z,2018-04-17T11:15:40Z,MERGED,True,30,102,8,https://github.com/orestisfl,i3bar: make modifier behave like floating_modifier,1,[],https://github.com/i3/i3/pull/3246,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3246,Fixes #3234.,Fixes #3234.,True,{}
i3/i3,https://github.com/i3/i3,3247,2018-04-16T19:10:24Z,2018-08-04T07:24:00Z,2018-08-04T07:24:00Z,CLOSED,False,40,9,7,https://github.com/efenwick97,Issue 3162: Add --focused-workspace flag to scratchpad show,1,"['waiting', 'stale']",https://github.com/i3/i3/pull/3247,https://github.com/efenwick97,1,https://github.com/i3/i3/pull/3247,"Fix for 3162.
scratchpad --focused-workspace show will not move a viable scratchpad window to the current workspace.","Fix for 3162.
scratchpad --focused-workspace show will not move a viable scratchpad window to the current workspace.",True,{'HEART': ['https://github.com/dsifford']}
i3/i3,https://github.com/i3/i3,3247,2018-04-16T19:10:24Z,2018-08-04T07:24:00Z,2018-08-04T07:24:00Z,CLOSED,False,40,9,7,https://github.com/efenwick97,Issue 3162: Add --focused-workspace flag to scratchpad show,1,"['waiting', 'stale']",https://github.com/i3/i3/pull/3247,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3247#issuecomment-399413975,"Fix for 3162.
scratchpad --focused-workspace show will not move a viable scratchpad window to the current workspace.",@efenwick97 What's the status for this PR? Are you going to continue working on it?,True,{'THUMBS_UP': ['https://github.com/dsifford']}
i3/i3,https://github.com/i3/i3,3250,2018-04-18T00:58:46Z,2018-04-18T20:30:22Z,2018-04-18T20:30:26Z,MERGED,True,8,0,1,https://github.com/rtgnx,docs/ipc: update tree node with window_properties,1,[],https://github.com/i3/i3/pull/3250,https://github.com/rtgnx,1,https://github.com/i3/i3/pull/3250,"I have added description of window_properties field in tree node so that it can be used in
go-i3 interface.","I have added description of window_properties field in tree node so that it can be used in
go-i3 interface.",True,{}
i3/i3,https://github.com/i3/i3,3250,2018-04-18T00:58:46Z,2018-04-18T20:30:22Z,2018-04-18T20:30:26Z,MERGED,True,8,0,1,https://github.com/rtgnx,docs/ipc: update tree node with window_properties,1,[],https://github.com/i3/i3/pull/3250,https://github.com/rtgnx,2,https://github.com/i3/i3/pull/3250#issuecomment-382325673,"I have added description of window_properties field in tree node so that it can be used in
go-i3 interface.",Instance and transient_for fields are added now.,True,{}
i3/i3,https://github.com/i3/i3,3250,2018-04-18T00:58:46Z,2018-04-18T20:30:22Z,2018-04-18T20:30:26Z,MERGED,True,8,0,1,https://github.com/rtgnx,docs/ipc: update tree node with window_properties,1,[],https://github.com/i3/i3/pull/3250,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3250#issuecomment-382519212,"I have added description of window_properties field in tree node so that it can be used in
go-i3 interface.",Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3253,2018-04-19T18:11:27Z,2018-04-19T18:20:45Z,2018-04-19T19:27:58Z,MERGED,True,1,0,1,https://github.com/stapelberg,Makefile.am: add forgotten include/sync.h,1,[],https://github.com/i3/i3/pull/3253,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3253,,,True,{}
i3/i3,https://github.com/i3/i3,3254,2018-04-20T02:44:52Z,2018-07-12T14:18:14Z,2018-07-12T14:23:37Z,MERGED,True,246,69,11,https://github.com/orestisfl,Multiple assignments of workspaces to outputs (#555),4,[],https://github.com/i3/i3/pull/3254,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3254,"userguide
 I followed the discussion in #555 and concluded to use the workspace X output A B C syntax but it might be inconsistent with https://i3wm.org/docs/userguide.html#_output_s.
 Fix infinite reccursion error
 Fix mouse over crash
 move_workspace_to_output crash

CC @ograff
Fixes #555.","userguide
 I followed the discussion in #555 and concluded to use the workspace X output A B C syntax but it might be inconsistent with https://i3wm.org/docs/userguide.html#_output_s.
 Fix infinite reccursion error
 Fix mouse over crash
 move_workspace_to_output crash

CC @ograff
Fixes #555.",True,{}
i3/i3,https://github.com/i3/i3,3254,2018-04-20T02:44:52Z,2018-07-12T14:18:14Z,2018-07-12T14:23:37Z,MERGED,True,246,69,11,https://github.com/orestisfl,Multiple assignments of workspaces to outputs (#555),4,[],https://github.com/i3/i3/pull/3254,https://github.com/foonathan,2,https://github.com/i3/i3/pull/3254#issuecomment-400634857,"userguide
 I followed the discussion in #555 and concluded to use the workspace X output A B C syntax but it might be inconsistent with https://i3wm.org/docs/userguide.html#_output_s.
 Fix infinite reccursion error
 Fix mouse over crash
 move_workspace_to_output crash

CC @ograff
Fixes #555.",What is the status of this PR? I'd love to have this feature.,True,{}
i3/i3,https://github.com/i3/i3,3254,2018-04-20T02:44:52Z,2018-07-12T14:18:14Z,2018-07-12T14:23:37Z,MERGED,True,246,69,11,https://github.com/orestisfl,Multiple assignments of workspaces to outputs (#555),4,[],https://github.com/i3/i3/pull/3254,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/3254#issuecomment-400647068,"userguide
 I followed the discussion in #555 and concluded to use the workspace X output A B C syntax but it might be inconsistent with https://i3wm.org/docs/userguide.html#_output_s.
 Fix infinite reccursion error
 Fix mouse over crash
 move_workspace_to_output crash

CC @ograff
Fixes #555.",Mainly needs to be reviewed. I didn't use the feature much on my machine so if you want to run this PR locally you might be able to spot possible issues since this change is a bit tricky.,True,{}
i3/i3,https://github.com/i3/i3,3254,2018-04-20T02:44:52Z,2018-07-12T14:18:14Z,2018-07-12T14:23:37Z,MERGED,True,246,69,11,https://github.com/orestisfl,Multiple assignments of workspaces to outputs (#555),4,[],https://github.com/i3/i3/pull/3254,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/3254#issuecomment-400648130,"userguide
 I followed the discussion in #555 and concluded to use the workspace X output A B C syntax but it might be inconsistent with https://i3wm.org/docs/userguide.html#_output_s.
 Fix infinite reccursion error
 Fix mouse over crash
 move_workspace_to_output crash

CC @ograff
Fixes #555.",@Airblader I see that you put the waiting label. The only thing missing AFAIK is updating the userguide and writing some missing docstrings. I can do either if you want them before reviewing.,True,{}
i3/i3,https://github.com/i3/i3,3254,2018-04-20T02:44:52Z,2018-07-12T14:18:14Z,2018-07-12T14:23:37Z,MERGED,True,246,69,11,https://github.com/orestisfl,Multiple assignments of workspaces to outputs (#555),4,[],https://github.com/i3/i3/pull/3254,https://github.com/Airblader,5,https://github.com/i3/i3/pull/3254#issuecomment-401607685,"userguide
 I followed the discussion in #555 and concluded to use the workspace X output A B C syntax but it might be inconsistent with https://i3wm.org/docs/userguide.html#_output_s.
 Fix infinite reccursion error
 Fix mouse over crash
 move_workspace_to_output crash

CC @ograff
Fixes #555.","The changes look fine to me at first glance, so I think we can go ahead.",True,{}
i3/i3,https://github.com/i3/i3,3254,2018-04-20T02:44:52Z,2018-07-12T14:18:14Z,2018-07-12T14:23:37Z,MERGED,True,246,69,11,https://github.com/orestisfl,Multiple assignments of workspaces to outputs (#555),4,[],https://github.com/i3/i3/pull/3254,https://github.com/orestisfl,6,https://github.com/i3/i3/pull/3254#issuecomment-402517261,"userguide
 I followed the discussion in #555 and concluded to use the workspace X output A B C syntax but it might be inconsistent with https://i3wm.org/docs/userguide.html#_output_s.
 Fix infinite reccursion error
 Fix mouse over crash
 move_workspace_to_output crash

CC @ograff
Fixes #555.",up,True,{}
i3/i3,https://github.com/i3/i3,3255,2018-04-20T03:15:22Z,2018-04-20T03:30:52Z,2018-04-20T10:09:42Z,MERGED,True,0,3,1,https://github.com/orestisfl,Remove obsolete macro FOR_TABLE,1,[],https://github.com/i3/i3/pull/3255,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3255,"Was added in 38c8541, should have been removed in c145f7e.","Was added in 38c8541, should have been removed in c145f7e.",True,{}
i3/i3,https://github.com/i3/i3,3256,2018-04-20T10:07:25Z,2018-04-21T15:56:06Z,2018-04-21T15:59:51Z,MERGED,True,0,4,1,https://github.com/orestisfl,Remove obsolete macro REQUIRED_OPTION,1,[],https://github.com/i3/i3/pull/3256,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3256,,,True,{}
i3/i3,https://github.com/i3/i3,3258,2018-04-20T17:40:27Z,2018-10-07T20:43:25Z,2018-10-07T20:44:35Z,MERGED,True,20,6,4,https://github.com/orestisfl,i3-nagbar: add option for button that runs commands without a terminal,1,[],https://github.com/i3/i3/pull/3258,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3258,"I think this is an acceptable solution: two kind of buttons. One executes buttons on a terminal, one directly. -x / --button-no-terminal is a placeholder name, we can probably find something better.
Fixes #2199.","I think this is an acceptable solution: two kind of buttons. One executes buttons on a terminal, one directly. -x / --button-no-terminal is a placeholder name, we can probably find something better.
Fixes #2199.",True,{}
i3/i3,https://github.com/i3/i3,3258,2018-04-20T17:40:27Z,2018-10-07T20:43:25Z,2018-10-07T20:44:35Z,MERGED,True,20,6,4,https://github.com/orestisfl,i3-nagbar: add option for button that runs commands without a terminal,1,[],https://github.com/i3/i3/pull/3258,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3258#issuecomment-386717122,"I think this is an acceptable solution: two kind of buttons. One executes buttons on a terminal, one directly. -x / --button-no-terminal is a placeholder name, we can probably find something better.
Fixes #2199.","LGTM, do you have a proposal for the name/flag?",True,{}
i3/i3,https://github.com/i3/i3,3258,2018-04-20T17:40:27Z,2018-10-07T20:43:25Z,2018-10-07T20:44:35Z,MERGED,True,20,6,4,https://github.com/orestisfl,i3-nagbar: add option for button that runs commands without a terminal,1,[],https://github.com/i3/i3/pull/3258,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/3258#issuecomment-386719412,"I think this is an acceptable solution: two kind of buttons. One executes buttons on a terminal, one directly. -x / --button-no-terminal is a placeholder name, we can probably find something better.
Fixes #2199.",Nothing yet :/,True,{}
i3/i3,https://github.com/i3/i3,3258,2018-04-20T17:40:27Z,2018-10-07T20:43:25Z,2018-10-07T20:44:35Z,MERGED,True,20,6,4,https://github.com/orestisfl,i3-nagbar: add option for button that runs commands without a terminal,1,[],https://github.com/i3/i3/pull/3258,https://github.com/Airblader,4,https://github.com/i3/i3/pull/3258#issuecomment-399413744,"I think this is an acceptable solution: two kind of buttons. One executes buttons on a terminal, one directly. -x / --button-no-terminal is a placeholder name, we can probably find something better.
Fixes #2199.",Any ideas now? :-),True,{}
i3/i3,https://github.com/i3/i3,3258,2018-04-20T17:40:27Z,2018-10-07T20:43:25Z,2018-10-07T20:44:35Z,MERGED,True,20,6,4,https://github.com/orestisfl,i3-nagbar: add option for button that runs commands without a terminal,1,[],https://github.com/i3/i3/pull/3258,https://github.com/stapelberg,5,https://github.com/i3/i3/pull/3258#issuecomment-427675561,"I think this is an acceptable solution: two kind of buttons. One executes buttons on a terminal, one directly. -x / --button-no-terminal is a placeholder name, we can probably find something better.
Fixes #2199.","I think button-no-terminal is a fine long name, and B is a good short name (like b for button, but different).",True,{}
i3/i3,https://github.com/i3/i3,3258,2018-04-20T17:40:27Z,2018-10-07T20:43:25Z,2018-10-07T20:44:35Z,MERGED,True,20,6,4,https://github.com/orestisfl,i3-nagbar: add option for button that runs commands without a terminal,1,[],https://github.com/i3/i3/pull/3258,https://github.com/orestisfl,6,https://github.com/i3/i3/pull/3258#issuecomment-427684510,"I think this is an acceptable solution: two kind of buttons. One executes buttons on a terminal, one directly. -x / --button-no-terminal is a placeholder name, we can probably find something better.
Fixes #2199.",up,True,{}
i3/i3,https://github.com/i3/i3,3260,2018-04-21T14:00:59Z,2018-04-21T15:55:52Z,2018-04-21T15:59:51Z,MERGED,True,60,35,4,https://github.com/orestisfl,cmd_border: improve width selection,1,[],https://github.com/i3/i3/pull/3260,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3260,,,True,{}
i3/i3,https://github.com/i3/i3,3261,2018-04-22T14:00:02Z,2018-04-22T14:35:26Z,2018-04-22T14:37:08Z,MERGED,True,23,16,2,https://github.com/orestisfl,Don't call con_fullscreen_permits_focusing with ignore_focus ,2,[],https://github.com/i3/i3/pull/3261,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3261,Fixes #3259,Fixes #3259,True,{}
i3/i3,https://github.com/i3/i3,3262,2018-04-22T18:52:02Z,2018-07-06T22:06:41Z,2018-07-06T22:06:41Z,CLOSED,False,100,4,7,https://github.com/ShimmerGlass,Add `title_align` command,1,"['waiting', 'stale']",https://github.com/i3/i3/pull/3262,https://github.com/ShimmerGlass,1,https://github.com/i3/i3/pull/3262,"Controls the window titles alignment in title bars.
Possible values are :

left
center
right","Controls the window titles alignment in title bars.
Possible values are :

left
center
right",True,{'THUMBS_UP': ['https://github.com/dylanaraps']}
i3/i3,https://github.com/i3/i3,3262,2018-04-22T18:52:02Z,2018-07-06T22:06:41Z,2018-07-06T22:06:41Z,CLOSED,False,100,4,7,https://github.com/ShimmerGlass,Add `title_align` command,1,"['waiting', 'stale']",https://github.com/i3/i3/pull/3262,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3262#issuecomment-383404123,"Controls the window titles alignment in title bars.
Possible values are :

left
center
right","This doesn't play nice with marks
Relevant issue: #1750",True,{}
i3/i3,https://github.com/i3/i3,3262,2018-04-22T18:52:02Z,2018-07-06T22:06:41Z,2018-07-06T22:06:41Z,CLOSED,False,100,4,7,https://github.com/ShimmerGlass,Add `title_align` command,1,"['waiting', 'stale']",https://github.com/i3/i3/pull/3262,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3262#issuecomment-383404666,"Controls the window titles alignment in title bars.
Possible values are :

left
center
right","Agreed, it definitely has to work with marks. A potential solution would be to move marks to the left for right-aligned titles and for centered to just make sure that the title ends with an ellipsis when hitting the marks.",True,{}
i3/i3,https://github.com/i3/i3,3262,2018-04-22T18:52:02Z,2018-07-06T22:06:41Z,2018-07-06T22:06:41Z,CLOSED,False,100,4,7,https://github.com/ShimmerGlass,Add `title_align` command,1,"['waiting', 'stale']",https://github.com/i3/i3/pull/3262,https://github.com/ShimmerGlass,4,https://github.com/i3/i3/pull/3262#issuecomment-383477092,"Controls the window titles alignment in title bars.
Possible values are :

left
center
right","@orestisf1993 thx for the link. Seeing the issue i'll try to play with pango_layout_set_alignment() instead of computing the offset myself.
@Airblader how about keeping a padding (something like 1 * font_height ?) between the window title and its marks :

left align :
[title]                                           [padding][marks]
center align :
[marks_width][padding]   [title]   [padding][marks]
right align :
[marks][padding]                                           [title]

This way

the window title is always separated from the marks whether there's an ellipsis or not
in centered mode, the window title is centered even if there is marks",True,{}
i3/i3,https://github.com/i3/i3,3262,2018-04-22T18:52:02Z,2018-07-06T22:06:41Z,2018-07-06T22:06:41Z,CLOSED,False,100,4,7,https://github.com/ShimmerGlass,Add `title_align` command,1,"['waiting', 'stale']",https://github.com/i3/i3/pull/3262,https://github.com/Airblader,5,https://github.com/i3/i3/pull/3262#issuecomment-383483643,"Controls the window titles alignment in title bars.
Possible values are :

left
center
right","Seeing the issue i'll try to play with pango_layout_set_alignment() instead of computing the offset myself.

The problem is that this doesn't work if pango isn't used. I actually thought it's quite nice that you found a solution that works for both. We could also just use the manual computation in the non-pango fallback.
Not sure I understand the second part. Given a long enough title, we have to use an ellipsis. The main point is that the title should never overlay the marks, but just turn into ellipsis before it bleeds into the marks. We (can) know how wide everything is, so it's just about computing things correctly.
BTW, when you update the PR, screenshots of a few of these cases would be much appreciated. :-)",True,{}
i3/i3,https://github.com/i3/i3,3262,2018-04-22T18:52:02Z,2018-07-06T22:06:41Z,2018-07-06T22:06:41Z,CLOSED,False,100,4,7,https://github.com/ShimmerGlass,Add `title_align` command,1,"['waiting', 'stale']",https://github.com/i3/i3/pull/3262,https://github.com/orestisfl,6,https://github.com/i3/i3/pull/3262#issuecomment-383570167,"Controls the window titles alignment in title bars.
Possible values are :

left
center
right","I actually thought it's quite nice that you found a solution that works for both.

Sorry for the noise but you are the one that found the pango_layout_set_alignment solution: #1750 (comment). Or are you referring to something else?",True,{}
i3/i3,https://github.com/i3/i3,3262,2018-04-22T18:52:02Z,2018-07-06T22:06:41Z,2018-07-06T22:06:41Z,CLOSED,False,100,4,7,https://github.com/ShimmerGlass,Add `title_align` command,1,"['waiting', 'stale']",https://github.com/i3/i3/pull/3262,https://github.com/Airblader,7,https://github.com/i3/i3/pull/3262#issuecomment-383571705,"Controls the window titles alignment in title bars.
Possible values are :

left
center
right","Yes, but that one only works for pango. The solution currently in this PR (using text width prediction) can in theory work also for non-pango. :-)",True,{'THUMBS_UP': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,3262,2018-04-22T18:52:02Z,2018-07-06T22:06:41Z,2018-07-06T22:06:41Z,CLOSED,False,100,4,7,https://github.com/ShimmerGlass,Add `title_align` command,1,"['waiting', 'stale']",https://github.com/i3/i3/pull/3262,https://github.com/ShimmerGlass,8,https://github.com/i3/i3/pull/3262#issuecomment-383689074,"Controls the window titles alignment in title bars.
Possible values are :

left
center
right","I updated the changes to account for the marks. Here what it looks like with a long title and a mark :
I added an extra logical_px(2) between mark and title for right alignment because they were too squished together.
left :

center :

right :

What do you guys think ?",True,{}
i3/i3,https://github.com/i3/i3,3262,2018-04-22T18:52:02Z,2018-07-06T22:06:41Z,2018-07-06T22:06:41Z,CLOSED,False,100,4,7,https://github.com/ShimmerGlass,Add `title_align` command,1,"['waiting', 'stale']",https://github.com/i3/i3/pull/3262,https://github.com/Airblader,9,https://github.com/i3/i3/pull/3262#issuecomment-383714882,"Controls the window titles alignment in title bars.
Possible values are :

left
center
right","Haven't looked at the code yet. The pictures look convincing (thanks!), I'd actually prefer a bit more space between title and marks.
What does surprise me just by looking is that the space looks bigger in the centered case than in the left case, and also that in the right case less of the title is shown (logically it should be the same in all cases, no?)",True,{}
i3/i3,https://github.com/i3/i3,3262,2018-04-22T18:52:02Z,2018-07-06T22:06:41Z,2018-07-06T22:06:41Z,CLOSED,False,100,4,7,https://github.com/ShimmerGlass,Add `title_align` command,1,"['waiting', 'stale']",https://github.com/i3/i3/pull/3262,https://github.com/orestisfl,10,https://github.com/i3/i3/pull/3262#issuecomment-383746555,"Controls the window titles alignment in title bars.
Possible values are :

left
center
right","How do we feel about a config directive for the default behaviour? I think that for_window [class="".*""] rules are not particularly pretty.",True,{}
i3/i3,https://github.com/i3/i3,3262,2018-04-22T18:52:02Z,2018-07-06T22:06:41Z,2018-07-06T22:06:41Z,CLOSED,False,100,4,7,https://github.com/ShimmerGlass,Add `title_align` command,1,"['waiting', 'stale']",https://github.com/i3/i3/pull/3262,https://github.com/Airblader,11,https://github.com/i3/i3/pull/3262#issuecomment-383832927,"Controls the window titles alignment in title bars.
Possible values are :

left
center
right","How do we feel about a config directive for the default behaviour?

I think there's even a case to be made in favor of only supporting a global directive, not a per-window command. What's the usecase for aligning titles differently in different windows?",True,{}
i3/i3,https://github.com/i3/i3,3262,2018-04-22T18:52:02Z,2018-07-06T22:06:41Z,2018-07-06T22:06:41Z,CLOSED,False,100,4,7,https://github.com/ShimmerGlass,Add `title_align` command,1,"['waiting', 'stale']",https://github.com/i3/i3/pull/3262,https://github.com/Airblader,12,https://github.com/i3/i3/pull/3262#issuecomment-399413632,"Controls the window titles alignment in title bars.
Possible values are :

left
center
right",What's the status here? Is anyone working on this or should we close it?,True,{}
i3/i3,https://github.com/i3/i3,3263,2018-04-23T12:59:03Z,2018-08-08T17:14:17Z,2018-08-08T20:52:59Z,MERGED,True,305,22,10,https://github.com/orestisfl, Kill misbehaving subscribed clients instead of hanging,2,[],https://github.com/i3/i3/pull/3263,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3263,"This change only affects clients that are subscribed to events, which should be the main cause of our problems.
In the common case (socket is immediately writeable) the behaviour doesn't change at all: the message is sent directly, no ev_io / ev_timeout callback is enabled. When a socket is found to be not writeable, instead of calling the blocking ipc_send_message we put the message in the tail of a queue and init a ev_io callback and a corresponding timer. If timer is triggered first, the socket is closed and the client connection is removed. If the socket becomes writeable before the timeout we either reset the timer if we couldn't push all stored messages or completely remove it if everything was pushed.
A simpler alternative is to immediately remove clients with non-writeable sockets (using the same socket_writeable() function):
https://github.com/orestisf1993/i3/tree/misbehaving-ipc-2999
The benefit of the queue + libev method is that we can allow timeouts that are orders of magnitude larger without blocking i3 temporarily.
Also, after reading through polybar/polybar#435: the approach here can help prevent deadlocks without killing an IPC connection (even though it relies on a timer but still).
We can still theoretically hang if the client stops reading while ipc_send_message() is writing the message. This is not a huge problem in practice but we could avoid it by using a simple non-blocking write() loop instead of writeall(). On EAGAIN we can return the amount of bytes written and save it in the pending_message_t struct. Then, when the socket is writeable again, we can continue writing from where we stopped.
We could also replace ipc_send_message() for all client connections in i3, not just those subscribed to events.
We can also limit the amount of messages stored and increase the timeout (or use multiple timeouts): eg it's ok if a client is not reading for 10 seconds and we are only holding 5KB of messages for them but it is not ok if they are inactive for 5 seconds and we have 30MB of messages held.
Closes #2999
Closes #2539
Low-info issue that should be re-reproduced:
Closes #3084 (OP uses an IPC script)","This change only affects clients that are subscribed to events, which should be the main cause of our problems.
In the common case (socket is immediately writeable) the behaviour doesn't change at all: the message is sent directly, no ev_io / ev_timeout callback is enabled. When a socket is found to be not writeable, instead of calling the blocking ipc_send_message we put the message in the tail of a queue and init a ev_io callback and a corresponding timer. If timer is triggered first, the socket is closed and the client connection is removed. If the socket becomes writeable before the timeout we either reset the timer if we couldn't push all stored messages or completely remove it if everything was pushed.
A simpler alternative is to immediately remove clients with non-writeable sockets (using the same socket_writeable() function):
https://github.com/orestisf1993/i3/tree/misbehaving-ipc-2999
The benefit of the queue + libev method is that we can allow timeouts that are orders of magnitude larger without blocking i3 temporarily.
Also, after reading through polybar/polybar#435: the approach here can help prevent deadlocks without killing an IPC connection (even though it relies on a timer but still).
We can still theoretically hang if the client stops reading while ipc_send_message() is writing the message. This is not a huge problem in practice but we could avoid it by using a simple non-blocking write() loop instead of writeall(). On EAGAIN we can return the amount of bytes written and save it in the pending_message_t struct. Then, when the socket is writeable again, we can continue writing from where we stopped.
We could also replace ipc_send_message() for all client connections in i3, not just those subscribed to events.
We can also limit the amount of messages stored and increase the timeout (or use multiple timeouts): eg it's ok if a client is not reading for 10 seconds and we are only holding 5KB of messages for them but it is not ok if they are inactive for 5 seconds and we have 30MB of messages held.
Closes #2999
Closes #2539
Low-info issue that should be re-reproduced:
Closes #3084 (OP uses an IPC script)",True,{}
i3/i3,https://github.com/i3/i3,3263,2018-04-23T12:59:03Z,2018-08-08T17:14:17Z,2018-08-08T20:52:59Z,MERGED,True,305,22,10,https://github.com/orestisfl, Kill misbehaving subscribed clients instead of hanging,2,[],https://github.com/i3/i3/pull/3263,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3263#issuecomment-383568145,"This change only affects clients that are subscribed to events, which should be the main cause of our problems.
In the common case (socket is immediately writeable) the behaviour doesn't change at all: the message is sent directly, no ev_io / ev_timeout callback is enabled. When a socket is found to be not writeable, instead of calling the blocking ipc_send_message we put the message in the tail of a queue and init a ev_io callback and a corresponding timer. If timer is triggered first, the socket is closed and the client connection is removed. If the socket becomes writeable before the timeout we either reset the timer if we couldn't push all stored messages or completely remove it if everything was pushed.
A simpler alternative is to immediately remove clients with non-writeable sockets (using the same socket_writeable() function):
https://github.com/orestisf1993/i3/tree/misbehaving-ipc-2999
The benefit of the queue + libev method is that we can allow timeouts that are orders of magnitude larger without blocking i3 temporarily.
Also, after reading through polybar/polybar#435: the approach here can help prevent deadlocks without killing an IPC connection (even though it relies on a timer but still).
We can still theoretically hang if the client stops reading while ipc_send_message() is writing the message. This is not a huge problem in practice but we could avoid it by using a simple non-blocking write() loop instead of writeall(). On EAGAIN we can return the amount of bytes written and save it in the pending_message_t struct. Then, when the socket is writeable again, we can continue writing from where we stopped.
We could also replace ipc_send_message() for all client connections in i3, not just those subscribed to events.
We can also limit the amount of messages stored and increase the timeout (or use multiple timeouts): eg it's ok if a client is not reading for 10 seconds and we are only holding 5KB of messages for them but it is not ok if they are inactive for 5 seconds and we have 30MB of messages held.
Closes #2999
Closes #2539
Low-info issue that should be re-reproduced:
Closes #3084 (OP uses an IPC script)",We could also have an array instead of a TAILQ: 4902769. Not very useful right now so I am squashing it away.,True,{}
i3/i3,https://github.com/i3/i3,3263,2018-04-23T12:59:03Z,2018-08-08T17:14:17Z,2018-08-08T20:52:59Z,MERGED,True,305,22,10,https://github.com/orestisfl, Kill misbehaving subscribed clients instead of hanging,2,[],https://github.com/i3/i3/pull/3263,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3263#issuecomment-399413466,"This change only affects clients that are subscribed to events, which should be the main cause of our problems.
In the common case (socket is immediately writeable) the behaviour doesn't change at all: the message is sent directly, no ev_io / ev_timeout callback is enabled. When a socket is found to be not writeable, instead of calling the blocking ipc_send_message we put the message in the tail of a queue and init a ev_io callback and a corresponding timer. If timer is triggered first, the socket is closed and the client connection is removed. If the socket becomes writeable before the timeout we either reset the timer if we couldn't push all stored messages or completely remove it if everything was pushed.
A simpler alternative is to immediately remove clients with non-writeable sockets (using the same socket_writeable() function):
https://github.com/orestisf1993/i3/tree/misbehaving-ipc-2999
The benefit of the queue + libev method is that we can allow timeouts that are orders of magnitude larger without blocking i3 temporarily.
Also, after reading through polybar/polybar#435: the approach here can help prevent deadlocks without killing an IPC connection (even though it relies on a timer but still).
We can still theoretically hang if the client stops reading while ipc_send_message() is writing the message. This is not a huge problem in practice but we could avoid it by using a simple non-blocking write() loop instead of writeall(). On EAGAIN we can return the amount of bytes written and save it in the pending_message_t struct. Then, when the socket is writeable again, we can continue writing from where we stopped.
We could also replace ipc_send_message() for all client connections in i3, not just those subscribed to events.
We can also limit the amount of messages stored and increase the timeout (or use multiple timeouts): eg it's ok if a client is not reading for 10 seconds and we are only holding 5KB of messages for them but it is not ok if they are inactive for 5 seconds and we have 30MB of messages held.
Closes #2999
Closes #2539
Low-info issue that should be re-reproduced:
Closes #3084 (OP uses an IPC script)",@orestisf1993 I'm sorry this sort of went totally by me. Is this ready to be reviewed from your point of view?,True,{}
i3/i3,https://github.com/i3/i3,3263,2018-04-23T12:59:03Z,2018-08-08T17:14:17Z,2018-08-08T20:52:59Z,MERGED,True,305,22,10,https://github.com/orestisfl, Kill misbehaving subscribed clients instead of hanging,2,[],https://github.com/i3/i3/pull/3263,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/3263#issuecomment-399420271,"This change only affects clients that are subscribed to events, which should be the main cause of our problems.
In the common case (socket is immediately writeable) the behaviour doesn't change at all: the message is sent directly, no ev_io / ev_timeout callback is enabled. When a socket is found to be not writeable, instead of calling the blocking ipc_send_message we put the message in the tail of a queue and init a ev_io callback and a corresponding timer. If timer is triggered first, the socket is closed and the client connection is removed. If the socket becomes writeable before the timeout we either reset the timer if we couldn't push all stored messages or completely remove it if everything was pushed.
A simpler alternative is to immediately remove clients with non-writeable sockets (using the same socket_writeable() function):
https://github.com/orestisf1993/i3/tree/misbehaving-ipc-2999
The benefit of the queue + libev method is that we can allow timeouts that are orders of magnitude larger without blocking i3 temporarily.
Also, after reading through polybar/polybar#435: the approach here can help prevent deadlocks without killing an IPC connection (even though it relies on a timer but still).
We can still theoretically hang if the client stops reading while ipc_send_message() is writing the message. This is not a huge problem in practice but we could avoid it by using a simple non-blocking write() loop instead of writeall(). On EAGAIN we can return the amount of bytes written and save it in the pending_message_t struct. Then, when the socket is writeable again, we can continue writing from where we stopped.
We could also replace ipc_send_message() for all client connections in i3, not just those subscribed to events.
We can also limit the amount of messages stored and increase the timeout (or use multiple timeouts): eg it's ok if a client is not reading for 10 seconds and we are only holding 5KB of messages for them but it is not ok if they are inactive for 5 seconds and we have 30MB of messages held.
Closes #2999
Closes #2539
Low-info issue that should be re-reproduced:
Closes #3084 (OP uses an IPC script)",Yes!,True,{}
i3/i3,https://github.com/i3/i3,3263,2018-04-23T12:59:03Z,2018-08-08T17:14:17Z,2018-08-08T20:52:59Z,MERGED,True,305,22,10,https://github.com/orestisfl, Kill misbehaving subscribed clients instead of hanging,2,[],https://github.com/i3/i3/pull/3263,https://github.com/orestisfl,5,https://github.com/i3/i3/pull/3263#issuecomment-399434467,"This change only affects clients that are subscribed to events, which should be the main cause of our problems.
In the common case (socket is immediately writeable) the behaviour doesn't change at all: the message is sent directly, no ev_io / ev_timeout callback is enabled. When a socket is found to be not writeable, instead of calling the blocking ipc_send_message we put the message in the tail of a queue and init a ev_io callback and a corresponding timer. If timer is triggered first, the socket is closed and the client connection is removed. If the socket becomes writeable before the timeout we either reset the timer if we couldn't push all stored messages or completely remove it if everything was pushed.
A simpler alternative is to immediately remove clients with non-writeable sockets (using the same socket_writeable() function):
https://github.com/orestisf1993/i3/tree/misbehaving-ipc-2999
The benefit of the queue + libev method is that we can allow timeouts that are orders of magnitude larger without blocking i3 temporarily.
Also, after reading through polybar/polybar#435: the approach here can help prevent deadlocks without killing an IPC connection (even though it relies on a timer but still).
We can still theoretically hang if the client stops reading while ipc_send_message() is writing the message. This is not a huge problem in practice but we could avoid it by using a simple non-blocking write() loop instead of writeall(). On EAGAIN we can return the amount of bytes written and save it in the pending_message_t struct. Then, when the socket is writeable again, we can continue writing from where we stopped.
We could also replace ipc_send_message() for all client connections in i3, not just those subscribed to events.
We can also limit the amount of messages stored and increase the timeout (or use multiple timeouts): eg it's ok if a client is not reading for 10 seconds and we are only holding 5KB of messages for them but it is not ok if they are inactive for 5 seconds and we have 30MB of messages held.
Closes #2999
Closes #2539
Low-info issue that should be re-reproduced:
Closes #3084 (OP uses an IPC script)","Thanks, forgot about them. They are about the docstrings for each respective function, I wanted to reach a decision about the structure of the code first, I wasn't sure you are going to like the changes in libi3.",True,{}
i3/i3,https://github.com/i3/i3,3263,2018-04-23T12:59:03Z,2018-08-08T17:14:17Z,2018-08-08T20:52:59Z,MERGED,True,305,22,10,https://github.com/orestisfl, Kill misbehaving subscribed clients instead of hanging,2,[],https://github.com/i3/i3/pull/3263,https://github.com/Airblader,6,https://github.com/i3/i3/pull/3263#issuecomment-399446265,"This change only affects clients that are subscribed to events, which should be the main cause of our problems.
In the common case (socket is immediately writeable) the behaviour doesn't change at all: the message is sent directly, no ev_io / ev_timeout callback is enabled. When a socket is found to be not writeable, instead of calling the blocking ipc_send_message we put the message in the tail of a queue and init a ev_io callback and a corresponding timer. If timer is triggered first, the socket is closed and the client connection is removed. If the socket becomes writeable before the timeout we either reset the timer if we couldn't push all stored messages or completely remove it if everything was pushed.
A simpler alternative is to immediately remove clients with non-writeable sockets (using the same socket_writeable() function):
https://github.com/orestisf1993/i3/tree/misbehaving-ipc-2999
The benefit of the queue + libev method is that we can allow timeouts that are orders of magnitude larger without blocking i3 temporarily.
Also, after reading through polybar/polybar#435: the approach here can help prevent deadlocks without killing an IPC connection (even though it relies on a timer but still).
We can still theoretically hang if the client stops reading while ipc_send_message() is writing the message. This is not a huge problem in practice but we could avoid it by using a simple non-blocking write() loop instead of writeall(). On EAGAIN we can return the amount of bytes written and save it in the pending_message_t struct. Then, when the socket is writeable again, we can continue writing from where we stopped.
We could also replace ipc_send_message() for all client connections in i3, not just those subscribed to events.
We can also limit the amount of messages stored and increase the timeout (or use multiple timeouts): eg it's ok if a client is not reading for 10 seconds and we are only holding 5KB of messages for them but it is not ok if they are inactive for 5 seconds and we have 30MB of messages held.
Closes #2999
Closes #2539
Low-info issue that should be re-reproduced:
Closes #3084 (OP uses an IPC script)","Yeah, the changes are why I requested a review from @stapelberg as well.",True,{}
i3/i3,https://github.com/i3/i3,3263,2018-04-23T12:59:03Z,2018-08-08T17:14:17Z,2018-08-08T20:52:59Z,MERGED,True,305,22,10,https://github.com/orestisfl, Kill misbehaving subscribed clients instead of hanging,2,[],https://github.com/i3/i3/pull/3263,https://github.com/stapelberg,7,https://github.com/i3/i3/pull/3263#issuecomment-399755264,"This change only affects clients that are subscribed to events, which should be the main cause of our problems.
In the common case (socket is immediately writeable) the behaviour doesn't change at all: the message is sent directly, no ev_io / ev_timeout callback is enabled. When a socket is found to be not writeable, instead of calling the blocking ipc_send_message we put the message in the tail of a queue and init a ev_io callback and a corresponding timer. If timer is triggered first, the socket is closed and the client connection is removed. If the socket becomes writeable before the timeout we either reset the timer if we couldn't push all stored messages or completely remove it if everything was pushed.
A simpler alternative is to immediately remove clients with non-writeable sockets (using the same socket_writeable() function):
https://github.com/orestisf1993/i3/tree/misbehaving-ipc-2999
The benefit of the queue + libev method is that we can allow timeouts that are orders of magnitude larger without blocking i3 temporarily.
Also, after reading through polybar/polybar#435: the approach here can help prevent deadlocks without killing an IPC connection (even though it relies on a timer but still).
We can still theoretically hang if the client stops reading while ipc_send_message() is writing the message. This is not a huge problem in practice but we could avoid it by using a simple non-blocking write() loop instead of writeall(). On EAGAIN we can return the amount of bytes written and save it in the pending_message_t struct. Then, when the socket is writeable again, we can continue writing from where we stopped.
We could also replace ipc_send_message() for all client connections in i3, not just those subscribed to events.
We can also limit the amount of messages stored and increase the timeout (or use multiple timeouts): eg it's ok if a client is not reading for 10 seconds and we are only holding 5KB of messages for them but it is not ok if they are inactive for 5 seconds and we have 30MB of messages held.
Closes #2999
Closes #2539
Low-info issue that should be re-reproduced:
Closes #3084 (OP uses an IPC script)","Sorry for the long wait.

A simpler alternative is to immediately remove clients with non-writeable sockets (using the same socket_writeable() function):
https://github.com/orestisf1993/i3/tree/misbehaving-ipc-2999
The benefit of the queue + libev method is that we can allow timeouts that are orders of magnitude larger without blocking i3 temporarily.

I think I’d prefer trying the simple approach first (immediately killing clients where writes block):
Socket buffers are typically large enough to not block during normal operation (except perhaps on OpenBSD, which, AFAIR, is more conservative). To be sure, we could try increasing the buffer size programmatically for the sockets we’re using.
If this turns out not to work, we can revisit the queueing approach.
Does that make sense?",True,{}
i3/i3,https://github.com/i3/i3,3263,2018-04-23T12:59:03Z,2018-08-08T17:14:17Z,2018-08-08T20:52:59Z,MERGED,True,305,22,10,https://github.com/orestisfl, Kill misbehaving subscribed clients instead of hanging,2,[],https://github.com/i3/i3/pull/3263,https://github.com/orestisfl,8,https://github.com/i3/i3/pull/3263#issuecomment-399758006,"This change only affects clients that are subscribed to events, which should be the main cause of our problems.
In the common case (socket is immediately writeable) the behaviour doesn't change at all: the message is sent directly, no ev_io / ev_timeout callback is enabled. When a socket is found to be not writeable, instead of calling the blocking ipc_send_message we put the message in the tail of a queue and init a ev_io callback and a corresponding timer. If timer is triggered first, the socket is closed and the client connection is removed. If the socket becomes writeable before the timeout we either reset the timer if we couldn't push all stored messages or completely remove it if everything was pushed.
A simpler alternative is to immediately remove clients with non-writeable sockets (using the same socket_writeable() function):
https://github.com/orestisf1993/i3/tree/misbehaving-ipc-2999
The benefit of the queue + libev method is that we can allow timeouts that are orders of magnitude larger without blocking i3 temporarily.
Also, after reading through polybar/polybar#435: the approach here can help prevent deadlocks without killing an IPC connection (even though it relies on a timer but still).
We can still theoretically hang if the client stops reading while ipc_send_message() is writing the message. This is not a huge problem in practice but we could avoid it by using a simple non-blocking write() loop instead of writeall(). On EAGAIN we can return the amount of bytes written and save it in the pending_message_t struct. Then, when the socket is writeable again, we can continue writing from where we stopped.
We could also replace ipc_send_message() for all client connections in i3, not just those subscribed to events.
We can also limit the amount of messages stored and increase the timeout (or use multiple timeouts): eg it's ok if a client is not reading for 10 seconds and we are only holding 5KB of messages for them but it is not ok if they are inactive for 5 seconds and we have 30MB of messages held.
Closes #2999
Closes #2539
Low-info issue that should be re-reproduced:
Closes #3084 (OP uses an IPC script)","The benefits of the queue outweigh the small extra complexity IMO. i3 won't block its operation and we will avoid possible deadlocks like the issue in polybar. We will also have to decide how we are going to solve the timer problem you mentioned:

I considered using a timeout instead, but timeouts are very brittle: they make assumptions about how quickly processes run at every point in time on vastly different computers. E.g., if we decided to use a 10 second timeout, and another program starts swapping to hard disk (hence starving other processes for a while), i3 would incorrectly kill correctly functioning IPC clients. If we opt for a timeout that is too high, the mitigation becomes ineffective and users would still think that i3 hangs.
I think that the check-writeability approach will gracefully degrade on systems which are under high load: if the IPC client is slow, i3 will likely be slowed down to a somewhat similar extent.",True,{}
i3/i3,https://github.com/i3/i3,3263,2018-04-23T12:59:03Z,2018-08-08T17:14:17Z,2018-08-08T20:52:59Z,MERGED,True,305,22,10,https://github.com/orestisfl, Kill misbehaving subscribed clients instead of hanging,2,[],https://github.com/i3/i3/pull/3263,https://github.com/stapelberg,9,https://github.com/i3/i3/pull/3263#issuecomment-399758085,"This change only affects clients that are subscribed to events, which should be the main cause of our problems.
In the common case (socket is immediately writeable) the behaviour doesn't change at all: the message is sent directly, no ev_io / ev_timeout callback is enabled. When a socket is found to be not writeable, instead of calling the blocking ipc_send_message we put the message in the tail of a queue and init a ev_io callback and a corresponding timer. If timer is triggered first, the socket is closed and the client connection is removed. If the socket becomes writeable before the timeout we either reset the timer if we couldn't push all stored messages or completely remove it if everything was pushed.
A simpler alternative is to immediately remove clients with non-writeable sockets (using the same socket_writeable() function):
https://github.com/orestisf1993/i3/tree/misbehaving-ipc-2999
The benefit of the queue + libev method is that we can allow timeouts that are orders of magnitude larger without blocking i3 temporarily.
Also, after reading through polybar/polybar#435: the approach here can help prevent deadlocks without killing an IPC connection (even though it relies on a timer but still).
We can still theoretically hang if the client stops reading while ipc_send_message() is writing the message. This is not a huge problem in practice but we could avoid it by using a simple non-blocking write() loop instead of writeall(). On EAGAIN we can return the amount of bytes written and save it in the pending_message_t struct. Then, when the socket is writeable again, we can continue writing from where we stopped.
We could also replace ipc_send_message() for all client connections in i3, not just those subscribed to events.
We can also limit the amount of messages stored and increase the timeout (or use multiple timeouts): eg it's ok if a client is not reading for 10 seconds and we are only holding 5KB of messages for them but it is not ok if they are inactive for 5 seconds and we have 30MB of messages held.
Closes #2999
Closes #2539
Low-info issue that should be re-reproduced:
Closes #3084 (OP uses an IPC script)","i3 won't block its operation

…but with the simple approach, we would never block either? What am I missing here?",True,{}
i3/i3,https://github.com/i3/i3,3263,2018-04-23T12:59:03Z,2018-08-08T17:14:17Z,2018-08-08T20:52:59Z,MERGED,True,305,22,10,https://github.com/orestisfl, Kill misbehaving subscribed clients instead of hanging,2,[],https://github.com/i3/i3/pull/3263,https://github.com/orestisfl,10,https://github.com/i3/i3/pull/3263#issuecomment-399758415,"This change only affects clients that are subscribed to events, which should be the main cause of our problems.
In the common case (socket is immediately writeable) the behaviour doesn't change at all: the message is sent directly, no ev_io / ev_timeout callback is enabled. When a socket is found to be not writeable, instead of calling the blocking ipc_send_message we put the message in the tail of a queue and init a ev_io callback and a corresponding timer. If timer is triggered first, the socket is closed and the client connection is removed. If the socket becomes writeable before the timeout we either reset the timer if we couldn't push all stored messages or completely remove it if everything was pushed.
A simpler alternative is to immediately remove clients with non-writeable sockets (using the same socket_writeable() function):
https://github.com/orestisf1993/i3/tree/misbehaving-ipc-2999
The benefit of the queue + libev method is that we can allow timeouts that are orders of magnitude larger without blocking i3 temporarily.
Also, after reading through polybar/polybar#435: the approach here can help prevent deadlocks without killing an IPC connection (even though it relies on a timer but still).
We can still theoretically hang if the client stops reading while ipc_send_message() is writing the message. This is not a huge problem in practice but we could avoid it by using a simple non-blocking write() loop instead of writeall(). On EAGAIN we can return the amount of bytes written and save it in the pending_message_t struct. Then, when the socket is writeable again, we can continue writing from where we stopped.
We could also replace ipc_send_message() for all client connections in i3, not just those subscribed to events.
We can also limit the amount of messages stored and increase the timeout (or use multiple timeouts): eg it's ok if a client is not reading for 10 seconds and we are only holding 5KB of messages for them but it is not ok if they are inactive for 5 seconds and we have 30MB of messages held.
Closes #2999
Closes #2539
Low-info issue that should be re-reproduced:
Closes #3084 (OP uses an IPC script)","If we don't block at all, we might kill a client that is still functional,
as you mentioned in the issue.
…
On Sun, Jun 24, 2018, 16:49 Michael Stapelberg ***@***.***> wrote:
 i3 won't block its operation

 …but with the simple approach, we would never block either? What am I
 missing here?

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#3263 (comment)>, or mute the
 thread
 <https://github.com/notifications/unsubscribe-auth/AFgsvhEAuemTfakNvjzg0xbM7X6rM7wUks5t_5jlgaJpZM4Tf2GW>
 .",True,{}
i3/i3,https://github.com/i3/i3,3263,2018-04-23T12:59:03Z,2018-08-08T17:14:17Z,2018-08-08T20:52:59Z,MERGED,True,305,22,10,https://github.com/orestisfl, Kill misbehaving subscribed clients instead of hanging,2,[],https://github.com/i3/i3/pull/3263,https://github.com/stapelberg,11,https://github.com/i3/i3/pull/3263#issuecomment-399759014,"This change only affects clients that are subscribed to events, which should be the main cause of our problems.
In the common case (socket is immediately writeable) the behaviour doesn't change at all: the message is sent directly, no ev_io / ev_timeout callback is enabled. When a socket is found to be not writeable, instead of calling the blocking ipc_send_message we put the message in the tail of a queue and init a ev_io callback and a corresponding timer. If timer is triggered first, the socket is closed and the client connection is removed. If the socket becomes writeable before the timeout we either reset the timer if we couldn't push all stored messages or completely remove it if everything was pushed.
A simpler alternative is to immediately remove clients with non-writeable sockets (using the same socket_writeable() function):
https://github.com/orestisf1993/i3/tree/misbehaving-ipc-2999
The benefit of the queue + libev method is that we can allow timeouts that are orders of magnitude larger without blocking i3 temporarily.
Also, after reading through polybar/polybar#435: the approach here can help prevent deadlocks without killing an IPC connection (even though it relies on a timer but still).
We can still theoretically hang if the client stops reading while ipc_send_message() is writing the message. This is not a huge problem in practice but we could avoid it by using a simple non-blocking write() loop instead of writeall(). On EAGAIN we can return the amount of bytes written and save it in the pending_message_t struct. Then, when the socket is writeable again, we can continue writing from where we stopped.
We could also replace ipc_send_message() for all client connections in i3, not just those subscribed to events.
We can also limit the amount of messages stored and increase the timeout (or use multiple timeouts): eg it's ok if a client is not reading for 10 seconds and we are only holding 5KB of messages for them but it is not ok if they are inactive for 5 seconds and we have 30MB of messages held.
Closes #2999
Closes #2539
Low-info issue that should be re-reproduced:
Closes #3084 (OP uses an IPC script)","In the issue, I also mention:

I think that the check-writeability approach will gracefully degrade on systems which are under high load: if the IPC client is slow, i3 will likely be slowed down to a somewhat similar extent.

So, my current best guess is still that a writability check should work, and we should only consider more complicated solutions if it doesn’t work well in practice.",True,{}
i3/i3,https://github.com/i3/i3,3263,2018-04-23T12:59:03Z,2018-08-08T17:14:17Z,2018-08-08T20:52:59Z,MERGED,True,305,22,10,https://github.com/orestisfl, Kill misbehaving subscribed clients instead of hanging,2,[],https://github.com/i3/i3/pull/3263,https://github.com/orestisfl,12,https://github.com/i3/i3/pull/3263#issuecomment-399760031,"This change only affects clients that are subscribed to events, which should be the main cause of our problems.
In the common case (socket is immediately writeable) the behaviour doesn't change at all: the message is sent directly, no ev_io / ev_timeout callback is enabled. When a socket is found to be not writeable, instead of calling the blocking ipc_send_message we put the message in the tail of a queue and init a ev_io callback and a corresponding timer. If timer is triggered first, the socket is closed and the client connection is removed. If the socket becomes writeable before the timeout we either reset the timer if we couldn't push all stored messages or completely remove it if everything was pushed.
A simpler alternative is to immediately remove clients with non-writeable sockets (using the same socket_writeable() function):
https://github.com/orestisf1993/i3/tree/misbehaving-ipc-2999
The benefit of the queue + libev method is that we can allow timeouts that are orders of magnitude larger without blocking i3 temporarily.
Also, after reading through polybar/polybar#435: the approach here can help prevent deadlocks without killing an IPC connection (even though it relies on a timer but still).
We can still theoretically hang if the client stops reading while ipc_send_message() is writing the message. This is not a huge problem in practice but we could avoid it by using a simple non-blocking write() loop instead of writeall(). On EAGAIN we can return the amount of bytes written and save it in the pending_message_t struct. Then, when the socket is writeable again, we can continue writing from where we stopped.
We could also replace ipc_send_message() for all client connections in i3, not just those subscribed to events.
We can also limit the amount of messages stored and increase the timeout (or use multiple timeouts): eg it's ok if a client is not reading for 10 seconds and we are only holding 5KB of messages for them but it is not ok if they are inactive for 5 seconds and we have 30MB of messages held.
Closes #2999
Closes #2539
Low-info issue that should be re-reproduced:
Closes #3084 (OP uses an IPC script)","But we might introduce a problem that might be hard to spot & reproduce, it
might mean IPC client developers trying to fix things by restarting the
connection from their end (which will lead to data loss).

Clients slower than i3 will always die when there is heavy activity since
reaching the data limit will make the socket not writeable.

Closing a connection on EAGAIN just doesn't sound like a good idea to me.
…
On Sun, Jun 24, 2018 at 5:03 PM, Michael Stapelberg < ***@***.***> wrote:
 In the issue, I also mention:

 I think that the check-writeability approach will gracefully degrade on
 systems which are under high load: if the IPC client is slow, i3 will
 likely be slowed down to a somewhat similar extent.

 So, my current best guess is still that a writability check should work,
 and we should only consider more complicated solutions if it doesn’t work
 well in practice.

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#3263 (comment)>, or mute the
 thread
 <https://github.com/notifications/unsubscribe-auth/AFgsvnR-Sit6v6c1XMaGUoYWDPlXC1_qks5t_5xMgaJpZM4Tf2GW>
 .",True,{}
i3/i3,https://github.com/i3/i3,3263,2018-04-23T12:59:03Z,2018-08-08T17:14:17Z,2018-08-08T20:52:59Z,MERGED,True,305,22,10,https://github.com/orestisfl, Kill misbehaving subscribed clients instead of hanging,2,[],https://github.com/i3/i3/pull/3263,https://github.com/stapelberg,13,https://github.com/i3/i3/pull/3263#issuecomment-399761020,"This change only affects clients that are subscribed to events, which should be the main cause of our problems.
In the common case (socket is immediately writeable) the behaviour doesn't change at all: the message is sent directly, no ev_io / ev_timeout callback is enabled. When a socket is found to be not writeable, instead of calling the blocking ipc_send_message we put the message in the tail of a queue and init a ev_io callback and a corresponding timer. If timer is triggered first, the socket is closed and the client connection is removed. If the socket becomes writeable before the timeout we either reset the timer if we couldn't push all stored messages or completely remove it if everything was pushed.
A simpler alternative is to immediately remove clients with non-writeable sockets (using the same socket_writeable() function):
https://github.com/orestisf1993/i3/tree/misbehaving-ipc-2999
The benefit of the queue + libev method is that we can allow timeouts that are orders of magnitude larger without blocking i3 temporarily.
Also, after reading through polybar/polybar#435: the approach here can help prevent deadlocks without killing an IPC connection (even though it relies on a timer but still).
We can still theoretically hang if the client stops reading while ipc_send_message() is writing the message. This is not a huge problem in practice but we could avoid it by using a simple non-blocking write() loop instead of writeall(). On EAGAIN we can return the amount of bytes written and save it in the pending_message_t struct. Then, when the socket is writeable again, we can continue writing from where we stopped.
We could also replace ipc_send_message() for all client connections in i3, not just those subscribed to events.
We can also limit the amount of messages stored and increase the timeout (or use multiple timeouts): eg it's ok if a client is not reading for 10 seconds and we are only holding 5KB of messages for them but it is not ok if they are inactive for 5 seconds and we have 30MB of messages held.
Closes #2999
Closes #2539
Low-info issue that should be re-reproduced:
Closes #3084 (OP uses an IPC script)","But we might introduce a problem that might be hard to spot & reproduce, it
might mean IPC client developers trying to fix things by restarting the
connection from their end (which will lead to data loss).

We could make the code pop up a nagbar with an appropriate message, and revert it early on if it indeed causes issues.

Clients slower than i3 will always die when there is heavy activity since
reaching the data limit will make the socket not writeable.

Yeah, but I don’t see why clients would be drastically slower than i3, and the limit should be sufficiently high that this seems unlikely.

Closing a connection on EAGAIN just doesn't sound like a good idea to me.

Well, it does seem like a good idea to me, or at least one that’s worthwhile trying. At this point, with two opposing opinions, I think we’ll just have to gather some data to clearly say whether it works or whether it doesn’t :).",True,{}
i3/i3,https://github.com/i3/i3,3263,2018-04-23T12:59:03Z,2018-08-08T17:14:17Z,2018-08-08T20:52:59Z,MERGED,True,305,22,10,https://github.com/orestisfl, Kill misbehaving subscribed clients instead of hanging,2,[],https://github.com/i3/i3/pull/3263,https://github.com/orestisfl,14,https://github.com/i3/i3/pull/3263#issuecomment-404492140,"This change only affects clients that are subscribed to events, which should be the main cause of our problems.
In the common case (socket is immediately writeable) the behaviour doesn't change at all: the message is sent directly, no ev_io / ev_timeout callback is enabled. When a socket is found to be not writeable, instead of calling the blocking ipc_send_message we put the message in the tail of a queue and init a ev_io callback and a corresponding timer. If timer is triggered first, the socket is closed and the client connection is removed. If the socket becomes writeable before the timeout we either reset the timer if we couldn't push all stored messages or completely remove it if everything was pushed.
A simpler alternative is to immediately remove clients with non-writeable sockets (using the same socket_writeable() function):
https://github.com/orestisf1993/i3/tree/misbehaving-ipc-2999
The benefit of the queue + libev method is that we can allow timeouts that are orders of magnitude larger without blocking i3 temporarily.
Also, after reading through polybar/polybar#435: the approach here can help prevent deadlocks without killing an IPC connection (even though it relies on a timer but still).
We can still theoretically hang if the client stops reading while ipc_send_message() is writing the message. This is not a huge problem in practice but we could avoid it by using a simple non-blocking write() loop instead of writeall(). On EAGAIN we can return the amount of bytes written and save it in the pending_message_t struct. Then, when the socket is writeable again, we can continue writing from where we stopped.
We could also replace ipc_send_message() for all client connections in i3, not just those subscribed to events.
We can also limit the amount of messages stored and increase the timeout (or use multiple timeouts): eg it's ok if a client is not reading for 10 seconds and we are only holding 5KB of messages for them but it is not ok if they are inactive for 5 seconds and we have 30MB of messages held.
Closes #2999
Closes #2539
Low-info issue that should be re-reproduced:
Closes #3084 (OP uses an IPC script)","I have a real life example. I wrote this quick script to use with thyme:
#!/usr/bin/env python3
import os
import i3ipc

i3 = i3ipc.Connection()

def on_window(*_):
    os.system('thyme track -o thyme.json')


i3.on('window::focus', on_window)

try:
    i3.main()
finally:
    i3.quit()
The thyme call should be around 8ms max, which isn't much since a simple ""hello world"" in python takes 5ms on my system.
Now, if I create 5-6 windows in a tabbed container and scroll through them back and forth using the scroll wheel, I'll eventually reach a point where EAGAIN is returned in writeall. This problem will certainly be amplified in more conservative systems.
Another possible example of a slower client is polybar.

Well, it does seem like a good idea to me

I partially don't like it because it doesn't seem to be a good practice. We are responding destructively to an error called ""Resource unavailable, try again""",True,{}
i3/i3,https://github.com/i3/i3,3263,2018-04-23T12:59:03Z,2018-08-08T17:14:17Z,2018-08-08T20:52:59Z,MERGED,True,305,22,10,https://github.com/orestisfl, Kill misbehaving subscribed clients instead of hanging,2,[],https://github.com/i3/i3/pull/3263,https://github.com/stapelberg,15,https://github.com/i3/i3/pull/3263#issuecomment-404496100,"This change only affects clients that are subscribed to events, which should be the main cause of our problems.
In the common case (socket is immediately writeable) the behaviour doesn't change at all: the message is sent directly, no ev_io / ev_timeout callback is enabled. When a socket is found to be not writeable, instead of calling the blocking ipc_send_message we put the message in the tail of a queue and init a ev_io callback and a corresponding timer. If timer is triggered first, the socket is closed and the client connection is removed. If the socket becomes writeable before the timeout we either reset the timer if we couldn't push all stored messages or completely remove it if everything was pushed.
A simpler alternative is to immediately remove clients with non-writeable sockets (using the same socket_writeable() function):
https://github.com/orestisf1993/i3/tree/misbehaving-ipc-2999
The benefit of the queue + libev method is that we can allow timeouts that are orders of magnitude larger without blocking i3 temporarily.
Also, after reading through polybar/polybar#435: the approach here can help prevent deadlocks without killing an IPC connection (even though it relies on a timer but still).
We can still theoretically hang if the client stops reading while ipc_send_message() is writing the message. This is not a huge problem in practice but we could avoid it by using a simple non-blocking write() loop instead of writeall(). On EAGAIN we can return the amount of bytes written and save it in the pending_message_t struct. Then, when the socket is writeable again, we can continue writing from where we stopped.
We could also replace ipc_send_message() for all client connections in i3, not just those subscribed to events.
We can also limit the amount of messages stored and increase the timeout (or use multiple timeouts): eg it's ok if a client is not reading for 10 seconds and we are only holding 5KB of messages for them but it is not ok if they are inactive for 5 seconds and we have 30MB of messages held.
Closes #2999
Closes #2539
Low-info issue that should be re-reproduced:
Closes #3084 (OP uses an IPC script)","Now, if I create 5-6 windows in a tabbed container and scroll through them back and forth using the scroll wheel, I'll eventually reach a point where EAGAIN is returned in writeall. This problem will certainly be amplified in more conservative systems.

Thanks for the example. It’s always helpful to talk about specific code.
In this case, I’d argue that the architecture of the program should be improved: you have a high-volume event stream (focus events) coming in, and a low-volume processing capability (os.system calls). You must make a policy decision here: do you want to queue events, or is it preferable to discard events and catch up eventually?
I think we shouldn’t dictate the policy by always queueing, but rather authors should decide what makes the most sense for the program they’re writing.

I partially don't like it because it doesn't seem to be a good practice. We are responding destructively to an error called ""Resource unavailable, try again""

The fact that we’re getting EAGAIN does not imply that the only response is to retry, otherwise the kernel could just retry on our behalf, and we could remove EAGAIN :). Rather, we’re given the option to retry, and I’d argue that in this case, it’d be better not to retry.",True,{}
i3/i3,https://github.com/i3/i3,3263,2018-04-23T12:59:03Z,2018-08-08T17:14:17Z,2018-08-08T20:52:59Z,MERGED,True,305,22,10,https://github.com/orestisfl, Kill misbehaving subscribed clients instead of hanging,2,[],https://github.com/i3/i3/pull/3263,https://github.com/stapelberg,16,https://github.com/i3/i3/pull/3263#issuecomment-404497071,"This change only affects clients that are subscribed to events, which should be the main cause of our problems.
In the common case (socket is immediately writeable) the behaviour doesn't change at all: the message is sent directly, no ev_io / ev_timeout callback is enabled. When a socket is found to be not writeable, instead of calling the blocking ipc_send_message we put the message in the tail of a queue and init a ev_io callback and a corresponding timer. If timer is triggered first, the socket is closed and the client connection is removed. If the socket becomes writeable before the timeout we either reset the timer if we couldn't push all stored messages or completely remove it if everything was pushed.
A simpler alternative is to immediately remove clients with non-writeable sockets (using the same socket_writeable() function):
https://github.com/orestisf1993/i3/tree/misbehaving-ipc-2999
The benefit of the queue + libev method is that we can allow timeouts that are orders of magnitude larger without blocking i3 temporarily.
Also, after reading through polybar/polybar#435: the approach here can help prevent deadlocks without killing an IPC connection (even though it relies on a timer but still).
We can still theoretically hang if the client stops reading while ipc_send_message() is writing the message. This is not a huge problem in practice but we could avoid it by using a simple non-blocking write() loop instead of writeall(). On EAGAIN we can return the amount of bytes written and save it in the pending_message_t struct. Then, when the socket is writeable again, we can continue writing from where we stopped.
We could also replace ipc_send_message() for all client connections in i3, not just those subscribed to events.
We can also limit the amount of messages stored and increase the timeout (or use multiple timeouts): eg it's ok if a client is not reading for 10 seconds and we are only holding 5KB of messages for them but it is not ok if they are inactive for 5 seconds and we have 30MB of messages held.
Closes #2999
Closes #2539
Low-info issue that should be re-reproduced:
Closes #3084 (OP uses an IPC script)",Side note: it would be interesting to figure out how X11 reacts to hanging clients.,True,{}
i3/i3,https://github.com/i3/i3,3263,2018-04-23T12:59:03Z,2018-08-08T17:14:17Z,2018-08-08T20:52:59Z,MERGED,True,305,22,10,https://github.com/orestisfl, Kill misbehaving subscribed clients instead of hanging,2,[],https://github.com/i3/i3/pull/3263,https://github.com/orestisfl,17,https://github.com/i3/i3/pull/3263#issuecomment-404555105,"This change only affects clients that are subscribed to events, which should be the main cause of our problems.
In the common case (socket is immediately writeable) the behaviour doesn't change at all: the message is sent directly, no ev_io / ev_timeout callback is enabled. When a socket is found to be not writeable, instead of calling the blocking ipc_send_message we put the message in the tail of a queue and init a ev_io callback and a corresponding timer. If timer is triggered first, the socket is closed and the client connection is removed. If the socket becomes writeable before the timeout we either reset the timer if we couldn't push all stored messages or completely remove it if everything was pushed.
A simpler alternative is to immediately remove clients with non-writeable sockets (using the same socket_writeable() function):
https://github.com/orestisf1993/i3/tree/misbehaving-ipc-2999
The benefit of the queue + libev method is that we can allow timeouts that are orders of magnitude larger without blocking i3 temporarily.
Also, after reading through polybar/polybar#435: the approach here can help prevent deadlocks without killing an IPC connection (even though it relies on a timer but still).
We can still theoretically hang if the client stops reading while ipc_send_message() is writing the message. This is not a huge problem in practice but we could avoid it by using a simple non-blocking write() loop instead of writeall(). On EAGAIN we can return the amount of bytes written and save it in the pending_message_t struct. Then, when the socket is writeable again, we can continue writing from where we stopped.
We could also replace ipc_send_message() for all client connections in i3, not just those subscribed to events.
We can also limit the amount of messages stored and increase the timeout (or use multiple timeouts): eg it's ok if a client is not reading for 10 seconds and we are only holding 5KB of messages for them but it is not ok if they are inactive for 5 seconds and we have 30MB of messages held.
Closes #2999
Closes #2539
Low-info issue that should be re-reproduced:
Closes #3084 (OP uses an IPC script)","With the queue implementation from i3's side authors can just follow the intuitive approach when writing their applications, without caring for edge cases, high load etc. Since we frequently ask users to implement their own feature request using the IPC interface, many of them are not necessarily experienced programmers and won't like the extra work that they'll have to put into their script.
It is an ""environmentally friendly"" solution too, since the queue code will need to be written only from i3's side once, instead of being implemented on all ipc clients.

I think we shouldn’t dictate the policy by always queueing, but rather authors should decide what makes the most sense for the program they’re writing.

We aren't dictating anything, we just make the queue policy easier to implement:




queue
kill clients




client wants: queue policy
Handled by i3
Needs to be implemented by the client, client killed if not fast enough


client wants: discard policy
Needs to be implemented by the client, events queued by i3 if not fast enough
Needs to be implemented by the client, client killed if not fast enough




Side note: it would be interesting to figure out how X11 reacts to hanging clients.

xserver seems to queue data until they can't allocate any more memory:
https://github.com/mirror/xserver/blob/1c7f34e99ff9750979a03ae20c6be1f2b42c284c/os/io.c#L809-L817
ETEST here is a macro that essentially checks for EAGAIN:
https://github.com/mirror/xserver/blob/1c7f34e99ff9750979a03ae20c6be1f2b42c284c/os/io.c#L887
Maybe they have a less passive approach somewhere for clients that stop reading for too long.",True,{}
i3/i3,https://github.com/i3/i3,3263,2018-04-23T12:59:03Z,2018-08-08T17:14:17Z,2018-08-08T20:52:59Z,MERGED,True,305,22,10,https://github.com/orestisfl, Kill misbehaving subscribed clients instead of hanging,2,[],https://github.com/i3/i3/pull/3263,https://github.com/stapelberg,18,https://github.com/i3/i3/pull/3263#issuecomment-404563627,"This change only affects clients that are subscribed to events, which should be the main cause of our problems.
In the common case (socket is immediately writeable) the behaviour doesn't change at all: the message is sent directly, no ev_io / ev_timeout callback is enabled. When a socket is found to be not writeable, instead of calling the blocking ipc_send_message we put the message in the tail of a queue and init a ev_io callback and a corresponding timer. If timer is triggered first, the socket is closed and the client connection is removed. If the socket becomes writeable before the timeout we either reset the timer if we couldn't push all stored messages or completely remove it if everything was pushed.
A simpler alternative is to immediately remove clients with non-writeable sockets (using the same socket_writeable() function):
https://github.com/orestisf1993/i3/tree/misbehaving-ipc-2999
The benefit of the queue + libev method is that we can allow timeouts that are orders of magnitude larger without blocking i3 temporarily.
Also, after reading through polybar/polybar#435: the approach here can help prevent deadlocks without killing an IPC connection (even though it relies on a timer but still).
We can still theoretically hang if the client stops reading while ipc_send_message() is writing the message. This is not a huge problem in practice but we could avoid it by using a simple non-blocking write() loop instead of writeall(). On EAGAIN we can return the amount of bytes written and save it in the pending_message_t struct. Then, when the socket is writeable again, we can continue writing from where we stopped.
We could also replace ipc_send_message() for all client connections in i3, not just those subscribed to events.
We can also limit the amount of messages stored and increase the timeout (or use multiple timeouts): eg it's ok if a client is not reading for 10 seconds and we are only holding 5KB of messages for them but it is not ok if they are inactive for 5 seconds and we have 30MB of messages held.
Closes #2999
Closes #2539
Low-info issue that should be re-reproduced:
Closes #3084 (OP uses an IPC script)","Thanks, you’re making a couple of good points.
I’m willing to give queueing a try, but I have two more notes:


I have only skimmed the current pull request’s changes, but it seems like you’re queueing individual messages. Could we instead just operate on a byte stream, which would hopefully result in a simpler implementation?


I’d like to make sure that users have good visibility into i3’s queues. I would propose an IPC command to obtain the current IPC connections and their respective queue states (similar to the recvq and sendq fields in netstat, for example). Also, we should probably log detailed errors when reaching a high water mark, so that users have an easy time pinpointing which IPC connection is causing trouble.",True,{}
i3/i3,https://github.com/i3/i3,3263,2018-04-23T12:59:03Z,2018-08-08T17:14:17Z,2018-08-08T20:52:59Z,MERGED,True,305,22,10,https://github.com/orestisfl, Kill misbehaving subscribed clients instead of hanging,2,[],https://github.com/i3/i3/pull/3263,https://github.com/orestisfl,19,https://github.com/i3/i3/pull/3263#issuecomment-404801786,"This change only affects clients that are subscribed to events, which should be the main cause of our problems.
In the common case (socket is immediately writeable) the behaviour doesn't change at all: the message is sent directly, no ev_io / ev_timeout callback is enabled. When a socket is found to be not writeable, instead of calling the blocking ipc_send_message we put the message in the tail of a queue and init a ev_io callback and a corresponding timer. If timer is triggered first, the socket is closed and the client connection is removed. If the socket becomes writeable before the timeout we either reset the timer if we couldn't push all stored messages or completely remove it if everything was pushed.
A simpler alternative is to immediately remove clients with non-writeable sockets (using the same socket_writeable() function):
https://github.com/orestisf1993/i3/tree/misbehaving-ipc-2999
The benefit of the queue + libev method is that we can allow timeouts that are orders of magnitude larger without blocking i3 temporarily.
Also, after reading through polybar/polybar#435: the approach here can help prevent deadlocks without killing an IPC connection (even though it relies on a timer but still).
We can still theoretically hang if the client stops reading while ipc_send_message() is writing the message. This is not a huge problem in practice but we could avoid it by using a simple non-blocking write() loop instead of writeall(). On EAGAIN we can return the amount of bytes written and save it in the pending_message_t struct. Then, when the socket is writeable again, we can continue writing from where we stopped.
We could also replace ipc_send_message() for all client connections in i3, not just those subscribed to events.
We can also limit the amount of messages stored and increase the timeout (or use multiple timeouts): eg it's ok if a client is not reading for 10 seconds and we are only holding 5KB of messages for them but it is not ok if they are inactive for 5 seconds and we have 30MB of messages held.
Closes #2999
Closes #2539
Low-info issue that should be re-reproduced:
Closes #3084 (OP uses an IPC script)","Yes, this approach is simpler. I've made the changes, seems to work but might need some polishing.",True,{}
i3/i3,https://github.com/i3/i3,3263,2018-04-23T12:59:03Z,2018-08-08T17:14:17Z,2018-08-08T20:52:59Z,MERGED,True,305,22,10,https://github.com/orestisfl, Kill misbehaving subscribed clients instead of hanging,2,[],https://github.com/i3/i3/pull/3263,https://github.com/orestisfl,20,https://github.com/i3/i3/pull/3263#issuecomment-408917607,"This change only affects clients that are subscribed to events, which should be the main cause of our problems.
In the common case (socket is immediately writeable) the behaviour doesn't change at all: the message is sent directly, no ev_io / ev_timeout callback is enabled. When a socket is found to be not writeable, instead of calling the blocking ipc_send_message we put the message in the tail of a queue and init a ev_io callback and a corresponding timer. If timer is triggered first, the socket is closed and the client connection is removed. If the socket becomes writeable before the timeout we either reset the timer if we couldn't push all stored messages or completely remove it if everything was pushed.
A simpler alternative is to immediately remove clients with non-writeable sockets (using the same socket_writeable() function):
https://github.com/orestisf1993/i3/tree/misbehaving-ipc-2999
The benefit of the queue + libev method is that we can allow timeouts that are orders of magnitude larger without blocking i3 temporarily.
Also, after reading through polybar/polybar#435: the approach here can help prevent deadlocks without killing an IPC connection (even though it relies on a timer but still).
We can still theoretically hang if the client stops reading while ipc_send_message() is writing the message. This is not a huge problem in practice but we could avoid it by using a simple non-blocking write() loop instead of writeall(). On EAGAIN we can return the amount of bytes written and save it in the pending_message_t struct. Then, when the socket is writeable again, we can continue writing from where we stopped.
We could also replace ipc_send_message() for all client connections in i3, not just those subscribed to events.
We can also limit the amount of messages stored and increase the timeout (or use multiple timeouts): eg it's ok if a client is not reading for 10 seconds and we are only holding 5KB of messages for them but it is not ok if they are inactive for 5 seconds and we have 30MB of messages held.
Closes #2999
Closes #2539
Low-info issue that should be re-reproduced:
Closes #3084 (OP uses an IPC script)",up,True,{}
i3/i3,https://github.com/i3/i3,3263,2018-04-23T12:59:03Z,2018-08-08T17:14:17Z,2018-08-08T20:52:59Z,MERGED,True,305,22,10,https://github.com/orestisfl, Kill misbehaving subscribed clients instead of hanging,2,[],https://github.com/i3/i3/pull/3263,https://github.com/orestisfl,21,https://github.com/i3/i3/pull/3263#issuecomment-408997010,"This change only affects clients that are subscribed to events, which should be the main cause of our problems.
In the common case (socket is immediately writeable) the behaviour doesn't change at all: the message is sent directly, no ev_io / ev_timeout callback is enabled. When a socket is found to be not writeable, instead of calling the blocking ipc_send_message we put the message in the tail of a queue and init a ev_io callback and a corresponding timer. If timer is triggered first, the socket is closed and the client connection is removed. If the socket becomes writeable before the timeout we either reset the timer if we couldn't push all stored messages or completely remove it if everything was pushed.
A simpler alternative is to immediately remove clients with non-writeable sockets (using the same socket_writeable() function):
https://github.com/orestisf1993/i3/tree/misbehaving-ipc-2999
The benefit of the queue + libev method is that we can allow timeouts that are orders of magnitude larger without blocking i3 temporarily.
Also, after reading through polybar/polybar#435: the approach here can help prevent deadlocks without killing an IPC connection (even though it relies on a timer but still).
We can still theoretically hang if the client stops reading while ipc_send_message() is writing the message. This is not a huge problem in practice but we could avoid it by using a simple non-blocking write() loop instead of writeall(). On EAGAIN we can return the amount of bytes written and save it in the pending_message_t struct. Then, when the socket is writeable again, we can continue writing from where we stopped.
We could also replace ipc_send_message() for all client connections in i3, not just those subscribed to events.
We can also limit the amount of messages stored and increase the timeout (or use multiple timeouts): eg it's ok if a client is not reading for 10 seconds and we are only holding 5KB of messages for them but it is not ok if they are inactive for 5 seconds and we have 30MB of messages held.
Closes #2999
Closes #2539
Low-info issue that should be re-reproduced:
Closes #3084 (OP uses an IPC script)",What do you have in mind for testing?,True,{}
i3/i3,https://github.com/i3/i3,3263,2018-04-23T12:59:03Z,2018-08-08T17:14:17Z,2018-08-08T20:52:59Z,MERGED,True,305,22,10,https://github.com/orestisfl, Kill misbehaving subscribed clients instead of hanging,2,[],https://github.com/i3/i3/pull/3263,https://github.com/stapelberg,22,https://github.com/i3/i3/pull/3263#issuecomment-409016811,"This change only affects clients that are subscribed to events, which should be the main cause of our problems.
In the common case (socket is immediately writeable) the behaviour doesn't change at all: the message is sent directly, no ev_io / ev_timeout callback is enabled. When a socket is found to be not writeable, instead of calling the blocking ipc_send_message we put the message in the tail of a queue and init a ev_io callback and a corresponding timer. If timer is triggered first, the socket is closed and the client connection is removed. If the socket becomes writeable before the timeout we either reset the timer if we couldn't push all stored messages or completely remove it if everything was pushed.
A simpler alternative is to immediately remove clients with non-writeable sockets (using the same socket_writeable() function):
https://github.com/orestisf1993/i3/tree/misbehaving-ipc-2999
The benefit of the queue + libev method is that we can allow timeouts that are orders of magnitude larger without blocking i3 temporarily.
Also, after reading through polybar/polybar#435: the approach here can help prevent deadlocks without killing an IPC connection (even though it relies on a timer but still).
We can still theoretically hang if the client stops reading while ipc_send_message() is writing the message. This is not a huge problem in practice but we could avoid it by using a simple non-blocking write() loop instead of writeall(). On EAGAIN we can return the amount of bytes written and save it in the pending_message_t struct. Then, when the socket is writeable again, we can continue writing from where we stopped.
We could also replace ipc_send_message() for all client connections in i3, not just those subscribed to events.
We can also limit the amount of messages stored and increase the timeout (or use multiple timeouts): eg it's ok if a client is not reading for 10 seconds and we are only holding 5KB of messages for them but it is not ok if they are inactive for 5 seconds and we have 30MB of messages held.
Closes #2999
Closes #2539
Low-info issue that should be re-reproduced:
Closes #3084 (OP uses an IPC script)","Well, a testcase which opens an IPC connection, subscribes to events, no longer reads from the connection, triggers enough events to ensure writes will block, and finally verifies that a new connection will work just fine (i.e. i3 doesn’t hang), but the existing connection was closed.
Does that make sense?",True,{}
i3/i3,https://github.com/i3/i3,3263,2018-04-23T12:59:03Z,2018-08-08T17:14:17Z,2018-08-08T20:52:59Z,MERGED,True,305,22,10,https://github.com/orestisfl, Kill misbehaving subscribed clients instead of hanging,2,[],https://github.com/i3/i3/pull/3263,https://github.com/orestisfl,23,https://github.com/i3/i3/pull/3263#issuecomment-409020942,"This change only affects clients that are subscribed to events, which should be the main cause of our problems.
In the common case (socket is immediately writeable) the behaviour doesn't change at all: the message is sent directly, no ev_io / ev_timeout callback is enabled. When a socket is found to be not writeable, instead of calling the blocking ipc_send_message we put the message in the tail of a queue and init a ev_io callback and a corresponding timer. If timer is triggered first, the socket is closed and the client connection is removed. If the socket becomes writeable before the timeout we either reset the timer if we couldn't push all stored messages or completely remove it if everything was pushed.
A simpler alternative is to immediately remove clients with non-writeable sockets (using the same socket_writeable() function):
https://github.com/orestisf1993/i3/tree/misbehaving-ipc-2999
The benefit of the queue + libev method is that we can allow timeouts that are orders of magnitude larger without blocking i3 temporarily.
Also, after reading through polybar/polybar#435: the approach here can help prevent deadlocks without killing an IPC connection (even though it relies on a timer but still).
We can still theoretically hang if the client stops reading while ipc_send_message() is writing the message. This is not a huge problem in practice but we could avoid it by using a simple non-blocking write() loop instead of writeall(). On EAGAIN we can return the amount of bytes written and save it in the pending_message_t struct. Then, when the socket is writeable again, we can continue writing from where we stopped.
We could also replace ipc_send_message() for all client connections in i3, not just those subscribed to events.
We can also limit the amount of messages stored and increase the timeout (or use multiple timeouts): eg it's ok if a client is not reading for 10 seconds and we are only holding 5KB of messages for them but it is not ok if they are inactive for 5 seconds and we have 30MB of messages held.
Closes #2999
Closes #2539
Low-info issue that should be re-reproduced:
Closes #3084 (OP uses an IPC script)",Ok. We don't want to wait the full timeout duration I assume?,True,{}
i3/i3,https://github.com/i3/i3,3263,2018-04-23T12:59:03Z,2018-08-08T17:14:17Z,2018-08-08T20:52:59Z,MERGED,True,305,22,10,https://github.com/orestisfl, Kill misbehaving subscribed clients instead of hanging,2,[],https://github.com/i3/i3/pull/3263,https://github.com/stapelberg,24,https://github.com/i3/i3/pull/3263#issuecomment-409111793,"This change only affects clients that are subscribed to events, which should be the main cause of our problems.
In the common case (socket is immediately writeable) the behaviour doesn't change at all: the message is sent directly, no ev_io / ev_timeout callback is enabled. When a socket is found to be not writeable, instead of calling the blocking ipc_send_message we put the message in the tail of a queue and init a ev_io callback and a corresponding timer. If timer is triggered first, the socket is closed and the client connection is removed. If the socket becomes writeable before the timeout we either reset the timer if we couldn't push all stored messages or completely remove it if everything was pushed.
A simpler alternative is to immediately remove clients with non-writeable sockets (using the same socket_writeable() function):
https://github.com/orestisf1993/i3/tree/misbehaving-ipc-2999
The benefit of the queue + libev method is that we can allow timeouts that are orders of magnitude larger without blocking i3 temporarily.
Also, after reading through polybar/polybar#435: the approach here can help prevent deadlocks without killing an IPC connection (even though it relies on a timer but still).
We can still theoretically hang if the client stops reading while ipc_send_message() is writing the message. This is not a huge problem in practice but we could avoid it by using a simple non-blocking write() loop instead of writeall(). On EAGAIN we can return the amount of bytes written and save it in the pending_message_t struct. Then, when the socket is writeable again, we can continue writing from where we stopped.
We could also replace ipc_send_message() for all client connections in i3, not just those subscribed to events.
We can also limit the amount of messages stored and increase the timeout (or use multiple timeouts): eg it's ok if a client is not reading for 10 seconds and we are only holding 5KB of messages for them but it is not ok if they are inactive for 5 seconds and we have 30MB of messages held.
Closes #2999
Closes #2539
Low-info issue that should be re-reproduced:
Closes #3084 (OP uses an IPC script)",It would be good to speed up the test indeed. I suppose we could change kill_timeout via an undocumented config option?,True,{}
i3/i3,https://github.com/i3/i3,3263,2018-04-23T12:59:03Z,2018-08-08T17:14:17Z,2018-08-08T20:52:59Z,MERGED,True,305,22,10,https://github.com/orestisfl, Kill misbehaving subscribed clients instead of hanging,2,[],https://github.com/i3/i3/pull/3263,https://github.com/orestisfl,25,https://github.com/i3/i3/pull/3263#issuecomment-409304179,"This change only affects clients that are subscribed to events, which should be the main cause of our problems.
In the common case (socket is immediately writeable) the behaviour doesn't change at all: the message is sent directly, no ev_io / ev_timeout callback is enabled. When a socket is found to be not writeable, instead of calling the blocking ipc_send_message we put the message in the tail of a queue and init a ev_io callback and a corresponding timer. If timer is triggered first, the socket is closed and the client connection is removed. If the socket becomes writeable before the timeout we either reset the timer if we couldn't push all stored messages or completely remove it if everything was pushed.
A simpler alternative is to immediately remove clients with non-writeable sockets (using the same socket_writeable() function):
https://github.com/orestisf1993/i3/tree/misbehaving-ipc-2999
The benefit of the queue + libev method is that we can allow timeouts that are orders of magnitude larger without blocking i3 temporarily.
Also, after reading through polybar/polybar#435: the approach here can help prevent deadlocks without killing an IPC connection (even though it relies on a timer but still).
We can still theoretically hang if the client stops reading while ipc_send_message() is writing the message. This is not a huge problem in practice but we could avoid it by using a simple non-blocking write() loop instead of writeall(). On EAGAIN we can return the amount of bytes written and save it in the pending_message_t struct. Then, when the socket is writeable again, we can continue writing from where we stopped.
We could also replace ipc_send_message() for all client connections in i3, not just those subscribed to events.
We can also limit the amount of messages stored and increase the timeout (or use multiple timeouts): eg it's ok if a client is not reading for 10 seconds and we are only holding 5KB of messages for them but it is not ok if they are inactive for 5 seconds and we have 30MB of messages held.
Closes #2999
Closes #2539
Low-info issue that should be re-reproduced:
Closes #3084 (OP uses an IPC script)",How should we detect the closed connection from the test? read until we get -1 as a return value?,True,{}
i3/i3,https://github.com/i3/i3,3263,2018-04-23T12:59:03Z,2018-08-08T17:14:17Z,2018-08-08T20:52:59Z,MERGED,True,305,22,10,https://github.com/orestisfl, Kill misbehaving subscribed clients instead of hanging,2,[],https://github.com/i3/i3/pull/3263,https://github.com/stapelberg,26,https://github.com/i3/i3/pull/3263#issuecomment-409344595,"This change only affects clients that are subscribed to events, which should be the main cause of our problems.
In the common case (socket is immediately writeable) the behaviour doesn't change at all: the message is sent directly, no ev_io / ev_timeout callback is enabled. When a socket is found to be not writeable, instead of calling the blocking ipc_send_message we put the message in the tail of a queue and init a ev_io callback and a corresponding timer. If timer is triggered first, the socket is closed and the client connection is removed. If the socket becomes writeable before the timeout we either reset the timer if we couldn't push all stored messages or completely remove it if everything was pushed.
A simpler alternative is to immediately remove clients with non-writeable sockets (using the same socket_writeable() function):
https://github.com/orestisf1993/i3/tree/misbehaving-ipc-2999
The benefit of the queue + libev method is that we can allow timeouts that are orders of magnitude larger without blocking i3 temporarily.
Also, after reading through polybar/polybar#435: the approach here can help prevent deadlocks without killing an IPC connection (even though it relies on a timer but still).
We can still theoretically hang if the client stops reading while ipc_send_message() is writing the message. This is not a huge problem in practice but we could avoid it by using a simple non-blocking write() loop instead of writeall(). On EAGAIN we can return the amount of bytes written and save it in the pending_message_t struct. Then, when the socket is writeable again, we can continue writing from where we stopped.
We could also replace ipc_send_message() for all client connections in i3, not just those subscribed to events.
We can also limit the amount of messages stored and increase the timeout (or use multiple timeouts): eg it's ok if a client is not reading for 10 seconds and we are only holding 5KB of messages for them but it is not ok if they are inactive for 5 seconds and we have 30MB of messages held.
Closes #2999
Closes #2539
Low-info issue that should be re-reproduced:
Closes #3084 (OP uses an IPC script)","How should we detect the closed connection from the test? read until we get -1 as a return value?

Yes, that seems like the correct approach to me.",True,{}
i3/i3,https://github.com/i3/i3,3263,2018-04-23T12:59:03Z,2018-08-08T17:14:17Z,2018-08-08T20:52:59Z,MERGED,True,305,22,10,https://github.com/orestisfl, Kill misbehaving subscribed clients instead of hanging,2,[],https://github.com/i3/i3/pull/3263,https://github.com/orestisfl,27,https://github.com/i3/i3/pull/3263#issuecomment-409507959,"This change only affects clients that are subscribed to events, which should be the main cause of our problems.
In the common case (socket is immediately writeable) the behaviour doesn't change at all: the message is sent directly, no ev_io / ev_timeout callback is enabled. When a socket is found to be not writeable, instead of calling the blocking ipc_send_message we put the message in the tail of a queue and init a ev_io callback and a corresponding timer. If timer is triggered first, the socket is closed and the client connection is removed. If the socket becomes writeable before the timeout we either reset the timer if we couldn't push all stored messages or completely remove it if everything was pushed.
A simpler alternative is to immediately remove clients with non-writeable sockets (using the same socket_writeable() function):
https://github.com/orestisf1993/i3/tree/misbehaving-ipc-2999
The benefit of the queue + libev method is that we can allow timeouts that are orders of magnitude larger without blocking i3 temporarily.
Also, after reading through polybar/polybar#435: the approach here can help prevent deadlocks without killing an IPC connection (even though it relies on a timer but still).
We can still theoretically hang if the client stops reading while ipc_send_message() is writing the message. This is not a huge problem in practice but we could avoid it by using a simple non-blocking write() loop instead of writeall(). On EAGAIN we can return the amount of bytes written and save it in the pending_message_t struct. Then, when the socket is writeable again, we can continue writing from where we stopped.
We could also replace ipc_send_message() for all client connections in i3, not just those subscribed to events.
We can also limit the amount of messages stored and increase the timeout (or use multiple timeouts): eg it's ok if a client is not reading for 10 seconds and we are only holding 5KB of messages for them but it is not ok if they are inactive for 5 seconds and we have 30MB of messages held.
Closes #2999
Closes #2539
Low-info issue that should be re-reproduced:
Closes #3084 (OP uses an IPC script)","No error actually, just 0 returned on EOF, otherwise it would block.
I added the config directive. Should we find a way to hide it in the help message? Maybe ignore those that start with _?
ERROR: CONFIG: Expected one of these tokens: <end>, '#', 'set ', 'set	', 'set_from_resource', 'bindsym', 'bindcode', 'bind', 'bar', 'font', 'mode', 'floating_minimum_size', 'floating_maximum_size', 'floating_modifier', 'default_orientation', 'workspace_layout', 'default_border', 'new_window', 'default_floating_border', 'new_float', 'hide_edge_borders', 'for_window', 'assign', 'no_focus', 'focus_follows_mouse', 'mouse_warping', 'focus_wrapping', 'force_focus_wrapping', 'force_xinerama', 'force-xinerama', 'disable_randr15', 'disable-randr15', 'workspace_auto_back_and_forth', 'fake_outputs', 'fake-outputs', 'force_display_urgency_hint', 'focus_on_window_activation', 'show_marks', 'workspace', 'ipc_socket', 'ipc-socket', 'ipc_connection_timeout', 'restart_state', 'popup_during_fullscreen', 'exec_always', 'exec', 'client.background', 'client.focused_inactive', 'client.focused', 'client.unfocused', 'client.urgent', 'client.placeholder'",True,{}
i3/i3,https://github.com/i3/i3,3263,2018-04-23T12:59:03Z,2018-08-08T17:14:17Z,2018-08-08T20:52:59Z,MERGED,True,305,22,10,https://github.com/orestisfl, Kill misbehaving subscribed clients instead of hanging,2,[],https://github.com/i3/i3/pull/3263,https://github.com/orestisfl,28,https://github.com/i3/i3/pull/3263#issuecomment-409514072,"This change only affects clients that are subscribed to events, which should be the main cause of our problems.
In the common case (socket is immediately writeable) the behaviour doesn't change at all: the message is sent directly, no ev_io / ev_timeout callback is enabled. When a socket is found to be not writeable, instead of calling the blocking ipc_send_message we put the message in the tail of a queue and init a ev_io callback and a corresponding timer. If timer is triggered first, the socket is closed and the client connection is removed. If the socket becomes writeable before the timeout we either reset the timer if we couldn't push all stored messages or completely remove it if everything was pushed.
A simpler alternative is to immediately remove clients with non-writeable sockets (using the same socket_writeable() function):
https://github.com/orestisf1993/i3/tree/misbehaving-ipc-2999
The benefit of the queue + libev method is that we can allow timeouts that are orders of magnitude larger without blocking i3 temporarily.
Also, after reading through polybar/polybar#435: the approach here can help prevent deadlocks without killing an IPC connection (even though it relies on a timer but still).
We can still theoretically hang if the client stops reading while ipc_send_message() is writing the message. This is not a huge problem in practice but we could avoid it by using a simple non-blocking write() loop instead of writeall(). On EAGAIN we can return the amount of bytes written and save it in the pending_message_t struct. Then, when the socket is writeable again, we can continue writing from where we stopped.
We could also replace ipc_send_message() for all client connections in i3, not just those subscribed to events.
We can also limit the amount of messages stored and increase the timeout (or use multiple timeouts): eg it's ok if a client is not reading for 10 seconds and we are only holding 5KB of messages for them but it is not ok if they are inactive for 5 seconds and we have 30MB of messages held.
Closes #2999
Closes #2539
Low-info issue that should be re-reproduced:
Closes #3084 (OP uses an IPC script)",We should probably also update the documentation.,True,{}
i3/i3,https://github.com/i3/i3,3263,2018-04-23T12:59:03Z,2018-08-08T17:14:17Z,2018-08-08T20:52:59Z,MERGED,True,305,22,10,https://github.com/orestisfl, Kill misbehaving subscribed clients instead of hanging,2,[],https://github.com/i3/i3/pull/3263,https://github.com/stapelberg,29,https://github.com/i3/i3/pull/3263#issuecomment-409624538,"This change only affects clients that are subscribed to events, which should be the main cause of our problems.
In the common case (socket is immediately writeable) the behaviour doesn't change at all: the message is sent directly, no ev_io / ev_timeout callback is enabled. When a socket is found to be not writeable, instead of calling the blocking ipc_send_message we put the message in the tail of a queue and init a ev_io callback and a corresponding timer. If timer is triggered first, the socket is closed and the client connection is removed. If the socket becomes writeable before the timeout we either reset the timer if we couldn't push all stored messages or completely remove it if everything was pushed.
A simpler alternative is to immediately remove clients with non-writeable sockets (using the same socket_writeable() function):
https://github.com/orestisf1993/i3/tree/misbehaving-ipc-2999
The benefit of the queue + libev method is that we can allow timeouts that are orders of magnitude larger without blocking i3 temporarily.
Also, after reading through polybar/polybar#435: the approach here can help prevent deadlocks without killing an IPC connection (even though it relies on a timer but still).
We can still theoretically hang if the client stops reading while ipc_send_message() is writing the message. This is not a huge problem in practice but we could avoid it by using a simple non-blocking write() loop instead of writeall(). On EAGAIN we can return the amount of bytes written and save it in the pending_message_t struct. Then, when the socket is writeable again, we can continue writing from where we stopped.
We could also replace ipc_send_message() for all client connections in i3, not just those subscribed to events.
We can also limit the amount of messages stored and increase the timeout (or use multiple timeouts): eg it's ok if a client is not reading for 10 seconds and we are only holding 5KB of messages for them but it is not ok if they are inactive for 5 seconds and we have 30MB of messages held.
Closes #2999
Closes #2539
Low-info issue that should be re-reproduced:
Closes #3084 (OP uses an IPC script)","Let’s just expose it in the error message, and not make it start with a _. That way, we can bless it as supported if the need arises, without having to support two forms.",True,{}
i3/i3,https://github.com/i3/i3,3263,2018-04-23T12:59:03Z,2018-08-08T17:14:17Z,2018-08-08T20:52:59Z,MERGED,True,305,22,10,https://github.com/orestisfl, Kill misbehaving subscribed clients instead of hanging,2,[],https://github.com/i3/i3/pull/3263,https://github.com/orestisfl,30,https://github.com/i3/i3/pull/3263#issuecomment-409643854,"This change only affects clients that are subscribed to events, which should be the main cause of our problems.
In the common case (socket is immediately writeable) the behaviour doesn't change at all: the message is sent directly, no ev_io / ev_timeout callback is enabled. When a socket is found to be not writeable, instead of calling the blocking ipc_send_message we put the message in the tail of a queue and init a ev_io callback and a corresponding timer. If timer is triggered first, the socket is closed and the client connection is removed. If the socket becomes writeable before the timeout we either reset the timer if we couldn't push all stored messages or completely remove it if everything was pushed.
A simpler alternative is to immediately remove clients with non-writeable sockets (using the same socket_writeable() function):
https://github.com/orestisf1993/i3/tree/misbehaving-ipc-2999
The benefit of the queue + libev method is that we can allow timeouts that are orders of magnitude larger without blocking i3 temporarily.
Also, after reading through polybar/polybar#435: the approach here can help prevent deadlocks without killing an IPC connection (even though it relies on a timer but still).
We can still theoretically hang if the client stops reading while ipc_send_message() is writing the message. This is not a huge problem in practice but we could avoid it by using a simple non-blocking write() loop instead of writeall(). On EAGAIN we can return the amount of bytes written and save it in the pending_message_t struct. Then, when the socket is writeable again, we can continue writing from where we stopped.
We could also replace ipc_send_message() for all client connections in i3, not just those subscribed to events.
We can also limit the amount of messages stored and increase the timeout (or use multiple timeouts): eg it's ok if a client is not reading for 10 seconds and we are only holding 5KB of messages for them but it is not ok if they are inactive for 5 seconds and we have 30MB of messages held.
Closes #2999
Closes #2539
Low-info issue that should be re-reproduced:
Closes #3084 (OP uses an IPC script)","Ok, waiting for your review.
Do you think we should add the queue information in the documentation? The current page doesn't include lots of implementation details.",True,{}
i3/i3,https://github.com/i3/i3,3263,2018-04-23T12:59:03Z,2018-08-08T17:14:17Z,2018-08-08T20:52:59Z,MERGED,True,305,22,10,https://github.com/orestisfl, Kill misbehaving subscribed clients instead of hanging,2,[],https://github.com/i3/i3/pull/3263,https://github.com/orestisfl,31,https://github.com/i3/i3/pull/3263#issuecomment-411465654,"This change only affects clients that are subscribed to events, which should be the main cause of our problems.
In the common case (socket is immediately writeable) the behaviour doesn't change at all: the message is sent directly, no ev_io / ev_timeout callback is enabled. When a socket is found to be not writeable, instead of calling the blocking ipc_send_message we put the message in the tail of a queue and init a ev_io callback and a corresponding timer. If timer is triggered first, the socket is closed and the client connection is removed. If the socket becomes writeable before the timeout we either reset the timer if we couldn't push all stored messages or completely remove it if everything was pushed.
A simpler alternative is to immediately remove clients with non-writeable sockets (using the same socket_writeable() function):
https://github.com/orestisf1993/i3/tree/misbehaving-ipc-2999
The benefit of the queue + libev method is that we can allow timeouts that are orders of magnitude larger without blocking i3 temporarily.
Also, after reading through polybar/polybar#435: the approach here can help prevent deadlocks without killing an IPC connection (even though it relies on a timer but still).
We can still theoretically hang if the client stops reading while ipc_send_message() is writing the message. This is not a huge problem in practice but we could avoid it by using a simple non-blocking write() loop instead of writeall(). On EAGAIN we can return the amount of bytes written and save it in the pending_message_t struct. Then, when the socket is writeable again, we can continue writing from where we stopped.
We could also replace ipc_send_message() for all client connections in i3, not just those subscribed to events.
We can also limit the amount of messages stored and increase the timeout (or use multiple timeouts): eg it's ok if a client is not reading for 10 seconds and we are only holding 5KB of messages for them but it is not ok if they are inactive for 5 seconds and we have 30MB of messages held.
Closes #2999
Closes #2539
Low-info issue that should be re-reproduced:
Closes #3084 (OP uses an IPC script)",up,True,{}
i3/i3,https://github.com/i3/i3,3263,2018-04-23T12:59:03Z,2018-08-08T17:14:17Z,2018-08-08T20:52:59Z,MERGED,True,305,22,10,https://github.com/orestisfl, Kill misbehaving subscribed clients instead of hanging,2,[],https://github.com/i3/i3/pull/3263,https://github.com/stapelberg,32,https://github.com/i3/i3/pull/3263#issuecomment-411482859,"This change only affects clients that are subscribed to events, which should be the main cause of our problems.
In the common case (socket is immediately writeable) the behaviour doesn't change at all: the message is sent directly, no ev_io / ev_timeout callback is enabled. When a socket is found to be not writeable, instead of calling the blocking ipc_send_message we put the message in the tail of a queue and init a ev_io callback and a corresponding timer. If timer is triggered first, the socket is closed and the client connection is removed. If the socket becomes writeable before the timeout we either reset the timer if we couldn't push all stored messages or completely remove it if everything was pushed.
A simpler alternative is to immediately remove clients with non-writeable sockets (using the same socket_writeable() function):
https://github.com/orestisf1993/i3/tree/misbehaving-ipc-2999
The benefit of the queue + libev method is that we can allow timeouts that are orders of magnitude larger without blocking i3 temporarily.
Also, after reading through polybar/polybar#435: the approach here can help prevent deadlocks without killing an IPC connection (even though it relies on a timer but still).
We can still theoretically hang if the client stops reading while ipc_send_message() is writing the message. This is not a huge problem in practice but we could avoid it by using a simple non-blocking write() loop instead of writeall(). On EAGAIN we can return the amount of bytes written and save it in the pending_message_t struct. Then, when the socket is writeable again, we can continue writing from where we stopped.
We could also replace ipc_send_message() for all client connections in i3, not just those subscribed to events.
We can also limit the amount of messages stored and increase the timeout (or use multiple timeouts): eg it's ok if a client is not reading for 10 seconds and we are only holding 5KB of messages for them but it is not ok if they are inactive for 5 seconds and we have 30MB of messages held.
Closes #2999
Closes #2539
Low-info issue that should be re-reproduced:
Closes #3084 (OP uses an IPC script)","Cool, let’s give this a shot! Thanks for your work on this!",True,{}
i3/i3,https://github.com/i3/i3,3263,2018-04-23T12:59:03Z,2018-08-08T17:14:17Z,2018-08-08T20:52:59Z,MERGED,True,305,22,10,https://github.com/orestisfl, Kill misbehaving subscribed clients instead of hanging,2,[],https://github.com/i3/i3/pull/3263,https://github.com/orestisfl,33,https://github.com/i3/i3/pull/3263#issuecomment-411525662,"This change only affects clients that are subscribed to events, which should be the main cause of our problems.
In the common case (socket is immediately writeable) the behaviour doesn't change at all: the message is sent directly, no ev_io / ev_timeout callback is enabled. When a socket is found to be not writeable, instead of calling the blocking ipc_send_message we put the message in the tail of a queue and init a ev_io callback and a corresponding timer. If timer is triggered first, the socket is closed and the client connection is removed. If the socket becomes writeable before the timeout we either reset the timer if we couldn't push all stored messages or completely remove it if everything was pushed.
A simpler alternative is to immediately remove clients with non-writeable sockets (using the same socket_writeable() function):
https://github.com/orestisf1993/i3/tree/misbehaving-ipc-2999
The benefit of the queue + libev method is that we can allow timeouts that are orders of magnitude larger without blocking i3 temporarily.
Also, after reading through polybar/polybar#435: the approach here can help prevent deadlocks without killing an IPC connection (even though it relies on a timer but still).
We can still theoretically hang if the client stops reading while ipc_send_message() is writing the message. This is not a huge problem in practice but we could avoid it by using a simple non-blocking write() loop instead of writeall(). On EAGAIN we can return the amount of bytes written and save it in the pending_message_t struct. Then, when the socket is writeable again, we can continue writing from where we stopped.
We could also replace ipc_send_message() for all client connections in i3, not just those subscribed to events.
We can also limit the amount of messages stored and increase the timeout (or use multiple timeouts): eg it's ok if a client is not reading for 10 seconds and we are only holding 5KB of messages for them but it is not ok if they are inactive for 5 seconds and we have 30MB of messages held.
Closes #2999
Closes #2539
Low-info issue that should be re-reproduced:
Closes #3084 (OP uses an IPC script)","Thanks for your review too!
…
On Wed, Aug 8, 2018, 20:14 Michael Stapelberg ***@***.***> wrote:
 Cool, let’s give this a shot! Thanks for your work on this!

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#3263 (comment)>, or mute the
 thread
 <https://github.com/notifications/unsubscribe-auth/AFgsvkKoZWBJFeoUOPi5lVMJXSzQCEG6ks5uOxx2gaJpZM4Tf2GW>
 .",True,{}
i3/i3,https://github.com/i3/i3,3267,2018-04-26T20:49:47Z,2018-04-27T06:38:29Z,2018-04-27T09:15:28Z,MERGED,True,6,5,1,https://github.com/orestisfl,cmd_shmlog: use parse_long(),1,[],https://github.com/i3/i3/pull/3267,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3267,,,True,{}
i3/i3,https://github.com/i3/i3,3268,2018-04-27T09:08:58Z,2018-04-27T09:14:45Z,2018-04-27T09:15:57Z,MERGED,True,3,19,8,https://github.com/orestisfl,Janitorial,3,[],https://github.com/i3/i3/pull/3268,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3268,,,True,{}
i3/i3,https://github.com/i3/i3,3270,2018-04-28T08:43:41Z,2018-04-30T08:02:35Z,2018-04-30T09:23:30Z,MERGED,True,14,24,1,https://github.com/orestisfl,Define ADD_TRANSLATED_KEY once,1,[],https://github.com/i3/i3/pull/3270,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3270,,,True,{}
i3/i3,https://github.com/i3/i3,3271,2018-04-28T12:33:40Z,2018-04-28T12:47:29Z,2018-07-12T00:53:55Z,MERGED,True,3,0,1,https://github.com/orestisfl,"send_tick: set ""first"" field",1,[],https://github.com/i3/i3/pull/3271,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3271,,,True,{}
i3/i3,https://github.com/i3/i3,3272,2018-04-30T01:01:59Z,2018-05-04T19:58:02Z,2018-07-12T00:53:06Z,MERGED,True,2,1,1,https://github.com/orestisfl,Fix: ConfigureNotify can crash i3 with fake-outputs,1,[],https://github.com/i3/i3/pull/3272,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3272,"I am not sure if this is worth investigating more. Whenever I launch thunar, gvim, geany (probably more) with fake-outputs, i3 crashes. I just noticed this today randomly while it has never happened before and it still doesn't happen on my laptop. It happens with older versions of i3 too.","I am not sure if this is worth investigating more. Whenever I launch thunar, gvim, geany (probably more) with fake-outputs, i3 crashes. I just noticed this today randomly while it has never happened before and it still doesn't happen on my laptop. It happens with older versions of i3 too.",True,{}
i3/i3,https://github.com/i3/i3,3274,2018-05-01T10:56:03Z,2018-05-01T17:13:09Z,2018-08-22T23:47:53Z,MERGED,True,23,23,1,https://github.com/orestisfl,Fix DEPENDS table,1,[],https://github.com/i3/i3/pull/3274,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3274,,,True,{}
i3/i3,https://github.com/i3/i3,3277,2018-05-02T16:01:51Z,2018-05-04T19:57:13Z,2018-07-12T00:53:01Z,MERGED,True,96,51,5,https://github.com/orestisfl,Resize set improvements,3,[],https://github.com/i3/i3/pull/3277,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3277,"Fixes #3275
Fixes #3276","Fixes #3275
Fixes #3276",True,{}
i3/i3,https://github.com/i3/i3,3277,2018-05-02T16:01:51Z,2018-05-04T19:57:13Z,2018-07-12T00:53:01Z,MERGED,True,96,51,5,https://github.com/orestisfl,Resize set improvements,3,[],https://github.com/i3/i3/pull/3277,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/3277#issuecomment-386739507,"Fixes #3275
Fixes #3276",Thanks for the fix!,True,{}
i3/i3,https://github.com/i3/i3,3279,2018-05-05T10:37:12Z,2018-05-05T10:49:13Z,2018-05-05T10:49:14Z,MERGED,True,7,1,2,https://github.com/9ary,Activate the focused child when scrolling over tab/stack decorations,1,[],https://github.com/i3/i3/pull/3279,https://github.com/9ary,1,https://github.com/i3/i3/pull/3279,"fbce834 introduced a bug where scrolling over the decoration while
another container is focused would not focus the tabbed/stacked
container itself, but would instead move focus through the currently
focused container.","fbce834 introduced a bug where scrolling over the decoration while
another container is focused would not focus the tabbed/stacked
container itself, but would instead move focus through the currently
focused container.",True,{}
i3/i3,https://github.com/i3/i3,3282,2018-05-08T14:07:04Z,2018-05-09T12:34:01Z,2018-07-13T10:57:14Z,MERGED,True,2,2,2,https://github.com/orestisfl,Replace strncpy call with memcpy when result is not NUL-terminated,1,[],https://github.com/i3/i3/pull/3282,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3282,,,True,{}
i3/i3,https://github.com/i3/i3,3282,2018-05-08T14:07:04Z,2018-05-09T12:34:01Z,2018-07-13T10:57:14Z,MERGED,True,2,2,2,https://github.com/orestisfl,Replace strncpy call with memcpy when result is not NUL-terminated,1,[],https://github.com/i3/i3/pull/3282,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3282#issuecomment-387415966,,Is this a new thing?,True,{}
i3/i3,https://github.com/i3/i3,3282,2018-05-08T14:07:04Z,2018-05-09T12:34:01Z,2018-07-13T10:57:14Z,MERGED,True,2,2,2,https://github.com/orestisfl,Replace strncpy call with memcpy when result is not NUL-terminated,1,[],https://github.com/i3/i3/pull/3282,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3282#issuecomment-387723550,,"Yeah, it is. :-)",True,{}
i3/i3,https://github.com/i3/i3,3295,2018-05-20T09:41:29Z,2018-05-20T14:51:27Z,2022-02-07T16:52:49Z,MERGED,True,62,18,1,https://github.com/Airblader,Updated ISSUE_TEMPLATE.md,1,[],https://github.com/i3/i3/pull/3295,https://github.com/Airblader,1,https://github.com/i3/i3/pull/3295,"Same as in i3lock, I've updated the issue template as inspired by angular/angular.","Same as in i3lock, I've updated the issue template as inspired by angular/angular.",True,{}
i3/i3,https://github.com/i3/i3,3295,2018-05-20T09:41:29Z,2018-05-20T14:51:27Z,2022-02-07T16:52:49Z,MERGED,True,62,18,1,https://github.com/Airblader,Updated ISSUE_TEMPLATE.md,1,[],https://github.com/i3/i3/pull/3295,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3295#issuecomment-390469728,"Same as in i3lock, I've updated the issue template as inspired by angular/angular.","LGTM
I assume we need a separate repo to see how it looks?",True,{}
i3/i3,https://github.com/i3/i3,3295,2018-05-20T09:41:29Z,2018-05-20T14:51:27Z,2022-02-07T16:52:49Z,MERGED,True,62,18,1,https://github.com/Airblader,Updated ISSUE_TEMPLATE.md,1,[],https://github.com/i3/i3/pull/3295,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3295#issuecomment-390469892,"Same as in i3lock, I've updated the issue template as inspired by angular/angular.","To see it in action, yes. But I think we can just go ahead and merge it to look at it (and fix then, if necessary). It doesn't affect anything else anyway.",True,{}
i3/i3,https://github.com/i3/i3,3295,2018-05-20T09:41:29Z,2018-05-20T14:51:27Z,2022-02-07T16:52:49Z,MERGED,True,62,18,1,https://github.com/Airblader,Updated ISSUE_TEMPLATE.md,1,[],https://github.com/i3/i3/pull/3295,https://github.com/Airblader,4,https://github.com/i3/i3/pull/3295#issuecomment-390472589,"Same as in i3lock, I've updated the issue template as inspired by angular/angular.",I've also softened the phrasing for reducing the config to the default one and made that just an optional step to help out. I think just providing the config is the most important part.,True,{}
i3/i3,https://github.com/i3/i3,3301,2018-06-01T16:03:21Z,2018-06-02T12:51:19Z,2018-06-02T12:51:27Z,MERGED,True,39,6,3,https://github.com/9ary,Reframe swallowed windows if depth doesn't match,1,[],https://github.com/i3/i3/pull/3301,https://github.com/9ary,1,https://github.com/i3/i3/pull/3301,"X will not allow a window with ParentRelative background to be created or reparented under a window with mismatching color depth.
Deal with this by destroying the container frame and creating a new one with the right depth upon swallowing.
Defer destruction of the frame window until after the updated tree has been rendered to avoid some distracting flickering.
Fixes #3297","X will not allow a window with ParentRelative background to be created or reparented under a window with mismatching color depth.
Deal with this by destroying the container frame and creating a new one with the right depth upon swallowing.
Defer destruction of the frame window until after the updated tree has been rendered to avoid some distracting flickering.
Fixes #3297",True,{}
i3/i3,https://github.com/i3/i3,3301,2018-06-01T16:03:21Z,2018-06-02T12:51:19Z,2018-06-02T12:51:27Z,MERGED,True,39,6,3,https://github.com/9ary,Reframe swallowed windows if depth doesn't match,1,[],https://github.com/i3/i3/pull/3301,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3301#issuecomment-394080046,"X will not allow a window with ParentRelative background to be created or reparented under a window with mismatching color depth.
Deal with this by destroying the container frame and creating a new one with the right depth upon swallowing.
Defer destruction of the frame window until after the updated tree has been rendered to avoid some distracting flickering.
Fixes #3297","Thanks for the PR! The change makes sense to me. However, I find it odd that the reframe function returns the old frame id. What do you think about storing that reference before the call and making it a void function like the others?",True,{}
i3/i3,https://github.com/i3/i3,3301,2018-06-01T16:03:21Z,2018-06-02T12:51:19Z,2018-06-02T12:51:27Z,MERGED,True,39,6,3,https://github.com/9ary,Reframe swallowed windows if depth doesn't match,1,[],https://github.com/i3/i3/pull/3301,https://github.com/9ary,3,https://github.com/i3/i3/pull/3301#issuecomment-394080108,"X will not allow a window with ParentRelative background to be created or reparented under a window with mismatching color depth.
Deal with this by destroying the container frame and creating a new one with the right depth upon swallowing.
Defer destruction of the frame window until after the updated tree has been rendered to avoid some distracting flickering.
Fixes #3297",Sounds good to me.,True,{}
i3/i3,https://github.com/i3/i3,3301,2018-06-01T16:03:21Z,2018-06-02T12:51:19Z,2018-06-02T12:51:27Z,MERGED,True,39,6,3,https://github.com/9ary,Reframe swallowed windows if depth doesn't match,1,[],https://github.com/i3/i3/pull/3301,https://github.com/Airblader,4,https://github.com/i3/i3/pull/3301#issuecomment-394085330,"X will not allow a window with ParentRelative background to be created or reparented under a window with mismatching color depth.
Deal with this by destroying the container frame and creating a new one with the right depth upon swallowing.
Defer destruction of the frame window until after the updated tree has been rendered to avoid some distracting flickering.
Fixes #3297",Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3303,2018-06-02T15:05:12Z,2018-06-02T15:17:16Z,2018-07-12T00:53:04Z,MERGED,True,3,2,1,https://github.com/orestisfl,docs: link workspace_auto_back_and_forth from workspace command,1,[],https://github.com/i3/i3/pull/3303,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3303,,,True,{}
i3/i3,https://github.com/i3/i3,3307,2018-06-07T20:11:01Z,2018-06-07T20:52:05Z,2018-06-07T21:02:44Z,MERGED,True,1,1,1,https://github.com/orestisfl,Fix link,1,[],https://github.com/i3/i3/pull/3307,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3307,"Equivalent from the same version:
https://cgit.freedesktop.org/xorg/xserver/tree/xkb/xkbEvents.c?h=xorg-server-1.17.2#n927","Equivalent from the same version:
https://cgit.freedesktop.org/xorg/xserver/tree/xkb/xkbEvents.c?h=xorg-server-1.17.2#n927",True,{}
i3/i3,https://github.com/i3/i3,3309,2018-06-12T21:58:13Z,2018-06-20T06:38:47Z,2018-08-02T10:50:24Z,MERGED,True,22,10,1,https://github.com/orestisfl,Enable detectable autorepeat,1,[],https://github.com/i3/i3/pull/3309,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3309,Fixes #3306,Fixes #3306,True,{}
i3/i3,https://github.com/i3/i3,3309,2018-06-12T21:58:13Z,2018-06-20T06:38:47Z,2018-08-02T10:50:24Z,MERGED,True,22,10,1,https://github.com/orestisfl,Enable detectable autorepeat,1,[],https://github.com/i3/i3/pull/3309,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3309#issuecomment-397587178,Fixes #3306,"Up
@Airblader do you still have concerns from #3306?",True,{}
i3/i3,https://github.com/i3/i3,3309,2018-06-12T21:58:13Z,2018-06-20T06:38:47Z,2018-08-02T10:50:24Z,MERGED,True,22,10,1,https://github.com/orestisfl,Enable detectable autorepeat,1,[],https://github.com/i3/i3/pull/3309,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3309#issuecomment-397589960,Fixes #3306,"No, it's fine with me. I originally misunderstood the feature slightly.",True,{}
i3/i3,https://github.com/i3/i3,3310,2018-06-15T12:38:00Z,2018-06-15T12:55:50Z,2018-06-16T22:03:45Z,MERGED,True,6,0,1,https://github.com/KJoke70,Update i3-msg.man: added get_config and send_tick,1,[],https://github.com/i3/i3/pull/3310,https://github.com/KJoke70,1,https://github.com/i3/i3/pull/3310,Added get_config and send_tick which are mentioned here.,Added get_config and send_tick which are mentioned here.,True,{}
i3/i3,https://github.com/i3/i3,3310,2018-06-15T12:38:00Z,2018-06-15T12:55:50Z,2018-06-16T22:03:45Z,MERGED,True,6,0,1,https://github.com/KJoke70,Update i3-msg.man: added get_config and send_tick,1,[],https://github.com/i3/i3/pull/3310,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3310#issuecomment-397607675,Added get_config and send_tick which are mentioned here.,Thanks,True,{}
i3/i3,https://github.com/i3/i3,3313,2018-06-22T10:53:53Z,2018-06-22T11:48:16Z,2018-06-22T13:38:02Z,MERGED,True,2,5,1,https://github.com/czak,Border artifacts when moving window,1,[],https://github.com/i3/i3/pull/3313,https://github.com/czak,1,https://github.com/i3/i3/pull/3313,"Using hide_edge_borders both I noticed some visual artifacts on the borders.
How to reproduce
Given the following config:
# doesn't need to be 10, but makes the issue more visible
default_border pixel 10
hide_edge_borders both

Open 2 tiled windows
Swap the windows (or: move the right one to the left)

Result
Visual artifacts on the border between windows. The artifacts go away when focus changes and borders are redrawn. After being redrawn once, the artifacts don't reappear.

My fix
I updated the condition for has_rect_changed. Moving the window only changes its x, so previously this meant has_rect_changed == false. With the updated condition, a change in rect.x or rect.y also yields has_rect_changed == true.
Result

Notes

This is my first ever look into i3's code
I feel the solution may result in some unnecessary rendering
If this is the right location for the fix, should memcmp be used instead?
With hide_edge_borders none, the issue doesn't occur

this leads me to believe my fix is not optimal
has_rect_changed is also false with hide_edge_borders none, however it doesn't suffer from this issue","Using hide_edge_borders both I noticed some visual artifacts on the borders.
How to reproduce
Given the following config:
# doesn't need to be 10, but makes the issue more visible
default_border pixel 10
hide_edge_borders both

Open 2 tiled windows
Swap the windows (or: move the right one to the left)

Result
Visual artifacts on the border between windows. The artifacts go away when focus changes and borders are redrawn. After being redrawn once, the artifacts don't reappear.

My fix
I updated the condition for has_rect_changed. Moving the window only changes its x, so previously this meant has_rect_changed == false. With the updated condition, a change in rect.x or rect.y also yields has_rect_changed == true.
Result

Notes

This is my first ever look into i3's code
I feel the solution may result in some unnecessary rendering
If this is the right location for the fix, should memcmp be used instead?
With hide_edge_borders none, the issue doesn't occur

this leads me to believe my fix is not optimal
has_rect_changed is also false with hide_edge_borders none, however it doesn't suffer from this issue",True,{'THUMBS_UP': ['https://github.com/Airblader']}
i3/i3,https://github.com/i3/i3,3313,2018-06-22T10:53:53Z,2018-06-22T11:48:16Z,2018-06-22T13:38:02Z,MERGED,True,2,5,1,https://github.com/czak,Border artifacts when moving window,1,[],https://github.com/i3/i3/pull/3313,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3313#issuecomment-399413134,"Using hide_edge_borders both I noticed some visual artifacts on the borders.
How to reproduce
Given the following config:
# doesn't need to be 10, but makes the issue more visible
default_border pixel 10
hide_edge_borders both

Open 2 tiled windows
Swap the windows (or: move the right one to the left)

Result
Visual artifacts on the border between windows. The artifacts go away when focus changes and borders are redrawn. After being redrawn once, the artifacts don't reappear.

My fix
I updated the condition for has_rect_changed. Moving the window only changes its x, so previously this meant has_rect_changed == false. With the updated condition, a change in rect.x or rect.y also yields has_rect_changed == true.
Result

Notes

This is my first ever look into i3's code
I feel the solution may result in some unnecessary rendering
If this is the right location for the fix, should memcmp be used instead?
With hide_edge_borders none, the issue doesn't occur

this leads me to believe my fix is not optimal
has_rect_changed is also false with hide_edge_borders none, however it doesn't suffer from this issue","Hi, thanks so much for submitting a PR with detailed information along the way, I appreciate it! On first glance I do think the fix makes sense (clearly the assumption we had there so far was wrong), but I'll take a better look later on!",True,{}
i3/i3,https://github.com/i3/i3,3313,2018-06-22T10:53:53Z,2018-06-22T11:48:16Z,2018-06-22T13:38:02Z,MERGED,True,2,5,1,https://github.com/czak,Border artifacts when moving window,1,[],https://github.com/i3/i3/pull/3313,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3313#issuecomment-399415939,"Using hide_edge_borders both I noticed some visual artifacts on the borders.
How to reproduce
Given the following config:
# doesn't need to be 10, but makes the issue more visible
default_border pixel 10
hide_edge_borders both

Open 2 tiled windows
Swap the windows (or: move the right one to the left)

Result
Visual artifacts on the border between windows. The artifacts go away when focus changes and borders are redrawn. After being redrawn once, the artifacts don't reappear.

My fix
I updated the condition for has_rect_changed. Moving the window only changes its x, so previously this meant has_rect_changed == false. With the updated condition, a change in rect.x or rect.y also yields has_rect_changed == true.
Result

Notes

This is my first ever look into i3's code
I feel the solution may result in some unnecessary rendering
If this is the right location for the fix, should memcmp be used instead?
With hide_edge_borders none, the issue doesn't occur

this leads me to believe my fix is not optimal
has_rect_changed is also false with hide_edge_borders none, however it doesn't suffer from this issue",Scratch the part about later on. This change makes a lot of sense to me. I don't think it's worth to add complexity to decide in all detail considering feature flags etc. whether the rect changed. So this should be just fine. Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3313,2018-06-22T10:53:53Z,2018-06-22T11:48:16Z,2018-06-22T13:38:02Z,MERGED,True,2,5,1,https://github.com/czak,Border artifacts when moving window,1,[],https://github.com/i3/i3/pull/3313,https://github.com/czak,4,https://github.com/i3/i3/pull/3313#issuecomment-399445279,"Using hide_edge_borders both I noticed some visual artifacts on the borders.
How to reproduce
Given the following config:
# doesn't need to be 10, but makes the issue more visible
default_border pixel 10
hide_edge_borders both

Open 2 tiled windows
Swap the windows (or: move the right one to the left)

Result
Visual artifacts on the border between windows. The artifacts go away when focus changes and borders are redrawn. After being redrawn once, the artifacts don't reappear.

My fix
I updated the condition for has_rect_changed. Moving the window only changes its x, so previously this meant has_rect_changed == false. With the updated condition, a change in rect.x or rect.y also yields has_rect_changed == true.
Result

Notes

This is my first ever look into i3's code
I feel the solution may result in some unnecessary rendering
If this is the right location for the fix, should memcmp be used instead?
With hide_edge_borders none, the issue doesn't occur

this leads me to believe my fix is not optimal
has_rect_changed is also false with hide_edge_borders none, however it doesn't suffer from this issue","Cool, thanks @Airblader :)",True,{}
i3/i3,https://github.com/i3/i3,3319,2018-07-01T22:18:38Z,2018-08-04T07:23:12Z,2018-08-04T07:23:12Z,MERGED,True,4,4,1,https://github.com/Stunkymonkey,make format_placeholders case-sensitive,1,[],https://github.com/i3/i3/pull/3319,https://github.com/Stunkymonkey,1,https://github.com/i3/i3/pull/3319,make format_placeholder case-sensitive suggested in i3/i3status#285 (comment),make format_placeholder case-sensitive suggested in i3/i3status#285 (comment),True,{'THUMBS_UP': ['https://github.com/bebehei']}
i3/i3,https://github.com/i3/i3,3320,2018-07-06T09:12:09Z,2019-03-30T10:37:55Z,2019-03-30T10:38:05Z,CLOSED,False,362,0,6,https://github.com/leoagomes,Enhancement proposal for issue #3162,3,['stale'],https://github.com/i3/i3/pull/3320,https://github.com/leoagomes,1,https://github.com/i3/i3/pull/3320,"Added a variant of the scratchpad show command, scratchpad show [--hide-if-visible] [on] output <name> as a possible solution for #3162 .
From my comment on the issue:

I agree that it doesn't make much sense to assign the scratchpad (workspace) to an input, so I propose a variant of scratchpad show is added: scratchpad show [--hide-if-visible] [on] output <name>. This would behave similarly to how scratchpad show behaves: (i) running it while focusing a scratchpad window on the target output ("""") hides the window; running it without focusing a scratchpad window brings up (on the target output) either (ii) an unfocused scratchpad window on the target output's active workspace or (in case there aren't any) (iii) an unfocused scratchpad window on any of the workspaces in the target output or (iv) an unfocused scratchpad window on any (non-internal) workspace or (v) brings up the highest window on the scratchpad workspace focus stack. This would make it so running scratchpad show on output current results (I believe) in the same behavior as running scratchpad show, but a user could bind a key to show their scratchpad on a specific monitor.

and

The idea behind --hide-if-visible is that it will hide not only hide the scratchpad window if it is focused (behavior i) but also hide the scratchpad window in the active workspace of the target output.

For more of the context, please check the issue.
I tried my best to mirror the styles I saw in source files, but please let me know if anything should be done differently.","Added a variant of the scratchpad show command, scratchpad show [--hide-if-visible] [on] output <name> as a possible solution for #3162 .
From my comment on the issue:

I agree that it doesn't make much sense to assign the scratchpad (workspace) to an input, so I propose a variant of scratchpad show is added: scratchpad show [--hide-if-visible] [on] output <name>. This would behave similarly to how scratchpad show behaves: (i) running it while focusing a scratchpad window on the target output ("""") hides the window; running it without focusing a scratchpad window brings up (on the target output) either (ii) an unfocused scratchpad window on the target output's active workspace or (in case there aren't any) (iii) an unfocused scratchpad window on any of the workspaces in the target output or (iv) an unfocused scratchpad window on any (non-internal) workspace or (v) brings up the highest window on the scratchpad workspace focus stack. This would make it so running scratchpad show on output current results (I believe) in the same behavior as running scratchpad show, but a user could bind a key to show their scratchpad on a specific monitor.

and

The idea behind --hide-if-visible is that it will hide not only hide the scratchpad window if it is focused (behavior i) but also hide the scratchpad window in the active workspace of the target output.

For more of the context, please check the issue.
I tried my best to mirror the styles I saw in source files, but please let me know if anything should be done differently.",True,"{'THUMBS_UP': ['https://github.com/k1sul1', 'https://github.com/eduardogmisiuk', 'https://github.com/cvincent', 'https://github.com/D-Fox']}"
i3/i3,https://github.com/i3/i3,3320,2018-07-06T09:12:09Z,2019-03-30T10:37:55Z,2019-03-30T10:38:05Z,CLOSED,False,362,0,6,https://github.com/leoagomes,Enhancement proposal for issue #3162,3,['stale'],https://github.com/i3/i3/pull/3320,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3320#issuecomment-415837795,"Added a variant of the scratchpad show command, scratchpad show [--hide-if-visible] [on] output <name> as a possible solution for #3162 .
From my comment on the issue:

I agree that it doesn't make much sense to assign the scratchpad (workspace) to an input, so I propose a variant of scratchpad show is added: scratchpad show [--hide-if-visible] [on] output <name>. This would behave similarly to how scratchpad show behaves: (i) running it while focusing a scratchpad window on the target output ("""") hides the window; running it without focusing a scratchpad window brings up (on the target output) either (ii) an unfocused scratchpad window on the target output's active workspace or (in case there aren't any) (iii) an unfocused scratchpad window on any of the workspaces in the target output or (iv) an unfocused scratchpad window on any (non-internal) workspace or (v) brings up the highest window on the scratchpad workspace focus stack. This would make it so running scratchpad show on output current results (I believe) in the same behavior as running scratchpad show, but a user could bind a key to show their scratchpad on a specific monitor.

and

The idea behind --hide-if-visible is that it will hide not only hide the scratchpad window if it is focused (behavior i) but also hide the scratchpad window in the active workspace of the target output.

For more of the context, please check the issue.
I tried my best to mirror the styles I saw in source files, but please let me know if anything should be done differently.",@Airblader what do you think of this PR on a higher level? If it sounds good to you I might do a first review pass.,True,{}
i3/i3,https://github.com/i3/i3,3320,2018-07-06T09:12:09Z,2019-03-30T10:37:55Z,2019-03-30T10:38:05Z,CLOSED,False,362,0,6,https://github.com/leoagomes,Enhancement proposal for issue #3162,3,['stale'],https://github.com/i3/i3/pull/3320,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3320#issuecomment-416167130,"Added a variant of the scratchpad show command, scratchpad show [--hide-if-visible] [on] output <name> as a possible solution for #3162 .
From my comment on the issue:

I agree that it doesn't make much sense to assign the scratchpad (workspace) to an input, so I propose a variant of scratchpad show is added: scratchpad show [--hide-if-visible] [on] output <name>. This would behave similarly to how scratchpad show behaves: (i) running it while focusing a scratchpad window on the target output ("""") hides the window; running it without focusing a scratchpad window brings up (on the target output) either (ii) an unfocused scratchpad window on the target output's active workspace or (in case there aren't any) (iii) an unfocused scratchpad window on any of the workspaces in the target output or (iv) an unfocused scratchpad window on any (non-internal) workspace or (v) brings up the highest window on the scratchpad workspace focus stack. This would make it so running scratchpad show on output current results (I believe) in the same behavior as running scratchpad show, but a user could bind a key to show their scratchpad on a specific monitor.

and

The idea behind --hide-if-visible is that it will hide not only hide the scratchpad window if it is focused (behavior i) but also hide the scratchpad window in the active workspace of the target output.

For more of the context, please check the issue.
I tried my best to mirror the styles I saw in source files, but please let me know if anything should be done differently.","Yes, on a high level I think this sounds fine.",True,{}
i3/i3,https://github.com/i3/i3,3320,2018-07-06T09:12:09Z,2019-03-30T10:37:55Z,2019-03-30T10:38:05Z,CLOSED,False,362,0,6,https://github.com/leoagomes,Enhancement proposal for issue #3162,3,['stale'],https://github.com/i3/i3/pull/3320,https://github.com/Airblader,4,https://github.com/i3/i3/pull/3320#issuecomment-437621264,"Added a variant of the scratchpad show command, scratchpad show [--hide-if-visible] [on] output <name> as a possible solution for #3162 .
From my comment on the issue:

I agree that it doesn't make much sense to assign the scratchpad (workspace) to an input, so I propose a variant of scratchpad show is added: scratchpad show [--hide-if-visible] [on] output <name>. This would behave similarly to how scratchpad show behaves: (i) running it while focusing a scratchpad window on the target output ("""") hides the window; running it without focusing a scratchpad window brings up (on the target output) either (ii) an unfocused scratchpad window on the target output's active workspace or (in case there aren't any) (iii) an unfocused scratchpad window on any of the workspaces in the target output or (iv) an unfocused scratchpad window on any (non-internal) workspace or (v) brings up the highest window on the scratchpad workspace focus stack. This would make it so running scratchpad show on output current results (I believe) in the same behavior as running scratchpad show, but a user could bind a key to show their scratchpad on a specific monitor.

and

The idea behind --hide-if-visible is that it will hide not only hide the scratchpad window if it is focused (behavior i) but also hide the scratchpad window in the active workspace of the target output.

For more of the context, please check the issue.
I tried my best to mirror the styles I saw in source files, but please let me know if anything should be done differently.",@leoagomes Are you going to continue your work on this?,True,{}
i3/i3,https://github.com/i3/i3,3320,2018-07-06T09:12:09Z,2019-03-30T10:37:55Z,2019-03-30T10:38:05Z,CLOSED,False,362,0,6,https://github.com/leoagomes,Enhancement proposal for issue #3162,3,['stale'],https://github.com/i3/i3/pull/3320,https://github.com/leoagomes,5,https://github.com/i3/i3/pull/3320#issuecomment-437625663,"Added a variant of the scratchpad show command, scratchpad show [--hide-if-visible] [on] output <name> as a possible solution for #3162 .
From my comment on the issue:

I agree that it doesn't make much sense to assign the scratchpad (workspace) to an input, so I propose a variant of scratchpad show is added: scratchpad show [--hide-if-visible] [on] output <name>. This would behave similarly to how scratchpad show behaves: (i) running it while focusing a scratchpad window on the target output ("""") hides the window; running it without focusing a scratchpad window brings up (on the target output) either (ii) an unfocused scratchpad window on the target output's active workspace or (in case there aren't any) (iii) an unfocused scratchpad window on any of the workspaces in the target output or (iv) an unfocused scratchpad window on any (non-internal) workspace or (v) brings up the highest window on the scratchpad workspace focus stack. This would make it so running scratchpad show on output current results (I believe) in the same behavior as running scratchpad show, but a user could bind a key to show their scratchpad on a specific monitor.

and

The idea behind --hide-if-visible is that it will hide not only hide the scratchpad window if it is focused (behavior i) but also hide the scratchpad window in the active workspace of the target output.

For more of the context, please check the issue.
I tried my best to mirror the styles I saw in source files, but please let me know if anything should be done differently.","I can continue to work on this, just not at the moment, as the end of the semester is near and I have to finish multiple projects. When December comes, I'll have time to address the proposed changes.",True,{'THUMBS_UP': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,3320,2018-07-06T09:12:09Z,2019-03-30T10:37:55Z,2019-03-30T10:38:05Z,CLOSED,False,362,0,6,https://github.com/leoagomes,Enhancement proposal for issue #3162,3,['stale'],https://github.com/i3/i3/pull/3320,https://github.com/Airblader,6,https://github.com/i3/i3/pull/3320#issuecomment-437625812,"Added a variant of the scratchpad show command, scratchpad show [--hide-if-visible] [on] output <name> as a possible solution for #3162 .
From my comment on the issue:

I agree that it doesn't make much sense to assign the scratchpad (workspace) to an input, so I propose a variant of scratchpad show is added: scratchpad show [--hide-if-visible] [on] output <name>. This would behave similarly to how scratchpad show behaves: (i) running it while focusing a scratchpad window on the target output ("""") hides the window; running it without focusing a scratchpad window brings up (on the target output) either (ii) an unfocused scratchpad window on the target output's active workspace or (in case there aren't any) (iii) an unfocused scratchpad window on any of the workspaces in the target output or (iv) an unfocused scratchpad window on any (non-internal) workspace or (v) brings up the highest window on the scratchpad workspace focus stack. This would make it so running scratchpad show on output current results (I believe) in the same behavior as running scratchpad show, but a user could bind a key to show their scratchpad on a specific monitor.

and

The idea behind --hide-if-visible is that it will hide not only hide the scratchpad window if it is focused (behavior i) but also hide the scratchpad window in the active workspace of the target output.

For more of the context, please check the issue.
I tried my best to mirror the styles I saw in source files, but please let me know if anything should be done differently.","That's fine, thanks for the reply. Good luck with your studies!",True,{'THUMBS_UP': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,3320,2018-07-06T09:12:09Z,2019-03-30T10:37:55Z,2019-03-30T10:38:05Z,CLOSED,False,362,0,6,https://github.com/leoagomes,Enhancement proposal for issue #3162,3,['stale'],https://github.com/i3/i3/pull/3320,https://github.com/orestisfl,7,https://github.com/i3/i3/pull/3320#issuecomment-478233016,"Added a variant of the scratchpad show command, scratchpad show [--hide-if-visible] [on] output <name> as a possible solution for #3162 .
From my comment on the issue:

I agree that it doesn't make much sense to assign the scratchpad (workspace) to an input, so I propose a variant of scratchpad show is added: scratchpad show [--hide-if-visible] [on] output <name>. This would behave similarly to how scratchpad show behaves: (i) running it while focusing a scratchpad window on the target output ("""") hides the window; running it without focusing a scratchpad window brings up (on the target output) either (ii) an unfocused scratchpad window on the target output's active workspace or (in case there aren't any) (iii) an unfocused scratchpad window on any of the workspaces in the target output or (iv) an unfocused scratchpad window on any (non-internal) workspace or (v) brings up the highest window on the scratchpad workspace focus stack. This would make it so running scratchpad show on output current results (I believe) in the same behavior as running scratchpad show, but a user could bind a key to show their scratchpad on a specific monitor.

and

The idea behind --hide-if-visible is that it will hide not only hide the scratchpad window if it is focused (behavior i) but also hide the scratchpad window in the active workspace of the target output.

For more of the context, please check the issue.
I tried my best to mirror the styles I saw in source files, but please let me know if anything should be done differently.","Feel free to reopen & finish this whenever you have the time.
Best of luck with your studies!",True,{}
i3/i3,https://github.com/i3/i3,3322,2018-07-09T10:39:23Z,2018-07-10T04:33:01Z,2018-07-10T04:33:01Z,CLOSED,False,1,1,1,https://github.com/bebehei,"If no trayoutput matches, take first",1,[],https://github.com/i3/i3/pull/3322,https://github.com/bebehei,1,https://github.com/i3/i3/pull/3322,"When changing the screen, the tray was searching for a matching output.
But if no screen matched, it neglected the setting and didn't show
anything.
As the default, the i3bar shows a tray on the first matching output.
Its intention is to display a tray. So it should also show a tray, if
the monitors don't match.
Fixes #3317","When changing the screen, the tray was searching for a matching output.
But if no screen matched, it neglected the setting and didn't show
anything.
As the default, the i3bar shows a tray on the first matching output.
Its intention is to display a tray. So it should also show a tray, if
the monitors don't match.
Fixes #3317",True,{}
i3/i3,https://github.com/i3/i3,3322,2018-07-09T10:39:23Z,2018-07-10T04:33:01Z,2018-07-10T04:33:01Z,CLOSED,False,1,1,1,https://github.com/bebehei,"If no trayoutput matches, take first",1,[],https://github.com/i3/i3/pull/3322,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3322#issuecomment-403581375,"When changing the screen, the tray was searching for a matching output.
But if no screen matched, it neglected the setting and didn't show
anything.
As the default, the i3bar shows a tray on the first matching output.
Its intention is to display a tray. So it should also show a tray, if
the monitors don't match.
Fixes #3317","The behavior is intended as-is. Only if the user doesn't configure anything we use the first output. If the user configures something, we only show the bar if the output can be matched. Otherwise it'd be impossible to hide the bar on specific outputs. Am I missing something?",True,{}
i3/i3,https://github.com/i3/i3,3322,2018-07-09T10:39:23Z,2018-07-10T04:33:01Z,2018-07-10T04:33:01Z,CLOSED,False,1,1,1,https://github.com/bebehei,"If no trayoutput matches, take first",1,[],https://github.com/i3/i3/pull/3322,https://github.com/bebehei,3,https://github.com/i3/i3/pull/3322#issuecomment-403655728,"When changing the screen, the tray was searching for a matching output.
But if no screen matched, it neglected the setting and didn't show
anything.
As the default, the i3bar shows a tray on the first matching output.
Its intention is to display a tray. So it should also show a tray, if
the monitors don't match.
Fixes #3317","Otherwise it'd be impossible to hide the bar on specific outputs.

@Airblader On the one hand side, I agree with you. But on the other side, this is ""common userfault"" and I don't see, why a program shouldn't fix it (a.k.a. automatically do it right). While creating this PR, I had it in my mind, that you couldn't be able anymore to disable the tray output, but I neglected it.
I had some solutions in my mind. Most of them cover solely the usage of tray_output primary and actually handle tray_output <monitorname> ... (and disabling other outputs) as a cornercase. So I dedcided between those two paths:

Make the tray_output a soft setting (status quo of this PR): No matter what happens (you change GPU, swap the screens, clone your dotfiles to somewhere else, ...), you'll get a traybar. It's just there and it works. No hassle involved. You'll get a traybar. If you want it to be refined, e.g the left or right screen, you can change it via tray_output. The only con: You can't explicitly say anymore: ""I don't want a traybar!""
Let the tray_output a hard setting. (Status quo of master). The tray_output governs. If the tray_output is set to VGA1 and your machine hasn't even a VGA adapter anymore, nothing will display. Also, if you're setting tray_output primary and your primpary display is your external one and while you take away your laptop, the primary display won't get updated to point onto your notebook's LCD, no tray output will be displayed.

So, which solution should we choose? And: What needs should we fulfill?
What would you prefer as a user? You can only have a single tray output. Would you display anyways it or rather not?! And we're talking about the tray output, not the bar itself (which could be displayed multiple times). (This is not a rethoric question).",True,{}
i3/i3,https://github.com/i3/i3,3322,2018-07-09T10:39:23Z,2018-07-10T04:33:01Z,2018-07-10T04:33:01Z,CLOSED,False,1,1,1,https://github.com/bebehei,"If no trayoutput matches, take first",1,[],https://github.com/i3/i3/pull/3322,https://github.com/Airblader,4,https://github.com/i3/i3/pull/3322#issuecomment-403697145,"When changing the screen, the tray was searching for a matching output.
But if no screen matched, it neglected the setting and didn't show
anything.
As the default, the i3bar shows a tray on the first matching output.
Its intention is to display a tray. So it should also show a tray, if
the monitors don't match.
Fixes #3317","Without a doubt I prefer the current behavior. It avoids the risk of breaking things for users and to me it makes sense. If people configure primary as the output but don't have a primary output, why should the bar appear anywhere? It's not what they configured. They always have the option to specify multiple outputs.
So all in all I think we can close this PR. However, thanks for opening it in any case!",True,{}
i3/i3,https://github.com/i3/i3,3324,2018-07-10T02:09:20Z,2018-07-10T06:23:33Z,2018-11-04T22:05:58Z,MERGED,True,41,33,4,https://github.com/orestisfl,Correct XDG paths precedence for config files,1,[],https://github.com/i3/i3/pull/3324,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3324,Fixes #3323,Fixes #3323,True,{'THUMBS_UP': ['https://github.com/ThomasBrierley']}
i3/i3,https://github.com/i3/i3,3324,2018-07-10T02:09:20Z,2018-07-10T06:23:33Z,2018-11-04T22:05:58Z,MERGED,True,41,33,4,https://github.com/orestisfl,Correct XDG paths precedence for config files,1,[],https://github.com/i3/i3/pull/3324,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3324#issuecomment-403713922,Fixes #3323,"I'm slightly worried this will break for some users, but I would argue that having multiple configuration files in different places is a mistake anyway. :-)",True,{}
i3/i3,https://github.com/i3/i3,3327,2018-07-11T21:40:47Z,2018-07-12T04:27:57Z,2018-07-12T10:48:22Z,MERGED,True,17,18,1,https://github.com/orestisfl,cmd_rename_workspace: always call con_focus,1,[],https://github.com/i3/i3/pull/3327,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3327,Fixes #3325,Fixes #3325,True,{}
i3/i3,https://github.com/i3/i3,3327,2018-07-11T21:40:47Z,2018-07-12T04:27:57Z,2018-07-12T10:48:22Z,MERGED,True,17,18,1,https://github.com/orestisfl,cmd_rename_workspace: always call con_focus,1,[],https://github.com/i3/i3/pull/3327,https://github.com/Ham5andw1ch,2,https://github.com/i3/i3/pull/3327#issuecomment-404332010,Fixes #3325,Thank you. I went ahead and grabbed the diff and applied it to gaps. Works just fine.,True,{}
i3/i3,https://github.com/i3/i3,3328,2018-07-12T00:52:05Z,2018-07-12T04:27:13Z,2018-07-12T04:27:14Z,MERGED,True,1,1,1,https://github.com/orestisfl,Fix ISSUE_TEMPLATE typo,1,[],https://github.com/i3/i3/pull/3328,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3328,,,True,{}
i3/i3,https://github.com/i3/i3,3329,2018-07-16T14:05:55Z,2018-07-16T14:11:05Z,2018-07-16T14:11:05Z,MERGED,True,1,1,1,https://github.com/lasers,docs/i3bar-protocol: fix typo,1,[],https://github.com/i3/i3/pull/3329,https://github.com/lasers,1,https://github.com/i3/i3/pull/3329,Unrelated to this pull request... Does i3lock send signals to i3bar and/or i3? Thanks in advance.,Unrelated to this pull request... Does i3lock send signals to i3bar and/or i3? Thanks in advance.,True,{}
i3/i3,https://github.com/i3/i3,3329,2018-07-16T14:05:55Z,2018-07-16T14:11:05Z,2018-07-16T14:11:05Z,MERGED,True,1,1,1,https://github.com/lasers,docs/i3bar-protocol: fix typo,1,[],https://github.com/i3/i3/pull/3329,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3329#issuecomment-405260500,Unrelated to this pull request... Does i3lock send signals to i3bar and/or i3? Thanks in advance.,"Thanks for the PR!

Does i3lock send signals to i3bar and/or i3? Thanks in advance.

No, it doesn't.",True,{'HEART': ['https://github.com/lasers']}
i3/i3,https://github.com/i3/i3,3336,2018-07-26T12:54:30Z,2018-08-04T17:27:25Z,2018-08-04T17:27:26Z,MERGED,True,2,1,1,https://github.com/hazbo,Added libiconv to search libs for OpenBSD patch,1,[],https://github.com/i3/i3/pull/3336,https://github.com/hazbo,1,https://github.com/i3/i3/pull/3336,"I created a PR for i3-gaps (Airblader/i3#224) and was asked if I'd move this fix upstream.
Most of the details are in the comment(s) of the original PR. ^ In the OpenBSD port for i3, there is a configure patch (http://cvsweb.openbsd.org/cgi-bin/cvsweb/~checkout~/ports/x11/i3/patches/patch-configure?rev=1.2&content-type=text/plain) to get i3 to build. I have only been able to test this on OpenBSD thus far, so am not certain if this change causes any other effects.","I created a PR for i3-gaps (Airblader/i3#224) and was asked if I'd move this fix upstream.
Most of the details are in the comment(s) of the original PR. ^ In the OpenBSD port for i3, there is a configure patch (http://cvsweb.openbsd.org/cgi-bin/cvsweb/~checkout~/ports/x11/i3/patches/patch-configure?rev=1.2&content-type=text/plain) to get i3 to build. I have only been able to test this on OpenBSD thus far, so am not certain if this change causes any other effects.",True,{}
i3/i3,https://github.com/i3/i3,3336,2018-07-26T12:54:30Z,2018-08-04T17:27:25Z,2018-08-04T17:27:26Z,MERGED,True,2,1,1,https://github.com/hazbo,Added libiconv to search libs for OpenBSD patch,1,[],https://github.com/i3/i3/pull/3336,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3336#issuecomment-410430400,"I created a PR for i3-gaps (Airblader/i3#224) and was asked if I'd move this fix upstream.
Most of the details are in the comment(s) of the original PR. ^ In the OpenBSD port for i3, there is a configure patch (http://cvsweb.openbsd.org/cgi-bin/cvsweb/~checkout~/ports/x11/i3/patches/patch-configure?rev=1.2&content-type=text/plain) to get i3 to build. I have only been able to test this on OpenBSD thus far, so am not certain if this change causes any other effects.","@stapelberg I don't know autotools at all. Since it's a small patch, can you take a look at it?",True,{}
i3/i3,https://github.com/i3/i3,3340,2018-07-29T02:46:21Z,2018-07-29T10:10:27Z,2018-07-29T16:46:18Z,MERGED,True,1,1,1,https://github.com/PandorasFox,fix height offset calculation in pango text drawing,1,[],https://github.com/i3/i3/pull/3340,https://github.com/PandorasFox,1,https://github.com/i3/i3/pull/3340,"difference is zero: dividing by two does nothing (that's fine)
difference is positive: halve the difference, subtract it from the height to center it
difference is negative: abs it, then do the same as above.

Works fine on my fresh laptop; dunno about older pango versions. I'm not exactly sure about what changed with things that are larger than given height.
Unless I'm mistaken, this shouldn't affect anything where height <= savedFont->height. This just changes the previous case of subtracting the (positive) height difference when something was too tall (and thus shifting everything a decent amount above the bar canvas).
This handles it well enough for the case ""text too tall"". I'm not really sure if there's a ""good"" solution for this, since it's usually just one glyph that's messing up the height.
Fixes #3114","difference is zero: dividing by two does nothing (that's fine)
difference is positive: halve the difference, subtract it from the height to center it
difference is negative: abs it, then do the same as above.

Works fine on my fresh laptop; dunno about older pango versions. I'm not exactly sure about what changed with things that are larger than given height.
Unless I'm mistaken, this shouldn't affect anything where height <= savedFont->height. This just changes the previous case of subtracting the (positive) height difference when something was too tall (and thus shifting everything a decent amount above the bar canvas).
This handles it well enough for the case ""text too tall"". I'm not really sure if there's a ""good"" solution for this, since it's usually just one glyph that's messing up the height.
Fixes #3114",True,"{'HEART': ['https://github.com/polyzen'], 'HOORAY': ['https://github.com/polyzen']}"
i3/i3,https://github.com/i3/i3,3340,2018-07-29T02:46:21Z,2018-07-29T10:10:27Z,2018-07-29T16:46:18Z,MERGED,True,1,1,1,https://github.com/PandorasFox,fix height offset calculation in pango text drawing,1,[],https://github.com/i3/i3/pull/3340,https://github.com/PandorasFox,2,https://github.com/i3/i3/pull/3340#issuecomment-408648123,"difference is zero: dividing by two does nothing (that's fine)
difference is positive: halve the difference, subtract it from the height to center it
difference is negative: abs it, then do the same as above.

Works fine on my fresh laptop; dunno about older pango versions. I'm not exactly sure about what changed with things that are larger than given height.
Unless I'm mistaken, this shouldn't affect anything where height <= savedFont->height. This just changes the previous case of subtracting the (positive) height difference when something was too tall (and thus shifting everything a decent amount above the bar canvas).
This handles it well enough for the case ""text too tall"". I'm not really sure if there's a ""good"" solution for this, since it's usually just one glyph that's messing up the height.
Fixes #3114","This is what my bar looks like with the patch:

This is what it looks like without the patch:

I don't particularly like this since the text in the (formerly broken) boxes isn't aligned the same as the text in 'normal' boxes. I don't think there's a real way to do that, though.",True,{}
i3/i3,https://github.com/i3/i3,3340,2018-07-29T02:46:21Z,2018-07-29T10:10:27Z,2018-07-29T16:46:18Z,MERGED,True,1,1,1,https://github.com/PandorasFox,fix height offset calculation in pango text drawing,1,[],https://github.com/i3/i3/pull/3340,https://github.com/PandorasFox,3,https://github.com/i3/i3/pull/3340#issuecomment-408648695,"difference is zero: dividing by two does nothing (that's fine)
difference is positive: halve the difference, subtract it from the height to center it
difference is negative: abs it, then do the same as above.

Works fine on my fresh laptop; dunno about older pango versions. I'm not exactly sure about what changed with things that are larger than given height.
Unless I'm mistaken, this shouldn't affect anything where height <= savedFont->height. This just changes the previous case of subtracting the (positive) height difference when something was too tall (and thus shifting everything a decent amount above the bar canvas).
This handles it well enough for the case ""text too tall"". I'm not really sure if there's a ""good"" solution for this, since it's usually just one glyph that's messing up the height.
Fixes #3114","int yoffset = (height < savedFont->height ? 0.5 : 0.4) * (height - savedFont->height);

Produces the following:

I think that this is a bit closer to what's expected. I'm unsure if 0.4 is really going to work the same on every device. On my display the text appears to be perfectly aligned.
I can't get my old laptop to reproduce this. I don't know what actually causes this - they're using the same versions of pango, same strings, etc. Maybe this is because my new laptop has a much higher DPI? Dunno.",True,{}
i3/i3,https://github.com/i3/i3,3340,2018-07-29T02:46:21Z,2018-07-29T10:10:27Z,2018-07-29T16:46:18Z,MERGED,True,1,1,1,https://github.com/PandorasFox,fix height offset calculation in pango text drawing,1,[],https://github.com/i3/i3/pull/3340,https://github.com/Airblader,4,https://github.com/i3/i3/pull/3340#issuecomment-408665858,"difference is zero: dividing by two does nothing (that's fine)
difference is positive: halve the difference, subtract it from the height to center it
difference is negative: abs it, then do the same as above.

Works fine on my fresh laptop; dunno about older pango versions. I'm not exactly sure about what changed with things that are larger than given height.
Unless I'm mistaken, this shouldn't affect anything where height <= savedFont->height. This just changes the previous case of subtracting the (positive) height difference when something was too tall (and thus shifting everything a decent amount above the bar canvas).
This handles it well enough for the case ""text too tall"". I'm not really sure if there's a ""good"" solution for this, since it's usually just one glyph that's messing up the height.
Fixes #3114",Thanks for the PR. I think as is we can merge it. I don't like the second proposed version because it can't really be justified as it's mostly guess work. I think for that we'd have to investigate closely with pango how this would have to be handled correctly.,True,{}
i3/i3,https://github.com/i3/i3,3340,2018-07-29T02:46:21Z,2018-07-29T10:10:27Z,2018-07-29T16:46:18Z,MERGED,True,1,1,1,https://github.com/PandorasFox,fix height offset calculation in pango text drawing,1,[],https://github.com/i3/i3/pull/3340,https://github.com/PandorasFox,5,https://github.com/i3/i3/pull/3340#issuecomment-408690087,"difference is zero: dividing by two does nothing (that's fine)
difference is positive: halve the difference, subtract it from the height to center it
difference is negative: abs it, then do the same as above.

Works fine on my fresh laptop; dunno about older pango versions. I'm not exactly sure about what changed with things that are larger than given height.
Unless I'm mistaken, this shouldn't affect anything where height <= savedFont->height. This just changes the previous case of subtracting the (positive) height difference when something was too tall (and thus shifting everything a decent amount above the bar canvas).
This handles it well enough for the case ""text too tall"". I'm not really sure if there's a ""good"" solution for this, since it's usually just one glyph that's messing up the height.
Fixes #3114","Yeah, if I could repro on multiple machines it'd be easier to figure out why this happens and figure out a proper fix, but I can't get height > savedFont->height to trigger on any of my other machines, weirdly enough.
I also can't even get this to trigger on the machine this was happening on before, either - maybe it's some weird caching issue with newly-installed fonts or something.",True,{}
i3/i3,https://github.com/i3/i3,3342,2018-07-30T09:24:02Z,2018-09-14T10:24:55Z,2018-09-14T10:28:17Z,MERGED,True,24,81,7,https://github.com/orestisfl,Simplify tree_close_internal,1,[],https://github.com/i3/i3/pull/3342,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3342,I'll be running this patch on my machine to catch any possible regressions.,I'll be running this patch on my machine to catch any possible regressions.,True,{}
i3/i3,https://github.com/i3/i3,3342,2018-07-30T09:24:02Z,2018-09-14T10:24:55Z,2018-09-14T10:28:17Z,MERGED,True,24,81,7,https://github.com/orestisfl,Simplify tree_close_internal,1,[],https://github.com/i3/i3/pull/3342,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3342#issuecomment-421280403,I'll be running this patch on my machine to catch any possible regressions.,I assume you ran it for a while now? Is it good to go from your side?,True,{}
i3/i3,https://github.com/i3/i3,3342,2018-07-30T09:24:02Z,2018-09-14T10:24:55Z,2018-09-14T10:28:17Z,MERGED,True,24,81,7,https://github.com/orestisfl,Simplify tree_close_internal,1,[],https://github.com/i3/i3/pull/3342,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/3342#issuecomment-421292924,I'll be running this patch on my machine to catch any possible regressions.,Yes,True,{}
i3/i3,https://github.com/i3/i3,3344,2018-07-31T22:37:47Z,2018-08-02T15:05:30Z,2018-08-02T15:05:30Z,MERGED,True,2,1,2,https://github.com/downzer0,enhancement: adds hyper as a sensible terminal option,1,[],https://github.com/i3/i3/pull/3344,https://github.com/downzer0,1,https://github.com/i3/i3/pull/3344,"hyper.is

Optional enhancement; not on the list of issues/enhancements, but wanted to contribute it since I use it. Feel free to decline if it is not needed at this time.","hyper.is

Optional enhancement; not on the list of issues/enhancements, but wanted to contribute it since I use it. Feel free to decline if it is not needed at this time.",True,{}
i3/i3,https://github.com/i3/i3,3344,2018-07-31T22:37:47Z,2018-08-02T15:05:30Z,2018-08-02T15:05:30Z,MERGED,True,2,1,2,https://github.com/downzer0,enhancement: adds hyper as a sensible terminal option,1,[],https://github.com/i3/i3/pull/3344,https://github.com/downzer0,2,https://github.com/i3/i3/pull/3344#issuecomment-409565772,"hyper.is

Optional enhancement; not on the list of issues/enhancements, but wanted to contribute it since I use it. Feel free to decline if it is not needed at this time.",@Airblader updated.,True,{}
i3/i3,https://github.com/i3/i3,3344,2018-07-31T22:37:47Z,2018-08-02T15:05:30Z,2018-08-02T15:05:30Z,MERGED,True,2,1,2,https://github.com/downzer0,enhancement: adds hyper as a sensible terminal option,1,[],https://github.com/i3/i3/pull/3344,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3344#issuecomment-409567349,"hyper.is

Optional enhancement; not on the list of issues/enhancements, but wanted to contribute it since I use it. Feel free to decline if it is not needed at this time.","@downzer0 Thanks, the change looks fine, but can you please squash the two commits into one? Thanks!",True,{}
i3/i3,https://github.com/i3/i3,3344,2018-07-31T22:37:47Z,2018-08-02T15:05:30Z,2018-08-02T15:05:30Z,MERGED,True,2,1,2,https://github.com/downzer0,enhancement: adds hyper as a sensible terminal option,1,[],https://github.com/i3/i3/pull/3344,https://github.com/downzer0,4,https://github.com/i3/i3/pull/3344#issuecomment-409572453,"hyper.is

Optional enhancement; not on the list of issues/enhancements, but wanted to contribute it since I use it. Feel free to decline if it is not needed at this time.",@Airblader squashed.,True,{}
i3/i3,https://github.com/i3/i3,3353,2018-08-09T14:31:43Z,2018-08-09T14:49:21Z,2018-08-09T14:49:49Z,MERGED,True,9,2,1,https://github.com/orestisfl,Free ws_assignments on reload,1,[],https://github.com/i3/i3/pull/3353,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3353,,,True,{}
i3/i3,https://github.com/i3/i3,3363,2018-08-17T09:38:17Z,2018-08-17T09:42:30Z,2018-08-17T09:43:23Z,MERGED,True,34,0,2,https://github.com/orestisfl,Call con_activate after moving scratchpad window to current ws,1,[],https://github.com/i3/i3/pull/3363,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3363,Fixes #3361,Fixes #3361,True,{}
i3/i3,https://github.com/i3/i3,3364,2018-08-17T09:50:00Z,2018-08-17T09:55:16Z,2018-08-17T09:56:15Z,MERGED,True,5,3,2,https://github.com/orestisfl,randr_query_outputs: con_activate -> workspace_show,3,[],https://github.com/i3/i3/pull/3364,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3364,,,True,{}
i3/i3,https://github.com/i3/i3,3365,2018-08-21T18:20:37Z,2018-08-21T18:39:27Z,2018-08-21T20:43:47Z,MERGED,True,3,1,1,https://github.com/orestisfl,floating_drag_window: return on DRAG_REVERT,1,[],https://github.com/i3/i3/pull/3365,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3365,,,True,{}
i3/i3,https://github.com/i3/i3,3366,2018-08-21T18:20:37Z,2018-08-21T18:38:31Z,2018-08-21T20:43:46Z,MERGED,True,1,1,1,https://github.com/orestisfl,property_notify: use NUM_HANDLERS,1,[],https://github.com/i3/i3/pull/3366,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3366,,,True,{}
i3/i3,https://github.com/i3/i3,3367,2018-08-21T18:20:39Z,2018-08-21T18:37:57Z,2018-08-21T20:43:45Z,MERGED,True,8,3,1,https://github.com/orestisfl,Call dragloop callback on DRAG_SUCCESS,1,[],https://github.com/i3/i3/pull/3367,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3367,"A race condition is possible. For example, if we first receive a XCB_MOTION_NOTIFY event and then, while drain_drag_events is still running, a XCB_BUTTON_RELEASE event the first event is never handled because we return.
This fixes the flakiness of the tests in #3085.","A race condition is possible. For example, if we first receive a XCB_MOTION_NOTIFY event and then, while drain_drag_events is still running, a XCB_BUTTON_RELEASE event the first event is never handled because we return.
This fixes the flakiness of the tests in #3085.",True,{}
i3/i3,https://github.com/i3/i3,3368,2018-08-22T11:35:24Z,2018-08-24T07:49:42Z,2018-08-24T08:02:17Z,MERGED,True,51,49,7,https://github.com/orestisfl,(floating) global fullscreen bugs & others,6,[],https://github.com/i3/i3/pull/3368,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3368,"See commit by commit
Video of rendering bugs: https://gfycat.com/MajesticDependentKinkajou","See commit by commit
Video of rendering bugs: https://gfycat.com/MajesticDependentKinkajou",True,{}
i3/i3,https://github.com/i3/i3,3369,2018-08-22T11:55:36Z,2018-08-22T18:29:32Z,2018-08-22T18:37:23Z,MERGED,True,7,14,4,https://github.com/orestisfl,Apply compatible changes from clang-format 6.0.1,1,[],https://github.com/i3/i3/pull/3369,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3369,"These are the changes that clang-format 6.0.1 makes to the codebase that
clang-format-3.8 doesn't change back.
Useful for those that use a more recent version of clang-format in their
local machines.","These are the changes that clang-format 6.0.1 makes to the codebase that
clang-format-3.8 doesn't change back.
Useful for those that use a more recent version of clang-format in their
local machines.",True,{}
i3/i3,https://github.com/i3/i3,3370,2018-08-22T14:30:16Z,2018-08-22T16:30:04Z,2018-08-22T18:24:31Z,CLOSED,False,7,0,1,https://github.com/9ary,Set WM_STATE to normal when focusing a window,1,[],https://github.com/i3/i3/pull/3370,https://github.com/9ary,1,https://github.com/i3/i3/pull/3370,"Some applications request iconic state when they lose focus. One notable example is games running in Wine that use the Windows exclusive full-screen API.
While this is perfectly sound behavior on a floating window manager, we do not support the concept of iconized windows, so not only do we not handle this case, but there is also no sane way to escape that state. This leaves the aforementioned games in a paused state, with the contents reduced to a tiny corner of the window, and with no audio playing. The workaround, up until now, was to enable Wine's virtual desktop, but that is pretty inconvenient to use.
To remedy this, reset WM_STATE to a normal state when the window is focused. This allows the application to do whatever it wants to do while it's not focused (pause the game, let the GPU idle, etc), and avoids breaking it with a simple workspace switch.","Some applications request iconic state when they lose focus. One notable example is games running in Wine that use the Windows exclusive full-screen API.
While this is perfectly sound behavior on a floating window manager, we do not support the concept of iconized windows, so not only do we not handle this case, but there is also no sane way to escape that state. This leaves the aforementioned games in a paused state, with the contents reduced to a tiny corner of the window, and with no audio playing. The workaround, up until now, was to enable Wine's virtual desktop, but that is pretty inconvenient to use.
To remedy this, reset WM_STATE to a normal state when the window is focused. This allows the application to do whatever it wants to do while it's not focused (pause the game, let the GPU idle, etc), and avoids breaking it with a simple workspace switch.",True,{}
i3/i3,https://github.com/i3/i3,3370,2018-08-22T14:30:16Z,2018-08-22T16:30:04Z,2018-08-22T18:24:31Z,CLOSED,False,7,0,1,https://github.com/9ary,Set WM_STATE to normal when focusing a window,1,[],https://github.com/i3/i3/pull/3370,https://github.com/psychon,2,https://github.com/i3/i3/pull/3370#issuecomment-415056552,"Some applications request iconic state when they lose focus. One notable example is games running in Wine that use the Windows exclusive full-screen API.
While this is perfectly sound behavior on a floating window manager, we do not support the concept of iconized windows, so not only do we not handle this case, but there is also no sane way to escape that state. This leaves the aforementioned games in a paused state, with the contents reduced to a tiny corner of the window, and with no audio playing. The workaround, up until now, was to enable Wine's virtual desktop, but that is pretty inconvenient to use.
To remedy this, reset WM_STATE to a normal state when the window is focused. This allows the application to do whatever it wants to do while it's not focused (pause the game, let the GPU idle, etc), and avoids breaking it with a simple workspace switch.","According to a quick search through the code, i3 never sets WM_STATE to iconic. To go from normal to iconic, a window has to send a ClientMessage to the root window / to the WM, which will then trigger the state transition. Thus, this does  not happen with i3 either.
So, how does WM_STATE actually end up being set to iconic?",True,{}
i3/i3,https://github.com/i3/i3,3370,2018-08-22T14:30:16Z,2018-08-22T16:30:04Z,2018-08-22T18:24:31Z,CLOSED,False,7,0,1,https://github.com/9ary,Set WM_STATE to normal when focusing a window,1,[],https://github.com/i3/i3/pull/3370,https://github.com/9ary,3,https://github.com/i3/i3/pull/3370#issuecomment-415057267,"Some applications request iconic state when they lose focus. One notable example is games running in Wine that use the Windows exclusive full-screen API.
While this is perfectly sound behavior on a floating window manager, we do not support the concept of iconized windows, so not only do we not handle this case, but there is also no sane way to escape that state. This leaves the aforementioned games in a paused state, with the contents reduced to a tiny corner of the window, and with no audio playing. The workaround, up until now, was to enable Wine's virtual desktop, but that is pretty inconvenient to use.
To remedy this, reset WM_STATE to a normal state when the window is focused. This allows the application to do whatever it wants to do while it's not focused (pause the game, let the GPU idle, etc), and avoids breaking it with a simple workspace switch.","If I understand the documentation correctly, applications are free to set this on their own.",True,{}
i3/i3,https://github.com/i3/i3,3370,2018-08-22T14:30:16Z,2018-08-22T16:30:04Z,2018-08-22T18:24:31Z,CLOSED,False,7,0,1,https://github.com/9ary,Set WM_STATE to normal when focusing a window,1,[],https://github.com/i3/i3/pull/3370,https://github.com/psychon,4,https://github.com/i3/i3/pull/3370#issuecomment-415058889,"Some applications request iconic state when they lose focus. One notable example is games running in Wine that use the Windows exclusive full-screen API.
While this is perfectly sound behavior on a floating window manager, we do not support the concept of iconized windows, so not only do we not handle this case, but there is also no sane way to escape that state. This leaves the aforementioned games in a paused state, with the contents reduced to a tiny corner of the window, and with no audio playing. The workaround, up until now, was to enable Wine's virtual desktop, but that is pretty inconvenient to use.
To remedy this, reset WM_STATE to a normal state when the window is focused. This allows the application to do whatever it wants to do while it's not focused (pause the game, let the GPU idle, etc), and avoids breaking it with a simple workspace switch.","§ 4.1.3.1 begins with ""The window manager will place a WM_STATE property"". From a quick search, I cannot find anything any more explicit, but: Nope, clients really should not ever change the WM_STATE property. For example, look at how to transition from withdrawn to iconic: The window is mapped with WM_HINTS.initial_state being iconic. If apps were allowed to change this property directly, this could be done a lot easier by, well, changing the property directly.
No property may be modified by both the WM and the application, because in this case there can be races where they overwrite each other's properties.
Oh, I found an explicit reference: § 4.1.3 is ""Window Manager Properties"" and § 4.1.2 is ""Client Properties"". § 4.1.3 begins with:

The properties that were described in the previous section are those that the client is responsible for maintaining on its top-level windows. This section describes the properties that the window manager places on client's top-level windows and on the root.",True,{}
i3/i3,https://github.com/i3/i3,3370,2018-08-22T14:30:16Z,2018-08-22T16:30:04Z,2018-08-22T18:24:31Z,CLOSED,False,7,0,1,https://github.com/9ary,Set WM_STATE to normal when focusing a window,1,[],https://github.com/i3/i3/pull/3370,https://github.com/9ary,5,https://github.com/i3/i3/pull/3370#issuecomment-415066604,"Some applications request iconic state when they lose focus. One notable example is games running in Wine that use the Windows exclusive full-screen API.
While this is perfectly sound behavior on a floating window manager, we do not support the concept of iconized windows, so not only do we not handle this case, but there is also no sane way to escape that state. This leaves the aforementioned games in a paused state, with the contents reduced to a tiny corner of the window, and with no audio playing. The workaround, up until now, was to enable Wine's virtual desktop, but that is pretty inconvenient to use.
To remedy this, reset WM_STATE to a normal state when the window is focused. This allows the application to do whatever it wants to do while it's not focused (pause the game, let the GPU idle, etc), and avoids breaking it with a simple workspace switch.","Digging into Wine's code, it is setting the initial state hint, or uses XIconifyWindow. The latter sends a WM_CHANGE_STATE message (which i3 does receive, but not handle, though it used to do bogus things with it) and also sets that same hint.
Setting WM_STATE clears the hint and returns the game to normal operation. I can't seem to find a more proper way for the window manager to undo what Wine does. Maybe it's their bug, but I don't think so.",True,{}
i3/i3,https://github.com/i3/i3,3370,2018-08-22T14:30:16Z,2018-08-22T16:30:04Z,2018-08-22T18:24:31Z,CLOSED,False,7,0,1,https://github.com/9ary,Set WM_STATE to normal when focusing a window,1,[],https://github.com/i3/i3/pull/3370,https://github.com/psychon,6,https://github.com/i3/i3/pull/3370#issuecomment-415070222,"Some applications request iconic state when they lose focus. One notable example is games running in Wine that use the Windows exclusive full-screen API.
While this is perfectly sound behavior on a floating window manager, we do not support the concept of iconized windows, so not only do we not handle this case, but there is also no sane way to escape that state. This leaves the aforementioned games in a paused state, with the contents reduced to a tiny corner of the window, and with no audio playing. The workaround, up until now, was to enable Wine's virtual desktop, but that is pretty inconvenient to use.
To remedy this, reset WM_STATE to a normal state when the window is focused. This allows the application to do whatever it wants to do while it's not focused (pause the game, let the GPU idle, etc), and avoids breaking it with a simple workspace switch.","https://github.com/wine-mirror/wine/blob/58c49279f5d5ac11c0af25053f47845203dffdec/dlls/winex11.drv/event.c#L1255
Looks like it would be enough to handle WM_CHANGE_STATE client messages via the following code to make it appear to wine that the window was immediately un-minimized:
                    long data[] = {XCB_ICCCM_WM_STATE_NORMAL, XCB_NONE};
                    xcb_change_property(conn, XCB_PROP_MODE_REPLACE, window->id,
                                        A_WM_STATE, A_WM_STATE, 32, 2, data);

However, I'm not sure if this will actually work as intended. It might just mean that the wine app will grab inputs immediately again.
I consider ""let's pretend to you that you are minimized until you get the focus again"" to be a weird hack, but I do not get to make any decisions here, so feel free to ignore me.",True,{}
i3/i3,https://github.com/i3/i3,3370,2018-08-22T14:30:16Z,2018-08-22T16:30:04Z,2018-08-22T18:24:31Z,CLOSED,False,7,0,1,https://github.com/9ary,Set WM_STATE to normal when focusing a window,1,[],https://github.com/i3/i3/pull/3370,https://github.com/Airblader,7,https://github.com/i3/i3/pull/3370#issuecomment-415079481,"Some applications request iconic state when they lose focus. One notable example is games running in Wine that use the Windows exclusive full-screen API.
While this is perfectly sound behavior on a floating window manager, we do not support the concept of iconized windows, so not only do we not handle this case, but there is also no sane way to escape that state. This leaves the aforementioned games in a paused state, with the contents reduced to a tiny corner of the window, and with no audio playing. The workaround, up until now, was to enable Wine's virtual desktop, but that is pretty inconvenient to use.
To remedy this, reset WM_STATE to a normal state when the window is focused. This allows the application to do whatever it wants to do while it's not focused (pause the game, let the GPU idle, etc), and avoids breaking it with a simple workspace switch.","My understanding of the spec is the same as @psychon's, that is the client shouldn't be setting this hint. To avoid misunderstandings, is anyone reading this differently?
For that reason my immediate feeling here is to reject the PR and fix the client instead.",True,{}
i3/i3,https://github.com/i3/i3,3370,2018-08-22T14:30:16Z,2018-08-22T16:30:04Z,2018-08-22T18:24:31Z,CLOSED,False,7,0,1,https://github.com/9ary,Set WM_STATE to normal when focusing a window,1,[],https://github.com/i3/i3/pull/3370,https://github.com/9ary,8,https://github.com/i3/i3/pull/3370#issuecomment-415080537,"Some applications request iconic state when they lose focus. One notable example is games running in Wine that use the Windows exclusive full-screen API.
While this is perfectly sound behavior on a floating window manager, we do not support the concept of iconized windows, so not only do we not handle this case, but there is also no sane way to escape that state. This leaves the aforementioned games in a paused state, with the contents reduced to a tiny corner of the window, and with no audio playing. The workaround, up until now, was to enable Wine's virtual desktop, but that is pretty inconvenient to use.
To remedy this, reset WM_STATE to a normal state when the window is focused. This allows the application to do whatever it wants to do while it's not focused (pause the game, let the GPU idle, etc), and avoids breaking it with a simple workspace switch.","That's also something I've considered doing. Wine doesn't seem to grab input again afterwards, though there is a visible flicker through the iconized state, which is unavoidable. It doesn't seem to be as reliable as setting it on focus gained though.
Wine seems to be following the spec (it's using XIconizeWindow to iconize itself, and reverts to normal state when the property is reset by the window manager), so we might be looking at an xlib bug?",True,{}
i3/i3,https://github.com/i3/i3,3370,2018-08-22T14:30:16Z,2018-08-22T16:30:04Z,2018-08-22T18:24:31Z,CLOSED,False,7,0,1,https://github.com/9ary,Set WM_STATE to normal when focusing a window,1,[],https://github.com/i3/i3/pull/3370,https://github.com/psychon,9,https://github.com/i3/i3/pull/3370#issuecomment-415086632,"Some applications request iconic state when they lose focus. One notable example is games running in Wine that use the Windows exclusive full-screen API.
While this is perfectly sound behavior on a floating window manager, we do not support the concept of iconized windows, so not only do we not handle this case, but there is also no sane way to escape that state. This leaves the aforementioned games in a paused state, with the contents reduced to a tiny corner of the window, and with no audio playing. The workaround, up until now, was to enable Wine's virtual desktop, but that is pretty inconvenient to use.
To remedy this, reset WM_STATE to a normal state when the window is focused. This allows the application to do whatever it wants to do while it's not focused (pause the game, let the GPU idle, etc), and avoids breaking it with a simple workspace switch.","@Airblader Thanks to the links to wine's code that @Streetwalrus provided, it looks like Wine assumes that requesting its window to be iconified means that it is guaranteed that this actually happens. As soon as Wine sent the request, it starts ignoring things (e.g. ignores ConfigureNotify events). I don't think anything actually modifies WM_STATE directly here, it's just Wine waiting for the WM to tell it to proceed.
Since i3 just ignores the request, wine keeps believing its window is minimized.",True,{}
i3/i3,https://github.com/i3/i3,3370,2018-08-22T14:30:16Z,2018-08-22T16:30:04Z,2018-08-22T18:24:31Z,CLOSED,False,7,0,1,https://github.com/9ary,Set WM_STATE to normal when focusing a window,1,[],https://github.com/i3/i3/pull/3370,https://github.com/9ary,10,https://github.com/i3/i3/pull/3370#issuecomment-415094768,"Some applications request iconic state when they lose focus. One notable example is games running in Wine that use the Windows exclusive full-screen API.
While this is perfectly sound behavior on a floating window manager, we do not support the concept of iconized windows, so not only do we not handle this case, but there is also no sane way to escape that state. This leaves the aforementioned games in a paused state, with the contents reduced to a tiny corner of the window, and with no audio playing. The workaround, up until now, was to enable Wine's virtual desktop, but that is pretty inconvenient to use.
To remedy this, reset WM_STATE to a normal state when the window is focused. This allows the application to do whatever it wants to do while it's not focused (pause the game, let the GPU idle, etc), and avoids breaking it with a simple workspace switch.","Yeah you're right, WM_STATE never actually gets set to iconic (tested empirically). I'll report this to Wine devs.",True,{}
i3/i3,https://github.com/i3/i3,3370,2018-08-22T14:30:16Z,2018-08-22T16:30:04Z,2018-08-22T18:24:31Z,CLOSED,False,7,0,1,https://github.com/9ary,Set WM_STATE to normal when focusing a window,1,[],https://github.com/i3/i3/pull/3370,https://github.com/Airblader,11,https://github.com/i3/i3/pull/3370#issuecomment-415095664,"Some applications request iconic state when they lose focus. One notable example is games running in Wine that use the Windows exclusive full-screen API.
While this is perfectly sound behavior on a floating window manager, we do not support the concept of iconized windows, so not only do we not handle this case, but there is also no sane way to escape that state. This leaves the aforementioned games in a paused state, with the contents reduced to a tiny corner of the window, and with no audio playing. The workaround, up until now, was to enable Wine's virtual desktop, but that is pretty inconvenient to use.
To remedy this, reset WM_STATE to a normal state when the window is focused. This allows the application to do whatever it wants to do while it's not focused (pause the game, let the GPU idle, etc), and avoids breaking it with a simple workspace switch.","Yeah, that makes sense. I think the question here is whether the window manager is allowed to reject the request. The spec never explicitly mentions this and there's no protocol to indicate support or lack thereof. However, the general paradigm in X is typically that a client mustn't assume that the window manager grants anything the client requests of it.
Even assuming we're forced to implement support, it raises the question of what that looks like. We simply do not have and do not want minimized windows. Unfortunately, the icon state specifies that the client can assume their icon or at least name is displayed. This seems to force window management behavior which would be really odd.
I think the proposed fix isn't really correct, it just restores interaction, but in the meantime there's still the problem that the client assumes a state that isn't actually there.
I would suggest to raise this to Wine and get their thoughts on why they can't see if the window manager grants the request, as is common in X anyway. What do you think?",True,{}
i3/i3,https://github.com/i3/i3,3370,2018-08-22T14:30:16Z,2018-08-22T16:30:04Z,2018-08-22T18:24:31Z,CLOSED,False,7,0,1,https://github.com/9ary,Set WM_STATE to normal when focusing a window,1,[],https://github.com/i3/i3/pull/3370,https://github.com/9ary,12,https://github.com/i3/i3/pull/3370#issuecomment-415096635,"Some applications request iconic state when they lose focus. One notable example is games running in Wine that use the Windows exclusive full-screen API.
While this is perfectly sound behavior on a floating window manager, we do not support the concept of iconized windows, so not only do we not handle this case, but there is also no sane way to escape that state. This leaves the aforementioned games in a paused state, with the contents reduced to a tiny corner of the window, and with no audio playing. The workaround, up until now, was to enable Wine's virtual desktop, but that is pretty inconvenient to use.
To remedy this, reset WM_STATE to a normal state when the window is focused. This allows the application to do whatever it wants to do while it's not focused (pause the game, let the GPU idle, etc), and avoids breaking it with a simple workspace switch.","Yeah that's the conclusion I've reached, which is why I closed the PR. Wine should request iconization with XIconizeWindow, and then instead of assuming that the window has been iconized, handle the actual change on WM_STATE to go into iconized mode. That way, the window manager gets notified of wine's request and can decide to fulfill it or not.",True,{}
i3/i3,https://github.com/i3/i3,3370,2018-08-22T14:30:16Z,2018-08-22T16:30:04Z,2018-08-22T18:24:31Z,CLOSED,False,7,0,1,https://github.com/9ary,Set WM_STATE to normal when focusing a window,1,[],https://github.com/i3/i3/pull/3370,https://github.com/9ary,13,https://github.com/i3/i3/pull/3370#issuecomment-415102257,"Some applications request iconic state when they lose focus. One notable example is games running in Wine that use the Windows exclusive full-screen API.
While this is perfectly sound behavior on a floating window manager, we do not support the concept of iconized windows, so not only do we not handle this case, but there is also no sane way to escape that state. This leaves the aforementioned games in a paused state, with the contents reduced to a tiny corner of the window, and with no audio playing. The workaround, up until now, was to enable Wine's virtual desktop, but that is pretty inconvenient to use.
To remedy this, reset WM_STATE to a normal state when the window is focused. This allows the application to do whatever it wants to do while it's not focused (pause the game, let the GPU idle, etc), and avoids breaking it with a simple workspace switch.",Wine ticket: https://bugs.winehq.org/show_bug.cgi?id=45690,True,"{'THUMBS_UP': ['https://github.com/Airblader', 'https://github.com/psychon']}"
i3/i3,https://github.com/i3/i3,3370,2018-08-22T14:30:16Z,2018-08-22T16:30:04Z,2018-08-22T18:24:31Z,CLOSED,False,7,0,1,https://github.com/9ary,Set WM_STATE to normal when focusing a window,1,[],https://github.com/i3/i3/pull/3370,https://github.com/psychon,14,https://github.com/i3/i3/pull/3370#issuecomment-415130167,"Some applications request iconic state when they lose focus. One notable example is games running in Wine that use the Windows exclusive full-screen API.
While this is perfectly sound behavior on a floating window manager, we do not support the concept of iconized windows, so not only do we not handle this case, but there is also no sane way to escape that state. This leaves the aforementioned games in a paused state, with the contents reduced to a tiny corner of the window, and with no audio playing. The workaround, up until now, was to enable Wine's virtual desktop, but that is pretty inconvenient to use.
To remedy this, reset WM_STATE to a normal state when the window is focused. This allows the application to do whatever it wants to do while it's not focused (pause the game, let the GPU idle, etc), and avoids breaking it with a simple workspace switch.","Random guess: Wine has to stay windows-compatible and there minimisation cannot fail. Even if it could, I guess minimisation is synchronous, while wine asking for minimisation and waiting for the event can take time. Windows apps could ""detect"" this and misbehave.
I'd just handle WM_CHANGE_STATE by changing WM_STATE to Normal mode. This generates a PropertyNotify that clients can handle. It will ""look"" like the client was minimised for a short moment and then unminimised again before WM_STATE was queried.",True,{}
i3/i3,https://github.com/i3/i3,3370,2018-08-22T14:30:16Z,2018-08-22T16:30:04Z,2018-08-22T18:24:31Z,CLOSED,False,7,0,1,https://github.com/9ary,Set WM_STATE to normal when focusing a window,1,[],https://github.com/i3/i3/pull/3370,https://github.com/9ary,15,https://github.com/i3/i3/pull/3370#issuecomment-415131045,"Some applications request iconic state when they lose focus. One notable example is games running in Wine that use the Windows exclusive full-screen API.
While this is perfectly sound behavior on a floating window manager, we do not support the concept of iconized windows, so not only do we not handle this case, but there is also no sane way to escape that state. This leaves the aforementioned games in a paused state, with the contents reduced to a tiny corner of the window, and with no audio playing. The workaround, up until now, was to enable Wine's virtual desktop, but that is pretty inconvenient to use.
To remedy this, reset WM_STATE to a normal state when the window is focused. This allows the application to do whatever it wants to do while it's not focused (pause the game, let the GPU idle, etc), and avoids breaking it with a simple workspace switch.","I did try this already, but it will sometimes fail to properly unminimize (probably a race condition).
Let's wait for an answer on the wine ticket.",True,{}
i3/i3,https://github.com/i3/i3,3372,2018-08-23T12:46:47Z,2018-08-24T07:43:21Z,2018-08-27T20:33:54Z,MERGED,True,459,224,13,https://github.com/orestisfl,Resize tile px,11,[],https://github.com/i3/i3/pull/3372,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3372,"Support for resize grow|shrink left|right|up|down <px> px (#3240)
Support for resize grow|shrink width|height <px> px
Support for resize set <px> px
More accurate resize set <ppt> ppt

Fixes #3239
Closes #3240","Support for resize grow|shrink left|right|up|down <px> px (#3240)
Support for resize grow|shrink width|height <px> px
Support for resize set <px> px
More accurate resize set <ppt> ppt

Fixes #3239
Closes #3240",True,"{'HEART': ['https://github.com/JMendyk', 'https://github.com/michaelnew', 'https://github.com/ow97', 'https://github.com/victorluft', 'https://github.com/FichteFoll']}"
i3/i3,https://github.com/i3/i3,3372,2018-08-23T12:46:47Z,2018-08-24T07:43:21Z,2018-08-27T20:33:54Z,MERGED,True,459,224,13,https://github.com/orestisfl,Resize tile px,11,[],https://github.com/i3/i3/pull/3372,https://github.com/andrewla,2,https://github.com/i3/i3/pull/3372#issuecomment-416359199,"Support for resize grow|shrink left|right|up|down <px> px (#3240)
Support for resize grow|shrink width|height <px> px
Support for resize set <px> px
More accurate resize set <ppt> ppt

Fixes #3239
Closes #3240","Thanks for picking this up, @orestisf1993!",True,{}
i3/i3,https://github.com/i3/i3,3374,2018-08-25T11:56:11Z,2018-08-27T09:19:27Z,2018-08-27T13:51:41Z,MERGED,True,31,0,3,https://github.com/orestisfl,Support startup-notification in i3-nagbar & i3-config-wizard,2,[],https://github.com/i3/i3/pull/3374,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3374,"The default i3 config uses the exec command without --no-startup-id to launch:

i3-nagbar 
  
    
      i3/etc/config
    
    
         Line 150
      in
      4cba9fc
    
  
  
    

        
          
           bindsym Mod1+Shift+e exec ""i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"" 
        
    
  


i3-config-wizard 
  
    
      i3/etc/config
    
    
         Line 194
      in
      4cba9fc
    
  
  
    

        
          
           exec i3-config-wizard 
        
    
  



A user that opens i3 for the first time will be greeted with a ""loading"" cursor because of i3-config-wizard.","The default i3 config uses the exec command without --no-startup-id to launch:

i3-nagbar 
  
    
      i3/etc/config
    
    
         Line 150
      in
      4cba9fc
    
  
  
    

        
          
           bindsym Mod1+Shift+e exec ""i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"" 
        
    
  


i3-config-wizard 
  
    
      i3/etc/config
    
    
         Line 194
      in
      4cba9fc
    
  
  
    

        
          
           exec i3-config-wizard 
        
    
  



A user that opens i3 for the first time will be greeted with a ""loading"" cursor because of i3-config-wizard.",True,{}
i3/i3,https://github.com/i3/i3,3374,2018-08-25T11:56:11Z,2018-08-27T09:19:27Z,2018-08-27T13:51:41Z,MERGED,True,31,0,3,https://github.com/orestisfl,Support startup-notification in i3-nagbar & i3-config-wizard,2,[],https://github.com/i3/i3/pull/3374,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3374#issuecomment-416167562,"The default i3 config uses the exec command without --no-startup-id to launch:

i3-nagbar 
  
    
      i3/etc/config
    
    
         Line 150
      in
      4cba9fc
    
  
  
    

        
          
           bindsym Mod1+Shift+e exec ""i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"" 
        
    
  


i3-config-wizard 
  
    
      i3/etc/config
    
    
         Line 194
      in
      4cba9fc
    
  
  
    

        
          
           exec i3-config-wizard 
        
    
  



A user that opens i3 for the first time will be greeted with a ""loading"" cursor because of i3-config-wizard.","Cool, thanks :-)",True,{}
i3/i3,https://github.com/i3/i3,3375,2018-08-27T19:24:14Z,2018-08-28T08:20:46Z,2018-08-28T08:22:31Z,MERGED,True,5,3,1,https://github.com/orestisfl,ipc_client_timeout: Fix build when not on linux,1,[],https://github.com/i3/i3/pull/3375,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3375,,,True,{}
i3/i3,https://github.com/i3/i3,3376,2018-08-28T07:42:58Z,2018-08-28T11:30:58Z,2018-08-28T11:38:01Z,MERGED,True,20,0,2,https://github.com/orestisfl,Don't disable floating in internal workspaces,1,[],https://github.com/i3/i3/pull/3376,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3376,,,True,{}
i3/i3,https://github.com/i3/i3,3376,2018-08-28T07:42:58Z,2018-08-28T11:30:58Z,2018-08-28T11:38:01Z,MERGED,True,20,0,2,https://github.com/orestisfl,Don't disable floating in internal workspaces,1,[],https://github.com/i3/i3/pull/3376,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3376#issuecomment-416494389,,Travis is unhappy with the formatting :-),True,{}
i3/i3,https://github.com/i3/i3,3376,2018-08-28T07:42:58Z,2018-08-28T11:30:58Z,2018-08-28T11:38:01Z,MERGED,True,20,0,2,https://github.com/orestisfl,Don't disable floating in internal workspaces,1,[],https://github.com/i3/i3/pull/3376,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/3376#issuecomment-416497042,,up,True,{}
i3/i3,https://github.com/i3/i3,3379,2018-08-31T14:53:30Z,2018-08-31T14:59:09Z,2018-08-31T14:59:12Z,MERGED,True,1,1,1,https://github.com/stapelberg,configure.ac: fix AC_SEARCH_LIBS([shm_open]) for static linking,1,[],https://github.com/i3/i3/pull/3379,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3379,"Without specifying -pthread, the conftest fails and -lrt is missing during
compilation of i3, resulting in a failing build.","Without specifying -pthread, the conftest fails and -lrt is missing during
compilation of i3, resulting in a failing build.",True,{}
i3/i3,https://github.com/i3/i3,3386,2018-09-05T23:31:49Z,2018-09-16T13:48:37Z,2018-09-16T15:03:51Z,MERGED,True,5,8,1,https://github.com/orestisfl,"Fix ""relative_x"" and ""width"" of click events",1,[],https://github.com/i3/i3/pull/3386,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3386,"@shdown can you verify if this seems correct?
Fixes #3380.","@shdown can you verify if this seems correct?
Fixes #3380.",True,{}
i3/i3,https://github.com/i3/i3,3386,2018-09-05T23:31:49Z,2018-09-16T13:48:37Z,2018-09-16T15:03:51Z,MERGED,True,5,8,1,https://github.com/orestisfl,"Fix ""relative_x"" and ""width"" of click events",1,[],https://github.com/i3/i3/pull/3386,https://github.com/shdown,2,https://github.com/i3/i3/pull/3386#issuecomment-421751083,"@shdown can you verify if this seems correct?
Fixes #3380.","Yep, it’s correct. I’m sorry for the delay, though not sure why you could not check it yourself.",True,{}
i3/i3,https://github.com/i3/i3,3386,2018-09-05T23:31:49Z,2018-09-16T13:48:37Z,2018-09-16T15:03:51Z,MERGED,True,5,8,1,https://github.com/orestisfl,"Fix ""relative_x"" and ""width"" of click events",1,[],https://github.com/i3/i3/pull/3386,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/3386#issuecomment-421753239,"@shdown can you verify if this seems correct?
Fixes #3380.","Don't worry about the delay. I did check, just wanted to verify.",True,{}
i3/i3,https://github.com/i3/i3,3388,2018-09-06T00:44:02Z,2018-09-06T06:38:04Z,2018-09-06T09:17:09Z,MERGED,True,21,6,2,https://github.com/orestisfl,cmd_rename_workspace: correct order of events,2,[],https://github.com/i3/i3/pull/3388,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3388,Fixes #3248,Fixes #3248,True,{}
i3/i3,https://github.com/i3/i3,3389,2018-09-06T02:05:02Z,2018-09-06T06:41:01Z,2018-09-06T09:16:22Z,MERGED,True,34,15,3,https://github.com/orestisfl,Ensure containers have a size of at least 1px after resize,1,[],https://github.com/i3/i3/pull/3389,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3389,"Fixes #2226.
Fixes #2776.
Fixes #3241.
Related to #3194.","Fixes #2226.
Fixes #2776.
Fixes #3241.
Related to #3194.",True,{}
i3/i3,https://github.com/i3/i3,3390,2018-09-06T03:00:33Z,2018-09-06T06:38:54Z,2018-09-06T09:29:23Z,MERGED,True,14,4,2,https://github.com/orestisfl,resize set for tiling: default to px when not specified,1,[],https://github.com/i3/i3/pull/3390,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3390,,,True,{}
i3/i3,https://github.com/i3/i3,3391,2018-09-06T11:58:36Z,2018-09-06T12:15:55Z,2018-09-06T12:17:32Z,MERGED,True,7,0,1,https://github.com/orestisfl,tree_append_json: Allow strings that are not valid UTF8,2,[],https://github.com/i3/i3/pull/3391,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3391,,,True,{}
i3/i3,https://github.com/i3/i3,3394,2018-09-09T16:34:46Z,2018-09-10T07:00:55Z,2018-09-10T08:57:11Z,MERGED,True,55,20,5,https://github.com/orestisfl, libi3: validate UTF8 strings ,2,[],https://github.com/i3/i3/pull/3394,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3394,Fixes #3156.,Fixes #3156.,True,{}
i3/i3,https://github.com/i3/i3,3394,2018-09-09T16:34:46Z,2018-09-10T07:00:55Z,2018-09-10T08:57:11Z,MERGED,True,55,20,5,https://github.com/orestisfl, libi3: validate UTF8 strings ,2,[],https://github.com/i3/i3/pull/3394,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/3394#issuecomment-419730206,Fixes #3156.,"Nice, thanks!
Travis fails:
../../i3/libi3/string.c: In function 'i3string_from_utf8_with_length':
../../i3/libi3/string.c:62:32: error: comparison of unsigned expression < 0 is always false [-Werror=type-limits]
     str->num_bytes = num_bytes < 0 ? strlen(str->utf8) : num_bytes;

Could you eliminate this warning please?",True,{}
i3/i3,https://github.com/i3/i3,3394,2018-09-09T16:34:46Z,2018-09-10T07:00:55Z,2018-09-10T08:57:11Z,MERGED,True,55,20,5,https://github.com/orestisfl, libi3: validate UTF8 strings ,2,[],https://github.com/i3/i3/pull/3394,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/3394#issuecomment-419751874,Fixes #3156.,up,True,{}
i3/i3,https://github.com/i3/i3,3395,2018-09-10T20:36:25Z,2018-09-12T08:24:31Z,2018-09-12T08:24:31Z,MERGED,True,7,5,1,https://github.com/lousyd,clarify JSON standard non-compliance,1,[],https://github.com/i3/i3/pull/3395,https://github.com/lousyd,1,https://github.com/i3/i3/pull/3395,"Modified section on the layout file's non-compliance with the JSON
standard. The section previously stated that having multiple top-level
JSON texts is non-compliant. This isn't the case. It's just that most
JSON parsers will treat that as if it is non-compliant.","Modified section on the layout file's non-compliance with the JSON
standard. The section previously stated that having multiple top-level
JSON texts is non-compliant. This isn't the case. It's just that most
JSON parsers will treat that as if it is non-compliant.",True,{}
i3/i3,https://github.com/i3/i3,3395,2018-09-10T20:36:25Z,2018-09-12T08:24:31Z,2018-09-12T08:24:31Z,MERGED,True,7,5,1,https://github.com/lousyd,clarify JSON standard non-compliance,1,[],https://github.com/i3/i3/pull/3395,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3395#issuecomment-420558166,"Modified section on the layout file's non-compliance with the JSON
standard. The section previously stated that having multiple top-level
JSON texts is non-compliant. This isn't the case. It's just that most
JSON parsers will treat that as if it is non-compliant.",Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3396,2018-09-11T05:39:06Z,2018-09-12T08:24:07Z,2018-09-12T08:29:27Z,MERGED,True,82,99,3,https://github.com/orestisfl,commands.c: Improve error replies,1,[],https://github.com/i3/i3/pull/3396,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3396,,,True,{}
i3/i3,https://github.com/i3/i3,3397,2018-09-11T17:15:06Z,2018-11-10T20:56:34Z,2018-11-12T17:08:56Z,MERGED,True,42,70,5,https://github.com/orestisfl,Fix bugs in enabling & disabling randr outputs,4,[],https://github.com/i3/i3/pull/3397,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3397,"Since this is not testable (but bug-prone) I'd like to run it on my machine for a while.
Another bug: no workspace assignments, empty ws1 on Screen1, non-empty, focused ws2 on Screen2. Disable Screen2 => ws1 does not get deleted but ws2 is focused on Screen1.","Since this is not testable (but bug-prone) I'd like to run it on my machine for a while.
Another bug: no workspace assignments, empty ws1 on Screen1, non-empty, focused ws2 on Screen2. Disable Screen2 => ws1 does not get deleted but ws2 is focused on Screen1.",True,{}
i3/i3,https://github.com/i3/i3,3397,2018-09-11T17:15:06Z,2018-11-10T20:56:34Z,2018-11-12T17:08:56Z,MERGED,True,42,70,5,https://github.com/orestisfl,Fix bugs in enabling & disabling randr outputs,4,[],https://github.com/i3/i3/pull/3397,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3397#issuecomment-433407154,"Since this is not testable (but bug-prone) I'd like to run it on my machine for a while.
Another bug: no workspace assignments, empty ws1 on Screen1, non-empty, focused ws2 on Screen2. Disable Screen2 => ws1 does not get deleted but ws2 is focused on Screen1.",No problems with this so far,True,{}
i3/i3,https://github.com/i3/i3,3398,2018-09-12T11:14:25Z,2018-09-14T06:18:32Z,2018-09-14T09:21:20Z,MERGED,True,3,4,1,https://github.com/orestisfl,"i3-save-tree: Exclude unsupported ""transient_for"" property",1,[],https://github.com/i3/i3/pull/3398,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3398,,,True,{}
i3/i3,https://github.com/i3/i3,3399,2018-09-13T11:18:20Z,2018-09-14T06:19:01Z,2018-09-14T09:22:29Z,MERGED,True,81,105,1,https://github.com/orestisfl,Make t/156-fullscreen-focus.t easier to work with,1,[],https://github.com/i3/i3/pull/3399,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3399,,,True,{}
i3/i3,https://github.com/i3/i3,3400,2018-09-13T23:41:38Z,2018-09-20T08:36:22Z,2018-09-20T08:36:22Z,MERGED,True,110,0,5,https://github.com/Synray,Respect max size from WM_NORMAL_HINTS,1,[],https://github.com/i3/i3/pull/3400,https://github.com/Synray,1,https://github.com/i3/i3/pull/3400,"This change will only affect windows that would already qualify as ""dialog""
windows.
Some programs make optimizations based on the assumption that the window size
won't change, or don't properly handle resizes -- for example, quake freezes if
the window gets resized too often. Many OpenGL/Vulkan applications make similar
assumptions, since resizing means synchronizing, then recreating the swap chain
and the framebuffer.
This is my first contribution to i3 -- although I've used it since installing
Arch -- so if there is a better way or this is just a bad idea, please let me
know and I'll make the changes/drop it.","This change will only affect windows that would already qualify as ""dialog""
windows.
Some programs make optimizations based on the assumption that the window size
won't change, or don't properly handle resizes -- for example, quake freezes if
the window gets resized too often. Many OpenGL/Vulkan applications make similar
assumptions, since resizing means synchronizing, then recreating the swap chain
and the framebuffer.
This is my first contribution to i3 -- although I've used it since installing
Arch -- so if there is a better way or this is just a bad idea, please let me
know and I'll make the changes/drop it.",True,{}
i3/i3,https://github.com/i3/i3,3400,2018-09-13T23:41:38Z,2018-09-20T08:36:22Z,2018-09-20T08:36:22Z,MERGED,True,110,0,5,https://github.com/Synray,Respect max size from WM_NORMAL_HINTS,1,[],https://github.com/i3/i3/pull/3400,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3400#issuecomment-421244505,"This change will only affect windows that would already qualify as ""dialog""
windows.
Some programs make optimizations based on the assumption that the window size
won't change, or don't properly handle resizes -- for example, quake freezes if
the window gets resized too often. Many OpenGL/Vulkan applications make similar
assumptions, since resizing means synchronizing, then recreating the swap chain
and the framebuffer.
This is my first contribution to i3 -- although I've used it since installing
Arch -- so if there is a better way or this is just a bad idea, please let me
know and I'll make the changes/drop it.","Thanks for the PR! The code changes look totally fine to me. I would appreciate if we could add some tests for this as well. You can find an existing and for this useful test under testcases/t/221-floating-type-hints.t. I think it'd be better to create a new test file though which just tests the behavior and interaction of min/max dimensions in the various scenarios (mapped to floating, float later on, …).
If you can't / don't have time to get into that, @orestisf1993 might also be able to help out and push some tests here, I think.",True,{}
i3/i3,https://github.com/i3/i3,3400,2018-09-13T23:41:38Z,2018-09-20T08:36:22Z,2018-09-20T08:36:22Z,MERGED,True,110,0,5,https://github.com/Synray,Respect max size from WM_NORMAL_HINTS,1,[],https://github.com/i3/i3/pull/3400,https://github.com/Synray,3,https://github.com/i3/i3/pull/3400#issuecomment-421659167,"This change will only affect windows that would already qualify as ""dialog""
windows.
Some programs make optimizations based on the assumption that the window size
won't change, or don't properly handle resizes -- for example, quake freezes if
the window gets resized too often. Many OpenGL/Vulkan applications make similar
assumptions, since resizing means synchronizing, then recreating the swap chain
and the framebuffer.
This is my first contribution to i3 -- although I've used it since installing
Arch -- so if there is a better way or this is just a bad idea, please let me
know and I'll make the changes/drop it.","I haven't written much in perl, but I'll look at the test cases, and see what I can do.",True,{}
i3/i3,https://github.com/i3/i3,3400,2018-09-13T23:41:38Z,2018-09-20T08:36:22Z,2018-09-20T08:36:22Z,MERGED,True,110,0,5,https://github.com/Synray,Respect max size from WM_NORMAL_HINTS,1,[],https://github.com/i3/i3/pull/3400,https://github.com/Airblader,4,https://github.com/i3/i3/pull/3400#issuecomment-421729898,"This change will only affect windows that would already qualify as ""dialog""
windows.
Some programs make optimizations based on the assumption that the window size
won't change, or don't properly handle resizes -- for example, quake freezes if
the window gets resized too often. Many OpenGL/Vulkan applications make similar
assumptions, since resizing means synchronizing, then recreating the swap chain
and the framebuffer.
This is my first contribution to i3 -- although I've used it since installing
Arch -- so if there is a better way or this is just a bad idea, please let me
know and I'll make the changes/drop it.","Awesome, thanks! If you have trouble with that just let us know.",True,{}
i3/i3,https://github.com/i3/i3,3400,2018-09-13T23:41:38Z,2018-09-20T08:36:22Z,2018-09-20T08:36:22Z,MERGED,True,110,0,5,https://github.com/Synray,Respect max size from WM_NORMAL_HINTS,1,[],https://github.com/i3/i3/pull/3400,https://github.com/Synray,5,https://github.com/i3/i3/pull/3400#issuecomment-421933501,"This change will only affect windows that would already qualify as ""dialog""
windows.
Some programs make optimizations based on the assumption that the window size
won't change, or don't properly handle resizes -- for example, quake freezes if
the window gets resized too often. Many OpenGL/Vulkan applications make similar
assumptions, since resizing means synchronizing, then recreating the swap chain
and the framebuffer.
This is my first contribution to i3 -- although I've used it since installing
Arch -- so if there is a better way or this is just a bad idea, please let me
know and I'll make the changes/drop it.","I pushed my initial work on some tests. I'm having trouble figuring out why tests 5-6 fail.
Tests 5 and 6 resize set a floating window to exactly its requested max_width and max_height.
I think somewhere in the code, the floating window's width gets subtracted by border_width.
Or am I just using cmd 'resize' wrong?",True,{}
i3/i3,https://github.com/i3/i3,3400,2018-09-13T23:41:38Z,2018-09-20T08:36:22Z,2018-09-20T08:36:22Z,MERGED,True,110,0,5,https://github.com/Synray,Respect max size from WM_NORMAL_HINTS,1,[],https://github.com/i3/i3/pull/3400,https://github.com/Airblader,6,https://github.com/i3/i3/pull/3400#issuecomment-422030140,"This change will only affect windows that would already qualify as ""dialog""
windows.
Some programs make optimizations based on the assumption that the window size
won't change, or don't properly handle resizes -- for example, quake freezes if
the window gets resized too often. Many OpenGL/Vulkan applications make similar
assumptions, since resizing means synchronizing, then recreating the swap chain
and the framebuffer.
This is my first contribution to i3 -- although I've used it since installing
Arch -- so if there is a better way or this is just a bad idea, please let me
know and I'll make the changes/drop it.",@orestisf1993 Can you help @Synray out here? I'm in pre-vacation stress right now. Feel free to merge it as well once done!,True,{}
i3/i3,https://github.com/i3/i3,3400,2018-09-13T23:41:38Z,2018-09-20T08:36:22Z,2018-09-20T08:36:22Z,MERGED,True,110,0,5,https://github.com/Synray,Respect max size from WM_NORMAL_HINTS,1,[],https://github.com/i3/i3/pull/3400,https://github.com/orestisfl,7,https://github.com/i3/i3/pull/3400#issuecomment-422034426,"This change will only affect windows that would already qualify as ""dialog""
windows.
Some programs make optimizations based on the assumption that the window size
won't change, or don't properly handle resizes -- for example, quake freezes if
the window gets resized too often. Many OpenGL/Vulkan applications make similar
assumptions, since resizing means synchronizing, then recreating the swap chain
and the framebuffer.
This is my first contribution to i3 -- although I've used it since installing
Arch -- so if there is a better way or this is just a bad idea, please let me
know and I'll make the changes/drop it.","I've been investigating this for a bit. Don't know if I'll have time to solve this in the next couple of days though.
Have a nice vacation ;)",True,{}
i3/i3,https://github.com/i3/i3,3400,2018-09-13T23:41:38Z,2018-09-20T08:36:22Z,2018-09-20T08:36:22Z,MERGED,True,110,0,5,https://github.com/Synray,Respect max size from WM_NORMAL_HINTS,1,[],https://github.com/i3/i3/pull/3400,https://github.com/Synray,8,https://github.com/i3/i3/pull/3400#issuecomment-422111638,"This change will only affect windows that would already qualify as ""dialog""
windows.
Some programs make optimizations based on the assumption that the window size
won't change, or don't properly handle resizes -- for example, quake freezes if
the window gets resized too often. Many OpenGL/Vulkan applications make similar
assumptions, since resizing means synchronizing, then recreating the swap chain
and the framebuffer.
This is my first contribution to i3 -- although I've used it since installing
Arch -- so if there is a better way or this is just a bad idea, please let me
know and I'll make the changes/drop it.","@Airblader Have fun :)
@orestisf1993 It's also likely that I'm misunderstanding perl, since I've just started reading through ""Modern Perl"" yesterday. I'll keep working on it but if you figure it out please let me know, thanks!",True,{}
i3/i3,https://github.com/i3/i3,3400,2018-09-13T23:41:38Z,2018-09-20T08:36:22Z,2018-09-20T08:36:22Z,MERGED,True,110,0,5,https://github.com/Synray,Respect max size from WM_NORMAL_HINTS,1,[],https://github.com/i3/i3/pull/3400,https://github.com/Airblader,9,https://github.com/i3/i3/pull/3400#issuecomment-422124907,"This change will only affect windows that would already qualify as ""dialog""
windows.
Some programs make optimizations based on the assumption that the window size
won't change, or don't properly handle resizes -- for example, quake freezes if
the window gets resized too often. Many OpenGL/Vulkan applications make similar
assumptions, since resizing means synchronizing, then recreating the swap chain
and the framebuffer.
This is my first contribution to i3 -- although I've used it since installing
Arch -- so if there is a better way or this is just a bad idea, please let me
know and I'll make the changes/drop it.","I'm also OK with merging this without tests given the small change, no reason to reject it over it. We can also open an issue to add tests for this later on.",True,{}
i3/i3,https://github.com/i3/i3,3400,2018-09-13T23:41:38Z,2018-09-20T08:36:22Z,2018-09-20T08:36:22Z,MERGED,True,110,0,5,https://github.com/Synray,Respect max size from WM_NORMAL_HINTS,1,[],https://github.com/i3/i3/pull/3400,https://github.com/orestisfl,10,https://github.com/i3/i3/pull/3400#issuecomment-422721616,"This change will only affect windows that would already qualify as ""dialog""
windows.
Some programs make optimizations based on the assumption that the window size
won't change, or don't properly handle resizes -- for example, quake freezes if
the window gets resized too often. Many OpenGL/Vulkan applications make similar
assumptions, since resizing means synchronizing, then recreating the swap chain
and the framebuffer.
This is my first contribution to i3 -- although I've used it since installing
Arch -- so if there is a better way or this is just a bad idea, please let me
know and I'll make the changes/drop it.","Or we could just test using border none like 189-floating-constraints.t does (@Synray btw move your tests there).
Then, open an issue about correcting calculations.",True,{}
i3/i3,https://github.com/i3/i3,3400,2018-09-13T23:41:38Z,2018-09-20T08:36:22Z,2018-09-20T08:36:22Z,MERGED,True,110,0,5,https://github.com/Synray,Respect max size from WM_NORMAL_HINTS,1,[],https://github.com/i3/i3/pull/3400,https://github.com/orestisfl,11,https://github.com/i3/i3/pull/3400#issuecomment-422819244,"This change will only affect windows that would already qualify as ""dialog""
windows.
Some programs make optimizations based on the assumption that the window size
won't change, or don't properly handle resizes -- for example, quake freezes if
the window gets resized too often. Many OpenGL/Vulkan applications make similar
assumptions, since resizing means synchronizing, then recreating the swap chain
and the framebuffer.
This is my first contribution to i3 -- although I've used it since installing
Arch -- so if there is a better way or this is just a bad idea, please let me
know and I'll make the changes/drop it.","The reason for the failure is actually fairly simple, resize set modifies the con's rect but your code puts restrictions on the window (as it should). I had a mental hiccup the other day because I didn't understand why the test didn't fail for the min restrictions but that's simple as well. Examples with border pixel 5, max size 500x500, min size 200x200:

resize set 1000 1000 means window size 990x990: window is reduced to the maximum of 500x500, con rect becomes 510x510
resize set 500 500 means window size 490x490: no correction
resize set 200 200 means window size 190x190: window is increased to minimum of 200x200, con rect become 210x210",True,{}
i3/i3,https://github.com/i3/i3,3400,2018-09-13T23:41:38Z,2018-09-20T08:36:22Z,2018-09-20T08:36:22Z,MERGED,True,110,0,5,https://github.com/Synray,Respect max size from WM_NORMAL_HINTS,1,[],https://github.com/i3/i3/pull/3400,https://github.com/Synray,12,https://github.com/i3/i3/pull/3400#issuecomment-423061509,"This change will only affect windows that would already qualify as ""dialog""
windows.
Some programs make optimizations based on the assumption that the window size
won't change, or don't properly handle resizes -- for example, quake freezes if
the window gets resized too often. Many OpenGL/Vulkan applications make similar
assumptions, since resizing means synchronizing, then recreating the swap chain
and the framebuffer.
This is my first contribution to i3 -- although I've used it since installing
Arch -- so if there is a better way or this is just a bad idea, please let me
know and I'll make the changes/drop it.","That makes much more sense. Thanks for clearing that up!
I moved the tests to 189-floating-constraints.t, anything I should add?",True,{}
i3/i3,https://github.com/i3/i3,3400,2018-09-13T23:41:38Z,2018-09-20T08:36:22Z,2018-09-20T08:36:22Z,MERGED,True,110,0,5,https://github.com/Synray,Respect max size from WM_NORMAL_HINTS,1,[],https://github.com/i3/i3/pull/3400,https://github.com/orestisfl,13,https://github.com/i3/i3/pull/3400#issuecomment-423094021,"This change will only affect windows that would already qualify as ""dialog""
windows.
Some programs make optimizations based on the assumption that the window size
won't change, or don't properly handle resizes -- for example, quake freezes if
the window gets resized too often. Many OpenGL/Vulkan applications make similar
assumptions, since resizing means synchronizing, then recreating the swap chain
and the framebuffer.
This is my first contribution to i3 -- although I've used it since installing
Arch -- so if there is a better way or this is just a bad idea, please let me
know and I'll make the changes/drop it.","Ok, made the changes myself. Thanks for your work!",True,{}
i3/i3,https://github.com/i3/i3,3401,2018-09-14T11:14:44Z,2018-09-14T11:29:08Z,2018-09-14T11:36:53Z,MERGED,True,3,2,1,https://github.com/orestisfl,dump-asy.pl: Include floating_nodes,1,[],https://github.com/i3/i3/pull/3401,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3401,,,True,{}
i3/i3,https://github.com/i3/i3,3403,2018-09-14T13:14:01Z,2018-09-14T13:17:14Z,2018-09-14T13:17:19Z,MERGED,True,27,6,2,https://github.com/orestisfl,_con_move_to_con: Move upwards only on CT_FLOATING_CON,1,[],https://github.com/i3/i3/pull/3403,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3403,Fixes #3402.,Fixes #3402.,True,{}
i3/i3,https://github.com/i3/i3,3407,2018-09-15T08:47:26Z,2019-10-15T11:47:25Z,2019-11-20T23:04:29Z,MERGED,True,724,185,17,https://github.com/orestisfl,tree_next refactor & enhancements,6,[],https://github.com/i3/i3/pull/3407,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3407,"Still needs some work but I'd like to confirm that you agree with the direction first.

Makes tree_next not recursive
Implements focus wrapping workspace (maybe focus wrapping output? maybe both?) - Fixes #2180
Implements focus next|prev sibling like (1.) in #2587 (comment) (Issue also requests move command, not implemented here)
Implements focus next|prev like (2.) in #2587 (comment)
Directional focus command now supports command criteria. This is needed for #1573.

TODO:

 Document focus wrapping workspace
 Test focus wrapping workspace
 More tests for focus wrapping in general. Especially force.
 Document focus next|prev
 Test focus next|prev
 Document focus next|prev sibling
 Test focus next|prev sibling
 Test <criteria> focus <direction>
 Improve commit messages
 Fix for #1573 was kinda a random thought, need to investigate if the solution is a good idea. If yes, add tests.
 Verify that the testsuite passes at each commit, not just the final one","Still needs some work but I'd like to confirm that you agree with the direction first.

Makes tree_next not recursive
Implements focus wrapping workspace (maybe focus wrapping output? maybe both?) - Fixes #2180
Implements focus next|prev sibling like (1.) in #2587 (comment) (Issue also requests move command, not implemented here)
Implements focus next|prev like (2.) in #2587 (comment)
Directional focus command now supports command criteria. This is needed for #1573.

TODO:

 Document focus wrapping workspace
 Test focus wrapping workspace
 More tests for focus wrapping in general. Especially force.
 Document focus next|prev
 Test focus next|prev
 Document focus next|prev sibling
 Test focus next|prev sibling
 Test <criteria> focus <direction>
 Improve commit messages
 Fix for #1573 was kinda a random thought, need to investigate if the solution is a good idea. If yes, add tests.
 Verify that the testsuite passes at each commit, not just the final one",True,"{'HEART': ['https://github.com/CyberShadow', 'https://github.com/Ferk']}"
i3/i3,https://github.com/i3/i3,3407,2018-09-15T08:47:26Z,2019-10-15T11:47:25Z,2019-11-20T23:04:29Z,MERGED,True,724,185,17,https://github.com/orestisfl,tree_next refactor & enhancements,6,[],https://github.com/i3/i3/pull/3407,https://github.com/susloparovdenis,2,https://github.com/i3/i3/pull/3407#issuecomment-465175502,"Still needs some work but I'd like to confirm that you agree with the direction first.

Makes tree_next not recursive
Implements focus wrapping workspace (maybe focus wrapping output? maybe both?) - Fixes #2180
Implements focus next|prev sibling like (1.) in #2587 (comment) (Issue also requests move command, not implemented here)
Implements focus next|prev like (2.) in #2587 (comment)
Directional focus command now supports command criteria. This is needed for #1573.

TODO:

 Document focus wrapping workspace
 Test focus wrapping workspace
 More tests for focus wrapping in general. Especially force.
 Document focus next|prev
 Test focus next|prev
 Document focus next|prev sibling
 Test focus next|prev sibling
 Test <criteria> focus <direction>
 Improve commit messages
 Fix for #1573 was kinda a random thought, need to investigate if the solution is a good idea. If yes, add tests.
 Verify that the testsuite passes at each commit, not just the final one",No movement? Really want this feature,True,"{'THUMBS_UP': ['https://github.com/SVMBrown', 'https://github.com/Ferk']}"
i3/i3,https://github.com/i3/i3,3407,2018-09-15T08:47:26Z,2019-10-15T11:47:25Z,2019-11-20T23:04:29Z,MERGED,True,724,185,17,https://github.com/orestisfl,tree_next refactor & enhancements,6,[],https://github.com/i3/i3/pull/3407,https://github.com/tbodt,3,https://github.com/i3/i3/pull/3407#issuecomment-471695211,"Still needs some work but I'd like to confirm that you agree with the direction first.

Makes tree_next not recursive
Implements focus wrapping workspace (maybe focus wrapping output? maybe both?) - Fixes #2180
Implements focus next|prev sibling like (1.) in #2587 (comment) (Issue also requests move command, not implemented here)
Implements focus next|prev like (2.) in #2587 (comment)
Directional focus command now supports command criteria. This is needed for #1573.

TODO:

 Document focus wrapping workspace
 Test focus wrapping workspace
 More tests for focus wrapping in general. Especially force.
 Document focus next|prev
 Test focus next|prev
 Document focus next|prev sibling
 Test focus next|prev sibling
 Test <criteria> focus <direction>
 Improve commit messages
 Fix for #1573 was kinda a random thought, need to investigate if the solution is a good idea. If yes, add tests.
 Verify that the testsuite passes at each commit, not just the final one",@stapelberg,True,{}
i3/i3,https://github.com/i3/i3,3407,2018-09-15T08:47:26Z,2019-10-15T11:47:25Z,2019-11-20T23:04:29Z,MERGED,True,724,185,17,https://github.com/orestisfl,tree_next refactor & enhancements,6,[],https://github.com/i3/i3/pull/3407,https://github.com/Airblader,4,https://github.com/i3/i3/pull/3407#issuecomment-471888927,"Still needs some work but I'd like to confirm that you agree with the direction first.

Makes tree_next not recursive
Implements focus wrapping workspace (maybe focus wrapping output? maybe both?) - Fixes #2180
Implements focus next|prev sibling like (1.) in #2587 (comment) (Issue also requests move command, not implemented here)
Implements focus next|prev like (2.) in #2587 (comment)
Directional focus command now supports command criteria. This is needed for #1573.

TODO:

 Document focus wrapping workspace
 Test focus wrapping workspace
 More tests for focus wrapping in general. Especially force.
 Document focus next|prev
 Test focus next|prev
 Document focus next|prev sibling
 Test focus next|prev sibling
 Test <criteria> focus <direction>
 Improve commit messages
 Fix for #1573 was kinda a random thought, need to investigate if the solution is a good idea. If yes, add tests.
 Verify that the testsuite passes at each commit, not just the final one",I think the person to tag is @orestisf1993 to see if he wants to continue with this. :-),True,{}
i3/i3,https://github.com/i3/i3,3407,2018-09-15T08:47:26Z,2019-10-15T11:47:25Z,2019-11-20T23:04:29Z,MERGED,True,724,185,17,https://github.com/orestisfl,tree_next refactor & enhancements,6,[],https://github.com/i3/i3/pull/3407,https://github.com/orestisfl,5,https://github.com/i3/i3/pull/3407#issuecomment-471947309,"Still needs some work but I'd like to confirm that you agree with the direction first.

Makes tree_next not recursive
Implements focus wrapping workspace (maybe focus wrapping output? maybe both?) - Fixes #2180
Implements focus next|prev sibling like (1.) in #2587 (comment) (Issue also requests move command, not implemented here)
Implements focus next|prev like (2.) in #2587 (comment)
Directional focus command now supports command criteria. This is needed for #1573.

TODO:

 Document focus wrapping workspace
 Test focus wrapping workspace
 More tests for focus wrapping in general. Especially force.
 Document focus next|prev
 Test focus next|prev
 Document focus next|prev sibling
 Test focus next|prev sibling
 Test <criteria> focus <direction>
 Improve commit messages
 Fix for #1573 was kinda a random thought, need to investigate if the solution is a good idea. If yes, add tests.
 Verify that the testsuite passes at each commit, not just the final one","I want to continue working on this later but:

I'd like to confirm that you agree with the direction first",True,{}
i3/i3,https://github.com/i3/i3,3407,2018-09-15T08:47:26Z,2019-10-15T11:47:25Z,2019-11-20T23:04:29Z,MERGED,True,724,185,17,https://github.com/orestisfl,tree_next refactor & enhancements,6,[],https://github.com/i3/i3/pull/3407,https://github.com/Airblader,6,https://github.com/i3/i3/pull/3407#issuecomment-472591799,"Still needs some work but I'd like to confirm that you agree with the direction first.

Makes tree_next not recursive
Implements focus wrapping workspace (maybe focus wrapping output? maybe both?) - Fixes #2180
Implements focus next|prev sibling like (1.) in #2587 (comment) (Issue also requests move command, not implemented here)
Implements focus next|prev like (2.) in #2587 (comment)
Directional focus command now supports command criteria. This is needed for #1573.

TODO:

 Document focus wrapping workspace
 Test focus wrapping workspace
 More tests for focus wrapping in general. Especially force.
 Document focus next|prev
 Test focus next|prev
 Document focus next|prev sibling
 Test focus next|prev sibling
 Test <criteria> focus <direction>
 Improve commit messages
 Fix for #1573 was kinda a random thought, need to investigate if the solution is a good idea. If yes, add tests.
 Verify that the testsuite passes at each commit, not just the final one","Yes, I think it's totally fine and amazing work. Of course we'll have to throughly test, but obviously you know that just as well. :-)",True,{}
i3/i3,https://github.com/i3/i3,3407,2018-09-15T08:47:26Z,2019-10-15T11:47:25Z,2019-11-20T23:04:29Z,MERGED,True,724,185,17,https://github.com/orestisfl,tree_next refactor & enhancements,6,[],https://github.com/i3/i3/pull/3407,https://github.com/stapelberg,7,https://github.com/i3/i3/pull/3407#issuecomment-472607018,"Still needs some work but I'd like to confirm that you agree with the direction first.

Makes tree_next not recursive
Implements focus wrapping workspace (maybe focus wrapping output? maybe both?) - Fixes #2180
Implements focus next|prev sibling like (1.) in #2587 (comment) (Issue also requests move command, not implemented here)
Implements focus next|prev like (2.) in #2587 (comment)
Directional focus command now supports command criteria. This is needed for #1573.

TODO:

 Document focus wrapping workspace
 Test focus wrapping workspace
 More tests for focus wrapping in general. Especially force.
 Document focus next|prev
 Test focus next|prev
 Document focus next|prev sibling
 Test focus next|prev sibling
 Test <criteria> focus <direction>
 Improve commit messages
 Fix for #1573 was kinda a random thought, need to investigate if the solution is a good idea. If yes, add tests.
 Verify that the testsuite passes at each commit, not just the final one","Not entirely sure if you’re asking me, but in case you are: I’m not attached to the current implementation, so no objection from my end on refactoring it. Ideally, this would be merged shortly after a new release to maximize testing from people running the next branch.",True,{}
i3/i3,https://github.com/i3/i3,3407,2018-09-15T08:47:26Z,2019-10-15T11:47:25Z,2019-11-20T23:04:29Z,MERGED,True,724,185,17,https://github.com/orestisfl,tree_next refactor & enhancements,6,[],https://github.com/i3/i3/pull/3407,https://github.com/orestisfl,8,https://github.com/i3/i3/pull/3407#issuecomment-541474713,"Still needs some work but I'd like to confirm that you agree with the direction first.

Makes tree_next not recursive
Implements focus wrapping workspace (maybe focus wrapping output? maybe both?) - Fixes #2180
Implements focus next|prev sibling like (1.) in #2587 (comment) (Issue also requests move command, not implemented here)
Implements focus next|prev like (2.) in #2587 (comment)
Directional focus command now supports command criteria. This is needed for #1573.

TODO:

 Document focus wrapping workspace
 Test focus wrapping workspace
 More tests for focus wrapping in general. Especially force.
 Document focus next|prev
 Test focus next|prev
 Document focus next|prev sibling
 Test focus next|prev sibling
 Test <criteria> focus <direction>
 Improve commit messages
 Fix for #1573 was kinda a random thought, need to investigate if the solution is a good idea. If yes, add tests.
 Verify that the testsuite passes at each commit, not just the final one",Ready,True,{}
i3/i3,https://github.com/i3/i3,3407,2018-09-15T08:47:26Z,2019-10-15T11:47:25Z,2019-11-20T23:04:29Z,MERGED,True,724,185,17,https://github.com/orestisfl,tree_next refactor & enhancements,6,[],https://github.com/i3/i3/pull/3407,https://github.com/orestisfl,9,https://github.com/i3/i3/pull/3407#issuecomment-541540851,"Still needs some work but I'd like to confirm that you agree with the direction first.

Makes tree_next not recursive
Implements focus wrapping workspace (maybe focus wrapping output? maybe both?) - Fixes #2180
Implements focus next|prev sibling like (1.) in #2587 (comment) (Issue also requests move command, not implemented here)
Implements focus next|prev like (2.) in #2587 (comment)
Directional focus command now supports command criteria. This is needed for #1573.

TODO:

 Document focus wrapping workspace
 Test focus wrapping workspace
 More tests for focus wrapping in general. Especially force.
 Document focus next|prev
 Test focus next|prev
 Document focus next|prev sibling
 Test focus next|prev sibling
 Test <criteria> focus <direction>
 Improve commit messages
 Fix for #1573 was kinda a random thought, need to investigate if the solution is a good idea. If yes, add tests.
 Verify that the testsuite passes at each commit, not just the final one","I had a dilemma about the behavior here:

Prohibit focus leaving the workspace in any case unless if get_tree_next's initial argument is a workspace. This is what this commit does (also i3-cycle).
Leave the workspace if no warp is possible (eg workspace with single container or focus right with V[a b c*]).


btw this might be inconsistent with the logic of the force option. With force, focus can leave the parent if the directional movement is different from the orientation (ie can't wrap). With workspace focus can't ever leave the workspace even if there are no targets to wrap to.
But, I believe this is what most people want in #2180 and the inconsistency is ok because workspaces are much bigger structures and restricting focus to be only inside them makes more sense.",True,{}
i3/i3,https://github.com/i3/i3,3407,2018-09-15T08:47:26Z,2019-10-15T11:47:25Z,2019-11-20T23:04:29Z,MERGED,True,724,185,17,https://github.com/orestisfl,tree_next refactor & enhancements,6,[],https://github.com/i3/i3/pull/3407,https://github.com/stapelberg,10,https://github.com/i3/i3/pull/3407#issuecomment-541752120,"Still needs some work but I'd like to confirm that you agree with the direction first.

Makes tree_next not recursive
Implements focus wrapping workspace (maybe focus wrapping output? maybe both?) - Fixes #2180
Implements focus next|prev sibling like (1.) in #2587 (comment) (Issue also requests move command, not implemented here)
Implements focus next|prev like (2.) in #2587 (comment)
Directional focus command now supports command criteria. This is needed for #1573.

TODO:

 Document focus wrapping workspace
 Test focus wrapping workspace
 More tests for focus wrapping in general. Especially force.
 Document focus next|prev
 Test focus next|prev
 Document focus next|prev sibling
 Test focus next|prev sibling
 Test <criteria> focus <direction>
 Improve commit messages
 Fix for #1573 was kinda a random thought, need to investigate if the solution is a good idea. If yes, add tests.
 Verify that the testsuite passes at each commit, not just the final one","I have not worked with this bit of code in a long time, so I don’t feel up to doing a review. If @Airblader can’t review it, I’m willing to step in, but be prepared for slow response times.",True,{}
i3/i3,https://github.com/i3/i3,3407,2018-09-15T08:47:26Z,2019-10-15T11:47:25Z,2019-11-20T23:04:29Z,MERGED,True,724,185,17,https://github.com/orestisfl,tree_next refactor & enhancements,6,[],https://github.com/i3/i3/pull/3407,https://github.com/Airblader,11,https://github.com/i3/i3/pull/3407#issuecomment-542154797,"Still needs some work but I'd like to confirm that you agree with the direction first.

Makes tree_next not recursive
Implements focus wrapping workspace (maybe focus wrapping output? maybe both?) - Fixes #2180
Implements focus next|prev sibling like (1.) in #2587 (comment) (Issue also requests move command, not implemented here)
Implements focus next|prev like (2.) in #2587 (comment)
Directional focus command now supports command criteria. This is needed for #1573.

TODO:

 Document focus wrapping workspace
 Test focus wrapping workspace
 More tests for focus wrapping in general. Especially force.
 Document focus next|prev
 Test focus next|prev
 Document focus next|prev sibling
 Test focus next|prev sibling
 Test <criteria> focus <direction>
 Improve commit messages
 Fix for #1573 was kinda a random thought, need to investigate if the solution is a good idea. If yes, add tests.
 Verify that the testsuite passes at each commit, not just the final one",I mainly assigned you as well because I figured this could well use two reviews. I'm also not very familiar with this code. :-),True,{}
i3/i3,https://github.com/i3/i3,3407,2018-09-15T08:47:26Z,2019-10-15T11:47:25Z,2019-11-20T23:04:29Z,MERGED,True,724,185,17,https://github.com/orestisfl,tree_next refactor & enhancements,6,[],https://github.com/i3/i3/pull/3407,https://github.com/stapelberg,12,https://github.com/i3/i3/pull/3407#issuecomment-542168392,"Still needs some work but I'd like to confirm that you agree with the direction first.

Makes tree_next not recursive
Implements focus wrapping workspace (maybe focus wrapping output? maybe both?) - Fixes #2180
Implements focus next|prev sibling like (1.) in #2587 (comment) (Issue also requests move command, not implemented here)
Implements focus next|prev like (2.) in #2587 (comment)
Directional focus command now supports command criteria. This is needed for #1573.

TODO:

 Document focus wrapping workspace
 Test focus wrapping workspace
 More tests for focus wrapping in general. Especially force.
 Document focus next|prev
 Test focus next|prev
 Document focus next|prev sibling
 Test focus next|prev sibling
 Test <criteria> focus <direction>
 Improve commit messages
 Fix for #1573 was kinda a random thought, need to investigate if the solution is a good idea. If yes, add tests.
 Verify that the testsuite passes at each commit, not just the final one",Testcase + community-testing sounds like the best strategy here. Let’s go ahead with it :),True,{'THUMBS_UP': ['https://github.com/Airblader']}
i3/i3,https://github.com/i3/i3,3407,2018-09-15T08:47:26Z,2019-10-15T11:47:25Z,2019-11-20T23:04:29Z,MERGED,True,724,185,17,https://github.com/orestisfl,tree_next refactor & enhancements,6,[],https://github.com/i3/i3/pull/3407,https://github.com/ia0,13,https://github.com/i3/i3/pull/3407#issuecomment-542903682,"Still needs some work but I'd like to confirm that you agree with the direction first.

Makes tree_next not recursive
Implements focus wrapping workspace (maybe focus wrapping output? maybe both?) - Fixes #2180
Implements focus next|prev sibling like (1.) in #2587 (comment) (Issue also requests move command, not implemented here)
Implements focus next|prev like (2.) in #2587 (comment)
Directional focus command now supports command criteria. This is needed for #1573.

TODO:

 Document focus wrapping workspace
 Test focus wrapping workspace
 More tests for focus wrapping in general. Especially force.
 Document focus next|prev
 Test focus next|prev
 Document focus next|prev sibling
 Test focus next|prev sibling
 Test <criteria> focus <direction>
 Improve commit messages
 Fix for #1573 was kinda a random thought, need to investigate if the solution is a good idea. If yes, add tests.
 Verify that the testsuite passes at each commit, not just the final one","I'm trying to find out how to have focusing and movement that respect container tree and outputs, but I can't. I found about focus_wrapping no and this PR which is why I'm asking here. I would like to know about the following questions in that order (see below for the definition of ""is it possible to have""):

Is it possible to have focus output left/right not wrap outputs? (see case 5 below)
Is it possible to have focus left/right not exit outputs? (see case 3 below)
Is it possible to have a border for stack and tab implicit containers? For vertical and horizontal containers we already have the ""indicator"" color as a hint. For stack and tab, if ""default_border"" is pixel, the border is not added the container is implicit. It only is when a second child is added.
Is it possible to have the ""indicator"" color for containers? Currently, when focusing a container with focus parent, all borders of all windows under the container have the ""child_border"" color.
Is it possible to have move parent and move child left/right/up/down? This is necessary for next question. (see cases 11 and 13 below)
Is it possible to have focus left/right/up/down not exit containers? In other words, focusing and movement should respect the tree structure. (see cases 6 and 12 below)
Is it possible to have focus left/right/up/down focus the container instead of its last active window? (see case 9 below)

Multiple outputs:
 1: H[a* b] c     {focus left}     H[a* b] c :no wrap (works with focus_wrapping no)
 2: H[a* b] c     {focus right}    H[a b*] c :focus inside container (works)
 3: H[a b*] c     {focus right}    H[a b*] c :no exit output (doesn't work)
 4: H[a b*] c {focus output right} H[a b] c* :focus between outputs (works)
 5: H[a b] c* {focus output right} H[a b] c* :no wrap output (doesn't work)
Single output:
 6: H[H[a b*] c]   {focus right}     H[H[a b*] c] :no exit container (doesn't work)
 7: H[H[a b*] c]   {focus parent}    H[H[a b]* c] :focus parent
 8: H[H[a b]* c]   {focus right}     H[H[a b] c*] :focus inside container (works)
 9: H[H[a b] c*]    {focus left}     H[H[a b]* c] :no automatic focus child (doesn't work)
10: H[H[a b]* c]   {focus child}     H[H[a b*] c] :focus last active child (works)
11: H[H[a b*] c]   {move parent}     H[H[a] b* c] :move parent (doesn't work)
12: H[H[a] b* c]    {move left}      H[b* H[a] c] :swap with left (doesn't work)
13: H[b* H[a] c] {move child right}  H[H[b* a] c] :insert in container (doesn't work)

The definition of ""is it possible to have"" is:

""is it possible to configure i3 such that"", if not
""would it make sense to implement"", if not
""is it possible to use the IPC interface to"", if not
""would it make sense to add the primitive commands that would be needed to"".

I care about questions 1 and 2. Questions 3 and 4 would be helpful to have. Questions 5 to 7 are for a more primitive, local, and strict mental model (i.e. easier to predict, less dependent of the global state, and without recursion).
Thanks a lot!",True,{}
i3/i3,https://github.com/i3/i3,3407,2018-09-15T08:47:26Z,2019-10-15T11:47:25Z,2019-11-20T23:04:29Z,MERGED,True,724,185,17,https://github.com/orestisfl,tree_next refactor & enhancements,6,[],https://github.com/i3/i3/pull/3407,https://github.com/al-caveman,14,https://github.com/i3/i3/pull/3407#issuecomment-553324335,"Still needs some work but I'd like to confirm that you agree with the direction first.

Makes tree_next not recursive
Implements focus wrapping workspace (maybe focus wrapping output? maybe both?) - Fixes #2180
Implements focus next|prev sibling like (1.) in #2587 (comment) (Issue also requests move command, not implemented here)
Implements focus next|prev like (2.) in #2587 (comment)
Directional focus command now supports command criteria. This is needed for #1573.

TODO:

 Document focus wrapping workspace
 Test focus wrapping workspace
 More tests for focus wrapping in general. Especially force.
 Document focus next|prev
 Test focus next|prev
 Document focus next|prev sibling
 Test focus next|prev sibling
 Test <criteria> focus <direction>
 Improve commit messages
 Fix for #1573 was kinda a random thought, need to investigate if the solution is a good idea. If yes, add tests.
 Verify that the testsuite passes at each commit, not just the final one","@orestisfl What do you think about changing the syntax from focus DIR sibling into focus sibling DIR?
I think it makes command parsing simpler when introducing variants focus VARIANT DIR in the future (e.g. #3859).
I think if you do this change from now (before it gets into stable), we will have a neater path in the future with less worries about hacking things around to maintain backwards compatibility.
But I am not sure.  Any thoughts?",True,{}
i3/i3,https://github.com/i3/i3,3407,2018-09-15T08:47:26Z,2019-10-15T11:47:25Z,2019-11-20T23:04:29Z,MERGED,True,724,185,17,https://github.com/orestisfl,tree_next refactor & enhancements,6,[],https://github.com/i3/i3/pull/3407,https://github.com/Airblader,15,https://github.com/i3/i3/pull/3407#issuecomment-553337584,"Still needs some work but I'd like to confirm that you agree with the direction first.

Makes tree_next not recursive
Implements focus wrapping workspace (maybe focus wrapping output? maybe both?) - Fixes #2180
Implements focus next|prev sibling like (1.) in #2587 (comment) (Issue also requests move command, not implemented here)
Implements focus next|prev like (2.) in #2587 (comment)
Directional focus command now supports command criteria. This is needed for #1573.

TODO:

 Document focus wrapping workspace
 Test focus wrapping workspace
 More tests for focus wrapping in general. Especially force.
 Document focus next|prev
 Test focus next|prev
 Document focus next|prev sibling
 Test focus next|prev sibling
 Test <criteria> focus <direction>
 Improve commit messages
 Fix for #1573 was kinda a random thought, need to investigate if the solution is a good idea. If yes, add tests.
 Verify that the testsuite passes at each commit, not just the final one",We can also consider using --xyz flags which can be position-independent.,True,{'THUMBS_UP': ['https://github.com/al-caveman']}
i3/i3,https://github.com/i3/i3,3407,2018-09-15T08:47:26Z,2019-10-15T11:47:25Z,2019-11-20T23:04:29Z,MERGED,True,724,185,17,https://github.com/orestisfl,tree_next refactor & enhancements,6,[],https://github.com/i3/i3/pull/3407,https://github.com/al-caveman,16,https://github.com/i3/i3/pull/3407#issuecomment-556523660,"Still needs some work but I'd like to confirm that you agree with the direction first.

Makes tree_next not recursive
Implements focus wrapping workspace (maybe focus wrapping output? maybe both?) - Fixes #2180
Implements focus next|prev sibling like (1.) in #2587 (comment) (Issue also requests move command, not implemented here)
Implements focus next|prev like (2.) in #2587 (comment)
Directional focus command now supports command criteria. This is needed for #1573.

TODO:

 Document focus wrapping workspace
 Test focus wrapping workspace
 More tests for focus wrapping in general. Especially force.
 Document focus next|prev
 Test focus next|prev
 Document focus next|prev sibling
 Test focus next|prev sibling
 Test <criteria> focus <direction>
 Improve commit messages
 Fix for #1573 was kinda a random thought, need to investigate if the solution is a good idea. If yes, add tests.
 Verify that the testsuite passes at each commit, not just the final one","Is it possible to:


Make the next/prev wrap around when we reach the end of the tile (as opposed to getting saturated at the last container as it is done now)?  I think this is more efficient as sometimes the shortest path is to wrap around?


Let next/prev continue shuffling containers to child stacked/tabbed containers, which would give the feeling that the hierarchical tabs/stacks are just tabs on the same level, just looking hierarchical?  Currently, all the child containers get the focus (as if mod+a is pressed).",True,{}
i3/i3,https://github.com/i3/i3,3408,2018-09-15T09:09:20Z,2018-09-19T12:42:29Z,2018-09-19T12:43:08Z,MERGED,True,35,51,2,https://github.com/orestisfl,match_matches_window: Check if focused->window exists,1,[],https://github.com/i3/i3/pull/3408,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3408,Fixes #3406.,Fixes #3406.,True,{}
i3/i3,https://github.com/i3/i3,3409,2018-09-15T10:30:04Z,2018-09-16T09:11:48Z,2018-09-16T10:05:17Z,MERGED,True,4,3,1,https://github.com/orestisfl,i3bar: Include sb_hoff_px only when needed,1,[],https://github.com/i3/i3/pull/3409,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3409,"Fixes #3404.
@vivien sounds good?","Fixes #3404.
@vivien sounds good?",True,{}
i3/i3,https://github.com/i3/i3,3409,2018-09-15T10:30:04Z,2018-09-16T09:11:48Z,2018-09-16T10:05:17Z,MERGED,True,4,3,1,https://github.com/orestisfl,i3bar: Include sb_hoff_px only when needed,1,[],https://github.com/i3/i3/pull/3409,https://github.com/vivien,2,https://github.com/i3/i3/pull/3409#issuecomment-421571907,"Fixes #3404.
@vivien sounds good?","If this patch fixes my example in #3404, this looks good to me!",True,{}
i3/i3,https://github.com/i3/i3,3410,2018-09-15T10:53:01Z,2018-09-17T14:06:28Z,2018-09-17T15:32:19Z,MERGED,True,2,1,1,https://github.com/orestisfl,docs/i3bar-protocol: Mention skipping blocks with empty full_text ,1,[],https://github.com/i3/i3/pull/3410,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3410,Closes #3405.,Closes #3405.,True,{}
i3/i3,https://github.com/i3/i3,3410,2018-09-15T10:53:01Z,2018-09-17T14:06:28Z,2018-09-17T15:32:19Z,MERGED,True,2,1,1,https://github.com/orestisfl,docs/i3bar-protocol: Mention skipping blocks with empty full_text ,1,[],https://github.com/i3/i3/pull/3410,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3410#issuecomment-421728904,Closes #3405.,"I'm not convinced that we should fix this in the code. Blocks with empty text being skipped has been the behavior eversince I've been with i3, and I do know that people rely on this to hide blocks (although maybe not in combination with min_width).
Opposed to the issue, I am not convinced that printing a space is all that bad to avoid this, so I wonder whether updating the documentation to mention skipping empty blocks would be less intrusive.
(This isn't a decision, just a thought)",True,{}
i3/i3,https://github.com/i3/i3,3410,2018-09-15T10:53:01Z,2018-09-17T14:06:28Z,2018-09-17T15:32:19Z,MERGED,True,2,1,1,https://github.com/orestisfl,docs/i3bar-protocol: Mention skipping blocks with empty full_text ,1,[],https://github.com/i3/i3/pull/3410,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/3410#issuecomment-421747687,Closes #3405.,"and I do know that people rely on this to hide blocks

Do people rely on empty text or do they completely exclude blocks from their output if they want to hide them?",True,{}
i3/i3,https://github.com/i3/i3,3410,2018-09-15T10:53:01Z,2018-09-17T14:06:28Z,2018-09-17T15:32:19Z,MERGED,True,2,1,1,https://github.com/orestisfl,docs/i3bar-protocol: Mention skipping blocks with empty full_text ,1,[],https://github.com/i3/i3/pull/3410,https://github.com/Airblader,4,https://github.com/i3/i3/pull/3410#issuecomment-421748434,Closes #3405.,"They rely on empty text because many status tools don't allow not printing the block conditionally. We could view this as a shortcoming of those tools, but it'd still make it a breaking change.
My current thoughts:

Skipping blocks with empty text is established behavior over many years now
Printing a space instead should be trivial in any tool
On the other hand, getting tools to entirely skip a block is much more effort and usually can't be done by the user themselves.
I find the current behavior even reasonable (though undocumented). Spacers are just one usecase for min_width (and not what min_width is intended for), but usually you'd wanna use it to avoid the block width changing when the value changes. But in those cases it probably makes total sense to not change the current behavior.

All in all that makes me strongly lean towards just documenting current behavior so it's part of the specification.",True,{'THUMBS_UP': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,3410,2018-09-15T10:53:01Z,2018-09-17T14:06:28Z,2018-09-17T15:32:19Z,MERGED,True,2,1,1,https://github.com/orestisfl,docs/i3bar-protocol: Mention skipping blocks with empty full_text ,1,[],https://github.com/i3/i3/pull/3410,https://github.com/orestisfl,5,https://github.com/i3/i3/pull/3410#issuecomment-421754192,Closes #3405.,Makes sense. I've updated the documentation. Do you want to also mention something under min_width?,True,{}
i3/i3,https://github.com/i3/i3,3410,2018-09-15T10:53:01Z,2018-09-17T14:06:28Z,2018-09-17T15:32:19Z,MERGED,True,2,1,1,https://github.com/orestisfl,docs/i3bar-protocol: Mention skipping blocks with empty full_text ,1,[],https://github.com/i3/i3/pull/3410,https://github.com/vivien,6,https://github.com/i3/i3/pull/3410#issuecomment-422063737,Closes #3405.,"OK that's fine with me then. Even though it is not that intuitive for a ""spacer"" block, it is now documented that one must provide at least one space character as full_text to add such block in the status line.",True,{}
i3/i3,https://github.com/i3/i3,3415,2018-09-20T10:06:44Z,2018-09-28T16:00:06Z,2018-09-28T16:06:37Z,MERGED,True,101,2,4,https://github.com/orestisfl,Provide g_utf8_make_valid if not available,2,[],https://github.com/i3/i3/pull/3415,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3415,,,True,{}
i3/i3,https://github.com/i3/i3,3415,2018-09-20T10:06:44Z,2018-09-28T16:00:06Z,2018-09-28T16:06:37Z,MERGED,True,101,2,4,https://github.com/orestisfl,Provide g_utf8_make_valid if not available,2,[],https://github.com/i3/i3/pull/3415,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3415#issuecomment-423144607,,"We usually try to stay away from conditional compilatiion. Is there a reason why we can't just update the required dependency version?
I think I'd like @stapelberg to weigh in on whether the conditional would be OK here.",True,{}
i3/i3,https://github.com/i3/i3,3415,2018-09-20T10:06:44Z,2018-09-28T16:00:06Z,2018-09-28T16:06:37Z,MERGED,True,101,2,4,https://github.com/orestisfl,Provide g_utf8_make_valid if not available,2,[],https://github.com/i3/i3/pull/3415,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/3415#issuecomment-423295841,,"glib 2.52 is not yet in Debian stable, so it’s not that widely available yet.
Could we copy the g_utf8_make_valid implementation and use it if glib is too old instead of disabling the feature? It’s not that big a function: https://sources.debian.org/src/glib2.0/2.56.1-2/glib/gutf8.c/?hl=1773#L1773",True,{'THUMBS_UP': ['https://github.com/Airblader']}
i3/i3,https://github.com/i3/i3,3415,2018-09-20T10:06:44Z,2018-09-28T16:00:06Z,2018-09-28T16:06:37Z,MERGED,True,101,2,4,https://github.com/orestisfl,Provide g_utf8_make_valid if not available,2,[],https://github.com/i3/i3/pull/3415,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/3415#issuecomment-423369136,,"I think copying LGPL code (instead of linking an external library) means that we should relicense as LGPL:

The precise terms and conditions for copying, distribution and modification follow. Pay close attention to the difference between a ""work based on the library"" and a ""work that uses the library"". The former contains code derived from the library, whereas the latter must be combined with the library in order to run.
…
These requirements apply to the modified work as a whole. If identifiable sections of that work are not derived from the Library, and can be reasonably considered independent and separate works in themselves, then this License, and its terms, do not apply to those sections when you distribute them as separate works. But when you distribute the same sections as part of a whole which is a work based on the Library, the distribution of the whole must be on the terms of this License, whose permissions for other licensees extend to the entire whole, and thus to each and every part regardless of who wrote it.",True,{}
i3/i3,https://github.com/i3/i3,3415,2018-09-20T10:06:44Z,2018-09-28T16:00:06Z,2018-09-28T16:06:37Z,MERGED,True,101,2,4,https://github.com/orestisfl,Provide g_utf8_make_valid if not available,2,[],https://github.com/i3/i3/pull/3415,https://github.com/stapelberg,5,https://github.com/i3/i3/pull/3415#issuecomment-423890668,,"IIUC, instead of copying the code in question into our source, we should re-distribute the code as a separate file, ideally as-is.
See also psf/requests#3389",True,{}
i3/i3,https://github.com/i3/i3,3415,2018-09-20T10:06:44Z,2018-09-28T16:00:06Z,2018-09-28T16:06:37Z,MERGED,True,101,2,4,https://github.com/orestisfl,Provide g_utf8_make_valid if not available,2,[],https://github.com/i3/i3/pull/3415,https://github.com/orestisfl,6,https://github.com/i3/i3/pull/3415#issuecomment-424074253,,"Ok, we certainly fulfill ""If identifiable sections of that work are not derived from the Library, and can be reasonably considered independent and separate works in themselves"" but I don't know if we ""distribute them as separate works"" by putting it in a separate file that gets compiled in our binary and is distributed with the rest of the project.
Anyway, I've pushed the function in a separate file, tell me if it looks ok to you.",True,{}
i3/i3,https://github.com/i3/i3,3415,2018-09-20T10:06:44Z,2018-09-28T16:00:06Z,2018-09-28T16:06:37Z,MERGED,True,101,2,4,https://github.com/orestisfl,Provide g_utf8_make_valid if not available,2,[],https://github.com/i3/i3/pull/3415,https://github.com/stapelberg,7,https://github.com/i3/i3/pull/3415#issuecomment-425483088,,"Yeah, this looks good, thanks! If it was wrong after all, we can always revert.",True,{}
i3/i3,https://github.com/i3/i3,3416,2018-09-20T16:46:55Z,2018-09-20T16:52:33Z,2018-09-20T16:55:02Z,MERGED,True,1,7,1,https://github.com/orestisfl,530-bug-229.t: Get rid of smartmatch,1,[],https://github.com/i3/i3/pull/3416,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3416,,,True,{}
i3/i3,https://github.com/i3/i3,3420,2018-09-23T14:27:52Z,2018-09-23T18:12:17Z,2018-09-23T19:32:01Z,MERGED,True,16,8,2,https://github.com/orestisfl,i3-nagbar & i3-config-wizard: check sncontext != NULL,1,[],https://github.com/i3/i3/pull/3420,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3420,Fixes #3419,Fixes #3419,True,{}
i3/i3,https://github.com/i3/i3,3421,2018-09-25T11:53:54Z,2018-09-26T07:07:17Z,2018-09-26T08:51:46Z,MERGED,True,13,0,2,https://github.com/9ary,Reject requests for WM_STATE_ICONIC,1,[],https://github.com/i3/i3/pull/3421,https://github.com/9ary,1,https://github.com/i3/i3/pull/3421,"For compatiblity reasons, Wine will request iconic state and cannot ensure that the WM has agreed on it; immediately revert to normal to avoid being stuck in a paused state.
This is a follow-up on #3370. As suggested by @psychon and discussed in the Wine bug report, I've moved this to the notification handler to immediately tell clients that we do not want them to iconize. I've also made it clear that this workaround is specific to Wine.","For compatiblity reasons, Wine will request iconic state and cannot ensure that the WM has agreed on it; immediately revert to normal to avoid being stuck in a paused state.
This is a follow-up on #3370. As suggested by @psychon and discussed in the Wine bug report, I've moved this to the notification handler to immediately tell clients that we do not want them to iconize. I've also made it clear that this workaround is specific to Wine.",True,{}
i3/i3,https://github.com/i3/i3,3421,2018-09-25T11:53:54Z,2018-09-26T07:07:17Z,2018-09-26T08:51:46Z,MERGED,True,13,0,2,https://github.com/9ary,Reject requests for WM_STATE_ICONIC,1,[],https://github.com/i3/i3/pull/3421,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3421#issuecomment-424320343,"For compatiblity reasons, Wine will request iconic state and cannot ensure that the WM has agreed on it; immediately revert to normal to avoid being stuck in a paused state.
This is a follow-up on #3370. As suggested by @psychon and discussed in the Wine bug report, I've moved this to the notification handler to immediately tell clients that we do not want them to iconize. I've also made it clear that this workaround is specific to Wine.","If Wine sends WM_CHANGE_STATE, which i3 currently doesn't claim to support in _NET_SUPPORTED, why doesn't Wine check whether the window manager even supports it and doesn't try to iconify the client in that case? This can be a completely synchronous check on Wine's side.",True,{}
i3/i3,https://github.com/i3/i3,3421,2018-09-25T11:53:54Z,2018-09-26T07:07:17Z,2018-09-26T08:51:46Z,MERGED,True,13,0,2,https://github.com/9ary,Reject requests for WM_STATE_ICONIC,1,[],https://github.com/i3/i3/pull/3421,https://github.com/9ary,3,https://github.com/i3/i3/pull/3421#issuecomment-424321778,"For compatiblity reasons, Wine will request iconic state and cannot ensure that the WM has agreed on it; immediately revert to normal to avoid being stuck in a paused state.
This is a follow-up on #3370. As suggested by @psychon and discussed in the Wine bug report, I've moved this to the notification handler to immediately tell clients that we do not want them to iconize. I've also made it clear that this workaround is specific to Wine.",This actually sounds pretty reasonable. I'll ask over there.,True,{}
i3/i3,https://github.com/i3/i3,3421,2018-09-25T11:53:54Z,2018-09-26T07:07:17Z,2018-09-26T08:51:46Z,MERGED,True,13,0,2,https://github.com/9ary,Reject requests for WM_STATE_ICONIC,1,[],https://github.com/i3/i3/pull/3421,https://github.com/psychon,4,https://github.com/i3/i3/pull/3421#issuecomment-424345925,"For compatiblity reasons, Wine will request iconic state and cannot ensure that the WM has agreed on it; immediately revert to normal to avoid being stuck in a paused state.
This is a follow-up on #3370. As suggested by @psychon and discussed in the Wine bug report, I've moved this to the notification handler to immediately tell clients that we do not want them to iconize. I've also made it clear that this workaround is specific to Wine.","@Airblader WM_CHANGE_STATE comes from ICCCM and not from EWMH. _NET_SUPPORTED comes from EWMH.
From ""Introduction"" / ""What is this spec?"" in EWMH:

[This spec] builds on the Inter-Client Communication Conventions Manual [ICCCM],

So, since this is not an EWMH-feature, you cannot expect it to be listed in _NET_SUPPORTED (and I bet nothing does so). Also, since this is an ICCCM-feature, i3 does not get to not support this and still claim to be a window manager (ICCCM is the greatest common denominator, afterwards there is just X11 left and nothing will work).
Sorry.",True,{}
i3/i3,https://github.com/i3/i3,3421,2018-09-25T11:53:54Z,2018-09-26T07:07:17Z,2018-09-26T08:51:46Z,MERGED,True,13,0,2,https://github.com/9ary,Reject requests for WM_STATE_ICONIC,1,[],https://github.com/i3/i3/pull/3421,https://github.com/Airblader,5,https://github.com/i3/i3/pull/3421#issuecomment-424393195,"For compatiblity reasons, Wine will request iconic state and cannot ensure that the WM has agreed on it; immediately revert to normal to avoid being stuck in a paused state.
This is a follow-up on #3370. As suggested by @psychon and discussed in the Wine bug report, I've moved this to the notification handler to immediately tell clients that we do not want them to iconize. I've also made it clear that this workaround is specific to Wine.","That's a good point. I guess we should also not add it to _NET_SUPPORTED then, though. I don't like workarounds for clients (it's not i3's fault that wine has to deal with Windows), but I guess in this case there isn't much harm in it either.
@Streetwalrus Do you think we could add a testcase for this, though?",True,{}
i3/i3,https://github.com/i3/i3,3421,2018-09-25T11:53:54Z,2018-09-26T07:07:17Z,2018-09-26T08:51:46Z,MERGED,True,13,0,2,https://github.com/9ary,Reject requests for WM_STATE_ICONIC,1,[],https://github.com/i3/i3/pull/3421,https://github.com/9ary,6,https://github.com/i3/i3/pull/3421#issuecomment-424473957,"For compatiblity reasons, Wine will request iconic state and cannot ensure that the WM has agreed on it; immediately revert to normal to avoid being stuck in a paused state.
This is a follow-up on #3370. As suggested by @psychon and discussed in the Wine bug report, I've moved this to the notification handler to immediately tell clients that we do not want them to iconize. I've also made it clear that this workaround is specific to Wine.","I'm not sure if this is testable. Besides the notification, there's no way to figure out what state the application is in as far as I know.
I don't really like the idea of fixing it in i3 either but I don't really see how it could be done on the Wine side.",True,{}
i3/i3,https://github.com/i3/i3,3421,2018-09-25T11:53:54Z,2018-09-26T07:07:17Z,2018-09-26T08:51:46Z,MERGED,True,13,0,2,https://github.com/9ary,Reject requests for WM_STATE_ICONIC,1,[],https://github.com/i3/i3/pull/3421,https://github.com/Airblader,7,https://github.com/i3/i3/pull/3421#issuecomment-424608779,"For compatiblity reasons, Wine will request iconic state and cannot ensure that the WM has agreed on it; immediately revert to normal to avoid being stuck in a paused state.
This is a follow-up on #3370. As suggested by @psychon and discussed in the Wine bug report, I've moved this to the notification handler to immediately tell clients that we do not want them to iconize. I've also made it clear that this workaround is specific to Wine.",Let's give it a go.,True,{}
i3/i3,https://github.com/i3/i3,3421,2018-09-25T11:53:54Z,2018-09-26T07:07:17Z,2018-09-26T08:51:46Z,MERGED,True,13,0,2,https://github.com/9ary,Reject requests for WM_STATE_ICONIC,1,[],https://github.com/i3/i3/pull/3421,https://github.com/9ary,8,https://github.com/i3/i3/pull/3421#issuecomment-424637633,"For compatiblity reasons, Wine will request iconic state and cannot ensure that the WM has agreed on it; immediately revert to normal to avoid being stuck in a paused state.
This is a follow-up on #3370. As suggested by @psychon and discussed in the Wine bug report, I've moved this to the notification handler to immediately tell clients that we do not want them to iconize. I've also made it clear that this workaround is specific to Wine.",Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3424,2018-09-26T17:06:29Z,2018-09-28T07:27:58Z,2018-10-02T10:19:52Z,MERGED,True,12,1,2,https://github.com/orestisfl,con_num_windows: Count floating windows,1,[],https://github.com/i3/i3/pull/3424,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3424,Fixes #3423.,Fixes #3423.,True,{}
i3/i3,https://github.com/i3/i3,3430,2018-09-29T00:40:59Z,2018-10-02T00:04:22Z,2018-10-02T00:30:17Z,MERGED,True,1,1,1,https://github.com/Synray,[RFC] Correctly calculate max_aspect,1,[],https://github.com/i3/i3/pull/3430,https://github.com/Synray,1,https://github.com/i3/i3/pull/3430,"Hello again,
This looks like a copy/paste error to me, and so it's a simple fix,
but I might be wrong about that.
It passes all tests, but just in case, should I write one?
Thanks","Hello again,
This looks like a copy/paste error to me, and so it's a simple fix,
but I might be wrong about that.
It passes all tests, but just in case, should I write one?
Thanks",True,{}
i3/i3,https://github.com/i3/i3,3430,2018-09-29T00:40:59Z,2018-10-02T00:04:22Z,2018-10-02T00:30:17Z,MERGED,True,1,1,1,https://github.com/Synray,[RFC] Correctly calculate max_aspect,1,[],https://github.com/i3/i3/pull/3430,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3430#issuecomment-426107495,"Hello again,
This looks like a copy/paste error to me, and so it's a simple fix,
but I might be wrong about that.
It passes all tests, but just in case, should I write one?
Thanks","Thanks, tests and more stuff in #3432",True,{}
i3/i3,https://github.com/i3/i3,3432,2018-10-01T23:45:15Z,2018-11-17T15:08:23Z,2018-11-17T15:11:44Z,MERGED,True,338,263,15,https://github.com/orestisfl, Fix aspect ratio bugs,5,[],https://github.com/i3/i3/pull/3432,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3432,,,True,{}
i3/i3,https://github.com/i3/i3,3432,2018-10-01T23:45:15Z,2018-11-17T15:08:23Z,2018-11-17T15:11:44Z,MERGED,True,338,263,15,https://github.com/orestisfl, Fix aspect ratio bugs,5,[],https://github.com/i3/i3/pull/3432,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3432#issuecomment-426103666,,I think the failed tests are related to stapelberg/X11-XCB@1777f2e,True,{}
i3/i3,https://github.com/i3/i3,3432,2018-10-01T23:45:15Z,2018-11-17T15:08:23Z,2018-11-17T15:11:44Z,MERGED,True,338,263,15,https://github.com/orestisfl, Fix aspect ratio bugs,5,[],https://github.com/i3/i3/pull/3432,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/3432#issuecomment-427795066,,"Pretty sure X11::XCB still sends junk:
#   Failed test 'Window width is 100px'
#   at /usr/src/i3/build/../../i3/testcases/t/133-size-hints.t line 98.
#          got: '28016'
#     expected: '100'

Anything we need to do to update the module for travis?",True,{}
i3/i3,https://github.com/i3/i3,3432,2018-10-01T23:45:15Z,2018-11-17T15:08:23Z,2018-11-17T15:11:44Z,MERGED,True,338,263,15,https://github.com/orestisfl, Fix aspect ratio bugs,5,[],https://github.com/i3/i3/pull/3432,https://github.com/Airblader,4,https://github.com/i3/i3/pull/3432#issuecomment-432245577,,What's the status here now?,True,{}
i3/i3,https://github.com/i3/i3,3432,2018-10-01T23:45:15Z,2018-11-17T15:08:23Z,2018-11-17T15:11:44Z,MERGED,True,338,263,15,https://github.com/orestisfl, Fix aspect ratio bugs,5,[],https://github.com/i3/i3/pull/3432,https://github.com/orestisfl,5,https://github.com/i3/i3/pull/3432#issuecomment-432251919,,Travis now passed,True,{}
i3/i3,https://github.com/i3/i3,3432,2018-10-01T23:45:15Z,2018-11-17T15:08:23Z,2018-11-17T15:11:44Z,MERGED,True,338,263,15,https://github.com/orestisfl, Fix aspect ratio bugs,5,[],https://github.com/i3/i3/pull/3432,https://github.com/Airblader,6,https://github.com/i3/i3/pull/3432#issuecomment-437620917,,@orestisf1993 Can you rebase to resolve the conflicts? Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3432,2018-10-01T23:45:15Z,2018-11-17T15:08:23Z,2018-11-17T15:11:44Z,MERGED,True,338,263,15,https://github.com/orestisfl, Fix aspect ratio bugs,5,[],https://github.com/i3/i3/pull/3432,https://github.com/orestisfl,7,https://github.com/i3/i3/pull/3432#issuecomment-437959523,,up,True,{}
i3/i3,https://github.com/i3/i3,3433,2018-10-02T00:03:20Z,2018-10-23T13:27:51Z,2018-10-23T13:32:35Z,MERGED,True,126,136,46,https://github.com/orestisfl,Janitorial,12,[],https://github.com/i3/i3/pull/3433,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3433,,,True,{}
i3/i3,https://github.com/i3/i3,3434,2018-10-02T10:05:08Z,2018-10-07T18:24:09Z,2018-10-07T18:59:54Z,MERGED,True,27,8,2,https://github.com/orestisfl,userguide: Mention know issues for assign,1,[],https://github.com/i3/i3/pull/3434,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3434,"Fixes #3222
Fixes #3293
Related to #2060","Fixes #3222
Fixes #3293
Related to #2060",True,{}
i3/i3,https://github.com/i3/i3,3435,2018-10-03T03:52:02Z,2018-10-05T09:16:05Z,2018-10-05T16:11:29Z,MERGED,True,51,11,2,https://github.com/vivien,i3-msg/subscribe,2,[],https://github.com/i3/i3/pull/3435,https://github.com/vivien,1,https://github.com/i3/i3/pull/3435,"This PR implements the support for the SUBSCRIBE message type in i3-msg. This allows trivial scripts to use i3-msg to listen to i3 events such as workspace changes, focused windows, etc. The -t SUBSCRIBE option allows to subscribe to the specified payload. A new -m option allows to monitor indefinitely the subscribed events instead of returning right away (similarly to inotifywait).
Here are a few simple examples made possible with this new addition.
Wait until the next workspace is focused and return its number:
i3-msg -t subscribe '[ ""workspace"" ]' | jshon -e current -e num

Add a simple bar in the i3 configuration file printing the focused window name:
bar {
  position top
  status_command i3-msg -t subscribe -m '[ ""window"" ]' | \
      jq --unbuffered '""Window title: \(.container.name)""'
}","This PR implements the support for the SUBSCRIBE message type in i3-msg. This allows trivial scripts to use i3-msg to listen to i3 events such as workspace changes, focused windows, etc. The -t SUBSCRIBE option allows to subscribe to the specified payload. A new -m option allows to monitor indefinitely the subscribed events instead of returning right away (similarly to inotifywait).
Here are a few simple examples made possible with this new addition.
Wait until the next workspace is focused and return its number:
i3-msg -t subscribe '[ ""workspace"" ]' | jshon -e current -e num

Add a simple bar in the i3 configuration file printing the focused window name:
bar {
  position top
  status_command i3-msg -t subscribe -m '[ ""window"" ]' | \
      jq --unbuffered '""Window title: \(.container.name)""'
}",True,{}
i3/i3,https://github.com/i3/i3,3435,2018-10-03T03:52:02Z,2018-10-05T09:16:05Z,2018-10-05T16:11:29Z,MERGED,True,51,11,2,https://github.com/vivien,i3-msg/subscribe,2,[],https://github.com/i3/i3/pull/3435,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3435#issuecomment-427222473,"This PR implements the support for the SUBSCRIBE message type in i3-msg. This allows trivial scripts to use i3-msg to listen to i3 events such as workspace changes, focused windows, etc. The -t SUBSCRIBE option allows to subscribe to the specified payload. A new -m option allows to monitor indefinitely the subscribed events instead of returning right away (similarly to inotifywait).
Here are a few simple examples made possible with this new addition.
Wait until the next workspace is focused and return its number:
i3-msg -t subscribe '[ ""workspace"" ]' | jshon -e current -e num

Add a simple bar in the i3 configuration file printing the focused window name:
bar {
  position top
  status_command i3-msg -t subscribe -m '[ ""window"" ]' | \
      jq --unbuffered '""Window title: \(.container.name)""'
}","Since I'm on vacation I can't look at it in detail, but I don't like the terminology too much. We call it subscribe in the IPC, not monitor, so I'd somewhat like to avoid creating a new term for it, especially one not used by other tools (spy, watch).
I realize that ""s"" is taken, but couldn't we use longopts and do --subscribe?",True,{}
i3/i3,https://github.com/i3/i3,3435,2018-10-03T03:52:02Z,2018-10-05T09:16:05Z,2018-10-05T16:11:29Z,MERGED,True,51,11,2,https://github.com/vivien,i3-msg/subscribe,2,[],https://github.com/i3/i3/pull/3435,https://github.com/vivien,3,https://github.com/i3/i3/pull/3435#issuecomment-427231623,"This PR implements the support for the SUBSCRIBE message type in i3-msg. This allows trivial scripts to use i3-msg to listen to i3 events such as workspace changes, focused windows, etc. The -t SUBSCRIBE option allows to subscribe to the specified payload. A new -m option allows to monitor indefinitely the subscribed events instead of returning right away (similarly to inotifywait).
Here are a few simple examples made possible with this new addition.
Wait until the next workspace is focused and return its number:
i3-msg -t subscribe '[ ""workspace"" ]' | jshon -e current -e num

Add a simple bar in the i3 configuration file printing the focused window name:
bar {
  position top
  status_command i3-msg -t subscribe -m '[ ""window"" ]' | \
      jq --unbuffered '""Window title: \(.container.name)""'
}","""--subscribe” would be confusing since it would make a user think about a
shortcut for “-t subscribe”. -m / monitor means listen forever (basically
-t subscribe in a while loop) and is a common option in tools like
inotifywait or dbus. That being said, this is your call!",True,{}
i3/i3,https://github.com/i3/i3,3435,2018-10-03T03:52:02Z,2018-10-05T09:16:05Z,2018-10-05T16:11:29Z,MERGED,True,51,11,2,https://github.com/vivien,i3-msg/subscribe,2,[],https://github.com/i3/i3/pull/3435,https://github.com/Airblader,4,https://github.com/i3/i3/pull/3435#issuecomment-427232321,"This PR implements the support for the SUBSCRIBE message type in i3-msg. This allows trivial scripts to use i3-msg to listen to i3 events such as workspace changes, focused windows, etc. The -t SUBSCRIBE option allows to subscribe to the specified payload. A new -m option allows to monitor indefinitely the subscribed events instead of returning right away (similarly to inotifywait).
Here are a few simple examples made possible with this new addition.
Wait until the next workspace is focused and return its number:
i3-msg -t subscribe '[ ""workspace"" ]' | jshon -e current -e num

Add a simple bar in the i3 configuration file printing the focused window name:
bar {
  position top
  status_command i3-msg -t subscribe -m '[ ""window"" ]' | \
      jq --unbuffered '""Window title: \(.container.name)""'
}","Yes, that's a good point. Let's keep it this way then.",True,{}
i3/i3,https://github.com/i3/i3,3436,2018-10-03T12:33:23Z,2018-10-07T18:26:38Z,2018-10-07T18:59:08Z,MERGED,True,4,3,1,https://github.com/orestisfl,resolve_tilde: strncpy + strlen is pointless,1,[],https://github.com/i3/i3/pull/3436,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3436,i3/i3status#312,i3/i3status#312,True,{}
i3/i3,https://github.com/i3/i3,3438,2018-10-06T18:38:50Z,2018-12-09T18:22:50Z,2018-12-10T17:19:57Z,CLOSED,False,51,3,1,https://github.com/ndvanforeest,documentation for 4k monitors,3,['waiting'],https://github.com/i3/i3/pull/3438,https://github.com/ndvanforeest,1,https://github.com/i3/i3/pull/3438,"Just after connecting my 4K monitor there was somewhat of a surprise. As I didn't change the relevant settings, the letters were nearly too small to read. Some searching on the web helped my find how to solve the problem. I updated the userguide so that other people may be spared the effort.","Just after connecting my 4K monitor there was somewhat of a surprise. As I didn't change the relevant settings, the letters were nearly too small to read. Some searching on the web helped my find how to solve the problem. I updated the userguide so that other people may be spared the effort.",True,{}
i3/i3,https://github.com/i3/i3,3438,2018-10-06T18:38:50Z,2018-12-09T18:22:50Z,2018-12-10T17:19:57Z,CLOSED,False,51,3,1,https://github.com/ndvanforeest,documentation for 4k monitors,3,['waiting'],https://github.com/i3/i3/pull/3438,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3438#issuecomment-427605740,"Just after connecting my 4K monitor there was somewhat of a surprise. As I didn't change the relevant settings, the letters were nearly too small to read. Some searching on the web helped my find how to solve the problem. I updated the userguide so that other people may be spared the effort.","I'm having some trouble with these changes. Really the only real statement we should make is ""make sure your dpi settings are correct"". That doesn't mean the correct dpi is 130, and a lot of the other options aren't really directly relevant for this either. I would prefer just a simple statement that for high resolution (not specifically 4k) monitors you should set the dpi correctly, perhaps with an example for the X resources config.
Also, the section about terminal emulators needs to be removed entirely. Our sensible terminal script is already the default and I don't think we should suggest gnome terminal at all because this is a choice that has nothing to do with the WM.",True,{}
i3/i3,https://github.com/i3/i3,3438,2018-10-06T18:38:50Z,2018-12-09T18:22:50Z,2018-12-10T17:19:57Z,CLOSED,False,51,3,1,https://github.com/ndvanforeest,documentation for 4k monitors,3,['waiting'],https://github.com/i3/i3/pull/3438,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/3438#issuecomment-427605909,"Just after connecting my 4K monitor there was somewhat of a surprise. As I didn't change the relevant settings, the letters were nearly too small to read. Some searching on the web helped my find how to solve the problem. I updated the userguide so that other people may be spared the effort.",And the font part is covered under https://i3wm.org/docs/userguide.html#fonts,True,{}
i3/i3,https://github.com/i3/i3,3438,2018-10-06T18:38:50Z,2018-12-09T18:22:50Z,2018-12-10T17:19:57Z,CLOSED,False,51,3,1,https://github.com/ndvanforeest,documentation for 4k monitors,3,['waiting'],https://github.com/i3/i3/pull/3438,https://github.com/Airblader,4,https://github.com/i3/i3/pull/3438#issuecomment-437621599,"Just after connecting my 4K monitor there was somewhat of a surprise. As I didn't change the relevant settings, the letters were nearly too small to read. Some searching on the web helped my find how to solve the problem. I updated the userguide so that other people may be spared the effort.","@stapelberg Given your review, would you mind addressing @orestisf1993 and mine comments above? Personally I wouldn't merge all these changes in, but since you had specific review comments you seem to feel different. :-) I think we should agree on something here before fixing any of those comments and moving forward.",True,{}
i3/i3,https://github.com/i3/i3,3438,2018-10-06T18:38:50Z,2018-12-09T18:22:50Z,2018-12-10T17:19:57Z,CLOSED,False,51,3,1,https://github.com/ndvanforeest,documentation for 4k monitors,3,['waiting'],https://github.com/i3/i3/pull/3438,https://github.com/stapelberg,5,https://github.com/i3/i3/pull/3438#issuecomment-437622425,"Just after connecting my 4K monitor there was somewhat of a surprise. As I didn't change the relevant settings, the letters were nearly too small to read. Some searching on the web helped my find how to solve the problem. I updated the userguide so that other people may be spared the effort.","I didn’t reply to those because I largely agree — I wouldn’t merge the PR as-is either, but we can certainly turn it into a few additions which might help users set up their new displays.",True,{}
i3/i3,https://github.com/i3/i3,3438,2018-10-06T18:38:50Z,2018-12-09T18:22:50Z,2018-12-10T17:19:57Z,CLOSED,False,51,3,1,https://github.com/ndvanforeest,documentation for 4k monitors,3,['waiting'],https://github.com/i3/i3/pull/3438,https://github.com/ndvanforeest,6,https://github.com/i3/i3/pull/3438#issuecomment-443458096,"Just after connecting my 4K monitor there was somewhat of a surprise. As I didn't change the relevant settings, the letters were nearly too small to read. Some searching on the web helped my find how to solve the problem. I updated the userguide so that other people may be spared the effort.","Hi,

Sorry for the delay. I have been away.

My PR is just a suggestion for what I needed at the time just after having
bought a hi res monitor. My i3 had been working for years, and I hadn't
touched its config file for at least 3 years. So, when I connected my new
monitor, I needed a microscope to read my xterm, etc. hence reading the i3
documentation was out of question. Then I turned to my ipad, started
reading the docs. But then, to edit the i3 config file, was no simple
thing, since the fonts were simply to small. I first had to change the font
size in emacs. And so on (i.e, panic mode...) Any documentation that helps
to help get things back to normal, or at least to get things such that you
can read the letters, would be great.  As for me, the best would be if it
would be just copy paste into i3/config.

As an aside, as a plain user of i3, I have no idea how to update the fonts
or how to find out that "" font pango:Source Code Pro for Powerline 10"" is
the thing I would need. I also did not know that ""bindsym $mod+Return exec
i3-sensible-terminal"" would be the appropriate thing to set in the config
file. I realize that I am the one to blame for this ignorance, but after
buying a new monitor, and seeing my expectations crushed, this was a bit
too much :-)

bye

Nicky
…
On Sat, 10 Nov 2018 at 22:24, Michael Stapelberg ***@***.***> wrote:
 I didn’t reply to those because I largely agree — I wouldn’t merge the PR
 as-is either, but we can certainly turn it into a few additions which might
 help users set up their new displays.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#3438 (comment)>, or mute the
 thread
 <https://github.com/notifications/unsubscribe-auth/ABmveW2eHFsG26wQvd59JgJYWR42ips3ks5ut0QMgaJpZM4XLfZV>
 .",True,{}
i3/i3,https://github.com/i3/i3,3438,2018-10-06T18:38:50Z,2018-12-09T18:22:50Z,2018-12-10T17:19:57Z,CLOSED,False,51,3,1,https://github.com/ndvanforeest,documentation for 4k monitors,3,['waiting'],https://github.com/i3/i3/pull/3438,https://github.com/stapelberg,7,https://github.com/i3/i3/pull/3438#issuecomment-445460575,"Just after connecting my 4K monitor there was somewhat of a surprise. As I didn't change the relevant settings, the letters were nearly too small to read. Some searching on the web helped my find how to solve the problem. I updated the userguide so that other people may be spared the effort.","Hey @ndvanforeest,
sure, I understand where you’re coming from.
How would you like to proceed with regards to this pull request? There are a bunch of open comments which would be good to address to get it into ready-to-merge shape :)",True,{}
i3/i3,https://github.com/i3/i3,3438,2018-10-06T18:38:50Z,2018-12-09T18:22:50Z,2018-12-10T17:19:57Z,CLOSED,False,51,3,1,https://github.com/ndvanforeest,documentation for 4k monitors,3,['waiting'],https://github.com/i3/i3/pull/3438,https://github.com/ndvanforeest,8,https://github.com/i3/i3/pull/3438#issuecomment-445483769,"Just after connecting my 4K monitor there was somewhat of a surprise. As I didn't change the relevant settings, the letters were nearly too small to read. Some searching on the web helped my find how to solve the problem. I updated the userguide so that other people may be spared the effort.","Hi,
I agree with your suggestion above. It is a bit unclear now what the end result will be. Should I close this pull request, and issue a new one? Or do you close it (which is perfectly fine with me), and include the comments you mentioned above yourself?",True,{}
i3/i3,https://github.com/i3/i3,3438,2018-10-06T18:38:50Z,2018-12-09T18:22:50Z,2018-12-10T17:19:57Z,CLOSED,False,51,3,1,https://github.com/ndvanforeest,documentation for 4k monitors,3,['waiting'],https://github.com/i3/i3/pull/3438,https://github.com/stapelberg,9,https://github.com/i3/i3/pull/3438#issuecomment-445897462,"Just after connecting my 4K monitor there was somewhat of a surprise. As I didn't change the relevant settings, the letters were nearly too small to read. Some searching on the web helped my find how to solve the problem. I updated the userguide so that other people may be spared the effort.","I agree with your suggestion above. It is a bit unclear now what the end result will be. Should I close this pull request, and issue a new one? Or do you close it (which is perfectly fine with me), and include the comments you mentioned above yourself?

I went ahead and opened #3553, incorporating all the feedback that was pointed out in this PR.
Thanks for getting this ball rolling, and please comment on PR #3553 if you can think of any improvements! :)",True,{}
i3/i3,https://github.com/i3/i3,3440,2018-10-07T18:11:08Z,2018-10-07T19:02:44Z,2018-10-07T19:02:44Z,MERGED,True,21,6,1,https://github.com/stapelberg,configure.ac: add conditionals for building docs/mans,1,[],https://github.com/i3/i3/pull/3440,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3440,fixes #3378,fixes #3378,True,{}
i3/i3,https://github.com/i3/i3,3441,2018-10-07T18:43:09Z,2018-10-07T19:09:28Z,2018-10-07T19:27:45Z,MERGED,True,126,2,3,https://github.com/stapelberg,add specific GitHub issue templates,1,[],https://github.com/i3/i3/pull/3441,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3441,"I learnt about this from the GitHub blog:
https://blog.github.com/2018-05-02-issue-template-improvements/
Unfortunately, it seems like one cannot set a title in the template, otherwise we could do away with the first section of the template entirely.","I learnt about this from the GitHub blog:
https://blog.github.com/2018-05-02-issue-template-improvements/
Unfortunately, it seems like one cannot set a title in the template, otherwise we could do away with the first section of the template entirely.",True,{}
i3/i3,https://github.com/i3/i3,3441,2018-10-07T18:43:09Z,2018-10-07T19:09:28Z,2018-10-07T19:27:45Z,MERGED,True,126,2,3,https://github.com/stapelberg,add specific GitHub issue templates,1,[],https://github.com/i3/i3/pull/3441,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3441#issuecomment-427679361,"I learnt about this from the GitHub blog:
https://blog.github.com/2018-05-02-issue-template-improvements/
Unfortunately, it seems like one cannot set a title in the template, otherwise we could do away with the first section of the template entirely.",Do you need to update the repo's settings? The buttons don't show up for me.,True,{}
i3/i3,https://github.com/i3/i3,3441,2018-10-07T18:43:09Z,2018-10-07T19:09:28Z,2018-10-07T19:27:45Z,MERGED,True,126,2,3,https://github.com/stapelberg,add specific GitHub issue templates,1,[],https://github.com/i3/i3/pull/3441,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/3441#issuecomment-427679718,"I learnt about this from the GitHub blog:
https://blog.github.com/2018-05-02-issue-template-improvements/
Unfortunately, it seems like one cannot set a title in the template, otherwise we could do away with the first section of the template entirely.",They show up for me when opening Issues → New Issue. The URL I’m seeing is https://github.com/i3/i3/issues/new/choose. Maybe clear your browser cache?,True,{}
i3/i3,https://github.com/i3/i3,3441,2018-10-07T18:43:09Z,2018-10-07T19:09:28Z,2018-10-07T19:27:45Z,MERGED,True,126,2,3,https://github.com/stapelberg,add specific GitHub issue templates,1,[],https://github.com/i3/i3/pull/3441,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/3441#issuecomment-427679787,"I learnt about this from the GitHub blog:
https://blog.github.com/2018-05-02-issue-template-improvements/
Unfortunately, it seems like one cannot set a title in the template, otherwise we could do away with the first section of the template entirely.","oh ok, I misunderstood the screenshot",True,{}
i3/i3,https://github.com/i3/i3,3442,2018-10-08T07:46:22Z,2019-03-11T18:36:30Z,2019-03-11T18:36:30Z,CLOSED,False,7,1,1,https://github.com/vivien,commands: (rename) check workspace number,1,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3442,https://github.com/vivien,1,https://github.com/i3/i3/pull/3442,"Assuming two workspaces 1 and 2, renaming the workspace 2 to ""1: foo""
will reassign the number 1 already in use to the new workspace and break
the ""workspace next_on_output"" command.
This patch fixes this behavior by checking if a different workspace with
the same number does not already exist when renaming a given workspace.","Assuming two workspaces 1 and 2, renaming the workspace 2 to ""1: foo""
will reassign the number 1 already in use to the new workspace and break
the ""workspace next_on_output"" command.
This patch fixes this behavior by checking if a different workspace with
the same number does not already exist when renaming a given workspace.",True,{}
i3/i3,https://github.com/i3/i3,3442,2018-10-08T07:46:22Z,2019-03-11T18:36:30Z,2019-03-11T18:36:30Z,CLOSED,False,7,1,1,https://github.com/vivien,commands: (rename) check workspace number,1,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3442,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3442#issuecomment-427789031,"Assuming two workspaces 1 and 2, renaming the workspace 2 to ""1: foo""
will reassign the number 1 already in use to the new workspace and break
the ""workspace next_on_output"" command.
This patch fixes this behavior by checking if a different workspace with
the same number does not already exist when renaming a given workspace.","Assuming two workspaces 1 and 2, renaming the workspace 2 to ""1: foo""
will reassign the number 1 already in use to the new workspace

Other parts of the codebase allow multiple workspaces with the same number

and break the ""workspace next_on_output"" command.

how exactly?",True,{}
i3/i3,https://github.com/i3/i3,3442,2018-10-08T07:46:22Z,2019-03-11T18:36:30Z,2019-03-11T18:36:30Z,CLOSED,False,7,1,1,https://github.com/vivien,commands: (rename) check workspace number,1,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3442,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3442#issuecomment-427844392,"Assuming two workspaces 1 and 2, renaming the workspace 2 to ""1: foo""
will reassign the number 1 already in use to the new workspace and break
the ""workspace next_on_output"" command.
This patch fixes this behavior by checking if a different workspace with
the same number does not already exist when renaming a given workspace.",Multiple workspaces with the same number are explicitly allowed. It's up to the user to avoid this if they don't want it to happen.,True,{}
i3/i3,https://github.com/i3/i3,3442,2018-10-08T07:46:22Z,2019-03-11T18:36:30Z,2019-03-11T18:36:30Z,CLOSED,False,7,1,1,https://github.com/vivien,commands: (rename) check workspace number,1,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3442,https://github.com/vivien,4,https://github.com/i3/i3/pull/3442#issuecomment-427904328,"Assuming two workspaces 1 and 2, renaming the workspace 2 to ""1: foo""
will reassign the number 1 already in use to the new workspace and break
the ""workspace next_on_output"" command.
This patch fixes this behavior by checking if a different workspace with
the same number does not already exist when renaming a given workspace.","Thanks for your feedback guys. At first sight the output of i3-msg get_workspaces seemed weird to me because I pictured num as a UID. Anyway, the annoying part remains the iteration over numbered workspaces.


Assuming two workspaces 1 and 2, renaming the workspace 2 to ""1: foo"" will reassign the number 1 already in use to the new workspace

Other parts of the codebase allow multiple workspaces with the same number

and break the ""workspace next_on_output"" command.

how exactly?

The command skips multiple workspaces with the same number. Try this:
i3-msg workspace 2
i3-sensible-terminal # put something in there
i3-msg workspace 3
i3-sensible-terminal # put something in there
i3-msg workspace 4
i3-sensible-terminal # put something in there
i3-msg rename workspace 4 to '""3: foo""'
while sleep 1; do i3-msg workspace next_on_output; done
You'll see that workspace ""3"" is skipped. This is clearly unexpected from next_on_output which by definition must iterate over every workspaces of the current output.",True,{}
i3/i3,https://github.com/i3/i3,3442,2018-10-08T07:46:22Z,2019-03-11T18:36:30Z,2019-03-11T18:36:30Z,CLOSED,False,7,1,1,https://github.com/vivien,commands: (rename) check workspace number,1,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3442,https://github.com/vivien,5,https://github.com/i3/i3/pull/3442#issuecomment-427911134,"Assuming two workspaces 1 and 2, renaming the workspace 2 to ""1: foo""
will reassign the number 1 already in use to the new workspace and break
the ""workspace next_on_output"" command.
This patch fixes this behavior by checking if a different workspace with
the same number does not already exist when renaming a given workspace.","Here are other frustrating examples caused by this behavior.


In the example above, i3-msg move container to workspace number 3 will move a window to the workspace '""3: foo""'. Even though the '""3: foo""' workspace is indeed correctly numbered 3, I would expect the workspace ""3"" to be chosen, since it has no fancy name.


Also since there can be multiple workspaces with the same number, one can expect i3-msg workspace [number] X to iterate over workspaces numbered X instead of limiting itself to the first matching one.


One way to have a consistent behavior and work with multiple workspaces with the same number would be to have workspace X stick with the first workspace explicitly named ""X"" (or numbered X) while workspace number Y would target the next workspace matching (Con *)->num == Y. This would have the effect to:
a. iterate over every workspaces numbered 3 with workspace number 3;
b. move a window to the next workspace numbered 3 with a binding move container to workspace number 3 (useful when already focusing a workspace numbered 3).",True,{}
i3/i3,https://github.com/i3/i3,3442,2018-10-08T07:46:22Z,2019-03-11T18:36:30Z,2019-03-11T18:36:30Z,CLOSED,False,7,1,1,https://github.com/vivien,commands: (rename) check workspace number,1,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3442,https://github.com/orestisfl,6,https://github.com/i3/i3/pull/3442#issuecomment-429123176,"Assuming two workspaces 1 and 2, renaming the workspace 2 to ""1: foo""
will reassign the number 1 already in use to the new workspace and break
the ""workspace next_on_output"" command.
This patch fixes this behavior by checking if a different workspace with
the same number does not already exist when renaming a given workspace.","Thanks, I can confirm the first issue. It can be fixed individually though.

In the example above, i3-msg move container to workspace number 3 will move a window to the workspace '""3: foo""'. Even though the '""3: foo""' workspace is indeed correctly numbered 3, I would expect the workspace ""3"" to be chosen, since it has no fancy name.

The last opened workspace is placed before all other workspaces with the same number. We could change this behavior to also sort by name. A bit unrelated but I also just noticed that workspaces without a number are not sorted alphabetically.",True,{}
i3/i3,https://github.com/i3/i3,3442,2018-10-08T07:46:22Z,2019-03-11T18:36:30Z,2019-03-11T18:36:30Z,CLOSED,False,7,1,1,https://github.com/vivien,commands: (rename) check workspace number,1,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3442,https://github.com/orestisfl,7,https://github.com/i3/i3/pull/3442#issuecomment-432448147,"Assuming two workspaces 1 and 2, renaming the workspace 2 to ""1: foo""
will reassign the number 1 already in use to the new workspace and break
the ""workspace next_on_output"" command.
This patch fixes this behavior by checking if a different workspace with
the same number does not already exist when renaming a given workspace.",I assume we are going to proceed here by fixing the issues independently instead of forbidding existing workspace numbers?,True,{}
i3/i3,https://github.com/i3/i3,3442,2018-10-08T07:46:22Z,2019-03-11T18:36:30Z,2019-03-11T18:36:30Z,CLOSED,False,7,1,1,https://github.com/vivien,commands: (rename) check workspace number,1,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3442,https://github.com/Airblader,8,https://github.com/i3/i3/pull/3442#issuecomment-432974056,"Assuming two workspaces 1 and 2, renaming the workspace 2 to ""1: foo""
will reassign the number 1 already in use to the new workspace and break
the ""workspace next_on_output"" command.
This patch fixes this behavior by checking if a different workspace with
the same number does not already exist when renaming a given workspace.","Yeah, I'd say so. This is intended functionality that for all I know is actively used by some people.",True,{}
i3/i3,https://github.com/i3/i3,3442,2018-10-08T07:46:22Z,2019-03-11T18:36:30Z,2019-03-11T18:36:30Z,CLOSED,False,7,1,1,https://github.com/vivien,commands: (rename) check workspace number,1,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3442,https://github.com/orestisfl,9,https://github.com/i3/i3/pull/3442#issuecomment-432995438,"Assuming two workspaces 1 and 2, renaming the workspace 2 to ""1: foo""
will reassign the number 1 already in use to the new workspace and break
the ""workspace next_on_output"" command.
This patch fixes this behavior by checking if a different workspace with
the same number does not already exist when renaming a given workspace.",@vivien do you want to handle the issues you mentioned? Or should we close this and proceed?,True,{}
i3/i3,https://github.com/i3/i3,3442,2018-10-08T07:46:22Z,2019-03-11T18:36:30Z,2019-03-11T18:36:30Z,CLOSED,False,7,1,1,https://github.com/vivien,commands: (rename) check workspace number,1,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3442,https://github.com/vivien,10,https://github.com/i3/i3/pull/3442#issuecomment-433097589,"Assuming two workspaces 1 and 2, renaming the workspace 2 to ""1: foo""
will reassign the number 1 already in use to the new workspace and break
the ""workspace next_on_output"" command.
This patch fixes this behavior by checking if a different workspace with
the same number does not already exist when renaming a given workspace.","I can work on the iteration issue. Fixing next_on_output is the very least.
I’ll dig into that hoping it doesn’t take too long.
Le jeu. 25 oct. 2018 à 06:14, Orestis <notifications@github.com> a écrit :
…
 @vivien <https://github.com/vivien> do you want to handle the issues you
 mentioned? Or should we close this and proceed?

 —
 You are receiving this because you were mentioned.


 Reply to this email directly, view it on GitHub
 <#3442 (comment)>, or mute the
 thread
 <https://github.com/notifications/unsubscribe-auth/AARccOYafrMEHxt-5h0nQiGGmrxOKA5Oks5uoY8ZgaJpZM4XMZm7>
 .",True,{}
i3/i3,https://github.com/i3/i3,3442,2018-10-08T07:46:22Z,2019-03-11T18:36:30Z,2019-03-11T18:36:30Z,CLOSED,False,7,1,1,https://github.com/vivien,commands: (rename) check workspace number,1,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3442,https://github.com/Airblader,11,https://github.com/i3/i3/pull/3442#issuecomment-471667213,"Assuming two workspaces 1 and 2, renaming the workspace 2 to ""1: foo""
will reassign the number 1 already in use to the new workspace and break
the ""workspace next_on_output"" command.
This patch fixes this behavior by checking if a different workspace with
the same number does not already exist when renaming a given workspace.",Closing due to inactivity.,True,{}
i3/i3,https://github.com/i3/i3,3444,2018-10-09T19:43:32Z,2018-10-23T13:29:49Z,2018-10-23T13:32:25Z,MERGED,True,64,26,3,https://github.com/orestisfl,Some move.c fixes,2,[],https://github.com/i3/i3/pull/3444,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3444,,,True,{}
i3/i3,https://github.com/i3/i3,3445,2018-10-10T16:27:09Z,2018-10-23T13:30:12Z,2018-10-23T13:32:19Z,MERGED,True,2,1,1,https://github.com/orestisfl,Fix flakyness in t/189-floating-constraints.t,1,[],https://github.com/i3/i3/pull/3445,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3445,Related to #3009.,Related to #3009.,True,{}
i3/i3,https://github.com/i3/i3,3448,2018-10-11T09:28:00Z,2018-10-23T13:31:58Z,2018-10-23T13:35:51Z,MERGED,True,71,27,4,https://github.com/orestisfl,Fix sticky focus when switching to workspace on different output,3,[],https://github.com/i3/i3/pull/3448,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3448,,,True,{}
i3/i3,https://github.com/i3/i3,3451,2018-10-11T20:32:33Z,2018-10-23T13:45:46Z,2018-10-23T14:28:09Z,MERGED,True,72,101,1,https://github.com/orestisfl,Close & reopen tray selwin when needed,1,[],https://github.com/i3/i3/pull/3451,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3451,"Fixes #1329
Fixes #3317
Fixes #2010","Fixes #1329
Fixes #3317
Fixes #2010",True,{}
i3/i3,https://github.com/i3/i3,3451,2018-10-11T20:32:33Z,2018-10-23T13:45:46Z,2018-10-23T14:28:09Z,MERGED,True,72,101,1,https://github.com/orestisfl,Close & reopen tray selwin when needed,1,[],https://github.com/i3/i3/pull/3451,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3451#issuecomment-429114221,"Fixes #1329
Fixes #3317
Fixes #2010",I also think it's beneficial to allow falling back to the first available output like in bebehei@7e45133,True,{}
i3/i3,https://github.com/i3/i3,3451,2018-10-11T20:32:33Z,2018-10-23T13:45:46Z,2018-10-23T14:28:09Z,MERGED,True,72,101,1,https://github.com/orestisfl,Close & reopen tray selwin when needed,1,[],https://github.com/i3/i3/pull/3451,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/3451#issuecomment-432252678,"Fixes #1329
Fixes #3317
Fixes #2010",up,True,{}
i3/i3,https://github.com/i3/i3,3451,2018-10-11T20:32:33Z,2018-10-23T13:45:46Z,2018-10-23T14:28:09Z,MERGED,True,72,101,1,https://github.com/orestisfl,Close & reopen tray selwin when needed,1,[],https://github.com/i3/i3/pull/3451,https://github.com/bebehei,4,https://github.com/i3/i3/pull/3451#issuecomment-432260719,"Fixes #1329
Fixes #3317
Fixes #2010","@orestisf1993 wow, works like a charm! 👍 Thank you!",True,{}
i3/i3,https://github.com/i3/i3,3452,2018-10-12T16:44:45Z,2018-10-23T14:41:55Z,2018-10-23T14:43:39Z,MERGED,True,70,4,7,https://github.com/orestisfl,Add title_align config directive,1,[],https://github.com/i3/i3/pull/3452,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3452,"Continuation of #3262
Fixes #1750
@Aestek","Continuation of #3262
Fixes #1750
@Aestek",True,{}
i3/i3,https://github.com/i3/i3,3452,2018-10-12T16:44:45Z,2018-10-23T14:41:55Z,2018-10-23T14:43:39Z,MERGED,True,70,4,7,https://github.com/orestisfl,Add title_align config directive,1,[],https://github.com/i3/i3/pull/3452,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3452#issuecomment-432250772,"Continuation of #3262
Fixes #1750
@Aestek","LGTM, would you mind adding some screenshots?",True,{}
i3/i3,https://github.com/i3/i3,3452,2018-10-12T16:44:45Z,2018-10-23T14:41:55Z,2018-10-23T14:43:39Z,MERGED,True,70,4,7,https://github.com/orestisfl,Add title_align config directive,1,[],https://github.com/i3/i3/pull/3452,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/3452#issuecomment-432273056,"Continuation of #3262
Fixes #1750
@Aestek","center: 
left: 
right:",True,{}
i3/i3,https://github.com/i3/i3,3452,2018-10-12T16:44:45Z,2018-10-23T14:41:55Z,2018-10-23T14:43:39Z,MERGED,True,70,4,7,https://github.com/orestisfl,Add title_align config directive,1,[],https://github.com/i3/i3/pull/3452,https://github.com/Airblader,4,https://github.com/i3/i3/pull/3452#issuecomment-432275728,"Continuation of #3262
Fixes #1750
@Aestek","Thanks, I appreciate it!",True,{}
i3/i3,https://github.com/i3/i3,3453,2018-10-13T16:13:16Z,2018-10-13T18:04:41Z,2018-10-13T18:04:41Z,MERGED,True,4,4,3,https://github.com/alanbarr,Fixes for undefined behaviour on signed shift,2,[],https://github.com/i3/i3/pull/3453,https://github.com/alanbarr,1,https://github.com/i3/i3/pull/3453,"Change literal 1 to unsigned to allow safe bitshift of 31.
Caught by cppcheck.","Change literal 1 to unsigned to allow safe bitshift of 31.
Caught by cppcheck.",True,{}
i3/i3,https://github.com/i3/i3,3453,2018-10-13T16:13:16Z,2018-10-13T18:04:41Z,2018-10-13T18:04:41Z,MERGED,True,4,4,3,https://github.com/alanbarr,Fixes for undefined behaviour on signed shift,2,[],https://github.com/i3/i3/pull/3453,https://github.com/alanbarr,2,https://github.com/i3/i3/pull/3453#issuecomment-429561401,"Change literal 1 to unsigned to allow safe bitshift of 31.
Caught by cppcheck.","Would you prefer I close this PR and let #3433 fix these?
I fixed the extra shift on this branch anyways.",True,{}
i3/i3,https://github.com/i3/i3,3454,2018-10-13T16:16:50Z,2018-10-13T18:07:17Z,2018-10-13T18:07:18Z,MERGED,True,3,6,2,https://github.com/alanbarr,Cppcheck Fixes,2,[],https://github.com/i3/i3/pull/3454,https://github.com/alanbarr,1,https://github.com/i3/i3/pull/3454,Minor fixes for cppcheck warning and portability issues.,Minor fixes for cppcheck warning and portability issues.,True,{}
i3/i3,https://github.com/i3/i3,3455,2018-10-14T18:06:26Z,2018-10-15T16:00:44Z,2018-10-15T16:00:48Z,MERGED,True,1,1,1,https://github.com/stapelberg,debian/control: remove dependency on x11-utils,1,[],https://github.com/i3/i3/pull/3455,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3455,"This was a introduce in commit a61e34d in 2009,
and we haven’t used xmessage in any way in a long time.
fixes https://bugs.debian.org/910997","This was a introduce in commit a61e34d in 2009,
and we haven’t used xmessage in any way in a long time.
fixes https://bugs.debian.org/910997",True,{}
i3/i3,https://github.com/i3/i3,3455,2018-10-14T18:06:26Z,2018-10-15T16:00:44Z,2018-10-15T16:00:48Z,MERGED,True,1,1,1,https://github.com/stapelberg,debian/control: remove dependency on x11-utils,1,[],https://github.com/i3/i3/pull/3455,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3455#issuecomment-429649747,"This was a introduce in commit a61e34d in 2009,
and we haven’t used xmessage in any way in a long time.
fixes https://bugs.debian.org/910997",travis failed,True,{}
i3/i3,https://github.com/i3/i3,3455,2018-10-14T18:06:26Z,2018-10-15T16:00:44Z,2018-10-15T16:00:48Z,MERGED,True,1,1,1,https://github.com/stapelberg,debian/control: remove dependency on x11-utils,1,[],https://github.com/i3/i3/pull/3455,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/3455#issuecomment-429659321,"This was a introduce in commit a61e34d in 2009,
and we haven’t used xmessage in any way in a long time.
fixes https://bugs.debian.org/910997","Yeah, something’s wrong with our debian base image build steps. Will look into it tomorrow.",True,{}
i3/i3,https://github.com/i3/i3,3455,2018-10-14T18:06:26Z,2018-10-15T16:00:44Z,2018-10-15T16:00:48Z,MERGED,True,1,1,1,https://github.com/stapelberg,debian/control: remove dependency on x11-utils,1,[],https://github.com/i3/i3/pull/3455,https://github.com/stapelberg,4,https://github.com/i3/i3/pull/3455#issuecomment-429726179,"This was a introduce in commit a61e34d in 2009,
and we haven’t used xmessage in any way in a long time.
fixes https://bugs.debian.org/910997",Addressing the travis issue with #3456,True,{}
i3/i3,https://github.com/i3/i3,3456,2018-10-15T06:41:49Z,2018-10-15T08:16:21Z,2018-10-15T15:52:27Z,MERGED,True,1,0,1,https://github.com/stapelberg,travis: fix mk-build-deps call by providing changelog file,1,[],https://github.com/i3/i3/pull/3456,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3456,"mk-build-deps started using the changelog file to get the version number, but a
bug prevents it from falling back correctly to 1.0 if no changelog is
present. This has been fixed upstream in
https://salsa.debian.org/debian/devscripts/commit/4b15abd4f0cfe4accbf28f24546891867344a73c,
but we can just ship the changelog file until that fix lands.","mk-build-deps started using the changelog file to get the version number, but a
bug prevents it from falling back correctly to 1.0 if no changelog is
present. This has been fixed upstream in
https://salsa.debian.org/debian/devscripts/commit/4b15abd4f0cfe4accbf28f24546891867344a73c,
but we can just ship the changelog file until that fix lands.",True,{}
i3/i3,https://github.com/i3/i3,3465,2018-10-20T01:07:12Z,2018-10-26T07:49:36Z,2018-10-26T07:49:38Z,MERGED,True,40,18,4,https://github.com/soumya92,"Add ""modifiers"" to events sent by i3bar",1,[],https://github.com/i3/i3/pull/3465,https://github.com/soumya92,1,https://github.com/i3/i3/pull/3465,"The modifiers field is an array of modifier names, e.g. [""ctrl"", ""Mod3""].
Fixes #3461","The modifiers field is an array of modifier names, e.g. [""ctrl"", ""Mod3""].
Fixes #3461",True,{}
i3/i3,https://github.com/i3/i3,3465,2018-10-20T01:07:12Z,2018-10-26T07:49:36Z,2018-10-26T07:49:38Z,MERGED,True,40,18,4,https://github.com/soumya92,"Add ""modifiers"" to events sent by i3bar",1,[],https://github.com/i3/i3/pull/3465,https://github.com/soumya92,2,https://github.com/i3/i3/pull/3465#issuecomment-431604360,"The modifiers field is an array of modifier names, e.g. [""ctrl"", ""Mod3""].
Fixes #3461","Before I do that, I'd like to point out a few reasons for keeping this as is:

The most common operation on the modifiers will be to check for the presence of one, something which is much easier in many languages when given the bitmask rather than a list of strings. Using an array for modifiers adds complexity both in i3bar and in the status_command program. e.g., in go:

if mods&Mod4Mask != 0 { 
  ...
}
// vs.
for _, mod := range mods {
  if mod == ""Mod4"" {
    ...
  }
}


The modifiers will be handled by the status_command programs (i3status et al), so keeping consistency with the config is likely not as important, since the programs will all have different ways to surface this information.


Making modifiers an array makes the event message variable length and adds a new field type in the output. While JSON parsers will have no trouble with this, users may have shell scripts with simplistic parsing, e.g. assuming that , always ends a field, which this could break.


Having said that, if you think array is the way to go, I'll gladly make the change and update this PR.
Thanks for reviewing!",True,{}
i3/i3,https://github.com/i3/i3,3465,2018-10-20T01:07:12Z,2018-10-26T07:49:36Z,2018-10-26T07:49:38Z,MERGED,True,40,18,4,https://github.com/soumya92,"Add ""modifiers"" to events sent by i3bar",1,[],https://github.com/i3/i3/pull/3465,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3465#issuecomment-432240043,"The modifiers field is an array of modifier names, e.g. [""ctrl"", ""Mod3""].
Fixes #3461","Sorry for the delay, I was just on my way back from the US and need to take care of a few things first :-)

something which is much easier in many languages when given the bitmask rather than a list of strings

I can't speak for Go, but most higher-level languages have a direct way of checking this (in in Python, includes in Javascript, …). In my experience, bitmasks are mostly used in low-level languages and thus many people aren't too familiar with them, but most IPC scripts are written with high-level languages.
Also, using the bitmask would require scripts to either import the bitmask definitions (like your Mod4Mask) from some X utility (might not be available + widely not understood by users) or hardcode it in their script while the modifier name will be known to every user (that's how they configure i3, anyway).

The modifiers will be handled by the status_command programs (i3status et al), so keeping consistency with the config is likely not as important

I agree that consistency isn't a necessarily good argument, but making it familar & easy for users to work with it is… :-)

Making modifiers an array makes the event message variable length

Is that an issue?

While JSON parsers will have no trouble with this, users may have shell scripts with simplistic parsing, e.g. assuming that , always ends a field, which this could break.

Such scripts are broken to begin with, IMHO. If you want to write shell scripts, use a JSON utility like jq. We make no promises on how the JSON is formatted, either (e.g., spaces or not etc.), we're not even really in control of that.
However, I'm also happy to consult @stapelberg on his opinion. If we did decide to expose the bitmask, I'd at least rename it to modifiers_mask, but IMO I wouldn't expost the bitmask here.",True,{}
i3/i3,https://github.com/i3/i3,3465,2018-10-20T01:07:12Z,2018-10-26T07:49:36Z,2018-10-26T07:49:38Z,MERGED,True,40,18,4,https://github.com/soumya92,"Add ""modifiers"" to events sent by i3bar",1,[],https://github.com/i3/i3/pull/3465,https://github.com/stapelberg,4,https://github.com/i3/i3/pull/3465#issuecomment-432304794,"The modifiers field is an array of modifier names, e.g. [""ctrl"", ""Mod3""].
Fixes #3461","Thanks for your PR!
Passing event->state as the PR currently suggests seems like exposing too much of an X11 implementation detail. Note that event->state is influenced by NumLock state, for example.

I can't speak for Go, but most higher-level languages have a direct way of checking this (in in Python, includes in Javascript, …).

Go does intentionally not have a way to check for existence in an array/slice (the argument is that writing down the loop explicitly will make it more obvious that this piece of code might be performance-critical). This should not be an argument for the contents of the IPC message, though.

Also, using the bitmask would require scripts to either import the bitmask definitions (like your Mod4Mask) from some X utility (might not be available + widely not understood by users)

Strong +1. We should strive for the IPC to be usable with only the IPC libraries/definitions/includes/documentation, not also knowledge about how X11 works on the wire level.

Such scripts are broken to begin with, IMHO. If you want to write shell scripts, use a JSON utility like jq. We make no promises on how the JSON is formatted, either (e.g., spaces or not etc.), we're not even really in control of that.

+1. We have advocated for many years for using correct parsing, ideally in a higher-level language than shell :).
In conclusion, I agree with @Airblader.",True,{}
i3/i3,https://github.com/i3/i3,3465,2018-10-20T01:07:12Z,2018-10-26T07:49:36Z,2018-10-26T07:49:38Z,MERGED,True,40,18,4,https://github.com/soumya92,"Add ""modifiers"" to events sent by i3bar",1,[],https://github.com/i3/i3/pull/3465,https://github.com/soumya92,5,https://github.com/i3/i3/pull/3465#issuecomment-432762298,"The modifiers field is an array of modifier names, e.g. [""ctrl"", ""Mod3""].
Fixes #3461","Thanks for the explanations! I've made the changes to the PR, ""modifiers"" is now an array of strings, where the values are the names of the modifiers as used when parsing the config.",True,{}
i3/i3,https://github.com/i3/i3,3465,2018-10-20T01:07:12Z,2018-10-26T07:49:36Z,2018-10-26T07:49:38Z,MERGED,True,40,18,4,https://github.com/soumya92,"Add ""modifiers"" to events sent by i3bar",1,[],https://github.com/i3/i3/pull/3465,https://github.com/Airblader,6,https://github.com/i3/i3/pull/3465#issuecomment-433319549,"The modifiers field is an array of modifier names, e.g. [""ctrl"", ""Mod3""].
Fixes #3461",Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3467,2018-10-21T10:21:50Z,2018-10-21T10:28:12Z,2018-10-21T11:58:23Z,MERGED,True,2,1,1,https://github.com/orestisfl,userguide: Use anchor for list of commands,1,[],https://github.com/i3/i3/pull/3467,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3467,Fixes #3464,Fixes #3464,True,{}
i3/i3,https://github.com/i3/i3,3469,2018-10-21T17:40:46Z,2018-10-23T13:37:13Z,2018-10-24T23:05:51Z,MERGED,True,5,3,1,https://github.com/yablonsky,"Update userguide ""Focus Parent"": add the default",2,[],https://github.com/i3/i3/pull/3469,https://github.com/yablonsky,1,https://github.com/i3/i3/pull/3469,"While reading the UserGuide, I had to refer to the TL;DR image on top to find the default keybind for ""Focus Parent"" since it's not mentioned in the text.
This pr fixes it.","While reading the UserGuide, I had to refer to the TL;DR image on top to find the default keybind for ""Focus Parent"" since it's not mentioned in the text.
This pr fixes it.",True,{}
i3/i3,https://github.com/i3/i3,3469,2018-10-21T17:40:46Z,2018-10-23T13:37:13Z,2018-10-24T23:05:51Z,MERGED,True,5,3,1,https://github.com/yablonsky,"Update userguide ""Focus Parent"": add the default",2,[],https://github.com/i3/i3/pull/3469,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3469#issuecomment-432249816,"While reading the UserGuide, I had to refer to the TL;DR image on top to find the default keybind for ""Focus Parent"" since it's not mentioned in the text.
This pr fixes it.",Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3473,2018-10-22T18:50:12Z,2018-10-24T19:57:32Z,2018-10-24T20:05:26Z,MERGED,True,2,3,1,https://github.com/soumya92,Always center text vertically,1,[],https://github.com/i3/i3/pull/3473,https://github.com/soumya92,1,https://github.com/i3/i3/pull/3473,"Tries to fix #3472 without messing up #3114.
I've been unable to reproduce the original issue, though, so I cannot verify that it remains reasonably fixed.","Tries to fix #3472 without messing up #3114.
I've been unable to reproduce the original issue, though, so I cannot verify that it remains reasonably fixed.",True,{}
i3/i3,https://github.com/i3/i3,3473,2018-10-22T18:50:12Z,2018-10-24T19:57:32Z,2018-10-24T20:05:26Z,MERGED,True,2,3,1,https://github.com/soumya92,Always center text vertically,1,[],https://github.com/i3/i3/pull/3473,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3473#issuecomment-431935618,"Tries to fix #3472 without messing up #3114.
I've been unable to reproduce the original issue, though, so I cannot verify that it remains reasonably fixed.","revert ad236 and modify your script to include the symbol and you should be able to reproduce it:
#!/bin/sh
echo '{""version"":1,""click_events"":false}
[[
	{""full_text"": ""<small><small><small>Small text</small></small></small>"", ""markup"": ""pango""},
	{""full_text"": ""Normal text""},
	{""full_text"": ""🌡 temperature""}
],'
sleep 86400",True,{}
i3/i3,https://github.com/i3/i3,3473,2018-10-22T18:50:12Z,2018-10-24T19:57:32Z,2018-10-24T20:05:26Z,MERGED,True,2,3,1,https://github.com/soumya92,Always center text vertically,1,[],https://github.com/i3/i3/pull/3473,https://github.com/soumya92,3,https://github.com/i3/i3/pull/3473#issuecomment-431953595,"Tries to fix #3472 without messing up #3114.
I've been unable to reproduce the original issue, though, so I cannot verify that it remains reasonably fixed.","After reverting the commit (or even just using release i3bar), adding the thermometer does not trigger any bad layout for me. I think it might depend on the installed fonts, but I'm not entirely sure.",True,{}
i3/i3,https://github.com/i3/i3,3473,2018-10-22T18:50:12Z,2018-10-24T19:57:32Z,2018-10-24T20:05:26Z,MERGED,True,2,3,1,https://github.com/soumya92,Always center text vertically,1,[],https://github.com/i3/i3/pull/3473,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/3473#issuecomment-432806231,"Tries to fix #3472 without messing up #3114.
I've been unable to reproduce the original issue, though, so I cannot verify that it remains reasonably fixed.",Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3475,2018-10-23T13:22:57Z,2018-10-23T15:41:12Z,2018-10-23T19:50:54Z,MERGED,True,10,7,1,https://github.com/Gravemind,i3bar: Fix i3bar re-hidden by any modifier (#3474),1,[],https://github.com/i3/i3/pull/3475,https://github.com/Gravemind,1,https://github.com/i3/i3/pull/3475,Here is one way to fix this #3474.,Here is one way to fix this #3474.,True,{}
i3/i3,https://github.com/i3/i3,3482,2018-10-26T13:38:08Z,2018-11-05T21:32:55Z,2018-11-05T21:32:59Z,MERGED,True,5,4,1,https://github.com/hamishimac,Do not assume STDIN_FILENO is available for input from child,1,[],https://github.com/i3/i3/pull/3482,https://github.com/hamishimac,1,https://github.com/i3/i3/pull/3482,"Fixes #3477
Testcases all pass, although I did have to modify t/189-floating-constraints.t to change the ""my sub"" declarations to ""sub"" in order to get this test-case to pass (even without my changes).  Presumably my perl is too old (This is perl 5, version 16, subversion 3 (v5.16.3)).
Perhaps the variable name (stdin_fd) is ill-advised.  ""input_from_child_fd"" might be a clearer name.","Fixes #3477
Testcases all pass, although I did have to modify t/189-floating-constraints.t to change the ""my sub"" declarations to ""sub"" in order to get this test-case to pass (even without my changes).  Presumably my perl is too old (This is perl 5, version 16, subversion 3 (v5.16.3)).
Perhaps the variable name (stdin_fd) is ill-advised.  ""input_from_child_fd"" might be a clearer name.",True,{}
i3/i3,https://github.com/i3/i3,3482,2018-10-26T13:38:08Z,2018-11-05T21:32:55Z,2018-11-05T21:32:59Z,MERGED,True,5,4,1,https://github.com/hamishimac,Do not assume STDIN_FILENO is available for input from child,1,[],https://github.com/i3/i3/pull/3482,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3482#issuecomment-433529046,"Fixes #3477
Testcases all pass, although I did have to modify t/189-floating-constraints.t to change the ""my sub"" declarations to ""sub"" in order to get this test-case to pass (even without my changes).  Presumably my perl is too old (This is perl 5, version 16, subversion 3 (v5.16.3)).
Perhaps the variable name (stdin_fd) is ill-advised.  ""input_from_child_fd"" might be a clearer name.",@stapelberg Do you wanna get this in before or after the release?,True,{}
i3/i3,https://github.com/i3/i3,3482,2018-10-26T13:38:08Z,2018-11-05T21:32:55Z,2018-11-05T21:32:59Z,MERGED,True,5,4,1,https://github.com/hamishimac,Do not assume STDIN_FILENO is available for input from child,1,[],https://github.com/i3/i3/pull/3482,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/3482#issuecomment-433537058,"Fixes #3477
Testcases all pass, although I did have to modify t/189-floating-constraints.t to change the ""my sub"" declarations to ""sub"" in order to get this test-case to pass (even without my changes).  Presumably my perl is too old (This is perl 5, version 16, subversion 3 (v5.16.3)).
Perhaps the variable name (stdin_fd) is ill-advised.  ""input_from_child_fd"" might be a clearer name.","After, just to be prudent.",True,{}
i3/i3,https://github.com/i3/i3,3482,2018-10-26T13:38:08Z,2018-11-05T21:32:55Z,2018-11-05T21:32:59Z,MERGED,True,5,4,1,https://github.com/hamishimac,Do not assume STDIN_FILENO is available for input from child,1,[],https://github.com/i3/i3/pull/3482,https://github.com/Airblader,4,https://github.com/i3/i3/pull/3482#issuecomment-436043178,"Fixes #3477
Testcases all pass, although I did have to modify t/189-floating-constraints.t to change the ""my sub"" declarations to ""sub"" in order to get this test-case to pass (even without my changes).  Presumably my perl is too old (This is perl 5, version 16, subversion 3 (v5.16.3)).
Perhaps the variable name (stdin_fd) is ill-advised.  ""input_from_child_fd"" might be a clearer name.",Thank you!,True,{}
i3/i3,https://github.com/i3/i3,3483,2018-10-26T16:59:11Z,2018-10-26T18:46:53Z,2018-10-26T18:47:04Z,MERGED,True,2,2,1,https://github.com/soumya92,Update badges in README,1,[],https://github.com/i3/i3/pull/3483,https://github.com/soumya92,1,https://github.com/i3/i3/pull/3483,"issuestats.com seems to have moved on, using shields.io instead.","issuestats.com seems to have moved on, using shields.io instead.",True,{}
i3/i3,https://github.com/i3/i3,3483,2018-10-26T16:59:11Z,2018-10-26T18:46:53Z,2018-10-26T18:47:04Z,MERGED,True,2,2,1,https://github.com/soumya92,Update badges in README,1,[],https://github.com/i3/i3/pull/3483,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3483#issuecomment-433507359,"issuestats.com seems to have moved on, using shields.io instead.",Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3484,2018-10-27T07:52:13Z,2018-11-10T21:12:01Z,2018-12-10T15:14:22Z,MERGED,True,1,0,1,https://github.com/xzfc,Export I3SOCK,1,[],https://github.com/i3/i3/pull/3484,https://github.com/xzfc,1,https://github.com/i3/i3/pull/3484,Fixes #3476,Fixes #3476,True,{}
i3/i3,https://github.com/i3/i3,3485,2018-10-27T12:50:28Z,2018-11-05T21:31:36Z,2018-12-10T15:15:34Z,MERGED,True,12,22,1,https://github.com/xzfc,Draw outer header borders for all layouts,1,[],https://github.com/i3/i3/pull/3485,https://github.com/xzfc,1,https://github.com/i3/i3/pull/3485,"#3412
old
new","#3412
old
new",True,{'HEART': ['https://github.com/aksel']}
i3/i3,https://github.com/i3/i3,3485,2018-10-27T12:50:28Z,2018-11-05T21:31:36Z,2018-12-10T15:15:34Z,MERGED,True,12,22,1,https://github.com/xzfc,Draw outer header borders for all layouts,1,[],https://github.com/i3/i3/pull/3485,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3485#issuecomment-436042761,"#3412
old
new",Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3486,2018-10-29T13:56:02Z,2018-10-29T13:59:26Z,2018-10-29T14:12:56Z,MERGED,True,4,6,1,https://github.com/orestisfl,Fix regression with moving floating windows,1,[],https://github.com/i3/i3/pull/3486,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3486,,,True,{}
i3/i3,https://github.com/i3/i3,3489,2018-10-30T22:29:46Z,2018-10-30T22:35:35Z,2018-10-30T22:35:35Z,CLOSED,False,40,0,1,None,Ensure i3-nagbar runs only one instance with same message and bar type,1,[],https://github.com/i3/i3/pull/3489,None,1,https://github.com/i3/i3/pull/3489,Fixes #3488.,Fixes #3488.,True,{}
i3/i3,https://github.com/i3/i3,3489,2018-10-30T22:29:46Z,2018-10-30T22:35:35Z,2018-10-30T22:35:35Z,CLOSED,False,40,0,1,None,Ensure i3-nagbar runs only one instance with same message and bar type,1,[],https://github.com/i3/i3/pull/3489,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3489#issuecomment-434494707,Fixes #3488.,"This suffers exactly from some of the problems mentioned in #2124, and from the problem that in theory the message might be the same, but the actions might be different.
In summary, this seems unnecessarily complex to not even really solve a problem that barely needs fixing in the first place. Therefore I'm going to reject the PR and issue — it's just not worth it. Thanks for understanding and sending the PR, though!",True,{}
i3/i3,https://github.com/i3/i3,3496,2018-11-03T04:26:07Z,2018-11-03T12:39:50Z,2018-11-03T12:51:47Z,MERGED,True,10,4,2,https://github.com/orestisfl,Update ewmh focused only when new focus is different,1,[],https://github.com/i3/i3/pull/3496,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3496,Fixes #3495.,Fixes #3495.,True,{}
i3/i3,https://github.com/i3/i3,3496,2018-11-03T04:26:07Z,2018-11-03T12:39:50Z,2018-11-03T12:51:47Z,MERGED,True,10,4,2,https://github.com/orestisfl,Update ewmh focused only when new focus is different,1,[],https://github.com/i3/i3/pull/3496,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3496#issuecomment-435560075,Fixes #3495.,"I'll write a better test tomorrow, this one doesn't fail on next and I'll also test the closing window case.
Travis fails for an unrelated reason though (@stapelberg).",True,{}
i3/i3,https://github.com/i3/i3,3496,2018-11-03T04:26:07Z,2018-11-03T12:39:50Z,2018-11-03T12:51:47Z,MERGED,True,10,4,2,https://github.com/orestisfl,Update ewmh focused only when new focus is different,1,[],https://github.com/i3/i3/pull/3496,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/3496#issuecomment-435570058,Fixes #3495.,Sent #3497 to fix travis,True,{}
i3/i3,https://github.com/i3/i3,3496,2018-11-03T04:26:07Z,2018-11-03T12:39:50Z,2018-11-03T12:51:47Z,MERGED,True,10,4,2,https://github.com/orestisfl,Update ewmh focused only when new focus is different,1,[],https://github.com/i3/i3/pull/3496,https://github.com/stapelberg,4,https://github.com/i3/i3/pull/3496#issuecomment-435571690,Fixes #3495.,I think you’ll need to rebase your PR onto next to pick up the travis fix.,True,{}
i3/i3,https://github.com/i3/i3,3496,2018-11-03T04:26:07Z,2018-11-03T12:39:50Z,2018-11-03T12:51:47Z,MERGED,True,10,4,2,https://github.com/orestisfl,Update ewmh focused only when new focus is different,1,[],https://github.com/i3/i3/pull/3496,https://github.com/orestisfl,5,https://github.com/i3/i3/pull/3496#issuecomment-435571939,Fixes #3495.,"Yes, I'll do it later after I enhance the tests.
…
On Sat, Nov 3, 2018, 10:51 Michael Stapelberg ***@***.*** wrote:
 I think you’ll need to rebase your PR onto next to pick up the travis fix.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#3496 (comment)>, or mute the
 thread
 <https://github.com/notifications/unsubscribe-auth/AFgsvrSDQu41VlFAKrxUbOie2_Cq4WDcks5urVkFgaJpZM4YMoW3>
 .",True,{}
i3/i3,https://github.com/i3/i3,3496,2018-11-03T04:26:07Z,2018-11-03T12:39:50Z,2018-11-03T12:51:47Z,MERGED,True,10,4,2,https://github.com/orestisfl,Update ewmh focused only when new focus is different,1,[],https://github.com/i3/i3/pull/3496,https://github.com/orestisfl,6,https://github.com/i3/i3/pull/3496#issuecomment-435583223,Fixes #3495.,"Up. Commands don't produce the first issue, only keybindings since they result in focus in events.",True,{}
i3/i3,https://github.com/i3/i3,3497,2018-11-03T08:17:03Z,2018-11-03T08:42:51Z,2018-11-03T08:50:19Z,MERGED,True,10,10,6,https://github.com/stapelberg,switch to clang-format-4.0,1,[],https://github.com/i3/i3/pull/3497,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3497,"clang-format-3.8 is old enough to have vanished from Debian testing, which we
use for our CI.","clang-format-3.8 is old enough to have vanished from Debian testing, which we
use for our CI.",True,{}
i3/i3,https://github.com/i3/i3,3499,2018-11-04T10:25:52Z,2018-11-04T14:53:15Z,2018-11-04T15:42:39Z,MERGED,True,2,1,1,https://github.com/orestisfl,userguide: break long comment,1,[],https://github.com/i3/i3/pull/3499,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3499,,,True,{}
i3/i3,https://github.com/i3/i3,3501,2018-11-04T19:12:19Z,2018-11-04T22:12:42Z,2018-11-04T22:41:02Z,CLOSED,False,258,96,7,https://github.com/ilikeheaps,(WIP) Rework `tree_flatten`,9,[],https://github.com/i3/i3/pull/3501,https://github.com/ilikeheaps,1,https://github.com/i3/i3/pull/3501,"Complete rework of tree_flatten. Also includes code for #3500 because they share common functions - I'll remove appropriate parts if we don't want it.
Principles
A container is redundant if at the same time:

It's not focused
None of its children is focused (optional?)
Its layout is split horizontal/vertical
Either:

its layout is the same as its parent
it has only one child



I'm currently having problems when the parent is a workspace because sometimes there is a container being implicitly created when you change the layout of a workspace and I would try to flatten it ending up in an endless loop. So I'm not flattening workspaces' children until I figure out how exactly that works.
Reasoning for the rules

If a container is focused the user might want to perform some action on it.
Similar to (1.) but I'm not sure what's being focused when we create a new container so it might be not needed or needed only in certain cases
Tabbed/stack containers always are possibly desired by the user to label and structurize things
Assuming (3.) it just seems right

State of the implementation
Seems to transform the tree correctly but messes up the order of containers and their sizes. I temporarily removed regular calls to tree_flatten on certain events (because they were in functions that I currently use in tree_flatten and ended up in endless loops) and made a binding to call it on-demand for testing.
TODO:

scale container scales (uh, their percentage size) so that they don't actually change in absolute size
keep the order of containers (is this the focus list?)
decide when to call tree_flatten

Alternative approach
I'm considering whether it wouldn't be possible to keep the tree flattened at all times by running some smaller function checking invariants at every change instead of walking the whole tree every few operations. I think that approach could be complicated so I'm sticking with tree_flatten for now.","Complete rework of tree_flatten. Also includes code for #3500 because they share common functions - I'll remove appropriate parts if we don't want it.
Principles
A container is redundant if at the same time:

It's not focused
None of its children is focused (optional?)
Its layout is split horizontal/vertical
Either:

its layout is the same as its parent
it has only one child



I'm currently having problems when the parent is a workspace because sometimes there is a container being implicitly created when you change the layout of a workspace and I would try to flatten it ending up in an endless loop. So I'm not flattening workspaces' children until I figure out how exactly that works.
Reasoning for the rules

If a container is focused the user might want to perform some action on it.
Similar to (1.) but I'm not sure what's being focused when we create a new container so it might be not needed or needed only in certain cases
Tabbed/stack containers always are possibly desired by the user to label and structurize things
Assuming (3.) it just seems right

State of the implementation
Seems to transform the tree correctly but messes up the order of containers and their sizes. I temporarily removed regular calls to tree_flatten on certain events (because they were in functions that I currently use in tree_flatten and ended up in endless loops) and made a binding to call it on-demand for testing.
TODO:

scale container scales (uh, their percentage size) so that they don't actually change in absolute size
keep the order of containers (is this the focus list?)
decide when to call tree_flatten

Alternative approach
I'm considering whether it wouldn't be possible to keep the tree flattened at all times by running some smaller function checking invariants at every change instead of walking the whole tree every few operations. I think that approach could be complicated so I'm sticking with tree_flatten for now.",True,{}
i3/i3,https://github.com/i3/i3,3501,2018-11-04T19:12:19Z,2018-11-04T22:12:42Z,2018-11-04T22:41:02Z,CLOSED,False,258,96,7,https://github.com/ilikeheaps,(WIP) Rework `tree_flatten`,9,[],https://github.com/i3/i3/pull/3501,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3501#issuecomment-435698729,"Complete rework of tree_flatten. Also includes code for #3500 because they share common functions - I'll remove appropriate parts if we don't want it.
Principles
A container is redundant if at the same time:

It's not focused
None of its children is focused (optional?)
Its layout is split horizontal/vertical
Either:

its layout is the same as its parent
it has only one child



I'm currently having problems when the parent is a workspace because sometimes there is a container being implicitly created when you change the layout of a workspace and I would try to flatten it ending up in an endless loop. So I'm not flattening workspaces' children until I figure out how exactly that works.
Reasoning for the rules

If a container is focused the user might want to perform some action on it.
Similar to (1.) but I'm not sure what's being focused when we create a new container so it might be not needed or needed only in certain cases
Tabbed/stack containers always are possibly desired by the user to label and structurize things
Assuming (3.) it just seems right

State of the implementation
Seems to transform the tree correctly but messes up the order of containers and their sizes. I temporarily removed regular calls to tree_flatten on certain events (because they were in functions that I currently use in tree_flatten and ended up in endless loops) and made a binding to call it on-demand for testing.
TODO:

scale container scales (uh, their percentage size) so that they don't actually change in absolute size
keep the order of containers (is this the focus list?)
decide when to call tree_flatten

Alternative approach
I'm considering whether it wouldn't be possible to keep the tree flattened at all times by running some smaller function checking invariants at every change instead of walking the whole tree every few operations. I think that approach could be complicated so I'm sticking with tree_flatten for now.",#3235 and related discussions / issues,True,{}
i3/i3,https://github.com/i3/i3,3501,2018-11-04T19:12:19Z,2018-11-04T22:12:42Z,2018-11-04T22:41:02Z,CLOSED,False,258,96,7,https://github.com/ilikeheaps,(WIP) Rework `tree_flatten`,9,[],https://github.com/i3/i3/pull/3501,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3501#issuecomment-435700682,"Complete rework of tree_flatten. Also includes code for #3500 because they share common functions - I'll remove appropriate parts if we don't want it.
Principles
A container is redundant if at the same time:

It's not focused
None of its children is focused (optional?)
Its layout is split horizontal/vertical
Either:

its layout is the same as its parent
it has only one child



I'm currently having problems when the parent is a workspace because sometimes there is a container being implicitly created when you change the layout of a workspace and I would try to flatten it ending up in an endless loop. So I'm not flattening workspaces' children until I figure out how exactly that works.
Reasoning for the rules

If a container is focused the user might want to perform some action on it.
Similar to (1.) but I'm not sure what's being focused when we create a new container so it might be not needed or needed only in certain cases
Tabbed/stack containers always are possibly desired by the user to label and structurize things
Assuming (3.) it just seems right

State of the implementation
Seems to transform the tree correctly but messes up the order of containers and their sizes. I temporarily removed regular calls to tree_flatten on certain events (because they were in functions that I currently use in tree_flatten and ended up in endless loops) and made a binding to call it on-demand for testing.
TODO:

scale container scales (uh, their percentage size) so that they don't actually change in absolute size
keep the order of containers (is this the focus list?)
decide when to call tree_flatten

Alternative approach
I'm considering whether it wouldn't be possible to keep the tree flattened at all times by running some smaller function checking invariants at every change instead of walking the whole tree every few operations. I think that approach could be complicated so I'm sticking with tree_flatten for now.","Haven't looked at the changes yet, but assumption #1 already sounds wrong to me — operations can also be done on non-focused containers.
Could you explain what exactly this rework fixes (other adding the feature from your feature request)?",True,{}
i3/i3,https://github.com/i3/i3,3501,2018-11-04T19:12:19Z,2018-11-04T22:12:42Z,2018-11-04T22:41:02Z,CLOSED,False,258,96,7,https://github.com/ilikeheaps,(WIP) Rework `tree_flatten`,9,[],https://github.com/i3/i3/pull/3501,https://github.com/ilikeheaps,4,https://github.com/i3/i3/pull/3501#issuecomment-435704983,"Complete rework of tree_flatten. Also includes code for #3500 because they share common functions - I'll remove appropriate parts if we don't want it.
Principles
A container is redundant if at the same time:

It's not focused
None of its children is focused (optional?)
Its layout is split horizontal/vertical
Either:

its layout is the same as its parent
it has only one child



I'm currently having problems when the parent is a workspace because sometimes there is a container being implicitly created when you change the layout of a workspace and I would try to flatten it ending up in an endless loop. So I'm not flattening workspaces' children until I figure out how exactly that works.
Reasoning for the rules

If a container is focused the user might want to perform some action on it.
Similar to (1.) but I'm not sure what's being focused when we create a new container so it might be not needed or needed only in certain cases
Tabbed/stack containers always are possibly desired by the user to label and structurize things
Assuming (3.) it just seems right

State of the implementation
Seems to transform the tree correctly but messes up the order of containers and their sizes. I temporarily removed regular calls to tree_flatten on certain events (because they were in functions that I currently use in tree_flatten and ended up in endless loops) and made a binding to call it on-demand for testing.
TODO:

scale container scales (uh, their percentage size) so that they don't actually change in absolute size
keep the order of containers (is this the focus list?)
decide when to call tree_flatten

Alternative approach
I'm considering whether it wouldn't be possible to keep the tree flattened at all times by running some smaller function checking invariants at every change instead of walking the whole tree every few operations. I think that approach could be complicated so I'm sticking with tree_flatten for now.","I want to fix some issues mentioned in #3235 - currently it's very easy to make a tree with redundant containers that won't be flattened (like H[w1 H[w2 w3]] === H[w1 w2 w3]). I'm not sure which issues exactly I want to solve - I'm hoping to make a mechanism with fairly simple rules that make sense and see where that ends up. I think the ones I proposed are fairly simple but I'm not sure if they make sense.
On (1.): if one wanted to create a container away from the focused point of the tree, he would do that in order to change the perceived layout; that is if he made a layout that would be flattened it would have to be a temporary structure. I see few solutions: not running `tree_flatten' during the sequence of operations or providing commands that avoid flattenable temporary states. These two could (or would) break compatibility.
Another possible solution I see is introducing some kind of ""spawn invulnerability"" to containers so we wouldn't collapse a freshly created container that the user wanted to actually use for something. It could be configurable so that a container can't be flattened during first X calls of tree_flatten. Heck, it could have an option of infinite for compatibility (and keeping the old behaviour during invulnerability but that would make code twice as big).
Essentially most solutions seem to be breaking compatibility to some extent because this tree_flatten is fundamentally different from the old one. The question is: do people actually use things that would be broken by this change? If you have some specific example I think it would be a good basis for further consideration of the rules. If the compatibility is absolutely needed I think the invulnerability thing would be good (without old behaviour - there isn't someone relying on the containers collapsing in a script, is there?).",True,{}
i3/i3,https://github.com/i3/i3,3501,2018-11-04T19:12:19Z,2018-11-04T22:12:42Z,2018-11-04T22:41:02Z,CLOSED,False,258,96,7,https://github.com/ilikeheaps,(WIP) Rework `tree_flatten`,9,[],https://github.com/i3/i3/pull/3501,https://github.com/Airblader,5,https://github.com/i3/i3/pull/3501#issuecomment-435709108,"Complete rework of tree_flatten. Also includes code for #3500 because they share common functions - I'll remove appropriate parts if we don't want it.
Principles
A container is redundant if at the same time:

It's not focused
None of its children is focused (optional?)
Its layout is split horizontal/vertical
Either:

its layout is the same as its parent
it has only one child



I'm currently having problems when the parent is a workspace because sometimes there is a container being implicitly created when you change the layout of a workspace and I would try to flatten it ending up in an endless loop. So I'm not flattening workspaces' children until I figure out how exactly that works.
Reasoning for the rules

If a container is focused the user might want to perform some action on it.
Similar to (1.) but I'm not sure what's being focused when we create a new container so it might be not needed or needed only in certain cases
Tabbed/stack containers always are possibly desired by the user to label and structurize things
Assuming (3.) it just seems right

State of the implementation
Seems to transform the tree correctly but messes up the order of containers and their sizes. I temporarily removed regular calls to tree_flatten on certain events (because they were in functions that I currently use in tree_flatten and ended up in endless loops) and made a binding to call it on-demand for testing.
TODO:

scale container scales (uh, their percentage size) so that they don't actually change in absolute size
keep the order of containers (is this the focus list?)
decide when to call tree_flatten

Alternative approach
I'm considering whether it wouldn't be possible to keep the tree flattened at all times by running some smaller function checking invariants at every change instead of walking the whole tree every few operations. I think that approach could be complicated so I'm sticking with tree_flatten for now.","it's very easy to make a tree with redundant containers that won't be flattened (like H[w1 H[w2 w3]] === H[w1 w2 w3]).

Those structures aren't and shouldn't be equal. I don't see a redundant container in there. This is a perfectly valid setup depending on how you want resizing to work and whether you want to, say, change the layout of that inner container.
I don't have time to go into detail on the rest at the moment, but neither of the other proposals sound like good ideas to me, mostly for the reasons you mentioned: they fundamental change — and break — how i3 containers work. That's a high price to pay, for a benefit I'm not yet seeing.",True,{'THUMBS_UP': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,3501,2018-11-04T19:12:19Z,2018-11-04T22:12:42Z,2018-11-04T22:41:02Z,CLOSED,False,258,96,7,https://github.com/ilikeheaps,(WIP) Rework `tree_flatten`,9,[],https://github.com/i3/i3/pull/3501,https://github.com/ilikeheaps,6,https://github.com/i3/i3/pull/3501#issuecomment-435711139,"Complete rework of tree_flatten. Also includes code for #3500 because they share common functions - I'll remove appropriate parts if we don't want it.
Principles
A container is redundant if at the same time:

It's not focused
None of its children is focused (optional?)
Its layout is split horizontal/vertical
Either:

its layout is the same as its parent
it has only one child



I'm currently having problems when the parent is a workspace because sometimes there is a container being implicitly created when you change the layout of a workspace and I would try to flatten it ending up in an endless loop. So I'm not flattening workspaces' children until I figure out how exactly that works.
Reasoning for the rules

If a container is focused the user might want to perform some action on it.
Similar to (1.) but I'm not sure what's being focused when we create a new container so it might be not needed or needed only in certain cases
Tabbed/stack containers always are possibly desired by the user to label and structurize things
Assuming (3.) it just seems right

State of the implementation
Seems to transform the tree correctly but messes up the order of containers and their sizes. I temporarily removed regular calls to tree_flatten on certain events (because they were in functions that I currently use in tree_flatten and ended up in endless loops) and made a binding to call it on-demand for testing.
TODO:

scale container scales (uh, their percentage size) so that they don't actually change in absolute size
keep the order of containers (is this the focus list?)
decide when to call tree_flatten

Alternative approach
I'm considering whether it wouldn't be possible to keep the tree flattened at all times by running some smaller function checking invariants at every change instead of walking the whole tree every few operations. I think that approach could be complicated so I'm sticking with tree_flatten for now.","I guess I could make it so that by default only h/v splits with one child are flattened (with some restrictions so that it doesn't immediately close a container that the user wants to use) which I think would fix unintuitive behaviour like #3003. In that case making the behaviour that I desire optional would be trivial and wouldn't make the code any more complex. I think that making behaviour expected in #3001 optional would be quite simple as well. Anyways, I'll keep thinking about it. I wanted to consider two containers the same if one can always mimic the other by using appropriate parameters but resizing behaviour is important indeed (depending on how one uses i3).",True,{}
i3/i3,https://github.com/i3/i3,3501,2018-11-04T19:12:19Z,2018-11-04T22:12:42Z,2018-11-04T22:41:02Z,CLOSED,False,258,96,7,https://github.com/ilikeheaps,(WIP) Rework `tree_flatten`,9,[],https://github.com/i3/i3/pull/3501,https://github.com/Airblader,7,https://github.com/i3/i3/pull/3501#issuecomment-435712948,"Complete rework of tree_flatten. Also includes code for #3500 because they share common functions - I'll remove appropriate parts if we don't want it.
Principles
A container is redundant if at the same time:

It's not focused
None of its children is focused (optional?)
Its layout is split horizontal/vertical
Either:

its layout is the same as its parent
it has only one child



I'm currently having problems when the parent is a workspace because sometimes there is a container being implicitly created when you change the layout of a workspace and I would try to flatten it ending up in an endless loop. So I'm not flattening workspaces' children until I figure out how exactly that works.
Reasoning for the rules

If a container is focused the user might want to perform some action on it.
Similar to (1.) but I'm not sure what's being focused when we create a new container so it might be not needed or needed only in certain cases
Tabbed/stack containers always are possibly desired by the user to label and structurize things
Assuming (3.) it just seems right

State of the implementation
Seems to transform the tree correctly but messes up the order of containers and their sizes. I temporarily removed regular calls to tree_flatten on certain events (because they were in functions that I currently use in tree_flatten and ended up in endless loops) and made a binding to call it on-demand for testing.
TODO:

scale container scales (uh, their percentage size) so that they don't actually change in absolute size
keep the order of containers (is this the focus list?)
decide when to call tree_flatten

Alternative approach
I'm considering whether it wouldn't be possible to keep the tree flattened at all times by running some smaller function checking invariants at every change instead of walking the whole tree every few operations. I think that approach could be complicated so I'm sticking with tree_flatten for now.","I think that if we want to rework how tree flattening works, we should first come up with the requirements, the issues of the current implementation actually justifying any change (such as #3003), discuss what the solution should be and, most importantly, define a comprehensive set of test cases through which we can run any new implementation for it (we do already have some tests, but I'm not sure how thorough they are).
I'd like to exercise a high level of caution here because this is really at the core of what defines i3, and container manipulation is probably one of the most important use cases of existing scripts and certainly of day to day user interaction. And I don't think tree flattening is fundamentally broken at the moment, so there's no need to rush things — let's take our time thinking about this one.
As a pretty simple first requirement: we shouldn't break any scenario for a user. That is, we do not remove containers that can in fact serve a purpose, but only those that are truly unnecessary in the sense that any layout derived from the unflattened structure can also be derived from the flattened one.
The reasoning for this is quite simple: I'll take a user having to perform an extra step to close a (for them in that moment unnecessary) container over a user who cannot achieve the layout they need. :-)
Two more points, though I haven't thought them through entirely:

Focused containers should never be treated differently.
I'd like to avoid having some kind of ""pristine"" flag on containers. Layout changes should behave the same regardless of whether commands are executed in sequence or whether there's another command in between that affects something entirely different.

I think as such I'll close this PR for now and we move any discussion to the issue tracker (perhaps we open a fresh issue where we also collect a list of links to related issues like #3003).
Note, please, that #3500 is completely orthogonal/independent of such a change as that discusses adding a new feature. We shouldn't mix these things.",True,{'THUMBS_UP': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,3501,2018-11-04T19:12:19Z,2018-11-04T22:12:42Z,2018-11-04T22:41:02Z,CLOSED,False,258,96,7,https://github.com/ilikeheaps,(WIP) Rework `tree_flatten`,9,[],https://github.com/i3/i3/pull/3501,https://github.com/ilikeheaps,8,https://github.com/i3/i3/pull/3501#issuecomment-435715175,"Complete rework of tree_flatten. Also includes code for #3500 because they share common functions - I'll remove appropriate parts if we don't want it.
Principles
A container is redundant if at the same time:

It's not focused
None of its children is focused (optional?)
Its layout is split horizontal/vertical
Either:

its layout is the same as its parent
it has only one child



I'm currently having problems when the parent is a workspace because sometimes there is a container being implicitly created when you change the layout of a workspace and I would try to flatten it ending up in an endless loop. So I'm not flattening workspaces' children until I figure out how exactly that works.
Reasoning for the rules

If a container is focused the user might want to perform some action on it.
Similar to (1.) but I'm not sure what's being focused when we create a new container so it might be not needed or needed only in certain cases
Tabbed/stack containers always are possibly desired by the user to label and structurize things
Assuming (3.) it just seems right

State of the implementation
Seems to transform the tree correctly but messes up the order of containers and their sizes. I temporarily removed regular calls to tree_flatten on certain events (because they were in functions that I currently use in tree_flatten and ended up in endless loops) and made a binding to call it on-demand for testing.
TODO:

scale container scales (uh, their percentage size) so that they don't actually change in absolute size
keep the order of containers (is this the focus list?)
decide when to call tree_flatten

Alternative approach
I'm considering whether it wouldn't be possible to keep the tree flattened at all times by running some smaller function checking invariants at every change instead of walking the whole tree every few operations. I think that approach could be complicated so I'm sticking with tree_flatten for now.","Note, please, that #3500 is completely orthogonal/independent of such a change as that discusses adding a new feature. We shouldn't mix these things.

Sure, it only got mixed up in here because of how I organized my branches.",True,{}
i3/i3,https://github.com/i3/i3,3504,2018-11-05T13:13:48Z,2018-11-05T21:32:27Z,2018-11-05T21:32:32Z,MERGED,True,1,1,1,https://github.com/Foxboron,Change config order in manpage,1,[],https://github.com/i3/i3/pull/3504,https://github.com/Foxboron,1,https://github.com/i3/i3/pull/3504,"This brings the headline for the configuration files inline with the
recent move to XDG directories.","This brings the headline for the configuration files inline with the
recent move to XDG directories.",True,{}
i3/i3,https://github.com/i3/i3,3504,2018-11-05T13:13:48Z,2018-11-05T21:32:27Z,2018-11-05T21:32:32Z,MERGED,True,1,1,1,https://github.com/Foxboron,Change config order in manpage,1,[],https://github.com/i3/i3/pull/3504,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3504#issuecomment-436043056,"This brings the headline for the configuration files inline with the
recent move to XDG directories.",Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3505,2018-11-05T18:33:36Z,2018-11-05T18:46:00Z,2018-11-05T18:46:00Z,MERGED,True,6,5,1,https://github.com/stapelberg,release.sh: save docs first,1,[],https://github.com/i3/i3/pull/3505,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3505,"Otherwise, as @orestisf1993 pointed out, the saved documentation will have the
wrong version number.","Otherwise, as @orestisf1993 pointed out, the saved documentation will have the
wrong version number.",True,{}
i3/i3,https://github.com/i3/i3,3508,2018-11-06T23:11:03Z,2018-11-07T07:11:22Z,2018-11-07T09:30:58Z,MERGED,True,16,5,1,https://github.com/orestisfl,load_layout: Correctly mark non-leaf containers,1,[],https://github.com/i3/i3/pull/3508,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3508,,,True,{}
i3/i3,https://github.com/i3/i3,3508,2018-11-06T23:11:03Z,2018-11-07T07:11:22Z,2018-11-07T09:30:58Z,MERGED,True,16,5,1,https://github.com/orestisfl,load_layout: Correctly mark non-leaf containers,1,[],https://github.com/i3/i3/pull/3508,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3508#issuecomment-436445171,,"Ok, this isn't that simple because of #2511",True,{}
i3/i3,https://github.com/i3/i3,3508,2018-11-06T23:11:03Z,2018-11-07T07:11:22Z,2018-11-07T09:30:58Z,MERGED,True,16,5,1,https://github.com/orestisfl,load_layout: Correctly mark non-leaf containers,1,[],https://github.com/i3/i3/pull/3508,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/3508#issuecomment-436450306,,"Ok, made it not re-regress #2511.",True,{}
i3/i3,https://github.com/i3/i3,3510,2018-11-07T12:02:35Z,2018-12-12T11:19:44Z,2018-12-12T11:20:17Z,MERGED,True,318,0,2,https://github.com/orestisfl,Introduce cmp_tree test function,1,[],https://github.com/i3/i3/pull/3510,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3510,Related to #3503,Related to #3503,True,{}
i3/i3,https://github.com/i3/i3,3510,2018-11-07T12:02:35Z,2018-12-12T11:19:44Z,2018-12-12T11:20:17Z,MERGED,True,318,0,2,https://github.com/orestisfl,Introduce cmp_tree test function,1,[],https://github.com/i3/i3/pull/3510,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3510#issuecomment-446550667,Related to #3503,@Airblader how would you like to continue with this PR here?,True,{}
i3/i3,https://github.com/i3/i3,3510,2018-11-07T12:02:35Z,2018-12-12T11:19:44Z,2018-12-12T11:20:17Z,MERGED,True,318,0,2,https://github.com/orestisfl,Introduce cmp_tree test function,1,[],https://github.com/i3/i3/pull/3510,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3510#issuecomment-446551242,Related to #3503,"@orestisf1993 LGTM. Anything from your side? If not, feel free to merge it!",True,{}
i3/i3,https://github.com/i3/i3,3510,2018-11-07T12:02:35Z,2018-12-12T11:19:44Z,2018-12-12T11:20:17Z,MERGED,True,318,0,2,https://github.com/orestisfl,Introduce cmp_tree test function,1,[],https://github.com/i3/i3/pull/3510,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/3510#issuecomment-446553076,Related to #3503,"Ok, I am merging it and we'll see if it needs improvements later.",True,{}
i3/i3,https://github.com/i3/i3,3511,2018-11-07T22:02:17Z,2018-11-08T22:31:07Z,2019-08-01T17:09:23Z,MERGED,True,33,29,6,https://github.com/aksel,"For resizing, convert pixel diff to percentage, based on parent.",1,[],https://github.com/i3/i3/pull/3511,https://github.com/aksel,1,https://github.com/i3/i3/pull/3511,"Previously, it first calculated one of the containers' next percentage, and then subtracted the previous percentage to find the actual change.
Now it directly calculates the change, and subtracts and adds the change to the two affected containers.
Also, prematurely return when pixel diff is 0, as no action is necessary.
This is related to this issue on i3-gaps.","Previously, it first calculated one of the containers' next percentage, and then subtracted the previous percentage to find the actual change.
Now it directly calculates the change, and subtracts and adds the change to the two affected containers.
Also, prematurely return when pixel diff is 0, as no action is necessary.
This is related to this issue on i3-gaps.",True,"{'THUMBS_UP': ['https://github.com/orestisfl', 'https://github.com/Airblader']}"
i3/i3,https://github.com/i3/i3,3511,2018-11-07T22:02:17Z,2018-11-08T22:31:07Z,2019-08-01T17:09:23Z,MERGED,True,33,29,6,https://github.com/aksel,"For resizing, convert pixel diff to percentage, based on parent.",1,[],https://github.com/i3/i3/pull/3511,https://github.com/aksel,2,https://github.com/i3/i3/pull/3511#issuecomment-436800741,"Previously, it first calculated one of the containers' next percentage, and then subtracted the previous percentage to find the actual change.
Now it directly calculates the change, and subtracts and adds the change to the two affected containers.
Also, prematurely return when pixel diff is 0, as no action is necessary.
This is related to this issue on i3-gaps.","You're right, probably not a bug in i3. Updated wording. It only affected some containers, and seemed to be related to the way container widths are affected by gaps.",True,{}
i3/i3,https://github.com/i3/i3,3511,2018-11-07T22:02:17Z,2018-11-08T22:31:07Z,2019-08-01T17:09:23Z,MERGED,True,33,29,6,https://github.com/aksel,"For resizing, convert pixel diff to percentage, based on parent.",1,[],https://github.com/i3/i3/pull/3511,https://github.com/aksel,3,https://github.com/i3/i3/pull/3511#issuecomment-436813428,"Previously, it first calculated one of the containers' next percentage, and then subtracted the previous percentage to find the actual change.
Now it directly calculates the change, and subtracts and adds the change to the two affected containers.
Also, prematurely return when pixel diff is 0, as no action is necessary.
This is related to this issue on i3-gaps.","Should (con_)size_in_orientation, as a general util function, include deco_rect.height?",True,{}
i3/i3,https://github.com/i3/i3,3511,2018-11-07T22:02:17Z,2018-11-08T22:31:07Z,2019-08-01T17:09:23Z,MERGED,True,33,29,6,https://github.com/aksel,"For resizing, convert pixel diff to percentage, based on parent.",1,[],https://github.com/i3/i3/pull/3511,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/3511#issuecomment-436829522,"Previously, it first calculated one of the containers' next percentage, and then subtracted the previous percentage to find the actual change.
Now it directly calculates the change, and subtracts and adds the change to the two affected containers.
Also, prematurely return when pixel diff is 0, as no action is necessary.
This is related to this issue on i3-gaps.","For our purpose, no, since percentage (with vertical orientation) is (con's rect height + deco height) / (parent's con rect without deco height).
Maybe we need a better name?",True,{}
i3/i3,https://github.com/i3/i3,3511,2018-11-07T22:02:17Z,2018-11-08T22:31:07Z,2019-08-01T17:09:23Z,MERGED,True,33,29,6,https://github.com/aksel,"For resizing, convert pixel diff to percentage, based on parent.",1,[],https://github.com/i3/i3/pull/3511,https://github.com/Airblader,5,https://github.com/i3/i3/pull/3511#issuecomment-436892980,"Previously, it first calculated one of the containers' next percentage, and then subtracted the previous percentage to find the actual change.
Now it directly calculates the change, and subtracts and adds the change to the two affected containers.
Also, prematurely return when pixel diff is 0, as no action is necessary.
This is related to this issue on i3-gaps.","I'd say if it excludes the decoration, it's more of a window than a container function, right? Either ways I don't think we need to overcomplicate this for now. I'm fine just inlining that oneliner, it's sufficiently self-explanatory.",True,{}
i3/i3,https://github.com/i3/i3,3511,2018-11-07T22:02:17Z,2018-11-08T22:31:07Z,2019-08-01T17:09:23Z,MERGED,True,33,29,6,https://github.com/aksel,"For resizing, convert pixel diff to percentage, based on parent.",1,[],https://github.com/i3/i3/pull/3511,https://github.com/orestisfl,6,https://github.com/i3/i3/pull/3511#issuecomment-436919036,"Previously, it first calculated one of the containers' next percentage, and then subtracted the previous percentage to find the actual change.
Now it directly calculates the change, and subtracts and adds the change to the two affected containers.
Also, prematurely return when pixel diff is 0, as no action is necessary.
This is related to this issue on i3-gaps.","It's not for windows, we actually use it for non-leaf containers to get the
total size in which their children must be rendered.
…
On Thu, Nov 8, 2018, 08:59 Ingo Bürk ***@***.*** wrote:
 I'd say if it excludes the decoration, it's more of a window than a
 container function, right? Either ways I don't think we need to
 overcomplicate this for now. I'm fine just inlining that oneliner, it's
 sufficiently self-explanatory.

 —
 You are receiving this because you were assigned.
 Reply to this email directly, view it on GitHub
 <#3511 (comment)>, or mute the
 thread
 <https://github.com/notifications/unsubscribe-auth/AFgsvhZYOdflMYMokscO5uH5riKcBCfxks5us9ZlgaJpZM4YTgJz>
 .",True,{}
i3/i3,https://github.com/i3/i3,3511,2018-11-07T22:02:17Z,2018-11-08T22:31:07Z,2019-08-01T17:09:23Z,MERGED,True,33,29,6,https://github.com/aksel,"For resizing, convert pixel diff to percentage, based on parent.",1,[],https://github.com/i3/i3/pull/3511,https://github.com/Airblader,7,https://github.com/i3/i3/pull/3511#issuecomment-436959917,"Previously, it first calculated one of the containers' next percentage, and then subtracted the previous percentage to find the actual change.
Now it directly calculates the change, and subtracts and adds the change to the two affected containers.
Also, prematurely return when pixel diff is 0, as no action is necessary.
This is related to this issue on i3-gaps.","Hm, alright. con_undecorated_size_in_orientation or con_rect_size_in_orientation? Still not convinced that requires a separate function at this point in time, though :-)",True,{}
i3/i3,https://github.com/i3/i3,3511,2018-11-07T22:02:17Z,2018-11-08T22:31:07Z,2019-08-01T17:09:23Z,MERGED,True,33,29,6,https://github.com/aksel,"For resizing, convert pixel diff to percentage, based on parent.",1,[],https://github.com/i3/i3/pull/3511,https://github.com/orestisfl,8,https://github.com/i3/i3/pull/3511#issuecomment-436969125,"Previously, it first calculated one of the containers' next percentage, and then subtracted the previous percentage to find the actual change.
Now it directly calculates the change, and subtracts and adds the change to the two affected containers.
Also, prematurely return when pixel diff is 0, as no action is necessary.
This is related to this issue on i3-gaps.","Eh, we will have 3 places to call it (
  
    
      i3/src/render.c
    
    
         Line 195
      in
      44e8fdd
    
  
  
    

        
          
           int total = con_orientation(con) == HORIZ ? p->rect.width : p->rect.height; 
        
    
  

) and
const int total = con_rect_size_in_orientation(con->parent);
is a bit cleaner than
const orientation_t o = con_orientation(con->parent);
const int total = (o == HORIZ ? con->parent->rect.width : con->parent->rect.height);
Up to you.",True,{}
i3/i3,https://github.com/i3/i3,3511,2018-11-07T22:02:17Z,2018-11-08T22:31:07Z,2019-08-01T17:09:23Z,MERGED,True,33,29,6,https://github.com/aksel,"For resizing, convert pixel diff to percentage, based on parent.",1,[],https://github.com/i3/i3/pull/3511,https://github.com/Airblader,9,https://github.com/i3/i3/pull/3511#issuecomment-436969425,"Previously, it first calculated one of the containers' next percentage, and then subtracted the previous percentage to find the actual change.
Now it directly calculates the change, and subtracts and adds the change to the two affected containers.
Also, prematurely return when pixel diff is 0, as no action is necessary.
This is related to this issue on i3-gaps.",If it's more than one place we should use a function. Sorry I'm answering from mobile without looking at the PR all that much. Just coming back from London. ;),True,{}
i3/i3,https://github.com/i3/i3,3511,2018-11-07T22:02:17Z,2018-11-08T22:31:07Z,2019-08-01T17:09:23Z,MERGED,True,33,29,6,https://github.com/aksel,"For resizing, convert pixel diff to percentage, based on parent.",1,[],https://github.com/i3/i3/pull/3511,https://github.com/aksel,10,https://github.com/i3/i3/pull/3511#issuecomment-437176370,"Previously, it first calculated one of the containers' next percentage, and then subtracted the previous percentage to find the actual change.
Now it directly calculates the change, and subtracts and adds the change to the two affected containers.
Also, prematurely return when pixel diff is 0, as no action is necessary.
This is related to this issue on i3-gaps.","I have added the function to con.c, con_rect_size_in_orientation, and inlined the percentage conversion.",True,{}
i3/i3,https://github.com/i3/i3,3511,2018-11-07T22:02:17Z,2018-11-08T22:31:07Z,2019-08-01T17:09:23Z,MERGED,True,33,29,6,https://github.com/aksel,"For resizing, convert pixel diff to percentage, based on parent.",1,[],https://github.com/i3/i3/pull/3511,https://github.com/Airblader,11,https://github.com/i3/i3/pull/3511#issuecomment-437184183,"Previously, it first calculated one of the containers' next percentage, and then subtracted the previous percentage to find the actual change.
Now it directly calculates the change, and subtracts and adds the change to the two affected containers.
Also, prematurely return when pixel diff is 0, as no action is necessary.
This is related to this issue on i3-gaps.","And patch is downstreamed to i3-gaps. 👍 Thanks, guys!",True,"{'THUMBS_UP': ['https://github.com/aksel'], 'HOORAY': ['https://github.com/aksel']}"
i3/i3,https://github.com/i3/i3,3514,2018-11-09T04:15:33Z,2018-12-03T19:16:48Z,2018-12-10T15:13:01Z,MERGED,True,379,28,12,https://github.com/xzfc,Add input and bounding shapes support (#2742),2,[],https://github.com/i3/i3/pull/3514,https://github.com/xzfc,1,https://github.com/i3/i3/pull/3514,"Basic idea: if the window has a shape, set the parent container shape as the union of the window shape and the shape of the frame borders.
Related issue: #2742.
Thanks @psychon for the initial work.

Screenshot of shaped xeyes, oclock, and peek floating windows:



New dependency: xcb-shape.
I check for Shape 1.1 support in src/main.c. Whereas it is possible to support Shape 1.0 (it does not have input shapes, only bounding shapes), but I think it does not worth that.
Shapes in tiled windows are weird: if shaped window is in tabbed/stacked container and focus_follows_mouse is enabled, it may be hard not to raise window underneath when moving mouse cursor.
Rendering of shaped tiled windows: the similar issue with windows titlebars as with transparent windows or in i3-gaps with titlebars.

Concerning 1, should I update debian/control?
Concerning 3 and 4, I'm not sure what i3 should do with shaped non-floating windows. Ignore shaping of tiled windows or leave it as is?","Basic idea: if the window has a shape, set the parent container shape as the union of the window shape and the shape of the frame borders.
Related issue: #2742.
Thanks @psychon for the initial work.

Screenshot of shaped xeyes, oclock, and peek floating windows:



New dependency: xcb-shape.
I check for Shape 1.1 support in src/main.c. Whereas it is possible to support Shape 1.0 (it does not have input shapes, only bounding shapes), but I think it does not worth that.
Shapes in tiled windows are weird: if shaped window is in tabbed/stacked container and focus_follows_mouse is enabled, it may be hard not to raise window underneath when moving mouse cursor.
Rendering of shaped tiled windows: the similar issue with windows titlebars as with transparent windows or in i3-gaps with titlebars.

Concerning 1, should I update debian/control?
Concerning 3 and 4, I'm not sure what i3 should do with shaped non-floating windows. Ignore shaping of tiled windows or leave it as is?",True,"{'HOORAY': ['https://github.com/chocoelho', 'https://github.com/gsnewmark']}"
i3/i3,https://github.com/i3/i3,3514,2018-11-09T04:15:33Z,2018-12-03T19:16:48Z,2018-12-10T15:13:01Z,MERGED,True,379,28,12,https://github.com/xzfc,Add input and bounding shapes support (#2742),2,[],https://github.com/i3/i3/pull/3514,https://github.com/xzfc,2,https://github.com/i3/i3/pull/3514#issuecomment-437245616,"Basic idea: if the window has a shape, set the parent container shape as the union of the window shape and the shape of the frame borders.
Related issue: #2742.
Thanks @psychon for the initial work.

Screenshot of shaped xeyes, oclock, and peek floating windows:



New dependency: xcb-shape.
I check for Shape 1.1 support in src/main.c. Whereas it is possible to support Shape 1.0 (it does not have input shapes, only bounding shapes), but I think it does not worth that.
Shapes in tiled windows are weird: if shaped window is in tabbed/stacked container and focus_follows_mouse is enabled, it may be hard not to raise window underneath when moving mouse cursor.
Rendering of shaped tiled windows: the similar issue with windows titlebars as with transparent windows or in i3-gaps with titlebars.

Concerning 1, should I update debian/control?
Concerning 3 and 4, I'm not sure what i3 should do with shaped non-floating windows. Ignore shaping of tiled windows or leave it as is?","No package 'xcb-shape' found.

Travis build failure is related to new dependency.",True,{}
i3/i3,https://github.com/i3/i3,3514,2018-11-09T04:15:33Z,2018-12-03T19:16:48Z,2018-12-10T15:13:01Z,MERGED,True,379,28,12,https://github.com/xzfc,Add input and bounding shapes support (#2742),2,[],https://github.com/i3/i3/pull/3514,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3514#issuecomment-437266471,"Basic idea: if the window has a shape, set the parent container shape as the union of the window shape and the shape of the frame borders.
Related issue: #2742.
Thanks @psychon for the initial work.

Screenshot of shaped xeyes, oclock, and peek floating windows:



New dependency: xcb-shape.
I check for Shape 1.1 support in src/main.c. Whereas it is possible to support Shape 1.0 (it does not have input shapes, only bounding shapes), but I think it does not worth that.
Shapes in tiled windows are weird: if shaped window is in tabbed/stacked container and focus_follows_mouse is enabled, it may be hard not to raise window underneath when moving mouse cursor.
Rendering of shaped tiled windows: the similar issue with windows titlebars as with transparent windows or in i3-gaps with titlebars.

Concerning 1, should I update debian/control?
Concerning 3 and 4, I'm not sure what i3 should do with shaped non-floating windows. Ignore shaping of tiled windows or leave it as is?","Thanks for the PR! This is really cool. I'll have a look at the PR a bit later, but regarding your questions:

Yeah, please update it.
I think that's fine. Shape 1.1 predates i3 by years, so if you have i3 on your system, chances are your server supports no Shape or 1.1. And you only lose shape support otherwise, so yeah.
I think I'd accept that for now. I think chances are there's more usecases where it follows user intent than cases where it is a problem.
That's more of a problem, I'll get back on this later as well as there's a few things I wanna check out first.",True,{}
i3/i3,https://github.com/i3/i3,3514,2018-11-09T04:15:33Z,2018-12-03T19:16:48Z,2018-12-10T15:13:01Z,MERGED,True,379,28,12,https://github.com/xzfc,Add input and bounding shapes support (#2742),2,[],https://github.com/i3/i3/pull/3514,https://github.com/Airblader,4,https://github.com/i3/i3/pull/3514#issuecomment-437287475,"Basic idea: if the window has a shape, set the parent container shape as the union of the window shape and the shape of the frame borders.
Related issue: #2742.
Thanks @psychon for the initial work.

Screenshot of shaped xeyes, oclock, and peek floating windows:



New dependency: xcb-shape.
I check for Shape 1.1 support in src/main.c. Whereas it is possible to support Shape 1.0 (it does not have input shapes, only bounding shapes), but I think it does not worth that.
Shapes in tiled windows are weird: if shaped window is in tabbed/stacked container and focus_follows_mouse is enabled, it may be hard not to raise window underneath when moving mouse cursor.
Rendering of shaped tiled windows: the similar issue with windows titlebars as with transparent windows or in i3-gaps with titlebars.

Concerning 1, should I update debian/control?
Concerning 3 and 4, I'm not sure what i3 should do with shaped non-floating windows. Ignore shaping of tiled windows or leave it as is?","FYI, for question 4 #1966 would be the solution, but that isn't exactly a trivial change. I can't see a good way to prevent this issue with simple means, so I think for now we'd have to disable Shape for tiled windows.",True,{}
i3/i3,https://github.com/i3/i3,3514,2018-11-09T04:15:33Z,2018-12-03T19:16:48Z,2018-12-10T15:13:01Z,MERGED,True,379,28,12,https://github.com/xzfc,Add input and bounding shapes support (#2742),2,[],https://github.com/i3/i3/pull/3514,https://github.com/xzfc,5,https://github.com/i3/i3/pull/3514#issuecomment-437338378,"Basic idea: if the window has a shape, set the parent container shape as the union of the window shape and the shape of the frame borders.
Related issue: #2742.
Thanks @psychon for the initial work.

Screenshot of shaped xeyes, oclock, and peek floating windows:



New dependency: xcb-shape.
I check for Shape 1.1 support in src/main.c. Whereas it is possible to support Shape 1.0 (it does not have input shapes, only bounding shapes), but I think it does not worth that.
Shapes in tiled windows are weird: if shaped window is in tabbed/stacked container and focus_follows_mouse is enabled, it may be hard not to raise window underneath when moving mouse cursor.
Rendering of shaped tiled windows: the similar issue with windows titlebars as with transparent windows or in i3-gaps with titlebars.

Concerning 1, should I update debian/control?
Concerning 3 and 4, I'm not sure what i3 should do with shaped non-floating windows. Ignore shaping of tiled windows or leave it as is?","Updated regarding to the comments, added missing xcb_flush() in x_set_shape(), and made shaping only for floating windows.",True,{}
i3/i3,https://github.com/i3/i3,3514,2018-11-09T04:15:33Z,2018-12-03T19:16:48Z,2018-12-10T15:13:01Z,MERGED,True,379,28,12,https://github.com/xzfc,Add input and bounding shapes support (#2742),2,[],https://github.com/i3/i3/pull/3514,https://github.com/xzfc,6,https://github.com/i3/i3/pull/3514#issuecomment-439681390,"Basic idea: if the window has a shape, set the parent container shape as the union of the window shape and the shape of the frame borders.
Related issue: #2742.
Thanks @psychon for the initial work.

Screenshot of shaped xeyes, oclock, and peek floating windows:



New dependency: xcb-shape.
I check for Shape 1.1 support in src/main.c. Whereas it is possible to support Shape 1.0 (it does not have input shapes, only bounding shapes), but I think it does not worth that.
Shapes in tiled windows are weird: if shaped window is in tabbed/stacked container and focus_follows_mouse is enabled, it may be hard not to raise window underneath when moving mouse cursor.
Rendering of shaped tiled windows: the similar issue with windows titlebars as with transparent windows or in i3-gaps with titlebars.

Concerning 1, should I update debian/control?
Concerning 3 and 4, I'm not sure what i3 should do with shaped non-floating windows. Ignore shaping of tiled windows or leave it as is?","New update.

Changes regarding to the new comments.
Moved shaped, input_shaped booleans from struct con_state (src/x.c) to struct Window (include/data.h) as it reflects the state of application window, not the state of the container.
Initial check for the shape in manage_window (to handle case when the window sets the shape once and newer updates it).
Fixed segfault.",True,{}
i3/i3,https://github.com/i3/i3,3514,2018-11-09T04:15:33Z,2018-12-03T19:16:48Z,2018-12-10T15:13:01Z,MERGED,True,379,28,12,https://github.com/xzfc,Add input and bounding shapes support (#2742),2,[],https://github.com/i3/i3/pull/3514,https://github.com/Airblader,7,https://github.com/i3/i3/pull/3514#issuecomment-439707872,"Basic idea: if the window has a shape, set the parent container shape as the union of the window shape and the shape of the frame borders.
Related issue: #2742.
Thanks @psychon for the initial work.

Screenshot of shaped xeyes, oclock, and peek floating windows:



New dependency: xcb-shape.
I check for Shape 1.1 support in src/main.c. Whereas it is possible to support Shape 1.0 (it does not have input shapes, only bounding shapes), but I think it does not worth that.
Shapes in tiled windows are weird: if shaped window is in tabbed/stacked container and focus_follows_mouse is enabled, it may be hard not to raise window underneath when moving mouse cursor.
Rendering of shaped tiled windows: the similar issue with windows titlebars as with transparent windows or in i3-gaps with titlebars.

Concerning 1, should I update debian/control?
Concerning 3 and 4, I'm not sure what i3 should do with shaped non-floating windows. Ignore shaping of tiled windows or leave it as is?","@xzfc Great, thanks! Could you also rebase to resolve the conflict?",True,{}
i3/i3,https://github.com/i3/i3,3514,2018-11-09T04:15:33Z,2018-12-03T19:16:48Z,2018-12-10T15:13:01Z,MERGED,True,379,28,12,https://github.com/xzfc,Add input and bounding shapes support (#2742),2,[],https://github.com/i3/i3/pull/3514,https://github.com/xzfc,8,https://github.com/i3/i3/pull/3514#issuecomment-439712250,"Basic idea: if the window has a shape, set the parent container shape as the union of the window shape and the shape of the frame borders.
Related issue: #2742.
Thanks @psychon for the initial work.

Screenshot of shaped xeyes, oclock, and peek floating windows:



New dependency: xcb-shape.
I check for Shape 1.1 support in src/main.c. Whereas it is possible to support Shape 1.0 (it does not have input shapes, only bounding shapes), but I think it does not worth that.
Shapes in tiled windows are weird: if shaped window is in tabbed/stacked container and focus_follows_mouse is enabled, it may be hard not to raise window underneath when moving mouse cursor.
Rendering of shaped tiled windows: the similar issue with windows titlebars as with transparent windows or in i3-gaps with titlebars.

Concerning 1, should I update debian/control?
Concerning 3 and 4, I'm not sure what i3 should do with shaped non-floating windows. Ignore shaping of tiled windows or leave it as is?",Rebased.,True,{}
i3/i3,https://github.com/i3/i3,3514,2018-11-09T04:15:33Z,2018-12-03T19:16:48Z,2018-12-10T15:13:01Z,MERGED,True,379,28,12,https://github.com/xzfc,Add input and bounding shapes support (#2742),2,[],https://github.com/i3/i3/pull/3514,https://github.com/orestisfl,9,https://github.com/i3/i3/pull/3514#issuecomment-441199279,"Basic idea: if the window has a shape, set the parent container shape as the union of the window shape and the shape of the frame borders.
Related issue: #2742.
Thanks @psychon for the initial work.

Screenshot of shaped xeyes, oclock, and peek floating windows:



New dependency: xcb-shape.
I check for Shape 1.1 support in src/main.c. Whereas it is possible to support Shape 1.0 (it does not have input shapes, only bounding shapes), but I think it does not worth that.
Shapes in tiled windows are weird: if shaped window is in tabbed/stacked container and focus_follows_mouse is enabled, it may be hard not to raise window underneath when moving mouse cursor.
Rendering of shaped tiled windows: the similar issue with windows titlebars as with transparent windows or in i3-gaps with titlebars.

Concerning 1, should I update debian/control?
Concerning 3 and 4, I'm not sure what i3 should do with shaped non-floating windows. Ignore shaping of tiled windows or leave it as is?",I can take a look but not immediately. Let's say an upper bound of one week?,True,{}
i3/i3,https://github.com/i3/i3,3514,2018-11-09T04:15:33Z,2018-12-03T19:16:48Z,2018-12-10T15:13:01Z,MERGED,True,379,28,12,https://github.com/xzfc,Add input and bounding shapes support (#2742),2,[],https://github.com/i3/i3/pull/3514,https://github.com/xzfc,10,https://github.com/i3/i3/pull/3514#issuecomment-441336278,"Basic idea: if the window has a shape, set the parent container shape as the union of the window shape and the shape of the frame borders.
Related issue: #2742.
Thanks @psychon for the initial work.

Screenshot of shaped xeyes, oclock, and peek floating windows:



New dependency: xcb-shape.
I check for Shape 1.1 support in src/main.c. Whereas it is possible to support Shape 1.0 (it does not have input shapes, only bounding shapes), but I think it does not worth that.
Shapes in tiled windows are weird: if shaped window is in tabbed/stacked container and focus_follows_mouse is enabled, it may be hard not to raise window underneath when moving mouse cursor.
Rendering of shaped tiled windows: the similar issue with windows titlebars as with transparent windows or in i3-gaps with titlebars.

Concerning 1, should I update debian/control?
Concerning 3 and 4, I'm not sure what i3 should do with shaped non-floating windows. Ignore shaping of tiled windows or leave it as is?","Travis still fails with E: Unable to locate package clang-format-4.0. I think it's related to #3497.
https://travis-ci.org/i3/i3/jobs/456670878#L557",True,{}
i3/i3,https://github.com/i3/i3,3514,2018-11-09T04:15:33Z,2018-12-03T19:16:48Z,2018-12-10T15:13:01Z,MERGED,True,379,28,12,https://github.com/xzfc,Add input and bounding shapes support (#2742),2,[],https://github.com/i3/i3/pull/3514,https://github.com/Airblader,11,https://github.com/i3/i3/pull/3514#issuecomment-441359119,"Basic idea: if the window has a shape, set the parent container shape as the union of the window shape and the shape of the frame borders.
Related issue: #2742.
Thanks @psychon for the initial work.

Screenshot of shaped xeyes, oclock, and peek floating windows:



New dependency: xcb-shape.
I check for Shape 1.1 support in src/main.c. Whereas it is possible to support Shape 1.0 (it does not have input shapes, only bounding shapes), but I think it does not worth that.
Shapes in tiled windows are weird: if shaped window is in tabbed/stacked container and focus_follows_mouse is enabled, it may be hard not to raise window underneath when moving mouse cursor.
Rendering of shaped tiled windows: the similar issue with windows titlebars as with transparent windows or in i3-gaps with titlebars.

Concerning 1, should I update debian/control?
Concerning 3 and 4, I'm not sure what i3 should do with shaped non-floating windows. Ignore shaping of tiled windows or leave it as is?","Hm, that's certainly odd because I just restarted a Travis build on next and it goes through fine. I can't investigate it at the moment, though.",True,{}
i3/i3,https://github.com/i3/i3,3514,2018-11-09T04:15:33Z,2018-12-03T19:16:48Z,2018-12-10T15:13:01Z,MERGED,True,379,28,12,https://github.com/xzfc,Add input and bounding shapes support (#2742),2,[],https://github.com/i3/i3/pull/3514,https://github.com/Airblader,12,https://github.com/i3/i3/pull/3514#issuecomment-442232610,"Basic idea: if the window has a shape, set the parent container shape as the union of the window shape and the shape of the frame borders.
Related issue: #2742.
Thanks @psychon for the initial work.

Screenshot of shaped xeyes, oclock, and peek floating windows:



New dependency: xcb-shape.
I check for Shape 1.1 support in src/main.c. Whereas it is possible to support Shape 1.0 (it does not have input shapes, only bounding shapes), but I think it does not worth that.
Shapes in tiled windows are weird: if shaped window is in tabbed/stacked container and focus_follows_mouse is enabled, it may be hard not to raise window underneath when moving mouse cursor.
Rendering of shaped tiled windows: the similar issue with windows titlebars as with transparent windows or in i3-gaps with titlebars.

Concerning 1, should I update debian/control?
Concerning 3 and 4, I'm not sure what i3 should do with shaped non-floating windows. Ignore shaping of tiled windows or leave it as is?","@stapelberg Do you happen to know why clang-format-4.0 can't be found when building this PR? Searching for it it does seem like it's not in debian:sid, but then how does it work on the next branch?",True,{}
i3/i3,https://github.com/i3/i3,3514,2018-11-09T04:15:33Z,2018-12-03T19:16:48Z,2018-12-10T15:13:01Z,MERGED,True,379,28,12,https://github.com/xzfc,Add input and bounding shapes support (#2742),2,[],https://github.com/i3/i3/pull/3514,https://github.com/stapelberg,13,https://github.com/i3/i3/pull/3514#issuecomment-442388290,"Basic idea: if the window has a shape, set the parent container shape as the union of the window shape and the shape of the frame borders.
Related issue: #2742.
Thanks @psychon for the initial work.

Screenshot of shaped xeyes, oclock, and peek floating windows:



New dependency: xcb-shape.
I check for Shape 1.1 support in src/main.c. Whereas it is possible to support Shape 1.0 (it does not have input shapes, only bounding shapes), but I think it does not worth that.
Shapes in tiled windows are weird: if shaped window is in tabbed/stacked container and focus_follows_mouse is enabled, it may be hard not to raise window underneath when moving mouse cursor.
Rendering of shaped tiled windows: the similar issue with windows titlebars as with transparent windows or in i3-gaps with titlebars.

Concerning 1, should I update debian/control?
Concerning 3 and 4, I'm not sure what i3 should do with shaped non-floating windows. Ignore shaping of tiled windows or leave it as is?","Does it help to rebase the PR onto next? If no, let me know and I’ll take a look this evening.",True,{}
i3/i3,https://github.com/i3/i3,3514,2018-11-09T04:15:33Z,2018-12-03T19:16:48Z,2018-12-10T15:13:01Z,MERGED,True,379,28,12,https://github.com/xzfc,Add input and bounding shapes support (#2742),2,[],https://github.com/i3/i3/pull/3514,https://github.com/Airblader,14,https://github.com/i3/i3/pull/3514#issuecomment-442393698,"Basic idea: if the window has a shape, set the parent container shape as the union of the window shape and the shape of the frame borders.
Related issue: #2742.
Thanks @psychon for the initial work.

Screenshot of shaped xeyes, oclock, and peek floating windows:



New dependency: xcb-shape.
I check for Shape 1.1 support in src/main.c. Whereas it is possible to support Shape 1.0 (it does not have input shapes, only bounding shapes), but I think it does not worth that.
Shapes in tiled windows are weird: if shaped window is in tabbed/stacked container and focus_follows_mouse is enabled, it may be hard not to raise window underneath when moving mouse cursor.
Rendering of shaped tiled windows: the similar issue with windows titlebars as with transparent windows or in i3-gaps with titlebars.

Concerning 1, should I update debian/control?
Concerning 3 and 4, I'm not sure what i3 should do with shaped non-floating windows. Ignore shaping of tiled windows or leave it as is?","We rebased a few days ago and it failed then, too. I don't think we changed anything in the time since either.",True,{}
i3/i3,https://github.com/i3/i3,3514,2018-11-09T04:15:33Z,2018-12-03T19:16:48Z,2018-12-10T15:13:01Z,MERGED,True,379,28,12,https://github.com/xzfc,Add input and bounding shapes support (#2742),2,[],https://github.com/i3/i3/pull/3514,https://github.com/stapelberg,15,https://github.com/i3/i3/pull/3514#issuecomment-442400719,"Basic idea: if the window has a shape, set the parent container shape as the union of the window shape and the shape of the frame borders.
Related issue: #2742.
Thanks @psychon for the initial work.

Screenshot of shaped xeyes, oclock, and peek floating windows:



New dependency: xcb-shape.
I check for Shape 1.1 support in src/main.c. Whereas it is possible to support Shape 1.0 (it does not have input shapes, only bounding shapes), but I think it does not worth that.
Shapes in tiled windows are weird: if shaped window is in tabbed/stacked container and focus_follows_mouse is enabled, it may be hard not to raise window underneath when moving mouse cursor.
Rendering of shaped tiled windows: the similar issue with windows titlebars as with transparent windows or in i3-gaps with titlebars.

Concerning 1, should I update debian/control?
Concerning 3 and 4, I'm not sure what i3 should do with shaped non-floating windows. Ignore shaping of tiled windows or leave it as is?","Turns out clang-format-4.0 vanished from Debian testing, too, see https://packages.debian.org/search?keywords=clang-format-4.0&searchon=names&suite=all&section=all
Essentially, we’ll need another commit such as eedb257#diff-7985139ae9b6efb45373e3e36e444224, but with clang-format-6.0, I suppose?",True,{}
i3/i3,https://github.com/i3/i3,3514,2018-11-09T04:15:33Z,2018-12-03T19:16:48Z,2018-12-10T15:13:01Z,MERGED,True,379,28,12,https://github.com/xzfc,Add input and bounding shapes support (#2742),2,[],https://github.com/i3/i3/pull/3514,https://github.com/stapelberg,16,https://github.com/i3/i3/pull/3514#issuecomment-442514884,"Basic idea: if the window has a shape, set the parent container shape as the union of the window shape and the shape of the frame borders.
Related issue: #2742.
Thanks @psychon for the initial work.

Screenshot of shaped xeyes, oclock, and peek floating windows:



New dependency: xcb-shape.
I check for Shape 1.1 support in src/main.c. Whereas it is possible to support Shape 1.0 (it does not have input shapes, only bounding shapes), but I think it does not worth that.
Shapes in tiled windows are weird: if shaped window is in tabbed/stacked container and focus_follows_mouse is enabled, it may be hard not to raise window underneath when moving mouse cursor.
Rendering of shaped tiled windows: the similar issue with windows titlebars as with transparent windows or in i3-gaps with titlebars.

Concerning 1, should I update debian/control?
Concerning 3 and 4, I'm not sure what i3 should do with shaped non-floating windows. Ignore shaping of tiled windows or leave it as is?",Try rebasing to next now.,True,{}
i3/i3,https://github.com/i3/i3,3514,2018-11-09T04:15:33Z,2018-12-03T19:16:48Z,2018-12-10T15:13:01Z,MERGED,True,379,28,12,https://github.com/xzfc,Add input and bounding shapes support (#2742),2,[],https://github.com/i3/i3/pull/3514,https://github.com/xzfc,17,https://github.com/i3/i3/pull/3514#issuecomment-443400393,"Basic idea: if the window has a shape, set the parent container shape as the union of the window shape and the shape of the frame borders.
Related issue: #2742.
Thanks @psychon for the initial work.

Screenshot of shaped xeyes, oclock, and peek floating windows:



New dependency: xcb-shape.
I check for Shape 1.1 support in src/main.c. Whereas it is possible to support Shape 1.0 (it does not have input shapes, only bounding shapes), but I think it does not worth that.
Shapes in tiled windows are weird: if shaped window is in tabbed/stacked container and focus_follows_mouse is enabled, it may be hard not to raise window underneath when moving mouse cursor.
Rendering of shaped tiled windows: the similar issue with windows titlebars as with transparent windows or in i3-gaps with titlebars.

Concerning 1, should I update debian/control?
Concerning 3 and 4, I'm not sure what i3 should do with shaped non-floating windows. Ignore shaping of tiled windows or leave it as is?","Added test case.
Rebased onto next. Travis is now green. ✅
Applied the suggested change by @orestisf1993.",True,{}
i3/i3,https://github.com/i3/i3,3514,2018-11-09T04:15:33Z,2018-12-03T19:16:48Z,2018-12-10T15:13:01Z,MERGED,True,379,28,12,https://github.com/xzfc,Add input and bounding shapes support (#2742),2,[],https://github.com/i3/i3/pull/3514,https://github.com/algmyr,18,https://github.com/i3/i3/pull/3514#issuecomment-444130228,"Basic idea: if the window has a shape, set the parent container shape as the union of the window shape and the shape of the frame borders.
Related issue: #2742.
Thanks @psychon for the initial work.

Screenshot of shaped xeyes, oclock, and peek floating windows:



New dependency: xcb-shape.
I check for Shape 1.1 support in src/main.c. Whereas it is possible to support Shape 1.0 (it does not have input shapes, only bounding shapes), but I think it does not worth that.
Shapes in tiled windows are weird: if shaped window is in tabbed/stacked container and focus_follows_mouse is enabled, it may be hard not to raise window underneath when moving mouse cursor.
Rendering of shaped tiled windows: the similar issue with windows titlebars as with transparent windows or in i3-gaps with titlebars.

Concerning 1, should I update debian/control?
Concerning 3 and 4, I'm not sure what i3 should do with shaped non-floating windows. Ignore shaping of tiled windows or leave it as is?","Just wanted to leave a thank you for everyone who worked on the feature. It seems to work perfectly, ignoring non-floating windows as was mentioned earlier. Superb work!",True,"{'HOORAY': ['https://github.com/Airblader', 'https://github.com/tcK1', 'https://github.com/orestisfl', 'https://github.com/samcoult'], 'THUMBS_UP': ['https://github.com/samcoult']}"
i3/i3,https://github.com/i3/i3,3516,2018-11-09T17:42:17Z,2018-11-09T20:01:58Z,2018-11-10T13:24:49Z,MERGED,True,10,4,1,https://github.com/orestisfl,Truncate wm_name utf8 strings to first zero byte,1,[],https://github.com/i3/i3/pull/3516,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3516,Fixes #3515,Fixes #3515,True,{}
i3/i3,https://github.com/i3/i3,3521,2018-11-13T08:46:55Z,2018-11-13T09:24:12Z,2019-02-04T00:27:56Z,MERGED,True,5,3,1,https://github.com/cedws,Update userguide docs for strip_workspace_*.,1,[],https://github.com/i3/i3/pull/3521,https://github.com/cedws,1,https://github.com/i3/i3/pull/3521,Fixes #3520.,Fixes #3520.,True,{}
i3/i3,https://github.com/i3/i3,3524,2018-11-15T11:50:04Z,2018-11-15T11:58:00Z,2018-11-15T12:07:55Z,MERGED,True,6,4,1,https://github.com/orestisfl,randr.c: Fix regression with focusing NULL container,1,[],https://github.com/i3/i3/pull/3524,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3524,Fixes #3523.,Fixes #3523.,True,{}
i3/i3,https://github.com/i3/i3,3533,2018-11-28T16:28:59Z,2018-11-28T16:38:17Z,2018-11-28T16:38:21Z,MERGED,True,10,10,6,https://github.com/stapelberg,switch to clang-format-6.0,1,[],https://github.com/i3/i3/pull/3533,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3533,,,True,{}
i3/i3,https://github.com/i3/i3,3541,2018-12-04T18:55:57Z,2018-12-05T11:09:10Z,2018-12-05T11:09:13Z,MERGED,True,18,28,1,https://github.com/orestisfl,Apply title_align to non-leaf containers,1,[],https://github.com/i3/i3/pull/3541,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3541,"Additionally, marks will now display for non-leaf containers.
Seems simple enough but I'll revisit it to see if I missed anything, seems to work will run it on my desktop for a bit.
Fixes #3540.","Additionally, marks will now display for non-leaf containers.
Seems simple enough but I'll revisit it to see if I missed anything, seems to work will run it on my desktop for a bit.
Fixes #3540.",True,{}
i3/i3,https://github.com/i3/i3,3545,2018-12-05T10:42:01Z,2022-04-25T21:25:20Z,2022-04-25T21:25:20Z,CLOSED,False,406,322,9,https://github.com/xzfc,bspwm-like resize,2,[],https://github.com/i3/i3/pull/3545,https://github.com/xzfc,1,https://github.com/i3/i3/pull/3545,"resize both axis at the same time
resize windows continuously during mouse drag, not afterwards

Video: http://dump.bitcheese.net/files/gaxygyl/1412.mp4
Fixes #1122.
Fixes #1412.
Closes #3598.","resize both axis at the same time
resize windows continuously during mouse drag, not afterwards

Video: http://dump.bitcheese.net/files/gaxygyl/1412.mp4
Fixes #1122.
Fixes #1412.
Closes #3598.",True,"{'THUMBS_UP': ['https://github.com/Airblader', 'https://github.com/danr', 'https://github.com/orestisfl', 'https://github.com/Maskedman99', 'https://github.com/cmprmsd', 'https://github.com/shelaf'], 'HOORAY': ['https://github.com/CNG']}"
i3/i3,https://github.com/i3/i3,3545,2018-12-05T10:42:01Z,2022-04-25T21:25:20Z,2022-04-25T21:25:20Z,CLOSED,False,406,322,9,https://github.com/xzfc,bspwm-like resize,2,[],https://github.com/i3/i3/pull/3545,https://github.com/xzfc,2,https://github.com/i3/i3/pull/3545#issuecomment-444440915,"resize both axis at the same time
resize windows continuously during mouse drag, not afterwards

Video: http://dump.bitcheese.net/files/gaxygyl/1412.mp4
Fixes #1122.
Fixes #1412.
Closes #3598.","resize windows continuously during mouse drag, not afterwards

This feature suffers greatly from #3544. I think we need to introduce some recursive function to calculate minimal size of the container.",True,{'THUMBS_UP': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,3545,2018-12-05T10:42:01Z,2022-04-25T21:25:20Z,2022-04-25T21:25:20Z,CLOSED,False,406,322,9,https://github.com/xzfc,bspwm-like resize,2,[],https://github.com/i3/i3/pull/3545,https://github.com/clapbr,3,https://github.com/i3/i3/pull/3545#issuecomment-489368272,"resize both axis at the same time
resize windows continuously during mouse drag, not afterwards

Video: http://dump.bitcheese.net/files/gaxygyl/1412.mp4
Fixes #1122.
Fixes #1412.
Closes #3598.","Tested this PR as I could benefit for acessibility reasons, it works but has an issue. When I start dragging it resizes up to a point then deactivates quickly while I´m still moving, without me releasing either modkey or right click.",True,{}
i3/i3,https://github.com/i3/i3,3545,2018-12-05T10:42:01Z,2022-04-25T21:25:20Z,2022-04-25T21:25:20Z,CLOSED,False,406,322,9,https://github.com/xzfc,bspwm-like resize,2,[],https://github.com/i3/i3/pull/3545,https://github.com/xzfc,4,https://github.com/i3/i3/pull/3545#issuecomment-489494295,"resize both axis at the same time
resize windows continuously during mouse drag, not afterwards

Video: http://dump.bitcheese.net/files/gaxygyl/1412.mp4
Fixes #1122.
Fixes #1412.
Closes #3598.",@clapbr I can't reproduce. Could you provide logs and/or steps to reproduce this?,True,{}
i3/i3,https://github.com/i3/i3,3545,2018-12-05T10:42:01Z,2022-04-25T21:25:20Z,2022-04-25T21:25:20Z,CLOSED,False,406,322,9,https://github.com/xzfc,bspwm-like resize,2,[],https://github.com/i3/i3/pull/3545,https://github.com/clapbr,5,https://github.com/i3/i3/pull/3545#issuecomment-490669454,"resize both axis at the same time
resize windows continuously during mouse drag, not afterwards

Video: http://dump.bitcheese.net/files/gaxygyl/1412.mp4
Fixes #1122.
Fixes #1412.
Closes #3598.","@clapbr I can't reproduce. Could you provide logs and/or steps to reproduce this?

Took some time to investigate, it was my trackballs fault. In middle of resize I was dragging my hand across the scroll and a scroll click interrupts the resizing.
edit: Is there a way to bind the resize action to a single key+cursor movement instead of right click+modifier+cursor movement? Right click is something I have to avoid as much as possible due to my limitations.",True,{}
i3/i3,https://github.com/i3/i3,3545,2018-12-05T10:42:01Z,2022-04-25T21:25:20Z,2022-04-25T21:25:20Z,CLOSED,False,406,322,9,https://github.com/xzfc,bspwm-like resize,2,[],https://github.com/i3/i3/pull/3545,https://github.com/xzfc,6,https://github.com/i3/i3/pull/3545#issuecomment-491246172,"resize both axis at the same time
resize windows continuously during mouse drag, not afterwards

Video: http://dump.bitcheese.net/files/gaxygyl/1412.mp4
Fixes #1122.
Fixes #1412.
Closes #3598.","@clapbr

In middle of resize I was dragging my hand across the scroll and a scroll click interrupts the resizing.

This is the behavior of vanilla i3, this PR does nothing with it. Would you create a new issue in this repo please?

edit: Is there a way to bind the resize action to a single key+cursor movement instead of right click+modifier+cursor movement?

No in the current version of i3. As an alternative, you can resize windows using keyboard only.",True,{}
i3/i3,https://github.com/i3/i3,3545,2018-12-05T10:42:01Z,2022-04-25T21:25:20Z,2022-04-25T21:25:20Z,CLOSED,False,406,322,9,https://github.com/xzfc,bspwm-like resize,2,[],https://github.com/i3/i3/pull/3545,https://github.com/danr,7,https://github.com/i3/i3/pull/3545#issuecomment-545276845,"resize both axis at the same time
resize windows continuously during mouse drag, not afterwards

Video: http://dump.bitcheese.net/files/gaxygyl/1412.mp4
Fixes #1122.
Fixes #1412.
Closes #3598.",What is the status on this? Is it probable that this will be merged?,True,{}
i3/i3,https://github.com/i3/i3,3545,2018-12-05T10:42:01Z,2022-04-25T21:25:20Z,2022-04-25T21:25:20Z,CLOSED,False,406,322,9,https://github.com/xzfc,bspwm-like resize,2,[],https://github.com/i3/i3/pull/3545,https://github.com/xzfc,8,https://github.com/i3/i3/pull/3545#issuecomment-545379475,"resize both axis at the same time
resize windows continuously during mouse drag, not afterwards

Video: http://dump.bitcheese.net/files/gaxygyl/1412.mp4
Fixes #1122.
Fixes #1412.
Closes #3598.","@danr

What is the status on this?

It is still WIP, there are a few things I want to do.
I've pushed current revision just now, you may check if you're interested.

Is it probable that this will be merged?

I hope so!",True,{}
i3/i3,https://github.com/i3/i3,3545,2018-12-05T10:42:01Z,2022-04-25T21:25:20Z,2022-04-25T21:25:20Z,CLOSED,False,406,322,9,https://github.com/xzfc,bspwm-like resize,2,[],https://github.com/i3/i3/pull/3545,https://github.com/xzfc,9,https://github.com/i3/i3/pull/3545#issuecomment-590264569,"resize both axis at the same time
resize windows continuously during mouse drag, not afterwards

Video: http://dump.bitcheese.net/files/gaxygyl/1412.mp4
Fixes #1122.
Fixes #1412.
Closes #3598.","This PR is now ready for review.
Higlight:


Two-axis tiling resize.  You can drag a 24-pixel window corner (purple) to perform a two-axis resize. Also, you can press Mod and drag a large corner inside the window (one-third of the window size).



Live resize: the tree is rendered during the resize process.


You can still press ESC to cancel resizing and revert to the old state.


Introduced the concept of the minimum container size.  E.g. the minimum width of leaf con with 10px borders is 21px (left border + right border + at least 1px for the window itself).  The minimum size is defined recursively, e.g. the minimum height of the vsplit is the sum of minimum sizes of its children.  The reason for this change: the live resize made it very easy to shrink containers as small as possible, so some restraints are required.


Misc update: ignore the drag if i3 can't perform the resize.  Suppose the user tries to resize the rightmost window to the right using Mod+RMB drag.  Obliviously, i3 can't do this.  Before this PR, the drag has been propagated to the application (some apps would show a context menu).  After this PR, the drag would be ignored at all (and the cursor would be shown as ✕).  The reasoning behind this change: the user explicitly indicated their desire to resize the window by pressing the Mod key, and probably just miss clicked to the wrong part of the window. Done in 93e96f4.


Bugfix in tiling_resize(): you can now resize the window with pixel border by dragging the top border.",True,"{'HEART': ['https://github.com/orestisfl', 'https://github.com/clapbr']}"
i3/i3,https://github.com/i3/i3,3545,2018-12-05T10:42:01Z,2022-04-25T21:25:20Z,2022-04-25T21:25:20Z,CLOSED,False,406,322,9,https://github.com/xzfc,bspwm-like resize,2,[],https://github.com/i3/i3/pull/3545,https://github.com/orestisfl,10,https://github.com/i3/i3/pull/3545#issuecomment-612055294,"resize both axis at the same time
resize windows continuously during mouse drag, not afterwards

Video: http://dump.bitcheese.net/files/gaxygyl/1412.mp4
Fixes #1122.
Fixes #1412.
Closes #3598.",Can you please rebase?,True,{}
i3/i3,https://github.com/i3/i3,3545,2018-12-05T10:42:01Z,2022-04-25T21:25:20Z,2022-04-25T21:25:20Z,CLOSED,False,406,322,9,https://github.com/xzfc,bspwm-like resize,2,[],https://github.com/i3/i3/pull/3545,https://github.com/xzfc,11,https://github.com/i3/i3/pull/3545#issuecomment-612093395,"resize both axis at the same time
resize windows continuously during mouse drag, not afterwards

Video: http://dump.bitcheese.net/files/gaxygyl/1412.mp4
Fixes #1122.
Fixes #1412.
Closes #3598.",@orestisfl Rebased.,True,{}
i3/i3,https://github.com/i3/i3,3545,2018-12-05T10:42:01Z,2022-04-25T21:25:20Z,2022-04-25T21:25:20Z,CLOSED,False,406,322,9,https://github.com/xzfc,bspwm-like resize,2,[],https://github.com/i3/i3/pull/3545,https://github.com/orestisfl,12,https://github.com/i3/i3/pull/3545#issuecomment-612158896,"resize both axis at the same time
resize windows continuously during mouse drag, not afterwards

Video: http://dump.bitcheese.net/files/gaxygyl/1412.mp4
Fixes #1122.
Fixes #1412.
Closes #3598.","This PR is now ready for review.
Higlight:
* **Two-axis tiling resize**.  You can drag a 24-pixel window corner (purple) to perform a two-axis resize. Also, you can press Mod and drag a large corner inside the window (one-third of the window size).
  ![illustration](https://user-images.githubusercontent.com/5121426/75146543-40a7c580-56f3-11ea-9b26-e14718699323.png)

* **Live resize**: the tree is rendered during the resize process.

* You can still press **ESC to cancel** resizing and revert to the old state.

* Introduced the concept of the **minimum container size**.  E.g. the minimum width of leaf con with 10px borders is 21px (left border + right border + at least 1px for the window itself).  The minimum size is defined recursively, e.g. the minimum height of the vsplit is the sum of minimum sizes of its children.  The reason for this change: the live resize made it very easy to shrink containers as small as possible, so some restraints are required.

* ~Misc update: ignore the drag if i3 can't perform the resize.  Suppose the user tries to resize the rightmost window to the right using Mod+RMB drag.  Obliviously, i3 can't do this.  Before this PR, the drag has been propagated to the application (some apps would show a context menu).  After this PR, the drag would be ignored at all (and the cursor would be shown as ✕).  The reasoning behind this change: the user explicitly indicated their desire to resize the window by pressing the Mod key, and probably just miss clicked to the wrong part of the window.~ Done in [93e96f4](https://github.com/i3/i3/commit/93e96f4e6b28486c6b7be003e8db81bab30197ef).

* Bugfix in `tiling_resize()`: you can now resize the window with pixel border by dragging the top border.


Paste this into the commit message as well. You don't need to reformat it, just delete the crossed-out part and paste it as markdown.
Didn't notice 93e96f4 was doing the same as this PR btw.",True,{}
i3/i3,https://github.com/i3/i3,3545,2018-12-05T10:42:01Z,2022-04-25T21:25:20Z,2022-04-25T21:25:20Z,CLOSED,False,406,322,9,https://github.com/xzfc,bspwm-like resize,2,[],https://github.com/i3/i3/pull/3545,https://github.com/xzfc,13,https://github.com/i3/i3/pull/3545#issuecomment-612557472,"resize both axis at the same time
resize windows continuously during mouse drag, not afterwards

Video: http://dump.bitcheese.net/files/gaxygyl/1412.mp4
Fixes #1122.
Fixes #1412.
Closes #3598.",Added fixup commit.,True,{}
i3/i3,https://github.com/i3/i3,3545,2018-12-05T10:42:01Z,2022-04-25T21:25:20Z,2022-04-25T21:25:20Z,CLOSED,False,406,322,9,https://github.com/xzfc,bspwm-like resize,2,[],https://github.com/i3/i3/pull/3545,https://github.com/cmprmsd,14,https://github.com/i3/i3/pull/3545#issuecomment-853024881,"resize both axis at the same time
resize windows continuously during mouse drag, not afterwards

Video: http://dump.bitcheese.net/files/gaxygyl/1412.mp4
Fixes #1122.
Fixes #1412.
Closes #3598.",This PR was quite ready wasn't it? :o,True,{}
i3/i3,https://github.com/i3/i3,3545,2018-12-05T10:42:01Z,2022-04-25T21:25:20Z,2022-04-25T21:25:20Z,CLOSED,False,406,322,9,https://github.com/xzfc,bspwm-like resize,2,[],https://github.com/i3/i3/pull/3545,https://github.com/cmprmsd,15,https://github.com/i3/i3/pull/3545#issuecomment-905237085,"resize both axis at the same time
resize windows continuously during mouse drag, not afterwards

Video: http://dump.bitcheese.net/files/gaxygyl/1412.mp4
Fixes #1122.
Fixes #1412.
Closes #3598.","@orestisfl
Congrats to your ingenuity badge on GitHub :D
I wonder, if this PR conflict might get solved any time soon in order to merge it 😇",True,{}
i3/i3,https://github.com/i3/i3,3545,2018-12-05T10:42:01Z,2022-04-25T21:25:20Z,2022-04-25T21:25:20Z,CLOSED,False,406,322,9,https://github.com/xzfc,bspwm-like resize,2,[],https://github.com/i3/i3/pull/3545,https://github.com/cmprmsd,16,https://github.com/i3/i3/pull/3545#issuecomment-1104459963,"resize both axis at the same time
resize windows continuously during mouse drag, not afterwards

Video: http://dump.bitcheese.net/files/gaxygyl/1412.mp4
Fixes #1122.
Fixes #1412.
Closes #3598.","@xzfc Do you know if there where any blockers on this pull request? It seems a very good idea and your implementation looked already very progressed.
@stapelberg I know this isn't exactly Chefsache but could you have a look at this PR? Thanks in advance ❤️
For anyone interested in testing this feature. I created a PKGBUILD file based on the i3wm 4.14 from the fork:
# Maintainer: Jan-Erik Rediger <badboy at archlinux dot us>
# Contributor: Thorsten Toepper <atsutane at freethoughts dot de>
# Contributor: William Giokas <1007380@gmail.com>

# This PKGBUILD was prepared for pacman 4.1 by William. Thank you. :-)

pkgname=i3-git
pkgver=4.14.r1077.g30c256ba
pkgrel=1
pkgdesc='An improved dynamic tiling window manager'
arch=('i686' 'x86_64')
url='http://i3wm.org/'
license=('BSD')
provides=('i3-wm')
conflicts=('i3-wm' 'i3bar' 'i3bar-git')
groups=('i3-vcs')
depends=('xcb-util-keysyms' 'xcb-util-wm' 'libev' 'yajl'
         'startup-notification' 'pango' 'perl' 'xcb-util-cursor'
         'libxkbcommon-x11' 'xcb-util-xrm')
makedepends=('git' 'asciidoc' 'docbook-xsl' 'pkgconfig')
optdepends=('rxvt-unicode: The terminal emulator used in the default config.'
            'dmenu: As menu.'
            'i3lock: For locking your screen.'
            'i3status: To display system information with a bar.'
            'perl-json-xs: For i3-save-tree'
            'perl-anyevent-i3: For i3-save-tree')
options=('docs' '!strip' 'debug')
source=('git+https://github.com/xzfc/i3#branch=1412-bspwm-resize')
sha1sums=('SKIP')

_gitname='i3'

pkgver() {
  cd ""$srcdir/$_gitname""
  git describe --long | sed 's/\([^-]*-g\)/r\1/;s/-/./g'
}

build() {
  cd ""$_gitname""

  autoreconf --force --install

  rm -rf build
  mkdir -p build && cd build

  ../configure \
    --prefix=/usr \
    --sysconfdir=/etc \
    --disable-sanitizers

  # See https://lists.archlinux.org/pipermail/arch-dev-public/2013-April/024776.html
  make CPPFLAGS+=""-U_FORTIFY_SOURCE""
}

package() {
  cd ""$_gitname/build""

  make DESTDIR=""$pkgdir/"" install

  install -Dm644 ../LICENSE \
    ""${pkgdir}/usr/share/licenses/${pkgname}/LICENSE""
}

# vim:set ts=2 sw=2 et:
You can put this into an empty folder on an Arch based OS and run makepkg -si in order to install it. It'll remove the current i3 environment so make sure you know what you're doing and have a backup wm. ;)",True,{'THUMBS_UP': ['https://github.com/shelaf']}
i3/i3,https://github.com/i3/i3,3545,2018-12-05T10:42:01Z,2022-04-25T21:25:20Z,2022-04-25T21:25:20Z,CLOSED,False,406,322,9,https://github.com/xzfc,bspwm-like resize,2,[],https://github.com/i3/i3/pull/3545,https://github.com/stapelberg,17,https://github.com/i3/i3/pull/3545#issuecomment-1106058553,"resize both axis at the same time
resize windows continuously during mouse drag, not afterwards

Video: http://dump.bitcheese.net/files/gaxygyl/1412.mp4
Fixes #1122.
Fixes #1412.
Closes #3598.","Is @xzfc still interested in working on this? Otherwise someone else would need to take over this PR, rebase it, and address review comments.",True,{}
i3/i3,https://github.com/i3/i3,3545,2018-12-05T10:42:01Z,2022-04-25T21:25:20Z,2022-04-25T21:25:20Z,CLOSED,False,406,322,9,https://github.com/xzfc,bspwm-like resize,2,[],https://github.com/i3/i3/pull/3545,https://github.com/cmprmsd,18,https://github.com/i3/i3/pull/3545#issuecomment-1106544370,"resize both axis at the same time
resize windows continuously during mouse drag, not afterwards

Video: http://dump.bitcheese.net/files/gaxygyl/1412.mp4
Fixes #1122.
Fixes #1412.
Closes #3598.","I guess I need some tutoring on git rebasing etc :D
Was this the correct procedure?

Fork @xzfc's repo
git clone my fork
git checkout 1412-bspwm-resize
git remote add upstream https://github.com/i3/i3/
git fetch upstream
git pull upstream next --rebase
atom . <- fix one conflict according to the git rebase issue
git rebase --continue
git log
git push -f origin

Then I created the new PR draft.
I don't know what's the proper way to take over an existing pull request but willing to try and help this PR getting forward.
It looks that too much stuff has been changed though..
See #4955 and https://github.com/i3/i3/pull/4955/files
EDIT:
I added one commit to make the project build correctly. Referenced the commit that was mentioned here before.
As the build process also changed during the years here is the up2date PKGBUILD from AUR with the PR branch:
# Maintainer: Jan-Erik Rediger <badboy at archlinux dot us>
# Contributor: Thorsten Toepper <atsutane at freethoughts dot de>
# Contributor: William Giokas <1007380@gmail.com>

# This PKGBUILD was prepared for pacman 4.1 by William. Thank you. :-)

pkgname=i3-git
pkgver=4.20.bspwm.resize.pr.temporarybuild
pkgrel=1
pkgdesc='An improved dynamic tiling window manager'
arch=('i686' 'x86_64')
url='http://i3wm.org/'
license=('BSD')
provides=('i3-wm')
conflicts=('i3-wm' 'i3-gaps' 'i3-gaps-next-git')
groups=('i3' 'i3-vcs')
depends=('xcb-util-keysyms' 'xcb-util-wm' 'libev' 'yajl'
         'startup-notification' 'pango' 'perl' 'xcb-util-cursor' 'xcb-util-xrm'
         'libxkbcommon-x11')
makedepends=('git' 'bison' 'flex' 'asciidoc' 'xmlto' 'meson')
optdepends=('i3lock: For locking your screen.'
            'i3status: To display system information with a bar.')
options=('docs')
source=('git+https://github.com/cmprmsd/i3#branch=1412-bspwm-resize')
sha1sums=('SKIP')

pkgver() {
  cd ""$srcdir/i3""
  git describe --long | sed 's/\([^-]*-g\)/r\1/;s/-/./g'
}


build() {
  cd ""i3""
  arch-meson \
    -Ddocs=true \
    -Dmans=true \
  ../build
  meson compile -C ../build
}

package() {
  cd ""i3""
  DESTDIR=""${pkgdir}"" meson install -C ../build

  install -Dt ""${pkgdir}/usr/share/licenses/${pkgname}"" -m644 LICENSE
}

# vim:set ts=2 sw=2 et:",True,{}
i3/i3,https://github.com/i3/i3,3545,2018-12-05T10:42:01Z,2022-04-25T21:25:20Z,2022-04-25T21:25:20Z,CLOSED,False,406,322,9,https://github.com/xzfc,bspwm-like resize,2,[],https://github.com/i3/i3/pull/3545,https://github.com/stapelberg,19,https://github.com/i3/i3/pull/3545#issuecomment-1106614443,"resize both axis at the same time
resize windows continuously during mouse drag, not afterwards

Video: http://dump.bitcheese.net/files/gaxygyl/1412.mp4
Fixes #1122.
Fixes #1412.
Closes #3598.","Yep, procedure seems correct to me.
@orestisfl Do you have time to review the new #4955 (given that you might still have some state on this feature), or would you prefer if someone else did?",True,{}
i3/i3,https://github.com/i3/i3,3545,2018-12-05T10:42:01Z,2022-04-25T21:25:20Z,2022-04-25T21:25:20Z,CLOSED,False,406,322,9,https://github.com/xzfc,bspwm-like resize,2,[],https://github.com/i3/i3/pull/3545,https://github.com/orestisfl,20,https://github.com/i3/i3/pull/3545#issuecomment-1109056105,"resize both axis at the same time
resize windows continuously during mouse drag, not afterwards

Video: http://dump.bitcheese.net/files/gaxygyl/1412.mp4
Fixes #1122.
Fixes #1412.
Closes #3598.","Yep, procedure seems correct to me.
@orestisfl Do you have time to review the new #4955 (given that you might still have some state on this feature), or would you prefer if someone else did?

I left some comments. Changes includes part of the code I haven't touched a lot so other reviews would be great as well if we want to merge this faster.
It's safe to say this PR is stale at this point so I am closing it to consolidate discussion in the new one.",True,{}
i3/i3,https://github.com/i3/i3,3547,2018-12-08T12:36:24Z,2018-12-08T12:49:04Z,2018-12-08T12:49:05Z,MERGED,True,3,3,1,https://github.com/stapelberg,"Bugfix: use restore_conn, not conn",1,[],https://github.com/i3/i3/pull/3547,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3547,"Using the wrong X11 connection breaks the libev event handling model:
xcb_flush() must be called immediately before handing control to libev.
Before this fix:

xcb_prepare_cb would read and flush conn
restore_xcb_prepare_cb would read and flush restore_conn,
BUT also inadvertantly call xcb_flush(conn), resulting in new
events being filled into the XCB event queue
libev waits for new events
after 1 minute, libev times out and the events are processed

Diagnosed using strace on testcases/complete-run.pl.
related to commit 0d8b671
related to #3510","Using the wrong X11 connection breaks the libev event handling model:
xcb_flush() must be called immediately before handing control to libev.
Before this fix:

xcb_prepare_cb would read and flush conn
restore_xcb_prepare_cb would read and flush restore_conn,
BUT also inadvertantly call xcb_flush(conn), resulting in new
events being filled into the XCB event queue
libev waits for new events
after 1 minute, libev times out and the events are processed

Diagnosed using strace on testcases/complete-run.pl.
related to commit 0d8b671
related to #3510",True,{'HEART': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,3549,2018-12-09T01:07:35Z,2018-12-09T17:13:14Z,2018-12-10T15:09:57Z,MERGED,True,29,74,14,https://github.com/xzfc,Small fixes,4,[],https://github.com/i3/i3/pull/3549,https://github.com/xzfc,1,https://github.com/i3/i3/pull/3549,,,True,{}
i3/i3,https://github.com/i3/i3,3549,2018-12-09T01:07:35Z,2018-12-09T17:13:14Z,2018-12-10T15:09:57Z,MERGED,True,29,74,14,https://github.com/xzfc,Small fixes,4,[],https://github.com/i3/i3/pull/3549,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3549#issuecomment-445554672,,Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3550,2018-12-09T01:22:16Z,2018-12-09T17:10:43Z,2018-12-09T17:11:06Z,MERGED,True,7,0,1,https://github.com/tlercher,Fix #3535 - Check for DISPLAY when requesting version information,1,[],https://github.com/i3/i3/pull/3550,https://github.com/tlercher,1,https://github.com/i3/i3/pull/3550,This change shouldn't be too major.,This change shouldn't be too major.,True,{}
i3/i3,https://github.com/i3/i3,3550,2018-12-09T01:22:16Z,2018-12-09T17:10:43Z,2018-12-09T17:11:06Z,MERGED,True,7,0,1,https://github.com/tlercher,Fix #3535 - Check for DISPLAY when requesting version information,1,[],https://github.com/i3/i3/pull/3550,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3550#issuecomment-445554498,This change shouldn't be too major.,Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3551,2018-12-10T15:03:31Z,2018-12-11T19:53:09Z,2018-12-12T01:25:51Z,MERGED,True,29,3,5,https://github.com/xzfc,Preserve back_and_forth during restart,1,[],https://github.com/i3/i3/pull/3551,https://github.com/xzfc,1,https://github.com/i3/i3/pull/3551,,,True,"{'THUMBS_UP': ['https://github.com/orestisfl', 'https://github.com/Airblader', 'https://github.com/jolange']}"
i3/i3,https://github.com/i3/i3,3551,2018-12-10T15:03:31Z,2018-12-11T19:53:09Z,2018-12-12T01:25:51Z,MERGED,True,29,3,5,https://github.com/xzfc,Preserve back_and_forth during restart,1,[],https://github.com/i3/i3/pull/3551,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3551#issuecomment-446339083,,Thank you!,True,{}
i3/i3,https://github.com/i3/i3,3553,2018-12-10T17:18:57Z,2018-12-10T17:34:52Z,2018-12-10T17:34:52Z,MERGED,True,17,0,1,https://github.com/stapelberg,userguide: add a section about hidpi displays,1,[],https://github.com/i3/i3/pull/3553,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3553,This is a continuation of #3438.,This is a continuation of #3438.,True,{}
i3/i3,https://github.com/i3/i3,3557,2018-12-12T17:15:47Z,2018-12-12T20:02:42Z,2018-12-13T07:06:04Z,MERGED,True,37,3,2,https://github.com/orestisfl,attach_to_workspace: set new parent before tree_render,1,[],https://github.com/i3/i3/pull/3557,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3557,Fixes #3556,Fixes #3556,True,{'THUMBS_UP': ['https://github.com/xzfc']}
i3/i3,https://github.com/i3/i3,3559,2018-12-13T06:09:51Z,2019-10-09T09:38:31Z,2019-10-09T09:58:01Z,MERGED,True,385,301,10,https://github.com/xzfc,Drag threshold,5,[],https://github.com/i3/i3/pull/3559,https://github.com/xzfc,1,https://github.com/i3/i3/pull/3559,"Fixes #3555.
Complex stuff in src/resize.c (mouse warp, helpwin) will be removed in #3545. It's here to make changes incremental.","Fixes #3555.
Complex stuff in src/resize.c (mouse warp, helpwin) will be removed in #3545. It's here to make changes incremental.",True,{}
i3/i3,https://github.com/i3/i3,3559,2018-12-13T06:09:51Z,2019-10-09T09:38:31Z,2019-10-09T09:58:01Z,MERGED,True,385,301,10,https://github.com/xzfc,Drag threshold,5,[],https://github.com/i3/i3/pull/3559,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3559#issuecomment-446904407,"Fixes #3555.
Complex stuff in src/resize.c (mouse warp, helpwin) will be removed in #3545. It's here to make changes incremental.",Thanks! @orestisf1993 Can you take a look at this?,True,{}
i3/i3,https://github.com/i3/i3,3559,2018-12-13T06:09:51Z,2019-10-09T09:38:31Z,2019-10-09T09:58:01Z,MERGED,True,385,301,10,https://github.com/xzfc,Drag threshold,5,[],https://github.com/i3/i3/pull/3559,https://github.com/xzfc,3,https://github.com/i3/i3/pull/3559#issuecomment-449524114,"Fixes #3555.
Complex stuff in src/resize.c (mouse warp, helpwin) will be removed in #3545. It's here to make changes incremental.",@orestisf1993 Do you have time to look at this?,True,{}
i3/i3,https://github.com/i3/i3,3559,2018-12-13T06:09:51Z,2019-10-09T09:38:31Z,2019-10-09T09:58:01Z,MERGED,True,385,301,10,https://github.com/xzfc,Drag threshold,5,[],https://github.com/i3/i3/pull/3559,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/3559#issuecomment-449528385,"Fixes #3555.
Complex stuff in src/resize.c (mouse warp, helpwin) will be removed in #3545. It's here to make changes incremental.","Sorry for the delay. I don't have much time lately, and I'll probably continue to be very busy in the next months, but I hope I can review this soon (tomorrow or some time in the next week).
In the meantime, I feel that use_threshold's usage is not very clear. Can you add some comments regarding its functionality?",True,{}
i3/i3,https://github.com/i3/i3,3559,2018-12-13T06:09:51Z,2019-10-09T09:38:31Z,2019-10-09T09:58:01Z,MERGED,True,385,301,10,https://github.com/xzfc,Drag threshold,5,[],https://github.com/i3/i3/pull/3559,https://github.com/xzfc,5,https://github.com/i3/i3/pull/3559#issuecomment-449539984,"Fixes #3555.
Complex stuff in src/resize.c (mouse warp, helpwin) will be removed in #3545. It's here to make changes incremental.","OK, thank you for the reply.
I've committed the comment on use_threshold.",True,{}
i3/i3,https://github.com/i3/i3,3559,2018-12-13T06:09:51Z,2019-10-09T09:38:31Z,2019-10-09T09:58:01Z,MERGED,True,385,301,10,https://github.com/xzfc,Drag threshold,5,[],https://github.com/i3/i3/pull/3559,https://github.com/xzfc,6,https://github.com/i3/i3/pull/3559#issuecomment-537805447,"Fixes #3555.
Complex stuff in src/resize.c (mouse warp, helpwin) will be removed in #3545. It's here to make changes incremental.","Can we continue on this?
I've rebased and squashed it to the current next.",True,{'THUMBS_UP': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,3560,2018-12-14T08:35:46Z,2018-12-14T08:39:50Z,2018-12-14T08:40:00Z,MERGED,True,3,2,1,https://github.com/CyberShadow,userguide: Document mark --replace flag,1,[],https://github.com/i3/i3/pull/3560,https://github.com/CyberShadow,1,https://github.com/i3/i3/pull/3560,"Explicitly document --replace, which was previously only mentioned
in the command syntax.


Improve wording: ""a window can only have one mark"" is slightly
misleading because it appears to describe the limitation as a
property of the model, whereas this actually pertains the mark
command.","Explicitly document --replace, which was previously only mentioned
in the command syntax.


Improve wording: ""a window can only have one mark"" is slightly
misleading because it appears to describe the limitation as a
property of the model, whereas this actually pertains the mark
command.",True,{}
i3/i3,https://github.com/i3/i3,3560,2018-12-14T08:35:46Z,2018-12-14T08:39:50Z,2018-12-14T08:40:00Z,MERGED,True,3,2,1,https://github.com/CyberShadow,userguide: Document mark --replace flag,1,[],https://github.com/i3/i3/pull/3560,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3560#issuecomment-447255096,"Explicitly document --replace, which was previously only mentioned
in the command syntax.


Improve wording: ""a window can only have one mark"" is slightly
misleading because it appears to describe the limitation as a
property of the model, whereas this actually pertains the mark
command.",Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3563,2018-12-14T13:21:13Z,2018-12-16T08:36:03Z,2018-12-16T08:36:03Z,MERGED,True,15,15,1,https://github.com/CyberShadow,userguide: Un-hide a TODO block completed in 2011,1,[],https://github.com/i3/i3/pull/3563,https://github.com/CyberShadow,1,https://github.com/i3/i3/pull/3563,"The userguide contained a commented-out section for marks, which included the line:

TODO: make i3-input replace %s

The line was added in a26a11c (May 2011), at which point i3-input did not have a -F switch. The switch was added only in 1737a78 (September 2011), but the documentation was never updated to enable the commented-out examples.","The userguide contained a commented-out section for marks, which included the line:

TODO: make i3-input replace %s

The line was added in a26a11c (May 2011), at which point i3-input did not have a -F switch. The switch was added only in 1737a78 (September 2011), but the documentation was never updated to enable the commented-out examples.",True,{}
i3/i3,https://github.com/i3/i3,3563,2018-12-14T13:21:13Z,2018-12-16T08:36:03Z,2018-12-16T08:36:03Z,MERGED,True,15,15,1,https://github.com/CyberShadow,userguide: Un-hide a TODO block completed in 2011,1,[],https://github.com/i3/i3/pull/3563,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3563#issuecomment-447626102,"The userguide contained a commented-out section for marks, which included the line:

TODO: make i3-input replace %s

The line was added in a26a11c (May 2011), at which point i3-input did not have a -F switch. The switch was added only in 1737a78 (September 2011), but the documentation was never updated to enable the commented-out examples.",Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3566,2018-12-14T21:48:22Z,2018-12-15T17:29:47Z,2018-12-17T09:30:28Z,MERGED,True,57,8,3,https://github.com/orestisfl,Focus events,3,[],https://github.com/i3/i3/pull/3566,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3566,Fixes #3562,Fixes #3562,True,{}
i3/i3,https://github.com/i3/i3,3568,2018-12-16T01:52:10Z,2018-12-16T08:33:26Z,2018-12-17T09:30:27Z,MERGED,True,2,4,2,https://github.com/orestisfl,Fix: render_con shows floating containers on wrong workspace,1,[],https://github.com/i3/i3/pull/3568,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3568,Fixes #3567,Fixes #3567,True,{}
i3/i3,https://github.com/i3/i3,3574,2019-01-02T12:10:15Z,2019-01-02T12:30:18Z,2019-01-12T08:34:32Z,MERGED,True,9,9,6,https://github.com/pclouds,Remove \n from errx and die messages,1,[],https://github.com/i3/i3/pull/3574,https://github.com/pclouds,1,https://github.com/i3/i3/pull/3574,"errx() already appends \n internally. ""\n"" in the error message will
result in a blank line after the message. die() is just a wrapper around
errx() so it receives the same treatment.","errx() already appends \n internally. ""\n"" in the error message will
result in a blank line after the message. die() is just a wrapper around
errx() so it receives the same treatment.",True,{}
i3/i3,https://github.com/i3/i3,3574,2019-01-02T12:10:15Z,2019-01-02T12:30:18Z,2019-01-12T08:34:32Z,MERGED,True,9,9,6,https://github.com/pclouds,Remove \n from errx and die messages,1,[],https://github.com/i3/i3/pull/3574,https://github.com/pclouds,2,https://github.com/i3/i3/pull/3574#issuecomment-450848898,"errx() already appends \n internally. ""\n"" in the error message will
result in a blank line after the message. die() is just a wrapper around
errx() so it receives the same treatment.","This is a similar patch to one that was merged in i3lock, i3/i3lock#216",True,{}
i3/i3,https://github.com/i3/i3,3584,2019-01-11T12:46:41Z,2019-01-11T13:01:57Z,2019-01-11T13:02:48Z,MERGED,True,1,1,1,https://github.com/orestisfl,Fix crash with popups when fullscreen is non-leaf,1,[],https://github.com/i3/i3/pull/3584,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3584,Fixes #3582,Fixes #3582,True,{}
i3/i3,https://github.com/i3/i3,3585,2019-01-11T18:51:13Z,2019-01-12T12:13:04Z,2019-01-12T12:39:58Z,MERGED,True,99,133,2,https://github.com/orestisfl,Use ipc queue for all messages,1,[],https://github.com/i3/i3/pull/3585,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3585,"I was able to reproduce #3579 in Linux by running: sudo sysctl net.core.wmem_default=10000
If a subscription message was too big to be sent at once, it was possible to break a client by sending a reply to an other message sent by the client. Eg:

Write 8192 out of 11612 bytes of a workspace event.
Blockingly write the reply to a workspace change message.
Write the rest 3420 bytes of the workspace event.

This commit fixes this by utilizing the ipc queue for all types of writes.
ipc_receive_message can only be called from a callback started in ipc_new_client. This callback uses the same file descriptor with the client also created in ipc_new_client. When the client is deleted, the read callback is now also stopped. Thus, we can assume that whenever ipc_receive_message is called, the corresponding client should still exist.

ipc_client now contains pointers to both write and read watchers. When freed, a client will stop both of them.
IPC_HANDLERs now work with ipc_clients instead of fds.

Fixes #3579.","I was able to reproduce #3579 in Linux by running: sudo sysctl net.core.wmem_default=10000
If a subscription message was too big to be sent at once, it was possible to break a client by sending a reply to an other message sent by the client. Eg:

Write 8192 out of 11612 bytes of a workspace event.
Blockingly write the reply to a workspace change message.
Write the rest 3420 bytes of the workspace event.

This commit fixes this by utilizing the ipc queue for all types of writes.
ipc_receive_message can only be called from a callback started in ipc_new_client. This callback uses the same file descriptor with the client also created in ipc_new_client. When the client is deleted, the read callback is now also stopped. Thus, we can assume that whenever ipc_receive_message is called, the corresponding client should still exist.

ipc_client now contains pointers to both write and read watchers. When freed, a client will stop both of them.
IPC_HANDLERs now work with ipc_clients instead of fds.

Fixes #3579.",True,{}
i3/i3,https://github.com/i3/i3,3590,2019-01-17T01:38:35Z,2019-01-18T22:37:10Z,2019-01-18T22:37:15Z,MERGED,True,2,2,2,https://github.com/nejni-marji,Make binding modes case sensitive,1,[],https://github.com/i3/i3/pull/3590,https://github.com/nejni-marji,1,https://github.com/i3/i3/pull/3590,"Proposal for issue #3587
Changed strcasecmp to strcmp where it's used with binding modes","Proposal for issue #3587
Changed strcasecmp to strcmp where it's used with binding modes",True,{}
i3/i3,https://github.com/i3/i3,3590,2019-01-17T01:38:35Z,2019-01-18T22:37:10Z,2019-01-18T22:37:15Z,MERGED,True,2,2,2,https://github.com/nejni-marji,Make binding modes case sensitive,1,[],https://github.com/i3/i3/pull/3590,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3590#issuecomment-455710574,"Proposal for issue #3587
Changed strcasecmp to strcmp where it's used with binding modes",Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3591,2019-01-17T03:17:39Z,2019-01-18T22:35:48Z,2019-01-18T22:35:56Z,MERGED,True,3,0,1,https://github.com/JonWoodlief,Update userguide- describe border style distinction,2,[],https://github.com/i3/i3/pull/3591,https://github.com/JonWoodlief,1,https://github.com/i3/i3/pull/3591,"When setting up my config, I seeked to adjust window borders to zero while keeping my title bars. I found nothing in the docs that noted the distinction between the border styles. These couple sentences on that distinction might help clarify that.","When setting up my config, I seeked to adjust window borders to zero while keeping my title bars. I found nothing in the docs that noted the distinction between the border styles. These couple sentences on that distinction might help clarify that.",True,{}
i3/i3,https://github.com/i3/i3,3591,2019-01-17T03:17:39Z,2019-01-18T22:35:48Z,2019-01-18T22:35:56Z,MERGED,True,3,0,1,https://github.com/JonWoodlief,Update userguide- describe border style distinction,2,[],https://github.com/i3/i3/pull/3591,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3591#issuecomment-455710310,"When setting up my config, I seeked to adjust window borders to zero while keeping my title bars. I found nothing in the docs that noted the distinction between the border styles. These couple sentences on that distinction might help clarify that.",Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3597,2019-01-20T19:04:42Z,2019-03-29T01:40:16Z,2019-03-29T01:41:12Z,CLOSED,False,5,6,1,https://github.com/alexd2580,WIP: Store and report the created workspace on moving a workspace (Closes #3595),1,[],https://github.com/i3/i3/pull/3597,https://github.com/alexd2580,1,https://github.com/i3/i3/pull/3597,"Instead of reporting the current workspace (the moved one), report the initialized one in the emitted init event.
Closes #3595 (@orestisf1993: this was never properly linked so I didn't notice)","Instead of reporting the current workspace (the moved one), report the initialized one in the emitted init event.
Closes #3595 (@orestisf1993: this was never properly linked so I didn't notice)",True,{}
i3/i3,https://github.com/i3/i3,3597,2019-01-20T19:04:42Z,2019-03-29T01:40:16Z,2019-03-29T01:41:12Z,CLOSED,False,5,6,1,https://github.com/alexd2580,WIP: Store and report the created workspace on moving a workspace (Closes #3595),1,[],https://github.com/i3/i3/pull/3597,https://github.com/alexd2580,2,https://github.com/i3/i3/pull/3597#issuecomment-455893138,"Instead of reporting the current workspace (the moved one), report the initialized one in the emitted init event.
Closes #3595 (@orestisf1993: this was never properly linked so I didn't notice)",Tests should be added to show the erroneous behavior.,True,{}
i3/i3,https://github.com/i3/i3,3600,2019-01-22T20:31:47Z,2019-01-22T20:35:45Z,2019-01-22T20:35:51Z,MERGED,True,12,17,2,https://github.com/orestisfl,cmd_exit: Let i3_exit handle shutdown,1,[],https://github.com/i3/i3/pull/3600,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3600,Fixes #3599,Fixes #3599,True,{}
i3/i3,https://github.com/i3/i3,3605,2019-01-29T11:44:07Z,2019-01-29T13:24:24Z,2019-01-29T13:24:36Z,CLOSED,False,1,1,1,https://github.com/obayit,Fix warning: '%'-style pattern rules ....,2,['waiting'],https://github.com/i3/i3/pull/3605,https://github.com/obayit,1,https://github.com/i3/i3/pull/3605,"Makefile.am:229: warning: '%'-style pattern rules are a GNU make extension
I reported this in i3-gaps (issue 227), but Airblader said it is in i3 the upstream.","Makefile.am:229: warning: '%'-style pattern rules are a GNU make extension
I reported this in i3-gaps (issue 227), but Airblader said it is in i3 the upstream.",True,{}
i3/i3,https://github.com/i3/i3,3605,2019-01-29T11:44:07Z,2019-01-29T13:24:24Z,2019-01-29T13:24:36Z,CLOSED,False,1,1,1,https://github.com/obayit,Fix warning: '%'-style pattern rules ....,2,['waiting'],https://github.com/i3/i3/pull/3605,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3605#issuecomment-458516256,"Makefile.am:229: warning: '%'-style pattern rules are a GNU make extension
I reported this in i3-gaps (issue 227), but Airblader said it is in i3 the upstream.","make  all-am
make[1]: Entering directory '/usr/src/i3/build'
make[1]: *** No rule to make target 'man/i3.xml', needed by 'man/i3.1'.  Stop.
make[1]: *** Waiting for unfinished jobs....
make[1]: Leaving directory '/usr/src/i3/build'
make: *** [Makefile:1328: all] Error 2```",True,{}
i3/i3,https://github.com/i3/i3,3605,2019-01-29T11:44:07Z,2019-01-29T13:24:24Z,2019-01-29T13:24:36Z,CLOSED,False,1,1,1,https://github.com/obayit,Fix warning: '%'-style pattern rules ....,2,['waiting'],https://github.com/i3/i3/pull/3605,https://github.com/obayit,3,https://github.com/i3/i3/pull/3605#issuecomment-458537911,"Makefile.am:229: warning: '%'-style pattern rules are a GNU make extension
I reported this in i3-gaps (issue 227), but Airblader said it is in i3 the upstream.",I give up!,True,{}
i3/i3,https://github.com/i3/i3,3605,2019-01-29T11:44:07Z,2019-01-29T13:24:24Z,2019-01-29T13:24:36Z,CLOSED,False,1,1,1,https://github.com/obayit,Fix warning: '%'-style pattern rules ....,2,['waiting'],https://github.com/i3/i3/pull/3605,https://github.com/obayit,4,https://github.com/i3/i3/pull/3605#issuecomment-458537969,"Makefile.am:229: warning: '%'-style pattern rules are a GNU make extension
I reported this in i3-gaps (issue 227), but Airblader said it is in i3 the upstream.",f,True,{}
i3/i3,https://github.com/i3/i3,3607,2019-02-01T07:05:30Z,2019-02-01T07:24:34Z,2019-02-01T07:24:34Z,MERGED,True,5,3,1,https://github.com/alejandro-angulo,Clear up confusion between event and reply types.,1,[],https://github.com/i3/i3/pull/3607,https://github.com/alejandro-angulo,1,https://github.com/i3/i3/pull/3607,"This is in response to #3546 .
I think the confusion lied in stating that ""...events sent by i3 are in the same format as replies to specific commands."" Reworded to say that the types are similar (not the same) and also explicitly mentioned the difference between event and reply types.","This is in response to #3546 .
I think the confusion lied in stating that ""...events sent by i3 are in the same format as replies to specific commands."" Reworded to say that the types are similar (not the same) and also explicitly mentioned the difference between event and reply types.",True,{}
i3/i3,https://github.com/i3/i3,3607,2019-02-01T07:05:30Z,2019-02-01T07:24:34Z,2019-02-01T07:24:34Z,MERGED,True,5,3,1,https://github.com/alejandro-angulo,Clear up confusion between event and reply types.,1,[],https://github.com/i3/i3/pull/3607,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3607#issuecomment-459631246,"This is in response to #3546 .
I think the confusion lied in stating that ""...events sent by i3 are in the same format as replies to specific commands."" Reworded to say that the types are similar (not the same) and also explicitly mentioned the difference between event and reply types.","This LGTM, thank you!",True,{}
i3/i3,https://github.com/i3/i3,3614,2019-02-09T14:27:23Z,2019-03-11T18:38:11Z,2019-03-11T20:43:31Z,MERGED,True,12,1,2,https://github.com/NilsIrl,Add proper return code for i3-msg,1,[],https://github.com/i3/i3/pull/3614,https://github.com/NilsIrl,1,https://github.com/i3/i3/pull/3614,"I thought I might do a PR even though it had already been discussed at #1639.
Also maybe making the return code 1 for this situation isn't the best thing maybe -1 would be preferable since it would collide with EXIT_FAILURE.","I thought I might do a PR even though it had already been discussed at #1639.
Also maybe making the return code 1 for this situation isn't the best thing maybe -1 would be preferable since it would collide with EXIT_FAILURE.",True,{}
i3/i3,https://github.com/i3/i3,3614,2019-02-09T14:27:23Z,2019-03-11T18:38:11Z,2019-03-11T20:43:31Z,MERGED,True,12,1,2,https://github.com/NilsIrl,Add proper return code for i3-msg,1,[],https://github.com/i3/i3/pull/3614,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3614#issuecomment-465028712,"I thought I might do a PR even though it had already been discussed at #1639.
Also maybe making the return code 1 for this situation isn't the best thing maybe -1 would be preferable since it would collide with EXIT_FAILURE.","I think this is worthwhile, because sometimes just knowing a command failed is all you need to know. Given that @stapelberg explicitly rejected this in the past I'd like him to reconsider here, though.",True,"{'THUMBS_UP': ['https://github.com/orestisfl', 'https://github.com/NilsIrl']}"
i3/i3,https://github.com/i3/i3,3614,2019-02-09T14:27:23Z,2019-03-11T18:38:11Z,2019-03-11T20:43:31Z,MERGED,True,12,1,2,https://github.com/NilsIrl,Add proper return code for i3-msg,1,[],https://github.com/i3/i3/pull/3614,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/3614#issuecomment-465459054,"I thought I might do a PR even though it had already been discussed at #1639.
Also maybe making the return code 1 for this situation isn't the best thing maybe -1 would be preferable since it would collide with EXIT_FAILURE.","I’m not entirely opposed to the change (it’s simple enough and returning a non-0 error code when things went wrong is common behavior), but the rationale provided in #1639 still stands: most cases should really not be using i3-msg to begin with.
Can you outline what your use-case is please?",True,{}
i3/i3,https://github.com/i3/i3,3614,2019-02-09T14:27:23Z,2019-03-11T18:38:11Z,2019-03-11T20:43:31Z,MERGED,True,12,1,2,https://github.com/NilsIrl,Add proper return code for i3-msg,1,[],https://github.com/i3/i3/pull/3614,https://github.com/NilsIrl,4,https://github.com/i3/i3/pull/3614#issuecomment-465523066,"I thought I might do a PR even though it had already been discussed at #1639.
Also maybe making the return code 1 for this situation isn't the best thing maybe -1 would be preferable since it would collide with EXIT_FAILURE.","It is exactly what is described in #1639:
i3-msg [instance=""$1""] scratchpad show || $2
currently what I have to do instead is this:
if [ $(i3-msg ""[instance=\""^$1\$\""] scratchpad show"") != '[{""success"":true}]' ]; then
    $2
fi
Basically launching an application if it doesn't exist already.
Though they could be other use cases.",True,{}
i3/i3,https://github.com/i3/i3,3614,2019-02-09T14:27:23Z,2019-03-11T18:38:11Z,2019-03-11T20:43:31Z,MERGED,True,12,1,2,https://github.com/NilsIrl,Add proper return code for i3-msg,1,[],https://github.com/i3/i3/pull/3614,https://github.com/Airblader,5,https://github.com/i3/i3/pull/3614#issuecomment-471667696,"I thought I might do a PR even though it had already been discussed at #1639.
Also maybe making the return code 1 for this situation isn't the best thing maybe -1 would be preferable since it would collide with EXIT_FAILURE.","@NilsIrl Sorry for the wait; if you drop a comment after making the changes we get notified and can take another look. I've reviewed it now, though. Thanks for the PR!",True,{}
i3/i3,https://github.com/i3/i3,3614,2019-02-09T14:27:23Z,2019-03-11T18:38:11Z,2019-03-11T20:43:31Z,MERGED,True,12,1,2,https://github.com/NilsIrl,Add proper return code for i3-msg,1,[],https://github.com/i3/i3/pull/3614,https://github.com/jwflory,6,https://github.com/i3/i3/pull/3614#issuecomment-471715946,"I thought I might do a PR even though it had already been discussed at #1639.
Also maybe making the return code 1 for this situation isn't the best thing maybe -1 would be preferable since it would collide with EXIT_FAILURE.","Hey, did this PR resolve #3565 too by chance?",True,{}
i3/i3,https://github.com/i3/i3,3614,2019-02-09T14:27:23Z,2019-03-11T18:38:11Z,2019-03-11T20:43:31Z,MERGED,True,12,1,2,https://github.com/NilsIrl,Add proper return code for i3-msg,1,[],https://github.com/i3/i3/pull/3614,https://github.com/Airblader,7,https://github.com/i3/i3/pull/3614#issuecomment-471721686,"I thought I might do a PR even though it had already been discussed at #1639.
Also maybe making the return code 1 for this situation isn't the best thing maybe -1 would be preferable since it would collide with EXIT_FAILURE.",I can't take a look right now but I would suspect that it doesn't. :-),True,{}
i3/i3,https://github.com/i3/i3,3618,2019-02-12T07:51:31Z,2019-02-12T08:22:27Z,2019-02-12T08:22:29Z,MERGED,True,3,3,2,https://github.com/stapelberg,i3-dump-log: make log message a little more clear,1,[],https://github.com/i3/i3/pull/3618,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3618,This came up when trying to debug an issue.,This came up when trying to debug an issue.,True,{}
i3/i3,https://github.com/i3/i3,3623,2019-02-17T00:14:26Z,2019-03-19T11:00:36Z,2019-03-19T11:00:36Z,CLOSED,False,3,2,2,None,Use I3_IPC_MESSAGE_TYPE_RUN_COMMAND and define it.,1,[],https://github.com/i3/i3/pull/3623,None,1,https://github.com/i3/i3/pull/3623,"As We know I3_IPC_MESSAGE_TYPE_COMMAND is deprecated,
that's why we need to use the function that isnt deprecated and
define it.","As We know I3_IPC_MESSAGE_TYPE_COMMAND is deprecated,
that's why we need to use the function that isnt deprecated and
define it.",True,{}
i3/i3,https://github.com/i3/i3,3623,2019-02-17T00:14:26Z,2019-03-19T11:00:36Z,2019-03-19T11:00:36Z,CLOSED,False,3,2,2,None,Use I3_IPC_MESSAGE_TYPE_RUN_COMMAND and define it.,1,[],https://github.com/i3/i3/pull/3623,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3623#issuecomment-474306928,"As We know I3_IPC_MESSAGE_TYPE_COMMAND is deprecated,
that's why we need to use the function that isnt deprecated and
define it.",Closing because user is ghost,True,{}
i3/i3,https://github.com/i3/i3,3624,2019-02-17T22:22:57Z,2019-08-01T05:46:36Z,2019-08-01T05:46:36Z,CLOSED,False,6,0,1,https://github.com/Iskustvo,Updated docs for COMMAND reply.,1,[],https://github.com/i3/i3/pull/3624,https://github.com/Iskustvo,1,https://github.com/i3/i3/pull/3624,"Note that my findings are observed from responses over sockets, I haven't looked in source code of i3.
Therefore, I am not 100% sure about i3 closing the sockets on restart/shutdown and you should correct me if I'm wrong.
However, I am sure that reading response from same socket for restart/shutdown command is invalid.
While debugging this, there was never even ""i3-ipc"" magic string in the socket which was successfully used for communication previously.","Note that my findings are observed from responses over sockets, I haven't looked in source code of i3.
Therefore, I am not 100% sure about i3 closing the sockets on restart/shutdown and you should correct me if I'm wrong.
However, I am sure that reading response from same socket for restart/shutdown command is invalid.
While debugging this, there was never even ""i3-ipc"" magic string in the socket which was successfully used for communication previously.",True,{}
i3/i3,https://github.com/i3/i3,3624,2019-02-17T22:22:57Z,2019-08-01T05:46:36Z,2019-08-01T05:46:36Z,CLOSED,False,6,0,1,https://github.com/Iskustvo,Updated docs for COMMAND reply.,1,[],https://github.com/i3/i3/pull/3624,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3624#issuecomment-465028880,"Note that my findings are observed from responses over sockets, I haven't looked in source code of i3.
Therefore, I am not 100% sure about i3 closing the sockets on restart/shutdown and you should correct me if I'm wrong.
However, I am sure that reading response from same socket for restart/shutdown command is invalid.
While debugging this, there was never even ""i3-ipc"" magic string in the socket which was successfully used for communication previously.",@orestisf1993 Can you take a look at this given the changes that have been made recently?,True,{}
i3/i3,https://github.com/i3/i3,3624,2019-02-17T22:22:57Z,2019-08-01T05:46:36Z,2019-08-01T05:46:36Z,CLOSED,False,6,0,1,https://github.com/Iskustvo,Updated docs for COMMAND reply.,1,[],https://github.com/i3/i3/pull/3624,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/3624#issuecomment-465047800,"Note that my findings are observed from responses over sockets, I haven't looked in source code of i3.
Therefore, I am not 100% sure about i3 closing the sockets on restart/shutdown and you should correct me if I'm wrong.
However, I am sure that reading response from same socket for restart/shutdown command is invalid.
While debugging this, there was never even ""i3-ipc"" magic string in the socket which was successfully used for communication previously.","We didn't really change anything related to this.
After fixing #3565 I imagine that users will be able to read the success return value correctly, right?",True,{}
i3/i3,https://github.com/i3/i3,3624,2019-02-17T22:22:57Z,2019-08-01T05:46:36Z,2019-08-01T05:46:36Z,CLOSED,False,6,0,1,https://github.com/Iskustvo,Updated docs for COMMAND reply.,1,[],https://github.com/i3/i3/pull/3624,https://github.com/Iskustvo,4,https://github.com/i3/i3/pull/3624#issuecomment-514084226,"Note that my findings are observed from responses over sockets, I haven't looked in source code of i3.
Therefore, I am not 100% sure about i3 closing the sockets on restart/shutdown and you should correct me if I'm wrong.
However, I am sure that reading response from same socket for restart/shutdown command is invalid.
While debugging this, there was never even ""i3-ipc"" magic string in the socket which was successfully used for communication previously.","@stapelberg, first of all, thanks for the fix regarding the restart command.
Can you please describe the current expected behavior by answering questions from this comment?
I expect I will have some free time for the weekend to test this behavior and update the docs accordingly.",True,{}
i3/i3,https://github.com/i3/i3,3624,2019-02-17T22:22:57Z,2019-08-01T05:46:36Z,2019-08-01T05:46:36Z,CLOSED,False,6,0,1,https://github.com/Iskustvo,Updated docs for COMMAND reply.,1,[],https://github.com/i3/i3/pull/3624,https://github.com/stapelberg,5,https://github.com/i3/i3/pull/3624#issuecomment-514245362,"Note that my findings are observed from responses over sockets, I haven't looked in source code of i3.
Therefore, I am not 100% sure about i3 closing the sockets on restart/shutdown and you should correct me if I'm wrong.
However, I am sure that reading response from same socket for restart/shutdown command is invalid.
While debugging this, there was never even ""i3-ipc"" magic string in the socket which was successfully used for communication previously.",Replied to the questions in that comment. Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3624,2019-02-17T22:22:57Z,2019-08-01T05:46:36Z,2019-08-01T05:46:36Z,CLOSED,False,6,0,1,https://github.com/Iskustvo,Updated docs for COMMAND reply.,1,[],https://github.com/i3/i3/pull/3624,https://github.com/Iskustvo,6,https://github.com/i3/i3/pull/3624#issuecomment-516980431,"Note that my findings are observed from responses over sockets, I haven't looked in source code of i3.
Therefore, I am not 100% sure about i3 closing the sockets on restart/shutdown and you should correct me if I'm wrong.
However, I am sure that reading response from same socket for restart/shutdown command is invalid.
While debugging this, there was never even ""i3-ipc"" magic string in the socket which was successfully used for communication previously.","The restart command works as expected now.
However, exit command has the same issue - If you send exit command and try to read anything (expecting the return status) from the socket, you will read garbage since socket is probably already closed.
@stapelberg, is this expected outcome, should I document it as well?
P.S. Sorry for being pain in the *** :D",True,{}
i3/i3,https://github.com/i3/i3,3624,2019-02-17T22:22:57Z,2019-08-01T05:46:36Z,2019-08-01T05:46:36Z,CLOSED,False,6,0,1,https://github.com/Iskustvo,Updated docs for COMMAND reply.,1,[],https://github.com/i3/i3/pull/3624,https://github.com/stapelberg,7,https://github.com/i3/i3/pull/3624#issuecomment-516983061,"Note that my findings are observed from responses over sockets, I haven't looked in source code of i3.
Therefore, I am not 100% sure about i3 closing the sockets on restart/shutdown and you should correct me if I'm wrong.
However, I am sure that reading response from same socket for restart/shutdown command is invalid.
While debugging this, there was never even ""i3-ipc"" magic string in the socket which was successfully used for communication previously.","Yeah, for exit, let’s document the behavior.",True,{}
i3/i3,https://github.com/i3/i3,3624,2019-02-17T22:22:57Z,2019-08-01T05:46:36Z,2019-08-01T05:46:36Z,CLOSED,False,6,0,1,https://github.com/Iskustvo,Updated docs for COMMAND reply.,1,[],https://github.com/i3/i3/pull/3624,https://github.com/Iskustvo,8,https://github.com/i3/i3/pull/3624#issuecomment-517040403,"Note that my findings are observed from responses over sockets, I haven't looked in source code of i3.
Therefore, I am not 100% sure about i3 closing the sockets on restart/shutdown and you should correct me if I'm wrong.
However, I am sure that reading response from same socket for restart/shutdown command is invalid.
While debugging this, there was never even ""i3-ipc"" magic string in the socket which was successfully used for communication previously.","I somehow destroyed old fork and had to create a new one, and with it a new pull request.
Please follow the changes on #3754.",True,{}
i3/i3,https://github.com/i3/i3,3624,2019-02-17T22:22:57Z,2019-08-01T05:46:36Z,2019-08-01T05:46:36Z,CLOSED,False,6,0,1,https://github.com/Iskustvo,Updated docs for COMMAND reply.,1,[],https://github.com/i3/i3/pull/3624,https://github.com/stapelberg,9,https://github.com/i3/i3/pull/3624#issuecomment-517129429,"Note that my findings are observed from responses over sockets, I haven't looked in source code of i3.
Therefore, I am not 100% sure about i3 closing the sockets on restart/shutdown and you should correct me if I'm wrong.
However, I am sure that reading response from same socket for restart/shutdown command is invalid.
While debugging this, there was never even ""i3-ipc"" magic string in the socket which was successfully used for communication previously.",Closing this in favor of #3754,True,{}
i3/i3,https://github.com/i3/i3,3632,2019-02-22T17:51:48Z,2019-02-23T20:52:23Z,2019-02-23T21:02:45Z,MERGED,True,83,9,3,https://github.com/orestisfl,create_workspace_on_output: send workspace init event,1,[],https://github.com/i3/i3/pull/3632,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3632,"Fixes #3595
Fixes #3631
Didn't test it much yet, can do it tomorrow.","Fixes #3595
Fixes #3631
Didn't test it much yet, can do it tomorrow.",True,{}
i3/i3,https://github.com/i3/i3,3632,2019-02-22T17:51:48Z,2019-02-23T20:52:23Z,2019-02-23T21:02:45Z,MERGED,True,83,9,3,https://github.com/orestisfl,create_workspace_on_output: send workspace init event,1,[],https://github.com/i3/i3/pull/3632,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3632#issuecomment-466633888,"Fixes #3595
Fixes #3631
Didn't test it much yet, can do it tomorrow.",Added some tests,True,{}
i3/i3,https://github.com/i3/i3,3637,2019-03-07T13:59:03Z,2019-03-19T09:16:31Z,2019-10-20T15:47:24Z,MERGED,True,1,0,1,https://github.com/stapelberg,x.c: correctly free con->frame_buffer in _x_con_kill,1,[],https://github.com/i3/i3/pull/3637,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3637,"This fixes a crash which I could not reproduce in a testcase with reasonable effort, but the user reported the fix works.
Compare with src/x.c:946.
Fixes #3554
Fixes #3645","This fixes a crash which I could not reproduce in a testcase with reasonable effort, but the user reported the fix works.
Compare with src/x.c:946.
Fixes #3554
Fixes #3645",True,{}
i3/i3,https://github.com/i3/i3,3637,2019-03-07T13:59:03Z,2019-03-19T09:16:31Z,2019-10-20T15:47:24Z,MERGED,True,1,0,1,https://github.com/stapelberg,x.c: correctly free con->frame_buffer in _x_con_kill,1,[],https://github.com/i3/i3/pull/3637,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/3637#issuecomment-470541984,"This fixes a crash which I could not reproduce in a testcase with reasonable effort, but the user reported the fix works.
Compare with src/x.c:946.
Fixes #3554
Fixes #3645","Thanks for the quick review.
For the CI failure, I have filed https://bugs.debian.org/923942. Let’s see what the maintainer says.",True,{}
i3/i3,https://github.com/i3/i3,3637,2019-03-07T13:59:03Z,2019-03-19T09:16:31Z,2019-10-20T15:47:24Z,MERGED,True,1,0,1,https://github.com/stapelberg,x.c: correctly free con->frame_buffer in _x_con_kill,1,[],https://github.com/i3/i3/pull/3637,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3637#issuecomment-470545330,"This fixes a crash which I could not reproduce in a testcase with reasonable effort, but the user reported the fix works.
Compare with src/x.c:946.
Fixes #3554
Fixes #3645",Sure. Since it's unrelated I wouldn't mind merging this anyway.,True,{}
i3/i3,https://github.com/i3/i3,3637,2019-03-07T13:59:03Z,2019-03-19T09:16:31Z,2019-10-20T15:47:24Z,MERGED,True,1,0,1,https://github.com/stapelberg,x.c: correctly free con->frame_buffer in _x_con_kill,1,[],https://github.com/i3/i3/pull/3637,https://github.com/stapelberg,4,https://github.com/i3/i3/pull/3637#issuecomment-474244853,"This fixes a crash which I could not reproduce in a testcase with reasonable effort, but the user reported the fix works.
Compare with src/x.c:946.
Fixes #3554
Fixes #3645",Done.,True,{}
i3/i3,https://github.com/i3/i3,3640,2019-03-08T17:21:50Z,2019-03-19T08:36:53Z,2019-03-19T08:36:57Z,MERGED,True,20,11,1,https://github.com/orestisfl,convert_utf8_to_ucs2: Allow partial conversion,1,[],https://github.com/i3/i3/pull/3640,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3640,Fixes #3638.,Fixes #3638.,True,{}
i3/i3,https://github.com/i3/i3,3642,2019-03-11T11:16:50Z,2019-03-20T22:04:11Z,2019-03-20T22:04:12Z,CLOSED,False,3,1,2,https://github.com/wooque,Send window resize event over IPC on explicit resize (#3351),1,['waiting'],https://github.com/i3/i3/pull/3642,https://github.com/wooque,1,https://github.com/i3/i3/pull/3642,Added IPC events when user explicitly resizes windows either using resize shrink|grow... or by dragging window border,Added IPC events when user explicitly resizes windows either using resize shrink|grow... or by dragging window border,True,{}
i3/i3,https://github.com/i3/i3,3642,2019-03-11T11:16:50Z,2019-03-20T22:04:11Z,2019-03-20T22:04:12Z,CLOSED,False,3,1,2,https://github.com/wooque,Send window resize event over IPC on explicit resize (#3351),1,['waiting'],https://github.com/i3/i3/pull/3642,https://github.com/wooque,2,https://github.com/i3/i3/pull/3642#issuecomment-475046461,Added IPC events when user explicitly resizes windows either using resize shrink|grow... or by dragging window border,"I need to get more familiar with codebase to do that and I haven't had free time lately.
I'll close this pull request for now and open new one when I produce more complete solution.",True,{}
i3/i3,https://github.com/i3/i3,3643,2019-03-11T22:48:44Z,2019-03-22T08:39:38Z,2019-03-22T08:39:42Z,MERGED,True,1,0,1,https://github.com/Iskustvo,Adding new IPC library(i3-ipc++) in documents.,1,[],https://github.com/i3/i3/pull/3643,https://github.com/Iskustvo,1,https://github.com/i3/i3/pull/3643,,,True,{}
i3/i3,https://github.com/i3/i3,3643,2019-03-11T22:48:44Z,2019-03-22T08:39:38Z,2019-03-22T08:39:42Z,MERGED,True,1,0,1,https://github.com/Iskustvo,Adding new IPC library(i3-ipc++) in documents.,1,[],https://github.com/i3/i3/pull/3643,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3643#issuecomment-471889525,,"Thanks! The PR is fine, the CI failure is unrelated and files at https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=923942 already. We'll merge this once this is resolved.",True,{'THUMBS_UP': ['https://github.com/Iskustvo']}
i3/i3,https://github.com/i3/i3,3643,2019-03-11T22:48:44Z,2019-03-22T08:39:38Z,2019-03-22T08:39:42Z,MERGED,True,1,0,1,https://github.com/Iskustvo,Adding new IPC library(i3-ipc++) in documents.,1,[],https://github.com/i3/i3/pull/3643,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3643#issuecomment-475137473,,"@Iskustvo The Travis issues should be resolved. Can you please rebase to the current next? Then it should go through. Please drop a comment when you did so, and thanks again!",True,{}
i3/i3,https://github.com/i3/i3,3643,2019-03-11T22:48:44Z,2019-03-22T08:39:38Z,2019-03-22T08:39:42Z,MERGED,True,1,0,1,https://github.com/Iskustvo,Adding new IPC library(i3-ipc++) in documents.,1,[],https://github.com/i3/i3/pull/3643,https://github.com/Iskustvo,4,https://github.com/i3/i3/pull/3643#issuecomment-475416237,,"Thanks for the update!
The PR is rebased now.",True,{}
i3/i3,https://github.com/i3/i3,3643,2019-03-11T22:48:44Z,2019-03-22T08:39:38Z,2019-03-22T08:39:42Z,MERGED,True,1,0,1,https://github.com/Iskustvo,Adding new IPC library(i3-ipc++) in documents.,1,[],https://github.com/i3/i3/pull/3643,https://github.com/Airblader,5,https://github.com/i3/i3/pull/3643#issuecomment-475536239,,Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3648,2019-03-18T00:56:06Z,2019-03-18T08:04:51Z,2019-03-22T09:24:46Z,CLOSED,False,3,1,1,https://github.com/orestisfl,_x_con_kill: Reset frame_buffer.id,1,[],https://github.com/i3/i3/pull/3648,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3648,"Like in:

  
    
      i3/src/x.c
    
    
        Lines 943 to 945
      in
      80ecadb
    
  
  
    

        
          
           draw_util_surface_free(conn, &(con->frame_buffer)); 
        

        
          
           xcb_free_pixmap(conn, con->frame_buffer.id); 
        

        
          
           con->frame_buffer.id = XCB_NONE; 
        
    
  


Fixes #3554 (Didn't confirm yet)
Fixes #3645","Like in:

  
    
      i3/src/x.c
    
    
        Lines 943 to 945
      in
      80ecadb
    
  
  
    

        
          
           draw_util_surface_free(conn, &(con->frame_buffer)); 
        

        
          
           xcb_free_pixmap(conn, con->frame_buffer.id); 
        

        
          
           con->frame_buffer.id = XCB_NONE; 
        
    
  


Fixes #3554 (Didn't confirm yet)
Fixes #3645",True,{}
i3/i3,https://github.com/i3/i3,3648,2019-03-18T00:56:06Z,2019-03-18T08:04:51Z,2019-03-22T09:24:46Z,CLOSED,False,3,1,1,https://github.com/orestisfl,_x_con_kill: Reset frame_buffer.id,1,[],https://github.com/i3/i3/pull/3648,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3648#issuecomment-473773716,"Like in:

  
    
      i3/src/x.c
    
    
        Lines 943 to 945
      in
      80ecadb
    
  
  
    

        
          
           draw_util_surface_free(conn, &(con->frame_buffer)); 
        

        
          
           xcb_free_pixmap(conn, con->frame_buffer.id); 
        

        
          
           con->frame_buffer.id = XCB_NONE; 
        
    
  


Fixes #3554 (Didn't confirm yet)
Fixes #3645",This is a duplicate of #3637 :-),True,{}
i3/i3,https://github.com/i3/i3,3648,2019-03-18T00:56:06Z,2019-03-18T08:04:51Z,2019-03-22T09:24:46Z,CLOSED,False,3,1,1,https://github.com/orestisfl,_x_con_kill: Reset frame_buffer.id,1,[],https://github.com/i3/i3/pull/3648,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/3648#issuecomment-473808007,"Like in:

  
    
      i3/src/x.c
    
    
        Lines 943 to 945
      in
      80ecadb
    
  
  
    

        
          
           draw_util_surface_free(conn, &(con->frame_buffer)); 
        

        
          
           xcb_free_pixmap(conn, con->frame_buffer.id); 
        

        
          
           con->frame_buffer.id = XCB_NONE; 
        
    
  


Fixes #3554 (Didn't confirm yet)
Fixes #3645","Ouch. Well, at least we now know what is fixed by the change.
@stapelberg, can you mention the issues in your commit message?",True,{}
i3/i3,https://github.com/i3/i3,3648,2019-03-18T00:56:06Z,2019-03-18T08:04:51Z,2019-03-22T09:24:46Z,CLOSED,False,3,1,1,https://github.com/orestisfl,_x_con_kill: Reset frame_buffer.id,1,[],https://github.com/i3/i3/pull/3648,https://github.com/stapelberg,4,https://github.com/i3/i3/pull/3648#issuecomment-474244812,"Like in:

  
    
      i3/src/x.c
    
    
        Lines 943 to 945
      in
      80ecadb
    
  
  
    

        
          
           draw_util_surface_free(conn, &(con->frame_buffer)); 
        

        
          
           xcb_free_pixmap(conn, con->frame_buffer.id); 
        

        
          
           con->frame_buffer.id = XCB_NONE; 
        
    
  


Fixes #3554 (Didn't confirm yet)
Fixes #3645",Done.,True,{}
i3/i3,https://github.com/i3/i3,3650,2019-03-19T08:24:03Z,2019-03-19T08:30:05Z,2019-03-19T08:30:05Z,MERGED,True,0,4,1,https://github.com/stapelberg,fix travis build by switching away from deprecated-2017Q3,1,[],https://github.com/i3/i3/pull/3650,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3650,"Also remove “sudo: false” as per
https://blog.travis-ci.com/2018-11-19-required-linux-infrastructure-migration","Also remove “sudo: false” as per
https://blog.travis-ci.com/2018-11-19-required-linux-infrastructure-migration",True,{}
i3/i3,https://github.com/i3/i3,3651,2019-03-19T08:40:34Z,2019-03-19T08:50:00Z,2019-03-19T08:50:06Z,MERGED,True,1,1,1,https://github.com/stapelberg,travis: remove deprecated docker login -e flag,1,[],https://github.com/i3/i3/pull/3651,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3651,,,True,{}
i3/i3,https://github.com/i3/i3,3654,2019-03-21T04:57:25Z,2019-03-21T07:44:13Z,2019-03-21T07:44:17Z,MERGED,True,3,0,2,https://github.com/chrhasse,Add explicit reference to glib2 in automake,1,[],https://github.com/i3/i3/pull/3654,https://github.com/chrhasse,1,https://github.com/i3/i3/pull/3654,fix for issue #3652 which was exposed by pango update 1.43.0,fix for issue #3652 which was exposed by pango update 1.43.0,True,"{'THUMBS_UP': ['https://github.com/Airblader', 'https://github.com/orestisfl']}"
i3/i3,https://github.com/i3/i3,3654,2019-03-21T04:57:25Z,2019-03-21T07:44:13Z,2019-03-21T07:44:17Z,MERGED,True,3,0,2,https://github.com/chrhasse,Add explicit reference to glib2 in automake,1,[],https://github.com/i3/i3/pull/3654,https://github.com/chrhasse,2,https://github.com/i3/i3/pull/3654#issuecomment-475117709,fix for issue #3652 which was exposed by pango update 1.43.0,"It seems like prior to pango version 1.43.0 PANGOCAIRO_LIBS included -lglib-2.0 -lgobject-2.0, whereas these flags are no longer present in version 1.43.0. Technically adding GLIBGOBJECT_CFLAGS to libi3_cflags is unnecessary as PANGOCAIRO_CFLAGS still has all the necessary includes, but in my opinion it's worth explicitly asking for them given the reason for this pull request. For reference this is the failed build log without this PR on a fully updated Arch Linux install.
make  all-am
make[1]: Entering directory '/tmp/i3/build'
  CC       src/i3-assignments.o
  CC       src/i3-click.o
  CC       src/i3-bindings.o
  CC       src/i3-commands.o
  GEN      i3-command-parser.stamp
  CC       src/i3-con.o
  CC       src/i3-config.o
  CC       src/i3-config_directives.o
  GEN      i3-config-parser.stamp
  CC       src/i3-display_version.o
  CC       src/i3-ewmh.o
  CC       src/i3-fake_outputs.o
  CC       src/i3-floating.o
  CC       src/i3-handlers.o
  CC       src/i3-ipc.o
  CC       src/i3-key_press.o
  CC       src/i3-load_layout.o
  CC       src/i3-log.o
  CC       src/i3-main.o
  CC       src/i3-manage.o
  CC       src/i3-match.o
  CC       src/i3-move.o
  CC       src/i3-output.o
  CC       src/i3-randr.o
  CC       src/i3-regex.o
  CC       src/i3-render.o
  CC       src/i3-resize.o
  CC       src/i3-restore_layout.o
  CC       src/i3-scratchpad.o
  CC       src/i3-sd-daemon.o
  CC       src/i3-sighandler.o
  CC       src/i3-startup.o
  CC       src/i3-sync.o
  CC       src/i3-tree.o
  CC       src/i3-util.o
  CC       src/i3-version.o
  CC       src/i3-window.o
  CC       src/i3-workspace.o
  CC       src/i3-x.o
  CC       src/i3-xcb.o
  CC       src/i3-xcursor.o
  CC       src/i3-xinerama.o
  CC       libi3/a-dpi.o
  CC       libi3/a-draw_util.o
  CC       libi3/a-fake_configure_notify.o
  CC       libi3/a-font.o
  CC       libi3/a-format_placeholders.o
  CC       libi3/a-g_utf8_make_valid.o
  CC       libi3/a-get_colorpixel.o
  CC       libi3/a-get_config_path.o
  CC       libi3/a-get_exe_path.o
  CC       libi3/a-get_mod_mask.o
  CC       libi3/a-get_process_filename.o
  CC       libi3/a-get_visualtype.o
  CC       libi3/a-ipc_connect.o
  CC       libi3/a-ipc_recv_message.o
  CC       libi3/a-ipc_send_message.o
  CC       libi3/a-is_debug_build.o
  CC       libi3/a-mkdirp.o
  CC       libi3/a-resolve_tilde.o
  CC       libi3/a-root_atom_contents.o
  CC       libi3/a-safewrappers.o
  CC       libi3/a-string.o
  CC       libi3/a-ucs2_conversion.o
  CC       libi3/a-strndup.o
  CC       i3bar/src/i3bar-child.o
  CC       i3bar/src/i3bar-config.o
  CC       i3bar/src/i3bar-ipc.o
  CC       i3bar/src/i3bar-main.o
  CC       i3bar/src/i3bar-mode.o
  CC       i3bar/src/i3bar-outputs.o
  CC       i3bar/src/i3bar-parse_json_header.o
  CC       i3bar/src/i3bar-workspaces.o
  CC       i3bar/src/i3bar-xcb.o
  CC       i3-config-wizard/i3_config_wizard-main.o
  CC       i3-dump-log/i3_dump_log-main.o
  CC       i3-input/i3_input-keysym2ucs.o
  CC       i3-input/i3_input-main.o
  CC       i3-msg/i3_msg-main.o
  CC       i3-nagbar/i3_nagbar-main.o
  GEN      man/i3.xml
  GEN      man/i3bar.xml
  GEN      man/i3-msg.xml
  GEN      man/i3-input.xml
  GEN      man/i3-nagbar.xml
  GEN      man/i3-config-wizard.xml
  GEN      man/i3-migrate-config-to-v4.xml
  GEN      man/i3-sensible-editor.xml
  GEN      man/i3-sensible-pager.xml
  GEN      man/i3-sensible-terminal.xml
  GEN      man/i3-dump-log.xml
  GEN      man/i3-dmenu-desktop.1
  GEN      man/i3-save-tree.1
  GEN      docs/debugging.html
  GEN      docs/lib-i3test.html
  GEN      docs/lib-i3test-test.html
  GEN      docs/hacking-howto.html
  GEN      docs/userguide.html
  GEN      docs/ipc.html
  GEN      docs/multi-monitor.html
  GEN      docs/wsbar.html
  GEN      docs/testsuite.html
  GEN      docs/i3bar-protocol.html
  GEN      docs/layout-saving.html
  CC       src/i3-commands_parser.o
  CC       src/i3-config_parser.o
  AR       libi3.a
ar: `u' modifier ignored since `D' is the default (see `U')
  GEN      man/i3.1
  GEN      man/i3bar.1
  GEN      man/i3-msg.1
  GEN      man/i3-input.1
  GEN      man/i3-nagbar.1
Note: Writing i3bar.1
Note: Writing i3-msg.1
Note: Writing i3-input.1
Note: Writing i3-nagbar.1
Note: Writing i3.1
  GEN      man/i3-config-wizard.1
  GEN      man/i3-migrate-config-to-v4.1
  GEN      man/i3-sensible-editor.1
  GEN      man/i3-sensible-pager.1
  GEN      man/i3-sensible-terminal.1
  GEN      man/i3-dump-log.1
  CCLD     i3
/usr/bin/ld: ./libi3.a(a-string.o): undefined reference to symbol 'g_utf8_make_valid'
/usr/bin/ld: /usr/lib/libglib-2.0.so.0: error adding symbols: DSO missing from command line
collect2: error: ld returned 1 exit status
make[1]: *** [Makefile:1582: i3] Error 1
make[1]: *** Waiting for unfinished jobs....
Note: Writing i3-sensible-terminal.1
Note: Writing i3-config-wizard.1
Note: Writing i3-sensible-editor.1
Note: Writing i3-migrate-config-to-v4.1
Note: Writing i3-sensible-pager.1
Note: Writing i3-dump-log.1
make[1]: Leaving directory '/tmp/i3/build'
make: *** [Makefile:1327: all] Error 2",True,{}
i3/i3,https://github.com/i3/i3,3654,2019-03-21T04:57:25Z,2019-03-21T07:44:13Z,2019-03-21T07:44:17Z,MERGED,True,3,0,2,https://github.com/chrhasse,Add explicit reference to glib2 in automake,1,[],https://github.com/i3/i3/pull/3654,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3654#issuecomment-475136514,fix for issue #3652 which was exposed by pango update 1.43.0,Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3655,2019-03-21T19:30:24Z,2019-03-22T08:38:03Z,2019-03-22T08:54:37Z,MERGED,True,50,26,4,https://github.com/orestisfl,cfg_workspace: Accept outputs with spaces again,1,[],https://github.com/i3/i3/pull/3655,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3655,Fixes #3646,Fixes #3646,True,{}
i3/i3,https://github.com/i3/i3,3655,2019-03-21T19:30:24Z,2019-03-22T08:38:03Z,2019-03-22T08:54:37Z,MERGED,True,50,26,4,https://github.com/orestisfl,cfg_workspace: Accept outputs with spaces again,1,[],https://github.com/i3/i3/pull/3655,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3655#issuecomment-475537397,Fixes #3646,@orestisf1993 Any chance you would want to merge i3/next into i3-gaps/gaps-next after this change? The merge conflicts there are a bit interesting. :-),True,{}
i3/i3,https://github.com/i3/i3,3655,2019-03-21T19:30:24Z,2019-03-22T08:38:03Z,2019-03-22T08:54:37Z,MERGED,True,50,26,4,https://github.com/orestisfl,cfg_workspace: Accept outputs with spaces again,1,[],https://github.com/i3/i3/pull/3655,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3655#issuecomment-475538779,Fixes #3646,OK actually I resolved them myself,True,{}
i3/i3,https://github.com/i3/i3,3657,2019-03-21T22:09:01Z,2019-03-22T08:40:08Z,2019-10-17T17:38:56Z,MERGED,True,5,1,1,https://github.com/jeffhuxen,Added note which config directives could be used at runtime,1,[],https://github.com/i3/i3/pull/3657,https://github.com/jeffhuxen,1,https://github.com/i3/i3/pull/3657,Fixes #3653,Fixes #3653,True,{}
i3/i3,https://github.com/i3/i3,3657,2019-03-21T22:09:01Z,2019-03-22T08:40:08Z,2019-10-17T17:38:56Z,MERGED,True,5,1,1,https://github.com/jeffhuxen,Added note which config directives could be used at runtime,1,[],https://github.com/i3/i3/pull/3657,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3657#issuecomment-475536392,Fixes #3653,Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3658,2019-03-22T01:14:55Z,2019-03-22T10:18:55Z,2019-03-22T10:25:42Z,MERGED,True,67,65,6,https://github.com/orestisfl,Workspace move to output,4,[],https://github.com/i3/i3/pull/3658,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3658,Closes #3635,Closes #3635,True,{}
i3/i3,https://github.com/i3/i3,3659,2019-03-22T13:08:45Z,2019-03-22T13:54:00Z,2019-03-22T13:54:15Z,MERGED,True,1,1,1,https://github.com/orestisfl,Use git plumbing commands to get the I3_VERSION,1,[],https://github.com/i3/i3/pull/3659,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3659,Fixes #3656,Fixes #3656,True,{}
i3/i3,https://github.com/i3/i3,3665,2019-03-28T16:47:25Z,2019-03-28T20:02:56Z,2019-03-29T00:04:34Z,MERGED,True,2,1,1,https://github.com/lasers,docs/i3bar-protocol: add markup to all possible entries example,1,[],https://github.com/i3/i3/pull/3665,https://github.com/lasers,1,https://github.com/i3/i3/pull/3665,"An example of a block which uses all possible entries follows:

This adds a missing entry markup.","An example of a block which uses all possible entries follows:

This adds a missing entry markup.",True,{}
i3/i3,https://github.com/i3/i3,3665,2019-03-28T16:47:25Z,2019-03-28T20:02:56Z,2019-03-29T00:04:34Z,MERGED,True,2,1,1,https://github.com/lasers,docs/i3bar-protocol: add markup to all possible entries example,1,[],https://github.com/i3/i3/pull/3665,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3665#issuecomment-477750220,"An example of a block which uses all possible entries follows:

This adds a missing entry markup.",Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3666,2019-03-28T19:03:09Z,2019-03-28T20:04:35Z,2019-03-29T13:53:32Z,MERGED,True,62,37,1,https://github.com/orestisfl,handle_button: Fix issues with clicks on statusline,2,[],https://github.com/i3/i3/pull/3666,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3666,Fixes #3664,Fixes #3664,True,{}
i3/i3,https://github.com/i3/i3,3667,2019-03-28T19:30:08Z,2019-03-28T20:03:36Z,2019-03-28T20:13:19Z,MERGED,True,2,1,1,https://github.com/orestisfl,etc/config: Mention ~/.config/i3/config,1,[],https://github.com/i3/i3/pull/3667,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3667,,,True,{}
i3/i3,https://github.com/i3/i3,3669,2019-03-29T01:06:05Z,2019-03-29T13:15:54Z,2019-03-29T13:22:49Z,MERGED,True,183,173,6,https://github.com/orestisfl,Allow checking for duplicate bindings with -C ,4,[],https://github.com/i3/i3/pull/3669,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3669,Fixes #3660,Fixes #3660,True,{}
i3/i3,https://github.com/i3/i3,3671,2019-03-29T14:14:56Z,2019-03-29T14:21:27Z,2019-03-29T14:22:58Z,MERGED,True,21,14,1,https://github.com/orestisfl,child_handle_button: Call only if x >= offset,1,[],https://github.com/i3/i3/pull/3671,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3671,"c2a1b6e was a bit overzealous, other actions should be executed if the button was pressed after the workspace buttons but before the statusline.
Also, should we allow other actions everywhere in the bar if click events are disabled by the child?","c2a1b6e was a bit overzealous, other actions should be executed if the button was pressed after the workspace buttons but before the statusline.
Also, should we allow other actions everywhere in the bar if click events are disabled by the child?",True,{}
i3/i3,https://github.com/i3/i3,3674,2019-04-03T15:50:32Z,2019-04-03T17:13:10Z,2019-04-03T17:34:02Z,MERGED,True,21,42,5,https://github.com/orestisfl,Janitorial,3,[],https://github.com/i3/i3/pull/3674,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3674,,,True,{}
i3/i3,https://github.com/i3/i3,3680,2019-04-11T00:14:56Z,2019-04-11T07:29:43Z,2019-04-11T07:29:44Z,MERGED,True,1,0,1,https://github.com/jklotz77,Fix memory leak,1,[],https://github.com/i3/i3/pull/3680,https://github.com/jklotz77,1,https://github.com/i3/i3/pull/3680,Per #3621 fixes the unlikely memory leak in libi3/fonts.c,Per #3621 fixes the unlikely memory leak in libi3/fonts.c,True,{'THUMBS_UP': ['https://github.com/psychon']}
i3/i3,https://github.com/i3/i3,3681,2019-04-11T23:41:01Z,2019-04-11T23:48:58Z,2019-04-11T23:49:04Z,CLOSED,False,1,1,1,https://github.com/dsandler,Prevent cairo segfault with partially inited windows.,3,[],https://github.com/i3/i3/pull/3681,https://github.com/dsandler,1,https://github.com/i3/i3/pull/3681,"The code already does a basic sanity check to bail out; this
patch adds an additional check to make sure
the rendering context cr is non-NULL.","The code already does a basic sanity check to bail out; this
patch adds an additional check to make sure
the rendering context cr is non-NULL.",True,{}
i3/i3,https://github.com/i3/i3,3682,2019-04-12T00:07:04Z,2019-04-16T04:52:29Z,2019-04-16T04:52:29Z,CLOSED,False,1,1,1,https://github.com/dsandler,Prevent cairo segfault with partially inited windows.,1,[],https://github.com/i3/i3/pull/3682,https://github.com/dsandler,1,https://github.com/i3/i3/pull/3682,"The code already does a basic sanity check to bail out; this
patch adds an additional check to make sure the rendering
context cr is non-NULL.","The code already does a basic sanity check to bail out; this
patch adds an additional check to make sure the rendering
context cr is non-NULL.",True,{}
i3/i3,https://github.com/i3/i3,3682,2019-04-12T00:07:04Z,2019-04-16T04:52:29Z,2019-04-16T04:52:29Z,CLOSED,False,1,1,1,https://github.com/dsandler,Prevent cairo segfault with partially inited windows.,1,[],https://github.com/i3/i3/pull/3682,https://github.com/dsandler,2,https://github.com/i3/i3/pull/3682#issuecomment-482379824,"The code already does a basic sanity check to bail out; this
patch adds an additional check to make sure the rendering
context cr is non-NULL.","I was running into this when applying a workspace layout and immediately launching a few X11 apps, including one that really really wants to be floating.",True,{}
i3/i3,https://github.com/i3/i3,3682,2019-04-12T00:07:04Z,2019-04-16T04:52:29Z,2019-04-16T04:52:29Z,CLOSED,False,1,1,1,https://github.com/dsandler,Prevent cairo segfault with partially inited windows.,1,[],https://github.com/i3/i3/pull/3682,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3682#issuecomment-482452736,"The code already does a basic sanity check to bail out; this
patch adds an additional check to make sure the rendering
context cr is non-NULL.","While this doesn't seem to hurt, I actually would like to know why this happens in the first place. Looking at the code this should only happen if draw_util_surface_init is called with drawable = XCB_NONE, which seems like should be prevented anyway.
Would you mind filing a bug report with the log file for this?",True,{'THUMBS_UP': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,3682,2019-04-12T00:07:04Z,2019-04-16T04:52:29Z,2019-04-16T04:52:29Z,CLOSED,False,1,1,1,https://github.com/dsandler,Prevent cairo segfault with partially inited windows.,1,[],https://github.com/i3/i3/pull/3682,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/3682#issuecomment-482531396,"The code already does a basic sanity check to bail out; this
patch adds an additional check to make sure the rendering
context cr is non-NULL.",Also see: #3645 (comment),True,{}
i3/i3,https://github.com/i3/i3,3682,2019-04-12T00:07:04Z,2019-04-16T04:52:29Z,2019-04-16T04:52:29Z,CLOSED,False,1,1,1,https://github.com/dsandler,Prevent cairo segfault with partially inited windows.,1,[],https://github.com/i3/i3/pull/3682,https://github.com/dsandler,5,https://github.com/i3/i3/pull/3682#issuecomment-482734260,"The code already does a basic sanity check to bail out; this
patch adds an additional check to make sure the rendering
context cr is non-NULL.","Yup, that's the same fix. :)
I have a backtrace on my machine at work---will try to get it. It occurred when launching TowerFall into a layout that was trying to swallow it---the game forces a floating window, so that might be the same kind of situation as a splash screen.",True,{}
i3/i3,https://github.com/i3/i3,3682,2019-04-12T00:07:04Z,2019-04-16T04:52:29Z,2019-04-16T04:52:29Z,CLOSED,False,1,1,1,https://github.com/dsandler,Prevent cairo segfault with partially inited windows.,1,[],https://github.com/i3/i3/pull/3682,https://github.com/dsandler,6,https://github.com/i3/i3/pull/3682#issuecomment-482744092,"The code already does a basic sanity check to bail out; this
patch adds an additional check to make sure the rendering
context cr is non-NULL.","Reading symbols from /usr/bin/i3...Reading symbols from /usr/lib/debug/.build-id/07/9e295cd8b87f51ad828c957d6b5687c8469a50.debug...done.
Unable to determine compiler version.
Skipping loading of libstdc++ pretty-printers for now.
done.
Non-google3 binary detected.
[Thread debugging using libthread_db enabled]
Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".
0x00007f72b060a620 in __poll_nocancel () at ../sysdeps/unix/syscall-template.S:84
84      ../sysdeps/unix/syscall-template.S: No such file or directory.
(gdb) bt
#0  0x00007f72b060a620 in __poll_nocancel () at ../sysdeps/unix/syscall-template.S:84
#1  0x00007f72b3a06150 in  () at /usr/lib/x86_64-linux-gnu/libxcb.so.1
#2  0x00007f72b3a07ee9 in xcb_wait_for_event () at /usr/lib/x86_64-linux-gnu/libxcb.so.1
#3  0x0000563b67f50acc in handle_signal (sig=<optimized out>, info=<optimized out>, data=<optimized out>) at ../../i3-wm-4.16/src/sighandler.c:317
#4  0x00007f72b08db0c0 in <signal handler called> () at /lib/x86_64-linux-gnu/libpthread.so.0
#5  0x00007f72b21560c0 in INT_cairo_save (cr=0x0) at ../../../../src/cairo.c:628
#6  0x0000563b67f5aca2 in draw_util_rectangle (surface=0x563b69ef6af0, color=..., x=0, y=0, w=1264, h=0) at ../../i3-wm-4.16/libi3/draw_util.c:152
#7  0x0000563b67f573e3 in x_draw_decoration (con=con@entry=0x563b69ef6ac0) at ../../i3-wm-4.16/src/x.c:495
#8  0x0000563b67f57ff3 in x_deco_recurse (con=con@entry=0x563b69ef6ac0) at ../../i3-wm-4.16/src/x.c:715
#9  0x0000563b67f57f92 in x_deco_recurse (con=con@entry=0x563b69ef2ce0) at ../../i3-wm-4.16/src/x.c:703
#10 0x0000563b67f58571 in x_push_node (con=con@entry=0x563b69ef2ce0) at ../../i3-wm-4.16/src/x.c:882
#11 0x0000563b67f58286 in x_push_node (con=con@entry=0x563b69e9f380) at ../../i3-wm-4.16/src/x.c:966
#12 0x0000563b67f58286 in x_push_node (con=con@entry=0x563b69e9f1b0) at ../../i3-wm-4.16/src/x.c:966
#13 0x0000563b67f58286 in x_push_node (con=con@entry=0x563b69e9e270) at ../../i3-wm-4.16/src/x.c:966
#14 0x0000563b67f58286 in x_push_node (con=con@entry=0x563b69e9b380) at ../../i3-wm-4.16/src/x.c:966
#15 0x0000563b67f58ce9 in x_push_changes (con=0x563b69e9b380) at ../../i3-wm-4.16/src/x.c:1130
#16 0x0000563b67f51fce in tree_render () at ../../i3-wm-4.16/src/tree.c:458
#17 0x0000563b67f52b4f in tree_render () at ../../i3-wm-4.16/src/tree.c:447
#18 0x0000563b67f218a5 in run_assignments (window=window@entry=0x563b69ef2980) at ../../i3-wm-4.16/src/assignments.c:62
#19 0x0000563b67f47c45 in manage_window (window=33554439, cookie=..., cookie@entry=..., needs_to_be_mapped=needs_to_be_mapped@entry=false) at ../../i3-wm-4.16/src/manage.c:578
#20 0x0000563b67f3efc5 in handle_map_request (event=0x563b69ed6fe0) at ../../i3-wm-4.16/src/handlers.c:264
#21 0x0000563b67f3efc5 in handle_event (type=<optimized out>, event=0x563b69ed6fe0) at ../../i3-wm-4.16/src/handlers.c:1532
#22 0x0000563b67f468cb in xcb_prepare_cb (loop=<optimized out>, w=<optimized out>, revents=<optimized out>) at ../../i3-wm-4.16/src/main.c:131
#23 0x00007f72b0def413 in ev_invoke_pending () at /usr/lib/x86_64-linux-gnu/libev.so.4
#24 0x00007f72b0df2f11 in ev_run () at /usr/lib/x86_64-linux-gnu/libev.so.4
#25 0x0000563b67f20aaa in ev_loop (flags=0, loop=<optimized out>) at /usr/include/ev.h:835
#26 0x0000563b67f20aaa in main (argc=<optimized out>, argv=<optimized out>) at ../../i3-wm-4.16/src/main.c:975",True,{}
i3/i3,https://github.com/i3/i3,3682,2019-04-12T00:07:04Z,2019-04-16T04:52:29Z,2019-04-16T04:52:29Z,CLOSED,False,1,1,1,https://github.com/dsandler,Prevent cairo segfault with partially inited windows.,1,[],https://github.com/i3/i3/pull/3682,https://github.com/orestisfl,7,https://github.com/i3/i3/pull/3682#issuecomment-482746148,"The code already does a basic sanity check to bail out; this
patch adds an additional check to make sure the rendering
context cr is non-NULL.","So, the bug is not reproducible on the next branch?",True,{}
i3/i3,https://github.com/i3/i3,3682,2019-04-12T00:07:04Z,2019-04-16T04:52:29Z,2019-04-16T04:52:29Z,CLOSED,False,1,1,1,https://github.com/dsandler,Prevent cairo segfault with partially inited windows.,1,[],https://github.com/i3/i3/pull/3682,https://github.com/dsandler,8,https://github.com/i3/i3/pull/3682#issuecomment-483380295,"The code already does a basic sanity check to bail out; this
patch adds an additional check to make sure the rendering
context cr is non-NULL.","That's right, the crash does not occur in next (presumably one of the commits linked in #3645 addressed the root cause).",True,{}
i3/i3,https://github.com/i3/i3,3682,2019-04-12T00:07:04Z,2019-04-16T04:52:29Z,2019-04-16T04:52:29Z,CLOSED,False,1,1,1,https://github.com/dsandler,Prevent cairo segfault with partially inited windows.,1,[],https://github.com/i3/i3/pull/3682,https://github.com/orestisfl,9,https://github.com/i3/i3/pull/3682#issuecomment-483403242,"The code already does a basic sanity check to bail out; this
patch adds an additional check to make sure the rendering
context cr is non-NULL.","Thanks for confirming.
@Airblader we can merge this since we are already checking for the argument's validity but it might silently hide future bugs",True,{}
i3/i3,https://github.com/i3/i3,3682,2019-04-12T00:07:04Z,2019-04-16T04:52:29Z,2019-04-16T04:52:29Z,CLOSED,False,1,1,1,https://github.com/dsandler,Prevent cairo segfault with partially inited windows.,1,[],https://github.com/i3/i3/pull/3682,https://github.com/Airblader,10,https://github.com/i3/i3/pull/3682#issuecomment-483510291,"The code already does a basic sanity check to bail out; this
patch adds an additional check to make sure the rendering
context cr is non-NULL.","Yeah, I would like to not merge this since this really just hides bugs. Since the issue is already fixed there's also no real need to. @dsandler Thanks for your help!",True,{}
i3/i3,https://github.com/i3/i3,3697,2019-05-03T13:25:22Z,2019-05-03T14:01:43Z,2019-10-17T09:46:06Z,MERGED,True,82,110,7,https://github.com/orestisfl,Fix ewmh atom issues,4,[],https://github.com/i3/i3/pull/3697,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3697,Fixes #3696,Fixes #3696,True,{}
i3/i3,https://github.com/i3/i3,3701,2019-05-13T09:58:36Z,2019-05-14T13:23:29Z,2019-05-14T13:25:58Z,MERGED,True,1,5,1,https://github.com/orestisfl,"i3bar: If click events disabled, use whole bar for other events",1,[],https://github.com/i3/i3/pull/3701,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3701,Fixes #3700,Fixes #3700,True,{}
i3/i3,https://github.com/i3/i3,3701,2019-05-13T09:58:36Z,2019-05-14T13:23:29Z,2019-05-14T13:25:58Z,MERGED,True,1,5,1,https://github.com/orestisfl,"i3bar: If click events disabled, use whole bar for other events",1,[],https://github.com/i3/i3/pull/3701,https://github.com/acrisci,2,https://github.com/i3/i3/pull/3701#issuecomment-492031375,Fixes #3700,👍 fixes it thanks,True,{}
i3/i3,https://github.com/i3/i3,3706,2019-05-24T21:09:11Z,2019-05-25T09:18:00Z,2019-05-25T09:51:17Z,MERGED,True,2,0,1,https://github.com/orestisfl,Fix: delete decoration cache after swap,1,[],https://github.com/i3/i3/pull/3706,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3706,"Tested this quickly, don't think I am missing something","Tested this quickly, don't think I am missing something",True,{}
i3/i3,https://github.com/i3/i3,3709,2019-06-03T05:43:55Z,2019-06-03T06:19:39Z,2019-10-17T17:39:11Z,MERGED,True,1,1,1,https://github.com/okraits,docs: describe for_window with the correct term,1,[],https://github.com/i3/i3/pull/3709,https://github.com/okraits,1,https://github.com/i3/i3/pull/3709,"for_window is a directive or option, not a command. Otherwise, people might want to use it in a keybinding: https://www.reddit.com/r/i3wm/comments/bw3d02/toggle_whether_new_windows_are_tiled_or_floating/
Related to #3653","for_window is a directive or option, not a command. Otherwise, people might want to use it in a keybinding: https://www.reddit.com/r/i3wm/comments/bw3d02/toggle_whether_new_windows_are_tiled_or_floating/
Related to #3653",True,{}
i3/i3,https://github.com/i3/i3,3726,2019-06-21T14:24:12Z,2019-06-22T20:18:30Z,2019-06-22T20:18:30Z,MERGED,True,51,8,4,https://github.com/Airblader,feat: added support for user-defined border widths in i3bar blocks,1,[],https://github.com/i3/i3/pull/3726,https://github.com/Airblader,1,https://github.com/i3/i3/pull/3726,"This change introduces support for four new properties on the i3bar
protocol, namely ""border_top"", ""border_right"", ""border_bottom""
and ""border_left"".
If a block is drawn with a border, these values define the width of
the corresponding edge in pixels. They all default to 1 if not
specified to preserve compatibility.
fixes #3722","This change introduces support for four new properties on the i3bar
protocol, namely ""border_top"", ""border_right"", ""border_bottom""
and ""border_left"".
If a block is drawn with a border, these values define the width of
the corresponding edge in pixels. They all default to 1 if not
specified to preserve compatibility.
fixes #3722",True,{}
i3/i3,https://github.com/i3/i3,3726,2019-06-21T14:24:12Z,2019-06-22T20:18:30Z,2019-06-22T20:18:30Z,MERGED,True,51,8,4,https://github.com/Airblader,feat: added support for user-defined border widths in i3bar blocks,1,[],https://github.com/i3/i3/pull/3726,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3726#issuecomment-504691740,"This change introduces support for four new properties on the i3bar
protocol, namely ""border_top"", ""border_right"", ""border_bottom""
and ""border_left"".
If a block is drawn with a border, these values define the width of
the corresponding edge in pixels. They all default to 1 if not
specified to preserve compatibility.
fixes #3722",@stapelberg done,True,{}
i3/i3,https://github.com/i3/i3,3727,2019-06-21T14:36:08Z,2019-06-22T15:23:22Z,2019-06-22T15:23:22Z,MERGED,True,48,8,4,https://github.com/Airblader,feat: support transparency (RGBA) in i3bar,1,[],https://github.com/i3/i3/pull/3727,https://github.com/Airblader,1,https://github.com/i3/i3/pull/3727,"We introduce a -t flag for i3bar in order to enable a mode which
supports the use of RGBA colors.
An important constraint here is that tray icons will always have
a fully transparent background.
fixes #3723","We introduce a -t flag for i3bar in order to enable a mode which
supports the use of RGBA colors.
An important constraint here is that tray icons will always have
a fully transparent background.
fixes #3723",True,{}
i3/i3,https://github.com/i3/i3,3727,2019-06-21T14:36:08Z,2019-06-22T15:23:22Z,2019-06-22T15:23:22Z,MERGED,True,48,8,4,https://github.com/Airblader,feat: support transparency (RGBA) in i3bar,1,[],https://github.com/i3/i3/pull/3727,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3727#issuecomment-504673956,"We introduce a -t flag for i3bar in order to enable a mode which
supports the use of RGBA colors.
An important constraint here is that tray icons will always have
a fully transparent background.
fixes #3723",@stapelberg All done.,True,{}
i3/i3,https://github.com/i3/i3,3728,2019-06-24T18:18:38Z,2019-10-05T22:22:45Z,2019-10-05T22:22:45Z,MERGED,True,102,44,13,https://github.com/cdlscpmv,Add setting for minimal width of workspace buttons,1,[],https://github.com/i3/i3/pull/3728,https://github.com/cdlscpmv,1,https://github.com/i3/i3/pull/3728,Fixes #3711.,Fixes #3711.,True,{'THUMBS_UP': ['https://github.com/morgoth6']}
i3/i3,https://github.com/i3/i3,3740,2019-07-19T18:40:33Z,2019-07-19T19:01:37Z,2019-07-19T19:10:54Z,MERGED,True,1,1,1,https://github.com/stapelberg,strace: switch from deprecated -F to -fvy,1,[],https://github.com/i3/i3/pull/3740,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3740,,,True,{}
i3/i3,https://github.com/i3/i3,3741,2019-07-19T19:06:58Z,2019-07-19T19:10:41Z,2019-07-19T19:10:44Z,MERGED,True,1,0,1,https://github.com/stapelberg,unflake t/291-swap.t,1,[],https://github.com/i3/i3/pull/3741,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3741,,,True,{}
i3/i3,https://github.com/i3/i3,3742,2019-07-19T19:24:51Z,2019-07-19T20:18:17Z,2019-07-19T20:50:46Z,MERGED,True,4,3,1,https://github.com/stapelberg,docs/ipc: fix code block header/footer mismatches,1,[],https://github.com/i3/i3/pull/3742,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3742,"This is required to get the document rendered with the asciidoctor
implementation of asciidoc.","This is required to get the document rendered with the asciidoctor
implementation of asciidoc.",True,{}
i3/i3,https://github.com/i3/i3,3743,2019-07-19T19:26:41Z,2019-07-21T12:52:13Z,2019-07-21T12:52:17Z,MERGED,True,126,24,10,https://github.com/stapelberg,Make `restart` IPC command send a reply once restart completed (!),1,[],https://github.com/i3/i3/pull/3743,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3743,"This is achieved by retaining the IPC connection which is sending the restart
command across the restart.
This is the cleaner fix for i3/go-i3#3
fixes #3565","This is achieved by retaining the IPC connection which is sending the restart
command across the restart.
This is the cleaner fix for i3/go-i3#3
fixes #3565",True,{}
i3/i3,https://github.com/i3/i3,3743,2019-07-19T19:26:41Z,2019-07-21T12:52:13Z,2019-07-21T12:52:17Z,MERGED,True,126,24,10,https://github.com/stapelberg,Make `restart` IPC command send a reply once restart completed (!),1,[],https://github.com/i3/i3/pull/3743,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/3743#issuecomment-513348385,"This is achieved by retaining the IPC connection which is sending the restart
command across the restart.
This is the cleaner fix for i3/go-i3#3
fixes #3565",Be sure to read i3/go-i3#3 (comment) before diving into the code to understand the context around this change.,True,{}
i3/i3,https://github.com/i3/i3,3743,2019-07-19T19:26:41Z,2019-07-21T12:52:13Z,2019-07-21T12:52:17Z,MERGED,True,126,24,10,https://github.com/stapelberg,Make `restart` IPC command send a reply once restart completed (!),1,[],https://github.com/i3/i3/pull/3743,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/3743#issuecomment-513353856,"This is achieved by retaining the IPC connection which is sending the restart
command across the restart.
This is the cleaner fix for i3/go-i3#3
fixes #3565",Travis is now passing.,True,{}
i3/i3,https://github.com/i3/i3,3746,2019-07-25T19:06:37Z,2019-08-08T05:43:03Z,2019-08-08T05:43:09Z,MERGED,True,6,2,1,https://github.com/antoinemadec,workspace_move_to_output: fix ws creation,1,[],https://github.com/i3/i3/pull/3746,https://github.com/antoinemadec,1,https://github.com/i3/i3/pull/3746,Fixes #3745,Fixes #3745,True,{}
i3/i3,https://github.com/i3/i3,3746,2019-07-25T19:06:37Z,2019-08-08T05:43:03Z,2019-08-08T05:43:09Z,MERGED,True,6,2,1,https://github.com/antoinemadec,workspace_move_to_output: fix ws creation,1,[],https://github.com/i3/i3/pull/3746,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3746#issuecomment-515376339,Fixes #3745,"@stapelberg Are there plans for a next release? I would merge this, I think, but not ""right before"" a release since I think it makes sense to see if this is more helpful or more inconvenient for users.",True,{'HOORAY': ['https://github.com/antoinemadec']}
i3/i3,https://github.com/i3/i3,3746,2019-07-25T19:06:37Z,2019-08-08T05:43:03Z,2019-08-08T05:43:09Z,MERGED,True,6,2,1,https://github.com/antoinemadec,workspace_move_to_output: fix ws creation,1,[],https://github.com/i3/i3/pull/3746,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/3746#issuecomment-515481644,Fixes #3745,"@stapelberg Are there plans for a next release? I would merge this, I think, but not ""right before"" a release since I think it makes sense to see if this is more helpful or more inconvenient for users.

Yeah, I can prepare a new release next week. It’s time :)",True,{'HOORAY': ['https://github.com/antoinemadec']}
i3/i3,https://github.com/i3/i3,3746,2019-07-25T19:06:37Z,2019-08-08T05:43:03Z,2019-08-08T05:43:09Z,MERGED,True,6,2,1,https://github.com/antoinemadec,workspace_move_to_output: fix ws creation,1,[],https://github.com/i3/i3/pull/3746,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/3746#issuecomment-516064067,Fixes #3745,A test failed here,True,{}
i3/i3,https://github.com/i3/i3,3746,2019-07-25T19:06:37Z,2019-08-08T05:43:03Z,2019-08-08T05:43:09Z,MERGED,True,6,2,1,https://github.com/antoinemadec,workspace_move_to_output: fix ws creation,1,[],https://github.com/i3/i3/pull/3746,https://github.com/stapelberg,5,https://github.com/i3/i3/pull/3746#issuecomment-516153633,Fixes #3745,"A test failed here

@antoinemadec Looks like your change breaks test testcases/t/304-ipc-workspace-init.t. Could you take a look when you get a chance please?",True,{}
i3/i3,https://github.com/i3/i3,3746,2019-07-25T19:06:37Z,2019-08-08T05:43:03Z,2019-08-08T05:43:09Z,MERGED,True,6,2,1,https://github.com/antoinemadec,workspace_move_to_output: fix ws creation,1,[],https://github.com/i3/i3/pull/3746,https://github.com/antoinemadec,6,https://github.com/i3/i3/pull/3746#issuecomment-516517479,Fixes #3745,"@stapelberg OK.
I followed the doc to run this test, but I encountered the following error:

Can't locate X11/XCB.pm in @inc (you may need to install the X11::XCB module)

I am not familiar with Perl, could you please let me know how to install this module?",True,{}
i3/i3,https://github.com/i3/i3,3746,2019-07-25T19:06:37Z,2019-08-08T05:43:03Z,2019-08-08T05:43:09Z,MERGED,True,6,2,1,https://github.com/antoinemadec,workspace_move_to_output: fix ws creation,1,[],https://github.com/i3/i3/pull/3746,https://github.com/stapelberg,7,https://github.com/i3/i3/pull/3746#issuecomment-516520722,Fixes #3745,"I am not familiar with Perl, could you please let me know how to install this module?

Please see https://i3wm.org/docs/testsuite.html#_installing_the_dependencies",True,{}
i3/i3,https://github.com/i3/i3,3746,2019-07-25T19:06:37Z,2019-08-08T05:43:03Z,2019-08-08T05:43:09Z,MERGED,True,6,2,1,https://github.com/antoinemadec,workspace_move_to_output: fix ws creation,1,[],https://github.com/i3/i3/pull/3746,https://github.com/antoinemadec,8,https://github.com/i3/i3/pull/3746#issuecomment-516579471,Fixes #3745,"I am not familiar with Perl, could you please let me know how to install this module?

Please see https://i3wm.org/docs/testsuite.html#_installing_the_dependencies

After looking at the build log, the error was caused by the absence of the xcb-proto package.
sudo apt install xcb-proto
Also, the xvfb package was missing.
sudo apt install xvfb
Maybe we could add this in the testsuite doc?",True,{}
i3/i3,https://github.com/i3/i3,3746,2019-07-25T19:06:37Z,2019-08-08T05:43:03Z,2019-08-08T05:43:09Z,MERGED,True,6,2,1,https://github.com/antoinemadec,workspace_move_to_output: fix ws creation,1,[],https://github.com/i3/i3/pull/3746,https://github.com/antoinemadec,9,https://github.com/i3/i3/pull/3746#issuecomment-517408137,Fixes #3745,"@stapelberg I just spent roughly 5 hours trying to debug the failing test using this command:
sudo ./complete-run.pl --parallel=1 --keep-xserver-output ../../testcases/t/304-ipc-workspace-init.t
I tried printf among other things and I still don't have a clear understanding of the state of the windows between commands.
I also tried to use x11vnc with sleep(5) between commands in order to see what Xvfb/Xephyr was doing.
Unfortunately I only saw black and white shapes moving...
My question is the following: is there a graphical (or clear debug prints) that can show what is the sate of the windows in between commands?
Thanks,
Antoine",True,{}
i3/i3,https://github.com/i3/i3,3746,2019-07-25T19:06:37Z,2019-08-08T05:43:03Z,2019-08-08T05:43:09Z,MERGED,True,6,2,1,https://github.com/antoinemadec,workspace_move_to_output: fix ws creation,1,[],https://github.com/i3/i3/pull/3746,https://github.com/orestisfl,10,https://github.com/i3/i3/pull/3746#issuecomment-517417997,Fixes #3745,"To debug the test I would recommend to copy the test's condig (add a bar { and maybe some keybinds to be easier to use) and use Xephyr + gdb to launch i3.
Then, just run the steps from the commands from the failing test",True,{}
i3/i3,https://github.com/i3/i3,3746,2019-07-25T19:06:37Z,2019-08-08T05:43:03Z,2019-08-08T05:43:09Z,MERGED,True,6,2,1,https://github.com/antoinemadec,workspace_move_to_output: fix ws creation,1,[],https://github.com/i3/i3/pull/3746,https://github.com/antoinemadec,11,https://github.com/i3/i3/pull/3746#issuecomment-519166561,Fixes #3745,"@stapelberg @Airblader @orestisfl I just fixed the issue:
PASS: testcases/complete-run.pl
However Travis CI had an issue yesterday, could you please re-trigger a build?",True,{}
i3/i3,https://github.com/i3/i3,3746,2019-07-25T19:06:37Z,2019-08-08T05:43:03Z,2019-08-08T05:43:09Z,MERGED,True,6,2,1,https://github.com/antoinemadec,workspace_move_to_output: fix ws creation,1,[],https://github.com/i3/i3/pull/3746,https://github.com/stapelberg,12,https://github.com/i3/i3/pull/3746#issuecomment-519171772,Fixes #3745,"I just fixed the issue:

Glad to hear it, and sorry for not being able to come up with better pointers for how to debug the test. Which strategy worked best in the end? What was the issue?
We need to make the commit description more descriptive: currently it doesn’t convey the changes in behavior to the end user. How about something like “move workspace to output: don’t create duplicatively numbered workspaces”?
Also, please include the “fixes #3745” line in your commit message.
Lastly, please interactively rebase your git commits into just one commit—we’d like to have a clean git history.",True,{}
i3/i3,https://github.com/i3/i3,3746,2019-07-25T19:06:37Z,2019-08-08T05:43:03Z,2019-08-08T05:43:09Z,MERGED,True,6,2,1,https://github.com/antoinemadec,workspace_move_to_output: fix ws creation,1,[],https://github.com/i3/i3/pull/3746,https://github.com/antoinemadec,13,https://github.com/i3/i3/pull/3746#issuecomment-519275804,Fixes #3745,"Glad to hear it, and sorry for not being able to come up with better pointers for how to debug the test. Which strategy worked best in the end?

No problem, I used debug prints like these:
my $ptr = get_workspace_names();
foreach $ws_name (@$ptr) {
    $ws_output = get_output_for_workspace($ws_name);
    print ""DEBUG: (ws_name, output) = ($ws_name, $ws_output)\n"";
}
print(""DEBUG: ws_focused="", focused_ws(), ""\n"");
The testsuite was actually harder to understand than the source code itself 😄

What was the issue?

When creating a new ws, we check if assignment ws are available.
To test whether an assignment ws is attached, I was using this:
get_existing_workspace_by_num(ws_name_to_number(assignment->name)) != NULL
Which is always true for named ws.
I now use test get_existing_workspace_by_name for named ws, get_existing_workspace_by_num otherwise.
Sorry about the dirty commits, it's all clean now.
Thanks a lot for maintaining this amazing project 👍
Cheers,
Antoine",True,{'THUMBS_UP': ['https://github.com/stapelberg']}
i3/i3,https://github.com/i3/i3,3746,2019-07-25T19:06:37Z,2019-08-08T05:43:03Z,2019-08-08T05:43:09Z,MERGED,True,6,2,1,https://github.com/antoinemadec,workspace_move_to_output: fix ws creation,1,[],https://github.com/i3/i3/pull/3746,https://github.com/stapelberg,14,https://github.com/i3/i3/pull/3746#issuecomment-519373434,Fixes #3745,Thanks!,True,{'HOORAY': ['https://github.com/antoinemadec']}
i3/i3,https://github.com/i3/i3,3747,2019-07-28T16:00:58Z,2019-08-28T06:58:45Z,2019-08-28T06:58:45Z,MERGED,True,40,41,2,https://github.com/stapelberg,"default config: use workspace number, not just workspace",1,[],https://github.com/i3/i3/pull/3747,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3747,"This is strictly better: if the configured name does not match the current name,
the correct workspace will still be used.
When creating a new workspace, the configured name is still used.","This is strictly better: if the configured name does not match the current name,
the correct workspace will still be used.
When creating a new workspace, the configured name is still used.",True,{}
i3/i3,https://github.com/i3/i3,3747,2019-07-28T16:00:58Z,2019-08-28T06:58:45Z,2019-08-28T06:58:45Z,MERGED,True,40,41,2,https://github.com/stapelberg,"default config: use workspace number, not just workspace",1,[],https://github.com/i3/i3/pull/3747,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3747#issuecomment-515798444,"This is strictly better: if the configured name does not match the current name,
the correct workspace will still be used.
When creating a new workspace, the configured name is still used.","This change would be unnecessary with #3746, right? If course it shouldn't hurt either way. I'll not merge it since I'm not sure if you want to merge it before the release.",True,{}
i3/i3,https://github.com/i3/i3,3747,2019-07-28T16:00:58Z,2019-08-28T06:58:45Z,2019-08-28T06:58:45Z,MERGED,True,40,41,2,https://github.com/stapelberg,"default config: use workspace number, not just workspace",1,[],https://github.com/i3/i3/pull/3747,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/3747#issuecomment-515929373,"This is strictly better: if the configured name does not match the current name,
the correct workspace will still be used.
When creating a new workspace, the configured name is still used.","This change would be unnecessary with #3746, right?

That issue is only related to assignments, no? This change also covers creating a new workspace by switching to it.",True,{'THUMBS_UP': ['https://github.com/Airblader']}
i3/i3,https://github.com/i3/i3,3748,2019-07-28T16:02:39Z,2019-07-31T13:20:47Z,2019-07-31T13:20:47Z,MERGED,True,30,12,2,https://github.com/stapelberg,"default config: start xss-lock+i3lock, nm-applet, pactl (volume key)",1,[],https://github.com/i3/i3/pull/3748,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3748,"This change will make things strictly better for new users (without an existing
configuration file) and has no effect on existing users.
The tools should be fairly uncontentious, I hope, especially as they only serve
as a starting point anyway: users can quickly delete what they don’t want, or
change it into what they prefer.
But having something is strictly better than having nothing :)
We make some space in the config file by removing the old paragraph about pixel
fonts, which seems rather outdated and irrelevant to me.","This change will make things strictly better for new users (without an existing
configuration file) and has no effect on existing users.
The tools should be fairly uncontentious, I hope, especially as they only serve
as a starting point anyway: users can quickly delete what they don’t want, or
change it into what they prefer.
But having something is strictly better than having nothing :)
We make some space in the config file by removing the old paragraph about pixel
fonts, which seems rather outdated and irrelevant to me.",True,{}
i3/i3,https://github.com/i3/i3,3748,2019-07-28T16:02:39Z,2019-07-31T13:20:47Z,2019-07-31T13:20:47Z,MERGED,True,30,12,2,https://github.com/stapelberg,"default config: start xss-lock+i3lock, nm-applet, pactl (volume key)",1,[],https://github.com/i3/i3/pull/3748,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/3748#issuecomment-516841298,"This change will make things strictly better for new users (without an existing
configuration file) and has no effect on existing users.
The tools should be fairly uncontentious, I hope, especially as they only serve
as a starting point anyway: users can quickly delete what they don’t want, or
change it into what they prefer.
But having something is strictly better than having nothing :)
We make some space in the config file by removing the old paragraph about pixel
fonts, which seems rather outdated and irrelevant to me.",Does this work for you? I’d like to get this change in before the release.,True,{}
i3/i3,https://github.com/i3/i3,3748,2019-07-28T16:02:39Z,2019-07-31T13:20:47Z,2019-07-31T13:20:47Z,MERGED,True,30,12,2,https://github.com/stapelberg,"default config: start xss-lock+i3lock, nm-applet, pactl (volume key)",1,[],https://github.com/i3/i3/pull/3748,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3748#issuecomment-516844063,"This change will make things strictly better for new users (without an existing
configuration file) and has no effect on existing users.
The tools should be fairly uncontentious, I hope, especially as they only serve
as a starting point anyway: users can quickly delete what they don’t want, or
change it into what they prefer.
But having something is strictly better than having nothing :)
We make some space in the config file by removing the old paragraph about pixel
fonts, which seems rather outdated and irrelevant to me.","@stapelberg I'm not really seeing anything like what I've proposed in the updated branch. Are you sure you pushed it correctly? In any case, this is a minor thing. If you think we can do without the hint I won't insist on it. :-)",True,{}
i3/i3,https://github.com/i3/i3,3748,2019-07-28T16:02:39Z,2019-07-31T13:20:47Z,2019-07-31T13:20:47Z,MERGED,True,30,12,2,https://github.com/stapelberg,"default config: start xss-lock+i3lock, nm-applet, pactl (volume key)",1,[],https://github.com/i3/i3/pull/3748,https://github.com/stapelberg,4,https://github.com/i3/i3/pull/3748#issuecomment-516845391,"This change will make things strictly better for new users (without an existing
configuration file) and has no effect on existing users.
The tools should be fairly uncontentious, I hope, especially as they only serve
as a starting point anyway: users can quickly delete what they don’t want, or
change it into what they prefer.
But having something is strictly better than having nothing :)
We make some space in the config file by removing the old paragraph about pixel
fonts, which seems rather outdated and irrelevant to me.","I'm not really seeing anything like what I've proposed in the updated branch.

Did you try shift+reload? :)
This is what I pushed (line 20):
# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.",True,{}
i3/i3,https://github.com/i3/i3,3748,2019-07-28T16:02:39Z,2019-07-31T13:20:47Z,2019-07-31T13:20:47Z,MERGED,True,30,12,2,https://github.com/stapelberg,"default config: start xss-lock+i3lock, nm-applet, pactl (volume key)",1,[],https://github.com/i3/i3/pull/3748,https://github.com/Airblader,5,https://github.com/i3/i3/pull/3748#issuecomment-516845691,"This change will make things strictly better for new users (without an existing
configuration file) and has no effect on existing users.
The tools should be fairly uncontentious, I hope, especially as they only serve
as a starting point anyway: users can quickly delete what they don’t want, or
change it into what they prefer.
But having something is strictly better than having nothing :)
We make some space in the config file by removing the old paragraph about pixel
fonts, which seems rather outdated and irrelevant to me.","Ah, I was expecting it right above the binding, but it's a bit higher up. Fair enough!",True,{}
i3/i3,https://github.com/i3/i3,3750,2019-07-29T20:18:12Z,2019-07-29T20:21:35Z,2019-07-29T20:21:38Z,MERGED,True,26,1,2,https://github.com/stapelberg,"restart: make reply an array, add forgotten test to git",1,[],https://github.com/i3/i3/pull/3750,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3750,,,True,{}
i3/i3,https://github.com/i3/i3,3751,2019-07-29T20:37:55Z,2019-07-29T20:40:03Z,2019-07-29T20:40:07Z,CLOSED,False,2,1,1,https://github.com/stapelberg,304-ipc-workspace-init: add sync to deflake,1,[],https://github.com/i3/i3/pull/3751,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3751,"Not sure whether this actually fixes the problem, but let’s give it a shot.","Not sure whether this actually fixes the problem, but let’s give it a shot.",True,{}
i3/i3,https://github.com/i3/i3,3751,2019-07-29T20:37:55Z,2019-07-29T20:40:03Z,2019-07-29T20:40:07Z,CLOSED,False,2,1,1,https://github.com/stapelberg,304-ipc-workspace-init: add sync to deflake,1,[],https://github.com/i3/i3/pull/3751,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/3751#issuecomment-516153324,"Not sure whether this actually fixes the problem, but let’s give it a shot.","Nevermind, the test is not actually flaky.",True,{}
i3/i3,https://github.com/i3/i3,3754,2019-07-31T22:04:46Z,2019-08-02T21:56:49Z,2019-08-02T21:56:57Z,MERGED,True,15,7,1,https://github.com/Iskustvo,Updated the documentation for COMMAND reply.,1,[],https://github.com/i3/i3/pull/3754,https://github.com/Iskustvo,1,https://github.com/i3/i3/pull/3754,"I somehow destroyed old repository and had to create new one for this pull request.
Please close the pull request #3624 if/when this one is accepted.","I somehow destroyed old repository and had to create new one for this pull request.
Please close the pull request #3624 if/when this one is accepted.",True,{}
i3/i3,https://github.com/i3/i3,3754,2019-07-31T22:04:46Z,2019-08-02T21:56:49Z,2019-08-02T21:56:57Z,MERGED,True,15,7,1,https://github.com/Iskustvo,Updated the documentation for COMMAND reply.,1,[],https://github.com/i3/i3/pull/3754,https://github.com/Iskustvo,2,https://github.com/i3/i3/pull/3754#issuecomment-517850980,"I somehow destroyed old repository and had to create new one for this pull request.
Please close the pull request #3624 if/when this one is accepted.","I am not sure if NOTE: was intended to change the style, but Firefox rendered this section like this",True,{}
i3/i3,https://github.com/i3/i3,3754,2019-07-31T22:04:46Z,2019-08-02T21:56:49Z,2019-08-02T21:56:57Z,MERGED,True,15,7,1,https://github.com/Iskustvo,Updated the documentation for COMMAND reply.,1,[],https://github.com/i3/i3/pull/3754,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/3754#issuecomment-517855631,"I somehow destroyed old repository and had to create new one for this pull request.
Please close the pull request #3624 if/when this one is accepted.","I am not sure if NOTE: was intended to change the style, but Firefox rendered this section like this

Yeah, that’s intentional.
Thanks!",True,{}
i3/i3,https://github.com/i3/i3,3759,2019-08-06T22:34:06Z,2019-08-13T06:50:49Z,2019-08-13T06:50:53Z,MERGED,True,279,84,12,https://github.com/izzel,Remanage window after property updates (like titles),11,[],https://github.com/i3/i3/pull/3759,https://github.com/izzel,1,https://github.com/i3/i3/pull/3759,"Fixes #1668. Also works with changing class, instance, and role properties.","Fixes #1668. Also works with changing class, instance, and role properties.",True,{}
i3/i3,https://github.com/i3/i3,3759,2019-08-06T22:34:06Z,2019-08-13T06:50:49Z,2019-08-13T06:50:53Z,MERGED,True,279,84,12,https://github.com/izzel,Remanage window after property updates (like titles),11,[],https://github.com/i3/i3/pull/3759,https://github.com/izzel,2,https://github.com/i3/i3/pull/3759#issuecomment-519586360,"Fixes #1668. Also works with changing class, instance, and role properties.","I forgot about stickyness, but it's added now.",True,{}
i3/i3,https://github.com/i3/i3,3759,2019-08-06T22:34:06Z,2019-08-13T06:50:49Z,2019-08-13T06:50:53Z,MERGED,True,279,84,12,https://github.com/izzel,Remanage window after property updates (like titles),11,[],https://github.com/i3/i3/pull/3759,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/3759#issuecomment-520711978,"Fixes #1668. Also works with changing class, instance, and role properties.",Thanks!,True,"{'HOORAY': ['https://github.com/izzel', 'https://github.com/shanewstone']}"
i3/i3,https://github.com/i3/i3,3761,2019-08-08T22:19:08Z,2020-04-09T08:43:49Z,2020-04-09T08:43:49Z,CLOSED,False,32,18,4,https://github.com/dfoxfranke,Accurately consider inactive displays when signaling child,1,[],https://github.com/i3/i3/pull/3761,https://github.com/dfoxfranke,1,https://github.com/i3/i3/pull/3761,This should fix #3242. Marked as draft because I haven't tested this yet.,This should fix #3242. Marked as draft because I haven't tested this yet.,True,{}
i3/i3,https://github.com/i3/i3,3761,2019-08-08T22:19:08Z,2020-04-09T08:43:49Z,2020-04-09T08:43:49Z,CLOSED,False,32,18,4,https://github.com/dfoxfranke,Accurately consider inactive displays when signaling child,1,[],https://github.com/i3/i3/pull/3761,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3761#issuecomment-538693714,This should fix #3242. Marked as draft because I haven't tested this yet.,@dfoxfranke Are you planning on following up on this? :-),True,{}
i3/i3,https://github.com/i3/i3,3767,2019-08-13T13:37:25Z,2020-04-12T11:52:07Z,2020-04-12T12:02:47Z,MERGED,True,88,66,1,https://github.com/orestisfl,Move content for non-existing output containers,1,[],https://github.com/i3/i3/pull/3767,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3767,"Probably fixes various related issues:
Closes #2276
Closes #2459
Closes #2936
Closes #3766
Tested using
bindsym $mod+Shift+i exec xrandr --output DVI-D-0 --mode 1920x1080 --pos 0x0 --rotate normal --output DVI-I-1 --off, restart
The core issue here is that the JSON read during a restart might contain invalid outputs when the new process is done reading it.","Probably fixes various related issues:
Closes #2276
Closes #2459
Closes #2936
Closes #3766
Tested using
bindsym $mod+Shift+i exec xrandr --output DVI-D-0 --mode 1920x1080 --pos 0x0 --rotate normal --output DVI-I-1 --off, restart
The core issue here is that the JSON read during a restart might contain invalid outputs when the new process is done reading it.",True,{'THUMBS_UP': ['https://github.com/Lazzaretti']}
i3/i3,https://github.com/i3/i3,3767,2019-08-13T13:37:25Z,2020-04-12T11:52:07Z,2020-04-12T12:02:47Z,MERGED,True,88,66,1,https://github.com/orestisfl,Move content for non-existing output containers,1,[],https://github.com/i3/i3/pull/3767,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3767#issuecomment-520839001,"Probably fixes various related issues:
Closes #2276
Closes #2459
Closes #2936
Closes #3766
Tested using
bindsym $mod+Shift+i exec xrandr --output DVI-D-0 --mode 1920x1080 --pos 0x0 --rotate normal --output DVI-I-1 --off, restart
The core issue here is that the JSON read during a restart might contain invalid outputs when the new process is done reading it.","I won't be available to test this for some days. @mdnghtman, @3ach, @markbil can you verify if this fixes your issues?",True,{}
i3/i3,https://github.com/i3/i3,3767,2019-08-13T13:37:25Z,2020-04-12T11:52:07Z,2020-04-12T12:02:47Z,MERGED,True,88,66,1,https://github.com/orestisfl,Move content for non-existing output containers,1,[],https://github.com/i3/i3/pull/3767,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/3767#issuecomment-520853360,"Probably fixes various related issues:
Closes #2276
Closes #2459
Closes #2936
Closes #3766
Tested using
bindsym $mod+Shift+i exec xrandr --output DVI-D-0 --mode 1920x1080 --pos 0x0 --rotate normal --output DVI-I-1 --off, restart
The core issue here is that the JSON read during a restart might contain invalid outputs when the new process is done reading it.",I am actually not sure how the linked code above works. We specify get_active = true in xcb_randr_get_monitors. So we should never receive an output that has been disabled but was present in the layout file.,True,{}
i3/i3,https://github.com/i3/i3,3767,2019-08-13T13:37:25Z,2020-04-12T11:52:07Z,2020-04-12T12:02:47Z,MERGED,True,88,66,1,https://github.com/orestisfl,Move content for non-existing output containers,1,[],https://github.com/i3/i3/pull/3767,https://github.com/markbil,4,https://github.com/i3/i3/pull/3767#issuecomment-521032440,"Probably fixes various related issues:
Closes #2276
Closes #2459
Closes #2936
Closes #3766
Tested using
bindsym $mod+Shift+i exec xrandr --output DVI-D-0 --mode 1920x1080 --pos 0x0 --rotate normal --output DVI-I-1 --off, restart
The core issue here is that the JSON read during a restart might contain invalid outputs when the new process is done reading it.","I won't be available to test this for some days. @mdnghtman, @3ach, @markbil can you verify if this fixes your issues?

@orestisfl I'd be very happy to test, though I am relatively new to linux and i3 so I am still struggling to understand a few (general) things first: I have installed i3 via apt package manager, and that's the version I am using at the moment. However, if I wanted to test your fix I guess I would need to clone i3 from github and pull your fix and then build i3 from source? how do I then run i3 from this build / where is it installed? would that not conflict with my previously installed i3 version from apt? (or do I need to remove that one first?) how would I restore my current setup after testing?
I understand those are not bug related and rather general questions, so sorry for posting this here but I'd appreciate any tips or relevant reading material to get me started. thank you!",True,{}
i3/i3,https://github.com/i3/i3,3767,2019-08-13T13:37:25Z,2020-04-12T11:52:07Z,2020-04-12T12:02:47Z,MERGED,True,88,66,1,https://github.com/orestisfl,Move content for non-existing output containers,1,[],https://github.com/i3/i3/pull/3767,https://github.com/Iskustvo,5,https://github.com/i3/i3/pull/3767#issuecomment-521849277,"Probably fixes various related issues:
Closes #2276
Closes #2459
Closes #2936
Closes #3766
Tested using
bindsym $mod+Shift+i exec xrandr --output DVI-D-0 --mode 1920x1080 --pos 0x0 --rotate normal --output DVI-I-1 --off, restart
The core issue here is that the JSON read during a restart might contain invalid outputs when the new process is done reading it.","@markbil, This is how I've tested i3 before, core developers might have better way...


Download the github repo.
It is easiest to download this randr branch used for pull request directly from @orestisfl.
git clone https://github.com/orestisfl/i3.git --branch randr --single-branch
This will download i3 directory with current code from the branch randr in your current directory.


Build the source code locally - Won't interact with system package that you already have.


cd i3
autoreconf -fi
mkdir -p build && cd build
../configure
make -j8

If you did this correctly, you are now inside build directory and there is i3 executable with changes from this pull request.


Move to another virtual terminal.
Since i3 needs X11 display to work, and you are most likely already using current virtual terminal(display) for i3 from system, you can't just start new instance over the existing one.
The way I work around this is to switch to another virtual terminal by pressing Ctrl + Alt + F2.
This will leave everything you have opened on current virtual terminal(tty1) and move you to second virtual terminal(tty2). Don't freak out, you will only have ugly terminal, without any GUI.
(When you boot your PC, your desktop starts like this as well, it just runs a few commands on top of it to bring you GUI)
If at any point you need to go back to your original desktop(tty1), just press Ctrl + Alt + F1.
Some distros might actually use other tty for default one, but you can easily find it by trying out Ctrl + Alt + F1, Ctrl + Alt + F2 and so on.


Run locally built i3 on second virtual terminal.
Now that you are on another virtual desktop, you can tell X11 to start rendering your new i3 there.
xinit [path_to_your_locally_built_i3] &> /dev/null -- :2
If you get error that xinit is unknown command, download appropriate package for your distro which has it.


Enjoy this Linux tour and test what you wanted :D
After last command, you should be in your locally built i3 and can start testing what you wanted.


There are certainly other ways to use locally built i3 instead of one on the system, but I feel like there is way bigger chance to screw your local setup while modifying things that you don't fully understand. By doing it this way, you don't change what will be started when your computer starts, you don't delete/replace system version of the package, you are simply starting another instance of locally built i3 in another clean environment. If anything strange happens, you can always just restart PC and it will start like it always has.
Note that even if you are on another virtual desktop, you will still be logged in as same user and will access same files in your system. So any file/directory changes that you make will stay.",True,{}
i3/i3,https://github.com/i3/i3,3767,2019-08-13T13:37:25Z,2020-04-12T11:52:07Z,2020-04-12T12:02:47Z,MERGED,True,88,66,1,https://github.com/orestisfl,Move content for non-existing output containers,1,[],https://github.com/i3/i3/pull/3767,https://github.com/mdnghtman,6,https://github.com/i3/i3/pull/3767#issuecomment-521943493,"Probably fixes various related issues:
Closes #2276
Closes #2459
Closes #2936
Closes #3766
Tested using
bindsym $mod+Shift+i exec xrandr --output DVI-D-0 --mode 1920x1080 --pos 0x0 --rotate normal --output DVI-I-1 --off, restart
The core issue here is that the JSON read during a restart might contain invalid outputs when the new process is done reading it.","After following the instructions by Iskustvo, the problem sadly persists.",True,{}
i3/i3,https://github.com/i3/i3,3767,2019-08-13T13:37:25Z,2020-04-12T11:52:07Z,2020-04-12T12:02:47Z,MERGED,True,88,66,1,https://github.com/orestisfl,Move content for non-existing output containers,1,[],https://github.com/i3/i3/pull/3767,https://github.com/orestisfl,7,https://github.com/i3/i3/pull/3767#issuecomment-521989247,"Probably fixes various related issues:
Closes #2276
Closes #2459
Closes #2936
Closes #3766
Tested using
bindsym $mod+Shift+i exec xrandr --output DVI-D-0 --mode 1920x1080 --pos 0x0 --rotate normal --output DVI-I-1 --off, restart
The core issue here is that the JSON read during a restart might contain invalid outputs when the new process is done reading it.","Can you please paste the output from `i3 --version` to verify you are
running the correct version?
…
On Fri, Aug 16, 2019, 12:10 mdnghtman ***@***.***> wrote:
 After following the instructions by Iskustvo, the problem sadly persists.

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#3767?email_source=notifications&email_token=ABMCZPV4YIDQBHISG5GQWO3QEZVIFA5CNFSM4ILK4DFKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD4ODTRI#issuecomment-521943493>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/ABMCZPVKAHPZY2UW5E4TJM3QEZVIFANCNFSM4ILK4DFA>
 .",True,{}
i3/i3,https://github.com/i3/i3,3767,2019-08-13T13:37:25Z,2020-04-12T11:52:07Z,2020-04-12T12:02:47Z,MERGED,True,88,66,1,https://github.com/orestisfl,Move content for non-existing output containers,1,[],https://github.com/i3/i3/pull/3767,https://github.com/mdnghtman,8,https://github.com/i3/i3/pull/3767#issuecomment-521994224,"Probably fixes various related issues:
Closes #2276
Closes #2459
Closes #2936
Closes #3766
Tested using
bindsym $mod+Shift+i exec xrandr --output DVI-D-0 --mode 1920x1080 --pos 0x0 --rotate normal --output DVI-I-1 --off, restart
The core issue here is that the JSON read during a restart might contain invalid outputs when the new process is done reading it.","i3 version 4.13-982-g73c3491b (2019-08-13, branch ""randr"") © 2009 Michael Stapelberg and contributors",True,{}
i3/i3,https://github.com/i3/i3,3767,2019-08-13T13:37:25Z,2020-04-12T11:52:07Z,2020-04-12T12:02:47Z,MERGED,True,88,66,1,https://github.com/orestisfl,Move content for non-existing output containers,1,[],https://github.com/i3/i3/pull/3767,https://github.com/orestisfl,9,https://github.com/i3/i3/pull/3767#issuecomment-522295786,"Probably fixes various related issues:
Closes #2276
Closes #2459
Closes #2936
Closes #3766
Tested using
bindsym $mod+Shift+i exec xrandr --output DVI-D-0 --mode 1920x1080 --pos 0x0 --rotate normal --output DVI-I-1 --off, restart
The core issue here is that the JSON read during a restart might contain invalid outputs when the new process is done reading it.","Can you please also upload the output of `i3 --moreversion` and `i3-msg -t
get_tree` after the bug appears?
…
On Fri, Aug 16, 2019, 15:36 mdnghtman ***@***.***> wrote:
 i3 version 4.13-982-g73c3491b (2019-08-13, branch ""randr"") © 2009 Michael
 Stapelberg and contributors

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#3767?email_source=notifications&email_token=ABMCZPQFQJ2YLRFESRULDX3QE2NK7A5CNFSM4ILK4DFKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD4OP74A#issuecomment-521994224>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/ABMCZPRYCVL7N2VAJ6NHQXLQE2NK7ANCNFSM4ILK4DFA>
 .",True,{}
i3/i3,https://github.com/i3/i3,3767,2019-08-13T13:37:25Z,2020-04-12T11:52:07Z,2020-04-12T12:02:47Z,MERGED,True,88,66,1,https://github.com/orestisfl,Move content for non-existing output containers,1,[],https://github.com/i3/i3/pull/3767,https://github.com/DictumMortuum,10,https://github.com/i3/i3/pull/3767#issuecomment-575591467,"Probably fixes various related issues:
Closes #2276
Closes #2459
Closes #2936
Closes #3766
Tested using
bindsym $mod+Shift+i exec xrandr --output DVI-D-0 --mode 1920x1080 --pos 0x0 --rotate normal --output DVI-I-1 --off, restart
The core issue here is that the JSON read during a restart might contain invalid outputs when the new process is done reading it.","I was about to open a feature request for this, as I need the content shifted when at work, unplugging from the docking station to go to a meeting happens almost every day.
I'll try to test it later.",True,{}
i3/i3,https://github.com/i3/i3,3767,2019-08-13T13:37:25Z,2020-04-12T11:52:07Z,2020-04-12T12:02:47Z,MERGED,True,88,66,1,https://github.com/orestisfl,Move content for non-existing output containers,1,[],https://github.com/i3/i3/pull/3767,https://github.com/orestisfl,11,https://github.com/i3/i3/pull/3767#issuecomment-612601047,"Probably fixes various related issues:
Closes #2276
Closes #2459
Closes #2936
Closes #3766
Tested using
bindsym $mod+Shift+i exec xrandr --output DVI-D-0 --mode 1920x1080 --pos 0x0 --rotate normal --output DVI-I-1 --off, restart
The core issue here is that the JSON read during a restart might contain invalid outputs when the new process is done reading it.","Hey, @stapelberg maybe you want to quickly review this as well. Not for the bugfix release but in order to include this on the next release.",True,{}
i3/i3,https://github.com/i3/i3,3768,2019-08-13T14:06:07Z,2019-08-15T15:23:42Z,2019-08-22T06:40:48Z,MERGED,True,20,8,2,https://github.com/orestisfl,get_first_output changes,2,[],https://github.com/i3/i3/pull/3768,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3768,,,True,{}
i3/i3,https://github.com/i3/i3,3769,2019-08-15T18:36:32Z,2019-08-15T18:53:50Z,2019-08-15T19:15:23Z,MERGED,True,8,6,2,https://github.com/stapelberg,default config: immediately refresh i3status after volume changes,1,[],https://github.com/i3/i3/pull/3769,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3769,,,True,{}
i3/i3,https://github.com/i3/i3,3770,2019-08-15T18:57:24Z,2019-08-15T19:12:03Z,2019-08-15T19:15:14Z,MERGED,True,2,0,2,https://github.com/stapelberg,default config: add XF86AudioMicMute,1,[],https://github.com/i3/i3/pull/3770,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3770,,,True,{}
i3/i3,https://github.com/i3/i3,3771,2019-08-15T19:16:41Z,2019-08-15T20:02:17Z,2019-08-15T20:23:21Z,MERGED,True,2,2,2,https://github.com/stapelberg,default config: mention loginctl lock-session alongside xss-lock,1,[],https://github.com/i3/i3/pull/3771,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3771,,,True,{}
i3/i3,https://github.com/i3/i3,3775,2019-08-18T18:23:18Z,2019-08-28T06:54:11Z,2019-08-28T06:55:04Z,MERGED,True,1,0,1,https://github.com/pantherman594,Unset _I3_RESTART_FD after restart,1,[],https://github.com/i3/i3/pull/3775,https://github.com/pantherman594,1,https://github.com/i3/i3/pull/3775,"i3 sends a response for the restart command to the ipc file descriptor saved in the _I3_RESTART_FD environment variable. When restart is run from a keybinding, there is no ipc file descriptor, but without unsetting _I3_RESTART_FD i3 still tries to send the response to the last used, now closed, file descriptor.
Closes #3764
Closes #3765","i3 sends a response for the restart command to the ipc file descriptor saved in the _I3_RESTART_FD environment variable. When restart is run from a keybinding, there is no ipc file descriptor, but without unsetting _I3_RESTART_FD i3 still tries to send the response to the last used, now closed, file descriptor.
Closes #3764
Closes #3765",True,"{'THUMBS_UP': ['https://github.com/Airblader', 'https://github.com/stapelberg']}"
i3/i3,https://github.com/i3/i3,3775,2019-08-18T18:23:18Z,2019-08-28T06:54:11Z,2019-08-28T06:55:04Z,MERGED,True,1,0,1,https://github.com/pantherman594,Unset _I3_RESTART_FD after restart,1,[],https://github.com/i3/i3/pull/3775,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3775#issuecomment-522344064,"i3 sends a response for the restart command to the ipc file descriptor saved in the _I3_RESTART_FD environment variable. When restart is run from a keybinding, there is no ipc file descriptor, but without unsetting _I3_RESTART_FD i3 still tries to send the response to the last used, now closed, file descriptor.
Closes #3764
Closes #3765","Thanks for the PR!
@stapelberg This might be a candidate for merging to master for a patch release.",True,{}
i3/i3,https://github.com/i3/i3,3775,2019-08-18T18:23:18Z,2019-08-28T06:54:11Z,2019-08-28T06:55:04Z,MERGED,True,1,0,1,https://github.com/pantherman594,Unset _I3_RESTART_FD after restart,1,[],https://github.com/i3/i3/pull/3775,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/3775#issuecomment-522450029,"i3 sends a response for the restart command to the ipc file descriptor saved in the _I3_RESTART_FD environment variable. When restart is run from a keybinding, there is no ipc file descriptor, but without unsetting _I3_RESTART_FD i3 still tries to send the response to the last used, now closed, file descriptor.
Closes #3764
Closes #3765","Don't close the first issue since there are still issues with randr and
restarts
…
On Sun, Aug 18, 2019, 21:26 Ingo Bürk ***@***.***> wrote:
 Thanks for the PR!

 @stapelberg <https://github.com/stapelberg> This might be a candidate for
 merging to master for a patch release.

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub
 <#3775?email_source=notifications&email_token=ABMCZPTLOZWUFQI5OV7LW4LQFGH33A5CNFSM4IMTXEPKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD4RFNAA#issuecomment-522344064>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/ABMCZPSGYB5C62XSKVVDDZLQFGH33ANCNFSM4IMTXEPA>
 .",True,{}
i3/i3,https://github.com/i3/i3,3775,2019-08-18T18:23:18Z,2019-08-28T06:54:11Z,2019-08-28T06:55:04Z,MERGED,True,1,0,1,https://github.com/pantherman594,Unset _I3_RESTART_FD after restart,1,[],https://github.com/i3/i3/pull/3775,https://github.com/jonpas,4,https://github.com/i3/i3/pull/3775#issuecomment-524571276,"i3 sends a response for the restart command to the ipc file descriptor saved in the _I3_RESTART_FD environment variable. When restart is run from a keybinding, there is no ipc file descriptor, but without unsetting _I3_RESTART_FD i3 still tries to send the response to the last used, now closed, file descriptor.
Closes #3764
Closes #3765",Can confirm this fixes the restart crash after using xrandr.,True,{}
i3/i3,https://github.com/i3/i3,3775,2019-08-18T18:23:18Z,2019-08-28T06:54:11Z,2019-08-28T06:55:04Z,MERGED,True,1,0,1,https://github.com/pantherman594,Unset _I3_RESTART_FD after restart,1,[],https://github.com/i3/i3/pull/3775,https://github.com/orestisfl,5,https://github.com/i3/i3/pull/3775#issuecomment-524597012,"i3 sends a response for the restart command to the ipc file descriptor saved in the _I3_RESTART_FD environment variable. When restart is run from a keybinding, there is no ipc file descriptor, but without unsetting _I3_RESTART_FD i3 still tries to send the response to the last used, now closed, file descriptor.
Closes #3764
Closes #3765","Ok close both issues then, we have another one for randr either way
…
On Sat, Aug 24, 2019, 21:25 jonpas ***@***.***> wrote:
 Can confirm this fixes the restart crash after using xrandr.

 —
 You are receiving this because you commented.
 Reply to this email directly, view it on GitHub
 <#3775?email_source=notifications&email_token=ABMCZPWTE2MXEDH2VFHDCGTQGF4IRA5CNFSM4IMTXEPKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD5CFFDA#issuecomment-524571276>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/ABMCZPQ37WADX2E3IRGFO4LQGF4IRANCNFSM4IMTXEPA>
 .",True,{}
i3/i3,https://github.com/i3/i3,3775,2019-08-18T18:23:18Z,2019-08-28T06:54:11Z,2019-08-28T06:55:04Z,MERGED,True,1,0,1,https://github.com/pantherman594,Unset _I3_RESTART_FD after restart,1,[],https://github.com/i3/i3/pull/3775,https://github.com/stapelberg,6,https://github.com/i3/i3/pull/3775#issuecomment-525609804,"i3 sends a response for the restart command to the ipc file descriptor saved in the _I3_RESTART_FD environment variable. When restart is run from a keybinding, there is no ipc file descriptor, but without unsetting _I3_RESTART_FD i3 still tries to send the response to the last used, now closed, file descriptor.
Closes #3764
Closes #3765",Merged and cherry-picked into master. Thank you for the fix!,True,{}
i3/i3,https://github.com/i3/i3,3776,2019-08-20T07:11:06Z,2019-08-22T06:45:52Z,2019-08-22T06:46:41Z,MERGED,True,31,0,2,https://github.com/RedSoxFan, cmd_move_to_mark: fix move to scratchpad hidden,1,[],https://github.com/i3/i3/pull/3776,https://github.com/RedSoxFan,1,https://github.com/i3/i3/pull/3776,"I actually found this due to a sway issue (swaywm/sway#4473). I went to test i3's behavior to replicate in sway. If this is actually working as intended, sorry for the noise. Also, if neither the current behavior or this PR are the desired behavior, just let me know and I'll change it
This fixes the case where moving a container to a scratchpad hidden container via a mark would cause the container to be tiling on the __i3_scratch workspace. This still moves the container to the __i3_scratch workspace, but properly adds it to the scratchpad so that it becomes usable instead of requiring criteria to regain access to.
Reproduction steps for the issue (tested using commit a4b5dee):

Open two windows
Run i3-msg 'mark target, move to scratchpad' on one of them
Run i3-msg 'move container to mark target' on the other

Without this change, the second window is moved to the scratchpad workspace, but as a tiling window (as shown with i3-msg -t get_tree | jq '.. | objects | select(.name==""__i3_scratch"") | .nodes'). The only way of accessing the window is with criteria.
With this change, the second window is correctly moved to the scratchpad and is accessible like any other container in the scratchpad.","I actually found this due to a sway issue (swaywm/sway#4473). I went to test i3's behavior to replicate in sway. If this is actually working as intended, sorry for the noise. Also, if neither the current behavior or this PR are the desired behavior, just let me know and I'll change it
This fixes the case where moving a container to a scratchpad hidden container via a mark would cause the container to be tiling on the __i3_scratch workspace. This still moves the container to the __i3_scratch workspace, but properly adds it to the scratchpad so that it becomes usable instead of requiring criteria to regain access to.
Reproduction steps for the issue (tested using commit a4b5dee):

Open two windows
Run i3-msg 'mark target, move to scratchpad' on one of them
Run i3-msg 'move container to mark target' on the other

Without this change, the second window is moved to the scratchpad workspace, but as a tiling window (as shown with i3-msg -t get_tree | jq '.. | objects | select(.name==""__i3_scratch"") | .nodes'). The only way of accessing the window is with criteria.
With this change, the second window is correctly moved to the scratchpad and is accessible like any other container in the scratchpad.",True,{}
i3/i3,https://github.com/i3/i3,3776,2019-08-20T07:11:06Z,2019-08-22T06:45:52Z,2019-08-22T06:46:41Z,MERGED,True,31,0,2,https://github.com/RedSoxFan, cmd_move_to_mark: fix move to scratchpad hidden,1,[],https://github.com/i3/i3/pull/3776,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3776#issuecomment-523772548,"I actually found this due to a sway issue (swaywm/sway#4473). I went to test i3's behavior to replicate in sway. If this is actually working as intended, sorry for the noise. Also, if neither the current behavior or this PR are the desired behavior, just let me know and I'll change it
This fixes the case where moving a container to a scratchpad hidden container via a mark would cause the container to be tiling on the __i3_scratch workspace. This still moves the container to the __i3_scratch workspace, but properly adds it to the scratchpad so that it becomes usable instead of requiring criteria to regain access to.
Reproduction steps for the issue (tested using commit a4b5dee):

Open two windows
Run i3-msg 'mark target, move to scratchpad' on one of them
Run i3-msg 'move container to mark target' on the other

Without this change, the second window is moved to the scratchpad workspace, but as a tiling window (as shown with i3-msg -t get_tree | jq '.. | objects | select(.name==""__i3_scratch"") | .nodes'). The only way of accessing the window is with criteria.
With this change, the second window is correctly moved to the scratchpad and is accessible like any other container in the scratchpad.",Thank you!,True,{}
i3/i3,https://github.com/i3/i3,3779,2019-08-29T09:31:00Z,2019-10-05T22:18:01Z,2019-10-05T22:18:01Z,CLOSED,False,64,8,2,https://github.com/gartens,Allow custom theme for i3-nagbar,3,[],https://github.com/i3/i3/pull/3779,https://github.com/gartens,1,https://github.com/i3/i3/pull/3779,"It is now possible to set a custom color theme for i3-nagbar.
I tried to keep it as little intrusive as possible. I am looking forward to your feedback.","It is now possible to set a custom color theme for i3-nagbar.
I tried to keep it as little intrusive as possible. I am looking forward to your feedback.",True,{}
i3/i3,https://github.com/i3/i3,3779,2019-08-29T09:31:00Z,2019-10-05T22:18:01Z,2019-10-05T22:18:01Z,CLOSED,False,64,8,2,https://github.com/gartens,Allow custom theme for i3-nagbar,3,[],https://github.com/i3/i3/pull/3779,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3779#issuecomment-527032272,"It is now possible to set a custom color theme for i3-nagbar.
I tried to keep it as little intrusive as possible. I am looking forward to your feedback.",I'll let @Airblader reply to this but I don't think we want this feature. Just letting you know before you put more work into this.,True,{}
i3/i3,https://github.com/i3/i3,3779,2019-08-29T09:31:00Z,2019-10-05T22:18:01Z,2019-10-05T22:18:01Z,CLOSED,False,64,8,2,https://github.com/gartens,Allow custom theme for i3-nagbar,3,[],https://github.com/i3/i3/pull/3779,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3779#issuecomment-527034351,"It is now possible to set a custom color theme for i3-nagbar.
I tried to keep it as little intrusive as possible. I am looking forward to your feedback.","Yeah, I am hesitant to merge this as it pushes i3-nagbar into a direction I'm not sure we want to go. There's plenty of good and customizable tools which are far better than i3-nagbar, which we mostly need for config errors and as an initial configuration for the logout in the default config.",True,{'THUMBS_UP': ['https://github.com/laur89']}
i3/i3,https://github.com/i3/i3,3779,2019-08-29T09:31:00Z,2019-10-05T22:18:01Z,2019-10-05T22:18:01Z,CLOSED,False,64,8,2,https://github.com/gartens,Allow custom theme for i3-nagbar,3,[],https://github.com/i3/i3/pull/3779,https://github.com/gartens,4,https://github.com/i3/i3/pull/3779#issuecomment-527042933,"It is now possible to set a custom color theme for i3-nagbar.
I tried to keep it as little intrusive as possible. I am looking forward to your feedback.",Ah I was not aware of those tools. Maybe you can give me some pointers?,True,{}
i3/i3,https://github.com/i3/i3,3779,2019-08-29T09:31:00Z,2019-10-05T22:18:01Z,2019-10-05T22:18:01Z,CLOSED,False,64,8,2,https://github.com/gartens,Allow custom theme for i3-nagbar,3,[],https://github.com/i3/i3/pull/3779,https://github.com/Airblader,5,https://github.com/i3/i3/pull/3779#issuecomment-538693643,"It is now possible to set a custom color theme for i3-nagbar.
I tried to keep it as little intrusive as possible. I am looking forward to your feedback.","@gartens dmenu can be used for such things, or something like zenity etc. I don't know all the tools out there, but i3 nagbar exists mostly for our internal use so we have something to use without requiring dependencies.
Closing this PR as explained above. Thanks for understanding!",True,{}
i3/i3,https://github.com/i3/i3,3783,2019-09-01T17:20:18Z,2019-09-03T08:52:21Z,2019-09-03T08:52:21Z,MERGED,True,1,1,1,https://github.com/erwinvaneijk,fix lcov support,1,[],https://github.com/i3/i3/pull/3783,https://github.com/erwinvaneijk,1,https://github.com/i3/i3/pull/3783,"Ubuntu 18.10 comes with lcov 1.13, which is now added.","Ubuntu 18.10 comes with lcov 1.13, which is now added.",True,{}
i3/i3,https://github.com/i3/i3,3784,2019-09-01T17:52:09Z,2019-09-20T21:23:32Z,2019-09-21T06:52:00Z,MERGED,True,8,0,1,https://github.com/Iskustvo,"Added documentation for ""fullscreen_mode"" in GET_TREE reply.",1,[],https://github.com/i3/i3/pull/3784,https://github.com/Iskustvo,1,https://github.com/i3/i3/pull/3784,Closes #3780,Closes #3780,True,{}
i3/i3,https://github.com/i3/i3,3784,2019-09-01T17:52:09Z,2019-09-20T21:23:32Z,2019-09-21T06:52:00Z,MERGED,True,8,0,1,https://github.com/Iskustvo,"Added documentation for ""fullscreen_mode"" in GET_TREE reply.",1,[],https://github.com/i3/i3/pull/3784,https://github.com/Iskustvo,2,https://github.com/i3/i3/pull/3784#issuecomment-526946127,Closes #3780,"Thank you for explaining it 😃
I have amended the commit, but it looks like the Travis is broken at the moment.",True,{}
i3/i3,https://github.com/i3/i3,3784,2019-09-01T17:52:09Z,2019-09-20T21:23:32Z,2019-09-21T06:52:00Z,MERGED,True,8,0,1,https://github.com/Iskustvo,"Added documentation for ""fullscreen_mode"" in GET_TREE reply.",1,[],https://github.com/i3/i3/pull/3784,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3784#issuecomment-527010171,Closes #3780,@stapelberg Any idea what's wrong on Travis? Another PR has the same issue.,True,{}
i3/i3,https://github.com/i3/i3,3784,2019-09-01T17:52:09Z,2019-09-20T21:23:32Z,2019-09-21T06:52:00Z,MERGED,True,8,0,1,https://github.com/Iskustvo,"Added documentation for ""fullscreen_mode"" in GET_TREE reply.",1,[],https://github.com/i3/i3/pull/3784,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/3784#issuecomment-527025721,Closes #3780,"A new warning with gcc
…
On Mon, Sep 2, 2019, 08:46 Ingo Bürk ***@***.***> wrote:
 @stapelberg <https://github.com/stapelberg> Any idea what's wrong on
 Travis? Another PR has the same issue.

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub
 <#3784?email_source=notifications&email_token=ABMCZPR3QBQXHK4YWWKKCZLQHSSDTA5CNFSM4ISXQ352YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD5UYS6Y#issuecomment-527010171>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/ABMCZPQ6RLQRXGQFYNQKBCLQHSSDTANCNFSM4ISXQ35Q>
 .",True,{}
i3/i3,https://github.com/i3/i3,3784,2019-09-01T17:52:09Z,2019-09-20T21:23:32Z,2019-09-21T06:52:00Z,MERGED,True,8,0,1,https://github.com/Iskustvo,"Added documentation for ""fullscreen_mode"" in GET_TREE reply.",1,[],https://github.com/i3/i3/pull/3784,https://github.com/orestisfl,5,https://github.com/i3/i3/pull/3784#issuecomment-527368618,Closes #3780,Can be merged,True,{}
i3/i3,https://github.com/i3/i3,3784,2019-09-01T17:52:09Z,2019-09-20T21:23:32Z,2019-09-21T06:52:00Z,MERGED,True,8,0,1,https://github.com/Iskustvo,"Added documentation for ""fullscreen_mode"" in GET_TREE reply.",1,[],https://github.com/i3/i3/pull/3784,https://github.com/Iskustvo,6,https://github.com/i3/i3/pull/3784#issuecomment-533666375,Closes #3780,"@Airblader, is everything ok with the changes?
Is there any issue left for this?",True,{}
i3/i3,https://github.com/i3/i3,3784,2019-09-01T17:52:09Z,2019-09-20T21:23:32Z,2019-09-21T06:52:00Z,MERGED,True,8,0,1,https://github.com/Iskustvo,"Added documentation for ""fullscreen_mode"" in GET_TREE reply.",1,[],https://github.com/i3/i3/pull/3784,https://github.com/Airblader,7,https://github.com/i3/i3/pull/3784#issuecomment-533713290,Closes #3780,"The formatting in the file looks weird still, but @orestisfl said it's fine so I'll go with that. Thanks!",True,{}
i3/i3,https://github.com/i3/i3,3784,2019-09-01T17:52:09Z,2019-09-20T21:23:32Z,2019-09-21T06:52:00Z,MERGED,True,8,0,1,https://github.com/Iskustvo,"Added documentation for ""fullscreen_mode"" in GET_TREE reply.",1,[],https://github.com/i3/i3/pull/3784,https://github.com/Iskustvo,8,https://github.com/i3/i3/pull/3784#issuecomment-533727179,Closes #3780,"If the preview is correct, it will all be in one paragraph, without lists or anything, just like you suggested.
For the record, I don't mind several objections regarding the review, you didn't have to merge it if you wanted me to change it again.",True,{}
i3/i3,https://github.com/i3/i3,3784,2019-09-01T17:52:09Z,2019-09-20T21:23:32Z,2019-09-21T06:52:00Z,MERGED,True,8,0,1,https://github.com/Iskustvo,"Added documentation for ""fullscreen_mode"" in GET_TREE reply.",1,[],https://github.com/i3/i3/pull/3784,https://github.com/Airblader,9,https://github.com/i3/i3/pull/3784#issuecomment-533773981,Closes #3780,"All it needs is to look correct once compiled which I couldn't verify from my phone, but since orestis did that's sufficient. Thank you for the patience, though!",True,{'THUMBS_UP': ['https://github.com/Iskustvo']}
i3/i3,https://github.com/i3/i3,3787,2019-09-03T07:46:03Z,2019-09-03T07:59:35Z,2019-09-03T08:46:03Z,MERGED,True,13,11,8,https://github.com/orestisfl,Remove packed attribute from Rect,1,[],https://github.com/i3/i3/pull/3787,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3787,Fixes #3785,Fixes #3785,True,{}
i3/i3,https://github.com/i3/i3,3787,2019-09-03T07:46:03Z,2019-09-03T07:59:35Z,2019-09-03T08:46:03Z,MERGED,True,13,11,8,https://github.com/orestisfl,Remove packed attribute from Rect,1,[],https://github.com/i3/i3/pull/3787,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/3787#issuecomment-527352494,Fixes #3785,Thanks for taking care of this!,True,{'HEART': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,3793,2019-09-15T21:09:29Z,2020-04-10T14:27:41Z,2020-04-10T14:27:41Z,MERGED,True,27,1,2,https://github.com/hemangandhi,Move parent nodes in scratchpad correctly,2,[],https://github.com/i3/i3/pull/3793,https://github.com/hemangandhi,1,https://github.com/i3/i3/pull/3793,"Should fix #3679 : to move subtrees in the scratchpad from one workspace to another.
Also tries (and fails) to add a test for this behavior.","Should fix #3679 : to move subtrees in the scratchpad from one workspace to another.
Also tries (and fails) to add a test for this behavior.",True,{}
i3/i3,https://github.com/i3/i3,3793,2019-09-15T21:09:29Z,2020-04-10T14:27:41Z,2020-04-10T14:27:41Z,MERGED,True,27,1,2,https://github.com/hemangandhi,Move parent nodes in scratchpad correctly,2,[],https://github.com/i3/i3/pull/3793,https://github.com/hemangandhi,2,https://github.com/i3/i3/pull/3793#issuecomment-531616266,"Should fix #3679 : to move subtrees in the scratchpad from one workspace to another.
Also tries (and fails) to add a test for this behavior.","Sorry for the large change in the test case -- I found a clearer way to test for the expected structure.
Hopefully the documentation makes it more clear.
Side-note: there's some weirdness where if you focus up to a workspace, the behavior is different since each window is separately moved. I don't think it's an immediate problem but wasn't sure it that was documented somewhere.",True,{}
i3/i3,https://github.com/i3/i3,3793,2019-09-15T21:09:29Z,2020-04-10T14:27:41Z,2020-04-10T14:27:41Z,MERGED,True,27,1,2,https://github.com/hemangandhi,Move parent nodes in scratchpad correctly,2,[],https://github.com/i3/i3/pull/3793,https://github.com/hemangandhi,3,https://github.com/i3/i3/pull/3793#issuecomment-548164519,"Should fix #3679 : to move subtrees in the scratchpad from one workspace to another.
Also tries (and fails) to add a test for this behavior.","I made the suggested changes.
I'm not sure why travis is failing",True,{}
i3/i3,https://github.com/i3/i3,3793,2019-09-15T21:09:29Z,2020-04-10T14:27:41Z,2020-04-10T14:27:41Z,MERGED,True,27,1,2,https://github.com/hemangandhi,Move parent nodes in scratchpad correctly,2,[],https://github.com/i3/i3/pull/3793,https://github.com/hemangandhi,4,https://github.com/i3/i3/pull/3793#issuecomment-612041837,"Should fix #3679 : to move subtrees in the scratchpad from one workspace to another.
Also tries (and fails) to add a test for this behavior.","Rebased and squashed. Thanks for taking a look, fixing the issues, and the suggestions!",True,{}
i3/i3,https://github.com/i3/i3,3797,2019-09-20T06:08:17Z,2019-11-29T07:16:58Z,2020-02-07T19:46:09Z,MERGED,True,31,0,2,https://github.com/acheronfail,feat: add window_type to ipc response,1,[],https://github.com/i3/i3/pull/3797,https://github.com/acheronfail,1,https://github.com/i3/i3/pull/3797,"Hi 👋
I wanted to have the window_type property available to i3 via IPC, so I added this small change.
I'm not very familiar with C and its tooling, so please let me know if there's anything extra I should do.
I've compiled and run this locally, and it works when I test it manually (via i3-msg).
I have not yet, however, been able to run i3's tests locally - the tools used are completely unfamiliar to me. Nevermind, the tests and builds pass - I figured it out. 👍

Please let me know what I can do to help get this across the line! 🙂","Hi 👋
I wanted to have the window_type property available to i3 via IPC, so I added this small change.
I'm not very familiar with C and its tooling, so please let me know if there's anything extra I should do.
I've compiled and run this locally, and it works when I test it manually (via i3-msg).
I have not yet, however, been able to run i3's tests locally - the tools used are completely unfamiliar to me. Nevermind, the tests and builds pass - I figured it out. 👍

Please let me know what I can do to help get this across the line! 🙂",True,{}
i3/i3,https://github.com/i3/i3,3797,2019-09-20T06:08:17Z,2019-11-29T07:16:58Z,2020-02-07T19:46:09Z,MERGED,True,31,0,2,https://github.com/acheronfail,feat: add window_type to ipc response,1,[],https://github.com/i3/i3/pull/3797,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3797#issuecomment-533422477,"Hi 👋
I wanted to have the window_type property available to i3 via IPC, so I added this small change.
I'm not very familiar with C and its tooling, so please let me know if there's anything extra I should do.
I've compiled and run this locally, and it works when I test it manually (via i3-msg).
I have not yet, however, been able to run i3's tests locally - the tools used are completely unfamiliar to me. Nevermind, the tests and builds pass - I figured it out. 👍

Please let me know what I can do to help get this across the line! 🙂","My first question is: what do you need it for? And why can't you read the atom from the window?
i3 doesn't handle all window types so this is a partial solution anyway.",True,{}
i3/i3,https://github.com/i3/i3,3797,2019-09-20T06:08:17Z,2019-11-29T07:16:58Z,2020-02-07T19:46:09Z,MERGED,True,31,0,2,https://github.com/acheronfail,feat: add window_type to ipc response,1,[],https://github.com/i3/i3/pull/3797,https://github.com/acheronfail,3,https://github.com/i3/i3/pull/3797#issuecomment-533424015,"Hi 👋
I wanted to have the window_type property available to i3 via IPC, so I added this small change.
I'm not very familiar with C and its tooling, so please let me know if there's anything extra I should do.
I've compiled and run this locally, and it works when I test it manually (via i3-msg).
I have not yet, however, been able to run i3's tests locally - the tools used are completely unfamiliar to me. Nevermind, the tests and builds pass - I figured it out. 👍

Please let me know what I can do to help get this across the line! 🙂","My first question is: what do you need it for?

I want to automatically move windows with the type notification to the top right of my display.
Currently, if I have the config:
for_window [class=""..."" window_type=""notification""] floating enable, move ..., no_focus

I can't actually calculate where the top right of the display is.
So my current solution is writing a small binary using i3's IPC which listens for ""new"" window events, and then calculates the correct position and proceeds to send i3 a command like:
[con_id=""...""] move position ...


And why can't you read the atom from the window?

I haven't had a lot of experience developing with C, so a lot of this is over my head 😅 how would I go about doing this?

i3 doesn't handle all window types so this is a partial solution anyway.

I figure if you can query this in i3's config file like for_window [window_type=""notification""] ... then it'd be good to provide it via IPC also.",True,{}
i3/i3,https://github.com/i3/i3,3797,2019-09-20T06:08:17Z,2019-11-29T07:16:58Z,2020-02-07T19:46:09Z,MERGED,True,31,0,2,https://github.com/acheronfail,feat: add window_type to ipc response,1,[],https://github.com/i3/i3/pull/3797,https://github.com/acheronfail,4,https://github.com/i3/i3/pull/3797#issuecomment-533425314,"Hi 👋
I wanted to have the window_type property available to i3 via IPC, so I added this small change.
I'm not very familiar with C and its tooling, so please let me know if there's anything extra I should do.
I've compiled and run this locally, and it works when I test it manually (via i3-msg).
I have not yet, however, been able to run i3's tests locally - the tools used are completely unfamiliar to me. Nevermind, the tests and builds pass - I figured it out. 👍

Please let me know what I can do to help get this across the line! 🙂","Also, if it helps to explain my situation I use i3 together with KDE (like this https://userbase.kde.org/Tutorials/Using_Other_Window_Managers_with_Plasma).
It’s Plasma’s notifications that I’m trying to move, and I share my config over multiple computers so the resolution isn’t the same (I can’t use hardcoded values).
I could be using this all completely wrong, or maybe there’s another way to do this but I haven’t figured out a nice way to do so yet. Here’s another example of someone trying a similar thing: https://faq.i3wm.org/question/2795/moving-relative-to-bottomright-of-screen/index.html.",True,{}
i3/i3,https://github.com/i3/i3,3797,2019-09-20T06:08:17Z,2019-11-29T07:16:58Z,2020-02-07T19:46:09Z,MERGED,True,31,0,2,https://github.com/acheronfail,feat: add window_type to ipc response,1,[],https://github.com/i3/i3/pull/3797,https://github.com/Airblader,5,https://github.com/i3/i3/pull/3797#issuecomment-534489414,"Hi 👋
I wanted to have the window_type property available to i3 via IPC, so I added this small change.
I'm not very familiar with C and its tooling, so please let me know if there's anything extra I should do.
I've compiled and run this locally, and it works when I test it manually (via i3-msg).
I have not yet, however, been able to run i3's tests locally - the tools used are completely unfamiliar to me. Nevermind, the tests and builds pass - I figured it out. 👍

Please let me know what I can do to help get this across the line! 🙂","I think the usecase is fine, and in principle I don't mind exposing this, except that it's weird that it looks like we're proxying the atom but in reality we may well swallow information because we don't support every window type.",True,{}
i3/i3,https://github.com/i3/i3,3797,2019-09-20T06:08:17Z,2019-11-29T07:16:58Z,2020-02-07T19:46:09Z,MERGED,True,31,0,2,https://github.com/acheronfail,feat: add window_type to ipc response,1,[],https://github.com/i3/i3/pull/3797,https://github.com/acheronfail,6,https://github.com/i3/i3/pull/3797#issuecomment-534533783,"Hi 👋
I wanted to have the window_type property available to i3 via IPC, so I added this small change.
I'm not very familiar with C and its tooling, so please let me know if there's anything extra I should do.
I've compiled and run this locally, and it works when I test it manually (via i3-msg).
I have not yet, however, been able to run i3's tests locally - the tools used are completely unfamiliar to me. Nevermind, the tests and builds pass - I figured it out. 👍

Please let me know what I can do to help get this across the line! 🙂","except that it's weird that it looks like we're proxying the atom but in reality we may well swallow information because we don't support every window type.

Makes sense. Would it suffice to change it so that it at least supports the same types as this piece of already existing code in i3: 
  
    
      i3/src/match.c
    
    
        Lines 307 to 334
      in
      bde4f40
    
  
  
    

        
          
           if (strcmp(ctype, ""window_type"") == 0) { 
        

        
          
               if (strcasecmp(cvalue, ""normal"") == 0) { 
        

        
          
                   match->window_type = A__NET_WM_WINDOW_TYPE_NORMAL; 
        

        
          
               } else if (strcasecmp(cvalue, ""dialog"") == 0) { 
        

        
          
                   match->window_type = A__NET_WM_WINDOW_TYPE_DIALOG; 
        

        
          
               } else if (strcasecmp(cvalue, ""utility"") == 0) { 
        

        
          
                   match->window_type = A__NET_WM_WINDOW_TYPE_UTILITY; 
        

        
          
               } else if (strcasecmp(cvalue, ""toolbar"") == 0) { 
        

        
          
                   match->window_type = A__NET_WM_WINDOW_TYPE_TOOLBAR; 
        

        
          
               } else if (strcasecmp(cvalue, ""splash"") == 0) { 
        

        
          
                   match->window_type = A__NET_WM_WINDOW_TYPE_SPLASH; 
        

        
          
               } else if (strcasecmp(cvalue, ""menu"") == 0) { 
        

        
          
                   match->window_type = A__NET_WM_WINDOW_TYPE_MENU; 
        

        
          
               } else if (strcasecmp(cvalue, ""dropdown_menu"") == 0) { 
        

        
          
                   match->window_type = A__NET_WM_WINDOW_TYPE_DROPDOWN_MENU; 
        

        
          
               } else if (strcasecmp(cvalue, ""popup_menu"") == 0) { 
        

        
          
                   match->window_type = A__NET_WM_WINDOW_TYPE_POPUP_MENU; 
        

        
          
               } else if (strcasecmp(cvalue, ""tooltip"") == 0) { 
        

        
          
                   match->window_type = A__NET_WM_WINDOW_TYPE_TOOLTIP; 
        

        
          
               } else if (strcasecmp(cvalue, ""notification"") == 0) { 
        

        
          
                   match->window_type = A__NET_WM_WINDOW_TYPE_NOTIFICATION; 
        

        
          
               } else { 
        

        
          
                   ELOG(""unknown window_type value \""%s\""\n"", cvalue); 
        

        
          
                   match->error = sstrdup(""unknown window_type value""); 
        

        
          
               } 
        

        
          
            
        

        
          
               return; 
        

        
          
           } 
        
    
  

 ?
If I understand correctly, the code in match.c is responsible for the for_window [window_type=""...""] matching, so I think it's predictable if we send the same value in window_type via IPC as the value we read from in match.c?",True,{}
i3/i3,https://github.com/i3/i3,3797,2019-09-20T06:08:17Z,2019-11-29T07:16:58Z,2020-02-07T19:46:09Z,MERGED,True,31,0,2,https://github.com/acheronfail,feat: add window_type to ipc response,1,[],https://github.com/i3/i3/pull/3797,https://github.com/Airblader,7,https://github.com/i3/i3/pull/3797#issuecomment-535789364,"Hi 👋
I wanted to have the window_type property available to i3 via IPC, so I added this small change.
I'm not very familiar with C and its tooling, so please let me know if there's anything extra I should do.
I've compiled and run this locally, and it works when I test it manually (via i3-msg).
I have not yet, however, been able to run i3's tests locally - the tools used are completely unfamiliar to me. Nevermind, the tests and builds pass - I figured it out. 👍

Please let me know what I can do to help get this across the line! 🙂","Yes, I guess that's fair. It would also be good to change the code so that if it isn't one of those values, we emit something like unknown rather than nothing.",True,{'THUMBS_UP': ['https://github.com/acheronfail']}
i3/i3,https://github.com/i3/i3,3797,2019-09-20T06:08:17Z,2019-11-29T07:16:58Z,2020-02-07T19:46:09Z,MERGED,True,31,0,2,https://github.com/acheronfail,feat: add window_type to ipc response,1,[],https://github.com/i3/i3/pull/3797,https://github.com/Airblader,8,https://github.com/i3/i3/pull/3797#issuecomment-559686224,"Hi 👋
I wanted to have the window_type property available to i3 via IPC, so I added this small change.
I'm not very familiar with C and its tooling, so please let me know if there's anything extra I should do.
I've compiled and run this locally, and it works when I test it manually (via i3-msg).
I have not yet, however, been able to run i3's tests locally - the tools used are completely unfamiliar to me. Nevermind, the tests and builds pass - I figured it out. 👍

Please let me know what I can do to help get this across the line! 🙂","Sorry, didn't see the updates because we only get notified if you comment again afterwards. Thanks for your work!",True,{'THUMBS_UP': ['https://github.com/acheronfail']}
i3/i3,https://github.com/i3/i3,3797,2019-09-20T06:08:17Z,2019-11-29T07:16:58Z,2020-02-07T19:46:09Z,MERGED,True,31,0,2,https://github.com/acheronfail,feat: add window_type to ipc response,1,[],https://github.com/i3/i3/pull/3797,https://github.com/acheronfail,9,https://github.com/i3/i3/pull/3797#issuecomment-583274231,"Hi 👋
I wanted to have the window_type property available to i3 via IPC, so I added this small change.
I'm not very familiar with C and its tooling, so please let me know if there's anything extra I should do.
I've compiled and run this locally, and it works when I test it manually (via i3-msg).
I have not yet, however, been able to run i3's tests locally - the tools used are completely unfamiliar to me. Nevermind, the tests and builds pass - I figured it out. 👍

Please let me know what I can do to help get this across the line! 🙂","@Airblader I'm not sure what i3's release process looks like, but when do you think this change would be included in a release?",True,{}
i3/i3,https://github.com/i3/i3,3797,2019-09-20T06:08:17Z,2019-11-29T07:16:58Z,2020-02-07T19:46:09Z,MERGED,True,31,0,2,https://github.com/acheronfail,feat: add window_type to ipc response,1,[],https://github.com/i3/i3/pull/3797,https://github.com/Airblader,10,https://github.com/i3/i3/pull/3797#issuecomment-583288024,"Hi 👋
I wanted to have the window_type property available to i3 via IPC, so I added this small change.
I'm not very familiar with C and its tooling, so please let me know if there's anything extra I should do.
I've compiled and run this locally, and it works when I test it manually (via i3-msg).
I have not yet, however, been able to run i3's tests locally - the tools used are completely unfamiliar to me. Nevermind, the tests and builds pass - I figured it out. 👍

Please let me know what I can do to help get this across the line! 🙂","@acheronfail We don't have a strict release cycle, but roughly something between every 6–9 months is a realistic number, depending on how much has happened.
@stapelberg Do you already have any plans about 4.18? It's been roughly half a year since 4.17.1",True,{'THUMBS_UP': ['https://github.com/acheronfail']}
i3/i3,https://github.com/i3/i3,3797,2019-09-20T06:08:17Z,2019-11-29T07:16:58Z,2020-02-07T19:46:09Z,MERGED,True,31,0,2,https://github.com/acheronfail,feat: add window_type to ipc response,1,[],https://github.com/i3/i3/pull/3797,https://github.com/acheronfail,11,https://github.com/i3/i3/pull/3797#issuecomment-583292268,"Hi 👋
I wanted to have the window_type property available to i3 via IPC, so I added this small change.
I'm not very familiar with C and its tooling, so please let me know if there's anything extra I should do.
I've compiled and run this locally, and it works when I test it manually (via i3-msg).
I have not yet, however, been able to run i3's tests locally - the tools used are completely unfamiliar to me. Nevermind, the tests and builds pass - I figured it out. 👍

Please let me know what I can do to help get this across the line! 🙂","We don't have a strict release cycle, but roughly something between every 6–9 months is a realistic number, depending on how much has happened.

Okay, sounds good. :) Glad to hear that it could be sometime soon then!
FYI I just created a PR that documents the changes in this PR: #3931 (just want to make sure that PR and this one get placed in the same release).",True,{}
i3/i3,https://github.com/i3/i3,3797,2019-09-20T06:08:17Z,2019-11-29T07:16:58Z,2020-02-07T19:46:09Z,MERGED,True,31,0,2,https://github.com/acheronfail,feat: add window_type to ipc response,1,[],https://github.com/i3/i3/pull/3797,https://github.com/stapelberg,12,https://github.com/i3/i3/pull/3797#issuecomment-583574204,"Hi 👋
I wanted to have the window_type property available to i3 via IPC, so I added this small change.
I'm not very familiar with C and its tooling, so please let me know if there's anything extra I should do.
I've compiled and run this locally, and it works when I test it manually (via i3-msg).
I have not yet, however, been able to run i3's tests locally - the tools used are completely unfamiliar to me. Nevermind, the tests and builds pass - I figured it out. 👍

Please let me know what I can do to help get this across the line! 🙂","No specific plans yet, but let me go through the release prep work and tentatively target next week or so",True,{}
i3/i3,https://github.com/i3/i3,3799,2019-09-23T08:31:56Z,2019-09-28T05:41:28Z,2019-10-08T12:44:11Z,MERGED,True,31,5,3,https://github.com/xzfc,extract_workspace_names_from_bindings: handle optional flags,1,[],https://github.com/i3/i3/pull/3799,https://github.com/xzfc,1,https://github.com/i3/i3/pull/3799,fixes #3527,fixes #3527,True,{}
i3/i3,https://github.com/i3/i3,3809,2019-10-01T09:03:51Z,2019-10-02T07:52:41Z,2019-10-03T00:22:58Z,MERGED,True,1,0,1,https://github.com/xzfc,Fix regression: floating xterm created partially off screen,1,[],https://github.com/i3/i3/pull/3809,https://github.com/xzfc,1,https://github.com/i3/i3/pull/3809,"Fixes #3606
Xterm starts with a WM_CLIENT_LEADER property containing its own window ID.
Before this fix, i3 tried to center such windows onto itself and did it wrong since leader->rect == {0,0,0,0} at this moment.
Before 128122e such windows already was misplaced, but got sanitized afterwards.","Fixes #3606
Xterm starts with a WM_CLIENT_LEADER property containing its own window ID.
Before this fix, i3 tried to center such windows onto itself and did it wrong since leader->rect == {0,0,0,0} at this moment.
Before 128122e such windows already was misplaced, but got sanitized afterwards.",True,{}
i3/i3,https://github.com/i3/i3,3810,2019-10-01T13:29:58Z,,2020-06-18T13:05:34Z,OPEN,False,95,40,5,https://github.com/orestisfl,Reintroduce aspect ratio logic for tiling containers,2,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3810,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3810,Fixes #3795,Fixes #3795,True,{}
i3/i3,https://github.com/i3/i3,3810,2019-10-01T13:29:58Z,,2020-06-18T13:05:34Z,OPEN,False,95,40,5,https://github.com/orestisfl,Reintroduce aspect ratio logic for tiling containers,2,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3810,https://github.com/xzfc,2,https://github.com/i3/i3/pull/3810#issuecomment-537787605,Fixes #3795,"After this commit, mpv aspect ratio hints are honored as well (unlike 4.16).
Ignoring mpv aspect ratio hints was a useful feature: mpv could display OSD outside of the movie frame. And this was consistent with i3 behavior regarding ""resize increment"" hints for tiled windows.

I've checked it using slop -b 20 across commits:



commit
mpv
mplayer




29f2510^
ignored
honored, no bug


29f2510
ignored
ignored, bug


6b8b3dc^
ignored
ignored, bug


6b8b3dc
honored
honored¹, no bug




Aspect ratio hints are ignored right after mplayer startup but honored after workspace switching.",True,"{'HEART': ['https://github.com/orestisfl'], 'THUMBS_UP': ['https://github.com/orestisfl']}"
i3/i3,https://github.com/i3/i3,3810,2019-10-01T13:29:58Z,,2020-06-18T13:05:34Z,OPEN,False,95,40,5,https://github.com/orestisfl,Reintroduce aspect ratio logic for tiling containers,2,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3810,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/3810#issuecomment-537862916,Fixes #3795,Thank you very much! I'll investigate.,True,{}
i3/i3,https://github.com/i3/i3,3810,2019-10-01T13:29:58Z,,2020-06-18T13:05:34Z,OPEN,False,95,40,5,https://github.com/orestisfl,Reintroduce aspect ratio logic for tiling containers,2,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3810,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/3810#issuecomment-537941932,Fixes #3795,"I think that the problem with mpv is that before 29f2510 i3 did not save the aspect ratio normal hints in manage_window so mpv had window->aspect_ratio == 0.0.
I don't think there is any reasonable way to correct that. I much prefer to not introduce problems to the more popular mpv player in order to fix a bug in mplayer.
@Airblader any other ideas?",True,{}
i3/i3,https://github.com/i3/i3,3810,2019-10-01T13:29:58Z,,2020-06-18T13:05:34Z,OPEN,False,95,40,5,https://github.com/orestisfl,Reintroduce aspect ratio logic for tiling containers,2,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3810,https://github.com/Airblader,5,https://github.com/i3/i3/pull/3810#issuecomment-538693491,Fixes #3795,"In my understanding the bug lies with mplayer, right? As such I wouldn't try to work around its issues in i3, particularly if it causes issues with other clients (more popular or not).",True,{'THUMBS_UP': ['https://github.com/stapelberg']}
i3/i3,https://github.com/i3/i3,3810,2019-10-01T13:29:58Z,,2020-06-18T13:05:34Z,OPEN,False,95,40,5,https://github.com/orestisfl,Reintroduce aspect ratio logic for tiling containers,2,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3810,https://github.com/orestisfl,6,https://github.com/i3/i3/pull/3810#issuecomment-538696131,Fixes #3795,"In this case, I don't know which is the ""correct"" behavior. i3 exposes a bug in mplayer but it would be possible for i3 to misbehave according to the standard.
According to the comment by Michael:

  
    
      i3/src/render.c
    
    
        Lines 67 to 75
      in
      f397698
    
  
  
    

        
          
                   /* Obey the aspect ratio, if any, unless we are in fullscreen mode. 
        

        
          
                    * 
        

        
          
                    * The spec isn’t explicit on whether the aspect ratio hints should be 
        

        
          
                    * respected during fullscreen mode. Other WMs such as Openbox don’t do 
        

        
          
                    * that, and this post suggests that this is the correct way to do it: 
        

        
          
                    * https://mail.gnome.org/archives/wm-spec-list/2003-May/msg00007.html 
        

        
          
                    * 
        

        
          
                    * Ignoring aspect ratio during fullscreen was necessary to fix MPlayer 
        

        
          
                    * subtitle rendering, see https://bugs.i3wm.org/594 */ 
        
    
  


the spec is not clear about fullscreen windows (and certainly not about ""tiling"" windows) but in this specific case I feel that we should ignore the aspect ratio hints (as in 4.17) like we do for the rest of the normal hints.",True,{}
i3/i3,https://github.com/i3/i3,3810,2019-10-01T13:29:58Z,,2020-06-18T13:05:34Z,OPEN,False,95,40,5,https://github.com/orestisfl,Reintroduce aspect ratio logic for tiling containers,2,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3810,https://github.com/xsawyerx,7,https://github.com/i3/i3/pull/3810#issuecomment-640513683,Fixes #3795,I'm suffering from the issue this PR is fixing. I was wondering if there are plans to continue the work and merge this fix or a different one?,True,{}
i3/i3,https://github.com/i3/i3,3810,2019-10-01T13:29:58Z,,2020-06-18T13:05:34Z,OPEN,False,95,40,5,https://github.com/orestisfl,Reintroduce aspect ratio logic for tiling containers,2,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3810,https://github.com/orestisfl,8,https://github.com/i3/i3/pull/3810#issuecomment-640525893,Fixes #3795,"I will gladly make the changes if we reach an agreement.

@stapelberg do you have an opinion on this?
…
On Mon, Jun 8, 2020, 12:20 Sawyer X ***@***.***> wrote:
 I'm suffering from the issue this PR is fixing. I was wondering if there
 are plans to continue the work and merge this fix or a different one?

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#3810 (comment)>, or
 unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ABMCZPWAP63HEJONHQHHTWTRVS3OJANCNFSM4I4JQOLA>
 .",True,{}
i3/i3,https://github.com/i3/i3,3810,2019-10-01T13:29:58Z,,2020-06-18T13:05:34Z,OPEN,False,95,40,5,https://github.com/orestisfl,Reintroduce aspect ratio logic for tiling containers,2,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3810,https://github.com/stapelberg,9,https://github.com/i3/i3/pull/3810#issuecomment-641810677,Fixes #3795,"Could you summarize what the question is please? I have read this issue, but it’s not 100% clear to me.
In particular, #3810 (comment) says that with your latest commit, both mpv and mplayer do work as expected (isn’t that the desired outcome?), or am I reading this wrong?

PS: Hey @xsawyerx! I remember reading your name many times when I was working with Perl. Thanks for all your work, and enjoy i3! :)",True,{}
i3/i3,https://github.com/i3/i3,3810,2019-10-01T13:29:58Z,,2020-06-18T13:05:34Z,OPEN,False,95,40,5,https://github.com/orestisfl,Reintroduce aspect ratio logic for tiling containers,2,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3810,https://github.com/xsawyerx,10,https://github.com/i3/i3/pull/3810#issuecomment-641847250,Fixes #3795,"Could you summarize what the question is please? I have read this issue, but it’s not 100% clear to me.

I don't know if I'm phrasing it well, but, when using mplayer, the window area, past the video border itself, does not stay black. Instead it reflects other windows backgrounds (like the workspace I moved from, the last image on the screen in full screen, etc.).

In particular, #3810 (comment) says that with your latest commit, both mpv and mplayer do work as expected (isn’t that the desired outcome?), or am I reading this wrong?

I had missed that. I'm certain I'm not using the latest version, so I'll first upgrade and then check again. Apologies if I added more noise to a resolved issue.

PS: Hey @xsawyerx! I remember reading your name many times when I was working with Perl. Thanks for all your work, and enjoy i3! :)

I've been a very happy i3 user for a long time now. I think it is I who owes you a thank you. :)",True,{}
i3/i3,https://github.com/i3/i3,3810,2019-10-01T13:29:58Z,,2020-06-18T13:05:34Z,OPEN,False,95,40,5,https://github.com/orestisfl,Reintroduce aspect ratio logic for tiling containers,2,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3810,https://github.com/xsawyerx,11,https://github.com/i3/i3/pull/3810#issuecomment-641850486,Fixes #3795,"In particular, #3810 (comment) says that with your latest commit, both mpv and mplayer do work as expected (isn’t that the desired outcome?), or am I reading this wrong?


I think this commit is not merged, so I'm not sure upgrading from 4.17.1 (current stable Ubuntu) to 4.18.1 (official stable) will fix the issue. Maybe I'm missing something.",True,{}
i3/i3,https://github.com/i3/i3,3810,2019-10-01T13:29:58Z,,2020-06-18T13:05:34Z,OPEN,False,95,40,5,https://github.com/orestisfl,Reintroduce aspect ratio logic for tiling containers,2,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3810,https://github.com/stapelberg,12,https://github.com/i3/i3/pull/3810#issuecomment-641868838,Fixes #3795,"I think this commit is not merged, so I'm not sure upgrading from 4.17.1 (current stable Ubuntu) to 4.18.1 (official stable) will fix the issue. Maybe I'm missing something.

Correct, the commit in question is pending in this very PR.
If you want to test, check out this PR and build i3 yourself. You can use apt build-dep i3-wm to get all the deps, and mkdir -p build && cd build && meson .. && ninja to build i3 :)",True,{}
i3/i3,https://github.com/i3/i3,3810,2019-10-01T13:29:58Z,,2020-06-18T13:05:34Z,OPEN,False,95,40,5,https://github.com/orestisfl,Reintroduce aspect ratio logic for tiling containers,2,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3810,https://github.com/orestisfl,13,https://github.com/i3/i3/pull/3810#issuecomment-641869152,Fixes #3795,"Could you summarize what the question is please? I have read this issue, but it’s not 100% clear to me.
In particular, #3810 (comment) says that with your latest commit, both mpv and mplayer do work as expected (isn’t that the desired outcome?), or am I reading this wrong?
PS: Hey @xsawyerx! I remember reading your name many times when I was working with Perl. Thanks for all your work, and enjoy i3! :)

""Honored"" for mpv is not the optimal behavior as explained because subtitles can be placed in the dark areas that appear when the aspect ratios are not honored. I wonder if mpv should report different aspect ratios here because it clearly does not need/want to be that restricted.",True,{}
i3/i3,https://github.com/i3/i3,3810,2019-10-01T13:29:58Z,,2020-06-18T13:05:34Z,OPEN,False,95,40,5,https://github.com/orestisfl,Reintroduce aspect ratio logic for tiling containers,2,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3810,https://github.com/stapelberg,14,https://github.com/i3/i3/pull/3810#issuecomment-645447988,Fixes #3795,"""Honored"" for mpv is not the optimal behavior as explained because subtitles can be placed in the dark areas that appear when the aspect ratios are not honored. I wonder if mpv should report different aspect ratios here because it clearly does not need/want to be that restricted.

Okay, so it’s not optimal because a welcome side-effect of ignoring the aspect ratio hints is no longer triggered. But, it fixes behavior otherwise. Did I get this right?
I’m okay with going ahead with the fix, and requiring people to take up mpv usability improvements with mpv upstream :). Given that mpv is an active open source project, we can fix this the right way instead of having to accept a workaround.",True,{}
i3/i3,https://github.com/i3/i3,3810,2019-10-01T13:29:58Z,,2020-06-18T13:05:34Z,OPEN,False,95,40,5,https://github.com/orestisfl,Reintroduce aspect ratio logic for tiling containers,2,"['waiting', 'discussion']",https://github.com/i3/i3/pull/3810,https://github.com/orestisfl,15,https://github.com/i3/i3/pull/3810#issuecomment-646004069,Fixes #3795,"Ok, I will contact the mpv upstream",True,{}
i3/i3,https://github.com/i3/i3,3812,2019-10-07T18:40:12Z,2019-10-08T08:54:41Z,2019-10-08T12:43:33Z,MERGED,True,41,3,4,https://github.com/xzfc,"Fix ""move con to parent"" trick",1,[],https://github.com/i3/i3/pull/3812,https://github.com/xzfc,1,https://github.com/i3/i3/pull/3812,,,True,{}
i3/i3,https://github.com/i3/i3,3813,2019-10-07T23:16:52Z,2019-10-09T05:52:32Z,2019-10-09T16:20:08Z,CLOSED,False,3,1,1,https://github.com/antoinemadec,i3 msg: add 'sync' type,1,[],https://github.com/i3/i3/pull/3813,https://github.com/antoinemadec,1,https://github.com/i3/i3/pull/3813,,,True,{}
i3/i3,https://github.com/i3/i3,3813,2019-10-07T23:16:52Z,2019-10-09T05:52:32Z,2019-10-09T16:20:08Z,CLOSED,False,3,1,1,https://github.com/antoinemadec,i3 msg: add 'sync' type,1,[],https://github.com/i3/i3/pull/3813,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3813#issuecomment-539365904,,Thanks for the PR. This is currently not included in i3-msg because this protocol is really only used in the internal test suite of i3. Would you mind letting us know what you intend to use this for with i3-msg?,True,{}
i3/i3,https://github.com/i3/i3,3813,2019-10-07T23:16:52Z,2019-10-09T05:52:32Z,2019-10-09T16:20:08Z,CLOSED,False,3,1,1,https://github.com/antoinemadec,i3 msg: add 'sync' type,1,[],https://github.com/i3/i3/pull/3813,https://github.com/antoinemadec,3,https://github.com/i3/i3/pull/3813#issuecomment-539626867,,"@Airblader I'm trying to automate opening windows and setting up workspaces at startup.
To do that I am sending a bunch of i3-msg like so:
i3-msg 'workspace 1:email'
i3-msg 'exec --no-startup-id firefox' 
i3-msg 'layout tabbed'

It seems that the 'sync' does not do what I want after exec but seems to work on other messages.
I might be completely wrong and just follow prosaic superstitious instincts 😄
Synchronization is kinda tricky, I have to count the number of windows with wmctrl for exec type of commands, and I was hoping that i3-msg -t sync would do the trick for other messages.
Is my understanding correct?",True,{}
i3/i3,https://github.com/i3/i3,3813,2019-10-07T23:16:52Z,2019-10-09T05:52:32Z,2019-10-09T16:20:08Z,CLOSED,False,3,1,1,https://github.com/antoinemadec,i3 msg: add 'sync' type,1,[],https://github.com/i3/i3/pull/3813,https://github.com/Airblader,4,https://github.com/i3/i3/pull/3813#issuecomment-539634954,,I think you might be looking for layout saving/restoring: https://i3wm.org/docs/layout-saving.html,True,{}
i3/i3,https://github.com/i3/i3,3813,2019-10-07T23:16:52Z,2019-10-09T05:52:32Z,2019-10-09T16:20:08Z,CLOSED,False,3,1,1,https://github.com/antoinemadec,i3 msg: add 'sync' type,1,[],https://github.com/i3/i3/pull/3813,https://github.com/antoinemadec,5,https://github.com/i3/i3/pull/3813#issuecomment-539646700,,"@Airblader, thanks this would be a nice fit for my current needs.
However, is there a way to guarantee the order of multiple i3-msg?
Would the 'sync' do this or is my understanding wrong?",True,{}
i3/i3,https://github.com/i3/i3,3813,2019-10-07T23:16:52Z,2019-10-09T05:52:32Z,2019-10-09T16:20:08Z,CLOSED,False,3,1,1,https://github.com/antoinemadec,i3 msg: add 'sync' type,1,[],https://github.com/i3/i3/pull/3813,https://github.com/orestisfl,6,https://github.com/i3/i3/pull/3813#issuecomment-539717069,,"Multiple i3-msg commands that are run one after another do not need synchronization, they run one after another since each of them returns the result of the command.
The problem here probably is that executing firefox and firefox opening a window are two very different things. When i3 executes a process it does not wait for a window to spawn or for the process to finish. So, when you open firefox there is no guarantee for it to run in the current workspace (even though firefox implements the startup-notification protocol).",True,{}
i3/i3,https://github.com/i3/i3,3813,2019-10-07T23:16:52Z,2019-10-09T05:52:32Z,2019-10-09T16:20:08Z,CLOSED,False,3,1,1,https://github.com/antoinemadec,i3 msg: add 'sync' type,1,[],https://github.com/i3/i3/pull/3813,https://github.com/Airblader,7,https://github.com/i3/i3/pull/3813#issuecomment-539844722,,"When i3 executes a process it does not wait for a window to spawn or for the process to finish.

And just to go into more detail, neither one of those is feasible. The process may well not fork and thus not finish until the program actually terminates, and whether a process will ever open a window, how many it will open or when this will happen is entirely impossible to know upfront.
If you want to do something after the process has been started, chain the command after it. If you want to do something after a window has opened, use for_window (layout restoring is essentially the same).
Im going to close this PR because the sync protocol is used for our tests and unless there's an actual usecase to have it in i3-msg, I'd rather avoid misunderstandings like this by not adding it there. Do note that i3-msg is just a reference implementation anyway, the protocol can always be used through the IPC.",True,{}
i3/i3,https://github.com/i3/i3,3813,2019-10-07T23:16:52Z,2019-10-09T05:52:32Z,2019-10-09T16:20:08Z,CLOSED,False,3,1,1,https://github.com/antoinemadec,i3 msg: add 'sync' type,1,[],https://github.com/i3/i3/pull/3813,https://github.com/antoinemadec,8,https://github.com/i3/i3/pull/3813#issuecomment-540076373,,"@Airblader @orestisfl , no problem, thanks a lot for the clear reponse 👍",True,{}
i3/i3,https://github.com/i3/i3,3814,2019-10-08T23:36:54Z,2019-10-09T11:25:39Z,2019-10-09T11:31:31Z,MERGED,True,64,45,5,https://github.com/orestisfl,handlers.c: new focus should not end up behind fullscreen,2,[],https://github.com/i3/i3/pull/3814,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3814,"Alternatively, we could deny focus for windows that are behind fullscreened windows. But, since we don't do this with cmd_focus, I thought that this is more consistent.","Alternatively, we could deny focus for windows that are behind fullscreened windows. But, since we don't do this with cmd_focus, I thought that this is more consistent.",True,{}
i3/i3,https://github.com/i3/i3,3815,2019-10-09T08:10:49Z,2019-10-09T09:38:49Z,2019-10-09T09:59:09Z,MERGED,True,54,0,2,https://github.com/xzfc,"When renaming a workspace, update the previous_workspace_name too",1,[],https://github.com/i3/i3/pull/3815,https://github.com/xzfc,1,https://github.com/i3/i3/pull/3815,Fixes #3694,Fixes #3694,True,{}
i3/i3,https://github.com/i3/i3,3816,2019-10-09T10:50:43Z,2020-04-10T09:44:48Z,2020-04-10T09:45:13Z,MERGED,True,18,8,2,https://github.com/sandsmark,Match empty window properties (e. g. no title set) #3308,1,[],https://github.com/i3/i3/pull/3816,https://github.com/sandsmark,1,https://github.com/i3/i3/pull/3816,Fixes #3308,Fixes #3308,True,{}
i3/i3,https://github.com/i3/i3,3816,2019-10-09T10:50:43Z,2020-04-10T09:44:48Z,2020-04-10T09:45:13Z,MERGED,True,18,8,2,https://github.com/sandsmark,Match empty window properties (e. g. no title set) #3308,1,[],https://github.com/i3/i3/pull/3816,https://github.com/sandsmark,2,https://github.com/i3/i3/pull/3816#issuecomment-539948649,Fixes #3308,Does Github pick it up now (since it doesn't seem like it picked up the one in the title)? Issue #3308,True,{}
i3/i3,https://github.com/i3/i3,3816,2019-10-09T10:50:43Z,2020-04-10T09:44:48Z,2020-04-10T09:45:13Z,MERGED,True,18,8,2,https://github.com/sandsmark,Match empty window properties (e. g. no title set) #3308,1,[],https://github.com/i3/i3/pull/3816,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3816#issuecomment-539950658,Fixes #3308,Can you please squash the commits and also add fixes #3308 to the actual commit message?,True,{}
i3/i3,https://github.com/i3/i3,3816,2019-10-09T10:50:43Z,2020-04-10T09:44:48Z,2020-04-10T09:45:13Z,MERGED,True,18,8,2,https://github.com/sandsmark,Match empty window properties (e. g. no title set) #3308,1,[],https://github.com/i3/i3/pull/3816,https://github.com/sandsmark,4,https://github.com/i3/i3/pull/3816#issuecomment-545031935,Fixes #3308,"Sorry, completely forgot about this.
But old test case removed, new added, squashed (I initially assumed separate changes should have separate commits, but squashing makes more sense wrt. bisecting when I think about it), and added reference to bug report in commit message.",True,{}
i3/i3,https://github.com/i3/i3,3816,2019-10-09T10:50:43Z,2020-04-10T09:44:48Z,2020-04-10T09:45:13Z,MERGED,True,18,8,2,https://github.com/sandsmark,Match empty window properties (e. g. no title set) #3308,1,[],https://github.com/i3/i3/pull/3816,https://github.com/Airblader,5,https://github.com/i3/i3/pull/3816#issuecomment-559685380,Fixes #3308,@sandsmark Are you still working on this?,True,{}
i3/i3,https://github.com/i3/i3,3816,2019-10-09T10:50:43Z,2020-04-10T09:44:48Z,2020-04-10T09:45:13Z,MERGED,True,18,8,2,https://github.com/sandsmark,Match empty window properties (e. g. no title set) #3308,1,[],https://github.com/i3/i3/pull/3816,https://github.com/sandsmark,6,https://github.com/i3/i3/pull/3816#issuecomment-568897466,Fixes #3308,"didn't see that the CI failed.
Just want to officially voice my disagreement with clang-format wrt. putting absolutely everything on one huge line. :-P",True,{}
i3/i3,https://github.com/i3/i3,3816,2019-10-09T10:50:43Z,2020-04-10T09:44:48Z,2020-04-10T09:45:13Z,MERGED,True,18,8,2,https://github.com/sandsmark,Match empty window properties (e. g. no title set) #3308,1,[],https://github.com/i3/i3/pull/3816,https://github.com/orestisfl,7,https://github.com/i3/i3/pull/3816#issuecomment-568906388,Fixes #3308,"Yeah, this is a quirk that you have to know. I split the line into multiple ones in a way that clang-format accepts.",True,{}
i3/i3,https://github.com/i3/i3,3817,2019-10-09T13:09:48Z,2019-10-09T13:12:41Z,2019-10-09T13:12:44Z,MERGED,True,0,2,1,https://github.com/orestisfl,Remove outdated comment from Rect,1,[],https://github.com/i3/i3/pull/3817,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3817,"This has changed after #3787.
The packed attribute was added in 75aac5b for _NET_WORKAREA. However, eec8083 removed _NET_WORKAREA support. I did some quick greping for memcpy.+Rect and didn't find any similar
code that could theoretically lead to problems.
@stapelberg FYI","This has changed after #3787.
The packed attribute was added in 75aac5b for _NET_WORKAREA. However, eec8083 removed _NET_WORKAREA support. I did some quick greping for memcpy.+Rect and didn't find any similar
code that could theoretically lead to problems.
@stapelberg FYI",True,{}
i3/i3,https://github.com/i3/i3,3820,2019-10-11T15:28:26Z,2019-10-11T15:37:43Z,2019-10-11T16:18:24Z,MERGED,True,171,90,2,https://github.com/orestisfl,Deterministic tray icon order,2,[],https://github.com/i3/i3/pull/3820,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3820,Fixes #3573,Fixes #3573,True,{}
i3/i3,https://github.com/i3/i3,3821,2019-10-11T16:39:24Z,2019-10-11T16:43:39Z,2019-10-11T19:24:15Z,MERGED,True,2,1,1,https://github.com/orestisfl,reorder_trayclients_cmp: Correct comment,1,[],https://github.com/i3/i3/pull/3821,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3821,,,True,{}
i3/i3,https://github.com/i3/i3,3824,2019-10-13T10:20:08Z,2019-12-25T11:27:22Z,2019-12-25T14:39:12Z,MERGED,True,6,57,6,https://github.com/orestisfl,Use AC_REPLACE_FUNCS,2,[],https://github.com/i3/i3/pull/3824,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3824,Fixes #2610,Fixes #2610,True,{}
i3/i3,https://github.com/i3/i3,3824,2019-10-13T10:20:08Z,2019-12-25T11:27:22Z,2019-12-25T14:39:12Z,MERGED,True,6,57,6,https://github.com/orestisfl,Use AC_REPLACE_FUNCS,2,[],https://github.com/i3/i3/pull/3824,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3824#issuecomment-559685233,Fixes #2610,@stapelberg Can you take a look at this one?,True,{}
i3/i3,https://github.com/i3/i3,3827,2019-10-14T00:55:42Z,2019-10-14T07:54:32Z,2019-10-14T07:58:05Z,MERGED,True,14,10,1,https://github.com/orestisfl,Fix small leak in i3bar's main,1,[],https://github.com/i3/i3/pull/3827,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3827,,,True,{}
i3/i3,https://github.com/i3/i3,3828,2019-10-14T09:26:53Z,2019-10-14T09:45:41Z,2019-10-14T09:55:00Z,MERGED,True,15,8,1,https://github.com/orestisfl,Minor i3-nagbar changes,3,[],https://github.com/i3/i3/pull/3828,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3828,,,True,{}
i3/i3,https://github.com/i3/i3,3829,2019-10-14T12:41:13Z,2019-10-14T13:27:14Z,2019-10-14T13:29:48Z,MERGED,True,30,1,2,https://github.com/orestisfl,_con_move_to_con: focus_next only if in different workspaces,1,[],https://github.com/i3/i3/pull/3829,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3829,,,True,{}
i3/i3,https://github.com/i3/i3,3830,2019-10-14T14:35:23Z,2019-10-15T10:50:29Z,2019-10-15T10:55:05Z,MERGED,True,2,0,1,https://github.com/orestisfl,Fix i3bar leak on handle_destroy_notify,1,[],https://github.com/i3/i3/pull/3830,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3830,,,True,{}
i3/i3,https://github.com/i3/i3,3833,2019-10-15T15:45:39Z,2019-10-16T07:06:06Z,2019-10-16T07:40:47Z,MERGED,True,21,0,2,https://github.com/orestisfl,Do not show scratchpad windows after 'move to position',1,[],https://github.com/i3/i3/pull/3833,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3833,Fixes #3832,Fixes #3832,True,{}
i3/i3,https://github.com/i3/i3,3834,2019-10-15T20:35:00Z,2019-10-16T07:42:36Z,2019-10-16T07:42:37Z,MERGED,True,1,1,1,https://github.com/Airblader,Reparent windows to their current position on unmanage,1,[],https://github.com/i3/i3/pull/3834,https://github.com/Airblader,1,https://github.com/i3/i3/pull/3834,"When unmanaging a window we need to reparent it back to the root
window. With this patch we do so at the current position of the
container such that we don't throw away the geometry position.
This fixes cases where clients withdraw a window and reparent it
later on, expecting to keep the same geometry (in particular dock
clients) but then end up on a wrong output.
fixes #3819","When unmanaging a window we need to reparent it back to the root
window. With this patch we do so at the current position of the
container such that we don't throw away the geometry position.
This fixes cases where clients withdraw a window and reparent it
later on, expecting to keep the same geometry (in particular dock
clients) but then end up on a wrong output.
fixes #3819",True,{}
i3/i3,https://github.com/i3/i3,3834,2019-10-15T20:35:00Z,2019-10-16T07:42:36Z,2019-10-16T07:42:37Z,MERGED,True,1,1,1,https://github.com/Airblader,Reparent windows to their current position on unmanage,1,[],https://github.com/i3/i3/pull/3834,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3834#issuecomment-542393724,"When unmanaging a window we need to reparent it back to the root
window. With this patch we do so at the current position of the
container such that we don't throw away the geometry position.
This fixes cases where clients withdraw a window and reparent it
later on, expecting to keep the same geometry (in particular dock
clients) but then end up on a wrong output.
fixes #3819","Opening as draft until this is verified. Also, I have tracked the (0, 0) position back to when it was introduced and I think there was no specific rationale behind it; it probably just seemed easiest. Interestingly, openbox also uses (0, 0) specifically for dock clients but not others (I believe), but this may also just be an oversight.",True,{}
i3/i3,https://github.com/i3/i3,3834,2019-10-15T20:35:00Z,2019-10-16T07:42:36Z,2019-10-16T07:42:37Z,MERGED,True,1,1,1,https://github.com/Airblader,Reparent windows to their current position on unmanage,1,[],https://github.com/i3/i3/pull/3834,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3834#issuecomment-542538155,"When unmanaging a window we need to reparent it back to the root
window. With this patch we do so at the current position of the
container such that we don't throw away the geometry position.
This fixes cases where clients withdraw a window and reparent it
later on, expecting to keep the same geometry (in particular dock
clients) but then end up on a wrong output.
fixes #3819",Thanks for the confirmation!,True,{}
i3/i3,https://github.com/i3/i3,3835,2019-10-15T22:31:05Z,2019-10-18T07:24:33Z,2019-10-18T08:23:10Z,MERGED,True,49,4,3,https://github.com/orestisfl,Fix crash with moving container that is to be flattened,1,[],https://github.com/i3/i3/pull/3835,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3835,Fixes #3831,Fixes #3831,True,{}
i3/i3,https://github.com/i3/i3,3836,2019-10-17T09:57:15Z,2019-10-17T10:06:47Z,2019-10-17T17:39:35Z,MERGED,True,2,5,1,https://github.com/orestisfl,userguide: Remove mention of config directives with 'command equivalents',1,[],https://github.com/i3/i3/pull/3836,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3836,See #3657 / #3653,See #3657 / #3653,True,{}
i3/i3,https://github.com/i3/i3,3837,2019-10-17T15:15:55Z,2019-10-18T07:22:41Z,2019-10-18T08:23:04Z,MERGED,True,36,11,2,https://github.com/orestisfl,scratchpad_move: un-fullscreen correct container,1,[],https://github.com/i3/i3/pull/3837,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3837,Fixes #2857 (comment),Fixes #2857 (comment),True,{}
i3/i3,https://github.com/i3/i3,3839,2019-10-18T09:02:45Z,2019-10-18T13:51:43Z,2019-10-18T13:51:46Z,MERGED,True,1,1,1,https://github.com/orestisfl,remanage_window: avoid crash when nc->window == NULL,1,[],https://github.com/i3/i3/pull/3839,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3839,"Temporary solution until we find the root cause. Not that it is a bad idea to check for NULL either way.
Related to #3731","Temporary solution until we find the root cause. Not that it is a bad idea to check for NULL either way.
Related to #3731",True,{}
i3/i3,https://github.com/i3/i3,3840,2019-10-20T13:15:37Z,2019-10-21T06:41:27Z,2019-10-21T07:48:03Z,MERGED,True,9,9,5,https://github.com/orestisfl,Remove various unused parameters,1,[],https://github.com/i3/i3/pull/3840,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3840,,,True,{'HEART': ['https://github.com/panaman67']}
i3/i3,https://github.com/i3/i3,3841,2019-10-22T04:48:31Z,2019-10-22T05:56:42Z,2019-10-22T05:56:48Z,MERGED,True,3,3,2,https://github.com/DamienCassou,Documentation: fix links pointing to Pango markup,1,[],https://github.com/i3/i3/pull/3841,https://github.com/DamienCassou,1,https://github.com/i3/i3/pull/3841,,,True,{}
i3/i3,https://github.com/i3/i3,3841,2019-10-22T04:48:31Z,2019-10-22T05:56:42Z,2019-10-22T05:56:48Z,MERGED,True,3,3,2,https://github.com/DamienCassou,Documentation: fix links pointing to Pango markup,1,[],https://github.com/i3/i3/pull/3841,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3841#issuecomment-544815894,,Thank you!,True,{}
i3/i3,https://github.com/i3/i3,3859,2019-11-06T17:50:44Z,2020-07-19T07:30:50Z,2020-07-19T07:30:51Z,CLOSED,False,38,9,5,https://github.com/al-caveman,Adds `surface` focusing mode,2,[],https://github.com/i3/i3/pull/3859,https://github.com/al-caveman,1,https://github.com/i3/i3/pull/3859,"- Adds 'focus estranged left|right|up|down|next|prev'
- Modifies sibling focus from: 'focus next|prev sibling' into:
'focus sibling next|prev' for consistency with the estranged one.

Fixes #3738","- Adds 'focus estranged left|right|up|down|next|prev'
- Modifies sibling focus from: 'focus next|prev sibling' into:
'focus sibling next|prev' for consistency with the estranged one.

Fixes #3738",True,"{'THUMBS_UP': ['https://github.com/Davidj361', 'https://github.com/budRich']}"
i3/i3,https://github.com/i3/i3,3859,2019-11-06T17:50:44Z,2020-07-19T07:30:50Z,2020-07-19T07:30:51Z,CLOSED,False,38,9,5,https://github.com/al-caveman,Adds `surface` focusing mode,2,[],https://github.com/i3/i3/pull/3859,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3859#issuecomment-551407683,"- Adds 'focus estranged left|right|up|down|next|prev'
- Modifies sibling focus from: 'focus next|prev sibling' into:
'focus sibling next|prev' for consistency with the estranged one.

Fixes #3738","I'm a bit constrained on time and I think @orestisfl understands this code the best at the moment anyway, perhaps he can take a look and help you further on this for now.
My only comment right now is that we'll need to squash the commits into one proper commit in the end, but of course there's many other things to be done as well (userguide, tests). :-) I'm not yet sure about the ""lazy"" (for the record, I dislike ""estranged"" even more). We should try to think of a more descriptive name.",True,{}
i3/i3,https://github.com/i3/i3,3859,2019-11-06T17:50:44Z,2020-07-19T07:30:50Z,2020-07-19T07:30:51Z,CLOSED,False,38,9,5,https://github.com/al-caveman,Adds `surface` focusing mode,2,[],https://github.com/i3/i3/pull/3859,https://github.com/al-caveman,3,https://github.com/i3/i3/pull/3859#issuecomment-551520364,"- Adds 'focus estranged left|right|up|down|next|prev'
- Modifies sibling focus from: 'focus next|prev sibling' into:
'focus sibling next|prev' for consistency with the estranged one.

Fixes #3738","And I just did my 1st github squash ever 😀.  I don't know for sure, but by the looks of it, my heart says that something is not right.",True,{}
i3/i3,https://github.com/i3/i3,3859,2019-11-06T17:50:44Z,2020-07-19T07:30:50Z,2020-07-19T07:30:51Z,CLOSED,False,38,9,5,https://github.com/al-caveman,Adds `surface` focusing mode,2,[],https://github.com/i3/i3/pull/3859,https://github.com/Airblader,4,https://github.com/i3/i3/pull/3859#issuecomment-551537880,"- Adds 'focus estranged left|right|up|down|next|prev'
- Modifies sibling focus from: 'focus next|prev sibling' into:
'focus sibling next|prev' for consistency with the estranged one.

Fixes #3738","my heart says that something is not right.

Yeah, it is definitely not correct at the moment. :-/",True,{}
i3/i3,https://github.com/i3/i3,3859,2019-11-06T17:50:44Z,2020-07-19T07:30:50Z,2020-07-19T07:30:51Z,CLOSED,False,38,9,5,https://github.com/al-caveman,Adds `surface` focusing mode,2,[],https://github.com/i3/i3/pull/3859,https://github.com/al-caveman,5,https://github.com/i3/i3/pull/3859#issuecomment-551724431,"- Adds 'focus estranged left|right|up|down|next|prev'
- Modifies sibling focus from: 'focus next|prev sibling' into:
'focus sibling next|prev' for consistency with the estranged one.

Fixes #3738","Fixed commit.  Now my PR looks as if I always was a very smart guy.
I guess the trick is to always forcefully push lies to my github fork?  I.e. 1st rewrite history to look smart, then push such lie by push -f?",True,{}
i3/i3,https://github.com/i3/i3,3859,2019-11-06T17:50:44Z,2020-07-19T07:30:50Z,2020-07-19T07:30:51Z,CLOSED,False,38,9,5,https://github.com/al-caveman,Adds `surface` focusing mode,2,[],https://github.com/i3/i3/pull/3859,https://github.com/Airblader,6,https://github.com/i3/i3/pull/3859#issuecomment-551726288,"- Adds 'focus estranged left|right|up|down|next|prev'
- Modifies sibling focus from: 'focus next|prev sibling' into:
'focus sibling next|prev' for consistency with the estranged one.

Fixes #3738","Yes, squashing rewrites the history of your feature branch and therefore requires rewriting the history. :-)",True,{}
i3/i3,https://github.com/i3/i3,3859,2019-11-06T17:50:44Z,2020-07-19T07:30:50Z,2020-07-19T07:30:51Z,CLOSED,False,38,9,5,https://github.com/al-caveman,Adds `surface` focusing mode,2,[],https://github.com/i3/i3/pull/3859,https://github.com/al-caveman,7,https://github.com/i3/i3/pull/3859#issuecomment-592943457,"- Adds 'focus estranged left|right|up|down|next|prev'
- Modifies sibling focus from: 'focus next|prev sibling' into:
'focus sibling next|prev' for consistency with the estranged one.

Fixes #3738","now i no longer touch the implementation of cmd_focus_sibling, nor alter its syntax.  i only extended cmd_focus_direction to have an extra argument mode that is either normal or surface.  i.e. it adds this:
focus left|right|up|down|next|prev surface

o, and, instead of calling the new mode lazy or estranged, i called it surface - thoughts?  its naming comes from the imagination: it lets you move around the tiles as if you are a bird flying over the surface (visible tiles), without causing to unhide any hidden tiles.
synopsis: this feature will allow navigating throughout stacked/tabbed/normal windows without getting stuck in tab/stack swamps (more info on this in #3738), without even needing mod+a to get out of the swamp.  it noticeably enhances i3's usability.
a neat side effect:  once coupled with focus next|prev [sibling], we can effectively configure i3 such that tabs vs. stacks is only a matter of appearance.  e.g. we can consider stacks/tabs to be (say) themes of tabs, so users shuffle them accordingly to (say) minimize pixel wastage.",True,{}
i3/i3,https://github.com/i3/i3,3859,2019-11-06T17:50:44Z,2020-07-19T07:30:50Z,2020-07-19T07:30:51Z,CLOSED,False,38,9,5,https://github.com/al-caveman,Adds `surface` focusing mode,2,[],https://github.com/i3/i3/pull/3859,https://github.com/Airblader,8,https://github.com/i3/i3/pull/3859#issuecomment-593023090,"- Adds 'focus estranged left|right|up|down|next|prev'
- Modifies sibling focus from: 'focus next|prev sibling' into:
'focus sibling next|prev' for consistency with the estranged one.

Fixes #3738","I'm OK with the complexity of the change, but haven't reviewed it yet. I'm not too happy with the naming yet, though. To be continued. :)",True,{}
i3/i3,https://github.com/i3/i3,3859,2019-11-06T17:50:44Z,2020-07-19T07:30:50Z,2020-07-19T07:30:51Z,CLOSED,False,38,9,5,https://github.com/al-caveman,Adds `surface` focusing mode,2,[],https://github.com/i3/i3/pull/3859,https://github.com/al-caveman,9,https://github.com/i3/i3/pull/3859#issuecomment-594991665,"- Adds 'focus estranged left|right|up|down|next|prev'
- Modifies sibling focus from: 'focus next|prev sibling' into:
'focus sibling next|prev' for consistency with the estranged one.

Fixes #3738",how about visible or visible-only (or only-visible.. dunno which one is more english (or should it be plural?  e.g. visibles?  visibles-only?  only-visibles))?,True,{}
i3/i3,https://github.com/i3/i3,3859,2019-11-06T17:50:44Z,2020-07-19T07:30:50Z,2020-07-19T07:30:51Z,CLOSED,False,38,9,5,https://github.com/al-caveman,Adds `surface` focusing mode,2,[],https://github.com/i3/i3/pull/3859,https://github.com/stapelberg,10,https://github.com/i3/i3/pull/3859#issuecomment-660602304,"- Adds 'focus estranged left|right|up|down|next|prev'
- Modifies sibling focus from: 'focus next|prev sibling' into:
'focus sibling next|prev' for consistency with the estranged one.

Fixes #3738",Closing this PR as the author is banned from all i3 community spaces after interactions such as (but not limited to) https://www.freelists.org/post/i3-discuss/squigz-abusing-op-power-in-i3-i3offtopic,True,{}
i3/i3,https://github.com/i3/i3,3866,2019-11-18T18:45:53Z,2020-04-15T13:49:15Z,2020-04-15T13:49:22Z,CLOSED,False,7,5,1,https://github.com/orestisfl,Makefile: Add generated sources to i3-config-wizard,1,[],https://github.com/i3/i3/pull/3866,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3866,"Haven't really reproduced on my machine but should work
Fixes #3670","Haven't really reproduced on my machine but should work
Fixes #3670",True,{}
i3/i3,https://github.com/i3/i3,3868,2019-11-21T22:09:26Z,2019-12-04T12:25:53Z,2019-12-04T12:26:03Z,MERGED,True,1,0,1,https://github.com/benasocj,userguide: Add missing anchor,1,[],https://github.com/i3/i3/pull/3868,https://github.com/benasocj,1,https://github.com/i3/i3/pull/3868,This fixes the missing anchor for the existing cross reference <<manipulating_layout>>.,This fixes the missing anchor for the existing cross reference <<manipulating_layout>>.,True,{}
i3/i3,https://github.com/i3/i3,3868,2019-11-21T22:09:26Z,2019-12-04T12:25:53Z,2019-12-04T12:26:03Z,MERGED,True,1,0,1,https://github.com/benasocj,userguide: Add missing anchor,1,[],https://github.com/i3/i3/pull/3868,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3868#issuecomment-557625868,This fixes the missing anchor for the existing cross reference <<manipulating_layout>>.,Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3868,2019-11-21T22:09:26Z,2019-12-04T12:25:53Z,2019-12-04T12:26:03Z,MERGED,True,1,0,1,https://github.com/benasocj,userguide: Add missing anchor,1,[],https://github.com/i3/i3/pull/3868,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3868#issuecomment-559684751,This fixes the missing anchor for the existing cross reference <<manipulating_layout>>.,@ben4ever We fixed the Travis setup. Could you rebase your branch to the latest next branch? That should make Travis happy and we can merge it. Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3868,2019-11-21T22:09:26Z,2019-12-04T12:25:53Z,2019-12-04T12:26:03Z,MERGED,True,1,0,1,https://github.com/benasocj,userguide: Add missing anchor,1,[],https://github.com/i3/i3/pull/3868,https://github.com/benasocj,4,https://github.com/i3/i3/pull/3868#issuecomment-561569832,This fixes the missing anchor for the existing cross reference <<manipulating_layout>>.,"@ben4ever We fixed the Travis setup. Could you rebase your branch to the latest next branch? That should make Travis happy and we can merge it. Thanks!

Done.",True,{}
i3/i3,https://github.com/i3/i3,3868,2019-11-21T22:09:26Z,2019-12-04T12:25:53Z,2019-12-04T12:26:03Z,MERGED,True,1,0,1,https://github.com/benasocj,userguide: Add missing anchor,1,[],https://github.com/i3/i3/pull/3868,https://github.com/Airblader,5,https://github.com/i3/i3/pull/3868#issuecomment-561621872,This fixes the missing anchor for the existing cross reference <<manipulating_layout>>.,"Great, thanks!",True,{}
i3/i3,https://github.com/i3/i3,3871,2019-11-28T03:37:07Z,2019-11-28T10:36:54Z,2019-11-29T02:54:07Z,MERGED,True,2,0,1,https://github.com/geshido,added marks field to get_tree reply in ipc documentation,1,[],https://github.com/i3/i3/pull/3871,https://github.com/geshido,1,https://github.com/i3/i3/pull/3871,,,True,{}
i3/i3,https://github.com/i3/i3,3871,2019-11-28T03:37:07Z,2019-11-28T10:36:54Z,2019-11-29T02:54:07Z,MERGED,True,2,0,1,https://github.com/geshido,added marks field to get_tree reply in ipc documentation,1,[],https://github.com/i3/i3/pull/3871,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3871#issuecomment-559381971,,@geshido Can you rebase onto current next? We had to push a fix for Travis.,True,{}
i3/i3,https://github.com/i3/i3,3871,2019-11-28T03:37:07Z,2019-11-28T10:36:54Z,2019-11-29T02:54:07Z,MERGED,True,2,0,1,https://github.com/geshido,added marks field to get_tree reply in ipc documentation,1,[],https://github.com/i3/i3/pull/3871,https://github.com/geshido,3,https://github.com/i3/i3/pull/3871#issuecomment-559409168,,@Airblader rebased,True,{}
i3/i3,https://github.com/i3/i3,3872,2019-11-28T07:52:26Z,2019-11-28T07:55:47Z,2019-11-28T07:56:34Z,MERGED,True,1,1,1,https://github.com/stapelberg,travis/check-spelling.pl: check_spelling moved to Lintian::Spelling,1,[],https://github.com/i3/i3/pull/3872,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3872,,,True,{}
i3/i3,https://github.com/i3/i3,3889,2020-01-01T00:17:38Z,2020-11-10T17:54:14Z,2020-11-10T17:54:14Z,CLOSED,False,12,0,2,https://github.com/izzel,Only swallow windows once,1,[],https://github.com/i3/i3/pull/3889,https://github.com/izzel,1,https://github.com/i3/i3/pull/3889,"fixes #3888. Some windows ""update"" some of their properties like window names when their dimensions change. They don't actually update the properties, but the handlers get called in any case. Which calls remanage_window again. There's also the fact that a window can change its name after it gets mapped and get re-swallowed. So this PR only allows a window to get swallowed once.","fixes #3888. Some windows ""update"" some of their properties like window names when their dimensions change. They don't actually update the properties, but the handlers get called in any case. Which calls remanage_window again. There's also the fact that a window can change its name after it gets mapped and get re-swallowed. So this PR only allows a window to get swallowed once.",True,{}
i3/i3,https://github.com/i3/i3,3889,2020-01-01T00:17:38Z,2020-11-10T17:54:14Z,2020-11-10T17:54:14Z,CLOSED,False,12,0,2,https://github.com/izzel,Only swallow windows once,1,[],https://github.com/i3/i3/pull/3889,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3889#issuecomment-570139720,"fixes #3888. Some windows ""update"" some of their properties like window names when their dimensions change. They don't actually update the properties, but the handlers get called in any case. Which calls remanage_window again. There's also the fact that a window can change its name after it gets mapped and get re-swallowed. So this PR only allows a window to get swallowed once.","There's also the fact that a window can change its name after it gets mapped and get re-swallowed.

I think this is a case where we do want it to happen, though, as this is essentially working as expected.

Some windows ""update"" some of their properties like window names when their dimensions change.

Ugh, that is frustrating. Perhaps it'd be better to instead only handle an update if something actually changed?",True,{}
i3/i3,https://github.com/i3/i3,3889,2020-01-01T00:17:38Z,2020-11-10T17:54:14Z,2020-11-10T17:54:14Z,CLOSED,False,12,0,2,https://github.com/izzel,Only swallow windows once,1,[],https://github.com/i3/i3/pull/3889,https://github.com/izzel,3,https://github.com/i3/i3/pull/3889#issuecomment-626982167,"fixes #3888. Some windows ""update"" some of their properties like window names when their dimensions change. They don't actually update the properties, but the handlers get called in any case. Which calls remanage_window again. There's also the fact that a window can change its name after it gets mapped and get re-swallowed. So this PR only allows a window to get swallowed once.","I should've said ""after the window gets mapped and swallowed by a placeholder, and then later re-swallowed by another placeholder"". Do we want windows to get swallowed by multiple placeholders? If so, could you give me an example of where someone would want that?

Ugh, that is frustrating. Perhaps it'd be better to instead only handle an update if something actually changed?

I agree. Should I include it in this pull request or in another?
Also it has been... awhile, and I'm still a bit new to git and github. Do I need to merge with the latest next branch in my local repo?",True,{}
i3/i3,https://github.com/i3/i3,3889,2020-01-01T00:17:38Z,2020-11-10T17:54:14Z,2020-11-10T17:54:14Z,CLOSED,False,12,0,2,https://github.com/izzel,Only swallow windows once,1,[],https://github.com/i3/i3/pull/3889,https://github.com/wlhlm,4,https://github.com/i3/i3/pull/3889#issuecomment-724233190,"fixes #3888. Some windows ""update"" some of their properties like window names when their dimensions change. They don't actually update the properties, but the handlers get called in any case. Which calls remanage_window again. There's also the fact that a window can change its name after it gets mapped and get re-swallowed. So this PR only allows a window to get swallowed once.","I'm affected by this bug (as described in #3888) and would like to see this fix get merged (tested and works for me). The maintainers marked this as ""waiting"", but haven't yet answered the questions asked by the submitter above.


There's also the fact that a window can change its name after it gets mapped and get re-swallowed.

I think this is a case where we do want it to happen, though, as this is essentially working as expected.

I personally think that a window getting swallowed again after it already replaced a placeholder is surprising behavior.
Regardless of whether we want to allow multiple swallows, or not, I think we should store whether a placeholder was swallowed a window (as this patch implements) in both cases. If we allow multiple swallows, the old window location should be replaced by a placeholder again so as to not jumble up the layout and for that we would need to know if it was already swallowed.
Here is a regression test for #3888:
diff --git a/testcases/t/542-layout-restore-remanage.t b/testcases/t/542-layout-restore-remanage.t
index 26b50835..fd45beee 100644
--- a/testcases/t/542-layout-restore-remanage.t
+++ b/testcases/t/542-layout-restore-remanage.t
@@ -83,4 +83,67 @@ is($nodes[0]->{name}, 'different_title', 'test window got swallowed');
 
 close($fh);
 
+############################################################
+# Make sure window only gets swallowed once
+############################################################
+# Regression, issue #3888
+$ws = fresh_workspace;
+
+($fh, $filename) = tempfile(UNLINK => 1);
+print $fh <<'EOT';
+// vim:ts=4:sw=4:et
+{
+    // splith split container with 2 children
+    ""layout"": ""splith"",
+    ""type"": ""con"",
+    ""nodes"": [
+        {
+            ""type"": ""con"",
+            ""swallows"": [
+               {
+               ""class"": ""^foo$""
+               }
+            ]
+        },
+        {
+            // splitv split container with 2 children
+            ""layout"": ""splitv"",
+            ""type"": ""con"",
+            ""nodes"": [
+                {
+                    ""type"": ""con"",
+                    ""swallows"": [
+                       {
+                        ""class"": ""^foo$""
+                       }
+                    ]
+                },
+                {
+                    ""type"": ""con"",
+                    ""swallows"": [
+                       {
+                        ""class"": ""^foo$""
+                       }
+                    ]
+                }
+            ]
+        }
+    ]
+}
+EOT
+$fh->flush;
+cmd ""append_layout $filename"";
+
+$window = open_window wm_class => 'foo';
+
+change_window_title($window, ""different_title"");
+
+@content = @{get_ws_content($ws)};
+
+subtest 'regression test that window gets only swallowed once', sub {
+    is($content[0]->{nodes}[0]->{window}, $window->id, 'first placeholder swallowed window');
+    isnt($content[0]->{nodes}[1]->{nodes}[0]->{window}, $window->id, 'second placeholder did not swallow window');
+    isnt($content[0]->{nodes}[1]->{nodes}[1]->{window}, $window->id, 'thid placeholder did not swallow window');
+};
+
 done_testing;",True,{}
i3/i3,https://github.com/i3/i3,3889,2020-01-01T00:17:38Z,2020-11-10T17:54:14Z,2020-11-10T17:54:14Z,CLOSED,False,12,0,2,https://github.com/izzel,Only swallow windows once,1,[],https://github.com/i3/i3/pull/3889,https://github.com/Airblader,5,https://github.com/i3/i3/pull/3889#issuecomment-724238580,"fixes #3888. Some windows ""update"" some of their properties like window names when their dimensions change. They don't actually update the properties, but the handlers get called in any case. Which calls remanage_window again. There's also the fact that a window can change its name after it gets mapped and get re-swallowed. So this PR only allows a window to get swallowed once.","I personally think that a window getting swallowed again after it already replaced a placeholder is surprising behavior.

You can use layout restoring to transition windows between different arrangements, and for that this would be a crucial aspect. Layout restoring is specifically not limited to the startup of the window manager.

If we allow multiple swallows, the old window location should be replaced by a placeholder agai

This would interfere with some use cases as well (see above), and may even be perceived as a bug if sufficient time has passed in between.
Whether a window has been swallowed before is not visible to the user, so I wouldn't expect them to memorize forever which window has or hasn't been to predict behavior.
Thanks for the regression test nonetheless :-)",True,{}
i3/i3,https://github.com/i3/i3,3889,2020-01-01T00:17:38Z,2020-11-10T17:54:14Z,2020-11-10T17:54:14Z,CLOSED,False,12,0,2,https://github.com/izzel,Only swallow windows once,1,[],https://github.com/i3/i3/pull/3889,https://github.com/wlhlm,6,https://github.com/i3/i3/pull/3889#issuecomment-724651320,"fixes #3888. Some windows ""update"" some of their properties like window names when their dimensions change. They don't actually update the properties, but the handlers get called in any case. Which calls remanage_window again. There's also the fact that a window can change its name after it gets mapped and get re-swallowed. So this PR only allows a window to get swallowed once.","You can use layout restoring to transition windows between different arrangements, and for that this would be a crucial aspect. Layout restoring is specifically not limited to the startup of the window manager.

I was unaware of this aspect, and would have to rethink my suggestion above to take this into consideration. However, you say ""Layout restoring is specifically not limited to [...]"", but I can't find this documented anywhere? All the layout restore docs say is:

When an application opens a window that matches the specified swallow criteria, it will be placed in the corresponding placeholder window.

It only talks about new windows getting swallowed by placeholders, not ones that already exist when restoring a layout, and my own experimentation with append_layout confirms that (with the addition of the behavior implemented by #3759). From what I can find elsewhere, transitioning windows between arrangements works by ""unmapping"", and then mapping them again, but there seem to be some drawbacks to this method as you wrote on Reddit:

Note that un- and remapping a window externally causes i3 to recreate its container (it treats it like a new window), so this will cause window rules to run and remove all container information such as marks.

I feel like it would make more sense to explicitly support this use case for example by adding an argument to the append_layout command like append_layout --consider-existing-windows <layout.json> so that we don't loose container information as when unmapping a window. In this case i3 could just ignore the ""swallowed"" property (as implemented by this PR) on existing windows.",True,{}
i3/i3,https://github.com/i3/i3,3889,2020-01-01T00:17:38Z,2020-11-10T17:54:14Z,2020-11-10T17:54:14Z,CLOSED,False,12,0,2,https://github.com/izzel,Only swallow windows once,1,[],https://github.com/i3/i3/pull/3889,https://github.com/Airblader,7,https://github.com/i3/i3/pull/3889#issuecomment-724662852,"fixes #3888. Some windows ""update"" some of their properties like window names when their dimensions change. They don't actually update the properties, but the handlers get called in any case. Which calls remanage_window again. There's also the fact that a window can change its name after it gets mapped and get re-swallowed. So this PR only allows a window to get swallowed once.","Well, you're completely right. I had entirely misremembered that change. So this actually looks fine to me. However, since you already wrote a test for it as well I think it would be great to include it as well. Can you maybe open this PR with the original commit by @izzel and another one to add your test?",True,{}
i3/i3,https://github.com/i3/i3,3894,2020-01-07T02:49:10Z,2020-01-08T08:21:51Z,2020-01-08T12:17:00Z,MERGED,True,14,0,4,https://github.com/Iskustvo,Extended GET_WORKSPACE response with workspace ID.,1,[],https://github.com/i3/i3/pull/3894,https://github.com/Iskustvo,1,https://github.com/i3/i3/pull/3894,Closes #3891.,Closes #3891.,True,{}
i3/i3,https://github.com/i3/i3,3894,2020-01-07T02:49:10Z,2020-01-08T08:21:51Z,2020-01-08T12:17:00Z,MERGED,True,14,0,4,https://github.com/Iskustvo,Extended GET_WORKSPACE response with workspace ID.,1,[],https://github.com/i3/i3/pull/3894,https://github.com/Iskustvo,2,https://github.com/i3/i3/pull/3894#issuecomment-571786693,Closes #3891.,"@Airblader, looks like the tests were failing because they used i3bar for parsing of the GET_WORKSPACES response. Therefore, I have also updated the i3bar's parser to address the newly added ID and that fixed the tests.",True,{}
i3/i3,https://github.com/i3/i3,3894,2020-01-07T02:49:10Z,2020-01-08T08:21:51Z,2020-01-08T12:17:00Z,MERGED,True,14,0,4,https://github.com/Iskustvo,Extended GET_WORKSPACE response with workspace ID.,1,[],https://github.com/i3/i3/pull/3894,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3894#issuecomment-571921886,Closes #3891.,"Looks good, thanks! Could you please squash the commits? Then we're all set.",True,{}
i3/i3,https://github.com/i3/i3,3894,2020-01-07T02:49:10Z,2020-01-08T08:21:51Z,2020-01-08T12:17:00Z,MERGED,True,14,0,4,https://github.com/Iskustvo,Extended GET_WORKSPACE response with workspace ID.,1,[],https://github.com/i3/i3/pull/3894,https://github.com/Iskustvo,4,https://github.com/i3/i3/pull/3894#issuecomment-571937477,Closes #3891.,Done!,True,{}
i3/i3,https://github.com/i3/i3,3894,2020-01-07T02:49:10Z,2020-01-08T08:21:51Z,2020-01-08T12:17:00Z,MERGED,True,14,0,4,https://github.com/Iskustvo,Extended GET_WORKSPACE response with workspace ID.,1,[],https://github.com/i3/i3/pull/3894,https://github.com/Airblader,5,https://github.com/i3/i3/pull/3894#issuecomment-571940529,Closes #3891.,Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3898,2020-01-08T18:04:39Z,2020-01-09T11:47:40Z,2020-01-09T11:54:50Z,MERGED,True,2,1,1,https://github.com/dvarrazzo,Fixed location of the IPC socket in the docs,1,[],https://github.com/i3/i3/pull/3898,https://github.com/dvarrazzo,1,https://github.com/i3/i3/pull/3898,"Socket gets created by default in $XDG_RUNTIME_DIR rather than in /tmp/, see 8a40dc0","Socket gets created by default in $XDG_RUNTIME_DIR rather than in /tmp/, see 8a40dc0",True,{}
i3/i3,https://github.com/i3/i3,3898,2020-01-08T18:04:39Z,2020-01-09T11:47:40Z,2020-01-09T11:54:50Z,MERGED,True,2,1,1,https://github.com/dvarrazzo,Fixed location of the IPC socket in the docs,1,[],https://github.com/i3/i3/pull/3898,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3898#issuecomment-572526727,"Socket gets created by default in $XDG_RUNTIME_DIR rather than in /tmp/, see 8a40dc0",Thank you!,True,{}
i3/i3,https://github.com/i3/i3,3904,2020-01-12T20:55:34Z,,2022-03-07T07:18:52Z,OPEN,False,3,0,1,https://github.com/sophacles,Document floating properties in get_tree reply,1,[],https://github.com/i3/i3/pull/3904,https://github.com/sophacles,1,https://github.com/i3/i3/pull/3904,Update doc/ipc get_tree reply docs to include: sticky and floating.,Update doc/ipc get_tree reply docs to include: sticky and floating.,True,{}
i3/i3,https://github.com/i3/i3,3904,2020-01-12T20:55:34Z,,2022-03-07T07:18:52Z,OPEN,False,3,0,1,https://github.com/sophacles,Document floating properties in get_tree reply,1,[],https://github.com/i3/i3/pull/3904,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3904#issuecomment-616728287,Update doc/ipc get_tree reply docs to include: sticky and floating.,What's the status here?,True,{}
i3/i3,https://github.com/i3/i3,3904,2020-01-12T20:55:34Z,,2022-03-07T07:18:52Z,OPEN,False,3,0,1,https://github.com/sophacles,Document floating properties in get_tree reply,1,[],https://github.com/i3/i3/pull/3904,https://github.com/sophacles,3,https://github.com/i3/i3/pull/3904#issuecomment-1060001081,Update doc/ipc get_tree reply docs to include: sticky and floating.,I was cleaning up some old todos and found that this was still open. Sorry on the long delay. It seems that since I opened this the floating field was documented elsewhere so I just removed my changes related to that. This now only has the sticky field documentation.,True,{}
i3/i3,https://github.com/i3/i3,3904,2020-01-12T20:55:34Z,,2022-03-07T07:18:52Z,OPEN,False,3,0,1,https://github.com/sophacles,Document floating properties in get_tree reply,1,[],https://github.com/i3/i3/pull/3904,https://github.com/Airblader,4,https://github.com/i3/i3/pull/3904#issuecomment-1060264113,Update doc/ipc get_tree reply docs to include: sticky and floating.,"@orestisfl It seems like I can't actually merge this since your review is still showing a requested change (weird, I would've thought I can override this…)",True,{}
i3/i3,https://github.com/i3/i3,3905,2020-01-12T22:37:39Z,2020-01-16T21:19:26Z,2020-01-17T08:38:56Z,MERGED,True,19,3,1,https://github.com/Airblader,Respect match criteria for exec command,1,[],https://github.com/i3/i3/pull/3905,https://github.com/Airblader,1,https://github.com/i3/i3/pull/3905,"We currently do not evaluate match criteria for the exec command
since generally executing the same command multiple times is
unlikely to make sense.
However, it does make sense when the match is empty and this should
prevent the command from running, which currently does not happen.
For consisteny we execute the command as many times as there are
matched criteria, but print a warning if it matches more than one
container.
fixes #3903

This PR is not yet tested.","We currently do not evaluate match criteria for the exec command
since generally executing the same command multiple times is
unlikely to make sense.
However, it does make sense when the match is empty and this should
prevent the command from running, which currently does not happen.
For consisteny we execute the command as many times as there are
matched criteria, but print a warning if it matches more than one
container.
fixes #3903

This PR is not yet tested.",True,{}
i3/i3,https://github.com/i3/i3,3905,2020-01-12T22:37:39Z,2020-01-16T21:19:26Z,2020-01-17T08:38:56Z,MERGED,True,19,3,1,https://github.com/Airblader,Respect match criteria for exec command,1,[],https://github.com/i3/i3/pull/3905,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3905#issuecomment-573466263,"We currently do not evaluate match criteria for the exec command
since generally executing the same command multiple times is
unlikely to make sense.
However, it does make sense when the match is empty and this should
prevent the command from running, which currently does not happen.
For consisteny we execute the command as many times as there are
matched criteria, but print a warning if it matches more than one
container.
fixes #3903

This PR is not yet tested.",I'll worry about the build failure once verified.,True,{}
i3/i3,https://github.com/i3/i3,3905,2020-01-12T22:37:39Z,2020-01-16T21:19:26Z,2020-01-17T08:38:56Z,MERGED,True,19,3,1,https://github.com/Airblader,Respect match criteria for exec command,1,[],https://github.com/i3/i3/pull/3905,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/3905#issuecomment-573562668,"We currently do not evaluate match criteria for the exec command
since generally executing the same command multiple times is
unlikely to make sense.
However, it does make sense when the match is empty and this should
prevent the command from running, which currently does not happen.
For consisteny we execute the command as many times as there are
matched criteria, but print a warning if it matches more than one
container.
fixes #3903

This PR is not yet tested.",Looks good thus far,True,{}
i3/i3,https://github.com/i3/i3,3906,2020-01-16T08:28:08Z,2020-01-16T08:47:55Z,2020-01-16T09:02:46Z,MERGED,True,13,13,10,https://github.com/orestisfl,Exit codes,2,[],https://github.com/i3/i3/pull/3906,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3906,,,True,{}
i3/i3,https://github.com/i3/i3,3909,2020-01-17T21:05:38Z,2020-01-18T16:42:18Z,2020-01-18T19:02:41Z,MERGED,True,1,1,1,https://github.com/orestisfl,Do not error on exec not matching a container,1,[],https://github.com/i3/i3/pull/3909,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3909,"See #3903, #3905","See #3903, #3905",True,{}
i3/i3,https://github.com/i3/i3,3909,2020-01-17T21:05:38Z,2020-01-18T16:42:18Z,2020-01-18T19:02:41Z,MERGED,True,1,1,1,https://github.com/orestisfl,Do not error on exec not matching a container,1,[],https://github.com/i3/i3/pull/3909,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3909#issuecomment-575885278,"See #3903, #3905","up
…
On Fri, Jan 17, 2020 at 10:56 PM Ingo Bürk ***@***.***> wrote:
 ***@***.**** requested changes on this pull request.
 ------------------------------

 In src/commands.c
 <#3909 (comment)>:

 > @@ -1219,14 +1219,17 @@ void cmd_exec(I3_CMD, const char *nosn, const char *command) {
          LOG(""WARNING: Your criteria for the exec command match %d containers, ""
              ""so the command will execute this many times.\n"",
              count);
 +    } else if (count == 0) {
 +        LOG(""WARNING: Your criteria for the exec command do not match a container, ""

 I still don't agree that this is a warning. We don't log for any other
 command that it isn't being executed due to an empty match.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#3909?email_source=notifications&email_token=ABMCZPVPSE6IPJP5WD3767TQ6ISRVA5CNFSM4KIOEIN2YY3PNVWWK3TUL52HS4DFWFIHK3DMKJSXC5LFON2FEZLWNFSXPKTDN5WW2ZLOORPWSZGOCSHDDXI#pullrequestreview-344863197>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ABMCZPRIO4SGFGM6AI7BWMDQ6ISRVANCNFSM4KIOEINQ>
 .",True,{}
i3/i3,https://github.com/i3/i3,3911,2020-01-18T22:42:47Z,2020-02-22T09:09:12Z,2020-03-03T16:48:31Z,MERGED,True,27,13,1,https://github.com/eganjs,Fix test case 180-fd-leaks when running on Fedora,3,[],https://github.com/i3/i3/pull/3911,https://github.com/eganjs,1,https://github.com/i3/i3/pull/3911,Resolves #3910,Resolves #3910,True,{}
i3/i3,https://github.com/i3/i3,3911,2020-01-18T22:42:47Z,2020-02-22T09:09:12Z,2020-03-03T16:48:31Z,MERGED,True,27,13,1,https://github.com/eganjs,Fix test case 180-fd-leaks when running on Fedora,3,[],https://github.com/i3/i3/pull/3911,https://github.com/xzfc,2,https://github.com/i3/i3/pull/3911#issuecomment-588133277,Resolves #3910,"BTW, another possible implementation option is to run ls /proc/self/fd both from within i3 and perl and compare the output. In that case, no hardcoding of /var/lib/sss/mc/... is needed.",True,{}
i3/i3,https://github.com/i3/i3,3911,2020-01-18T22:42:47Z,2020-02-22T09:09:12Z,2020-03-03T16:48:31Z,MERGED,True,27,13,1,https://github.com/eganjs,Fix test case 180-fd-leaks when running on Fedora,3,[],https://github.com/i3/i3/pull/3911,https://github.com/eganjs,3,https://github.com/i3/i3/pull/3911#issuecomment-588452680,Resolves #3910,"BTW, another possible implementation option is to run ls /proc/self/fd both from within i3 and perl and compare the output. In that case, no hardcoding of /var/lib/sss/mc/... is needed.

I think that is a more favourable approach, will update",True,{}
i3/i3,https://github.com/i3/i3,3918,2020-01-25T14:36:00Z,2020-02-15T11:25:59Z,2020-04-10T10:41:10Z,MERGED,True,28,15,16,https://github.com/orestisfl,Fix fno-common problems with gcc10,5,[],https://github.com/i3/i3/pull/3918,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3918,Fixes #3914,Fixes #3914,True,{}
i3/i3,https://github.com/i3/i3,3918,2020-01-25T14:36:00Z,2020-02-15T11:25:59Z,2020-04-10T10:41:10Z,MERGED,True,28,15,16,https://github.com/orestisfl,Fix fno-common problems with gcc10,5,[],https://github.com/i3/i3/pull/3918,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/3918#issuecomment-586580604,Fixes #3914,Thanks for fixing this!,True,{}
i3/i3,https://github.com/i3/i3,3926,2020-02-02T10:18:43Z,2020-02-02T12:12:22Z,2020-02-02T12:12:22Z,MERGED,True,1,1,1,https://github.com/stapelberg,"configure: deal with git worktree checkouts, where .git is a file",1,[],https://github.com/i3/i3/pull/3926,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3926,fixes #3013,fixes #3013,True,{}
i3/i3,https://github.com/i3/i3,3928,2020-02-04T20:39:12Z,2020-02-11T08:06:55Z,2020-02-11T08:06:55Z,MERGED,True,2,1,1,https://github.com/Iskustvo,"Improved documentation for ""window_properties"" field in GET_TREE reply.",1,[],https://github.com/i3/i3/pull/3928,https://github.com/Iskustvo,1,https://github.com/i3/i3/pull/3928,Pointed out the fact that whole window_properties field or any of its attributes might be missing from JSON reply for GET_TREE request.,Pointed out the fact that whole window_properties field or any of its attributes might be missing from JSON reply for GET_TREE request.,True,{}
i3/i3,https://github.com/i3/i3,3928,2020-02-04T20:39:12Z,2020-02-11T08:06:55Z,2020-02-11T08:06:55Z,MERGED,True,2,1,1,https://github.com/Iskustvo,"Improved documentation for ""window_properties"" field in GET_TREE reply.",1,[],https://github.com/i3/i3/pull/3928,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3928#issuecomment-583724722,Pointed out the fact that whole window_properties field or any of its attributes might be missing from JSON reply for GET_TREE request.,Can you please rebase instead of merging to keep the history clean?,True,{}
i3/i3,https://github.com/i3/i3,3928,2020-02-04T20:39:12Z,2020-02-11T08:06:55Z,2020-02-11T08:06:55Z,MERGED,True,2,1,1,https://github.com/Iskustvo,"Improved documentation for ""window_properties"" field in GET_TREE reply.",1,[],https://github.com/i3/i3/pull/3928,https://github.com/Iskustvo,3,https://github.com/i3/i3/pull/3928#issuecomment-583725441,Pointed out the fact that whole window_properties field or any of its attributes might be missing from JSON reply for GET_TREE request.,"Yes, of course.
I was just curious to see how it looks when conflicts are resolved directly on GitHub :D
I have rebased the change properly now.
P.S. Shouldn't window_type be part of window_properties instead of separate field?",True,{}
i3/i3,https://github.com/i3/i3,3928,2020-02-04T20:39:12Z,2020-02-11T08:06:55Z,2020-02-11T08:06:55Z,MERGED,True,2,1,1,https://github.com/Iskustvo,"Improved documentation for ""window_properties"" field in GET_TREE reply.",1,[],https://github.com/i3/i3/pull/3928,https://github.com/Airblader,4,https://github.com/i3/i3/pull/3928#issuecomment-584517561,Pointed out the fact that whole window_properties field or any of its attributes might be missing from JSON reply for GET_TREE request.,"Shouldn't window_type be part of window_properties instead of separate field?

Yeah, probably, but that would be a breaking change and there's no real benefit, so it's not worth it to change.",True,{'THUMBS_UP': ['https://github.com/Iskustvo']}
i3/i3,https://github.com/i3/i3,3931,2020-02-07T08:46:46Z,2020-02-07T09:44:43Z,2020-02-07T09:44:43Z,MERGED,True,4,0,1,https://github.com/acheronfail,docs: add window_type to ipc documentation,1,[],https://github.com/i3/i3/pull/3931,https://github.com/acheronfail,1,https://github.com/i3/i3/pull/3931,This PR adds documentation for the merged changes at: #3797.,This PR adds documentation for the merged changes at: #3797.,True,{}
i3/i3,https://github.com/i3/i3,3942,2020-02-16T13:30:16Z,2020-02-16T17:50:55Z,2020-02-19T19:55:54Z,MERGED,True,5,2,1,https://github.com/stapelberg,configure.ac: test for iconv_open with #include <iconv.h>,1,[],https://github.com/i3/i3/pull/3942,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3942,"The previously used AC_SEARCH_LIBS uses AC_LANG_CALL, which is discouraged
because it intentionally violates the C type system: it has no way of specifying
function parameters, so it does not include the required headers to suppress
type warnings:
https://www.gnu.org/savannah-checkouts/gnu/autoconf/manual/autoconf-2.69/html_node/Generating-Sources.html
The new code does what AC_SEARCH_LIBS does, but uses AC_LANG_PROGRAM instead of
AC_LANG_CALL. It explicitly includes iconv.h and calls iconv_open with the
correct number and type of arguments.
This fixes compilation on systems where libiconv’s iconv.h is discovered first,
but glibc also provides iconv. Previously, this would result in configure
discovering glibc’s iconv, and make failing to compile because -liconv wasn’t
specified, but iconv.h pulled in libiconv.","The previously used AC_SEARCH_LIBS uses AC_LANG_CALL, which is discouraged
because it intentionally violates the C type system: it has no way of specifying
function parameters, so it does not include the required headers to suppress
type warnings:
https://www.gnu.org/savannah-checkouts/gnu/autoconf/manual/autoconf-2.69/html_node/Generating-Sources.html
The new code does what AC_SEARCH_LIBS does, but uses AC_LANG_PROGRAM instead of
AC_LANG_CALL. It explicitly includes iconv.h and calls iconv_open with the
correct number and type of arguments.
This fixes compilation on systems where libiconv’s iconv.h is discovered first,
but glibc also provides iconv. Previously, this would result in configure
discovering glibc’s iconv, and make failing to compile because -liconv wasn’t
specified, but iconv.h pulled in libiconv.",True,{}
i3/i3,https://github.com/i3/i3,3942,2020-02-16T13:30:16Z,2020-02-16T17:50:55Z,2020-02-19T19:55:54Z,MERGED,True,5,2,1,https://github.com/stapelberg,configure.ac: test for iconv_open with #include <iconv.h>,1,[],https://github.com/i3/i3/pull/3942,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3942#issuecomment-586725739,"The previously used AC_SEARCH_LIBS uses AC_LANG_CALL, which is discouraged
because it intentionally violates the C type system: it has no way of specifying
function parameters, so it does not include the required headers to suppress
type warnings:
https://www.gnu.org/savannah-checkouts/gnu/autoconf/manual/autoconf-2.69/html_node/Generating-Sources.html
The new code does what AC_SEARCH_LIBS does, but uses AC_LANG_PROGRAM instead of
AC_LANG_CALL. It explicitly includes iconv.h and calls iconv_open with the
correct number and type of arguments.
This fixes compilation on systems where libiconv’s iconv.h is discovered first,
but glibc also provides iconv. Previously, this would result in configure
discovering glibc’s iconv, and make failing to compile because -liconv wasn’t
specified, but iconv.h pulled in libiconv.",@stapelberg Do we want to put this in before the release?,True,{}
i3/i3,https://github.com/i3/i3,3942,2020-02-16T13:30:16Z,2020-02-16T17:50:55Z,2020-02-19T19:55:54Z,MERGED,True,5,2,1,https://github.com/stapelberg,configure.ac: test for iconv_open with #include <iconv.h>,1,[],https://github.com/i3/i3/pull/3942,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/3942#issuecomment-586732793,"The previously used AC_SEARCH_LIBS uses AC_LANG_CALL, which is discouraged
because it intentionally violates the C type system: it has no way of specifying
function parameters, so it does not include the required headers to suppress
type warnings:
https://www.gnu.org/savannah-checkouts/gnu/autoconf/manual/autoconf-2.69/html_node/Generating-Sources.html
The new code does what AC_SEARCH_LIBS does, but uses AC_LANG_PROGRAM instead of
AC_LANG_CALL. It explicitly includes iconv.h and calls iconv_open with the
correct number and type of arguments.
This fixes compilation on systems where libiconv’s iconv.h is discovered first,
but glibc also provides iconv. Previously, this would result in configure
discovering glibc’s iconv, and make failing to compile because -liconv wasn’t
specified, but iconv.h pulled in libiconv.","@stapelberg Do we want to put this in before the release?

Yes please",True,{}
i3/i3,https://github.com/i3/i3,3944,2020-02-17T20:05:51Z,2020-02-22T12:47:50Z,2020-02-22T12:47:54Z,MERGED,True,10,1,1,https://github.com/stapelberg,Makefile.am: respect configure --program-suffix,1,[],https://github.com/i3/i3/pull/3944,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3944,fixes #3838,fixes #3838,True,{}
i3/i3,https://github.com/i3/i3,3944,2020-02-17T20:05:51Z,2020-02-22T12:47:50Z,2020-02-22T12:47:54Z,MERGED,True,10,1,1,https://github.com/stapelberg,Makefile.am: respect configure --program-suffix,1,[],https://github.com/i3/i3/pull/3944,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/3944#issuecomment-587142754,fixes #3838,"What about hard-coded calls to eg i3-nagbar?

Those should probably also be addressed, but that can be done in a separate change.",True,{}
i3/i3,https://github.com/i3/i3,3944,2020-02-17T20:05:51Z,2020-02-22T12:47:50Z,2020-02-22T12:47:54Z,MERGED,True,10,1,1,https://github.com/stapelberg,Makefile.am: respect configure --program-suffix,1,[],https://github.com/i3/i3/pull/3944,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3944#issuecomment-587334504,fixes #3838,"Maybe we should change it from ""fixes #3838"" to ""relates to #3838"" then?",True,{}
i3/i3,https://github.com/i3/i3,3944,2020-02-17T20:05:51Z,2020-02-22T12:47:50Z,2020-02-22T12:47:54Z,MERGED,True,10,1,1,https://github.com/stapelberg,Makefile.am: respect configure --program-suffix,1,[],https://github.com/i3/i3/pull/3944,https://github.com/stapelberg,4,https://github.com/i3/i3/pull/3944#issuecomment-589952701,fixes #3838,"Maybe we should change it from ""fixes #3838"" to ""relates to #3838"" then?

Done.",True,{}
i3/i3,https://github.com/i3/i3,3945,2020-02-17T20:50:49Z,2020-02-18T08:16:07Z,2020-02-18T08:16:07Z,MERGED,True,3,0,1,https://github.com/stapelberg,Makefile.am: i3-config-wizard: add dependency on config parser,1,[],https://github.com/i3/i3/pull/3945,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3945,fixes #3670,fixes #3670,True,{}
i3/i3,https://github.com/i3/i3,3946,2020-02-18T00:10:22Z,2020-02-18T08:16:28Z,2020-02-18T08:16:28Z,MERGED,True,1,1,1,https://github.com/phy1729,"Prepend ""exec "" to default i3bar_command",1,[],https://github.com/i3/i3/pull/3946,https://github.com/phy1729,1,https://github.com/i3/i3/pull/3946,"Avoids leaving around a useless shell process.
Closes #3925.","Avoids leaving around a useless shell process.
Closes #3925.",True,{}
i3/i3,https://github.com/i3/i3,3947,2020-02-18T00:17:26Z,,2020-10-13T08:34:42Z,OPEN,False,1,1,1,https://github.com/xzfc,Use OVER operator for drawing text,1,['waiting'],https://github.com/i3/i3/pull/3947,https://github.com/xzfc,1,https://github.com/i3/i3/pull/3947,"Bring back commit 1616046 which is reverted by commit eba1773.
Advantages of OVER over SOURCE:

Subpixel font rendering (#3604).
No transparent garbage around color emoji characters.


See #2925 (comment)
Renders:
before.png
after.png
Fixes #3604","Bring back commit 1616046 which is reverted by commit eba1773.
Advantages of OVER over SOURCE:

Subpixel font rendering (#3604).
No transparent garbage around color emoji characters.


See #2925 (comment)
Renders:
before.png
after.png
Fixes #3604",True,{}
i3/i3,https://github.com/i3/i3,3947,2020-02-18T00:17:26Z,,2020-10-13T08:34:42Z,OPEN,False,1,1,1,https://github.com/xzfc,Use OVER operator for drawing text,1,['waiting'],https://github.com/i3/i3/pull/3947,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/3947#issuecomment-587290086,"Bring back commit 1616046 which is reverted by commit eba1773.
Advantages of OVER over SOURCE:

Subpixel font rendering (#3604).
No transparent garbage around color emoji characters.


See #2925 (comment)
Renders:
before.png
after.png
Fixes #3604","Can you clarify which cairo version contains the fix, and ideally link to the fix? The only commit referenced in the issue that I can find is https://gitlab.freedesktop.org/cairo/cairo/commit/99427c3f4f6ce7ce3c95c4caa4d2b8ff7c0093d9, but that doesn’t mention OVER?",True,{}
i3/i3,https://github.com/i3/i3,3947,2020-02-18T00:17:26Z,,2020-10-13T08:34:42Z,OPEN,False,1,1,1,https://github.com/xzfc,Use OVER operator for drawing text,1,['waiting'],https://github.com/i3/i3/pull/3947,https://github.com/xzfc,3,https://github.com/i3/i3/pull/3947#issuecomment-587299823,"Bring back commit 1616046 which is reverted by commit eba1773.
Advantages of OVER over SOURCE:

Subpixel font rendering (#3604).
No transparent garbage around color emoji characters.


See #2925 (comment)
Renders:
before.png
after.png
Fixes #3604","@Airblader

What happened to doing this conditionally on the alpha channel? This is no longer a pure i3-gaps problem.

As I can see, current i3-next doesn't support RGBA fonts (aka hole-punching), and thus there is no pango_font_alpha variable.",True,{}
i3/i3,https://github.com/i3/i3,3947,2020-02-18T00:17:26Z,,2020-10-13T08:34:42Z,OPEN,False,1,1,1,https://github.com/xzfc,Use OVER operator for drawing text,1,['waiting'],https://github.com/i3/i3/pull/3947,https://github.com/xzfc,4,https://github.com/i3/i3/pull/3947#issuecomment-587316377,"Bring back commit 1616046 which is reverted by commit eba1773.
Advantages of OVER over SOURCE:

Subpixel font rendering (#3604).
No transparent garbage around color emoji characters.


See #2925 (comment)
Renders:
before.png
after.png
Fixes #3604","@stapelberg
It seems the cairo commit 99427c3f is the fix of the original issue with SOURCE described in #2908 (text isn't drawn if color emoji is present), which is different from the issues described in the current PR.",True,{}
i3/i3,https://github.com/i3/i3,3947,2020-02-18T00:17:26Z,,2020-10-13T08:34:42Z,OPEN,False,1,1,1,https://github.com/xzfc,Use OVER operator for drawing text,1,['waiting'],https://github.com/i3/i3/pull/3947,https://github.com/stapelberg,5,https://github.com/i3/i3/pull/3947#issuecomment-587317687,"Bring back commit 1616046 which is reverted by commit eba1773.
Advantages of OVER over SOURCE:

Subpixel font rendering (#3604).
No transparent garbage around color emoji characters.


See #2925 (comment)
Renders:
before.png
after.png
Fixes #3604","It seems the cairo commit 99427c3f is the fix of the original issue with SOURCE described in #2908 (text isn't drawn if color emoji is present), which is different from the issues described in the current PR.

To ensure I understand correctly: the original motivation for this change is gone because of commit 99427c3f.
Can you outline why it’s now safe to re-introduce this change, given that it had to be reverted previously? This needs to go into the commit message.",True,{}
i3/i3,https://github.com/i3/i3,3947,2020-02-18T00:17:26Z,,2020-10-13T08:34:42Z,OPEN,False,1,1,1,https://github.com/xzfc,Use OVER operator for drawing text,1,['waiting'],https://github.com/i3/i3/pull/3947,https://github.com/xzfc,6,https://github.com/i3/i3/pull/3947#issuecomment-587331852,"Bring back commit 1616046 which is reverted by commit eba1773.
Advantages of OVER over SOURCE:

Subpixel font rendering (#3604).
No transparent garbage around color emoji characters.


See #2925 (comment)
Renders:
before.png
after.png
Fixes #3604","To ensure I understand correctly: the original motivation for this change is gone because of commit 99427c3f.

Yes.



PR
OP
comment




old
SOURCE
Text isn't drawn in cairo 1.15.8..1.15.10 if color emoji is present.


#2908
OVER
Original motivation: fix for cairo 1.15.8.


#3604
SOURCE
The previous patch has been reverted in i3 since it causes a problem in i3-gaps in case if the text alpha is 0 (#2925 (comment)).


#3947
OVER
This PR.




Can you outline why it’s now safe to re-introduce this change, given that it had to be reverted previously? This needs to go into the commit message.

I think it has always been safe to use OVER in i3, and I've provided a fix for i3-gaps (#2925 (comment)).",True,{'THUMBS_UP': ['https://github.com/Airblader']}
i3/i3,https://github.com/i3/i3,3947,2020-02-18T00:17:26Z,,2020-10-13T08:34:42Z,OPEN,False,1,1,1,https://github.com/xzfc,Use OVER operator for drawing text,1,['waiting'],https://github.com/i3/i3/pull/3947,https://github.com/Airblader,7,https://github.com/i3/i3/pull/3947#issuecomment-587334273,"Bring back commit 1616046 which is reverted by commit eba1773.
Advantages of OVER over SOURCE:

Subpixel font rendering (#3604).
No transparent garbage around color emoji characters.


See #2925 (comment)
Renders:
before.png
after.png
Fixes #3604","I won't stand in the way of this change due to the obvious benefit, but I still don't find it satisfactory that something in cairo simply doesn't seem to work correctly (perhaps I'm missing the bigger point as to why this cannot work correctly) and i3 needs to work around that.
With the idea of bringing i3-gaps into i3 this will also affect i3 (I was not aware the alpha channel on fonts wasn't in i3 yet – I thought it was), and the fix for i3-gaps isn't really a fix, but just reduces the issue a bit more (correct me if I'm wrong, but drawing emojis with alpha < 1.0 would still not work).",True,{'THUMBS_UP': ['https://github.com/xzfc']}
i3/i3,https://github.com/i3/i3,3948,2020-02-18T23:15:04Z,2020-02-19T10:31:10Z,2020-02-19T14:50:24Z,MERGED,True,363,329,37,https://github.com/xzfc,clang-format: bring back ForeachMacros,2,[],https://github.com/i3/i3/pull/3948,https://github.com/xzfc,1,https://github.com/i3/i3/pull/3948,"ForeachMacros was disabled in 4211274 due to the breakage of include/queue.h. The currently used version, clang-format-6.0 doesn't break it.","ForeachMacros was disabled in 4211274 due to the breakage of include/queue.h. The currently used version, clang-format-6.0 doesn't break it.",True,{}
i3/i3,https://github.com/i3/i3,3949,2020-02-19T02:13:52Z,2020-02-19T10:41:59Z,2020-02-19T14:50:10Z,MERGED,True,14,3,5,https://github.com/xzfc,Sanitize window dimensions and handle decoration overlap,2,[],https://github.com/i3/i3/pull/3949,https://github.com/xzfc,1,https://github.com/i3/i3/pull/3949,"This branch is based on #3948, so it should be merged after. Although it is ready for review (check last two commits).
To reproduce the bug

Disable compositor.
Open a few windows in split mode.
Shrink all of them except the last one. It should look like this (this is still a split layout, not stack).

Old behavior
screenshot

Glitched window decorations (both rendering and mouse event handling).
Some apps (like gnome-terminal) may become unresponsive.

New behavior
screenshot","This branch is based on #3948, so it should be merged after. Although it is ready for review (check last two commits).
To reproduce the bug

Disable compositor.
Open a few windows in split mode.
Shrink all of them except the last one. It should look like this (this is still a split layout, not stack).

Old behavior
screenshot

Glitched window decorations (both rendering and mouse event handling).
Some apps (like gnome-terminal) may become unresponsive.

New behavior
screenshot",True,{}
i3/i3,https://github.com/i3/i3,3949,2020-02-19T02:13:52Z,2020-02-19T10:41:59Z,2020-02-19T14:50:10Z,MERGED,True,14,3,5,https://github.com/xzfc,Sanitize window dimensions and handle decoration overlap,2,[],https://github.com/i3/i3/pull/3949,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3949#issuecomment-588155546,"This branch is based on #3948, so it should be merged after. Although it is ready for review (check last two commits).
To reproduce the bug

Disable compositor.
Open a few windows in split mode.
Shrink all of them except the last one. It should look like this (this is still a split layout, not stack).

Old behavior
screenshot

Glitched window decorations (both rendering and mouse event handling).
Some apps (like gnome-terminal) may become unresponsive.

New behavior
screenshot",Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3949,2020-02-19T02:13:52Z,2020-02-19T10:41:59Z,2020-02-19T14:50:10Z,MERGED,True,14,3,5,https://github.com/xzfc,Sanitize window dimensions and handle decoration overlap,2,[],https://github.com/i3/i3/pull/3949,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/3949#issuecomment-588185167,"This branch is based on #3948, so it should be merged after. Although it is ready for review (check last two commits).
To reproduce the bug

Disable compositor.
Open a few windows in split mode.
Shrink all of them except the last one. It should look like this (this is still a split layout, not stack).

Old behavior
screenshot

Glitched window decorations (both rendering and mouse event handling).
Some apps (like gnome-terminal) may become unresponsive.

New behavior
screenshot",@xzfc Does this close any issue?,True,{}
i3/i3,https://github.com/i3/i3,3949,2020-02-19T02:13:52Z,2020-02-19T10:41:59Z,2020-02-19T14:50:10Z,MERGED,True,14,3,5,https://github.com/xzfc,Sanitize window dimensions and handle decoration overlap,2,[],https://github.com/i3/i3/pull/3949,https://github.com/xzfc,4,https://github.com/i3/i3/pull/3949#issuecomment-588190373,"This branch is based on #3948, so it should be merged after. Although it is ready for review (check last two commits).
To reproduce the bug

Disable compositor.
Open a few windows in split mode.
Shrink all of them except the last one. It should look like this (this is still a split layout, not stack).

Old behavior
screenshot

Glitched window decorations (both rendering and mouse event handling).
Some apps (like gnome-terminal) may become unresponsive.

New behavior
screenshot","Ah, yes, #3544.",True,{'THUMBS_UP': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,3950,2020-02-21T02:11:18Z,2020-02-21T18:01:41Z,2020-02-23T07:25:38Z,MERGED,True,33,19,11,https://github.com/xzfc,Small fixes,3,[],https://github.com/i3/i3/pull/3950,https://github.com/xzfc,1,https://github.com/i3/i3/pull/3950,,,True,{}
i3/i3,https://github.com/i3/i3,3950,2020-02-21T02:11:18Z,2020-02-21T18:01:41Z,2020-02-23T07:25:38Z,MERGED,True,33,19,11,https://github.com/xzfc,Small fixes,3,[],https://github.com/i3/i3/pull/3950,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3950#issuecomment-589583588,,Thanks! Could you file the floating resize commit as a separate PR please and also describe the case a bit better?,True,{}
i3/i3,https://github.com/i3/i3,3950,2020-02-21T02:11:18Z,2020-02-21T18:01:41Z,2020-02-23T07:25:38Z,MERGED,True,33,19,11,https://github.com/xzfc,Small fixes,3,[],https://github.com/i3/i3/pull/3950,https://github.com/xzfc,3,https://github.com/i3/i3/pull/3950#issuecomment-590009499,,"@Airblader

Could you file the floating resize commit as a separate PR please and also describe the case a bit better?

Done: #3954 (also updated the commit).",True,{}
i3/i3,https://github.com/i3/i3,3951,2020-02-21T09:53:42Z,2020-02-21T09:59:36Z,2020-02-21T09:59:36Z,MERGED,True,1,1,1,https://github.com/txtor,typo,1,[],https://github.com/i3/i3/pull/3951,https://github.com/txtor,1,https://github.com/i3/i3/pull/3951,,,True,{}
i3/i3,https://github.com/i3/i3,3953,2020-02-22T13:10:25Z,2020-04-10T10:26:04Z,2020-04-10T10:26:07Z,MERGED,True,13,0,1,https://github.com/stapelberg,Makefile: add bear target for using clangd/ccls language servers,1,[],https://github.com/i3/i3/pull/3953,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3953,"After installing clangd and/or ccls (Emacs eglot defaults to ccls),
run e.g. make bear -j32 and restart your editor (or just its language server).","After installing clangd and/or ccls (Emacs eglot defaults to ccls),
run e.g. make bear -j32 and restart your editor (or just its language server).",True,{}
i3/i3,https://github.com/i3/i3,3953,2020-02-22T13:10:25Z,2020-04-10T10:26:04Z,2020-04-10T10:26:07Z,MERGED,True,13,0,1,https://github.com/stapelberg,Makefile: add bear target for using clangd/ccls language servers,1,[],https://github.com/i3/i3/pull/3953,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3953#issuecomment-589972555,"After installing clangd and/or ccls (Emacs eglot defaults to ccls),
run e.g. make bear -j32 and restart your editor (or just its language server).",I don't see why this has to be included in the Makefile,True,{}
i3/i3,https://github.com/i3/i3,3953,2020-02-22T13:10:25Z,2020-04-10T10:26:04Z,2020-04-10T10:26:07Z,MERGED,True,13,0,1,https://github.com/stapelberg,Makefile: add bear target for using clangd/ccls language servers,1,[],https://github.com/i3/i3/pull/3953,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/3953#issuecomment-589980034,"After installing clangd and/or ccls (Emacs eglot defaults to ccls),
run e.g. make bear -j32 and restart your editor (or just its language server).","It doesn’t have to be, but it seems nice. What’s the harm in having it? If it turns out to be hard to maintain, we can remove it",True,{}
i3/i3,https://github.com/i3/i3,3954,2020-02-22T23:42:03Z,2020-04-10T10:17:27Z,2020-04-10T10:17:27Z,MERGED,True,7,7,2,https://github.com/xzfc,Make floating-tiling resize code consistent with plain tiling resize,1,[],https://github.com/i3/i3/pull/3954,https://github.com/xzfc,1,https://github.com/i3/i3/pull/3954,"I've copied the conditions from a plain tiling resize case (see /* 8: … */ later in function route_click()) because I see no reason why they should be different.
Also, I've moved the call to tree_render() from route_click() to resize_graphical_handler(). So that tree_render() would be called in both cases.

As a consequence, the following bug is fixed:

Suppose you have a floating split container H[a b].
Drag a border between a and b.

Old behavior: floating resize.
New behavior: tiling resize.","I've copied the conditions from a plain tiling resize case (see /* 8: … */ later in function route_click()) because I see no reason why they should be different.
Also, I've moved the call to tree_render() from route_click() to resize_graphical_handler(). So that tree_render() would be called in both cases.

As a consequence, the following bug is fixed:

Suppose you have a floating split container H[a b].
Drag a border between a and b.

Old behavior: floating resize.
New behavior: tiling resize.",True,{}
i3/i3,https://github.com/i3/i3,3954,2020-02-22T23:42:03Z,2020-04-10T10:17:27Z,2020-04-10T10:17:27Z,MERGED,True,7,7,2,https://github.com/xzfc,Make floating-tiling resize code consistent with plain tiling resize,1,[],https://github.com/i3/i3/pull/3954,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3954#issuecomment-590198045,"I've copied the conditions from a plain tiling resize case (see /* 8: … */ later in function route_click()) because I see no reason why they should be different.
Also, I've moved the call to tree_render() from route_click() to resize_graphical_handler(). So that tree_render() would be called in both cases.

As a consequence, the following bug is fixed:

Suppose you have a floating split container H[a b].
Drag a border between a and b.

Old behavior: floating resize.
New behavior: tiling resize.","Suppose you have a floating split container

This is already something we do not support, it just happens to mostly work. :-)

I see no reason why they should be different

That said, I don't see a reason against it either.
@orestisfl Can you maybe review this change? I think as of late you're most familiar with it and I just recovered from being sick and have too much on my plate to catch up on for the moment.",True,{}
i3/i3,https://github.com/i3/i3,3955,2020-02-23T01:44:40Z,2020-02-24T07:48:59Z,2020-02-25T01:52:01Z,MERGED,True,17,116,10,https://github.com/xzfc,Assume xcb_cursor_context_new never fails,1,[],https://github.com/i3/i3/pull/3955,https://github.com/xzfc,1,https://github.com/i3/i3/pull/3955,"As I can see in libxcb-cursor code, the only way of xcb_cursor_context_new() returning non-zero is memory allocation failure (src); and libxcb-cursor already falls back to xcb_create_glyph_cursor if it can't load the cursor.
Can we just assume that xcursor_supported is always true, and refactor out places like this?","As I can see in libxcb-cursor code, the only way of xcb_cursor_context_new() returning non-zero is memory allocation failure (src); and libxcb-cursor already falls back to xcb_create_glyph_cursor if it can't load the cursor.
Can we just assume that xcursor_supported is always true, and refactor out places like this?",True,{}
i3/i3,https://github.com/i3/i3,3955,2020-02-23T01:44:40Z,2020-02-24T07:48:59Z,2020-02-25T01:52:01Z,MERGED,True,17,116,10,https://github.com/xzfc,Assume xcb_cursor_context_new never fails,1,[],https://github.com/i3/i3/pull/3955,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3955#issuecomment-590030773,"As I can see in libxcb-cursor code, the only way of xcb_cursor_context_new() returning non-zero is memory allocation failure (src); and libxcb-cursor already falls back to xcb_create_glyph_cursor if it can't load the cursor.
Can we just assume that xcursor_supported is always true, and refactor out places like this?",SGTM. @stapelberg Do you know of a specific platform that may not have xcursor?,True,{}
i3/i3,https://github.com/i3/i3,3955,2020-02-23T01:44:40Z,2020-02-24T07:48:59Z,2020-02-25T01:52:01Z,MERGED,True,17,116,10,https://github.com/xzfc,Assume xcb_cursor_context_new never fails,1,[],https://github.com/i3/i3/pull/3955,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/3955#issuecomment-590052304,"As I can see in libxcb-cursor code, the only way of xcb_cursor_context_new() returning non-zero is memory allocation failure (src); and libxcb-cursor already falls back to xcb_create_glyph_cursor if it can't load the cursor.
Can we just assume that xcursor_supported is always true, and refactor out places like this?","The usual culprit for not having advanced X11 features are virtual X servers such as the various VNC implementations, e.g. tigervnc.
It would probably be worthwhile to collect a list of X extensions those support. Not sure if their support varies based on compilation-time options, though.",True,{}
i3/i3,https://github.com/i3/i3,3955,2020-02-23T01:44:40Z,2020-02-24T07:48:59Z,2020-02-25T01:52:01Z,MERGED,True,17,116,10,https://github.com/xzfc,Assume xcb_cursor_context_new never fails,1,[],https://github.com/i3/i3/pull/3955,https://github.com/xzfc,4,https://github.com/i3/i3/pull/3955#issuecomment-590119855,"As I can see in libxcb-cursor code, the only way of xcb_cursor_context_new() returning non-zero is memory allocation failure (src); and libxcb-cursor already falls back to xcb_create_glyph_cursor if it can't load the cursor.
Can we just assume that xcursor_supported is always true, and refactor out places like this?",Tested under tigervnc (it seems it supports Xcursor.theme defined in xresources) and under Xephyr (it seems it is not; plain default X11 cursors were used). Still fine in both cases.,True,{}
i3/i3,https://github.com/i3/i3,3957,2020-02-28T03:16:08Z,2020-10-20T07:43:25Z,2020-10-20T07:43:25Z,MERGED,True,57,129,18,https://github.com/xzfc,clang-format: use TypenameMacros,1,[],https://github.com/i3/i3/pull/3957,https://github.com/xzfc,1,https://github.com/i3/i3/pull/3957,This commit removes line breaks and extra empty lines introduced in commit fff3f79.,This commit removes line breaks and extra empty lines introduced in commit fff3f79.,True,{}
i3/i3,https://github.com/i3/i3,3957,2020-02-28T03:16:08Z,2020-10-20T07:43:25Z,2020-10-20T07:43:25Z,MERGED,True,57,129,18,https://github.com/xzfc,clang-format: use TypenameMacros,1,[],https://github.com/i3/i3/pull/3957,https://github.com/xzfc,2,https://github.com/i3/i3/pull/3957#issuecomment-592297351,This commit removes line breaks and extra empty lines introduced in commit fff3f79.,"Oh, this option has been added in clang-format-9.0. Should we switch to a more recent version? On Debian Sid, the last available versions are 9 and 10; Ubuntu Bionic has 9.",True,{}
i3/i3,https://github.com/i3/i3,3957,2020-02-28T03:16:08Z,2020-10-20T07:43:25Z,2020-10-20T07:43:25Z,MERGED,True,57,129,18,https://github.com/xzfc,clang-format: use TypenameMacros,1,[],https://github.com/i3/i3/pull/3957,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/3957#issuecomment-616728737,This commit removes line breaks and extra empty lines introduced in commit fff3f79.,I agree we can update clang-format,True,{}
i3/i3,https://github.com/i3/i3,3960,2020-02-29T19:58:50Z,2020-03-01T00:29:30Z,2020-03-01T02:10:29Z,MERGED,True,1,5,2,https://github.com/ammgws,Remove comment referencing old source code,1,[],https://github.com/i3/i3/pull/3960,https://github.com/ammgws,1,https://github.com/i3/i3/pull/3960,"Behaviour was changed in f691a55, so the comment is invalid.","Behaviour was changed in f691a55, so the comment is invalid.",True,{}
i3/i3,https://github.com/i3/i3,3960,2020-02-29T19:58:50Z,2020-03-01T00:29:30Z,2020-03-01T02:10:29Z,MERGED,True,1,5,2,https://github.com/ammgws,Remove comment referencing old source code,1,[],https://github.com/i3/i3/pull/3960,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3960#issuecomment-593022990,"Behaviour was changed in f691a55, so the comment is invalid.",Much appreciated :),True,{}
i3/i3,https://github.com/i3/i3,3961,2020-02-29T20:06:46Z,2020-03-01T00:28:58Z,2020-03-01T02:12:28Z,MERGED,True,1,1,1,https://github.com/ammgws,i3-nagbar: Use _PATH_BSHELL,1,[],https://github.com/i3/i3/pull/3961,https://github.com/ammgws,1,https://github.com/i3/i3/pull/3961,It seems like this may have been forgotten in f691a55,It seems like this may have been forgotten in f691a55,True,{}
i3/i3,https://github.com/i3/i3,3961,2020-02-29T20:06:46Z,2020-03-01T00:28:58Z,2020-03-01T02:12:28Z,MERGED,True,1,1,1,https://github.com/ammgws,i3-nagbar: Use _PATH_BSHELL,1,[],https://github.com/i3/i3/pull/3961,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3961#issuecomment-593022954,It seems like this may have been forgotten in f691a55,Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3963,2020-03-01T01:32:11Z,,2020-10-20T07:23:09Z,OPEN,False,51,22,1,https://github.com/panovotn,i3-input: Make frame configurable with arguments,1,['waiting'],https://github.com/i3/i3/pull/3963,https://github.com/panovotn,1,https://github.com/i3/i3/pull/3963,"Add command line arguments to the i3-input tool setting
i3-input frame options. New arguments listed below.
-C/--fg-color       foreground color (eg. #ffffff)
-B/--bg-color       background color (eg. #ffffff)
-W/--border-color   border color     (eg. #ffffff)
-S/--padding        padding in (logical) pixels
-b/--border         border width in (logical) pixels","Add command line arguments to the i3-input tool setting
i3-input frame options. New arguments listed below.
-C/--fg-color       foreground color (eg. #ffffff)
-B/--bg-color       background color (eg. #ffffff)
-W/--border-color   border color     (eg. #ffffff)
-S/--padding        padding in (logical) pixels
-b/--border         border width in (logical) pixels",True,{'THUMBS_UP': ['https://github.com/elig0n']}
i3/i3,https://github.com/i3/i3,3963,2020-03-01T01:32:11Z,,2020-10-20T07:23:09Z,OPEN,False,51,22,1,https://github.com/panovotn,i3-input: Make frame configurable with arguments,1,['waiting'],https://github.com/i3/i3/pull/3963,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3963#issuecomment-616729425,"Add command line arguments to the i3-input tool setting
i3-input frame options. New arguments listed below.
-C/--fg-color       foreground color (eg. #ffffff)
-B/--bg-color       background color (eg. #ffffff)
-W/--border-color   border color     (eg. #ffffff)
-S/--padding        padding in (logical) pixels
-b/--border         border width in (logical) pixels",@Airblader are we interested in this?,True,{}
i3/i3,https://github.com/i3/i3,3963,2020-03-01T01:32:11Z,,2020-10-20T07:23:09Z,OPEN,False,51,22,1,https://github.com/panovotn,i3-input: Make frame configurable with arguments,1,['waiting'],https://github.com/i3/i3/pull/3963,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/3963#issuecomment-616731040,"Add command line arguments to the i3-input tool setting
i3-input frame options. New arguments listed below.
-C/--fg-color       foreground color (eg. #ffffff)
-B/--bg-color       background color (eg. #ffffff)
-W/--border-color   border color     (eg. #ffffff)
-S/--padding        padding in (logical) pixels
-b/--border         border width in (logical) pixels","I feel that i3-input has better third-party alternatives and that we should put it in maintenance mode. Maybe even officially deprecate it. That said, this is not a horrible addition of complexity.",True,{}
i3/i3,https://github.com/i3/i3,3963,2020-03-01T01:32:11Z,,2020-10-20T07:23:09Z,OPEN,False,51,22,1,https://github.com/panovotn,i3-input: Make frame configurable with arguments,1,['waiting'],https://github.com/i3/i3/pull/3963,https://github.com/Airblader,4,https://github.com/i3/i3/pull/3963#issuecomment-616739979,"Add command line arguments to the i3-input tool setting
i3-input frame options. New arguments listed below.
-C/--fg-color       foreground color (eg. #ffffff)
-B/--bg-color       background color (eg. #ffffff)
-W/--border-color   border color     (eg. #ffffff)
-S/--padding        padding in (logical) pixels
-b/--border         border width in (logical) pixels","I agree that we don't intend i3-input to compete with the other tools and we see it as a bit of a reference implementation rather than a full fledged tool, but I've seen people use it quite happily over time. I think adding this is within reason in terms of complexity.
I don't think we'll actually deprecate i3-input anytime soon, though.",True,{'THUMBS_UP': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,3964,2020-03-01T03:48:37Z,2020-03-01T07:28:29Z,2020-03-01T07:29:18Z,MERGED,True,2,2,1,https://github.com/ammgws,Use _PATH_BSHELL in nagbar script as well,2,[],https://github.com/i3/i3/pull/3964,https://github.com/ammgws,1,https://github.com/i3/i3/pull/3964,"In addition to #3961, we might as well do it here as well?","In addition to #3961, we might as well do it here as well?",True,{}
i3/i3,https://github.com/i3/i3,3965,2020-03-02T10:38:28Z,2020-04-10T12:00:27Z,2020-04-10T12:00:27Z,CLOSED,False,3,0,1,https://github.com/medisun,refresh tree and update WM on workspace moving to output,1,[],https://github.com/i3/i3/pull/3965,https://github.com/medisun,1,https://github.com/i3/i3/pull/3965,"There was a problem while using multi-head setup with 2 monitors (via intel-virtual-output). Focusing a workspace going crazy after moving workspace to that virtual output. A wrong workspace was focused instead of. Commands like these were used wmctrl -a 'HttpRequester', jumpapp -i Chromium /usr/bin/chromium","There was a problem while using multi-head setup with 2 monitors (via intel-virtual-output). Focusing a workspace going crazy after moving workspace to that virtual output. A wrong workspace was focused instead of. Commands like these were used wmctrl -a 'HttpRequester', jumpapp -i Chromium /usr/bin/chromium",True,{}
i3/i3,https://github.com/i3/i3,3965,2020-03-02T10:38:28Z,2020-04-10T12:00:27Z,2020-04-10T12:00:27Z,CLOSED,False,3,0,1,https://github.com/medisun,refresh tree and update WM on workspace moving to output,1,[],https://github.com/i3/i3/pull/3965,https://github.com/Airblader,2,https://github.com/i3/i3/pull/3965#issuecomment-593567767,"There was a problem while using multi-head setup with 2 monitors (via intel-virtual-output). Focusing a workspace going crazy after moving workspace to that virtual output. A wrong workspace was focused instead of. Commands like these were used wmctrl -a 'HttpRequester', jumpapp -i Chromium /usr/bin/chromium","Hi,
thanks for your contribution. I have to admit that I can't quite understand your description of what is happening. Would you mind describing step by step what you did to reproduce this issue? If this is something we can reproduce it helps us understand the fix and also perhaps a test could be written for it.",True,{}
i3/i3,https://github.com/i3/i3,3969,2020-03-05T16:39:31Z,2020-05-01T07:47:27Z,2020-05-01T07:47:27Z,MERGED,True,1,1,1,None,clean up math calculating width of last tab,1,[],https://github.com/i3/i3/pull/3969,None,1,https://github.com/i3/i3/pull/3969,,,True,{'THUMBS_UP': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,3969,2020-03-05T16:39:31Z,2020-05-01T07:47:27Z,2020-05-01T07:47:27Z,MERGED,True,1,1,1,None,clean up math calculating width of last tab,1,[],https://github.com/i3/i3/pull/3969,None,2,https://github.com/i3/i3/pull/3969#issuecomment-595730262,,should be fixed now.,True,{}
i3/i3,https://github.com/i3/i3,3969,2020-03-05T16:39:31Z,2020-05-01T07:47:27Z,2020-05-01T07:47:27Z,MERGED,True,1,1,1,None,clean up math calculating width of last tab,1,[],https://github.com/i3/i3/pull/3969,https://github.com/Airblader,3,https://github.com/i3/i3/pull/3969#issuecomment-595756499,,Could you please squash the two commits into a single one? Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3969,2020-03-05T16:39:31Z,2020-05-01T07:47:27Z,2020-05-01T07:47:27Z,MERGED,True,1,1,1,None,clean up math calculating width of last tab,1,[],https://github.com/i3/i3/pull/3969,None,4,https://github.com/i3/i3/pull/3969#issuecomment-595902714,,i don't know how to do that.,True,{}
i3/i3,https://github.com/i3/i3,3969,2020-03-05T16:39:31Z,2020-05-01T07:47:27Z,2020-05-01T07:47:27Z,MERGED,True,1,1,1,None,clean up math calculating width of last tab,1,[],https://github.com/i3/i3/pull/3969,https://github.com/Airblader,5,https://github.com/i3/i3/pull/3969#issuecomment-595942406,,"You use git rebase -i HEAD~2 to tell git that you want to interactively rebase the last two commits. This brings up an editor with two lines that say ""pick"" and then the respective commit.
Change the first word of the second of your two commits to ""squash"" and then save. Git will now squash both commits together and bring up another editor to tell it what the (combined) commit message should be. By default it just puts both underneath each other. Edit this to a single, useful commit message and save.
You can use git log to make sure everything is correct. Then you'll have to push your branch again. Since the rebase rewrites the history, you'll need to force-push it git push --force.",True,{}
i3/i3,https://github.com/i3/i3,3970,2020-03-07T00:07:20Z,2020-03-09T12:01:12Z,2020-03-09T12:02:57Z,MERGED,True,12,15,3,https://github.com/ianyfan,ipc: always include marks property in TREE reply,1,[],https://github.com/i3/i3/pull/3970,https://github.com/ianyfan,1,https://github.com/i3/i3/pull/3970,Closes #3967,Closes #3967,True,{}
i3/i3,https://github.com/i3/i3,3970,2020-03-07T00:07:20Z,2020-03-09T12:01:12Z,2020-03-09T12:02:57Z,MERGED,True,12,15,3,https://github.com/ianyfan,ipc: always include marks property in TREE reply,1,[],https://github.com/i3/i3/pull/3970,https://github.com/xzfc,2,https://github.com/i3/i3/pull/3970#issuecomment-596041962,Closes #3967,Can you also fix the failing test? You can execute make check to run tests locally.,True,{}
i3/i3,https://github.com/i3/i3,3970,2020-03-07T00:07:20Z,2020-03-09T12:01:12Z,2020-03-09T12:02:57Z,MERGED,True,12,15,3,https://github.com/ianyfan,ipc: always include marks property in TREE reply,1,[],https://github.com/i3/i3/pull/3970,https://github.com/ianyfan,3,https://github.com/i3/i3/pull/3970#issuecomment-596077270,Closes #3967,I have amended the offending test cases; let me know if there's a more preferable way to do it: it's my first time doing this.,True,{}
i3/i3,https://github.com/i3/i3,3970,2020-03-07T00:07:20Z,2020-03-09T12:01:12Z,2020-03-09T12:02:57Z,MERGED,True,12,15,3,https://github.com/ianyfan,ipc: always include marks property in TREE reply,1,[],https://github.com/i3/i3/pull/3970,https://github.com/Airblader,4,https://github.com/i3/i3/pull/3970#issuecomment-596485543,Closes #3967,Thanks!,True,{}
i3/i3,https://github.com/i3/i3,3983,2020-03-31T06:56:36Z,2020-03-31T07:52:47Z,2020-03-31T08:21:34Z,MERGED,True,5,0,1,https://github.com/orestisfl,Avoid resizing fullscreen container,1,[],https://github.com/i3/i3/pull/3983,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3983,Fixes #3980,Fixes #3980,True,{}
i3/i3,https://github.com/i3/i3,3985,2020-04-03T08:11:01Z,2020-04-07T18:20:01Z,2020-04-07T18:20:05Z,MERGED,True,5,0,1,https://github.com/orestisfl,"userguide: Add button{6,7}",1,[],https://github.com/i3/i3/pull/3985,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3985,Related to #3984,Related to #3984,True,{}
i3/i3,https://github.com/i3/i3,3986,2020-04-03T18:04:35Z,2020-04-05T07:59:04Z,2020-04-17T19:12:37Z,CLOSED,False,460,14,18,https://github.com/bastidest,WIP: Support layers for managing many workspaces,6,[],https://github.com/i3/i3/pull/3986,https://github.com/bastidest,1,https://github.com/i3/i3/pull/3986,"Proposal
I want to manage large numbers of workspaces (>20), which can be grouped into different layers (default, work, uni, ...) as they are completely different tasks. I rarely switch between layers, but I switch inside layers very frequently.
Every layer has a similar structure: WS1 = webbrowser, WS2 = emacs, WS3 = docs, ...
One workspace shall be reachable from every layer, as it contains email, password manager, ...
The idea is to define layers, which make switching workspaces inside them easier.
First of all: The original behavior obviously needs to stay the same. If one chooses to define a layer, it needs to be added to the configuration. A layer is defined with the directive layer <name> <from> <to>.
Example

# switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
# ...
# layer configuration
layer uni 11 19
layer work 21 29
bindsym $mod+F1 layer default
bindsym $mod+F2 layer uni
bindsym $mod+F3 layer work
# ...

This defines a layer ""uni"" starting at workspace 11, ending at workspace 19 (inclusive) and a layer ""work"" starting at 21, ending at 29. Also there are keybindings for switching to the defined layers.
Switching

At startup, layer ""default"" is enabled, wich has no influence on any behavior
Pressing $mod+F1 will activate layer ""uni"", but do nothing else
Upon pressing $mod+1, the relative offset of the layer will be added to the switching command: workspace number 1 -> workspace number 11
Upon pressing $mod+2, the relative offset of the layer will be added to the switching command: workspace number 2 -> workspace number 12
...
Upon pressing $mod+9, the relative offset of the layer will be added to the switching command: workspace number 9 -> workspace number 19
Upon pressing $mod+0, the switch will happen normally, as the last mapped workspace is 19

Moving
""I want to move the current container to the 2nd workspace of layout 'work'"" == ""I want to move the current container to workspace 22""

$mod+F3 == layer work
$mod+shift+2 == move container to workspace number 2

TODOs

 See if there is any form of acceptance here, or if I need to maintain this seperately
 Tests
 Concept Improvements","Proposal
I want to manage large numbers of workspaces (>20), which can be grouped into different layers (default, work, uni, ...) as they are completely different tasks. I rarely switch between layers, but I switch inside layers very frequently.
Every layer has a similar structure: WS1 = webbrowser, WS2 = emacs, WS3 = docs, ...
One workspace shall be reachable from every layer, as it contains email, password manager, ...
The idea is to define layers, which make switching workspaces inside them easier.
First of all: The original behavior obviously needs to stay the same. If one chooses to define a layer, it needs to be added to the configuration. A layer is defined with the directive layer <name> <from> <to>.
Example

# switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
# ...
# layer configuration
layer uni 11 19
layer work 21 29
bindsym $mod+F1 layer default
bindsym $mod+F2 layer uni
bindsym $mod+F3 layer work
# ...

This defines a layer ""uni"" starting at workspace 11, ending at workspace 19 (inclusive) and a layer ""work"" starting at 21, ending at 29. Also there are keybindings for switching to the defined layers.
Switching

At startup, layer ""default"" is enabled, wich has no influence on any behavior
Pressing $mod+F1 will activate layer ""uni"", but do nothing else
Upon pressing $mod+1, the relative offset of the layer will be added to the switching command: workspace number 1 -> workspace number 11
Upon pressing $mod+2, the relative offset of the layer will be added to the switching command: workspace number 2 -> workspace number 12
...
Upon pressing $mod+9, the relative offset of the layer will be added to the switching command: workspace number 9 -> workspace number 19
Upon pressing $mod+0, the switch will happen normally, as the last mapped workspace is 19

Moving
""I want to move the current container to the 2nd workspace of layout 'work'"" == ""I want to move the current container to workspace 22""

$mod+F3 == layer work
$mod+shift+2 == move container to workspace number 2

TODOs

 See if there is any form of acceptance here, or if I need to maintain this seperately
 Tests
 Concept Improvements",True,"{'HEART': ['https://github.com/SuperPrower', 'https://github.com/st1064870', 'https://github.com/falkecarlsen', 'https://github.com/ismo-conguairta', 'https://github.com/Smeat', 'https://github.com/Bonnee', 'https://github.com/JonnyHaystack', 'https://github.com/MatheusMuriel', 'https://github.com/Cserny', 'https://github.com/alpha-tango-kilo', 'https://github.com/dimeritium-foil', 'https://github.com/langurmonkey', 'https://github.com/NightH4nter', 'https://github.com/scattenlaeufer', 'https://github.com/existme', 'https://github.com/matthinc', 'https://github.com/Aidan-B', 'https://github.com/gui-bo', 'https://github.com/exciteabletom', 'https://github.com/dinomacri', 'https://github.com/dyc3', 'https://github.com/shrysr', 'https://github.com/Yoyolick', 'https://github.com/jcelerier', 'https://github.com/georgesamy'], 'THUMBS_UP': ['https://github.com/jcelerier']}"
i3/i3,https://github.com/i3/i3,3986,2020-04-03T18:04:35Z,2020-04-05T07:59:04Z,2020-04-17T19:12:37Z,CLOSED,False,460,14,18,https://github.com/bastidest,WIP: Support layers for managing many workspaces,6,[],https://github.com/i3/i3/pull/3986,https://github.com/rayvermey,2,https://github.com/i3/i3/pull/3986#issuecomment-608669053,"Proposal
I want to manage large numbers of workspaces (>20), which can be grouped into different layers (default, work, uni, ...) as they are completely different tasks. I rarely switch between layers, but I switch inside layers very frequently.
Every layer has a similar structure: WS1 = webbrowser, WS2 = emacs, WS3 = docs, ...
One workspace shall be reachable from every layer, as it contains email, password manager, ...
The idea is to define layers, which make switching workspaces inside them easier.
First of all: The original behavior obviously needs to stay the same. If one chooses to define a layer, it needs to be added to the configuration. A layer is defined with the directive layer <name> <from> <to>.
Example

# switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
# ...
# layer configuration
layer uni 11 19
layer work 21 29
bindsym $mod+F1 layer default
bindsym $mod+F2 layer uni
bindsym $mod+F3 layer work
# ...

This defines a layer ""uni"" starting at workspace 11, ending at workspace 19 (inclusive) and a layer ""work"" starting at 21, ending at 29. Also there are keybindings for switching to the defined layers.
Switching

At startup, layer ""default"" is enabled, wich has no influence on any behavior
Pressing $mod+F1 will activate layer ""uni"", but do nothing else
Upon pressing $mod+1, the relative offset of the layer will be added to the switching command: workspace number 1 -> workspace number 11
Upon pressing $mod+2, the relative offset of the layer will be added to the switching command: workspace number 2 -> workspace number 12
...
Upon pressing $mod+9, the relative offset of the layer will be added to the switching command: workspace number 9 -> workspace number 19
Upon pressing $mod+0, the switch will happen normally, as the last mapped workspace is 19

Moving
""I want to move the current container to the 2nd workspace of layout 'work'"" == ""I want to move the current container to workspace 22""

$mod+F3 == layer work
$mod+shift+2 == move container to workspace number 2

TODOs

 See if there is any form of acceptance here, or if I need to maintain this seperately
 Tests
 Concept Improvements","This is really a very nice add on for i3!
Would be nice if this can be incorporated in the main i3!
Ray",True,{}
i3/i3,https://github.com/i3/i3,3986,2020-04-03T18:04:35Z,2020-04-05T07:59:04Z,2020-04-17T19:12:37Z,CLOSED,False,460,14,18,https://github.com/bastidest,WIP: Support layers for managing many workspaces,6,[],https://github.com/i3/i3/pull/3986,https://github.com/MatheusMuriel,3,https://github.com/i3/i3/pull/3986#issuecomment-608973779,"Proposal
I want to manage large numbers of workspaces (>20), which can be grouped into different layers (default, work, uni, ...) as they are completely different tasks. I rarely switch between layers, but I switch inside layers very frequently.
Every layer has a similar structure: WS1 = webbrowser, WS2 = emacs, WS3 = docs, ...
One workspace shall be reachable from every layer, as it contains email, password manager, ...
The idea is to define layers, which make switching workspaces inside them easier.
First of all: The original behavior obviously needs to stay the same. If one chooses to define a layer, it needs to be added to the configuration. A layer is defined with the directive layer <name> <from> <to>.
Example

# switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
# ...
# layer configuration
layer uni 11 19
layer work 21 29
bindsym $mod+F1 layer default
bindsym $mod+F2 layer uni
bindsym $mod+F3 layer work
# ...

This defines a layer ""uni"" starting at workspace 11, ending at workspace 19 (inclusive) and a layer ""work"" starting at 21, ending at 29. Also there are keybindings for switching to the defined layers.
Switching

At startup, layer ""default"" is enabled, wich has no influence on any behavior
Pressing $mod+F1 will activate layer ""uni"", but do nothing else
Upon pressing $mod+1, the relative offset of the layer will be added to the switching command: workspace number 1 -> workspace number 11
Upon pressing $mod+2, the relative offset of the layer will be added to the switching command: workspace number 2 -> workspace number 12
...
Upon pressing $mod+9, the relative offset of the layer will be added to the switching command: workspace number 9 -> workspace number 19
Upon pressing $mod+0, the switch will happen normally, as the last mapped workspace is 19

Moving
""I want to move the current container to the 2nd workspace of layout 'work'"" == ""I want to move the current container to workspace 22""

$mod+F3 == layer work
$mod+shift+2 == move container to workspace number 2

TODOs

 See if there is any form of acceptance here, or if I need to maintain this seperately
 Tests
 Concept Improvements",Wow its very nice!,True,{}
i3/i3,https://github.com/i3/i3,3986,2020-04-03T18:04:35Z,2020-04-05T07:59:04Z,2020-04-17T19:12:37Z,CLOSED,False,460,14,18,https://github.com/bastidest,WIP: Support layers for managing many workspaces,6,[],https://github.com/i3/i3/pull/3986,https://github.com/NightH4nter,4,https://github.com/i3/i3/pull/3986#issuecomment-609032386,"Proposal
I want to manage large numbers of workspaces (>20), which can be grouped into different layers (default, work, uni, ...) as they are completely different tasks. I rarely switch between layers, but I switch inside layers very frequently.
Every layer has a similar structure: WS1 = webbrowser, WS2 = emacs, WS3 = docs, ...
One workspace shall be reachable from every layer, as it contains email, password manager, ...
The idea is to define layers, which make switching workspaces inside them easier.
First of all: The original behavior obviously needs to stay the same. If one chooses to define a layer, it needs to be added to the configuration. A layer is defined with the directive layer <name> <from> <to>.
Example

# switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
# ...
# layer configuration
layer uni 11 19
layer work 21 29
bindsym $mod+F1 layer default
bindsym $mod+F2 layer uni
bindsym $mod+F3 layer work
# ...

This defines a layer ""uni"" starting at workspace 11, ending at workspace 19 (inclusive) and a layer ""work"" starting at 21, ending at 29. Also there are keybindings for switching to the defined layers.
Switching

At startup, layer ""default"" is enabled, wich has no influence on any behavior
Pressing $mod+F1 will activate layer ""uni"", but do nothing else
Upon pressing $mod+1, the relative offset of the layer will be added to the switching command: workspace number 1 -> workspace number 11
Upon pressing $mod+2, the relative offset of the layer will be added to the switching command: workspace number 2 -> workspace number 12
...
Upon pressing $mod+9, the relative offset of the layer will be added to the switching command: workspace number 9 -> workspace number 19
Upon pressing $mod+0, the switch will happen normally, as the last mapped workspace is 19

Moving
""I want to move the current container to the 2nd workspace of layout 'work'"" == ""I want to move the current container to workspace 22""

$mod+F3 == layer work
$mod+shift+2 == move container to workspace number 2

TODOs

 See if there is any form of acceptance here, or if I need to maintain this seperately
 Tests
 Concept Improvements",This would be a pretty good addition. Ideally if it's gonna be compatible with i3-gaps.,True,{}
i3/i3,https://github.com/i3/i3,3986,2020-04-03T18:04:35Z,2020-04-05T07:59:04Z,2020-04-17T19:12:37Z,CLOSED,False,460,14,18,https://github.com/bastidest,WIP: Support layers for managing many workspaces,6,[],https://github.com/i3/i3/pull/3986,https://github.com/existme,5,https://github.com/i3/i3/pull/3986#issuecomment-609040639,"Proposal
I want to manage large numbers of workspaces (>20), which can be grouped into different layers (default, work, uni, ...) as they are completely different tasks. I rarely switch between layers, but I switch inside layers very frequently.
Every layer has a similar structure: WS1 = webbrowser, WS2 = emacs, WS3 = docs, ...
One workspace shall be reachable from every layer, as it contains email, password manager, ...
The idea is to define layers, which make switching workspaces inside them easier.
First of all: The original behavior obviously needs to stay the same. If one chooses to define a layer, it needs to be added to the configuration. A layer is defined with the directive layer <name> <from> <to>.
Example

# switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
# ...
# layer configuration
layer uni 11 19
layer work 21 29
bindsym $mod+F1 layer default
bindsym $mod+F2 layer uni
bindsym $mod+F3 layer work
# ...

This defines a layer ""uni"" starting at workspace 11, ending at workspace 19 (inclusive) and a layer ""work"" starting at 21, ending at 29. Also there are keybindings for switching to the defined layers.
Switching

At startup, layer ""default"" is enabled, wich has no influence on any behavior
Pressing $mod+F1 will activate layer ""uni"", but do nothing else
Upon pressing $mod+1, the relative offset of the layer will be added to the switching command: workspace number 1 -> workspace number 11
Upon pressing $mod+2, the relative offset of the layer will be added to the switching command: workspace number 2 -> workspace number 12
...
Upon pressing $mod+9, the relative offset of the layer will be added to the switching command: workspace number 9 -> workspace number 19
Upon pressing $mod+0, the switch will happen normally, as the last mapped workspace is 19

Moving
""I want to move the current container to the 2nd workspace of layout 'work'"" == ""I want to move the current container to workspace 22""

$mod+F3 == layer work
$mod+shift+2 == move container to workspace number 2

TODOs

 See if there is any form of acceptance here, or if I need to maintain this seperately
 Tests
 Concept Improvements","Great addition, thank you. Key binding for many workspaces opens up i3 for lots of new possibilities",True,{'THUMBS_UP': ['https://github.com/MatheusMuriel']}
i3/i3,https://github.com/i3/i3,3986,2020-04-03T18:04:35Z,2020-04-05T07:59:04Z,2020-04-17T19:12:37Z,CLOSED,False,460,14,18,https://github.com/bastidest,WIP: Support layers for managing many workspaces,6,[],https://github.com/i3/i3/pull/3986,https://github.com/matthinc,6,https://github.com/i3/i3/pull/3986#issuecomment-609078938,"Proposal
I want to manage large numbers of workspaces (>20), which can be grouped into different layers (default, work, uni, ...) as they are completely different tasks. I rarely switch between layers, but I switch inside layers very frequently.
Every layer has a similar structure: WS1 = webbrowser, WS2 = emacs, WS3 = docs, ...
One workspace shall be reachable from every layer, as it contains email, password manager, ...
The idea is to define layers, which make switching workspaces inside them easier.
First of all: The original behavior obviously needs to stay the same. If one chooses to define a layer, it needs to be added to the configuration. A layer is defined with the directive layer <name> <from> <to>.
Example

# switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
# ...
# layer configuration
layer uni 11 19
layer work 21 29
bindsym $mod+F1 layer default
bindsym $mod+F2 layer uni
bindsym $mod+F3 layer work
# ...

This defines a layer ""uni"" starting at workspace 11, ending at workspace 19 (inclusive) and a layer ""work"" starting at 21, ending at 29. Also there are keybindings for switching to the defined layers.
Switching

At startup, layer ""default"" is enabled, wich has no influence on any behavior
Pressing $mod+F1 will activate layer ""uni"", but do nothing else
Upon pressing $mod+1, the relative offset of the layer will be added to the switching command: workspace number 1 -> workspace number 11
Upon pressing $mod+2, the relative offset of the layer will be added to the switching command: workspace number 2 -> workspace number 12
...
Upon pressing $mod+9, the relative offset of the layer will be added to the switching command: workspace number 9 -> workspace number 19
Upon pressing $mod+0, the switch will happen normally, as the last mapped workspace is 19

Moving
""I want to move the current container to the 2nd workspace of layout 'work'"" == ""I want to move the current container to workspace 22""

$mod+F3 == layer work
$mod+shift+2 == move container to workspace number 2

TODOs

 See if there is any form of acceptance here, or if I need to maintain this seperately
 Tests
 Concept Improvements",Good idea! I really hope that this will become an official feature!,True,{}
i3/i3,https://github.com/i3/i3,3986,2020-04-03T18:04:35Z,2020-04-05T07:59:04Z,2020-04-17T19:12:37Z,CLOSED,False,460,14,18,https://github.com/bastidest,WIP: Support layers for managing many workspaces,6,[],https://github.com/i3/i3/pull/3986,https://github.com/NightH4nter,7,https://github.com/i3/i3/pull/3986#issuecomment-609081926,"Proposal
I want to manage large numbers of workspaces (>20), which can be grouped into different layers (default, work, uni, ...) as they are completely different tasks. I rarely switch between layers, but I switch inside layers very frequently.
Every layer has a similar structure: WS1 = webbrowser, WS2 = emacs, WS3 = docs, ...
One workspace shall be reachable from every layer, as it contains email, password manager, ...
The idea is to define layers, which make switching workspaces inside them easier.
First of all: The original behavior obviously needs to stay the same. If one chooses to define a layer, it needs to be added to the configuration. A layer is defined with the directive layer <name> <from> <to>.
Example

# switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
# ...
# layer configuration
layer uni 11 19
layer work 21 29
bindsym $mod+F1 layer default
bindsym $mod+F2 layer uni
bindsym $mod+F3 layer work
# ...

This defines a layer ""uni"" starting at workspace 11, ending at workspace 19 (inclusive) and a layer ""work"" starting at 21, ending at 29. Also there are keybindings for switching to the defined layers.
Switching

At startup, layer ""default"" is enabled, wich has no influence on any behavior
Pressing $mod+F1 will activate layer ""uni"", but do nothing else
Upon pressing $mod+1, the relative offset of the layer will be added to the switching command: workspace number 1 -> workspace number 11
Upon pressing $mod+2, the relative offset of the layer will be added to the switching command: workspace number 2 -> workspace number 12
...
Upon pressing $mod+9, the relative offset of the layer will be added to the switching command: workspace number 9 -> workspace number 19
Upon pressing $mod+0, the switch will happen normally, as the last mapped workspace is 19

Moving
""I want to move the current container to the 2nd workspace of layout 'work'"" == ""I want to move the current container to workspace 22""

$mod+F3 == layer work
$mod+shift+2 == move container to workspace number 2

TODOs

 See if there is any form of acceptance here, or if I need to maintain this seperately
 Tests
 Concept Improvements",Probably another TODO is to make it possible to move a window from a workspace on one layer to a workpace on another layer.,True,{}
i3/i3,https://github.com/i3/i3,3986,2020-04-03T18:04:35Z,2020-04-05T07:59:04Z,2020-04-17T19:12:37Z,CLOSED,False,460,14,18,https://github.com/bastidest,WIP: Support layers for managing many workspaces,6,[],https://github.com/i3/i3/pull/3986,https://github.com/bastidest,8,https://github.com/i3/i3/pull/3986#issuecomment-609082309,"Proposal
I want to manage large numbers of workspaces (>20), which can be grouped into different layers (default, work, uni, ...) as they are completely different tasks. I rarely switch between layers, but I switch inside layers very frequently.
Every layer has a similar structure: WS1 = webbrowser, WS2 = emacs, WS3 = docs, ...
One workspace shall be reachable from every layer, as it contains email, password manager, ...
The idea is to define layers, which make switching workspaces inside them easier.
First of all: The original behavior obviously needs to stay the same. If one chooses to define a layer, it needs to be added to the configuration. A layer is defined with the directive layer <name> <from> <to>.
Example

# switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
# ...
# layer configuration
layer uni 11 19
layer work 21 29
bindsym $mod+F1 layer default
bindsym $mod+F2 layer uni
bindsym $mod+F3 layer work
# ...

This defines a layer ""uni"" starting at workspace 11, ending at workspace 19 (inclusive) and a layer ""work"" starting at 21, ending at 29. Also there are keybindings for switching to the defined layers.
Switching

At startup, layer ""default"" is enabled, wich has no influence on any behavior
Pressing $mod+F1 will activate layer ""uni"", but do nothing else
Upon pressing $mod+1, the relative offset of the layer will be added to the switching command: workspace number 1 -> workspace number 11
Upon pressing $mod+2, the relative offset of the layer will be added to the switching command: workspace number 2 -> workspace number 12
...
Upon pressing $mod+9, the relative offset of the layer will be added to the switching command: workspace number 9 -> workspace number 19
Upon pressing $mod+0, the switch will happen normally, as the last mapped workspace is 19

Moving
""I want to move the current container to the 2nd workspace of layout 'work'"" == ""I want to move the current container to workspace 22""

$mod+F3 == layer work
$mod+shift+2 == move container to workspace number 2

TODOs

 See if there is any form of acceptance here, or if I need to maintain this seperately
 Tests
 Concept Improvements","@NightH4nter That already works. To move a window to another layer, just switch to the layer and press your ""move workspace"" command.
Example: ""I want to move the current container to workspace 23"" -> $mod+FN2, $mod+shift+3",True,{}
i3/i3,https://github.com/i3/i3,3986,2020-04-03T18:04:35Z,2020-04-05T07:59:04Z,2020-04-17T19:12:37Z,CLOSED,False,460,14,18,https://github.com/bastidest,WIP: Support layers for managing many workspaces,6,[],https://github.com/i3/i3/pull/3986,https://github.com/NightH4nter,9,https://github.com/i3/i3/pull/3986#issuecomment-609084900,"Proposal
I want to manage large numbers of workspaces (>20), which can be grouped into different layers (default, work, uni, ...) as they are completely different tasks. I rarely switch between layers, but I switch inside layers very frequently.
Every layer has a similar structure: WS1 = webbrowser, WS2 = emacs, WS3 = docs, ...
One workspace shall be reachable from every layer, as it contains email, password manager, ...
The idea is to define layers, which make switching workspaces inside them easier.
First of all: The original behavior obviously needs to stay the same. If one chooses to define a layer, it needs to be added to the configuration. A layer is defined with the directive layer <name> <from> <to>.
Example

# switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
# ...
# layer configuration
layer uni 11 19
layer work 21 29
bindsym $mod+F1 layer default
bindsym $mod+F2 layer uni
bindsym $mod+F3 layer work
# ...

This defines a layer ""uni"" starting at workspace 11, ending at workspace 19 (inclusive) and a layer ""work"" starting at 21, ending at 29. Also there are keybindings for switching to the defined layers.
Switching

At startup, layer ""default"" is enabled, wich has no influence on any behavior
Pressing $mod+F1 will activate layer ""uni"", but do nothing else
Upon pressing $mod+1, the relative offset of the layer will be added to the switching command: workspace number 1 -> workspace number 11
Upon pressing $mod+2, the relative offset of the layer will be added to the switching command: workspace number 2 -> workspace number 12
...
Upon pressing $mod+9, the relative offset of the layer will be added to the switching command: workspace number 9 -> workspace number 19
Upon pressing $mod+0, the switch will happen normally, as the last mapped workspace is 19

Moving
""I want to move the current container to the 2nd workspace of layout 'work'"" == ""I want to move the current container to workspace 22""

$mod+F3 == layer work
$mod+shift+2 == move container to workspace number 2

TODOs

 See if there is any form of acceptance here, or if I need to maintain this seperately
 Tests
 Concept Improvements","@NightH4nter That already works. To move a window to another layer, just switch to the layer and press your ""move workspace"" command.
Example: ""I want to move the current container to workspace 23"" -> $mod+FN2, $mod+shift+3

Okay, I understand. Nice!",True,{}
i3/i3,https://github.com/i3/i3,3986,2020-04-03T18:04:35Z,2020-04-05T07:59:04Z,2020-04-17T19:12:37Z,CLOSED,False,460,14,18,https://github.com/bastidest,WIP: Support layers for managing many workspaces,6,[],https://github.com/i3/i3/pull/3986,https://github.com/jpsala,10,https://github.com/i3/i3/pull/3986#issuecomment-609091707,"Proposal
I want to manage large numbers of workspaces (>20), which can be grouped into different layers (default, work, uni, ...) as they are completely different tasks. I rarely switch between layers, but I switch inside layers very frequently.
Every layer has a similar structure: WS1 = webbrowser, WS2 = emacs, WS3 = docs, ...
One workspace shall be reachable from every layer, as it contains email, password manager, ...
The idea is to define layers, which make switching workspaces inside them easier.
First of all: The original behavior obviously needs to stay the same. If one chooses to define a layer, it needs to be added to the configuration. A layer is defined with the directive layer <name> <from> <to>.
Example

# switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
# ...
# layer configuration
layer uni 11 19
layer work 21 29
bindsym $mod+F1 layer default
bindsym $mod+F2 layer uni
bindsym $mod+F3 layer work
# ...

This defines a layer ""uni"" starting at workspace 11, ending at workspace 19 (inclusive) and a layer ""work"" starting at 21, ending at 29. Also there are keybindings for switching to the defined layers.
Switching

At startup, layer ""default"" is enabled, wich has no influence on any behavior
Pressing $mod+F1 will activate layer ""uni"", but do nothing else
Upon pressing $mod+1, the relative offset of the layer will be added to the switching command: workspace number 1 -> workspace number 11
Upon pressing $mod+2, the relative offset of the layer will be added to the switching command: workspace number 2 -> workspace number 12
...
Upon pressing $mod+9, the relative offset of the layer will be added to the switching command: workspace number 9 -> workspace number 19
Upon pressing $mod+0, the switch will happen normally, as the last mapped workspace is 19

Moving
""I want to move the current container to the 2nd workspace of layout 'work'"" == ""I want to move the current container to workspace 22""

$mod+F3 == layer work
$mod+shift+2 == move container to workspace number 2

TODOs

 See if there is any form of acceptance here, or if I need to maintain this seperately
 Tests
 Concept Improvements",I like it!,True,{}
i3/i3,https://github.com/i3/i3,3986,2020-04-03T18:04:35Z,2020-04-05T07:59:04Z,2020-04-17T19:12:37Z,CLOSED,False,460,14,18,https://github.com/bastidest,WIP: Support layers for managing many workspaces,6,[],https://github.com/i3/i3/pull/3986,https://github.com/Airblader,11,https://github.com/i3/i3/pull/3986#issuecomment-609375715,"Proposal
I want to manage large numbers of workspaces (>20), which can be grouped into different layers (default, work, uni, ...) as they are completely different tasks. I rarely switch between layers, but I switch inside layers very frequently.
Every layer has a similar structure: WS1 = webbrowser, WS2 = emacs, WS3 = docs, ...
One workspace shall be reachable from every layer, as it contains email, password manager, ...
The idea is to define layers, which make switching workspaces inside them easier.
First of all: The original behavior obviously needs to stay the same. If one chooses to define a layer, it needs to be added to the configuration. A layer is defined with the directive layer <name> <from> <to>.
Example

# switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
# ...
# layer configuration
layer uni 11 19
layer work 21 29
bindsym $mod+F1 layer default
bindsym $mod+F2 layer uni
bindsym $mod+F3 layer work
# ...

This defines a layer ""uni"" starting at workspace 11, ending at workspace 19 (inclusive) and a layer ""work"" starting at 21, ending at 29. Also there are keybindings for switching to the defined layers.
Switching

At startup, layer ""default"" is enabled, wich has no influence on any behavior
Pressing $mod+F1 will activate layer ""uni"", but do nothing else
Upon pressing $mod+1, the relative offset of the layer will be added to the switching command: workspace number 1 -> workspace number 11
Upon pressing $mod+2, the relative offset of the layer will be added to the switching command: workspace number 2 -> workspace number 12
...
Upon pressing $mod+9, the relative offset of the layer will be added to the switching command: workspace number 9 -> workspace number 19
Upon pressing $mod+0, the switch will happen normally, as the last mapped workspace is 19

Moving
""I want to move the current container to the 2nd workspace of layout 'work'"" == ""I want to move the current container to workspace 22""

$mod+F3 == layer work
$mod+shift+2 == move container to workspace number 2

TODOs

 See if there is any form of acceptance here, or if I need to maintain this seperately
 Tests
 Concept Improvements","Thanks for bringing this up and making a PR! We have seen questions surrounding this topic a few times in the past and I can see the value and am open to such a concept. However, I'm not really happy with the specific proposal in this PR as it uses a very static configuration, and I can already see that people would want to modify this at runtime.
Out of curiosity: what happens if I have layers 1—10, 11—20, 21—30 and while in the first layer I open workspace 15? Simply using an offset will overlap this into another layer, won't it?
A feature like this comes with quite a bit of configuration and/or command surface, which means it is a significant complexity driver. Therefore I think we need to carefully discuss an approach for this.
For example, we could omit any kind of upfront config and instead just have a layer foo command which creates the layer on the fly. All workspace management happens entirely inside the layer, no matter the workspace number etc. Then there is a single move workspace to layer command. Immediate questions coming to my mind:

Do we even really need to support moving windows between layers individually? This would be a significant driver in the command surface. Using command criteria like marks, con_id etc would allow this without modification on the command syntax.
How to handle a new window which relates to layer A while we are on layer B? Do we show it in layer A (= not visible to user), layer B (= breaks layer assignment for the app), automatically switch to layer A and show it there (= can be annoying)? Does it have to be configurable?
Do we treat window activations on other layers just like we currently do window activations on non visible workspaces?
How to handle specific requests to focus a window on another layer? Automatically switch to it? Or reject the request? I think this one is tricky, the correct answer probably is ""it depends"".
On EWMH/ICCCM side we must expose all workspaces regardless of group I think or else we'd break specs. This will cause bars to always show all workspaces unless they implement specific support for it (unfortunately I don't think there is a spec for this to implement against). i3bar would of course be such a client that needs to handle it.
Given that, can something like stickiness even be kept in a spec-compliant way? I assume we don't want sticky across layers (would also be even more complex), but not doing so probably breaks its spec as the window will not be shown on its output. We have to read the spec to see if this is OK, or discuss not allowing sticky on inactive layers.
Do we keep workspace to output assignments as-is? This means this config is valid across all layers individually.

There's probably a whole lot more.

In summary I hope you can see this isn't too trivial of an issue. However, I do hear the support for it in the community. Therefore I will close this PR and ask for someone to open a feature request issue with a proposal and ideally addressing various scenarios with examples. A topic like this needs to he spec'd out in a lot of detail before we can ship it. At this stage the PR is not yet helpful I think as we first need to find a good direction. Thanks!",True,"{'THUMBS_UP': ['https://github.com/orestisfl', 'https://github.com/bastidest', 'https://github.com/dyc3']}"
i3/i3,https://github.com/i3/i3,3986,2020-04-03T18:04:35Z,2020-04-05T07:59:04Z,2020-04-17T19:12:37Z,CLOSED,False,460,14,18,https://github.com/bastidest,WIP: Support layers for managing many workspaces,6,[],https://github.com/i3/i3/pull/3986,https://github.com/orestisfl,12,https://github.com/i3/i3/pull/3986#issuecomment-609401285,"Proposal
I want to manage large numbers of workspaces (>20), which can be grouped into different layers (default, work, uni, ...) as they are completely different tasks. I rarely switch between layers, but I switch inside layers very frequently.
Every layer has a similar structure: WS1 = webbrowser, WS2 = emacs, WS3 = docs, ...
One workspace shall be reachable from every layer, as it contains email, password manager, ...
The idea is to define layers, which make switching workspaces inside them easier.
First of all: The original behavior obviously needs to stay the same. If one chooses to define a layer, it needs to be added to the configuration. A layer is defined with the directive layer <name> <from> <to>.
Example

# switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
# ...
# layer configuration
layer uni 11 19
layer work 21 29
bindsym $mod+F1 layer default
bindsym $mod+F2 layer uni
bindsym $mod+F3 layer work
# ...

This defines a layer ""uni"" starting at workspace 11, ending at workspace 19 (inclusive) and a layer ""work"" starting at 21, ending at 29. Also there are keybindings for switching to the defined layers.
Switching

At startup, layer ""default"" is enabled, wich has no influence on any behavior
Pressing $mod+F1 will activate layer ""uni"", but do nothing else
Upon pressing $mod+1, the relative offset of the layer will be added to the switching command: workspace number 1 -> workspace number 11
Upon pressing $mod+2, the relative offset of the layer will be added to the switching command: workspace number 2 -> workspace number 12
...
Upon pressing $mod+9, the relative offset of the layer will be added to the switching command: workspace number 9 -> workspace number 19
Upon pressing $mod+0, the switch will happen normally, as the last mapped workspace is 19

Moving
""I want to move the current container to the 2nd workspace of layout 'work'"" == ""I want to move the current container to workspace 22""

$mod+F3 == layer work
$mod+shift+2 == move container to workspace number 2

TODOs

 See if there is any form of acceptance here, or if I need to maintain this seperately
 Tests
 Concept Improvements","I believe this functionality can be implemented through an IPC script, which would be more flexible and maintainable.

This will cause bars to always show all workspaces unless they implement specific support for it

For this, we have #2333 / #3818",True,{}
i3/i3,https://github.com/i3/i3,3986,2020-04-03T18:04:35Z,2020-04-05T07:59:04Z,2020-04-17T19:12:37Z,CLOSED,False,460,14,18,https://github.com/bastidest,WIP: Support layers for managing many workspaces,6,[],https://github.com/i3/i3/pull/3986,https://github.com/Airblader,13,https://github.com/i3/i3/pull/3986#issuecomment-609417269,"Proposal
I want to manage large numbers of workspaces (>20), which can be grouped into different layers (default, work, uni, ...) as they are completely different tasks. I rarely switch between layers, but I switch inside layers very frequently.
Every layer has a similar structure: WS1 = webbrowser, WS2 = emacs, WS3 = docs, ...
One workspace shall be reachable from every layer, as it contains email, password manager, ...
The idea is to define layers, which make switching workspaces inside them easier.
First of all: The original behavior obviously needs to stay the same. If one chooses to define a layer, it needs to be added to the configuration. A layer is defined with the directive layer <name> <from> <to>.
Example

# switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
# ...
# layer configuration
layer uni 11 19
layer work 21 29
bindsym $mod+F1 layer default
bindsym $mod+F2 layer uni
bindsym $mod+F3 layer work
# ...

This defines a layer ""uni"" starting at workspace 11, ending at workspace 19 (inclusive) and a layer ""work"" starting at 21, ending at 29. Also there are keybindings for switching to the defined layers.
Switching

At startup, layer ""default"" is enabled, wich has no influence on any behavior
Pressing $mod+F1 will activate layer ""uni"", but do nothing else
Upon pressing $mod+1, the relative offset of the layer will be added to the switching command: workspace number 1 -> workspace number 11
Upon pressing $mod+2, the relative offset of the layer will be added to the switching command: workspace number 2 -> workspace number 12
...
Upon pressing $mod+9, the relative offset of the layer will be added to the switching command: workspace number 9 -> workspace number 19
Upon pressing $mod+0, the switch will happen normally, as the last mapped workspace is 19

Moving
""I want to move the current container to the 2nd workspace of layout 'work'"" == ""I want to move the current container to workspace 22""

$mod+F3 == layer work
$mod+shift+2 == move container to workspace number 2

TODOs

 See if there is any form of acceptance here, or if I need to maintain this seperately
 Tests
 Concept Improvements","I believe this functionality can be implemented through an IPC script

This was my initial thought also, but I'm actually not sure how convenient that would be. But definitely worth a shot and in fact this has been done before (I never tried it out myself though).",True,{}
i3/i3,https://github.com/i3/i3,3986,2020-04-03T18:04:35Z,2020-04-05T07:59:04Z,2020-04-17T19:12:37Z,CLOSED,False,460,14,18,https://github.com/bastidest,WIP: Support layers for managing many workspaces,6,[],https://github.com/i3/i3/pull/3986,https://github.com/bastidest,14,https://github.com/i3/i3/pull/3986#issuecomment-609430389,"Proposal
I want to manage large numbers of workspaces (>20), which can be grouped into different layers (default, work, uni, ...) as they are completely different tasks. I rarely switch between layers, but I switch inside layers very frequently.
Every layer has a similar structure: WS1 = webbrowser, WS2 = emacs, WS3 = docs, ...
One workspace shall be reachable from every layer, as it contains email, password manager, ...
The idea is to define layers, which make switching workspaces inside them easier.
First of all: The original behavior obviously needs to stay the same. If one chooses to define a layer, it needs to be added to the configuration. A layer is defined with the directive layer <name> <from> <to>.
Example

# switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
# ...
# layer configuration
layer uni 11 19
layer work 21 29
bindsym $mod+F1 layer default
bindsym $mod+F2 layer uni
bindsym $mod+F3 layer work
# ...

This defines a layer ""uni"" starting at workspace 11, ending at workspace 19 (inclusive) and a layer ""work"" starting at 21, ending at 29. Also there are keybindings for switching to the defined layers.
Switching

At startup, layer ""default"" is enabled, wich has no influence on any behavior
Pressing $mod+F1 will activate layer ""uni"", but do nothing else
Upon pressing $mod+1, the relative offset of the layer will be added to the switching command: workspace number 1 -> workspace number 11
Upon pressing $mod+2, the relative offset of the layer will be added to the switching command: workspace number 2 -> workspace number 12
...
Upon pressing $mod+9, the relative offset of the layer will be added to the switching command: workspace number 9 -> workspace number 19
Upon pressing $mod+0, the switch will happen normally, as the last mapped workspace is 19

Moving
""I want to move the current container to the 2nd workspace of layout 'work'"" == ""I want to move the current container to workspace 22""

$mod+F3 == layer work
$mod+shift+2 == move container to workspace number 2

TODOs

 See if there is any form of acceptance here, or if I need to maintain this seperately
 Tests
 Concept Improvements","@Airblader
Thank you for taking the time to read the proposal! I too was surprised by the community feedback.

Out of curiosity: what happens if I have layers 1—10, 11—20, 21—30 and while in the first layer I open workspace 15? Simply using an offset will overlap this into another layer, won't it?

As there is only one active layer at a time, the concept of ""other layers"" does not exist. When layer one (1-10) is enabled and you switch to WS15, you switch to WS15. The layer only affects commands in the range.

A feature like this comes with quite a bit of configuration and/or command surface, which means it is a significant complexity driver. Therefore I think we need to carefully discuss an approach for this.

I completely agree on that, it was meant as a immediate solution for me and as input for the community.

Then there is a single move workspace to layer command.

This is the exact opposite of my idea, as the layers are completely transparent. Adding another non-concept would require too much modifications. For more elaborate concepts there is always IPC.

Do we even really need to support moving windows between layers individually?

See above.

How to handle a new window which relates to layer A while we are on layer B?

Again. No handling needed, as the layers are a transparent concept.

Do we treat window activations on other layers just like we currently do window activations on non visible workspaces?

Exactly. The only thing the layers do is to give a visual indication of the current layer range and make switching inside a layer easier.

How to handle specific requests to focus a window on another layer?

Valid point. From my perspective, I'd never touch the current active layer when doing anything.
I think you get my point. My idea was to keep the layers as non-invasive as possible in order to not change any existing behavior.
@orestisfl

I believe this functionality can be implemented through an IPC script, which would be more flexible and maintainable.

In fact this was my first shot at the problem, but I quickly hit obstacles. Im sure it can be done, but having to rely on a external daemon for correct window switching behavior is not acceptable to me. Also I don't know how far the i3bar can be customized to show the current active layer with their respective workspaces.
Thank you everyone for taking the time. I will definetly keep the fork updated, as I now depend on it 😅",True,"{'THUMBS_UP': ['https://github.com/gui-bo', 'https://github.com/NightH4nter', 'https://github.com/JonnyHaystack', 'https://github.com/MatheusMuriel']}"
i3/i3,https://github.com/i3/i3,3986,2020-04-03T18:04:35Z,2020-04-05T07:59:04Z,2020-04-17T19:12:37Z,CLOSED,False,460,14,18,https://github.com/bastidest,WIP: Support layers for managing many workspaces,6,[],https://github.com/i3/i3/pull/3986,https://github.com/Ricocotam,15,https://github.com/i3/i3/pull/3986#issuecomment-613319970,"Proposal
I want to manage large numbers of workspaces (>20), which can be grouped into different layers (default, work, uni, ...) as they are completely different tasks. I rarely switch between layers, but I switch inside layers very frequently.
Every layer has a similar structure: WS1 = webbrowser, WS2 = emacs, WS3 = docs, ...
One workspace shall be reachable from every layer, as it contains email, password manager, ...
The idea is to define layers, which make switching workspaces inside them easier.
First of all: The original behavior obviously needs to stay the same. If one chooses to define a layer, it needs to be added to the configuration. A layer is defined with the directive layer <name> <from> <to>.
Example

# switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
# ...
# layer configuration
layer uni 11 19
layer work 21 29
bindsym $mod+F1 layer default
bindsym $mod+F2 layer uni
bindsym $mod+F3 layer work
# ...

This defines a layer ""uni"" starting at workspace 11, ending at workspace 19 (inclusive) and a layer ""work"" starting at 21, ending at 29. Also there are keybindings for switching to the defined layers.
Switching

At startup, layer ""default"" is enabled, wich has no influence on any behavior
Pressing $mod+F1 will activate layer ""uni"", but do nothing else
Upon pressing $mod+1, the relative offset of the layer will be added to the switching command: workspace number 1 -> workspace number 11
Upon pressing $mod+2, the relative offset of the layer will be added to the switching command: workspace number 2 -> workspace number 12
...
Upon pressing $mod+9, the relative offset of the layer will be added to the switching command: workspace number 9 -> workspace number 19
Upon pressing $mod+0, the switch will happen normally, as the last mapped workspace is 19

Moving
""I want to move the current container to the 2nd workspace of layout 'work'"" == ""I want to move the current container to workspace 22""

$mod+F3 == layer work
$mod+shift+2 == move container to workspace number 2

TODOs

 See if there is any form of acceptance here, or if I need to maintain this seperately
 Tests
 Concept Improvements",Do you plan opening an issue so we can all progress on this awesome feature ?,True,{}
i3/i3,https://github.com/i3/i3,3986,2020-04-03T18:04:35Z,2020-04-05T07:59:04Z,2020-04-17T19:12:37Z,CLOSED,False,460,14,18,https://github.com/bastidest,WIP: Support layers for managing many workspaces,6,[],https://github.com/i3/i3/pull/3986,https://github.com/bastidest,16,https://github.com/i3/i3/pull/3986#issuecomment-613320594,"Proposal
I want to manage large numbers of workspaces (>20), which can be grouped into different layers (default, work, uni, ...) as they are completely different tasks. I rarely switch between layers, but I switch inside layers very frequently.
Every layer has a similar structure: WS1 = webbrowser, WS2 = emacs, WS3 = docs, ...
One workspace shall be reachable from every layer, as it contains email, password manager, ...
The idea is to define layers, which make switching workspaces inside them easier.
First of all: The original behavior obviously needs to stay the same. If one chooses to define a layer, it needs to be added to the configuration. A layer is defined with the directive layer <name> <from> <to>.
Example

# switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
# ...
# layer configuration
layer uni 11 19
layer work 21 29
bindsym $mod+F1 layer default
bindsym $mod+F2 layer uni
bindsym $mod+F3 layer work
# ...

This defines a layer ""uni"" starting at workspace 11, ending at workspace 19 (inclusive) and a layer ""work"" starting at 21, ending at 29. Also there are keybindings for switching to the defined layers.
Switching

At startup, layer ""default"" is enabled, wich has no influence on any behavior
Pressing $mod+F1 will activate layer ""uni"", but do nothing else
Upon pressing $mod+1, the relative offset of the layer will be added to the switching command: workspace number 1 -> workspace number 11
Upon pressing $mod+2, the relative offset of the layer will be added to the switching command: workspace number 2 -> workspace number 12
...
Upon pressing $mod+9, the relative offset of the layer will be added to the switching command: workspace number 9 -> workspace number 19
Upon pressing $mod+0, the switch will happen normally, as the last mapped workspace is 19

Moving
""I want to move the current container to the 2nd workspace of layout 'work'"" == ""I want to move the current container to workspace 22""

$mod+F3 == layer work
$mod+shift+2 == move container to workspace number 2

TODOs

 See if there is any form of acceptance here, or if I need to maintain this seperately
 Tests
 Concept Improvements","Do you plan opening an issue so we can all progress on this awesome feature ?

Will do in this week.",True,{'THUMBS_UP': ['https://github.com/mchalecki']}
i3/i3,https://github.com/i3/i3,3986,2020-04-03T18:04:35Z,2020-04-05T07:59:04Z,2020-04-17T19:12:37Z,CLOSED,False,460,14,18,https://github.com/bastidest,WIP: Support layers for managing many workspaces,6,[],https://github.com/i3/i3/pull/3986,https://github.com/bastidest,17,https://github.com/i3/i3/pull/3986#issuecomment-615368151,"Proposal
I want to manage large numbers of workspaces (>20), which can be grouped into different layers (default, work, uni, ...) as they are completely different tasks. I rarely switch between layers, but I switch inside layers very frequently.
Every layer has a similar structure: WS1 = webbrowser, WS2 = emacs, WS3 = docs, ...
One workspace shall be reachable from every layer, as it contains email, password manager, ...
The idea is to define layers, which make switching workspaces inside them easier.
First of all: The original behavior obviously needs to stay the same. If one chooses to define a layer, it needs to be added to the configuration. A layer is defined with the directive layer <name> <from> <to>.
Example

# switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
# ...
# layer configuration
layer uni 11 19
layer work 21 29
bindsym $mod+F1 layer default
bindsym $mod+F2 layer uni
bindsym $mod+F3 layer work
# ...

This defines a layer ""uni"" starting at workspace 11, ending at workspace 19 (inclusive) and a layer ""work"" starting at 21, ending at 29. Also there are keybindings for switching to the defined layers.
Switching

At startup, layer ""default"" is enabled, wich has no influence on any behavior
Pressing $mod+F1 will activate layer ""uni"", but do nothing else
Upon pressing $mod+1, the relative offset of the layer will be added to the switching command: workspace number 1 -> workspace number 11
Upon pressing $mod+2, the relative offset of the layer will be added to the switching command: workspace number 2 -> workspace number 12
...
Upon pressing $mod+9, the relative offset of the layer will be added to the switching command: workspace number 9 -> workspace number 19
Upon pressing $mod+0, the switch will happen normally, as the last mapped workspace is 19

Moving
""I want to move the current container to the 2nd workspace of layout 'work'"" == ""I want to move the current container to workspace 22""

$mod+F3 == layer work
$mod+shift+2 == move container to workspace number 2

TODOs

 See if there is any form of acceptance here, or if I need to maintain this seperately
 Tests
 Concept Improvements",I created an issue for further discussing and clarifying this idea. Leave your thoughts on that topic there. #4024,True,{}
i3/i3,https://github.com/i3/i3,3986,2020-04-03T18:04:35Z,2020-04-05T07:59:04Z,2020-04-17T19:12:37Z,CLOSED,False,460,14,18,https://github.com/bastidest,WIP: Support layers for managing many workspaces,6,[],https://github.com/i3/i3/pull/3986,https://github.com/rayvermey,18,https://github.com/i3/i3/pull/3986#issuecomment-615417511,"Proposal
I want to manage large numbers of workspaces (>20), which can be grouped into different layers (default, work, uni, ...) as they are completely different tasks. I rarely switch between layers, but I switch inside layers very frequently.
Every layer has a similar structure: WS1 = webbrowser, WS2 = emacs, WS3 = docs, ...
One workspace shall be reachable from every layer, as it contains email, password manager, ...
The idea is to define layers, which make switching workspaces inside them easier.
First of all: The original behavior obviously needs to stay the same. If one chooses to define a layer, it needs to be added to the configuration. A layer is defined with the directive layer <name> <from> <to>.
Example

# switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
# ...
# layer configuration
layer uni 11 19
layer work 21 29
bindsym $mod+F1 layer default
bindsym $mod+F2 layer uni
bindsym $mod+F3 layer work
# ...

This defines a layer ""uni"" starting at workspace 11, ending at workspace 19 (inclusive) and a layer ""work"" starting at 21, ending at 29. Also there are keybindings for switching to the defined layers.
Switching

At startup, layer ""default"" is enabled, wich has no influence on any behavior
Pressing $mod+F1 will activate layer ""uni"", but do nothing else
Upon pressing $mod+1, the relative offset of the layer will be added to the switching command: workspace number 1 -> workspace number 11
Upon pressing $mod+2, the relative offset of the layer will be added to the switching command: workspace number 2 -> workspace number 12
...
Upon pressing $mod+9, the relative offset of the layer will be added to the switching command: workspace number 9 -> workspace number 19
Upon pressing $mod+0, the switch will happen normally, as the last mapped workspace is 19

Moving
""I want to move the current container to the 2nd workspace of layout 'work'"" == ""I want to move the current container to workspace 22""

$mod+F3 == layer work
$mod+shift+2 == move container to workspace number 2

TODOs

 See if there is any form of acceptance here, or if I need to maintain this seperately
 Tests
 Concept Improvements","Thanks, I will.

Ray

Verzonden vanuit Outlook Mobile<https://aka.ms/blhgte>
…
________________________________
From: Sebastian Hiebl <notifications@github.com>
Sent: Friday, April 17, 2020 7:23:06 PM
To: i3/i3 <i3@noreply.github.com>
Cc: Ray Vermey <rayvermey@gmail.com>; Comment <comment@noreply.github.com>
Subject: Re: [i3/i3] WIP: Support layers for managing many workspaces (#3986)


I created an issue for further discussing and clarifying this idea. Leave your thoughts on that topic there. #4024<#4024>

—
You are receiving this because you commented.
Reply to this email directly, view it on GitHub<#3986 (comment)>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AKEOAYEQGD3FFMONRXL5GJLRNCF7VANCNFSM4L4K5QEA>.",True,{}
i3/i3,https://github.com/i3/i3,3988,2020-04-04T23:31:53Z,2020-05-01T23:43:15Z,2020-05-01T23:43:15Z,CLOSED,False,89,0,4,https://github.com/jerojasro,implementation for bisect command,1,[],https://github.com/i3/i3/pull/3988,https://github.com/jerojasro,1,https://github.com/i3/i3/pull/3988,"bisect horizontal | vertical | h | v
takes a tabbed/stacked container, splits its currently-used space into
two new tabbed/stacked containers, puts currently-focused window in one
of them, the other windows in the other one.","bisect horizontal | vertical | h | v
takes a tabbed/stacked container, splits its currently-used space into
two new tabbed/stacked containers, puts currently-focused window in one
of them, the other windows in the other one.",True,{}
i3/i3,https://github.com/i3/i3,3988,2020-04-04T23:31:53Z,2020-05-01T23:43:15Z,2020-05-01T23:43:15Z,CLOSED,False,89,0,4,https://github.com/jerojasro,implementation for bisect command,1,[],https://github.com/i3/i3/pull/3988,https://github.com/jerojasro,2,https://github.com/i3/i3/pull/3988#issuecomment-609105013,"bisect horizontal | vertical | h | v
takes a tabbed/stacked container, splits its currently-used space into
two new tabbed/stacked containers, puts currently-focused window in one
of them, the other windows in the other one.","I see the build failed, but I couldn't find any actionable information (for me) in the logs it generated about the failure.
Can someone check those logs and please let me know if I broke a test, and if so which one?
Thanks,",True,{}
i3/i3,https://github.com/i3/i3,3988,2020-04-04T23:31:53Z,2020-05-01T23:43:15Z,2020-05-01T23:43:15Z,CLOSED,False,89,0,4,https://github.com/jerojasro,implementation for bisect command,1,[],https://github.com/i3/i3/pull/3988,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/3988#issuecomment-609400899,"bisect horizontal | vertical | h | v
takes a tabbed/stacked container, splits its currently-used space into
two new tabbed/stacked containers, puts currently-focused window in one
of them, the other windows in the other one.",Don't worry about this build failure. @stapelberg maybe you know what's wrong with the check-spelling script here?,True,{'THUMBS_UP': ['https://github.com/jerojasro']}
i3/i3,https://github.com/i3/i3,3988,2020-04-04T23:31:53Z,2020-05-01T23:43:15Z,2020-05-01T23:43:15Z,CLOSED,False,89,0,4,https://github.com/jerojasro,implementation for bisect command,1,[],https://github.com/i3/i3/pull/3988,https://github.com/Airblader,4,https://github.com/i3/i3/pull/3988#issuecomment-609417487,"bisect horizontal | vertical | h | v
takes a tabbed/stacked container, splits its currently-used space into
two new tabbed/stacked containers, puts currently-focused window in one
of them, the other windows in the other one.",Isn't this trivially implemented as a script or even just a sequence of commands? I'm not convinced this is worth a separate command.,True,{'THUMBS_UP': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,3988,2020-04-04T23:31:53Z,2020-05-01T23:43:15Z,2020-05-01T23:43:15Z,CLOSED,False,89,0,4,https://github.com/jerojasro,implementation for bisect command,1,[],https://github.com/i3/i3/pull/3988,https://github.com/jerojasro,5,https://github.com/i3/i3/pull/3988#issuecomment-609524035,"bisect horizontal | vertical | h | v
takes a tabbed/stacked container, splits its currently-used space into
two new tabbed/stacked containers, puts currently-focused window in one
of them, the other windows in the other one.","Isn't this trivially implemented as a script or even just a sequence of commands? I'm not convinced this is worth a separate command.

@Airblader I hadn't considered the approach you suggest, because it didn't occur to me to move all of the i3-command-chaining to an external script and use i3-msg; I'll take a stab at it and validate your confidence in this being ""trivially implemented"". From the top of my mind, I think it might be needlessly hard to perform the sanity checks I already do in the code, but nonetheless I'll check.
Is this the (alternative) approach you have in mind for achieving the functionality I want? (external script + i3-msg)
Thanks for your comment.",True,{}
i3/i3,https://github.com/i3/i3,3988,2020-04-04T23:31:53Z,2020-05-01T23:43:15Z,2020-05-01T23:43:15Z,CLOSED,False,89,0,4,https://github.com/jerojasro,implementation for bisect command,1,[],https://github.com/i3/i3/pull/3988,https://github.com/stapelberg,6,https://github.com/i3/i3/pull/3988#issuecomment-610463005,"bisect horizontal | vertical | h | v
takes a tabbed/stacked container, splits its currently-used space into
two new tabbed/stacked containers, puts currently-focused window in one
of them, the other windows in the other one.","Don't worry about this build failure. @stapelberg maybe you know what's wrong with the check-spelling script here?

Sent a fix in #3994",True,{'THUMBS_UP': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,3988,2020-04-04T23:31:53Z,2020-05-01T23:43:15Z,2020-05-01T23:43:15Z,CLOSED,False,89,0,4,https://github.com/jerojasro,implementation for bisect command,1,[],https://github.com/i3/i3/pull/3988,https://github.com/Airblader,7,https://github.com/i3/i3/pull/3988#issuecomment-610779493,"bisect horizontal | vertical | h | v
takes a tabbed/stacked container, splits its currently-used space into
two new tabbed/stacked containers, puts currently-focused window in one
of them, the other windows in the other one.","Is this the (alternative) approach you have in mind for achieving the functionality I want?

Possibly, yes; that would be simplest. If some things are too difficult to do this way, you can use a proper IPC implementation and script a solution (i3-msg is mostly a reference implementation for simple usage of sending commands). Most IPC implementations offer easy ways to query various state in the i3 tree.",True,{}
i3/i3,https://github.com/i3/i3,3988,2020-04-04T23:31:53Z,2020-05-01T23:43:15Z,2020-05-01T23:43:15Z,CLOSED,False,89,0,4,https://github.com/jerojasro,implementation for bisect command,1,[],https://github.com/i3/i3/pull/3988,https://github.com/orestisfl,8,https://github.com/i3/i3/pull/3988#issuecomment-622612772,"bisect horizontal | vertical | h | v
takes a tabbed/stacked container, splits its currently-used space into
two new tabbed/stacked containers, puts currently-focused window in one
of them, the other windows in the other one.","@jerojasro Let us know if you have any news with your IPC script or if you believe that what you are trying to achieve should be integrated into i3 in some way.
I'll close this PR for the time being",True,{}
i3/i3,https://github.com/i3/i3,3994,2020-04-07T15:42:56Z,2020-04-07T15:47:48Z,2020-04-07T15:47:48Z,MERGED,True,5,2,1,https://github.com/stapelberg,check-spelling: update to new Lintian::Profile API,1,[],https://github.com/i3/i3/pull/3994,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/3994,This changed between Lintian 2.62.0 and 2.64.0.,This changed between Lintian 2.62.0 and 2.64.0.,True,{}
i3/i3,https://github.com/i3/i3,3995,2020-04-08T08:50:53Z,2020-04-10T01:58:13Z,2020-04-10T01:58:13Z,MERGED,True,26,135,1,https://github.com/xzfc,Refactor property handlers,4,[],https://github.com/i3/i3/pull/3995,https://github.com/xzfc,1,https://github.com/i3/i3/pull/3995,Removed unnecessary and repeated code.,Removed unnecessary and repeated code.,True,{'HEART': ['https://github.com/panaman67']}
i3/i3,https://github.com/i3/i3,3996,2020-04-08T18:36:54Z,2020-04-09T08:43:49Z,2020-04-09T08:44:07Z,MERGED,True,1,7,1,https://github.com/orestisfl,Call cont_child() more liberally,1,[],https://github.com/i3/i3/pull/3996,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3996,"Following the reproduction instructions from
#3242 (comment)
For me, #3242 happened when the following sequence executed:

Fullscreening window correctly calls stop_child() in

  
    
      i3/i3bar/src/xcb.c
    
    
         Line 685
      in
      6e24e2a
    
  
  
    

        
          
           stop_child(); 
        
    
  


Xrandr change, reconfig_windows() is called and output->visible is
set to true in this line:

  
    
      i3/i3bar/src/xcb.c
    
    
         Line 1791
      in
      6e24e2a
    
  
  
    

        
          
           walk->visible = true; 
        
    
  


When the window's fullscreen is disabled,
handle_visibility_notify() returns in this line:

  
    
      i3/i3bar/src/xcb.c
    
    
         Line 677
      in
      6e24e2a
    
  
  
    

        
          
           return; 
        
    
  


because previously output->visible was set to true

To fix this, I call cont_child() more leniently since it is a no-op
when the child is not stopped.
Fixes #3242
Closes #3761","Following the reproduction instructions from
#3242 (comment)
For me, #3242 happened when the following sequence executed:

Fullscreening window correctly calls stop_child() in

  
    
      i3/i3bar/src/xcb.c
    
    
         Line 685
      in
      6e24e2a
    
  
  
    

        
          
           stop_child(); 
        
    
  


Xrandr change, reconfig_windows() is called and output->visible is
set to true in this line:

  
    
      i3/i3bar/src/xcb.c
    
    
         Line 1791
      in
      6e24e2a
    
  
  
    

        
          
           walk->visible = true; 
        
    
  


When the window's fullscreen is disabled,
handle_visibility_notify() returns in this line:

  
    
      i3/i3bar/src/xcb.c
    
    
         Line 677
      in
      6e24e2a
    
  
  
    

        
          
           return; 
        
    
  


because previously output->visible was set to true

To fix this, I call cont_child() more leniently since it is a no-op
when the child is not stopped.
Fixes #3242
Closes #3761",True,{'HEART': ['https://github.com/steinex']}
i3/i3,https://github.com/i3/i3,3999,2020-04-09T09:32:26Z,2020-04-09T09:47:33Z,2020-04-09T09:55:05Z,MERGED,True,22,1,2,https://github.com/orestisfl,cmd_focus_sibling: Fix crash on workspace level,1,[],https://github.com/i3/i3/pull/3999,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/3999,Fixes #3997,Fixes #3997,True,{}
i3/i3,https://github.com/i3/i3,3999,2020-04-09T09:32:26Z,2020-04-09T09:47:33Z,2020-04-09T09:55:05Z,MERGED,True,22,1,2,https://github.com/orestisfl,cmd_focus_sibling: Fix crash on workspace level,1,[],https://github.com/i3/i3/pull/3999,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/3999#issuecomment-611440798,Fixes #3997,@stapelberg Maybe this is worth a bugfix release,True,{}
i3/i3,https://github.com/i3/i3,4000,2020-04-09T13:20:40Z,2020-04-09T14:41:44Z,2020-04-09T15:10:56Z,MERGED,True,30,27,2,https://github.com/orestisfl,Correctly handle mouse resize in fullscreen containers,4,[],https://github.com/i3/i3/pull/4000,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4000,"Reverts #3983
Fixes #3980","Reverts #3983
Fixes #3980",True,{}
i3/i3,https://github.com/i3/i3,4002,2020-04-10T01:26:24Z,2020-04-10T11:59:56Z,2020-04-10T12:01:19Z,MERGED,True,13,0,1,https://github.com/orestisfl,i3bar: Add a macro to log child info,1,[],https://github.com/i3/i3/pull/4002,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4002,Mentioned in #3242,Mentioned in #3242,True,{}
i3/i3,https://github.com/i3/i3,4003,2020-04-10T02:41:37Z,2020-04-10T12:00:27Z,2020-04-10T12:01:08Z,MERGED,True,34,1,2,https://github.com/orestisfl,Update EWMH properties on workspace move,1,[],https://github.com/i3/i3/pull/4003,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4003,"Closes #3965
Fixes #4001","Closes #3965
Fixes #4001",True,{}
i3/i3,https://github.com/i3/i3,4004,2020-04-10T09:40:54Z,2020-04-10T12:00:52Z,2020-04-10T12:06:21Z,MERGED,True,15,0,1,https://github.com/orestisfl,Fix SEGFAULT when i3bar receives invalid input,1,[],https://github.com/i3/i3/pull/4004,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4004,Fixes #3844,Fixes #3844,True,{}
i3/i3,https://github.com/i3/i3,4005,2020-04-10T10:28:50Z,2020-04-11T17:51:01Z,2020-04-11T17:51:37Z,MERGED,True,24,28,1,https://github.com/orestisfl,route_click readability improvements,2,[],https://github.com/i3/i3/pull/4005,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4005,,,True,{}
i3/i3,https://github.com/i3/i3,4006,2020-04-10T11:41:24Z,2020-04-12T11:49:09Z,2020-04-12T12:03:01Z,MERGED,True,216,26,9,https://github.com/orestisfl,Extend tiling/floating criteria with optional auto/user values,1,[],https://github.com/i3/i3/pull/4006,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4006,Fixes #3588,Fixes #3588,True,{}
i3/i3,https://github.com/i3/i3,4006,2020-04-10T11:41:24Z,2020-04-12T11:49:09Z,2020-04-12T12:03:01Z,MERGED,True,216,26,9,https://github.com/orestisfl,Extend tiling/floating criteria with optional auto/user values,1,[],https://github.com/i3/i3/pull/4006,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/4006#issuecomment-611998938,Fixes #3588,"@stapelberg the only other way I see to support floating=auto is to extend the parser, but I don't think it's really worth it and we can always do it later, maintaining backwards compatibility, if we find more use cases.",True,{}
i3/i3,https://github.com/i3/i3,4006,2020-04-10T11:41:24Z,2020-04-12T11:49:09Z,2020-04-12T12:03:01Z,MERGED,True,216,26,9,https://github.com/orestisfl,Extend tiling/floating criteria with optional auto/user values,1,[],https://github.com/i3/i3/pull/4006,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/4006#issuecomment-612111659,Fixes #3588,"the only other way I see to support floating=auto is to extend the parser, but I don't think it's really worth it and we can always do it later, maintaining backwards compatibility, if we find more use cases.

I think I found a way: a0ba91b
Feel free to cherry-pick this into your PR.",True,{}
i3/i3,https://github.com/i3/i3,4006,2020-04-10T11:41:24Z,2020-04-12T11:49:09Z,2020-04-12T12:03:01Z,MERGED,True,216,26,9,https://github.com/orestisfl,Extend tiling/floating criteria with optional auto/user values,1,[],https://github.com/i3/i3/pull/4006,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/4006#issuecomment-612130114,Fixes #3588,"@stapelberg That's nice but unfortunately fails in 2 cases.

Default floating followed by other criteira

diff --git a/testcases/t/201-config-parser.t b/testcases/t/201-config-parser.t
index a8d45325..7cacff4f 100644
--- a/testcases/t/201-config-parser.t
+++ b/testcases/t/201-config-parser.t
@@ -99,11 +99,15 @@ is(parser_calls($config),
 
 $config = <<'EOT';
 for_window [class=""^Chrome""] floating enable
+for_window [floating class=""==Class==""] nop floating
 EOT
 
 $expected = <<'EOT';
 cfg_criteria_add(class, ^Chrome)
 cfg_for_window(floating enable)
+cfg_criteria_add(floating, NULL)
+cfg_criteria_add(class, ==Class==)
+cfg_for_window(nop floating)
 EOT
 
 is(parser_calls($config),

[floating=""auto""] … (with double quotes). Can be fixed by ERRORing in match.c but then we don't have i3-nagbar errors.",True,{}
i3/i3,https://github.com/i3/i3,4006,2020-04-10T11:41:24Z,2020-04-12T11:49:09Z,2020-04-12T12:03:01Z,MERGED,True,216,26,9,https://github.com/orestisfl,Extend tiling/floating criteria with optional auto/user values,1,[],https://github.com/i3/i3/pull/4006,https://github.com/stapelberg,5,https://github.com/i3/i3/pull/4006#issuecomment-612352498,Fixes #3588,"Default floating followed by other criteira


I think this issue can only be addressed through repetition.
I think at this point, we should probably use floating_from as a new criterion which takes a string value, and then parse that string as user or auto.",True,{}
i3/i3,https://github.com/i3/i3,4006,2020-04-10T11:41:24Z,2020-04-12T11:49:09Z,2020-04-12T12:03:01Z,MERGED,True,216,26,9,https://github.com/orestisfl,Extend tiling/floating criteria with optional auto/user values,1,[],https://github.com/i3/i3/pull/4006,https://github.com/orestisfl,6,https://github.com/i3/i3/pull/4006#issuecomment-612361495,Fixes #3588,"Why not go with the current solution?

The problem with parsing is that it won't be easy to show a parsing error.
…
On Sat, Apr 11, 2020, 09:16 Michael Stapelberg ***@***.***> wrote:

    1. Default floating followed by other criteira

 I think this issue can only be addressed through repetition.

 I think at this point, we should probably use floating_from as a new
 criterion which takes a string value, and then parse that string as user or
 auto.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#4006 (comment)>, or
 unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ABMCZPT5F52YKCYWEFIOERTRMAKLFANCNFSM4MFMX63A>
 .",True,{}
i3/i3,https://github.com/i3/i3,4006,2020-04-10T11:41:24Z,2020-04-12T11:49:09Z,2020-04-12T12:03:01Z,MERGED,True,216,26,9,https://github.com/orestisfl,Extend tiling/floating criteria with optional auto/user values,1,[],https://github.com/i3/i3/pull/4006,https://github.com/stapelberg,7,https://github.com/i3/i3/pull/4006#issuecomment-612364322,Fixes #3588,"Why not go with the current solution?

By current solution, you’re referring to floating_user and floating_auto, right? I’m not too keen on adding so many new criteria just for this feature. If we ever expand the list, to, say, include floating-from-ipc, we’d need another 2 criteria.

The problem with parsing is that it won't be easy to show a parsing error.

But that’s the same as with the other criteria right now, correct? E.g. if you supply an invalid regexp.",True,{}
i3/i3,https://github.com/i3/i3,4006,2020-04-10T11:41:24Z,2020-04-12T11:49:09Z,2020-04-12T12:03:01Z,MERGED,True,216,26,9,https://github.com/orestisfl,Extend tiling/floating criteria with optional auto/user values,1,[],https://github.com/i3/i3/pull/4006,https://github.com/orestisfl,8,https://github.com/i3/i3/pull/4006#issuecomment-612365206,Fixes #3588,"Supplying an invalid regex is different than mistyping one of the few static possibilities.
Besides, if the possible values are within a discrete set of possibilities, handling them after the parser is not really different to handling them in the parser.",True,{}
i3/i3,https://github.com/i3/i3,4006,2020-04-10T11:41:24Z,2020-04-12T11:49:09Z,2020-04-12T12:03:01Z,MERGED,True,216,26,9,https://github.com/orestisfl,Extend tiling/floating criteria with optional auto/user values,1,[],https://github.com/i3/i3/pull/4006,https://github.com/stapelberg,9,https://github.com/i3/i3/pull/4006#issuecomment-612365686,Fixes #3588,"I still think we should use a floating_from instead of floating_user, but if you want to make floating_from only accept the discrete set of values, go ahead. I think it can be done with a few additional states, using the same syntax as we use for strings.",True,{}
i3/i3,https://github.com/i3/i3,4006,2020-04-10T11:41:24Z,2020-04-12T11:49:09Z,2020-04-12T12:03:01Z,MERGED,True,216,26,9,https://github.com/orestisfl,Extend tiling/floating criteria with optional auto/user values,1,[],https://github.com/i3/i3/pull/4006,https://github.com/orestisfl,10,https://github.com/i3/i3/pull/4006#issuecomment-612367683,Fixes #3588,"In your approach, we can re-use floating but just make it accept a word instead of 'auto', 'user'. So, no need for floating_from. This deals with both quotes and the first issue I raised, but not the i3-nagbar error.
Do you want to do it this way?",True,{}
i3/i3,https://github.com/i3/i3,4006,2020-04-10T11:41:24Z,2020-04-12T11:49:09Z,2020-04-12T12:03:01Z,MERGED,True,216,26,9,https://github.com/orestisfl,Extend tiling/floating criteria with optional auto/user values,1,[],https://github.com/i3/i3/pull/4006,https://github.com/stapelberg,11,https://github.com/i3/i3/pull/4006#issuecomment-612370492,Fixes #3588,"In your approach, we can re-use floating but just make it accept a word

But that’s not backwards-compatible, is it?",True,{}
i3/i3,https://github.com/i3/i3,4006,2020-04-10T11:41:24Z,2020-04-12T11:49:09Z,2020-04-12T12:03:01Z,MERGED,True,216,26,9,https://github.com/orestisfl,Extend tiling/floating criteria with optional auto/user values,1,[],https://github.com/i3/i3/pull/4006,https://github.com/orestisfl,12,https://github.com/i3/i3/pull/4006#issuecomment-612376455,Fixes #3588,"I am sorry, I forgot why that doesn't play well with other criteria.
Anyway, what's the conclusion here?",True,{}
i3/i3,https://github.com/i3/i3,4006,2020-04-10T11:41:24Z,2020-04-12T11:49:09Z,2020-04-12T12:03:01Z,MERGED,True,216,26,9,https://github.com/orestisfl,Extend tiling/floating criteria with optional auto/user values,1,[],https://github.com/i3/i3/pull/4006,https://github.com/stapelberg,13,https://github.com/i3/i3/pull/4006#issuecomment-612384712,Fixes #3588,"I think this is how it should be done: abaa1f8
Let me know if there’s anything that’s still broken with that approach, or anything to improve (I don’t see any easy improvements now).",True,{}
i3/i3,https://github.com/i3/i3,4006,2020-04-10T11:41:24Z,2020-04-12T11:49:09Z,2020-04-12T12:03:01Z,MERGED,True,216,26,9,https://github.com/orestisfl,Extend tiling/floating criteria with optional auto/user values,1,[],https://github.com/i3/i3/pull/4006,https://github.com/orestisfl,14,https://github.com/i3/i3/pull/4006#issuecomment-612387373,Fixes #3588,"Yes, this doesn't work with [tiling_from=user] (without quotes) like other criteria",True,{}
i3/i3,https://github.com/i3/i3,4006,2020-04-10T11:41:24Z,2020-04-12T11:49:09Z,2020-04-12T12:03:01Z,MERGED,True,216,26,9,https://github.com/orestisfl,Extend tiling/floating criteria with optional auto/user values,1,[],https://github.com/i3/i3/pull/4006,https://github.com/stapelberg,15,https://github.com/i3/i3/pull/4006#issuecomment-612418832,Fixes #3588,"It’s kind of unfortunate (for consistency’s sake) that we ever accepted the variant without quotes, but it’s too late to rectify that now :)
This is now addressed in 08b2540",True,{}
i3/i3,https://github.com/i3/i3,4006,2020-04-10T11:41:24Z,2020-04-12T11:49:09Z,2020-04-12T12:03:01Z,MERGED,True,216,26,9,https://github.com/orestisfl,Extend tiling/floating criteria with optional auto/user values,1,[],https://github.com/i3/i3/pull/4006,https://github.com/orestisfl,16,https://github.com/i3/i3/pull/4006#issuecomment-612543412,Fixes #3588,up,True,{}
i3/i3,https://github.com/i3/i3,4007,2020-04-10T13:45:32Z,2021-01-28T13:52:51Z,2021-01-28T13:52:51Z,MERGED,True,86,10,16,https://github.com/xzfc,Match WM_CLIENT_MACHINE,1,[],https://github.com/i3/i3/pull/4007,https://github.com/xzfc,1,https://github.com/i3/i3/pull/4007,"Add machine criterion to match WM_CLIENT_MACHINE. Closes #3981
Add %machine title format placeholder.
Add machine to the IPC and layout saving/restoring.

Also, would it make sense to support special values __local__ and __remote__ to match corresponding clients? Use-case is to indicate windows from remote clients, like this:
for_window [machine=__remote__] title_format ""[%machine] %title""
Alternative is to hard-code the machine hostname into the user config.","Add machine criterion to match WM_CLIENT_MACHINE. Closes #3981
Add %machine title format placeholder.
Add machine to the IPC and layout saving/restoring.

Also, would it make sense to support special values __local__ and __remote__ to match corresponding clients? Use-case is to indicate windows from remote clients, like this:
for_window [machine=__remote__] title_format ""[%machine] %title""
Alternative is to hard-code the machine hostname into the user config.",True,"{'HOORAY': ['https://github.com/T4cC0re', 'https://github.com/tbraeutigam']}"
i3/i3,https://github.com/i3/i3,4007,2020-04-10T13:45:32Z,2021-01-28T13:52:51Z,2021-01-28T13:52:51Z,MERGED,True,86,10,16,https://github.com/xzfc,Match WM_CLIENT_MACHINE,1,[],https://github.com/i3/i3/pull/4007,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/4007#issuecomment-769002464,"Add machine criterion to match WM_CLIENT_MACHINE. Closes #3981
Add %machine title format placeholder.
Add machine to the IPC and layout saving/restoring.

Also, would it make sense to support special values __local__ and __remote__ to match corresponding clients? Use-case is to indicate windows from remote clients, like this:
for_window [machine=__remote__] title_format ""[%machine] %title""
Alternative is to hard-code the machine hostname into the user config.",up,True,{}
i3/i3,https://github.com/i3/i3,4008,2020-04-10T15:03:07Z,2020-04-11T17:49:25Z,2020-04-11T17:52:46Z,MERGED,True,4,5,3,https://github.com/orestisfl,Limit log length with IPC commands,2,[],https://github.com/i3/i3/pull/4008,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4008,Fixes #3525,Fixes #3525,True,{}
i3/i3,https://github.com/i3/i3,4010,2020-04-11T08:13:57Z,2020-04-11T17:49:06Z,2020-04-11T17:52:53Z,MERGED,True,1,1,1,https://github.com/orestisfl,Fix trailing whitespace in a DLOG,1,[],https://github.com/i3/i3/pull/4010,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4010,,,True,{}
i3/i3,https://github.com/i3/i3,4011,2020-04-11T08:57:53Z,2020-04-11T17:50:15Z,2020-04-11T17:51:47Z,MERGED,True,3,6,2,https://github.com/orestisfl,Call tree_render if floating move changes workspace,2,[],https://github.com/i3/i3/pull/4011,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4011,,,True,{}
i3/i3,https://github.com/i3/i3,4012,2020-04-11T09:13:55Z,2020-04-11T17:49:54Z,2020-04-11T17:52:10Z,MERGED,True,8,2,1,https://github.com/orestisfl,floating_maybe_reassign_ws: only re-focus if previously focused,1,[],https://github.com/i3/i3/pull/4012,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4012,Fixes #3979,Fixes #3979,True,{}
i3/i3,https://github.com/i3/i3,4013,2020-04-11T21:01:42Z,2020-04-12T07:15:41Z,2021-09-18T10:18:14Z,MERGED,True,1,0,1,https://github.com/orestisfl,i3-dmenu-desktop: Support symlinks,1,[],https://github.com/i3/i3/pull/4013,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4013,Fixes #3973,Fixes #3973,True,{}
i3/i3,https://github.com/i3/i3,4013,2020-04-11T21:01:42Z,2020-04-12T07:15:41Z,2021-09-18T10:18:14Z,MERGED,True,1,0,1,https://github.com/orestisfl,i3-dmenu-desktop: Support symlinks,1,[],https://github.com/i3/i3/pull/4013,https://github.com/obadz,2,https://github.com/i3/i3/pull/4013#issuecomment-768308629,Fixes #3973,"Hi @orestisfl,
As you can see in the above mention, i3-dmenu-desktop now crashes with the below error since this update:
$ i3-dmenu-desktop 
/nix/store/qq2bc9dlmxyjavn4n02lbrivvnqqx9b2-mpv-with-scripts-0.33.0/share/applications/mpv.desktop is encountered a second time at /nix/store/0akzg9fx7yi2cgzlxs41fymprnnjvcrm-perl-5.32.0/lib/perl5/5.32.0/File/Find.pm line 79.

Any ideas on what can be done about it?",True,{}
i3/i3,https://github.com/i3/i3,4013,2020-04-11T21:01:42Z,2020-04-12T07:15:41Z,2021-09-18T10:18:14Z,MERGED,True,1,0,1,https://github.com/orestisfl,i3-dmenu-desktop: Support symlinks,1,[],https://github.com/i3/i3/pull/4013,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/4013#issuecomment-768349001,Fixes #3973,"I am not sure how I can debug this with this information. Can you please open a complete issue? (you don't need to upload the full log file as the comments in the template say).
Also please check if the crash persists with these versions of i3-dmenu-desktop:

https://github.com/i3/i3/blob/71c059d03358cd040a4187df516aa410f5ba3c2a/i3-dmenu-desktop
https://github.com/i3/i3/blob/3a672bc930237e1b10c81a4c3a8d51eb3c4ae3f5/i3-dmenu-desktop
https://github.com/i3/i3/blob/3a672bc930237e1b10c81a4c3a8d51eb3c4ae3f5~1/i3-dmenu-desktop",True,{}
i3/i3,https://github.com/i3/i3,4013,2020-04-11T21:01:42Z,2020-04-12T07:15:41Z,2021-09-18T10:18:14Z,MERGED,True,1,0,1,https://github.com/orestisfl,i3-dmenu-desktop: Support symlinks,1,[],https://github.com/i3/i3/pull/4013,https://github.com/obadz,4,https://github.com/i3/i3/pull/4013#issuecomment-922254310,Fixes #3973,"(Sorry for the delayed reply)
Crash persists with the 1st and 2nd but not the 3rd version above:
$ perl ./1.pl 
/nix/store/iqgi2hrw27bb2xgxa10jqmg9wgbjb6lq-mpv-with-scripts-0.33.1/share/applications/mpv.desktop is encountered a second time at /nix/store/p8ncllbbmzr95kzq8hjjv1wc64wk4s6h-perl-5.34.0/lib/perl5/5.34.0/File/Find.pm line 79.
$ perl ./2.pl 
/nix/store/iqgi2hrw27bb2xgxa10jqmg9wgbjb6lq-mpv-with-scripts-0.33.1/share/applications/mpv.desktop is encountered a second time at /nix/store/p8ncllbbmzr95kzq8hjjv1wc64wk4s6h-perl-5.34.0/lib/perl5/5.34.0/File/Find.pm line 79.
$ perl ./3.pl 
<<… then I select an app in the list …>>
[{""success"":true}]",True,{}
i3/i3,https://github.com/i3/i3,4014,2020-04-11T21:49:54Z,2020-05-07T07:22:04Z,2020-05-07T07:22:08Z,MERGED,True,52,81,6,https://github.com/orestisfl,cmd_bar improvements,2,[],https://github.com/i3/i3/pull/4014,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4014,"Is there any case where changes in one barconfig should trigger update events for all bars? If so, update_barconfig should be undeleted and called instead.
Fixes #3958","Is there any case where changes in one barconfig should trigger update events for all bars? If so, update_barconfig should be undeleted and called instead.
Fixes #3958",True,{}
i3/i3,https://github.com/i3/i3,4015,2020-04-11T22:51:02Z,2020-04-12T07:12:17Z,2020-04-12T09:48:24Z,MERGED,True,58,1,2,https://github.com/orestisfl,Fix load_layout crash when floating node doesn't have CT_FLOATING_CON parent,1,[],https://github.com/i3/i3/pull/4015,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4015,Fixes #3901,Fixes #3901,True,{}
i3/i3,https://github.com/i3/i3,4016,2020-04-12T09:02:08Z,2020-04-12T09:07:44Z,2020-04-12T09:07:48Z,MERGED,True,16,8,2,https://github.com/stapelberg,pod2html: render without stylesheet by default,1,[],https://github.com/i3/i3/pull/4016,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4016,fixes #3956,fixes #3956,True,{}
i3/i3,https://github.com/i3/i3,4018,2020-04-12T13:22:04Z,2020-04-15T06:36:11Z,2020-04-15T09:01:56Z,MERGED,True,52,18,5,https://github.com/orestisfl,Sort dock clients by class and instance,2,[],https://github.com/i3/i3/pull/4018,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4018,"See commit message
Fixes #3491","See commit message
Fixes #3491",True,{}
i3/i3,https://github.com/i3/i3,4018,2020-04-12T13:22:04Z,2020-04-15T06:36:11Z,2020-04-15T09:01:56Z,MERGED,True,52,18,5,https://github.com/orestisfl,Sort dock clients by class and instance,2,[],https://github.com/i3/i3/pull/4018,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/4018#issuecomment-613618534,"See commit message
Fixes #3491",up,True,{}
i3/i3,https://github.com/i3/i3,4023,2020-04-16T20:37:01Z,2020-10-19T08:41:40Z,2020-10-19T08:41:45Z,MERGED,True,116,183,11,https://github.com/orestisfl,Fix 2 workspace assignment bugs,5,[],https://github.com/i3/i3/pull/4023,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4023,"Fixes #3685
Fixes #4021","Fixes #3685
Fixes #4021",True,{}
i3/i3,https://github.com/i3/i3,4025,2020-04-18T04:57:48Z,2020-05-01T07:46:08Z,2020-05-01T07:46:08Z,MERGED,True,5,5,1,https://github.com/xzfc,x_draw_decoration: always clear parent pixmap when rendering the first child,1,[],https://github.com/i3/i3/pull/4025,https://github.com/xzfc,1,https://github.com/i3/i3/pull/4025,"See the commit message.
Steps to reproduce:


Enable transparent borders and titlebars, and use a compositor.


Make this layout: H[x V[a b]]



a is 32-bit window, has border pixel 50
b has border normal 50


Resize a (top right window) and see visual garbage in the background.","See the commit message.
Steps to reproduce:


Enable transparent borders and titlebars, and use a compositor.


Make this layout: H[x V[a b]]



a is 32-bit window, has border pixel 50
b has border normal 50


Resize a (top right window) and see visual garbage in the background.",True,{}
i3/i3,https://github.com/i3/i3,4028,2020-04-20T03:18:30Z,2020-04-28T06:28:01Z,2020-04-28T06:28:05Z,MERGED,True,220,372,70,https://github.com/orestisfl,Header file cleaning,5,[],https://github.com/i3/i3/pull/4028,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4028,Related to #4022,Related to #4022,True,{'HEART': ['https://github.com/panaman67']}
i3/i3,https://github.com/i3/i3,4028,2020-04-20T03:18:30Z,2020-04-28T06:28:01Z,2020-04-28T06:28:05Z,MERGED,True,220,372,70,https://github.com/orestisfl,Header file cleaning,5,[],https://github.com/i3/i3/pull/4028,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/4028#issuecomment-620407363,Related to #4022,Merging to avoid future conflcits,True,{}
i3/i3,https://github.com/i3/i3,4032,2020-04-22T07:33:57Z,2020-04-22T09:07:18Z,2020-04-22T11:48:25Z,MERGED,True,5,7,1,https://github.com/stapelberg,release.sh fixes from last release,3,[],https://github.com/i3/i3/pull/4032,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4032,,,True,{}
i3/i3,https://github.com/i3/i3,4033,2020-04-22T12:37:51Z,2020-10-18T18:02:38Z,2020-10-18T18:02:45Z,MERGED,True,12,2,1,https://github.com/orestisfl,i3-dmenu-desktop: Manually search for topdir in .desktop deduplication,1,[],https://github.com/i3/i3/pull/4033,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4033,Fixes #4031,Fixes #4031,True,{}
i3/i3,https://github.com/i3/i3,4033,2020-04-22T12:37:51Z,2020-10-18T18:02:38Z,2020-10-18T18:02:45Z,MERGED,True,12,2,1,https://github.com/orestisfl,i3-dmenu-desktop: Manually search for topdir in .desktop deduplication,1,[],https://github.com/i3/i3/pull/4033,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/4033#issuecomment-617769693,Fixes #4031,@stapelberg There don't seem to be any historical reasons to not use basename here,True,{}
i3/i3,https://github.com/i3/i3,4033,2020-04-22T12:37:51Z,2020-10-18T18:02:38Z,2020-10-18T18:02:45Z,MERGED,True,12,2,1,https://github.com/orestisfl,i3-dmenu-desktop: Manually search for topdir in .desktop deduplication,1,[],https://github.com/i3/i3/pull/4033,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/4033#issuecomment-709000555,Fixes #4031,"@stapelberg I have adjusted the code according to your comments. Notice however that i3-dmenu-desktop does not respect subdirectories mainly because of the uses of basename in this line:

  
    
      i3/i3-dmenu-desktop
    
    
         Line 154
      in
      440268f
    
  
  
    

        
          
           my $base = basename($file); 
        
    
  


It seems that if I remove this, it works as you describe.
I can push that change as well.",True,{}
i3/i3,https://github.com/i3/i3,4038,2020-04-24T16:45:03Z,2020-05-04T08:52:17Z,2020-05-04T08:52:18Z,CLOSED,False,29,0,1,https://github.com/zsugabubus,contrib: Add auto-mark script,1,[],https://github.com/i3/i3/pull/4038,https://github.com/zsugabubus,1,https://github.com/i3/i3/pull/4038,"For lightning fast navigation between windows, one can use marks. It can
be orders of magnitude faster than stepping through intermediate windows
and workspaces to reach target window.
However, marking (ad-hoc) windows manually is tedious, so this script is
here to automatize this task.

I just would like to share this scriptlet, maybe someone will find it useful. If you do not like it just close the PR.","For lightning fast navigation between windows, one can use marks. It can
be orders of magnitude faster than stepping through intermediate windows
and workspaces to reach target window.
However, marking (ad-hoc) windows manually is tedious, so this script is
here to automatize this task.

I just would like to share this scriptlet, maybe someone will find it useful. If you do not like it just close the PR.",True,{}
i3/i3,https://github.com/i3/i3,4038,2020-04-24T16:45:03Z,2020-05-04T08:52:17Z,2020-05-04T08:52:18Z,CLOSED,False,29,0,1,https://github.com/zsugabubus,contrib: Add auto-mark script,1,[],https://github.com/i3/i3/pull/4038,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/4038#issuecomment-623340613,"For lightning fast navigation between windows, one can use marks. It can
be orders of magnitude faster than stepping through intermediate windows
and workspaces to reach target window.
However, marking (ad-hoc) windows manually is tedious, so this script is
here to automatize this task.

I just would like to share this scriptlet, maybe someone will find it useful. If you do not like it just close the PR.","The script is fine but I don't think that we should extend the contrib/ folder this way, since most scripts there are not scripts that should be used directly by the users.
What we could do, is create a new folder examples/ with various IPC scripts (#3612) with proper documentation and maintenance.
If we ever decide to do that, this PR will be linked to the issue so we can revive the automark script.",True,{'THUMBS_UP': ['https://github.com/zsugabubus']}
i3/i3,https://github.com/i3/i3,4041,2020-04-27T11:14:58Z,2020-04-30T07:04:23Z,2020-04-30T07:15:54Z,MERGED,True,85,12,5,https://github.com/orestisfl,Only set FLOATING_AUTO_ON when floating_enable succeeds,1,[],https://github.com/i3/i3/pull/4041,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4041,Fixes #4039,Fixes #4039,True,{}
i3/i3,https://github.com/i3/i3,4043,2020-04-28T19:41:24Z,2020-04-30T07:03:44Z,2020-04-30T07:16:18Z,MERGED,True,1,1,1,https://github.com/orestisfl,con.c: Reorder use after free,1,[],https://github.com/i3/i3/pull/4043,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4043,,,True,{}
i3/i3,https://github.com/i3/i3,4046,2020-04-29T16:42:34Z,2020-04-30T19:07:12Z,2020-04-30T19:28:18Z,MERGED,True,40,128,5,https://github.com/orestisfl,Add RELEASE-NOTES for next release,3,[],https://github.com/i3/i3/pull/4046,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4046,Closes #4040,Closes #4040,True,{}
i3/i3,https://github.com/i3/i3,4046,2020-04-29T16:42:34Z,2020-04-30T19:07:12Z,2020-04-30T19:28:18Z,MERGED,True,40,128,5,https://github.com/orestisfl,Add RELEASE-NOTES for next release,3,[],https://github.com/i3/i3/pull/4046,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/4046#issuecomment-622025193,Closes #4040,"Can you mention the autoconf change, too, before merging?

This #4049?",True,{}
i3/i3,https://github.com/i3/i3,4046,2020-04-29T16:42:34Z,2020-04-30T19:07:12Z,2020-04-30T19:28:18Z,MERGED,True,40,128,5,https://github.com/orestisfl,Add RELEASE-NOTES for next release,3,[],https://github.com/i3/i3/pull/4046,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/4046#issuecomment-622026597,Closes #4040,Yep,True,{}
i3/i3,https://github.com/i3/i3,4046,2020-04-29T16:42:34Z,2020-04-30T19:07:12Z,2020-04-30T19:28:18Z,MERGED,True,40,128,5,https://github.com/orestisfl,Add RELEASE-NOTES for next release,3,[],https://github.com/i3/i3/pull/4046,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/4046#issuecomment-622032908,Closes #4040,up,True,{}
i3/i3,https://github.com/i3/i3,4049,2020-04-30T16:20:32Z,2020-04-30T16:34:23Z,2020-04-30T18:31:55Z,MERGED,True,4,4,3,https://github.com/stapelberg,Fix #ifndef statements: HAVE_ variables are all upper case,1,[],https://github.com/i3/i3/pull/4049,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4049,"The autoconf manual states:
define HAVE_function (in all capitals) if it is available
https://www.gnu.org/savannah-checkouts/gnu/autoconf/manual/autoconf-2.69/html_node/Generic-Functions.html#Generic-Functions","The autoconf manual states:
define HAVE_function (in all capitals) if it is available
https://www.gnu.org/savannah-checkouts/gnu/autoconf/manual/autoconf-2.69/html_node/Generic-Functions.html#Generic-Functions",True,{}
i3/i3,https://github.com/i3/i3,4050,2020-04-30T18:36:35Z,2020-05-01T07:40:47Z,2020-05-01T07:41:14Z,MERGED,True,2,1,1,https://github.com/orestisfl,Bug template: Add collapsible for config file,1,[],https://github.com/i3/i3/pull/4050,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4050,"As discussed in #4022
Potential problem is that this creates a collapsible even if the user does not paste a config file. But I think it's an overall win since we usually don't check the config file until we need it.","As discussed in #4022
Potential problem is that this creates a collapsible even if the user does not paste a config file. But I think it's an overall win since we usually don't check the config file until we need it.",True,{}
i3/i3,https://github.com/i3/i3,4051,2020-04-30T23:16:48Z,2020-05-01T07:43:44Z,2020-05-01T07:44:11Z,MERGED,True,6,6,2,https://github.com/orestisfl,placeholder_t: Make char*s const,1,[],https://github.com/i3/i3/pull/4051,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4051,Similarly to i3/i3status#412,Similarly to i3/i3status#412,True,{}
i3/i3,https://github.com/i3/i3,4054,2020-05-01T18:28:56Z,2020-05-06T15:32:46Z,2020-05-06T15:32:51Z,MERGED,True,2,0,2,https://github.com/orestisfl,randr_query_outputs: call ewmh_update_desktop_properties,1,[],https://github.com/i3/i3/pull/4054,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4054,"Fixes #4053
At this point, we might be better off if we put ewmh_update_desktop_properties in tree_render. We had quite a few bug reports related to this one.","Fixes #4053
At this point, we might be better off if we put ewmh_update_desktop_properties in tree_render. We had quite a few bug reports related to this one.",True,{}
i3/i3,https://github.com/i3/i3,4054,2020-05-01T18:28:56Z,2020-05-06T15:32:46Z,2020-05-06T15:32:51Z,MERGED,True,2,0,2,https://github.com/orestisfl,randr_query_outputs: call ewmh_update_desktop_properties,1,[],https://github.com/i3/i3/pull/4054,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/4054#issuecomment-622929046,"Fixes #4053
At this point, we might be better off if we put ewmh_update_desktop_properties in tree_render. We had quite a few bug reports related to this one.",Something wrong w/ the travis build?,True,{}
i3/i3,https://github.com/i3/i3,4055,2020-05-02T00:37:13Z,2020-05-06T15:31:10Z,2020-05-06T15:31:23Z,MERGED,True,10,7,3,https://github.com/orestisfl,Mention rofi in default config file,1,[],https://github.com/i3/i3/pull/4055,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4055,Fixes #2482,Fixes #2482,True,{}
i3/i3,https://github.com/i3/i3,4057,2020-05-02T12:55:23Z,2020-05-06T15:30:59Z,2020-05-06T15:31:24Z,MERGED,True,175,177,5,https://github.com/orestisfl,Update first 1/3 of hacking-howto document,7,[],https://github.com/i3/i3/pull/4057,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4057,,,True,{}
i3/i3,https://github.com/i3/i3,4065,2020-05-04T17:24:45Z,2020-05-05T15:37:33Z,2020-05-05T15:54:25Z,MERGED,True,4,4,4,https://github.com/orestisfl,travis: Dockerfile: Add build-essential,1,[],https://github.com/i3/i3/pull/4065,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4065,,,True,{}
i3/i3,https://github.com/i3/i3,4067,2020-05-04T23:00:37Z,2020-05-05T07:40:24Z,2020-05-05T11:22:51Z,CLOSED,False,2,0,1,https://github.com/Hi-Angel,etc/config: don't focus notifications in default config,1,[],https://github.com/i3/i3/pull/4067,https://github.com/Hi-Angel,1,https://github.com/i3/i3/pull/4067,"People usually don't want notifications to take focus, because that introduces lots of problems (cursor moves as someone recently reported, transparency goes to the wrong window, keyboard layout suddenly changes…).
While the correct way to fix that would probably be in a core, but I figured it gonna bring many discussions about changing default behavior, and then someone has to do the job, etc… I figured adding the no_focus switch for notifications in the default configuration should be a good compromise.","People usually don't want notifications to take focus, because that introduces lots of problems (cursor moves as someone recently reported, transparency goes to the wrong window, keyboard layout suddenly changes…).
While the correct way to fix that would probably be in a core, but I figured it gonna bring many discussions about changing default behavior, and then someone has to do the job, etc… I figured adding the no_focus switch for notifications in the default configuration should be a good compromise.",True,{}
i3/i3,https://github.com/i3/i3,4067,2020-05-04T23:00:37Z,2020-05-05T07:40:24Z,2020-05-05T11:22:51Z,CLOSED,False,2,0,1,https://github.com/Hi-Angel,etc/config: don't focus notifications in default config,1,[],https://github.com/i3/i3/pull/4067,https://github.com/Hi-Angel,2,https://github.com/i3/i3/pull/4067#issuecomment-623760082,"People usually don't want notifications to take focus, because that introduces lots of problems (cursor moves as someone recently reported, transparency goes to the wrong window, keyboard layout suddenly changes…).
While the correct way to fix that would probably be in a core, but I figured it gonna bring many discussions about changing default behavior, and then someone has to do the job, etc… I figured adding the no_focus switch for notifications in the default configuration should be a good compromise.",Probably worth noting: this directive tested to be working with KDE notifications and ones of notification-daemon (i.e. no DE),True,{}
i3/i3,https://github.com/i3/i3,4067,2020-05-04T23:00:37Z,2020-05-05T07:40:24Z,2020-05-05T11:22:51Z,CLOSED,False,2,0,1,https://github.com/Hi-Angel,etc/config: don't focus notifications in default config,1,[],https://github.com/i3/i3/pull/4067,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/4067#issuecomment-623904790,"People usually don't want notifications to take focus, because that introduces lots of problems (cursor moves as someone recently reported, transparency goes to the wrong window, keyboard layout suddenly changes…).
While the correct way to fix that would probably be in a core, but I figured it gonna bring many discussions about changing default behavior, and then someone has to do the job, etc… I figured adding the no_focus switch for notifications in the default configuration should be a good compromise.","I don't agree with the approach here. i3 already has criteria to decide if focus needs to be set or not in src/manage.c (set_focus). If we fix an issue by changing the config, not every user is going to see the change.
Isn't the issue #3979 you are referring fixed already?",True,{}
i3/i3,https://github.com/i3/i3,4067,2020-05-04T23:00:37Z,2020-05-05T07:40:24Z,2020-05-05T11:22:51Z,CLOSED,False,2,0,1,https://github.com/Hi-Angel,etc/config: don't focus notifications in default config,1,[],https://github.com/i3/i3/pull/4067,https://github.com/Hi-Angel,4,https://github.com/i3/i3/pull/4067#issuecomment-623976737,"People usually don't want notifications to take focus, because that introduces lots of problems (cursor moves as someone recently reported, transparency goes to the wrong window, keyboard layout suddenly changes…).
While the correct way to fix that would probably be in a core, but I figured it gonna bring many discussions about changing default behavior, and then someone has to do the job, etc… I figured adding the no_focus switch for notifications in the default configuration should be a good compromise.","Isn't the issue #3979 you are referring fixed already?

It is fixed. I am not sure why are you asking though, I only devoted to that a short sentence…

I don't agree with the approach here. i3 already has criteria to decide if focus needs to be set or not in src/manage.c (set_focus). If we fix an issue by changing the config, not every user is going to see the change.

Okay, so you're saying it should be addressed in the core. I'll open a new issue on this in that case.",True,{}
i3/i3,https://github.com/i3/i3,4067,2020-05-04T23:00:37Z,2020-05-05T07:40:24Z,2020-05-05T11:22:51Z,CLOSED,False,2,0,1,https://github.com/Hi-Angel,etc/config: don't focus notifications in default config,1,[],https://github.com/i3/i3/pull/4067,https://github.com/orestisfl,5,https://github.com/i3/i3/pull/4067#issuecomment-623981905,"People usually don't want notifications to take focus, because that introduces lots of problems (cursor moves as someone recently reported, transparency goes to the wrong window, keyboard layout suddenly changes…).
While the correct way to fix that would probably be in a core, but I figured it gonna bring many discussions about changing default behavior, and then someone has to do the job, etc… I figured adding the no_focus switch for notifications in the default configuration should be a good compromise.",I am not sure what the issue is in the first place but yes let's track the discussion in a new issue,True,{}
i3/i3,https://github.com/i3/i3,4067,2020-05-04T23:00:37Z,2020-05-05T07:40:24Z,2020-05-05T11:22:51Z,CLOSED,False,2,0,1,https://github.com/Hi-Angel,etc/config: don't focus notifications in default config,1,[],https://github.com/i3/i3/pull/4067,https://github.com/Hi-Angel,6,https://github.com/i3/i3/pull/4067#issuecomment-623986630,"People usually don't want notifications to take focus, because that introduces lots of problems (cursor moves as someone recently reported, transparency goes to the wrong window, keyboard layout suddenly changes…).
While the correct way to fix that would probably be in a core, but I figured it gonna bring many discussions about changing default behavior, and then someone has to do the job, etc… I figured adding the no_focus switch for notifications in the default configuration should be a good compromise.","I am not sure what the issue is in the first place

Hmm… The issue is that notifications gets focused by default. The #3979 you're referring to was about no_focus directive not working in some cases. These are a bit orthogonal: if a user didn't use no_focus against notifications they wouldn't stumble upon #3979.
What I am suggesting here is that notification shouldn't take focus by default.

but yes let's track the discussion in a new issue

Okay. Writing steps-to-reproduce will take some time though. I just figured there seems to be some misunderstanding, so I'm replying here.",True,{}
i3/i3,https://github.com/i3/i3,4067,2020-05-04T23:00:37Z,2020-05-05T07:40:24Z,2020-05-05T11:22:51Z,CLOSED,False,2,0,1,https://github.com/Hi-Angel,etc/config: don't focus notifications in default config,1,[],https://github.com/i3/i3/pull/4067,https://github.com/orestisfl,7,https://github.com/i3/i3/pull/4067#issuecomment-623997143,"People usually don't want notifications to take focus, because that introduces lots of problems (cursor moves as someone recently reported, transparency goes to the wrong window, keyboard layout suddenly changes…).
While the correct way to fix that would probably be in a core, but I figured it gonna bring many discussions about changing default behavior, and then someone has to do the job, etc… I figured adding the no_focus switch for notifications in the default configuration should be a good compromise.","We have to actually confirm if no_focus is needed after #4012 because it seems to have been added to treat the bug. Will the notification be focused without no_focus? If yes, then the window is asking for focus and i3 shouldn't discriminate against it (or alternatively there is another bug), e.g. by a non-standard rule. If no, then there is no bug to be fixed.",True,{}
i3/i3,https://github.com/i3/i3,4068,2020-05-05T10:08:31Z,2020-05-05T16:13:20Z,2020-05-05T16:13:33Z,MERGED,True,3,3,2,https://github.com/orestisfl,Makefile.am: Use BUILT_SOURCES for GENERATED headers,1,[],https://github.com/i3/i3/pull/4068,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4068,"See commit message
Fixes #3670
CC FYI:
@stapelberg
@Hi-Angel (#4020 should be a different issue)","See commit message
Fixes #3670
CC FYI:
@stapelberg
@Hi-Angel (#4020 should be a different issue)",True,{}
i3/i3,https://github.com/i3/i3,4068,2020-05-05T10:08:31Z,2020-05-05T16:13:20Z,2020-05-05T16:13:33Z,MERGED,True,3,3,2,https://github.com/orestisfl,Makefile.am: Use BUILT_SOURCES for GENERATED headers,1,[],https://github.com/i3/i3/pull/4068,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/4068#issuecomment-624130051,"See commit message
Fixes #3670
CC FYI:
@stapelberg
@Hi-Angel (#4020 should be a different issue)",Can you rebase to pick up #4065 please?,True,{}
i3/i3,https://github.com/i3/i3,4068,2020-05-05T10:08:31Z,2020-05-05T16:13:20Z,2020-05-05T16:13:33Z,MERGED,True,3,3,2,https://github.com/orestisfl,Makefile.am: Use BUILT_SOURCES for GENERATED headers,1,[],https://github.com/i3/i3/pull/4068,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/4068#issuecomment-624148563,"See commit message
Fixes #3670
CC FYI:
@stapelberg
@Hi-Angel (#4020 should be a different issue)","Nice find! Thank you.
Can you add a quick mention of https://www.gnu.org/software/automake/manual/html_node/Sources.html to the commit message please?

The commit message is pretty verbose, what are you missing?",True,{}
i3/i3,https://github.com/i3/i3,4068,2020-05-05T10:08:31Z,2020-05-05T16:13:20Z,2020-05-05T16:13:33Z,MERGED,True,3,3,2,https://github.com/orestisfl,Makefile.am: Use BUILT_SOURCES for GENERATED headers,1,[],https://github.com/i3/i3/pull/4068,https://github.com/stapelberg,4,https://github.com/i3/i3/pull/4068#issuecomment-624150338,"See commit message
Fixes #3670
CC FYI:
@stapelberg
@Hi-Angel (#4020 should be a different issue)","Ah, that link is already in the full commit message. Sorry, I didn’t see that because the GitHub UI doesn’t show it at the top of the diff, and I always go straight to the diff. Maybe I should change that habit :)",True,{}
i3/i3,https://github.com/i3/i3,4069,2020-05-05T11:21:21Z,2020-05-05T16:00:12Z,2020-06-02T18:23:51Z,MERGED,True,2,1,1,https://github.com/Hi-Angel,Makefile.am: make sure i3-config-wizard depends on libi3.a,1,[],https://github.com/i3/i3/pull/4069,https://github.com/Hi-Angel,1,https://github.com/i3/i3/pull/4069,"i3-config-wizard uses libi3.a as part of its build process. When
parallel build is enabled, build of i3-config-wizard may start before
libi3.a finished building. Fix this by adding dependency on libi3.a
Fixes: #4020","i3-config-wizard uses libi3.a as part of its build process. When
parallel build is enabled, build of i3-config-wizard may start before
libi3.a finished building. Fix this by adding dependency on libi3.a
Fixes: #4020",True,{}
i3/i3,https://github.com/i3/i3,4069,2020-05-05T11:21:21Z,2020-05-05T16:00:12Z,2020-06-02T18:23:51Z,MERGED,True,2,1,1,https://github.com/Hi-Angel,Makefile.am: make sure i3-config-wizard depends on libi3.a,1,[],https://github.com/i3/i3/pull/4069,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/4069#issuecomment-624003226,"i3-config-wizard uses libi3.a as part of its build process. When
parallel build is enabled, build of i3-config-wizard may start before
libi3.a finished building. Fix this by adding dependency on libi3.a
Fixes: #4020","Hmm, I am now having second thoughts that this is valid approach since I can see the libi3.a -> i3-config-wizard/i3-config-wizard dependency before your patch (see #3670 (comment) for a cool way to visualize).
I noticed that I can't trigger the bug on my machine even without your patch. Maybe you can try a few more times and see if it actually fixes it? Thank you.",True,{}
i3/i3,https://github.com/i3/i3,4069,2020-05-05T11:21:21Z,2020-05-05T16:00:12Z,2020-06-02T18:23:51Z,MERGED,True,2,1,1,https://github.com/Hi-Angel,Makefile.am: make sure i3-config-wizard depends on libi3.a,1,[],https://github.com/i3/i3/pull/4069,https://github.com/Hi-Angel,3,https://github.com/i3/i3/pull/4069#issuecomment-624003758,"i3-config-wizard uses libi3.a as part of its build process. When
parallel build is enabled, build of i3-config-wizard may start before
libi3.a finished building. Fix this by adding dependency on libi3.a
Fixes: #4020","Sure. Yeah, it is hard with floating bugs.",True,{'THUMBS_UP': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,4069,2020-05-05T11:21:21Z,2020-05-05T16:00:12Z,2020-06-02T18:23:51Z,MERGED,True,2,1,1,https://github.com/Hi-Angel,Makefile.am: make sure i3-config-wizard depends on libi3.a,1,[],https://github.com/i3/i3/pull/4069,https://github.com/Hi-Angel,4,https://github.com/i3/i3/pull/4069#issuecomment-624015510,"i3-config-wizard uses libi3.a as part of its build process. When
parallel build is enabled, build of i3-config-wizard may start before
libi3.a finished building. Fix this by adding dependency on libi3.a
Fixes: #4020","Okay, so, I ran build a hundred of times with the following script
#!/bin/sh
set -e
for _ in {0..100}; do
    make clean && make -j8
done
and no build failures happened to me.",True,{}
i3/i3,https://github.com/i3/i3,4069,2020-05-05T11:21:21Z,2020-05-05T16:00:12Z,2020-06-02T18:23:51Z,MERGED,True,2,1,1,https://github.com/Hi-Angel,Makefile.am: make sure i3-config-wizard depends on libi3.a,1,[],https://github.com/i3/i3/pull/4069,https://github.com/orestisfl,5,https://github.com/i3/i3/pull/4069#issuecomment-624028493,"i3-config-wizard uses libi3.a as part of its build process. When
parallel build is enabled, build of i3-config-wizard may start before
libi3.a finished building. Fix this by adding dependency on libi3.a
Fixes: #4020","Ok, for me the bug is specific to my makepkg configuration for some reason. I can't trigger it manually but if I run makepkg on the i3-git package it triggers.
Anyway, I can now confirm that your patch fixes the problem for me as well.",True,{}
i3/i3,https://github.com/i3/i3,4069,2020-05-05T11:21:21Z,2020-05-05T16:00:12Z,2020-06-02T18:23:51Z,MERGED,True,2,1,1,https://github.com/Hi-Angel,Makefile.am: make sure i3-config-wizard depends on libi3.a,1,[],https://github.com/i3/i3/pull/4069,https://github.com/Hi-Angel,6,https://github.com/i3/i3/pull/4069#issuecomment-624121506,"i3-config-wizard uses libi3.a as part of its build process. When
parallel build is enabled, build of i3-config-wizard may start before
libi3.a finished building. Fix this by adding dependency on libi3.a
Fixes: #4020","I can see the libi3.a -> i3-config-wizard/i3-config-wizard dependency before your patch (see #3670 (comment) for a cool way to visualize).

The comment was posted in 2019, perhaps something could have changed since then. I just tried making a similar graph, but I'm getting empty output from make2graph, probably this issue. So can't check that.
Overall makes me wonder if it's worth switching from autotools to Meson. Many projects did so, it improves build system maintainability and performance.",True,{}
i3/i3,https://github.com/i3/i3,4069,2020-05-05T11:21:21Z,2020-05-05T16:00:12Z,2020-06-02T18:23:51Z,MERGED,True,2,1,1,https://github.com/Hi-Angel,Makefile.am: make sure i3-config-wizard depends on libi3.a,1,[],https://github.com/i3/i3/pull/4069,https://github.com/stapelberg,7,https://github.com/i3/i3/pull/4069#issuecomment-624134507,"i3-config-wizard uses libi3.a as part of its build process. When
parallel build is enabled, build of i3-config-wizard may start before
libi3.a finished building. Fix this by adding dependency on libi3.a
Fixes: #4020","Overall makes me wonder if it's worth switching from autotools to Meson. Many projects did so, it improves build system maintainability and performance.

Yes, this has been in the back of my mind, too. I have seen how much quicker meson is, and the language doesn’t look bad — certainly an improvement over autotools :)
I haven’t gotten around to writing a meson build file for i3 yet, though. If someone wanted to send a pull request to get the ball rolling, that would be cool.",True,{'THUMBS_UP': ['https://github.com/Hi-Angel']}
i3/i3,https://github.com/i3/i3,4069,2020-05-05T11:21:21Z,2020-05-05T16:00:12Z,2020-06-02T18:23:51Z,MERGED,True,2,1,1,https://github.com/Hi-Angel,Makefile.am: make sure i3-config-wizard depends on libi3.a,1,[],https://github.com/i3/i3/pull/4069,https://github.com/Hi-Angel,8,https://github.com/i3/i3/pull/4069#issuecomment-624140672,"i3-config-wizard uses libi3.a as part of its build process. When
parallel build is enabled, build of i3-config-wizard may start before
libi3.a finished building. Fix this by adding dependency on libi3.a
Fixes: #4020",(rebased),True,{}
i3/i3,https://github.com/i3/i3,4069,2020-05-05T11:21:21Z,2020-05-05T16:00:12Z,2020-06-02T18:23:51Z,MERGED,True,2,1,1,https://github.com/Hi-Angel,Makefile.am: make sure i3-config-wizard depends on libi3.a,1,[],https://github.com/i3/i3/pull/4069,https://github.com/stapelberg,9,https://github.com/i3/i3/pull/4069#issuecomment-624142987,"i3-config-wizard uses libi3.a as part of its build process. When
parallel build is enabled, build of i3-config-wizard may start before
libi3.a finished building. Fix this by adding dependency on libi3.a
Fixes: #4020",Thank you!,True,{}
i3/i3,https://github.com/i3/i3,4069,2020-05-05T11:21:21Z,2020-05-05T16:00:12Z,2020-06-02T18:23:51Z,MERGED,True,2,1,1,https://github.com/Hi-Angel,Makefile.am: make sure i3-config-wizard depends on libi3.a,1,[],https://github.com/i3/i3/pull/4069,https://github.com/orestisfl,10,https://github.com/i3/i3/pull/4069#issuecomment-624144999,"i3-config-wizard uses libi3.a as part of its build process. When
parallel build is enabled, build of i3-config-wizard may start before
libi3.a finished building. Fix this by adding dependency on libi3.a
Fixes: #4020","I can see the libi3.a -> i3-config-wizard/i3-config-wizard dependency before your patch (see #3670 (comment) for a cool way to visualize).

The comment was posted in 2019, perhaps something could have changed since then. I just tried making a similar graph, but I'm getting empty output from make2graph, probably this issue. So can't check that.
Overall makes me wonder if it's worth switching from autotools to Meson. Many projects did so, it improves build system maintainability and performance.

make2graph works for me, tried it today",True,{}
i3/i3,https://github.com/i3/i3,4069,2020-05-05T11:21:21Z,2020-05-05T16:00:12Z,2020-06-02T18:23:51Z,MERGED,True,2,1,1,https://github.com/Hi-Angel,Makefile.am: make sure i3-config-wizard depends on libi3.a,1,[],https://github.com/i3/i3/pull/4069,https://github.com/jilljenn,11,https://github.com/i3/i3/pull/4069#issuecomment-637723816,"i3-config-wizard uses libi3.a as part of its build process. When
parallel build is enabled, build of i3-config-wizard may start before
libi3.a finished building. Fix this by adding dependency on libi3.a
Fixes: #4020","The comment was posted in 2019, perhaps something could have changed since then. I just tried making a similar graph, but I'm getting empty output from make2graph, probably this issue. So can't check that.

OK I got it! You need to have your bash in English first: export LC_ALL=C",True,"{'THUMBS_UP': ['https://github.com/Hi-Angel', 'https://github.com/stapelberg']}"
i3/i3,https://github.com/i3/i3,4071,2020-05-05T16:08:51Z,2020-05-05T17:14:06Z,2020-05-05T17:38:52Z,MERGED,True,32,0,1,https://github.com/orestisfl,Re-add v4.18.1 release notes,1,[],https://github.com/i3/i3/pull/4071,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4071,"Fixes travis builds on next (non-PR)
Closes #4040","Fixes travis builds on next (non-PR)
Closes #4040",True,{}
i3/i3,https://github.com/i3/i3,4081,2020-05-13T22:16:49Z,2020-05-14T06:34:49Z,2020-05-14T06:36:38Z,MERGED,True,49,15,2,https://github.com/orestisfl,i3bar mode: Fix regression: bar_id can be NULL,2,[],https://github.com/i3/i3/pull/4081,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4081,"Regression introduced by #4014
Fixes #4080","Regression introduced by #4014
Fixes #4080",True,{}
i3/i3,https://github.com/i3/i3,4084,2020-05-14T19:55:51Z,2020-05-15T08:02:59Z,2020-05-15T08:09:25Z,MERGED,True,3,3,1,https://github.com/orestisfl,get_output_by_name: guard output->primary with require_active,1,[],https://github.com/i3/i3/pull/4084,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4084,"This is related to #4048 but might not fix it completely. Either way, this should be the correct behaviour of the function.","This is related to #4048 but might not fix it completely. Either way, this should be the correct behaviour of the function.",True,{}
i3/i3,https://github.com/i3/i3,4088,2020-05-17T13:23:53Z,2020-05-18T16:25:20Z,2020-05-18T18:28:09Z,MERGED,True,5,0,1,https://github.com/stapelberg,free(socket_path) to suppress leak sanitizer false-positive with -O2,1,[],https://github.com/i3/i3/pull/4088,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4088,"related to #4086 (triggered by our meson config)
related to #4087 (sanitizer cleanup tracking bug)","related to #4086 (triggered by our meson config)
related to #4087 (sanitizer cleanup tracking bug)",True,{}
i3/i3,https://github.com/i3/i3,4089,2020-05-17T14:40:31Z,2020-05-18T07:54:52Z,2020-05-18T08:01:34Z,MERGED,True,109,74,15,https://github.com/stapelberg,"xmacro: declare in header files, instantiate instead of include",1,[],https://github.com/i3/i3/pull/4089,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4089,"This works better with meson, where .h files can be declared as being part of an
executable easily, but I couldn’t find a way to declare
e.g. include/atoms.xmacro as a dependency.
related to #4086","This works better with meson, where .h files can be declared as being part of an
executable easily, but I couldn’t find a way to declare
e.g. include/atoms.xmacro as a dependency.
related to #4086",True,{}
i3/i3,https://github.com/i3/i3,4089,2020-05-17T14:40:31Z,2020-05-18T07:54:52Z,2020-05-18T08:01:34Z,MERGED,True,109,74,15,https://github.com/stapelberg,"xmacro: declare in header files, instantiate instead of include",1,[],https://github.com/i3/i3/pull/4089,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/4089#issuecomment-629871187,"This works better with meson, where .h files can be declared as being part of an
executable easily, but I couldn’t find a way to declare
e.g. include/atoms.xmacro as a dependency.
related to #4086","Just for my understanding, wouldn't you be able to just rename these files to be header files, everything else the same?",True,{}
i3/i3,https://github.com/i3/i3,4089,2020-05-17T14:40:31Z,2020-05-18T07:54:52Z,2020-05-18T08:01:34Z,MERGED,True,109,74,15,https://github.com/stapelberg,"xmacro: declare in header files, instantiate instead of include",1,[],https://github.com/i3/i3/pull/4089,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/4089#issuecomment-629971644,"This works better with meson, where .h files can be declared as being part of an
executable easily, but I couldn’t find a way to declare
e.g. include/atoms.xmacro as a dependency.
related to #4086","I haven’t tried that. I think the answer might be yes, but I’m not sure if it will stay that way.
In general, I thought we were following https://en.wikipedia.org/wiki/X_Macro, but we weren’t. With this change, our usage of x macros is closer to how they are documented on wikipedia, which I think means it’s a cleaner way and more likely to be working in every environment.",True,{}
i3/i3,https://github.com/i3/i3,4090,2020-05-17T15:27:42Z,2020-05-17T22:30:16Z,2020-05-18T06:24:02Z,MERGED,True,2,2,2,https://github.com/stapelberg,"build AnyEvent::I3 in build dir, not source dir",1,[],https://github.com/i3/i3/pull/4090,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4090,related to #4086,related to #4086,True,{}
i3/i3,https://github.com/i3/i3,4092,2020-05-18T18:39:51Z,2020-05-18T19:23:44Z,2020-05-18T19:32:55Z,MERGED,True,2,14,4,https://github.com/stapelberg,"update forgotten srcdir AnyEvent-I3 reference, remove xmacro files",1,[],https://github.com/i3/i3/pull/4092,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4092,"Both oversights in the previous commits.
related to #4086","Both oversights in the previous commits.
related to #4086",True,{}
i3/i3,https://github.com/i3/i3,4093,2020-05-18T19:39:21Z,2020-05-18T20:18:01Z,2020-05-18T20:18:01Z,MERGED,True,39,45,4,https://github.com/stapelberg,"autotools: place binaries in top level of build dir, not in subdirs",1,[],https://github.com/i3/i3/pull/4093,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4093,"meson only supports the top level (no subdirs), so this makes the transition
easier.
For this to work with autotools, we need to disable the subdir-objects option,
that autotools wants us to enable for forward-compatibility.
This results in a bunch of warnings at autoreconf-time, but we don’t care, given
that we intend to switch away from autotools. Both build systems working next to
each other (as best as they can) is more important.
related to #4086","meson only supports the top level (no subdirs), so this makes the transition
easier.
For this to work with autotools, we need to disable the subdir-objects option,
that autotools wants us to enable for forward-compatibility.
This results in a bunch of warnings at autoreconf-time, but we don’t care, given
that we intend to switch away from autotools. Both build systems working next to
each other (as best as they can) is more important.
related to #4086",True,{}
i3/i3,https://github.com/i3/i3,4093,2020-05-18T19:39:21Z,2020-05-18T20:18:01Z,2020-05-18T20:18:01Z,MERGED,True,39,45,4,https://github.com/stapelberg,"autotools: place binaries in top level of build dir, not in subdirs",1,[],https://github.com/i3/i3/pull/4093,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/4093#issuecomment-630412716,"meson only supports the top level (no subdirs), so this makes the transition
easier.
For this to work with autotools, we need to disable the subdir-objects option,
that autotools wants us to enable for forward-compatibility.
This results in a bunch of warnings at autoreconf-time, but we don’t care, given
that we intend to switch away from autotools. Both build systems working next to
each other (as best as they can) is more important.
related to #4086","Pretty sure. The commit message of the pull request I’m about to send has more details on the migration plan. Quoting it:

Migration plan
This commit adds the meson build files to the tree, but does not remove
autotools yet. For the development phase, we will keep both build systems
functional (and built on travis).
Then, just before the i3 v4.19 release, we will remove autotools from the tree
and the release tarball will require meson to compile.
This way, we incentivize maintainers to change, while also offering them an easy
way out (if desired) by reverting the most recent commit. In practice, switching
a distribution package from autotools to meson should only be a few line change,
easier than applying the provided patch :). Take a look at the debian/ changes
in this commit for an example.
meson is broadly available everywhere that i3 is available: Both xorg-server and
systemd gained meson build files in 2017, so we can follow suit:
https://anholt.livejournal.com/52574.html
https://in.waw.pl/~zbyszek/blog/systemd-meson.html",True,{}
i3/i3,https://github.com/i3/i3,4094,2020-05-18T20:34:25Z,2020-05-19T12:45:07Z,2020-05-19T12:46:18Z,MERGED,True,734,38,20,https://github.com/stapelberg,add meson build files,1,[],https://github.com/i3/i3/pull/4094,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4094,"Motivation:
• faster builds (on an Intel Core i9-9900K):
( ../configure --disable-sanitizers && make -j8; )
19,47s user 2,78s system 395% cpu 5,632 total
( meson .. -Dmans=true -Ddocs=true -Dprefix=/usr && ninja; )
38,67s user 3,73s system 1095% cpu 3,871 total
• more approachable build system configuration in the
python-esque meson domain specific language instead of
the autotools m4 macro language
• built-in language server support thanks to ninja:
the required compile_commands.json is built automatically
and only needs to be linked from the source dir, e.g.:
ln -s build/compile_commands.json .
Changes:
• the embedded vcs version info format changed from e.g.
4.18-282-gabe46f69 (2020-05-16, branch ""next"")
to:
4.18-282-gabe46f69
I think it’s better to lose a little bit of detail for
the gained cleanliness of using meson’s vcs_tag()
• Drop unused xcb-event dependency.
• We can no longer enable sanitizers and debug options
based on whether we are in a release or non-release build,
because our new version logic runs at ninja build time,
not at meson configure time.
The new behavior is probably for the better in terms of
what people expect, and we can make the CI use address sanitizer
explicitly to ensure it is still exercised.
• We lose the AX_EXTEND_SRCDIR behavior, i.e. including the
path component of the parent of the source dir in all paths.
This was a trick we used for easier debugging, so that stack
traces would contain e.g. ../i3-4.18.1/src/main.c, instead of
just src/main.c.
The other mechanism (_i3_version symbol) that we have for including
the version number in the “backtrace full” (but not merely
“backtrace”) output of gdb still works.
• Release tarballs now use tar.xz. Why not.
Migration plan
This commit adds the meson build files to the tree, but does not remove
autotools yet. For the development phase, we will keep both build systems
functional (and built on travis).
Then, just before the i3 v4.19 release, we will remove autotools from the tree
and the release tarball will require meson to compile.
This way, we incentivize maintainers to change, while also offering them an easy
way out (if desired) by reverting the most recent commit. In practice, switching
a distribution package from autotools to meson should only be a few line change,
easier than applying the provided patch :). Take a look at the debian/ changes
in this commit for an example.
meson is broadly available everywhere that i3 is available: Both xorg-server and
systemd gained meson build files in 2017, so we can follow suit:
https://anholt.livejournal.com/52574.html
https://in.waw.pl/~zbyszek/blog/systemd-meson.html
How do I?
For producing a coverage report, enable the b_coverage meson base option
and run ninja coverage-html:
% cd build
% meson .. -Db_coverage=true
% ninja
% ninja test
% ninja coverage-html
See also https://mesonbuild.com/howtox.html#producing-a-coverage-report
For using the address sanitizer, memory sanitizer or undefined behavior
sanitizer, use the b_sanitize meson base option:
% cd build
% meson .. -Db_sanitize=address
% ninja
See also https://mesonbuild.com/Builtin-options.html#base-options
related to #4086","Motivation:
• faster builds (on an Intel Core i9-9900K):
( ../configure --disable-sanitizers && make -j8; )
19,47s user 2,78s system 395% cpu 5,632 total
( meson .. -Dmans=true -Ddocs=true -Dprefix=/usr && ninja; )
38,67s user 3,73s system 1095% cpu 3,871 total
• more approachable build system configuration in the
python-esque meson domain specific language instead of
the autotools m4 macro language
• built-in language server support thanks to ninja:
the required compile_commands.json is built automatically
and only needs to be linked from the source dir, e.g.:
ln -s build/compile_commands.json .
Changes:
• the embedded vcs version info format changed from e.g.
4.18-282-gabe46f69 (2020-05-16, branch ""next"")
to:
4.18-282-gabe46f69
I think it’s better to lose a little bit of detail for
the gained cleanliness of using meson’s vcs_tag()
• Drop unused xcb-event dependency.
• We can no longer enable sanitizers and debug options
based on whether we are in a release or non-release build,
because our new version logic runs at ninja build time,
not at meson configure time.
The new behavior is probably for the better in terms of
what people expect, and we can make the CI use address sanitizer
explicitly to ensure it is still exercised.
• We lose the AX_EXTEND_SRCDIR behavior, i.e. including the
path component of the parent of the source dir in all paths.
This was a trick we used for easier debugging, so that stack
traces would contain e.g. ../i3-4.18.1/src/main.c, instead of
just src/main.c.
The other mechanism (_i3_version symbol) that we have for including
the version number in the “backtrace full” (but not merely
“backtrace”) output of gdb still works.
• Release tarballs now use tar.xz. Why not.
Migration plan
This commit adds the meson build files to the tree, but does not remove
autotools yet. For the development phase, we will keep both build systems
functional (and built on travis).
Then, just before the i3 v4.19 release, we will remove autotools from the tree
and the release tarball will require meson to compile.
This way, we incentivize maintainers to change, while also offering them an easy
way out (if desired) by reverting the most recent commit. In practice, switching
a distribution package from autotools to meson should only be a few line change,
easier than applying the provided patch :). Take a look at the debian/ changes
in this commit for an example.
meson is broadly available everywhere that i3 is available: Both xorg-server and
systemd gained meson build files in 2017, so we can follow suit:
https://anholt.livejournal.com/52574.html
https://in.waw.pl/~zbyszek/blog/systemd-meson.html
How do I?
For producing a coverage report, enable the b_coverage meson base option
and run ninja coverage-html:
% cd build
% meson .. -Db_coverage=true
% ninja
% ninja test
% ninja coverage-html
See also https://mesonbuild.com/howtox.html#producing-a-coverage-report
For using the address sanitizer, memory sanitizer or undefined behavior
sanitizer, use the b_sanitize meson base option:
% cd build
% meson .. -Db_sanitize=address
% ninja
See also https://mesonbuild.com/Builtin-options.html#base-options
related to #4086",True,{}
i3/i3,https://github.com/i3/i3,4094,2020-05-18T20:34:25Z,2020-05-19T12:45:07Z,2020-05-19T12:46:18Z,MERGED,True,734,38,20,https://github.com/stapelberg,add meson build files,1,[],https://github.com/i3/i3/pull/4094,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/4094#issuecomment-630627013,"Motivation:
• faster builds (on an Intel Core i9-9900K):
( ../configure --disable-sanitizers && make -j8; )
19,47s user 2,78s system 395% cpu 5,632 total
( meson .. -Dmans=true -Ddocs=true -Dprefix=/usr && ninja; )
38,67s user 3,73s system 1095% cpu 3,871 total
• more approachable build system configuration in the
python-esque meson domain specific language instead of
the autotools m4 macro language
• built-in language server support thanks to ninja:
the required compile_commands.json is built automatically
and only needs to be linked from the source dir, e.g.:
ln -s build/compile_commands.json .
Changes:
• the embedded vcs version info format changed from e.g.
4.18-282-gabe46f69 (2020-05-16, branch ""next"")
to:
4.18-282-gabe46f69
I think it’s better to lose a little bit of detail for
the gained cleanliness of using meson’s vcs_tag()
• Drop unused xcb-event dependency.
• We can no longer enable sanitizers and debug options
based on whether we are in a release or non-release build,
because our new version logic runs at ninja build time,
not at meson configure time.
The new behavior is probably for the better in terms of
what people expect, and we can make the CI use address sanitizer
explicitly to ensure it is still exercised.
• We lose the AX_EXTEND_SRCDIR behavior, i.e. including the
path component of the parent of the source dir in all paths.
This was a trick we used for easier debugging, so that stack
traces would contain e.g. ../i3-4.18.1/src/main.c, instead of
just src/main.c.
The other mechanism (_i3_version symbol) that we have for including
the version number in the “backtrace full” (but not merely
“backtrace”) output of gdb still works.
• Release tarballs now use tar.xz. Why not.
Migration plan
This commit adds the meson build files to the tree, but does not remove
autotools yet. For the development phase, we will keep both build systems
functional (and built on travis).
Then, just before the i3 v4.19 release, we will remove autotools from the tree
and the release tarball will require meson to compile.
This way, we incentivize maintainers to change, while also offering them an easy
way out (if desired) by reverting the most recent commit. In practice, switching
a distribution package from autotools to meson should only be a few line change,
easier than applying the provided patch :). Take a look at the debian/ changes
in this commit for an example.
meson is broadly available everywhere that i3 is available: Both xorg-server and
systemd gained meson build files in 2017, so we can follow suit:
https://anholt.livejournal.com/52574.html
https://in.waw.pl/~zbyszek/blog/systemd-meson.html
How do I?
For producing a coverage report, enable the b_coverage meson base option
and run ninja coverage-html:
% cd build
% meson .. -Db_coverage=true
% ninja
% ninja test
% ninja coverage-html
See also https://mesonbuild.com/howtox.html#producing-a-coverage-report
For using the address sanitizer, memory sanitizer or undefined behavior
sanitizer, use the b_sanitize meson base option:
% cd build
% meson .. -Db_sanitize=address
% ninja
See also https://mesonbuild.com/Builtin-options.html#base-options
related to #4086",Can you update the release notes as well?,True,{}
i3/i3,https://github.com/i3/i3,4094,2020-05-18T20:34:25Z,2020-05-19T12:45:07Z,2020-05-19T12:46:18Z,MERGED,True,734,38,20,https://github.com/stapelberg,add meson build files,1,[],https://github.com/i3/i3/pull/4094,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/4094#issuecomment-630627597,"Motivation:
• faster builds (on an Intel Core i9-9900K):
( ../configure --disable-sanitizers && make -j8; )
19,47s user 2,78s system 395% cpu 5,632 total
( meson .. -Dmans=true -Ddocs=true -Dprefix=/usr && ninja; )
38,67s user 3,73s system 1095% cpu 3,871 total
• more approachable build system configuration in the
python-esque meson domain specific language instead of
the autotools m4 macro language
• built-in language server support thanks to ninja:
the required compile_commands.json is built automatically
and only needs to be linked from the source dir, e.g.:
ln -s build/compile_commands.json .
Changes:
• the embedded vcs version info format changed from e.g.
4.18-282-gabe46f69 (2020-05-16, branch ""next"")
to:
4.18-282-gabe46f69
I think it’s better to lose a little bit of detail for
the gained cleanliness of using meson’s vcs_tag()
• Drop unused xcb-event dependency.
• We can no longer enable sanitizers and debug options
based on whether we are in a release or non-release build,
because our new version logic runs at ninja build time,
not at meson configure time.
The new behavior is probably for the better in terms of
what people expect, and we can make the CI use address sanitizer
explicitly to ensure it is still exercised.
• We lose the AX_EXTEND_SRCDIR behavior, i.e. including the
path component of the parent of the source dir in all paths.
This was a trick we used for easier debugging, so that stack
traces would contain e.g. ../i3-4.18.1/src/main.c, instead of
just src/main.c.
The other mechanism (_i3_version symbol) that we have for including
the version number in the “backtrace full” (but not merely
“backtrace”) output of gdb still works.
• Release tarballs now use tar.xz. Why not.
Migration plan
This commit adds the meson build files to the tree, but does not remove
autotools yet. For the development phase, we will keep both build systems
functional (and built on travis).
Then, just before the i3 v4.19 release, we will remove autotools from the tree
and the release tarball will require meson to compile.
This way, we incentivize maintainers to change, while also offering them an easy
way out (if desired) by reverting the most recent commit. In practice, switching
a distribution package from autotools to meson should only be a few line change,
easier than applying the provided patch :). Take a look at the debian/ changes
in this commit for an example.
meson is broadly available everywhere that i3 is available: Both xorg-server and
systemd gained meson build files in 2017, so we can follow suit:
https://anholt.livejournal.com/52574.html
https://in.waw.pl/~zbyszek/blog/systemd-meson.html
How do I?
For producing a coverage report, enable the b_coverage meson base option
and run ninja coverage-html:
% cd build
% meson .. -Db_coverage=true
% ninja
% ninja test
% ninja coverage-html
See also https://mesonbuild.com/howtox.html#producing-a-coverage-report
For using the address sanitizer, memory sanitizer or undefined behavior
sanitizer, use the b_sanitize meson base option:
% cd build
% meson .. -Db_sanitize=address
% ninja
See also https://mesonbuild.com/Builtin-options.html#base-options
related to #4086",This also closes a bunch of build-related issues. Are we going to close them with this PR or with the PR that removes autotools?,True,{}
i3/i3,https://github.com/i3/i3,4094,2020-05-18T20:34:25Z,2020-05-19T12:45:07Z,2020-05-19T12:46:18Z,MERGED,True,734,38,20,https://github.com/stapelberg,add meson build files,1,[],https://github.com/i3/i3/pull/4094,https://github.com/stapelberg,4,https://github.com/i3/i3/pull/4094#issuecomment-630631098,"Motivation:
• faster builds (on an Intel Core i9-9900K):
( ../configure --disable-sanitizers && make -j8; )
19,47s user 2,78s system 395% cpu 5,632 total
( meson .. -Dmans=true -Ddocs=true -Dprefix=/usr && ninja; )
38,67s user 3,73s system 1095% cpu 3,871 total
• more approachable build system configuration in the
python-esque meson domain specific language instead of
the autotools m4 macro language
• built-in language server support thanks to ninja:
the required compile_commands.json is built automatically
and only needs to be linked from the source dir, e.g.:
ln -s build/compile_commands.json .
Changes:
• the embedded vcs version info format changed from e.g.
4.18-282-gabe46f69 (2020-05-16, branch ""next"")
to:
4.18-282-gabe46f69
I think it’s better to lose a little bit of detail for
the gained cleanliness of using meson’s vcs_tag()
• Drop unused xcb-event dependency.
• We can no longer enable sanitizers and debug options
based on whether we are in a release or non-release build,
because our new version logic runs at ninja build time,
not at meson configure time.
The new behavior is probably for the better in terms of
what people expect, and we can make the CI use address sanitizer
explicitly to ensure it is still exercised.
• We lose the AX_EXTEND_SRCDIR behavior, i.e. including the
path component of the parent of the source dir in all paths.
This was a trick we used for easier debugging, so that stack
traces would contain e.g. ../i3-4.18.1/src/main.c, instead of
just src/main.c.
The other mechanism (_i3_version symbol) that we have for including
the version number in the “backtrace full” (but not merely
“backtrace”) output of gdb still works.
• Release tarballs now use tar.xz. Why not.
Migration plan
This commit adds the meson build files to the tree, but does not remove
autotools yet. For the development phase, we will keep both build systems
functional (and built on travis).
Then, just before the i3 v4.19 release, we will remove autotools from the tree
and the release tarball will require meson to compile.
This way, we incentivize maintainers to change, while also offering them an easy
way out (if desired) by reverting the most recent commit. In practice, switching
a distribution package from autotools to meson should only be a few line change,
easier than applying the provided patch :). Take a look at the debian/ changes
in this commit for an example.
meson is broadly available everywhere that i3 is available: Both xorg-server and
systemd gained meson build files in 2017, so we can follow suit:
https://anholt.livejournal.com/52574.html
https://in.waw.pl/~zbyszek/blog/systemd-meson.html
How do I?
For producing a coverage report, enable the b_coverage meson base option
and run ninja coverage-html:
% cd build
% meson .. -Db_coverage=true
% ninja
% ninja test
% ninja coverage-html
See also https://mesonbuild.com/howtox.html#producing-a-coverage-report
For using the address sanitizer, memory sanitizer or undefined behavior
sanitizer, use the b_sanitize meson base option:
% cd build
% meson .. -Db_sanitize=address
% ninja
See also https://mesonbuild.com/Builtin-options.html#base-options
related to #4086","Can you update the release notes as well?

Done",True,{'THUMBS_UP': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,4094,2020-05-18T20:34:25Z,2020-05-19T12:45:07Z,2020-05-19T12:46:18Z,MERGED,True,734,38,20,https://github.com/stapelberg,add meson build files,1,[],https://github.com/i3/i3/pull/4094,https://github.com/stapelberg,5,https://github.com/i3/i3/pull/4094#issuecomment-630631311,"Motivation:
• faster builds (on an Intel Core i9-9900K):
( ../configure --disable-sanitizers && make -j8; )
19,47s user 2,78s system 395% cpu 5,632 total
( meson .. -Dmans=true -Ddocs=true -Dprefix=/usr && ninja; )
38,67s user 3,73s system 1095% cpu 3,871 total
• more approachable build system configuration in the
python-esque meson domain specific language instead of
the autotools m4 macro language
• built-in language server support thanks to ninja:
the required compile_commands.json is built automatically
and only needs to be linked from the source dir, e.g.:
ln -s build/compile_commands.json .
Changes:
• the embedded vcs version info format changed from e.g.
4.18-282-gabe46f69 (2020-05-16, branch ""next"")
to:
4.18-282-gabe46f69
I think it’s better to lose a little bit of detail for
the gained cleanliness of using meson’s vcs_tag()
• Drop unused xcb-event dependency.
• We can no longer enable sanitizers and debug options
based on whether we are in a release or non-release build,
because our new version logic runs at ninja build time,
not at meson configure time.
The new behavior is probably for the better in terms of
what people expect, and we can make the CI use address sanitizer
explicitly to ensure it is still exercised.
• We lose the AX_EXTEND_SRCDIR behavior, i.e. including the
path component of the parent of the source dir in all paths.
This was a trick we used for easier debugging, so that stack
traces would contain e.g. ../i3-4.18.1/src/main.c, instead of
just src/main.c.
The other mechanism (_i3_version symbol) that we have for including
the version number in the “backtrace full” (but not merely
“backtrace”) output of gdb still works.
• Release tarballs now use tar.xz. Why not.
Migration plan
This commit adds the meson build files to the tree, but does not remove
autotools yet. For the development phase, we will keep both build systems
functional (and built on travis).
Then, just before the i3 v4.19 release, we will remove autotools from the tree
and the release tarball will require meson to compile.
This way, we incentivize maintainers to change, while also offering them an easy
way out (if desired) by reverting the most recent commit. In practice, switching
a distribution package from autotools to meson should only be a few line change,
easier than applying the provided patch :). Take a look at the debian/ changes
in this commit for an example.
meson is broadly available everywhere that i3 is available: Both xorg-server and
systemd gained meson build files in 2017, so we can follow suit:
https://anholt.livejournal.com/52574.html
https://in.waw.pl/~zbyszek/blog/systemd-meson.html
How do I?
For producing a coverage report, enable the b_coverage meson base option
and run ninja coverage-html:
% cd build
% meson .. -Db_coverage=true
% ninja
% ninja test
% ninja coverage-html
See also https://mesonbuild.com/howtox.html#producing-a-coverage-report
For using the address sanitizer, memory sanitizer or undefined behavior
sanitizer, use the b_sanitize meson base option:
% cd build
% meson .. -Db_sanitize=address
% ninja
See also https://mesonbuild.com/Builtin-options.html#base-options
related to #4086","This also closes a bunch of build-related issues. Are we going to close them with this PR or with the PR that removes autotools?

Do you have a list? I think we can close them in this issue, as meson is the preferred build system once this is merged.",True,{'THUMBS_UP': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,4094,2020-05-18T20:34:25Z,2020-05-19T12:45:07Z,2020-05-19T12:46:18Z,MERGED,True,734,38,20,https://github.com/stapelberg,add meson build files,1,[],https://github.com/i3/i3/pull/4094,https://github.com/stapelberg,6,https://github.com/i3/i3/pull/4094#issuecomment-630631747,"Motivation:
• faster builds (on an Intel Core i9-9900K):
( ../configure --disable-sanitizers && make -j8; )
19,47s user 2,78s system 395% cpu 5,632 total
( meson .. -Dmans=true -Ddocs=true -Dprefix=/usr && ninja; )
38,67s user 3,73s system 1095% cpu 3,871 total
• more approachable build system configuration in the
python-esque meson domain specific language instead of
the autotools m4 macro language
• built-in language server support thanks to ninja:
the required compile_commands.json is built automatically
and only needs to be linked from the source dir, e.g.:
ln -s build/compile_commands.json .
Changes:
• the embedded vcs version info format changed from e.g.
4.18-282-gabe46f69 (2020-05-16, branch ""next"")
to:
4.18-282-gabe46f69
I think it’s better to lose a little bit of detail for
the gained cleanliness of using meson’s vcs_tag()
• Drop unused xcb-event dependency.
• We can no longer enable sanitizers and debug options
based on whether we are in a release or non-release build,
because our new version logic runs at ninja build time,
not at meson configure time.
The new behavior is probably for the better in terms of
what people expect, and we can make the CI use address sanitizer
explicitly to ensure it is still exercised.
• We lose the AX_EXTEND_SRCDIR behavior, i.e. including the
path component of the parent of the source dir in all paths.
This was a trick we used for easier debugging, so that stack
traces would contain e.g. ../i3-4.18.1/src/main.c, instead of
just src/main.c.
The other mechanism (_i3_version symbol) that we have for including
the version number in the “backtrace full” (but not merely
“backtrace”) output of gdb still works.
• Release tarballs now use tar.xz. Why not.
Migration plan
This commit adds the meson build files to the tree, but does not remove
autotools yet. For the development phase, we will keep both build systems
functional (and built on travis).
Then, just before the i3 v4.19 release, we will remove autotools from the tree
and the release tarball will require meson to compile.
This way, we incentivize maintainers to change, while also offering them an easy
way out (if desired) by reverting the most recent commit. In practice, switching
a distribution package from autotools to meson should only be a few line change,
easier than applying the provided patch :). Take a look at the debian/ changes
in this commit for an example.
meson is broadly available everywhere that i3 is available: Both xorg-server and
systemd gained meson build files in 2017, so we can follow suit:
https://anholt.livejournal.com/52574.html
https://in.waw.pl/~zbyszek/blog/systemd-meson.html
How do I?
For producing a coverage report, enable the b_coverage meson base option
and run ninja coverage-html:
% cd build
% meson .. -Db_coverage=true
% ninja
% ninja test
% ninja coverage-html
See also https://mesonbuild.com/howtox.html#producing-a-coverage-report
For using the address sanitizer, memory sanitizer or undefined behavior
sanitizer, use the b_sanitize meson base option:
% cd build
% meson .. -Db_sanitize=address
% ninja
See also https://mesonbuild.com/Builtin-options.html#base-options
related to #4086","Nice. Do you want me to check more extensively for problems here? I haven't used meson yet and I didn't checkout this PR. I assume we are going to merge & sort out problems later?

I’m generally in favor of merging now and sorting out details later.
However, do feel free to give this a spin, and see if you notice any obvious issues. We can always decide to just capture them in the issue for now and fix later :)",True,{'THUMBS_UP': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,4094,2020-05-18T20:34:25Z,2020-05-19T12:45:07Z,2020-05-19T12:46:18Z,MERGED,True,734,38,20,https://github.com/stapelberg,add meson build files,1,[],https://github.com/i3/i3/pull/4094,https://github.com/orestisfl,7,https://github.com/i3/i3/pull/4094#issuecomment-630665484,"Motivation:
• faster builds (on an Intel Core i9-9900K):
( ../configure --disable-sanitizers && make -j8; )
19,47s user 2,78s system 395% cpu 5,632 total
( meson .. -Dmans=true -Ddocs=true -Dprefix=/usr && ninja; )
38,67s user 3,73s system 1095% cpu 3,871 total
• more approachable build system configuration in the
python-esque meson domain specific language instead of
the autotools m4 macro language
• built-in language server support thanks to ninja:
the required compile_commands.json is built automatically
and only needs to be linked from the source dir, e.g.:
ln -s build/compile_commands.json .
Changes:
• the embedded vcs version info format changed from e.g.
4.18-282-gabe46f69 (2020-05-16, branch ""next"")
to:
4.18-282-gabe46f69
I think it’s better to lose a little bit of detail for
the gained cleanliness of using meson’s vcs_tag()
• Drop unused xcb-event dependency.
• We can no longer enable sanitizers and debug options
based on whether we are in a release or non-release build,
because our new version logic runs at ninja build time,
not at meson configure time.
The new behavior is probably for the better in terms of
what people expect, and we can make the CI use address sanitizer
explicitly to ensure it is still exercised.
• We lose the AX_EXTEND_SRCDIR behavior, i.e. including the
path component of the parent of the source dir in all paths.
This was a trick we used for easier debugging, so that stack
traces would contain e.g. ../i3-4.18.1/src/main.c, instead of
just src/main.c.
The other mechanism (_i3_version symbol) that we have for including
the version number in the “backtrace full” (but not merely
“backtrace”) output of gdb still works.
• Release tarballs now use tar.xz. Why not.
Migration plan
This commit adds the meson build files to the tree, but does not remove
autotools yet. For the development phase, we will keep both build systems
functional (and built on travis).
Then, just before the i3 v4.19 release, we will remove autotools from the tree
and the release tarball will require meson to compile.
This way, we incentivize maintainers to change, while also offering them an easy
way out (if desired) by reverting the most recent commit. In practice, switching
a distribution package from autotools to meson should only be a few line change,
easier than applying the provided patch :). Take a look at the debian/ changes
in this commit for an example.
meson is broadly available everywhere that i3 is available: Both xorg-server and
systemd gained meson build files in 2017, so we can follow suit:
https://anholt.livejournal.com/52574.html
https://in.waw.pl/~zbyszek/blog/systemd-meson.html
How do I?
For producing a coverage report, enable the b_coverage meson base option
and run ninja coverage-html:
% cd build
% meson .. -Db_coverage=true
% ninja
% ninja test
% ninja coverage-html
See also https://mesonbuild.com/howtox.html#producing-a-coverage-report
For using the address sanitizer, memory sanitizer or undefined behavior
sanitizer, use the b_sanitize meson base option:
% cd build
% meson .. -Db_sanitize=address
% ninja
See also https://mesonbuild.com/Builtin-options.html#base-options
related to #4086","This also closes a bunch of build-related issues. Are we going to close them with this PR or with the PR that removes autotools?

Do you have a list? I think we can close them in this issue, as meson is the preferred build system once this is merged.

Hmm, I think they were mostly fixed after all. Does your PR fix this #2833?",True,{}
i3/i3,https://github.com/i3/i3,4094,2020-05-18T20:34:25Z,2020-05-19T12:45:07Z,2020-05-19T12:46:18Z,MERGED,True,734,38,20,https://github.com/stapelberg,add meson build files,1,[],https://github.com/i3/i3/pull/4094,https://github.com/stapelberg,8,https://github.com/i3/i3/pull/4094#issuecomment-630742430,"Motivation:
• faster builds (on an Intel Core i9-9900K):
( ../configure --disable-sanitizers && make -j8; )
19,47s user 2,78s system 395% cpu 5,632 total
( meson .. -Dmans=true -Ddocs=true -Dprefix=/usr && ninja; )
38,67s user 3,73s system 1095% cpu 3,871 total
• more approachable build system configuration in the
python-esque meson domain specific language instead of
the autotools m4 macro language
• built-in language server support thanks to ninja:
the required compile_commands.json is built automatically
and only needs to be linked from the source dir, e.g.:
ln -s build/compile_commands.json .
Changes:
• the embedded vcs version info format changed from e.g.
4.18-282-gabe46f69 (2020-05-16, branch ""next"")
to:
4.18-282-gabe46f69
I think it’s better to lose a little bit of detail for
the gained cleanliness of using meson’s vcs_tag()
• Drop unused xcb-event dependency.
• We can no longer enable sanitizers and debug options
based on whether we are in a release or non-release build,
because our new version logic runs at ninja build time,
not at meson configure time.
The new behavior is probably for the better in terms of
what people expect, and we can make the CI use address sanitizer
explicitly to ensure it is still exercised.
• We lose the AX_EXTEND_SRCDIR behavior, i.e. including the
path component of the parent of the source dir in all paths.
This was a trick we used for easier debugging, so that stack
traces would contain e.g. ../i3-4.18.1/src/main.c, instead of
just src/main.c.
The other mechanism (_i3_version symbol) that we have for including
the version number in the “backtrace full” (but not merely
“backtrace”) output of gdb still works.
• Release tarballs now use tar.xz. Why not.
Migration plan
This commit adds the meson build files to the tree, but does not remove
autotools yet. For the development phase, we will keep both build systems
functional (and built on travis).
Then, just before the i3 v4.19 release, we will remove autotools from the tree
and the release tarball will require meson to compile.
This way, we incentivize maintainers to change, while also offering them an easy
way out (if desired) by reverting the most recent commit. In practice, switching
a distribution package from autotools to meson should only be a few line change,
easier than applying the provided patch :). Take a look at the debian/ changes
in this commit for an example.
meson is broadly available everywhere that i3 is available: Both xorg-server and
systemd gained meson build files in 2017, so we can follow suit:
https://anholt.livejournal.com/52574.html
https://in.waw.pl/~zbyszek/blog/systemd-meson.html
How do I?
For producing a coverage report, enable the b_coverage meson base option
and run ninja coverage-html:
% cd build
% meson .. -Db_coverage=true
% ninja
% ninja test
% ninja coverage-html
See also https://mesonbuild.com/howtox.html#producing-a-coverage-report
For using the address sanitizer, memory sanitizer or undefined behavior
sanitizer, use the b_sanitize meson base option:
% cd build
% meson .. -Db_sanitize=address
% ninja
See also https://mesonbuild.com/Builtin-options.html#base-options
related to #4086","Please update hacking-howto

Done.",True,{'THUMBS_UP': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,4094,2020-05-18T20:34:25Z,2020-05-19T12:45:07Z,2020-05-19T12:46:18Z,MERGED,True,734,38,20,https://github.com/stapelberg,add meson build files,1,[],https://github.com/i3/i3/pull/4094,https://github.com/stapelberg,9,https://github.com/i3/i3/pull/4094#issuecomment-630742813,"Motivation:
• faster builds (on an Intel Core i9-9900K):
( ../configure --disable-sanitizers && make -j8; )
19,47s user 2,78s system 395% cpu 5,632 total
( meson .. -Dmans=true -Ddocs=true -Dprefix=/usr && ninja; )
38,67s user 3,73s system 1095% cpu 3,871 total
• more approachable build system configuration in the
python-esque meson domain specific language instead of
the autotools m4 macro language
• built-in language server support thanks to ninja:
the required compile_commands.json is built automatically
and only needs to be linked from the source dir, e.g.:
ln -s build/compile_commands.json .
Changes:
• the embedded vcs version info format changed from e.g.
4.18-282-gabe46f69 (2020-05-16, branch ""next"")
to:
4.18-282-gabe46f69
I think it’s better to lose a little bit of detail for
the gained cleanliness of using meson’s vcs_tag()
• Drop unused xcb-event dependency.
• We can no longer enable sanitizers and debug options
based on whether we are in a release or non-release build,
because our new version logic runs at ninja build time,
not at meson configure time.
The new behavior is probably for the better in terms of
what people expect, and we can make the CI use address sanitizer
explicitly to ensure it is still exercised.
• We lose the AX_EXTEND_SRCDIR behavior, i.e. including the
path component of the parent of the source dir in all paths.
This was a trick we used for easier debugging, so that stack
traces would contain e.g. ../i3-4.18.1/src/main.c, instead of
just src/main.c.
The other mechanism (_i3_version symbol) that we have for including
the version number in the “backtrace full” (but not merely
“backtrace”) output of gdb still works.
• Release tarballs now use tar.xz. Why not.
Migration plan
This commit adds the meson build files to the tree, but does not remove
autotools yet. For the development phase, we will keep both build systems
functional (and built on travis).
Then, just before the i3 v4.19 release, we will remove autotools from the tree
and the release tarball will require meson to compile.
This way, we incentivize maintainers to change, while also offering them an easy
way out (if desired) by reverting the most recent commit. In practice, switching
a distribution package from autotools to meson should only be a few line change,
easier than applying the provided patch :). Take a look at the debian/ changes
in this commit for an example.
meson is broadly available everywhere that i3 is available: Both xorg-server and
systemd gained meson build files in 2017, so we can follow suit:
https://anholt.livejournal.com/52574.html
https://in.waw.pl/~zbyszek/blog/systemd-meson.html
How do I?
For producing a coverage report, enable the b_coverage meson base option
and run ninja coverage-html:
% cd build
% meson .. -Db_coverage=true
% ninja
% ninja test
% ninja coverage-html
See also https://mesonbuild.com/howtox.html#producing-a-coverage-report
For using the address sanitizer, memory sanitizer or undefined behavior
sanitizer, use the b_sanitize meson base option:
% cd build
% meson .. -Db_sanitize=address
% ninja
See also https://mesonbuild.com/Builtin-options.html#base-options
related to #4086","Hmm, I think they were mostly fixed after all. Does your PR fix this #2833?

Not entirely sure. That problem seems to be about old versions of git. There is a chance that it is fixed accidentally due to meson invoking git differently. We’ll have to have the affected users report back :)",True,{'THUMBS_UP': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,4094,2020-05-18T20:34:25Z,2020-05-19T12:45:07Z,2020-05-19T12:46:18Z,MERGED,True,734,38,20,https://github.com/stapelberg,add meson build files,1,[],https://github.com/i3/i3/pull/4094,https://github.com/orestisfl,10,https://github.com/i3/i3/pull/4094#issuecomment-630756964,"Motivation:
• faster builds (on an Intel Core i9-9900K):
( ../configure --disable-sanitizers && make -j8; )
19,47s user 2,78s system 395% cpu 5,632 total
( meson .. -Dmans=true -Ddocs=true -Dprefix=/usr && ninja; )
38,67s user 3,73s system 1095% cpu 3,871 total
• more approachable build system configuration in the
python-esque meson domain specific language instead of
the autotools m4 macro language
• built-in language server support thanks to ninja:
the required compile_commands.json is built automatically
and only needs to be linked from the source dir, e.g.:
ln -s build/compile_commands.json .
Changes:
• the embedded vcs version info format changed from e.g.
4.18-282-gabe46f69 (2020-05-16, branch ""next"")
to:
4.18-282-gabe46f69
I think it’s better to lose a little bit of detail for
the gained cleanliness of using meson’s vcs_tag()
• Drop unused xcb-event dependency.
• We can no longer enable sanitizers and debug options
based on whether we are in a release or non-release build,
because our new version logic runs at ninja build time,
not at meson configure time.
The new behavior is probably for the better in terms of
what people expect, and we can make the CI use address sanitizer
explicitly to ensure it is still exercised.
• We lose the AX_EXTEND_SRCDIR behavior, i.e. including the
path component of the parent of the source dir in all paths.
This was a trick we used for easier debugging, so that stack
traces would contain e.g. ../i3-4.18.1/src/main.c, instead of
just src/main.c.
The other mechanism (_i3_version symbol) that we have for including
the version number in the “backtrace full” (but not merely
“backtrace”) output of gdb still works.
• Release tarballs now use tar.xz. Why not.
Migration plan
This commit adds the meson build files to the tree, but does not remove
autotools yet. For the development phase, we will keep both build systems
functional (and built on travis).
Then, just before the i3 v4.19 release, we will remove autotools from the tree
and the release tarball will require meson to compile.
This way, we incentivize maintainers to change, while also offering them an easy
way out (if desired) by reverting the most recent commit. In practice, switching
a distribution package from autotools to meson should only be a few line change,
easier than applying the provided patch :). Take a look at the debian/ changes
in this commit for an example.
meson is broadly available everywhere that i3 is available: Both xorg-server and
systemd gained meson build files in 2017, so we can follow suit:
https://anholt.livejournal.com/52574.html
https://in.waw.pl/~zbyszek/blog/systemd-meson.html
How do I?
For producing a coverage report, enable the b_coverage meson base option
and run ninja coverage-html:
% cd build
% meson .. -Db_coverage=true
% ninja
% ninja test
% ninja coverage-html
See also https://mesonbuild.com/howtox.html#producing-a-coverage-report
For using the address sanitizer, memory sanitizer or undefined behavior
sanitizer, use the b_sanitize meson base option:
% cd build
% meson .. -Db_sanitize=address
% ninja
See also https://mesonbuild.com/Builtin-options.html#base-options
related to #4086","Ok, I propose closing and asking for feedback.


Hmm, I think they were mostly fixed after all. Does your PR fix this #2833?

Not entirely sure. That problem seems to be about old versions of git. There is a chance that it is fixed accidentally due to meson invoking git differently. We’ll have to have the affected users report back :)",True,{}
i3/i3,https://github.com/i3/i3,4094,2020-05-18T20:34:25Z,2020-05-19T12:45:07Z,2020-05-19T12:46:18Z,MERGED,True,734,38,20,https://github.com/stapelberg,add meson build files,1,[],https://github.com/i3/i3/pull/4094,https://github.com/orestisfl,11,https://github.com/i3/i3/pull/4094#issuecomment-630757792,"Motivation:
• faster builds (on an Intel Core i9-9900K):
( ../configure --disable-sanitizers && make -j8; )
19,47s user 2,78s system 395% cpu 5,632 total
( meson .. -Dmans=true -Ddocs=true -Dprefix=/usr && ninja; )
38,67s user 3,73s system 1095% cpu 3,871 total
• more approachable build system configuration in the
python-esque meson domain specific language instead of
the autotools m4 macro language
• built-in language server support thanks to ninja:
the required compile_commands.json is built automatically
and only needs to be linked from the source dir, e.g.:
ln -s build/compile_commands.json .
Changes:
• the embedded vcs version info format changed from e.g.
4.18-282-gabe46f69 (2020-05-16, branch ""next"")
to:
4.18-282-gabe46f69
I think it’s better to lose a little bit of detail for
the gained cleanliness of using meson’s vcs_tag()
• Drop unused xcb-event dependency.
• We can no longer enable sanitizers and debug options
based on whether we are in a release or non-release build,
because our new version logic runs at ninja build time,
not at meson configure time.
The new behavior is probably for the better in terms of
what people expect, and we can make the CI use address sanitizer
explicitly to ensure it is still exercised.
• We lose the AX_EXTEND_SRCDIR behavior, i.e. including the
path component of the parent of the source dir in all paths.
This was a trick we used for easier debugging, so that stack
traces would contain e.g. ../i3-4.18.1/src/main.c, instead of
just src/main.c.
The other mechanism (_i3_version symbol) that we have for including
the version number in the “backtrace full” (but not merely
“backtrace”) output of gdb still works.
• Release tarballs now use tar.xz. Why not.
Migration plan
This commit adds the meson build files to the tree, but does not remove
autotools yet. For the development phase, we will keep both build systems
functional (and built on travis).
Then, just before the i3 v4.19 release, we will remove autotools from the tree
and the release tarball will require meson to compile.
This way, we incentivize maintainers to change, while also offering them an easy
way out (if desired) by reverting the most recent commit. In practice, switching
a distribution package from autotools to meson should only be a few line change,
easier than applying the provided patch :). Take a look at the debian/ changes
in this commit for an example.
meson is broadly available everywhere that i3 is available: Both xorg-server and
systemd gained meson build files in 2017, so we can follow suit:
https://anholt.livejournal.com/52574.html
https://in.waw.pl/~zbyszek/blog/systemd-meson.html
How do I?
For producing a coverage report, enable the b_coverage meson base option
and run ninja coverage-html:
% cd build
% meson .. -Db_coverage=true
% ninja
% ninja test
% ninja coverage-html
See also https://mesonbuild.com/howtox.html#producing-a-coverage-report
For using the address sanitizer, memory sanitizer or undefined behavior
sanitizer, use the b_sanitize meson base option:
% cd build
% meson .. -Db_sanitize=address
% ninja
See also https://mesonbuild.com/Builtin-options.html#base-options
related to #4086","Other build-related issues:

#2611
#2246",True,{}
i3/i3,https://github.com/i3/i3,4094,2020-05-18T20:34:25Z,2020-05-19T12:45:07Z,2020-05-19T12:46:18Z,MERGED,True,734,38,20,https://github.com/stapelberg,add meson build files,1,[],https://github.com/i3/i3/pull/4094,https://github.com/stapelberg,12,https://github.com/i3/i3/pull/4094#issuecomment-630770815,"Motivation:
• faster builds (on an Intel Core i9-9900K):
( ../configure --disable-sanitizers && make -j8; )
19,47s user 2,78s system 395% cpu 5,632 total
( meson .. -Dmans=true -Ddocs=true -Dprefix=/usr && ninja; )
38,67s user 3,73s system 1095% cpu 3,871 total
• more approachable build system configuration in the
python-esque meson domain specific language instead of
the autotools m4 macro language
• built-in language server support thanks to ninja:
the required compile_commands.json is built automatically
and only needs to be linked from the source dir, e.g.:
ln -s build/compile_commands.json .
Changes:
• the embedded vcs version info format changed from e.g.
4.18-282-gabe46f69 (2020-05-16, branch ""next"")
to:
4.18-282-gabe46f69
I think it’s better to lose a little bit of detail for
the gained cleanliness of using meson’s vcs_tag()
• Drop unused xcb-event dependency.
• We can no longer enable sanitizers and debug options
based on whether we are in a release or non-release build,
because our new version logic runs at ninja build time,
not at meson configure time.
The new behavior is probably for the better in terms of
what people expect, and we can make the CI use address sanitizer
explicitly to ensure it is still exercised.
• We lose the AX_EXTEND_SRCDIR behavior, i.e. including the
path component of the parent of the source dir in all paths.
This was a trick we used for easier debugging, so that stack
traces would contain e.g. ../i3-4.18.1/src/main.c, instead of
just src/main.c.
The other mechanism (_i3_version symbol) that we have for including
the version number in the “backtrace full” (but not merely
“backtrace”) output of gdb still works.
• Release tarballs now use tar.xz. Why not.
Migration plan
This commit adds the meson build files to the tree, but does not remove
autotools yet. For the development phase, we will keep both build systems
functional (and built on travis).
Then, just before the i3 v4.19 release, we will remove autotools from the tree
and the release tarball will require meson to compile.
This way, we incentivize maintainers to change, while also offering them an easy
way out (if desired) by reverting the most recent commit. In practice, switching
a distribution package from autotools to meson should only be a few line change,
easier than applying the provided patch :). Take a look at the debian/ changes
in this commit for an example.
meson is broadly available everywhere that i3 is available: Both xorg-server and
systemd gained meson build files in 2017, so we can follow suit:
https://anholt.livejournal.com/52574.html
https://in.waw.pl/~zbyszek/blog/systemd-meson.html
How do I?
For producing a coverage report, enable the b_coverage meson base option
and run ninja coverage-html:
% cd build
% meson .. -Db_coverage=true
% ninja
% ninja test
% ninja coverage-html
See also https://mesonbuild.com/howtox.html#producing-a-coverage-report
For using the address sanitizer, memory sanitizer or undefined behavior
sanitizer, use the b_sanitize meson base option:
% cd build
% meson .. -Db_sanitize=address
% ninja
See also https://mesonbuild.com/Builtin-options.html#base-options
related to #4086","I think #2246 is related, but independent. #2611 is obsolete indeed, closed it.",True,{}
i3/i3,https://github.com/i3/i3,4094,2020-05-18T20:34:25Z,2020-05-19T12:45:07Z,2020-05-19T12:46:18Z,MERGED,True,734,38,20,https://github.com/stapelberg,add meson build files,1,[],https://github.com/i3/i3/pull/4094,https://github.com/stapelberg,13,https://github.com/i3/i3/pull/4094#issuecomment-630792847,"Motivation:
• faster builds (on an Intel Core i9-9900K):
( ../configure --disable-sanitizers && make -j8; )
19,47s user 2,78s system 395% cpu 5,632 total
( meson .. -Dmans=true -Ddocs=true -Dprefix=/usr && ninja; )
38,67s user 3,73s system 1095% cpu 3,871 total
• more approachable build system configuration in the
python-esque meson domain specific language instead of
the autotools m4 macro language
• built-in language server support thanks to ninja:
the required compile_commands.json is built automatically
and only needs to be linked from the source dir, e.g.:
ln -s build/compile_commands.json .
Changes:
• the embedded vcs version info format changed from e.g.
4.18-282-gabe46f69 (2020-05-16, branch ""next"")
to:
4.18-282-gabe46f69
I think it’s better to lose a little bit of detail for
the gained cleanliness of using meson’s vcs_tag()
• Drop unused xcb-event dependency.
• We can no longer enable sanitizers and debug options
based on whether we are in a release or non-release build,
because our new version logic runs at ninja build time,
not at meson configure time.
The new behavior is probably for the better in terms of
what people expect, and we can make the CI use address sanitizer
explicitly to ensure it is still exercised.
• We lose the AX_EXTEND_SRCDIR behavior, i.e. including the
path component of the parent of the source dir in all paths.
This was a trick we used for easier debugging, so that stack
traces would contain e.g. ../i3-4.18.1/src/main.c, instead of
just src/main.c.
The other mechanism (_i3_version symbol) that we have for including
the version number in the “backtrace full” (but not merely
“backtrace”) output of gdb still works.
• Release tarballs now use tar.xz. Why not.
Migration plan
This commit adds the meson build files to the tree, but does not remove
autotools yet. For the development phase, we will keep both build systems
functional (and built on travis).
Then, just before the i3 v4.19 release, we will remove autotools from the tree
and the release tarball will require meson to compile.
This way, we incentivize maintainers to change, while also offering them an easy
way out (if desired) by reverting the most recent commit. In practice, switching
a distribution package from autotools to meson should only be a few line change,
easier than applying the provided patch :). Take a look at the debian/ changes
in this commit for an example.
meson is broadly available everywhere that i3 is available: Both xorg-server and
systemd gained meson build files in 2017, so we can follow suit:
https://anholt.livejournal.com/52574.html
https://in.waw.pl/~zbyszek/blog/systemd-meson.html
How do I?
For producing a coverage report, enable the b_coverage meson base option
and run ninja coverage-html:
% cd build
% meson .. -Db_coverage=true
% ninja
% ninja test
% ninja coverage-html
See also https://mesonbuild.com/howtox.html#producing-a-coverage-report
For using the address sanitizer, memory sanitizer or undefined behavior
sanitizer, use the b_sanitize meson base option:
% cd build
% meson .. -Db_sanitize=address
% ninja
See also https://mesonbuild.com/Builtin-options.html#base-options
related to #4086",Glad to hear. This matches my thinking exactly.,True,{'HEART': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,4096,2020-05-19T17:23:25Z,2020-05-19T17:59:43Z,2020-05-19T18:04:09Z,MERGED,True,87,58,7,https://github.com/stapelberg,meson fixes for unbreaking the Debian/Ubuntu package builds on Travis,7,[],https://github.com/i3/i3/pull/4096,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4096,related to #4086,related to #4086,True,{}
i3/i3,https://github.com/i3/i3,4098,2020-05-19T18:24:25Z,2020-05-19T20:12:07Z,2020-05-19T20:12:10Z,MERGED,True,12,7,3,https://github.com/stapelberg,More CI fixes,3,[],https://github.com/i3/i3/pull/4098,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4098,related to #4086,related to #4086,True,{}
i3/i3,https://github.com/i3/i3,4100,2020-05-19T20:29:45Z,2020-05-19T20:44:47Z,2020-05-19T20:44:47Z,MERGED,True,36,32,1,https://github.com/stapelberg,meson: only install docs/man pages when they exist (release tarball),1,[],https://github.com/i3/i3/pull/4100,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4100,related to #4086,related to #4086,True,{}
i3/i3,https://github.com/i3/i3,4106,2020-05-24T11:04:56Z,2020-05-24T13:16:09Z,2020-05-24T13:16:13Z,MERGED,True,34,39,5,https://github.com/orestisfl,Improve handling of nagbar processes,3,[],https://github.com/i3/i3/pull/4106,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4106,Fixes #4104,Fixes #4104,True,{}
i3/i3,https://github.com/i3/i3,4107,2020-05-24T18:54:52Z,2020-10-20T07:38:36Z,2020-10-20T09:16:06Z,MERGED,True,17,8,2,https://github.com/Arc676,Add situational exit codes,3,[],https://github.com/i3/i3/pull/4107,https://github.com/Arc676,1,https://github.com/i3/i3/pull/4107,"Closes #3705.
I used autoconfigure to generate the Makefile and compile as specified in the instructions, but the generated binary seems to be a memory leak check wrapped around the actual executable so I can't test the exit codes. It seems there's a memory leak in one of the dependencies and whenever I run the executable, no matter what happens within i3-input I get the following output regarding the memory leaks and exit code 1.
How can I just run the newly compiled i3-input without the memory leak checker?
==417634==ERROR: LeakSanitizer: detected memory leaks

Direct leak of 3840 byte(s) in 6 object(s) allocated from:
    #0 0x7fe22a0dbfa0 in __interceptor_realloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:163
    #1 0x7fe229315661  (/usr/lib/libfontconfig.so.1+0x21661)

Indirect leak of 7040 byte(s) in 220 object(s) allocated from:
    #0 0x7fe22a0dbb3a in __interceptor_malloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:144
    #1 0x7fe229301780  (/usr/lib/libfontconfig.so.1+0xd780)

Indirect leak of 3635 byte(s) in 287 object(s) allocated from:
    #0 0x7fe22a0628e6 in __interceptor_strdup /build/gcc/src/gcc/libsanitizer/asan/asan_interceptors.cc:445
    #1 0x7fe229314e45 in FcValueSave (/usr/lib/libfontconfig.so.1+0x20e45)

Indirect leak of 3328 byte(s) in 104 object(s) allocated from:
    #0 0x7fe22a0dbd48 in __interceptor_calloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:153
    #1 0x7fe229315c09  (/usr/lib/libfontconfig.so.1+0x21c09)

Indirect leak of 2304 byte(s) in 72 object(s) allocated from:
    #0 0x7fe22a0dbd48 in __interceptor_calloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:153
    #1 0x7fe2293150d9  (/usr/lib/libfontconfig.so.1+0x210d9)

Indirect leak of 576 byte(s) in 18 object(s) allocated from:
    #0 0x7fe22a0dbd48 in __interceptor_calloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:153
    #1 0x7fe229314f77  (/usr/lib/libfontconfig.so.1+0x20f77)

Indirect leak of 144 byte(s) in 3 object(s) allocated from:
    #0 0x7fe22a0dbb3a in __interceptor_malloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:144
    #1 0x7fe22930f03e in FcLangSetCreate (/usr/lib/libfontconfig.so.1+0x1b03e)

SUMMARY: AddressSanitizer: 20867 byte(s) leaked in 710 allocation(s).","Closes #3705.
I used autoconfigure to generate the Makefile and compile as specified in the instructions, but the generated binary seems to be a memory leak check wrapped around the actual executable so I can't test the exit codes. It seems there's a memory leak in one of the dependencies and whenever I run the executable, no matter what happens within i3-input I get the following output regarding the memory leaks and exit code 1.
How can I just run the newly compiled i3-input without the memory leak checker?
==417634==ERROR: LeakSanitizer: detected memory leaks

Direct leak of 3840 byte(s) in 6 object(s) allocated from:
    #0 0x7fe22a0dbfa0 in __interceptor_realloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:163
    #1 0x7fe229315661  (/usr/lib/libfontconfig.so.1+0x21661)

Indirect leak of 7040 byte(s) in 220 object(s) allocated from:
    #0 0x7fe22a0dbb3a in __interceptor_malloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:144
    #1 0x7fe229301780  (/usr/lib/libfontconfig.so.1+0xd780)

Indirect leak of 3635 byte(s) in 287 object(s) allocated from:
    #0 0x7fe22a0628e6 in __interceptor_strdup /build/gcc/src/gcc/libsanitizer/asan/asan_interceptors.cc:445
    #1 0x7fe229314e45 in FcValueSave (/usr/lib/libfontconfig.so.1+0x20e45)

Indirect leak of 3328 byte(s) in 104 object(s) allocated from:
    #0 0x7fe22a0dbd48 in __interceptor_calloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:153
    #1 0x7fe229315c09  (/usr/lib/libfontconfig.so.1+0x21c09)

Indirect leak of 2304 byte(s) in 72 object(s) allocated from:
    #0 0x7fe22a0dbd48 in __interceptor_calloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:153
    #1 0x7fe2293150d9  (/usr/lib/libfontconfig.so.1+0x210d9)

Indirect leak of 576 byte(s) in 18 object(s) allocated from:
    #0 0x7fe22a0dbd48 in __interceptor_calloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:153
    #1 0x7fe229314f77  (/usr/lib/libfontconfig.so.1+0x20f77)

Indirect leak of 144 byte(s) in 3 object(s) allocated from:
    #0 0x7fe22a0dbb3a in __interceptor_malloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:144
    #1 0x7fe22930f03e in FcLangSetCreate (/usr/lib/libfontconfig.so.1+0x1b03e)

SUMMARY: AddressSanitizer: 20867 byte(s) leaked in 710 allocation(s).",True,{}
i3/i3,https://github.com/i3/i3,4107,2020-05-24T18:54:52Z,2020-10-20T07:38:36Z,2020-10-20T09:16:06Z,MERGED,True,17,8,2,https://github.com/Arc676,Add situational exit codes,3,[],https://github.com/i3/i3/pull/4107,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/4107#issuecomment-634243201,"Closes #3705.
I used autoconfigure to generate the Makefile and compile as specified in the instructions, but the generated binary seems to be a memory leak check wrapped around the actual executable so I can't test the exit codes. It seems there's a memory leak in one of the dependencies and whenever I run the executable, no matter what happens within i3-input I get the following output regarding the memory leaks and exit code 1.
How can I just run the newly compiled i3-input without the memory leak checker?
==417634==ERROR: LeakSanitizer: detected memory leaks

Direct leak of 3840 byte(s) in 6 object(s) allocated from:
    #0 0x7fe22a0dbfa0 in __interceptor_realloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:163
    #1 0x7fe229315661  (/usr/lib/libfontconfig.so.1+0x21661)

Indirect leak of 7040 byte(s) in 220 object(s) allocated from:
    #0 0x7fe22a0dbb3a in __interceptor_malloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:144
    #1 0x7fe229301780  (/usr/lib/libfontconfig.so.1+0xd780)

Indirect leak of 3635 byte(s) in 287 object(s) allocated from:
    #0 0x7fe22a0628e6 in __interceptor_strdup /build/gcc/src/gcc/libsanitizer/asan/asan_interceptors.cc:445
    #1 0x7fe229314e45 in FcValueSave (/usr/lib/libfontconfig.so.1+0x20e45)

Indirect leak of 3328 byte(s) in 104 object(s) allocated from:
    #0 0x7fe22a0dbd48 in __interceptor_calloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:153
    #1 0x7fe229315c09  (/usr/lib/libfontconfig.so.1+0x21c09)

Indirect leak of 2304 byte(s) in 72 object(s) allocated from:
    #0 0x7fe22a0dbd48 in __interceptor_calloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:153
    #1 0x7fe2293150d9  (/usr/lib/libfontconfig.so.1+0x210d9)

Indirect leak of 576 byte(s) in 18 object(s) allocated from:
    #0 0x7fe22a0dbd48 in __interceptor_calloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:153
    #1 0x7fe229314f77  (/usr/lib/libfontconfig.so.1+0x20f77)

Indirect leak of 144 byte(s) in 3 object(s) allocated from:
    #0 0x7fe22a0dbb3a in __interceptor_malloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:144
    #1 0x7fe22930f03e in FcLangSetCreate (/usr/lib/libfontconfig.so.1+0x1b03e)

SUMMARY: AddressSanitizer: 20867 byte(s) leaked in 710 allocation(s).",To avoid the leak checker you should use --disable-sanitizers during the ./configure step,True,{'THUMBS_UP': ['https://github.com/Arc676']}
i3/i3,https://github.com/i3/i3,4107,2020-05-24T18:54:52Z,2020-10-20T07:38:36Z,2020-10-20T09:16:06Z,MERGED,True,17,8,2,https://github.com/Arc676,Add situational exit codes,3,[],https://github.com/i3/i3/pull/4107,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/4107#issuecomment-712648405,"Closes #3705.
I used autoconfigure to generate the Makefile and compile as specified in the instructions, but the generated binary seems to be a memory leak check wrapped around the actual executable so I can't test the exit codes. It seems there's a memory leak in one of the dependencies and whenever I run the executable, no matter what happens within i3-input I get the following output regarding the memory leaks and exit code 1.
How can I just run the newly compiled i3-input without the memory leak checker?
==417634==ERROR: LeakSanitizer: detected memory leaks

Direct leak of 3840 byte(s) in 6 object(s) allocated from:
    #0 0x7fe22a0dbfa0 in __interceptor_realloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:163
    #1 0x7fe229315661  (/usr/lib/libfontconfig.so.1+0x21661)

Indirect leak of 7040 byte(s) in 220 object(s) allocated from:
    #0 0x7fe22a0dbb3a in __interceptor_malloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:144
    #1 0x7fe229301780  (/usr/lib/libfontconfig.so.1+0xd780)

Indirect leak of 3635 byte(s) in 287 object(s) allocated from:
    #0 0x7fe22a0628e6 in __interceptor_strdup /build/gcc/src/gcc/libsanitizer/asan/asan_interceptors.cc:445
    #1 0x7fe229314e45 in FcValueSave (/usr/lib/libfontconfig.so.1+0x20e45)

Indirect leak of 3328 byte(s) in 104 object(s) allocated from:
    #0 0x7fe22a0dbd48 in __interceptor_calloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:153
    #1 0x7fe229315c09  (/usr/lib/libfontconfig.so.1+0x21c09)

Indirect leak of 2304 byte(s) in 72 object(s) allocated from:
    #0 0x7fe22a0dbd48 in __interceptor_calloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:153
    #1 0x7fe2293150d9  (/usr/lib/libfontconfig.so.1+0x210d9)

Indirect leak of 576 byte(s) in 18 object(s) allocated from:
    #0 0x7fe22a0dbd48 in __interceptor_calloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:153
    #1 0x7fe229314f77  (/usr/lib/libfontconfig.so.1+0x20f77)

Indirect leak of 144 byte(s) in 3 object(s) allocated from:
    #0 0x7fe22a0dbb3a in __interceptor_malloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:144
    #1 0x7fe22930f03e in FcLangSetCreate (/usr/lib/libfontconfig.so.1+0x1b03e)

SUMMARY: AddressSanitizer: 20867 byte(s) leaked in 710 allocation(s).",Can you also squash the commits together? Rebasing with next is also a good idea because it will make travis pass more easily.,True,{}
i3/i3,https://github.com/i3/i3,4107,2020-05-24T18:54:52Z,2020-10-20T07:38:36Z,2020-10-20T09:16:06Z,MERGED,True,17,8,2,https://github.com/Arc676,Add situational exit codes,3,[],https://github.com/i3/i3/pull/4107,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/4107#issuecomment-712658513,"Closes #3705.
I used autoconfigure to generate the Makefile and compile as specified in the instructions, but the generated binary seems to be a memory leak check wrapped around the actual executable so I can't test the exit codes. It seems there's a memory leak in one of the dependencies and whenever I run the executable, no matter what happens within i3-input I get the following output regarding the memory leaks and exit code 1.
How can I just run the newly compiled i3-input without the memory leak checker?
==417634==ERROR: LeakSanitizer: detected memory leaks

Direct leak of 3840 byte(s) in 6 object(s) allocated from:
    #0 0x7fe22a0dbfa0 in __interceptor_realloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:163
    #1 0x7fe229315661  (/usr/lib/libfontconfig.so.1+0x21661)

Indirect leak of 7040 byte(s) in 220 object(s) allocated from:
    #0 0x7fe22a0dbb3a in __interceptor_malloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:144
    #1 0x7fe229301780  (/usr/lib/libfontconfig.so.1+0xd780)

Indirect leak of 3635 byte(s) in 287 object(s) allocated from:
    #0 0x7fe22a0628e6 in __interceptor_strdup /build/gcc/src/gcc/libsanitizer/asan/asan_interceptors.cc:445
    #1 0x7fe229314e45 in FcValueSave (/usr/lib/libfontconfig.so.1+0x20e45)

Indirect leak of 3328 byte(s) in 104 object(s) allocated from:
    #0 0x7fe22a0dbd48 in __interceptor_calloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:153
    #1 0x7fe229315c09  (/usr/lib/libfontconfig.so.1+0x21c09)

Indirect leak of 2304 byte(s) in 72 object(s) allocated from:
    #0 0x7fe22a0dbd48 in __interceptor_calloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:153
    #1 0x7fe2293150d9  (/usr/lib/libfontconfig.so.1+0x210d9)

Indirect leak of 576 byte(s) in 18 object(s) allocated from:
    #0 0x7fe22a0dbd48 in __interceptor_calloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:153
    #1 0x7fe229314f77  (/usr/lib/libfontconfig.so.1+0x20f77)

Indirect leak of 144 byte(s) in 3 object(s) allocated from:
    #0 0x7fe22a0dbb3a in __interceptor_malloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:144
    #1 0x7fe22930f03e in FcLangSetCreate (/usr/lib/libfontconfig.so.1+0x1b03e)

SUMMARY: AddressSanitizer: 20867 byte(s) leaked in 710 allocation(s).","Ok nvm, thank you!",True,{}
i3/i3,https://github.com/i3/i3,4107,2020-05-24T18:54:52Z,2020-10-20T07:38:36Z,2020-10-20T09:16:06Z,MERGED,True,17,8,2,https://github.com/Arc676,Add situational exit codes,3,[],https://github.com/i3/i3/pull/4107,https://github.com/Arc676,5,https://github.com/i3/i3/pull/4107#issuecomment-712696104,"Closes #3705.
I used autoconfigure to generate the Makefile and compile as specified in the instructions, but the generated binary seems to be a memory leak check wrapped around the actual executable so I can't test the exit codes. It seems there's a memory leak in one of the dependencies and whenever I run the executable, no matter what happens within i3-input I get the following output regarding the memory leaks and exit code 1.
How can I just run the newly compiled i3-input without the memory leak checker?
==417634==ERROR: LeakSanitizer: detected memory leaks

Direct leak of 3840 byte(s) in 6 object(s) allocated from:
    #0 0x7fe22a0dbfa0 in __interceptor_realloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:163
    #1 0x7fe229315661  (/usr/lib/libfontconfig.so.1+0x21661)

Indirect leak of 7040 byte(s) in 220 object(s) allocated from:
    #0 0x7fe22a0dbb3a in __interceptor_malloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:144
    #1 0x7fe229301780  (/usr/lib/libfontconfig.so.1+0xd780)

Indirect leak of 3635 byte(s) in 287 object(s) allocated from:
    #0 0x7fe22a0628e6 in __interceptor_strdup /build/gcc/src/gcc/libsanitizer/asan/asan_interceptors.cc:445
    #1 0x7fe229314e45 in FcValueSave (/usr/lib/libfontconfig.so.1+0x20e45)

Indirect leak of 3328 byte(s) in 104 object(s) allocated from:
    #0 0x7fe22a0dbd48 in __interceptor_calloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:153
    #1 0x7fe229315c09  (/usr/lib/libfontconfig.so.1+0x21c09)

Indirect leak of 2304 byte(s) in 72 object(s) allocated from:
    #0 0x7fe22a0dbd48 in __interceptor_calloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:153
    #1 0x7fe2293150d9  (/usr/lib/libfontconfig.so.1+0x210d9)

Indirect leak of 576 byte(s) in 18 object(s) allocated from:
    #0 0x7fe22a0dbd48 in __interceptor_calloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:153
    #1 0x7fe229314f77  (/usr/lib/libfontconfig.so.1+0x20f77)

Indirect leak of 144 byte(s) in 3 object(s) allocated from:
    #0 0x7fe22a0dbb3a in __interceptor_malloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:144
    #1 0x7fe22930f03e in FcLangSetCreate (/usr/lib/libfontconfig.so.1+0x1b03e)

SUMMARY: AddressSanitizer: 20867 byte(s) leaked in 710 allocation(s).",No problem. So I noticed in the end there wasn't a final decision (at least not in this thread) regarding the exit code for when the user cancels. Is this a change in behavior for i3-input for future releases?,True,{}
i3/i3,https://github.com/i3/i3,4107,2020-05-24T18:54:52Z,2020-10-20T07:38:36Z,2020-10-20T09:16:06Z,MERGED,True,17,8,2,https://github.com/Arc676,Add situational exit codes,3,[],https://github.com/i3/i3/pull/4107,https://github.com/orestisfl,6,https://github.com/i3/i3/pull/4107#issuecomment-712713222,"Closes #3705.
I used autoconfigure to generate the Makefile and compile as specified in the instructions, but the generated binary seems to be a memory leak check wrapped around the actual executable so I can't test the exit codes. It seems there's a memory leak in one of the dependencies and whenever I run the executable, no matter what happens within i3-input I get the following output regarding the memory leaks and exit code 1.
How can I just run the newly compiled i3-input without the memory leak checker?
==417634==ERROR: LeakSanitizer: detected memory leaks

Direct leak of 3840 byte(s) in 6 object(s) allocated from:
    #0 0x7fe22a0dbfa0 in __interceptor_realloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:163
    #1 0x7fe229315661  (/usr/lib/libfontconfig.so.1+0x21661)

Indirect leak of 7040 byte(s) in 220 object(s) allocated from:
    #0 0x7fe22a0dbb3a in __interceptor_malloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:144
    #1 0x7fe229301780  (/usr/lib/libfontconfig.so.1+0xd780)

Indirect leak of 3635 byte(s) in 287 object(s) allocated from:
    #0 0x7fe22a0628e6 in __interceptor_strdup /build/gcc/src/gcc/libsanitizer/asan/asan_interceptors.cc:445
    #1 0x7fe229314e45 in FcValueSave (/usr/lib/libfontconfig.so.1+0x20e45)

Indirect leak of 3328 byte(s) in 104 object(s) allocated from:
    #0 0x7fe22a0dbd48 in __interceptor_calloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:153
    #1 0x7fe229315c09  (/usr/lib/libfontconfig.so.1+0x21c09)

Indirect leak of 2304 byte(s) in 72 object(s) allocated from:
    #0 0x7fe22a0dbd48 in __interceptor_calloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:153
    #1 0x7fe2293150d9  (/usr/lib/libfontconfig.so.1+0x210d9)

Indirect leak of 576 byte(s) in 18 object(s) allocated from:
    #0 0x7fe22a0dbd48 in __interceptor_calloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:153
    #1 0x7fe229314f77  (/usr/lib/libfontconfig.so.1+0x20f77)

Indirect leak of 144 byte(s) in 3 object(s) allocated from:
    #0 0x7fe22a0dbb3a in __interceptor_malloc /build/gcc/src/gcc/libsanitizer/asan/asan_malloc_linux.cc:144
    #1 0x7fe22930f03e in FcLangSetCreate (/usr/lib/libfontconfig.so.1+0x1b03e)

SUMMARY: AddressSanitizer: 20867 byte(s) leaked in 710 allocation(s).","I implicitly accepted the exit code = 1 for canceling, hoping it will not be too much backwards incompatible and probably safer as well.",True,{'THUMBS_UP': ['https://github.com/Arc676']}
i3/i3,https://github.com/i3/i3,4109,2020-05-28T08:23:47Z,2020-05-31T10:15:46Z,2020-05-31T10:15:50Z,MERGED,True,5,3,1,https://github.com/orestisfl,i3-input: Fix memory leaks,1,[],https://github.com/i3/i3/pull/4109,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4109,Mentioned in #4107,Mentioned in #4107,True,{}
i3/i3,https://github.com/i3/i3,4114,2020-05-30T14:47:09Z,2020-05-31T10:15:21Z,2020-05-31T10:15:25Z,MERGED,True,2,2,1,https://github.com/orestisfl,"Fix swapped cmd_bar_{mode,hidden_state}",1,[],https://github.com/i3/i3/pull/4114,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4114,"Mentioned in
fb2677f#r39550195","Mentioned in
fb2677f#r39550195",True,{}
i3/i3,https://github.com/i3/i3,4115,2020-05-31T08:08:29Z,2020-05-31T09:07:59Z,2020-05-31T09:10:43Z,MERGED,True,10,6,2,https://github.com/ammgws,i3bar: improve docs for battery saving feature,1,[],https://github.com/i3/i3/pull/4115,https://github.com/ammgws,1,https://github.com/i3/i3/pull/4115,"Document that stop_signal can be set to 0 to disable the battery saving feature, as discussed in #4110.","Document that stop_signal can be set to 0 to disable the battery saving feature, as discussed in #4110.",True,{}
i3/i3,https://github.com/i3/i3,4115,2020-05-31T08:08:29Z,2020-05-31T09:07:59Z,2020-05-31T09:10:43Z,MERGED,True,10,6,2,https://github.com/ammgws,i3bar: improve docs for battery saving feature,1,[],https://github.com/i3/i3/pull/4115,https://github.com/Airblader,2,https://github.com/i3/i3/pull/4115#issuecomment-636443436,"Document that stop_signal can be set to 0 to disable the battery saving feature, as discussed in #4110.",LGTM as well,True,{}
i3/i3,https://github.com/i3/i3,4116,2020-06-02T15:06:36Z,2020-10-15T07:41:55Z,2020-10-15T07:49:10Z,MERGED,True,2,2,1,https://github.com/ammgws,Update WORKSPACES reply docs,1,[],https://github.com/i3/i3/pull/4116,https://github.com/ammgws,1,https://github.com/i3/i3/pull/4116,Resolves #3943,Resolves #3943,True,{}
i3/i3,https://github.com/i3/i3,4120,2020-06-06T11:47:27Z,2020-06-06T12:25:17Z,2020-06-06T12:25:55Z,MERGED,True,7,2,1,https://github.com/stapelberg,add i3test_pm dependency after all,1,[],https://github.com/i3/i3/pull/4120,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4120,"I suppose the now-conditional docs building had previously pulled in i3test_pm
implicitly.
related to #4086","I suppose the now-conditional docs building had previously pulled in i3test_pm
implicitly.
related to #4086",True,{}
i3/i3,https://github.com/i3/i3,4120,2020-06-06T11:47:27Z,2020-06-06T12:25:17Z,2020-06-06T12:25:55Z,MERGED,True,7,2,1,https://github.com/stapelberg,add i3test_pm dependency after all,1,[],https://github.com/i3/i3/pull/4120,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/4120#issuecomment-640048421,"I suppose the now-conditional docs building had previously pulled in i3test_pm
implicitly.
related to #4086",Have you seen #4086 (comment) about older meson versions?,True,{}
i3/i3,https://github.com/i3/i3,4120,2020-06-06T11:47:27Z,2020-06-06T12:25:17Z,2020-06-06T12:25:55Z,MERGED,True,7,2,1,https://github.com/stapelberg,add i3test_pm dependency after all,1,[],https://github.com/i3/i3/pull/4120,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/4120#issuecomment-640049697,"I suppose the now-conditional docs building had previously pulled in i3test_pm
implicitly.
related to #4086","Have you seen #4086 (comment) about older meson versions?

Yeah, but thanks for the reminder. We can change that in this PR, too. Done.",True,{}
i3/i3,https://github.com/i3/i3,4120,2020-06-06T11:47:27Z,2020-06-06T12:25:17Z,2020-06-06T12:25:55Z,MERGED,True,7,2,1,https://github.com/stapelberg,add i3test_pm dependency after all,1,[],https://github.com/i3/i3/pull/4120,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/4120#issuecomment-640050466,"I suppose the now-conditional docs building had previously pulled in i3test_pm
implicitly.
related to #4086","Done

Where?",True,{}
i3/i3,https://github.com/i3/i3,4120,2020-06-06T11:47:27Z,2020-06-06T12:25:17Z,2020-06-06T12:25:55Z,MERGED,True,7,2,1,https://github.com/stapelberg,add i3test_pm dependency after all,1,[],https://github.com/i3/i3/pull/4120,https://github.com/stapelberg,5,https://github.com/i3/i3/pull/4120#issuecomment-640050832,"I suppose the now-conditional docs building had previously pulled in i3test_pm
implicitly.
related to #4086",Oops. Now pushed :),True,{}
i3/i3,https://github.com/i3/i3,4121,2020-06-06T11:56:26Z,2020-06-06T12:03:31Z,2020-06-06T12:03:36Z,MERGED,True,9,9,5,https://github.com/stapelberg,switch from clang-format-6 to clang-format-9,1,[],https://github.com/i3/i3/pull/4121,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4121,"No changes required, but this unbreaks our CI","No changes required, but this unbreaks our CI",True,{}
i3/i3,https://github.com/i3/i3,4122,2020-06-06T18:39:34Z,2020-06-06T22:17:34Z,2020-06-16T20:30:03Z,MERGED,True,86,2,9,https://github.com/stapelberg,Introduce GET_BINDING_STATE IPC command,1,[],https://github.com/i3/i3/pull/4122,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4122,fixes #3892,fixes #3892,True,{}
i3/i3,https://github.com/i3/i3,4122,2020-06-06T18:39:34Z,2020-06-06T22:17:34Z,2020-06-16T20:30:03Z,MERGED,True,86,2,9,https://github.com/stapelberg,Introduce GET_BINDING_STATE IPC command,1,[],https://github.com/i3/i3/pull/4122,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/4122#issuecomment-644995444,fixes #3892,"Small nitpick
Plus, change to the release notes is missing

Both addressed in #4131",True,{}
i3/i3,https://github.com/i3/i3,4125,2020-06-10T01:44:30Z,2020-06-10T06:14:12Z,2020-06-10T09:18:06Z,MERGED,True,58,2,3,https://github.com/orestisfl,_con_move_to_con: Traverse below con to check for fullscreen,1,[],https://github.com/i3/i3/pull/4125,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4125,Fixes #4124,Fixes #4124,True,{}
i3/i3,https://github.com/i3/i3,4128,2020-06-13T03:12:19Z,2020-06-16T20:27:40Z,2020-06-16T22:15:44Z,MERGED,True,3,1,1,https://github.com/ammgws,i3-msg: add missing option for `get_binding_state`,1,[],https://github.com/i3/i3/pull/4128,https://github.com/ammgws,1,https://github.com/i3/i3/pull/4128,Was introduced in #4122 but the appropriate logic was missing from i3-msg itself.,Was introduced in #4122 but the appropriate logic was missing from i3-msg itself.,True,{}
i3/i3,https://github.com/i3/i3,4128,2020-06-13T03:12:19Z,2020-06-16T20:27:40Z,2020-06-16T22:15:44Z,MERGED,True,3,1,1,https://github.com/ammgws,i3-msg: add missing option for `get_binding_state`,1,[],https://github.com/i3/i3/pull/4128,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/4128#issuecomment-644994387,Was introduced in #4122 but the appropriate logic was missing from i3-msg itself.,Thanks!,True,{}
i3/i3,https://github.com/i3/i3,4129,2020-06-15T09:16:13Z,2020-06-15T10:00:25Z,2020-06-15T10:00:31Z,MERGED,True,8,10,2,https://github.com/stapelberg,the stable version can now be found in the stable branch,1,[],https://github.com/i3/i3/pull/4129,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4129,fixes #4127,fixes #4127,True,{}
i3/i3,https://github.com/i3/i3,4131,2020-06-16T20:29:38Z,2020-06-17T09:22:23Z,2020-06-17T09:22:24Z,MERGED,True,3,2,2,https://github.com/stapelberg,binding state post-submit review fixes,1,[],https://github.com/i3/i3/pull/4131,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4131,,,True,{}
i3/i3,https://github.com/i3/i3,4133,2020-06-25T00:52:29Z,2020-06-25T06:34:54Z,2020-06-25T06:34:54Z,MERGED,True,1,1,1,https://github.com/VasilyFomin,Fixed a typo in the docs,1,[],https://github.com/i3/i3/pull/4133,https://github.com/VasilyFomin,1,https://github.com/i3/i3/pull/4133,"Hi,
Thanks for the excellent software and docs! Just noticed a small typo","Hi,
Thanks for the excellent software and docs! Just noticed a small typo",True,{}
i3/i3,https://github.com/i3/i3,4140,2020-06-26T21:41:03Z,2020-06-26T22:10:54Z,2020-06-26T22:51:52Z,MERGED,True,9,5,2,https://github.com/orestisfl,Fix i3bar Xorg memory leak,1,[],https://github.com/i3/i3/pull/4140,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4140,Fixes #4123,Fixes #4123,True,{'THUMBS_UP': ['https://github.com/ammgws']}
i3/i3,https://github.com/i3/i3,4144,2020-06-29T07:55:16Z,2020-06-29T08:25:01Z,2020-06-29T08:25:04Z,MERGED,True,7,5,1,https://github.com/orestisfl,route_click: Fix regression: release mouse,1,[],https://github.com/i3/i3/pull/4144,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4144,Fixes #4143,Fixes #4143,True,{}
i3/i3,https://github.com/i3/i3,4145,2020-06-29T08:48:08Z,2020-08-01T07:43:27Z,2020-08-01T07:43:31Z,MERGED,True,3,1,1,https://github.com/orestisfl,route_click: Correctly eat the event,1,[],https://github.com/i3/i3/pull/4145,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4145,"Restores original intention of 93e96f4 after #4144
Sorry for the noise","Restores original intention of 93e96f4 after #4144
Sorry for the noise",True,{}
i3/i3,https://github.com/i3/i3,4146,2020-06-29T18:43:07Z,2020-06-29T19:00:13Z,2020-06-29T19:00:26Z,MERGED,True,1,1,1,https://github.com/krnlks,Fixed a typo in the user's guide,1,[],https://github.com/i3/i3/pull/4146,https://github.com/krnlks,1,https://github.com/i3/i3/pull/4146,,,True,{}
i3/i3,https://github.com/i3/i3,4146,2020-06-29T18:43:07Z,2020-06-29T19:00:13Z,2020-06-29T19:00:26Z,MERGED,True,1,1,1,https://github.com/krnlks,Fixed a typo in the user's guide,1,[],https://github.com/i3/i3/pull/4146,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/4146#issuecomment-651301097,,Thanks!,True,{}
i3/i3,https://github.com/i3/i3,4147,2020-06-30T08:36:56Z,2020-06-30T09:19:37Z,2020-06-30T17:26:34Z,MERGED,True,2,2,1,https://github.com/compguy284,kick tray clients before destroying the bar,1,[],https://github.com/i3/i3/pull/4147,https://github.com/compguy284,1,https://github.com/i3/i3/pull/4147,"nm-applet and redshift-gtk tray icons would not reappear after restarting i3.
(nm-applet:575): Gdk-WARNING **: 19:04:15.729: GdkWindow 0x1000002 unexpectedly destroyed

(nm-applet:575): GLib-GObject-WARNING **: 19:04:15.729: invalid (NULL) pointer instance

(nm-applet:575): GLib-GObject-CRITICAL **: 19:04:15.729: g_signal_handler_disconnect: assertion 'G_TYPE_CHECK_INSTANCE (instance)' failed

(nm-applet:575): Gdk-CRITICAL **: 19:04:15.730: gdk_frame_clock_end_updating: assertion 'GDK_IS_FRAME_CLOCK (frame_clock)' failed

(nm-applet:575): GLib-GObject-WARNING **: 19:04:15.730: ../glib/gobject/gsignal.c:2735: instance '0x5644e14a74e0' has no handler with id '276'

(nm-applet:575): Gdk-ERROR **: 19:04:15.731: The program 'nm-applet' received an X Window System error.","nm-applet and redshift-gtk tray icons would not reappear after restarting i3.
(nm-applet:575): Gdk-WARNING **: 19:04:15.729: GdkWindow 0x1000002 unexpectedly destroyed

(nm-applet:575): GLib-GObject-WARNING **: 19:04:15.729: invalid (NULL) pointer instance

(nm-applet:575): GLib-GObject-CRITICAL **: 19:04:15.729: g_signal_handler_disconnect: assertion 'G_TYPE_CHECK_INSTANCE (instance)' failed

(nm-applet:575): Gdk-CRITICAL **: 19:04:15.730: gdk_frame_clock_end_updating: assertion 'GDK_IS_FRAME_CLOCK (frame_clock)' failed

(nm-applet:575): GLib-GObject-WARNING **: 19:04:15.730: ../glib/gobject/gsignal.c:2735: instance '0x5644e14a74e0' has no handler with id '276'

(nm-applet:575): Gdk-ERROR **: 19:04:15.731: The program 'nm-applet' received an X Window System error.",True,{}
i3/i3,https://github.com/i3/i3,4163,2020-07-31T08:27:35Z,2020-08-31T06:58:47Z,2020-08-31T06:58:48Z,MERGED,True,0,2,1,https://github.com/orestisfl,i3bar: Remove duplicate call to kick_tray_clients,1,[],https://github.com/i3/i3/pull/4163,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4163,"Fixes #4159
Fixes #4162","Fixes #4159
Fixes #4162",True,"{'THUMBS_UP': ['https://github.com/HaoZeke', 'https://github.com/energygreek', 'https://github.com/dnisyd', 'https://github.com/panaman67', 'https://github.com/btmcg', 'https://github.com/blahgeek'], 'HEART': ['https://github.com/PythonNut', 'https://github.com/btmcg', 'https://github.com/jwflory']}"
i3/i3,https://github.com/i3/i3,4163,2020-07-31T08:27:35Z,2020-08-31T06:58:47Z,2020-08-31T06:58:48Z,MERGED,True,0,2,1,https://github.com/orestisfl,i3bar: Remove duplicate call to kick_tray_clients,1,[],https://github.com/i3/i3/pull/4163,https://github.com/somercet,2,https://github.com/i3/i3/pull/4163#issuecomment-667602063,"Fixes #4159
Fixes #4162","I don't know much about i3, but I hit this bug when I upgraded on Arch:
[2020-07-30T18:14:19-0400] [ALPM] upgraded i3-wm (4.18.1-1 -> 4.18.2-1)
For me, this bug triggers whenever I run a video game, Urban Terror. Xpad dumps core, and Hexchat closes when I run the game. Those are the only two apps showing in the systray.
The above patch does not fix this issue for me. I recompiled i3-wm using:
https://www.archlinux.org/packages/community/x86_64/i3-wm/
Thank you.",True,{}
i3/i3,https://github.com/i3/i3,4163,2020-07-31T08:27:35Z,2020-08-31T06:58:47Z,2020-08-31T06:58:48Z,MERGED,True,0,2,1,https://github.com/orestisfl,i3bar: Remove duplicate call to kick_tray_clients,1,[],https://github.com/i3/i3/pull/4163,https://github.com/nylocx,3,https://github.com/i3/i3/pull/4163#issuecomment-670593792,"Fixes #4159
Fixes #4162",I also applied this patch to the i3-gaps package and still have the bug if I quit and restart i3bar.,True,{}
i3/i3,https://github.com/i3/i3,4163,2020-07-31T08:27:35Z,2020-08-31T06:58:47Z,2020-08-31T06:58:48Z,MERGED,True,0,2,1,https://github.com/orestisfl,i3bar: Remove duplicate call to kick_tray_clients,1,[],https://github.com/i3/i3/pull/4163,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/4163#issuecomment-671446035,"Fixes #4159
Fixes #4162","This patch should be applied to the next branch, not the stable branch. For stable, apply 838b600",True,{}
i3/i3,https://github.com/i3/i3,4163,2020-07-31T08:27:35Z,2020-08-31T06:58:47Z,2020-08-31T06:58:48Z,MERGED,True,0,2,1,https://github.com/orestisfl,i3bar: Remove duplicate call to kick_tray_clients,1,[],https://github.com/i3/i3/pull/4163,https://github.com/btmcg,5,https://github.com/i3/i3/pull/4163#issuecomment-671476671,"Fixes #4159
Fixes #4162","I created issue #4162 and applied this patch to the next branch. After running the new binary, the issue continues to happen in exactly the same way. Anything in particular you'd like me to provide?",True,{}
i3/i3,https://github.com/i3/i3,4163,2020-07-31T08:27:35Z,2020-08-31T06:58:47Z,2020-08-31T06:58:48Z,MERGED,True,0,2,1,https://github.com/orestisfl,i3bar: Remove duplicate call to kick_tray_clients,1,[],https://github.com/i3/i3/pull/4163,https://github.com/btmcg,6,https://github.com/i3/i3/pull/4163#issuecomment-671478043,"Fixes #4159
Fixes #4162","Here is a stacktrace from the nm-applet coredump:
#0  0x00007f8246469314 in g_log_writer_default () from /usr/lib/libglib-2.0.so.0
[Current thread is 1 (Thread 0x7f8244ed4280 (LWP 314159))]
(gdb) bt
#0  0x00007f8246469314 in g_log_writer_default () at /usr/lib/libglib-2.0.so.0
#1  0x00007f8246466a29 in g_log_structured_array () at /usr/lib/libglib-2.0.so.0
#2  0x00007f8246466f81 in g_log_structured_standard () at /usr/lib/libglib-2.0.so.0
#3  0x00007f8246983c11 in  () at /usr/lib/libgdk-3.so.0
#4  0x00007f8246990e95 in  () at /usr/lib/libgdk-3.so.0
#5  0x00007f824600f83b in _XError () at /usr/lib/libX11.so.6
#6  0x00007f824600c5e8 in  () at /usr/lib/libX11.so.6
#7  0x00007f824600c685 in  () at /usr/lib/libX11.so.6
#8  0x00007f824600cfea in _XEventsQueued () at /usr/lib/libX11.so.6
#9  0x00007f8245ffe992 in XPending () at /usr/lib/libX11.so.6
#10 0x00007f824698b331 in  () at /usr/lib/libgdk-3.so.0
#11 0x00007f824645ef80 in g_main_context_prepare () at /usr/lib/libglib-2.0.so.0
#12 0x00007f82464ae086 in  () at /usr/lib/libglib-2.0.so.0
#13 0x00007f824645f221 in g_main_context_iteration () at /usr/lib/libglib-2.0.so.0
#14 0x00007f8246659c9e in g_application_run () at /usr/lib/libgio-2.0.so.0
#15 0x00005620603781a9 in  ()
#16 0x00007f8247152002 in __libc_start_main () at /usr/lib/libc.so.6
#17 0x00005620603782fe in  ()

For the record, the last 8 frames of the pasystray coredump are exactly the same.",True,{}
i3/i3,https://github.com/i3/i3,4163,2020-07-31T08:27:35Z,2020-08-31T06:58:47Z,2020-08-31T06:58:48Z,MERGED,True,0,2,1,https://github.com/orestisfl,i3bar: Remove duplicate call to kick_tray_clients,1,[],https://github.com/i3/i3/pull/4163,https://github.com/btmcg,7,https://github.com/i3/i3/pull/4163#issuecomment-671493754,"Fixes #4159
Fixes #4162","Ok, sorry for the spam.
It was my mistake. Once I put the version of i3bar I built ahead of the system-installed one in my PATH, this patch worked. Both applets stay running and show up in the system tray without a problem. So, for my issue #4162, at least, I can confirm that this PR fixes it.
Thanks!",True,{}
i3/i3,https://github.com/i3/i3,4172,2020-08-10T20:53:58Z,2020-10-13T08:29:19Z,2020-10-13T08:29:19Z,MERGED,True,1,1,1,https://github.com/jorgheymans,increase font-size for kbd in refcard,1,[],https://github.com/i3/i3/pull/4172,https://github.com/jorgheymans,1,https://github.com/i3/i3/pull/4172,fixes #4135,fixes #4135,True,{}
i3/i3,https://github.com/i3/i3,4175,2020-08-14T11:41:08Z,2020-10-13T08:29:29Z,2020-10-13T08:29:30Z,CLOSED,False,3,3,1,https://github.com/BeingAnushasan,fix for issue #4135,1,[],https://github.com/i3/i3/pull/4175,https://github.com/BeingAnushasan,1,https://github.com/i3/i3/pull/4175,Fixes #4135,Fixes #4135,True,{}
i3/i3,https://github.com/i3/i3,4175,2020-08-14T11:41:08Z,2020-10-13T08:29:29Z,2020-10-13T08:29:30Z,CLOSED,False,3,3,1,https://github.com/BeingAnushasan,fix for issue #4135,1,[],https://github.com/i3/i3/pull/4175,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/4175#issuecomment-707582144,Fixes #4135,#4172,True,{}
i3/i3,https://github.com/i3/i3,4181,2020-08-26T15:02:44Z,2020-09-02T09:42:06Z,2020-09-02T09:42:06Z,MERGED,True,20,21,1,https://github.com/msharov,Reformat LICENSE so github sees it as BSD-3-Clause.,1,[],https://github.com/i3/i3/pull/4181,https://github.com/msharov,1,https://github.com/i3/i3/pull/4181,"This replaces the LICENSE body with standard BSD-3-Clause text, allowing github to recognize it as such and say so in the project About box instead of the current ""View license"". The wording is almost identical, with only ""copyright holders"" replacing ""Michael Stapelberg"" in the license text.","This replaces the LICENSE body with standard BSD-3-Clause text, allowing github to recognize it as such and say so in the project About box instead of the current ""View license"". The wording is almost identical, with only ""copyright holders"" replacing ""Michael Stapelberg"" in the license text.",True,{}
i3/i3,https://github.com/i3/i3,4189,2020-09-01T12:59:21Z,2020-10-20T09:20:21Z,2020-10-20T09:30:49Z,MERGED,True,79,40,6,https://github.com/acheronfail,allow ppt values in move direction and move position commands,1,['waiting'],https://github.com/i3/i3/pull/4189,https://github.com/acheronfail,1,https://github.com/i3/i3/pull/4189,"This adds support for ppt values to be used in the following move commands:
move <left|right|down|up> [<amount> [px|ppt]]
move position <pos_x> [px|ppt] <pos_y> [px|ppt]

Fixes #3519","This adds support for ppt values to be used in the following move commands:
move <left|right|down|up> [<amount> [px|ppt]]
move position <pos_x> [px|ppt] <pos_y> [px|ppt]

Fixes #3519",True,{}
i3/i3,https://github.com/i3/i3,4189,2020-09-01T12:59:21Z,2020-10-20T09:20:21Z,2020-10-20T09:30:49Z,MERGED,True,79,40,6,https://github.com/acheronfail,allow ppt values in move direction and move position commands,1,['waiting'],https://github.com/i3/i3/pull/4189,https://github.com/acheronfail,2,https://github.com/i3/i3/pull/4189#issuecomment-686431326,"This adds support for ppt values to be used in the following move commands:
move <left|right|down|up> [<amount> [px|ppt]]
move position <pos_x> [px|ppt] <pos_y> [px|ppt]

Fixes #3519","I only added some more text into the documentation but the build failed this time, I think it might have just been a dodgy build? All the tests pass locally for me.
Any chance you could re-run it and see if that fixes it? (Unless I'm missing something else?)",True,{}
i3/i3,https://github.com/i3/i3,4189,2020-09-01T12:59:21Z,2020-10-20T09:20:21Z,2020-10-20T09:30:49Z,MERGED,True,79,40,6,https://github.com/acheronfail,allow ppt values in move direction and move position commands,1,['waiting'],https://github.com/i3/i3/pull/4189,https://github.com/acheronfail,3,https://github.com/i3/i3/pull/4189#issuecomment-689509325,"This adds support for ppt values to be used in the following move commands:
move <left|right|down|up> [<amount> [px|ppt]]
move position <pos_x> [px|ppt] <pos_y> [px|ppt]

Fixes #3519",Just ran git commit --amend --no-edit to re-trigger the build.,True,{}
i3/i3,https://github.com/i3/i3,4189,2020-09-01T12:59:21Z,2020-10-20T09:20:21Z,2020-10-20T09:30:49Z,MERGED,True,79,40,6,https://github.com/acheronfail,allow ppt values in move direction and move position commands,1,['waiting'],https://github.com/i3/i3/pull/4189,https://github.com/acheronfail,4,https://github.com/i3/i3/pull/4189#issuecomment-710643107,"This adds support for ppt values to be used in the following move commands:
move <left|right|down|up> [<amount> [px|ppt]]
move position <pos_x> [px|ppt] <pos_y> [px|ppt]

Fixes #3519",@orestisfl thanks for looking into that for me. 🙂 I should have addressed those minor nits now.,True,{}
i3/i3,https://github.com/i3/i3,4189,2020-09-01T12:59:21Z,2020-10-20T09:20:21Z,2020-10-20T09:30:49Z,MERGED,True,79,40,6,https://github.com/acheronfail,allow ppt values in move direction and move position commands,1,['waiting'],https://github.com/i3/i3/pull/4189,https://github.com/orestisfl,5,https://github.com/i3/i3/pull/4189#issuecomment-712652194,"This adds support for ppt values to be used in the following move commands:
move <left|right|down|up> [<amount> [px|ppt]]
move position <pos_x> [px|ppt] <pos_y> [px|ppt]

Fixes #3519","Ok, final things:

Add a small line in https://github.com/i3/i3/blob/next/RELEASE-NOTES-next describing your change
Squash all commits into one
Rebase into next to make travis easier to pass",True,{}
i3/i3,https://github.com/i3/i3,4189,2020-09-01T12:59:21Z,2020-10-20T09:20:21Z,2020-10-20T09:30:49Z,MERGED,True,79,40,6,https://github.com/acheronfail,allow ppt values in move direction and move position commands,1,['waiting'],https://github.com/i3/i3/pull/4189,https://github.com/acheronfail,6,https://github.com/i3/i3/pull/4189#issuecomment-712670840,"This adds support for ppt values to be used in the following move commands:
move <left|right|down|up> [<amount> [px|ppt]]
move position <pos_x> [px|ppt] <pos_y> [px|ppt]

Fixes #3519",Thanks for the help! I think that should be everything you asked for. 🙂,True,{}
i3/i3,https://github.com/i3/i3,4189,2020-09-01T12:59:21Z,2020-10-20T09:20:21Z,2020-10-20T09:30:49Z,MERGED,True,79,40,6,https://github.com/acheronfail,allow ppt values in move direction and move position commands,1,['waiting'],https://github.com/i3/i3/pull/4189,https://github.com/orestisfl,7,https://github.com/i3/i3/pull/4189#issuecomment-712715853,"This adds support for ppt values to be used in the following move commands:
move <left|right|down|up> [<amount> [px|ppt]]
move position <pos_x> [px|ppt] <pos_y> [px|ppt]

Fixes #3519",Thanks!,True,{}
i3/i3,https://github.com/i3/i3,4195,2020-09-13T22:50:27Z,2020-10-24T12:29:18Z,2020-10-24T12:29:18Z,MERGED,True,13,4,3,https://github.com/mschuwalow,i3bar: add support for nonprimary output,1,[],https://github.com/i3/i3/pull/4195,https://github.com/mschuwalow,1,https://github.com/i3/i3/pull/4195,"Adds support for a nonprimary output to i3bar. This is useful when configuring your bar using primary, as you can have one config for your main display and another for any additional display.
Fixes #4083","Adds support for a nonprimary output to i3bar. This is useful when configuring your bar using primary, as you can have one config for your main display and another for any additional display.
Fixes #4083",True,{}
i3/i3,https://github.com/i3/i3,4195,2020-09-13T22:50:27Z,2020-10-24T12:29:18Z,2020-10-24T12:29:18Z,MERGED,True,13,4,3,https://github.com/mschuwalow,i3bar: add support for nonprimary output,1,[],https://github.com/i3/i3/pull/4195,https://github.com/wlhlm,2,https://github.com/i3/i3/pull/4195#issuecomment-704196669,"Adds support for a nonprimary output to i3bar. This is useful when configuring your bar using primary, as you can have one config for your main display and another for any additional display.
Fixes #4083","Thanks for taking a stab at this. I've been interested in being able to configure i3bar on non-primary outputs for a while.
Associated issues: #4083, #2311 (comment)
Though, looking at your code, it looks quite limited to me: IIUIC, this will pick the first non-primary output and stop. This makes sense if you have two or less outputs, otherwise it will just pick the first non-primary output from the list and that depends on how the list is assembled (not sure if deterministic). I think it makes more sense if the nonprimary option displays the bar on all non-primary outputs not just the first one. If you have more then two outputs and want to display the bar only  on a single non-primary output, I thinks it's better to hardcode the output.",True,{}
i3/i3,https://github.com/i3/i3,4195,2020-09-13T22:50:27Z,2020-10-24T12:29:18Z,2020-10-24T12:29:18Z,MERGED,True,13,4,3,https://github.com/mschuwalow,i3bar: add support for nonprimary output,1,[],https://github.com/i3/i3/pull/4195,https://github.com/mschuwalow,3,https://github.com/i3/i3/pull/4195#issuecomment-705842469,"Adds support for a nonprimary output to i3bar. This is useful when configuring your bar using primary, as you can have one config for your main display and another for any additional display.
Fixes #4083","As far as I can tell this works with any number of outputs. I'm currently using this with 3 monitors and everything works as expected https://github.com/mschuwalow/nixos-config/blob/master/profiles/desktop/i3.nix#L455.
My understanding of that part of the code is that one map will be sent for each output, so it's enough for us to check whether we are supposed to handle it. In the case of nonprimary that means short-circuiting as soon as we see an output that is not marked as primary.",True,{}
i3/i3,https://github.com/i3/i3,4195,2020-09-13T22:50:27Z,2020-10-24T12:29:18Z,2020-10-24T12:29:18Z,MERGED,True,13,4,3,https://github.com/mschuwalow,i3bar: add support for nonprimary output,1,[],https://github.com/i3/i3/pull/4195,https://github.com/wlhlm,4,https://github.com/i3/i3/pull/4195#issuecomment-706320110,"Adds support for a nonprimary output to i3bar. This is useful when configuring your bar using primary, as you can have one config for your main display and another for any additional display.
Fixes #4083","As far as I can tell this works with any number of outputs. I'm currently using this with 3 monitors and everything works as expected

OK, I misread the code then. Good to hear! 👍",True,{}
i3/i3,https://github.com/i3/i3,4195,2020-09-13T22:50:27Z,2020-10-24T12:29:18Z,2020-10-24T12:29:18Z,MERGED,True,13,4,3,https://github.com/mschuwalow,i3bar: add support for nonprimary output,1,[],https://github.com/i3/i3/pull/4195,https://github.com/mschuwalow,5,https://github.com/i3/i3/pull/4195#issuecomment-711162576,"Adds support for a nonprimary output to i3bar. This is useful when configuring your bar using primary, as you can have one config for your main display and another for any additional display.
Fixes #4083","Thanks! Minor changes.
Also, question: Have you verified that the bar location is updated when you change the primary output? It should in theory work.

Yes, I can confirm that it works. 👍",True,{}
i3/i3,https://github.com/i3/i3,4195,2020-09-13T22:50:27Z,2020-10-24T12:29:18Z,2020-10-24T12:29:18Z,MERGED,True,13,4,3,https://github.com/mschuwalow,i3bar: add support for nonprimary output,1,[],https://github.com/i3/i3/pull/4195,https://github.com/mschuwalow,6,https://github.com/i3/i3/pull/4195#issuecomment-714650403,"Adds support for a nonprimary output to i3bar. This is useful when configuring your bar using primary, as you can have one config for your main display and another for any additional display.
Fixes #4083","Great!
Last chore:

Add a line in https://github.com/i3/i3/blob/next/RELEASE-NOTES-next that describes the change
Squash all commits into one


Done. Thanks for guiding me through the process 😄",True,{}
i3/i3,https://github.com/i3/i3,4197,2020-09-15T13:41:43Z,2020-10-13T08:26:55Z,2020-10-13T08:26:55Z,MERGED,True,3,0,1,https://github.com/zero77,Update README.md,1,[],https://github.com/i3/i3/pull/4197,https://github.com/zero77,1,https://github.com/i3/i3/pull/4197,This quickly shows all package versions across different distros at a glance.,This quickly shows all package versions across different distros at a glance.,True,{}
i3/i3,https://github.com/i3/i3,4208,2020-09-23T21:46:33Z,,2020-10-26T11:49:50Z,OPEN,False,26,21,5,https://github.com/AMDmi3,Allow splitting into any kind of layout,1,['waiting'],https://github.com/i3/i3/pull/4208,https://github.com/AMDmi3,1,https://github.com/i3/i3/pull/4208,"This should solve #4207, I've successfully tested this as a patch to 4.18.2.
This change introduces tabbed, stacking, stacked modes to split command in a backward compatible way (t still works as toggle).
Additionaly, this changes behavior which replaces the layout of current container (instead of creating a nested container) if the container only has one child: while before it only worked for splits, now it works for all layouts which is IMO more consistent.
Fixes #4207
Closes #3001","This should solve #4207, I've successfully tested this as a patch to 4.18.2.
This change introduces tabbed, stacking, stacked modes to split command in a backward compatible way (t still works as toggle).
Additionaly, this changes behavior which replaces the layout of current container (instead of creating a nested container) if the container only has one child: while before it only worked for splits, now it works for all layouts which is IMO more consistent.
Fixes #4207
Closes #3001",True,{'HEART': ['https://github.com/wlhlm']}
i3/i3,https://github.com/i3/i3,4208,2020-09-23T21:46:33Z,,2020-10-26T11:49:50Z,OPEN,False,26,21,5,https://github.com/AMDmi3,Allow splitting into any kind of layout,1,['waiting'],https://github.com/i3/i3/pull/4208,https://github.com/AMDmi3,2,https://github.com/i3/i3/pull/4208#issuecomment-697999974,"This should solve #4207, I've successfully tested this as a patch to 4.18.2.
This change introduces tabbed, stacking, stacked modes to split command in a backward compatible way (t still works as toggle).
Additionaly, this changes behavior which replaces the layout of current container (instead of creating a nested container) if the container only has one child: while before it only worked for splits, now it works for all layouts which is IMO more consistent.
Fixes #4207
Closes #3001","There seem to be a broken test related to

Additionaly, this changes behavior which replaces the layout of current container (instead of creating a nested container) if the container only has one child: while before it only worked for splits, now it works for all layouts which is IMO more consistent.

Can revert the bahavior or fix the test, depending on which behavior is desired.",True,{}
i3/i3,https://github.com/i3/i3,4208,2020-09-23T21:46:33Z,,2020-10-26T11:49:50Z,OPEN,False,26,21,5,https://github.com/AMDmi3,Allow splitting into any kind of layout,1,['waiting'],https://github.com/i3/i3/pull/4208,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/4208#issuecomment-707575782,"This should solve #4207, I've successfully tested this as a patch to 4.18.2.
This change introduces tabbed, stacking, stacked modes to split command in a backward compatible way (t still works as toggle).
Additionaly, this changes behavior which replaces the layout of current container (instead of creating a nested container) if the container only has one child: while before it only worked for splits, now it works for all layouts which is IMO more consistent.
Fixes #4207
Closes #3001","There seem to be a broken test related to

Additionaly, this changes behavior which replaces the layout of current container (instead of creating a nested container) if the container only has one child: while before it only worked for splits, now it works for all layouts which is IMO more consistent.

Can revert the bahavior or fix the test, depending on which behavior is desired.

So, the behavior of layout stacked is affected? This is certainly not desirable.",True,{}
i3/i3,https://github.com/i3/i3,4208,2020-09-23T21:46:33Z,,2020-10-26T11:49:50Z,OPEN,False,26,21,5,https://github.com/AMDmi3,Allow splitting into any kind of layout,1,['waiting'],https://github.com/i3/i3/pull/4208,https://github.com/AMDmi3,4,https://github.com/i3/i3/pull/4208#issuecomment-707690696,"This should solve #4207, I've successfully tested this as a patch to 4.18.2.
This change introduces tabbed, stacking, stacked modes to split command in a backward compatible way (t still works as toggle).
Additionaly, this changes behavior which replaces the layout of current container (instead of creating a nested container) if the container only has one child: while before it only worked for splits, now it works for all layouts which is IMO more consistent.
Fixes #4207
Closes #3001","So, the behavior of layout stacked is affected?

It is not, it only affects splits.",True,{}
i3/i3,https://github.com/i3/i3,4208,2020-09-23T21:46:33Z,,2020-10-26T11:49:50Z,OPEN,False,26,21,5,https://github.com/AMDmi3,Allow splitting into any kind of layout,1,['waiting'],https://github.com/i3/i3/pull/4208,https://github.com/orestisfl,5,https://github.com/i3/i3/pull/4208#issuecomment-707718490,"This should solve #4207, I've successfully tested this as a patch to 4.18.2.
This change introduces tabbed, stacking, stacked modes to split command in a backward compatible way (t still works as toggle).
Additionaly, this changes behavior which replaces the layout of current container (instead of creating a nested container) if the container only has one child: while before it only worked for splits, now it works for all layouts which is IMO more consistent.
Fixes #4207
Closes #3001","Sounds good, this will also fix #3001.
Can you fix the test and include new ones that test the new behavior please?",True,{}
i3/i3,https://github.com/i3/i3,4208,2020-09-23T21:46:33Z,,2020-10-26T11:49:50Z,OPEN,False,26,21,5,https://github.com/AMDmi3,Allow splitting into any kind of layout,1,['waiting'],https://github.com/i3/i3/pull/4208,https://github.com/AMDmi3,6,https://github.com/i3/i3/pull/4208#issuecomment-707748554,"This should solve #4207, I've successfully tested this as a patch to 4.18.2.
This change introduces tabbed, stacking, stacked modes to split command in a backward compatible way (t still works as toggle).
Additionaly, this changes behavior which replaces the layout of current container (instead of creating a nested container) if the container only has one child: while before it only worked for splits, now it works for all layouts which is IMO more consistent.
Fixes #4207
Closes #3001","Sorry, short on time right away, will do this next week",True,{}
i3/i3,https://github.com/i3/i3,4208,2020-09-23T21:46:33Z,,2020-10-26T11:49:50Z,OPEN,False,26,21,5,https://github.com/AMDmi3,Allow splitting into any kind of layout,1,['waiting'],https://github.com/i3/i3/pull/4208,https://github.com/wlhlm,7,https://github.com/i3/i3/pull/4208#issuecomment-716446928,"This should solve #4207, I've successfully tested this as a patch to 4.18.2.
This change introduces tabbed, stacking, stacked modes to split command in a backward compatible way (t still works as toggle).
Additionaly, this changes behavior which replaces the layout of current container (instead of creating a nested container) if the container only has one child: while before it only worked for splits, now it works for all layouts which is IMO more consistent.
Fixes #4207
Closes #3001","Thanks for taking a stab at implementing this! ❤️ This fixes one of the annoyances I've had with i3's windowing.
What follows is a patch that is better handled in a separate PR
Here is a patch that draws indicators for the new splits (as it already does for horizontal and vertical). For stacked, it draws the indicator over the top border, mirroring the vertical split indicator. I don't this think will be confused with the vertical split as that will always split at the bottom (as far as I know), opposite of where the stacked split indicator would be drawn. The tabbed indicator also draws over the top border, but only for half the width, sort of mimicking a tab.
diff --git a/src/x.c b/src/x.c
index def79ef2..5348764c 100644
--- a/src/x.c
+++ b/src/x.c
@@ -588,6 +588,12 @@ void x_draw_decoration(Con *con) {
             } else if (p->parent_layout == L_SPLITV) {
                 draw_util_rectangle(&(con->frame_buffer), p->color->indicator,
                                     br.x, r->height + (br.height + br.y), r->width + br.width, -(br.height + br.y));
+            } else if (p->parent_layout == L_STACKED) {
+                draw_util_rectangle(&(con->frame_buffer), p->color->indicator,
+                                    br.x, br.y, r->width + br.width, br.height);
+            } else if (p->parent_layout == L_TABBED) {
+                draw_util_rectangle(&(con->frame_buffer), p->color->indicator,
+                                    br.x, br.y, (r->width + br.width) / 2, br.height);
             }
         }
     }

Here is a preview with increased border size. Tabbed split is on the left, and stacked on the right:",True,{}
i3/i3,https://github.com/i3/i3,4208,2020-09-23T21:46:33Z,,2020-10-26T11:49:50Z,OPEN,False,26,21,5,https://github.com/AMDmi3,Allow splitting into any kind of layout,1,['waiting'],https://github.com/i3/i3/pull/4208,https://github.com/Airblader,8,https://github.com/i3/i3/pull/4208#issuecomment-716453916,"This should solve #4207, I've successfully tested this as a patch to 4.18.2.
This change introduces tabbed, stacking, stacked modes to split command in a backward compatible way (t still works as toggle).
Additionaly, this changes behavior which replaces the layout of current container (instead of creating a nested container) if the container only has one child: while before it only worked for splits, now it works for all layouts which is IMO more consistent.
Fixes #4207
Closes #3001",@wlhlm Your patch seems to fit issue #1067 more than this PR.,True,{}
i3/i3,https://github.com/i3/i3,4208,2020-09-23T21:46:33Z,,2020-10-26T11:49:50Z,OPEN,False,26,21,5,https://github.com/AMDmi3,Allow splitting into any kind of layout,1,['waiting'],https://github.com/i3/i3/pull/4208,https://github.com/wlhlm,9,https://github.com/i3/i3/pull/4208#issuecomment-716497224,"This should solve #4207, I've successfully tested this as a patch to 4.18.2.
This change introduces tabbed, stacking, stacked modes to split command in a backward compatible way (t still works as toggle).
Additionaly, this changes behavior which replaces the layout of current container (instead of creating a nested container) if the container only has one child: while before it only worked for splits, now it works for all layouts which is IMO more consistent.
Fixes #4207
Closes #3001","Huh, I totally forgot to check if this has been discussed before. Though I'm not surprised that it has.",True,{}
i3/i3,https://github.com/i3/i3,4214,2020-10-06T19:48:39Z,2020-10-23T11:56:59Z,2020-11-03T10:42:35Z,MERGED,True,27,10,5,https://github.com/burik666,Add coordinates relative to the current output in i3bar click events,1,['waiting'],https://github.com/i3/i3/pull/4214,https://github.com/burik666,1,https://github.com/i3/i3/pull/4214,"Currently i3bar click events provide x and y coordinates relative to all monitors.
I've added coordinates relative to the current output.
+-----------+-----------+
|           |   i3bar   |
|           +-----------+
|   HDMI-0  |    DP-0   |
| 1920x1080 | 2560x1080 |
+-----------+-----------+


  xrandr output
Screen 0: minimum 8 x 8, current 4480 x 1080, maximum 32767 x 32767
DVI-D-0 disconnected (normal left inverted right x axis y axis)
HDMI-0 connected 1920x1080+0+0 (normal left inverted right x axis y axis) 476mm x 268mm
   1920x1080     60.00*+  59.94    50.00    60.05    60.00    50.04  
   1680x1050     59.95  
   1440x900      59.89  
   1360x765      60.00  
   1280x1024     75.02    60.02  
   1280x800      59.81  
   1280x720      60.00    59.94    50.00  
   1152x864      60.00  
   1024x768      75.03    70.07    60.00  
   800x600       75.00    72.19    60.32    56.25  
   720x576       50.00  
   720x480       59.94  
   640x480       75.00    72.81    59.94    59.93  
DP-0 connected primary 2560x1080+1920+0 (normal left inverted right x axis y axis) 798mm x 334mm
   2560x1080     59.98*+  74.99    50.00  
   1920x1080     74.91    60.00    59.94    50.00  
   1680x1050     59.95  
   1600x900      60.00  
   1280x1024     75.02    60.02  
   1280x800      59.81  
   1280x720      60.00    59.94    50.00  
   1152x864      59.96  
   1024x768      75.03    60.00  
   800x600       75.00    60.32  
   720x576       50.00  
   720x480       59.94  
   640x480       75.00    59.94    59.93  
DP-1 disconnected (normal left inverted right x axis y axis)


When you click in the top right corner of the DP-0, i3bar will provide something like this:
{
  ""x"": 4480,
  ""y"": 10,
  ""output_x"": 2560,
  ""output_y"": 10,
}
This is useful for creating a rofi menu or something else.
rofi -show run -location 1 -xoffset ${I3_OUTPUT_X} -yoffset ${I3_OUTPUT_Y}","Currently i3bar click events provide x and y coordinates relative to all monitors.
I've added coordinates relative to the current output.
+-----------+-----------+
|           |   i3bar   |
|           +-----------+
|   HDMI-0  |    DP-0   |
| 1920x1080 | 2560x1080 |
+-----------+-----------+


  xrandr output
Screen 0: minimum 8 x 8, current 4480 x 1080, maximum 32767 x 32767
DVI-D-0 disconnected (normal left inverted right x axis y axis)
HDMI-0 connected 1920x1080+0+0 (normal left inverted right x axis y axis) 476mm x 268mm
   1920x1080     60.00*+  59.94    50.00    60.05    60.00    50.04  
   1680x1050     59.95  
   1440x900      59.89  
   1360x765      60.00  
   1280x1024     75.02    60.02  
   1280x800      59.81  
   1280x720      60.00    59.94    50.00  
   1152x864      60.00  
   1024x768      75.03    70.07    60.00  
   800x600       75.00    72.19    60.32    56.25  
   720x576       50.00  
   720x480       59.94  
   640x480       75.00    72.81    59.94    59.93  
DP-0 connected primary 2560x1080+1920+0 (normal left inverted right x axis y axis) 798mm x 334mm
   2560x1080     59.98*+  74.99    50.00  
   1920x1080     74.91    60.00    59.94    50.00  
   1680x1050     59.95  
   1600x900      60.00  
   1280x1024     75.02    60.02  
   1280x800      59.81  
   1280x720      60.00    59.94    50.00  
   1152x864      59.96  
   1024x768      75.03    60.00  
   800x600       75.00    60.32  
   720x576       50.00  
   720x480       59.94  
   640x480       75.00    59.94    59.93  
DP-1 disconnected (normal left inverted right x axis y axis)


When you click in the top right corner of the DP-0, i3bar will provide something like this:
{
  ""x"": 4480,
  ""y"": 10,
  ""output_x"": 2560,
  ""output_y"": 10,
}
This is useful for creating a rofi menu or something else.
rofi -show run -location 1 -xoffset ${I3_OUTPUT_X} -yoffset ${I3_OUTPUT_Y}",True,{'THUMBS_UP': ['https://github.com/blackmou5e']}
i3/i3,https://github.com/i3/i3,4214,2020-10-06T19:48:39Z,2020-10-23T11:56:59Z,2020-11-03T10:42:35Z,MERGED,True,27,10,5,https://github.com/burik666,Add coordinates relative to the current output in i3bar click events,1,['waiting'],https://github.com/i3/i3/pull/4214,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/4214#issuecomment-707573017,"Currently i3bar click events provide x and y coordinates relative to all monitors.
I've added coordinates relative to the current output.
+-----------+-----------+
|           |   i3bar   |
|           +-----------+
|   HDMI-0  |    DP-0   |
| 1920x1080 | 2560x1080 |
+-----------+-----------+


  xrandr output
Screen 0: minimum 8 x 8, current 4480 x 1080, maximum 32767 x 32767
DVI-D-0 disconnected (normal left inverted right x axis y axis)
HDMI-0 connected 1920x1080+0+0 (normal left inverted right x axis y axis) 476mm x 268mm
   1920x1080     60.00*+  59.94    50.00    60.05    60.00    50.04  
   1680x1050     59.95  
   1440x900      59.89  
   1360x765      60.00  
   1280x1024     75.02    60.02  
   1280x800      59.81  
   1280x720      60.00    59.94    50.00  
   1152x864      60.00  
   1024x768      75.03    70.07    60.00  
   800x600       75.00    72.19    60.32    56.25  
   720x576       50.00  
   720x480       59.94  
   640x480       75.00    72.81    59.94    59.93  
DP-0 connected primary 2560x1080+1920+0 (normal left inverted right x axis y axis) 798mm x 334mm
   2560x1080     59.98*+  74.99    50.00  
   1920x1080     74.91    60.00    59.94    50.00  
   1680x1050     59.95  
   1600x900      60.00  
   1280x1024     75.02    60.02  
   1280x800      59.81  
   1280x720      60.00    59.94    50.00  
   1152x864      59.96  
   1024x768      75.03    60.00  
   800x600       75.00    60.32  
   720x576       50.00  
   720x480       59.94  
   640x480       75.00    59.94    59.93  
DP-1 disconnected (normal left inverted right x axis y axis)


When you click in the top right corner of the DP-0, i3bar will provide something like this:
{
  ""x"": 4480,
  ""y"": 10,
  ""output_x"": 2560,
  ""output_y"": 10,
}
This is useful for creating a rofi menu or something else.
rofi -show run -location 1 -xoffset ${I3_OUTPUT_X} -yoffset ${I3_OUTPUT_Y}","So, isn't this something that can be calculated by the script that calls rofi? Plus, can't rofi be called with a global position?",True,{}
i3/i3,https://github.com/i3/i3,4214,2020-10-06T19:48:39Z,2020-10-23T11:56:59Z,2020-11-03T10:42:35Z,MERGED,True,27,10,5,https://github.com/burik666,Add coordinates relative to the current output in i3bar click events,1,['waiting'],https://github.com/i3/i3/pull/4214,https://github.com/burik666,3,https://github.com/i3/i3/pull/4214#issuecomment-707647620,"Currently i3bar click events provide x and y coordinates relative to all monitors.
I've added coordinates relative to the current output.
+-----------+-----------+
|           |   i3bar   |
|           +-----------+
|   HDMI-0  |    DP-0   |
| 1920x1080 | 2560x1080 |
+-----------+-----------+


  xrandr output
Screen 0: minimum 8 x 8, current 4480 x 1080, maximum 32767 x 32767
DVI-D-0 disconnected (normal left inverted right x axis y axis)
HDMI-0 connected 1920x1080+0+0 (normal left inverted right x axis y axis) 476mm x 268mm
   1920x1080     60.00*+  59.94    50.00    60.05    60.00    50.04  
   1680x1050     59.95  
   1440x900      59.89  
   1360x765      60.00  
   1280x1024     75.02    60.02  
   1280x800      59.81  
   1280x720      60.00    59.94    50.00  
   1152x864      60.00  
   1024x768      75.03    70.07    60.00  
   800x600       75.00    72.19    60.32    56.25  
   720x576       50.00  
   720x480       59.94  
   640x480       75.00    72.81    59.94    59.93  
DP-0 connected primary 2560x1080+1920+0 (normal left inverted right x axis y axis) 798mm x 334mm
   2560x1080     59.98*+  74.99    50.00  
   1920x1080     74.91    60.00    59.94    50.00  
   1680x1050     59.95  
   1600x900      60.00  
   1280x1024     75.02    60.02  
   1280x800      59.81  
   1280x720      60.00    59.94    50.00  
   1152x864      59.96  
   1024x768      75.03    60.00  
   800x600       75.00    60.32  
   720x576       50.00  
   720x480       59.94  
   640x480       75.00    59.94    59.93  
DP-1 disconnected (normal left inverted right x axis y axis)


When you click in the top right corner of the DP-0, i3bar will provide something like this:
{
  ""x"": 4480,
  ""y"": 10,
  ""output_x"": 2560,
  ""output_y"": 10,
}
This is useful for creating a rofi menu or something else.
rofi -show run -location 1 -xoffset ${I3_OUTPUT_X} -yoffset ${I3_OUTPUT_Y}","@orestisfl,
These coordinates are difficult to calculate by a script.
output_xy.sh
#!/usr/bin/env bash
# from https://superuser.com/a/1238384

OFFSET_RE=""\+([-0-9]+)\+([-0-9]+)""

# Get the window position
eval ""$(xdotool getmouselocation --shell)""

# Loop through each screen and compare the offset with the window
# coordinates.
monitor_index=0
while read name width height xoff yoff
do
    if [ ""${X}"" -ge ""$xoff"" \
      -a ""${Y}"" -ge ""$yoff"" \
      -a ""${X}"" -lt ""$(($xoff+$width))"" \
      -a ""${Y}"" -lt ""$(($yoff+$height))"" ]
    then
        monitor=$name
        OUTPUT_X=$((X - xoff))
        OUTPUT_Y=$((Y - yoff))
        break
    fi
    ((monitor_index++))
done < <(xrandr | grep -w connected |
    sed -r ""s/^([^ ]*).*\b([-0-9]+)x([-0-9]+)$OFFSET_RE.*$/\1 \2 \3 \4 \5/"" |
    sort -nk4,5)

# If we found a monitor, echo it out, otherwise print an error.
if [ ! -z ""$monitor"" ]
then
    echo $OUTPUT_X $OUTPUT_Y
    exit 0
else
    echo ""Couldn't find any monitor for the current window."" >&2
    exit 1
fi

rofi only supports positioning relative to the current screen. https://github.com/davatorium/rofi/wiki/WindowPosition",True,{}
i3/i3,https://github.com/i3/i3,4214,2020-10-06T19:48:39Z,2020-10-23T11:56:59Z,2020-11-03T10:42:35Z,MERGED,True,27,10,5,https://github.com/burik666,Add coordinates relative to the current output in i3bar click events,1,['waiting'],https://github.com/i3/i3/pull/4214,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/4214#issuecomment-713005412,"Currently i3bar click events provide x and y coordinates relative to all monitors.
I've added coordinates relative to the current output.
+-----------+-----------+
|           |   i3bar   |
|           +-----------+
|   HDMI-0  |    DP-0   |
| 1920x1080 | 2560x1080 |
+-----------+-----------+


  xrandr output
Screen 0: minimum 8 x 8, current 4480 x 1080, maximum 32767 x 32767
DVI-D-0 disconnected (normal left inverted right x axis y axis)
HDMI-0 connected 1920x1080+0+0 (normal left inverted right x axis y axis) 476mm x 268mm
   1920x1080     60.00*+  59.94    50.00    60.05    60.00    50.04  
   1680x1050     59.95  
   1440x900      59.89  
   1360x765      60.00  
   1280x1024     75.02    60.02  
   1280x800      59.81  
   1280x720      60.00    59.94    50.00  
   1152x864      60.00  
   1024x768      75.03    70.07    60.00  
   800x600       75.00    72.19    60.32    56.25  
   720x576       50.00  
   720x480       59.94  
   640x480       75.00    72.81    59.94    59.93  
DP-0 connected primary 2560x1080+1920+0 (normal left inverted right x axis y axis) 798mm x 334mm
   2560x1080     59.98*+  74.99    50.00  
   1920x1080     74.91    60.00    59.94    50.00  
   1680x1050     59.95  
   1600x900      60.00  
   1280x1024     75.02    60.02  
   1280x800      59.81  
   1280x720      60.00    59.94    50.00  
   1152x864      59.96  
   1024x768      75.03    60.00  
   800x600       75.00    60.32  
   720x576       50.00  
   720x480       59.94  
   640x480       75.00    59.94    59.93  
DP-1 disconnected (normal left inverted right x axis y axis)


When you click in the top right corner of the DP-0, i3bar will provide something like this:
{
  ""x"": 4480,
  ""y"": 10,
  ""output_x"": 2560,
  ""output_y"": 10,
}
This is useful for creating a rofi menu or something else.
rofi -show run -location 1 -xoffset ${I3_OUTPUT_X} -yoffset ${I3_OUTPUT_Y}","@Airblader if you agree that this is something that is hard to work around & worthy to implement, I will merge it.
I would however prefer relative_{x,y} than output_{x,y}",True,{}
i3/i3,https://github.com/i3/i3,4214,2020-10-06T19:48:39Z,2020-10-23T11:56:59Z,2020-11-03T10:42:35Z,MERGED,True,27,10,5,https://github.com/burik666,Add coordinates relative to the current output in i3bar click events,1,['waiting'],https://github.com/i3/i3/pull/4214,https://github.com/burik666,5,https://github.com/i3/i3/pull/4214#issuecomment-713007610,"Currently i3bar click events provide x and y coordinates relative to all monitors.
I've added coordinates relative to the current output.
+-----------+-----------+
|           |   i3bar   |
|           +-----------+
|   HDMI-0  |    DP-0   |
| 1920x1080 | 2560x1080 |
+-----------+-----------+


  xrandr output
Screen 0: minimum 8 x 8, current 4480 x 1080, maximum 32767 x 32767
DVI-D-0 disconnected (normal left inverted right x axis y axis)
HDMI-0 connected 1920x1080+0+0 (normal left inverted right x axis y axis) 476mm x 268mm
   1920x1080     60.00*+  59.94    50.00    60.05    60.00    50.04  
   1680x1050     59.95  
   1440x900      59.89  
   1360x765      60.00  
   1280x1024     75.02    60.02  
   1280x800      59.81  
   1280x720      60.00    59.94    50.00  
   1152x864      60.00  
   1024x768      75.03    70.07    60.00  
   800x600       75.00    72.19    60.32    56.25  
   720x576       50.00  
   720x480       59.94  
   640x480       75.00    72.81    59.94    59.93  
DP-0 connected primary 2560x1080+1920+0 (normal left inverted right x axis y axis) 798mm x 334mm
   2560x1080     59.98*+  74.99    50.00  
   1920x1080     74.91    60.00    59.94    50.00  
   1680x1050     59.95  
   1600x900      60.00  
   1280x1024     75.02    60.02  
   1280x800      59.81  
   1280x720      60.00    59.94    50.00  
   1152x864      59.96  
   1024x768      75.03    60.00  
   800x600       75.00    60.32  
   720x576       50.00  
   720x480       59.94  
   640x480       75.00    59.94    59.93  
DP-1 disconnected (normal left inverted right x axis y axis)


When you click in the top right corner of the DP-0, i3bar will provide something like this:
{
  ""x"": 4480,
  ""y"": 10,
  ""output_x"": 2560,
  ""output_y"": 10,
}
This is useful for creating a rofi menu or something else.
rofi -show run -location 1 -xoffset ${I3_OUTPUT_X} -yoffset ${I3_OUTPUT_Y}","@orestisfl,
relative_{x,y} already used.
https://i3wm.org/docs/i3bar-protocol.html#_click_events
relative_x, relative_y
    Coordinates where the click occurred, with respect to the top left corner of the block",True,{'THUMBS_UP': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,4214,2020-10-06T19:48:39Z,2020-10-23T11:56:59Z,2020-11-03T10:42:35Z,MERGED,True,27,10,5,https://github.com/burik666,Add coordinates relative to the current output in i3bar click events,1,['waiting'],https://github.com/i3/i3/pull/4214,https://github.com/burik666,6,https://github.com/i3/i3/pull/4214#issuecomment-715205662,"Currently i3bar click events provide x and y coordinates relative to all monitors.
I've added coordinates relative to the current output.
+-----------+-----------+
|           |   i3bar   |
|           +-----------+
|   HDMI-0  |    DP-0   |
| 1920x1080 | 2560x1080 |
+-----------+-----------+


  xrandr output
Screen 0: minimum 8 x 8, current 4480 x 1080, maximum 32767 x 32767
DVI-D-0 disconnected (normal left inverted right x axis y axis)
HDMI-0 connected 1920x1080+0+0 (normal left inverted right x axis y axis) 476mm x 268mm
   1920x1080     60.00*+  59.94    50.00    60.05    60.00    50.04  
   1680x1050     59.95  
   1440x900      59.89  
   1360x765      60.00  
   1280x1024     75.02    60.02  
   1280x800      59.81  
   1280x720      60.00    59.94    50.00  
   1152x864      60.00  
   1024x768      75.03    70.07    60.00  
   800x600       75.00    72.19    60.32    56.25  
   720x576       50.00  
   720x480       59.94  
   640x480       75.00    72.81    59.94    59.93  
DP-0 connected primary 2560x1080+1920+0 (normal left inverted right x axis y axis) 798mm x 334mm
   2560x1080     59.98*+  74.99    50.00  
   1920x1080     74.91    60.00    59.94    50.00  
   1680x1050     59.95  
   1600x900      60.00  
   1280x1024     75.02    60.02  
   1280x800      59.81  
   1280x720      60.00    59.94    50.00  
   1152x864      59.96  
   1024x768      75.03    60.00  
   800x600       75.00    60.32  
   720x576       50.00  
   720x480       59.94  
   640x480       75.00    59.94    59.93  
DP-1 disconnected (normal left inverted right x axis y axis)


When you click in the top right corner of the DP-0, i3bar will provide something like this:
{
  ""x"": 4480,
  ""y"": 10,
  ""output_x"": 2560,
  ""output_y"": 10,
}
This is useful for creating a rofi menu or something else.
rofi -show run -location 1 -xoffset ${I3_OUTPUT_X} -yoffset ${I3_OUTPUT_Y}","@Airblader, what do you think about this?",True,{}
i3/i3,https://github.com/i3/i3,4214,2020-10-06T19:48:39Z,2020-10-23T11:56:59Z,2020-11-03T10:42:35Z,MERGED,True,27,10,5,https://github.com/burik666,Add coordinates relative to the current output in i3bar click events,1,['waiting'],https://github.com/i3/i3/pull/4214,https://github.com/orestisfl,7,https://github.com/i3/i3/pull/4214#issuecomment-715216368,"Currently i3bar click events provide x and y coordinates relative to all monitors.
I've added coordinates relative to the current output.
+-----------+-----------+
|           |   i3bar   |
|           +-----------+
|   HDMI-0  |    DP-0   |
| 1920x1080 | 2560x1080 |
+-----------+-----------+


  xrandr output
Screen 0: minimum 8 x 8, current 4480 x 1080, maximum 32767 x 32767
DVI-D-0 disconnected (normal left inverted right x axis y axis)
HDMI-0 connected 1920x1080+0+0 (normal left inverted right x axis y axis) 476mm x 268mm
   1920x1080     60.00*+  59.94    50.00    60.05    60.00    50.04  
   1680x1050     59.95  
   1440x900      59.89  
   1360x765      60.00  
   1280x1024     75.02    60.02  
   1280x800      59.81  
   1280x720      60.00    59.94    50.00  
   1152x864      60.00  
   1024x768      75.03    70.07    60.00  
   800x600       75.00    72.19    60.32    56.25  
   720x576       50.00  
   720x480       59.94  
   640x480       75.00    72.81    59.94    59.93  
DP-0 connected primary 2560x1080+1920+0 (normal left inverted right x axis y axis) 798mm x 334mm
   2560x1080     59.98*+  74.99    50.00  
   1920x1080     74.91    60.00    59.94    50.00  
   1680x1050     59.95  
   1600x900      60.00  
   1280x1024     75.02    60.02  
   1280x800      59.81  
   1280x720      60.00    59.94    50.00  
   1152x864      59.96  
   1024x768      75.03    60.00  
   800x600       75.00    60.32  
   720x576       50.00  
   720x480       59.94  
   640x480       75.00    59.94    59.93  
DP-1 disconnected (normal left inverted right x axis y axis)


When you click in the top right corner of the DP-0, i3bar will provide something like this:
{
  ""x"": 4480,
  ""y"": 10,
  ""output_x"": 2560,
  ""output_y"": 10,
}
This is useful for creating a rofi menu or something else.
rofi -show run -location 1 -xoffset ${I3_OUTPUT_X} -yoffset ${I3_OUTPUT_Y}","Other things: Do not introduce merge commits in PRs, use rebase instead. One simple way to fix this right now is git reset --hard origin/next && git cherry-pick 3a9ac8c6fa50ebf6fde67209d6fd9d7bebd6adfb.
Include the extra information in the PR description inside the git commit message.",True,{}
i3/i3,https://github.com/i3/i3,4214,2020-10-06T19:48:39Z,2020-10-23T11:56:59Z,2020-11-03T10:42:35Z,MERGED,True,27,10,5,https://github.com/burik666,Add coordinates relative to the current output in i3bar click events,1,['waiting'],https://github.com/i3/i3/pull/4214,https://github.com/orestisfl,8,https://github.com/i3/i3/pull/4214#issuecomment-715217616,"Currently i3bar click events provide x and y coordinates relative to all monitors.
I've added coordinates relative to the current output.
+-----------+-----------+
|           |   i3bar   |
|           +-----------+
|   HDMI-0  |    DP-0   |
| 1920x1080 | 2560x1080 |
+-----------+-----------+


  xrandr output
Screen 0: minimum 8 x 8, current 4480 x 1080, maximum 32767 x 32767
DVI-D-0 disconnected (normal left inverted right x axis y axis)
HDMI-0 connected 1920x1080+0+0 (normal left inverted right x axis y axis) 476mm x 268mm
   1920x1080     60.00*+  59.94    50.00    60.05    60.00    50.04  
   1680x1050     59.95  
   1440x900      59.89  
   1360x765      60.00  
   1280x1024     75.02    60.02  
   1280x800      59.81  
   1280x720      60.00    59.94    50.00  
   1152x864      60.00  
   1024x768      75.03    70.07    60.00  
   800x600       75.00    72.19    60.32    56.25  
   720x576       50.00  
   720x480       59.94  
   640x480       75.00    72.81    59.94    59.93  
DP-0 connected primary 2560x1080+1920+0 (normal left inverted right x axis y axis) 798mm x 334mm
   2560x1080     59.98*+  74.99    50.00  
   1920x1080     74.91    60.00    59.94    50.00  
   1680x1050     59.95  
   1600x900      60.00  
   1280x1024     75.02    60.02  
   1280x800      59.81  
   1280x720      60.00    59.94    50.00  
   1152x864      59.96  
   1024x768      75.03    60.00  
   800x600       75.00    60.32  
   720x576       50.00  
   720x480       59.94  
   640x480       75.00    59.94    59.93  
DP-1 disconnected (normal left inverted right x axis y axis)


When you click in the top right corner of the DP-0, i3bar will provide something like this:
{
  ""x"": 4480,
  ""y"": 10,
  ""output_x"": 2560,
  ""output_y"": 10,
}
This is useful for creating a rofi menu or something else.
rofi -show run -location 1 -xoffset ${I3_OUTPUT_X} -yoffset ${I3_OUTPUT_Y}",Oh and the typo is in the commit message as well 😃,True,{}
i3/i3,https://github.com/i3/i3,4214,2020-10-06T19:48:39Z,2020-10-23T11:56:59Z,2020-11-03T10:42:35Z,MERGED,True,27,10,5,https://github.com/burik666,Add coordinates relative to the current output in i3bar click events,1,['waiting'],https://github.com/i3/i3/pull/4214,https://github.com/burik666,9,https://github.com/i3/i3/pull/4214#issuecomment-715226816,"Currently i3bar click events provide x and y coordinates relative to all monitors.
I've added coordinates relative to the current output.
+-----------+-----------+
|           |   i3bar   |
|           +-----------+
|   HDMI-0  |    DP-0   |
| 1920x1080 | 2560x1080 |
+-----------+-----------+


  xrandr output
Screen 0: minimum 8 x 8, current 4480 x 1080, maximum 32767 x 32767
DVI-D-0 disconnected (normal left inverted right x axis y axis)
HDMI-0 connected 1920x1080+0+0 (normal left inverted right x axis y axis) 476mm x 268mm
   1920x1080     60.00*+  59.94    50.00    60.05    60.00    50.04  
   1680x1050     59.95  
   1440x900      59.89  
   1360x765      60.00  
   1280x1024     75.02    60.02  
   1280x800      59.81  
   1280x720      60.00    59.94    50.00  
   1152x864      60.00  
   1024x768      75.03    70.07    60.00  
   800x600       75.00    72.19    60.32    56.25  
   720x576       50.00  
   720x480       59.94  
   640x480       75.00    72.81    59.94    59.93  
DP-0 connected primary 2560x1080+1920+0 (normal left inverted right x axis y axis) 798mm x 334mm
   2560x1080     59.98*+  74.99    50.00  
   1920x1080     74.91    60.00    59.94    50.00  
   1680x1050     59.95  
   1600x900      60.00  
   1280x1024     75.02    60.02  
   1280x800      59.81  
   1280x720      60.00    59.94    50.00  
   1152x864      59.96  
   1024x768      75.03    60.00  
   800x600       75.00    60.32  
   720x576       50.00  
   720x480       59.94  
   640x480       75.00    59.94    59.93  
DP-1 disconnected (normal left inverted right x axis y axis)


When you click in the top right corner of the DP-0, i3bar will provide something like this:
{
  ""x"": 4480,
  ""y"": 10,
  ""output_x"": 2560,
  ""output_y"": 10,
}
This is useful for creating a rofi menu or something else.
rofi -show run -location 1 -xoffset ${I3_OUTPUT_X} -yoffset ${I3_OUTPUT_Y}","@orestisfl,
Yes, I tested with different xrandr configurations.
This works great.",True,{}
i3/i3,https://github.com/i3/i3,4214,2020-10-06T19:48:39Z,2020-10-23T11:56:59Z,2020-11-03T10:42:35Z,MERGED,True,27,10,5,https://github.com/burik666,Add coordinates relative to the current output in i3bar click events,1,['waiting'],https://github.com/i3/i3/pull/4214,https://github.com/Airblader,10,https://github.com/i3/i3/pull/4214#issuecomment-715229793,"Currently i3bar click events provide x and y coordinates relative to all monitors.
I've added coordinates relative to the current output.
+-----------+-----------+
|           |   i3bar   |
|           +-----------+
|   HDMI-0  |    DP-0   |
| 1920x1080 | 2560x1080 |
+-----------+-----------+


  xrandr output
Screen 0: minimum 8 x 8, current 4480 x 1080, maximum 32767 x 32767
DVI-D-0 disconnected (normal left inverted right x axis y axis)
HDMI-0 connected 1920x1080+0+0 (normal left inverted right x axis y axis) 476mm x 268mm
   1920x1080     60.00*+  59.94    50.00    60.05    60.00    50.04  
   1680x1050     59.95  
   1440x900      59.89  
   1360x765      60.00  
   1280x1024     75.02    60.02  
   1280x800      59.81  
   1280x720      60.00    59.94    50.00  
   1152x864      60.00  
   1024x768      75.03    70.07    60.00  
   800x600       75.00    72.19    60.32    56.25  
   720x576       50.00  
   720x480       59.94  
   640x480       75.00    72.81    59.94    59.93  
DP-0 connected primary 2560x1080+1920+0 (normal left inverted right x axis y axis) 798mm x 334mm
   2560x1080     59.98*+  74.99    50.00  
   1920x1080     74.91    60.00    59.94    50.00  
   1680x1050     59.95  
   1600x900      60.00  
   1280x1024     75.02    60.02  
   1280x800      59.81  
   1280x720      60.00    59.94    50.00  
   1152x864      59.96  
   1024x768      75.03    60.00  
   800x600       75.00    60.32  
   720x576       50.00  
   720x480       59.94  
   640x480       75.00    59.94    59.93  
DP-1 disconnected (normal left inverted right x axis y axis)


When you click in the top right corner of the DP-0, i3bar will provide something like this:
{
  ""x"": 4480,
  ""y"": 10,
  ""output_x"": 2560,
  ""output_y"": 10,
}
This is useful for creating a rofi menu or something else.
rofi -show run -location 1 -xoffset ${I3_OUTPUT_X} -yoffset ${I3_OUTPUT_Y}","@Airblader, what do you think about this?

I haven't had a chance to look at the PR from the code-level, but completely trust @orestisfl in that regard. As for the feature, I think it makes sense, the naming is fine (given that relative_ is already used), so let's get it shipped.
That said, @orestisfl , I think we may want to be a bit selective with which features we merge into stable now so we don't merge things right before the next release without having some testing period. I think this one is probably fine as (apart from potential crashes) it shouldn't affect any existing things, but you can make that call.",True,"{'THUMBS_UP': ['https://github.com/orestisfl', 'https://github.com/burik666']}"
i3/i3,https://github.com/i3/i3,4214,2020-10-06T19:48:39Z,2020-10-23T11:56:59Z,2020-11-03T10:42:35Z,MERGED,True,27,10,5,https://github.com/burik666,Add coordinates relative to the current output in i3bar click events,1,['waiting'],https://github.com/i3/i3/pull/4214,https://github.com/burik666,11,https://github.com/i3/i3/pull/4214#issuecomment-715261596,"Currently i3bar click events provide x and y coordinates relative to all monitors.
I've added coordinates relative to the current output.
+-----------+-----------+
|           |   i3bar   |
|           +-----------+
|   HDMI-0  |    DP-0   |
| 1920x1080 | 2560x1080 |
+-----------+-----------+


  xrandr output
Screen 0: minimum 8 x 8, current 4480 x 1080, maximum 32767 x 32767
DVI-D-0 disconnected (normal left inverted right x axis y axis)
HDMI-0 connected 1920x1080+0+0 (normal left inverted right x axis y axis) 476mm x 268mm
   1920x1080     60.00*+  59.94    50.00    60.05    60.00    50.04  
   1680x1050     59.95  
   1440x900      59.89  
   1360x765      60.00  
   1280x1024     75.02    60.02  
   1280x800      59.81  
   1280x720      60.00    59.94    50.00  
   1152x864      60.00  
   1024x768      75.03    70.07    60.00  
   800x600       75.00    72.19    60.32    56.25  
   720x576       50.00  
   720x480       59.94  
   640x480       75.00    72.81    59.94    59.93  
DP-0 connected primary 2560x1080+1920+0 (normal left inverted right x axis y axis) 798mm x 334mm
   2560x1080     59.98*+  74.99    50.00  
   1920x1080     74.91    60.00    59.94    50.00  
   1680x1050     59.95  
   1600x900      60.00  
   1280x1024     75.02    60.02  
   1280x800      59.81  
   1280x720      60.00    59.94    50.00  
   1152x864      59.96  
   1024x768      75.03    60.00  
   800x600       75.00    60.32  
   720x576       50.00  
   720x480       59.94  
   640x480       75.00    59.94    59.93  
DP-1 disconnected (normal left inverted right x axis y axis)


When you click in the top right corner of the DP-0, i3bar will provide something like this:
{
  ""x"": 4480,
  ""y"": 10,
  ""output_x"": 2560,
  ""output_y"": 10,
}
This is useful for creating a rofi menu or something else.
rofi -show run -location 1 -xoffset ${I3_OUTPUT_X} -yoffset ${I3_OUTPUT_Y}","@orestisfl, thanks a lot for your help with this PR.",True,{'HEART': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,4214,2020-10-06T19:48:39Z,2020-10-23T11:56:59Z,2020-11-03T10:42:35Z,MERGED,True,27,10,5,https://github.com/burik666,Add coordinates relative to the current output in i3bar click events,1,['waiting'],https://github.com/i3/i3/pull/4214,https://github.com/orestisfl,12,https://github.com/i3/i3/pull/4214#issuecomment-715297279,"Currently i3bar click events provide x and y coordinates relative to all monitors.
I've added coordinates relative to the current output.
+-----------+-----------+
|           |   i3bar   |
|           +-----------+
|   HDMI-0  |    DP-0   |
| 1920x1080 | 2560x1080 |
+-----------+-----------+


  xrandr output
Screen 0: minimum 8 x 8, current 4480 x 1080, maximum 32767 x 32767
DVI-D-0 disconnected (normal left inverted right x axis y axis)
HDMI-0 connected 1920x1080+0+0 (normal left inverted right x axis y axis) 476mm x 268mm
   1920x1080     60.00*+  59.94    50.00    60.05    60.00    50.04  
   1680x1050     59.95  
   1440x900      59.89  
   1360x765      60.00  
   1280x1024     75.02    60.02  
   1280x800      59.81  
   1280x720      60.00    59.94    50.00  
   1152x864      60.00  
   1024x768      75.03    70.07    60.00  
   800x600       75.00    72.19    60.32    56.25  
   720x576       50.00  
   720x480       59.94  
   640x480       75.00    72.81    59.94    59.93  
DP-0 connected primary 2560x1080+1920+0 (normal left inverted right x axis y axis) 798mm x 334mm
   2560x1080     59.98*+  74.99    50.00  
   1920x1080     74.91    60.00    59.94    50.00  
   1680x1050     59.95  
   1600x900      60.00  
   1280x1024     75.02    60.02  
   1280x800      59.81  
   1280x720      60.00    59.94    50.00  
   1152x864      59.96  
   1024x768      75.03    60.00  
   800x600       75.00    60.32  
   720x576       50.00  
   720x480       59.94  
   640x480       75.00    59.94    59.93  
DP-1 disconnected (normal left inverted right x axis y axis)


When you click in the top right corner of the DP-0, i3bar will provide something like this:
{
  ""x"": 4480,
  ""y"": 10,
  ""output_x"": 2560,
  ""output_y"": 10,
}
This is useful for creating a rofi menu or something else.
rofi -show run -location 1 -xoffset ${I3_OUTPUT_X} -yoffset ${I3_OUTPUT_Y}",Thank you for your contribution!,True,{}
i3/i3,https://github.com/i3/i3,4224,2020-10-19T08:47:00Z,2020-10-19T20:10:15Z,2020-10-19T20:10:23Z,MERGED,True,10,7,1,https://github.com/orestisfl,meson: Mark complete-run.pl as executable,2,[],https://github.com/i3/i3/pull/4224,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4224,"This is a bit hacky but I didn't find any other way
Fixes problem described in #4086 (comment)","This is a bit hacky but I didn't find any other way
Fixes problem described in #4086 (comment)",True,{}
i3/i3,https://github.com/i3/i3,4226,2020-10-22T01:34:22Z,2020-10-22T05:10:18Z,2020-10-22T05:23:23Z,CLOSED,False,4,3,2,https://github.com/burik666,i3bar: fix render empty blocks with min_width,1,[],https://github.com/i3/i3/pull/4226,https://github.com/burik666,1,https://github.com/i3/i3/pull/4226,"This change allows render blocks of any width.
{
  ""full_text"": """",
  ""min_width"": 100,
  ""background"": ""#00ff00""
}

{
  ""full_text"": """",
  ""min_width"": 1,
  ""background"": ""#0000ff""
}","This change allows render blocks of any width.
{
  ""full_text"": """",
  ""min_width"": 100,
  ""background"": ""#00ff00""
}

{
  ""full_text"": """",
  ""min_width"": 1,
  ""background"": ""#0000ff""
}",True,{}
i3/i3,https://github.com/i3/i3,4226,2020-10-22T01:34:22Z,2020-10-22T05:10:18Z,2020-10-22T05:23:23Z,CLOSED,False,4,3,2,https://github.com/burik666,i3bar: fix render empty blocks with min_width,1,[],https://github.com/i3/i3/pull/4226,https://github.com/ohk2kt3t4,2,https://github.com/i3/i3/pull/4226#issuecomment-714170952,"This change allows render blocks of any width.
{
  ""full_text"": """",
  ""min_width"": 100,
  ""background"": ""#00ff00""
}

{
  ""full_text"": """",
  ""min_width"": 1,
  ""background"": ""#0000ff""
}",I think I have come across this before but don't have access to a machine at the moment to check. Do you have any before/after screenshots?,True,{}
i3/i3,https://github.com/i3/i3,4226,2020-10-22T01:34:22Z,2020-10-22T05:10:18Z,2020-10-22T05:23:23Z,CLOSED,False,4,3,2,https://github.com/burik666,i3bar: fix render empty blocks with min_width,1,[],https://github.com/i3/i3/pull/4226,https://github.com/burik666,3,https://github.com/i3/i3/pull/4226#issuecomment-714175237,"This change allows render blocks of any width.
{
  ""full_text"": """",
  ""min_width"": 100,
  ""background"": ""#00ff00""
}

{
  ""full_text"": """",
  ""min_width"": 1,
  ""background"": ""#0000ff""
}","@ohk2kt3t4,
Before that, similar blocks not rendered.
If you specify full_text:"" "" then the block width will always be greater than the width of one character, even if ""min_width"": 1.",True,{}
i3/i3,https://github.com/i3/i3,4226,2020-10-22T01:34:22Z,2020-10-22T05:10:18Z,2020-10-22T05:23:23Z,CLOSED,False,4,3,2,https://github.com/burik666,i3bar: fix render empty blocks with min_width,1,[],https://github.com/i3/i3/pull/4226,https://github.com/Airblader,4,https://github.com/i3/i3/pull/4226#issuecomment-714231082,"This change allows render blocks of any width.
{
  ""full_text"": """",
  ""min_width"": 100,
  ""background"": ""#00ff00""
}

{
  ""full_text"": """",
  ""min_width"": 1,
  ""background"": ""#0000ff""
}","Thanks for the PR. However, this isn't something that needs fixed because the current behavior is intentional and documented:

If full_text is an empty string, the block will be skipped.
— https://i3wm.org/docs/i3bar-protocol.html",True,{}
i3/i3,https://github.com/i3/i3,4226,2020-10-22T01:34:22Z,2020-10-22T05:10:18Z,2020-10-22T05:23:23Z,CLOSED,False,4,3,2,https://github.com/burik666,i3bar: fix render empty blocks with min_width,1,[],https://github.com/i3/i3/pull/4226,https://github.com/burik666,5,https://github.com/i3/i3/pull/4226#issuecomment-714235008,"This change allows render blocks of any width.
{
  ""full_text"": """",
  ""min_width"": 100,
  ""background"": ""#00ff00""
}

{
  ""full_text"": """",
  ""min_width"": 1,
  ""background"": ""#0000ff""
}","@Airblader, May change this behavior to:

If full_text is an empty string and min_width is not set, the block will be skipped.

?",True,{}
i3/i3,https://github.com/i3/i3,4226,2020-10-22T01:34:22Z,2020-10-22T05:10:18Z,2020-10-22T05:23:23Z,CLOSED,False,4,3,2,https://github.com/burik666,i3bar: fix render empty blocks with min_width,1,[],https://github.com/i3/i3/pull/4226,https://github.com/Airblader,6,https://github.com/i3/i3/pull/4226#issuecomment-714236265,"This change allows render blocks of any width.
{
  ""full_text"": """",
  ""min_width"": 100,
  ""background"": ""#00ff00""
}

{
  ""full_text"": """",
  ""min_width"": 1,
  ""background"": ""#0000ff""
}","I haven't yet seen an argument for why that should be done. Please raise a feature request where you explain what you want to achieve so we can discuss what change that would require and whether we'd accept such a change. The proposed fix here, however, would be breaking.",True,{}
i3/i3,https://github.com/i3/i3,4229,2020-10-25T20:55:37Z,2020-10-25T21:42:10Z,2020-10-25T21:42:10Z,MERGED,True,4,4,2,https://github.com/stapelberg,travis: fix bintray deploy step,1,[],https://github.com/i3/i3/pull/4229,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4229,"Commit be1065f moved the Debian/Ubuntu package
builds into the distbuild/ directory.
fixes #4179","Commit be1065f moved the Debian/Ubuntu package
builds into the distbuild/ directory.
fixes #4179",True,{}
i3/i3,https://github.com/i3/i3,4230,2020-10-26T02:23:55Z,2021-01-01T21:17:28Z,2022-01-19T20:47:51Z,MERGED,True,15,2,2,https://github.com/Xyene,Implement context-sensitive tab-clicking behavior,1,[],https://github.com/i3/i3/pull/4230,https://github.com/Xyene,1,https://github.com/i3/i3/pull/4230,"This commit makes it so that when clicking on a tab for the first time,
its inactive-focused child is focused. This matches i3 behavior when
scrolling on tabs.
A second click on the tab titlebar focuses the tab container itself.
Subsequent clicks cycle between these two states.
Closes #4225.","This commit makes it so that when clicking on a tab for the first time,
its inactive-focused child is focused. This matches i3 behavior when
scrolling on tabs.
A second click on the tab titlebar focuses the tab container itself.
Subsequent clicks cycle between these two states.
Closes #4225.",True,{}
i3/i3,https://github.com/i3/i3,4230,2020-10-26T02:23:55Z,2021-01-01T21:17:28Z,2022-01-19T20:47:51Z,MERGED,True,15,2,2,https://github.com/Xyene,Implement context-sensitive tab-clicking behavior,1,[],https://github.com/i3/i3/pull/4230,https://github.com/Xyene,2,https://github.com/i3/i3/pull/4230#issuecomment-725208677,"This commit makes it so that when clicking on a tab for the first time,
its inactive-focused child is focused. This matches i3 behavior when
scrolling on tabs.
A second click on the tab titlebar focuses the tab container itself.
Subsequent clicks cycle between these two states.
Closes #4225.","@orestisfl gentle ping -- is this something that would be wanted upstream, and if so, is there anything else I should do on my end?",True,{}
i3/i3,https://github.com/i3/i3,4230,2020-10-26T02:23:55Z,2021-01-01T21:17:28Z,2022-01-19T20:47:51Z,MERGED,True,15,2,2,https://github.com/Xyene,Implement context-sensitive tab-clicking behavior,1,[],https://github.com/i3/i3/pull/4230,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/4230#issuecomment-725293235,"This commit makes it so that when clicking on a tab for the first time,
its inactive-focused child is focused. This matches i3 behavior when
scrolling on tabs.
A second click on the tab titlebar focuses the tab container itself.
Subsequent clicks cycle between these two states.
Closes #4225.","Sorry for the wait.
I am in favor of the change.
Can you also update this file please: https://github.com/i3/i3/blob/next/RELEASE-NOTES-next",True,{}
i3/i3,https://github.com/i3/i3,4230,2020-10-26T02:23:55Z,2021-01-01T21:17:28Z,2022-01-19T20:47:51Z,MERGED,True,15,2,2,https://github.com/Xyene,Implement context-sensitive tab-clicking behavior,1,[],https://github.com/i3/i3/pull/4230,https://github.com/Airblader,4,https://github.com/i3/i3/pull/4230#issuecomment-725295710,"This commit makes it so that when clicking on a tab for the first time,
its inactive-focused child is focused. This matches i3 behavior when
scrolling on tabs.
A second click on the tab titlebar focuses the tab container itself.
Subsequent clicks cycle between these two states.
Closes #4225.","@orestisfl Same here, I'd rather wait with this until after the release. The change is small, but focus handling has been a cause of many bugs in the past, so giving this a bit of time on next before going into main would be good.",True,{'THUMBS_UP': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,4230,2020-10-26T02:23:55Z,2021-01-01T21:17:28Z,2022-01-19T20:47:51Z,MERGED,True,15,2,2,https://github.com/Xyene,Implement context-sensitive tab-clicking behavior,1,[],https://github.com/i3/i3/pull/4230,https://github.com/Xyene,5,https://github.com/i3/i3/pull/4230#issuecomment-726498475,"This commit makes it so that when clicking on a tab for the first time,
its inactive-focused child is focused. This matches i3 behavior when
scrolling on tabs.
A second click on the tab titlebar focuses the tab container itself.
Subsequent clicks cycle between these two states.
Closes #4225.",Sounds good! I assume I should wait until after 4.19 is released to update https://github.com/i3/i3/blob/next/RELEASE-NOTES-next?,True,{}
i3/i3,https://github.com/i3/i3,4230,2020-10-26T02:23:55Z,2021-01-01T21:17:28Z,2022-01-19T20:47:51Z,MERGED,True,15,2,2,https://github.com/Xyene,Implement context-sensitive tab-clicking behavior,1,[],https://github.com/i3/i3/pull/4230,https://github.com/Xyene,6,https://github.com/i3/i3/pull/4230#issuecomment-727645475,"This commit makes it so that when clicking on a tab for the first time,
its inactive-focused child is focused. This matches i3 behavior when
scrolling on tabs.
A second click on the tab titlebar focuses the tab container itself.
Subsequent clicks cycle between these two states.
Closes #4225.","Now that 4.19 has been released, I've gone ahead and updated https://github.com/i3/i3/blob/next/RELEASE-NOTES-next.",True,{}
i3/i3,https://github.com/i3/i3,4230,2020-10-26T02:23:55Z,2021-01-01T21:17:28Z,2022-01-19T20:47:51Z,MERGED,True,15,2,2,https://github.com/Xyene,Implement context-sensitive tab-clicking behavior,1,[],https://github.com/i3/i3/pull/4230,https://github.com/Xyene,7,https://github.com/i3/i3/pull/4230#issuecomment-753382706,"This commit makes it so that when clicking on a tab for the first time,
its inactive-focused child is focused. This matches i3 behavior when
scrolling on tabs.
A second click on the tab titlebar focuses the tab container itself.
Subsequent clicks cycle between these two states.
Closes #4225.",I've rebased and updated RELEASE-NOTES-next.,True,{}
i3/i3,https://github.com/i3/i3,4231,2020-10-27T21:15:07Z,2021-01-03T18:49:25Z,2021-01-03T18:49:28Z,MERGED,True,65,24,7,https://github.com/orestisfl,i3bar: Add default bar_id,2,[],https://github.com/i3/i3/pull/4231,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4231,"Instead of erroring, request the list of bar configs from i3 and use the
first one.","Instead of erroring, request the list of bar configs from i3 and use the
first one.",True,{'THUMBS_UP': ['https://github.com/burik666']}
i3/i3,https://github.com/i3/i3,4235,2020-10-28T16:33:10Z,2020-10-28T20:34:49Z,2020-10-28T20:34:53Z,MERGED,True,2,2,2,https://github.com/stapelberg,Fix Debian package build from git,2,[],https://github.com/i3/i3/pull/4235,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4235,,,True,{}
i3/i3,https://github.com/i3/i3,4237,2020-10-28T21:17:02Z,2021-05-30T08:08:42Z,2021-05-30T08:08:42Z,CLOSED,False,33,0,1,https://github.com/budRich,USERGUIDE: i3-msg and whitespace,2,[],https://github.com/i3/i3/pull/4237,https://github.com/budRich,1,https://github.com/i3/i3/pull/4237,"#4157

maybe i3-msg should have its own subsection in the userguide?","#4157

maybe i3-msg should have its own subsection in the userguide?",True,{}
i3/i3,https://github.com/i3/i3,4237,2020-10-28T21:17:02Z,2021-05-30T08:08:42Z,2021-05-30T08:08:42Z,CLOSED,False,33,0,1,https://github.com/budRich,USERGUIDE: i3-msg and whitespace,2,[],https://github.com/i3/i3/pull/4237,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/4237#issuecomment-727582581,"#4157

maybe i3-msg should have its own subsection in the userguide?","Thanks for sending this PR.
I’ll think some more about where/how to best integrate this.
i3-msg in general should not get too much attention in the userguide, as it’s only an example program for testing the IPC interface. Maybe the manpage or docs/ipc are more appropriate, but we should add a link for sure.
Given timing, let’s push this until after the 4.19 release.",True,{'THUMBS_UP': ['https://github.com/budRich']}
i3/i3,https://github.com/i3/i3,4240,2020-11-01T09:11:08Z,2020-11-01T20:13:24Z,2020-11-01T20:13:24Z,MERGED,True,13,13,1,https://github.com/stapelberg,userguide: may → might in most places (thanks Bruce),1,[],https://github.com/i3/i3/pull/4240,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4240,"Quoting https://www.freelists.org/post/i3-discuss/Grammar-check-in-the-doc
May inquires only into permission.
Might inquires into probability.
Can inquires into possibility.
Will/shall inquires into certainty.","Quoting https://www.freelists.org/post/i3-discuss/Grammar-check-in-the-doc
May inquires only into permission.
Might inquires into probability.
Can inquires into possibility.
Will/shall inquires into certainty.",True,{}
i3/i3,https://github.com/i3/i3,4241,2020-11-03T08:26:47Z,2020-11-03T10:35:41Z,2020-11-03T10:35:46Z,MERGED,True,2,2,2,https://github.com/stapelberg,config: specify --no-startup-id for dmenu_run,1,[],https://github.com/i3/i3/pull/4241,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4241,fixes #4216,fixes #4216,True,{}
i3/i3,https://github.com/i3/i3,4243,2020-11-03T08:48:54Z,2020-11-03T10:51:43Z,2020-11-03T10:51:43Z,MERGED,True,8,0,1,https://github.com/stapelberg,ipc: document parse_error COMMAND reply field,1,[],https://github.com/i3/i3/pull/4243,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4243,fixes #4166,fixes #4166,True,{}
i3/i3,https://github.com/i3/i3,4244,2020-11-03T14:46:26Z,2020-11-29T22:34:44Z,2020-11-29T22:34:52Z,MERGED,True,73,14,3,https://github.com/ekarpp,i3-nagbar: add possibility to open bar on focused monitor,1,[],https://github.com/i3/i3/pull/4244,https://github.com/ekarpp,1,https://github.com/i3/i3/pull/4244,"Closes #3692
i3-nagbar will open by default on the monitor with input focus and using the flag -p on the primary monitor.","Closes #3692
i3-nagbar will open by default on the monitor with input focus and using the flag -p on the primary monitor.",True,{}
i3/i3,https://github.com/i3/i3,4244,2020-11-03T14:46:26Z,2020-11-29T22:34:44Z,2020-11-29T22:34:52Z,MERGED,True,73,14,3,https://github.com/ekarpp,i3-nagbar: add possibility to open bar on focused monitor,1,[],https://github.com/i3/i3/pull/4244,https://github.com/ekarpp,2,https://github.com/i3/i3/pull/4244#issuecomment-723038478,"Closes #3692
i3-nagbar will open by default on the monitor with input focus and using the flag -p on the primary monitor.",I guess this Travis failure is unrelated to the changes?,True,{}
i3/i3,https://github.com/i3/i3,4244,2020-11-03T14:46:26Z,2020-11-29T22:34:44Z,2020-11-29T22:34:52Z,MERGED,True,73,14,3,https://github.com/ekarpp,i3-nagbar: add possibility to open bar on focused monitor,1,[],https://github.com/i3/i3/pull/4244,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/4244#issuecomment-723044231,"Closes #3692
i3-nagbar will open by default on the monitor with input focus and using the flag -p on the primary monitor.","It's a formatting error, check my comments",True,{}
i3/i3,https://github.com/i3/i3,4244,2020-11-03T14:46:26Z,2020-11-29T22:34:44Z,2020-11-29T22:34:52Z,MERGED,True,73,14,3,https://github.com/ekarpp,i3-nagbar: add possibility to open bar on focused monitor,1,[],https://github.com/i3/i3/pull/4244,https://github.com/ekarpp,4,https://github.com/i3/i3/pull/4244#issuecomment-723094376,"Closes #3692
i3-nagbar will open by default on the monitor with input focus and using the flag -p on the primary monitor.","Sorry, I should have clarified, I meant the newer Travis failure. I already pushed a change based on your comments. The new failure was caused by (I think?) a parse error in one of the tests.",True,{}
i3/i3,https://github.com/i3/i3,4244,2020-11-03T14:46:26Z,2020-11-29T22:34:44Z,2020-11-29T22:34:52Z,MERGED,True,73,14,3,https://github.com/ekarpp,i3-nagbar: add possibility to open bar on focused monitor,1,[],https://github.com/i3/i3/pull/4244,https://github.com/Airblader,5,https://github.com/i3/i3/pull/4244#issuecomment-723551792,"Closes #3692
i3-nagbar will open by default on the monitor with input focus and using the flag -p on the primary monitor.","Is there any shorter sequence of X calls that can get us the information needed here?

I don't think so, this seems fine, and frankly is less work than the primary output which requires RandR.
I actually think we should make this the default, not a flag, though. I also think we could just remove the primary placement, though I'd keep it behind the flag for now just in case someone prefers it. We could open an issue for removing it in the release after, and maybe when using the flag print a warning to stderr to ask users to provide feedback if they want to keep using that?",True,{}
i3/i3,https://github.com/i3/i3,4244,2020-11-03T14:46:26Z,2020-11-29T22:34:44Z,2020-11-29T22:34:52Z,MERGED,True,73,14,3,https://github.com/ekarpp,i3-nagbar: add possibility to open bar on focused monitor,1,[],https://github.com/i3/i3/pull/4244,https://github.com/Airblader,6,https://github.com/i3/i3/pull/4244#issuecomment-723552723,"Closes #3692
i3-nagbar will open by default on the monitor with input focus and using the flag -p on the primary monitor.","I need to read more carefully, this is already the new default, so ignore that part. As for deprecating that primary flag we can also handle this outside of the PR. Sorry :-)",True,{}
i3/i3,https://github.com/i3/i3,4244,2020-11-03T14:46:26Z,2020-11-29T22:34:44Z,2020-11-29T22:34:52Z,MERGED,True,73,14,3,https://github.com/ekarpp,i3-nagbar: add possibility to open bar on focused monitor,1,[],https://github.com/i3/i3/pull/4244,https://github.com/orestisfl,7,https://github.com/i3/i3/pull/4244#issuecomment-732757484,"Closes #3692
i3-nagbar will open by default on the monitor with input focus and using the flag -p on the primary monitor.","@ekarpp can you rebase with next and also copy the extra information in the commit message:
Closes #3692

i3-nagbar will open by default on the monitor with input focus and using the flag -p on the primary monitor.",True,{}
i3/i3,https://github.com/i3/i3,4244,2020-11-03T14:46:26Z,2020-11-29T22:34:44Z,2020-11-29T22:34:52Z,MERGED,True,73,14,3,https://github.com/ekarpp,i3-nagbar: add possibility to open bar on focused monitor,1,[],https://github.com/i3/i3/pull/4244,https://github.com/ekarpp,8,https://github.com/i3/i3/pull/4244#issuecomment-733167821,"Closes #3692
i3-nagbar will open by default on the monitor with input focus and using the flag -p on the primary monitor.","Rebased, thanks for helping me with this PR.",True,{}
i3/i3,https://github.com/i3/i3,4244,2020-11-03T14:46:26Z,2020-11-29T22:34:44Z,2020-11-29T22:34:52Z,MERGED,True,73,14,3,https://github.com/ekarpp,i3-nagbar: add possibility to open bar on focused monitor,1,[],https://github.com/i3/i3/pull/4244,https://github.com/orestisfl,9,https://github.com/i3/i3/pull/4244#issuecomment-735468695,"Closes #3692
i3-nagbar will open by default on the monitor with input focus and using the flag -p on the primary monitor.",Thanks!,True,{}
i3/i3,https://github.com/i3/i3,4246,2020-11-07T13:57:58Z,,2022-01-29T00:23:53Z,OPEN,False,1021,147,24,https://github.com/wlhlm,Add reverse layouts,11,['waiting'],https://github.com/i3/i3/pull/4246,https://github.com/wlhlm,1,https://github.com/i3/i3/pull/4246,"This is an implementation of #1767 (allow splitting to the left/top) and addresses the underlying desire to have layouts that are filled in from right to left and bottom to top.
I have dubbed this the ""layout fill order"" which has two values ""default"", and ""reverse"", where the former denotes the old behavior, where new windows get added on the right in horizontal layouts and on the bottom in vertical layouts. The latter reverses this order: windows get added to the left in horizontal layouts and to the top in vertical layouts.
I have had a tough time coming up with an actual name for this functionality, not sure if ""layout fill order"" is intuitive for everybody, so I'm open to suggestions.
Closes #1767.
Implementation
The discussion in #1767 suggested adding additional layouts that are populated in reverse (by extending layout_t), but I think that begs a larger refactoring as in many places, the normal layout is equivalent with its reverse counterpart (let's say L_SPLITH and L_SPLITH_REVERSE), requiring layout checks to be doubled from layout == L_SPLITH to layout == L_SPLITH || layout == L_SPLITH_REVERSE.
To me, the way how a layout is populated with new windows is orthogonal to the layout itself. On a lower level, all the fill order does, is affect whether a new child node gets prepended or appended to the list of existing child nodes of a parent container, regardless of the actual layout itself. My solution is to store this in an additional property side-by-side with the layout. This let's me keep existing layout checks intact and only requires updating the few places that care about the fill order (mainly con_attach()).
User-facing changes

command split was extended to accept the arguments left, right, up, and down

split right and split down are aliases for split h and split v respectively
split left creates a horizontal split with reverse fill order so that the next window gets attached to the left
split up is similar, but creates a vertical reverse split


command workspace_layout <layout> now accepts an additional argument reverse to set the default fill order for workspaces to reverse
command layout <default|stacked|stacking|tabbed|splitv|splith> received an optional argument reverse

for example layout splith reverse changes the layout to splith with a reversed fill order (new window will get inserted before focused window instead of after).


command layout fill_order [default|reverse|toggle] allows changing the fill order independent of the layout
split indicators are drawn close to where a new window will appear

for a horizontal split with default fill order, the indicator will be drawn on the right border (as before)
for a horizontal split with reverse fill order, the indicator will be drawn on the left border
vice-versa for vertical splits


the tree representation string format (mostly seen in container titles and the testsuite) uses the 'r' suffix to denote splits with reverse fill order, for example Vr[] for a vertical split with reverse fill order.

TODO
Currently, documentation is missing completely as that makes only sense to add when the maintainers are happy with the implementation.","This is an implementation of #1767 (allow splitting to the left/top) and addresses the underlying desire to have layouts that are filled in from right to left and bottom to top.
I have dubbed this the ""layout fill order"" which has two values ""default"", and ""reverse"", where the former denotes the old behavior, where new windows get added on the right in horizontal layouts and on the bottom in vertical layouts. The latter reverses this order: windows get added to the left in horizontal layouts and to the top in vertical layouts.
I have had a tough time coming up with an actual name for this functionality, not sure if ""layout fill order"" is intuitive for everybody, so I'm open to suggestions.
Closes #1767.
Implementation
The discussion in #1767 suggested adding additional layouts that are populated in reverse (by extending layout_t), but I think that begs a larger refactoring as in many places, the normal layout is equivalent with its reverse counterpart (let's say L_SPLITH and L_SPLITH_REVERSE), requiring layout checks to be doubled from layout == L_SPLITH to layout == L_SPLITH || layout == L_SPLITH_REVERSE.
To me, the way how a layout is populated with new windows is orthogonal to the layout itself. On a lower level, all the fill order does, is affect whether a new child node gets prepended or appended to the list of existing child nodes of a parent container, regardless of the actual layout itself. My solution is to store this in an additional property side-by-side with the layout. This let's me keep existing layout checks intact and only requires updating the few places that care about the fill order (mainly con_attach()).
User-facing changes

command split was extended to accept the arguments left, right, up, and down

split right and split down are aliases for split h and split v respectively
split left creates a horizontal split with reverse fill order so that the next window gets attached to the left
split up is similar, but creates a vertical reverse split


command workspace_layout <layout> now accepts an additional argument reverse to set the default fill order for workspaces to reverse
command layout <default|stacked|stacking|tabbed|splitv|splith> received an optional argument reverse

for example layout splith reverse changes the layout to splith with a reversed fill order (new window will get inserted before focused window instead of after).


command layout fill_order [default|reverse|toggle] allows changing the fill order independent of the layout
split indicators are drawn close to where a new window will appear

for a horizontal split with default fill order, the indicator will be drawn on the right border (as before)
for a horizontal split with reverse fill order, the indicator will be drawn on the left border
vice-versa for vertical splits


the tree representation string format (mostly seen in container titles and the testsuite) uses the 'r' suffix to denote splits with reverse fill order, for example Vr[] for a vertical split with reverse fill order.

TODO
Currently, documentation is missing completely as that makes only sense to add when the maintainers are happy with the implementation.",True,{}
i3/i3,https://github.com/i3/i3,4246,2020-11-07T13:57:58Z,,2022-01-29T00:23:53Z,OPEN,False,1021,147,24,https://github.com/wlhlm,Add reverse layouts,11,['waiting'],https://github.com/i3/i3/pull/4246,https://github.com/wlhlm,2,https://github.com/i3/i3/pull/4246#issuecomment-723460093,"This is an implementation of #1767 (allow splitting to the left/top) and addresses the underlying desire to have layouts that are filled in from right to left and bottom to top.
I have dubbed this the ""layout fill order"" which has two values ""default"", and ""reverse"", where the former denotes the old behavior, where new windows get added on the right in horizontal layouts and on the bottom in vertical layouts. The latter reverses this order: windows get added to the left in horizontal layouts and to the top in vertical layouts.
I have had a tough time coming up with an actual name for this functionality, not sure if ""layout fill order"" is intuitive for everybody, so I'm open to suggestions.
Closes #1767.
Implementation
The discussion in #1767 suggested adding additional layouts that are populated in reverse (by extending layout_t), but I think that begs a larger refactoring as in many places, the normal layout is equivalent with its reverse counterpart (let's say L_SPLITH and L_SPLITH_REVERSE), requiring layout checks to be doubled from layout == L_SPLITH to layout == L_SPLITH || layout == L_SPLITH_REVERSE.
To me, the way how a layout is populated with new windows is orthogonal to the layout itself. On a lower level, all the fill order does, is affect whether a new child node gets prepended or appended to the list of existing child nodes of a parent container, regardless of the actual layout itself. My solution is to store this in an additional property side-by-side with the layout. This let's me keep existing layout checks intact and only requires updating the few places that care about the fill order (mainly con_attach()).
User-facing changes

command split was extended to accept the arguments left, right, up, and down

split right and split down are aliases for split h and split v respectively
split left creates a horizontal split with reverse fill order so that the next window gets attached to the left
split up is similar, but creates a vertical reverse split


command workspace_layout <layout> now accepts an additional argument reverse to set the default fill order for workspaces to reverse
command layout <default|stacked|stacking|tabbed|splitv|splith> received an optional argument reverse

for example layout splith reverse changes the layout to splith with a reversed fill order (new window will get inserted before focused window instead of after).


command layout fill_order [default|reverse|toggle] allows changing the fill order independent of the layout
split indicators are drawn close to where a new window will appear

for a horizontal split with default fill order, the indicator will be drawn on the right border (as before)
for a horizontal split with reverse fill order, the indicator will be drawn on the left border
vice-versa for vertical splits


the tree representation string format (mostly seen in container titles and the testsuite) uses the 'r' suffix to denote splits with reverse fill order, for example Vr[] for a vertical split with reverse fill order.

TODO
Currently, documentation is missing completely as that makes only sense to add when the maintainers are happy with the implementation.","How does this affect floating disable. I.e. when a floating window has to be moved in a ""reverse"" split, does it get positioned on the correct place?


Good question! I haven't done any testing with floats. I'll take a look.


How does this affect moving? I.e. with H [ Vr [ A B ]  C ] what happens if you move C left?


This should be unaffected as moving (in move.c) directly manipulates the child node SLIST and doesn't call _con_attach() which is where I've added the new logic. Though adding a test case won't hurt :).
EDIT: On a closer look, there are cases where tree_move() is biased towards (default) left-to-right/top-to-bottom fill ordering. While my changes don't affect this negatively, the logic could be fleshed out to reverse this bias for reverse fill order.",True,{}
i3/i3,https://github.com/i3/i3,4246,2020-11-07T13:57:58Z,,2022-01-29T00:23:53Z,OPEN,False,1021,147,24,https://github.com/wlhlm,Add reverse layouts,11,['waiting'],https://github.com/i3/i3/pull/4246,https://github.com/wlhlm,3,https://github.com/i3/i3/pull/4246#issuecomment-724135935,"This is an implementation of #1767 (allow splitting to the left/top) and addresses the underlying desire to have layouts that are filled in from right to left and bottom to top.
I have dubbed this the ""layout fill order"" which has two values ""default"", and ""reverse"", where the former denotes the old behavior, where new windows get added on the right in horizontal layouts and on the bottom in vertical layouts. The latter reverses this order: windows get added to the left in horizontal layouts and to the top in vertical layouts.
I have had a tough time coming up with an actual name for this functionality, not sure if ""layout fill order"" is intuitive for everybody, so I'm open to suggestions.
Closes #1767.
Implementation
The discussion in #1767 suggested adding additional layouts that are populated in reverse (by extending layout_t), but I think that begs a larger refactoring as in many places, the normal layout is equivalent with its reverse counterpart (let's say L_SPLITH and L_SPLITH_REVERSE), requiring layout checks to be doubled from layout == L_SPLITH to layout == L_SPLITH || layout == L_SPLITH_REVERSE.
To me, the way how a layout is populated with new windows is orthogonal to the layout itself. On a lower level, all the fill order does, is affect whether a new child node gets prepended or appended to the list of existing child nodes of a parent container, regardless of the actual layout itself. My solution is to store this in an additional property side-by-side with the layout. This let's me keep existing layout checks intact and only requires updating the few places that care about the fill order (mainly con_attach()).
User-facing changes

command split was extended to accept the arguments left, right, up, and down

split right and split down are aliases for split h and split v respectively
split left creates a horizontal split with reverse fill order so that the next window gets attached to the left
split up is similar, but creates a vertical reverse split


command workspace_layout <layout> now accepts an additional argument reverse to set the default fill order for workspaces to reverse
command layout <default|stacked|stacking|tabbed|splitv|splith> received an optional argument reverse

for example layout splith reverse changes the layout to splith with a reversed fill order (new window will get inserted before focused window instead of after).


command layout fill_order [default|reverse|toggle] allows changing the fill order independent of the layout
split indicators are drawn close to where a new window will appear

for a horizontal split with default fill order, the indicator will be drawn on the right border (as before)
for a horizontal split with reverse fill order, the indicator will be drawn on the left border
vice-versa for vertical splits


the tree representation string format (mostly seen in container titles and the testsuite) uses the 'r' suffix to denote splits with reverse fill order, for example Vr[] for a vertical split with reverse fill order.

TODO
Currently, documentation is missing completely as that makes only sense to add when the maintainers are happy with the implementation.","How does this affect floating disable. I.e. when a floating window has to be moved in a ""reverse"" split, does it get positioned on the correct place?


I've gone over the floating disable code, done some minor tweaking, and added a few testcases. Should work as expected now.


How does this affect moving? [...]


I've extended the move code a bit to better accommodate reverse layouts. A couple of testcases where added for good measure.
PTAL!",True,{'THUMBS_UP': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,4246,2020-11-07T13:57:58Z,,2022-01-29T00:23:53Z,OPEN,False,1021,147,24,https://github.com/wlhlm,Add reverse layouts,11,['waiting'],https://github.com/i3/i3/pull/4246,https://github.com/wlhlm,4,https://github.com/i3/i3/pull/4246#issuecomment-725546769,"This is an implementation of #1767 (allow splitting to the left/top) and addresses the underlying desire to have layouts that are filled in from right to left and bottom to top.
I have dubbed this the ""layout fill order"" which has two values ""default"", and ""reverse"", where the former denotes the old behavior, where new windows get added on the right in horizontal layouts and on the bottom in vertical layouts. The latter reverses this order: windows get added to the left in horizontal layouts and to the top in vertical layouts.
I have had a tough time coming up with an actual name for this functionality, not sure if ""layout fill order"" is intuitive for everybody, so I'm open to suggestions.
Closes #1767.
Implementation
The discussion in #1767 suggested adding additional layouts that are populated in reverse (by extending layout_t), but I think that begs a larger refactoring as in many places, the normal layout is equivalent with its reverse counterpart (let's say L_SPLITH and L_SPLITH_REVERSE), requiring layout checks to be doubled from layout == L_SPLITH to layout == L_SPLITH || layout == L_SPLITH_REVERSE.
To me, the way how a layout is populated with new windows is orthogonal to the layout itself. On a lower level, all the fill order does, is affect whether a new child node gets prepended or appended to the list of existing child nodes of a parent container, regardless of the actual layout itself. My solution is to store this in an additional property side-by-side with the layout. This let's me keep existing layout checks intact and only requires updating the few places that care about the fill order (mainly con_attach()).
User-facing changes

command split was extended to accept the arguments left, right, up, and down

split right and split down are aliases for split h and split v respectively
split left creates a horizontal split with reverse fill order so that the next window gets attached to the left
split up is similar, but creates a vertical reverse split


command workspace_layout <layout> now accepts an additional argument reverse to set the default fill order for workspaces to reverse
command layout <default|stacked|stacking|tabbed|splitv|splith> received an optional argument reverse

for example layout splith reverse changes the layout to splith with a reversed fill order (new window will get inserted before focused window instead of after).


command layout fill_order [default|reverse|toggle] allows changing the fill order independent of the layout
split indicators are drawn close to where a new window will appear

for a horizontal split with default fill order, the indicator will be drawn on the right border (as before)
for a horizontal split with reverse fill order, the indicator will be drawn on the left border
vice-versa for vertical splits


the tree representation string format (mostly seen in container titles and the testsuite) uses the 'r' suffix to denote splits with reverse fill order, for example Vr[] for a vertical split with reverse fill order.

TODO
Currently, documentation is missing completely as that makes only sense to add when the maintainers are happy with the implementation.","Thanks for taking a look.
To be honest, I'm having some trouble figuring out how your suggestions are supposed to improve the code.
Let me start with position_maybe_reverse():
The way i3 windowing works is, it builds a tree of containers where the containers on the leaves of the tree are windows. i3 then takes this tree and arranges the windows on the screen based on their position within the tree. With this model in mind, there are two ways I can implement reverse layouts here. I can either 1) change how containers get placed into the tree, or 2) change how windows get arranged on the screen. Option 2 is also called layout.
I have implemented option number 1 in this PR, since changing window layouting sounded harder to implement and more difficult to test.
Now, remember that despite having implemented option 1, the way reverse layouts are exposed to the users is as ""layout fill order"" and as the word ""layout"" alludes to, these config options and commands describe implementation option 2 above. This means that every time a reverse layout is relevant for tree manipulation, I need to translate the layout fill order option to the appropriate tree operation. This seems to be the idea behind position_maybe_reverse(). For example, I want to place a con after another con in a reverse horizontal layout. In this kind of layout ""after"" means placing it on the left of the target. Considering the implementation in this PR, the appropriate tree operation to achieve this layout is to place the con before the target con in the tree. This translation of after to before is handled by position_maybe_reverse().
All of this is a long-winded way of saying that the suggested signature of position_maybe_reverse() is incorrect since its position_t input and position_t output have the same types, but they are different from a semantic standpoint. A better version of this function would be:
tree_position_t position_maybe_reverse(layout_position_t position, layout_fill_t order)
but that would require me creating new types and I don't think that's worth it for the few times this function is relevant.
Sorry, I also don't see where I could use direction_maybe_reverse(). Maybe you could comment on specific lines/areas of the code where you think it could be improved.",True,{'THUMBS_UP': ['https://github.com/dmolin']}
i3/i3,https://github.com/i3/i3,4246,2020-11-07T13:57:58Z,,2022-01-29T00:23:53Z,OPEN,False,1021,147,24,https://github.com/wlhlm,Add reverse layouts,11,['waiting'],https://github.com/i3/i3/pull/4246,https://github.com/wlhlm,5,https://github.com/i3/i3/pull/4246#issuecomment-725686482,"This is an implementation of #1767 (allow splitting to the left/top) and addresses the underlying desire to have layouts that are filled in from right to left and bottom to top.
I have dubbed this the ""layout fill order"" which has two values ""default"", and ""reverse"", where the former denotes the old behavior, where new windows get added on the right in horizontal layouts and on the bottom in vertical layouts. The latter reverses this order: windows get added to the left in horizontal layouts and to the top in vertical layouts.
I have had a tough time coming up with an actual name for this functionality, not sure if ""layout fill order"" is intuitive for everybody, so I'm open to suggestions.
Closes #1767.
Implementation
The discussion in #1767 suggested adding additional layouts that are populated in reverse (by extending layout_t), but I think that begs a larger refactoring as in many places, the normal layout is equivalent with its reverse counterpart (let's say L_SPLITH and L_SPLITH_REVERSE), requiring layout checks to be doubled from layout == L_SPLITH to layout == L_SPLITH || layout == L_SPLITH_REVERSE.
To me, the way how a layout is populated with new windows is orthogonal to the layout itself. On a lower level, all the fill order does, is affect whether a new child node gets prepended or appended to the list of existing child nodes of a parent container, regardless of the actual layout itself. My solution is to store this in an additional property side-by-side with the layout. This let's me keep existing layout checks intact and only requires updating the few places that care about the fill order (mainly con_attach()).
User-facing changes

command split was extended to accept the arguments left, right, up, and down

split right and split down are aliases for split h and split v respectively
split left creates a horizontal split with reverse fill order so that the next window gets attached to the left
split up is similar, but creates a vertical reverse split


command workspace_layout <layout> now accepts an additional argument reverse to set the default fill order for workspaces to reverse
command layout <default|stacked|stacking|tabbed|splitv|splith> received an optional argument reverse

for example layout splith reverse changes the layout to splith with a reversed fill order (new window will get inserted before focused window instead of after).


command layout fill_order [default|reverse|toggle] allows changing the fill order independent of the layout
split indicators are drawn close to where a new window will appear

for a horizontal split with default fill order, the indicator will be drawn on the right border (as before)
for a horizontal split with reverse fill order, the indicator will be drawn on the left border
vice-versa for vertical splits


the tree representation string format (mostly seen in container titles and the testsuite) uses the 'r' suffix to denote splits with reverse fill order, for example Vr[] for a vertical split with reverse fill order.

TODO
Currently, documentation is missing completely as that makes only sense to add when the maintainers are happy with the implementation.","I've factored out the complicated assignment, though I wasn't able to find a way to further simplify it, the suggested functions didn't really help. I think the other assignments are fine as they are.",True,{}
i3/i3,https://github.com/i3/i3,4246,2020-11-07T13:57:58Z,,2022-01-29T00:23:53Z,OPEN,False,1021,147,24,https://github.com/wlhlm,Add reverse layouts,11,['waiting'],https://github.com/i3/i3/pull/4246,https://github.com/wlhlm,6,https://github.com/i3/i3/pull/4246#issuecomment-732977097,"This is an implementation of #1767 (allow splitting to the left/top) and addresses the underlying desire to have layouts that are filled in from right to left and bottom to top.
I have dubbed this the ""layout fill order"" which has two values ""default"", and ""reverse"", where the former denotes the old behavior, where new windows get added on the right in horizontal layouts and on the bottom in vertical layouts. The latter reverses this order: windows get added to the left in horizontal layouts and to the top in vertical layouts.
I have had a tough time coming up with an actual name for this functionality, not sure if ""layout fill order"" is intuitive for everybody, so I'm open to suggestions.
Closes #1767.
Implementation
The discussion in #1767 suggested adding additional layouts that are populated in reverse (by extending layout_t), but I think that begs a larger refactoring as in many places, the normal layout is equivalent with its reverse counterpart (let's say L_SPLITH and L_SPLITH_REVERSE), requiring layout checks to be doubled from layout == L_SPLITH to layout == L_SPLITH || layout == L_SPLITH_REVERSE.
To me, the way how a layout is populated with new windows is orthogonal to the layout itself. On a lower level, all the fill order does, is affect whether a new child node gets prepended or appended to the list of existing child nodes of a parent container, regardless of the actual layout itself. My solution is to store this in an additional property side-by-side with the layout. This let's me keep existing layout checks intact and only requires updating the few places that care about the fill order (mainly con_attach()).
User-facing changes

command split was extended to accept the arguments left, right, up, and down

split right and split down are aliases for split h and split v respectively
split left creates a horizontal split with reverse fill order so that the next window gets attached to the left
split up is similar, but creates a vertical reverse split


command workspace_layout <layout> now accepts an additional argument reverse to set the default fill order for workspaces to reverse
command layout <default|stacked|stacking|tabbed|splitv|splith> received an optional argument reverse

for example layout splith reverse changes the layout to splith with a reversed fill order (new window will get inserted before focused window instead of after).


command layout fill_order [default|reverse|toggle] allows changing the fill order independent of the layout
split indicators are drawn close to where a new window will appear

for a horizontal split with default fill order, the indicator will be drawn on the right border (as before)
for a horizontal split with reverse fill order, the indicator will be drawn on the left border
vice-versa for vertical splits


the tree representation string format (mostly seen in container titles and the testsuite) uses the 'r' suffix to denote splits with reverse fill order, for example Vr[] for a vertical split with reverse fill order.

TODO
Currently, documentation is missing completely as that makes only sense to add when the maintainers are happy with the implementation.","I just rebased and would like to request that the maintainer take a look again. Is there anything major that needs changing? I've put quite a bit of effort into coming up with sensible test cases, so at this point I'm pretty confident that this PR does what it says on the tin. Of course, we can discuss if it is the right tin in the first place ;)",True,{'HEART': ['https://github.com/dmolin']}
i3/i3,https://github.com/i3/i3,4246,2020-11-07T13:57:58Z,,2022-01-29T00:23:53Z,OPEN,False,1021,147,24,https://github.com/wlhlm,Add reverse layouts,11,['waiting'],https://github.com/i3/i3/pull/4246,https://github.com/Airblader,7,https://github.com/i3/i3/pull/4246#issuecomment-752974180,"This is an implementation of #1767 (allow splitting to the left/top) and addresses the underlying desire to have layouts that are filled in from right to left and bottom to top.
I have dubbed this the ""layout fill order"" which has two values ""default"", and ""reverse"", where the former denotes the old behavior, where new windows get added on the right in horizontal layouts and on the bottom in vertical layouts. The latter reverses this order: windows get added to the left in horizontal layouts and to the top in vertical layouts.
I have had a tough time coming up with an actual name for this functionality, not sure if ""layout fill order"" is intuitive for everybody, so I'm open to suggestions.
Closes #1767.
Implementation
The discussion in #1767 suggested adding additional layouts that are populated in reverse (by extending layout_t), but I think that begs a larger refactoring as in many places, the normal layout is equivalent with its reverse counterpart (let's say L_SPLITH and L_SPLITH_REVERSE), requiring layout checks to be doubled from layout == L_SPLITH to layout == L_SPLITH || layout == L_SPLITH_REVERSE.
To me, the way how a layout is populated with new windows is orthogonal to the layout itself. On a lower level, all the fill order does, is affect whether a new child node gets prepended or appended to the list of existing child nodes of a parent container, regardless of the actual layout itself. My solution is to store this in an additional property side-by-side with the layout. This let's me keep existing layout checks intact and only requires updating the few places that care about the fill order (mainly con_attach()).
User-facing changes

command split was extended to accept the arguments left, right, up, and down

split right and split down are aliases for split h and split v respectively
split left creates a horizontal split with reverse fill order so that the next window gets attached to the left
split up is similar, but creates a vertical reverse split


command workspace_layout <layout> now accepts an additional argument reverse to set the default fill order for workspaces to reverse
command layout <default|stacked|stacking|tabbed|splitv|splith> received an optional argument reverse

for example layout splith reverse changes the layout to splith with a reversed fill order (new window will get inserted before focused window instead of after).


command layout fill_order [default|reverse|toggle] allows changing the fill order independent of the layout
split indicators are drawn close to where a new window will appear

for a horizontal split with default fill order, the indicator will be drawn on the right border (as before)
for a horizontal split with reverse fill order, the indicator will be drawn on the left border
vice-versa for vertical splits


the tree representation string format (mostly seen in container titles and the testsuite) uses the 'r' suffix to denote splits with reverse fill order, for example Vr[] for a vertical split with reverse fill order.

TODO
Currently, documentation is missing completely as that makes only sense to add when the maintainers are happy with the implementation.","@orestisfl Did you have time to try it out? @wlhlm just pinged me about this on reddit regarding the new feature policy, and I think given the work put into this already we should continue here unchanged.",True,{}
i3/i3,https://github.com/i3/i3,4246,2020-11-07T13:57:58Z,,2022-01-29T00:23:53Z,OPEN,False,1021,147,24,https://github.com/wlhlm,Add reverse layouts,11,['waiting'],https://github.com/i3/i3/pull/4246,https://github.com/orestisfl,8,https://github.com/i3/i3/pull/4246#issuecomment-753020594,"This is an implementation of #1767 (allow splitting to the left/top) and addresses the underlying desire to have layouts that are filled in from right to left and bottom to top.
I have dubbed this the ""layout fill order"" which has two values ""default"", and ""reverse"", where the former denotes the old behavior, where new windows get added on the right in horizontal layouts and on the bottom in vertical layouts. The latter reverses this order: windows get added to the left in horizontal layouts and to the top in vertical layouts.
I have had a tough time coming up with an actual name for this functionality, not sure if ""layout fill order"" is intuitive for everybody, so I'm open to suggestions.
Closes #1767.
Implementation
The discussion in #1767 suggested adding additional layouts that are populated in reverse (by extending layout_t), but I think that begs a larger refactoring as in many places, the normal layout is equivalent with its reverse counterpart (let's say L_SPLITH and L_SPLITH_REVERSE), requiring layout checks to be doubled from layout == L_SPLITH to layout == L_SPLITH || layout == L_SPLITH_REVERSE.
To me, the way how a layout is populated with new windows is orthogonal to the layout itself. On a lower level, all the fill order does, is affect whether a new child node gets prepended or appended to the list of existing child nodes of a parent container, regardless of the actual layout itself. My solution is to store this in an additional property side-by-side with the layout. This let's me keep existing layout checks intact and only requires updating the few places that care about the fill order (mainly con_attach()).
User-facing changes

command split was extended to accept the arguments left, right, up, and down

split right and split down are aliases for split h and split v respectively
split left creates a horizontal split with reverse fill order so that the next window gets attached to the left
split up is similar, but creates a vertical reverse split


command workspace_layout <layout> now accepts an additional argument reverse to set the default fill order for workspaces to reverse
command layout <default|stacked|stacking|tabbed|splitv|splith> received an optional argument reverse

for example layout splith reverse changes the layout to splith with a reversed fill order (new window will get inserted before focused window instead of after).


command layout fill_order [default|reverse|toggle] allows changing the fill order independent of the layout
split indicators are drawn close to where a new window will appear

for a horizontal split with default fill order, the indicator will be drawn on the right border (as before)
for a horizontal split with reverse fill order, the indicator will be drawn on the left border
vice-versa for vertical splits


the tree representation string format (mostly seen in container titles and the testsuite) uses the 'r' suffix to denote splits with reverse fill order, for example Vr[] for a vertical split with reverse fill order.

TODO
Currently, documentation is missing completely as that makes only sense to add when the maintainers are happy with the implementation.",@Airblader I agree. I just installed the patch. Sorry for the delays.,True,{}
i3/i3,https://github.com/i3/i3,4246,2020-11-07T13:57:58Z,,2022-01-29T00:23:53Z,OPEN,False,1021,147,24,https://github.com/wlhlm,Add reverse layouts,11,['waiting'],https://github.com/i3/i3/pull/4246,https://github.com/dmolin,9,https://github.com/i3/i3/pull/4246#issuecomment-852783572,"This is an implementation of #1767 (allow splitting to the left/top) and addresses the underlying desire to have layouts that are filled in from right to left and bottom to top.
I have dubbed this the ""layout fill order"" which has two values ""default"", and ""reverse"", where the former denotes the old behavior, where new windows get added on the right in horizontal layouts and on the bottom in vertical layouts. The latter reverses this order: windows get added to the left in horizontal layouts and to the top in vertical layouts.
I have had a tough time coming up with an actual name for this functionality, not sure if ""layout fill order"" is intuitive for everybody, so I'm open to suggestions.
Closes #1767.
Implementation
The discussion in #1767 suggested adding additional layouts that are populated in reverse (by extending layout_t), but I think that begs a larger refactoring as in many places, the normal layout is equivalent with its reverse counterpart (let's say L_SPLITH and L_SPLITH_REVERSE), requiring layout checks to be doubled from layout == L_SPLITH to layout == L_SPLITH || layout == L_SPLITH_REVERSE.
To me, the way how a layout is populated with new windows is orthogonal to the layout itself. On a lower level, all the fill order does, is affect whether a new child node gets prepended or appended to the list of existing child nodes of a parent container, regardless of the actual layout itself. My solution is to store this in an additional property side-by-side with the layout. This let's me keep existing layout checks intact and only requires updating the few places that care about the fill order (mainly con_attach()).
User-facing changes

command split was extended to accept the arguments left, right, up, and down

split right and split down are aliases for split h and split v respectively
split left creates a horizontal split with reverse fill order so that the next window gets attached to the left
split up is similar, but creates a vertical reverse split


command workspace_layout <layout> now accepts an additional argument reverse to set the default fill order for workspaces to reverse
command layout <default|stacked|stacking|tabbed|splitv|splith> received an optional argument reverse

for example layout splith reverse changes the layout to splith with a reversed fill order (new window will get inserted before focused window instead of after).


command layout fill_order [default|reverse|toggle] allows changing the fill order independent of the layout
split indicators are drawn close to where a new window will appear

for a horizontal split with default fill order, the indicator will be drawn on the right border (as before)
for a horizontal split with reverse fill order, the indicator will be drawn on the left border
vice-versa for vertical splits


the tree representation string format (mostly seen in container titles and the testsuite) uses the 'r' suffix to denote splits with reverse fill order, for example Vr[] for a vertical split with reverse fill order.

TODO
Currently, documentation is missing completely as that makes only sense to add when the maintainers are happy with the implementation.",Any further update on this PR? @wlhlm are you still with us 🙏  ? Tbh this glaring missing feature of I3 is the ONLY thing that keeps me (and I'm very sure many others) from switching from Bspwm over to I3. Can some good soul make the extra effort to push this through the finish line?,True,{}
i3/i3,https://github.com/i3/i3,4246,2020-11-07T13:57:58Z,,2022-01-29T00:23:53Z,OPEN,False,1021,147,24,https://github.com/wlhlm,Add reverse layouts,11,['waiting'],https://github.com/i3/i3/pull/4246,https://github.com/jtaala,10,https://github.com/i3/i3/pull/4246#issuecomment-1006066853,"This is an implementation of #1767 (allow splitting to the left/top) and addresses the underlying desire to have layouts that are filled in from right to left and bottom to top.
I have dubbed this the ""layout fill order"" which has two values ""default"", and ""reverse"", where the former denotes the old behavior, where new windows get added on the right in horizontal layouts and on the bottom in vertical layouts. The latter reverses this order: windows get added to the left in horizontal layouts and to the top in vertical layouts.
I have had a tough time coming up with an actual name for this functionality, not sure if ""layout fill order"" is intuitive for everybody, so I'm open to suggestions.
Closes #1767.
Implementation
The discussion in #1767 suggested adding additional layouts that are populated in reverse (by extending layout_t), but I think that begs a larger refactoring as in many places, the normal layout is equivalent with its reverse counterpart (let's say L_SPLITH and L_SPLITH_REVERSE), requiring layout checks to be doubled from layout == L_SPLITH to layout == L_SPLITH || layout == L_SPLITH_REVERSE.
To me, the way how a layout is populated with new windows is orthogonal to the layout itself. On a lower level, all the fill order does, is affect whether a new child node gets prepended or appended to the list of existing child nodes of a parent container, regardless of the actual layout itself. My solution is to store this in an additional property side-by-side with the layout. This let's me keep existing layout checks intact and only requires updating the few places that care about the fill order (mainly con_attach()).
User-facing changes

command split was extended to accept the arguments left, right, up, and down

split right and split down are aliases for split h and split v respectively
split left creates a horizontal split with reverse fill order so that the next window gets attached to the left
split up is similar, but creates a vertical reverse split


command workspace_layout <layout> now accepts an additional argument reverse to set the default fill order for workspaces to reverse
command layout <default|stacked|stacking|tabbed|splitv|splith> received an optional argument reverse

for example layout splith reverse changes the layout to splith with a reversed fill order (new window will get inserted before focused window instead of after).


command layout fill_order [default|reverse|toggle] allows changing the fill order independent of the layout
split indicators are drawn close to where a new window will appear

for a horizontal split with default fill order, the indicator will be drawn on the right border (as before)
for a horizontal split with reverse fill order, the indicator will be drawn on the left border
vice-versa for vertical splits


the tree representation string format (mostly seen in container titles and the testsuite) uses the 'r' suffix to denote splits with reverse fill order, for example Vr[] for a vertical split with reverse fill order.

TODO
Currently, documentation is missing completely as that makes only sense to add when the maintainers are happy with the implementation.","I would feel absolutely happy (privileged even!) to help get this PR across the line.
Given it seems @wlhlm may not be available/around the project as of late, I've merged the great work in his right-to-left-layouts branch into my fork and have brought it up to date with the latest i3:next.
@orestisfl, I've also implemented your requested changes in #4246 (review).
Please see next...jtaala:right-to-left-layouts for @wlhlm's work (and my small changes implementing @orestisfl's requested changes) diff'd with latest i3:next.
I've been testing @wlhlm's work in my fork and have found no issues thus far, and I've also discovered that I really like right-to-left/bottom-to-top behaviour much better (just my preference).
Given the hard work of @wlhlm and the quality of his work, plus the evident usefulness of the feature - I would be happy to help write the documentation now to get it into i3:next.
@orestisfl, @Airblader, (and @wlhlm if you're around) - would you be happy with me picking up and progressing this?  Would likely mean once done, I would need to create a new PR (fully referencing this one of course).
Please see new PR with my (small) changes and documentation added here #4794.",True,"{'HEART': ['https://github.com/budRich', 'https://github.com/futurevessel', 'https://github.com/PhilG']}"
i3/i3,https://github.com/i3/i3,4249,2020-11-10T16:19:21Z,2020-11-10T17:54:15Z,2020-11-10T17:59:33Z,MERGED,True,79,0,4,https://github.com/wlhlm,Only swallow windows once v2,2,[],https://github.com/i3/i3/pull/4249,https://github.com/wlhlm,1,https://github.com/i3/i3/pull/4249,"Closes #3889.
Fixes #3888.","Closes #3889.
Fixes #3888.",True,{}
i3/i3,https://github.com/i3/i3,4249,2020-11-10T16:19:21Z,2020-11-10T17:54:15Z,2020-11-10T17:59:33Z,MERGED,True,79,0,4,https://github.com/wlhlm,Only swallow windows once v2,2,[],https://github.com/i3/i3/pull/4249,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/4249#issuecomment-724865683,"Closes #3889.
Fixes #3888.",Thanks!,True,{}
i3/i3,https://github.com/i3/i3,4252,2020-11-11T08:50:01Z,2020-11-28T22:41:50Z,2020-11-28T22:41:54Z,MERGED,True,13,11,2,https://github.com/orestisfl,create_workspace_on_output: Prevent duplicate workspace nums,2,[],https://github.com/i3/i3/pull/4252,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4252,Fixes #4238,Fixes #4238,True,{'HOORAY': ['https://github.com/ajeetdsouza']}
i3/i3,https://github.com/i3/i3,4252,2020-11-11T08:50:01Z,2020-11-28T22:41:50Z,2020-11-28T22:41:54Z,MERGED,True,13,11,2,https://github.com/orestisfl,create_workspace_on_output: Prevent duplicate workspace nums,2,[],https://github.com/i3/i3/pull/4252,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/4252#issuecomment-725294650,Fixes #4238,I'd say its a pretty trivial change to cause a bug but I don't mind,True,{}
i3/i3,https://github.com/i3/i3,4252,2020-11-11T08:50:01Z,2020-11-28T22:41:50Z,2020-11-28T22:41:54Z,MERGED,True,13,11,2,https://github.com/orestisfl,create_workspace_on_output: Prevent duplicate workspace nums,2,[],https://github.com/i3/i3/pull/4252,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/4252#issuecomment-725298471,Fixes #4238,"This is not about focus handling, its about duplicate workspaces. I can even separate the janitorial changes so that this change is only a single line fix.",True,{}
i3/i3,https://github.com/i3/i3,4252,2020-11-11T08:50:01Z,2020-11-28T22:41:50Z,2020-11-28T22:41:54Z,MERGED,True,13,11,2,https://github.com/orestisfl,create_workspace_on_output: Prevent duplicate workspace nums,2,[],https://github.com/i3/i3/pull/4252,https://github.com/Airblader,4,https://github.com/i3/i3/pull/4252#issuecomment-725301100,Fixes #4238,"I had the wrong issue in mind at first, but I'd still just not merge anything other than important bugfixes for now. It's not only about risking bugs, it's also about giving users a chance to experience the change and voice their opinion before releasing it.",True,{'THUMBS_UP': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,4252,2020-11-11T08:50:01Z,2020-11-28T22:41:50Z,2020-11-28T22:41:54Z,MERGED,True,13,11,2,https://github.com/orestisfl,create_workspace_on_output: Prevent duplicate workspace nums,2,[],https://github.com/i3/i3/pull/4252,https://github.com/ajeetdsouza,5,https://github.com/i3/i3/pull/4252#issuecomment-735288483,Fixes #4238,"@Airblader now that the release has been made, can this PR be merged?",True,{}
i3/i3,https://github.com/i3/i3,4252,2020-11-11T08:50:01Z,2020-11-28T22:41:50Z,2020-11-28T22:41:54Z,MERGED,True,13,11,2,https://github.com/orestisfl,create_workspace_on_output: Prevent duplicate workspace nums,2,[],https://github.com/i3/i3/pull/4252,https://github.com/Airblader,6,https://github.com/i3/i3/pull/4252#issuecomment-735292138,Fixes #4238,"Yes, @orestisfl just needs to rebase it and then we can merge it.",True,{}
i3/i3,https://github.com/i3/i3,4257,2020-11-15T15:28:17Z,2020-11-15T15:42:43Z,2020-11-15T15:42:47Z,MERGED,True,17,2832,22,https://github.com/stapelberg,Meson preparation for 4.19 release,6,[],https://github.com/i3/i3/pull/4257,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4257,fixes #4086,fixes #4086,True,{}
i3/i3,https://github.com/i3/i3,4258,2020-11-15T17:41:07Z,2020-11-15T18:22:10Z,2020-11-15T18:22:13Z,MERGED,True,39,27,2,https://github.com/stapelberg,release.sh and release notes changes post-release,1,[],https://github.com/i3/i3/pull/4258,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4258,,,True,{}
i3/i3,https://github.com/i3/i3,4259,2020-11-16T08:33:05Z,2020-11-16T08:56:50Z,2020-11-16T09:10:24Z,MERGED,True,11,5,2,https://github.com/stapelberg,i3-sensible-terminal: prioritize terminals with good accessibility,1,[],https://github.com/i3/i3/pull/4259,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4259,"We never did (and still do not) guarantee any order in which terminal emulators
are tried. Quoting from the i3-sensible-terminal man page:

Please don’t complain about the order: If the user has any preference, they
will have $TERMINAL set or modified their i3 configuration file.

This commit moves mate-terminal to the beginning of the list, which is
considered the most accessible terminal emulator among blind users.
fixes #4256","We never did (and still do not) guarantee any order in which terminal emulators
are tried. Quoting from the i3-sensible-terminal man page:

Please don’t complain about the order: If the user has any preference, they
will have $TERMINAL set or modified their i3 configuration file.

This commit moves mate-terminal to the beginning of the list, which is
considered the most accessible terminal emulator among blind users.
fixes #4256",True,{}
i3/i3,https://github.com/i3/i3,4259,2020-11-16T08:33:05Z,2020-11-16T08:56:50Z,2020-11-16T09:10:24Z,MERGED,True,11,5,2,https://github.com/stapelberg,i3-sensible-terminal: prioritize terminals with good accessibility,1,[],https://github.com/i3/i3/pull/4259,https://github.com/Airblader,2,https://github.com/i3/i3/pull/4259#issuecomment-727828240,"We never did (and still do not) guarantee any order in which terminal emulators
are tried. Quoting from the i3-sensible-terminal man page:

Please don’t complain about the order: If the user has any preference, they
will have $TERMINAL set or modified their i3 configuration file.

This commit moves mate-terminal to the beginning of the list, which is
considered the most accessible terminal emulator among blind users.
fixes #4256","We never did (and still do not) guarantee any order in which terminal emulators are tried.

I +1 this change for the a11y benefit, but I remember multiple PRs adding new emulators to the list where we asked to add them to the end of the list as to avoid this issue.",True,{}
i3/i3,https://github.com/i3/i3,4259,2020-11-16T08:33:05Z,2020-11-16T08:56:50Z,2020-11-16T09:10:24Z,MERGED,True,11,5,2,https://github.com/stapelberg,i3-sensible-terminal: prioritize terminals with good accessibility,1,[],https://github.com/i3/i3/pull/4259,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/4259#issuecomment-727829056,"We never did (and still do not) guarantee any order in which terminal emulators
are tried. Quoting from the i3-sensible-terminal man page:

Please don’t complain about the order: If the user has any preference, they
will have $TERMINAL set or modified their i3 configuration file.

This commit moves mate-terminal to the beginning of the list, which is
considered the most accessible terminal emulator among blind users.
fixes #4256","I +1 this change for the a11y benefit, but I remember multiple PRs adding new emulators to the list where we asked to add them to the end of the list as to avoid this issue.

Yes, and adding to the end of the list is what I would want to keep doing. The two statements aren’t in conflict with each other, are they?",True,{}
i3/i3,https://github.com/i3/i3,4259,2020-11-16T08:33:05Z,2020-11-16T08:56:50Z,2020-11-16T09:10:24Z,MERGED,True,11,5,2,https://github.com/stapelberg,i3-sensible-terminal: prioritize terminals with good accessibility,1,[],https://github.com/i3/i3/pull/4259,https://github.com/Airblader,4,https://github.com/i3/i3/pull/4259#issuecomment-727833007,"We never did (and still do not) guarantee any order in which terminal emulators
are tried. Quoting from the i3-sensible-terminal man page:

Please don’t complain about the order: If the user has any preference, they
will have $TERMINAL set or modified their i3 configuration file.

This commit moves mate-terminal to the beginning of the list, which is
considered the most accessible terminal emulator among blind users.
fixes #4256","I understand that you're getting at ""not guaranteeing it doesn't mean we can't try to keep it stable if we add something"", but I think realistically we raised the appearance of a stable order, and a note inside i3-sensible-terminal is probably not something most users will ever (have) read.
I fully expect this change to cause ""problems"" for a number of people. And note inside a script or not, that is not usually something we like doing. That said, the benefit outweighs the cost; it's not often we get to do accessibility improvements in i3 with such little effort.",True,{}
i3/i3,https://github.com/i3/i3,4259,2020-11-16T08:33:05Z,2020-11-16T08:56:50Z,2020-11-16T09:10:24Z,MERGED,True,11,5,2,https://github.com/stapelberg,i3-sensible-terminal: prioritize terminals with good accessibility,1,[],https://github.com/i3/i3/pull/4259,https://github.com/stapelberg,5,https://github.com/i3/i3/pull/4259#issuecomment-727835961,"We never did (and still do not) guarantee any order in which terminal emulators
are tried. Quoting from the i3-sensible-terminal man page:

Please don’t complain about the order: If the user has any preference, they
will have $TERMINAL set or modified their i3 configuration file.

This commit moves mate-terminal to the beginning of the list, which is
considered the most accessible terminal emulator among blind users.
fixes #4256","realistically we raised the appearance of a stable order

How do you mean? Are you saying we raised the appearance because of how i3-sensible-terminal behaves? Or is there some other place where we should have specified that there is no order?

and a note inside i3-sensible-terminal

It’s a note inside the manpage, not inside the script :)

I fully expect this change to cause ""problems"" for a number of people.

Yeah, people who haven’t configured their terminal might get a different installed one by default. I’m okay with that, especially as i3 shouldn’t be prescriptive regarding which terminal is best (or even just okay) :)",True,{}
i3/i3,https://github.com/i3/i3,4259,2020-11-16T08:33:05Z,2020-11-16T08:56:50Z,2020-11-16T09:10:24Z,MERGED,True,11,5,2,https://github.com/stapelberg,i3-sensible-terminal: prioritize terminals with good accessibility,1,[],https://github.com/i3/i3/pull/4259,https://github.com/Airblader,6,https://github.com/i3/i3/pull/4259#issuecomment-727843812,"We never did (and still do not) guarantee any order in which terminal emulators
are tried. Quoting from the i3-sensible-terminal man page:

Please don’t complain about the order: If the user has any preference, they
will have $TERMINAL set or modified their i3 configuration file.

This commit moves mate-terminal to the beginning of the list, which is
considered the most accessible terminal emulator among blind users.
fixes #4256","How do you mean? Are you saying we raised the appearance because of how i3-sensible-terminal behaves?

Yes, we've kept it stable for so long that I think people rely on it. I know that when I first started using i3 I had multiple emulators installed and never bothered or even thought about replacing i3-sensible-terminal.

I’m okay with that, especially as i3 shouldn’t be prescriptive regarding which terminal is best (or even just okay) :)

Then why do we prioritize accessible ones with this change…? ;-)
Anyway, I think this isn't worth spending a lot of time talking about given that we both agree on changing this. :-)",True,{}
i3/i3,https://github.com/i3/i3,4260,2020-11-16T08:58:57Z,2020-11-16T10:10:04Z,2020-11-16T10:10:09Z,MERGED,True,17,6,1,https://github.com/stapelberg,userguide: clarify home row / vi navigational key relation,1,[],https://github.com/i3/i3/pull/4260,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4260,"Before this commit, the userguide mentioned “compatibility with most keyboard
layouts”, but that seems to not have been the intention of vi author(s).","Before this commit, the userguide mentioned “compatibility with most keyboard
layouts”, but that seems to not have been the intention of vi author(s).",True,{}
i3/i3,https://github.com/i3/i3,4264,2020-11-21T12:01:10Z,2020-11-21T18:18:25Z,2020-11-21T18:18:25Z,MERGED,True,9,2,1,https://github.com/dmgk,"Fails to build with ""'GENERATED_command_enums.h' file not found""",1,[],https://github.com/i3/i3/pull/4264,https://github.com/dmgk,1,https://github.com/i3/i3/pull/4264,"I maintain i3-gaps port on FreeBSD and it intermittently fails to build with the following error:
[1/135] sh -c 'cp -r /wrkdirs/usr/ports/x11-wm/i3-gaps/work/i3-4.19/AnyEvent-I3 . && cd AnyEvent-I3 && perl Makefile.PL && make && touch ../AnyEvent-I3.stamp'
Warning: prerequisite AnyEvent 0 not found.
Warning: prerequisite AnyEvent::Handle 0 not found.
Warning: prerequisite AnyEvent::Socket 0 not found.
Warning: prerequisite JSON::XS 0 not found.
Checking if your kit is complete...
Looks good
Generating a Unix-style Makefile
Writing Makefile for AnyEvent::I3
Writing MYMETA.yml and MYMETA.json
cp lib/AnyEvent/I3.pm blib/lib/AnyEvent/I3.pm
Manifying 1 pod document
[2/135] /usr/local/bin/meson --internal vcstagger config.h.in config.h '4.19 (2020-11-15)' /wrkdirs/usr/ports/x11-wm/i3-gaps/work/i3-4.19 @VCS_TAG@ '(.*)' ' '
[3/135] cc -Itest.commands_parser.p -I. -I.. -I../include -I/usr/local/include/startup-notification-1.0 -I/usr/local/include -I/usr/local/include/cairo -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/local/include/pixman-1 -I/usr/local/include/freetype2 -I/usr/local/include/libdrm -I/usr/local/include/libpng16 -I/usr/local/include/pango-1.0 -I/usr/local/include/fribidi -I/usr/local/include/harfbuzz -Xclang -fcolor-diagnostics -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -std=c11 -O3 -Wunused-value -D_GNU_SOURCE -O2 -fstack-protector-strong -isystem /usr/local/include -fno-strict-aliasing -DLIBICONV_PLUG -isystem /usr/local/include -pthread -D_THREAD_SAFE -DTEST_PARSER -MD -MQ test.commands_parser.p/src_commands_parser.c.o -MF test.commands_parser.p/src_commands_parser.c.o.d -o test.commands_parser.p/src_commands_parser.c.o -c ../src/commands_parser.c
FAILED: test.commands_parser.p/src_commands_parser.c.o
cc -Itest.commands_parser.p -I. -I.. -I../include -I/usr/local/include/startup-notification-1.0 -I/usr/local/include -I/usr/local/include/cairo -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/local/include/pixman-1 -I/usr/local/include/freetype2 -I/usr/local/include/libdrm -I/usr/local/include/libpng16 -I/usr/local/include/pango-1.0 -I/usr/local/include/fribidi -I/usr/local/include/harfbuzz -Xclang -fcolor-diagnostics -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -std=c11 -O3 -Wunused-value -D_GNU_SOURCE -O2 -fstack-protector-strong -isystem /usr/local/include -fno-strict-aliasing -DLIBICONV_PLUG -isystem /usr/local/include -pthread -D_THREAD_SAFE -DTEST_PARSER -MD -MQ test.commands_parser.p/src_commands_parser.c.o -MF test.commands_parser.p/src_commands_parser.c.o.d -o test.commands_parser.p/src_commands_parser.c.o -c ../src/commands_parser.c
../src/commands_parser.c:40:10: fatal error: 'GENERATED_command_enums.h' file not found
#include ""GENERATED_command_enums.h""
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
1 error generated.
ninja: build stopped: subcommand failed.

I'm not very familiar with meson, but it seems that command_parser and config_parser need to be declared as dependencies instead of sources to make sure generated sources are ready before i3 build starts.
This PR seems to fix these build errors.","I maintain i3-gaps port on FreeBSD and it intermittently fails to build with the following error:
[1/135] sh -c 'cp -r /wrkdirs/usr/ports/x11-wm/i3-gaps/work/i3-4.19/AnyEvent-I3 . && cd AnyEvent-I3 && perl Makefile.PL && make && touch ../AnyEvent-I3.stamp'
Warning: prerequisite AnyEvent 0 not found.
Warning: prerequisite AnyEvent::Handle 0 not found.
Warning: prerequisite AnyEvent::Socket 0 not found.
Warning: prerequisite JSON::XS 0 not found.
Checking if your kit is complete...
Looks good
Generating a Unix-style Makefile
Writing Makefile for AnyEvent::I3
Writing MYMETA.yml and MYMETA.json
cp lib/AnyEvent/I3.pm blib/lib/AnyEvent/I3.pm
Manifying 1 pod document
[2/135] /usr/local/bin/meson --internal vcstagger config.h.in config.h '4.19 (2020-11-15)' /wrkdirs/usr/ports/x11-wm/i3-gaps/work/i3-4.19 @VCS_TAG@ '(.*)' ' '
[3/135] cc -Itest.commands_parser.p -I. -I.. -I../include -I/usr/local/include/startup-notification-1.0 -I/usr/local/include -I/usr/local/include/cairo -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/local/include/pixman-1 -I/usr/local/include/freetype2 -I/usr/local/include/libdrm -I/usr/local/include/libpng16 -I/usr/local/include/pango-1.0 -I/usr/local/include/fribidi -I/usr/local/include/harfbuzz -Xclang -fcolor-diagnostics -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -std=c11 -O3 -Wunused-value -D_GNU_SOURCE -O2 -fstack-protector-strong -isystem /usr/local/include -fno-strict-aliasing -DLIBICONV_PLUG -isystem /usr/local/include -pthread -D_THREAD_SAFE -DTEST_PARSER -MD -MQ test.commands_parser.p/src_commands_parser.c.o -MF test.commands_parser.p/src_commands_parser.c.o.d -o test.commands_parser.p/src_commands_parser.c.o -c ../src/commands_parser.c
FAILED: test.commands_parser.p/src_commands_parser.c.o
cc -Itest.commands_parser.p -I. -I.. -I../include -I/usr/local/include/startup-notification-1.0 -I/usr/local/include -I/usr/local/include/cairo -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/local/include/pixman-1 -I/usr/local/include/freetype2 -I/usr/local/include/libdrm -I/usr/local/include/libpng16 -I/usr/local/include/pango-1.0 -I/usr/local/include/fribidi -I/usr/local/include/harfbuzz -Xclang -fcolor-diagnostics -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -std=c11 -O3 -Wunused-value -D_GNU_SOURCE -O2 -fstack-protector-strong -isystem /usr/local/include -fno-strict-aliasing -DLIBICONV_PLUG -isystem /usr/local/include -pthread -D_THREAD_SAFE -DTEST_PARSER -MD -MQ test.commands_parser.p/src_commands_parser.c.o -MF test.commands_parser.p/src_commands_parser.c.o.d -o test.commands_parser.p/src_commands_parser.c.o -c ../src/commands_parser.c
../src/commands_parser.c:40:10: fatal error: 'GENERATED_command_enums.h' file not found
#include ""GENERATED_command_enums.h""
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
1 error generated.
ninja: build stopped: subcommand failed.

I'm not very familiar with meson, but it seems that command_parser and config_parser need to be declared as dependencies instead of sources to make sure generated sources are ready before i3 build starts.
This PR seems to fix these build errors.",True,{}
i3/i3,https://github.com/i3/i3,4264,2020-11-21T12:01:10Z,2020-11-21T18:18:25Z,2020-11-21T18:18:25Z,MERGED,True,9,2,1,https://github.com/dmgk,"Fails to build with ""'GENERATED_command_enums.h' file not found""",1,[],https://github.com/i3/i3/pull/4264,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/4264#issuecomment-731604847,"I maintain i3-gaps port on FreeBSD and it intermittently fails to build with the following error:
[1/135] sh -c 'cp -r /wrkdirs/usr/ports/x11-wm/i3-gaps/work/i3-4.19/AnyEvent-I3 . && cd AnyEvent-I3 && perl Makefile.PL && make && touch ../AnyEvent-I3.stamp'
Warning: prerequisite AnyEvent 0 not found.
Warning: prerequisite AnyEvent::Handle 0 not found.
Warning: prerequisite AnyEvent::Socket 0 not found.
Warning: prerequisite JSON::XS 0 not found.
Checking if your kit is complete...
Looks good
Generating a Unix-style Makefile
Writing Makefile for AnyEvent::I3
Writing MYMETA.yml and MYMETA.json
cp lib/AnyEvent/I3.pm blib/lib/AnyEvent/I3.pm
Manifying 1 pod document
[2/135] /usr/local/bin/meson --internal vcstagger config.h.in config.h '4.19 (2020-11-15)' /wrkdirs/usr/ports/x11-wm/i3-gaps/work/i3-4.19 @VCS_TAG@ '(.*)' ' '
[3/135] cc -Itest.commands_parser.p -I. -I.. -I../include -I/usr/local/include/startup-notification-1.0 -I/usr/local/include -I/usr/local/include/cairo -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/local/include/pixman-1 -I/usr/local/include/freetype2 -I/usr/local/include/libdrm -I/usr/local/include/libpng16 -I/usr/local/include/pango-1.0 -I/usr/local/include/fribidi -I/usr/local/include/harfbuzz -Xclang -fcolor-diagnostics -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -std=c11 -O3 -Wunused-value -D_GNU_SOURCE -O2 -fstack-protector-strong -isystem /usr/local/include -fno-strict-aliasing -DLIBICONV_PLUG -isystem /usr/local/include -pthread -D_THREAD_SAFE -DTEST_PARSER -MD -MQ test.commands_parser.p/src_commands_parser.c.o -MF test.commands_parser.p/src_commands_parser.c.o.d -o test.commands_parser.p/src_commands_parser.c.o -c ../src/commands_parser.c
FAILED: test.commands_parser.p/src_commands_parser.c.o
cc -Itest.commands_parser.p -I. -I.. -I../include -I/usr/local/include/startup-notification-1.0 -I/usr/local/include -I/usr/local/include/cairo -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/local/include/pixman-1 -I/usr/local/include/freetype2 -I/usr/local/include/libdrm -I/usr/local/include/libpng16 -I/usr/local/include/pango-1.0 -I/usr/local/include/fribidi -I/usr/local/include/harfbuzz -Xclang -fcolor-diagnostics -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -std=c11 -O3 -Wunused-value -D_GNU_SOURCE -O2 -fstack-protector-strong -isystem /usr/local/include -fno-strict-aliasing -DLIBICONV_PLUG -isystem /usr/local/include -pthread -D_THREAD_SAFE -DTEST_PARSER -MD -MQ test.commands_parser.p/src_commands_parser.c.o -MF test.commands_parser.p/src_commands_parser.c.o.d -o test.commands_parser.p/src_commands_parser.c.o -c ../src/commands_parser.c
../src/commands_parser.c:40:10: fatal error: 'GENERATED_command_enums.h' file not found
#include ""GENERATED_command_enums.h""
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
1 error generated.
ninja: build stopped: subcommand failed.

I'm not very familiar with meson, but it seems that command_parser and config_parser need to be declared as dependencies instead of sources to make sure generated sources are ready before i3 build starts.
This PR seems to fix these build errors.","I read https://mesonbuild.com/Generating-sources.html and the Meson Manual, section 11.5 Generating source and headers, and I think the bits of the meson file you’re modifying are correct.
Based on your error message listing ""test.commands_parser"", I think this is the correct fix instead:
@@ -669,7 +669,10 @@ executable(
 
 executable(
   'test.commands_parser',
-  'src/commands_parser.c',
+  [
+    'src/commands_parser.c',
+    command_parser,
+  ],
   include_directories: inc,
   c_args: '-DTEST_PARSER',
   dependencies: common_deps,
@@ -678,7 +681,10 @@ executable(
 
 executable(
   'test.config_parser',
-  'src/config_parser.c',
+  [
+    'src/config_parser.c',
+    config_parser,
+  ],
   include_directories: inc,
   c_args: '-DTEST_PARSER',
   dependencies: common_deps,",True,{}
i3/i3,https://github.com/i3/i3,4264,2020-11-21T12:01:10Z,2020-11-21T18:18:25Z,2020-11-21T18:18:25Z,MERGED,True,9,2,1,https://github.com/dmgk,"Fails to build with ""'GENERATED_command_enums.h' file not found""",1,[],https://github.com/i3/i3/pull/4264,https://github.com/dmgk,3,https://github.com/i3/i3/pull/4264#issuecomment-731607913,"I maintain i3-gaps port on FreeBSD and it intermittently fails to build with the following error:
[1/135] sh -c 'cp -r /wrkdirs/usr/ports/x11-wm/i3-gaps/work/i3-4.19/AnyEvent-I3 . && cd AnyEvent-I3 && perl Makefile.PL && make && touch ../AnyEvent-I3.stamp'
Warning: prerequisite AnyEvent 0 not found.
Warning: prerequisite AnyEvent::Handle 0 not found.
Warning: prerequisite AnyEvent::Socket 0 not found.
Warning: prerequisite JSON::XS 0 not found.
Checking if your kit is complete...
Looks good
Generating a Unix-style Makefile
Writing Makefile for AnyEvent::I3
Writing MYMETA.yml and MYMETA.json
cp lib/AnyEvent/I3.pm blib/lib/AnyEvent/I3.pm
Manifying 1 pod document
[2/135] /usr/local/bin/meson --internal vcstagger config.h.in config.h '4.19 (2020-11-15)' /wrkdirs/usr/ports/x11-wm/i3-gaps/work/i3-4.19 @VCS_TAG@ '(.*)' ' '
[3/135] cc -Itest.commands_parser.p -I. -I.. -I../include -I/usr/local/include/startup-notification-1.0 -I/usr/local/include -I/usr/local/include/cairo -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/local/include/pixman-1 -I/usr/local/include/freetype2 -I/usr/local/include/libdrm -I/usr/local/include/libpng16 -I/usr/local/include/pango-1.0 -I/usr/local/include/fribidi -I/usr/local/include/harfbuzz -Xclang -fcolor-diagnostics -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -std=c11 -O3 -Wunused-value -D_GNU_SOURCE -O2 -fstack-protector-strong -isystem /usr/local/include -fno-strict-aliasing -DLIBICONV_PLUG -isystem /usr/local/include -pthread -D_THREAD_SAFE -DTEST_PARSER -MD -MQ test.commands_parser.p/src_commands_parser.c.o -MF test.commands_parser.p/src_commands_parser.c.o.d -o test.commands_parser.p/src_commands_parser.c.o -c ../src/commands_parser.c
FAILED: test.commands_parser.p/src_commands_parser.c.o
cc -Itest.commands_parser.p -I. -I.. -I../include -I/usr/local/include/startup-notification-1.0 -I/usr/local/include -I/usr/local/include/cairo -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/local/include/pixman-1 -I/usr/local/include/freetype2 -I/usr/local/include/libdrm -I/usr/local/include/libpng16 -I/usr/local/include/pango-1.0 -I/usr/local/include/fribidi -I/usr/local/include/harfbuzz -Xclang -fcolor-diagnostics -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -std=c11 -O3 -Wunused-value -D_GNU_SOURCE -O2 -fstack-protector-strong -isystem /usr/local/include -fno-strict-aliasing -DLIBICONV_PLUG -isystem /usr/local/include -pthread -D_THREAD_SAFE -DTEST_PARSER -MD -MQ test.commands_parser.p/src_commands_parser.c.o -MF test.commands_parser.p/src_commands_parser.c.o.d -o test.commands_parser.p/src_commands_parser.c.o -c ../src/commands_parser.c
../src/commands_parser.c:40:10: fatal error: 'GENERATED_command_enums.h' file not found
#include ""GENERATED_command_enums.h""
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
1 error generated.
ninja: build stopped: subcommand failed.

I'm not very familiar with meson, but it seems that command_parser and config_parser need to be declared as dependencies instead of sources to make sure generated sources are ready before i3 build starts.
This PR seems to fix these build errors.","That doesn't seem to fix the issue. The build still fails albeit a bit later:
[1/135] sh -c 'cp -r /wrkdirs/usr/ports/x11-wm/i3-gaps/work/i3-4.19/AnyEvent-I3 . && cd AnyEvent-I3 && perl Makefile.PL && make && touch ../AnyEvent-I3.stamp'
Warning: prerequisite AnyEvent 0 not found.
Warning: prerequisite AnyEvent::Handle 0 not found.
Warning: prerequisite AnyEvent::Socket 0 not found.
Warning: prerequisite JSON::XS 0 not found.
Checking if your kit is complete...
Looks good
Generating a Unix-style Makefile
Writing Makefile for AnyEvent::I3
Writing MYMETA.yml and MYMETA.json
cp lib/AnyEvent/I3.pm blib/lib/AnyEvent/I3.pm
Manifying 1 pod document
[2/135] /usr/local/bin/meson --internal vcstagger config.h.in config.h '4.19 (2020-11-15)' /wrkdirs/usr/ports/x11-wm/i3-gaps/work/i3-4.19 @VCS_TAG@ '(.*)' ' '
[3/135] /usr/local/bin/asciidoc -a toc -n -o hacking-howto.html ../docs/hacking-howto
[4/135] /usr/local/bin/asciidoc -a toc -n -o userguide.html ../docs/userguide
[5/135] /usr/local/bin/asciidoc -a toc -n -o ipc.html ../docs/ipc
[6/135] /usr/local/bin/asciidoc -a toc -n -o multi-monitor.html ../docs/multi-monitor
[7/135] /usr/local/bin/asciidoc -a toc -n -o wsbar.html ../docs/wsbar
[8/135] /usr/local/bin/asciidoc -a toc -n -o testsuite.html ../docs/testsuite
[9/135] /usr/local/bin/asciidoc -a toc -n -o i3bar-protocol.html ../docs/i3bar-protocol
[10/135] /usr/local/bin/asciidoc -a toc -n -o layout-saving.html ../docs/layout-saving
[11/135] /usr/local/bin/asciidoc -n -o debugging.html ../docs/debugging
[12/135] /usr/local/bin/asciidoc -d manpage -b docbook -f asciidoc.conf -o i3.xml ../man/i3.man
[13/135] /usr/local/bin/xmlto man -o . i3.xml
Note: Writing i3.1
[14/135] /usr/local/bin/asciidoc -d manpage -b docbook -f asciidoc.conf -o i3bar.xml ../man/i3bar.man
[15/135] /usr/local/bin/xmlto man -o . i3bar.xml
Note: Writing i3bar.1
[16/135] /usr/local/bin/asciidoc -d manpage -b docbook -f asciidoc.conf -o i3-msg.xml ../man/i3-msg.man
[17/135] cc -Ii3bar.p -I. -I.. -I../include -I../i3bar/include -I/usr/local/include/startup-notification-1.0 -I/usr/local/include -I/usr/local/include/cairo -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/local/include/pixman-1 -I/usr/local/include/freetype2 -I/usr/local/include/libdrm -I/usr/local/include/libpng16 -I/usr/local/include/pango-1.0 -I/usr/local/include/fribidi -I/usr/local/include/harfbuzz -Xclang -fcolor-diagnostics -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -std=c11 -O3 -Wunused-value -D_GNU_SOURCE -O2 -fstack-protector-strong -isystem /usr/local/include -fno-strict-aliasing -DLIBICONV_PLUG -isystem /usr/local/include -pthread -D_THREAD_SAFE -MD -MQ i3bar.p/i3bar_src_mode.c.o -MF i3bar.p/i3bar_src_mode.c.o.d -o i3bar.p/i3bar_src_mode.c.o -c ../i3bar/src/mode.c
...
[22/135] cc -Ii3-config-wizard.p -I. -I.. -I../include -I../i3-config-wizard -I/usr/local/include/startup-notification-1.0 -I/usr/local/include -I/usr/local/include/cairo -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/local/include/pixman-1 -I/usr/local/include/freetype2 -I/usr/local/include/libdrm -I/usr/local/include/libpng16 -I/usr/local/include/pango-1.0 -I/usr/local/include/fribidi -I/usr/local/include/harfbuzz -Xclang -fcolor-diagnostics -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -std=c11 -O3 -Wunused-value -D_GNU_SOURCE -O2 -fstack-protector-strong -isystem /usr/local/include -fno-strict-aliasing -DLIBICONV_PLUG -isystem /usr/local/include -pthread -D_THREAD_SAFE -MD -MQ i3-config-wizard.p/i3-config-wizard_main.c.o -MF i3-config-wizard.p/i3-config-wizard_main.c.o.d -o i3-config-wizard.p/i3-config-wizard_main.c.o -c ../i3-config-wizard/main.c
FAILED: i3-config-wizard.p/i3-config-wizard_main.c.o
cc -Ii3-config-wizard.p -I. -I.. -I../include -I../i3-config-wizard -I/usr/local/include/startup-notification-1.0 -I/usr/local/include -I/usr/local/include/cairo -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/local/include/pixman-1 -I/usr/local/include/freetype2 -I/usr/local/include/libdrm -I/usr/local/include/libpng16 -I/usr/local/include/pango-1.0 -I/usr/local/include/fribidi -I/usr/local/include/harfbuzz -Xclang -fcolor-diagnostics -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -std=c11 -O3 -Wunused-value -D_GNU_SOURCE -O2 -fstack-protector-strong -isystem /usr/local/include -fno-strict-aliasing -DLIBICONV_PLUG -isystem /usr/local/include -pthread -D_THREAD_SAFE -MD -MQ i3-config-wizard.p/i3-config-wizard_main.c.o -MF i3-config-wizard.p/i3-config-wizard_main.c.o.d -o i3-config-wizard.p/i3-config-wizard_main.c.o -c ../i3-config-wizard/main.c
../i3-config-wizard/main.c:107:10: fatal error: 'GENERATED_config_enums.h' file not found
#include ""GENERATED_config_enums.h""
         ^~~~~~~~~~~~~~~~~~~~~~~~~~
1 error generated.
ninja: build stopped: subcommand failed.",True,{}
i3/i3,https://github.com/i3/i3,4264,2020-11-21T12:01:10Z,2020-11-21T18:18:25Z,2020-11-21T18:18:25Z,MERGED,True,9,2,1,https://github.com/dmgk,"Fails to build with ""'GENERATED_command_enums.h' file not found""",1,[],https://github.com/i3/i3/pull/4264,https://github.com/stapelberg,4,https://github.com/i3/i3/pull/4264#issuecomment-731608453,"I maintain i3-gaps port on FreeBSD and it intermittently fails to build with the following error:
[1/135] sh -c 'cp -r /wrkdirs/usr/ports/x11-wm/i3-gaps/work/i3-4.19/AnyEvent-I3 . && cd AnyEvent-I3 && perl Makefile.PL && make && touch ../AnyEvent-I3.stamp'
Warning: prerequisite AnyEvent 0 not found.
Warning: prerequisite AnyEvent::Handle 0 not found.
Warning: prerequisite AnyEvent::Socket 0 not found.
Warning: prerequisite JSON::XS 0 not found.
Checking if your kit is complete...
Looks good
Generating a Unix-style Makefile
Writing Makefile for AnyEvent::I3
Writing MYMETA.yml and MYMETA.json
cp lib/AnyEvent/I3.pm blib/lib/AnyEvent/I3.pm
Manifying 1 pod document
[2/135] /usr/local/bin/meson --internal vcstagger config.h.in config.h '4.19 (2020-11-15)' /wrkdirs/usr/ports/x11-wm/i3-gaps/work/i3-4.19 @VCS_TAG@ '(.*)' ' '
[3/135] cc -Itest.commands_parser.p -I. -I.. -I../include -I/usr/local/include/startup-notification-1.0 -I/usr/local/include -I/usr/local/include/cairo -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/local/include/pixman-1 -I/usr/local/include/freetype2 -I/usr/local/include/libdrm -I/usr/local/include/libpng16 -I/usr/local/include/pango-1.0 -I/usr/local/include/fribidi -I/usr/local/include/harfbuzz -Xclang -fcolor-diagnostics -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -std=c11 -O3 -Wunused-value -D_GNU_SOURCE -O2 -fstack-protector-strong -isystem /usr/local/include -fno-strict-aliasing -DLIBICONV_PLUG -isystem /usr/local/include -pthread -D_THREAD_SAFE -DTEST_PARSER -MD -MQ test.commands_parser.p/src_commands_parser.c.o -MF test.commands_parser.p/src_commands_parser.c.o.d -o test.commands_parser.p/src_commands_parser.c.o -c ../src/commands_parser.c
FAILED: test.commands_parser.p/src_commands_parser.c.o
cc -Itest.commands_parser.p -I. -I.. -I../include -I/usr/local/include/startup-notification-1.0 -I/usr/local/include -I/usr/local/include/cairo -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/local/include/pixman-1 -I/usr/local/include/freetype2 -I/usr/local/include/libdrm -I/usr/local/include/libpng16 -I/usr/local/include/pango-1.0 -I/usr/local/include/fribidi -I/usr/local/include/harfbuzz -Xclang -fcolor-diagnostics -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -std=c11 -O3 -Wunused-value -D_GNU_SOURCE -O2 -fstack-protector-strong -isystem /usr/local/include -fno-strict-aliasing -DLIBICONV_PLUG -isystem /usr/local/include -pthread -D_THREAD_SAFE -DTEST_PARSER -MD -MQ test.commands_parser.p/src_commands_parser.c.o -MF test.commands_parser.p/src_commands_parser.c.o.d -o test.commands_parser.p/src_commands_parser.c.o -c ../src/commands_parser.c
../src/commands_parser.c:40:10: fatal error: 'GENERATED_command_enums.h' file not found
#include ""GENERATED_command_enums.h""
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
1 error generated.
ninja: build stopped: subcommand failed.

I'm not very familiar with meson, but it seems that command_parser and config_parser need to be declared as dependencies instead of sources to make sure generated sources are ready before i3 build starts.
This PR seems to fix these build errors.","Okay, let’s declare i3-config-wizard’s dependency, too:
@@ -514,6 +514,7 @@ executable(
     'i3-config-wizard/i3-config-wizard-atoms.xmacro.h',
     'i3-config-wizard/main.c',
     'i3-config-wizard/xcb.h',
+    config_parser,
   ],
   install: true,
   include_directories: include_directories('include', 'i3-config-wizard'),
@@ -669,7 +670,10 @@ executable(
 
 executable(
   'test.commands_parser',
-  'src/commands_parser.c',
+  [
+    'src/commands_parser.c',
+    command_parser,
+  ],
   include_directories: inc,
   c_args: '-DTEST_PARSER',
   dependencies: common_deps,
@@ -678,7 +682,10 @@ executable(
 
 executable(
   'test.config_parser',
-  'src/config_parser.c',
+  [
+    'src/config_parser.c',
+    config_parser,
+  ],
   include_directories: inc,
   c_args: '-DTEST_PARSER',
   dependencies: common_deps,",True,{}
i3/i3,https://github.com/i3/i3,4264,2020-11-21T12:01:10Z,2020-11-21T18:18:25Z,2020-11-21T18:18:25Z,MERGED,True,9,2,1,https://github.com/dmgk,"Fails to build with ""'GENERATED_command_enums.h' file not found""",1,[],https://github.com/i3/i3/pull/4264,https://github.com/dmgk,5,https://github.com/i3/i3/pull/4264#issuecomment-731609812,"I maintain i3-gaps port on FreeBSD and it intermittently fails to build with the following error:
[1/135] sh -c 'cp -r /wrkdirs/usr/ports/x11-wm/i3-gaps/work/i3-4.19/AnyEvent-I3 . && cd AnyEvent-I3 && perl Makefile.PL && make && touch ../AnyEvent-I3.stamp'
Warning: prerequisite AnyEvent 0 not found.
Warning: prerequisite AnyEvent::Handle 0 not found.
Warning: prerequisite AnyEvent::Socket 0 not found.
Warning: prerequisite JSON::XS 0 not found.
Checking if your kit is complete...
Looks good
Generating a Unix-style Makefile
Writing Makefile for AnyEvent::I3
Writing MYMETA.yml and MYMETA.json
cp lib/AnyEvent/I3.pm blib/lib/AnyEvent/I3.pm
Manifying 1 pod document
[2/135] /usr/local/bin/meson --internal vcstagger config.h.in config.h '4.19 (2020-11-15)' /wrkdirs/usr/ports/x11-wm/i3-gaps/work/i3-4.19 @VCS_TAG@ '(.*)' ' '
[3/135] cc -Itest.commands_parser.p -I. -I.. -I../include -I/usr/local/include/startup-notification-1.0 -I/usr/local/include -I/usr/local/include/cairo -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/local/include/pixman-1 -I/usr/local/include/freetype2 -I/usr/local/include/libdrm -I/usr/local/include/libpng16 -I/usr/local/include/pango-1.0 -I/usr/local/include/fribidi -I/usr/local/include/harfbuzz -Xclang -fcolor-diagnostics -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -std=c11 -O3 -Wunused-value -D_GNU_SOURCE -O2 -fstack-protector-strong -isystem /usr/local/include -fno-strict-aliasing -DLIBICONV_PLUG -isystem /usr/local/include -pthread -D_THREAD_SAFE -DTEST_PARSER -MD -MQ test.commands_parser.p/src_commands_parser.c.o -MF test.commands_parser.p/src_commands_parser.c.o.d -o test.commands_parser.p/src_commands_parser.c.o -c ../src/commands_parser.c
FAILED: test.commands_parser.p/src_commands_parser.c.o
cc -Itest.commands_parser.p -I. -I.. -I../include -I/usr/local/include/startup-notification-1.0 -I/usr/local/include -I/usr/local/include/cairo -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/local/include/pixman-1 -I/usr/local/include/freetype2 -I/usr/local/include/libdrm -I/usr/local/include/libpng16 -I/usr/local/include/pango-1.0 -I/usr/local/include/fribidi -I/usr/local/include/harfbuzz -Xclang -fcolor-diagnostics -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -std=c11 -O3 -Wunused-value -D_GNU_SOURCE -O2 -fstack-protector-strong -isystem /usr/local/include -fno-strict-aliasing -DLIBICONV_PLUG -isystem /usr/local/include -pthread -D_THREAD_SAFE -DTEST_PARSER -MD -MQ test.commands_parser.p/src_commands_parser.c.o -MF test.commands_parser.p/src_commands_parser.c.o.d -o test.commands_parser.p/src_commands_parser.c.o -c ../src/commands_parser.c
../src/commands_parser.c:40:10: fatal error: 'GENERATED_command_enums.h' file not found
#include ""GENERATED_command_enums.h""
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
1 error generated.
ninja: build stopped: subcommand failed.

I'm not very familiar with meson, but it seems that command_parser and config_parser need to be declared as dependencies instead of sources to make sure generated sources are ready before i3 build starts.
This PR seems to fix these build errors.","And that works, thanks for the quick response!",True,{}
i3/i3,https://github.com/i3/i3,4264,2020-11-21T12:01:10Z,2020-11-21T18:18:25Z,2020-11-21T18:18:25Z,MERGED,True,9,2,1,https://github.com/dmgk,"Fails to build with ""'GENERATED_command_enums.h' file not found""",1,[],https://github.com/i3/i3/pull/4264,https://github.com/stapelberg,6,https://github.com/i3/i3/pull/4264#issuecomment-731610158,"I maintain i3-gaps port on FreeBSD and it intermittently fails to build with the following error:
[1/135] sh -c 'cp -r /wrkdirs/usr/ports/x11-wm/i3-gaps/work/i3-4.19/AnyEvent-I3 . && cd AnyEvent-I3 && perl Makefile.PL && make && touch ../AnyEvent-I3.stamp'
Warning: prerequisite AnyEvent 0 not found.
Warning: prerequisite AnyEvent::Handle 0 not found.
Warning: prerequisite AnyEvent::Socket 0 not found.
Warning: prerequisite JSON::XS 0 not found.
Checking if your kit is complete...
Looks good
Generating a Unix-style Makefile
Writing Makefile for AnyEvent::I3
Writing MYMETA.yml and MYMETA.json
cp lib/AnyEvent/I3.pm blib/lib/AnyEvent/I3.pm
Manifying 1 pod document
[2/135] /usr/local/bin/meson --internal vcstagger config.h.in config.h '4.19 (2020-11-15)' /wrkdirs/usr/ports/x11-wm/i3-gaps/work/i3-4.19 @VCS_TAG@ '(.*)' ' '
[3/135] cc -Itest.commands_parser.p -I. -I.. -I../include -I/usr/local/include/startup-notification-1.0 -I/usr/local/include -I/usr/local/include/cairo -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/local/include/pixman-1 -I/usr/local/include/freetype2 -I/usr/local/include/libdrm -I/usr/local/include/libpng16 -I/usr/local/include/pango-1.0 -I/usr/local/include/fribidi -I/usr/local/include/harfbuzz -Xclang -fcolor-diagnostics -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -std=c11 -O3 -Wunused-value -D_GNU_SOURCE -O2 -fstack-protector-strong -isystem /usr/local/include -fno-strict-aliasing -DLIBICONV_PLUG -isystem /usr/local/include -pthread -D_THREAD_SAFE -DTEST_PARSER -MD -MQ test.commands_parser.p/src_commands_parser.c.o -MF test.commands_parser.p/src_commands_parser.c.o.d -o test.commands_parser.p/src_commands_parser.c.o -c ../src/commands_parser.c
FAILED: test.commands_parser.p/src_commands_parser.c.o
cc -Itest.commands_parser.p -I. -I.. -I../include -I/usr/local/include/startup-notification-1.0 -I/usr/local/include -I/usr/local/include/cairo -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/local/include/pixman-1 -I/usr/local/include/freetype2 -I/usr/local/include/libdrm -I/usr/local/include/libpng16 -I/usr/local/include/pango-1.0 -I/usr/local/include/fribidi -I/usr/local/include/harfbuzz -Xclang -fcolor-diagnostics -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -std=c11 -O3 -Wunused-value -D_GNU_SOURCE -O2 -fstack-protector-strong -isystem /usr/local/include -fno-strict-aliasing -DLIBICONV_PLUG -isystem /usr/local/include -pthread -D_THREAD_SAFE -DTEST_PARSER -MD -MQ test.commands_parser.p/src_commands_parser.c.o -MF test.commands_parser.p/src_commands_parser.c.o.d -o test.commands_parser.p/src_commands_parser.c.o -c ../src/commands_parser.c
../src/commands_parser.c:40:10: fatal error: 'GENERATED_command_enums.h' file not found
#include ""GENERATED_command_enums.h""
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
1 error generated.
ninja: build stopped: subcommand failed.

I'm not very familiar with meson, but it seems that command_parser and config_parser need to be declared as dependencies instead of sources to make sure generated sources are ready before i3 build starts.
This PR seems to fix these build errors.",Thanks for confirming! Can you update the pull request to reflect the current fix please?,True,{}
i3/i3,https://github.com/i3/i3,4264,2020-11-21T12:01:10Z,2020-11-21T18:18:25Z,2020-11-21T18:18:25Z,MERGED,True,9,2,1,https://github.com/dmgk,"Fails to build with ""'GENERATED_command_enums.h' file not found""",1,[],https://github.com/i3/i3/pull/4264,https://github.com/dmgk,7,https://github.com/i3/i3/pull/4264#issuecomment-731611423,"I maintain i3-gaps port on FreeBSD and it intermittently fails to build with the following error:
[1/135] sh -c 'cp -r /wrkdirs/usr/ports/x11-wm/i3-gaps/work/i3-4.19/AnyEvent-I3 . && cd AnyEvent-I3 && perl Makefile.PL && make && touch ../AnyEvent-I3.stamp'
Warning: prerequisite AnyEvent 0 not found.
Warning: prerequisite AnyEvent::Handle 0 not found.
Warning: prerequisite AnyEvent::Socket 0 not found.
Warning: prerequisite JSON::XS 0 not found.
Checking if your kit is complete...
Looks good
Generating a Unix-style Makefile
Writing Makefile for AnyEvent::I3
Writing MYMETA.yml and MYMETA.json
cp lib/AnyEvent/I3.pm blib/lib/AnyEvent/I3.pm
Manifying 1 pod document
[2/135] /usr/local/bin/meson --internal vcstagger config.h.in config.h '4.19 (2020-11-15)' /wrkdirs/usr/ports/x11-wm/i3-gaps/work/i3-4.19 @VCS_TAG@ '(.*)' ' '
[3/135] cc -Itest.commands_parser.p -I. -I.. -I../include -I/usr/local/include/startup-notification-1.0 -I/usr/local/include -I/usr/local/include/cairo -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/local/include/pixman-1 -I/usr/local/include/freetype2 -I/usr/local/include/libdrm -I/usr/local/include/libpng16 -I/usr/local/include/pango-1.0 -I/usr/local/include/fribidi -I/usr/local/include/harfbuzz -Xclang -fcolor-diagnostics -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -std=c11 -O3 -Wunused-value -D_GNU_SOURCE -O2 -fstack-protector-strong -isystem /usr/local/include -fno-strict-aliasing -DLIBICONV_PLUG -isystem /usr/local/include -pthread -D_THREAD_SAFE -DTEST_PARSER -MD -MQ test.commands_parser.p/src_commands_parser.c.o -MF test.commands_parser.p/src_commands_parser.c.o.d -o test.commands_parser.p/src_commands_parser.c.o -c ../src/commands_parser.c
FAILED: test.commands_parser.p/src_commands_parser.c.o
cc -Itest.commands_parser.p -I. -I.. -I../include -I/usr/local/include/startup-notification-1.0 -I/usr/local/include -I/usr/local/include/cairo -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/local/include/pixman-1 -I/usr/local/include/freetype2 -I/usr/local/include/libdrm -I/usr/local/include/libpng16 -I/usr/local/include/pango-1.0 -I/usr/local/include/fribidi -I/usr/local/include/harfbuzz -Xclang -fcolor-diagnostics -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -std=c11 -O3 -Wunused-value -D_GNU_SOURCE -O2 -fstack-protector-strong -isystem /usr/local/include -fno-strict-aliasing -DLIBICONV_PLUG -isystem /usr/local/include -pthread -D_THREAD_SAFE -DTEST_PARSER -MD -MQ test.commands_parser.p/src_commands_parser.c.o -MF test.commands_parser.p/src_commands_parser.c.o.d -o test.commands_parser.p/src_commands_parser.c.o -c ../src/commands_parser.c
../src/commands_parser.c:40:10: fatal error: 'GENERATED_command_enums.h' file not found
#include ""GENERATED_command_enums.h""
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
1 error generated.
ninja: build stopped: subcommand failed.

I'm not very familiar with meson, but it seems that command_parser and config_parser need to be declared as dependencies instead of sources to make sure generated sources are ready before i3 build starts.
This PR seems to fix these build errors.",Done.,True,{}
i3/i3,https://github.com/i3/i3,4269,2020-11-23T17:09:52Z,2020-12-08T07:11:59Z,2020-12-08T07:12:09Z,MERGED,True,2,2,1,https://github.com/ajakk,Use docdir for all docs when building (Fixes #4268),1,[],https://github.com/i3/i3/pull/4269,https://github.com/ajakk,1,https://github.com/i3/i3/pull/4269,Trivial build fix to use docdir for doc installation instead of datadir/doc/i3 for lib-i3test.html and lib-i3test-test.html.,Trivial build fix to use docdir for doc installation instead of datadir/doc/i3 for lib-i3test.html and lib-i3test-test.html.,True,{}
i3/i3,https://github.com/i3/i3,4269,2020-11-23T17:09:52Z,2020-12-08T07:11:59Z,2020-12-08T07:12:09Z,MERGED,True,2,2,1,https://github.com/ajakk,Use docdir for all docs when building (Fixes #4268),1,[],https://github.com/i3/i3/pull/4269,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/4269#issuecomment-740430186,Trivial build fix to use docdir for doc installation instead of datadir/doc/i3 for lib-i3test.html and lib-i3test-test.html.,"Sorry for the slow reply, and thanks for sending the fix!",True,{}
i3/i3,https://github.com/i3/i3,4273,2020-11-27T14:07:58Z,2021-05-20T19:47:21Z,2021-05-20T19:47:26Z,MERGED,True,8,1,1,https://github.com/kjetilho,add cross reference to directive `default_border` from command `border`,1,[],https://github.com/i3/i3/pull/4273,https://github.com/kjetilho,1,https://github.com/i3/i3/pull/4273,Added a couple of examples to make usage clearer with a cursory glance.,Added a couple of examples to make usage clearer with a cursory glance.,True,{}
i3/i3,https://github.com/i3/i3,4273,2020-11-27T14:07:58Z,2021-05-20T19:47:21Z,2021-05-20T19:47:26Z,MERGED,True,8,1,1,https://github.com/kjetilho,add cross reference to directive `default_border` from command `border`,1,[],https://github.com/i3/i3/pull/4273,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/4273#issuecomment-845426984,Added a couple of examples to make usage clearer with a cursory glance.,Thanks!,True,{}
i3/i3,https://github.com/i3/i3,4280,2020-12-08T04:01:14Z,2021-01-02T23:36:32Z,2021-01-02T23:36:32Z,MERGED,True,2,0,2,https://github.com/tbgiles,Clear pixmap to black before starting to draw,1,[],https://github.com/i3/i3/pull/4280,https://github.com/tbgiles,1,https://github.com/i3/i3/pull/4280,"This bug appears to still be kicking around, so here's a stab at it.
Added a call to clear the framebuffer before writing to it. In addition to running the test suite, also tested with xeyes, and background was black as expected.
I've updated the release notes to mention this bugfix.
fixes #3481","This bug appears to still be kicking around, so here's a stab at it.
Added a call to clear the framebuffer before writing to it. In addition to running the test suite, also tested with xeyes, and background was black as expected.
I've updated the release notes to mention this bugfix.
fixes #3481",True,{}
i3/i3,https://github.com/i3/i3,4281,2020-12-12T10:03:23Z,2020-12-28T22:22:23Z,2020-12-28T22:22:40Z,MERGED,True,24,22,1,https://github.com/romuald,Remove small bulge in i3 SVG logo,2,[],https://github.com/i3/i3/pull/4281,https://github.com/romuald,1,https://github.com/i3/i3/pull/4281,"The i3 logo have a small bulge in the lower section, this PR is meant to fix this (unless this intended :p)
Here is 2 screenshot before / after:","The i3 logo have a small bulge in the lower section, this PR is meant to fix this (unless this intended :p)
Here is 2 screenshot before / after:",True,"{'HEART': ['https://github.com/orestisfl', 'https://github.com/Xjs']}"
i3/i3,https://github.com/i3/i3,4281,2020-12-12T10:03:23Z,2020-12-28T22:22:23Z,2020-12-28T22:22:40Z,MERGED,True,24,22,1,https://github.com/romuald,Remove small bulge in i3 SVG logo,2,[],https://github.com/i3/i3/pull/4281,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/4281#issuecomment-751882344,"The i3 logo have a small bulge in the lower section, this PR is meant to fix this (unless this intended :p)
Here is 2 screenshot before / after:",Thanks for paying attention to detail and submitting this fix! :),True,{}
i3/i3,https://github.com/i3/i3,4284,2020-12-16T15:37:47Z,2021-01-01T14:57:05Z,2021-01-01T14:57:05Z,MERGED,True,2,0,1,https://github.com/sojitko,Add missing SYNC Reply type in IPC docs,1,[],https://github.com/i3/i3/pull/4284,https://github.com/sojitko,1,https://github.com/i3/i3/pull/4284,"Reply format in IPC page doesn't list SYNC reply.
Fixes i3/i3.github.io#65
Original PR i3/i3.github.io#66","Reply format in IPC page doesn't list SYNC reply.
Fixes i3/i3.github.io#65
Original PR i3/i3.github.io#66",True,{}
i3/i3,https://github.com/i3/i3,4285,2020-12-17T08:13:36Z,2020-12-24T17:44:23Z,2020-12-24T17:44:29Z,CLOSED,False,2,2,1,https://github.com/snprajwal,Changed Space to space,1,[],https://github.com/i3/i3/pull/4285,https://github.com/snprajwal,1,https://github.com/i3/i3/pull/4285,,,True,{}
i3/i3,https://github.com/i3/i3,4287,2020-12-20T12:21:06Z,2020-12-20T15:39:11Z,2020-12-20T15:58:24Z,CLOSED,False,126,29,15,https://github.com/ShimmerGlass,Add title_height and bar { height } config parameters,2,[],https://github.com/i3/i3/pull/4287,https://github.com/ShimmerGlass,1,https://github.com/i3/i3/pull/4287,"This adds config options to set the height of the title window decoration and/or i3bar height.
With this users can add a bit more padding around the bar/title text, which can look better, depending on taste.
The defaults are of course kept as-is, so the default appearance won't change unless these parameters are specified.
Example of how I use title_height:

(note: the border on top comes from another change on my fork, ignore it)","This adds config options to set the height of the title window decoration and/or i3bar height.
With this users can add a bit more padding around the bar/title text, which can look better, depending on taste.
The defaults are of course kept as-is, so the default appearance won't change unless these parameters are specified.
Example of how I use title_height:

(note: the border on top comes from another change on my fork, ignore it)",True,{}
i3/i3,https://github.com/i3/i3,4287,2020-12-20T12:21:06Z,2020-12-20T15:39:11Z,2020-12-20T15:58:24Z,CLOSED,False,126,29,15,https://github.com/ShimmerGlass,Add title_height and bar { height } config parameters,2,[],https://github.com/i3/i3/pull/4287,https://github.com/Airblader,2,https://github.com/i3/i3/pull/4287#issuecomment-748612889,"This adds config options to set the height of the title window decoration and/or i3bar height.
With this users can add a bit more padding around the bar/title text, which can look better, depending on taste.
The defaults are of course kept as-is, so the default appearance won't change unless these parameters are specified.
Example of how I use title_height:

(note: the border on top comes from another change on my fork, ignore it)","For the bar height there is #3721 which discusses (and accepts) a different approach for setting the bar height, not the one implemented here (or in i3-gaps). That feature is marked accepted due to the (long-term) plan of integrating i3-gaps, but the same does not apply to something like title_height, so let's please remove that from this PR and open an issue for it instead to discuss it first.
Do you want to change this PR to the implementation of bar {height} discussed in that issue?",True,{}
i3/i3,https://github.com/i3/i3,4287,2020-12-20T12:21:06Z,2020-12-20T15:39:11Z,2020-12-20T15:58:24Z,CLOSED,False,126,29,15,https://github.com/ShimmerGlass,Add title_height and bar { height } config parameters,2,[],https://github.com/i3/i3/pull/4287,https://github.com/ShimmerGlass,3,https://github.com/i3/i3/pull/4287#issuecomment-748623577,"This adds config options to set the height of the title window decoration and/or i3bar height.
With this users can add a bit more padding around the bar/title text, which can look better, depending on taste.
The defaults are of course kept as-is, so the default appearance won't change unless these parameters are specified.
Example of how I use title_height:

(note: the border on top comes from another change on my fork, ignore it)","@Airblader, I wasn't aware of this issue. I asked a few questions there, and I am closing this for #4288, which I am ok to change to a padding setting once the discussion on the issue is resolved.
I will open an issue for the title height setting specifically, along with a draft PR to support it.",True,{}
i3/i3,https://github.com/i3/i3,4287,2020-12-20T12:21:06Z,2020-12-20T15:39:11Z,2020-12-20T15:58:24Z,CLOSED,False,126,29,15,https://github.com/ShimmerGlass,Add title_height and bar { height } config parameters,2,[],https://github.com/i3/i3/pull/4287,https://github.com/ShimmerGlass,4,https://github.com/i3/i3/pull/4287#issuecomment-748625842,"This adds config options to set the height of the title window decoration and/or i3bar height.
With this users can add a bit more padding around the bar/title text, which can look better, depending on taste.
The defaults are of course kept as-is, so the default appearance won't change unless these parameters are specified.
Example of how I use title_height:

(note: the border on top comes from another change on my fork, ignore it)","Draft: #4289
Issue: #4290",True,{}
i3/i3,https://github.com/i3/i3,4288,2020-12-20T15:22:36Z,,2021-09-09T07:33:19Z,OPEN,False,88,14,10,https://github.com/ShimmerGlass,Support custom padding for i3bar,1,[],https://github.com/i3/i3/pull/4288,https://github.com/ShimmerGlass,1,https://github.com/i3/i3/pull/4288,,,True,{}
i3/i3,https://github.com/i3/i3,4288,2020-12-20T15:22:36Z,,2021-09-09T07:33:19Z,OPEN,False,88,14,10,https://github.com/ShimmerGlass,Support custom padding for i3bar,1,[],https://github.com/i3/i3/pull/4288,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/4288#issuecomment-915838136,,This would resolve #3721 ?,True,{}
i3/i3,https://github.com/i3/i3,4289,2020-12-20T15:42:45Z,2021-09-09T07:34:00Z,2021-09-09T07:34:00Z,CLOSED,False,38,15,9,https://github.com/ShimmerGlass,Support custom padding/height for window titles,1,[],https://github.com/i3/i3/pull/4289,https://github.com/ShimmerGlass,1,https://github.com/i3/i3/pull/4289,,,True,{}
i3/i3,https://github.com/i3/i3,4289,2020-12-20T15:42:45Z,2021-09-09T07:34:00Z,2021-09-09T07:34:00Z,CLOSED,False,38,15,9,https://github.com/ShimmerGlass,Support custom padding/height for window titles,1,[],https://github.com/i3/i3/pull/4289,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/4289#issuecomment-915837176,,@Airblader According to #4290 (comment) do we keep or close this PR?,True,{}
i3/i3,https://github.com/i3/i3,4289,2020-12-20T15:42:45Z,2021-09-09T07:34:00Z,2021-09-09T07:34:00Z,CLOSED,False,38,15,9,https://github.com/ShimmerGlass,Support custom padding/height for window titles,1,[],https://github.com/i3/i3/pull/4289,https://github.com/Airblader,3,https://github.com/i3/i3/pull/4289#issuecomment-915838566,,Let's close the PR for now but keep the issue open. If we decide to add this we can always reopen the PR.,True,{'THUMBS_UP': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,4295,2020-12-29T15:54:15Z,2020-12-29T19:06:00Z,2020-12-29T19:06:03Z,MERGED,True,4,0,1,https://github.com/stapelberg,build.i3wm.org: disallow search engine indexing,1,[],https://github.com/i3/i3/pull/4295,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4295,related to i3/i3.github.io#41,related to i3/i3.github.io#41,True,{}
i3/i3,https://github.com/i3/i3,4296,2020-12-29T16:13:47Z,2020-12-29T16:38:00Z,2020-12-29T18:52:37Z,MERGED,True,1,0,1,https://github.com/stapelberg,check-spelling: exempt typo until upstream merges the fix,1,[],https://github.com/i3/i3/pull/4296,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4296,This must have come in with a new version of clang.,This must have come in with a new version of clang.,True,{}
i3/i3,https://github.com/i3/i3,4297,2020-12-29T17:51:24Z,2020-12-30T19:17:33Z,2021-01-03T00:17:06Z,MERGED,True,31,3,3,https://github.com/Airblader,[Proposal] Update CONTRIBUTING and issue template(s) for feature requests,1,[],https://github.com/i3/i3/pull/4297,https://github.com/Airblader,1,https://github.com/i3/i3/pull/4297,"Once we agreed on the approach for this, there are further points such as

 Update this in the project goals on the website's index page? (i3/i3.github.io#101)
 Extend i3bot to be a bit smarter about replies for this (tbd by @stapelberg)
 I'd still like to make this a bit more ""public"" by publishing this move on, say, reddit. (tbd by @Airblader)","Once we agreed on the approach for this, there are further points such as

 Update this in the project goals on the website's index page? (i3/i3.github.io#101)
 Extend i3bot to be a bit smarter about replies for this (tbd by @stapelberg)
 I'd still like to make this a bit more ""public"" by publishing this move on, say, reddit. (tbd by @Airblader)",True,{'THUMBS_UP': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,4297,2020-12-29T17:51:24Z,2020-12-30T19:17:33Z,2021-01-03T00:17:06Z,MERGED,True,31,3,3,https://github.com/Airblader,[Proposal] Update CONTRIBUTING and issue template(s) for feature requests,1,[],https://github.com/i3/i3/pull/4297,https://github.com/Airblader,2,https://github.com/i3/i3/pull/4297#issuecomment-752215249,"Once we agreed on the approach for this, there are further points such as

 Update this in the project goals on the website's index page? (i3/i3.github.io#101)
 Extend i3bot to be a bit smarter about replies for this (tbd by @stapelberg)
 I'd still like to make this a bit more ""public"" by publishing this move on, say, reddit. (tbd by @Airblader)",@stapelberg Would you be able to take care of i3bot (afterwards)? Go isn't exactly my language… :-),True,{}
i3/i3,https://github.com/i3/i3,4297,2020-12-29T17:51:24Z,2020-12-30T19:17:33Z,2021-01-03T00:17:06Z,MERGED,True,31,3,3,https://github.com/Airblader,[Proposal] Update CONTRIBUTING and issue template(s) for feature requests,1,[],https://github.com/i3/i3/pull/4297,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/4297#issuecomment-752215947,"Once we agreed on the approach for this, there are further points such as

 Update this in the project goals on the website's index page? (i3/i3.github.io#101)
 Extend i3bot to be a bit smarter about replies for this (tbd by @stapelberg)
 I'd still like to make this a bit more ""public"" by publishing this move on, say, reddit. (tbd by @Airblader)","@stapelberg Would you be able to take care of i3bot (afterwards)? Go isn't exactly my language… :-)

Yes, just let me know what needs to be changed precisely.",True,{}
i3/i3,https://github.com/i3/i3,4297,2020-12-29T17:51:24Z,2020-12-30T19:17:33Z,2021-01-03T00:17:06Z,MERGED,True,31,3,3,https://github.com/Airblader,[Proposal] Update CONTRIBUTING and issue template(s) for feature requests,1,[],https://github.com/i3/i3/pull/4297,https://github.com/Airblader,4,https://github.com/i3/i3/pull/4297#issuecomment-752218353,"Once we agreed on the approach for this, there are further points such as

 Update this in the project goals on the website's index page? (i3/i3.github.io#101)
 Extend i3bot to be a bit smarter about replies for this (tbd by @stapelberg)
 I'd still like to make this a bit more ""public"" by publishing this move on, say, reddit. (tbd by @Airblader)","I would propose something like whenever the issue is determined to be a feature request, reply with something like

Please note that new features which require additional configuration will usually not be considered. We are happy with the feature set of i3 and want to focus in fixing bugs instead. We do accept feature requests, however, and will evaluate whether the added benefit (clearly) outweighs the complexity it adds to i3.",True,{}
i3/i3,https://github.com/i3/i3,4297,2020-12-29T17:51:24Z,2020-12-30T19:17:33Z,2021-01-03T00:17:06Z,MERGED,True,31,3,3,https://github.com/Airblader,[Proposal] Update CONTRIBUTING and issue template(s) for feature requests,1,[],https://github.com/i3/i3/pull/4297,https://github.com/Airblader,5,https://github.com/i3/i3/pull/4297#issuecomment-752218975,"Once we agreed on the approach for this, there are further points such as

 Update this in the project goals on the website's index page? (i3/i3.github.io#101)
 Extend i3bot to be a bit smarter about replies for this (tbd by @stapelberg)
 I'd still like to make this a bit more ""public"" by publishing this move on, say, reddit. (tbd by @Airblader)","… and of course do what @orestisfl suggested, i.e. tag the issue with some (new) tag like ""requires-configuration"" when the checkbox is detected and detected to be checked.",True,{}
i3/i3,https://github.com/i3/i3,4297,2020-12-29T17:51:24Z,2020-12-30T19:17:33Z,2021-01-03T00:17:06Z,MERGED,True,31,3,3,https://github.com/Airblader,[Proposal] Update CONTRIBUTING and issue template(s) for feature requests,1,[],https://github.com/i3/i3/pull/4297,https://github.com/Airblader,6,https://github.com/i3/i3/pull/4297#issuecomment-752729998,"Once we agreed on the approach for this, there are further points such as

 Update this in the project goals on the website's index page? (i3/i3.github.io#101)
 Extend i3bot to be a bit smarter about replies for this (tbd by @stapelberg)
 I'd still like to make this a bit more ""public"" by publishing this move on, say, reddit. (tbd by @Airblader)",I've also posted about this on reddit now: https://www.reddit.com/r/i3wm/comments/kn8pa2/an_update_on_the_future_of_i3/,True,{}
i3/i3,https://github.com/i3/i3,4297,2020-12-29T17:51:24Z,2020-12-30T19:17:33Z,2021-01-03T00:17:06Z,MERGED,True,31,3,3,https://github.com/Airblader,[Proposal] Update CONTRIBUTING and issue template(s) for feature requests,1,[],https://github.com/i3/i3/pull/4297,https://github.com/Airblader,7,https://github.com/i3/i3/pull/4297#issuecomment-752999878,"Once we agreed on the approach for this, there are further points such as

 Update this in the project goals on the website's index page? (i3/i3.github.io#101)
 Extend i3bot to be a bit smarter about replies for this (tbd by @stapelberg)
 I'd still like to make this a bit more ""public"" by publishing this move on, say, reddit. (tbd by @Airblader)",Also to avoid some confusion I've removed the accepted label from all feature requests and replaced it with tentatively_accepted.,True,{}
i3/i3,https://github.com/i3/i3,4299,2020-12-30T19:35:25Z,2020-12-30T22:33:09Z,2021-02-01T20:15:51Z,MERGED,True,21,17,2,https://github.com/abeutot,Fix workspace assignment on screen change,1,[],https://github.com/i3/i3/pull/4299,https://github.com/abeutot,1,https://github.com/i3/i3/pull/4299,Fixes #4261,Fixes #4261,True,{'THUMBS_UP': ['https://github.com/Nanoseb']}
i3/i3,https://github.com/i3/i3,4299,2020-12-30T19:35:25Z,2020-12-30T22:33:09Z,2021-02-01T20:15:51Z,MERGED,True,21,17,2,https://github.com/abeutot,Fix workspace assignment on screen change,1,[],https://github.com/i3/i3/pull/4299,https://github.com/abeutot,2,https://github.com/i3/i3/pull/4299#issuecomment-752754132,Fixes #4261,Also I added an entry in the RELEASE-notes as required by the contribution guide. I don't know if my formatting is correct.,True,{}
i3/i3,https://github.com/i3/i3,4299,2020-12-30T19:35:25Z,2020-12-30T22:33:09Z,2021-02-01T20:15:51Z,MERGED,True,21,17,2,https://github.com/abeutot,Fix workspace assignment on screen change,1,[],https://github.com/i3/i3/pull/4299,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/4299#issuecomment-752759868,Fixes #4261,Can you rebase with next and make everything one single commit please? The diff is broken right now.,True,{}
i3/i3,https://github.com/i3/i3,4299,2020-12-30T19:35:25Z,2020-12-30T22:33:09Z,2021-02-01T20:15:51Z,MERGED,True,21,17,2,https://github.com/abeutot,Fix workspace assignment on screen change,1,[],https://github.com/i3/i3/pull/4299,https://github.com/wlhlm,4,https://github.com/i3/i3/pull/4299#issuecomment-752765793,Fixes #4261,"As this fixes a regression, I think a testcase would be appropriate to include here so this won't happen again.",True,{}
i3/i3,https://github.com/i3/i3,4299,2020-12-30T19:35:25Z,2020-12-30T22:33:09Z,2021-02-01T20:15:51Z,MERGED,True,21,17,2,https://github.com/abeutot,Fix workspace assignment on screen change,1,[],https://github.com/i3/i3/pull/4299,https://github.com/abeutot,5,https://github.com/i3/i3/pull/4299#issuecomment-752769545,Fixes #4261,"Can you rebase with next and make everything one single commit please? The diff is broken right now.

Done.",True,{}
i3/i3,https://github.com/i3/i3,4299,2020-12-30T19:35:25Z,2020-12-30T22:33:09Z,2021-02-01T20:15:51Z,MERGED,True,21,17,2,https://github.com/abeutot,Fix workspace assignment on screen change,1,[],https://github.com/i3/i3/pull/4299,https://github.com/orestisfl,6,https://github.com/i3/i3/pull/4299#issuecomment-752770324,Fixes #4261,@wlhlm We don't have any randr tests unfortunately and I am not sure if it is possible to emulate reliably this in our test suite.,True,{}
i3/i3,https://github.com/i3/i3,4299,2020-12-30T19:35:25Z,2020-12-30T22:33:09Z,2021-02-01T20:15:51Z,MERGED,True,21,17,2,https://github.com/abeutot,Fix workspace assignment on screen change,1,[],https://github.com/i3/i3/pull/4299,https://github.com/orestisfl,7,https://github.com/i3/i3/pull/4299#issuecomment-752770730,Fixes #4261,@abeutot there are still 6 commits to be merged here. One way to fix this is to get the sha of the commit (81c7b2d) git reset --hard origin/next and then git cherry-pick 81c7b2dd66630ab515d91722ccba453c4517473a.,True,{}
i3/i3,https://github.com/i3/i3,4299,2020-12-30T19:35:25Z,2020-12-30T22:33:09Z,2021-02-01T20:15:51Z,MERGED,True,21,17,2,https://github.com/abeutot,Fix workspace assignment on screen change,1,[],https://github.com/i3/i3/pull/4299,https://github.com/abeutot,8,https://github.com/i3/i3/pull/4299#issuecomment-752771813,Fixes #4261,"@abeutot there are still 6 commits to be merged here. One way to fix this is to get the sha of the commit (81c7b2d) git reset --hard origin/next and then git cherry-pick 81c7b2dd66630ab515d91722ccba453c4517473a.

Oops. My bad. I forgot about the rebase part.",True,{}
i3/i3,https://github.com/i3/i3,4299,2020-12-30T19:35:25Z,2020-12-30T22:33:09Z,2021-02-01T20:15:51Z,MERGED,True,21,17,2,https://github.com/abeutot,Fix workspace assignment on screen change,1,[],https://github.com/i3/i3/pull/4299,https://github.com/orestisfl,9,https://github.com/i3/i3/pull/4299#issuecomment-752778147,Fixes #4261,@stapelberg this is a regression fix,True,{}
i3/i3,https://github.com/i3/i3,4299,2020-12-30T19:35:25Z,2020-12-30T22:33:09Z,2021-02-01T20:15:51Z,MERGED,True,21,17,2,https://github.com/abeutot,Fix workspace assignment on screen change,1,[],https://github.com/i3/i3/pull/4299,https://github.com/orestisfl,10,https://github.com/i3/i3/pull/4299#issuecomment-752778811,Fixes #4261,Introduced new label :),True,{}
i3/i3,https://github.com/i3/i3,4299,2020-12-30T19:35:25Z,2020-12-30T22:33:09Z,2021-02-01T20:15:51Z,MERGED,True,21,17,2,https://github.com/abeutot,Fix workspace assignment on screen change,1,[],https://github.com/i3/i3/pull/4299,https://github.com/abeutot,11,https://github.com/i3/i3/pull/4299#issuecomment-752779515,Fixes #4261,Thanks a lot. I didn't expect to get reviewed this fast :),True,{'HEART': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,4300,2020-12-30T19:39:46Z,2020-12-30T21:09:09Z,2020-12-30T21:09:09Z,MERGED,True,2,17,3,https://github.com/abeutot,Remove unused header file and references to it,1,[],https://github.com/i3/i3/pull/4300,https://github.com/abeutot,1,https://github.com/i3/i3/pull/4300,"Hello,
Found what looks like remainings from the past while looking through the i3 codebase.","Hello,
Found what looks like remainings from the past while looking through the i3 codebase.",True,{}
i3/i3,https://github.com/i3/i3,4305,2021-01-02T20:47:21Z,2021-01-02T22:09:07Z,2021-02-01T20:15:42Z,MERGED,True,2,1,2,https://github.com/orestisfl,Comment-out i3-dmenu-desktop bindcode,1,[],https://github.com/i3/i3/pull/4305,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4305,Fixes #4304,Fixes #4304,True,{}
i3/i3,https://github.com/i3/i3,4307,2021-01-03T00:13:03Z,2021-01-03T07:18:04Z,2021-01-03T07:18:07Z,MERGED,True,0,2,2,https://github.com/orestisfl,"Revert ""Clear pixmap to black before starting to draw""",1,[],https://github.com/i3/i3/pull/4307,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4307,"Reverts #4280
Adds black bars in my configuration:
before

after

Re-opened #3481
CC @tbgiles","Reverts #4280
Adds black bars in my configuration:
before

after

Re-opened #3481
CC @tbgiles",True,{}
i3/i3,https://github.com/i3/i3,4307,2021-01-03T00:13:03Z,2021-01-03T07:18:04Z,2021-01-03T07:18:07Z,MERGED,True,0,2,2,https://github.com/orestisfl,"Revert ""Clear pixmap to black before starting to draw""",1,[],https://github.com/i3/i3/pull/4307,https://github.com/tbgiles,2,https://github.com/i3/i3/pull/4307#issuecomment-753555051,"Reverts #4280
Adds black bars in my configuration:
before

after

Re-opened #3481
CC @tbgiles","Looks like the borders are being drawn before the background, I can take another look",True,{}
i3/i3,https://github.com/i3/i3,4308,2021-01-03T03:26:03Z,2021-01-03T08:36:44Z,2021-01-25T16:59:49Z,MERGED,True,4,1,1,https://github.com/tbgiles,Clear framebuffer before drawing borders,6,[],https://github.com/i3/i3/pull/4308,https://github.com/tbgiles,1,https://github.com/i3/i3/pull/4308,"The framebuffer clear was done too late, causing window borders to be cleared too.
This PR fixes this by clearing the framebuffer before the call to draw the borders, instead of every time a pixmap copy happens.
Should mean that PR #4307 is no longer required.
Closes #3481
CC: @orestisfl","The framebuffer clear was done too late, causing window borders to be cleared too.
This PR fixes this by clearing the framebuffer before the call to draw the borders, instead of every time a pixmap copy happens.
Should mean that PR #4307 is no longer required.
Closes #3481
CC: @orestisfl",True,{}
i3/i3,https://github.com/i3/i3,4308,2021-01-03T03:26:03Z,2021-01-03T08:36:44Z,2021-01-25T16:59:49Z,MERGED,True,4,1,1,https://github.com/tbgiles,Clear framebuffer before drawing borders,6,[],https://github.com/i3/i3/pull/4308,https://github.com/Airblader,2,https://github.com/i3/i3/pull/4308#issuecomment-753579060,"The framebuffer clear was done too late, causing window borders to be cleared too.
This PR fixes this by clearing the framebuffer before the call to draw the borders, instead of every time a pixmap copy happens.
Should mean that PR #4307 is no longer required.
Closes #3481
CC: @orestisfl","We've reverted the original PR. Can you please properly rebase this branch to get rid of the merge commit, squash your commits and make sure the release notes are added again?",True,{'THUMBS_UP': ['https://github.com/tbgiles']}
i3/i3,https://github.com/i3/i3,4308,2021-01-03T03:26:03Z,2021-01-03T08:36:44Z,2021-01-25T16:59:49Z,MERGED,True,4,1,1,https://github.com/tbgiles,Clear framebuffer before drawing borders,6,[],https://github.com/i3/i3/pull/4308,https://github.com/Airblader,3,https://github.com/i3/i3/pull/4308#issuecomment-753586086,"The framebuffer clear was done too late, causing window borders to be cleared too.
This PR fixes this by clearing the framebuffer before the call to draw the borders, instead of every time a pixmap copy happens.
Should mean that PR #4307 is no longer required.
Closes #3481
CC: @orestisfl",@orestisfl Isn't the release notes entry missing now? See my comments above.,True,{}
i3/i3,https://github.com/i3/i3,4308,2021-01-03T03:26:03Z,2021-01-03T08:36:44Z,2021-01-25T16:59:49Z,MERGED,True,4,1,1,https://github.com/tbgiles,Clear framebuffer before drawing borders,6,[],https://github.com/i3/i3/pull/4308,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/4308#issuecomment-753586254,"The framebuffer clear was done too late, causing window borders to be cleared too.
This PR fixes this by clearing the framebuffer before the call to draw the borders, instead of every time a pixmap copy happens.
Should mean that PR #4307 is no longer required.
Closes #3481
CC: @orestisfl","Argh, sorry, just woke up.",True,{}
i3/i3,https://github.com/i3/i3,4308,2021-01-03T03:26:03Z,2021-01-03T08:36:44Z,2021-01-25T16:59:49Z,MERGED,True,4,1,1,https://github.com/tbgiles,Clear framebuffer before drawing borders,6,[],https://github.com/i3/i3/pull/4308,https://github.com/tbgiles,5,https://github.com/i3/i3/pull/4308#issuecomment-753671785,"The framebuffer clear was done too late, causing window borders to be cleared too.
This PR fixes this by clearing the framebuffer before the call to draw the borders, instead of every time a pixmap copy happens.
Should mean that PR #4307 is no longer required.
Closes #3481
CC: @orestisfl","We've reverted the original PR. Can you please properly rebase this branch to get rid of the merge commit, squash your commits and make sure the release notes are added again?

I see this has already been merged in. Will make sure future PR's are submitted as above",True,{'HEART': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,4308,2021-01-03T03:26:03Z,2021-01-03T08:36:44Z,2021-01-25T16:59:49Z,MERGED,True,4,1,1,https://github.com/tbgiles,Clear framebuffer before drawing borders,6,[],https://github.com/i3/i3/pull/4308,https://github.com/orestisfl,6,https://github.com/i3/i3/pull/4308#issuecomment-766555677,"The framebuffer clear was done too late, causing window borders to be cleared too.
This PR fixes this by clearing the framebuffer before the call to draw the borders, instead of every time a pixmap copy happens.
Should mean that PR #4307 is no longer required.
Closes #3481
CC: @orestisfl",Apparently this breaks the title bar when nested containers exist in a tab (e.g. when running split hon a tabbed container). @tbgiles can you reproduce this problem?,True,{}
i3/i3,https://github.com/i3/i3,4308,2021-01-03T03:26:03Z,2021-01-03T08:36:44Z,2021-01-25T16:59:49Z,MERGED,True,4,1,1,https://github.com/tbgiles,Clear framebuffer before drawing borders,6,[],https://github.com/i3/i3/pull/4308,https://github.com/Airblader,7,https://github.com/i3/i3/pull/4308#issuecomment-766593832,"The framebuffer clear was done too late, causing window borders to be cleared too.
This PR fixes this by clearing the framebuffer before the call to draw the borders, instead of every time a pixmap copy happens.
Should mean that PR #4307 is no longer required.
Closes #3481
CC: @orestisfl","I assume you can reproduce this with but not without this PR, @orestisfl? Then we should probably revert and reopen the issue for now.",True,{}
i3/i3,https://github.com/i3/i3,4308,2021-01-03T03:26:03Z,2021-01-03T08:36:44Z,2021-01-25T16:59:49Z,MERGED,True,4,1,1,https://github.com/tbgiles,Clear framebuffer before drawing borders,6,[],https://github.com/i3/i3/pull/4308,https://github.com/tbgiles,8,https://github.com/i3/i3/pull/4308#issuecomment-766959519,"The framebuffer clear was done too late, causing window borders to be cleared too.
This PR fixes this by clearing the framebuffer before the call to draw the borders, instead of every time a pixmap copy happens.
Should mean that PR #4307 is no longer required.
Closes #3481
CC: @orestisfl","I'll see what I can do to patch this and submit a new PR, thanks.",True,{}
i3/i3,https://github.com/i3/i3,4309,2021-01-03T08:48:33Z,2021-01-03T09:26:56Z,2021-01-03T09:27:00Z,MERGED,True,1,0,1,https://github.com/orestisfl,Add release note for framebuffer fix,1,[],https://github.com/i3/i3/pull/4309,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4309,#4308,#4308,True,{}
i3/i3,https://github.com/i3/i3,4311,2021-01-04T11:09:21Z,,2022-01-31T07:05:09Z,OPEN,False,573,222,26,https://github.com/orestisfl,i3bar: Add protocol for workspace buttons,2,[],https://github.com/i3/i3/pull/4311,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4311,"Notes

Adds focus workspace command to handle focusing of workspaces. Alternatively, could be named workspace show.
Examples from #3818 work. jq's --unbuffered must be used for this to work properly. I don't think we can fix this from our side in a portable manner so users will have to make sure their code outputs to stdout without buffering.

TODOs

 Document this, including usage examples
 Include contrib/ script(s)
Workspace JSON parsing:

 Support ""primary"" as output name
 When no ""output"" is given, default to the primary or first output
 Don't exit on parsing errors
 (python script) Fix JSON-parsing related crash when monitor changes


 (python script) Workspace buttons just disappear randomly.
 Release notes with all changes & fixes
 (can be done in separate PR) getline can be used instead of get_buffer everywhere in child.c to fix  #3976
 Separate focus command changes in new commit w/ separate release notes

Python script for debugging
#!/usr/bin/env python
import json
import time
from subprocess import check_output

import i3ipc


def cb(_=None, e=None):
    d = json.loads(check_output([""i3-msg"", ""-t"", ""get_workspaces""]).decode())

    if not any(ws.get(""name"") == ""foo"" for ws in d):
        # foo = {""name"": ""foo"", ""output"": ""whatever""}
        foo = {""name"": ""foo""}
        d.append(foo)

    print(json.dumps(d))


i3 = i3ipc.Connection()
i3.on(i3ipc.Event.WORKSPACE, cb)
i3.on(i3ipc.Event.OUTPUT, cb)
cb()
i3.main()
Issues
Closes #3818 (parent issue)
Fixes #1808
Fixes #2333
Fixes #2617
Fixes #3548","Notes

Adds focus workspace command to handle focusing of workspaces. Alternatively, could be named workspace show.
Examples from #3818 work. jq's --unbuffered must be used for this to work properly. I don't think we can fix this from our side in a portable manner so users will have to make sure their code outputs to stdout without buffering.

TODOs

 Document this, including usage examples
 Include contrib/ script(s)
Workspace JSON parsing:

 Support ""primary"" as output name
 When no ""output"" is given, default to the primary or first output
 Don't exit on parsing errors
 (python script) Fix JSON-parsing related crash when monitor changes


 (python script) Workspace buttons just disappear randomly.
 Release notes with all changes & fixes
 (can be done in separate PR) getline can be used instead of get_buffer everywhere in child.c to fix  #3976
 Separate focus command changes in new commit w/ separate release notes

Python script for debugging
#!/usr/bin/env python
import json
import time
from subprocess import check_output

import i3ipc


def cb(_=None, e=None):
    d = json.loads(check_output([""i3-msg"", ""-t"", ""get_workspaces""]).decode())

    if not any(ws.get(""name"") == ""foo"" for ws in d):
        # foo = {""name"": ""foo"", ""output"": ""whatever""}
        foo = {""name"": ""foo""}
        d.append(foo)

    print(json.dumps(d))


i3 = i3ipc.Connection()
i3.on(i3ipc.Event.WORKSPACE, cb)
i3.on(i3ipc.Event.OUTPUT, cb)
cb()
i3.main()
Issues
Closes #3818 (parent issue)
Fixes #1808
Fixes #2333
Fixes #2617
Fixes #3548",True,{'EYES': ['https://github.com/ammgws']}
i3/i3,https://github.com/i3/i3,4311,2021-01-04T11:09:21Z,,2022-01-31T07:05:09Z,OPEN,False,573,222,26,https://github.com/orestisfl,i3bar: Add protocol for workspace buttons,2,[],https://github.com/i3/i3/pull/4311,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/4311#issuecomment-756147644,"Notes

Adds focus workspace command to handle focusing of workspaces. Alternatively, could be named workspace show.
Examples from #3818 work. jq's --unbuffered must be used for this to work properly. I don't think we can fix this from our side in a portable manner so users will have to make sure their code outputs to stdout without buffering.

TODOs

 Document this, including usage examples
 Include contrib/ script(s)
Workspace JSON parsing:

 Support ""primary"" as output name
 When no ""output"" is given, default to the primary or first output
 Don't exit on parsing errors
 (python script) Fix JSON-parsing related crash when monitor changes


 (python script) Workspace buttons just disappear randomly.
 Release notes with all changes & fixes
 (can be done in separate PR) getline can be used instead of get_buffer everywhere in child.c to fix  #3976
 Separate focus command changes in new commit w/ separate release notes

Python script for debugging
#!/usr/bin/env python
import json
import time
from subprocess import check_output

import i3ipc


def cb(_=None, e=None):
    d = json.loads(check_output([""i3-msg"", ""-t"", ""get_workspaces""]).decode())

    if not any(ws.get(""name"") == ""foo"" for ws in d):
        # foo = {""name"": ""foo"", ""output"": ""whatever""}
        foo = {""name"": ""foo""}
        d.append(foo)

    print(json.dumps(d))


i3 = i3ipc.Connection()
i3.on(i3ipc.Event.WORKSPACE, cb)
i3.on(i3ipc.Event.OUTPUT, cb)
cb()
i3.main()
Issues
Closes #3818 (parent issue)
Fixes #1808
Fixes #2333
Fixes #2617
Fixes #3548","@Airblader without an in-depth review, any general comments on this before I invest more time?",True,{}
i3/i3,https://github.com/i3/i3,4311,2021-01-04T11:09:21Z,,2022-01-31T07:05:09Z,OPEN,False,573,222,26,https://github.com/orestisfl,i3bar: Add protocol for workspace buttons,2,[],https://github.com/i3/i3/pull/4311,https://github.com/Airblader,3,https://github.com/i3/i3/pull/4311#issuecomment-756151831,"Notes

Adds focus workspace command to handle focusing of workspaces. Alternatively, could be named workspace show.
Examples from #3818 work. jq's --unbuffered must be used for this to work properly. I don't think we can fix this from our side in a portable manner so users will have to make sure their code outputs to stdout without buffering.

TODOs

 Document this, including usage examples
 Include contrib/ script(s)
Workspace JSON parsing:

 Support ""primary"" as output name
 When no ""output"" is given, default to the primary or first output
 Don't exit on parsing errors
 (python script) Fix JSON-parsing related crash when monitor changes


 (python script) Workspace buttons just disappear randomly.
 Release notes with all changes & fixes
 (can be done in separate PR) getline can be used instead of get_buffer everywhere in child.c to fix  #3976
 Separate focus command changes in new commit w/ separate release notes

Python script for debugging
#!/usr/bin/env python
import json
import time
from subprocess import check_output

import i3ipc


def cb(_=None, e=None):
    d = json.loads(check_output([""i3-msg"", ""-t"", ""get_workspaces""]).decode())

    if not any(ws.get(""name"") == ""foo"" for ws in d):
        # foo = {""name"": ""foo"", ""output"": ""whatever""}
        foo = {""name"": ""foo""}
        d.append(foo)

    print(json.dumps(d))


i3 = i3ipc.Connection()
i3.on(i3ipc.Event.WORKSPACE, cb)
i3.on(i3ipc.Event.OUTPUT, cb)
cb()
i3.main()
Issues
Closes #3818 (parent issue)
Fixes #1808
Fixes #2333
Fixes #2617
Fixes #3548","@orestisfl No, you're good to go ahead from my point of view.",True,{'HEART': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,4311,2021-01-04T11:09:21Z,,2022-01-31T07:05:09Z,OPEN,False,573,222,26,https://github.com/orestisfl,i3bar: Add protocol for workspace buttons,2,[],https://github.com/i3/i3/pull/4311,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/4311#issuecomment-764614418,"Notes

Adds focus workspace command to handle focusing of workspaces. Alternatively, could be named workspace show.
Examples from #3818 work. jq's --unbuffered must be used for this to work properly. I don't think we can fix this from our side in a portable manner so users will have to make sure their code outputs to stdout without buffering.

TODOs

 Document this, including usage examples
 Include contrib/ script(s)
Workspace JSON parsing:

 Support ""primary"" as output name
 When no ""output"" is given, default to the primary or first output
 Don't exit on parsing errors
 (python script) Fix JSON-parsing related crash when monitor changes


 (python script) Workspace buttons just disappear randomly.
 Release notes with all changes & fixes
 (can be done in separate PR) getline can be used instead of get_buffer everywhere in child.c to fix  #3976
 Separate focus command changes in new commit w/ separate release notes

Python script for debugging
#!/usr/bin/env python
import json
import time
from subprocess import check_output

import i3ipc


def cb(_=None, e=None):
    d = json.loads(check_output([""i3-msg"", ""-t"", ""get_workspaces""]).decode())

    if not any(ws.get(""name"") == ""foo"" for ws in d):
        # foo = {""name"": ""foo"", ""output"": ""whatever""}
        foo = {""name"": ""foo""}
        d.append(foo)

    print(json.dumps(d))


i3 = i3ipc.Connection()
i3.on(i3ipc.Event.WORKSPACE, cb)
i3.on(i3ipc.Event.OUTPUT, cb)
cb()
i3.main()
Issues
Closes #3818 (parent issue)
Fixes #1808
Fixes #2333
Fixes #2617
Fixes #3548","I am done changing i3bar's code for this, so first wave of reviewing can start now.",True,{'THUMBS_UP': ['https://github.com/ammgws']}
i3/i3,https://github.com/i3/i3,4311,2021-01-04T11:09:21Z,,2022-01-31T07:05:09Z,OPEN,False,573,222,26,https://github.com/orestisfl,i3bar: Add protocol for workspace buttons,2,[],https://github.com/i3/i3/pull/4311,https://github.com/andersfylling,5,https://github.com/i3/i3/pull/4311#issuecomment-869067844,"Notes

Adds focus workspace command to handle focusing of workspaces. Alternatively, could be named workspace show.
Examples from #3818 work. jq's --unbuffered must be used for this to work properly. I don't think we can fix this from our side in a portable manner so users will have to make sure their code outputs to stdout without buffering.

TODOs

 Document this, including usage examples
 Include contrib/ script(s)
Workspace JSON parsing:

 Support ""primary"" as output name
 When no ""output"" is given, default to the primary or first output
 Don't exit on parsing errors
 (python script) Fix JSON-parsing related crash when monitor changes


 (python script) Workspace buttons just disappear randomly.
 Release notes with all changes & fixes
 (can be done in separate PR) getline can be used instead of get_buffer everywhere in child.c to fix  #3976
 Separate focus command changes in new commit w/ separate release notes

Python script for debugging
#!/usr/bin/env python
import json
import time
from subprocess import check_output

import i3ipc


def cb(_=None, e=None):
    d = json.loads(check_output([""i3-msg"", ""-t"", ""get_workspaces""]).decode())

    if not any(ws.get(""name"") == ""foo"" for ws in d):
        # foo = {""name"": ""foo"", ""output"": ""whatever""}
        foo = {""name"": ""foo""}
        d.append(foo)

    print(json.dumps(d))


i3 = i3ipc.Connection()
i3.on(i3ipc.Event.WORKSPACE, cb)
i3.on(i3ipc.Event.OUTPUT, cb)
cb()
i3.main()
Issues
Closes #3818 (parent issue)
Fixes #1808
Fixes #2333
Fixes #2617
Fixes #3548","@orestisfl maybe marking the PR as ready, instead of draft, would make people aware it's ready for review 👍",True,"{'THUMBS_UP': ['https://github.com/ammgws', 'https://github.com/ymolists']}"
i3/i3,https://github.com/i3/i3,4311,2021-01-04T11:09:21Z,,2022-01-31T07:05:09Z,OPEN,False,573,222,26,https://github.com/orestisfl,i3bar: Add protocol for workspace buttons,2,[],https://github.com/i3/i3/pull/4311,https://github.com/ymolists,6,https://github.com/i3/i3/pull/4311#issuecomment-970246030,"Notes

Adds focus workspace command to handle focusing of workspaces. Alternatively, could be named workspace show.
Examples from #3818 work. jq's --unbuffered must be used for this to work properly. I don't think we can fix this from our side in a portable manner so users will have to make sure their code outputs to stdout without buffering.

TODOs

 Document this, including usage examples
 Include contrib/ script(s)
Workspace JSON parsing:

 Support ""primary"" as output name
 When no ""output"" is given, default to the primary or first output
 Don't exit on parsing errors
 (python script) Fix JSON-parsing related crash when monitor changes


 (python script) Workspace buttons just disappear randomly.
 Release notes with all changes & fixes
 (can be done in separate PR) getline can be used instead of get_buffer everywhere in child.c to fix  #3976
 Separate focus command changes in new commit w/ separate release notes

Python script for debugging
#!/usr/bin/env python
import json
import time
from subprocess import check_output

import i3ipc


def cb(_=None, e=None):
    d = json.loads(check_output([""i3-msg"", ""-t"", ""get_workspaces""]).decode())

    if not any(ws.get(""name"") == ""foo"" for ws in d):
        # foo = {""name"": ""foo"", ""output"": ""whatever""}
        foo = {""name"": ""foo""}
        d.append(foo)

    print(json.dumps(d))


i3 = i3ipc.Connection()
i3.on(i3ipc.Event.WORKSPACE, cb)
i3.on(i3ipc.Event.OUTPUT, cb)
cb()
i3.main()
Issues
Closes #3818 (parent issue)
Fixes #1808
Fixes #2333
Fixes #2617
Fixes #3548","@orestisfl  Thank you so much for your great efforts. I hope you find the energy and time to finish this to the completion with everything that is happening these days.
If not i hope there is someone out thee that is able to move this forward ? :-)",True,{'THUMBS_UP': ['https://github.com/ammgws']}
i3/i3,https://github.com/i3/i3,4311,2021-01-04T11:09:21Z,,2022-01-31T07:05:09Z,OPEN,False,573,222,26,https://github.com/orestisfl,i3bar: Add protocol for workspace buttons,2,[],https://github.com/i3/i3/pull/4311,https://github.com/orestisfl,7,https://github.com/i3/i3/pull/4311#issuecomment-970248019,"Notes

Adds focus workspace command to handle focusing of workspaces. Alternatively, could be named workspace show.
Examples from #3818 work. jq's --unbuffered must be used for this to work properly. I don't think we can fix this from our side in a portable manner so users will have to make sure their code outputs to stdout without buffering.

TODOs

 Document this, including usage examples
 Include contrib/ script(s)
Workspace JSON parsing:

 Support ""primary"" as output name
 When no ""output"" is given, default to the primary or first output
 Don't exit on parsing errors
 (python script) Fix JSON-parsing related crash when monitor changes


 (python script) Workspace buttons just disappear randomly.
 Release notes with all changes & fixes
 (can be done in separate PR) getline can be used instead of get_buffer everywhere in child.c to fix  #3976
 Separate focus command changes in new commit w/ separate release notes

Python script for debugging
#!/usr/bin/env python
import json
import time
from subprocess import check_output

import i3ipc


def cb(_=None, e=None):
    d = json.loads(check_output([""i3-msg"", ""-t"", ""get_workspaces""]).decode())

    if not any(ws.get(""name"") == ""foo"" for ws in d):
        # foo = {""name"": ""foo"", ""output"": ""whatever""}
        foo = {""name"": ""foo""}
        d.append(foo)

    print(json.dumps(d))


i3 = i3ipc.Connection()
i3.on(i3ipc.Event.WORKSPACE, cb)
i3.on(i3ipc.Event.OUTPUT, cb)
cb()
i3.main()
Issues
Closes #3818 (parent issue)
Fixes #1808
Fixes #2333
Fixes #2617
Fixes #3548",I started working on this again recently and I'll probably be able to continue this December.,True,"{'HEART': ['https://github.com/ymolists', 'https://github.com/crccw'], 'THUMBS_UP': ['https://github.com/ammgws']}"
i3/i3,https://github.com/i3/i3,4311,2021-01-04T11:09:21Z,,2022-01-31T07:05:09Z,OPEN,False,573,222,26,https://github.com/orestisfl,i3bar: Add protocol for workspace buttons,2,[],https://github.com/i3/i3/pull/4311,https://github.com/ammgws,8,https://github.com/i3/i3/pull/4311#issuecomment-1025273314,"Notes

Adds focus workspace command to handle focusing of workspaces. Alternatively, could be named workspace show.
Examples from #3818 work. jq's --unbuffered must be used for this to work properly. I don't think we can fix this from our side in a portable manner so users will have to make sure their code outputs to stdout without buffering.

TODOs

 Document this, including usage examples
 Include contrib/ script(s)
Workspace JSON parsing:

 Support ""primary"" as output name
 When no ""output"" is given, default to the primary or first output
 Don't exit on parsing errors
 (python script) Fix JSON-parsing related crash when monitor changes


 (python script) Workspace buttons just disappear randomly.
 Release notes with all changes & fixes
 (can be done in separate PR) getline can be used instead of get_buffer everywhere in child.c to fix  #3976
 Separate focus command changes in new commit w/ separate release notes

Python script for debugging
#!/usr/bin/env python
import json
import time
from subprocess import check_output

import i3ipc


def cb(_=None, e=None):
    d = json.loads(check_output([""i3-msg"", ""-t"", ""get_workspaces""]).decode())

    if not any(ws.get(""name"") == ""foo"" for ws in d):
        # foo = {""name"": ""foo"", ""output"": ""whatever""}
        foo = {""name"": ""foo""}
        d.append(foo)

    print(json.dumps(d))


i3 = i3ipc.Connection()
i3.on(i3ipc.Event.WORKSPACE, cb)
i3.on(i3ipc.Event.OUTPUT, cb)
cb()
i3.main()
Issues
Closes #3818 (parent issue)
Fixes #1808
Fixes #2333
Fixes #2617
Fixes #3548","Since the only thing left seems to be documentation, has anyone been daily driving this without issues?",True,{}
i3/i3,https://github.com/i3/i3,4311,2021-01-04T11:09:21Z,,2022-01-31T07:05:09Z,OPEN,False,573,222,26,https://github.com/orestisfl,i3bar: Add protocol for workspace buttons,2,[],https://github.com/i3/i3/pull/4311,https://github.com/orestisfl,9,https://github.com/i3/i3/pull/4311#issuecomment-1025437223,"Notes

Adds focus workspace command to handle focusing of workspaces. Alternatively, could be named workspace show.
Examples from #3818 work. jq's --unbuffered must be used for this to work properly. I don't think we can fix this from our side in a portable manner so users will have to make sure their code outputs to stdout without buffering.

TODOs

 Document this, including usage examples
 Include contrib/ script(s)
Workspace JSON parsing:

 Support ""primary"" as output name
 When no ""output"" is given, default to the primary or first output
 Don't exit on parsing errors
 (python script) Fix JSON-parsing related crash when monitor changes


 (python script) Workspace buttons just disappear randomly.
 Release notes with all changes & fixes
 (can be done in separate PR) getline can be used instead of get_buffer everywhere in child.c to fix  #3976
 Separate focus command changes in new commit w/ separate release notes

Python script for debugging
#!/usr/bin/env python
import json
import time
from subprocess import check_output

import i3ipc


def cb(_=None, e=None):
    d = json.loads(check_output([""i3-msg"", ""-t"", ""get_workspaces""]).decode())

    if not any(ws.get(""name"") == ""foo"" for ws in d):
        # foo = {""name"": ""foo"", ""output"": ""whatever""}
        foo = {""name"": ""foo""}
        d.append(foo)

    print(json.dumps(d))


i3 = i3ipc.Connection()
i3.on(i3ipc.Event.WORKSPACE, cb)
i3.on(i3ipc.Event.OUTPUT, cb)
cb()
i3.main()
Issues
Closes #3818 (parent issue)
Fixes #1808
Fixes #2333
Fixes #2617
Fixes #3548","Since the only thing left seems to be documentation, has anyone been daily driving this without issues?

It's not only documentation, there were some problems with this code.
I'll have to find some more time to work on this.",True,{'HEART': ['https://github.com/renantmagalhaes']}
i3/i3,https://github.com/i3/i3,4315,2021-01-12T07:45:15Z,2021-01-12T08:10:23Z,2021-01-12T08:10:29Z,MERGED,True,29,8,5,https://github.com/orestisfl,I3bar fixes,3,[],https://github.com/i3/i3/pull/4315,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4315,Extracted from #4311,Extracted from #4311,True,{}
i3/i3,https://github.com/i3/i3,4321,2021-01-15T15:18:00Z,2021-01-20T20:40:25Z,2021-01-20T20:40:30Z,MERGED,True,276,153,18,https://github.com/stapelberg,i3-dump-log -f: switch from pthreads to UNIX sockets,2,[],https://github.com/i3/i3/pull/4321,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4321,Fixes #4117,Fixes #4117,True,{}
i3/i3,https://github.com/i3/i3,4321,2021-01-15T15:18:00Z,2021-01-20T20:40:25Z,2021-01-20T20:40:30Z,MERGED,True,276,153,18,https://github.com/stapelberg,i3-dump-log -f: switch from pthreads to UNIX sockets,2,[],https://github.com/i3/i3/pull/4321,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/4321#issuecomment-761021394,Fixes #4117,"I'll try to review this during the weekend
…
On Fri, Jan 15, 2021, 16:27 Ingo Bürk ***@***.***> wrote:
 ***@***.**** approved this pull request.

 This isn't really my area of expertise, so all I can say is ""looks OK to
 me"" :-)

 —
 You are receiving this because you commented.
 Reply to this email directly, view it on GitHub
 <#4321 (review)>, or
 unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ABMCZPVQCSPDMQW7Q7TRNS3S2BNF3ANCNFSM4WEGKUNQ>
 .",True,{}
i3/i3,https://github.com/i3/i3,4321,2021-01-15T15:18:00Z,2021-01-20T20:40:25Z,2021-01-20T20:40:30Z,MERGED,True,276,153,18,https://github.com/stapelberg,i3-dump-log -f: switch from pthreads to UNIX sockets,2,[],https://github.com/i3/i3/pull/4321,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/4321#issuecomment-761839802,Fixes #4117,PTAL,True,{}
i3/i3,https://github.com/i3/i3,4321,2021-01-15T15:18:00Z,2021-01-20T20:40:25Z,2021-01-20T20:40:30Z,MERGED,True,276,153,18,https://github.com/stapelberg,i3-dump-log -f: switch from pthreads to UNIX sockets,2,[],https://github.com/i3/i3/pull/4321,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/4321#issuecomment-763155625,Fixes #4117,"To avoid exiting with an error, here is a simple patch:
diff --git a/src/log.c b/src/log.c
index 8ef9914dc..31f913ab0 100644
--- a/src/log.c
+++ b/src/log.c
@@ -406,11 +406,17 @@ void log_new_client(EV_P_ struct ev_io *w, int revents) {
 }
 
 void log_broadcast_to_clients(const char *message, size_t len) {
-    log_client *current;
-    TAILQ_FOREACH (current, &log_clients, clients) {
-        /* XXX: In case slow connections turn out to be a problem here */
-        /* (unlikely as long as i3-dump-log is the only consumer), introduce */
-        /* buffering, similar to the IPC interface. */
-        swrite(current->fd, message, len);
+    log_client *current = TAILQ_FIRST(&log_clients);
+    while(current != TAILQ_END(&log_clients)){
+        /* XXX: In case slow connections turn out to be a problem here
+         * (unlikely as long as i3-dump-log is the only consumer), introduce
+         * buffering, similar to the IPC interface. */
+        ssize_t n = writeall(current->fd, message, len);
+        log_client *previous = current;
+        current = TAILQ_NEXT(current, clients);
+        if (n < 0) {
+            TAILQ_REMOVE(&log_clients, previous, clients);
+            free(previous);
+        }
     }
 }
It doesn't make sense to crash i3 because some i3-dump-log client is misbehaving anyway.",True,{}
i3/i3,https://github.com/i3/i3,4321,2021-01-15T15:18:00Z,2021-01-20T20:40:25Z,2021-01-20T20:40:30Z,MERGED,True,276,153,18,https://github.com/stapelberg,i3-dump-log -f: switch from pthreads to UNIX sockets,2,[],https://github.com/i3/i3/pull/4321,https://github.com/stapelberg,5,https://github.com/i3/i3/pull/4321#issuecomment-763430199,Fixes #4117,"To avoid exiting with an error, here is a simple patch:

Thanks, merged!",True,{}
i3/i3,https://github.com/i3/i3,4321,2021-01-15T15:18:00Z,2021-01-20T20:40:25Z,2021-01-20T20:40:30Z,MERGED,True,276,153,18,https://github.com/stapelberg,i3-dump-log -f: switch from pthreads to UNIX sockets,2,[],https://github.com/i3/i3/pull/4321,https://github.com/orestisfl,6,https://github.com/i3/i3/pull/4321#issuecomment-763493334,Fixes #4117,Oh one last thing: update the release notes,True,{}
i3/i3,https://github.com/i3/i3,4321,2021-01-15T15:18:00Z,2021-01-20T20:40:25Z,2021-01-20T20:40:30Z,MERGED,True,276,153,18,https://github.com/stapelberg,i3-dump-log -f: switch from pthreads to UNIX sockets,2,[],https://github.com/i3/i3/pull/4321,https://github.com/stapelberg,7,https://github.com/i3/i3/pull/4321#issuecomment-763805547,Fixes #4117,"Oh one last thing: update the release notes

Done!",True,{}
i3/i3,https://github.com/i3/i3,4321,2021-01-15T15:18:00Z,2021-01-20T20:40:25Z,2021-01-20T20:40:30Z,MERGED,True,276,153,18,https://github.com/stapelberg,i3-dump-log -f: switch from pthreads to UNIX sockets,2,[],https://github.com/i3/i3/pull/4321,https://github.com/orestisfl,8,https://github.com/i3/i3/pull/4321#issuecomment-763811177,Fixes #4117,"Ok, feel free to squash merge (to 2 commits I guess) :)",True,{}
i3/i3,https://github.com/i3/i3,4322,2021-01-15T22:33:37Z,2021-01-16T23:52:38Z,2021-01-16T23:52:41Z,MERGED,True,4,1,2,https://github.com/orestisfl,i3bar log version & correct exit code,2,[],https://github.com/i3/i3/pull/4322,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4322,,,True,{}
i3/i3,https://github.com/i3/i3,4330,2021-01-25T07:14:12Z,2021-01-26T09:37:50Z,2021-01-26T09:42:51Z,MERGED,True,0,5,2,https://github.com/orestisfl,"Revert ""Clear framebuffer before drawing borders (#4308)""",1,[],https://github.com/i3/i3/pull/4330,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4330,"This reverts commit 057a635.
As discussed in #4308","This reverts commit 057a635.
As discussed in #4308",True,{}
i3/i3,https://github.com/i3/i3,4331,2021-01-27T21:06:38Z,2021-01-29T15:20:16Z,2021-02-01T20:16:25Z,MERGED,True,3,2,3,https://github.com/ImranVirani, Properly quote rofi call in i3 config,1,[],https://github.com/i3/i3/pull/4331,https://github.com/ImranVirani,1,https://github.com/i3/i3/pull/4331,,,True,{}
i3/i3,https://github.com/i3/i3,4331,2021-01-27T21:06:38Z,2021-01-29T15:20:16Z,2021-02-01T20:16:25Z,MERGED,True,3,2,3,https://github.com/ImranVirani, Properly quote rofi call in i3 config,1,[],https://github.com/i3/i3/pull/4331,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/4331#issuecomment-768614352,,What error do you get? It works fine for me.,True,{}
i3/i3,https://github.com/i3/i3,4331,2021-01-27T21:06:38Z,2021-01-29T15:20:16Z,2021-02-01T20:16:25Z,MERGED,True,3,2,3,https://github.com/ImranVirani, Properly quote rofi call in i3 config,1,[],https://github.com/i3/i3/pull/4331,https://github.com/Airblader,3,https://github.com/i3/i3/pull/4331#issuecomment-768620328,,"Seems fair, though, rofi's manpage also lists it as a comma separated list.",True,{}
i3/i3,https://github.com/i3/i3,4331,2021-01-27T21:06:38Z,2021-01-29T15:20:16Z,2021-02-01T20:16:25Z,MERGED,True,3,2,3,https://github.com/ImranVirani, Properly quote rofi call in i3 config,1,[],https://github.com/i3/i3/pull/4331,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/4331#issuecomment-768622740,,"Seems fair, though, rofi's manpage also lists it as a comma separated list.

Replacing the comma makes the run menu not show up in my machine.",True,{}
i3/i3,https://github.com/i3/i3,4331,2021-01-27T21:06:38Z,2021-01-29T15:20:16Z,2021-02-01T20:16:25Z,MERGED,True,3,2,3,https://github.com/ImranVirani, Properly quote rofi call in i3 config,1,[],https://github.com/i3/i3/pull/4331,https://github.com/Airblader,5,https://github.com/i3/i3/pull/4331#issuecomment-768624437,,Maybe the command needs to be quoted?,True,{}
i3/i3,https://github.com/i3/i3,4331,2021-01-27T21:06:38Z,2021-01-29T15:20:16Z,2021-02-01T20:16:25Z,MERGED,True,3,2,3,https://github.com/ImranVirani, Properly quote rofi call in i3 config,1,[],https://github.com/i3/i3/pull/4331,https://github.com/ImranVirani,6,https://github.com/i3/i3/pull/4331#issuecomment-768628534,,"Exact error is:
ERROR: Received ConfigureNotify for unknown window 0x00600000
ERROR: Received ExposeEvent for unknown window 0x00600000
ERROR: Received ConfigureNotify for unknown window 0x00600000
ERROR: Expected one of these tokens: , '[', 'move', 'exec', 'restart', 'reload', 'shmlog', 'debuglog', 'border', 'layout', 'append_layout', 'workspace', 'focus', 'kill', 'open', 'fullscreen', 'stick', 'split', 'floating', 'mark', 'unmark', 'resize', 'rename', 'nop', 'scratchpad', 'swap', 'title_format', 'mode', 'bar', 'gaps'
ERROR: Your command: exec rofi -modi drun run,-show drun ( There is an underline under -show drun
It also only worked when I changed bindcode to bindsym, and removed the comma. If the comma stays and bindcode is in place of bindsym no errors are shown.",True,{}
i3/i3,https://github.com/i3/i3,4331,2021-01-27T21:06:38Z,2021-01-29T15:20:16Z,2021-02-01T20:16:25Z,MERGED,True,3,2,3,https://github.com/ImranVirani, Properly quote rofi call in i3 config,1,[],https://github.com/i3/i3/pull/4331,https://github.com/ImranVirani,7,https://github.com/i3/i3/pull/4331#issuecomment-768628930,,"It might be distro dependant? I'm using Arctix Linux, which is arch based if that helps.",True,{}
i3/i3,https://github.com/i3/i3,4331,2021-01-27T21:06:38Z,2021-01-29T15:20:16Z,2021-02-01T20:16:25Z,MERGED,True,3,2,3,https://github.com/ImranVirani, Properly quote rofi call in i3 config,1,[],https://github.com/i3/i3/pull/4331,https://github.com/orestisfl,8,https://github.com/i3/i3/pull/4331#issuecomment-768629733,,"Maybe the command needs to be quoted?

In the i3 config file? Yes, and that's how I use it in my config.",True,{}
i3/i3,https://github.com/i3/i3,4331,2021-01-27T21:06:38Z,2021-01-29T15:20:16Z,2021-02-01T20:16:25Z,MERGED,True,3,2,3,https://github.com/ImranVirani, Properly quote rofi call in i3 config,1,[],https://github.com/i3/i3/pull/4331,https://github.com/ImranVirani,9,https://github.com/i3/i3/pull/4331#issuecomment-768630851,,"@orestisfl That might be it, the command is not commented by default in the keycodes file, so it wasn't commented in mine. I just installed i3-gaps today.",True,{}
i3/i3,https://github.com/i3/i3,4331,2021-01-27T21:06:38Z,2021-01-29T15:20:16Z,2021-02-01T20:16:25Z,MERGED,True,3,2,3,https://github.com/ImranVirani, Properly quote rofi call in i3 config,1,[],https://github.com/i3/i3/pull/4331,https://github.com/ImranVirani,10,https://github.com/i3/i3/pull/4331#issuecomment-768654125,,Updated. Thanks for the help.,True,{}
i3/i3,https://github.com/i3/i3,4336,2021-01-31T02:41:08Z,2021-02-07T18:10:24Z,2021-02-07T18:10:24Z,MERGED,True,4,0,2,https://github.com/tbgiles,Clear framebuffer for containers with visible windows,1,[],https://github.com/i3/i3/pull/4336,https://github.com/tbgiles,1,https://github.com/i3/i3/pull/4336,"From #4308, all containers were being cleared, rather than only on ones that will be showing a window. This meant that decorations in tabbed container were being cleared.
This PR clears the framebuffer on containers that contain visible windows (from the docs ""meaning they represent an actual window instead of a split container"").
Closes #3481","From #4308, all containers were being cleared, rather than only on ones that will be showing a window. This meant that decorations in tabbed container were being cleared.
This PR clears the framebuffer on containers that contain visible windows (from the docs ""meaning they represent an actual window instead of a split container"").
Closes #3481",True,{}
i3/i3,https://github.com/i3/i3,4338,2021-02-03T17:39:01Z,2021-02-06T11:52:09Z,2021-10-22T13:01:57Z,MERGED,True,238,60,9,https://github.com/orestisfl,Move workspaces to multiple outputs,2,[],https://github.com/i3/i3/pull/4338,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4338,"Fixes #4337
TODO:

 userguide
 move container should be updated as well for symmetry
 Fix new warnings in ./GENERATED_command_call.h","Fixes #4337
TODO:

 userguide
 move container should be updated as well for symmetry
 Fix new warnings in ./GENERATED_command_call.h",True,{}
i3/i3,https://github.com/i3/i3,4338,2021-02-03T17:39:01Z,2021-02-06T11:52:09Z,2021-10-22T13:01:57Z,MERGED,True,238,60,9,https://github.com/orestisfl,Move workspaces to multiple outputs,2,[],https://github.com/i3/i3/pull/4338,https://github.com/Airblader,2,https://github.com/i3/i3/pull/4338#issuecomment-774218945,"Fixes #4337
TODO:

 userguide
 move container should be updated as well for symmetry
 Fix new warnings in ./GENERATED_command_call.h",@orestisfl Maybe squash once before merging?,True,{}
i3/i3,https://github.com/i3/i3,4338,2021-02-03T17:39:01Z,2021-02-06T11:52:09Z,2021-10-22T13:01:57Z,MERGED,True,238,60,9,https://github.com/orestisfl,Move workspaces to multiple outputs,2,[],https://github.com/i3/i3/pull/4338,https://github.com/vincentbernat,3,https://github.com/i3/i3/pull/4338#issuecomment-949366720,"Fixes #4337
TODO:

 userguide
 move container should be updated as well for symmetry
 Fix new warnings in ./GENERATED_command_call.h",It would be useful to also be able to use focus output next.,True,{}
i3/i3,https://github.com/i3/i3,4338,2021-02-03T17:39:01Z,2021-02-06T11:52:09Z,2021-10-22T13:01:57Z,MERGED,True,238,60,9,https://github.com/orestisfl,Move workspaces to multiple outputs,2,[],https://github.com/i3/i3/pull/4338,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/4338#issuecomment-949610512,"Fixes #4337
TODO:

 userguide
 move container should be updated as well for symmetry
 Fix new warnings in ./GENERATED_command_call.h","Vincent, please open a new issue to track this",True,{}
i3/i3,https://github.com/i3/i3,4345,2021-02-12T22:31:35Z,2021-02-13T08:56:16Z,2021-02-13T08:56:21Z,MERGED,True,29,98,5,https://github.com/stapelberg,travis: push i3 autobuild packages to balto instead of bintray,1,[],https://github.com/i3/i3/pull/4345,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4345,related to #4340,related to #4340,True,{}
i3/i3,https://github.com/i3/i3,4345,2021-02-12T22:31:35Z,2021-02-13T08:56:16Z,2021-02-13T08:56:21Z,MERGED,True,29,98,5,https://github.com/stapelberg,travis: push i3 autobuild packages to balto instead of bintray,1,[],https://github.com/i3/i3/pull/4345,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/4345#issuecomment-778585539,related to #4340,"LGTM, do we have some ""reminder"" for the cleanup part in a few months?

I have added this to issue #4340 and will keep that open until cleanup is implemented.",True,{}
i3/i3,https://github.com/i3/i3,4347,2021-02-13T09:06:19Z,2021-02-13T09:10:59Z,2021-02-13T09:11:02Z,MERGED,True,0,0,1,https://github.com/stapelberg,mark travis/push-balto.sh as executable,1,[],https://github.com/i3/i3/pull/4347,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4347,related to #4340,related to #4340,True,{}
i3/i3,https://github.com/i3/i3,4349,2021-02-16T15:30:21Z,2021-02-16T15:32:18Z,2021-08-10T13:00:16Z,CLOSED,False,5,5,1,https://github.com/smeagolthellama,make vim keybindings actually be vim keybindings,1,[],https://github.com/i3/i3/pull/4349,https://github.com/smeagolthellama,1,https://github.com/i3/i3/pull/4349,"Sadly, this means $mod+h can no longer mean split horizontally, but I moved that to $mod+g, since that is nearby. It should probably be changed to be more consistent.","Sadly, this means $mod+h can no longer mean split horizontally, but I moved that to $mod+g, since that is nearby. It should probably be changed to be more consistent.",True,"{'HEART': ['https://github.com/gerrywastaken'], 'THUMBS_UP': ['https://github.com/gerrywastaken', 'https://github.com/david58']}"
i3/i3,https://github.com/i3/i3,4349,2021-02-16T15:30:21Z,2021-02-16T15:32:18Z,2021-08-10T13:00:16Z,CLOSED,False,5,5,1,https://github.com/smeagolthellama,make vim keybindings actually be vim keybindings,1,[],https://github.com/i3/i3/pull/4349,https://github.com/Airblader,2,https://github.com/i3/i3/pull/4349#issuecomment-779914254,"Sadly, this means $mod+h can no longer mean split horizontally, but I moved that to $mod+g, since that is nearby. It should probably be changed to be more consistent.","Hi,
thanks for the PR! Unfortunately I can't see where this change would be coming from (is there an issue for this?). I don't think we're going to want to change these long-standing defaults, so I'm going to close this.",True,{}
i3/i3,https://github.com/i3/i3,4349,2021-02-16T15:30:21Z,2021-02-16T15:32:18Z,2021-08-10T13:00:16Z,CLOSED,False,5,5,1,https://github.com/smeagolthellama,make vim keybindings actually be vim keybindings,1,[],https://github.com/i3/i3/pull/4349,https://github.com/gerrywastaken,3,https://github.com/i3/i3/pull/4349#issuecomment-896006704,"Sadly, this means $mod+h can no longer mean split horizontally, but I moved that to $mod+g, since that is nearby. It should probably be changed to be more consistent.","Keywords: i3wm default key bindings vim ""hjkl"" ""jkl;""  hjkl jkl; vim key bindings.
This confused me for so long. I didn't realise they were shifted over one key and just assumed that internally i3 was representing the stack in a different way to how it was visually. 😆 🤦
For others, these are the three sections you will want to update:
# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# split in horizontal orientation
bindsym $mod+g split h


I don't think we're going to want to change these long-standing defaults, so I'm going to close this.

Well you say that, but the only time these defaults kick in is when people are first generating their config and after that it's set in stone until they change it. So I believe this really only affects new users. Most of those new users who also want to use vim directions, probably wouldn't expect this:
down to go left
up to go down
right to go up
and left to not work

This is baked into the muscle memory of most vim users and this ""default"" is messing with it. :)
Either way, at least it's simple to change when people realise what's actually happening. Maybe most notice the shift when they first look at the docs. I didn't. 🤦",True,{}
i3/i3,https://github.com/i3/i3,4357,2021-03-01T21:19:11Z,2021-03-05T13:06:59Z,2021-03-05T13:06:59Z,CLOSED,False,3,1,1,https://github.com/mychris,i3bar: Fix font rendering for Caveat font,2,[],https://github.com/i3/i3/pull/4357,https://github.com/mychris,1,https://github.com/i3/i3/pull/4357,"Hi,
I noticed that font rendering for i3bar has some problems with certain fonts.
Using the google font Caveat for instance, the text in the bar is always cut off at the right side. For the workspace buttons as well as for the text in the status bar.
I don't know if this is a regression, or not, since I just tried out the font today and noticed it.
I think this is because the ink extent is not accounted for?

Computes the logical and ink extents of layout.
Logical extents are usually what you want for positioning things.
Note that both extents may have non-zero x and y.
You may want to use those to offset where you render the layout.
Not doing that is a very typical bug that shows up as right-to-left layouts not being correctly positioned in a layout with a set width.

I tried to fix the issue, by adding the ink extent to the text width, when it is calculated. I first tried to adjust the rendering position of the text, but this resulted in text no longer being centered for certain other fonts. I tried the patch with different fonts I used before with i3bar and it seems to work. I am not so experienced with pango, so I am happy for any more insights.
I executed the test suite and it passes:
All tests successful.
Files=252, Tests=3712,  4 wallclock secs ( 0.75 usr +  0.15 sys =  0.90 CPU)
Result: PASS

Do you know of some fonts which gave you trouble in the past? I can do some more experiments to see if my solution is robust enough.
Any comments are welcome.","Hi,
I noticed that font rendering for i3bar has some problems with certain fonts.
Using the google font Caveat for instance, the text in the bar is always cut off at the right side. For the workspace buttons as well as for the text in the status bar.
I don't know if this is a regression, or not, since I just tried out the font today and noticed it.
I think this is because the ink extent is not accounted for?

Computes the logical and ink extents of layout.
Logical extents are usually what you want for positioning things.
Note that both extents may have non-zero x and y.
You may want to use those to offset where you render the layout.
Not doing that is a very typical bug that shows up as right-to-left layouts not being correctly positioned in a layout with a set width.

I tried to fix the issue, by adding the ink extent to the text width, when it is calculated. I first tried to adjust the rendering position of the text, but this resulted in text no longer being centered for certain other fonts. I tried the patch with different fonts I used before with i3bar and it seems to work. I am not so experienced with pango, so I am happy for any more insights.
I executed the test suite and it passes:
All tests successful.
Files=252, Tests=3712,  4 wallclock secs ( 0.75 usr +  0.15 sys =  0.90 CPU)
Result: PASS

Do you know of some fonts which gave you trouble in the past? I can do some more experiments to see if my solution is robust enough.
Any comments are welcome.",True,{}
i3/i3,https://github.com/i3/i3,4357,2021-03-01T21:19:11Z,2021-03-05T13:06:59Z,2021-03-05T13:06:59Z,CLOSED,False,3,1,1,https://github.com/mychris,i3bar: Fix font rendering for Caveat font,2,[],https://github.com/i3/i3/pull/4357,https://github.com/Airblader,2,https://github.com/i3/i3/pull/4357#issuecomment-788738381,"Hi,
I noticed that font rendering for i3bar has some problems with certain fonts.
Using the google font Caveat for instance, the text in the bar is always cut off at the right side. For the workspace buttons as well as for the text in the status bar.
I don't know if this is a regression, or not, since I just tried out the font today and noticed it.
I think this is because the ink extent is not accounted for?

Computes the logical and ink extents of layout.
Logical extents are usually what you want for positioning things.
Note that both extents may have non-zero x and y.
You may want to use those to offset where you render the layout.
Not doing that is a very typical bug that shows up as right-to-left layouts not being correctly positioned in a layout with a set width.

I tried to fix the issue, by adding the ink extent to the text width, when it is calculated. I first tried to adjust the rendering position of the text, but this resulted in text no longer being centered for certain other fonts. I tried the patch with different fonts I used before with i3bar and it seems to work. I am not so experienced with pango, so I am happy for any more insights.
I executed the test suite and it passes:
All tests successful.
Files=252, Tests=3712,  4 wallclock secs ( 0.75 usr +  0.15 sys =  0.90 CPU)
Result: PASS

Do you know of some fonts which gave you trouble in the past? I can do some more experiments to see if my solution is robust enough.
Any comments are welcome.","Thanks for your contribution! Font rendering is frustratingly difficult to get right even with libraries like pango. :-( Unfortunately, the test suite will be of not much use here, but I'm happy to hear you tried it with various fonts already. I don't really know too much about the depths of font rendering, but I'm willing to give this a shot on the next branch and we'll see if it causes issues somewhere.
Let's see if @orestisfl has some thoughts on this maybe.",True,{}
i3/i3,https://github.com/i3/i3,4357,2021-03-01T21:19:11Z,2021-03-05T13:06:59Z,2021-03-05T13:06:59Z,CLOSED,False,3,1,1,https://github.com/mychris,i3bar: Fix font rendering for Caveat font,2,[],https://github.com/i3/i3/pull/4357,https://github.com/Airblader,3,https://github.com/i3/i3/pull/4357#issuecomment-788738851,"Hi,
I noticed that font rendering for i3bar has some problems with certain fonts.
Using the google font Caveat for instance, the text in the bar is always cut off at the right side. For the workspace buttons as well as for the text in the status bar.
I don't know if this is a regression, or not, since I just tried out the font today and noticed it.
I think this is because the ink extent is not accounted for?

Computes the logical and ink extents of layout.
Logical extents are usually what you want for positioning things.
Note that both extents may have non-zero x and y.
You may want to use those to offset where you render the layout.
Not doing that is a very typical bug that shows up as right-to-left layouts not being correctly positioned in a layout with a set width.

I tried to fix the issue, by adding the ink extent to the text width, when it is calculated. I first tried to adjust the rendering position of the text, but this resulted in text no longer being centered for certain other fonts. I tried the patch with different fonts I used before with i3bar and it seems to work. I am not so experienced with pango, so I am happy for any more insights.
I executed the test suite and it passes:
All tests successful.
Files=252, Tests=3712,  4 wallclock secs ( 0.75 usr +  0.15 sys =  0.90 CPU)
Result: PASS

Do you know of some fonts which gave you trouble in the past? I can do some more experiments to see if my solution is robust enough.
Any comments are welcome.","Side note, I haven't dug much into it, but awesome also makes calls to get_pixel_extents.",True,{}
i3/i3,https://github.com/i3/i3,4357,2021-03-01T21:19:11Z,2021-03-05T13:06:59Z,2021-03-05T13:06:59Z,CLOSED,False,3,1,1,https://github.com/mychris,i3bar: Fix font rendering for Caveat font,2,[],https://github.com/i3/i3/pull/4357,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/4357#issuecomment-788808564,"Hi,
I noticed that font rendering for i3bar has some problems with certain fonts.
Using the google font Caveat for instance, the text in the bar is always cut off at the right side. For the workspace buttons as well as for the text in the status bar.
I don't know if this is a regression, or not, since I just tried out the font today and noticed it.
I think this is because the ink extent is not accounted for?

Computes the logical and ink extents of layout.
Logical extents are usually what you want for positioning things.
Note that both extents may have non-zero x and y.
You may want to use those to offset where you render the layout.
Not doing that is a very typical bug that shows up as right-to-left layouts not being correctly positioned in a layout with a set width.

I tried to fix the issue, by adding the ink extent to the text width, when it is calculated. I first tried to adjust the rendering position of the text, but this resulted in text no longer being centered for certain other fonts. I tried the patch with different fonts I used before with i3bar and it seems to work. I am not so experienced with pango, so I am happy for any more insights.
I executed the test suite and it passes:
All tests successful.
Files=252, Tests=3712,  4 wallclock secs ( 0.75 usr +  0.15 sys =  0.90 CPU)
Result: PASS

Do you know of some fonts which gave you trouble in the past? I can do some more experiments to see if my solution is robust enough.
Any comments are welcome.",No thoughts here either,True,{}
i3/i3,https://github.com/i3/i3,4357,2021-03-01T21:19:11Z,2021-03-05T13:06:59Z,2021-03-05T13:06:59Z,CLOSED,False,3,1,1,https://github.com/mychris,i3bar: Fix font rendering for Caveat font,2,[],https://github.com/i3/i3/pull/4357,https://github.com/mychris,5,https://github.com/i3/i3/pull/4357#issuecomment-789067018,"Hi,
I noticed that font rendering for i3bar has some problems with certain fonts.
Using the google font Caveat for instance, the text in the bar is always cut off at the right side. For the workspace buttons as well as for the text in the status bar.
I don't know if this is a regression, or not, since I just tried out the font today and noticed it.
I think this is because the ink extent is not accounted for?

Computes the logical and ink extents of layout.
Logical extents are usually what you want for positioning things.
Note that both extents may have non-zero x and y.
You may want to use those to offset where you render the layout.
Not doing that is a very typical bug that shows up as right-to-left layouts not being correctly positioned in a layout with a set width.

I tried to fix the issue, by adding the ink extent to the text width, when it is calculated. I first tried to adjust the rendering position of the text, but this resulted in text no longer being centered for certain other fonts. I tried the patch with different fonts I used before with i3bar and it seems to work. I am not so experienced with pango, so I am happy for any more insights.
I executed the test suite and it passes:
All tests successful.
Files=252, Tests=3712,  4 wallclock secs ( 0.75 usr +  0.15 sys =  0.90 CPU)
Result: PASS

Do you know of some fonts which gave you trouble in the past? I can do some more experiments to see if my solution is robust enough.
Any comments are welcome.","Thanks for your feedback. Yes, font rendering is indeed more than difficult.
I would be fine with an approach of trying it out and bailing out if there are any complaints, but I found some issues with my suggested solution.
I tried some more fonts, and Akaya Telivigala is worse with my patch than without. Using my patched version and this font, some status text is now elided (is this the right word? I see the ... ellipse instead of the word). As it turns out, the x offset for the ink extent can also be negative (didn't expect that for some reason).
Adding the x offset of the ink extent conditionally feels weird, so I will do some more tinkering and maybe look into awesome, as suggested.",True,{}
i3/i3,https://github.com/i3/i3,4357,2021-03-01T21:19:11Z,2021-03-05T13:06:59Z,2021-03-05T13:06:59Z,CLOSED,False,3,1,1,https://github.com/mychris,i3bar: Fix font rendering for Caveat font,2,[],https://github.com/i3/i3/pull/4357,https://github.com/Airblader,6,https://github.com/i3/i3/pull/4357#issuecomment-790508230,"Hi,
I noticed that font rendering for i3bar has some problems with certain fonts.
Using the google font Caveat for instance, the text in the bar is always cut off at the right side. For the workspace buttons as well as for the text in the status bar.
I don't know if this is a regression, or not, since I just tried out the font today and noticed it.
I think this is because the ink extent is not accounted for?

Computes the logical and ink extents of layout.
Logical extents are usually what you want for positioning things.
Note that both extents may have non-zero x and y.
You may want to use those to offset where you render the layout.
Not doing that is a very typical bug that shows up as right-to-left layouts not being correctly positioned in a layout with a set width.

I tried to fix the issue, by adding the ink extent to the text width, when it is calculated. I first tried to adjust the rendering position of the text, but this resulted in text no longer being centered for certain other fonts. I tried the patch with different fonts I used before with i3bar and it seems to work. I am not so experienced with pango, so I am happy for any more insights.
I executed the test suite and it passes:
All tests successful.
Files=252, Tests=3712,  4 wallclock secs ( 0.75 usr +  0.15 sys =  0.90 CPU)
Result: PASS

Do you know of some fonts which gave you trouble in the past? I can do some more experiments to see if my solution is robust enough.
Any comments are welcome.",@mychris Thanks for giving this some good testing. Let us know when you're done :-),True,{}
i3/i3,https://github.com/i3/i3,4357,2021-03-01T21:19:11Z,2021-03-05T13:06:59Z,2021-03-05T13:06:59Z,CLOSED,False,3,1,1,https://github.com/mychris,i3bar: Fix font rendering for Caveat font,2,[],https://github.com/i3/i3/pull/4357,https://github.com/mychris,7,https://github.com/i3/i3/pull/4357#issuecomment-790907091,"Hi,
I noticed that font rendering for i3bar has some problems with certain fonts.
Using the google font Caveat for instance, the text in the bar is always cut off at the right side. For the workspace buttons as well as for the text in the status bar.
I don't know if this is a regression, or not, since I just tried out the font today and noticed it.
I think this is because the ink extent is not accounted for?

Computes the logical and ink extents of layout.
Logical extents are usually what you want for positioning things.
Note that both extents may have non-zero x and y.
You may want to use those to offset where you render the layout.
Not doing that is a very typical bug that shows up as right-to-left layouts not being correctly positioned in a layout with a set width.

I tried to fix the issue, by adding the ink extent to the text width, when it is calculated. I first tried to adjust the rendering position of the text, but this resulted in text no longer being centered for certain other fonts. I tried the patch with different fonts I used before with i3bar and it seems to work. I am not so experienced with pango, so I am happy for any more insights.
I executed the test suite and it passes:
All tests successful.
Files=252, Tests=3712,  4 wallclock secs ( 0.75 usr +  0.15 sys =  0.90 CPU)
Result: PASS

Do you know of some fonts which gave you trouble in the past? I can do some more experiments to see if my solution is robust enough.
Any comments are welcome.","Ok, this is the best result I got. It's not conditionally adding the ink offset, but taking the max value of the (ink width + ink offset) or the layout offset.
I used pango-view to look at the extents of the fonts (it shows both, the ink and the logical extent) and it is a bit weird, since there are all kinds of combinations:

Ink extent smaller then logical extent
Ink extent with the same size as logical extent
negative offset of the ink extent (ink starts to the left of the logical extent)
positive offset of the ink extent

I start to believe that the best solution would be, to always draw the text last, so it can be drawn above the border/spacer area, if the font has such a layout that the ink extent is outside the logical extent.
With the new patch, the worst case is that fonts are no longer centered. The old width was logical_extent.width. Now, we take ink_extent.width + ink_extent.x as the new width, if it is bigger. I tried out all fonts installed on my system, and the text is always rendered completely. I also couldn't find a font which is cut off.",True,{}
i3/i3,https://github.com/i3/i3,4357,2021-03-01T21:19:11Z,2021-03-05T13:06:59Z,2021-03-05T13:06:59Z,CLOSED,False,3,1,1,https://github.com/mychris,i3bar: Fix font rendering for Caveat font,2,[],https://github.com/i3/i3/pull/4357,https://github.com/psychon,8,https://github.com/i3/i3/pull/4357#issuecomment-791218576,"Hi,
I noticed that font rendering for i3bar has some problems with certain fonts.
Using the google font Caveat for instance, the text in the bar is always cut off at the right side. For the workspace buttons as well as for the text in the status bar.
I don't know if this is a regression, or not, since I just tried out the font today and noticed it.
I think this is because the ink extent is not accounted for?

Computes the logical and ink extents of layout.
Logical extents are usually what you want for positioning things.
Note that both extents may have non-zero x and y.
You may want to use those to offset where you render the layout.
Not doing that is a very typical bug that shows up as right-to-left layouts not being correctly positioned in a layout with a set width.

I tried to fix the issue, by adding the ink extent to the text width, when it is calculated. I first tried to adjust the rendering position of the text, but this resulted in text no longer being centered for certain other fonts. I tried the patch with different fonts I used before with i3bar and it seems to work. I am not so experienced with pango, so I am happy for any more insights.
I executed the test suite and it passes:
All tests successful.
Files=252, Tests=3712,  4 wallclock secs ( 0.75 usr +  0.15 sys =  0.90 CPU)
Result: PASS

Do you know of some fonts which gave you trouble in the past? I can do some more experiments to see if my solution is robust enough.
Any comments are welcome.","I never understood i3's rendering code, but... Why are you lying to cairo about the size of the drawable?

  
    
      i3/libi3/font.c
    
    
        Lines 84 to 90
      in
      fff8b0c
    
  
  
    

        
          
           static void draw_text_pango(const char *text, size_t text_len, 
        

        
          
                                       xcb_drawable_t drawable, xcb_visualtype_t *visual, int x, int y, 
        

        
          
                                       int max_width, bool pango_markup) { 
        

        
          
               /* Create the Pango layout */ 
        

        
          
               /* root_visual_type is cached in load_pango_font */ 
        

        
          
               cairo_surface_t *surface = cairo_xcb_surface_create(conn, drawable, 
        

        
          
                                                                   visual, x + max_width, y + savedFont->height); 
        
    
  


This tells cairo that the drawable has size x + max_width. I somehow doubt that the drawable really has this size. It likely is larger.
If you told cairo the real size of the drawable, it could draw things in the right side and would not clip away parts of things.
Also, this is just ugly (sorry!): width = ((ink_extent.width + ink_extent.x) > logical_extent.width) ? (ink_extent.width + ink_extent.x) : logical_extent.width;
So... the logical extents should be used for placing text and the ink extents are only needed if you want to do partial redraws / need to figure out how far the text reaches.
Should I try taking a look at this code and figuring out where text is clipped and how to get rid of that?
(Also, what exactly does ""has some problems with certain fonts."" mean? Is this only about ""Using the google font Caveat for instance, the text in the bar is always cut off at the right side."" or are there also other issues?)",True,{}
i3/i3,https://github.com/i3/i3,4357,2021-03-01T21:19:11Z,2021-03-05T13:06:59Z,2021-03-05T13:06:59Z,CLOSED,False,3,1,1,https://github.com/mychris,i3bar: Fix font rendering for Caveat font,2,[],https://github.com/i3/i3/pull/4357,https://github.com/mychris,9,https://github.com/i3/i3/pull/4357#issuecomment-791240079,"Hi,
I noticed that font rendering for i3bar has some problems with certain fonts.
Using the google font Caveat for instance, the text in the bar is always cut off at the right side. For the workspace buttons as well as for the text in the status bar.
I don't know if this is a regression, or not, since I just tried out the font today and noticed it.
I think this is because the ink extent is not accounted for?

Computes the logical and ink extents of layout.
Logical extents are usually what you want for positioning things.
Note that both extents may have non-zero x and y.
You may want to use those to offset where you render the layout.
Not doing that is a very typical bug that shows up as right-to-left layouts not being correctly positioned in a layout with a set width.

I tried to fix the issue, by adding the ink extent to the text width, when it is calculated. I first tried to adjust the rendering position of the text, but this resulted in text no longer being centered for certain other fonts. I tried the patch with different fonts I used before with i3bar and it seems to work. I am not so experienced with pango, so I am happy for any more insights.
I executed the test suite and it passes:
All tests successful.
Files=252, Tests=3712,  4 wallclock secs ( 0.75 usr +  0.15 sys =  0.90 CPU)
Result: PASS

Do you know of some fonts which gave you trouble in the past? I can do some more experiments to see if my solution is robust enough.
Any comments are welcome.","This tells cairo that the drawable has size x + max_width. I somehow doubt that the drawable really has this size. It likely is larger.
If you told cairo the real size of the drawable, it could draw things in the right side and would not clip away parts of things.

That's what I try to do. I am not familiar with the i3 code at all. The max_width is the size calculated by predict_text_width_pango AFAIK. I tried to change the calculation in that function and return the ""real size"", but it turns out to be quite complicated for me.
My problem is that I found fonts, for which the ink extent can be partially outside of the logical extent. For instance, you can have a text, for which the logical extent has a width of 50, and the ink extent has an offset of 3 and a width of 49, hence it is 2 pixel outside of the logical extent (that was the case for me with Caveat).
For another font, Akaya Telivigala and some text, the logical extent was 50, the ink extent was also 50, but the x offset of the ink extent was -1.
So I try to figure out how to calculate the ""real size"". If you could elaborate (or show code) on how to do it, I would be very much interested in that, since I don't have much experience in this.

So... the logical extents should be used for placing text and the ink extents are only needed if you want to do partial redraws / need to figure out how far the text reaches.

That's also what I read, but since the ink extent can be outside of the logical extent, I am not so sure about this. Maybe I also don't get what you mean by ""placing text"", because the text is, for sure, not always completely inside the logical extent. That's also what pango-view shows you.

Should I try taking a look at this code and figuring out where text is clipped and how to get rid of that?

That would be very much appreciated.

Also, what exactly does ""has some problems with certain fonts."" mean? Is this only about ""Using the google font Caveat for instance, the text in the bar is always cut off at the right side."" or are there also other issues?

Yes, it is only about the Caveat font, which is clipped at the right edge. I didn't find any other issue in next. The other font (Akaya Telivigala) I found while I was testing my stuff and figured that this one also has some interesting properties (see above).",True,{}
i3/i3,https://github.com/i3/i3,4357,2021-03-01T21:19:11Z,2021-03-05T13:06:59Z,2021-03-05T13:06:59Z,CLOSED,False,3,1,1,https://github.com/mychris,i3bar: Fix font rendering for Caveat font,2,[],https://github.com/i3/i3/pull/4357,https://github.com/Airblader,10,https://github.com/i3/i3/pull/4357#issuecomment-791293140,"Hi,
I noticed that font rendering for i3bar has some problems with certain fonts.
Using the google font Caveat for instance, the text in the bar is always cut off at the right side. For the workspace buttons as well as for the text in the status bar.
I don't know if this is a regression, or not, since I just tried out the font today and noticed it.
I think this is because the ink extent is not accounted for?

Computes the logical and ink extents of layout.
Logical extents are usually what you want for positioning things.
Note that both extents may have non-zero x and y.
You may want to use those to offset where you render the layout.
Not doing that is a very typical bug that shows up as right-to-left layouts not being correctly positioned in a layout with a set width.

I tried to fix the issue, by adding the ink extent to the text width, when it is calculated. I first tried to adjust the rendering position of the text, but this resulted in text no longer being centered for certain other fonts. I tried the patch with different fonts I used before with i3bar and it seems to work. I am not so experienced with pango, so I am happy for any more insights.
I executed the test suite and it passes:
All tests successful.
Files=252, Tests=3712,  4 wallclock secs ( 0.75 usr +  0.15 sys =  0.90 CPU)
Result: PASS

Do you know of some fonts which gave you trouble in the past? I can do some more experiments to see if my solution is robust enough.
Any comments are welcome.","@psychon Thanks for taking a look here, I was considering tagging you, but didn't want to bother you either. I'm sure our font rendering code could do with improvements. If you have time to look at that it would definitely be much appreciated.",True,{}
i3/i3,https://github.com/i3/i3,4360,2021-03-05T09:57:02Z,2021-03-06T09:57:13Z,2021-03-07T08:47:34Z,CLOSED,False,13,58,19,https://github.com/psychon,Remove unnecessary calls to xcb_flush(),11,[],https://github.com/i3/i3/pull/4360,https://github.com/psychon,1,https://github.com/i3/i3/pull/4360,"I did a little exorcism and removed some calls to xcb_flush():
 18 files changed, 5 insertions(+), 58 deletions(-)

My general strategy is:

Before blocking (e.g. explicitly via xcb_wait_for_event() or implicitly by returning to the event loop), pending requests should be sent / xcb_flush() should always be called. The code was mostly already doing this.
Since the above ensures that requests will be flushed, all other calls to xcb_flush() are redundant and can be removed.

I started with many small commits but then got lazy when I reached the ""main code base"".
TODO:

 ] I saw the small paragraph in docs/hacking-howto about calling xcb_flush(), but I am not sure what to do with it.
 I am not sure I got the IPC stuff right. I think your code is racy, but I am not entirely sure:

I had a test suite failure where the _NET_CURRENT_DESKTOP property was outdated. What I think happened: Previously, the code first xcb_flush()d and then replied to the ipc request from the test. However, this is racy. Nothing guarantees that the X11 server already handled i3's ChangeProperty request before the test suite managed to query the property. However, I guess it is very, very unlikely for i3 to loose this race.
To paper over this bug, I added a call to xcb_aux_sync() and left a TODO comment. Someone who knows this IPC code better than me should try to explain why the race I described above is not possible.
It does not help that I failed to find any documentation for the sync IPC command not do I really understand the test suite's sync_with_i3. Either I really managed to miss a required xcb_flush() or the syncing here is somehow broken...


 I did not dare to touch the sequence xcb_ungrab_server(conn); xcb_flush(conn);. I think that flush is not necessary, but I do not dare to actually remove it. Feel free to just leave them there. (The same for xcb_ungrab_pointer() and xcb_ungrab_keyboard() followed by a flush.)
 I did not touch testcases/ (nor do I understand the code in there)
 Some calls to xcb_flush() look fishy to me, but a comment claims that they are there for a reason. I doubt that comment, but okay... 
  
    
      i3/src/x.c
    
    
        Lines 992 to 1001
      in
      7da136d
    
  
  
    

        
          
                   /* flush to ensure that the following commands are sent in a single 
        

        
          
                    * buffer and will be processed directly afterwards (the contents of a 
        

        
          
                    * window get lost when resizing it, therefore we want to provide it as 
        

        
          
                    * fast as possible) */ 
        

        
          
                   xcb_flush(conn); 
        

        
          
                   xcb_set_window_rect(conn, con->frame.id, rect); 
        

        
          
                   if (con->frame_buffer.id != XCB_NONE) { 
        

        
          
                       draw_util_copy_surface(&(con->frame_buffer), &(con->frame), 0, 0, 0, 0, con->rect.width, con->rect.height); 
        

        
          
                   } 
        

        
          
                   xcb_flush(conn);","I did a little exorcism and removed some calls to xcb_flush():
 18 files changed, 5 insertions(+), 58 deletions(-)

My general strategy is:

Before blocking (e.g. explicitly via xcb_wait_for_event() or implicitly by returning to the event loop), pending requests should be sent / xcb_flush() should always be called. The code was mostly already doing this.
Since the above ensures that requests will be flushed, all other calls to xcb_flush() are redundant and can be removed.

I started with many small commits but then got lazy when I reached the ""main code base"".
TODO:

 ] I saw the small paragraph in docs/hacking-howto about calling xcb_flush(), but I am not sure what to do with it.
 I am not sure I got the IPC stuff right. I think your code is racy, but I am not entirely sure:

I had a test suite failure where the _NET_CURRENT_DESKTOP property was outdated. What I think happened: Previously, the code first xcb_flush()d and then replied to the ipc request from the test. However, this is racy. Nothing guarantees that the X11 server already handled i3's ChangeProperty request before the test suite managed to query the property. However, I guess it is very, very unlikely for i3 to loose this race.
To paper over this bug, I added a call to xcb_aux_sync() and left a TODO comment. Someone who knows this IPC code better than me should try to explain why the race I described above is not possible.
It does not help that I failed to find any documentation for the sync IPC command not do I really understand the test suite's sync_with_i3. Either I really managed to miss a required xcb_flush() or the syncing here is somehow broken...


 I did not dare to touch the sequence xcb_ungrab_server(conn); xcb_flush(conn);. I think that flush is not necessary, but I do not dare to actually remove it. Feel free to just leave them there. (The same for xcb_ungrab_pointer() and xcb_ungrab_keyboard() followed by a flush.)
 I did not touch testcases/ (nor do I understand the code in there)
 Some calls to xcb_flush() look fishy to me, but a comment claims that they are there for a reason. I doubt that comment, but okay... 
  
    
      i3/src/x.c
    
    
        Lines 992 to 1001
      in
      7da136d
    
  
  
    

        
          
                   /* flush to ensure that the following commands are sent in a single 
        

        
          
                    * buffer and will be processed directly afterwards (the contents of a 
        

        
          
                    * window get lost when resizing it, therefore we want to provide it as 
        

        
          
                    * fast as possible) */ 
        

        
          
                   xcb_flush(conn); 
        

        
          
                   xcb_set_window_rect(conn, con->frame.id, rect); 
        

        
          
                   if (con->frame_buffer.id != XCB_NONE) { 
        

        
          
                       draw_util_copy_surface(&(con->frame_buffer), &(con->frame), 0, 0, 0, 0, con->rect.width, con->rect.height); 
        

        
          
                   } 
        

        
          
                   xcb_flush(conn);",True,{}
i3/i3,https://github.com/i3/i3,4360,2021-03-05T09:57:02Z,2021-03-06T09:57:13Z,2021-03-07T08:47:34Z,CLOSED,False,13,58,19,https://github.com/psychon,Remove unnecessary calls to xcb_flush(),11,[],https://github.com/i3/i3/pull/4360,https://github.com/psychon,2,https://github.com/i3/i3/pull/4360#issuecomment-791316085,"I did a little exorcism and removed some calls to xcb_flush():
 18 files changed, 5 insertions(+), 58 deletions(-)

My general strategy is:

Before blocking (e.g. explicitly via xcb_wait_for_event() or implicitly by returning to the event loop), pending requests should be sent / xcb_flush() should always be called. The code was mostly already doing this.
Since the above ensures that requests will be flushed, all other calls to xcb_flush() are redundant and can be removed.

I started with many small commits but then got lazy when I reached the ""main code base"".
TODO:

 ] I saw the small paragraph in docs/hacking-howto about calling xcb_flush(), but I am not sure what to do with it.
 I am not sure I got the IPC stuff right. I think your code is racy, but I am not entirely sure:

I had a test suite failure where the _NET_CURRENT_DESKTOP property was outdated. What I think happened: Previously, the code first xcb_flush()d and then replied to the ipc request from the test. However, this is racy. Nothing guarantees that the X11 server already handled i3's ChangeProperty request before the test suite managed to query the property. However, I guess it is very, very unlikely for i3 to loose this race.
To paper over this bug, I added a call to xcb_aux_sync() and left a TODO comment. Someone who knows this IPC code better than me should try to explain why the race I described above is not possible.
It does not help that I failed to find any documentation for the sync IPC command not do I really understand the test suite's sync_with_i3. Either I really managed to miss a required xcb_flush() or the syncing here is somehow broken...


 I did not dare to touch the sequence xcb_ungrab_server(conn); xcb_flush(conn);. I think that flush is not necessary, but I do not dare to actually remove it. Feel free to just leave them there. (The same for xcb_ungrab_pointer() and xcb_ungrab_keyboard() followed by a flush.)
 I did not touch testcases/ (nor do I understand the code in there)
 Some calls to xcb_flush() look fishy to me, but a comment claims that they are there for a reason. I doubt that comment, but okay... 
  
    
      i3/src/x.c
    
    
        Lines 992 to 1001
      in
      7da136d
    
  
  
    

        
          
                   /* flush to ensure that the following commands are sent in a single 
        

        
          
                    * buffer and will be processed directly afterwards (the contents of a 
        

        
          
                    * window get lost when resizing it, therefore we want to provide it as 
        

        
          
                    * fast as possible) */ 
        

        
          
                   xcb_flush(conn); 
        

        
          
                   xcb_set_window_rect(conn, con->frame.id, rect); 
        

        
          
                   if (con->frame_buffer.id != XCB_NONE) { 
        

        
          
                       draw_util_copy_surface(&(con->frame_buffer), &(con->frame), 0, 0, 0, 0, con->rect.width, con->rect.height); 
        

        
          
                   } 
        

        
          
                   xcb_flush(conn);","I had a test suite failure where the _NET_CURRENT_DESKTOP property was outdated.

Well... this one thing is definitely a broken test:

  
    
      i3/testcases/t/294-update-ewmh-atoms.t
    
    
        Lines 101 to 104
      in
      7da136d
    
  
  
    

        
          
           # Kill first window to close a workspace. 
        

        
          
           cmd '[id=""' . $second->id . '""] kill'; 
        

        
          
            
        

        
          
           is(get_current_desktop, 1, '_NET_CURRENT_DESKTOP should be updated'); 
        
    
  


This asks i3 to close a window via IPC and then talks to the X11 server to check the result. Nothing here guarantees that the X11 server already handled ""all the stuff"" that happened to close the window. No idea if the window in question supports WM_DELETE_WINDOW, but if it does, then not even sync_with_i3 would be enough here since the client can take arbitrarily long deal with the WM_DELETE_WINDOW message. (well, there is a call to sync_with_i3 in get_current_desktop already.)",True,{}
i3/i3,https://github.com/i3/i3,4360,2021-03-05T09:57:02Z,2021-03-06T09:57:13Z,2021-03-07T08:47:34Z,CLOSED,False,13,58,19,https://github.com/psychon,Remove unnecessary calls to xcb_flush(),11,[],https://github.com/i3/i3/pull/4360,https://github.com/psychon,3,https://github.com/i3/i3/pull/4360#issuecomment-791319566,"I did a little exorcism and removed some calls to xcb_flush():
 18 files changed, 5 insertions(+), 58 deletions(-)

My general strategy is:

Before blocking (e.g. explicitly via xcb_wait_for_event() or implicitly by returning to the event loop), pending requests should be sent / xcb_flush() should always be called. The code was mostly already doing this.
Since the above ensures that requests will be flushed, all other calls to xcb_flush() are redundant and can be removed.

I started with many small commits but then got lazy when I reached the ""main code base"".
TODO:

 ] I saw the small paragraph in docs/hacking-howto about calling xcb_flush(), but I am not sure what to do with it.
 I am not sure I got the IPC stuff right. I think your code is racy, but I am not entirely sure:

I had a test suite failure where the _NET_CURRENT_DESKTOP property was outdated. What I think happened: Previously, the code first xcb_flush()d and then replied to the ipc request from the test. However, this is racy. Nothing guarantees that the X11 server already handled i3's ChangeProperty request before the test suite managed to query the property. However, I guess it is very, very unlikely for i3 to loose this race.
To paper over this bug, I added a call to xcb_aux_sync() and left a TODO comment. Someone who knows this IPC code better than me should try to explain why the race I described above is not possible.
It does not help that I failed to find any documentation for the sync IPC command not do I really understand the test suite's sync_with_i3. Either I really managed to miss a required xcb_flush() or the syncing here is somehow broken...


 I did not dare to touch the sequence xcb_ungrab_server(conn); xcb_flush(conn);. I think that flush is not necessary, but I do not dare to actually remove it. Feel free to just leave them there. (The same for xcb_ungrab_pointer() and xcb_ungrab_keyboard() followed by a flush.)
 I did not touch testcases/ (nor do I understand the code in there)
 Some calls to xcb_flush() look fishy to me, but a comment claims that they are there for a reason. I doubt that comment, but okay... 
  
    
      i3/src/x.c
    
    
        Lines 992 to 1001
      in
      7da136d
    
  
  
    

        
          
                   /* flush to ensure that the following commands are sent in a single 
        

        
          
                    * buffer and will be processed directly afterwards (the contents of a 
        

        
          
                    * window get lost when resizing it, therefore we want to provide it as 
        

        
          
                    * fast as possible) */ 
        

        
          
                   xcb_flush(conn); 
        

        
          
                   xcb_set_window_rect(conn, con->frame.id, rect); 
        

        
          
                   if (con->frame_buffer.id != XCB_NONE) { 
        

        
          
                       draw_util_copy_surface(&(con->frame_buffer), &(con->frame), 0, 0, 0, 0, con->rect.width, con->rect.height); 
        

        
          
                   } 
        

        
          
                   xcb_flush(conn);","This now failed again on Travis:
#   Failed test 'Received 1 workspace::init event'
#   at /usr/src/i3/distbuild/meson-private/dist-unpack/i3-4.19.2/testcases/t/533-randr15.t line 141.
#          got: '0'
#     expected: '1'
#   Failed test 'Workspace initialized in up2414q'
#   at /usr/src/i3/distbuild/meson-private/dist-unpack/i3-4.19.2/testcases/t/533-randr15.t line 142.
#          got: undef
#     expected: 'up2414q'

My guess here is that the X11 server did not yet handle i3's ""please send me RandR events""-event...? (And I think nothing in there guarantees that, doesn't launch_with_config or activate_i3 need a sync_with_i3 call to ensure that startup is really complete? Right now it only sends an IPC request, but that does not sync with the X11 server.  Hm, but it does so in this PR since I added a call to xcb_aux_sync() in IPC handling. Oh, wow, but the code uses get_tree to sync with i3 here and I did not add a call to xcb_aux_sync() there. I think your test suite needs some fixing...)",True,{}
i3/i3,https://github.com/i3/i3,4360,2021-03-05T09:57:02Z,2021-03-06T09:57:13Z,2021-03-07T08:47:34Z,CLOSED,False,13,58,19,https://github.com/psychon,Remove unnecessary calls to xcb_flush(),11,[],https://github.com/i3/i3/pull/4360,https://github.com/psychon,4,https://github.com/i3/i3/pull/4360#issuecomment-791905257,"I did a little exorcism and removed some calls to xcb_flush():
 18 files changed, 5 insertions(+), 58 deletions(-)

My general strategy is:

Before blocking (e.g. explicitly via xcb_wait_for_event() or implicitly by returning to the event loop), pending requests should be sent / xcb_flush() should always be called. The code was mostly already doing this.
Since the above ensures that requests will be flushed, all other calls to xcb_flush() are redundant and can be removed.

I started with many small commits but then got lazy when I reached the ""main code base"".
TODO:

 ] I saw the small paragraph in docs/hacking-howto about calling xcb_flush(), but I am not sure what to do with it.
 I am not sure I got the IPC stuff right. I think your code is racy, but I am not entirely sure:

I had a test suite failure where the _NET_CURRENT_DESKTOP property was outdated. What I think happened: Previously, the code first xcb_flush()d and then replied to the ipc request from the test. However, this is racy. Nothing guarantees that the X11 server already handled i3's ChangeProperty request before the test suite managed to query the property. However, I guess it is very, very unlikely for i3 to loose this race.
To paper over this bug, I added a call to xcb_aux_sync() and left a TODO comment. Someone who knows this IPC code better than me should try to explain why the race I described above is not possible.
It does not help that I failed to find any documentation for the sync IPC command not do I really understand the test suite's sync_with_i3. Either I really managed to miss a required xcb_flush() or the syncing here is somehow broken...


 I did not dare to touch the sequence xcb_ungrab_server(conn); xcb_flush(conn);. I think that flush is not necessary, but I do not dare to actually remove it. Feel free to just leave them there. (The same for xcb_ungrab_pointer() and xcb_ungrab_keyboard() followed by a flush.)
 I did not touch testcases/ (nor do I understand the code in there)
 Some calls to xcb_flush() look fishy to me, but a comment claims that they are there for a reason. I doubt that comment, but okay... 
  
    
      i3/src/x.c
    
    
        Lines 992 to 1001
      in
      7da136d
    
  
  
    

        
          
                   /* flush to ensure that the following commands are sent in a single 
        

        
          
                    * buffer and will be processed directly afterwards (the contents of a 
        

        
          
                    * window get lost when resizing it, therefore we want to provide it as 
        

        
          
                    * fast as possible) */ 
        

        
          
                   xcb_flush(conn); 
        

        
          
                   xcb_set_window_rect(conn, con->frame.id, rect); 
        

        
          
                   if (con->frame_buffer.id != XCB_NONE) { 
        

        
          
                       draw_util_copy_surface(&(con->frame_buffer), &(con->frame), 0, 0, 0, 0, con->rect.width, con->rect.height); 
        

        
          
                   } 
        

        
          
                   xcb_flush(conn);","Closing this since this is quite a can of worms that I opened. The test suite needs to be fixed before one can remove xcb_flush() calls (or rather: I have to understand how its synchronisation works, see #4365).
Also, this is high risk and low gain. This only gets rid of some syscalls and a lock+unlock of a mutex. The gains will not be measurable.",True,{'THUMBS_UP': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,4360,2021-03-05T09:57:02Z,2021-03-06T09:57:13Z,2021-03-07T08:47:34Z,CLOSED,False,13,58,19,https://github.com/psychon,Remove unnecessary calls to xcb_flush(),11,[],https://github.com/i3/i3/pull/4360,https://github.com/stapelberg,5,https://github.com/i3/i3/pull/4360#issuecomment-792240335,"I did a little exorcism and removed some calls to xcb_flush():
 18 files changed, 5 insertions(+), 58 deletions(-)

My general strategy is:

Before blocking (e.g. explicitly via xcb_wait_for_event() or implicitly by returning to the event loop), pending requests should be sent / xcb_flush() should always be called. The code was mostly already doing this.
Since the above ensures that requests will be flushed, all other calls to xcb_flush() are redundant and can be removed.

I started with many small commits but then got lazy when I reached the ""main code base"".
TODO:

 ] I saw the small paragraph in docs/hacking-howto about calling xcb_flush(), but I am not sure what to do with it.
 I am not sure I got the IPC stuff right. I think your code is racy, but I am not entirely sure:

I had a test suite failure where the _NET_CURRENT_DESKTOP property was outdated. What I think happened: Previously, the code first xcb_flush()d and then replied to the ipc request from the test. However, this is racy. Nothing guarantees that the X11 server already handled i3's ChangeProperty request before the test suite managed to query the property. However, I guess it is very, very unlikely for i3 to loose this race.
To paper over this bug, I added a call to xcb_aux_sync() and left a TODO comment. Someone who knows this IPC code better than me should try to explain why the race I described above is not possible.
It does not help that I failed to find any documentation for the sync IPC command not do I really understand the test suite's sync_with_i3. Either I really managed to miss a required xcb_flush() or the syncing here is somehow broken...


 I did not dare to touch the sequence xcb_ungrab_server(conn); xcb_flush(conn);. I think that flush is not necessary, but I do not dare to actually remove it. Feel free to just leave them there. (The same for xcb_ungrab_pointer() and xcb_ungrab_keyboard() followed by a flush.)
 I did not touch testcases/ (nor do I understand the code in there)
 Some calls to xcb_flush() look fishy to me, but a comment claims that they are there for a reason. I doubt that comment, but okay... 
  
    
      i3/src/x.c
    
    
        Lines 992 to 1001
      in
      7da136d
    
  
  
    

        
          
                   /* flush to ensure that the following commands are sent in a single 
        

        
          
                    * buffer and will be processed directly afterwards (the contents of a 
        

        
          
                    * window get lost when resizing it, therefore we want to provide it as 
        

        
          
                    * fast as possible) */ 
        

        
          
                   xcb_flush(conn); 
        

        
          
                   xcb_set_window_rect(conn, con->frame.id, rect); 
        

        
          
                   if (con->frame_buffer.id != XCB_NONE) { 
        

        
          
                       draw_util_copy_surface(&(con->frame_buffer), &(con->frame), 0, 0, 0, 0, con->rect.width, con->rect.height); 
        

        
          
                   } 
        

        
          
                   xcb_flush(conn);","Also, this is high risk and low gain. This only gets rid of some syscalls and a lock+unlock of a mutex. The gains will not be measurable.

I agree with your assessment here. Thanks for taking a stab at it!",True,{}
i3/i3,https://github.com/i3/i3,4361,2021-03-05T10:41:47Z,2021-03-05T13:06:57Z,2021-03-05T13:13:09Z,MERGED,True,8,54,3,https://github.com/psychon,No temporary cairo surface for font drawing,2,[],https://github.com/i3/i3/pull/4361,https://github.com/psychon,1,https://github.com/i3/i3/pull/4361,"Instead of creating a temporary cairo surface in draw_text(), this now requires a cairo surface from the caller. That seems more sane to me than what the code currently does.

CC @mychris I did not try reproducing your problem, but if I understood it correctly, then this might fix it. The idea here is that cairo now actually knows the ""real"" size of the drawable and is not lied to with a smaller size.
(Regardless of whether this fixes the issue from #4357 I think this is worth merging)","Instead of creating a temporary cairo surface in draw_text(), this now requires a cairo surface from the caller. That seems more sane to me than what the code currently does.

CC @mychris I did not try reproducing your problem, but if I understood it correctly, then this might fix it. The idea here is that cairo now actually knows the ""real"" size of the drawable and is not lied to with a smaller size.
(Regardless of whether this fixes the issue from #4357 I think this is worth merging)",True,{}
i3/i3,https://github.com/i3/i3,4361,2021-03-05T10:41:47Z,2021-03-05T13:06:57Z,2021-03-05T13:13:09Z,MERGED,True,8,54,3,https://github.com/psychon,No temporary cairo surface for font drawing,2,[],https://github.com/i3/i3/pull/4361,https://github.com/mychris,2,https://github.com/i3/i3/pull/4361#issuecomment-791344804,"Instead of creating a temporary cairo surface in draw_text(), this now requires a cairo surface from the caller. That seems more sane to me than what the code currently does.

CC @mychris I did not try reproducing your problem, but if I understood it correctly, then this might fix it. The idea here is that cairo now actually knows the ""real"" size of the drawable and is not lied to with a smaller size.
(Regardless of whether this fixes the issue from #4357 I think this is worth merging)","Yes, this fixes my the problem in #4357. I think the fix does what I meant by saying:

I start to believe that the best solution would be, to always draw the text last, so it can be drawn above the border/spacer area, if the font has such a layout that the ink extent is outside the logical extent.

Thanks for looking into this.",True,{}
i3/i3,https://github.com/i3/i3,4361,2021-03-05T10:41:47Z,2021-03-05T13:06:57Z,2021-03-05T13:13:09Z,MERGED,True,8,54,3,https://github.com/psychon,No temporary cairo surface for font drawing,2,[],https://github.com/i3/i3/pull/4361,https://github.com/mychris,3,https://github.com/i3/i3/pull/4361#issuecomment-791347866,"Instead of creating a temporary cairo surface in draw_text(), this now requires a cairo surface from the caller. That seems more sane to me than what the code currently does.

CC @mychris I did not try reproducing your problem, but if I understood it correctly, then this might fix it. The idea here is that cairo now actually knows the ""real"" size of the drawable and is not lied to with a smaller size.
(Regardless of whether this fixes the issue from #4357 I think this is worth merging)","Just noticed one little thing. The right most item in the status bar is still clipped. I guess this might be because for the Caveat font, the ink extent is partially outside of the logical extent?",True,{}
i3/i3,https://github.com/i3/i3,4361,2021-03-05T10:41:47Z,2021-03-05T13:06:57Z,2021-03-05T13:13:09Z,MERGED,True,8,54,3,https://github.com/psychon,No temporary cairo surface for font drawing,2,[],https://github.com/i3/i3/pull/4361,https://github.com/psychon,4,https://github.com/i3/i3/pull/4361#issuecomment-791377880,"Instead of creating a temporary cairo surface in draw_text(), this now requires a cairo surface from the caller. That seems more sane to me than what the code currently does.

CC @mychris I did not try reproducing your problem, but if I understood it correctly, then this might fix it. The idea here is that cairo now actually knows the ""real"" size of the drawable and is not lied to with a smaller size.
(Regardless of whether this fixes the issue from #4357 I think this is worth merging)","I don't really know, but I would expect that this is the ""desired behaviour"" for when a letter ""reaches outside"" of its logical extents (so that the ink extents are larger than the logical extents, but the logical ones are still used for layout).",True,{}
i3/i3,https://github.com/i3/i3,4362,2021-03-05T12:12:55Z,2021-03-06T10:10:57Z,2021-03-06T10:45:51Z,MERGED,True,4,4,2,https://github.com/psychon,Some follow-up to ,1,[],https://github.com/i3/i3/pull/4362,https://github.com/psychon,1,https://github.com/i3/i3/pull/4362,"This is some follow-up to #4361 (and includes the two commits from that PR, hence the draft status).
I'm not really sure if the ""stuff"" around the calls to cairo_surface_flush() are really worth it. Missing a call to cairo_surface_flush() can lead to weird bugs that no one normally sees, but then someone has a weird X11 server that does not support the RENDER extension (or only an old version of it) and things break. One can test stuff with CAIRO_DEBUG=""xrender-version=-1.-1"", but meh... I don't know.
If deemed too risky, I can get rid of the commits around cairo_surface_flush(). This part seemed like a better idea when I started it...","This is some follow-up to #4361 (and includes the two commits from that PR, hence the draft status).
I'm not really sure if the ""stuff"" around the calls to cairo_surface_flush() are really worth it. Missing a call to cairo_surface_flush() can lead to weird bugs that no one normally sees, but then someone has a weird X11 server that does not support the RENDER extension (or only an old version of it) and things break. One can test stuff with CAIRO_DEBUG=""xrender-version=-1.-1"", but meh... I don't know.
If deemed too risky, I can get rid of the commits around cairo_surface_flush(). This part seemed like a better idea when I started it...",True,{}
i3/i3,https://github.com/i3/i3,4362,2021-03-05T12:12:55Z,2021-03-06T10:10:57Z,2021-03-06T10:45:51Z,MERGED,True,4,4,2,https://github.com/psychon,Some follow-up to ,1,[],https://github.com/i3/i3/pull/4362,https://github.com/psychon,2,https://github.com/i3/i3/pull/4362#issuecomment-791895554,"This is some follow-up to #4361 (and includes the two commits from that PR, hence the draft status).
I'm not really sure if the ""stuff"" around the calls to cairo_surface_flush() are really worth it. Missing a call to cairo_surface_flush() can lead to weird bugs that no one normally sees, but then someone has a weird X11 server that does not support the RENDER extension (or only an old version of it) and things break. One can test stuff with CAIRO_DEBUG=""xrender-version=-1.-1"", but meh... I don't know.
If deemed too risky, I can get rid of the commits around cairo_surface_flush(). This part seemed like a better idea when I started it...",Rebased on next and removed all the scary stuff around cairo_surface_flush. Previously this PR pointer to 88bb735 and its parents. Now I only left the one simple commit in this PR. The rest is too complicated and has too much potential for breakage.,True,{}
i3/i3,https://github.com/i3/i3,4363,2021-03-05T13:22:41Z,2021-03-06T18:06:16Z,2021-03-07T08:08:36Z,MERGED,True,15,3,1,https://github.com/psychon,Prefetch some information through xcb,2,[],https://github.com/i3/i3/pull/4363,https://github.com/psychon,1,https://github.com/i3/i3/pull/4363,"This commit makes libxcb prefetch some information that will be needed
later anyway. This avoids some round-trips to the X11 server since the
information is already present when needed.
Signed-off-by: Uli Schlachter psychon@znc.in

I took a look at some xtrace output and found some simple improvements. It would also be nice to prefetch render and shm, but that would require new build dependencies just for this prefetch:
$ grep :\ QueryExtens /tmp/t | grep 000:
000:<:0005: 20: Request(98): QueryExtension name='XKEYBOARD'
000:<:0006: 16: Request(98): QueryExtension name='XINERAMA'
000:<:0007: 16: Request(98): QueryExtension name='RANDR'
000:<:0008: 16: Request(98): QueryExtension name='SHAPE'
000:<:0009: 20: Request(98): QueryExtension name='BIG-REQUESTS'
000:<:0048: 16: Request(98): QueryExtension name='RENDER'
000:<:0049: 16: Request(98): QueryExtension name='MIT-SHM'

How did I decide where to place this? Before this commit, there were two round-trips to get the maximum request size. Thus, I just placed this to avoid these two round trips. Seems like cairo causes the request to the maximum request size while loading the config:
(gdb) bt
#0  xcb_get_maximum_request_length (c=0x5555555f62c0) at ../../src/xcb_out.c:160
#1  0x00007ffff788470a in  () at /usr/lib/x86_64-linux-gnu/libcairo.so.2
#2  0x00007ffff7886626 in  () at /usr/lib/x86_64-linux-gnu/libcairo.so.2
#3  0x00007ffff788904f in cairo_xcb_surface_create () at /usr/lib/x86_64-linux-gnu/libcairo.so.2
#4  0x00005555555bad39 in load_pango_font (font=0x7fffffffa850, desc=0x5555555f5396 ""DejaVu Sans Mono 8"")
    at ../libi3/font.c:60
#5  0x00005555555bb192 in load_font (pattern=0x5555555f5390 ""pango:DejaVu Sans Mono 8"", fallback=true) at ../libi3/font.c:175
#6  0x0000555555582be6 in cfg_font
    (current_match=0x5555555e28a0 <current_match>, result=0x5555555e2930 <subcommand_output>, font=0x5555555f5390 ""pango:DejaVu Sans Mono 8"") at ../src/config_directives.c:98
#7  0x00005555555874b2 in GENERATED_call (call_identifier=115, result=0x5555555e2930 <subcommand_output>)
    at ./GENERATED_config_call.h:937
#8  0x0000555555587562 in next_state (token=0x5555555e0bb0 <tokens_FONT>) at ../src/config_parser.c:210
#9  0x0000555555587bfd in parse_config
    (input=0x555555606be0 ""# i3 config file (v4)\n#\n# Please see https://i3wm.org/docs/userguide.html for a complete reference!\n\n# Font for window titles. Will also be used by the bar unless a different font\n# is used in the bar""..., context=0x555555602000) at ../src/config_parser.c:392
#10 0x0000555555589a12 in parse_file (f=0x5555555f53c0 ""/home/psychon/.config/i3/config"", use_nagbar=true)
    at ../src/config_parser.c:1096
#11 0x00005555555827f7 in load_configuration (override_configpath=0x0, load_type=C_LOAD) at ../src/config.c:229
#12 0x000055555559d801 in main (argc=1, argv=0x7fffffffe8a8) at ../src/main.c:642","This commit makes libxcb prefetch some information that will be needed
later anyway. This avoids some round-trips to the X11 server since the
information is already present when needed.
Signed-off-by: Uli Schlachter psychon@znc.in

I took a look at some xtrace output and found some simple improvements. It would also be nice to prefetch render and shm, but that would require new build dependencies just for this prefetch:
$ grep :\ QueryExtens /tmp/t | grep 000:
000:<:0005: 20: Request(98): QueryExtension name='XKEYBOARD'
000:<:0006: 16: Request(98): QueryExtension name='XINERAMA'
000:<:0007: 16: Request(98): QueryExtension name='RANDR'
000:<:0008: 16: Request(98): QueryExtension name='SHAPE'
000:<:0009: 20: Request(98): QueryExtension name='BIG-REQUESTS'
000:<:0048: 16: Request(98): QueryExtension name='RENDER'
000:<:0049: 16: Request(98): QueryExtension name='MIT-SHM'

How did I decide where to place this? Before this commit, there were two round-trips to get the maximum request size. Thus, I just placed this to avoid these two round trips. Seems like cairo causes the request to the maximum request size while loading the config:
(gdb) bt
#0  xcb_get_maximum_request_length (c=0x5555555f62c0) at ../../src/xcb_out.c:160
#1  0x00007ffff788470a in  () at /usr/lib/x86_64-linux-gnu/libcairo.so.2
#2  0x00007ffff7886626 in  () at /usr/lib/x86_64-linux-gnu/libcairo.so.2
#3  0x00007ffff788904f in cairo_xcb_surface_create () at /usr/lib/x86_64-linux-gnu/libcairo.so.2
#4  0x00005555555bad39 in load_pango_font (font=0x7fffffffa850, desc=0x5555555f5396 ""DejaVu Sans Mono 8"")
    at ../libi3/font.c:60
#5  0x00005555555bb192 in load_font (pattern=0x5555555f5390 ""pango:DejaVu Sans Mono 8"", fallback=true) at ../libi3/font.c:175
#6  0x0000555555582be6 in cfg_font
    (current_match=0x5555555e28a0 <current_match>, result=0x5555555e2930 <subcommand_output>, font=0x5555555f5390 ""pango:DejaVu Sans Mono 8"") at ../src/config_directives.c:98
#7  0x00005555555874b2 in GENERATED_call (call_identifier=115, result=0x5555555e2930 <subcommand_output>)
    at ./GENERATED_config_call.h:937
#8  0x0000555555587562 in next_state (token=0x5555555e0bb0 <tokens_FONT>) at ../src/config_parser.c:210
#9  0x0000555555587bfd in parse_config
    (input=0x555555606be0 ""# i3 config file (v4)\n#\n# Please see https://i3wm.org/docs/userguide.html for a complete reference!\n\n# Font for window titles. Will also be used by the bar unless a different font\n# is used in the bar""..., context=0x555555602000) at ../src/config_parser.c:392
#10 0x0000555555589a12 in parse_file (f=0x5555555f53c0 ""/home/psychon/.config/i3/config"", use_nagbar=true)
    at ../src/config_parser.c:1096
#11 0x00005555555827f7 in load_configuration (override_configpath=0x0, load_type=C_LOAD) at ../src/config.c:229
#12 0x000055555559d801 in main (argc=1, argv=0x7fffffffe8a8) at ../src/main.c:642",True,{}
i3/i3,https://github.com/i3/i3,4363,2021-03-05T13:22:41Z,2021-03-06T18:06:16Z,2021-03-07T08:08:36Z,MERGED,True,15,3,1,https://github.com/psychon,Prefetch some information through xcb,2,[],https://github.com/i3/i3/pull/4363,https://github.com/psychon,2,https://github.com/i3/i3/pull/4363#issuecomment-792236008,"This commit makes libxcb prefetch some information that will be needed
later anyway. This avoids some round-trips to the X11 server since the
information is already present when needed.
Signed-off-by: Uli Schlachter psychon@znc.in

I took a look at some xtrace output and found some simple improvements. It would also be nice to prefetch render and shm, but that would require new build dependencies just for this prefetch:
$ grep :\ QueryExtens /tmp/t | grep 000:
000:<:0005: 20: Request(98): QueryExtension name='XKEYBOARD'
000:<:0006: 16: Request(98): QueryExtension name='XINERAMA'
000:<:0007: 16: Request(98): QueryExtension name='RANDR'
000:<:0008: 16: Request(98): QueryExtension name='SHAPE'
000:<:0009: 20: Request(98): QueryExtension name='BIG-REQUESTS'
000:<:0048: 16: Request(98): QueryExtension name='RENDER'
000:<:0049: 16: Request(98): QueryExtension name='MIT-SHM'

How did I decide where to place this? Before this commit, there were two round-trips to get the maximum request size. Thus, I just placed this to avoid these two round trips. Seems like cairo causes the request to the maximum request size while loading the config:
(gdb) bt
#0  xcb_get_maximum_request_length (c=0x5555555f62c0) at ../../src/xcb_out.c:160
#1  0x00007ffff788470a in  () at /usr/lib/x86_64-linux-gnu/libcairo.so.2
#2  0x00007ffff7886626 in  () at /usr/lib/x86_64-linux-gnu/libcairo.so.2
#3  0x00007ffff788904f in cairo_xcb_surface_create () at /usr/lib/x86_64-linux-gnu/libcairo.so.2
#4  0x00005555555bad39 in load_pango_font (font=0x7fffffffa850, desc=0x5555555f5396 ""DejaVu Sans Mono 8"")
    at ../libi3/font.c:60
#5  0x00005555555bb192 in load_font (pattern=0x5555555f5390 ""pango:DejaVu Sans Mono 8"", fallback=true) at ../libi3/font.c:175
#6  0x0000555555582be6 in cfg_font
    (current_match=0x5555555e28a0 <current_match>, result=0x5555555e2930 <subcommand_output>, font=0x5555555f5390 ""pango:DejaVu Sans Mono 8"") at ../src/config_directives.c:98
#7  0x00005555555874b2 in GENERATED_call (call_identifier=115, result=0x5555555e2930 <subcommand_output>)
    at ./GENERATED_config_call.h:937
#8  0x0000555555587562 in next_state (token=0x5555555e0bb0 <tokens_FONT>) at ../src/config_parser.c:210
#9  0x0000555555587bfd in parse_config
    (input=0x555555606be0 ""# i3 config file (v4)\n#\n# Please see https://i3wm.org/docs/userguide.html for a complete reference!\n\n# Font for window titles. Will also be used by the bar unless a different font\n# is used in the bar""..., context=0x555555602000) at ../src/config_parser.c:392
#10 0x0000555555589a12 in parse_file (f=0x5555555f53c0 ""/home/psychon/.config/i3/config"", use_nagbar=true)
    at ../src/config_parser.c:1096
#11 0x00005555555827f7 in load_configuration (override_configpath=0x0, load_type=C_LOAD) at ../src/config.c:229
#12 0x000055555559d801 in main (argc=1, argv=0x7fffffffe8a8) at ../src/main.c:642","Just FYI: While looking at this, I noticed that xkbcommon needs lots and lots of round trips (I counted 78 round trips to the X11 server). This resulted in xkbcommon/libxkbcommon#216 and xkbcommon/libxkbcommon#217. That PR gets it down to three round trips (two is theoretically possible, but at this point I stopped caring enough to go that extra mile... eh, sorry, I meant to say ""but that would result in too weird code and hence I did not do it"".",True,{'THUMBS_UP': ['https://github.com/Airblader']}
i3/i3,https://github.com/i3/i3,4367,2021-03-07T12:20:28Z,,2021-03-07T12:33:28Z,OPEN,False,85,15,2,https://github.com/psychon,Batch updating the keyboard state / regrabbing keys,4,[],https://github.com/i3/i3/pull/4367,https://github.com/psychon,1,https://github.com/i3/i3/pull/4367,"This adds a test case that tests that i3 does something quickly. With current next, the test needs 13 seconds on my computer and fails. That's not quick. The following commits fix this by batching ""the keyboard changed""-stuff: Instead of executing this code once per event we receive, this is now only done once per main loop iteration.
This might or might not fix #3924 (no idea - I only tested with my new test case), hence CC @sammko
Also, I have no clue how to write test cases. I do not really know perl and I did not figure out the numbering scheme (thus went with 600). Perhaps this even has to handle the case ""xmodmap is not installed"" somehow? Dunno.
The test uses a time limit of two seconds because time() only provides second granularity. Limiting this to one second could cause failures where the current time is x.99999 when the test starts and (x+1).000001 when the test finishes. This would already look like a one second time difference. Allowing two seconds thus seemed the safest option to me.
Finally: IMO I am using way too many static variables for this, but let's see what you guys say about this.","This adds a test case that tests that i3 does something quickly. With current next, the test needs 13 seconds on my computer and fails. That's not quick. The following commits fix this by batching ""the keyboard changed""-stuff: Instead of executing this code once per event we receive, this is now only done once per main loop iteration.
This might or might not fix #3924 (no idea - I only tested with my new test case), hence CC @sammko
Also, I have no clue how to write test cases. I do not really know perl and I did not figure out the numbering scheme (thus went with 600). Perhaps this even has to handle the case ""xmodmap is not installed"" somehow? Dunno.
The test uses a time limit of two seconds because time() only provides second granularity. Limiting this to one second could cause failures where the current time is x.99999 when the test starts and (x+1).000001 when the test finishes. This would already look like a one second time difference. Allowing two seconds thus seemed the safest option to me.
Finally: IMO I am using way too many static variables for this, but let's see what you guys say about this.",True,{'THUMBS_UP': ['https://github.com/acheronfail']}
i3/i3,https://github.com/i3/i3,4367,2021-03-07T12:20:28Z,,2021-03-07T12:33:28Z,OPEN,False,85,15,2,https://github.com/psychon,Batch updating the keyboard state / regrabbing keys,4,[],https://github.com/i3/i3/pull/4367,https://github.com/psychon,2,https://github.com/i3/i3/pull/4367#issuecomment-792270729,"This adds a test case that tests that i3 does something quickly. With current next, the test needs 13 seconds on my computer and fails. That's not quick. The following commits fix this by batching ""the keyboard changed""-stuff: Instead of executing this code once per event we receive, this is now only done once per main loop iteration.
This might or might not fix #3924 (no idea - I only tested with my new test case), hence CC @sammko
Also, I have no clue how to write test cases. I do not really know perl and I did not figure out the numbering scheme (thus went with 600). Perhaps this even has to handle the case ""xmodmap is not installed"" somehow? Dunno.
The test uses a time limit of two seconds because time() only provides second granularity. Limiting this to one second could cause failures where the current time is x.99999 when the test starts and (x+1).000001 when the test finishes. This would already look like a one second time difference. Allowing two seconds thus seemed the safest option to me.
Finally: IMO I am using way too many static variables for this, but let's see what you guys say about this.","Hrm. The test definitely needs some more work. It just failed locally for me and I have no idea why:
#   Failed test 'Test finishes quickly'
#   at /home/psychon/projects/i3/testcases/t/600-slow-keyboard-update.t line 30.

Someone who knows perl & the test suite is invited to look at this and improve it somehow (a good first step would be to improve the error message to include the value of $delay). AFAIK you can just push new commits to the branch behind this PR.
Also, another test failed on Travis, but I cannot reproduce this locally.
#   Failed test 'Received precisely one event'
#   at /usr/src/i3/distbuild/meson-private/dist-unpack/i3-4.19.2/testcases/t/290-keypress-numlock.t line 86.
#          got: '0'
#     expected: '1'
#   Failed test 'change is ""run""'
#   at /usr/src/i3/distbuild/meson-private/dist-unpack/i3-4.19.2/testcases/t/290-keypress-numlock.t line 86.
#          got: undef
#     expected: 'run'
#   Failed test 'triggered the ""a"" keybinding'
#   at /usr/src/i3/distbuild/meson-private/dist-unpack/i3-4.19.2/testcases/t/290-keypress-numlock.t line 86.
#          got: undef
#     expected: 'a'

A random guess would be: The test uses xtest_sync_with_i3 which seems to work by sending an I3_SYNC message to the root window. My use of an ev idle watcher seems to be breaking the synchronisation here (since an I3_SYNC message could be handled before the idle watcher fires).
Urgh. Another synchronisation issue that I stepped into. :-(
Edit: Actually, its worse than that. The test (de)activates num lock, which means that keys are regrabbed. What prevents the following sequence of events?

the test suite activates num lock
i3 does ungrab_all_keys()
the test suite presses a, expecting a binding to trigger
i3 re-grabs the keys it is interested in

The above is quite unlikely in the current tests since all the xtest requests should be sent with a single write() syscall, but this still seems potentially racy.
Perhaps this needs a xtest_sync_with_i3 after activating num lock and hoping that this gives enough time to the idle watcher to fire? Hrm...",True,{}
i3/i3,https://github.com/i3/i3,4370,2021-03-09T08:22:08Z,2021-03-12T09:18:08Z,2021-03-12T09:39:26Z,MERGED,True,37,9,5,https://github.com/psychon,Improve sync docs in the testsuite,3,[],https://github.com/i3/i3/pull/4370,https://github.com/psychon,1,https://github.com/i3/i3/pull/4370,"Here is my attempt at fixing #4365. Please double check what I did here, because:

I am describing something that I learnt in the last few days by reading source code (no tests were run!). Thus, it is possible that my understanding is wrong.
I had to use dia to change images. I have no idea what I am doing here (but felt that it is necessary to add the IPC response to the images). (Please don't make me touch dia again...)
I have no idea what format is used for these docs and was too lazy to figure this out. Thanks to this I noticed that I am way too used to markdown these days.","Here is my attempt at fixing #4365. Please double check what I did here, because:

I am describing something that I learnt in the last few days by reading source code (no tests were run!). Thus, it is possible that my understanding is wrong.
I had to use dia to change images. I have no idea what I am doing here (but felt that it is necessary to add the IPC response to the images). (Please don't make me touch dia again...)
I have no idea what format is used for these docs and was too lazy to figure this out. Thanks to this I noticed that I am way too used to markdown these days.",True,{}
i3/i3,https://github.com/i3/i3,4370,2021-03-09T08:22:08Z,2021-03-12T09:18:08Z,2021-03-12T09:39:26Z,MERGED,True,37,9,5,https://github.com/psychon,Improve sync docs in the testsuite,3,[],https://github.com/i3/i3/pull/4370,https://github.com/psychon,2,https://github.com/i3/i3/pull/4370#issuecomment-795484715,"Here is my attempt at fixing #4365. Please double check what I did here, because:

I am describing something that I learnt in the last few days by reading source code (no tests were run!). Thus, it is possible that my understanding is wrong.
I had to use dia to change images. I have no idea what I am doing here (but felt that it is necessary to add the IPC response to the images). (Please don't make me touch dia again...)
I have no idea what format is used for these docs and was too lazy to figure this out. Thanks to this I noticed that I am way too used to markdown these days.","The images were previously *.png, now *.dia – how come?

The images were always *.dia plus a *.png exported from dia. But GH is clearly now showing this properly. Its claim of ""empty file"" does not help...
This is how git show shows the situation:
diff --git a/docs/i3-sync-working.dia b/docs/i3-sync-working.dia
index 9f1c3bc8..25803828 100644
Binary files a/docs/i3-sync-working.dia and b/docs/i3-sync-working.dia differ
diff --git a/docs/i3-sync-working.png b/docs/i3-sync-working.png
index dce44ac5..419334d0 100644
Binary files a/docs/i3-sync-working.png and b/docs/i3-sync-working.png differ
diff --git a/docs/i3-sync.dia b/docs/i3-sync.dia
index 0945ae26..c8fb8359 100644
Binary files a/docs/i3-sync.dia and b/docs/i3-sync.dia differ
diff --git a/docs/i3-sync.png b/docs/i3-sync.png
index b64cce25..c9a5a01c 100644
Binary files a/docs/i3-sync.png and b/docs/i3-sync.png differ",True,{}
i3/i3,https://github.com/i3/i3,4370,2021-03-09T08:22:08Z,2021-03-12T09:18:08Z,2021-03-12T09:39:26Z,MERGED,True,37,9,5,https://github.com/psychon,Improve sync docs in the testsuite,3,[],https://github.com/i3/i3/pull/4370,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/4370#issuecomment-797354728,"Here is my attempt at fixing #4365. Please double check what I did here, because:

I am describing something that I learnt in the last few days by reading source code (no tests were run!). Thus, it is possible that my understanding is wrong.
I had to use dia to change images. I have no idea what I am doing here (but felt that it is necessary to add the IPC response to the images). (Please don't make me touch dia again...)
I have no idea what format is used for these docs and was too lazy to figure this out. Thanks to this I noticed that I am way too used to markdown these days.","Looks good, thanks for this!


I have no idea what format is used for these docs and was too lazy to figure this out. Thanks to this I noticed that I am way too used to markdown these days.


It’s asciidoc, but we’re switching to markdown in #4327 :)",True,"{'THUMBS_UP': ['https://github.com/psychon'], 'LAUGH': ['https://github.com/psychon']}"
i3/i3,https://github.com/i3/i3,4372,2021-03-10T12:39:11Z,2021-03-10T14:21:39Z,2021-03-10T14:21:43Z,CLOSED,False,0,1,1,https://github.com/psychon,Remove a useless call to draw_util_surface_set_size(),1,[],https://github.com/i3/i3/pull/4372,https://github.com/psychon,1,https://github.com/i3/i3/pull/4372,"There was just a call to draw_util_surface_init() with the same
width/height just some lines above. Re-setting the size does nothing.
Signed-off-by: Uli Schlachter psychon@znc.in","There was just a call to draw_util_surface_init() with the same
width/height just some lines above. Re-setting the size does nothing.
Signed-off-by: Uli Schlachter psychon@znc.in",True,{}
i3/i3,https://github.com/i3/i3,4372,2021-03-10T12:39:11Z,2021-03-10T14:21:39Z,2021-03-10T14:21:43Z,CLOSED,False,0,1,1,https://github.com/psychon,Remove a useless call to draw_util_surface_set_size(),1,[],https://github.com/i3/i3/pull/4372,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/4372#issuecomment-795380995,"There was just a call to draw_util_surface_init() with the same
width/height just some lines above. Re-setting the size does nothing.
Signed-off-by: Uli Schlachter psychon@znc.in","One seems to be about ->frame and the other about ->frame_buffer, did you notice that?",True,{}
i3/i3,https://github.com/i3/i3,4372,2021-03-10T12:39:11Z,2021-03-10T14:21:39Z,2021-03-10T14:21:43Z,CLOSED,False,0,1,1,https://github.com/psychon,Remove a useless call to draw_util_surface_set_size(),1,[],https://github.com/i3/i3/pull/4372,https://github.com/psychon,3,https://github.com/i3/i3/pull/4372#issuecomment-795479763,"There was just a call to draw_util_surface_init() with the same
width/height just some lines above. Re-setting the size does nothing.
Signed-off-by: Uli Schlachter psychon@znc.in","And I thought I triple-checked this... Sigh.
Sorry for the noise!",True,{}
i3/i3,https://github.com/i3/i3,4373,2021-03-10T12:47:33Z,2021-05-20T19:37:36Z,2021-05-20T20:04:15Z,MERGED,True,192,17,6,https://github.com/psychon,"Do not ""set"" the wallpaper during startup",5,[],https://github.com/i3/i3/pull/4373,https://github.com/psychon,1,https://github.com/i3/i3/pull/4373,"This basically reverts 4f5e0e7: During startup, i3 would take a
screenshot and set that as the background pixmap of the root window.
This is the easy part of setting an X11 wallpaper.
The code in question was added because something either set the
background pixmap of the root window to NONE or the X11 server was
started with ""-background none"". I'm tempted to say ""the people in
question get what they asked for"", but perhaps telling them to ""exec
--no-startup-id xsetroot -solid black"" in their config is a better
reaction.
(I have not found any issue / bug report from ""back then"" which caused the code
in question to be added, so I cannot really say more.)
Fixes: #4371
Fixes: #2869
Signed-off-by: Uli Schlachter psychon@znc.in","This basically reverts 4f5e0e7: During startup, i3 would take a
screenshot and set that as the background pixmap of the root window.
This is the easy part of setting an X11 wallpaper.
The code in question was added because something either set the
background pixmap of the root window to NONE or the X11 server was
started with ""-background none"". I'm tempted to say ""the people in
question get what they asked for"", but perhaps telling them to ""exec
--no-startup-id xsetroot -solid black"" in their config is a better
reaction.
(I have not found any issue / bug report from ""back then"" which caused the code
in question to be added, so I cannot really say more.)
Fixes: #4371
Fixes: #2869
Signed-off-by: Uli Schlachter psychon@znc.in",True,{}
i3/i3,https://github.com/i3/i3,4373,2021-03-10T12:47:33Z,2021-05-20T19:37:36Z,2021-05-20T20:04:15Z,MERGED,True,192,17,6,https://github.com/psychon,"Do not ""set"" the wallpaper during startup",5,[],https://github.com/i3/i3/pull/4373,https://github.com/Airblader,2,https://github.com/i3/i3/pull/4373#issuecomment-795448789,"This basically reverts 4f5e0e7: During startup, i3 would take a
screenshot and set that as the background pixmap of the root window.
This is the easy part of setting an X11 wallpaper.
The code in question was added because something either set the
background pixmap of the root window to NONE or the X11 server was
started with ""-background none"". I'm tempted to say ""the people in
question get what they asked for"", but perhaps telling them to ""exec
--no-startup-id xsetroot -solid black"" in their config is a better
reaction.
(I have not found any issue / bug report from ""back then"" which caused the code
in question to be added, so I cannot really say more.)
Fixes: #4371
Fixes: #2869
Signed-off-by: Uli Schlachter psychon@znc.in","It seems for years I was telling lies, saying that i3 does not manage/set the wallpaper. :-( As @stapelberg wrote in the commit message (albeit that was eight years ago cough)

This commit has some chance of breakage, so I’m prepared to revert it unless we can figure out the issues and roll forward.

I'm OK with the change, but I think we'll need to document this somehow. At the very least, can you please update RELEASE-NOTES-next to add a note about this?",True,{}
i3/i3,https://github.com/i3/i3,4373,2021-03-10T12:47:33Z,2021-05-20T19:37:36Z,2021-05-20T20:04:15Z,MERGED,True,192,17,6,https://github.com/psychon,"Do not ""set"" the wallpaper during startup",5,[],https://github.com/i3/i3/pull/4373,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/4373#issuecomment-795457749,"This basically reverts 4f5e0e7: During startup, i3 would take a
screenshot and set that as the background pixmap of the root window.
This is the easy part of setting an X11 wallpaper.
The code in question was added because something either set the
background pixmap of the root window to NONE or the X11 server was
started with ""-background none"". I'm tempted to say ""the people in
question get what they asked for"", but perhaps telling them to ""exec
--no-startup-id xsetroot -solid black"" in their config is a better
reaction.
(I have not found any issue / bug report from ""back then"" which caused the code
in question to be added, so I cannot really say more.)
Fixes: #4371
Fixes: #2869
Signed-off-by: Uli Schlachter psychon@znc.in","AFAIR, this was a problem that was reported with certain login managers (lightdm perhaps? or slim?).
It might be good to check that this commit works with the most common login managers in use today.",True,{}
i3/i3,https://github.com/i3/i3,4373,2021-03-10T12:47:33Z,2021-05-20T19:37:36Z,2021-05-20T20:04:15Z,MERGED,True,192,17,6,https://github.com/psychon,"Do not ""set"" the wallpaper during startup",5,[],https://github.com/i3/i3/pull/4373,https://github.com/psychon,4,https://github.com/i3/i3/pull/4373#issuecomment-795503688,"This basically reverts 4f5e0e7: During startup, i3 would take a
screenshot and set that as the background pixmap of the root window.
This is the easy part of setting an X11 wallpaper.
The code in question was added because something either set the
background pixmap of the root window to NONE or the X11 server was
started with ""-background none"". I'm tempted to say ""the people in
question get what they asked for"", but perhaps telling them to ""exec
--no-startup-id xsetroot -solid black"" in their config is a better
reaction.
(I have not found any issue / bug report from ""back then"" which caused the code
in question to be added, so I cannot really say more.)
Fixes: #4371
Fixes: #2869
Signed-off-by: Uli Schlachter psychon@znc.in","At the very least, can you please update RELEASE-NOTES-next to add a note about this?

Sure. However, I am not quite sure about the usual file format of these files (neither of the two RELEASE-NOTES files has much content). What do you think about the following?
diff --git a/RELEASE-NOTES-next b/RELEASE-NOTES-next
index 928f276a..a5b4b75a 100644
--- a/RELEASE-NOTES-next
+++ b/RELEASE-NOTES-next
@@ -21,6 +21,7 @@ strongly encouraged to upgrade.
   • Add %machine placeholder (WM_CLIENT_MACHINE) to title_format
   • Allow multiple output names in 'move container|workspace to output'
   • Add 'move container|workspace to output next'
+  • During startup the wallpaper was previously set to a screenshot
 
  ┌────────────────────────────┐
  │ Bugfixes                   │
Alternative suggestion would be ""No longer take a screenshot and set it as the wallpaper during startup"", but that seems a bit long. ""Stop setting the wallpaper to a screenshot during startup""?

It might be good to check that this commit works with the most common login managers in use today.

To whoever will be testing this: Make sure your i3 config does not start anything that sets a wallpaper, since this basically defeats the purpose. As I understand it, the testing strategy would be:

start i3
start some window (e.g. a terminal)
switch to another workspace

If your root window has its background pixmap set to NONE, the old ""pixels"" will stay visible: You get a terminal without a blinking cursor and without being able to interact with it.
(Last time I switched to another VT, Xorg no longer allowed me to switch back, so I pass. The error was something like drmSetMaster() failed according to Xorg.0.log. Sorry.)",True,{}
i3/i3,https://github.com/i3/i3,4373,2021-03-10T12:47:33Z,2021-05-20T19:37:36Z,2021-05-20T20:04:15Z,MERGED,True,192,17,6,https://github.com/psychon,"Do not ""set"" the wallpaper during startup",5,[],https://github.com/i3/i3/pull/4373,https://github.com/Airblader,5,https://github.com/i3/i3/pull/4373#issuecomment-795514985,"This basically reverts 4f5e0e7: During startup, i3 would take a
screenshot and set that as the background pixmap of the root window.
This is the easy part of setting an X11 wallpaper.
The code in question was added because something either set the
background pixmap of the root window to NONE or the X11 server was
started with ""-background none"". I'm tempted to say ""the people in
question get what they asked for"", but perhaps telling them to ""exec
--no-startup-id xsetroot -solid black"" in their config is a better
reaction.
(I have not found any issue / bug report from ""back then"" which caused the code
in question to be added, so I cannot really say more.)
Fixes: #4371
Fixes: #2869
Signed-off-by: Uli Schlachter psychon@znc.in","What do you think about the following?

The intention was never to ""screenshot and copy it over""( even if that is what it did), so to avoid confusion I'd phrase it a bit more abstract, like

Do not copy the pixmap of the root screen on startup

As for testing, we're looking at an almost fresh release cycle ahead of us, so I'd be willing to merge it without testing it extensively upfront.",True,{}
i3/i3,https://github.com/i3/i3,4373,2021-03-10T12:47:33Z,2021-05-20T19:37:36Z,2021-05-20T20:04:15Z,MERGED,True,192,17,6,https://github.com/psychon,"Do not ""set"" the wallpaper during startup",5,[],https://github.com/i3/i3/pull/4373,https://github.com/psychon,6,https://github.com/i3/i3/pull/4373#issuecomment-795522520,"This basically reverts 4f5e0e7: During startup, i3 would take a
screenshot and set that as the background pixmap of the root window.
This is the easy part of setting an X11 wallpaper.
The code in question was added because something either set the
background pixmap of the root window to NONE or the X11 server was
started with ""-background none"". I'm tempted to say ""the people in
question get what they asked for"", but perhaps telling them to ""exec
--no-startup-id xsetroot -solid black"" in their config is a better
reaction.
(I have not found any issue / bug report from ""back then"" which caused the code
in question to be added, so I cannot really say more.)
Fixes: #4371
Fixes: #2869
Signed-off-by: Uli Schlachter psychon@znc.in","Do not copy the pixmap of the root screen on startup

I went with the slightly longer ""Do not copy the root window's content to its background pixmap on startup"". I would like to write ""to a new pixmap and use that as the root window's background pixmap"", but that seems too long.",True,{'THUMBS_UP': ['https://github.com/Airblader']}
i3/i3,https://github.com/i3/i3,4373,2021-03-10T12:47:33Z,2021-05-20T19:37:36Z,2021-05-20T20:04:15Z,MERGED,True,192,17,6,https://github.com/psychon,"Do not ""set"" the wallpaper during startup",5,[],https://github.com/i3/i3/pull/4373,https://github.com/stapelberg,7,https://github.com/i3/i3/pull/4373#issuecomment-797358865,"This basically reverts 4f5e0e7: During startup, i3 would take a
screenshot and set that as the background pixmap of the root window.
This is the easy part of setting an X11 wallpaper.
The code in question was added because something either set the
background pixmap of the root window to NONE or the X11 server was
started with ""-background none"". I'm tempted to say ""the people in
question get what they asked for"", but perhaps telling them to ""exec
--no-startup-id xsetroot -solid black"" in their config is a better
reaction.
(I have not found any issue / bug report from ""back then"" which caused the code
in question to be added, so I cannot really say more.)
Fixes: #4371
Fixes: #2869
Signed-off-by: Uli Schlachter psychon@znc.in","I went with the slightly longer ""Do not copy the root window's content to its background pixmap on startup"". I would like to write ""to a new pixmap and use that as the root window's background pixmap"", but that seems too long.

Optimizing for short lines is a secondary concern for our release notes.
Instead, I would encourage you to think from the perspective of a user. Repeatedly ask yourself “I have no idea what any of these words mean” and “but what does this mean for me?”.
In this particular case, when would people look for this commit? Likely if their background unexpectedly changes from the last version of i3 to the current version of i3. Can you update the message to briefly mention this case, so that users have something to go on when debugging?",True,{}
i3/i3,https://github.com/i3/i3,4373,2021-03-10T12:47:33Z,2021-05-20T19:37:36Z,2021-05-20T20:04:15Z,MERGED,True,192,17,6,https://github.com/psychon,"Do not ""set"" the wallpaper during startup",5,[],https://github.com/i3/i3/pull/4373,https://github.com/Airblader,8,https://github.com/i3/i3/pull/4373#issuecomment-797360177,"This basically reverts 4f5e0e7: During startup, i3 would take a
screenshot and set that as the background pixmap of the root window.
This is the easy part of setting an X11 wallpaper.
The code in question was added because something either set the
background pixmap of the root window to NONE or the X11 server was
started with ""-background none"". I'm tempted to say ""the people in
question get what they asked for"", but perhaps telling them to ""exec
--no-startup-id xsetroot -solid black"" in their config is a better
reaction.
(I have not found any issue / bug report from ""back then"" which caused the code
in question to be added, so I cannot really say more.)
Fixes: #4371
Fixes: #2869
Signed-off-by: Uli Schlachter psychon@znc.in","That's why I raised the question of ""where to document this"". I don't expect any user to find it buried in the list of commits of the release notes, to be honest. It might rather be worth featuring this prominently in the summary of the release notes itself?",True,{}
i3/i3,https://github.com/i3/i3,4373,2021-03-10T12:47:33Z,2021-05-20T19:37:36Z,2021-05-20T20:04:15Z,MERGED,True,192,17,6,https://github.com/psychon,"Do not ""set"" the wallpaper during startup",5,[],https://github.com/i3/i3/pull/4373,https://github.com/stapelberg,9,https://github.com/i3/i3/pull/4373#issuecomment-797361707,"This basically reverts 4f5e0e7: During startup, i3 would take a
screenshot and set that as the background pixmap of the root window.
This is the easy part of setting an X11 wallpaper.
The code in question was added because something either set the
background pixmap of the root window to NONE or the X11 server was
started with ""-background none"". I'm tempted to say ""the people in
question get what they asked for"", but perhaps telling them to ""exec
--no-startup-id xsetroot -solid black"" in their config is a better
reaction.
(I have not found any issue / bug report from ""back then"" which caused the code
in question to be added, so I cannot really say more.)
Fixes: #4371
Fixes: #2869
Signed-off-by: Uli Schlachter psychon@znc.in","That's why I raised the question of ""where to document this"". I don't expect any user to find it buried in the list of commits of the release notes, to be honest.

I have thus far considered the lists in the release notes to be directed at users, not merely a git commit dump. The longest bit about getting a new release out is (was?) re-writing commit messages to make sense for users.

It might rather be worth featuring this prominently in the summary of the release notes itself?

Sounds like we need to run a few tests to gather more certainty as to whether this is a behavior-affecting change or not :)",True,{}
i3/i3,https://github.com/i3/i3,4373,2021-03-10T12:47:33Z,2021-05-20T19:37:36Z,2021-05-20T20:04:15Z,MERGED,True,192,17,6,https://github.com/psychon,"Do not ""set"" the wallpaper during startup",5,[],https://github.com/i3/i3/pull/4373,https://github.com/Airblader,10,https://github.com/i3/i3/pull/4373#issuecomment-797365084,"This basically reverts 4f5e0e7: During startup, i3 would take a
screenshot and set that as the background pixmap of the root window.
This is the easy part of setting an X11 wallpaper.
The code in question was added because something either set the
background pixmap of the root window to NONE or the X11 server was
started with ""-background none"". I'm tempted to say ""the people in
question get what they asked for"", but perhaps telling them to ""exec
--no-startup-id xsetroot -solid black"" in their config is a better
reaction.
(I have not found any issue / bug report from ""back then"" which caused the code
in question to be added, so I cannot really say more.)
Fixes: #4371
Fixes: #2869
Signed-off-by: Uli Schlachter psychon@znc.in","It's not a commit dump, of course, but it is a long list of things that ultimately represent PRs/commits. It's not exactly a release blog post with shiny pictures and videos and marketing language of ""what's new in i3 4.xyz"". :-)
I have my doubts that most people update and carefully read the release notes (if at all), especially since we try to make compatible update paths exactly so that users don't have to worry about a changelog before updating. Of course I might be wrong.",True,{}
i3/i3,https://github.com/i3/i3,4373,2021-03-10T12:47:33Z,2021-05-20T19:37:36Z,2021-05-20T20:04:15Z,MERGED,True,192,17,6,https://github.com/psychon,"Do not ""set"" the wallpaper during startup",5,[],https://github.com/i3/i3/pull/4373,https://github.com/stapelberg,11,https://github.com/i3/i3/pull/4373#issuecomment-797367088,"This basically reverts 4f5e0e7: During startup, i3 would take a
screenshot and set that as the background pixmap of the root window.
This is the easy part of setting an X11 wallpaper.
The code in question was added because something either set the
background pixmap of the root window to NONE or the X11 server was
started with ""-background none"". I'm tempted to say ""the people in
question get what they asked for"", but perhaps telling them to ""exec
--no-startup-id xsetroot -solid black"" in their config is a better
reaction.
(I have not found any issue / bug report from ""back then"" which caused the code
in question to be added, so I cannot really say more.)
Fixes: #4371
Fixes: #2869
Signed-off-by: Uli Schlachter psychon@znc.in","I have my doubts that most people update and carefully read the release notes (if at all), especially since we try to make compatible update paths exactly so that users don't have to worry about a changelog before updating. Of course I might be wrong.

I agree with that, but at the same time, I think the release notes are the first place where people would start looking for details on what has changed if they encounter a problem after an upgrade. It’s certainly easier than to dig through actual git commits yourself :)",True,{}
i3/i3,https://github.com/i3/i3,4373,2021-03-10T12:47:33Z,2021-05-20T19:37:36Z,2021-05-20T20:04:15Z,MERGED,True,192,17,6,https://github.com/psychon,"Do not ""set"" the wallpaper during startup",5,[],https://github.com/i3/i3/pull/4373,https://github.com/Airblader,12,https://github.com/i3/i3/pull/4373#issuecomment-797368671,"This basically reverts 4f5e0e7: During startup, i3 would take a
screenshot and set that as the background pixmap of the root window.
This is the easy part of setting an X11 wallpaper.
The code in question was added because something either set the
background pixmap of the root window to NONE or the X11 server was
started with ""-background none"". I'm tempted to say ""the people in
question get what they asked for"", but perhaps telling them to ""exec
--no-startup-id xsetroot -solid black"" in their config is a better
reaction.
(I have not found any issue / bug report from ""back then"" which caused the code
in question to be added, so I cannot really say more.)
Fixes: #4371
Fixes: #2869
Signed-off-by: Uli Schlachter psychon@znc.in","Right, and I'm totally on-board with phrasing it for them to find it easier. But in terms of offering a solution, we should probably feature that more permanently, or at least I think that would be quite helpful.
I've even considered whether we should add a commented-out xsetroot call in the default config that roughly says something along the lines of ""if you don't use anything that sets a wallpaper, running something like this is a good idea"".",True,{}
i3/i3,https://github.com/i3/i3,4373,2021-03-10T12:47:33Z,2021-05-20T19:37:36Z,2021-05-20T20:04:15Z,MERGED,True,192,17,6,https://github.com/psychon,"Do not ""set"" the wallpaper during startup",5,[],https://github.com/i3/i3/pull/4373,https://github.com/psychon,13,https://github.com/i3/i3/pull/4373#issuecomment-797377587,"This basically reverts 4f5e0e7: During startup, i3 would take a
screenshot and set that as the background pixmap of the root window.
This is the easy part of setting an X11 wallpaper.
The code in question was added because something either set the
background pixmap of the root window to NONE or the X11 server was
started with ""-background none"". I'm tempted to say ""the people in
question get what they asked for"", but perhaps telling them to ""exec
--no-startup-id xsetroot -solid black"" in their config is a better
reaction.
(I have not found any issue / bug report from ""back then"" which caused the code
in question to be added, so I cannot really say more.)
Fixes: #4371
Fixes: #2869
Signed-off-by: Uli Schlachter psychon@znc.in","I've even considered whether we should add a commented-out xsetroot call in the default config that roughly says something along the lines of ""if you don't use anything that sets a wallpaper, running something like this is a good idea"".

That  seems quite sensible to me. I can do that in this PR if wanted.

Repeatedly ask yourself “I have no idea what any of these words mean” and “but what does this mean for me?”.

Okay... current version:

Do not copy the root window's content to its background pixmap on startup

My proposal from the above:

i3 used to take a screenshot and set it as the wallpaper when initially starting up. This was done some years ago to work around problems with some display manager, but caused problems when the screenshot was actually showing windows. Thus, this code was dropped in this release. If you do not set a wallpaper, it is recommended to add exec --no-startup-id xsetroot -solid black to your config.

Reason why I do not like the above: Way too verbose compared to the other lines in there.",True,{}
i3/i3,https://github.com/i3/i3,4373,2021-03-10T12:47:33Z,2021-05-20T19:37:36Z,2021-05-20T20:04:15Z,MERGED,True,192,17,6,https://github.com/psychon,"Do not ""set"" the wallpaper during startup",5,[],https://github.com/i3/i3/pull/4373,https://github.com/stapelberg,14,https://github.com/i3/i3/pull/4373#issuecomment-797398247,"This basically reverts 4f5e0e7: During startup, i3 would take a
screenshot and set that as the background pixmap of the root window.
This is the easy part of setting an X11 wallpaper.
The code in question was added because something either set the
background pixmap of the root window to NONE or the X11 server was
started with ""-background none"". I'm tempted to say ""the people in
question get what they asked for"", but perhaps telling them to ""exec
--no-startup-id xsetroot -solid black"" in their config is a better
reaction.
(I have not found any issue / bug report from ""back then"" which caused the code
in question to be added, so I cannot really say more.)
Fixes: #4371
Fixes: #2869
Signed-off-by: Uli Schlachter psychon@znc.in","i3 used to take a screenshot and set it as the wallpaper when initially starting up. This was done some years ago to work around problems with some display manager, but caused problems when the screenshot was actually showing windows. Thus, this code was dropped in this release. If you do not set a wallpaper, it is recommended to add exec --no-startup-id xsetroot -solid black to your config.


This sounds good to me!
It’s the perfect length for the prose section above the lines. Depending on further testing, we should either put it into prose (if we find any breakage) or list (if we find no breakage). Either way, length is fine :)",True,{}
i3/i3,https://github.com/i3/i3,4373,2021-03-10T12:47:33Z,2021-05-20T19:37:36Z,2021-05-20T20:04:15Z,MERGED,True,192,17,6,https://github.com/psychon,"Do not ""set"" the wallpaper during startup",5,[],https://github.com/i3/i3/pull/4373,https://github.com/psychon,15,https://github.com/i3/i3/pull/4373#issuecomment-797591988,"This basically reverts 4f5e0e7: During startup, i3 would take a
screenshot and set that as the background pixmap of the root window.
This is the easy part of setting an X11 wallpaper.
The code in question was added because something either set the
background pixmap of the root window to NONE or the X11 server was
started with ""-background none"". I'm tempted to say ""the people in
question get what they asked for"", but perhaps telling them to ""exec
--no-startup-id xsetroot -solid black"" in their config is a better
reaction.
(I have not found any issue / bug report from ""back then"" which caused the code
in question to be added, so I cannot really say more.)
Fixes: #4371
Fixes: #2869
Signed-off-by: Uli Schlachter psychon@znc.in",It is possible I finally understood what you meant. New version of the last commit pushed (I replaced the RELEASE-NOTES commit with a different one).,True,{}
i3/i3,https://github.com/i3/i3,4373,2021-03-10T12:47:33Z,2021-05-20T19:37:36Z,2021-05-20T20:04:15Z,MERGED,True,192,17,6,https://github.com/psychon,"Do not ""set"" the wallpaper during startup",5,[],https://github.com/i3/i3/pull/4373,https://github.com/stapelberg,16,https://github.com/i3/i3/pull/4373#issuecomment-798070553,"This basically reverts 4f5e0e7: During startup, i3 would take a
screenshot and set that as the background pixmap of the root window.
This is the easy part of setting an X11 wallpaper.
The code in question was added because something either set the
background pixmap of the root window to NONE or the X11 server was
started with ""-background none"". I'm tempted to say ""the people in
question get what they asked for"", but perhaps telling them to ""exec
--no-startup-id xsetroot -solid black"" in their config is a better
reaction.
(I have not found any issue / bug report from ""back then"" which caused the code
in question to be added, so I cannot really say more.)
Fixes: #4371
Fixes: #2869
Signed-off-by: Uli Schlachter psychon@znc.in","The commits look good, but we still need to test the change, I think.
What does the test matrix look like (i.e. which display managers, in which configurations)? What is the test procedure?",True,{}
i3/i3,https://github.com/i3/i3,4373,2021-03-10T12:47:33Z,2021-05-20T19:37:36Z,2021-05-20T20:04:15Z,MERGED,True,192,17,6,https://github.com/psychon,"Do not ""set"" the wallpaper during startup",5,[],https://github.com/i3/i3/pull/4373,https://github.com/psychon,17,https://github.com/i3/i3/pull/4373#issuecomment-798151013,"This basically reverts 4f5e0e7: During startup, i3 would take a
screenshot and set that as the background pixmap of the root window.
This is the easy part of setting an X11 wallpaper.
The code in question was added because something either set the
background pixmap of the root window to NONE or the X11 server was
started with ""-background none"". I'm tempted to say ""the people in
question get what they asked for"", but perhaps telling them to ""exec
--no-startup-id xsetroot -solid black"" in their config is a better
reaction.
(I have not found any issue / bug report from ""back then"" which caused the code
in question to be added, so I cannot really say more.)
Fixes: #4371
Fixes: #2869
Signed-off-by: Uli Schlachter psychon@znc.in","What is the test procedure?

So far I only tested starting an xterm before i3 in Xephyr and switching to another (empty) workspace. Before this change, I ended up with a non-working xterm. This is basically the test for ""fixes #2869"". (Oh and: I ran i3 -c /dev/null to make sure it does not set a wallpaper.)
With relation to display managers (=testing that this does not reintroduce 4f5e0e7): If I understand the commit message correctly, this means:

start i3 (and make sure it does not set a wallpaper while starting)
open some window
switch to another (empty) workspace

If the background pixmap of the root window is set to None, the X11 server will not update the screen contents. Thus, you end up with a non-working ""screenshot"" of the window that you opened.
(Heh, before this I did not notice that both scenarios show basically the same problematic behaviour.)

What does the test matrix look like (i.e. which display managers, in which configurations)?

So far, I did no testing at all. (Well, only the testing I mentioned above.)
I just removed my wallpaper command from ~/.config/i3/config, so somewhen in the next days I will be testing with lightdm.
4f5e0e7 talks about GDM3. I do not have that installed and will not install it to test this, sorry.
Edit:

I just removed my wallpaper command from ~/.config/i3/config, so somewhen in the next days I will be testing with lightdm.

I just ended up with the debian default wallpaper as my wallpaper. Nothing special happened and no breakage.",True,{}
i3/i3,https://github.com/i3/i3,4373,2021-03-10T12:47:33Z,2021-05-20T19:37:36Z,2021-05-20T20:04:15Z,MERGED,True,192,17,6,https://github.com/psychon,"Do not ""set"" the wallpaper during startup",5,[],https://github.com/i3/i3/pull/4373,https://github.com/psychon,18,https://github.com/i3/i3/pull/4373#issuecomment-798153206,"This basically reverts 4f5e0e7: During startup, i3 would take a
screenshot and set that as the background pixmap of the root window.
This is the easy part of setting an X11 wallpaper.
The code in question was added because something either set the
background pixmap of the root window to NONE or the X11 server was
started with ""-background none"". I'm tempted to say ""the people in
question get what they asked for"", but perhaps telling them to ""exec
--no-startup-id xsetroot -solid black"" in their config is a better
reaction.
(I have not found any issue / bug report from ""back then"" which caused the code
in question to be added, so I cannot really say more.)
Fixes: #4371
Fixes: #2869
Signed-off-by: Uli Schlachter psychon@znc.in","Judging from https://github.com/GNOME/gdm/blob/fb319044165f2b4c6e194cf26380c29efc675f64/daemon/gdm-server.c#L221 and https://github.com/GNOME/gdm/blob/349e6af855a1c1dbee9af3e5881e00b66482d155/daemon/gdm-x-session.c#L275-L276, I would say that gdm most likely still starts the X11 server with -background none, so that definitely needs some testing.
Bonus points for ps aux | grep background and making sure the X11 server was really started with -background none.
Is anyone here able to easily do this test? Any volunteers?
Edit: With my current lightdm session, I get:
$ ps aux | grep Xorg
root         575  3.5  0.2 1003216 87672 tty7    Ssl+ 08:44   6:55 /usr/lib/xorg/Xorg :0 -seat seat0 -auth /var/run/lightdm/root/:0 -nolisten tcp vt7 -novtswitch",True,{}
i3/i3,https://github.com/i3/i3,4373,2021-03-10T12:47:33Z,2021-05-20T19:37:36Z,2021-05-20T20:04:15Z,MERGED,True,192,17,6,https://github.com/psychon,"Do not ""set"" the wallpaper during startup",5,[],https://github.com/i3/i3/pull/4373,https://github.com/stapelberg,19,https://github.com/i3/i3/pull/4373#issuecomment-799207117,"This basically reverts 4f5e0e7: During startup, i3 would take a
screenshot and set that as the background pixmap of the root window.
This is the easy part of setting an X11 wallpaper.
The code in question was added because something either set the
background pixmap of the root window to NONE or the X11 server was
started with ""-background none"". I'm tempted to say ""the people in
question get what they asked for"", but perhaps telling them to ""exec
--no-startup-id xsetroot -solid black"" in their config is a better
reaction.
(I have not found any issue / bug report from ""back then"" which caused the code
in question to be added, so I cannot really say more.)
Fixes: #4371
Fixes: #2869
Signed-off-by: Uli Schlachter psychon@znc.in","4f5e0e7 talks about GDM3. I do not have that installed and will not install it to test this, sorry.

With gdm on Fedora 33, I indeed get the following Xorg command line which includes -background none:
michael         8983  20   0  0.1  0.1          \_ /usr/libexec/Xorg vt3 -displayfd 3 -auth /run/user/1000/gdm/Xauthority -nolisten tcp -background none -noreset -keeptty -novtswitch -verbose 3

I haven’t had time to test i3 with this pull request patched in yet.",True,{}
i3/i3,https://github.com/i3/i3,4373,2021-03-10T12:47:33Z,2021-05-20T19:37:36Z,2021-05-20T20:04:15Z,MERGED,True,192,17,6,https://github.com/psychon,"Do not ""set"" the wallpaper during startup",5,[],https://github.com/i3/i3/pull/4373,https://github.com/stapelberg,20,https://github.com/i3/i3/pull/4373#issuecomment-799798673,"This basically reverts 4f5e0e7: During startup, i3 would take a
screenshot and set that as the background pixmap of the root window.
This is the easy part of setting an X11 wallpaper.
The code in question was added because something either set the
background pixmap of the root window to NONE or the X11 server was
started with ""-background none"". I'm tempted to say ""the people in
question get what they asked for"", but perhaps telling them to ""exec
--no-startup-id xsetroot -solid black"" in their config is a better
reaction.
(I have not found any issue / bug report from ""back then"" which caused the code
in question to be added, so I cannot really say more.)
Fixes: #4371
Fixes: #2869
Signed-off-by: Uli Schlachter psychon@znc.in","If the background pixmap of the root window is set to None, the X11 server will not update the screen contents. Thus, you end up with a non-working ""screenshot"" of the window that you opened.

I just tested your pull request on Fedora 33 with gdm (default setup), and this is exactly the problem that I’m running into.
Hence, I don’t think just reverting the commit is good enough :-/.
What other options do we have?",True,{}
i3/i3,https://github.com/i3/i3,4373,2021-03-10T12:47:33Z,2021-05-20T19:37:36Z,2021-05-20T20:04:15Z,MERGED,True,192,17,6,https://github.com/psychon,"Do not ""set"" the wallpaper during startup",5,[],https://github.com/i3/i3/pull/4373,https://github.com/psychon,21,https://github.com/i3/i3/pull/4373#issuecomment-801234143,"This basically reverts 4f5e0e7: During startup, i3 would take a
screenshot and set that as the background pixmap of the root window.
This is the easy part of setting an X11 wallpaper.
The code in question was added because something either set the
background pixmap of the root window to NONE or the X11 server was
started with ""-background none"". I'm tempted to say ""the people in
question get what they asked for"", but perhaps telling them to ""exec
--no-startup-id xsetroot -solid black"" in their config is a better
reaction.
(I have not found any issue / bug report from ""back then"" which caused the code
in question to be added, so I cannot really say more.)
Fixes: #4371
Fixes: #2869
Signed-off-by: Uli Schlachter psychon@znc.in","I just tested your pull request on Fedora 33 with gdm (default setup),

Thanks for that!

What other options do we have?

Uhm...

Leave the status quo and accept the bugs it causes (pre-existing programs end up in the screenshot i3 creates)
Add code to fully set the wallpaper. I do not want to go there, but did that already before for AwesomeWM, so I could do that. However, no idea where the pixels for the wallpaper should come from. Cairo can only load PNGs and that is unlikely to be enough, so would require new dependencies.
Add code to set a black wallpaper. No idea how to tell people to enable this. Is ""set wallpaper before i3 starts"" a supported configuration? If not, i3 could just always set a black background.
A variant of the above: Only set a black wallpaper (or alternatively a screenshot) if the root window does not have a _XROOTPMAP_ID or ESETROOT_PMAP_ID property. By convention, wallpaper setters are supposed to set these properties to the pixmap of the wallpaper, but since this is X11, this is only a convention. I bet xsetroot does not set these properties since it does not set a pixmap as background.

AFAIK there is no way to query the background of an X11 window. Meh. :-(
One could also determine the value at startup experimentally: Find an empty spot where the wallpaper would be visible. Map a window with a white background at this spot. Unmap it. Grab a ""screenshot"" and check if that pixel is white. (And then repeat the same with black.) Also ugly. (Edit: No window required. Just draw to the root window and use ClearArea to tell the X11 server to erase the drawing and re-apply the background. But this still needs an ""empty space"".)
By the way: _XROOTPMAP_ID and ESETROOT_PMAP_ID exists so that clients can query the wallpaper (see above: No way to query the background of a window). This is e.g. used by urxvt for fake transparency. I guess this is also currently broken with i3's screenshot since these properties are not set. Dunno if that is a bug or a feature. ;-)
Seems like the following WMs do not set a background when started (or my search for BackPixmap is too simplistic):

Fluxbox: https://github.com/fluxbox/fluxbox/search?q=BackPixmap
AwesomeWM's C code does not actually do anything unless Lua tells it to, but the default config sets a wallpaper.
twm: https://github.com/freedesktop/twm/search?q=BackPixmap (well, okay, I am out of ideas where to search so do not take this line too seriously.)",True,{}
i3/i3,https://github.com/i3/i3,4373,2021-03-10T12:47:33Z,2021-05-20T19:37:36Z,2021-05-20T20:04:15Z,MERGED,True,192,17,6,https://github.com/psychon,"Do not ""set"" the wallpaper during startup",5,[],https://github.com/i3/i3/pull/4373,https://github.com/psychon,22,https://github.com/i3/i3/pull/4373#issuecomment-812468829,"This basically reverts 4f5e0e7: During startup, i3 would take a
screenshot and set that as the background pixmap of the root window.
This is the easy part of setting an X11 wallpaper.
The code in question was added because something either set the
background pixmap of the root window to NONE or the X11 server was
started with ""-background none"". I'm tempted to say ""the people in
question get what they asked for"", but perhaps telling them to ""exec
--no-startup-id xsetroot -solid black"" in their config is a better
reaction.
(I have not found any issue / bug report from ""back then"" which caused the code
in question to be added, so I cannot really say more.)
Fixes: #4371
Fixes: #2869
Signed-off-by: Uli Schlachter psychon@znc.in","One could also determine the value at startup experimentally: Find an empty spot where the wallpaper would be visible. Map a window with a white background at this spot. Unmap it. Grab a ""screenshot"" and check if that pixel is white.

I tried implementing this and tested with Xephyr -background none. However, it does not work. The screenshot always come back black.
However, I also cannot reproduce the original issue with Xephyr and this branch:


If the background pixmap of the root window is set to None, the X11 server will not update the screen contents. Thus, you end up with a non-working ""screenshot"" of the window that you opened.

I just tested your pull request on Fedora 33 with gdm (default setup), and this is exactly the problem that I’m running into.

@stapelberg Can you perhaps try this program with your X11 server and without i3 / with i3 built from this PR? The desired outcome is two different values for ""pixel 1"" and ""pixel 2"", but I only ever get it to print 0.
https://gist.github.com/psychon/05d666fb123a019a636430e36c938b69",True,{}
i3/i3,https://github.com/i3/i3,4373,2021-03-10T12:47:33Z,2021-05-20T19:37:36Z,2021-05-20T20:04:15Z,MERGED,True,192,17,6,https://github.com/psychon,"Do not ""set"" the wallpaper during startup",5,[],https://github.com/i3/i3/pull/4373,https://github.com/stapelberg,23,https://github.com/i3/i3/pull/4373#issuecomment-820969218,"This basically reverts 4f5e0e7: During startup, i3 would take a
screenshot and set that as the background pixmap of the root window.
This is the easy part of setting an X11 wallpaper.
The code in question was added because something either set the
background pixmap of the root window to NONE or the X11 server was
started with ""-background none"". I'm tempted to say ""the people in
question get what they asked for"", but perhaps telling them to ""exec
--no-startup-id xsetroot -solid black"" in their config is a better
reaction.
(I have not found any issue / bug report from ""back then"" which caused the code
in question to be added, so I cannot really say more.)
Fixes: #4371
Fixes: #2869
Signed-off-by: Uli Schlachter psychon@znc.in","Add code to set a black wallpaper. No idea how to tell people to enable this. Is ""set wallpaper before i3 starts"" a supported configuration? If not, i3 could just always set a black background.


Yeah, people (like me ;)) might be using xsetroot in their ~/.xsession before starting i3.
I’m leaning towards auto-detecting (if possible) this issue and reacting accordingly, or, if that’s not possible, leave things at the status quo.
I ran the tests you asked on Fedora:
Standard i3 without your pull request
When I run your try_detect_root_background_none from my ~/.xsession before starting i3, I get:
There are 1 free/visible rectangles
Rect 0: top left 0x0 size 3840x2160
Pixel 1: 0; pixel 2: 255

If I run it after starting i3, I get:
There are 1 free/visible rectangles
Rect 0: top left 0x0 size 3840x2123
Pixel 1: 255; pixel 2: 255

Note that I can see a white rectangle at the top left of the screen.
With this pull request applied
Before:
There are 1 free/visible rectangles
Rect 0: top left 0x0 size 3840x2160
Pixel 1: 0; pixel 2: 255

After:
There are 1 free/visible rectangles
Rect 0: top left 0x0 size 3840x2123
Pixel 1: 0; pixel 2: 255

White rectangle still visible.",True,{}
i3/i3,https://github.com/i3/i3,4373,2021-03-10T12:47:33Z,2021-05-20T19:37:36Z,2021-05-20T20:04:15Z,MERGED,True,192,17,6,https://github.com/psychon,"Do not ""set"" the wallpaper during startup",5,[],https://github.com/i3/i3/pull/4373,https://github.com/psychon,24,https://github.com/i3/i3/pull/4373#issuecomment-821781526,"This basically reverts 4f5e0e7: During startup, i3 would take a
screenshot and set that as the background pixmap of the root window.
This is the easy part of setting an X11 wallpaper.
The code in question was added because something either set the
background pixmap of the root window to NONE or the X11 server was
started with ""-background none"". I'm tempted to say ""the people in
question get what they asked for"", but perhaps telling them to ""exec
--no-startup-id xsetroot -solid black"" in their config is a better
reaction.
(I have not found any issue / bug report from ""back then"" which caused the code
in question to be added, so I cannot really say more.)
Fixes: #4371
Fixes: #2869
Signed-off-by: Uli Schlachter psychon@znc.in","I ran the tests you asked on Fedora:

Thanks a lot! Test result is ""the test works"". No idea why it does not work under Xephyr.

I’m leaning towards auto-detecting (if possible)

Okay, I will update this PR accordingly, but likely not today. I will report back when I found the time.

Note that I can see a white rectangle at the top left of the screen.

Yeah, that's basically exactly what the test does. Open a white rectangle and test if it stays white after the window was closed.",True,{}
i3/i3,https://github.com/i3/i3,4373,2021-03-10T12:47:33Z,2021-05-20T19:37:36Z,2021-05-20T20:04:15Z,MERGED,True,192,17,6,https://github.com/psychon,"Do not ""set"" the wallpaper during startup",5,[],https://github.com/i3/i3/pull/4373,https://github.com/psychon,25,https://github.com/i3/i3/pull/4373#issuecomment-843268741,"This basically reverts 4f5e0e7: During startup, i3 would take a
screenshot and set that as the background pixmap of the root window.
This is the easy part of setting an X11 wallpaper.
The code in question was added because something either set the
background pixmap of the root window to NONE or the X11 server was
started with ""-background none"". I'm tempted to say ""the people in
question get what they asked for"", but perhaps telling them to ""exec
--no-startup-id xsetroot -solid black"" in their config is a better
reaction.
(I have not found any issue / bug report from ""back then"" which caused the code
in question to be added, so I cannot really say more.)
Fixes: #4371
Fixes: #2869
Signed-off-by: Uli Schlachter psychon@znc.in","I finally got around to updating this PR. It is completely redone. git show --stat of the result:
commit bf881c156f3e379e9f6f8556d9756b43d16428db
Author: Uli Schlachter <psychon@znc.in>
Date:   Tue May 18 17:19:00 2021 +0200

    ""Set"" the wallpaper during startup only sometimes
    
    Since commit 4f5e0e7, i3 would take a screenshot and set that as the
    background pixmap of the root window during startup. This is the easy
    part of setting a proper X11 wallpaper.
    
    The code in question was added because something either set the
    background pixmap of the root window to NONE or the X11 server was
    started with ""-background none"". This is apparently done by default by
    e.g. gdm to avoid some flickering while the X11 server starts up.
    
    This commit makes this code conditional: Only when no wallpaper is
    detected is a screenshot taken.
    
    Since I could not find any way to query the background of a window, a
    more direct approach is taken to detect this situation: First, we find
    some part of the root window that is not currently covered. Then we open
    a white window there, close it again and grab a screenshot. If a
    wallpaper is set, the X11 server will draw this wallpaper after the
    window is closed and something else will be visible in the screenshot.
    
    However, the wallpaper could have a white pixel at the tested position.
    Thus, this procedure is repeated with a black window.
    
    Only when this procedure produces two different pixel values is a
    screenshot taken and set as the wallpaper.
    
    Fixes: https://github.com/i3/i3/issues/4371
    Fixes: https://github.com/i3/i3/issues/2869
    Signed-off-by: Uli Schlachter <psychon@znc.in>

 RELEASE-NOTES-next        |   7 +++++++
 include/libi3.h           |   8 ++++++++
 libi3/is_background_set.c | 117 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 meson.build               |   1 +
 src/main.c                |  18 ++++++++++++++++--
 5 files changed, 149 insertions(+), 2 deletions(-)",True,{}
i3/i3,https://github.com/i3/i3,4374,2021-03-10T14:20:06Z,2021-08-27T23:01:38Z,2021-08-27T23:36:52Z,MERGED,True,157,2,6,https://github.com/psychon,Implement support for the WM_Sn selection,12,[],https://github.com/i3/i3/pull/4374,https://github.com/psychon,1,https://github.com/i3/i3/pull/4374,"This implements #536. At startup, i3 will now acquire the WM_Sn selection. If the selection is already owned, it will exit saying that another window manager is already running. When started with --replace, it will instead replace the existing WM (assuming it properly follows ICCCM, but that's always the case when working with X11).","This implements #536. At startup, i3 will now acquire the WM_Sn selection. If the selection is already owned, it will exit saying that another window manager is already running. When started with --replace, it will instead replace the existing WM (assuming it properly follows ICCCM, but that's always the case when working with X11).",True,{}
i3/i3,https://github.com/i3/i3,4374,2021-03-10T14:20:06Z,2021-08-27T23:01:38Z,2021-08-27T23:36:52Z,MERGED,True,157,2,6,https://github.com/psychon,Implement support for the WM_Sn selection,12,[],https://github.com/i3/i3/pull/4374,https://github.com/psychon,2,https://github.com/i3/i3/pull/4374#issuecomment-796595040,"This implements #536. At startup, i3 will now acquire the WM_Sn selection. If the selection is already owned, it will exit saying that another window manager is already running. When started with --replace, it will instead replace the existing WM (assuming it properly follows ICCCM, but that's always the case when working with X11).",I just found https://github.com/i3/i3/blob/next/src/main.c#L426 which should be updated in this PR.,True,{}
i3/i3,https://github.com/i3/i3,4374,2021-03-10T14:20:06Z,2021-08-27T23:01:38Z,2021-08-27T23:36:52Z,MERGED,True,157,2,6,https://github.com/psychon,Implement support for the WM_Sn selection,12,[],https://github.com/i3/i3/pull/4374,https://github.com/psychon,3,https://github.com/i3/i3/pull/4374#issuecomment-796723831,"This implements #536. At startup, i3 will now acquire the WM_Sn selection. If the selection is already owned, it will exit saying that another window manager is already running. When started with --replace, it will instead replace the existing WM (assuming it properly follows ICCCM, but that's always the case when working with X11).","The Travis build just failed. Somehow I feel like this has nothing to do with my PR and I have no idea what is going on.
https://travis-ci.com/github/psychon/i3/jobs/490045736
--- command ---
13:05:26 /usr/bin/perl complete-run.pl
--- stdout ---
Running tests under Xvfb display :99
Starting 4 Xephyr instances, starting at :100...
Writing logfile to 'testsuite-2021-03-11-13-05-26-4.15-1110-g6f05a5ca/complete-run.log'...
#   Failed test 'call to scratchpad failed'
#   at /usr/src/i3/distbuild/meson-private/dist-unpack/i3-4.19.2/testcases/t/185-scratchpad.t line 492.
#          got: '1'
#     expected: '0'
Test Summary Report
-------------------
/usr/src/i3/distbuild/meson-private/dist-unpack/i3-4.19.2/testcases/t/185-scratchpad.t (Wstat: 0 Tests: 100 Failed: 1)
  Failed test:  91
Files=252, Tests=3704, 22 wallclock secs ( 0.87 usr +  0.09 sys =  0.96 CPU)
Result: FAIL
The slowest tests are:
	/usr/src/i3/distbuild/meson-private/dist-unpack/i3-4.19.2/testcases/t/301-shape.t with 6.33 seconds
	/usr/src/i3/distbuild/meson-private/dist-unpack/i3-4.19.2/testcases/t/290-keypress-numlock.t with 5.57 seconds
	/usr/src/i3/distbuild/meson-private/dist-unpack/i3-4.19.2/testcases/t/308-focus_wrapping.t with 4.07 seconds
	/usr/src/i3/distbuild/meson-private/dist-unpack/i3-4.19.2/testcases/t/258-keypress-release.t with 3.79 seconds
	/usr/src/i3/distbuild/meson-private/dist-unpack/i3-4.19.2/testcases/t/286-root-window-mouse-binding.t with 3.60 seconds
--- stderr ---
Use of uninitialized value $timingsjson in numeric gt (>) at complete-run.pl line 206.
Use of uninitialized value in subtraction (-) at /usr/share/perl/5.32/TAP/Formatter/Base.pm line 386.
Negative repeat count does nothing at /usr/share/perl/5.32/TAP/Formatter/Base.pm line 386.
-------",True,{}
i3/i3,https://github.com/i3/i3,4374,2021-03-10T14:20:06Z,2021-08-27T23:01:38Z,2021-08-27T23:36:52Z,MERGED,True,157,2,6,https://github.com/psychon,Implement support for the WM_Sn selection,12,[],https://github.com/i3/i3/pull/4374,https://github.com/psychon,4,https://github.com/i3/i3/pull/4374#issuecomment-798260734,"This implements #536. At startup, i3 will now acquire the WM_Sn selection. If the selection is already owned, it will exit saying that another window manager is already running. When started with --replace, it will instead replace the existing WM (assuming it properly follows ICCCM, but that's always the case when working with X11).","I just found this in #3009:

Sometimes i3 cannot change the root window’s event mask (X11 error BadAccess), implying that the old i3 process on that x server hasn’t yet been cleaned up (even though we wait for the i3 process to terminate).

Two comments:

Only because i3 terminates does not mean that the X11 server already handled the connection close
This PR could help here by making the test suite use --replace. That should make the new i3 process wait until the old one is ""really gone"".

(I am writing this here so that #3009 doesn't get cluttered with comments)",True,{}
i3/i3,https://github.com/i3/i3,4374,2021-03-10T14:20:06Z,2021-08-27T23:01:38Z,2021-08-27T23:36:52Z,MERGED,True,157,2,6,https://github.com/psychon,Implement support for the WM_Sn selection,12,[],https://github.com/i3/i3/pull/4374,https://github.com/psychon,5,https://github.com/i3/i3/pull/4374#issuecomment-845228896,"This implements #536. At startup, i3 will now acquire the WM_Sn selection. If the selection is already owned, it will exit saying that another window manager is already running. When started with --replace, it will instead replace the existing WM (assuming it properly follows ICCCM, but that's always the case when working with X11).","SGTM but will check over the weekend

@orestisfl ping?",True,{}
i3/i3,https://github.com/i3/i3,4376,2021-03-10T17:40:35Z,,2021-09-09T07:35:47Z,OPEN,False,70,9,2,https://github.com/psychon,Share graphics context globally,1,[],https://github.com/i3/i3/pull/4376,https://github.com/psychon,1,https://github.com/i3/i3/pull/4376,"Instead of creating a graphics context for every surface_t, this commit
adds a cache that allows to ""remember"" up to two GCs. Thus, the code
uses less GCs. When a GC from the cache can be used, this also gets rid
of a round-trip to the X11 server. Both of these are tiny, insignificant
savings, but so what?
Fixes: #3478
Signed-off-by: Uli Schlachter psychon@znc.in

This adds a copy&paste duplicate of get_visual_depth() from src/xcb.c to `libi3. If you tell me what to do, I can clean this up again, but I was not really sure what the best option here is.
I tried testing the cache overflow by trying to create a window with a depth other than 24 or 32, but my X11 server does not offer any such visuals:
$ xdpyinfo| grep depth: | uniq
    depth:    24 planes
    depth:    32 planes

Also, initially I planned to use a SLIST for this and have the cache unlimited. After briefly staring at the macros, I went with a statically sized solution instead. Thus, there is now the possibility that a GC cannot be cached and is thus still owned by the surface_t.","Instead of creating a graphics context for every surface_t, this commit
adds a cache that allows to ""remember"" up to two GCs. Thus, the code
uses less GCs. When a GC from the cache can be used, this also gets rid
of a round-trip to the X11 server. Both of these are tiny, insignificant
savings, but so what?
Fixes: #3478
Signed-off-by: Uli Schlachter psychon@znc.in

This adds a copy&paste duplicate of get_visual_depth() from src/xcb.c to `libi3. If you tell me what to do, I can clean this up again, but I was not really sure what the best option here is.
I tried testing the cache overflow by trying to create a window with a depth other than 24 or 32, but my X11 server does not offer any such visuals:
$ xdpyinfo| grep depth: | uniq
    depth:    24 planes
    depth:    32 planes

Also, initially I planned to use a SLIST for this and have the cache unlimited. After briefly staring at the macros, I went with a statically sized solution instead. Thus, there is now the possibility that a GC cannot be cached and is thus still owned by the surface_t.",True,{}
i3/i3,https://github.com/i3/i3,4377,2021-03-10T18:41:25Z,2021-04-10T14:24:43Z,2021-04-10T15:04:24Z,MERGED,True,4,2,2,https://github.com/lbonn,ipc: return signed int for container positions,1,[],https://github.com/i3/i3/pull/4377,https://github.com/lbonn,1,https://github.com/i3/i3/pull/4377,"If we use json as a language-agnostic representation, it makes sense to use proper signed integers here.
Before (with a floating window):
  ""rect"": {
    ""x"": 4294966757,
    ""y"": 273,
    ""width"": 804,
    ""height"": 602
  },

After:
  ""rect"": {
    ""x"": -316,
    ""y"": 228,
    ""width"": 804,
    ""height"": 602
  },

Note that I was not sure if this was intended like this as the behavior seems quite old, but it does looks like a bug: for example, the popular i3ipc-python also returns these large integers.","If we use json as a language-agnostic representation, it makes sense to use proper signed integers here.
Before (with a floating window):
  ""rect"": {
    ""x"": 4294966757,
    ""y"": 273,
    ""width"": 804,
    ""height"": 602
  },

After:
  ""rect"": {
    ""x"": -316,
    ""y"": 228,
    ""width"": 804,
    ""height"": 602
  },

Note that I was not sure if this was intended like this as the behavior seems quite old, but it does looks like a bug: for example, the popular i3ipc-python also returns these large integers.",True,{}
i3/i3,https://github.com/i3/i3,4377,2021-03-10T18:41:25Z,2021-04-10T14:24:43Z,2021-04-10T15:04:24Z,MERGED,True,4,2,2,https://github.com/lbonn,ipc: return signed int for container positions,1,[],https://github.com/i3/i3/pull/4377,https://github.com/lbonn,2,https://github.com/i3/i3/pull/4377#issuecomment-816535105,"If we use json as a language-agnostic representation, it makes sense to use proper signed integers here.
Before (with a floating window):
  ""rect"": {
    ""x"": 4294966757,
    ""y"": 273,
    ""width"": 804,
    ""height"": 602
  },

After:
  ""rect"": {
    ""x"": -316,
    ""y"": 228,
    ""width"": 804,
    ""height"": 602
  },

Note that I was not sure if this was intended like this as the behavior seems quite old, but it does looks like a bug: for example, the popular i3ipc-python also returns these large integers.","Any thoughts on that? The initial motivation is that it triggers crashes when using common i3ipc rust libraries: https://github.com/tmerr/i3ipc-rs and https://github.com/JayceFayne/swayipc-rs as they expect int32 when deserializing.
For example https://github.com/tmerr/i3ipc-rs/blob/master/src/reply.rs#L211",True,{}
i3/i3,https://github.com/i3/i3,4377,2021-03-10T18:41:25Z,2021-04-10T14:24:43Z,2021-04-10T15:04:24Z,MERGED,True,4,2,2,https://github.com/lbonn,ipc: return signed int for container positions,1,[],https://github.com/i3/i3/pull/4377,https://github.com/lbonn,3,https://github.com/i3/i3/pull/4377#issuecomment-817127860,"If we use json as a language-agnostic representation, it makes sense to use proper signed integers here.
Before (with a floating window):
  ""rect"": {
    ""x"": 4294966757,
    ""y"": 273,
    ""width"": 804,
    ""height"": 602
  },

After:
  ""rect"": {
    ""x"": -316,
    ""y"": 228,
    ""width"": 804,
    ""height"": 602
  },

Note that I was not sure if this was intended like this as the behavior seems quite old, but it does looks like a bug: for example, the popular i3ipc-python also returns these large integers.",No problem! Here it is with the release notes change.,True,{}
i3/i3,https://github.com/i3/i3,4378,2021-03-11T07:08:16Z,2021-05-20T19:44:13Z,2021-05-20T20:04:30Z,MERGED,True,0,3,2,https://github.com/psychon,Drop xcb_flush() before xcb_aux_sync(),1,[],https://github.com/i3/i3/pull/4378,https://github.com/psychon,1,https://github.com/i3/i3/pull/4378,"xcb_flush() flushes xcb's output buffer. Thus, after this call, all
previous requests are surely written to the connection with the X11
server.
xcb_aux_sync() synchronises with the X11 server. It makes sure all
previous requests were sent to the X11 server and already processed. It
does this via free(xcb_get_input_focus_reply(xcb_get_input_focus())): It
sends a request and waits for its reply. It is guaranteed that the X11
server processes requests in-order.
This means that the sequence xcb_flush(); xcb_aux_sync() first writes
whatever is in the output buffer and then does another write for the
four bytes of the GetInputFocus request from xcb_aux_sync().
Put differently: xcb_flush(); xcb_aux_sync() doesn't do anything more
than just xcb_aux_sync(). In fact, it has slightly more overhead for the
same result.
Thus, this commit drops all calls to xcb_flush() immediately after
xcb_aux_sync().
Signed-off-by: Uli Schlachter psychon@znc.in

I did not learn from #4360, so here is another PR removing xcb_flush() calls. At least, this time I have a long reasoning of why they are definitely unnecessary. (Sorry for being pedantic about these calls...)","xcb_flush() flushes xcb's output buffer. Thus, after this call, all
previous requests are surely written to the connection with the X11
server.
xcb_aux_sync() synchronises with the X11 server. It makes sure all
previous requests were sent to the X11 server and already processed. It
does this via free(xcb_get_input_focus_reply(xcb_get_input_focus())): It
sends a request and waits for its reply. It is guaranteed that the X11
server processes requests in-order.
This means that the sequence xcb_flush(); xcb_aux_sync() first writes
whatever is in the output buffer and then does another write for the
four bytes of the GetInputFocus request from xcb_aux_sync().
Put differently: xcb_flush(); xcb_aux_sync() doesn't do anything more
than just xcb_aux_sync(). In fact, it has slightly more overhead for the
same result.
Thus, this commit drops all calls to xcb_flush() immediately after
xcb_aux_sync().
Signed-off-by: Uli Schlachter psychon@znc.in

I did not learn from #4360, so here is another PR removing xcb_flush() calls. At least, this time I have a long reasoning of why they are definitely unnecessary. (Sorry for being pedantic about these calls...)",True,{}
i3/i3,https://github.com/i3/i3,4379,2021-03-11T07:39:13Z,2021-06-02T13:22:14Z,2021-06-02T13:22:27Z,CLOSED,False,34,17,9,https://github.com/psychon,draw_util_surface_free(): Remove unnecessary argument,2,[],https://github.com/i3/i3/pull/4379,https://github.com/psychon,1,https://github.com/i3/i3/pull/4379,"Cairo allows querying the underlying xcb_connection_t* of a cairo
surface and thus this function does not really need the caller to pass
this in.
No idea if this change is really worth it. I am mostly doing this
because I can / because it seemed sensible (this means the caller cannot
pass different xcb_connection_t* to init and free, but that's likely a
very low risk).
Signed-off-by: Uli Schlachter psychon@znc.in","Cairo allows querying the underlying xcb_connection_t* of a cairo
surface and thus this function does not really need the caller to pass
this in.
No idea if this change is really worth it. I am mostly doing this
because I can / because it seemed sensible (this means the caller cannot
pass different xcb_connection_t* to init and free, but that's likely a
very low risk).
Signed-off-by: Uli Schlachter psychon@znc.in",True,{}
i3/i3,https://github.com/i3/i3,4379,2021-03-11T07:39:13Z,2021-06-02T13:22:14Z,2021-06-02T13:22:27Z,CLOSED,False,34,17,9,https://github.com/psychon,draw_util_surface_free(): Remove unnecessary argument,2,[],https://github.com/i3/i3/pull/4379,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/4379#issuecomment-846569756,"Cairo allows querying the underlying xcb_connection_t* of a cairo
surface and thus this function does not really need the caller to pass
this in.
No idea if this change is really worth it. I am mostly doing this
because I can / because it seemed sensible (this means the caller cannot
pass different xcb_connection_t* to init and free, but that's likely a
very low risk).
Signed-off-by: Uli Schlachter psychon@znc.in",Would you mind rebasing this onto the current next branch so that it picks up our switch to GitHub Actions for CI? Couldn’t get the Travis runs to pass because of Docker rate-limiting.,True,{}
i3/i3,https://github.com/i3/i3,4379,2021-03-11T07:39:13Z,2021-06-02T13:22:14Z,2021-06-02T13:22:27Z,CLOSED,False,34,17,9,https://github.com/psychon,draw_util_surface_free(): Remove unnecessary argument,2,[],https://github.com/i3/i3/pull/4379,https://github.com/psychon,3,https://github.com/i3/i3/pull/4379#issuecomment-846583101,"Cairo allows querying the underlying xcb_connection_t* of a cairo
surface and thus this function does not really need the caller to pass
this in.
No idea if this change is really worth it. I am mostly doing this
because I can / because it seemed sensible (this means the caller cannot
pass different xcb_connection_t* to init and free, but that's likely a
very low risk).
Signed-off-by: Uli Schlachter psychon@znc.in","Done.
The new test run ran into a timeout. Looks like meson aborted the test suite after two minutes.",True,{}
i3/i3,https://github.com/i3/i3,4379,2021-03-11T07:39:13Z,2021-06-02T13:22:14Z,2021-06-02T13:22:27Z,CLOSED,False,34,17,9,https://github.com/psychon,draw_util_surface_free(): Remove unnecessary argument,2,[],https://github.com/i3/i3/pull/4379,https://github.com/stapelberg,4,https://github.com/i3/i3/pull/4379#issuecomment-846585414,"Cairo allows querying the underlying xcb_connection_t* of a cairo
surface and thus this function does not really need the caller to pass
this in.
No idea if this change is really worth it. I am mostly doing this
because I can / because it seemed sensible (this means the caller cannot
pass different xcb_connection_t* to init and free, but that's likely a
very low risk).
Signed-off-by: Uli Schlachter psychon@znc.in","The new test run ran into a timeout. Looks like meson aborted the test suite after two minutes.

Your PR causes the testsuite to hang. They work fine for me with next and break with your PR applied. I can reproduce this locally, too:
~/i3/build next % ninja test
[98/99] Running all tests.
1/1 complete-run        OK               3.62s


Ok:                 1   
Expected Fail:      0   
Fail:               0   
Unexpected Pass:    0   
Skipped:            0   
Timeout:            0   

Full log written to /home/michael/i3/build/meson-logs/testlog.txt
ninja test  35,56s user 13,75s system 960% cpu 5,135 total

And with your PR:
~/i3/build psychon-unnecessary_argument % ninja test
Summary of Failures:

1/1 complete-run INTERRUPT       70.23s   exit status 1


Ok:                 0   
Expected Fail:      0   
Fail:               1   
Unexpected Pass:    0   
Skipped:            0   
Timeout:            0   

Full log written to /home/michael/i3/build/meson-logs/testlog.txt
ninja: build stopped: interrupted by user.
ninja test  21,67s user 3,99s system 35% cpu 1:12,21 total

This suggests that maybe there’s still a bug in your PR?",True,{}
i3/i3,https://github.com/i3/i3,4379,2021-03-11T07:39:13Z,2021-06-02T13:22:14Z,2021-06-02T13:22:27Z,CLOSED,False,34,17,9,https://github.com/psychon,draw_util_surface_free(): Remove unnecessary argument,2,[],https://github.com/i3/i3/pull/4379,https://github.com/stapelberg,5,https://github.com/i3/i3/pull/4379#issuecomment-846585744,"Cairo allows querying the underlying xcb_connection_t* of a cairo
surface and thus this function does not really need the caller to pass
this in.
No idea if this change is really worth it. I am mostly doing this
because I can / because it seemed sensible (this means the caller cannot
pass different xcb_connection_t* to init and free, but that's likely a
very low risk).
Signed-off-by: Uli Schlachter psychon@znc.in","Here’s a backtrace of the problem (coredumpctl gdb, then bt):
#0  0x00007f3fa930c7e5 in raise () at /usr/lib/libpthread.so.0
#1  0x000055dcfd751bfe in handle_core_signal (sig=11, info=0x7fffe0b97bb0, data=0x7fffe0b97a80) at ../src/main.c:217
#2  0x00007f3fa930c960 in <signal handler called> () at /usr/lib/libpthread.so.0
#3  0x00007f3fa95c75c6 in cairo_xcb_device_get_connection () at /usr/lib/libcairo.so.2
#4  0x000055dcfd772845 in draw_util_surface_free (surface=0x55dcfe0e19d8) at ../libi3/draw_util.c:61
#5  0x000055dcfd76c9de in _x_con_kill (con=0x55dcfe0e19d0) at ../src/x.c:261
#6  0x000055dcfd76cbc5 in x_con_kill (con=0x55dcfe0e19d0) at ../src/x.c:286
#7  0x000055dcfd766001 in tree_close_internal (con=0x55dcfe0e19d0, kill_window=DONT_KILL_WINDOW, dont_kill_parent=false) at ../src/tree.c:300
#8  0x000055dcfd76ad98 in workspace_show (workspace=0x55dcfe0e2980) at ../src/workspace.c:514
#9  0x000055dcfd76ae9c in workspace_show_by_name (num=0x55dcfe0ce8d0 ""A"") at ../src/workspace.c:553
#10 0x000055dcfd725314 in cmd_workspace_name
    (current_match=0x55dcfd79afa0 <current_match>, cmd_output=0x55dcfd79b030 <subcommand_output>, name=0x55dcfe0ce8d0 ""A"", _no_auto_back_and_forth=0x0) at ../src/commands.c:955
#11 0x000055dcfd72f749 in GENERATED_call (call_identifier=59, result=0x55dcfd79b030 <subcommand_output>) at ./GENERATED_command_call.h:479
#12 0x000055dcfd7301f7 in next_state (token=0x55dcfd796928 <tokens_WORKSPACE+168>) at ../src/commands_parser.c:179
#13 0x000055dcfd73088b in parse_command (input=0x55dcfe0ce7b0 ""workspace A"", gen=0x55dcfe0c4500, client=0x55dcfe0ce930) at ../src/commands_parser.c:342
#14 0x000055dcfd749862 in handle_run_command (client=0x55dcfe0ce930, message=0x55dcfe0cec80 ""workspace A"", size=0, message_size=11, message_type=0) at ../src/ipc.c:216
#15 0x000055dcfd74daf4 in ipc_receive_message (loop=0x7f3fa932b720, w=0x55dcfe0cec40, revents=1) at ../src/ipc.c:1398
#16 0x00007f3fa931f033 in ev_invoke_pending () at /usr/lib/libev.so.4
#17 0x00007f3fa9322902 in ev_run () at /usr/lib/libev.so.4
#18 0x000055dcfd751923 in ev_loop (loop=0x7f3fa932b720, flags=0) at /usr/include/ev.h:841
#19 0x000055dcfd75630d in main (argc=9, argv=0x7fffe0b98b38) at ../src/main.c:1070",True,{'THUMBS_UP': ['https://github.com/psychon']}
i3/i3,https://github.com/i3/i3,4379,2021-03-11T07:39:13Z,2021-06-02T13:22:14Z,2021-06-02T13:22:27Z,CLOSED,False,34,17,9,https://github.com/psychon,draw_util_surface_free(): Remove unnecessary argument,2,[],https://github.com/i3/i3/pull/4379,https://github.com/psychon,6,https://github.com/i3/i3/pull/4379#issuecomment-846586197,"Cairo allows querying the underlying xcb_connection_t* of a cairo
surface and thus this function does not really need the caller to pass
this in.
No idea if this change is really worth it. I am mostly doing this
because I can / because it seemed sensible (this means the caller cannot
pass different xcb_connection_t* to init and free, but that's likely a
very low risk).
Signed-off-by: Uli Schlachter psychon@znc.in","Uhm. Okay...
Thanks for the backtrace. Now I'm confused about what is going on. I will take a closer look next week.",True,{}
i3/i3,https://github.com/i3/i3,4379,2021-03-11T07:39:13Z,2021-06-02T13:22:14Z,2021-06-02T13:22:27Z,CLOSED,False,34,17,9,https://github.com/psychon,draw_util_surface_free(): Remove unnecessary argument,2,[],https://github.com/i3/i3/pull/4379,https://github.com/psychon,7,https://github.com/i3/i3/pull/4379#issuecomment-851217960,"Cairo allows querying the underlying xcb_connection_t* of a cairo
surface and thus this function does not really need the caller to pass
this in.
No idea if this change is really worth it. I am mostly doing this
because I can / because it seemed sensible (this means the caller cannot
pass different xcb_connection_t* to init and free, but that's likely a
very low risk).
Signed-off-by: Uli Schlachter psychon@znc.in","Uhm. Took me way too long, but I finally found the problem: cairo_xcb_surface_create fails with CAIRO_STATUS_INVALID_FORMAT. Hence, the code does not get a proper cairo xcb surface, but instead returns a ""dummy surface"" in an error state. This ""error surface"" provides a NULL pointer as its device and from there on, things go downhill.
The reason for this error is here in ps output: Xvfb :99 -screen 0 640x480x8 -nolisten tcp
That x8 seems weird, but surprisingly this actually works. According to xdpyinfo, this X11 server only offers six visuals and the default visual actually uses a color table! Since this visual is unsupported by.... everything, I guess, cairo errors out.
(There is also a TrueColor visual with 3 bits of red, 3 its of green and 2 bits of blue, but... yuck! And still unsupported by cairo, I think.)
(This also explains why all my attempts at reproducing the problem were fruitless for so long)
I tried making draw_util_surface_init ""de-initialise"" everything and bail out, but then lots of other stuff breaks. So... yeah... Hm...",True,{}
i3/i3,https://github.com/i3/i3,4379,2021-03-11T07:39:13Z,2021-06-02T13:22:14Z,2021-06-02T13:22:27Z,CLOSED,False,34,17,9,https://github.com/psychon,draw_util_surface_free(): Remove unnecessary argument,2,[],https://github.com/i3/i3/pull/4379,https://github.com/psychon,8,https://github.com/i3/i3/pull/4379#issuecomment-853023138,"Cairo allows querying the underlying xcb_connection_t* of a cairo
surface and thus this function does not really need the caller to pass
this in.
No idea if this change is really worth it. I am mostly doing this
because I can / because it seemed sensible (this means the caller cannot
pass different xcb_connection_t* to init and free, but that's likely a
very low risk).
Signed-off-by: Uli Schlachter psychon@znc.in","I think this turned out to be not worth it. Since the benefit mostly exists in my head, I'll just close this instead.",True,{}
i3/i3,https://github.com/i3/i3,4382,2021-03-11T12:57:51Z,,2021-03-11T12:57:51Z,OPEN,False,330,73,8,https://github.com/psychon,Use separate pixmaps for each edge of a container,4,[],https://github.com/i3/i3/pull/4382,https://github.com/psychon,1,https://github.com/i3/i3/pull/4382,"Here is my current attempt at fixing #3479.
It does not work. x_get_border_rectangles() calls con_adjacent_borders() which follows a NULL pointer and crashes. I ""fixed"" that with a NULL pointer check, but now this function is giving me all empty rectangles for the borders:
11.03.2021 13:49:31 - ERROR: FIXME: Workspace was NULL
Rectangle 0: (0,0) with size (0,0)
Rectangle 1: (640,0) with size (0,0)
Rectangle 2: (0,0) with size (640,0)
Segmentation fault

(No, I did not yet look at where that segfault comes from; yes, I can open a window, but it ends up with all-black frames)
So, this (draft) PR is just to document my current state and to ask:
How do I get the necessary size of the border pixmaps?
It seems like con->window_rect is the geometry of the ""inner window"" and con->rect is the geometry of the outer window  (so I get width and height from this). Is this correct? Is there some existing helper that allows me to turn this into up to four rectangles describing the ""area not covered by the inner window""? Is x_get_border_rectanges() meant for something else?","Here is my current attempt at fixing #3479.
It does not work. x_get_border_rectangles() calls con_adjacent_borders() which follows a NULL pointer and crashes. I ""fixed"" that with a NULL pointer check, but now this function is giving me all empty rectangles for the borders:
11.03.2021 13:49:31 - ERROR: FIXME: Workspace was NULL
Rectangle 0: (0,0) with size (0,0)
Rectangle 1: (640,0) with size (0,0)
Rectangle 2: (0,0) with size (640,0)
Segmentation fault

(No, I did not yet look at where that segfault comes from; yes, I can open a window, but it ends up with all-black frames)
So, this (draft) PR is just to document my current state and to ask:
How do I get the necessary size of the border pixmaps?
It seems like con->window_rect is the geometry of the ""inner window"" and con->rect is the geometry of the outer window  (so I get width and height from this). Is this correct? Is there some existing helper that allows me to turn this into up to four rectangles describing the ""area not covered by the inner window""? Is x_get_border_rectanges() meant for something else?",True,{}
i3/i3,https://github.com/i3/i3,4387,2021-03-15T09:44:22Z,2021-03-16T15:52:15Z,2021-03-16T16:09:30Z,MERGED,True,3,0,1,https://github.com/ivanmilov,Added floating field to _tree_reply in ipc documentation,1,[],https://github.com/i3/i3/pull/4387,https://github.com/ivanmilov,1,https://github.com/i3/i3/pull/4387,,,True,{}
i3/i3,https://github.com/i3/i3,4388,2021-03-15T23:46:04Z,,2021-08-28T07:59:02Z,OPEN,False,15,3,1,https://github.com/tonischranz,i3-dmenu-desktop: cmd-prefix,1,['waiting'],https://github.com/i3/i3/pull/4388,https://github.com/tonischranz,1,https://github.com/i3/i3/pull/4388,"I added the possibility to provide a command prefix as Option to i3-dmenu-desktop.
I'm using it to launch apps on DISPLAY :20 instead of :0 with a second dmenu bindsym.
Since this is just a small enhancement on a handy side-script, I'm not sure if you generally accept pull requests for that, just thought maybe others could use that too, and they will probably never find my tweaked version unless it's in the main project.
To be honest, i never wrote Perl before, so maybe i missed something or did something in a uncool manner, sorry for that if so. I tested it to launch gimp and htop with and without prefix, worked as expected. Since it's not a code change i didn't run the testsuite, since never even built that whole thing.","I added the possibility to provide a command prefix as Option to i3-dmenu-desktop.
I'm using it to launch apps on DISPLAY :20 instead of :0 with a second dmenu bindsym.
Since this is just a small enhancement on a handy side-script, I'm not sure if you generally accept pull requests for that, just thought maybe others could use that too, and they will probably never find my tweaked version unless it's in the main project.
To be honest, i never wrote Perl before, so maybe i missed something or did something in a uncool manner, sorry for that if so. I tested it to launch gimp and htop with and without prefix, worked as expected. Since it's not a code change i didn't run the testsuite, since never even built that whole thing.",True,{}
i3/i3,https://github.com/i3/i3,4388,2021-03-15T23:46:04Z,,2021-08-28T07:59:02Z,OPEN,False,15,3,1,https://github.com/tonischranz,i3-dmenu-desktop: cmd-prefix,1,['waiting'],https://github.com/i3/i3/pull/4388,https://github.com/thiagowfx,2,https://github.com/i3/i3/pull/4388#issuecomment-890684710,"I added the possibility to provide a command prefix as Option to i3-dmenu-desktop.
I'm using it to launch apps on DISPLAY :20 instead of :0 with a second dmenu bindsym.
Since this is just a small enhancement on a handy side-script, I'm not sure if you generally accept pull requests for that, just thought maybe others could use that too, and they will probably never find my tweaked version unless it's in the main project.
To be honest, i never wrote Perl before, so maybe i missed something or did something in a uncool manner, sorry for that if so. I tested it to launch gimp and htop with and without prefix, worked as expected. Since it's not a code change i didn't run the testsuite, since never even built that whole thing.",Is DISPLAY=:20 because of chrome remote desktop?,True,{}
i3/i3,https://github.com/i3/i3,4388,2021-03-15T23:46:04Z,,2021-08-28T07:59:02Z,OPEN,False,15,3,1,https://github.com/tonischranz,i3-dmenu-desktop: cmd-prefix,1,['waiting'],https://github.com/i3/i3/pull/4388,https://github.com/tonischranz,3,https://github.com/i3/i3/pull/4388#issuecomment-890804849,"I added the possibility to provide a command prefix as Option to i3-dmenu-desktop.
I'm using it to launch apps on DISPLAY :20 instead of :0 with a second dmenu bindsym.
Since this is just a small enhancement on a handy side-script, I'm not sure if you generally accept pull requests for that, just thought maybe others could use that too, and they will probably never find my tweaked version unless it's in the main project.
To be honest, i never wrote Perl before, so maybe i missed something or did something in a uncool manner, sorry for that if so. I tested it to launch gimp and htop with and without prefix, worked as expected. Since it's not a code change i didn't run the testsuite, since never even built that whole thing.","No, it‘s because i use ssh tunneling for X Forwarding (without needing sshd
on the main box)
So box:6020 is forwarded to rpi:6000 (display :0, connected to a TV, with
own KB/Mouse)

Does this help to clarify?

Thiago Perrotta ***@***.***> schrieb am Mo. 2. Aug. 2021 um
05:28:
…
 Is DISPLAY=:20 because of chrome remote desktop?

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#4388 (comment)>, or
 unsubscribe
 <https://github.com/notifications/unsubscribe-auth/AFZIWJA4VRKNAEC5F7CLNVLT2YGFFANCNFSM4ZHO3PGA>
 .",True,{}
i3/i3,https://github.com/i3/i3,4390,2021-03-17T17:02:47Z,2021-05-20T19:47:43Z,2021-05-20T19:47:43Z,MERGED,True,153,31,1,https://github.com/CyberShadow,Improve IPC documentation,7,[],https://github.com/i3/i3/pull/4390,https://github.com/CyberShadow,1,https://github.com/i3/i3/pull/4390,"I wrote an IPC client from scratch today.
Here are some improvements to the IPC documentation that would have helped me do so. :)","I wrote an IPC client from scratch today.
Here are some improvements to the IPC documentation that would have helped me do so. :)",True,{}
i3/i3,https://github.com/i3/i3,4390,2021-03-17T17:02:47Z,2021-05-20T19:47:43Z,2021-05-20T19:47:43Z,MERGED,True,153,31,1,https://github.com/CyberShadow,Improve IPC documentation,7,[],https://github.com/i3/i3/pull/4390,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/4390#issuecomment-845423429,"I wrote an IPC client from scratch today.
Here are some improvements to the IPC documentation that would have helped me do so. :)",Thank you for taking the time to improve these docs!,True,{'HEART': ['https://github.com/CyberShadow']}
i3/i3,https://github.com/i3/i3,4391,2021-03-18T19:47:36Z,2021-03-19T05:26:25Z,2021-03-22T09:54:33Z,CLOSED,False,18,0,1,https://github.com/jpalus,Maintain runtime ws assignments after moving to output,1,[],https://github.com/i3/i3/pull/4391,https://github.com/jpalus,1,https://github.com/i3/i3/pull/4391,,,True,{}
i3/i3,https://github.com/i3/i3,4391,2021-03-18T19:47:36Z,2021-03-19T05:26:25Z,2021-03-22T09:54:33Z,CLOSED,False,18,0,1,https://github.com/jpalus,Maintain runtime ws assignments after moving to output,1,[],https://github.com/i3/i3/pull/4391,https://github.com/Airblader,2,https://github.com/i3/i3/pull/4391#issuecomment-802253098,,"Hi, thanks for your PR. Since this doesn't seem to address any open issues, could you please add some details on what this is fixing, e.g. scenario + expected/actual behavior? It also sounds like this is something we can and should add to the testsuite, if we want to fix it.",True,{}
i3/i3,https://github.com/i3/i3,4391,2021-03-18T19:47:36Z,2021-03-19T05:26:25Z,2021-03-22T09:54:33Z,CLOSED,False,18,0,1,https://github.com/jpalus,Maintain runtime ws assignments after moving to output,1,[],https://github.com/i3/i3/pull/4391,https://github.com/jpalus,3,https://github.com/i3/i3/pull/4391#issuecomment-802326002,,"When running i3 with multiple screens I want certain workspaces to be either on fixed output, for which current workspace assignment works fine, or to be on certain output that fits current workflow best. The latter case is handled by moving workspace to selected output, however due to the way i3 works whenever last window on a workspace is closed and this workspace is no longer visible then information about output assignment is lost. I believe moving workspace to output could be seen as dynamic workspace assignment in runtime and should be remembered. That's exactly what this PR does.
Consider following example of 3 workspaces (w1, w2, w3) and 2 outputs (o1, o2):

I move w1 to o2 and expect it to stay there
I switch to w2 on o2 and to w3 on o1. w3(o1) is active and I spawn application with window assignment and focus going to w1

Current i3 behavior is to switch to w1 on o1 because that was my current output even though I moved w1 to o2. However output of w1 was not remembered because it did not have any window when moving.
Before getting familiar with i3 testsuite and writing test I would prefer to get some feedback from i3 developers whether such change could be accepted.",True,{}
i3/i3,https://github.com/i3/i3,4391,2021-03-18T19:47:36Z,2021-03-19T05:26:25Z,2021-03-22T09:54:33Z,CLOSED,False,18,0,1,https://github.com/jpalus,Maintain runtime ws assignments after moving to output,1,[],https://github.com/i3/i3/pull/4391,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/4391#issuecomment-802410640,,"I believe moving workspace to output could be seen as dynamic workspace assignment in runtime and should be remembered.

I don't really agree with this PR. This makes (IIUC) deterministic expectations about workspace placement harder to follow, because it depends on previous placement of the workspace. Besides, assignment of worksplaces can be configured anyway and multiple outputs are supported.
That said, I do understand where you are coming from.
I am voting against this without a very strong preference.",True,{}
i3/i3,https://github.com/i3/i3,4391,2021-03-18T19:47:36Z,2021-03-19T05:26:25Z,2021-03-22T09:54:33Z,CLOSED,False,18,0,1,https://github.com/jpalus,Maintain runtime ws assignments after moving to output,1,[],https://github.com/i3/i3/pull/4391,https://github.com/Airblader,5,https://github.com/i3/i3/pull/4391#issuecomment-802567507,,"First of all thanks for the detailed explanation. I'm also voting against this for the same reasons + the simple fact that this is a change in behavior that will affect people, and it's really more of a feature than a fix.
Changing assignments can be scripted as well. It's not extremely comfortable as it requires writing the config, but it is possible.",True,{}
i3/i3,https://github.com/i3/i3,4391,2021-03-18T19:47:36Z,2021-03-19T05:26:25Z,2021-03-22T09:54:33Z,CLOSED,False,18,0,1,https://github.com/jpalus,Maintain runtime ws assignments after moving to output,1,[],https://github.com/i3/i3/pull/4391,https://github.com/jpalus,6,https://github.com/i3/i3/pull/4391#issuecomment-802631177,,Workspace jumping to different output then I moved it to for no reason is a bug in my book but ok.,True,{}
i3/i3,https://github.com/i3/i3,4391,2021-03-18T19:47:36Z,2021-03-19T05:26:25Z,2021-03-22T09:54:33Z,CLOSED,False,18,0,1,https://github.com/jpalus,Maintain runtime ws assignments after moving to output,1,[],https://github.com/i3/i3/pull/4391,https://github.com/jpalus,7,https://github.com/i3/i3/pull/4391#issuecomment-803176118,,"@Airblader as suggested I'm trying to script the behavior but how can I add output assignment at runtime?
$ i3-msg workspace '""8:media""' output eDP-1
ERROR: Your command: workspace ""8:media"" output eDP-1
ERROR:                                   ^^^^^^^^^^^^
ERROR: Expected one of these tokens: <end>, '[', 'move', 'exec', 'exit', 'restart', 'reload', 'shmlog', 'debuglog', 'border', 'layout', 'append_layout', 'workspace', 'focus', 'kill', 'open', 'fullscreen', 'sticky', 'split', 'floating', 'mark', 'unmark', 'resize', 'rename', 'nop', 'scratchpad', 'swap', 'title_format', 'mode', 'bar'
[{""success"":true},{""success"":false,""parse_error"":true,""error"":""Expected one of these tokens: <end>, '[', 'move', 'exec', 'exit', 'restart', 'reload', 'shmlog', 'debuglog', 'border', 'layout', 'append_layout', 'workspace', 'focus', 'kill', 'open', 'fullscreen', 'sticky', 'split', 'floating', 'mark', 'unmark', 'resize', 'rename', 'nop', 'scratchpad', 'swap', 'title_format', 'mode', 'bar'"",""input"":""workspace \""8:media\"" output eDP-1"",""errorposition"":""                    ^^^^^^^^^^^^""}]",True,{}
i3/i3,https://github.com/i3/i3,4391,2021-03-18T19:47:36Z,2021-03-19T05:26:25Z,2021-03-22T09:54:33Z,CLOSED,False,18,0,1,https://github.com/jpalus,Maintain runtime ws assignments after moving to output,1,[],https://github.com/i3/i3/pull/4391,https://github.com/orestisfl,8,https://github.com/i3/i3/pull/4391#issuecomment-803198221,,"I think @Airblader's idea was to dynamically edit the config file whenever a workspace is written to an output.
I believe it's also possible to script this using using the events that the IPC interface provides. See https://i3wm.org/docs/ipc.html#_workspace_event specifically.",True,{}
i3/i3,https://github.com/i3/i3,4391,2021-03-18T19:47:36Z,2021-03-19T05:26:25Z,2021-03-22T09:54:33Z,CLOSED,False,18,0,1,https://github.com/jpalus,Maintain runtime ws assignments after moving to output,1,[],https://github.com/i3/i3/pull/4391,https://github.com/jpalus,9,https://github.com/i3/i3/pull/4391#issuecomment-803287747,,"So if I understand it correctly you suggest to either:

mangle i3 config, tracked with git and shared by multiple machines, directly which would be very fragile and require i3 reload on each workspace move? Even if i3 supported ""config.d""-like dropin replacements (so I could just write a statement to per workspace config and gitignore pattern like ~/.config/i3/config.d/tmp*.conf) I still wouldn't do it because reload operation is just way too heavy for this. I'm not even sure if I wouldn't loose more information on reload than workspace<->output assignment that I'm trying to fix.
create an entire daemon that listens to events and keeps workspace state because i3 cannot? I actually considered it already because it would finally allow me to keep ""last focus timestamp"" for each window but that's way too much work. Only once I admit i3 fails as a window manager I could go down this route. Not to mention I would probably see workspace jumping for a brief moment: o1 gets w1, event is triggered, o2 gets w1, o1 gets w3 back with all changes noticeable.

Do these options really look sane to you? My custom i3 helper tool already got worryingly complex trying to workaround i3 limitations and developers' resistance of change but these suggestions is a whole new level of complexity.
I could swallow extending helper tool with new command which effectively does equivalent of:
workspace ""ws"" output out
move workspace to output out

but as noted first command is not available -- which is counterintuitive to me because why not?
Due to lack of reasonable workaround I'm gonna exploit my role of package maintainer in my distribution of choice and just patch it with proposed fix. If a single person complains about this behavior I will revert it immediately though I doubt such person exists. Because who relies on loosing information?",True,{}
i3/i3,https://github.com/i3/i3,4391,2021-03-18T19:47:36Z,2021-03-19T05:26:25Z,2021-03-22T09:54:33Z,CLOSED,False,18,0,1,https://github.com/jpalus,Maintain runtime ws assignments after moving to output,1,[],https://github.com/i3/i3/pull/4391,https://github.com/orestisfl,10,https://github.com/i3/i3/pull/4391#issuecomment-803288552,,"Yes, a daemon is generally an acceptable solution for this problem.

Because who relies on loosing information?

Well, I do rely on that behavior personally.

package maintainer in my distribution of choice

Ok, can you also mention your distribution in case somebody opens an issue to us?",True,{}
i3/i3,https://github.com/i3/i3,4391,2021-03-18T19:47:36Z,2021-03-19T05:26:25Z,2021-03-22T09:54:33Z,CLOSED,False,18,0,1,https://github.com/jpalus,Maintain runtime ws assignments after moving to output,1,[],https://github.com/i3/i3/pull/4391,https://github.com/Airblader,11,https://github.com/i3/i3/pull/4391#issuecomment-803290346,,"reload operation is just way too heavy for this

I'm not sure why you think that, i3 specifically allows you to reload the config in-place without having to restart the window manager itself. That parses a file into the config, much like any command would have to be parsed.
Overall I'd ask you to please reconsider your tone. A window manager didn't ""fail"" because it doesn't do exactly the things you want, and we also cannot change behavior for tens of thousands of users on a whim.
i3 offers a lot of features, and maybe some don't work the way you want them to. The same will be true for other window managers.
If you're unhappy with i3 there's of course nothing stopping you from patching/forking it or abandoning it altogether for one of the many other great window managers out there. If you're looking for the ability to customize just about every detail to your liking, something like awesome might be better suited.",True,{}
i3/i3,https://github.com/i3/i3,4391,2021-03-18T19:47:36Z,2021-03-19T05:26:25Z,2021-03-22T09:54:33Z,CLOSED,False,18,0,1,https://github.com/jpalus,Maintain runtime ws assignments after moving to output,1,[],https://github.com/i3/i3/pull/4391,https://github.com/Airblader,12,https://github.com/i3/i3/pull/4391#issuecomment-803290836,,@orestisfl It seems to be https://www.pld-linux.org/ based on the referencing commit.,True,{}
i3/i3,https://github.com/i3/i3,4391,2021-03-18T19:47:36Z,2021-03-19T05:26:25Z,2021-03-22T09:54:33Z,CLOSED,False,18,0,1,https://github.com/jpalus,Maintain runtime ws assignments after moving to output,1,[],https://github.com/i3/i3/pull/4391,https://github.com/jpalus,13,https://github.com/i3/i3/pull/4391#issuecomment-803291713,,"Just to be clear I've only stated that writing a deamon would be an option once I consider i3 to ""fail"" at its job. I didn't start writing it so I clearly don't think that it failed.
However it is a bit frustrating that i3 does not offer easy way to achieve behavior that seems to me more intuitive. Isn't it a common expectation that workspace moved to output stays there?",True,{}
i3/i3,https://github.com/i3/i3,4391,2021-03-18T19:47:36Z,2021-03-19T05:26:25Z,2021-03-22T09:54:33Z,CLOSED,False,18,0,1,https://github.com/jpalus,Maintain runtime ws assignments after moving to output,1,[],https://github.com/i3/i3/pull/4391,https://github.com/Airblader,14,https://github.com/i3/i3/pull/4391#issuecomment-803292329,,"Isn't it a common expectation that workspace moved to output stays there?

It does — for the entire duration of its lifetime. But when it becomes empty and inactive, i3 destroys it. When you once again switch to ""that"" workspace, i3 is actually creating a new one of that name.
To mirror your words a bit: isn't it a common expectation that the software doesn't modify the user-provided configuration on its own? :-)",True,{}
i3/i3,https://github.com/i3/i3,4391,2021-03-18T19:47:36Z,2021-03-19T05:26:25Z,2021-03-22T09:54:33Z,CLOSED,False,18,0,1,https://github.com/jpalus,Maintain runtime ws assignments after moving to output,1,[],https://github.com/i3/i3/pull/4391,https://github.com/jpalus,15,https://github.com/i3/i3/pull/4391#issuecomment-803294376,,"Destroying workspace entirely including output assignment when it's not visible and has no windows was the most surprising thing. I didn't realize this until I checked code. In my mind I view such workspace as empty, not visible and assigned to output X. Instead it's recreated over and over. If that's how common i3 user sees workspaces then it's fine. It's just unfortunate that you cannot mimic ""empty workspace which is still there where you left it"".",True,{}
i3/i3,https://github.com/i3/i3,4391,2021-03-18T19:47:36Z,2021-03-19T05:26:25Z,2021-03-22T09:54:33Z,CLOSED,False,18,0,1,https://github.com/jpalus,Maintain runtime ws assignments after moving to output,1,[],https://github.com/i3/i3/pull/4391,https://github.com/orestisfl,16,https://github.com/i3/i3/pull/4391#issuecomment-803869100,,"If that's how common i3 user sees workspaces then it's fine

Not necessarily a ""common i3 user"" but a lot of users understand that workspaces are far from static numbers 1-10. Thus, either there are infinite ""empty"" workspaces or none at all.
By the way, your feature is not complete with this PR: you are not handling workspace renaming.
But, thinking about it, this would introduce memory leaks for workflows that depend on dynamic naming of workspaces: i3 would have to keep in memory all past values of workspace names.",True,{}
i3/i3,https://github.com/i3/i3,4391,2021-03-18T19:47:36Z,2021-03-19T05:26:25Z,2021-03-22T09:54:33Z,CLOSED,False,18,0,1,https://github.com/jpalus,Maintain runtime ws assignments after moving to output,1,[],https://github.com/i3/i3/pull/4391,https://github.com/jpalus,17,https://github.com/i3/i3/pull/4391#issuecomment-803929528,,"By the way, your feature is not complete with this PR: you are not handling workspace renaming.

It behaves the same way as static output assignment in config file -- after workspace rename assignment does not change either I believe. Unless expectation is that for static output assignment workspace rename does not affect assignment, while for this PR does.

But, thinking about it, this would introduce memory leaks for workflows that depend on dynamic naming of workspaces: i3 would have to keep in memory all past values of workspace names.

True though from my perspective I wouldn't call it a leak, at least considering how I view workspaces. But yeah if someone creates a lot of temporary workspaces (each having different name) and explicitly moves them to some output then yes memory use would grow slowly.",True,{}
i3/i3,https://github.com/i3/i3,4394,2021-03-28T10:51:27Z,2021-04-06T10:59:18Z,2021-04-06T10:59:18Z,MERGED,True,1,1,1,https://github.com/jaykhandkar,docs/userguide - comment out TODO line,1,[],https://github.com/i3/i3/pull/4394,https://github.com/jaykhandkar,1,https://github.com/i3/i3/pull/4394,"Commented out TODO line in userguide which was showing up in the
online documentation.","Commented out TODO line in userguide which was showing up in the
online documentation.",True,{}
i3/i3,https://github.com/i3/i3,4397,2021-04-07T08:48:25Z,2021-07-05T15:21:21Z,2021-09-23T04:01:09Z,MERGED,True,8,9,1,https://github.com/tomty89,Use mkdirp() in get_process_filename(),1,[],https://github.com/i3/i3/pull/4397,https://github.com/tomty89,1,https://github.com/i3/i3/pull/4397,Avoids race condition in case multiple i3 instances are started in parallel with e.g. systemd user units for multiple X(vfb) servers.,Avoids race condition in case multiple i3 instances are started in parallel with e.g. systemd user units for multiple X(vfb) servers.,True,{}
i3/i3,https://github.com/i3/i3,4397,2021-04-07T08:48:25Z,2021-07-05T15:21:21Z,2021-09-23T04:01:09Z,MERGED,True,8,9,1,https://github.com/tomty89,Use mkdirp() in get_process_filename(),1,[],https://github.com/i3/i3/pull/4397,https://github.com/psychon,2,https://github.com/i3/i3/pull/4397#issuecomment-815958325,Avoids race condition in case multiple i3 instances are started in parallel with e.g. systemd user units for multiple X(vfb) servers.,"Note to whoever merges/approves this: This PR causes a behaviour change. Dunno if you want that.
Before, running with XDG_RUNTIME_DIR=/tmp/does/not/exist did not do anything (well, caused i3 to exit with a failure). Now it will create the missing directories.
Perhaps it would be better to just remove the stat() call and add code to ignore EEXIST from mkdir?
diff --git a/libi3/get_process_filename.c b/libi3/get_process_filename.c
index 21429ec3..b846072a 100644
--- a/libi3/get_process_filename.c
+++ b/libi3/get_process_filename.c
@@ -28,15 +28,13 @@ char *get_process_filename(const char *prefix) {
             sasprintf(&tmp, ""%s/i3"", dir);
             dir = tmp;
             struct stat buf;
-            if (stat(dir, &buf) != 0) {
-                if (mkdir(dir, 0700) == -1) {
+                if (mkdir(dir, 0700) == -1 && errno != EEXIST) {
                     warn(""Could not mkdir(%s)"", dir);
                     errx(EXIT_FAILURE, ""Check permissions of $XDG_RUNTIME_DIR = '%s'"",
                          getenv(""XDG_RUNTIME_DIR""));
                     perror(""mkdir()"");
                     return NULL;
                 }
-            }
         } else {
             /* If not, we create a (secure) temp directory using the template
              * /tmp/i3-<user>.XXXXXX */
The code in mkdirp also checks if ""the thing"" really is a directory in case of EEXIST. Dunno if that is necessary here. If so, it might make sense to factor that code out into some kind of ensure_directory_exists helper that does this part:

  
    
      i3/libi3/mkdirp.c
    
    
        Lines 21 to 38
      in
      fcf4c23
    
  
  
    

        
          
           if (mkdir(path, mode) == 0) 
        

        
          
               return 0; 
        

        
          
           if (errno == EEXIST) { 
        

        
          
               struct stat st; 
        

        
          
               /* Check that the named file actually is a directory. */ 
        

        
          
               if (stat(path, &st)) { 
        

        
          
                   ELOG(""stat(%s) failed: %s\n"", path, strerror(errno)); 
        

        
          
                   return -1; 
        

        
          
               } 
        

        
          
               if (!S_ISDIR(st.st_mode)) { 
        

        
          
                   ELOG(""mkdir(%s) failed: %s\n"", path, strerror(ENOTDIR)); 
        

        
          
                   return -1; 
        

        
          
               } 
        

        
          
               return 0; 
        

        
          
           } else if (errno != ENOENT) { 
        

        
          
               ELOG(""mkdir(%s) failed: %s\n"", path, strerror(errno)); 
        

        
          
               return -1; 
        

        
          
           }",True,{}
i3/i3,https://github.com/i3/i3,4397,2021-04-07T08:48:25Z,2021-07-05T15:21:21Z,2021-09-23T04:01:09Z,MERGED,True,8,9,1,https://github.com/tomty89,Use mkdirp() in get_process_filename(),1,[],https://github.com/i3/i3/pull/4397,https://github.com/tomty89,3,https://github.com/i3/i3/pull/4397#issuecomment-816055626,Avoids race condition in case multiple i3 instances are started in parallel with e.g. systemd user units for multiple X(vfb) servers.,"More like we can/should do something like if (!stat(dir = getenv(""XDG_RUNTIME_DIR""), &buf))?

The code in mkdirp also checks if ""the thing"" really is a directory in case of EEXIST.

I don't see what's bad with that. Ultimately we need it to be a directory. And maybe a helper is good, so that we can use it for XDG_RUNTIME_DIR as well. (Or not necessary? Because the mkdirp() would do the job?)
P.S. I don't exactly see what's bad with creating XDG_RUNTIME_DIR either...hmm, maybe the fact that it won't be a tmpfs? Actually can a user even create a directory in /run/user/ with usual/normal permission?",True,{}
i3/i3,https://github.com/i3/i3,4397,2021-04-07T08:48:25Z,2021-07-05T15:21:21Z,2021-09-23T04:01:09Z,MERGED,True,8,9,1,https://github.com/tomty89,Use mkdirp() in get_process_filename(),1,[],https://github.com/i3/i3/pull/4397,https://github.com/tomty89,4,https://github.com/i3/i3/pull/4397#issuecomment-873397199,Avoids race condition in case multiple i3 instances are started in parallel with e.g. systemd user units for multiple X(vfb) servers.,ping @stapelberg @orestisfl,True,{}
i3/i3,https://github.com/i3/i3,4397,2021-04-07T08:48:25Z,2021-07-05T15:21:21Z,2021-09-23T04:01:09Z,MERGED,True,8,9,1,https://github.com/tomty89,Use mkdirp() in get_process_filename(),1,[],https://github.com/i3/i3/pull/4397,https://github.com/stapelberg,5,https://github.com/i3/i3/pull/4397#issuecomment-873606811,Avoids race condition in case multiple i3 instances are started in parallel with e.g. systemd user units for multiple X(vfb) servers.,"Thanks for your PR!


The code in mkdirp also checks if ""the thing"" really is a directory in case of EEXIST.

I don't see what's bad with that. Ultimately we need it to be a directory.

Yeah, I don’t mind the check either. The error message will be more clear in case the entry is not a directory.",True,{}
i3/i3,https://github.com/i3/i3,4405,2021-04-17T13:15:06Z,2021-04-17T13:26:46Z,2021-04-17T13:26:48Z,MERGED,True,9,0,3,https://github.com/stapelberg,default config: use dex for XDG autostart,1,[],https://github.com/i3/i3/pull/4405,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4405,fixes #4402,fixes #4402,True,{}
i3/i3,https://github.com/i3/i3,4409,2021-04-19T20:44:28Z,2021-04-20T07:04:08Z,2021-04-20T07:06:27Z,MERGED,True,27,2,2,https://github.com/stapelberg,fix crash with “layout default”: ipc.c won’t dump L_DEFAULT layout,1,[],https://github.com/i3/i3/pull/4409,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4409,fixes #4408,fixes #4408,True,{}
i3/i3,https://github.com/i3/i3,4411,2021-04-23T23:13:52Z,2021-04-26T14:29:32Z,2021-04-26T16:33:20Z,MERGED,True,5,7,2,https://github.com/alarsyo,docs: fix broken link to Pango documentation,1,[],https://github.com/i3/i3/pull/4411,https://github.com/alarsyo,1,https://github.com/i3/i3/pull/4411,"Looks like /stable/ no longer automatically points to the latest version, so I linked to the ""homepage"" instead. :/","Looks like /stable/ no longer automatically points to the latest version, so I linked to the ""homepage"" instead. :/",True,{}
i3/i3,https://github.com/i3/i3,4411,2021-04-23T23:13:52Z,2021-04-26T14:29:32Z,2021-04-26T16:33:20Z,MERGED,True,5,7,2,https://github.com/alarsyo,docs: fix broken link to Pango documentation,1,[],https://github.com/i3/i3/pull/4411,https://github.com/alarsyo,2,https://github.com/i3/i3/pull/4411#issuecomment-826870337,"Looks like /stable/ no longer automatically points to the latest version, so I linked to the ""homepage"" instead. :/",Should be alright now :),True,{}
i3/i3,https://github.com/i3/i3,4411,2021-04-23T23:13:52Z,2021-04-26T14:29:32Z,2021-04-26T16:33:20Z,MERGED,True,5,7,2,https://github.com/alarsyo,docs: fix broken link to Pango documentation,1,[],https://github.com/i3/i3/pull/4411,https://github.com/Airblader,3,https://github.com/i3/i3/pull/4411#issuecomment-826881366,"Looks like /stable/ no longer automatically points to the latest version, so I linked to the ""homepage"" instead. :/",Thank you!,True,"{'HOORAY': ['https://github.com/alarsyo'], 'HEART': ['https://github.com/alarsyo']}"
i3/i3,https://github.com/i3/i3,4415,2021-04-28T13:21:36Z,2021-04-29T09:24:26Z,2021-04-30T01:43:54Z,CLOSED,False,129,0,5,https://github.com/j-jzk,Add a script to list keybindings,2,[],https://github.com/i3/i3/pull/4415,https://github.com/j-jzk,1,https://github.com/i3/i3/pull/4415,"Adds a script for listing all keybindings, as described in issue #4293.
I've used the system command i3-msg instead of AnyEvent::I3 to not include any new runtime dependencies. I don't see any issues with i3-msg ..., but changing it shouldn't be a problem.
Also, the way the script makes its window floating is a little clumsy, but I couldn't find a better way. Is there one?","Adds a script for listing all keybindings, as described in issue #4293.
I've used the system command i3-msg instead of AnyEvent::I3 to not include any new runtime dependencies. I don't see any issues with i3-msg ..., but changing it shouldn't be a problem.
Also, the way the script makes its window floating is a little clumsy, but I couldn't find a better way. Is there one?",True,{}
i3/i3,https://github.com/i3/i3,4415,2021-04-28T13:21:36Z,2021-04-29T09:24:26Z,2021-04-30T01:43:54Z,CLOSED,False,129,0,5,https://github.com/j-jzk,Add a script to list keybindings,2,[],https://github.com/i3/i3/pull/4415,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/4415#issuecomment-828756688,"Adds a script for listing all keybindings, as described in issue #4293.
I've used the system command i3-msg instead of AnyEvent::I3 to not include any new runtime dependencies. I don't see any issues with i3-msg ..., but changing it shouldn't be a problem.
Also, the way the script makes its window floating is a little clumsy, but I couldn't find a better way. Is there one?","I know that it is my fault since I made the comment in #4293 but I now feel that this is not a great way to implement this. I made a quick implementation adding a new IPC message: orestisfl@bdb62a6. I vastly prefer to maintain 43 lines of C instead of 90 lines of perl.
We can then wrap around this message type to make a default user-friendly help window.
@Airblader  WDYT?",True,{}
i3/i3,https://github.com/i3/i3,4415,2021-04-28T13:21:36Z,2021-04-29T09:24:26Z,2021-04-30T01:43:54Z,CLOSED,False,129,0,5,https://github.com/j-jzk,Add a script to list keybindings,2,[],https://github.com/i3/i3/pull/4415,https://github.com/Airblader,3,https://github.com/i3/i3/pull/4415#issuecomment-829054360,"Adds a script for listing all keybindings, as described in issue #4293.
I've used the system command i3-msg instead of AnyEvent::I3 to not include any new runtime dependencies. I don't see any issues with i3-msg ..., but changing it shouldn't be a problem.
Also, the way the script makes its window floating is a little clumsy, but I couldn't find a better way. Is there one?","Are we even sure we want to make this an officially maintained tool which comes with a default key binding? If so, is showing it in a terminal really the approach we should be going for? The workaround required here for standalone mode is already something I'd be against, with the easy answer being ""don't float the window"". But really the question is whether an officially provided cheat sheet shouldn't rather be implemented as an actual client.
The question of a separate IPC command is independent of that. I'm a bit hesitant given that it simply returns a subset of what GET_CONFIG already returns, with the one difference that it returns structured information. The more generalized approach would be to have a structured representation of the entire configuration, not just the bindings.",True,{}
i3/i3,https://github.com/i3/i3,4415,2021-04-28T13:21:36Z,2021-04-29T09:24:26Z,2021-04-30T01:43:54Z,CLOSED,False,129,0,5,https://github.com/j-jzk,Add a script to list keybindings,2,[],https://github.com/i3/i3/pull/4415,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/4415#issuecomment-829078922,"Adds a script for listing all keybindings, as described in issue #4293.
I've used the system command i3-msg instead of AnyEvent::I3 to not include any new runtime dependencies. I don't see any issues with i3-msg ..., but changing it shouldn't be a problem.
Also, the way the script makes its window floating is a little clumsy, but I couldn't find a better way. Is there one?","Since we both disagree with the perl script here, let's move the discussion to #4293",True,{}
i3/i3,https://github.com/i3/i3,4415,2021-04-28T13:21:36Z,2021-04-29T09:24:26Z,2021-04-30T01:43:54Z,CLOSED,False,129,0,5,https://github.com/j-jzk,Add a script to list keybindings,2,[],https://github.com/i3/i3/pull/4415,https://github.com/orestisfl,5,https://github.com/i3/i3/pull/4415#issuecomment-829080771,"Adds a script for listing all keybindings, as described in issue #4293.
I've used the system command i3-msg instead of AnyEvent::I3 to not include any new runtime dependencies. I don't see any issues with i3-msg ..., but changing it shouldn't be a problem.
Also, the way the script makes its window floating is a little clumsy, but I couldn't find a better way. Is there one?","@j-jzk Irregardless, thank you very much for the contribution and your script. Since it wan work out-of-the box I am sure that many people in the i3 community will find it useful. Consider sharing it in /r/i3wm or the i3 mailing list.",True,{'THUMBS_UP': ['https://github.com/Airblader']}
i3/i3,https://github.com/i3/i3,4415,2021-04-28T13:21:36Z,2021-04-29T09:24:26Z,2021-04-30T01:43:54Z,CLOSED,False,129,0,5,https://github.com/j-jzk,Add a script to list keybindings,2,[],https://github.com/i3/i3/pull/4415,https://github.com/Airblader,6,https://github.com/i3/i3/pull/4415#issuecomment-829281220,"Adds a script for listing all keybindings, as described in issue #4293.
I've used the system command i3-msg instead of AnyEvent::I3 to not include any new runtime dependencies. I don't see any issues with i3-msg ..., but changing it shouldn't be a problem.
Also, the way the script makes its window floating is a little clumsy, but I couldn't find a better way. Is there one?","I agree, thanks for the PR. Perhaps @tuxy wants to add it to https://github.com/i3db as well.",True,{'THUMBS_UP': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,4415,2021-04-28T13:21:36Z,2021-04-29T09:24:26Z,2021-04-30T01:43:54Z,CLOSED,False,129,0,5,https://github.com/j-jzk,Add a script to list keybindings,2,[],https://github.com/i3/i3/pull/4415,https://github.com/tuxy,7,https://github.com/i3/i3/pull/4415#issuecomment-829734437,"Adds a script for listing all keybindings, as described in issue #4293.
I've used the system command i3-msg instead of AnyEvent::I3 to not include any new runtime dependencies. I don't see any issues with i3-msg ..., but changing it shouldn't be a problem.
Also, the way the script makes its window floating is a little clumsy, but I couldn't find a better way. Is there one?","@Airblader, I'm willing to add anything that i3 community finds useful to i3db. But requested project has to be well maintained and working with current version of i3wm. Otherwise its going to be removed.
EDIT-2: Also, I can add official members of i3wm to i3db organization if you like to contribute too.
EDIT-3: Added: https://github.com/i3db/scripts/blob/main/perl.md",True,{}
i3/i3,https://github.com/i3/i3,4416,2021-04-28T13:41:19Z,2021-04-29T13:59:23Z,2021-04-29T13:59:24Z,MERGED,True,1,0,1,https://github.com/j-jzk,Remove test timeout,2,[],https://github.com/i3/i3/pull/4416,https://github.com/j-jzk,1,https://github.com/i3/i3/pull/4416,"Meson has a 30-second timeout for tests, which may be too short on slower machines or VMs.
This PR sets the timeout to infinite (or 999 seconds on Meson < 0.57).","Meson has a 30-second timeout for tests, which may be too short on slower machines or VMs.
This PR sets the timeout to infinite (or 999 seconds on Meson < 0.57).",True,{'THUMBS_UP': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,4420,2021-05-13T15:19:05Z,2021-06-02T19:01:44Z,2021-06-02T19:01:49Z,MERGED,True,919,274,16,https://github.com/stapelberg,Implement include config directive,1,[],https://github.com/i3/i3/pull/4420,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4420,"The implementation uses wordexp(3) just like sway.
Thanks to jajm for their implementation.
This required refactoring the config parser to be re-entrant
(no more global state) and to return an error instead of dying.
In case a file cannot be opened, i3 reports an error but proceeds with the
remaining configuration.
All files that were successfully included are displayed in i3 --moreversion.
One caveat is i3 config file variable expansion, see the note in the userguide.
fixes #4192","The implementation uses wordexp(3) just like sway.
Thanks to jajm for their implementation.
This required refactoring the config parser to be re-entrant
(no more global state) and to return an error instead of dying.
In case a file cannot be opened, i3 reports an error but proceeds with the
remaining configuration.
All files that were successfully included are displayed in i3 --moreversion.
One caveat is i3 config file variable expansion, see the note in the userguide.
fixes #4192",True,"{'HEART': ['https://github.com/mrswats', 'https://github.com/jfaltis', 'https://github.com/hyperupcall', 'https://github.com/matejdro', 'https://github.com/ferdinandyb'], 'THUMBS_UP': ['https://github.com/runningnak3d', 'https://github.com/tuxy', 'https://github.com/alteriks', 'https://github.com/hyperupcall', 'https://github.com/murlakatamenka', 'https://github.com/hvhaugwitz', 'https://github.com/ferdinandyb', 'https://github.com/ltrel'], 'ROCKET': ['https://github.com/murlakatamenka']}"
i3/i3,https://github.com/i3/i3,4420,2021-05-13T15:19:05Z,2021-06-02T19:01:44Z,2021-06-02T19:01:49Z,MERGED,True,919,274,16,https://github.com/stapelberg,Implement include config directive,1,[],https://github.com/i3/i3/pull/4420,https://github.com/kgilmer,2,https://github.com/i3/i3/pull/4420#issuecomment-840660231,"The implementation uses wordexp(3) just like sway.
Thanks to jajm for their implementation.
This required refactoring the config parser to be re-entrant
(no more global state) and to return an error instead of dying.
In case a file cannot be opened, i3 reports an error but proceeds with the
remaining configuration.
All files that were successfully included are displayed in i3 --moreversion.
One caveat is i3 config file variable expansion, see the note in the userguide.
fixes #4192",Happy to see this <3.  Do you plan to ship an updated default config file with a wildcard matching scheme similar to the Sway solution?,True,{}
i3/i3,https://github.com/i3/i3,4420,2021-05-13T15:19:05Z,2021-06-02T19:01:44Z,2021-06-02T19:01:49Z,MERGED,True,919,274,16,https://github.com/stapelberg,Implement include config directive,1,[],https://github.com/i3/i3/pull/4420,https://github.com/Airblader,3,https://github.com/i3/i3/pull/4420#issuecomment-840665208,"The implementation uses wordexp(3) just like sway.
Thanks to jajm for their implementation.
This required refactoring the config parser to be re-entrant
(no more global state) and to return an error instead of dying.
In case a file cannot be opened, i3 reports an error but proceeds with the
remaining configuration.
All files that were successfully included are displayed in i3 --moreversion.
One caveat is i3 config file variable expansion, see the note in the userguide.
fixes #4192","I'll hopefully get around to reviewing this tomorrow. I'll +1 adding wildcard includes for distributions like Regolith.
One concern coming to mind is duplicate binding handling. There's a case to be made that overrides should be allowed across files, but perhaps just not within the same file?",True,{'HEART': ['https://github.com/kgilmer']}
i3/i3,https://github.com/i3/i3,4420,2021-05-13T15:19:05Z,2021-06-02T19:01:44Z,2021-06-02T19:01:49Z,MERGED,True,919,274,16,https://github.com/stapelberg,Implement include config directive,1,[],https://github.com/i3/i3/pull/4420,https://github.com/stapelberg,4,https://github.com/i3/i3/pull/4420#issuecomment-841054232,"The implementation uses wordexp(3) just like sway.
Thanks to jajm for their implementation.
This required refactoring the config parser to be re-entrant
(no more global state) and to return an error instead of dying.
In case a file cannot be opened, i3 reports an error but proceeds with the
remaining configuration.
All files that were successfully included are displayed in i3 --moreversion.
One caveat is i3 config file variable expansion, see the note in the userguide.
fixes #4192","I'll +1 adding wildcard includes for distributions like Regolith.

What makes Regolith special in this regard?
How would these wildcard includes need to look like?
Just include /etc/i3/config.d/*.conf to handle system-level additions, or also include config.d/*.conf to handle user-level additions? Or would we leave the latter up to the user to set up?

One concern coming to mind is duplicate binding handling. There's a case to be made that overrides should be allowed across files, but perhaps just not within the same file?

Perhaps we loosen the duplicate binding restriction in a separate step later on? It’s not clear to me that we necessarily need to, or why bindings are a special case compared to other directives?",True,{}
i3/i3,https://github.com/i3/i3,4420,2021-05-13T15:19:05Z,2021-06-02T19:01:44Z,2021-06-02T19:01:49Z,MERGED,True,919,274,16,https://github.com/stapelberg,Implement include config directive,1,[],https://github.com/i3/i3/pull/4420,https://github.com/Airblader,5,https://github.com/i3/i3/pull/4420#issuecomment-841058170,"The implementation uses wordexp(3) just like sway.
Thanks to jajm for their implementation.
This required refactoring the config parser to be re-entrant
(no more global state) and to return an error instead of dying.
In case a file cannot be opened, i3 reports an error but proceeds with the
remaining configuration.
All files that were successfully included are displayed in i3 --moreversion.
One caveat is i3 config file variable expansion, see the note in the userguide.
fixes #4192","What makes Regolith special in this regard?

They currently need to ship a customized, self maintained default config AFAIK. With wildcards they could instead just ship additional files but leave the default config from i3 in place.

Or would we leave the latter up to the user to set up?

I don't feel too strongly about those, but don't see a harm in adding that either. The system level ones will just make life for packagers easier who want to offer customized i3 packages.

or why bindings are a special case compared to other directives?

If anything, they're a special case right now, since we don't check for duplicate directives for anything other than bindings. So overwriting any directives is totally fine, just bindings cause issues.
Again, for something like Regolith that probably makes this feature less useful. But perhaps someone from Regolith can comment more on that, @kgilmer?",True,{}
i3/i3,https://github.com/i3/i3,4420,2021-05-13T15:19:05Z,2021-06-02T19:01:44Z,2021-06-02T19:01:49Z,MERGED,True,919,274,16,https://github.com/stapelberg,Implement include config directive,1,[],https://github.com/i3/i3/pull/4420,https://github.com/stapelberg,6,https://github.com/i3/i3/pull/4420#issuecomment-841336522,"The implementation uses wordexp(3) just like sway.
Thanks to jajm for their implementation.
This required refactoring the config parser to be re-entrant
(no more global state) and to return an error instead of dying.
In case a file cannot be opened, i3 reports an error but proceeds with the
remaining configuration.
All files that were successfully included are displayed in i3 --moreversion.
One caveat is i3 config file variable expansion, see the note in the userguide.
fixes #4192",Sounds like we should tie the binding duplicate check to the file in which the binding is defined.,True,{}
i3/i3,https://github.com/i3/i3,4420,2021-05-13T15:19:05Z,2021-06-02T19:01:44Z,2021-06-02T19:01:49Z,MERGED,True,919,274,16,https://github.com/stapelberg,Implement include config directive,1,[],https://github.com/i3/i3/pull/4420,https://github.com/kgilmer,7,https://github.com/i3/i3/pull/4420#issuecomment-841337813,"The implementation uses wordexp(3) just like sway.
Thanks to jajm for their implementation.
This required refactoring the config parser to be re-entrant
(no more global state) and to return an error instead of dying.
In case a file cannot be opened, i3 reports an error but proceeds with the
remaining configuration.
All files that were successfully included are displayed in i3 --moreversion.
One caveat is i3 config file variable expansion, see the note in the userguide.
fixes #4192","They currently need to ship a customized, self maintained default config AFAIK. With wildcards they could instead just ship additional files but leave the default config from i3 in place.

Yes,  this would be a good change if Regolith was able to use stock i3 config file(s).  A concern I have is possible difficult in users understanding why a given keybinding was mapped if there are multiple partials that all may set that keybinding.  For example, the stock i3 may map the app launcher to <super> d but Regolith would override this to be <super> space.  Generally speaking, if overrides are allowed, to be useful for Regolith we'd need Update and Delete in addition to Create.

If anything, they're a special case right now, since we don't check for duplicate directives for anything other than bindings. So overwriting any directives is totally fine, just bindings cause issues.
Again, for something like Regolith that probably makes this feature less useful. But perhaps someone from Regolith can comment more on that, @kgilmer?

I may be missing some simpler approaches but as I see it now, if we allow overrides across partials, I'm guessing that i3 will undergo a general regression relating to the complexity of the i3 config file.  Because before config partials, a keybinding is a keybinding.  But after partials, a keybinding is whatever keybinding expression was evaluated last across the ordered set of evaluated partials.  Partials as a feature us a huge benefit to Regolith, and using a custom config is relatively minor.  That said I may be missing some simple way that keybinding overrides can be implemented that does not increase general complexity in the i3 config file.",True,{}
i3/i3,https://github.com/i3/i3,4420,2021-05-13T15:19:05Z,2021-06-02T19:01:44Z,2021-06-02T19:01:49Z,MERGED,True,919,274,16,https://github.com/stapelberg,Implement include config directive,1,[],https://github.com/i3/i3/pull/4420,https://github.com/stapelberg,8,https://github.com/i3/i3/pull/4420#issuecomment-841339255,"The implementation uses wordexp(3) just like sway.
Thanks to jajm for their implementation.
This required refactoring the config parser to be re-entrant
(no more global state) and to return an error instead of dying.
In case a file cannot be opened, i3 reports an error but proceeds with the
remaining configuration.
All files that were successfully included are displayed in i3 --moreversion.
One caveat is i3 config file variable expansion, see the note in the userguide.
fixes #4192","Generally speaking, if overrides are allowed, to be useful for Regolith we'd need Update and Delete in addition to Create.

Currently, every directive behaves like Upsert: update if present, and insert if not present yet.
Can you explain why you need Delete?

Edit: actually, key bindings don’t upsert currently, but only ever append.",True,{}
i3/i3,https://github.com/i3/i3,4420,2021-05-13T15:19:05Z,2021-06-02T19:01:44Z,2021-06-02T19:01:49Z,MERGED,True,919,274,16,https://github.com/stapelberg,Implement include config directive,1,[],https://github.com/i3/i3/pull/4420,https://github.com/Airblader,9,https://github.com/i3/i3/pull/4420#issuecomment-841340170,"The implementation uses wordexp(3) just like sway.
Thanks to jajm for their implementation.
This required refactoring the config parser to be re-entrant
(no more global state) and to return an error instead of dying.
In case a file cannot be opened, i3 reports an error but proceeds with the
remaining configuration.
All files that were successfully included are displayed in i3 --moreversion.
One caveat is i3 config file variable expansion, see the note in the userguide.
fixes #4192","Generally speaking, if overrides are allowed, to be useful for Regolith we'd need Update and Delete in addition to Create.

That's a good point.
I think changing the behavior for duplicate binding detection might not be a good idea. An alternative could be modularizing the default config to eg move bindings into a separate file. Then packagers could just not ship that one file and instead their own bindings, which allows all additions and deletions. I'm not sure we'd want to do that with the default config, though.",True,{}
i3/i3,https://github.com/i3/i3,4420,2021-05-13T15:19:05Z,2021-06-02T19:01:44Z,2021-06-02T19:01:49Z,MERGED,True,919,274,16,https://github.com/stapelberg,Implement include config directive,1,[],https://github.com/i3/i3/pull/4420,https://github.com/kgilmer,10,https://github.com/i3/i3/pull/4420#issuecomment-841340289,"The implementation uses wordexp(3) just like sway.
Thanks to jajm for their implementation.
This required refactoring the config parser to be re-entrant
(no more global state) and to return an error instead of dying.
In case a file cannot be opened, i3 reports an error but proceeds with the
remaining configuration.
All files that were successfully included are displayed in i3 --moreversion.
One caveat is i3 config file variable expansion, see the note in the userguide.
fixes #4192","Let me say all that again in another way: I presently don't see a way of being able to re-use a stock i3 config file in Regolith without having to introduce conflicting keybinding statements (plus either/or partial semantics or some kind of ""unbind"" operator) in partials. These conflicts I expect would confuse some users.",True,{}
i3/i3,https://github.com/i3/i3,4420,2021-05-13T15:19:05Z,2021-06-02T19:01:44Z,2021-06-02T19:01:49Z,MERGED,True,919,274,16,https://github.com/stapelberg,Implement include config directive,1,[],https://github.com/i3/i3/pull/4420,https://github.com/kgilmer,11,https://github.com/i3/i3/pull/4420#issuecomment-841341738,"The implementation uses wordexp(3) just like sway.
Thanks to jajm for their implementation.
This required refactoring the config parser to be re-entrant
(no more global state) and to return an error instead of dying.
In case a file cannot be opened, i3 reports an error but proceeds with the
remaining configuration.
All files that were successfully included are displayed in i3 --moreversion.
One caveat is i3 config file variable expansion, see the note in the userguide.
fixes #4192","Can you explain why you need Delete?

A contrived example is that stock i3 uses <super> d for drun.  Regolith uses <super> space.  I would want <super> d to do nothing. (in practice <super> d in Regolith maps to gnome display settings, but I'm guessing there are actual cases like this presently).",True,{}
i3/i3,https://github.com/i3/i3,4420,2021-05-13T15:19:05Z,2021-06-02T19:01:44Z,2021-06-02T19:01:49Z,MERGED,True,919,274,16,https://github.com/stapelberg,Implement include config directive,1,[],https://github.com/i3/i3/pull/4420,https://github.com/kgilmer,12,https://github.com/i3/i3/pull/4420#issuecomment-841343659,"The implementation uses wordexp(3) just like sway.
Thanks to jajm for their implementation.
This required refactoring the config parser to be re-entrant
(no more global state) and to return an error instead of dying.
In case a file cannot be opened, i3 reports an error but proceeds with the
remaining configuration.
All files that were successfully included are displayed in i3 --moreversion.
One caveat is i3 config file variable expansion, see the note in the userguide.
fixes #4192","I think changing the behavior for duplicate binding detection might not be a good idea. An alternative could be modularizing the default config to eg move bindings into a separate file. Then packagers could just not ship that one file and instead their own bindings, which allows all additions and deletions. I'm not sure we'd want to do that with the default config, though.

Yes, in my mind weighing the options i3 would want to maintain continuity of the existing monolithic config file (because it is simple, easy to reason about, and well known) rather than the top level file just being a skeleton and breaking partials out for each ""config category"" as I have done in a PoC for Regolith 2.0.",True,{}
i3/i3,https://github.com/i3/i3,4420,2021-05-13T15:19:05Z,2021-06-02T19:01:44Z,2021-06-02T19:01:49Z,MERGED,True,919,274,16,https://github.com/stapelberg,Implement include config directive,1,[],https://github.com/i3/i3/pull/4420,https://github.com/stapelberg,13,https://github.com/i3/i3/pull/4420#issuecomment-841345343,"The implementation uses wordexp(3) just like sway.
Thanks to jajm for their implementation.
This required refactoring the config parser to be re-entrant
(no more global state) and to return an error instead of dying.
In case a file cannot be opened, i3 reports an error but proceeds with the
remaining configuration.
All files that were successfully included are displayed in i3 --moreversion.
One caveat is i3 config file variable expansion, see the note in the userguide.
fixes #4192","A contrived example is that stock i3 uses <super> d for drun. Regolith uses <super> space. I would want <super> d to do nothing. (in practice <super> d in Regolith maps to gnome display settings, but I'm guessing there are actual cases like this presently).

Right, I think we’ll have to declare this use-case out of scope.
Config parsing with includes is “additive” or “overwrite-only”, no directive (neither key bindings nor others like e.g. focus_follows_mouse) supports expressing “reset this back to default”.",True,{}
i3/i3,https://github.com/i3/i3,4420,2021-05-13T15:19:05Z,2021-06-02T19:01:44Z,2021-06-02T19:01:49Z,MERGED,True,919,274,16,https://github.com/stapelberg,Implement include config directive,1,[],https://github.com/i3/i3/pull/4420,https://github.com/stapelberg,14,https://github.com/i3/i3/pull/4420#issuecomment-841620952,"The implementation uses wordexp(3) just like sway.
Thanks to jajm for their implementation.
This required refactoring the config parser to be re-entrant
(no more global state) and to return an error instead of dying.
In case a file cannot be opened, i3 reports an error but proceeds with the
remaining configuration.
All files that were successfully included are displayed in i3 --moreversion.
One caveat is i3 config file variable expansion, see the note in the userguide.
fixes #4192","Pushed an updated version where I also introduce the --remove flag for bindsym and bindcode.
These can be used to overwrite or remove key bindings, which is useful from included config files.
Duplicate key binding checking happens after each file was parsed, i.e. on the return path of the recursion. I don’t think we need any changes to duplicate key binding checking after all.
I added basic tests for this, but please give it a shot and see if it works as expected.
This should cover most use-cases, and I think implementing it for key bindings as a special case makes sense. For the other config directives, we can consider similar behavior on a case-by-case basis, and I expect most will work fine without modifications.",True,{}
i3/i3,https://github.com/i3/i3,4420,2021-05-13T15:19:05Z,2021-06-02T19:01:44Z,2021-06-02T19:01:49Z,MERGED,True,919,274,16,https://github.com/stapelberg,Implement include config directive,1,[],https://github.com/i3/i3/pull/4420,https://github.com/Airblader,15,https://github.com/i3/i3/pull/4420#issuecomment-841621226,"The implementation uses wordexp(3) just like sway.
Thanks to jajm for their implementation.
This required refactoring the config parser to be re-entrant
(no more global state) and to return an error instead of dying.
In case a file cannot be opened, i3 reports an error but proceeds with the
remaining configuration.
All files that were successfully included are displayed in i3 --moreversion.
One caveat is i3 config file variable expansion, see the note in the userguide.
fixes #4192",I'm a bit confused about that change. I thought we didn't want to support this use case? I'm not actually a fan of a flag to remove bindings.,True,{}
i3/i3,https://github.com/i3/i3,4420,2021-05-13T15:19:05Z,2021-06-02T19:01:44Z,2021-06-02T19:01:49Z,MERGED,True,919,274,16,https://github.com/stapelberg,Implement include config directive,1,[],https://github.com/i3/i3/pull/4420,https://github.com/stapelberg,16,https://github.com/i3/i3/pull/4420#issuecomment-841621702,"The implementation uses wordexp(3) just like sway.
Thanks to jajm for their implementation.
This required refactoring the config parser to be re-entrant
(no more global state) and to return an error instead of dying.
In case a file cannot be opened, i3 reports an error but proceeds with the
remaining configuration.
All files that were successfully included are displayed in i3 --moreversion.
One caveat is i3 config file variable expansion, see the note in the userguide.
fixes #4192","I thought we didn't want to support this use case?

Initially, I thought one could at least overwrite key bindings, but then I realized that’s not currently possible.
Hence, I came around on the need to change something about key bindings.

I'm not actually a fan of a flag to remove bindings.

What’s your concern about this flag? The implementation is pretty straight-forward, and use-cases such as “use the standard i3 config, but overwrite that one key binding” become much easier to express.",True,{}
i3/i3,https://github.com/i3/i3,4420,2021-05-13T15:19:05Z,2021-06-02T19:01:44Z,2021-06-02T19:01:49Z,MERGED,True,919,274,16,https://github.com/stapelberg,Implement include config directive,1,[],https://github.com/i3/i3/pull/4420,https://github.com/Airblader,17,https://github.com/i3/i3/pull/4420#issuecomment-841622516,"The implementation uses wordexp(3) just like sway.
Thanks to jajm for their implementation.
This required refactoring the config parser to be re-entrant
(no more global state) and to return an error instead of dying.
In case a file cannot be opened, i3 reports an error but proceeds with the
remaining configuration.
All files that were successfully included are displayed in i3 --moreversion.
One caveat is i3 config file variable expansion, see the note in the userguide.
fixes #4192","I think removing bindings ""somewhere down the line"" adds significant mental complexity. For a configuration format something like ""undo this configuration I just did above"" feels awkward; configs are static, which is what sets config and commands apart.
Allowing to statically remove statically added bindings from within the config, but not allowing adding or removing for_window directives at runtime, for example, sounds illogical to me and hard to justify (yes I'm aware they're two different things). There's also no way to statically remove for_window directives, nor bar blocks etc. for that matter.
Such a flag feels less like a solution and more like a workaround to me.",True,{}
i3/i3,https://github.com/i3/i3,4420,2021-05-13T15:19:05Z,2021-06-02T19:01:44Z,2021-06-02T19:01:49Z,MERGED,True,919,274,16,https://github.com/stapelberg,Implement include config directive,1,[],https://github.com/i3/i3/pull/4420,https://github.com/Airblader,18,https://github.com/i3/i3/pull/4420#issuecomment-841623198,"The implementation uses wordexp(3) just like sway.
Thanks to jajm for their implementation.
This required refactoring the config parser to be re-entrant
(no more global state) and to return an error instead of dying.
In case a file cannot be opened, i3 reports an error but proceeds with the
remaining configuration.
All files that were successfully included are displayed in i3 --moreversion.
One caveat is i3 config file variable expansion, see the note in the userguide.
fixes #4192",Another note on this: removing previous bindings is sensitive to the inclusion order.,True,{}
i3/i3,https://github.com/i3/i3,4420,2021-05-13T15:19:05Z,2021-06-02T19:01:44Z,2021-06-02T19:01:49Z,MERGED,True,919,274,16,https://github.com/stapelberg,Implement include config directive,1,[],https://github.com/i3/i3/pull/4420,https://github.com/stapelberg,19,https://github.com/i3/i3/pull/4420#issuecomment-841624259,"The implementation uses wordexp(3) just like sway.
Thanks to jajm for their implementation.
This required refactoring the config parser to be re-entrant
(no more global state) and to return an error instead of dying.
In case a file cannot be opened, i3 reports an error but proceeds with the
remaining configuration.
All files that were successfully included are displayed in i3 --moreversion.
One caveat is i3 config file variable expansion, see the note in the userguide.
fixes #4192","I think removing bindings ""somewhere down the line"" adds significant mental complexity.

I agree that include directives in general, and overwriting semantics in particular make configuration more complex.
I suppose there are ways to counter that complexity with easier debugging. Perhaps even switching from recursively evaluating config files to actually concatenating them first might be a change that helps in that regard, but I think that can be done in a separate pull request.

For a configuration format something like ""undo this configuration I just did above"" feels awkward;

For multi-file configs, this is a standard feature. See for example systemd’s drop-in config files, where the ExecStart= directive is a list, and if you want to overwrite that list from a drop-in config file, you need to empty it (“remove” it in our terminology) explicitly first, e.g.:
% cat /etc/systemd/system/robustirc-bridge.service.d/override.conf 
[Service]
ExecStart=
ExecStart=/usr/bin/robustirc-bridge -socks= -listen=localhost:6637 -network=robustirc.net

% systemctl status robustirc-bridge
● robustirc-bridge.service - RobustIRC bridge
     Loaded: loaded (/usr/lib/systemd/system/robustirc-bridge.service; enabled; vendor preset: disabled)
    Drop-In: /etc/systemd/system/robustirc-bridge.service.d
             └─override.conf


configs are static, which is what sets config and commands apart.

I don’t think of them in terms of “static” (and “dynamic”?), but rather in terms of evaluation time: the configuration is applied when loading/reloading it, whereas commands are applied/interpreted/executed whenever needed.

Allowing to statically remove statically added bindings from within the config, but not allowing adding or removing for_window directives at runtime, for example, sounds illogical to me and hard to justify (yes I'm aware they're two different things).

Amending the config at runtime is a separate feature, I think.

There's also no way to statically remove for_window directives, nor bar blocks etc. for that matter.

Yes, it might make sense to eventually add support to these, too, if that turns out to be a popular user request.

Another note on this: removing previous bindings is sensitive to the inclusion order.

Yes, but so are many other directives that already effectively have overwrite semantics, such as changing the font with the font directive.
Also note that the variable set command (and set_from_resource) use upsert semantics already.",True,{}
i3/i3,https://github.com/i3/i3,4420,2021-05-13T15:19:05Z,2021-06-02T19:01:44Z,2021-06-02T19:01:49Z,MERGED,True,919,274,16,https://github.com/stapelberg,Implement include config directive,1,[],https://github.com/i3/i3/pull/4420,https://github.com/Airblader,20,https://github.com/i3/i3/pull/4420#issuecomment-841689740,"The implementation uses wordexp(3) just like sway.
Thanks to jajm for their implementation.
This required refactoring the config parser to be re-entrant
(no more global state) and to return an error instead of dying.
In case a file cannot be opened, i3 reports an error but proceeds with the
remaining configuration.
All files that were successfully included are displayed in i3 --moreversion.
One caveat is i3 config file variable expansion, see the note in the userguide.
fixes #4192","For multi-file configs, this is a standard feature.

Even if we agree on that, we're not introducing a standard solution here but rather a different thing for every directive. For most you just overwrite the value, for bindings there's a special flag now. For bar blocks or for_window it isn't even clear what the syntax would look like.
All of this amounts to trying to special case something that probably doesn't warrant that complexity. For normal users, they can take care of this problem by more carefully designing their files. My original thought were packagers like Regolith, for which this would be useful, but for such a small use case I wouldn't want to add this level of complexity to the config.
Furthermore, we shouldn't treat the default config as a sacred thing that cannot be touched. Configuration exists to be changed. Users who want to remove a default binding can do so already.

Amending the config at runtime is a separate feature, I think.

So is ""remove a previously defined binding within the config"". :-)
I really find it odd that we support CRUD in the config but not at runtime. As far as ""if it's a popular user request"" goes — the expectation that all config directives can be executed as commands at runtime is probably one of the top issues I see people run into. And wanting to change the runtime makes much more sense to me as well as it opens many scripting use cases.
This flag, however, is just a bandaid to serve a single, and very small, use case, and doesn't even provide a full solution for other directives.

Yes, but so are many other directives that already effectively have overwrite semantics

Overwriting requires no special syntax, though. If anything, the consistent way to handle this would then be to remove bindings if they're empty:
# unbind
bindsym $mod+r

But that'd still not provide a solution for things like for_window which by nature must be additive.
Overall I feel adding this flag (at this stage) is a mistake, because it is inconsistent, incomplete and its usecase doesn't justify added syntax, so as far as my vote goes I'd vote no.",True,{}
i3/i3,https://github.com/i3/i3,4420,2021-05-13T15:19:05Z,2021-06-02T19:01:44Z,2021-06-02T19:01:49Z,MERGED,True,919,274,16,https://github.com/stapelberg,Implement include config directive,1,[],https://github.com/i3/i3/pull/4420,https://github.com/stapelberg,21,https://github.com/i3/i3/pull/4420#issuecomment-841690512,"The implementation uses wordexp(3) just like sway.
Thanks to jajm for their implementation.
This required refactoring the config parser to be re-entrant
(no more global state) and to return an error instead of dying.
In case a file cannot be opened, i3 reports an error but proceeds with the
remaining configuration.
All files that were successfully included are displayed in i3 --moreversion.
One caveat is i3 config file variable expansion, see the note in the userguide.
fixes #4192","I don’t think it makes sense to introduce an include directive without a way to overwrite bindings. In my mind, bindings are the primary thing that most i3 users configure, and not a small niche use-case.
You don’t like the --remove flag and that’s fair. But do you have a suggestion for how to implement overwriting bindings instead?
If we don’t want additional syntax, we must remove the duplicate bindings check (because those then overwrite and aren’t duplicative).
Or are you saying you vote against the include directive altogether?",True,{}
i3/i3,https://github.com/i3/i3,4420,2021-05-13T15:19:05Z,2021-06-02T19:01:44Z,2021-06-02T19:01:49Z,MERGED,True,919,274,16,https://github.com/stapelberg,Implement include config directive,1,[],https://github.com/i3/i3/pull/4420,https://github.com/Airblader,22,https://github.com/i3/i3/pull/4420#issuecomment-841691143,"The implementation uses wordexp(3) just like sway.
Thanks to jajm for their implementation.
This required refactoring the config parser to be re-entrant
(no more global state) and to return an error instead of dying.
In case a file cannot be opened, i3 reports an error but proceeds with the
remaining configuration.
All files that were successfully included are displayed in i3 --moreversion.
One caveat is i3 config file variable expansion, see the note in the userguide.
fixes #4192","Or are you saying you vote against the include directive altogether?

No, the directive is extremely useful and a big plus for users. I only vote against the flag to remove bindings.

I don’t think it makes sense to introduce an include directive without a way to overwrite bindings.

I think most users will not be using this flag. They modularize their config into multiple files and load certain ones based on hostname etc. I don't think having to overwrite a previous binding is something most users will (have to) do, instead they just won't define the binding in that environment to begin with.
The only two scenarios where a flag to delete a binding is useful in my mind is when trying to keep and extend the default config (which just isn't necessary) or for packagers like Regolith (which aren't a strong enough of a use case to justify this as they can just ship a modified default config).",True,{}
i3/i3,https://github.com/i3/i3,4420,2021-05-13T15:19:05Z,2021-06-02T19:01:44Z,2021-06-02T19:01:49Z,MERGED,True,919,274,16,https://github.com/stapelberg,Implement include config directive,1,[],https://github.com/i3/i3/pull/4420,https://github.com/kgilmer,23,https://github.com/i3/i3/pull/4420#issuecomment-841708805,"The implementation uses wordexp(3) just like sway.
Thanks to jajm for their implementation.
This required refactoring the config parser to be re-entrant
(no more global state) and to return an error instead of dying.
In case a file cannot be opened, i3 reports an error but proceeds with the
remaining configuration.
All files that were successfully included are displayed in i3 --moreversion.
One caveat is i3 config file variable expansion, see the note in the userguide.
fixes #4192","Having had a chance to think about the ramifications of this change a bit more, perhaps the ideal for Regolith (and maybe others) would be to have no default config file at all.  Rather, in the Xsession init have something like:
(assuming i3 has a capability to read config from stdin):
echo ""include /etc/i3/conf.d/*; include /etc/regolith/i3/conf.d/*; include ~/regolith/i3/conf.d/*"" | i3 -
or if config directory feature was exposed via commandline arguments, where -D represents one or more include statements:
i3 -D /etc/i3/conf.d/* -D /etc/regolith/i3/conf.d/* -D ~/regolith/i3/conf.d/*
My reasoning is to why this would be better than having an equivalent root config file w/ is:

A common hurdle for new users is knowing they have to restart i3 if they change the location of the config file.  Despite documentation this is probably one of the top 3 issues I've noticed Regolith users have.  (eg They copy the i3 into the user dir, make a change, refresh and don't see any difference.)
If there is no root file there is less of a change that an accidental change in the root breaks everything.  I think this is a weak reason but also the simplicity of ""everything is a config partial"".

(Please LMK if this not the right forum for me to discuss ideas like this, happy to move it somewhere else or keep to myself without any offense taken.)",True,{}
i3/i3,https://github.com/i3/i3,4420,2021-05-13T15:19:05Z,2021-06-02T19:01:44Z,2021-06-02T19:01:49Z,MERGED,True,919,274,16,https://github.com/stapelberg,Implement include config directive,1,[],https://github.com/i3/i3/pull/4420,https://github.com/stapelberg,24,https://github.com/i3/i3/pull/4420#issuecomment-841728171,"The implementation uses wordexp(3) just like sway.
Thanks to jajm for their implementation.
This required refactoring the config parser to be re-entrant
(no more global state) and to return an error instead of dying.
In case a file cannot be opened, i3 reports an error but proceeds with the
remaining configuration.
All files that were successfully included are displayed in i3 --moreversion.
One caveat is i3 config file variable expansion, see the note in the userguide.
fixes #4192","I only vote against the flag to remove bindings.

I reverted that part of the pull request for now and added a section to the userguide about this restriction.
I’ll ask people over on the issue what they think, i.e. whether that works for their desired use-cases or not.

My reasoning is to why this would be better than having an equivalent root config file w/ is:

Reading the config from stdin isn’t great ergonomics, I think, independent of whether it actually works or not (it does not work currently).
Having the config visible in a file is simpler to grasp.


A common hurdle for new users is knowing they have to restart i3 if they change the location of the config file.  Despite documentation this is probably one of the top 3 issues I've noticed Regolith users have.  (eg They copy the i3 into the user dir, make a change, refresh and don't see any difference.)


Unless overwrite the config path using the -c flag when starting i3, usually i3 should be discovering the config path from scratch on every reload. If that’s not what you’re seeing, please file a separate issue about that.",True,{}
i3/i3,https://github.com/i3/i3,4420,2021-05-13T15:19:05Z,2021-06-02T19:01:44Z,2021-06-02T19:01:49Z,MERGED,True,919,274,16,https://github.com/stapelberg,Implement include config directive,1,[],https://github.com/i3/i3/pull/4420,https://github.com/stapelberg,25,https://github.com/i3/i3/pull/4420#issuecomment-844252215,"The implementation uses wordexp(3) just like sway.
Thanks to jajm for their implementation.
This required refactoring the config parser to be re-entrant
(no more global state) and to return an error instead of dying.
In case a file cannot be opened, i3 reports an error but proceeds with the
remaining configuration.
All files that were successfully included are displayed in i3 --moreversion.
One caveat is i3 config file variable expansion, see the note in the userguide.
fixes #4192","i3-msg -t get_config is broken since char *current_config in config_parser.c:893 only keeps the latest read file.

Fixed, thanks!",True,{}
i3/i3,https://github.com/i3/i3,4420,2021-05-13T15:19:05Z,2021-06-02T19:01:44Z,2021-06-02T19:01:49Z,MERGED,True,919,274,16,https://github.com/stapelberg,Implement include config directive,1,[],https://github.com/i3/i3/pull/4420,https://github.com/stapelberg,26,https://github.com/i3/i3/pull/4420#issuecomment-846524607,"The implementation uses wordexp(3) just like sway.
Thanks to jajm for their implementation.
This required refactoring the config parser to be re-entrant
(no more global state) and to return an error instead of dying.
In case a file cannot be opened, i3 reports an error but proceeds with the
remaining configuration.
All files that were successfully included are displayed in i3 --moreversion.
One caveat is i3 config file variable expansion, see the note in the userguide.
fixes #4192","Looks like we’re not going to get much more feedback here, so I suggest we merge what we have now and rely on users reporting issues before the release.
@orestisfl anything left to change or can you approve please?",True,{}
i3/i3,https://github.com/i3/i3,4420,2021-05-13T15:19:05Z,2021-06-02T19:01:44Z,2021-06-02T19:01:49Z,MERGED,True,919,274,16,https://github.com/stapelberg,Implement include config directive,1,[],https://github.com/i3/i3/pull/4420,https://github.com/stapelberg,27,https://github.com/i3/i3/pull/4420#issuecomment-853116618,"The implementation uses wordexp(3) just like sway.
Thanks to jajm for their implementation.
This required refactoring the config parser to be re-entrant
(no more global state) and to return an error instead of dying.
In case a file cannot be opened, i3 reports an error but proceeds with the
remaining configuration.
All files that were successfully included are displayed in i3 --moreversion.
One caveat is i3 config file variable expansion, see the note in the userguide.
fixes #4192","No strong opinion for me but what do you think about GET_CONFIG returning the full config, after includes instead of just the top level config?

Yeah, improving what GET_CONFIG returns is something I thought about, but I’d like to tackle that in a separate pull request. This PR gives us an implementation to use, the next PR can change the implementation to make possible better GET_CONFIG output without changing the behavior otherwise.",True,{}
i3/i3,https://github.com/i3/i3,4420,2021-05-13T15:19:05Z,2021-06-02T19:01:44Z,2021-06-02T19:01:49Z,MERGED,True,919,274,16,https://github.com/stapelberg,Implement include config directive,1,[],https://github.com/i3/i3/pull/4420,https://github.com/stapelberg,28,https://github.com/i3/i3/pull/4420#issuecomment-853239879,"The implementation uses wordexp(3) just like sway.
Thanks to jajm for their implementation.
This required refactoring the config parser to be re-entrant
(no more global state) and to return an error instead of dying.
In case a file cannot be opened, i3 reports an error but proceeds with the
remaining configuration.
All files that were successfully included are displayed in i3 --moreversion.
One caveat is i3 config file variable expansion, see the note in the userguide.
fixes #4192",@orestisfl can you approve so we can merge? We can always improve further later. Thanks :),True,{}
i3/i3,https://github.com/i3/i3,4427,2021-05-19T11:40:49Z,,2021-05-24T17:42:12Z,OPEN,False,575,91,7,https://github.com/j-jzk,Add a new IPC message for requesting structured configuration,2,[],https://github.com/i3/i3/pull/4427,https://github.com/j-jzk,1,https://github.com/i3/i3/pull/4427,"Adds a new IPC message for requesting the configuration in JSON, as discussed in #4293.
I wanted to generate the JSON somewhat automatically, but didn't find any acceptable way of doing it - if we generated the JSON at the same time we parsed the config file, the result wouldn't be very structured and would have duplicit values if some directives were set and then overridden.
TODO:

 parts of the configuration:

 keybindings
 workspaces
 bar


 tests
 documentation","Adds a new IPC message for requesting the configuration in JSON, as discussed in #4293.
I wanted to generate the JSON somewhat automatically, but didn't find any acceptable way of doing it - if we generated the JSON at the same time we parsed the config file, the result wouldn't be very structured and would have duplicit values if some directives were set and then overridden.
TODO:

 parts of the configuration:

 keybindings
 workspaces
 bar


 tests
 documentation",True,{}
i3/i3,https://github.com/i3/i3,4427,2021-05-19T11:40:49Z,,2021-05-24T17:42:12Z,OPEN,False,575,91,7,https://github.com/j-jzk,Add a new IPC message for requesting structured configuration,2,[],https://github.com/i3/i3/pull/4427,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/4427#issuecomment-844149527,"Adds a new IPC message for requesting the configuration in JSON, as discussed in #4293.
I wanted to generate the JSON somewhat automatically, but didn't find any acceptable way of doing it - if we generated the JSON at the same time we parsed the config file, the result wouldn't be very structured and would have duplicit values if some directives were set and then overridden.
TODO:

 parts of the configuration:

 keybindings
 workspaces
 bar


 tests
 documentation","Thanks!
Let me take a look first before putting more time into this.",True,{}
i3/i3,https://github.com/i3/i3,4427,2021-05-19T11:40:49Z,,2021-05-24T17:42:12Z,OPEN,False,575,91,7,https://github.com/j-jzk,Add a new IPC message for requesting structured configuration,2,[],https://github.com/i3/i3/pull/4427,https://github.com/j-jzk,3,https://github.com/i3/i3/pull/4427#issuecomment-847218864,"Adds a new IPC message for requesting the configuration in JSON, as discussed in #4293.
I wanted to generate the JSON somewhat automatically, but didn't find any acceptable way of doing it - if we generated the JSON at the same time we parsed the config file, the result wouldn't be very structured and would have duplicit values if some directives were set and then overridden.
TODO:

 parts of the configuration:

 keybindings
 workspaces
 bar


 tests
 documentation",@orestisfl What's up? :),True,{}
i3/i3,https://github.com/i3/i3,4428,2021-05-23T09:43:11Z,2021-05-23T13:44:28Z,2021-05-23T13:44:32Z,MERGED,True,90,59,3,https://github.com/stapelberg,switch from Travis to GitHub actions for continuous integration (CI),1,[],https://github.com/i3/i3/pull/4428,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4428,"See https://github.com/stapelberg/i3/runs/2649397660 for an example run where all secret tokens have been provided (but are invalid, i.e. authentication fails). This run exercises all code paths (pull all docker containers, try all pushes).
related to #4095","See https://github.com/stapelberg/i3/runs/2649397660 for an example run where all secret tokens have been provided (but are invalid, i.e. authentication fails). This run exercises all code paths (pull all docker containers, try all pushes).
related to #4095",True,{}
i3/i3,https://github.com/i3/i3,4430,2021-05-23T14:07:14Z,2021-05-23T14:35:38Z,2021-05-23T15:01:49Z,MERGED,True,1,1,1,https://github.com/stapelberg,README: update build status badge for GitHub Actions,1,[],https://github.com/i3/i3/pull/4430,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4430,,,True,{}
i3/i3,https://github.com/i3/i3,4433,2021-05-31T06:38:57Z,2021-06-02T10:17:13Z,2021-06-02T10:17:13Z,CLOSED,False,0,0,0,https://github.com/psychon,Check if cairo can work with the X11 server,0,[],https://github.com/i3/i3/pull/4433,https://github.com/psychon,1,https://github.com/i3/i3/pull/4433,"This commits adds code to create a cairo surface for the root window
during startup. If this check fails, i3 fails with an error message,
because it is very likely that all rendering will fail later on.
I only say ""very likely"", because for later drawing a visual is selected
by get_visualtype_by_id(get_visualid_by_depth(win_depth)), i.e.
depending on the depth of actual windows. This can still end up picking
a visual that cairo cannot work with. However, if cairo cannot even work
with the root window's visual, it is very likely that everything else
will also fail. Thus, this check should at least help somewhat.
Signed-off-by: Uli Schlachter psychon@znc.in

This is a patch that I came up with while figuring out what went wrong in #4379. I fully expect this new check to make CI fail, because of the 256-colors-X11-server that is used in CI. I do not really know what to do about this, so this is kind of a bug report.(oh, hey, this means I accidentally bypassed @i3bot. That was not my intention.) Anyway, I still believe this to be more or less a good idea, but this new check also should not really ever fail. Hm, so this fixes a bug that no one ever runs into...?
Edit: In case anyone wonders, locally the test suite fails with the following error message, which is no completely helpful, but that's cairo's fault:
ERROR: Cairo does not support this X11 setup!
ERROR: Trying to draw to the root window resulted in error 16: invalid value for an input cairo_format_t.","This commits adds code to create a cairo surface for the root window
during startup. If this check fails, i3 fails with an error message,
because it is very likely that all rendering will fail later on.
I only say ""very likely"", because for later drawing a visual is selected
by get_visualtype_by_id(get_visualid_by_depth(win_depth)), i.e.
depending on the depth of actual windows. This can still end up picking
a visual that cairo cannot work with. However, if cairo cannot even work
with the root window's visual, it is very likely that everything else
will also fail. Thus, this check should at least help somewhat.
Signed-off-by: Uli Schlachter psychon@znc.in

This is a patch that I came up with while figuring out what went wrong in #4379. I fully expect this new check to make CI fail, because of the 256-colors-X11-server that is used in CI. I do not really know what to do about this, so this is kind of a bug report.(oh, hey, this means I accidentally bypassed @i3bot. That was not my intention.) Anyway, I still believe this to be more or less a good idea, but this new check also should not really ever fail. Hm, so this fixes a bug that no one ever runs into...?
Edit: In case anyone wonders, locally the test suite fails with the following error message, which is no completely helpful, but that's cairo's fault:
ERROR: Cairo does not support this X11 setup!
ERROR: Trying to draw to the root window resulted in error 16: invalid value for an input cairo_format_t.",True,{}
i3/i3,https://github.com/i3/i3,4433,2021-05-31T06:38:57Z,2021-06-02T10:17:13Z,2021-06-02T10:17:13Z,CLOSED,False,0,0,0,https://github.com/psychon,Check if cairo can work with the X11 server,0,[],https://github.com/i3/i3/pull/4433,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/4433#issuecomment-852232422,"This commits adds code to create a cairo surface for the root window
during startup. If this check fails, i3 fails with an error message,
because it is very likely that all rendering will fail later on.
I only say ""very likely"", because for later drawing a visual is selected
by get_visualtype_by_id(get_visualid_by_depth(win_depth)), i.e.
depending on the depth of actual windows. This can still end up picking
a visual that cairo cannot work with. However, if cairo cannot even work
with the root window's visual, it is very likely that everything else
will also fail. Thus, this check should at least help somewhat.
Signed-off-by: Uli Schlachter psychon@znc.in

This is a patch that I came up with while figuring out what went wrong in #4379. I fully expect this new check to make CI fail, because of the 256-colors-X11-server that is used in CI. I do not really know what to do about this, so this is kind of a bug report.(oh, hey, this means I accidentally bypassed @i3bot. That was not my intention.) Anyway, I still believe this to be more or less a good idea, but this new check also should not really ever fail. Hm, so this fixes a bug that no one ever runs into...?
Edit: In case anyone wonders, locally the test suite fails with the following error message, which is no completely helpful, but that's cairo's fault:
ERROR: Cairo does not support this X11 setup!
ERROR: Trying to draw to the root window resulted in error 16: invalid value for an input cairo_format_t.","Erroring out early and clearly rather than later is a good idea in general :)
Can you change the testsuite to keep working in this same pull request please?
Also, can you check if the various VNC servers still work with this change? Those are generally the weirdest X11 servers that people tend to use in practice.",True,{}
i3/i3,https://github.com/i3/i3,4433,2021-05-31T06:38:57Z,2021-06-02T10:17:13Z,2021-06-02T10:17:13Z,CLOSED,False,0,0,0,https://github.com/psychon,Check if cairo can work with the X11 server,0,[],https://github.com/i3/i3/pull/4433,https://github.com/psychon,3,https://github.com/i3/i3/pull/4433#issuecomment-852850088,"This commits adds code to create a cairo surface for the root window
during startup. If this check fails, i3 fails with an error message,
because it is very likely that all rendering will fail later on.
I only say ""very likely"", because for later drawing a visual is selected
by get_visualtype_by_id(get_visualid_by_depth(win_depth)), i.e.
depending on the depth of actual windows. This can still end up picking
a visual that cairo cannot work with. However, if cairo cannot even work
with the root window's visual, it is very likely that everything else
will also fail. Thus, this check should at least help somewhat.
Signed-off-by: Uli Schlachter psychon@znc.in

This is a patch that I came up with while figuring out what went wrong in #4379. I fully expect this new check to make CI fail, because of the 256-colors-X11-server that is used in CI. I do not really know what to do about this, so this is kind of a bug report.(oh, hey, this means I accidentally bypassed @i3bot. That was not my intention.) Anyway, I still believe this to be more or less a good idea, but this new check also should not really ever fail. Hm, so this fixes a bug that no one ever runs into...?
Edit: In case anyone wonders, locally the test suite fails with the following error message, which is no completely helpful, but that's cairo's fault:
ERROR: Cairo does not support this X11 setup!
ERROR: Trying to draw to the root window resulted in error 16: invalid value for an input cairo_format_t.","Can you change the testsuite to keep working in this same pull request please?

Done, but GitHub seems to be having problems. I needed four attempts before the git push was accepted and it is not showing up on the web page.

Also, can you check if the various VNC servers still work with this change?

Do you have a specific list in mind? I found gnome-remote-desktop, but that seems to be gnome-specific. x11vnc uses an already existing X session and ""just"" exports that over VNC.
tightvncserver seems to be the only ""interesting"" one I found (version 1:1.3.10-3). I just ran tightvncserver :1 and got a weird X11 server. Excerpt from xdpyinfo (only one visual??):
vendor string:    AT&T Laboratories Cambridge
[...]
screen #0:
  dimensions:    1024x768 pixels (347x260 millimeters)
  resolution:    75x75 dots per inch
  depths (1):    24
  root window id:    0x25
  depth of root window:    24 planes
[...]
  number of visuals:    1
  default visual id:  0x22
  visual:
    visual id:    0x22
    class:    TrueColor
    depth:    24 planes
    available colormap entries:    256 per subfield
    red, green, blue masks:    0xff0000, 0xff00, 0xff
    significant bits in color specification:    8 bits

Anyway, running i3 against this server results in:
02.06.2021 10:36:08 - ERROR: Another window manager seems to be running (X error 10)

Since this check is after the ""cairo check"", I guess that means that cairo has no problems with this X11 server.",True,{}
i3/i3,https://github.com/i3/i3,4434,2021-06-02T10:19:30Z,,2021-09-10T07:04:13Z,OPEN,False,14,1,2,https://github.com/psychon,Check cairo supports x11 server,2,[],https://github.com/i3/i3/pull/4434,https://github.com/psychon,1,https://github.com/i3/i3/pull/4434,"This is a new version of #4433. Sorry for accidentally closing that PR. Since GitHub did not see the newest commits, I wanted to force-push something else and then push the current state of the branch again. Turns out that pushing next automatically closed the PR with no way to opening again (or at least I am not seeing the way).","This is a new version of #4433. Sorry for accidentally closing that PR. Since GitHub did not see the newest commits, I wanted to force-push something else and then push the current state of the branch again. Turns out that pushing next automatically closed the PR with no way to opening again (or at least I am not seeing the way).",True,{}
i3/i3,https://github.com/i3/i3,4434,2021-06-02T10:19:30Z,,2021-09-10T07:04:13Z,OPEN,False,14,1,2,https://github.com/psychon,Check cairo supports x11 server,2,[],https://github.com/i3/i3/pull/4434,https://github.com/psychon,2,https://github.com/i3/i3/pull/4434#issuecomment-852911364,"This is a new version of #4433. Sorry for accidentally closing that PR. Since GitHub did not see the newest commits, I wanted to force-push something else and then push the current state of the branch again. Turns out that pushing next automatically closed the PR with no way to opening again (or at least I am not seeing the way).","#   Failed test 'Received 1 workspace::init event'
#   at /usr/src/i3/distbuild/meson-private/dist-unpack/i3-4.19.2/testcases/t/533-randr15.t line 141.
#          got: '0'
#     expected: '1'

#   Failed test 'Workspace initialized in up2414q'
#   at /usr/src/i3/distbuild/meson-private/dist-unpack/i3-4.19.2/testcases/t/533-randr15.t line 142.
#          got: undef
#     expected: 'up2414q'

Uhm... since this test failure only occurred with gcc and not with clang, I am going to assume that this is just a flaky test and not caused by this PR.",True,{}
i3/i3,https://github.com/i3/i3,4436,2021-06-02T13:21:09Z,2021-09-16T17:07:08Z,2021-09-17T12:55:26Z,MERGED,True,14,0,1,https://github.com/psychon,Check cairo status in draw_util_surface_free(),2,[],https://github.com/i3/i3/pull/4436,https://github.com/psychon,1,https://github.com/i3/i3/pull/4436,"Since my #4379 is not going to work, I thought that one could at least improve the logging a bit, hopefully making debugging easier in the future.
While looking at this code, I found a minor memory leak that I am also fixing in this PR.","Since my #4379 is not going to work, I thought that one could at least improve the logging a bit, hopefully making debugging easier in the future.
While looking at this code, I found a minor memory leak that I am also fixing in this PR.",True,{}
i3/i3,https://github.com/i3/i3,4436,2021-06-02T13:21:09Z,2021-09-16T17:07:08Z,2021-09-17T12:55:26Z,MERGED,True,14,0,1,https://github.com/psychon,Check cairo status in draw_util_surface_free(),2,[],https://github.com/i3/i3/pull/4436,https://github.com/psychon,2,https://github.com/i3/i3/pull/4436#issuecomment-853055947,"Since my #4379 is not going to work, I thought that one could at least improve the logging a bit, hopefully making debugging easier in the future.
While looking at this code, I found a minor memory leak that I am also fixing in this PR.","Sigh, and something in the tests hangs again... I'll investigate.",True,{}
i3/i3,https://github.com/i3/i3,4436,2021-06-02T13:21:09Z,2021-09-16T17:07:08Z,2021-09-17T12:55:26Z,MERGED,True,14,0,1,https://github.com/psychon,Check cairo status in draw_util_surface_free(),2,[],https://github.com/i3/i3/pull/4436,https://github.com/psychon,3,https://github.com/i3/i3/pull/4436#issuecomment-920163870,"Since my #4379 is not going to work, I thought that one could at least improve the logging a bit, hopefully making debugging easier in the future.
While looking at this code, I found a minor memory leak that I am also fixing in this PR.","Was the hang caused by the segfault situation you mention in the commit?

Uhm. My guess would be ""yes"", but it has been a quarter year, so I don't remember for sure. At least I vaguely remember being annoyed that I had some problem with crashes and the test suite and that it was quite hard to get gdb in the game. But I don't remember any details.

In that case I'd squash the faulty commit

Done. This PR now only has two commits.",True,{}
i3/i3,https://github.com/i3/i3,4439,2021-06-03T08:01:56Z,2021-06-13T06:35:52Z,2021-06-13T06:35:56Z,MERGED,True,392,27,23,https://github.com/stapelberg,Implement showing window icons in titlebar,1,[],https://github.com/i3/i3/pull/4439,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4439,"This feature defaults to off, and can be turned on for individual windows,
or (with for_window) for all new windows. See the userguide change.
This commit is partially based on work by:
• Marius Muja
• mickael9
• Esteve Varela Colominas
• Bernardo Menicagli
fixes #905","This feature defaults to off, and can be turned on for individual windows,
or (with for_window) for all new windows. See the userguide change.
This commit is partially based on work by:
• Marius Muja
• mickael9
• Esteve Varela Colominas
• Bernardo Menicagli
fixes #905",True,"{'HEART': ['https://github.com/LordMZTE', 'https://github.com/laur89', 'https://github.com/yyy33', 'https://github.com/PJK136', 'https://github.com/molok', 'https://github.com/browser-bug']}"
i3/i3,https://github.com/i3/i3,4439,2021-06-03T08:01:56Z,2021-06-13T06:35:52Z,2021-06-13T06:35:56Z,MERGED,True,392,27,23,https://github.com/stapelberg,Implement showing window icons in titlebar,1,[],https://github.com/i3/i3/pull/4439,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/4439#issuecomment-853735925,"This feature defaults to off, and can be turned on for individual windows,
or (with for_window) for all new windows. See the userguide change.
This commit is partially based on work by:
• Marius Muja
• mickael9
• Esteve Varela Colominas
• Bernardo Menicagli
fixes #905","As a top level comment, I would like to make sure that we explicitly touch on the fact that this is a net-positive feature for most users that is going to be hidden behind a per-window command. The alternatives are:

Don't make this configurable, globally on
Make this opt-out globally with a config directive
Make this opt-in globally with a config directive
Make this opt-out per window with a command
Make this opt-in per window with a command

This PR implements #5. @stapelberg, @Airblader is this your favorite option?
I am fine with all options.",True,{}
i3/i3,https://github.com/i3/i3,4439,2021-06-03T08:01:56Z,2021-06-13T06:35:52Z,2021-06-13T06:35:56Z,MERGED,True,392,27,23,https://github.com/stapelberg,Implement showing window icons in titlebar,1,[],https://github.com/i3/i3/pull/4439,https://github.com/Airblader,3,https://github.com/i3/i3/pull/4439#issuecomment-853741405,"This feature defaults to off, and can be turned on for individual windows,
or (with for_window) for all new windows. See the userguide change.
This commit is partially based on work by:
• Marius Muja
• mickael9
• Esteve Varela Colominas
• Bernardo Menicagli
fixes #905","I'd disqualify (2) and (4) immediately because this is a pretty significant change to look&feel and we've always tried to avoid noticable changes unless a user opts in. This obviously also rules out (1).
Experience has taught me that (3) almost never works out, and sooner or later people want per-window options. This also enables users to roll more complex scenarios themselves, like doing it for the focused window, certain workspaces, etc.
There are more alternatives, such as combining a global directive with per-window overrides, which is kind of what we'd ""traditionally"" do. But really that creates more overhead than it is worth.
In summary, I think the solution chosen here is fine. I do think that we should consider adding a quality of life all match criterion, though. Using an always-matching regex isn't very user friendly and I've come across users many times who didn't know how to do it. It's a good thing we documented that case explicitly here, but I still believe it feels unnecessarily complex (it's totally a separate issue though).",True,"{'THUMBS_UP': ['https://github.com/orestisfl', 'https://github.com/stapelberg', 'https://github.com/browser-bug', 'https://github.com/Gilnaa']}"
i3/i3,https://github.com/i3/i3,4439,2021-06-03T08:01:56Z,2021-06-13T06:35:52Z,2021-06-13T06:35:56Z,MERGED,True,392,27,23,https://github.com/stapelberg,Implement showing window icons in titlebar,1,[],https://github.com/i3/i3/pull/4439,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/4439#issuecomment-853750327,"This feature defaults to off, and can be turned on for individual windows,
or (with for_window) for all new windows. See the userguide change.
This commit is partially based on work by:
• Marius Muja
• mickael9
• Esteve Varela Colominas
• Bernardo Menicagli
fixes #905","Yeah now that I am using it, it does feel disruptive to the usual look & feel of i3.",True,{}
i3/i3,https://github.com/i3/i3,4439,2021-06-03T08:01:56Z,2021-06-13T06:35:52Z,2021-06-13T06:35:56Z,MERGED,True,392,27,23,https://github.com/stapelberg,Implement showing window icons in titlebar,1,[],https://github.com/i3/i3/pull/4439,https://github.com/stapelberg,5,https://github.com/i3/i3/pull/4439#issuecomment-854093655,"This feature defaults to off, and can be turned on for individual windows,
or (with for_window) for all new windows. See the userguide change.
This commit is partially based on work by:
• Marius Muja
• mickael9
• Esteve Varela Colominas
• Bernardo Menicagli
fixes #905","Thanks everyone for the thoughtful and nuanced discussion and code review! :)
I think the for_window + command approach is a proven pattern that should cover all use-cases with minimal changes, as you also concluded.
Will update this PR soon",True,{}
i3/i3,https://github.com/i3/i3,4439,2021-06-03T08:01:56Z,2021-06-13T06:35:52Z,2021-06-13T06:35:56Z,MERGED,True,392,27,23,https://github.com/stapelberg,Implement showing window icons in titlebar,1,[],https://github.com/i3/i3/pull/4439,https://github.com/stapelberg,6,https://github.com/i3/i3/pull/4439#issuecomment-855278888,"This feature defaults to off, and can be turned on for individual windows,
or (with for_window) for all new windows. See the userguide change.
This commit is partially based on work by:
• Marius Muja
• mickael9
• Esteve Varela Colominas
• Bernardo Menicagli
fixes #905","All done, CI now passing, too!
Please take another look",True,{}
i3/i3,https://github.com/i3/i3,4439,2021-06-03T08:01:56Z,2021-06-13T06:35:52Z,2021-06-13T06:35:56Z,MERGED,True,392,27,23,https://github.com/stapelberg,Implement showing window icons in titlebar,1,[],https://github.com/i3/i3/pull/4439,https://github.com/stapelberg,7,https://github.com/i3/i3/pull/4439#issuecomment-860108209,"This feature defaults to off, and can be turned on for individual windows,
or (with for_window) for all new windows. See the userguide change.
This commit is partially based on work by:
• Marius Muja
• mickael9
• Esteve Varela Colominas
• Bernardo Menicagli
fixes #905",Is this good to go? We need 1 approving review please :),True,{}
i3/i3,https://github.com/i3/i3,4448,2021-06-17T20:26:03Z,,2021-10-09T22:21:15Z,OPEN,False,39,1,4,https://github.com/izzel,Made state consistent with window in remanage_window,3,[],https://github.com/i3/i3/pull/4448,https://github.com/izzel,1,https://github.com/i3/i3/pull/4448,"Fixes #4075.
i3 believes everything is fine because the con_state window_rect says it is the right size. This commit updates window_rect to the actual state as well as child_mapped.
Does this need a test? I have no idea how to make a test for a bug like this.","Fixes #4075.
i3 believes everything is fine because the con_state window_rect says it is the right size. This commit updates window_rect to the actual state as well as child_mapped.
Does this need a test? I have no idea how to make a test for a bug like this.",True,{}
i3/i3,https://github.com/i3/i3,4451,2021-06-28T08:41:34Z,,2021-09-20T19:21:43Z,OPEN,False,78,14,3,https://github.com/jolmg,"When moving to next or prev workspace, don't skip colliding number",5,[],https://github.com/i3/i3/pull/4451,https://github.com/jolmg,1,https://github.com/i3/i3/pull/4451,"This fixes an issue where, having workspaces: 1, 2:foo, 2:bar, and 3,
moving from 2:foo to next moves us to workspace 3, and moving from 2:bar
to prev moves us to workspace 1.
With this change, moving from 2:foo to next would move us to 2:bar, and
from 2:bar to prev would move us to 2:foo.
Closes #4452","This fixes an issue where, having workspaces: 1, 2:foo, 2:bar, and 3,
moving from 2:foo to next moves us to workspace 3, and moving from 2:bar
to prev moves us to workspace 1.
With this change, moving from 2:foo to next would move us to 2:bar, and
from 2:bar to prev would move us to 2:foo.
Closes #4452",True,{}
i3/i3,https://github.com/i3/i3,4451,2021-06-28T08:41:34Z,,2021-09-20T19:21:43Z,OPEN,False,78,14,3,https://github.com/jolmg,"When moving to next or prev workspace, don't skip colliding number",5,[],https://github.com/i3/i3/pull/4451,https://github.com/jolmg,2,https://github.com/i3/i3/pull/4451#issuecomment-869527721,"This fixes an issue where, having workspaces: 1, 2:foo, 2:bar, and 3,
moving from 2:foo to next moves us to workspace 3, and moving from 2:bar
to prev moves us to workspace 1.
With this change, moving from 2:foo to next would move us to 2:bar, and
from 2:bar to prev would move us to 2:foo.
Closes #4452",Closes #4452,True,{}
i3/i3,https://github.com/i3/i3,4451,2021-06-28T08:41:34Z,,2021-09-20T19:21:43Z,OPEN,False,78,14,3,https://github.com/jolmg,"When moving to next or prev workspace, don't skip colliding number",5,[],https://github.com/i3/i3/pull/4451,https://github.com/jolmg,3,https://github.com/i3/i3/pull/4451#issuecomment-869779207,"This fixes an issue where, having workspaces: 1, 2:foo, 2:bar, and 3,
moving from 2:foo to next moves us to workspace 3, and moving from 2:bar
to prev moves us to workspace 1.
With this change, moving from 2:foo to next would move us to 2:bar, and
from 2:bar to prev would move us to 2:foo.
Closes #4452","I just noticed that besides workspace_{next,prev}(), there are also workspace_{next,prev}_on_output(). Those would also need the same change.",True,{'THUMBS_UP': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,4451,2021-06-28T08:41:34Z,,2021-09-20T19:21:43Z,OPEN,False,78,14,3,https://github.com/jolmg,"When moving to next or prev workspace, don't skip colliding number",5,[],https://github.com/i3/i3/pull/4451,https://github.com/jolmg,4,https://github.com/i3/i3/pull/4451#issuecomment-870395974,"This fixes an issue where, having workspaces: 1, 2:foo, 2:bar, and 3,
moving from 2:foo to next moves us to workspace 3, and moving from 2:bar
to prev moves us to workspace 1.
With this change, moving from 2:foo to next would move us to 2:bar, and
from 2:bar to prev would move us to 2:foo.
Closes #4452","Change has been extended to {next,prev}_on_output.",True,{}
i3/i3,https://github.com/i3/i3,4451,2021-06-28T08:41:34Z,,2021-09-20T19:21:43Z,OPEN,False,78,14,3,https://github.com/jolmg,"When moving to next or prev workspace, don't skip colliding number",5,[],https://github.com/i3/i3/pull/4451,https://github.com/orestisfl,5,https://github.com/i3/i3/pull/4451#issuecomment-922411742,"This fixes an issue where, having workspaces: 1, 2:foo, 2:bar, and 3,
moving from 2:foo to next moves us to workspace 3, and moving from 2:bar
to prev moves us to workspace 1.
With this change, moving from 2:foo to next would move us to 2:bar, and
from 2:bar to prev would move us to 2:foo.
Closes #4452","Also, the release notes need to be updated: https://github.com/i3/i3/blob/next/RELEASE-NOTES-next",True,{}
i3/i3,https://github.com/i3/i3,4451,2021-06-28T08:41:34Z,,2021-09-20T19:21:43Z,OPEN,False,78,14,3,https://github.com/jolmg,"When moving to next or prev workspace, don't skip colliding number",5,[],https://github.com/i3/i3/pull/4451,https://github.com/jolmg,6,https://github.com/i3/i3/pull/4451#issuecomment-923204386,"This fixes an issue where, having workspaces: 1, 2:foo, 2:bar, and 3,
moving from 2:foo to next moves us to workspace 3, and moving from 2:bar
to prev moves us to workspace 1.
With this change, moving from 2:foo to next would move us to 2:bar, and
from 2:bar to prev would move us to 2:foo.
Closes #4452",I've updated the release notes.,True,{}
i3/i3,https://github.com/i3/i3,4453,2021-06-30T12:23:11Z,2021-07-27T06:12:46Z,2021-07-27T06:12:46Z,CLOSED,False,193,33,12,https://github.com/iscgar,Implement window icon positioning configuration,1,[],https://github.com/i3/i3/pull/4453,https://github.com/iscgar,1,https://github.com/i3/i3/pull/4453,"Enhance the work that landed in #4439 by allowing customisation of the icon position.
This feature defaults to following the title alignment, and can be tuned for individual windows to be on the left (which is the behaviour prior to this commit) or on the right.","Enhance the work that landed in #4439 by allowing customisation of the icon position.
This feature defaults to following the title alignment, and can be tuned for individual windows to be on the left (which is the behaviour prior to this commit) or on the right.",True,{'HEART': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,4453,2021-06-30T12:23:11Z,2021-07-27T06:12:46Z,2021-07-27T06:12:46Z,CLOSED,False,193,33,12,https://github.com/iscgar,Implement window icon positioning configuration,1,[],https://github.com/i3/i3/pull/4453,https://github.com/omertuc,2,https://github.com/i3/i3/pull/4453#issuecomment-871375039,"Enhance the work that landed in #4439 by allowing customisation of the icon position.
This feature defaults to following the title alignment, and can be tuned for individual windows to be on the left (which is the behaviour prior to this commit) or on the right.","Some background for this PR -
#4439 was based on a patch that was posted to AUR.
When using the title_align center i3 configuration, the original behavior of the patch #4439 was based on looked like this in stacked layout:

But a recent revision of the patch ""broke"" the original behavior and started doing this:

Looks like #4439 copied the broken behavior from the latest revision of the patch, when porting it to the official i3 repo.
This PR (#4453) makes it configurable so the user can choose either behavior using configurations such as:
title_align center
for_window [class="".*""] title_window_icon yes
for_window [class="".*""] title_window_icon position title


title_align center
for_window [class="".*""] title_window_icon yes
for_window [class="".*""] title_window_icon position left


title_align left
for_window [class="".*""] title_window_icon yes
for_window [class="".*""] title_window_icon position left


title_align left
for_window [class="".*""] title_window_icon yes
for_window [class="".*""] title_window_icon position right",True,{'HEART': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,4453,2021-06-30T12:23:11Z,2021-07-27T06:12:46Z,2021-07-27T06:12:46Z,CLOSED,False,193,33,12,https://github.com/iscgar,Implement window icon positioning configuration,1,[],https://github.com/i3/i3/pull/4453,https://github.com/Airblader,3,https://github.com/i3/i3/pull/4453#issuecomment-886103113,"Enhance the work that landed in #4439 by allowing customisation of the icon position.
This feature defaults to following the title alignment, and can be tuned for individual windows to be on the left (which is the behaviour prior to this commit) or on the right.","Thanks for the PR! I'm not yet convinced that this change is useful enough to warrant more configuration, but let's keep it here and revisit it in a while if we get more feedback.",True,{}
i3/i3,https://github.com/i3/i3,4453,2021-06-30T12:23:11Z,2021-07-27T06:12:46Z,2021-07-27T06:12:46Z,CLOSED,False,193,33,12,https://github.com/iscgar,Implement window icon positioning configuration,1,[],https://github.com/i3/i3/pull/4453,https://github.com/omertuc,4,https://github.com/i3/i3/pull/4453#issuecomment-886104649,"Enhance the work that landed in #4439 by allowing customisation of the icon position.
This feature defaults to following the title alignment, and can be tuned for individual windows to be on the left (which is the behaviour prior to this commit) or on the right.","Thanks for the PR! I'm not yet convinced that this change is useful enough to warrant more configuration, but let's keep it here and revisit it in a while if we get more feedback.

Since for_window [class="".*""] title_window_icon position title was the original behavior of the patch that #4439 tried to introduce into this repo, and for_window [class="".*""] title_window_icon position left is actually buggy behavior that just happened to be in the latest revision of that patch (this buggy behavior was accidentally adopted by #4439), do you at-least agree we should fix the icons to behave like for_window [class="".*""] title_window_icon position title, even if it's not configurable?
It's a ""breaking"" change, but since icons are so new, I don't think too many people would mind this change in behavior.
I think for_window [class="".*""] title_window_icon position title is more ""correct"" - since the main purpose of icons, as I see it, is to be able to easily tell apart windows with a glimpse. When using centered text, and stacked mode, on a big screen, the icons drift all the way to the left, far away from the titles, making it hard to look at both the titles and the icons at the same time, thus making it harder to tell apart windows with the same icon (multiple chrome windows, for example)",True,{}
i3/i3,https://github.com/i3/i3,4453,2021-06-30T12:23:11Z,2021-07-27T06:12:46Z,2021-07-27T06:12:46Z,CLOSED,False,193,33,12,https://github.com/iscgar,Implement window icon positioning configuration,1,[],https://github.com/i3/i3/pull/4453,https://github.com/Airblader,5,https://github.com/i3/i3/pull/4453#issuecomment-886142954,"Enhance the work that landed in #4439 by allowing customisation of the icon position.
This feature defaults to following the title alignment, and can be tuned for individual windows to be on the left (which is the behaviour prior to this commit) or on the right.","Yeah, that makes sense to me and sounds reasonable. Icons haven't yet been released anyway.",True,{'THUMBS_UP': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,4453,2021-06-30T12:23:11Z,2021-07-27T06:12:46Z,2021-07-27T06:12:46Z,CLOSED,False,193,33,12,https://github.com/iscgar,Implement window icon positioning configuration,1,[],https://github.com/i3/i3/pull/4453,https://github.com/orestisfl,6,https://github.com/i3/i3/pull/4453#issuecomment-887239844,"Enhance the work that landed in #4439 by allowing customisation of the icon position.
This feature defaults to following the title alignment, and can be tuned for individual windows to be on the left (which is the behaviour prior to this commit) or on the right.",Thanks for bringing this to our attention. My understanding is that we should close this PR now and fix the buggy behavior before the next release. I opened #4464 for this purpose.,True,{}
i3/i3,https://github.com/i3/i3,4454,2021-07-05T08:18:54Z,2021-08-30T13:26:59Z,2021-08-30T13:26:59Z,MERGED,True,5,3,2,https://github.com/vincentbernat,main: signal readiness by notifying systemd,1,[],https://github.com/i3/i3/pull/4454,https://github.com/vincentbernat,1,https://github.com/i3/i3/pull/4454,"This is useful if we want to be able to start some services depending
on i3, notably some script using the socket or third-party bars like
polybar. To make use of this change, user is expected to use the
following stanza:
[Unit]
Description=i3 window manager
PartOf=graphical-session.target

[Service]
Type=notify
ExecStart=/usr/bin/i3
ExecStopPost=/bin/systemctl --user stop graphical-session.target
Restart=on-failure

Something similar is already possible using socket activation. For
example, we could use:
[Unit]
Description=i3 window manager socket
PartOf=graphical-session.target

[Socket]
ListenStream=%t/i3.sock
ExecStartPost=/bin/systemctl --user set-environment I3SOCK=%t/i3.sock

And other units could Requires=i3.socket. Unfortunately, not
everything is using I3SOCK. Notably, i3 --get-socketpath does not
and that's what i3ipcpp is doing. An alternative would be to patch i3 --get-socketpath to use I3SOCK if present, however, this may be a bit
risky. Should we check the environment variable first or the root
attribute?
Another alternative not requiring any modification is to have a
dedicated i3-session.target:
[Unit]
Description=i3 session
BindsTo=graphical-session.target
Wants=wallpaper.service
Wants=wallpaper.timer
Wants=polybar.service
Wants=i3-companion.service

And trigger it from i3:
exec_always --no-startup-id systemctl --user start --no-block i3-session.target

The proposed change being quite small, it seems harmless and
low-maintenance.
Signed-off-by: Vincent Bernat vincent@bernat.ch","This is useful if we want to be able to start some services depending
on i3, notably some script using the socket or third-party bars like
polybar. To make use of this change, user is expected to use the
following stanza:
[Unit]
Description=i3 window manager
PartOf=graphical-session.target

[Service]
Type=notify
ExecStart=/usr/bin/i3
ExecStopPost=/bin/systemctl --user stop graphical-session.target
Restart=on-failure

Something similar is already possible using socket activation. For
example, we could use:
[Unit]
Description=i3 window manager socket
PartOf=graphical-session.target

[Socket]
ListenStream=%t/i3.sock
ExecStartPost=/bin/systemctl --user set-environment I3SOCK=%t/i3.sock

And other units could Requires=i3.socket. Unfortunately, not
everything is using I3SOCK. Notably, i3 --get-socketpath does not
and that's what i3ipcpp is doing. An alternative would be to patch i3 --get-socketpath to use I3SOCK if present, however, this may be a bit
risky. Should we check the environment variable first or the root
attribute?
Another alternative not requiring any modification is to have a
dedicated i3-session.target:
[Unit]
Description=i3 session
BindsTo=graphical-session.target
Wants=wallpaper.service
Wants=wallpaper.timer
Wants=polybar.service
Wants=i3-companion.service

And trigger it from i3:
exec_always --no-startup-id systemctl --user start --no-block i3-session.target

The proposed change being quite small, it seems harmless and
low-maintenance.
Signed-off-by: Vincent Bernat vincent@bernat.ch",True,{}
i3/i3,https://github.com/i3/i3,4460,2021-07-23T11:27:09Z,2021-07-26T06:05:26Z,2021-07-26T06:05:26Z,MERGED,True,116,3,7,https://github.com/iscgar,Implement 'all' matching criterion,1,[],https://github.com/i3/i3/pull/4460,https://github.com/iscgar,1,https://github.com/i3/i3/pull/4460,"This criterion matches all open windows, as a more readable version of for the class="".*"" criterion. However, if both all and class are specified, class takes over (regardless of the order in which they are specified) in order to avoid confusion, since the class criterion is likely more restrictive.
Fixes #4440","This criterion matches all open windows, as a more readable version of for the class="".*"" criterion. However, if both all and class are specified, class takes over (regardless of the order in which they are specified) in order to avoid confusion, since the class criterion is likely more restrictive.
Fixes #4440",True,{}
i3/i3,https://github.com/i3/i3,4460,2021-07-23T11:27:09Z,2021-07-26T06:05:26Z,2021-07-26T06:05:26Z,MERGED,True,116,3,7,https://github.com/iscgar,Implement 'all' matching criterion,1,[],https://github.com/i3/i3/pull/4460,https://github.com/iscgar,2,https://github.com/i3/i3/pull/4460#issuecomment-886102778,"This criterion matches all open windows, as a more readable version of for the class="".*"" criterion. However, if both all and class are specified, class takes over (regardless of the order in which they are specified) in order to avoid confusion, since the class criterion is likely more restrictive.
Fixes #4440",I made the required changes (and reworded the commit message to not mention the relationship between all and class that was true of the previous iteration). I also added a test and a line to RELEASE-NOTES-next.,True,{}
i3/i3,https://github.com/i3/i3,4466,2021-07-30T20:41:43Z,2021-07-30T20:48:40Z,2021-07-30T20:48:43Z,MERGED,True,5,1,2,https://github.com/stapelberg,ipc: document scratchpad_state,1,[],https://github.com/i3/i3/pull/4466,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4466,fixes #4465,fixes #4465,True,{}
i3/i3,https://github.com/i3/i3,4469,2021-08-01T16:13:13Z,2021-09-10T06:09:32Z,2021-09-10T06:09:32Z,MERGED,True,4,1,2,https://github.com/vincentbernat,"handlers.c: send an ""output"" event on monitor configuration change",2,[],https://github.com/i3/i3/pull/4469,https://github.com/vincentbernat,1,https://github.com/i3/i3/pull/4469,"When adding/removing a monitor, the outputs are likely to be modified.
Send an IPC event ""output"", like when there is a screen configuration
change.
Signed-off-by: Vincent Bernat vincent@bernat.ch","When adding/removing a monitor, the outputs are likely to be modified.
Send an IPC event ""output"", like when there is a screen configuration
change.
Signed-off-by: Vincent Bernat vincent@bernat.ch",True,{}
i3/i3,https://github.com/i3/i3,4469,2021-08-01T16:13:13Z,2021-09-10T06:09:32Z,2021-09-10T06:09:32Z,MERGED,True,4,1,2,https://github.com/vincentbernat,"handlers.c: send an ""output"" event on monitor configuration change",2,[],https://github.com/i3/i3/pull/4469,https://github.com/Airblader,2,https://github.com/i3/i3/pull/4469#issuecomment-916638627,"When adding/removing a monitor, the outputs are likely to be modified.
Send an IPC event ""output"", like when there is a screen configuration
change.
Signed-off-by: Vincent Bernat vincent@bernat.ch","Fine with me, however we need to add this to the release notes, too. @vincentbernat Can you add an entry in RELEASE-NOTES-next for this?",True,{}
i3/i3,https://github.com/i3/i3,4469,2021-08-01T16:13:13Z,2021-09-10T06:09:32Z,2021-09-10T06:09:32Z,MERGED,True,4,1,2,https://github.com/vincentbernat,"handlers.c: send an ""output"" event on monitor configuration change",2,[],https://github.com/i3/i3/pull/4469,https://github.com/vincentbernat,3,https://github.com/i3/i3/pull/4469#issuecomment-916647053,"When adding/removing a monitor, the outputs are likely to be modified.
Send an IPC event ""output"", like when there is a screen configuration
change.
Signed-off-by: Vincent Bernat vincent@bernat.ch","OK, added!",True,{}
i3/i3,https://github.com/i3/i3,4475,2021-08-11T17:09:43Z,,2021-08-12T16:21:40Z,OPEN,False,9,3,1,https://github.com/mahkoh,Use ink rectangle when calculating Pango text width,1,[],https://github.com/i3/i3/pull/4475,https://github.com/mahkoh,1,https://github.com/i3/i3/pull/4475,"Before: 
After:","Before: 
After:",True,{}
i3/i3,https://github.com/i3/i3,4475,2021-08-11T17:09:43Z,,2021-08-12T16:21:40Z,OPEN,False,9,3,1,https://github.com/mahkoh,Use ink rectangle when calculating Pango text width,1,[],https://github.com/i3/i3/pull/4475,https://github.com/psychon,2,https://github.com/i3/i3/pull/4475#issuecomment-897758604,"Before: 
After:","Which of your two changes fixes the problem? Only both of them? Or is e.g. the x + width change already enough?
You add a comment linking to a 20 years old bug report. Are you saying this bug was still not fixed after 20 years or what is that linked supposed to mean?
Also, I briefly looked at the code, but I did not find anything that would explain the clipping. Is the right part of the simply overdrawn by later code, or what? If so, what exactly draws over part of the glyphs? I'm confused about what is going on...",True,{}
i3/i3,https://github.com/i3/i3,4475,2021-08-11T17:09:43Z,,2021-08-12T16:21:40Z,OPEN,False,9,3,1,https://github.com/mahkoh,Use ink rectangle when calculating Pango text width,1,[],https://github.com/i3/i3/pull/4475,https://github.com/mahkoh,3,https://github.com/i3/i3/pull/4475#issuecomment-897774444,"Before: 
After:","Which of your two changes fixes the problem? Only both of them? Or is e.g. the x + width change already enough?

I use the font pango:DejaVu Sans Mono 8. With this font ink_rect.x is always 1 whereas logical_rect.x is always 0. If I remember correctly, logical_rect.width and ink_rect.width are always identical.
The fix therefore requires both changes.

You add a comment linking to a 20 years old bug report. Are you saying this bug was still not fixed after 20 years or what is that linked supposed to mean?

The linked mail is the only source I've found that describes the difference between logical_rect and ink_rect. I do not know if the current behavior of Pango is a bug or not.

Also, I briefly looked at the code, but I did not find anything that would explain the clipping. Is the right part of the simply overdrawn by later code, or what?

No. In 
  
    
      i3/i3bar/src/xcb.c
    
    
        Lines 307 to 310
      in
      d65a7ed
    
  
  
    

        
          
           draw_util_text(text, &output->statusline_buffer, fg_color, bg_color, 
        

        
          
                          x + render->x_offset + has_border * logical_px(block->border_left), 
        

        
          
                          bar_height / 2 - font.height / 2, 
        

        
          
                          render->width - has_border * logical_px(block->border_left + block->border_right)); 
        
    
  

 the width of the surface that we draw to is explicitly set to the expected width of the text (render->width). I tried simply setting this width to the width of the entire statusline_buffer, but then the last piece of text (the time in my screenshot) will still be cut off because its x offset is one pixel too far to the right.",True,{'THUMBS_UP': ['https://github.com/psychon']}
i3/i3,https://github.com/i3/i3,4480,2021-08-20T09:20:27Z,2021-09-09T06:55:56Z,2021-09-09T06:55:56Z,CLOSED,False,824,176,58,https://github.com/zybreak,Include what you use,2,[],https://github.com/i3/i3/pull/4480,https://github.com/zybreak,1,https://github.com/i3/i3/pull/4480,"Simply a code refactorization, instead of importing an ""all.h"" header file in most c-files which contains all project header-files, we now only include those header files needed for the specific c-file in question.
The benefit is a better overview of whats being used and where as well as easier to spot unused header-files","Simply a code refactorization, instead of importing an ""all.h"" header file in most c-files which contains all project header-files, we now only include those header files needed for the specific c-file in question.
The benefit is a better overview of whats being used and where as well as easier to spot unused header-files",True,{'THUMBS_UP': ['https://github.com/budRich']}
i3/i3,https://github.com/i3/i3,4480,2021-08-20T09:20:27Z,2021-09-09T06:55:56Z,2021-09-09T06:55:56Z,CLOSED,False,824,176,58,https://github.com/zybreak,Include what you use,2,[],https://github.com/i3/i3/pull/4480,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/4480#issuecomment-907510503,"Simply a code refactorization, instead of importing an ""all.h"" header file in most c-files which contains all project header-files, we now only include those header files needed for the specific c-file in question.
The benefit is a better overview of whats being used and where as well as easier to spot unused header-files","Thank you for this PR.
Related issue: #4022
I don't think it's worth it to begin practicing ""header discipline"". Unused header files are not a big problems and seeing where each file gets its definitions from doesn't seem that useful right now.
@stapelberg WDYT?",True,{}
i3/i3,https://github.com/i3/i3,4480,2021-08-20T09:20:27Z,2021-09-09T06:55:56Z,2021-09-09T06:55:56Z,CLOSED,False,824,176,58,https://github.com/zybreak,Include what you use,2,[],https://github.com/i3/i3/pull/4480,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/4480#issuecomment-908092118,"Simply a code refactorization, instead of importing an ""all.h"" header file in most c-files which contains all project header-files, we now only include those header files needed for the specific c-file in question.
The benefit is a better overview of whats being used and where as well as easier to spot unused header-files","Yeah, it looks like the time savings are very small:
Without this PR:
ninja  15,73s user 2,51s system 1282% cpu 1,422 total
ninja  15,87s user 2,26s system 1265% cpu 1,433 total
ninja  15,81s user 2,51s system 1291% cpu 1,419 total

With this PR:
ninja  15,23s user 2,53s system 1263% cpu 1,406 total
ninja  15,28s user 2,53s system 1255% cpu 1,418 total
ninja  15,62s user 2,30s system 1274% cpu 1,406 total

Does include-what-you-use (the tool) work without problems on the i3 code base and with little setup? If so, we could consider merging this. If no, it’s probably not worth the hassle.",True,{}
i3/i3,https://github.com/i3/i3,4480,2021-08-20T09:20:27Z,2021-09-09T06:55:56Z,2021-09-09T06:55:56Z,CLOSED,False,824,176,58,https://github.com/zybreak,Include what you use,2,[],https://github.com/i3/i3/pull/4480,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/4480#issuecomment-908198064,"Simply a code refactorization, instead of importing an ""all.h"" header file in most c-files which contains all project header-files, we now only include those header files needed for the specific c-file in question.
The benefit is a better overview of whats being used and where as well as easier to spot unused header-files",I would argue that maintaining the extra dev/CI dependency and having to manually include files are not really worth it.,True,{'THUMBS_UP': ['https://github.com/Airblader']}
i3/i3,https://github.com/i3/i3,4480,2021-08-20T09:20:27Z,2021-09-09T06:55:56Z,2021-09-09T06:55:56Z,CLOSED,False,824,176,58,https://github.com/zybreak,Include what you use,2,[],https://github.com/i3/i3/pull/4480,https://github.com/zybreak,5,https://github.com/i3/i3/pull/4480#issuecomment-908725498,"Simply a code refactorization, instead of importing an ""all.h"" header file in most c-files which contains all project header-files, we now only include those header files needed for the specific c-file in question.
The benefit is a better overview of whats being used and where as well as easier to spot unused header-files","I haven't looked into whether the include-what-you-use tool will work or not, but I could do that if you think that would be of any benefit.
My hope was that this would bring clarity to the code, as I was struggling a bit to get a good overview with the all.h header.
I hope you can evaluate the suggestion again from a code clarity aspect. If you feel this brings little or no added clarity and just a hassle of writing a lot more imports, I would argue that writing imports is not a big deal. And new developers can get a pretty good idea of whats in use by looking at them.
If you have an editor with good features, it will show you any imports not needed (thus removing the need to run the tool seperately)
Anyways, enough ranting.",True,{}
i3/i3,https://github.com/i3/i3,4480,2021-08-20T09:20:27Z,2021-09-09T06:55:56Z,2021-09-09T06:55:56Z,CLOSED,False,824,176,58,https://github.com/zybreak,Include what you use,2,[],https://github.com/i3/i3/pull/4480,https://github.com/stapelberg,6,https://github.com/i3/i3/pull/4480#issuecomment-909654287,"Simply a code refactorization, instead of importing an ""all.h"" header file in most c-files which contains all project header-files, we now only include those header files needed for the specific c-file in question.
The benefit is a better overview of whats being used and where as well as easier to spot unused header-files","I haven't looked into whether the include-what-you-use tool will work or not, but I could do that if you think that would be of any benefit.

I think if we find that the IWYU tool is easy to set up and works well with the i3 code base, that would be the only case in which I could be convinced to accept this PR.

I hope you can evaluate the suggestion again from a code clarity aspect. If you feel this brings little or no added clarity and just a hassle of writing a lot more imports, I would argue that writing imports is not a big deal.

I agree that listing headers explicitly is good from a code clarity perspective. But at the same time, having to manually modify headers when moving code around is such a hassle, it overweighs the benefit of clarity.",True,{}
i3/i3,https://github.com/i3/i3,4480,2021-08-20T09:20:27Z,2021-09-09T06:55:56Z,2021-09-09T06:55:56Z,CLOSED,False,824,176,58,https://github.com/zybreak,Include what you use,2,[],https://github.com/i3/i3/pull/4480,https://github.com/Airblader,7,https://github.com/i3/i3/pull/4480#issuecomment-909877086,"Simply a code refactorization, instead of importing an ""all.h"" header file in most c-files which contains all project header-files, we now only include those header files needed for the specific c-file in question.
The benefit is a better overview of whats being used and where as well as easier to spot unused header-files","Having to change includes in i3 is something that occurs very, very rarely these days anyway.
Except for enums and data types, most functions also follow the convention of being prefixed by their file name, which makes it pretty clear where they're coming from.",True,"{'THUMBS_UP': ['https://github.com/orestisfl', 'https://github.com/zybreak']}"
i3/i3,https://github.com/i3/i3,4480,2021-08-20T09:20:27Z,2021-09-09T06:55:56Z,2021-09-09T06:55:56Z,CLOSED,False,824,176,58,https://github.com/zybreak,Include what you use,2,[],https://github.com/i3/i3/pull/4480,https://github.com/orestisfl,8,https://github.com/i3/i3/pull/4480#issuecomment-915815222,"Simply a code refactorization, instead of importing an ""all.h"" header file in most c-files which contains all project header-files, we now only include those header files needed for the specific c-file in question.
The benefit is a better overview of whats being used and where as well as easier to spot unused header-files",I feel the consensus here is to not merge this. Feel free to reopen otherwise.,True,{}
i3/i3,https://github.com/i3/i3,4482,2021-08-22T10:48:41Z,2021-09-10T05:41:27Z,2021-09-10T05:41:27Z,CLOSED,False,1,1,1,https://github.com/Jonta,"""Contact us"" turned into a link to /contact/",1,[],https://github.com/i3/i3/pull/4482,https://github.com/Jonta,1,https://github.com/i3/i3/pull/4482,Linking to both IRC and mailing list separately seems a bit much to me,Linking to both IRC and mailing list separately seems a bit much to me,True,{}
i3/i3,https://github.com/i3/i3,4482,2021-08-22T10:48:41Z,2021-09-10T05:41:27Z,2021-09-10T05:41:27Z,CLOSED,False,1,1,1,https://github.com/Jonta,"""Contact us"" turned into a link to /contact/",1,[],https://github.com/i3/i3/pull/4482,https://github.com/Airblader,2,https://github.com/i3/i3/pull/4482#issuecomment-916646036,Linking to both IRC and mailing list separately seems a bit much to me,"Thank you for this, @Jonta. I will close this as it is superseded by #4503, but I appreciate your proposed change here (and have incorporated it).",True,{}
i3/i3,https://github.com/i3/i3,4483,2021-08-22T11:09:52Z,,2021-08-22T11:10:55Z,OPEN,False,19,9,1,https://github.com/Jonta,Meaningful Alt-texts for images,1,[],https://github.com/i3/i3/pull/4483,https://github.com/Jonta,1,https://github.com/i3/i3/pull/4483,"I haven't rendered this
Beware of quotes within
I guessed that escaping them with backslashes would work","I haven't rendered this
Beware of quotes within
I guessed that escaping them with backslashes would work",True,{}
i3/i3,https://github.com/i3/i3,4483,2021-08-22T11:09:52Z,,2021-08-22T11:10:55Z,OPEN,False,19,9,1,https://github.com/Jonta,Meaningful Alt-texts for images,1,[],https://github.com/i3/i3/pull/4483,https://github.com/Jonta,2,https://github.com/i3/i3/pull/4483#issuecomment-903251898,"I haven't rendered this
Beware of quotes within
I guessed that escaping them with backslashes would work",Also: linebreaks in Alt-texts might create issues in your renderer,True,{}
i3/i3,https://github.com/i3/i3,4485,2021-08-24T22:11:52Z,2021-11-18T21:35:23Z,2021-11-18T21:35:24Z,MERGED,True,55,2,2,https://github.com/ToxicGLaDOS,Fix bug where long commands crash i3,1,[],https://github.com/i3/i3/pull/4485,https://github.com/ToxicGLaDOS,1,https://github.com/i3/i3/pull/4485,"Commands with more than 10 words would result in i3 crashing. The root cause is that the stack which holds arguments with identifiers is only 10 big, but generate-command-parser.pl was giving every word an identifier of """" (empty string). This behavior could have been correct, but everywhere this value was referenced compares it to NULL instead of empty string. Here for example.
It could be argued that the command move window container to window container to window container to left is invalid and therefore shouldn't be tested for. If so, I can remove the testcase. But crashing on that kind of input should be fixed in any case.
Also, this bug could be fixed in the opposite way, where we change all of the checks against NULL to check against '\0'. This way was simpler and seemed like what the desired behavior was all along to me.
Another interesting component to this bug is that it doesn't effect the config parser, only the command parser. That's because identifiers in config_parser.c are handled a little differently. When we push an identified string on the stack it appends the values together if they have the same identifier which causes all of the words with empty string as an identifier to take up only one spot on the stack.
Fixes #2968","Commands with more than 10 words would result in i3 crashing. The root cause is that the stack which holds arguments with identifiers is only 10 big, but generate-command-parser.pl was giving every word an identifier of """" (empty string). This behavior could have been correct, but everywhere this value was referenced compares it to NULL instead of empty string. Here for example.
It could be argued that the command move window container to window container to window container to left is invalid and therefore shouldn't be tested for. If so, I can remove the testcase. But crashing on that kind of input should be fixed in any case.
Also, this bug could be fixed in the opposite way, where we change all of the checks against NULL to check against '\0'. This way was simpler and seemed like what the desired behavior was all along to me.
Another interesting component to this bug is that it doesn't effect the config parser, only the command parser. That's because identifiers in config_parser.c are handled a little differently. When we push an identified string on the stack it appends the values together if they have the same identifier which causes all of the words with empty string as an identifier to take up only one spot on the stack.
Fixes #2968",True,{'ROCKET': ['https://github.com/ddides']}
i3/i3,https://github.com/i3/i3,4491,2021-08-31T21:58:32Z,2021-09-01T05:48:41Z,2021-09-01T05:48:43Z,MERGED,True,1,0,1,https://github.com/orestisfl,Add #4409 to release notes,1,[],https://github.com/i3/i3/pull/4491,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4491,#4409,#4409,True,{}
i3/i3,https://github.com/i3/i3,4495,2021-09-06T05:18:54Z,2021-09-06T10:18:34Z,2021-09-06T10:18:38Z,MERGED,True,1,2,1,https://github.com/kgilmer,Lower severity of missing include path specified from error to info.,1,[],https://github.com/i3/i3/pull/4495,https://github.com/kgilmer,1,https://github.com/i3/i3/pull/4495,"Addresses:  #4494
NOTE: As a very minor change to an unreleased feature I did not think it needs docs, but am happy to add something if that's desired.
Testing Done

Build and copy binary to system exhibiting error due to missing config directory.
Log back into session
Observe no nagbar error message nor syslog entry relating to invalid directory","Addresses:  #4494
NOTE: As a very minor change to an unreleased feature I did not think it needs docs, but am happy to add something if that's desired.
Testing Done

Build and copy binary to system exhibiting error due to missing config directory.
Log back into session
Observe no nagbar error message nor syslog entry relating to invalid directory",True,{}
i3/i3,https://github.com/i3/i3,4495,2021-09-06T05:18:54Z,2021-09-06T10:18:34Z,2021-09-06T10:18:38Z,MERGED,True,1,2,1,https://github.com/kgilmer,Lower severity of missing include path specified from error to info.,1,[],https://github.com/i3/i3/pull/4495,https://github.com/Airblader,2,https://github.com/i3/i3/pull/4495#issuecomment-913531136,"Addresses:  #4494
NOTE: As a very minor change to an unreleased feature I did not think it needs docs, but am happy to add something if that's desired.
Testing Done

Build and copy binary to system exhibiting error due to missing config directory.
Log back into session
Observe no nagbar error message nor syslog entry relating to invalid directory",Thanks!,True,{}
i3/i3,https://github.com/i3/i3,4497,2021-09-07T17:57:16Z,2021-09-09T07:27:31Z,2021-09-09T07:27:34Z,MERGED,True,44,37,1,https://github.com/orestisfl,Make window icons follow title alignment,1,[],https://github.com/i3/i3/pull/4497,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4497,"Fixes #4464
Related to #4453
See commit message","Fixes #4464
Related to #4453
See commit message",True,{'HOORAY': ['https://github.com/omertuc']}
i3/i3,https://github.com/i3/i3,4497,2021-09-07T17:57:16Z,2021-09-09T07:27:31Z,2021-09-09T07:27:34Z,MERGED,True,44,37,1,https://github.com/orestisfl,Make window icons follow title alignment,1,[],https://github.com/i3/i3/pull/4497,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/4497#issuecomment-915831495,"Fixes #4464
Related to #4453
See commit message","I did, when it was 1 + pad. I just mix up min/max sometimes 😅",True,{}
i3/i3,https://github.com/i3/i3,4498,2021-09-07T20:53:03Z,2021-09-08T04:41:30Z,2021-09-08T06:51:05Z,MERGED,True,2,0,1,https://github.com/orestisfl,Free window role & machine,1,[],https://github.com/i3/i3/pull/4498,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4498,,,True,{}
i3/i3,https://github.com/i3/i3,4499,2021-09-07T22:07:28Z,2021-09-08T05:26:20Z,2021-09-08T06:52:04Z,MERGED,True,6,0,1,https://github.com/orestisfl,GH actions: Archive complete logs on test failure,1,[],https://github.com/i3/i3/pull/4499,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4499,"https://docs.github.com/en/actions/reference/usage-limits-billing-and-administration#artifact-and-log-retention-policy

By default, the artifacts and log files generated by workflows are retained for 90 days before they are automatically deleted.","https://docs.github.com/en/actions/reference/usage-limits-billing-and-administration#artifact-and-log-retention-policy

By default, the artifacts and log files generated by workflows are retained for 90 days before they are automatically deleted.",True,{}
i3/i3,https://github.com/i3/i3,4501,2021-09-09T19:06:45Z,2021-09-10T05:17:27Z,2021-09-10T06:36:09Z,MERGED,True,8,8,2,https://github.com/orestisfl,Make window id logging hex everywhere,1,[],https://github.com/i3/i3/pull/4501,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4501,,,True,{}
i3/i3,https://github.com/i3/i3,4502,2021-09-09T22:53:30Z,2021-09-10T05:18:58Z,2021-09-10T06:36:01Z,MERGED,True,4,0,1,https://github.com/orestisfl,Add option to start a new discussion in the templates,1,[],https://github.com/i3/i3/pull/4502,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4502,Looks like this:,Looks like this:,True,{}
i3/i3,https://github.com/i3/i3,4503,2021-09-10T05:40:40Z,2021-09-10T07:18:02Z,2021-09-10T07:18:02Z,MERGED,True,5,4,3,https://github.com/Airblader,Update docs to Discussions,1,[],https://github.com/i3/i3/pull/4503,https://github.com/Airblader,1,https://github.com/i3/i3/pull/4503,closes #4482,closes #4482,True,{}
i3/i3,https://github.com/i3/i3,4528,2021-09-19T15:43:34Z,2021-09-22T06:54:37Z,2021-09-22T06:54:41Z,MERGED,True,130,41,11,https://github.com/stapelberg,GET_CONFIG: add raw/variable-processed contents of all config files,1,[],https://github.com/i3/i3/pull/4528,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4528,"We do this by adding to included_files as i3 processes the configs.
This should allow for easy debugging, without having to change how i3 processes
config files.
related to #4192","We do this by adding to included_files as i3 processes the configs.
This should allow for easy debugging, without having to change how i3 processes
config files.
related to #4192",True,{}
i3/i3,https://github.com/i3/i3,4528,2021-09-19T15:43:34Z,2021-09-22T06:54:37Z,2021-09-22T06:54:41Z,MERGED,True,130,41,11,https://github.com/stapelberg,GET_CONFIG: add raw/variable-processed contents of all config files,1,[],https://github.com/i3/i3/pull/4528,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/4528#issuecomment-923134693,"We do this by adding to included_files as i3 processes the configs.
This should allow for easy debugging, without having to change how i3 processes
config files.
related to #4192","Done (plus the missing docs/ipc update, too).",True,{}
i3/i3,https://github.com/i3/i3,4538,2021-09-25T08:14:56Z,2021-09-25T11:53:23Z,2021-09-25T12:00:16Z,MERGED,True,74,0,1,https://github.com/psychon,Log FocusOut events,1,[],https://github.com/i3/i3/pull/4538,https://github.com/psychon,1,https://github.com/i3/i3/pull/4538,"Currently, i3 only logs FocusIn events. Thus, a debug log tells us when
some window gets the focus. However, we don't know when it loses the
focus. This commit remedies this by adding some log messages for this.
To decide what to log, I just copied some code from handle_focus_in().
No idea how relevant all these details are.
Signed-off-by: Uli Schlachter psychon@znc.in
Idea-in-context-of: #4532","Currently, i3 only logs FocusIn events. Thus, a debug log tells us when
some window gets the focus. However, we don't know when it loses the
focus. This commit remedies this by adding some log messages for this.
To decide what to log, I just copied some code from handle_focus_in().
No idea how relevant all these details are.
Signed-off-by: Uli Schlachter psychon@znc.in
Idea-in-context-of: #4532",True,{}
i3/i3,https://github.com/i3/i3,4538,2021-09-25T08:14:56Z,2021-09-25T11:53:23Z,2021-09-25T12:00:16Z,MERGED,True,74,0,1,https://github.com/psychon,Log FocusOut events,1,[],https://github.com/i3/i3/pull/4538,https://github.com/psychon,2,https://github.com/i3/i3/pull/4538#issuecomment-927107881,"Currently, i3 only logs FocusIn events. Thus, a debug log tells us when
some window gets the focus. However, we don't know when it loses the
focus. This commit remedies this by adding some log messages for this.
To decide what to log, I just copied some code from handle_focus_in().
No idea how relevant all these details are.
Signed-off-by: Uli Schlachter psychon@znc.in
Idea-in-context-of: #4532",Updated. This now just logs all the fields of the event.,True,{}
i3/i3,https://github.com/i3/i3,4564,2021-10-06T04:11:41Z,,2021-10-06T04:11:41Z,OPEN,False,128,10,5,https://github.com/rsgowman,Behaviour of workspaces that have both a number and a name,2,[],https://github.com/i3/i3/pull/4564,https://github.com/rsgowman,1,https://github.com/i3/i3/pull/4564,"This PR adjusts the behaviour of workspaces with both a number and a name in two ways:

Create new workspaces to the right of existing ones with the same number
i.e. creating workspaces named ""1"", ""2:a"", ""2:b"", ""3"" should result in
that same order rather than ""1"", ""2:b"", ""2:a"", ""3"".
Don't skip identically numbered workspaces when moving to next/prev
eg if you have workspaces: { 1, 2:a, 2:b, 3 } and are on workspace 1,
then 'workspace next' should traverse 1 -> 2:a -> 2:b -> 3 -> 1 instead
of 1 -> 2:a -> 3 -> 1.

Fixes #4563","This PR adjusts the behaviour of workspaces with both a number and a name in two ways:

Create new workspaces to the right of existing ones with the same number
i.e. creating workspaces named ""1"", ""2:a"", ""2:b"", ""3"" should result in
that same order rather than ""1"", ""2:b"", ""2:a"", ""3"".
Don't skip identically numbered workspaces when moving to next/prev
eg if you have workspaces: { 1, 2:a, 2:b, 3 } and are on workspace 1,
then 'workspace next' should traverse 1 -> 2:a -> 2:b -> 3 -> 1 instead
of 1 -> 2:a -> 3 -> 1.

Fixes #4563",True,{}
i3/i3,https://github.com/i3/i3,4565,2021-10-06T16:07:49Z,2021-10-07T21:38:47Z,2021-10-07T21:38:48Z,MERGED,True,3,0,2,https://github.com/stapelberg,i3-dmenu-desktop: ignore duplicate files and directories,1,[],https://github.com/i3/i3/pull/4565,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4565,"This is required when e.g. mpv is installed in the NixOS global system
environment and in the user environment.
Standalone reproducer:
mkdir -p test1/share/applications test2/share
ln -svf /usr/share/applications/i3.desktop test1/share/applications
ln -svf $PWD/test1/share/applications test2/share
export XDG_DATA_DIRS='test1/share:test2/share'
i3-dmenu-desktop

fixes #4522","This is required when e.g. mpv is installed in the NixOS global system
environment and in the user environment.
Standalone reproducer:
mkdir -p test1/share/applications test2/share
ln -svf /usr/share/applications/i3.desktop test1/share/applications
ln -svf $PWD/test1/share/applications test2/share
export XDG_DATA_DIRS='test1/share:test2/share'
i3-dmenu-desktop

fixes #4522",True,{}
i3/i3,https://github.com/i3/i3,4565,2021-10-06T16:07:49Z,2021-10-07T21:38:47Z,2021-10-07T21:38:48Z,MERGED,True,3,0,2,https://github.com/stapelberg,i3-dmenu-desktop: ignore duplicate files and directories,1,[],https://github.com/i3/i3/pull/4565,https://github.com/stapelberg,2,https://github.com/i3/i3/pull/4565#issuecomment-938167084,"This is required when e.g. mpv is installed in the NixOS global system
environment and in the user environment.
Standalone reproducer:
mkdir -p test1/share/applications test2/share
ln -svf /usr/share/applications/i3.desktop test1/share/applications
ln -svf $PWD/test1/share/applications test2/share
export XDG_DATA_DIRS='test1/share:test2/share'
i3-dmenu-desktop

fixes #4522","Done. Also rebased onto next, GitHub Actions now passes",True,{}
i3/i3,https://github.com/i3/i3,4566,2021-10-06T16:25:41Z,2021-10-07T14:01:03Z,2021-10-07T21:21:23Z,MERGED,True,3,4,1,https://github.com/stapelberg,fix travis/check-spelling.pl for updated API,1,[],https://github.com/i3/i3/pull/4566,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4566,"I noticed that there is a spellintian program, too, that we could ideally just call.
However, that program does not work well with i3 binary files right now:
$ spellintian build/i3         
spellintian: can't decode ill-formed UTF-8 octet sequence <F8> in position 40 at /usr/share/perl5/Path/Tiny.pm line 1809.

I’ll file a bug about that and then maybe we can do away with check-spelling.pl in favor of calling spellintian","I noticed that there is a spellintian program, too, that we could ideally just call.
However, that program does not work well with i3 binary files right now:
$ spellintian build/i3         
spellintian: can't decode ill-formed UTF-8 octet sequence <F8> in position 40 at /usr/share/perl5/Path/Tiny.pm line 1809.

I’ll file a bug about that and then maybe we can do away with check-spelling.pl in favor of calling spellintian",True,{}
i3/i3,https://github.com/i3/i3,4577,2021-10-10T23:04:43Z,2022-03-28T08:18:56Z,2022-03-28T08:19:00Z,MERGED,True,2,0,2,https://github.com/andresilva,clear surface on x_push_node,3,[],https://github.com/i3/i3/pull/4577,https://github.com/andresilva,1,https://github.com/i3/i3/pull/4577,Fixes #3577.,Fixes #3577.,True,{}
i3/i3,https://github.com/i3/i3,4577,2021-10-10T23:04:43Z,2022-03-28T08:18:56Z,2022-03-28T08:19:00Z,MERGED,True,2,0,2,https://github.com/andresilva,clear surface on x_push_node,3,[],https://github.com/i3/i3/pull/4577,https://github.com/andresilva,2,https://github.com/i3/i3/pull/4577#issuecomment-1048278279,Fixes #3577.,ping,True,{}
i3/i3,https://github.com/i3/i3,4577,2021-10-10T23:04:43Z,2022-03-28T08:18:56Z,2022-03-28T08:19:00Z,MERGED,True,2,0,2,https://github.com/andresilva,clear surface on x_push_node,3,[],https://github.com/i3/i3/pull/4577,https://github.com/andresilva,3,https://github.com/i3/i3/pull/4577#issuecomment-1079671274,Fixes #3577.,@Airblader added a bugfix entry to the release notes.,True,{}
i3/i3,https://github.com/i3/i3,4577,2021-10-10T23:04:43Z,2022-03-28T08:18:56Z,2022-03-28T08:19:00Z,MERGED,True,2,0,2,https://github.com/andresilva,clear surface on x_push_node,3,[],https://github.com/i3/i3/pull/4577,https://github.com/Airblader,4,https://github.com/i3/i3/pull/4577#issuecomment-1080339422,Fixes #3577.,Thank you!,True,{}
i3/i3,https://github.com/i3/i3,4578,2021-10-12T03:03:04Z,,2021-10-14T17:08:23Z,OPEN,False,144,8,4,https://github.com/rsgowman,Don't skip identically numbered workspaces when moving to next/prev,2,[],https://github.com/i3/i3/pull/4578,https://github.com/rsgowman,1,https://github.com/i3/i3/pull/4578,"eg if you have workspaces: { 1, 2:a, 2:b, 3 } and are on workspace 1,
then 'workspace next' should traverse 1 -> 2:a -> 2:b -> 3 -> 1 instead
of 1 -> 2:a -> 3 -> 1.
Fixes #4452","eg if you have workspaces: { 1, 2:a, 2:b, 3 } and are on workspace 1,
then 'workspace next' should traverse 1 -> 2:a -> 2:b -> 3 -> 1 instead
of 1 -> 2:a -> 3 -> 1.
Fixes #4452",True,{}
i3/i3,https://github.com/i3/i3,4578,2021-10-12T03:03:04Z,,2021-10-14T17:08:23Z,OPEN,False,144,8,4,https://github.com/rsgowman,Don't skip identically numbered workspaces when moving to next/prev,2,[],https://github.com/i3/i3/pull/4578,https://github.com/Airblader,2,https://github.com/i3/i3/pull/4578#issuecomment-941052594,"eg if you have workspaces: { 1, 2:a, 2:b, 3 } and are on workspace 1,
then 'workspace next' should traverse 1 -> 2:a -> 2:b -> 3 -> 1 instead
of 1 -> 2:a -> 3 -> 1.
Fixes #4452",Thanks! @stapelberg @orestisfl How do you feel about landing this before the release? Or do we want to wait until after?,True,{}
i3/i3,https://github.com/i3/i3,4578,2021-10-12T03:03:04Z,,2021-10-14T17:08:23Z,OPEN,False,144,8,4,https://github.com/rsgowman,Don't skip identically numbered workspaces when moving to next/prev,2,[],https://github.com/i3/i3/pull/4578,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/4578#issuecomment-941192697,"eg if you have workspaces: { 1, 2:a, 2:b, 3 } and are on workspace 1,
then 'workspace next' should traverse 1 -> 2:a -> 2:b -> 3 -> 1 instead
of 1 -> 2:a -> 3 -> 1.
Fixes #4452",Don't we have a PR for this already? #4451,True,{}
i3/i3,https://github.com/i3/i3,4578,2021-10-12T03:03:04Z,,2021-10-14T17:08:23Z,OPEN,False,144,8,4,https://github.com/rsgowman,Don't skip identically numbered workspaces when moving to next/prev,2,[],https://github.com/i3/i3/pull/4578,https://github.com/stapelberg,4,https://github.com/i3/i3/pull/4578#issuecomment-943552681,"eg if you have workspaces: { 1, 2:a, 2:b, 3 } and are on workspace 1,
then 'workspace next' should traverse 1 -> 2:a -> 2:b -> 3 -> 1 instead
of 1 -> 2:a -> 3 -> 1.
Fixes #4452","Probably better to wait until after the release. I wanted to get it out any day now, and it’d be unfortunate to introduce a regression.",True,{}
i3/i3,https://github.com/i3/i3,4596,2021-10-17T12:49:24Z,2021-10-18T22:25:32Z,2021-10-18T22:32:15Z,CLOSED,False,0,0,0,https://github.com/algmyr,Fix focus issue when moving windows across output boundary,0,[],https://github.com/i3/i3/pull/4596,https://github.com/algmyr,1,https://github.com/i3/i3/pull/4596,"Focusing the container before doing the workspace switching dance seems to do the trick to fix #3518. Running locally the tests seem ok with the change.
I don't exactly know why the existing code doesn't work, setting focus to the specific container seems like it should work since is explicitly calls out to focus a specific container. If I had to guess it's a weird race condition like sequence, something like

i3 moves window
i3 makes sure the switch workspace event is changed by switching back and forth
this workspace switch to another output triggers a mouse move to the currently selected container on the other output
i3 focuses the new container
the mouse move from earlier (with focus_follows_mouse) focuses the container under the cursor, which is the one that had focus before

I'm able to reproduce similar issues when focusing. Scenario: I'm at my rightmost container in my left output, right output has a vertical split. Doing the keybinds for move right and move down in quick succession focuses the bottom container for a brief moment before jumping back to the container that the mouse jumped to. This would support the hypothesis of this being a race condition between i3 and Xorg.
If the above is the case this is just a hack that makes the behavior non-damaging for this particular case. The proper fix would be to not have the focus follows mouse happen in this case where i3 itself is the one moving the mouse (to a container that is focused already).","Focusing the container before doing the workspace switching dance seems to do the trick to fix #3518. Running locally the tests seem ok with the change.
I don't exactly know why the existing code doesn't work, setting focus to the specific container seems like it should work since is explicitly calls out to focus a specific container. If I had to guess it's a weird race condition like sequence, something like

i3 moves window
i3 makes sure the switch workspace event is changed by switching back and forth
this workspace switch to another output triggers a mouse move to the currently selected container on the other output
i3 focuses the new container
the mouse move from earlier (with focus_follows_mouse) focuses the container under the cursor, which is the one that had focus before

I'm able to reproduce similar issues when focusing. Scenario: I'm at my rightmost container in my left output, right output has a vertical split. Doing the keybinds for move right and move down in quick succession focuses the bottom container for a brief moment before jumping back to the container that the mouse jumped to. This would support the hypothesis of this being a race condition between i3 and Xorg.
If the above is the case this is just a hack that makes the behavior non-damaging for this particular case. The proper fix would be to not have the focus follows mouse happen in this case where i3 itself is the one moving the mouse (to a container that is focused already).",True,{'THUMBS_UP': ['https://github.com/JonnyHaystack']}
i3/i3,https://github.com/i3/i3,4596,2021-10-17T12:49:24Z,2021-10-18T22:25:32Z,2021-10-18T22:32:15Z,CLOSED,False,0,0,0,https://github.com/algmyr,Fix focus issue when moving windows across output boundary,0,[],https://github.com/i3/i3/pull/4596,https://github.com/algmyr,2,https://github.com/i3/i3/pull/4596#issuecomment-945116977,"Focusing the container before doing the workspace switching dance seems to do the trick to fix #3518. Running locally the tests seem ok with the change.
I don't exactly know why the existing code doesn't work, setting focus to the specific container seems like it should work since is explicitly calls out to focus a specific container. If I had to guess it's a weird race condition like sequence, something like

i3 moves window
i3 makes sure the switch workspace event is changed by switching back and forth
this workspace switch to another output triggers a mouse move to the currently selected container on the other output
i3 focuses the new container
the mouse move from earlier (with focus_follows_mouse) focuses the container under the cursor, which is the one that had focus before

I'm able to reproduce similar issues when focusing. Scenario: I'm at my rightmost container in my left output, right output has a vertical split. Doing the keybinds for move right and move down in quick succession focuses the bottom container for a brief moment before jumping back to the container that the mouse jumped to. This would support the hypothesis of this being a race condition between i3 and Xorg.
If the above is the case this is just a hack that makes the behavior non-damaging for this particular case. The proper fix would be to not have the focus follows mouse happen in this case where i3 itself is the one moving the mouse (to a container that is focused already).","Can confirm that the mouse warping is causing the underlying issue, commenting out the mouse warp at 
  
    
      i3/src/workspace.c
    
    
        Lines 537 to 539
      in
      ab389e1
    
  
  
    

        
          
           if (old_output != new_output) { 
        

        
          
               x_set_warp_to(&next->rect); 
        

        
          
           } 
        
    
  

 makes the issue go away in the move case. Presumably there is a similar mouse warp in the case of focusing.",True,{}
i3/i3,https://github.com/i3/i3,4596,2021-10-17T12:49:24Z,2021-10-18T22:25:32Z,2021-10-18T22:32:15Z,CLOSED,False,0,0,0,https://github.com/algmyr,Fix focus issue when moving windows across output boundary,0,[],https://github.com/i3/i3/pull/4596,https://github.com/psychon,3,https://github.com/i3/i3/pull/4596#issuecomment-945131005,"Focusing the container before doing the workspace switching dance seems to do the trick to fix #3518. Running locally the tests seem ok with the change.
I don't exactly know why the existing code doesn't work, setting focus to the specific container seems like it should work since is explicitly calls out to focus a specific container. If I had to guess it's a weird race condition like sequence, something like

i3 moves window
i3 makes sure the switch workspace event is changed by switching back and forth
this workspace switch to another output triggers a mouse move to the currently selected container on the other output
i3 focuses the new container
the mouse move from earlier (with focus_follows_mouse) focuses the container under the cursor, which is the one that had focus before

I'm able to reproduce similar issues when focusing. Scenario: I'm at my rightmost container in my left output, right output has a vertical split. Doing the keybinds for move right and move down in quick succession focuses the bottom container for a brief moment before jumping back to the container that the mouse jumped to. This would support the hypothesis of this being a race condition between i3 and Xorg.
If the above is the case this is just a hack that makes the behavior non-damaging for this particular case. The proper fix would be to not have the focus follows mouse happen in this case where i3 itself is the one moving the mouse (to a container that is focused already).","The proper fix would be to not have the focus follows mouse happen in this case where i3 itself is the one moving the mouse

Slightly off-topic description on how AwesomeWM deals with this problem
AwesomeWM does this via some ugly code:
https://github.com/awesomeWM/awesome/blob/1d55ae09aa487a82f2808e82a8884123e2400722/mouse.c#L257-L263
https://github.com/awesomeWM/awesome/blob/1d55ae09aa487a82f2808e82a8884123e2400722/objects/client.c#L1669-L1701
Once upon a time, the code literally changed the event mask of each window so that the X11 server does not generate any events for the cursor entering/leaving windows, then it warped the cursor, then it changed the event masks back to their original value.
These days, awesomeWM just sends a request, writes down its sequence number, warps the mouse cursor, then sends another request. Incoming events with a sequence number between these two values are then later ignored: https://github.com/awesomeWM/awesome/blob/1d55ae09aa487a82f2808e82a8884123e2400722/event.c#L1062-L1090
(The GrabServer is there to hopefully block ""everyone else"" from doing anything with the X11 server so that we don't accidentally also ignore other events. The old code IMO also would have needed this, but AFAIK it was not present.)",True,{'THUMBS_UP': ['https://github.com/JonnyHaystack']}
i3/i3,https://github.com/i3/i3,4596,2021-10-17T12:49:24Z,2021-10-18T22:25:32Z,2021-10-18T22:32:15Z,CLOSED,False,0,0,0,https://github.com/algmyr,Fix focus issue when moving windows across output boundary,0,[],https://github.com/i3/i3/pull/4596,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/4596#issuecomment-946220044,"Focusing the container before doing the workspace switching dance seems to do the trick to fix #3518. Running locally the tests seem ok with the change.
I don't exactly know why the existing code doesn't work, setting focus to the specific container seems like it should work since is explicitly calls out to focus a specific container. If I had to guess it's a weird race condition like sequence, something like

i3 moves window
i3 makes sure the switch workspace event is changed by switching back and forth
this workspace switch to another output triggers a mouse move to the currently selected container on the other output
i3 focuses the new container
the mouse move from earlier (with focus_follows_mouse) focuses the container under the cursor, which is the one that had focus before

I'm able to reproduce similar issues when focusing. Scenario: I'm at my rightmost container in my left output, right output has a vertical split. Doing the keybinds for move right and move down in quick succession focuses the bottom container for a brief moment before jumping back to the container that the mouse jumped to. This would support the hypothesis of this being a race condition between i3 and Xorg.
If the above is the case this is just a hack that makes the behavior non-damaging for this particular case. The proper fix would be to not have the focus follows mouse happen in this case where i3 itself is the one moving the mouse (to a container that is focused already).","Sorry for closing this: I force pushed the wrong thing (current next) to your branch, github automatically closed this PR and because of that I lost write access to your branch and can't revert it. Opening a new one.",True,{}
i3/i3,https://github.com/i3/i3,4599,2021-10-17T18:02:47Z,2021-10-18T06:10:30Z,2021-10-18T06:10:30Z,MERGED,True,36,24,2,https://github.com/stapelberg,Docs and release notes prep for the next release,2,[],https://github.com/i3/i3/pull/4599,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4599,,,True,{}
i3/i3,https://github.com/i3/i3,4604,2021-10-18T22:33:14Z,2021-11-05T14:32:08Z,2021-11-05T14:41:22Z,MERGED,True,12,2,2,https://github.com/orestisfl,Fix focus issue when moving windows across outputs,1,[],https://github.com/i3/i3/pull/4604,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4604,"Fixes #3518
Continuation of #4596
Added a comment explaining the situation.
I've modified the release notes in case we want to sneak this one in before the next release.
TODO release note: fix focus when moving container between outputs with mouse warp and focus_follows_mouse","Fixes #3518
Continuation of #4596
Added a comment explaining the situation.
I've modified the release notes in case we want to sneak this one in before the next release.
TODO release note: fix focus when moving container between outputs with mouse warp and focus_follows_mouse",True,{}
i3/i3,https://github.com/i3/i3,4604,2021-10-18T22:33:14Z,2021-11-05T14:32:08Z,2021-11-05T14:41:22Z,MERGED,True,12,2,2,https://github.com/orestisfl,Fix focus issue when moving windows across outputs,1,[],https://github.com/i3/i3/pull/4604,https://github.com/Airblader,2,https://github.com/i3/i3/pull/4604#issuecomment-946389474,"Fixes #3518
Continuation of #4596
Added a comment explaining the situation.
I've modified the release notes in case we want to sneak this one in before the next release.
TODO release note: fix focus when moving container between outputs with mouse warp and focus_follows_mouse","Focus issues tend to be delicate and tricky to predict, so I would vote against merging this right before a release.
Also, we should be able to write a test for this, right?",True,{}
i3/i3,https://github.com/i3/i3,4604,2021-10-18T22:33:14Z,2021-11-05T14:32:08Z,2021-11-05T14:41:22Z,MERGED,True,12,2,2,https://github.com/orestisfl,Fix focus issue when moving windows across outputs,1,[],https://github.com/i3/i3/pull/4604,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/4604#issuecomment-946406186,"Fixes #3518
Continuation of #4596
Added a comment explaining the situation.
I've modified the release notes in case we want to sneak this one in before the next release.
TODO release note: fix focus when moving container between outputs with mouse warp and focus_follows_mouse","I am able to write a test that confirms the desires behaviour but it won't
trigger the bug with the old code.

Which is baffling because I can trigger the bug manually in xephyr with
fake outputs.
…
On Tue, 19 Oct 2021, 07:55 Ingo Bürk, ***@***.***> wrote:
 Focus issues tend to be delicate and tricky to predict, so I would vote
 against merging this right before a release.

 Also, we should be able to write a test for this, right?

 —
 You are receiving this because you were assigned.
 Reply to this email directly, view it on GitHub
 <#4604 (comment)>, or
 unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ABMCZPQWBTBERLYXU5YPAQDUHUB5FANCNFSM5GHWXJEA>
 .
 Triage notifications on the go with GitHub Mobile for iOS
 <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>
 or Android
 <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.",True,{}
i3/i3,https://github.com/i3/i3,4604,2021-10-18T22:33:14Z,2021-11-05T14:32:08Z,2021-11-05T14:41:22Z,MERGED,True,12,2,2,https://github.com/orestisfl,Fix focus issue when moving windows across outputs,1,[],https://github.com/i3/i3/pull/4604,https://github.com/Airblader,4,https://github.com/i3/i3/pull/4604#issuecomment-946407039,"Fixes #3518
Continuation of #4596
Added a comment explaining the situation.
I've modified the release notes in case we want to sneak this one in before the next release.
TODO release note: fix focus when moving container between outputs with mouse warp and focus_follows_mouse",Do we know why it doesn't fail in the test?,True,{}
i3/i3,https://github.com/i3/i3,4604,2021-10-18T22:33:14Z,2021-11-05T14:32:08Z,2021-11-05T14:41:22Z,MERGED,True,12,2,2,https://github.com/orestisfl,Fix focus issue when moving windows across outputs,1,[],https://github.com/i3/i3/pull/4604,https://github.com/orestisfl,5,https://github.com/i3/i3/pull/4604#issuecomment-947044835,"Fixes #3518
Continuation of #4596
Added a comment explaining the situation.
I've modified the release notes in case we want to sneak this one in before the next release.
TODO release note: fix focus when moving container between outputs with mouse warp and focus_follows_mouse","Pushed a test that passes the checks (without the fix first): https://github.com/i3/i3/pull/4604/checks?check_run_id=3943704155
Any ideas welcome",True,{}
i3/i3,https://github.com/i3/i3,4604,2021-10-18T22:33:14Z,2021-11-05T14:32:08Z,2021-11-05T14:41:22Z,MERGED,True,12,2,2,https://github.com/orestisfl,Fix focus issue when moving windows across outputs,1,[],https://github.com/i3/i3/pull/4604,https://github.com/algmyr,6,https://github.com/i3/i3/pull/4604#issuecomment-953293206,"Fixes #3518
Continuation of #4596
Added a comment explaining the situation.
I've modified the release notes in case we want to sneak this one in before the next release.
TODO release note: fix focus when moving container between outputs with mouse warp and focus_follows_mouse",I guess I didn't end up mentioning that anywhere. The behavior is different when you run i3-msg move right and when you run it as a keybind. With the keybind you get focus one to the right of the intended window (i.e. the issue in this PR). With the command you seem to get focus on the rightmost thing on the original output (or the container at the root if you move the last window). All in all it's pretty weird.,True,{}
i3/i3,https://github.com/i3/i3,4604,2021-10-18T22:33:14Z,2021-11-05T14:32:08Z,2021-11-05T14:41:22Z,MERGED,True,12,2,2,https://github.com/orestisfl,Fix focus issue when moving windows across outputs,1,[],https://github.com/i3/i3/pull/4604,https://github.com/orestisfl,7,https://github.com/i3/i3/pull/4604#issuecomment-961346166,"Fixes #3518
Continuation of #4596
Added a comment explaining the situation.
I've modified the release notes in case we want to sneak this one in before the next release.
TODO release note: fix focus when moving container between outputs with mouse warp and focus_follows_mouse",@Airblader what should we do about this? I also tried triggering the bug in a test with key bindings but still couldn't make it to work,True,{}
i3/i3,https://github.com/i3/i3,4604,2021-10-18T22:33:14Z,2021-11-05T14:32:08Z,2021-11-05T14:41:22Z,MERGED,True,12,2,2,https://github.com/orestisfl,Fix focus issue when moving windows across outputs,1,[],https://github.com/i3/i3/pull/4604,https://github.com/Airblader,8,https://github.com/i3/i3/pull/4604#issuecomment-961924372,"Fixes #3518
Continuation of #4596
Added a comment explaining the situation.
I've modified the release notes in case we want to sneak this one in before the next release.
TODO release note: fix focus when moving container between outputs with mouse warp and focus_follows_mouse","Let's proceed without the test then; but we should not add a test that doesn't actually test the change, so let's remove that.",True,{}
i3/i3,https://github.com/i3/i3,4604,2021-10-18T22:33:14Z,2021-11-05T14:32:08Z,2021-11-05T14:41:22Z,MERGED,True,12,2,2,https://github.com/orestisfl,Fix focus issue when moving windows across outputs,1,[],https://github.com/i3/i3/pull/4604,https://github.com/orestisfl,9,https://github.com/i3/i3/pull/4604#issuecomment-961936132,"Fixes #3518
Continuation of #4596
Added a comment explaining the situation.
I've modified the release notes in case we want to sneak this one in before the next release.
TODO release note: fix focus when moving container between outputs with mouse warp and focus_follows_mouse",Up,True,{}
i3/i3,https://github.com/i3/i3,4609,2021-10-19T16:17:19Z,2021-10-19T18:05:27Z,2021-10-19T18:46:29Z,MERGED,True,9,4,1,https://github.com/stapelberg,post-release release.sh changes,1,[],https://github.com/i3/i3/pull/4609,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4609,The changelog copying turned out to be necessary exactly when the major version changes.,The changelog copying turned out to be necessary exactly when the major version changes.,True,{}
i3/i3,https://github.com/i3/i3,4610,2021-10-19T20:27:21Z,2021-11-05T09:36:25Z,2021-11-05T09:36:28Z,MERGED,True,105,6,8,https://github.com/orestisfl,Keep each release note in a single file,2,[],https://github.com/i3/i3/pull/4610,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4610,"To avoid annoying merge conflicts.
python perl script is provided for convenience and simple format checking in
PRs.","To avoid annoying merge conflicts.
python perl script is provided for convenience and simple format checking in
PRs.",True,{}
i3/i3,https://github.com/i3/i3,4610,2021-10-19T20:27:21Z,2021-11-05T09:36:25Z,2021-11-05T09:36:28Z,MERGED,True,105,6,8,https://github.com/orestisfl,Keep each release note in a single file,2,[],https://github.com/i3/i3/pull/4610,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/4610#issuecomment-947424060,"To avoid annoying merge conflicts.
python perl script is provided for convenience and simple format checking in
PRs.",These usually need some final grooming by @stapelberg. Maybe I can add a reminder in release.sh?,True,{}
i3/i3,https://github.com/i3/i3,4610,2021-10-19T20:27:21Z,2021-11-05T09:36:25Z,2021-11-05T09:36:28Z,MERGED,True,105,6,8,https://github.com/orestisfl,Keep each release note in a single file,2,[],https://github.com/i3/i3/pull/4610,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/4610#issuecomment-948304947,"To avoid annoying merge conflicts.
python perl script is provided for convenience and simple format checking in
PRs.","When preparing the release notes for v4.20, I actually appreciated the fact that I could use git blame to quickly navigate to each PR that was important enough to be mentioned.
If we split the release notes into separate files, that is no longer possible.
But, more importantly: if we use separate files, I don’t see why we not just use git log to build the release notes (possibly annotating commits that should not be mentioned, or possibly annotating commits with the specific message that they should produce in the release notes). Using separate files just seems duplicative to me in that regard?",True,{}
i3/i3,https://github.com/i3/i3,4610,2021-10-19T20:27:21Z,2021-11-05T09:36:25Z,2021-11-05T09:36:28Z,MERGED,True,105,6,8,https://github.com/orestisfl,Keep each release note in a single file,2,[],https://github.com/i3/i3/pull/4610,https://github.com/Airblader,4,https://github.com/i3/i3/pull/4610#issuecomment-948312507,"To avoid annoying merge conflicts.
python perl script is provided for convenience and simple format checking in
PRs.","If we go with commits and annotating them in some way, I would vote for just adopting a well-established standard like conventional commits.",True,{}
i3/i3,https://github.com/i3/i3,4610,2021-10-19T20:27:21Z,2021-11-05T09:36:25Z,2021-11-05T09:36:28Z,MERGED,True,105,6,8,https://github.com/orestisfl,Keep each release note in a single file,2,[],https://github.com/i3/i3/pull/4610,https://github.com/stapelberg,5,https://github.com/i3/i3/pull/4610#issuecomment-948320507,"To avoid annoying merge conflicts.
python perl script is provided for convenience and simple format checking in
PRs.","Conventional commits doesn’t cover release notes, though, or at least I couldn’t see anything about that?
I’m used to having a RELNOTES field in the commit message or similar.",True,{}
i3/i3,https://github.com/i3/i3,4610,2021-10-19T20:27:21Z,2021-11-05T09:36:25Z,2021-11-05T09:36:28Z,MERGED,True,105,6,8,https://github.com/orestisfl,Keep each release note in a single file,2,[],https://github.com/i3/i3/pull/4610,https://github.com/Airblader,6,https://github.com/i3/i3/pull/4610#issuecomment-948322398,"To avoid annoying merge conflicts.
python perl script is provided for convenience and simple format checking in
PRs.","With conventional commits, a changelog is usually generated directly from the commit message headline. If you want the release notes to be orthogonal to that, then yes, conventional commits AFAIK doesn't cover that.",True,{}
i3/i3,https://github.com/i3/i3,4610,2021-10-19T20:27:21Z,2021-11-05T09:36:25Z,2021-11-05T09:36:28Z,MERGED,True,105,6,8,https://github.com/orestisfl,Keep each release note in a single file,2,[],https://github.com/i3/i3/pull/4610,https://github.com/stapelberg,7,https://github.com/i3/i3/pull/4610#issuecomment-948326128,"To avoid annoying merge conflicts.
python perl script is provided for convenience and simple format checking in
PRs.","Yes, in general I’d like the release notes to be orthogonal, otherwise we’re back to square one where I manually compile the release notes based on git history.",True,{'THUMBS_UP': ['https://github.com/Airblader']}
i3/i3,https://github.com/i3/i3,4610,2021-10-19T20:27:21Z,2021-11-05T09:36:25Z,2021-11-05T09:36:28Z,MERGED,True,105,6,8,https://github.com/orestisfl,Keep each release note in a single file,2,[],https://github.com/i3/i3/pull/4610,https://github.com/orestisfl,8,https://github.com/i3/i3/pull/4610#issuecomment-949318568,"To avoid annoying merge conflicts.
python perl script is provided for convenience and simple format checking in
PRs.","The script can probably call git-blame and find the PR if we want.
My problem with the commit-based approach is that it's a bit more cryptic and that there is no real way to edit the release notes during development, at best we can append release notes with empty commits.",True,{}
i3/i3,https://github.com/i3/i3,4610,2021-10-19T20:27:21Z,2021-11-05T09:36:25Z,2021-11-05T09:36:28Z,MERGED,True,105,6,8,https://github.com/orestisfl,Keep each release note in a single file,2,[],https://github.com/i3/i3/pull/4610,https://github.com/orestisfl,9,https://github.com/i3/i3/pull/4610#issuecomment-950119418,"To avoid annoying merge conflicts.
python perl script is provided for convenience and simple format checking in
PRs.","Switch to Perl
Updated to find the PR if possible. Not 100% robust but I doubt there is a better way that doesn't involve fetching information from github.
That could be done like this:
$ curl 'https://api.github.com/repos/i3/i3/commits/b7af69cba8027ab7c36678c921136d85f1e7242b/pulls' | jq -r .[0].html_url
https://github.com/i3/i3/pull/4617",True,{}
i3/i3,https://github.com/i3/i3,4617,2021-10-22T10:54:10Z,2021-10-22T15:40:28Z,2021-11-02T18:49:22Z,MERGED,True,3,0,1,https://github.com/rvalieris,check for both arguments NULL on strings_differ,1,[],https://github.com/i3/i3/pull/4617,https://github.com/rvalieris,1,https://github.com/i3/i3/pull/4617,fix for #4614,fix for #4614,True,{}
i3/i3,https://github.com/i3/i3,4617,2021-10-22T10:54:10Z,2021-10-22T15:40:28Z,2021-11-02T18:49:22Z,MERGED,True,3,0,1,https://github.com/rvalieris,check for both arguments NULL on strings_differ,1,[],https://github.com/i3/i3/pull/4617,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/4617#issuecomment-949746748,fix for #4614,"@stapelberg this will need a minor release, that's why I ignored the release notes.
I predict that quite a few people will hit this regression.",True,{}
i3/i3,https://github.com/i3/i3,4618,2021-10-22T12:21:29Z,2021-11-01T20:42:49Z,2021-11-01T20:42:49Z,MERGED,True,2,3,1,https://github.com/Jonta,Docs: Testsuite: Grammar,2,[],https://github.com/i3/i3/pull/4618,https://github.com/Jonta,1,https://github.com/i3/i3/pull/4618,,,True,{}
i3/i3,https://github.com/i3/i3,4622,2021-10-23T10:34:09Z,2021-11-18T21:33:14Z,2021-11-18T21:39:06Z,MERGED,True,214,108,9,https://github.com/orestisfl,Focus output next,3,[],https://github.com/i3/i3/pull/4622,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4622,"Fixes #4619
I think this should be working. Draft PR to get a feel of the change.
TODO:

 Release notes
 User guide
 Tests","Fixes #4619
I think this should be working. Draft PR to get a feel of the change.
TODO:

 Release notes
 User guide
 Tests",True,{}
i3/i3,https://github.com/i3/i3,4629,2021-10-27T19:12:27Z,2021-10-28T06:40:08Z,2021-10-28T07:12:39Z,MERGED,True,2,0,1,https://github.com/sur5r,Extend title length for xmlto,1,[],https://github.com/i3/i3/pull/4629,https://github.com/sur5r,1,https://github.com/i3/i3/pull/4629,"man.th.title.max.length defaults to 20 which leads to a broken .TH line
for i3-migrate-config-to-v4.1:
.TH ""I3\-MIGRATE\-CONFIG\"" ""1"" ""02/01/2021"" ""i3 4\&.19\&.1"" ""i3 Manual""","man.th.title.max.length defaults to 20 which leads to a broken .TH line
for i3-migrate-config-to-v4.1:
.TH ""I3\-MIGRATE\-CONFIG\"" ""1"" ""02/01/2021"" ""i3 4\&.19\&.1"" ""i3 Manual""",True,{}
i3/i3,https://github.com/i3/i3,4637,2021-10-31T08:03:43Z,2021-10-31T08:36:30Z,2021-10-31T08:36:30Z,MERGED,True,1,1,1,https://github.com/lycurgus,Correct short form of raw option in i3-msg manpage,1,[],https://github.com/i3/i3/pull/4637,https://github.com/lycurgus,1,https://github.com/i3/i3/pull/4637,"It looks like the recently-added raw option to i3-msg has a typo in the manpage :)
Apologies for the tiny PR - noticed this one while checking something else out and thought it was quicker to raise a PR than to raise an issue and make someone else fix it....","It looks like the recently-added raw option to i3-msg has a typo in the manpage :)
Apologies for the tiny PR - noticed this one while checking something else out and thought it was quicker to raise a PR than to raise an issue and make someone else fix it....",True,{}
i3/i3,https://github.com/i3/i3,4638,2021-10-31T16:13:13Z,2021-11-04T16:22:22Z,2021-11-05T08:36:23Z,MERGED,True,37,5,3,https://github.com/psychon,Do not replace existing IPC socket,1,[],https://github.com/i3/i3/pull/4638,https://github.com/psychon,1,https://github.com/i3/i3/pull/4638,"Imagine you are a happy i3 user and want to also write patches for i3.
You use ""Xephyr :1"" to get another X11 server and then start your newly
build i3 in it with ""DISPLAY=:1 ./i3"". You test your changes and
everything seems fine. You are happy. Later that day, you try to log
out, but the $mod+Shift+e key binding from the default config no longer
works. i3-msg cannot connect to the IPC socket because ""No such file or
directory"". What is going on?
The problem boils down to $I3SOCK having something like two meanings.
When i3 starts, it sets the environment variable $I3SOCK to the path of
its IPC socket. That way, any process started from i3 inherits this and
i3-msg knows how to talk to i3. However, when this variable is already
set when i3 starts, then i3 will replace the existing socket. Thus, in
the earlier experiments, the ""separate i3"" that was used for
experimenting stole the ""main i3""'s socket and replaced it with its own.
When it exited, it deleted that socket.
This commit adds half a work around to this problem: When creating the
IPC socket, i3 will now first try to connect() to the socket. If this
succeeds, it will complain and refuse to use this socket. If the
connect() call fails, it will proceed as usual and create the socket.
Note that trying to connect() to a socket that no process listens on
will fail. Thus, this new code only really ""triggers"" when some process
is actively listening on this socket and accepting connections.
Example output for when the socket is already in use:
$ I3SOCK=/tmp/sdfdsf DISPLAY=:2 ./i3
31.10.2021 17:03:55 - [libi3] ERROR: Refusing to create UNIX socket at /tmp/sdfdsf: Socket is already in use
31.10.2021 17:03:55 - ERROR: Could not create the IPC socket, IPC disabled
This commit sadly only provides part of the solution. i3 will still
delete the socket when shutting down, even if it failed to create the
IPC socket. Thus, the ipc socket will still break, but now only later.
This will be fixed separately.
First-step-towards-fixing: #4381
Signed-off-by: Uli Schlachter psychon@znc.in

Only unlink() IPC socket if we created it
When the IPC socket could not be created, i3 would still unlink() the
socket during shutdown. This might mean that ""unrelated stuff"" is
removed. In the issue below, the IPC socket of another i3 instance was
unlinked.
Together with the previous commit, this fixes
#4381
Signed-off-by: Uli Schlachter psychon@znc.in","Imagine you are a happy i3 user and want to also write patches for i3.
You use ""Xephyr :1"" to get another X11 server and then start your newly
build i3 in it with ""DISPLAY=:1 ./i3"". You test your changes and
everything seems fine. You are happy. Later that day, you try to log
out, but the $mod+Shift+e key binding from the default config no longer
works. i3-msg cannot connect to the IPC socket because ""No such file or
directory"". What is going on?
The problem boils down to $I3SOCK having something like two meanings.
When i3 starts, it sets the environment variable $I3SOCK to the path of
its IPC socket. That way, any process started from i3 inherits this and
i3-msg knows how to talk to i3. However, when this variable is already
set when i3 starts, then i3 will replace the existing socket. Thus, in
the earlier experiments, the ""separate i3"" that was used for
experimenting stole the ""main i3""'s socket and replaced it with its own.
When it exited, it deleted that socket.
This commit adds half a work around to this problem: When creating the
IPC socket, i3 will now first try to connect() to the socket. If this
succeeds, it will complain and refuse to use this socket. If the
connect() call fails, it will proceed as usual and create the socket.
Note that trying to connect() to a socket that no process listens on
will fail. Thus, this new code only really ""triggers"" when some process
is actively listening on this socket and accepting connections.
Example output for when the socket is already in use:
$ I3SOCK=/tmp/sdfdsf DISPLAY=:2 ./i3
31.10.2021 17:03:55 - [libi3] ERROR: Refusing to create UNIX socket at /tmp/sdfdsf: Socket is already in use
31.10.2021 17:03:55 - ERROR: Could not create the IPC socket, IPC disabled
This commit sadly only provides part of the solution. i3 will still
delete the socket when shutting down, even if it failed to create the
IPC socket. Thus, the ipc socket will still break, but now only later.
This will be fixed separately.
First-step-towards-fixing: #4381
Signed-off-by: Uli Schlachter psychon@znc.in

Only unlink() IPC socket if we created it
When the IPC socket could not be created, i3 would still unlink() the
socket during shutdown. This might mean that ""unrelated stuff"" is
removed. In the issue below, the IPC socket of another i3 instance was
unlinked.
Together with the previous commit, this fixes
#4381
Signed-off-by: Uli Schlachter psychon@znc.in",True,{'THUMBS_UP': ['https://github.com/budRich']}
i3/i3,https://github.com/i3/i3,4638,2021-10-31T16:13:13Z,2021-11-04T16:22:22Z,2021-11-05T08:36:23Z,MERGED,True,37,5,3,https://github.com/psychon,Do not replace existing IPC socket,1,[],https://github.com/i3/i3/pull/4638,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/4638#issuecomment-958093518,"Imagine you are a happy i3 user and want to also write patches for i3.
You use ""Xephyr :1"" to get another X11 server and then start your newly
build i3 in it with ""DISPLAY=:1 ./i3"". You test your changes and
everything seems fine. You are happy. Later that day, you try to log
out, but the $mod+Shift+e key binding from the default config no longer
works. i3-msg cannot connect to the IPC socket because ""No such file or
directory"". What is going on?
The problem boils down to $I3SOCK having something like two meanings.
When i3 starts, it sets the environment variable $I3SOCK to the path of
its IPC socket. That way, any process started from i3 inherits this and
i3-msg knows how to talk to i3. However, when this variable is already
set when i3 starts, then i3 will replace the existing socket. Thus, in
the earlier experiments, the ""separate i3"" that was used for
experimenting stole the ""main i3""'s socket and replaced it with its own.
When it exited, it deleted that socket.
This commit adds half a work around to this problem: When creating the
IPC socket, i3 will now first try to connect() to the socket. If this
succeeds, it will complain and refuse to use this socket. If the
connect() call fails, it will proceed as usual and create the socket.
Note that trying to connect() to a socket that no process listens on
will fail. Thus, this new code only really ""triggers"" when some process
is actively listening on this socket and accepting connections.
Example output for when the socket is already in use:
$ I3SOCK=/tmp/sdfdsf DISPLAY=:2 ./i3
31.10.2021 17:03:55 - [libi3] ERROR: Refusing to create UNIX socket at /tmp/sdfdsf: Socket is already in use
31.10.2021 17:03:55 - ERROR: Could not create the IPC socket, IPC disabled
This commit sadly only provides part of the solution. i3 will still
delete the socket when shutting down, even if it failed to create the
IPC socket. Thus, the ipc socket will still break, but now only later.
This will be fixed separately.
First-step-towards-fixing: #4381
Signed-off-by: Uli Schlachter psychon@znc.in

Only unlink() IPC socket if we created it
When the IPC socket could not be created, i3 would still unlink() the
socket during shutdown. This might mean that ""unrelated stuff"" is
removed. In the issue below, the IPC socket of another i3 instance was
unlinked.
Together with the previous commit, this fixes
#4381
Signed-off-by: Uli Schlachter psychon@znc.in","Do we realistically ever want to run i3 without IPC? @Airblader @stapelberg  it's currently allowed in

  
    
      i3/src/main.c
    
    
        Lines 992 to 994
      in
      e4d3ec9
    
  
  
    

        
          
           int ipc_socket = create_socket(config.ipc_socket_path, &current_socketpath); 
        

        
          
           if (ipc_socket == -1) { 
        

        
          
               ELOG(""Could not create the IPC socket, IPC disabled\n""); 
        
    
  


but do we ever want to have this happen in this day and age?",True,{'ROCKET': ['https://github.com/psychon']}
i3/i3,https://github.com/i3/i3,4638,2021-10-31T16:13:13Z,2021-11-04T16:22:22Z,2021-11-05T08:36:23Z,MERGED,True,37,5,3,https://github.com/psychon,Do not replace existing IPC socket,1,[],https://github.com/i3/i3/pull/4638,https://github.com/Airblader,3,https://github.com/i3/i3/pull/4638#issuecomment-958094862,"Imagine you are a happy i3 user and want to also write patches for i3.
You use ""Xephyr :1"" to get another X11 server and then start your newly
build i3 in it with ""DISPLAY=:1 ./i3"". You test your changes and
everything seems fine. You are happy. Later that day, you try to log
out, but the $mod+Shift+e key binding from the default config no longer
works. i3-msg cannot connect to the IPC socket because ""No such file or
directory"". What is going on?
The problem boils down to $I3SOCK having something like two meanings.
When i3 starts, it sets the environment variable $I3SOCK to the path of
its IPC socket. That way, any process started from i3 inherits this and
i3-msg knows how to talk to i3. However, when this variable is already
set when i3 starts, then i3 will replace the existing socket. Thus, in
the earlier experiments, the ""separate i3"" that was used for
experimenting stole the ""main i3""'s socket and replaced it with its own.
When it exited, it deleted that socket.
This commit adds half a work around to this problem: When creating the
IPC socket, i3 will now first try to connect() to the socket. If this
succeeds, it will complain and refuse to use this socket. If the
connect() call fails, it will proceed as usual and create the socket.
Note that trying to connect() to a socket that no process listens on
will fail. Thus, this new code only really ""triggers"" when some process
is actively listening on this socket and accepting connections.
Example output for when the socket is already in use:
$ I3SOCK=/tmp/sdfdsf DISPLAY=:2 ./i3
31.10.2021 17:03:55 - [libi3] ERROR: Refusing to create UNIX socket at /tmp/sdfdsf: Socket is already in use
31.10.2021 17:03:55 - ERROR: Could not create the IPC socket, IPC disabled
This commit sadly only provides part of the solution. i3 will still
delete the socket when shutting down, even if it failed to create the
IPC socket. Thus, the ipc socket will still break, but now only later.
This will be fixed separately.
First-step-towards-fixing: #4381
Signed-off-by: Uli Schlachter psychon@znc.in

Only unlink() IPC socket if we created it
When the IPC socket could not be created, i3 would still unlink() the
socket during shutdown. This might mean that ""unrelated stuff"" is
removed. In the issue below, the IPC socket of another i3 instance was
unlinked.
Together with the previous commit, this fixes
#4381
Signed-off-by: Uli Schlachter psychon@znc.in",I can't imagine how such an instance of i3 would be useful at all.,True,{}
i3/i3,https://github.com/i3/i3,4638,2021-10-31T16:13:13Z,2021-11-04T16:22:22Z,2021-11-05T08:36:23Z,MERGED,True,37,5,3,https://github.com/psychon,Do not replace existing IPC socket,1,[],https://github.com/i3/i3/pull/4638,https://github.com/psychon,4,https://github.com/i3/i3/pull/4638#issuecomment-959471440,"Imagine you are a happy i3 user and want to also write patches for i3.
You use ""Xephyr :1"" to get another X11 server and then start your newly
build i3 in it with ""DISPLAY=:1 ./i3"". You test your changes and
everything seems fine. You are happy. Later that day, you try to log
out, but the $mod+Shift+e key binding from the default config no longer
works. i3-msg cannot connect to the IPC socket because ""No such file or
directory"". What is going on?
The problem boils down to $I3SOCK having something like two meanings.
When i3 starts, it sets the environment variable $I3SOCK to the path of
its IPC socket. That way, any process started from i3 inherits this and
i3-msg knows how to talk to i3. However, when this variable is already
set when i3 starts, then i3 will replace the existing socket. Thus, in
the earlier experiments, the ""separate i3"" that was used for
experimenting stole the ""main i3""'s socket and replaced it with its own.
When it exited, it deleted that socket.
This commit adds half a work around to this problem: When creating the
IPC socket, i3 will now first try to connect() to the socket. If this
succeeds, it will complain and refuse to use this socket. If the
connect() call fails, it will proceed as usual and create the socket.
Note that trying to connect() to a socket that no process listens on
will fail. Thus, this new code only really ""triggers"" when some process
is actively listening on this socket and accepting connections.
Example output for when the socket is already in use:
$ I3SOCK=/tmp/sdfdsf DISPLAY=:2 ./i3
31.10.2021 17:03:55 - [libi3] ERROR: Refusing to create UNIX socket at /tmp/sdfdsf: Socket is already in use
31.10.2021 17:03:55 - ERROR: Could not create the IPC socket, IPC disabled
This commit sadly only provides part of the solution. i3 will still
delete the socket when shutting down, even if it failed to create the
IPC socket. Thus, the ipc socket will still break, but now only later.
This will be fixed separately.
First-step-towards-fixing: #4381
Signed-off-by: Uli Schlachter psychon@znc.in

Only unlink() IPC socket if we created it
When the IPC socket could not be created, i3 would still unlink() the
socket during shutdown. This might mean that ""unrelated stuff"" is
removed. In the issue below, the IPC socket of another i3 instance was
unlinked.
Together with the previous commit, this fixes
#4381
Signed-off-by: Uli Schlachter psychon@znc.in","Rebased on next for #4647. Dropped commit e225b2c ""Only unlink() IPC socket if we created it""  since it is no longer relevant.
I did not re-test this change since I expect nothing changed.",True,{}
i3/i3,https://github.com/i3/i3,4638,2021-10-31T16:13:13Z,2021-11-04T16:22:22Z,2021-11-05T08:36:23Z,MERGED,True,37,5,3,https://github.com/psychon,Do not replace existing IPC socket,1,[],https://github.com/i3/i3/pull/4638,https://github.com/orestisfl,5,https://github.com/i3/i3/pull/4638#issuecomment-961162324,"Imagine you are a happy i3 user and want to also write patches for i3.
You use ""Xephyr :1"" to get another X11 server and then start your newly
build i3 in it with ""DISPLAY=:1 ./i3"". You test your changes and
everything seems fine. You are happy. Later that day, you try to log
out, but the $mod+Shift+e key binding from the default config no longer
works. i3-msg cannot connect to the IPC socket because ""No such file or
directory"". What is going on?
The problem boils down to $I3SOCK having something like two meanings.
When i3 starts, it sets the environment variable $I3SOCK to the path of
its IPC socket. That way, any process started from i3 inherits this and
i3-msg knows how to talk to i3. However, when this variable is already
set when i3 starts, then i3 will replace the existing socket. Thus, in
the earlier experiments, the ""separate i3"" that was used for
experimenting stole the ""main i3""'s socket and replaced it with its own.
When it exited, it deleted that socket.
This commit adds half a work around to this problem: When creating the
IPC socket, i3 will now first try to connect() to the socket. If this
succeeds, it will complain and refuse to use this socket. If the
connect() call fails, it will proceed as usual and create the socket.
Note that trying to connect() to a socket that no process listens on
will fail. Thus, this new code only really ""triggers"" when some process
is actively listening on this socket and accepting connections.
Example output for when the socket is already in use:
$ I3SOCK=/tmp/sdfdsf DISPLAY=:2 ./i3
31.10.2021 17:03:55 - [libi3] ERROR: Refusing to create UNIX socket at /tmp/sdfdsf: Socket is already in use
31.10.2021 17:03:55 - ERROR: Could not create the IPC socket, IPC disabled
This commit sadly only provides part of the solution. i3 will still
delete the socket when shutting down, even if it failed to create the
IPC socket. Thus, the ipc socket will still break, but now only later.
This will be fixed separately.
First-step-towards-fixing: #4381
Signed-off-by: Uli Schlachter psychon@znc.in

Only unlink() IPC socket if we created it
When the IPC socket could not be created, i3 would still unlink() the
socket during shutdown. This might mean that ""unrelated stuff"" is
removed. In the issue below, the IPC socket of another i3 instance was
unlinked.
Together with the previous commit, this fixes
#4381
Signed-off-by: Uli Schlachter psychon@znc.in","Ok, please squash everything and I'll merge",True,{}
i3/i3,https://github.com/i3/i3,4638,2021-10-31T16:13:13Z,2021-11-04T16:22:22Z,2021-11-05T08:36:23Z,MERGED,True,37,5,3,https://github.com/psychon,Do not replace existing IPC socket,1,[],https://github.com/i3/i3/pull/4638,https://github.com/stapelberg,6,https://github.com/i3/i3/pull/4638#issuecomment-961203985,"Imagine you are a happy i3 user and want to also write patches for i3.
You use ""Xephyr :1"" to get another X11 server and then start your newly
build i3 in it with ""DISPLAY=:1 ./i3"". You test your changes and
everything seems fine. You are happy. Later that day, you try to log
out, but the $mod+Shift+e key binding from the default config no longer
works. i3-msg cannot connect to the IPC socket because ""No such file or
directory"". What is going on?
The problem boils down to $I3SOCK having something like two meanings.
When i3 starts, it sets the environment variable $I3SOCK to the path of
its IPC socket. That way, any process started from i3 inherits this and
i3-msg knows how to talk to i3. However, when this variable is already
set when i3 starts, then i3 will replace the existing socket. Thus, in
the earlier experiments, the ""separate i3"" that was used for
experimenting stole the ""main i3""'s socket and replaced it with its own.
When it exited, it deleted that socket.
This commit adds half a work around to this problem: When creating the
IPC socket, i3 will now first try to connect() to the socket. If this
succeeds, it will complain and refuse to use this socket. If the
connect() call fails, it will proceed as usual and create the socket.
Note that trying to connect() to a socket that no process listens on
will fail. Thus, this new code only really ""triggers"" when some process
is actively listening on this socket and accepting connections.
Example output for when the socket is already in use:
$ I3SOCK=/tmp/sdfdsf DISPLAY=:2 ./i3
31.10.2021 17:03:55 - [libi3] ERROR: Refusing to create UNIX socket at /tmp/sdfdsf: Socket is already in use
31.10.2021 17:03:55 - ERROR: Could not create the IPC socket, IPC disabled
This commit sadly only provides part of the solution. i3 will still
delete the socket when shutting down, even if it failed to create the
IPC socket. Thus, the ipc socket will still break, but now only later.
This will be fixed separately.
First-step-towards-fixing: #4381
Signed-off-by: Uli Schlachter psychon@znc.in

Only unlink() IPC socket if we created it
When the IPC socket could not be created, i3 would still unlink() the
socket during shutdown. This might mean that ""unrelated stuff"" is
removed. In the issue below, the IPC socket of another i3 instance was
unlinked.
Together with the previous commit, this fixes
#4381
Signed-off-by: Uli Schlachter psychon@znc.in",Thanks!,True,{}
i3/i3,https://github.com/i3/i3,4638,2021-10-31T16:13:13Z,2021-11-04T16:22:22Z,2021-11-05T08:36:23Z,MERGED,True,37,5,3,https://github.com/psychon,Do not replace existing IPC socket,1,[],https://github.com/i3/i3/pull/4638,https://github.com/stapelberg,7,https://github.com/i3/i3/pull/4638#issuecomment-961215351,"Imagine you are a happy i3 user and want to also write patches for i3.
You use ""Xephyr :1"" to get another X11 server and then start your newly
build i3 in it with ""DISPLAY=:1 ./i3"". You test your changes and
everything seems fine. You are happy. Later that day, you try to log
out, but the $mod+Shift+e key binding from the default config no longer
works. i3-msg cannot connect to the IPC socket because ""No such file or
directory"". What is going on?
The problem boils down to $I3SOCK having something like two meanings.
When i3 starts, it sets the environment variable $I3SOCK to the path of
its IPC socket. That way, any process started from i3 inherits this and
i3-msg knows how to talk to i3. However, when this variable is already
set when i3 starts, then i3 will replace the existing socket. Thus, in
the earlier experiments, the ""separate i3"" that was used for
experimenting stole the ""main i3""'s socket and replaced it with its own.
When it exited, it deleted that socket.
This commit adds half a work around to this problem: When creating the
IPC socket, i3 will now first try to connect() to the socket. If this
succeeds, it will complain and refuse to use this socket. If the
connect() call fails, it will proceed as usual and create the socket.
Note that trying to connect() to a socket that no process listens on
will fail. Thus, this new code only really ""triggers"" when some process
is actively listening on this socket and accepting connections.
Example output for when the socket is already in use:
$ I3SOCK=/tmp/sdfdsf DISPLAY=:2 ./i3
31.10.2021 17:03:55 - [libi3] ERROR: Refusing to create UNIX socket at /tmp/sdfdsf: Socket is already in use
31.10.2021 17:03:55 - ERROR: Could not create the IPC socket, IPC disabled
This commit sadly only provides part of the solution. i3 will still
delete the socket when shutting down, even if it failed to create the
IPC socket. Thus, the ipc socket will still break, but now only later.
This will be fixed separately.
First-step-towards-fixing: #4381
Signed-off-by: Uli Schlachter psychon@znc.in

Only unlink() IPC socket if we created it
When the IPC socket could not be created, i3 would still unlink() the
socket during shutdown. This might mean that ""unrelated stuff"" is
removed. In the issue below, the IPC socket of another i3 instance was
unlinked.
Together with the previous commit, this fixes
#4381
Signed-off-by: Uli Schlachter psychon@znc.in","This doesn’t build?
 ../libi3/create_socket.c: In function ‘create_socket’:
  ../libi3/create_socket.c:43:9: error: ‘errno’ undeclared (first use in this function); did you mean ‘errx’?
           errno = EEXIST;
           ^~~~~
           errx
  ../libi3/create_socket.c:43:9: note: each undeclared identifier is reported only once for each function it appears in
  ../libi3/create_socket.c:43:17: error: ‘EEXIST’ undeclared (first use in this function); did you mean ‘ATEXIT’?
           errno = EEXIST;
                   ^~~~~~
                   ATEXIT

Not sure why this only fails in CI for the full build, not for the PR build.",True,{}
i3/i3,https://github.com/i3/i3,4638,2021-10-31T16:13:13Z,2021-11-04T16:22:22Z,2021-11-05T08:36:23Z,MERGED,True,37,5,3,https://github.com/psychon,Do not replace existing IPC socket,1,[],https://github.com/i3/i3/pull/4638,https://github.com/psychon,8,https://github.com/i3/i3/pull/4638#issuecomment-961223263,"Imagine you are a happy i3 user and want to also write patches for i3.
You use ""Xephyr :1"" to get another X11 server and then start your newly
build i3 in it with ""DISPLAY=:1 ./i3"". You test your changes and
everything seems fine. You are happy. Later that day, you try to log
out, but the $mod+Shift+e key binding from the default config no longer
works. i3-msg cannot connect to the IPC socket because ""No such file or
directory"". What is going on?
The problem boils down to $I3SOCK having something like two meanings.
When i3 starts, it sets the environment variable $I3SOCK to the path of
its IPC socket. That way, any process started from i3 inherits this and
i3-msg knows how to talk to i3. However, when this variable is already
set when i3 starts, then i3 will replace the existing socket. Thus, in
the earlier experiments, the ""separate i3"" that was used for
experimenting stole the ""main i3""'s socket and replaced it with its own.
When it exited, it deleted that socket.
This commit adds half a work around to this problem: When creating the
IPC socket, i3 will now first try to connect() to the socket. If this
succeeds, it will complain and refuse to use this socket. If the
connect() call fails, it will proceed as usual and create the socket.
Note that trying to connect() to a socket that no process listens on
will fail. Thus, this new code only really ""triggers"" when some process
is actively listening on this socket and accepting connections.
Example output for when the socket is already in use:
$ I3SOCK=/tmp/sdfdsf DISPLAY=:2 ./i3
31.10.2021 17:03:55 - [libi3] ERROR: Refusing to create UNIX socket at /tmp/sdfdsf: Socket is already in use
31.10.2021 17:03:55 - ERROR: Could not create the IPC socket, IPC disabled
This commit sadly only provides part of the solution. i3 will still
delete the socket when shutting down, even if it failed to create the
IPC socket. Thus, the ipc socket will still break, but now only later.
This will be fixed separately.
First-step-towards-fixing: #4381
Signed-off-by: Uli Schlachter psychon@znc.in

Only unlink() IPC socket if we created it
When the IPC socket could not be created, i3 would still unlink() the
socket during shutdown. This might mean that ""unrelated stuff"" is
removed. In the issue below, the IPC socket of another i3 instance was
unlinked.
Together with the previous commit, this fixes
#4381
Signed-off-by: Uli Schlachter psychon@znc.in","Sorry for the breakage.
Cannot reproduce: Current next works for me also after the merge.
Random guess: Something else already includes errno.h for me but not for you? Could you try adding #include <errno.h>, checking if that fixes things and then just commit that to next yourself.",True,{}
i3/i3,https://github.com/i3/i3,4638,2021-10-31T16:13:13Z,2021-11-04T16:22:22Z,2021-11-05T08:36:23Z,MERGED,True,37,5,3,https://github.com/psychon,Do not replace existing IPC socket,1,[],https://github.com/i3/i3/pull/4638,https://github.com/stapelberg,9,https://github.com/i3/i3/pull/4638#issuecomment-961713615,"Imagine you are a happy i3 user and want to also write patches for i3.
You use ""Xephyr :1"" to get another X11 server and then start your newly
build i3 in it with ""DISPLAY=:1 ./i3"". You test your changes and
everything seems fine. You are happy. Later that day, you try to log
out, but the $mod+Shift+e key binding from the default config no longer
works. i3-msg cannot connect to the IPC socket because ""No such file or
directory"". What is going on?
The problem boils down to $I3SOCK having something like two meanings.
When i3 starts, it sets the environment variable $I3SOCK to the path of
its IPC socket. That way, any process started from i3 inherits this and
i3-msg knows how to talk to i3. However, when this variable is already
set when i3 starts, then i3 will replace the existing socket. Thus, in
the earlier experiments, the ""separate i3"" that was used for
experimenting stole the ""main i3""'s socket and replaced it with its own.
When it exited, it deleted that socket.
This commit adds half a work around to this problem: When creating the
IPC socket, i3 will now first try to connect() to the socket. If this
succeeds, it will complain and refuse to use this socket. If the
connect() call fails, it will proceed as usual and create the socket.
Note that trying to connect() to a socket that no process listens on
will fail. Thus, this new code only really ""triggers"" when some process
is actively listening on this socket and accepting connections.
Example output for when the socket is already in use:
$ I3SOCK=/tmp/sdfdsf DISPLAY=:2 ./i3
31.10.2021 17:03:55 - [libi3] ERROR: Refusing to create UNIX socket at /tmp/sdfdsf: Socket is already in use
31.10.2021 17:03:55 - ERROR: Could not create the IPC socket, IPC disabled
This commit sadly only provides part of the solution. i3 will still
delete the socket when shutting down, even if it failed to create the
IPC socket. Thus, the ipc socket will still break, but now only later.
This will be fixed separately.
First-step-towards-fixing: #4381
Signed-off-by: Uli Schlachter psychon@znc.in

Only unlink() IPC socket if we created it
When the IPC socket could not be created, i3 would still unlink() the
socket during shutdown. This might mean that ""unrelated stuff"" is
removed. In the issue below, the IPC socket of another i3 instance was
unlinked.
Together with the previous commit, this fixes
#4381
Signed-off-by: Uli Schlachter psychon@znc.in","For the record, the breakage is fixed with PR #4649",True,{'THUMBS_UP': ['https://github.com/psychon']}
i3/i3,https://github.com/i3/i3,4644,2021-11-02T09:45:25Z,2021-11-02T18:50:59Z,2021-11-02T18:50:59Z,MERGED,True,1,0,1,https://github.com/bapt,portability: add missing headers,1,[],https://github.com/i3/i3/pull/4644,https://github.com/bapt,1,https://github.com/i3/i3/pull/4644,"libi3.h defins a macros with the default modes to create a directory.
Those modes are defined in sys/stat.h, so include the necessary header","libi3.h defins a macros with the default modes to create a directory.
Those modes are defined in sys/stat.h, so include the necessary header",True,{}
i3/i3,https://github.com/i3/i3,4645,2021-11-02T09:52:07Z,2021-11-02T19:14:25Z,2021-11-02T19:14:25Z,MERGED,True,1,1,1,https://github.com/bapt,portability: use getwd() instead of get_current_dir_name(),1,[],https://github.com/i3/i3/pull/4645,https://github.com/bapt,1,https://github.com/i3/i3/pull/4645,Is the ability to check for the PWD env var was not intented it provides the same functionnality,Is the ability to check for the PWD env var was not intented it provides the same functionnality,True,{}
i3/i3,https://github.com/i3/i3,4645,2021-11-02T09:52:07Z,2021-11-02T19:14:25Z,2021-11-02T19:14:25Z,MERGED,True,1,1,1,https://github.com/bapt,portability: use getwd() instead of get_current_dir_name(),1,[],https://github.com/i3/i3/pull/4645,https://github.com/psychon,2,https://github.com/i3/i3/pull/4645#issuecomment-957880383,Is the ability to check for the PWD env var was not intented it provides the same functionnality,"From man getcwd:

   As  an extension to the POSIX.1-2001 standard, glibc's getcwd() allocates the buffer dynamically using malloc(3) if buf is NULL.


That doesn't sound portable.",True,{}
i3/i3,https://github.com/i3/i3,4645,2021-11-02T09:52:07Z,2021-11-02T19:14:25Z,2021-11-02T19:14:25Z,MERGED,True,1,1,1,https://github.com/bapt,portability: use getwd() instead of get_current_dir_name(),1,[],https://github.com/i3/i3/pull/4645,https://github.com/bapt,3,https://github.com/i3/i3/pull/4645#issuecomment-957905784,Is the ability to check for the PWD env var was not intented it provides the same functionnality,"On FreeBSD, NetBSD and OpenBSD

The ability to specify a NULL pointer and have getcwd() allocate memory as necessary is an extension.

musl libc also allocates the same way,
posix speaks about this possibility of this extension and it seems everyone implemented it.",True,{}
i3/i3,https://github.com/i3/i3,4645,2021-11-02T09:52:07Z,2021-11-02T19:14:25Z,2021-11-02T19:14:25Z,MERGED,True,1,1,1,https://github.com/bapt,portability: use getwd() instead of get_current_dir_name(),1,[],https://github.com/i3/i3/pull/4645,https://github.com/stapelberg,4,https://github.com/i3/i3/pull/4645#issuecomment-958091853,Is the ability to check for the PWD env var was not intented it provides the same functionnality,"That doesn't sound portable.

Then again:

get_current_dir_name() is a GNU extension.

So it’s at least not a step back.
In practice, the BSDs have the getcwd(NULL, 0) behavior and Linux has it, and we don’t typically test on more platforms than those (for others we can accept patches).",True,{'THUMBS_UP': ['https://github.com/orestisfl']}
i3/i3,https://github.com/i3/i3,4647,2021-11-02T19:33:33Z,2021-11-02T22:13:53Z,2021-11-03T15:32:13Z,MERGED,True,9,9,1,https://github.com/psychon,Refuse to start without IPC socket,1,[],https://github.com/i3/i3/pull/4647,https://github.com/psychon,1,https://github.com/i3/i3/pull/4647,"This change was (basically) suggested by @orestisfl in
#4638 (comment)
Testing done:
$ I3SOCK=/dev/null DISPLAY=:2 LC_ALL=C build/i3
bind(): Address already in use
i3: Could not create the IPC socket: Address already in use

Signed-off-by: Uli Schlachter psychon@znc.in

Do you want me to also get rid of the else branch? The way the code is now, ipc_io has a smaller scope, which I like, so I'd at most replace it with { } (so just dropping the else).","This change was (basically) suggested by @orestisfl in
#4638 (comment)
Testing done:
$ I3SOCK=/dev/null DISPLAY=:2 LC_ALL=C build/i3
bind(): Address already in use
i3: Could not create the IPC socket: Address already in use

Signed-off-by: Uli Schlachter psychon@znc.in

Do you want me to also get rid of the else branch? The way the code is now, ipc_io has a smaller scope, which I like, so I'd at most replace it with { } (so just dropping the else).",True,{}
i3/i3,https://github.com/i3/i3,4647,2021-11-02T19:33:33Z,2021-11-02T22:13:53Z,2021-11-03T15:32:13Z,MERGED,True,9,9,1,https://github.com/psychon,Refuse to start without IPC socket,1,[],https://github.com/i3/i3/pull/4647,https://github.com/psychon,2,https://github.com/i3/i3/pull/4647#issuecomment-958129507,"This change was (basically) suggested by @orestisfl in
#4638 (comment)
Testing done:
$ I3SOCK=/dev/null DISPLAY=:2 LC_ALL=C build/i3
bind(): Address already in use
i3: Could not create the IPC socket: Address already in use

Signed-off-by: Uli Schlachter psychon@znc.in

Do you want me to also get rid of the else branch? The way the code is now, ipc_io has a smaller scope, which I like, so I'd at most replace it with { } (so just dropping the else).","Done. I skipped the \n from the error message since something already adds a new line to it. Commit message is updated.
Feel free to just ""steal"" this PR and open your own PR if more changes are necessary and I am too slow / if that's easier for you. Good night.",True,{}
i3/i3,https://github.com/i3/i3,4647,2021-11-02T19:33:33Z,2021-11-02T22:13:53Z,2021-11-03T15:32:13Z,MERGED,True,9,9,1,https://github.com/psychon,Refuse to start without IPC socket,1,[],https://github.com/i3/i3/pull/4647,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/4647#issuecomment-958256267,"This change was (basically) suggested by @orestisfl in
#4638 (comment)
Testing done:
$ I3SOCK=/dev/null DISPLAY=:2 LC_ALL=C build/i3
bind(): Address already in use
i3: Could not create the IPC socket: Address already in use

Signed-off-by: Uli Schlachter psychon@znc.in

Do you want me to also get rid of the else branch? The way the code is now, ipc_io has a smaller scope, which I like, so I'd at most replace it with { } (so just dropping the else).",Changes needs release note after #4610,True,{}
i3/i3,https://github.com/i3/i3,4647,2021-11-02T19:33:33Z,2021-11-02T22:13:53Z,2021-11-03T15:32:13Z,MERGED,True,9,9,1,https://github.com/psychon,Refuse to start without IPC socket,1,[],https://github.com/i3/i3/pull/4647,https://github.com/psychon,4,https://github.com/i3/i3/pull/4647#issuecomment-959459770,"This change was (basically) suggested by @orestisfl in
#4638 (comment)
Testing done:
$ I3SOCK=/dev/null DISPLAY=:2 LC_ALL=C build/i3
bind(): Address already in use
i3: Could not create the IPC socket: Address already in use

Signed-off-by: Uli Schlachter psychon@znc.in

Do you want me to also get rid of the else branch? The way the code is now, ipc_io has a smaller scope, which I like, so I'd at most replace it with { } (so just dropping the else).","Thanks for merging.
I'd suggest to add a new GitHub label for ""still needs release notes entry"" to track this. When the way forward for release notes is decided and all release notes were written, that label can be deleted again.",True,{}
i3/i3,https://github.com/i3/i3,4648,2021-11-02T22:17:36Z,2021-11-06T13:16:10Z,2021-11-06T13:16:15Z,MERGED,True,18,22,6,https://github.com/orestisfl,Move clang-format and safe-wrappers check in new job,1,[],https://github.com/i3/i3/pull/4648,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4648,"Benefits:

Faster feedback in case of error
More checks run in parallel
Removes stuff from Dockerfiles","Benefits:

Faster feedback in case of error
More checks run in parallel
Removes stuff from Dockerfiles",True,{}
i3/i3,https://github.com/i3/i3,4648,2021-11-02T22:17:36Z,2021-11-06T13:16:10Z,2021-11-06T13:16:15Z,MERGED,True,18,22,6,https://github.com/orestisfl,Move clang-format and safe-wrappers check in new job,1,[],https://github.com/i3/i3/pull/4648,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/4648#issuecomment-962084258,"Benefits:

Faster feedback in case of error
More checks run in parallel
Removes stuff from Dockerfiles",Moved the release-notes check in this job as well,True,{}
i3/i3,https://github.com/i3/i3,4649,2021-11-04T18:28:38Z,2021-11-04T18:31:44Z,2021-11-04T18:31:47Z,MERGED,True,1,0,1,https://github.com/orestisfl,Fix compilation error on debian,1,[],https://github.com/i3/i3/pull/4649,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4649,,,True,{}
i3/i3,https://github.com/i3/i3,4649,2021-11-04T18:28:38Z,2021-11-04T18:31:44Z,2021-11-04T18:31:47Z,MERGED,True,1,0,1,https://github.com/orestisfl,Fix compilation error on debian,1,[],https://github.com/i3/i3/pull/4649,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/4649#issuecomment-961309587,,https://github.com/orestisfl/i3/runs/4108858899,True,{}
i3/i3,https://github.com/i3/i3,4650,2021-11-04T20:43:47Z,2021-11-05T14:24:26Z,2021-11-05T14:24:26Z,MERGED,True,51,26,8,https://github.com/orestisfl,Add title tab color,1,[],https://github.com/i3/i3/pull/4650,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4650,"Fixes #4575
Release note TODO: Add client.focused_tab_title color option","Fixes #4575
Release note TODO: Add client.focused_tab_title color option",True,{}
i3/i3,https://github.com/i3/i3,4651,2021-11-04T20:47:40Z,2021-11-18T21:31:35Z,2021-11-18T21:39:27Z,MERGED,True,1,1,1,https://github.com/orestisfl,docs: Make more clear that an IPC socket is always created,1,[],https://github.com/i3/i3/pull/4651,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4651,Follow-up from #4647,Follow-up from #4647,True,{}
i3/i3,https://github.com/i3/i3,4652,2021-11-05T17:27:17Z,2021-11-06T13:13:18Z,2021-11-06T13:17:07Z,MERGED,True,14,7,1,https://github.com/orestisfl,Release notes script fixes,2,[],https://github.com/i3/i3/pull/4652,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4652,,,True,{}
i3/i3,https://github.com/i3/i3,4656,2021-11-07T10:56:36Z,2021-11-07T12:51:55Z,2021-11-07T12:52:05Z,MERGED,True,7,1,2,https://github.com/stapelberg,Fix flaky tests: sync after kill,2,[],https://github.com/i3/i3/pull/4656,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4656,related to #3009,related to #3009,True,{}
i3/i3,https://github.com/i3/i3,4656,2021-11-07T10:56:36Z,2021-11-07T12:51:55Z,2021-11-07T12:52:05Z,MERGED,True,7,1,2,https://github.com/stapelberg,Fix flaky tests: sync after kill,2,[],https://github.com/i3/i3/pull/4656,https://github.com/orestisfl,2,https://github.com/i3/i3/pull/4656#issuecomment-962605304,related to #3009,Thanks!,True,{}
i3/i3,https://github.com/i3/i3,4667,2021-11-11T19:27:22Z,2021-11-18T21:31:20Z,2021-11-18T21:39:57Z,MERGED,True,92,45,6,https://github.com/orestisfl,Fix transient_for endless loop,1,[],https://github.com/i3/i3/pull/4667,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4667,"Fixes #4404
CC @psychon","Fixes #4404
CC @psychon",True,{}
i3/i3,https://github.com/i3/i3,4668,2021-11-12T16:36:22Z,2021-12-01T19:38:01Z,2021-12-01T19:38:01Z,MERGED,True,3,3,1,https://github.com/ctemplin,docs: change IPC window_type value,2,[],https://github.com/i3/i3/pull/4668,https://github.com/ctemplin,1,https://github.com/i3/i3/pull/4668,"from ""undefined"" to ""unknown"" as returned by the get_tree command.","from ""undefined"" to ""unknown"" as returned by the get_tree command.",True,{}
i3/i3,https://github.com/i3/i3,4668,2021-11-12T16:36:22Z,2021-12-01T19:38:01Z,2021-12-01T19:38:01Z,MERGED,True,3,3,1,https://github.com/ctemplin,docs: change IPC window_type value,2,[],https://github.com/i3/i3/pull/4668,https://github.com/ctemplin,2,https://github.com/i3/i3/pull/4668#issuecomment-982769352,"from ""undefined"" to ""unknown"" as returned by the get_tree command.",Thanks for the clarification. I've re-added undefined and made what I think is the minimum change required to convey the distinction.,True,{'THUMBS_UP': ['https://github.com/Airblader']}
i3/i3,https://github.com/i3/i3,4684,2021-11-19T16:42:12Z,2021-11-29T17:20:55Z,2021-11-29T17:28:46Z,MERGED,True,21,27,3,https://github.com/psychon,Switch from pcre to pcre2,1,[],https://github.com/i3/i3/pull/4684,https://github.com/psychon,1,https://github.com/i3/i3/pull/4684,"The issue at 0 was opened and I just took a stab at it. I have no
prior experience with pcre and pcre2, but using [1,2] I hacked together
something that seems to work. Next, Michael told me to turn that
patch/hack into a PR, so here we are.
The dependency in meson.build still uses version:'>=8.10' even though
the name of the library changed. No idea what to do with this.
There was a while loop in regex_new() that dealt with an error when pcre
was not compiled with UTF-8 support. This loop uses a magic constant of
32 for the error code. I just dropped this loop, because I was just
writing a hack and did not intend to turn this into a PR. Also, a quick ""grep
32 /usr/include/pcre.h"" does not find anything useful, so... shrug
pcre_study() was removed without replacement, so the corresponding code
is also simply removed.
Testing done: The test suite passes for me. YMMV.
Signed-off-by: Uli Schlachter psychon@znc.in
Fixes: #4682","The issue at 0 was opened and I just took a stab at it. I have no
prior experience with pcre and pcre2, but using [1,2] I hacked together
something that seems to work. Next, Michael told me to turn that
patch/hack into a PR, so here we are.
The dependency in meson.build still uses version:'>=8.10' even though
the name of the library changed. No idea what to do with this.
There was a while loop in regex_new() that dealt with an error when pcre
was not compiled with UTF-8 support. This loop uses a magic constant of
32 for the error code. I just dropped this loop, because I was just
writing a hack and did not intend to turn this into a PR. Also, a quick ""grep
32 /usr/include/pcre.h"" does not find anything useful, so... shrug
pcre_study() was removed without replacement, so the corresponding code
is also simply removed.
Testing done: The test suite passes for me. YMMV.
Signed-off-by: Uli Schlachter psychon@znc.in
Fixes: #4682",True,{}
i3/i3,https://github.com/i3/i3,4684,2021-11-19T16:42:12Z,2021-11-29T17:20:55Z,2021-11-29T17:28:46Z,MERGED,True,21,27,3,https://github.com/psychon,Switch from pcre to pcre2,1,[],https://github.com/i3/i3/pull/4684,https://github.com/psychon,2,https://github.com/i3/i3/pull/4684#issuecomment-974626130,"The issue at 0 was opened and I just took a stab at it. I have no
prior experience with pcre and pcre2, but using [1,2] I hacked together
something that seems to work. Next, Michael told me to turn that
patch/hack into a PR, so here we are.
The dependency in meson.build still uses version:'>=8.10' even though
the name of the library changed. No idea what to do with this.
There was a while loop in regex_new() that dealt with an error when pcre
was not compiled with UTF-8 support. This loop uses a magic constant of
32 for the error code. I just dropped this loop, because I was just
writing a hack and did not intend to turn this into a PR. Also, a quick ""grep
32 /usr/include/pcre.h"" does not find anything useful, so... shrug
pcre_study() was removed without replacement, so the corresponding code
is also simply removed.
Testing done: The test suite passes for me. YMMV.
Signed-off-by: Uli Schlachter psychon@znc.in
Fixes: #4682","Someone left some comments on the commit itself. No idea who this person is and I already spent my motivation for understanding pcre2, so I am just mentioning this here so that someone else can look at this and either update my PR directly or tell me what to change.

The version checks for pcre2 can be dropped: psychon@2defec9#r60592337
Uhm... I'm not sure what the benefit of this suggestion is. At first I thought ""avoids one temporary allocation"", but apprently that is not the case...? psychon@2defec9#r60596702

Edit: Their github contributions suggests some involvement with pcre2, i.e. ""this person should know better than @psychon"".",True,{'LAUGH': ['https://github.com/carenas']}
i3/i3,https://github.com/i3/i3,4684,2021-11-19T16:42:12Z,2021-11-29T17:20:55Z,2021-11-29T17:28:46Z,MERGED,True,21,27,3,https://github.com/psychon,Switch from pcre to pcre2,1,[],https://github.com/i3/i3/pull/4684,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/4684#issuecomment-981409859,"The issue at 0 was opened and I just took a stab at it. I have no
prior experience with pcre and pcre2, but using [1,2] I hacked together
something that seems to work. Next, Michael told me to turn that
patch/hack into a PR, so here we are.
The dependency in meson.build still uses version:'>=8.10' even though
the name of the library changed. No idea what to do with this.
There was a while loop in regex_new() that dealt with an error when pcre
was not compiled with UTF-8 support. This loop uses a magic constant of
32 for the error code. I just dropped this loop, because I was just
writing a hack and did not intend to turn this into a PR. Also, a quick ""grep
32 /usr/include/pcre.h"" does not find anything useful, so... shrug
pcre_study() was removed without replacement, so the corresponding code
is also simply removed.
Testing done: The test suite passes for me. YMMV.
Signed-off-by: Uli Schlachter psychon@znc.in
Fixes: #4682","Sorry for the late review, I didn’t see this earlier",True,{}
i3/i3,https://github.com/i3/i3,4684,2021-11-19T16:42:12Z,2021-11-29T17:20:55Z,2021-11-29T17:28:46Z,MERGED,True,21,27,3,https://github.com/psychon,Switch from pcre to pcre2,1,[],https://github.com/i3/i3/pull/4684,https://github.com/stapelberg,4,https://github.com/i3/i3/pull/4684#issuecomment-981846866,"The issue at 0 was opened and I just took a stab at it. I have no
prior experience with pcre and pcre2, but using [1,2] I hacked together
something that seems to work. Next, Michael told me to turn that
patch/hack into a PR, so here we are.
The dependency in meson.build still uses version:'>=8.10' even though
the name of the library changed. No idea what to do with this.
There was a while loop in regex_new() that dealt with an error when pcre
was not compiled with UTF-8 support. This loop uses a magic constant of
32 for the error code. I just dropped this loop, because I was just
writing a hack and did not intend to turn this into a PR. Also, a quick ""grep
32 /usr/include/pcre.h"" does not find anything useful, so... shrug
pcre_study() was removed without replacement, so the corresponding code
is also simply removed.
Testing done: The test suite passes for me. YMMV.
Signed-off-by: Uli Schlachter psychon@znc.in
Fixes: #4682",Thanks again!,True,{}
i3/i3,https://github.com/i3/i3,4698,2021-11-27T21:54:59Z,2021-11-27T22:38:14Z,2021-11-27T23:24:28Z,MERGED,True,19,8,3,https://github.com/orestisfl,user_output_names_find_next: Always initialize target_output,1,[],https://github.com/i3/i3/pull/4698,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4698,"This way, if the user has provided a valid, existing output in the list
of outputs, the focus & move workspace to output commands will not
report a misleading failure.
Side-effect is that the command code will try to execute a no-op e.g. by
moving the workspace to the output it already is on. But that's what the
user is actually requesting in this case and it shouldn't be a problem.
Fixes #4691","This way, if the user has provided a valid, existing output in the list
of outputs, the focus & move workspace to output commands will not
report a misleading failure.
Side-effect is that the command code will try to execute a no-op e.g. by
moving the workspace to the output it already is on. But that's what the
user is actually requesting in this case and it shouldn't be a problem.
Fixes #4691",True,{}
i3/i3,https://github.com/i3/i3,4699,2021-11-28T12:48:41Z,2021-12-06T08:53:51Z,2021-12-06T08:53:51Z,MERGED,True,2,1,1,https://github.com/532910,"fix #4697, adds backslashes quotation for exec",1,[],https://github.com/i3/i3/pull/4699,https://github.com/532910,1,https://github.com/i3/i3/pull/4699,Signed-off-by: Sergio E. Nemirowski sergio@outerface.net,Signed-off-by: Sergio E. Nemirowski sergio@outerface.net,True,"{'THUMBS_UP': ['https://github.com/psychon'], 'ROCKET': ['https://github.com/psychon']}"
i3/i3,https://github.com/i3/i3,4705,2021-11-29T17:29:31Z,2021-11-29T22:41:08Z,2021-11-29T22:41:11Z,MERGED,True,1,1,1,https://github.com/stapelberg,debian: bump to libpcre2-dev for autobuilds,1,[],https://github.com/i3/i3/pull/4705,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4705,"related to #4682
cc @psychon","related to #4682
cc @psychon",True,{}
i3/i3,https://github.com/i3/i3,4705,2021-11-29T17:29:31Z,2021-11-29T22:41:08Z,2021-11-29T22:41:11Z,MERGED,True,1,1,1,https://github.com/stapelberg,debian: bump to libpcre2-dev for autobuilds,1,[],https://github.com/i3/i3/pull/4705,https://github.com/psychon,2,https://github.com/i3/i3/pull/4705#issuecomment-981857983,"related to #4682
cc @psychon","I don't really understand the setup here, but... how come my PR didn't fail?
Besides that: Looks fine to me.
You could mention in the commit message something like the following from https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1000105, but that does not really matter, I guess.

Historical reasons mean that old PCRE is packaged as pcre3 in Debian",True,{}
i3/i3,https://github.com/i3/i3,4705,2021-11-29T17:29:31Z,2021-11-29T22:41:08Z,2021-11-29T22:41:11Z,MERGED,True,1,1,1,https://github.com/stapelberg,debian: bump to libpcre2-dev for autobuilds,1,[],https://github.com/i3/i3/pull/4705,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/4705#issuecomment-982088920,"related to #4682
cc @psychon","I don't really understand the setup here, but... how come my PR didn't fail?

PRs don’t build the full debian package, our CI only builds Debian packages for commits to the next branch.",True,{}
i3/i3,https://github.com/i3/i3,4710,2021-12-02T13:57:12Z,2021-12-11T13:33:23Z,2021-12-12T11:20:40Z,MERGED,True,61,8,6,https://github.com/pstray,Implement title_window_icon toggle,1,[],https://github.com/i3/i3/pull/4710,https://github.com/pstray,1,https://github.com/i3/i3/pull/4710,An implentation of the feature request in #4709,An implentation of the feature request in #4709,True,{}
i3/i3,https://github.com/i3/i3,4710,2021-12-02T13:57:12Z,2021-12-11T13:33:23Z,2021-12-12T11:20:40Z,MERGED,True,61,8,6,https://github.com/pstray,Implement title_window_icon toggle,1,[],https://github.com/i3/i3/pull/4710,https://github.com/pstray,2,https://github.com/i3/i3/pull/4710#issuecomment-985442370,An implentation of the feature request in #4709,Not sure why those tests failed...,True,{}
i3/i3,https://github.com/i3/i3,4710,2021-12-02T13:57:12Z,2021-12-11T13:33:23Z,2021-12-12T11:20:40Z,MERGED,True,61,8,6,https://github.com/pstray,Implement title_window_icon toggle,1,[],https://github.com/i3/i3/pull/4710,https://github.com/pstray,3,https://github.com/i3/i3/pull/4710#issuecomment-985485578,An implentation of the feature request in #4709,Fixed it by actually saving the old value instead of setting it directly.,True,{}
i3/i3,https://github.com/i3/i3,4710,2021-12-02T13:57:12Z,2021-12-11T13:33:23Z,2021-12-12T11:20:40Z,MERGED,True,61,8,6,https://github.com/pstray,Implement title_window_icon toggle,1,[],https://github.com/i3/i3/pull/4710,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/4710#issuecomment-991603009,An implentation of the feature request in #4709,"Finally, please squash all commits into one before we can merge this.",True,{}
i3/i3,https://github.com/i3/i3,4710,2021-12-02T13:57:12Z,2021-12-11T13:33:23Z,2021-12-12T11:20:40Z,MERGED,True,61,8,6,https://github.com/pstray,Implement title_window_icon toggle,1,[],https://github.com/i3/i3/pull/4710,https://github.com/pstray,5,https://github.com/i3/i3/pull/4710#issuecomment-991642192,An implentation of the feature request in #4709,"Added some fixes to comments and doc, and squashed it all.",True,{}
i3/i3,https://github.com/i3/i3,4717,2021-12-06T21:15:15Z,2021-12-06T21:55:39Z,2021-12-06T21:55:40Z,MERGED,True,27,60,8,https://github.com/orestisfl,Remove outdated //-style commented-out code,1,[],https://github.com/i3/i3/pull/4717,https://github.com/orestisfl,1,https://github.com/i3/i3/pull/4717,This makes the whole code-base have zero changes with clang-format (v13).,This makes the whole code-base have zero changes with clang-format (v13).,True,{}
i3/i3,https://github.com/i3/i3,4745,2021-12-24T11:40:31Z,2021-12-24T11:50:43Z,2021-12-24T12:27:28Z,CLOSED,False,519,454,1,https://github.com/neoedmund,change split layout to reasonable grid layout,1,[],https://github.com/i3/i3/pull/4745,https://github.com/neoedmund,1,https://github.com/i3/i3/pull/4745,"I'm sorry to pull this request. Because it maybe not be accepted directly. Because 1) It's a quick hacking to make things done. 2) code is formatted differently with other files.
But I still like to make pull, because I just want let people know I did such work and if someone interested, he can make use of it.
So what this change actually do ?
It changes the split layout algorithm to a reasonable grid layout. So when you press meta-E , you can see windows are arranged in a balanced grid. That's it, thanks for the reading.","I'm sorry to pull this request. Because it maybe not be accepted directly. Because 1) It's a quick hacking to make things done. 2) code is formatted differently with other files.
But I still like to make pull, because I just want let people know I did such work and if someone interested, he can make use of it.
So what this change actually do ?
It changes the split layout algorithm to a reasonable grid layout. So when you press meta-E , you can see windows are arranged in a balanced grid. That's it, thanks for the reading.",True,{}
i3/i3,https://github.com/i3/i3,4745,2021-12-24T11:40:31Z,2021-12-24T11:50:43Z,2021-12-24T12:27:28Z,CLOSED,False,519,454,1,https://github.com/neoedmund,change split layout to reasonable grid layout,1,[],https://github.com/i3/i3/pull/4745,https://github.com/neoedmund,2,https://github.com/i3/i3/pull/4745#issuecomment-1000805962,"I'm sorry to pull this request. Because it maybe not be accepted directly. Because 1) It's a quick hacking to make things done. 2) code is formatted differently with other files.
But I still like to make pull, because I just want let people know I did such work and if someone interested, he can make use of it.
So what this change actually do ?
It changes the split layout algorithm to a reasonable grid layout. So when you press meta-E , you can see windows are arranged in a balanced grid. That's it, thanks for the reading.",Also this change based on tag 4.20.1,True,{}
i3/i3,https://github.com/i3/i3,4745,2021-12-24T11:40:31Z,2021-12-24T11:50:43Z,2021-12-24T12:27:28Z,CLOSED,False,519,454,1,https://github.com/neoedmund,change split layout to reasonable grid layout,1,[],https://github.com/i3/i3/pull/4745,https://github.com/Airblader,3,https://github.com/i3/i3/pull/4745#issuecomment-1000807943,"I'm sorry to pull this request. Because it maybe not be accepted directly. Because 1) It's a quick hacking to make things done. 2) code is formatted differently with other files.
But I still like to make pull, because I just want let people know I did such work and if someone interested, he can make use of it.
So what this change actually do ?
It changes the split layout algorithm to a reasonable grid layout. So when you press meta-E , you can see windows are arranged in a balanced grid. That's it, thanks for the reading.","Thanks for opening this PR. I'm going to close it partially for the reasons you mentioned, but also because it sounds like a big breaking change in behavior. Thanks for making it public for people to find if they're interested!
If you're looking to bring a change into i3, it'd be best to open an issue with a description of the intended change and we can evaluate its merit and think about a way of doing it in a non-breaking way.",True,{}
i3/i3,https://github.com/i3/i3,4745,2021-12-24T11:40:31Z,2021-12-24T11:50:43Z,2021-12-24T12:27:28Z,CLOSED,False,519,454,1,https://github.com/neoedmund,change split layout to reasonable grid layout,1,[],https://github.com/i3/i3/pull/4745,https://github.com/neoedmund,4,https://github.com/i3/i3/pull/4745#issuecomment-1000813985,"I'm sorry to pull this request. Because it maybe not be accepted directly. Because 1) It's a quick hacking to make things done. 2) code is formatted differently with other files.
But I still like to make pull, because I just want let people know I did such work and if someone interested, he can make use of it.
So what this change actually do ?
It changes the split layout algorithm to a reasonable grid layout. So when you press meta-E , you can see windows are arranged in a balanced grid. That's it, thanks for the reading.","This change breaks the design aspect in source level, but not break anything in user level.",True,{}
i3/i3,https://github.com/i3/i3,4745,2021-12-24T11:40:31Z,2021-12-24T11:50:43Z,2021-12-24T12:27:28Z,CLOSED,False,519,454,1,https://github.com/neoedmund,change split layout to reasonable grid layout,1,[],https://github.com/i3/i3/pull/4745,https://github.com/Airblader,5,https://github.com/i3/i3/pull/4745#issuecomment-1000815264,"I'm sorry to pull this request. Because it maybe not be accepted directly. Because 1) It's a quick hacking to make things done. 2) code is formatted differently with other files.
But I still like to make pull, because I just want let people know I did such work and if someone interested, he can make use of it.
So what this change actually do ?
It changes the split layout algorithm to a reasonable grid layout. So when you press meta-E , you can see windows are arranged in a balanced grid. That's it, thanks for the reading.","Either way, it is currently unreviewable. As I said, please feel free to open an issue to describe and discuss the change, maybe with some specific examples. Based in your PR description you aren't looking to actually get this merged, though (?)",True,{}
i3/i3,https://github.com/i3/i3,4745,2021-12-24T11:40:31Z,2021-12-24T11:50:43Z,2021-12-24T12:27:28Z,CLOSED,False,519,454,1,https://github.com/neoedmund,change split layout to reasonable grid layout,1,[],https://github.com/i3/i3/pull/4745,https://github.com/neoedmund,6,https://github.com/i3/i3/pull/4745#issuecomment-1000820318,"I'm sorry to pull this request. Because it maybe not be accepted directly. Because 1) It's a quick hacking to make things done. 2) code is formatted differently with other files.
But I still like to make pull, because I just want let people know I did such work and if someone interested, he can make use of it.
So what this change actually do ?
It changes the split layout algorithm to a reasonable grid layout. So when you press meta-E , you can see windows are arranged in a balanced grid. That's it, thanks for the reading.","No, the message is sent and I'm done. I don't care that actually no one see this message except you in the world.
BTW I found i3 recently and like to use it very much, thanks for such good work! I found I wasted so much time to drag and resize the windows in Windows like systems. Aha.",True,{}
i3/i3,https://github.com/i3/i3,4765,2022-01-01T05:28:21Z,,2022-06-02T12:33:25Z,OPEN,False,4,0,2,https://github.com/jtaala,Split container parents should be redrawn when swapping child containers (within parent),5,[],https://github.com/i3/i3/pull/4765,https://github.com/jtaala,1,https://github.com/i3/i3/pull/4765,"This is a proposed simple fix for submitted issue 4764.

adds a con_force_split_parents_redraw(con) function call to the tree_move function when child move is within parent container.
fixes #4764","This is a proposed simple fix for submitted issue 4764.

adds a con_force_split_parents_redraw(con) function call to the tree_move function when child move is within parent container.
fixes #4764",True,{}
i3/i3,https://github.com/i3/i3,4765,2022-01-01T05:28:21Z,,2022-06-02T12:33:25Z,OPEN,False,4,0,2,https://github.com/jtaala,Split container parents should be redrawn when swapping child containers (within parent),5,[],https://github.com/i3/i3/pull/4765,https://github.com/jtaala,2,https://github.com/i3/i3/pull/4765#issuecomment-1004348212,"This is a proposed simple fix for submitted issue 4764.

adds a con_force_split_parents_redraw(con) function call to the tree_move function when child move is within parent container.
fixes #4764",simplified the in-code comment (was way too wordy and not quite accurate).,True,{}
i3/i3,https://github.com/i3/i3,4765,2022-01-01T05:28:21Z,,2022-06-02T12:33:25Z,OPEN,False,4,0,2,https://github.com/jtaala,Split container parents should be redrawn when swapping child containers (within parent),5,[],https://github.com/i3/i3/pull/4765,https://github.com/orestisfl,3,https://github.com/i3/i3/pull/4765#issuecomment-1109058526,"This is a proposed simple fix for submitted issue 4764.

adds a con_force_split_parents_redraw(con) function call to the tree_move function when child move is within parent container.
fixes #4764",LGTM but please include a line for the changelog: https://github.com/i3/i3/blob/next/.github/CONTRIBUTING.md,True,{}
i3/i3,https://github.com/i3/i3,4765,2022-01-01T05:28:21Z,,2022-06-02T12:33:25Z,OPEN,False,4,0,2,https://github.com/jtaala,Split container parents should be redrawn when swapping child containers (within parent),5,[],https://github.com/i3/i3/pull/4765,https://github.com/jtaala,4,https://github.com/i3/i3/pull/4765#issuecomment-1109755034,"This is a proposed simple fix for submitted issue 4764.

adds a con_force_split_parents_redraw(con) function call to the tree_move function when child move is within parent container.
fixes #4764","LGTM but please include a line for the changelog: https://github.com/i3/i3/blob/next/.github/CONTRIBUTING.md

Thanks @orestisfl! have added changelog (bugfix) entry.
Cheers,
Jay.",True,{}
i3/i3,https://github.com/i3/i3,4765,2022-01-01T05:28:21Z,,2022-06-02T12:33:25Z,OPEN,False,4,0,2,https://github.com/jtaala,Split container parents should be redrawn when swapping child containers (within parent),5,[],https://github.com/i3/i3/pull/4765,https://github.com/jtaala,5,https://github.com/i3/i3/pull/4765#issuecomment-1113775548,"This is a proposed simple fix for submitted issue 4764.

adds a con_force_split_parents_redraw(con) function call to the tree_move function when child move is within parent container.
fixes #4764","@orestisfl, thanks for running a build & test - very strange that it failed.
I've checked out that branch and can successfully dist-build on my local machine (with meson .. -Ddocs=true -Dmans=true && ninja -v dist).
As far as I can tell that failure doesn't look like it's from the PR - has anything changed in the i3wm/travis-base:2022-04-30650643 image? (e.g. does the dist-build run successfully with that image in current next branch?).
Let me know if there's anything I can do to help test/debug the current failure.
Jay.",True,{}
i3/i3,https://github.com/i3/i3,4776,2022-01-06T16:06:51Z,,2022-01-06T16:06:51Z,OPEN,False,4,2,1,https://github.com/kjetilho,"highlight the difference of ""workspace N"" and ""workspace number N""",1,[],https://github.com/i3/i3/pull/4776,https://github.com/kjetilho,1,https://github.com/i3/i3/pull/4776,"The fine user's guide suggested a command to dynamically rename workspaces, but after adding it, I was confused that my Mod+4 created a new workspace rather than jumping to my ""4: Emacs"" workspace.
Turns out the default configuration when I started out with i3 had
bindsym $mod1+1 workspace 1

I notice that my Fedora now uses workspace number 1 in its default configuration, so perhaps new users are less likely to experience the same confusion as me.  In any case, please consider whether this change to the docs will clarify usage for others.","The fine user's guide suggested a command to dynamically rename workspaces, but after adding it, I was confused that my Mod+4 created a new workspace rather than jumping to my ""4: Emacs"" workspace.
Turns out the default configuration when I started out with i3 had
bindsym $mod1+1 workspace 1

I notice that my Fedora now uses workspace number 1 in its default configuration, so perhaps new users are less likely to experience the same confusion as me.  In any case, please consider whether this change to the docs will clarify usage for others.",True,{'THUMBS_UP': ['https://github.com/kolayne']}
i3/i3,https://github.com/i3/i3,4794,2022-01-17T11:37:06Z,,2022-04-26T12:54:35Z,OPEN,False,1114,154,25,https://github.com/jtaala,Add reverse layouts (completion of PR 4246),16,[],https://github.com/i3/i3/pull/4794,https://github.com/jtaala,1,https://github.com/i3/i3/pull/4794,"This PR is to complete PR 4246.
Given @wlhlm does not appear to be available to complete his PR, I've taken it upon myself to help finish @wlhlm's great work in an effort to finally have this feature added to i3!
I have:

brought @wlhlm's branch up to date with the latest i3:next;
implemented @orestisfl requested changes (see #4246 (review));
added documentation for all outlined reverse layouts (and fill order), and the extended split, layout, and layout fill_order commands.

Given the hard work and the quality of @wlhlm's work, plus the evident usefulness of the feature - I would liked to request feedback (on the documentation etc.) so we can finally merge this feature into i3:next!","This PR is to complete PR 4246.
Given @wlhlm does not appear to be available to complete his PR, I've taken it upon myself to help finish @wlhlm's great work in an effort to finally have this feature added to i3!
I have:

brought @wlhlm's branch up to date with the latest i3:next;
implemented @orestisfl requested changes (see #4246 (review));
added documentation for all outlined reverse layouts (and fill order), and the extended split, layout, and layout fill_order commands.

Given the hard work and the quality of @wlhlm's work, plus the evident usefulness of the feature - I would liked to request feedback (on the documentation etc.) so we can finally merge this feature into i3:next!",True,"{'HEART': ['https://github.com/PhilG'], 'HOORAY': ['https://github.com/codebling']}"
i3/i3,https://github.com/i3/i3,4794,2022-01-17T11:37:06Z,,2022-04-26T12:54:35Z,OPEN,False,1114,154,25,https://github.com/jtaala,Add reverse layouts (completion of PR 4246),16,[],https://github.com/i3/i3/pull/4794,https://github.com/RayZ0rr,2,https://github.com/i3/i3/pull/4794#issuecomment-1048178177,"This PR is to complete PR 4246.
Given @wlhlm does not appear to be available to complete his PR, I've taken it upon myself to help finish @wlhlm's great work in an effort to finally have this feature added to i3!
I have:

brought @wlhlm's branch up to date with the latest i3:next;
implemented @orestisfl requested changes (see #4246 (review));
added documentation for all outlined reverse layouts (and fill order), and the extended split, layout, and layout fill_order commands.

Given the hard work and the quality of @wlhlm's work, plus the evident usefulness of the feature - I would liked to request feedback (on the documentation etc.) so we can finally merge this feature into i3:next!",Maybe add split none command as mentioned here #3808 to complete the suit 😄,True,{}
i3/i3,https://github.com/i3/i3,4794,2022-01-17T11:37:06Z,,2022-04-26T12:54:35Z,OPEN,False,1114,154,25,https://github.com/jtaala,Add reverse layouts (completion of PR 4246),16,[],https://github.com/i3/i3/pull/4794,https://github.com/jtaala,3,https://github.com/i3/i3/pull/4794#issuecomment-1048230109,"This PR is to complete PR 4246.
Given @wlhlm does not appear to be available to complete his PR, I've taken it upon myself to help finish @wlhlm's great work in an effort to finally have this feature added to i3!
I have:

brought @wlhlm's branch up to date with the latest i3:next;
implemented @orestisfl requested changes (see #4246 (review));
added documentation for all outlined reverse layouts (and fill order), and the extended split, layout, and layout fill_order commands.

Given the hard work and the quality of @wlhlm's work, plus the evident usefulness of the feature - I would liked to request feedback (on the documentation etc.) so we can finally merge this feature into i3:next!","Maybe add split none command as mentioned here #3808 to complete the suit smile

That functionality is not related to this PR (unless I'm missing something) - not sure why we would add that functionality to this PR.  A PRs scope should be narrow btw (e.g. not add unrelated functionality etc).",True,{}
i3/i3,https://github.com/i3/i3,4794,2022-01-17T11:37:06Z,,2022-04-26T12:54:35Z,OPEN,False,1114,154,25,https://github.com/jtaala,Add reverse layouts (completion of PR 4246),16,[],https://github.com/i3/i3/pull/4794,https://github.com/RayZ0rr,4,https://github.com/i3/i3/pull/4794#issuecomment-1053649410,"This PR is to complete PR 4246.
Given @wlhlm does not appear to be available to complete his PR, I've taken it upon myself to help finish @wlhlm's great work in an effort to finally have this feature added to i3!
I have:

brought @wlhlm's branch up to date with the latest i3:next;
implemented @orestisfl requested changes (see #4246 (review));
added documentation for all outlined reverse layouts (and fill order), and the extended split, layout, and layout fill_order commands.

Given the hard work and the quality of @wlhlm's work, plus the evident usefulness of the feature - I would liked to request feedback (on the documentation etc.) so we can finally merge this feature into i3:next!","Maybe add split none command as mentioned here #3808 to complete the suit smile

That functionality is not related to this PR (unless I'm missing something) - not sure why we would add that functionality to this PR. A PRs scope should be narrow btw (e.g. not add unrelated functionality etc).

Yes, you are right. It's not right to mix it with this PR",True,{}
i3/i3,https://github.com/i3/i3,4795,2022-01-17T15:21:43Z,2022-01-18T13:41:29Z,2022-01-18T17:35:02Z,CLOSED,False,3,0,1,https://github.com/jwhendy,Minor doc tweak to coach user after screen layout changes,1,[],https://github.com/i3/i3/pull/4795,https://github.com/jwhendy,1,https://github.com/i3/i3/pull/4795,"Initial attempt to add some language re. discussion #4784 .
@Airblader , following all the discussion, I was torn on modifying the section on reloading/restarting (with the goal that all users should refer to that one location on what to do)... or adding a note to 4.20 itself.
I went with the latter, as there was precedent for advising a reload in another section on screens, and if I saw note that relaunching might be necessary after layout changes, that would have been all I needed. Open to input if you prefer something else.","Initial attempt to add some language re. discussion #4784 .
@Airblader , following all the discussion, I was torn on modifying the section on reloading/restarting (with the goal that all users should refer to that one location on what to do)... or adding a note to 4.20 itself.
I went with the latter, as there was precedent for advising a reload in another section on screens, and if I saw note that relaunching might be necessary after layout changes, that would have been all I needed. Open to input if you prefer something else.",True,{}
i3/i3,https://github.com/i3/i3,4795,2022-01-17T15:21:43Z,2022-01-18T13:41:29Z,2022-01-18T17:35:02Z,CLOSED,False,3,0,1,https://github.com/jwhendy,Minor doc tweak to coach user after screen layout changes,1,[],https://github.com/i3/i3/pull/4795,https://github.com/jwhendy,2,https://github.com/i3/i3/pull/4795#issuecomment-1014979378,"Initial attempt to add some language re. discussion #4784 .
@Airblader , following all the discussion, I was torn on modifying the section on reloading/restarting (with the goal that all users should refer to that one location on what to do)... or adding a note to 4.20 itself.
I went with the latter, as there was precedent for advising a reload in another section on screens, and if I saw note that relaunching might be necessary after layout changes, that would have been all I needed. Open to input if you prefer something else.","Why does your change refer to ""layouts"" when it's in the ""workspace assignment"" section?

Probably because I still haven't wrapped my mind around the canonical terminology used. By ""layout"" I mean ""the screen on which my workspaces are located in the physical world."" I was trying to clarify how to apply changes to these locations.

In which case would you need an actual restart? I'd consider that a bug unless if I am missing something

Take a look at the referenced issue (this comment and this one).
Restating my understanding of @Airblader , if the workspace(s) already exist and you change the assigned screen via the config, they will not move upon reload or restart, only when they are created.

All changes in the configuration file take effect after a reload. The userguide is clear enough* about this, why do we need to explicitly mention this here?

This was also covered in the referenced issue, but I will repeat the flow of things:

I changed the config and did mod+shift+r with no effect
after re-checking the manual and config several times, I found that exit + startx worked
I proposed that the docs could mention this
I was told that exiting wasn't necessary, only reload, with the caveat in @Airblader 's first answer (which I didn't parse at the time)
I revisited the docs finding that restart encompasses reload, and was again confused because I'd done something more extreme
after another round of comments I properly understood that because ws1 and ws2 already existed, indeed an exit + startx was necessary (because location will only change upon creation)
there's precedent for telling the user to apply changes, even though I completely get the goal of only saying this once generally and never saying it again (I also said this in the linked issue). From Sec 5.3, which shouldn't be necessary, as the user already knows that all changes are applied/refreshed upon reload, as stated in 2.9 and 6.20:


The mode option can be changed during runtime through the bar mode command. On reload the mode will be reverted to its configured value.


the docs don't clarify what method (reload, restart, or exit + startx) is required when, and my understanding from here is that the approach was more or less ""just keep doing more extreme things until something works"" to avoid going on at length about it. I used the same approach in my proposed language, avoiding lengthy detail in favor of ""if x doesn't work, do y.""


*a quick statement could be written in the first paragraph of the 4th section as a minor improvement

This?


Configuring i3


I'm not sure what you're defining as a paragraph, but in reading the first entities with line breaks between them, I don't know where a quick statement would make sense.

tl;dr: this is just trying to add a very small note about this edge case in the relevant section. I had ws1 on my primary external monitor, ws2 on my laptop and wanted to reverse them. Adding this + restart didn't work:
### these were already in config; adding for context
set $ws1 ""1""
set $ws2 ""2""

### added these to get ws1 on left and ws2 on right, matching the physical world
workspace $ws1 output DP-6
workspace $ws2 output DP-0.1

If you think the manual lays out that exit + restart is needed here, please close. For my counterpoint: I ate up a lot of @Airblader 's time on a nuance that was obvious to him, but not to me. The resistance seems about adding a sentence to the documentation. One sentence in exchange for saving your future selves from one future me seems like a win.
You can also pick the sentence, the right terminology, and its location. I was just trying to do something to get the ball rolling and help out.",True,{}
i3/i3,https://github.com/i3/i3,4795,2022-01-17T15:21:43Z,2022-01-18T13:41:29Z,2022-01-18T17:35:02Z,CLOSED,False,3,0,1,https://github.com/jwhendy,Minor doc tweak to coach user after screen layout changes,1,[],https://github.com/i3/i3/pull/4795,https://github.com/Airblader,3,https://github.com/i3/i3/pull/4795#issuecomment-1015184478,"Initial attempt to add some language re. discussion #4784 .
@Airblader , following all the discussion, I was torn on modifying the section on reloading/restarting (with the goal that all users should refer to that one location on what to do)... or adding a note to 4.20 itself.
I went with the latter, as there was precedent for advising a reload in another section on screens, and if I saw note that relaunching might be necessary after layout changes, that would have been all I needed. Open to input if you prefer something else.","The resistance seems about adding a sentence to the documentation.

It's not, but we need to make sure that it is appropriate in its context. Too much text can be an issue in itself. ""Reload your config for changes to apply"" is not specific to this section, and for obvious reasons we don't want to add that to every section.
The problem here is not that the config needs to be reloaded in any way – rather this is about the fact that workspace assignments are only evaluated when a workspace is being created. That's the fact we should document.

You can also pick the sentence, the right terminology, and its location.

How about something like ""Note that workspace assignments are only evaluated when a new workspace is created, but not for existing workspaces.""?",True,{}
i3/i3,https://github.com/i3/i3,4795,2022-01-17T15:21:43Z,2022-01-18T13:41:29Z,2022-01-18T17:35:02Z,CLOSED,False,3,0,1,https://github.com/jwhendy,Minor doc tweak to coach user after screen layout changes,1,[],https://github.com/i3/i3/pull/4795,https://github.com/orestisfl,4,https://github.com/i3/i3/pull/4795#issuecomment-1015197699,"Initial attempt to add some language re. discussion #4784 .
@Airblader , following all the discussion, I was torn on modifying the section on reloading/restarting (with the goal that all users should refer to that one location on what to do)... or adding a note to 4.20 itself.
I went with the latter, as there was precedent for advising a reload in another section on screens, and if I saw note that relaunching might be necessary after layout changes, that would have been all I needed. Open to input if you prefer something else.","Note that workspace assignments are only evaluated when a new workspace is created, but not for existing workspaces.

If we append "", even upon +reload+ and +restart+.""
Would that also be correct?",True,{}
i3/i3,https://github.com/i3/i3,4795,2022-01-17T15:21:43Z,2022-01-18T13:41:29Z,2022-01-18T17:35:02Z,CLOSED,False,3,0,1,https://github.com/jwhendy,Minor doc tweak to coach user after screen layout changes,1,[],https://github.com/i3/i3/pull/4795,https://github.com/jwhendy,5,https://github.com/i3/i3/pull/4795#issuecomment-1015395287,"Initial attempt to add some language re. discussion #4784 .
@Airblader , following all the discussion, I was torn on modifying the section on reloading/restarting (with the goal that all users should refer to that one location on what to do)... or adding a note to 4.20 itself.
I went with the latter, as there was precedent for advising a reload in another section on screens, and if I saw note that relaunching might be necessary after layout changes, that would have been all I needed. Open to input if you prefer something else.","It's not, but we need to make sure that it is appropriate in its context. Too much text can be an issue in itself. ""Reload your config for changes to apply"" is not specific to this section, and for obvious reasons we don't want to add that to every section.

Indeed, I threw that in for generality's sake as ""the normal thing to do,"" with the note about exiting as the real differentiator.
Ignoring that, this is specific to the section, no? What other sections entail a change in which reload or restart don't work?
Exiting is mentioned in 2.10  and 6.20, with nothing said about the utility of exiting/restarting, just how to do it.

How about something like ""Note that workspace assignments are only evaluated when a new workspace is created, but not for existing workspaces.""?

I think one could add @orestisfl 's suggestion for further clarification, though this still leaves the user to connect the dots: ""Hmm. Why mention workspace creation here? What are they trying to tell me? Oh! From section a.b and x.y, and c.d, I now see that workspace creation only occurs on startup or moving to a new workspace! Got it, I need to exit!""
Except, I ctrl+f'd the userguide for ""create"" and don't see any clarification that reload and restart don't [re-]create workspaces. Thus, I'm not sure if this sentence will trigger the user to know ""applying this change is different from applying other changes.""
In my opinion, this isn't sufficient to connect these dots:

You can also restart i3 inplace with the restart command to get it out of some weird state (if that should ever happen) or to perform an upgrade without having to restart your X session.

It doesn't seem intuitive that the results of ""restart i3 inplace"" do not match the behavior of ""starting i3"".
To continue brainstorming, here's a change to my sentence, where I was attempting to be more direct about the required action for this fringe case (with ending parenthetical optional if you'd like to explain the reason):

To apply workspace assignment changes to existing workspaces, you must exit and re-launch i3 (assignments are only evaluated upon workspace creation, and +reload+/+restart+ do not recreate existing workspaces).

?",True,{}
i3/i3,https://github.com/i3/i3,4795,2022-01-17T15:21:43Z,2022-01-18T13:41:29Z,2022-01-18T17:35:02Z,CLOSED,False,3,0,1,https://github.com/jwhendy,Minor doc tweak to coach user after screen layout changes,1,[],https://github.com/i3/i3/pull/4795,https://github.com/Airblader,6,https://github.com/i3/i3/pull/4795#issuecomment-1015414316,"Initial attempt to add some language re. discussion #4784 .
@Airblader , following all the discussion, I was torn on modifying the section on reloading/restarting (with the goal that all users should refer to that one location on what to do)... or adding a note to 4.20 itself.
I went with the latter, as there was precedent for advising a reload in another section on screens, and if I saw note that relaunching might be necessary after layout changes, that would have been all I needed. Open to input if you prefer something else.","There's a few things that are being consistently repeated, so I will clear them up one more (and one final) time.

What other sections entail a change in which reload or restart don't work?

reload does work. The command doesn't randomly decide that the particular change you made to the configuration isn't worth applying; the updated configuration will be in i3's memory afterwards. The problem is rather your expectation of how assign works.
reload will not re-execute any rules that have been executed already. restart will not re-execute any exec directives, reload will not re-execute any exec_always directives.

""[…] Got it, I need to exit!""

This conclusion is incorrect, as stated in the original Discussion. You need to (re-)create the workspace. Exiting entirely out of i3 is one way of achieving that, not the (or the only) way.

The documentation of reload / restart is relatively sparse, to say the least, and certainly warrants going into more detail on the expectation of what those commands do.
I don't think there's any reasonable ambiguity on what ""creating a workspace"" means as this is covered in the userguide. And if it isn't clear enough, that is what warrants fixing. I've been supporting users for some seven years now, and cannot recall anyone ever not understanding what ""create a workspace"" means. So at the very least I'd claim this is not a common problem.
Explaining how workspaces work in the documentation for assign is the wrong place and just fights a symptom of insufficient explanation elsewhere. There's nothing wrong with users having to connect some dots, in fact I would very much expect that. The userguide has to strike a balance of being detailed enough to cover all relevant things, but concise enough to not fill a book.
All that said, this discussion is unnecessarily bloated in my opinion. If it is one sentence, uses the right terminology and is factually correct, I don't care too much about the exact sentence.",True,{}
i3/i3,https://github.com/i3/i3,4795,2022-01-17T15:21:43Z,2022-01-18T13:41:29Z,2022-01-18T17:35:02Z,CLOSED,False,3,0,1,https://github.com/jwhendy,Minor doc tweak to coach user after screen layout changes,1,[],https://github.com/i3/i3/pull/4795,https://github.com/jwhendy,7,https://github.com/i3/i3/pull/4795#issuecomment-1015423136,"Initial attempt to add some language re. discussion #4784 .
@Airblader , following all the discussion, I was torn on modifying the section on reloading/restarting (with the goal that all users should refer to that one location on what to do)... or adding a note to 4.20 itself.
I went with the latter, as there was precedent for advising a reload in another section on screens, and if I saw note that relaunching might be necessary after layout changes, that would have been all I needed. Open to input if you prefer something else.","reload does work. The command doesn't randomly decide that the particular change you made to the configuration isn't worth applying; the updated configuration will be in i3's memory afterwards. The problem is rather your expectation of how assign works.

I didn't say it was random. I thought it would be obvious that ""doesn't work"" was purely in the context of what we've been discussing all along: ""I want to change where my workspaces are. They exist. The typical mechanisms for applying changes don't work here.""
The point here isn't what you as a maintainer can tell me about i3 and how my understanding is flawed. The documentation is your liaison to the outside world, so all you need to do is quote it or point me to section numbers that clarify the things you're saying:

""The problem is rather your expectation of how assign works.""
""reload will not re-execute any rules that have been executed already. restart will not re-execute any exec directives, reload will not re-execute any exec_always directives.""
""This conclusion is incorrect, as stated in the original Discussion. You need to (re-)create the workspace. Exiting entirely out of i3 is one way of achieving that, not the (or the only) way.""

You know these things; point out where I could have known these things.

I've been supporting users for some seven years now, and cannot recall anyone ever not understanding what ""create a workspace"" means.

In what context would it have been confusing? mod+shift+num JustWorks. Starting i3 and auto-assigning to the monitors that physically exist JustWorks. Trying to get the auto-assigned workspaces to change where they are [edit: those that by default exist after starting i3, after editing the config, with the mechanisms the manual says apply changes]... doesn't work.",True,{}
i3/i3,https://github.com/i3/i3,4795,2022-01-17T15:21:43Z,2022-01-18T13:41:29Z,2022-01-18T17:35:02Z,CLOSED,False,3,0,1,https://github.com/jwhendy,Minor doc tweak to coach user after screen layout changes,1,[],https://github.com/i3/i3/pull/4795,https://github.com/Airblader,8,https://github.com/i3/i3/pull/4795#issuecomment-1015426682,"Initial attempt to add some language re. discussion #4784 .
@Airblader , following all the discussion, I was torn on modifying the section on reloading/restarting (with the goal that all users should refer to that one location on what to do)... or adding a note to 4.20 itself.
I went with the latter, as there was precedent for advising a reload in another section on screens, and if I saw note that relaunching might be necessary after layout changes, that would have been all I needed. Open to input if you prefer something else.","""The problem is rather your expectation of how assign works.""

This is not currently stated in the userguide, which is exactly why I made my above suggestion of the sentence to add here.

""reload will not re-execute any rules that have been executed already. restart will not re-execute any exec directives, reload will not re-execute any exec_always directives.""


exec commands will not run when restarting i3, if you need a command to run also when restarting i3 you should use the exec_always keyword.
– https://i3wm.org/docs/userguide.html#_automatically_starting_applications_on_i3_startup",True,{}
i3/i3,https://github.com/i3/i3,4795,2022-01-17T15:21:43Z,2022-01-18T13:41:29Z,2022-01-18T17:35:02Z,CLOSED,False,3,0,1,https://github.com/jwhendy,Minor doc tweak to coach user after screen layout changes,1,[],https://github.com/i3/i3/pull/4795,https://github.com/jwhendy,9,https://github.com/i3/i3/pull/4795#issuecomment-1015586348,"Initial attempt to add some language re. discussion #4784 .
@Airblader , following all the discussion, I was torn on modifying the section on reloading/restarting (with the goal that all users should refer to that one location on what to do)... or adding a note to 4.20 itself.
I went with the latter, as there was precedent for advising a reload in another section on screens, and if I saw note that relaunching might be necessary after layout changes, that would have been all I needed. Open to input if you prefer something else.","All that said, this discussion is unnecessarily bloated in my opinion.

I'm sure we both feel this way.

This is not currently stated in the userguide, which is exactly why I made my above suggestion of the sentence to add here.

But your proposed sentence only says that workspace assignments are only evaluated upon workspace creation. Namely this also needs to be covered, which you chose not to respond to via a quote from the manual:

This conclusion is incorrect, as stated in the original Discussion. You need to (re-)create the workspace. Exiting entirely out of i3 is one way of achieving that, not the (or the only) way.

Where is the behavior of restart/reload with respect workspace [re]creation stated, and where are the methods listed which [re]create workspaces (other than starting i3)?

If it is one sentence, uses the right terminology and is factually correct, I don't care too much about the exact sentence.

Did my proposed sentence not accomplish this, combining the needed pieces of information (in content/sentiment, fully open to whatever word tweaks/phrasing/re-ordering of concepts are desired)?

To apply workspace assignment changes to existing workspaces, you must exit and re-launch i3 (assignments are only evaluated upon workspace creation, and +reload+/+restart+ do not recreate existing workspaces).

So far, this has been guess and check. If I say reloading doesn't work (obviously meant in the context of this situation), I'm told it does work (but you mean ""generally speaking,"" which isn't what we're talking about). If I say the user needs to exit, I'm told this is clearly false and the user just needs to ""recreate the workspace""... but without citing where the manual says how to do this, and without elaborating on the many additional ways this can be accomplished (and are these in the manual?).
P.S. and by ""not the only way,"" is there really a better/easier way you'd propose, or is this a point being made purely as an academic exercise, like including things like kill i3_pid, kill X entirely, reboot, ...",True,{}
i3/i3,https://github.com/i3/i3,4795,2022-01-17T15:21:43Z,2022-01-18T13:41:29Z,2022-01-18T17:35:02Z,CLOSED,False,3,0,1,https://github.com/jwhendy,Minor doc tweak to coach user after screen layout changes,1,[],https://github.com/i3/i3/pull/4795,https://github.com/jwhendy,10,https://github.com/i3/i3/pull/4795#issuecomment-1015627441,"Initial attempt to add some language re. discussion #4784 .
@Airblader , following all the discussion, I was torn on modifying the section on reloading/restarting (with the goal that all users should refer to that one location on what to do)... or adding a note to 4.20 itself.
I went with the latter, as there was precedent for advising a reload in another section on screens, and if I saw note that relaunching might be necessary after layout changes, that would have been all I needed. Open to input if you prefer something else.","Probably foolish to add more words at this point, but I want to say: I set out to look for a suggestion on getting my workspace assignments to match my monitor arrangement, adding as a side comment that I ran into a hiccup in applying this change.
I've clearly frustrated and annoyed you (perhaps the both of you) but it was never my intention. Despite trying to be thorough, I made several inadvertent phrasing mistakes out of both ignorance and haste, which became a source of confusion. I apologize for not being more grounded/researched on i3 terminology in order to effectively communicate with you.
I also felt that despite my best efforts to explain the slight opportunity for improvement in the docs, the main responses felt like ""you're just doing it wrong,"" ""this is obvious,"" ""the manual is perfectly clear,"" etc. Basically ""there is no problem, just your mind.""
In revisiting the very first response in the original discussion which you feel you are ""consistently repeating,"" when I said the docs could mention that exiting is necessary, this was the response:

Me: Request: could the docs be updated to clarify that a logout/startx cycle appears to be needed? I refreshed i3 after adding the above, restarted i3, and saw no changes. After exiting and running startx again, the change was indeed applied.


Airblader: That wouldn't be accurate. :-) i3 reload should suffice – however, this only applies to when a workspace is created, not retroactively to existing workspaces.

In other words, it was accurate all along, as reload doesn't suffice; everything after the ""however..."" precisely covers this [fringe] situation. I'd also explained that ws1 and ws2 were on respective monitors and this was about swapping their location, so it was clear that this involved moving existing workspaces.
Again, I doubt anything can be of much help at this point, but it confuses me to try and understand why this went sideways. I don't want to upset anyone and tried to maintain polite enthusiasm toward trying to be helpful in some way. I also felt beaten down more and more by these patterns and gave way to argumentative responses. I wish this had gone differently, and apologize for my part in wasting your time and frustrating you.
Thanks and good luck on the project, I really enjoy using i3.",True,{}
i3/i3,https://github.com/i3/i3,4795,2022-01-17T15:21:43Z,2022-01-18T13:41:29Z,2022-01-18T17:35:02Z,CLOSED,False,3,0,1,https://github.com/jwhendy,Minor doc tweak to coach user after screen layout changes,1,[],https://github.com/i3/i3/pull/4795,https://github.com/Airblader,11,https://github.com/i3/i3/pull/4795#issuecomment-1015641575,"Initial attempt to add some language re. discussion #4784 .
@Airblader , following all the discussion, I was torn on modifying the section on reloading/restarting (with the goal that all users should refer to that one location on what to do)... or adding a note to 4.20 itself.
I went with the latter, as there was precedent for advising a reload in another section on screens, and if I saw note that relaunching might be necessary after layout changes, that would have been all I needed. Open to input if you prefer something else.","I apologize in advance if this sounds a bit harsh, but you already closed the PR and deleted your branch. I think this has been discussed in all necessary detail, or at the very least to the amount of time invested I'm willing to invest. There are no hurt feelings on my side either way, and I'm glad you enjoy using i3!",True,{'HEART': ['https://github.com/jwhendy']}
i3/i3,https://github.com/i3/i3,4795,2022-01-17T15:21:43Z,2022-01-18T13:41:29Z,2022-01-18T17:35:02Z,CLOSED,False,3,0,1,https://github.com/jwhendy,Minor doc tweak to coach user after screen layout changes,1,[],https://github.com/i3/i3/pull/4795,https://github.com/jwhendy,12,https://github.com/i3/i3/pull/4795#issuecomment-1015651489,"Initial attempt to add some language re. discussion #4784 .
@Airblader , following all the discussion, I was torn on modifying the section on reloading/restarting (with the goal that all users should refer to that one location on what to do)... or adding a note to 4.20 itself.
I went with the latter, as there was precedent for advising a reload in another section on screens, and if I saw note that relaunching might be necessary after layout changes, that would have been all I needed. Open to input if you prefer something else.","Not harsh at all, and none is meant in my reasoning: it didn't seem I'd gotten it right, and we spent more time discussing revisions to my attempt than it would have taken for either of you to write the sentence that made the most sense to you.
Thanks for the kind response and I will continue to enjoy i3 indeed :)",True,{}
i3/i3,https://github.com/i3/i3,4829,2022-02-01T21:05:37Z,2022-02-02T10:24:05Z,2022-02-02T13:29:59Z,CLOSED,False,6,1,1,https://github.com/kolayne,Ignore stickiness for fullscreen windows,1,[],https://github.com/i3/i3/pull/4829,https://github.com/kolayne,1,https://github.com/i3/i3/pull/4829,"Hello!
I encountered behavior that I myself considered an issue: I was watching a movie in a (floating fullscreen) video player and wanted to switch to another workspace for a minute, so I exited fullscreen, made the window sticky, and switch to another workspace. Then I went back, put it back to fullscreen, and kept watching. A little later when I needed to switch to another workspace again just for a moment, I decided not to leave fullscreen mode but just do my stuff quickly and then go back. However, as it was floating, sticky and fullscreen at the same time, I couldn't see any other windows.
I thought it would be more convenient to ignore stickiness for windows that are fullscreen and made a patch for myself to achieve this.
I apologize for not creating an issue first, as described in the contributing guideline, but I have written this patch for myself, and I am only creating the PR in case you need it as well. So, if you consider this an expected behavior, I am sorry for taking your time.","Hello!
I encountered behavior that I myself considered an issue: I was watching a movie in a (floating fullscreen) video player and wanted to switch to another workspace for a minute, so I exited fullscreen, made the window sticky, and switch to another workspace. Then I went back, put it back to fullscreen, and kept watching. A little later when I needed to switch to another workspace again just for a moment, I decided not to leave fullscreen mode but just do my stuff quickly and then go back. However, as it was floating, sticky and fullscreen at the same time, I couldn't see any other windows.
I thought it would be more convenient to ignore stickiness for windows that are fullscreen and made a patch for myself to achieve this.
I apologize for not creating an issue first, as described in the contributing guideline, but I have written this patch for myself, and I am only creating the PR in case you need it as well. So, if you consider this an expected behavior, I am sorry for taking your time.",True,{}
i3/i3,https://github.com/i3/i3,4829,2022-02-01T21:05:37Z,2022-02-02T10:24:05Z,2022-02-02T13:29:59Z,CLOSED,False,6,1,1,https://github.com/kolayne,Ignore stickiness for fullscreen windows,1,[],https://github.com/i3/i3/pull/4829,https://github.com/Airblader,2,https://github.com/i3/i3/pull/4829#issuecomment-1027788021,"Hello!
I encountered behavior that I myself considered an issue: I was watching a movie in a (floating fullscreen) video player and wanted to switch to another workspace for a minute, so I exited fullscreen, made the window sticky, and switch to another workspace. Then I went back, put it back to fullscreen, and kept watching. A little later when I needed to switch to another workspace again just for a moment, I decided not to leave fullscreen mode but just do my stuff quickly and then go back. However, as it was floating, sticky and fullscreen at the same time, I couldn't see any other windows.
I thought it would be more convenient to ignore stickiness for windows that are fullscreen and made a patch for myself to achieve this.
I apologize for not creating an issue first, as described in the contributing guideline, but I have written this patch for myself, and I am only creating the PR in case you need it as well. So, if you consider this an expected behavior, I am sorry for taking your time.","Thanks for taking the time to open the PR. I don't recall every explicitly discussing the sticky semantics during fullscreen, but it's the behavior we have now, so changing it should happen only with a good enough reason. My initial thought here is that this isn't worth changing – but even if we would change it, we'd have to approach it from a different angle as your patch will simply ignore the stickiness of the container, but not actually disable the stickiness on EWMH level, which is incorrect.
I'll close this for now since it seems like you aren't looking to discuss or rework the patch anyway. If you are, please open an issue for it. Thanks!",True,{}
i3/i3,https://github.com/i3/i3,4829,2022-02-01T21:05:37Z,2022-02-02T10:24:05Z,2022-02-02T13:29:59Z,CLOSED,False,6,1,1,https://github.com/kolayne,Ignore stickiness for fullscreen windows,1,[],https://github.com/i3/i3/pull/4829,https://github.com/kolayne,3,https://github.com/i3/i3/pull/4829#issuecomment-1027942619,"Hello!
I encountered behavior that I myself considered an issue: I was watching a movie in a (floating fullscreen) video player and wanted to switch to another workspace for a minute, so I exited fullscreen, made the window sticky, and switch to another workspace. Then I went back, put it back to fullscreen, and kept watching. A little later when I needed to switch to another workspace again just for a moment, I decided not to leave fullscreen mode but just do my stuff quickly and then go back. However, as it was floating, sticky and fullscreen at the same time, I couldn't see any other windows.
I thought it would be more convenient to ignore stickiness for windows that are fullscreen and made a patch for myself to achieve this.
I apologize for not creating an issue first, as described in the contributing guideline, but I have written this patch for myself, and I am only creating the PR in case you need it as well. So, if you consider this an expected behavior, I am sorry for taking your time.","your patch will simply ignore the stickiness of the container, but not actually disable the stickiness on EWMH level, which is incorrect

I agree, this doesn't seem right. Also, after having a closer look, I've found another problem with the patch, which is the windows won't be rendered correctly if a sticky fullscreen window exits fullscreen while being on another workspace.
I will probably fix these issues in my version. Thank you for pointing out!",True,{}
i3/i3,https://github.com/i3/i3,4843,2022-02-07T12:11:13Z,2022-02-07T16:43:55Z,2022-02-07T16:43:55Z,MERGED,True,14,2,3,https://github.com/errge,Use proper WM_Sx registration for i3,1,[],https://github.com/i3/i3/pull/4843,https://github.com/errge,1,https://github.com/i3/i3/pull/4843,"i3's WM ownership is registered with the X Atom WM_S_S0 (for screen0),
instead of the correct WM_S0.  The relevant xcb-util API didn't
change, this is simply a bug in i3 that has always been there:
https://gitlab.freedesktop.org/xorg/lib/libxcb-util/-/blob/0.4.0/src/atoms.c#L65","i3's WM ownership is registered with the X Atom WM_S_S0 (for screen0),
instead of the correct WM_S0.  The relevant xcb-util API didn't
change, this is simply a bug in i3 that has always been there:
https://gitlab.freedesktop.org/xorg/lib/libxcb-util/-/blob/0.4.0/src/atoms.c#L65",True,{}
i3/i3,https://github.com/i3/i3,4843,2022-02-07T12:11:13Z,2022-02-07T16:43:55Z,2022-02-07T16:43:55Z,MERGED,True,14,2,3,https://github.com/errge,Use proper WM_Sx registration for i3,1,[],https://github.com/i3/i3/pull/4843,https://github.com/psychon,2,https://github.com/i3/i3/pull/4843#issuecomment-1031652090,"i3's WM ownership is registered with the X Atom WM_S_S0 (for screen0),
instead of the correct WM_S0.  The relevant xcb-util API didn't
change, this is simply a bug in i3 that has always been there:
https://gitlab.freedesktop.org/xorg/lib/libxcb-util/-/blob/0.4.0/src/atoms.c#L65","https://github.com/awesomeWM/awesome/blob/2d6244f9445ffa22c8d53b3e4b4641e0e5bb6170/awesome.c#L288 🙈
The change looks reasonable to me. The link to the implementation in atoms.c is all the convincing that I need. But since @Airblader asked for more (at least I feel like it): https://tronche.com/gui/x/icccm/sec-4.html#s-4.3 definitely says:

For each screen they manage, window managers will acquire ownership of a selection named WM_Sn, where n is the screen number,",True,{}
i3/i3,https://github.com/i3/i3,4843,2022-02-07T12:11:13Z,2022-02-07T16:43:55Z,2022-02-07T16:43:55Z,MERGED,True,14,2,3,https://github.com/errge,Use proper WM_Sx registration for i3,1,[],https://github.com/i3/i3/pull/4843,https://github.com/errge,3,https://github.com/i3/i3/pull/4843#issuecomment-1031671106,"i3's WM ownership is registered with the X Atom WM_S_S0 (for screen0),
instead of the correct WM_S0.  The relevant xcb-util API didn't
change, this is simply a bug in i3 that has always been there:
https://gitlab.freedesktop.org/xorg/lib/libxcb-util/-/blob/0.4.0/src/atoms.c#L65","@psychon interesting that this was already broken in awesome, I didn't think of you simply getting the code from there and checking what's up with them.  I don't personally use awesome, so I have little interest in fixing that myself, but thank you for pinging them with the bug report!
You are right about referencing ICCCM: the docs definitely say WM_Sx.  One more data point as a proof: I originally started debugging this, because xfce4-panel had a startup delay with a warning saying ""waiting for WM"", and the debugging led me here.  Once I fixed the i3, the xfce4-panel delay went away, so I'm quite sure, WM_Sx is the correct one.
To be fair, not registering your WM, doesn't cause too much harm, the worst I saw was startup delay in different parts of the desktop, but once booted, everything worked correctly.  This might be the reason, why people don't notice this bug neither in awesome, nor in i3.",True,{}
i3/i3,https://github.com/i3/i3,4843,2022-02-07T12:11:13Z,2022-02-07T16:43:55Z,2022-02-07T16:43:55Z,MERGED,True,14,2,3,https://github.com/errge,Use proper WM_Sx registration for i3,1,[],https://github.com/i3/i3/pull/4843,https://github.com/Airblader,4,https://github.com/i3/i3/pull/4843#issuecomment-1031678726,"i3's WM ownership is registered with the X Atom WM_S_S0 (for screen0),
instead of the correct WM_S0.  The relevant xcb-util API didn't
change, this is simply a bug in i3 that has always been there:
https://gitlab.freedesktop.org/xorg/lib/libxcb-util/-/blob/0.4.0/src/atoms.c#L65","But since @Airblader asked for more (at least I feel like it)

I was actually just worried that this seemed so trivial that I must be missing something. :-D Thanks for confirming!",True,{}
i3/i3,https://github.com/i3/i3,4845,2022-02-07T16:52:00Z,2022-02-10T09:25:21Z,2022-02-10T09:25:25Z,MERGED,True,7,9,2,https://github.com/Airblader,Remove Xlib references,2,[],https://github.com/i3/i3/pull/4845,https://github.com/Airblader,1,https://github.com/i3/i3/pull/4845,,,True,{}
i3/i3,https://github.com/i3/i3,4936,2022-03-28T03:48:17Z,2022-03-28T08:14:53Z,2022-03-28T08:14:53Z,MERGED,True,2,2,2,https://github.com/takelley1,Fix typo in comment,2,[],https://github.com/i3/i3/pull/4936,https://github.com/takelley1,1,https://github.com/i3/i3/pull/4936,,,True,{}
i3/i3,https://github.com/i3/i3,4936,2022-03-28T03:48:17Z,2022-03-28T08:14:53Z,2022-03-28T08:14:53Z,MERGED,True,2,2,2,https://github.com/takelley1,Fix typo in comment,2,[],https://github.com/i3/i3/pull/4936,https://github.com/Airblader,2,https://github.com/i3/i3/pull/4936#issuecomment-1080335147,,Thanks!,True,{}
i3/i3,https://github.com/i3/i3,4943,2022-04-08T02:18:34Z,2022-04-08T04:44:20Z,2022-04-08T04:54:48Z,CLOSED,False,3,1,2,https://github.com/berbiche,"Float WM_WINDOW_TYPE ""_KDE_NEXT_WM_WINDOW_TYPE_OVERRIDE"" for bad software",1,[],https://github.com/i3/i3/pull/4943,https://github.com/berbiche,1,https://github.com/i3/i3/pull/4943,"Zoom (a very popular videoconferencing app) shows popups messages like ""X started screensharing"" etc. without using any EWMH hints, WM_TRANSIENT or ""override-redirect"" behavior.
The only distinguishing property set on Zoom's popup windows is _NET_WM_WINDOW_TYPE with a proprietary _KDE_NET_WM_WINDOW_TYPE_OVERRIDE set.
Without this patch, Zoom popups show up as regular windows.
These windows can be incredibly overwhelming at times, opening 3 or more windows in an instant, disturbing work.
This PR resolves this issue for all people stuck with Zoom (probably a lot of school students).
The alternative to this simple patch is to use a for_window rule that matches all Zoom windows.
This reddit post has additional context: https://old.reddit.com/r/i3wm/comments/mcwpur/how_do_i_make_zoom_notification_popups_floating/
edit: tested on release 4.20.1 + this patch, on NixOS 22.05.","Zoom (a very popular videoconferencing app) shows popups messages like ""X started screensharing"" etc. without using any EWMH hints, WM_TRANSIENT or ""override-redirect"" behavior.
The only distinguishing property set on Zoom's popup windows is _NET_WM_WINDOW_TYPE with a proprietary _KDE_NET_WM_WINDOW_TYPE_OVERRIDE set.
Without this patch, Zoom popups show up as regular windows.
These windows can be incredibly overwhelming at times, opening 3 or more windows in an instant, disturbing work.
This PR resolves this issue for all people stuck with Zoom (probably a lot of school students).
The alternative to this simple patch is to use a for_window rule that matches all Zoom windows.
This reddit post has additional context: https://old.reddit.com/r/i3wm/comments/mcwpur/how_do_i_make_zoom_notification_popups_floating/
edit: tested on release 4.20.1 + this patch, on NixOS 22.05.",True,{}
i3/i3,https://github.com/i3/i3,4943,2022-04-08T02:18:34Z,2022-04-08T04:44:20Z,2022-04-08T04:54:48Z,CLOSED,False,3,1,2,https://github.com/berbiche,"Float WM_WINDOW_TYPE ""_KDE_NEXT_WM_WINDOW_TYPE_OVERRIDE"" for bad software",1,[],https://github.com/i3/i3/pull/4943,https://github.com/Airblader,2,https://github.com/i3/i3/pull/4943#issuecomment-1092436817,"Zoom (a very popular videoconferencing app) shows popups messages like ""X started screensharing"" etc. without using any EWMH hints, WM_TRANSIENT or ""override-redirect"" behavior.
The only distinguishing property set on Zoom's popup windows is _NET_WM_WINDOW_TYPE with a proprietary _KDE_NET_WM_WINDOW_TYPE_OVERRIDE set.
Without this patch, Zoom popups show up as regular windows.
These windows can be incredibly overwhelming at times, opening 3 or more windows in an instant, disturbing work.
This PR resolves this issue for all people stuck with Zoom (probably a lot of school students).
The alternative to this simple patch is to use a for_window rule that matches all Zoom windows.
This reddit post has additional context: https://old.reddit.com/r/i3wm/comments/mcwpur/how_do_i_make_zoom_notification_popups_floating/
edit: tested on release 4.20.1 + this patch, on NixOS 22.05.","I'm a Zoom user myself, and I very much understand the frustration with Zoom, in particular with recent 4.10 updates which made the situation even worse.
However, i3 is not here to fix broken closed source clients. The fact that Zoom offers no useful information on its windows is something Zoom must address, not i3. I don't see an argument for why this atom should generally be used as a marker to float windows, and in fact the specs also state that applications must always include a fallback window type to one of the types in the spec. Zoom failing to do so is yet another one in the long list of its issues.
Please voice this, as I do, to Zoom, so that they can fix their software for all window managers to understand.",True,{'THUMBS_UP': ['https://github.com/berbiche']}
i3/i3,https://github.com/i3/i3,4943,2022-04-08T02:18:34Z,2022-04-08T04:44:20Z,2022-04-08T04:54:48Z,CLOSED,False,3,1,2,https://github.com/berbiche,"Float WM_WINDOW_TYPE ""_KDE_NEXT_WM_WINDOW_TYPE_OVERRIDE"" for bad software",1,[],https://github.com/i3/i3/pull/4943,https://github.com/berbiche,3,https://github.com/i3/i3/pull/4943#issuecomment-1092440795,"Zoom (a very popular videoconferencing app) shows popups messages like ""X started screensharing"" etc. without using any EWMH hints, WM_TRANSIENT or ""override-redirect"" behavior.
The only distinguishing property set on Zoom's popup windows is _NET_WM_WINDOW_TYPE with a proprietary _KDE_NET_WM_WINDOW_TYPE_OVERRIDE set.
Without this patch, Zoom popups show up as regular windows.
These windows can be incredibly overwhelming at times, opening 3 or more windows in an instant, disturbing work.
This PR resolves this issue for all people stuck with Zoom (probably a lot of school students).
The alternative to this simple patch is to use a for_window rule that matches all Zoom windows.
This reddit post has additional context: https://old.reddit.com/r/i3wm/comments/mcwpur/how_do_i_make_zoom_notification_popups_floating/
edit: tested on release 4.20.1 + this patch, on NixOS 22.05.","Thanks for the fast response.
I'll voice my concerns to Zoom and keep this patch locally until they fix their stuff.",True,{}
i3/i3,https://github.com/i3/i3,4955,2022-04-22T13:50:10Z,,2022-05-12T10:33:54Z,OPEN,False,463,323,10,https://github.com/cmprmsd,1412 bspwm resize,4,[],https://github.com/i3/i3/pull/4955,https://github.com/cmprmsd,1,https://github.com/i3/i3/pull/4955,"Trying to rebase and fix @xzfc pull request #3545
original message:
bspwm-like tiling resize


Two-axis tiling resize.  You can drag a 24-pixel window corner (purple) to perform a two-axis resize. Also, you can press Mod and drag a large corner inside the window (one-third of the window size).



Live resize: the tree is rendered during the resize process.


You can still press ESC to cancel resizing and revert to the old state.


Introduced the concept of the minimum container size.  E.g. the minimum width of leaf con with 10px borders is 21px (left border + right border + at least 1px for the window itself).  The minimum size is defined recursively, e.g. the minimum height of the vsplit is the sum of minimum sizes of its children.  The reason for this change: the live resize made it very easy to shrink containers as small as possible, so some restraints are required.


Misc update: ignore the drag if i3 can't perform the resize.  Suppose the user tries to resize the rightmost window to the right using Mod+RMB drag.  Obliviously, i3 can't do this.  Before this PR, the drag has been propagated to the application (some apps would show a context menu).  After this PR, the drag would be ignored at all (and the cursor would be shown as ✕).  The reasoning behind this change: the user explicitly indicated their desire to resize the window by pressing the Mod key, and probably just miss clicked to the wrong part of the window. Done in 93e96f4.


Bugfix in tiling_resize(): you can now resize the window with pixel border by dragging the top border.","Trying to rebase and fix @xzfc pull request #3545
original message:
bspwm-like tiling resize


Two-axis tiling resize.  You can drag a 24-pixel window corner (purple) to perform a two-axis resize. Also, you can press Mod and drag a large corner inside the window (one-third of the window size).



Live resize: the tree is rendered during the resize process.


You can still press ESC to cancel resizing and revert to the old state.


Introduced the concept of the minimum container size.  E.g. the minimum width of leaf con with 10px borders is 21px (left border + right border + at least 1px for the window itself).  The minimum size is defined recursively, e.g. the minimum height of the vsplit is the sum of minimum sizes of its children.  The reason for this change: the live resize made it very easy to shrink containers as small as possible, so some restraints are required.


Misc update: ignore the drag if i3 can't perform the resize.  Suppose the user tries to resize the rightmost window to the right using Mod+RMB drag.  Obliviously, i3 can't do this.  Before this PR, the drag has been propagated to the application (some apps would show a context menu).  After this PR, the drag would be ignored at all (and the cursor would be shown as ✕).  The reasoning behind this change: the user explicitly indicated their desire to resize the window by pressing the Mod key, and probably just miss clicked to the wrong part of the window. Done in 93e96f4.


Bugfix in tiling_resize(): you can now resize the window with pixel border by dragging the top border.",True,{}
i3/i3,https://github.com/i3/i3,4955,2022-04-22T13:50:10Z,,2022-05-12T10:33:54Z,OPEN,False,463,323,10,https://github.com/cmprmsd,1412 bspwm resize,4,[],https://github.com/i3/i3/pull/4955,https://github.com/cmprmsd,2,https://github.com/i3/i3/pull/4955#issuecomment-1109091630,"Trying to rebase and fix @xzfc pull request #3545
original message:
bspwm-like tiling resize


Two-axis tiling resize.  You can drag a 24-pixel window corner (purple) to perform a two-axis resize. Also, you can press Mod and drag a large corner inside the window (one-third of the window size).



Live resize: the tree is rendered during the resize process.


You can still press ESC to cancel resizing and revert to the old state.


Introduced the concept of the minimum container size.  E.g. the minimum width of leaf con with 10px borders is 21px (left border + right border + at least 1px for the window itself).  The minimum size is defined recursively, e.g. the minimum height of the vsplit is the sum of minimum sizes of its children.  The reason for this change: the live resize made it very easy to shrink containers as small as possible, so some restraints are required.


Misc update: ignore the drag if i3 can't perform the resize.  Suppose the user tries to resize the rightmost window to the right using Mod+RMB drag.  Obliviously, i3 can't do this.  Before this PR, the drag has been propagated to the application (some apps would show a context menu).  After this PR, the drag would be ignored at all (and the cursor would be shown as ✕).  The reasoning behind this change: the user explicitly indicated their desire to resize the window by pressing the Mod key, and probably just miss clicked to the wrong part of the window. Done in 93e96f4.


Bugfix in tiling_resize(): you can now resize the window with pixel border by dragging the top border.","Thanks for your comments! I'll have to look into them. I clearly am no developer but trying my best to understand how this could work out. 😅
Contributors are welcome. I guess that'll would mean inviting some people to this fork if there is anyone willing to try. :)",True,{}
i3/i3,https://github.com/i3/i3,4989,2022-05-30T20:33:31Z,2022-06-01T07:49:05Z,2022-06-01T07:49:06Z,MERGED,True,31,31,28,https://github.com/george124816,Fix typos,1,[],https://github.com/i3/i3/pull/4989,https://github.com/george124816,1,https://github.com/i3/i3/pull/4989,,,True,{}
i3/i3,https://github.com/i3/i3,4989,2022-05-30T20:33:31Z,2022-06-01T07:49:05Z,2022-06-01T07:49:06Z,MERGED,True,31,31,28,https://github.com/george124816,Fix typos,1,[],https://github.com/i3/i3/pull/4989,https://github.com/Airblader,2,https://github.com/i3/i3/pull/4989#issuecomment-1141911599,,@stapelberg Are you aware of that CI failure?,True,{}
i3/i3,https://github.com/i3/i3,4989,2022-05-30T20:33:31Z,2022-06-01T07:49:05Z,2022-06-01T07:49:06Z,MERGED,True,31,31,28,https://github.com/george124816,Fix typos,1,[],https://github.com/i3/i3/pull/4989,https://github.com/stapelberg,3,https://github.com/i3/i3/pull/4989#issuecomment-1142350153,,"@stapelberg Are you aware of that CI failure?

Thanks for the pointer. I sent #4992 to fix the issue",True,{}
i3/i3,https://github.com/i3/i3,4989,2022-05-30T20:33:31Z,2022-06-01T07:49:05Z,2022-06-01T07:49:06Z,MERGED,True,31,31,28,https://github.com/george124816,Fix typos,1,[],https://github.com/i3/i3/pull/4989,https://github.com/Airblader,4,https://github.com/i3/i3/pull/4989#issuecomment-1142356314,,@george124816 Do you mind rebasing your branch to update it and fix the CI? Thank you!,True,{}
i3/i3,https://github.com/i3/i3,4989,2022-05-30T20:33:31Z,2022-06-01T07:49:05Z,2022-06-01T07:49:06Z,MERGED,True,31,31,28,https://github.com/george124816,Fix typos,1,[],https://github.com/i3/i3/pull/4989,https://github.com/Airblader,5,https://github.com/i3/i3/pull/4989#issuecomment-1142375309,,You actually merged into your branch instead of rebasing. This would leave the history messy. Can you please rebase it so that only your commit is contained in the branch?,True,{'THUMBS_UP': ['https://github.com/george124816']}
i3/i3,https://github.com/i3/i3,4989,2022-05-30T20:33:31Z,2022-06-01T07:49:05Z,2022-06-01T07:49:06Z,MERGED,True,31,31,28,https://github.com/george124816,Fix typos,1,[],https://github.com/i3/i3/pull/4989,https://github.com/george124816,6,https://github.com/i3/i3/pull/4989#issuecomment-1142393121,,@Airblader done,True,{}
i3/i3,https://github.com/i3/i3,4992,2022-05-31T16:25:49Z,2022-05-31T16:29:37Z,2022-05-31T18:53:57Z,MERGED,True,20,0,4,https://github.com/stapelberg,GitHub Actions: declare /usr/src/i3 as safe directory,1,[],https://github.com/i3/i3/pull/4992,https://github.com/stapelberg,1,https://github.com/i3/i3/pull/4992,,,True,{}
